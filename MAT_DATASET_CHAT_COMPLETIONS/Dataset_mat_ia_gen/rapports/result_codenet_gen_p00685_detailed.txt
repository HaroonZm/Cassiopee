================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Solution complète en Python pour le problème décrit.

from sys import stdin
from itertools import combinations, permutations
from collections import deque

def neighbors(pos, rel):
    # Calcule la position cible en ajoutant le vecteur rel à pos
    x, y = pos
    dx, dy = rel
    return (x + dx, y + dy)

def in_board(pos):
    # Vérifie que la position est dans les limites du plateau 4x4
    x, y = pos
    return 0 <= x < 4 and 0 <= y < 4

def position_to_index(pos):
    # Convertit une position (x, y) en un index 0..15 (ligne-major)
    x, y = pos
    return y * 4 + x

def index_to_position(idx):
    # Convertit un index 0..15 en une position (x, y) (ligne-major)
    y = idx // 4
    x = idx % 4
    return (x, y)

def generate_all_pairs():
    # Génère toutes les paires de positions distinctes possibles sur le board 4x4
    all_pos = [(x,y) for y in range(4) for x in range(4)]
    return list(combinations(all_pos, 2))

def canonical_pattern(pairs):
    # Le pattern canonique est la représentation du motif
    # les positions sont fixes, mais on peut permuter les paires
    # On trie les paires pour obtenir une forme canonique
    # Chaque paire est exprimée en index présents en ordre croissant
    pairs_sorted = [tuple(sorted(p)) for p in pairs]
    pairs_sorted.sort()
    return tuple(pairs_sorted)

def remove_pair(pairs, pair_to_remove):
    # Supprime une paire précisée de la liste de paires
    return [p for p in pairs if p != pair_to_remove]

def generate_parings(pos_set, relative_positions):
    # Essaie de produire un appariement valide de toutes les positions du set pos_set
    # avec la contrainte que chaque paire est disjoint et correspond à un des relatifs donnés
    
    # pos_set: set de positions (x,y)
    # relative_positions: liste de 4 tuples (dx, dy)
    
    pos_list = list(pos_set)
    n = len(pos_list)
    # On va rechercher un appariement parfait de paires (matchings)
    
    # Construire un graphe où les sommets sont les positions,
    # une arête représente que deux positions peuvent être formées en paire 
    # selon l'une des positions relatives autorisées
    adj = {p: [] for p in pos_list}
    pos_set = set(pos_list)
    
    for p in pos_list:
        for rel in relative_positions:
            q = neighbors(p, rel)
            # Check q dans pos_set et p<q pour éviter doublons, et que q est valide
            if q in pos_set:
                # Ajouter les deux positions dans une arête ordonnée
                # ordonner par indice pour uniformité
                p_idx = position_to_index(p)
                q_idx = position_to_index(q)
                if p_idx < q_idx:
                    adj[p].append(q)
                else:
                    adj[q].append(p)
    
    # Trouver toutes les appariements parfaits dans ce petit graphe
    # méthode classique backtracking car juste 16 sommets
    used = set()
    pairs = []
    results = []
    
    def backtrack():
        if len(used) == n:
            # On a un appariement parfait, on stocke le pattern canonique
            patterns_pairs = [(position_to_index(p), position_to_index(q)) for (p,q) in pairs]
            patterns_pairs = [tuple(sorted(pair)) for pair in patterns_pairs]
            patterns_pairs.sort()
            results.append(tuple(patterns_pairs))
            return
        # trouver le premier sommet libre
        for p in pos_list:
            if p not in used:
                break
        else:
            return
        for q in adj[p]:
            if q not in used:
                # former une paire p,q
                used.add(p)
                used.add(q)
                pairs.append((p, q))
                backtrack()
                pairs.pop()
                used.remove(p)
                used.remove(q)
    backtrack()
    # éliminer doublons
    results_unique = set(results)
    return results_unique

def main():
    while True:
        line = stdin.readline()
        if not line:
            break
        parts = line.strip().split()
        if len(parts) == 1:
            # fin d'entrée si ce nombre > 4
            x = int(parts[0])
            if x > 4:
                break
            else:
                # invalide (pas dans l'énoncé)
                continue
        # lire 8 entiers = 4 positions relatives
        if len(parts) != 8:
            # invalide ou fin
            break
        relative_positions = []
        for i in range(0, 8, 2):
            dx = int(parts[i])
            dy = int(parts[i+1])
            relative_positions.append((dx, dy))
        
        # On doit compter le nombre de arrangements correspondants par pairs distincts
        # et en comptant les permutations de paires comme un seul motif.
        # On parcourt les appariements parfaits du board 4x4 (16 positions) en paires
        # dans lesquels chaque paire est conforme à un des relative_positions.
        
        # Générer toutes configurations adéquates (patterns)
        # C'est exactement les appariements parfaits du graphe construit avec ces edges.
        
        all_pos = [(x,y) for y in range(4) for x in range(4)]
        pos_set = set(all_pos)
        
        valid_patterns = generate_parings(pos_set, relative_positions)

        # Chaque pattern dans valid_patterns est une combinaison d'appariement 
        # représentée par 8 paires (indices).
        
        # Il faut gérer la double comptabilisation des motifs équivalents par échange des symboles
        # "patterns équivalents" si on permute les paires, mais notre pattern est déjà trié
        # donc on a déjà canonisé.
        
        # Maintenant, il faut éliminer ceux qui sont équivalents par échanges de paires.
        # On normalise nos patterns en triant les paires donc ça élimine l'ordre des paires,
        # mais ça ne gère pas encore l'équivalence par échange de symboles (pairs labels).
        
        # Deux patterns sont équivalents si on peut permuter les paires.
        # mais dans notre canonisation, on a déjà trié les paires (ils sont en ordre),
        # du coup, chaque pattern représente une classe d'isomorphie unique.
        # Pour plus de sûreté, on doit considérer les permutations des paires :
        # Mais si on trie les paires, la forme canonique unique est la représentation.
        # Donc valid_patterns est déjà l'ensemble des patterns uniques.
        
        # On affiche donc simplement le nombre de ces patterns.
        # NB: Le problème de compter les arrangements en distinguant les labels des paires
        # est "résolu" en prenant l'ensemble des appariements parfaits sans distinction de paires.
        # Parce que le problème dit qu'on compte comme identiques ceux qui diffèrent par permutation des appariements,
        # ce que trie + tuple canonical_pattern fait déjà.
        
        print(len(valid_patterns))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Solution' (ID: 20858)
  → Token d'amorce (pas de prédiction)

Token 2: ' complète' (ID: 75660)
  → Token d'amorce (pas de prédiction)

Token 3: ' en' (ID: 469)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3495737612247467
    2. '```' → logprob: -1.4745737314224243
    3. ' :' → logprob: -3.849573850631714
    4. '\n' → logprob: -4.099573612213135
    5. '#' → logprob: -4.099573612213135
    6. 'def' → logprob: -6.099573612213135
    7. '\' → logprob: -6.599573612213135
    8. '``' → logprob: -6.599573612213135
    9. '
' → logprob: -6.849573612213135
    10. '

' → logprob: -6.849573612213135

Token 4: ' Python' (ID: 26534)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.47352707386016846
    2. 'Python' → logprob: -1.0985270738601685
    3. ' Python' → logprob: -3.723526954650879
    4. 'fr' → logprob: -4.473526954650879
    5. '```' → logprob: -5.348526954650879
    6. ' python' → logprob: -6.098526954650879
    7. ' français' → logprob: -7.348526954650879
    8. '#' → logprob: -8.723526954650879
    9. 'py' → logprob: -9.348526954650879
    10. 'French' → logprob: -9.973526954650879

Token 5: ' pour' (ID: 1930)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5454105734825134
    2. ':' → logprob: -1.0454106330871582
    3. '\n' → logprob: -3.795410633087158
    4. 'def' → logprob: -4.295410633087158
    5. '\' → logprob: -4.420410633087158
    6. '#' → logprob: -5.295410633087158
    7. ' :' → logprob: -5.420410633087158
    8. '``' → logprob: -5.420410633087158
    9. '
' → logprob: -6.170410633087158
    10. ':def' → logprob: -6.795410633087158

Token 6: ' le' (ID: 505)
  Prédit: ' écrire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' écrire' → logprob: -1.8639310598373413
    2. ' résoudre' → logprob: -1.9889310598373413
    3. ' créer' → logprob: -2.113931179046631
    4. ' la' → logprob: -2.238931179046631
    5. ' analyser' → logprob: -2.488931179046631
    6. ' traiter' → logprob: -2.613931179046631
    7. ' l' → logprob: -2.738931179046631
    8. ' continuer' → logprob: -3.488931179046631
    9. ' calcul' → logprob: -3.613931179046631
    10. ' gérer' → logprob: -3.738931179046631

Token 7: ' problème' (ID: 35630)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4585486650466919
    2. ' tri' → logprob: -1.708548665046692
    3. ' problème' → logprob: -3.4585485458374023
    4. 'pro' → logprob: -3.7085485458374023
    5. ' calcul' → logprob: -3.7085485458374023
    6. 'tri' → logprob: -3.7085485458374023
    7. ' #' → logprob: -4.083548545837402
    8. ' traitement' → logprob: -4.333548545837402
    9. '```' → logprob: -4.708548545837402
    10. 'calcul' → logprob: -5.083548545837402

Token 8: ' décrit' (ID: 169431)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32299864292144775
    2. ' :' → logprob: -1.4479986429214478
    3. '```' → logprob: -3.947998523712158
    4. '\' → logprob: -4.947998523712158
    5. '#' → logprob: -5.072998523712158
    6. ' ' → logprob: -6.072998523712158
    7. '\n' → logprob: -6.697998523712158
    8. 's' → logprob: -7.197998523712158
    9. '"""' → logprob: -7.947998523712158
    10. '.' → logprob: -7.947998523712158

Token 9: '.

' (ID: 364)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21978093683719635
    2. '```' → logprob: -2.344780921936035
    3. '#' → logprob: -3.094780921936035
    4. ' :' → logprob: -3.719780921936035
    5. 'def' → logprob: -3.719780921936035
    6. '\' → logprob: -6.344780921936035
    7. 's' → logprob: -6.844780921936035
    8. '.' → logprob: -6.969780921936035
    9. '"""' → logprob: -7.344780921936035
    10. '``' → logprob: -7.719780921936035

Token 10: 'from' (ID: 2845)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.18159641325473785
    2. ':' → logprob: -2.556596517562866
    3. 'def' → logprob: -2.556596517562866
    4. '#' → logprob: -5.181596279144287
    5. '\' → logprob: -6.431596279144287
    6. '``' → logprob: -6.931596279144287
    7. 'import' → logprob: -7.056596279144287
    8. '\n' → logprob: -8.181596755981445
    9. ' :' → logprob: -8.556596755981445
    10. ' ```' → logprob: -8.681596755981445

Token 11: ' sys' (ID: 12228)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.64204341173172
    2. ' math' → logprob: -1.1420433521270752
    3. 'collections' → logprob: -3.017043352127075
    4. ' flask' → logprob: -3.142043352127075
    5. ' sklearn' → logprob: -3.642043352127075
    6. ' typing' → logprob: -3.767043352127075
    7. ' numpy' → logprob: -5.392043590545654
    8. ' sys' → logprob: -5.892043590545654
    9. ' itertools' → logprob: -5.892043590545654
    10. ' datetime' → logprob: -7.267043590545654

Token 12: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.004628653638064861
    2. 'import' → logprob: -5.379628658294678
    3. '	import' → logprob: -12.62962818145752
    4. ' im' → logprob: -13.12962818145752
    5. ' ' → logprob: -13.62962818145752
    6. ' importar' → logprob: -14.75462818145752
    7. '```' → logprob: -15.75462818145752
    8. ' imports' → logprob: -15.87962818145752
    9. '<|end|>' → logprob: -16.004629135131836
    10. '_import' → logprob: -16.004629135131836

Token 13: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.2525586187839508
    2. ' stdin' → logprob: -1.5025585889816284
    3. 'argv' → logprob: -8.377558708190918
    4. 'stdout' → logprob: -8.502558708190918
    5. '.stdin' → logprob: -10.002558708190918
    6. 'exit' → logprob: -10.127558708190918
    7. 'import' → logprob: -10.377558708190918
    8. 'stderr' → logprob: -10.502558708190918
    9. ' argv' → logprob: -10.877558708190918
    10. ' exit' → logprob: -11.377558708190918

Token 14: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.29974251985549927
    2. '
' → logprob: -1.4247424602508545
    3. 'import' → logprob: -5.049742698669434
    4. 'for' → logprob: -5.549742698669434
    5. '\n' → logprob: -5.924742698669434
    6. '```' → logprob: -6.924742698669434
    7. '.' → logprob: -7.424742698669434
    8. '' → logprob: -7.549742698669434
    9. '<|end|>' → logprob: -7.674742698669434
    10. ' for' → logprob: -7.674742698669434

Token 15: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.33901605010032654
    2. '
' → logprob: -1.464016079902649
    3. 'import' → logprob: -3.4640159606933594
    4. 'for' → logprob: -3.9640159606933594
    5. '\n' → logprob: -6.714015960693359
    6. '```' → logprob: -6.714015960693359
    7. ' for' → logprob: -7.214015960693359
    8. 'input' → logprob: -7.464015960693359
    9. ' 

' → logprob: -7.964015960693359
    10. '
' → logprob: -8.08901596069336

Token 16: ' itertools' (ID: 103178)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.6039584875106812
    2. ' math' → logprob: -1.3539584875106812
    3. ' itertools' → logprob: -1.8539584875106812
    4. 'collections' → logprob: -4.103958606719971
    5. ' os' → logprob: -4.853958606719971
    6. ' typing' → logprob: -5.103958606719971
    7. ' sys' → logprob: -5.603958606719971
    8. ' stdout' → logprob: -6.728958606719971
    9. 'math' → logprob: -7.103958606719971
    10. ' functools' → logprob: -7.228958606719971

Token 17: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.026423608884215355
    2. 'import' → logprob: -3.651423692703247
    3. '	import' → logprob: -9.526423454284668
    4. 'ertools' → logprob: -11.651423454284668
    5. ' im' → logprob: -12.026423454284668
    6. ' itertools' → logprob: -12.151423454284668
    7. '.im' → logprob: -12.401423454284668
    8. '_import' → logprob: -12.401423454284668
    9. '<|end|>' → logprob: -12.901423454284668
    10. '.groupby' → logprob: -13.026423454284668

Token 18: ' combinations' (ID: 43835)
  Prédit: ' permutations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.31841662526130676
    2. ' combinations' → logprob: -2.0684165954589844
    3. 'com' → logprob: -2.9434165954589844
    4. 'product' → logprob: -3.0684165954589844
    5. ' product' → logprob: -4.193416595458984
    6. 'per' → logprob: -4.568416595458984
    7. ' group' → logprob: -5.818416595458984
    8. 'import' → logprob: -6.068416595458984
    9. 'count' → logprob: -6.068416595458984
    10. 'group' → logprob: -6.068416595458984

Token 19: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.0747208520770073
    2. '
' → logprob: -2.949720859527588
    3. 'import' → logprob: -5.074720859527588
    4. ' 

' → logprob: -5.574720859527588
    5. '\n' → logprob: -5.574720859527588
    6. '


' → logprob: -6.449720859527588
    7. '```' → logprob: -7.199720859527588
    8. 'from' → logprob: -7.449720859527588
    9. '  

' → logprob: -7.449720859527588
    10. '#' → logprob: -8.32472038269043

Token 20: ' permutations' (ID: 174595)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.9995566010475159
    2. ' chain' → logprob: -1.249556541442871
    3. 'com' → logprob: -1.374556541442871
    4. 'product' → logprob: -3.499556541442871
    5. ' permutations' → logprob: -3.749556541442871
    6. 'per' → logprob: -3.874556541442871
    7. ' product' → logprob: -4.999556541442871
    8. ' accumulate' → logprob: -5.874556541442871
    9. 'acc' → logprob: -6.124556541442871
    10. 'count' → logprob: -6.249556541442871

Token 21: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.2254716157913208
    2. '
' → logprob: -1.7254716157913208
    3. 'import' → logprob: -4.600471496582031
    4. ' 

' → logprob: -5.350471496582031
    5. '```' → logprob: -5.350471496582031
    6. '<|end|>' → logprob: -6.850471496582031
    7. '


' → logprob: -7.475471496582031
    8. '#' → logprob: -7.475471496582031
    9. 'from' → logprob: -7.850471496582031
    10. '\n' → logprob: -7.975471496582031

Token 22: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.176128551363945
    2. '
' → logprob: -2.301128625869751
    3. 'import' → logprob: -3.551128625869751
    4. '<|end|>' → logprob: -4.301128387451172
    5. '```' → logprob: -5.176128387451172
    6. ' 

' → logprob: -5.676128387451172
    7. '<|end|>' → logprob: -5.926128387451172
    8. 'from' → logprob: -6.176128387451172
    9. '#' → logprob: -6.176128387451172
    10. '


' → logprob: -7.426128387451172

Token 23: ' collections' (ID: 22690)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.12400095164775848
    2. ' collections' → logprob: -2.2490010261535645
    3. 'math' → logprob: -4.8740010261535645
    4. 'collections' → logprob: -5.9990010261535645
    5. ' functools' → logprob: -7.7490010261535645
    6. ' operator' → logprob: -8.499000549316406
    7. ' copy' → logprob: -8.999000549316406
    8. ' sys' → logprob: -9.374000549316406
    9. ' typing' → logprob: -9.999000549316406
    10. '_math' → logprob: -10.499000549316406

Token 24: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3015146553516388
    2. ' import' → logprob: -1.6765146255493164
    3. 'abc' → logprob: -2.6765146255493164
    4. 'from' → logprob: -7.301514625549316
    5. 'ertools' → logprob: -7.426514625549316
    6. 'ations' → logprob: -7.676514625549316
    7. 'odule' → logprob: -8.176514625549316
    8. 'a' → logprob: -8.301514625549316
    9. 'ation' → logprob: -8.551514625549316
    10. 'port' → logprob: -8.551514625549316

Token 25: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.010193156078457832
    2. ' deque' → logprob: -4.885193347930908
    3. ' Counter' → logprob: -6.510193347930908
    4. 'deque' → logprob: -7.135193347930908
    5. 'default' → logprob: -8.38519287109375
    6. 'Counter' → logprob: -9.63519287109375
    7. ' named' → logprob: -12.88519287109375
    8. '```' → logprob: -14.26019287109375
    9. 'named' → logprob: -14.51019287109375
    10. '.Counter' → logprob: -14.76019287109375

Token 26: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.336893230676651
    2. '
' → logprob: -1.5868932008743286
    3. 'import' → logprob: -2.836893320083618
    4. ' 

' → logprob: -5.086893081665039
    5. '```' → logprob: -5.336893081665039
    6. '#' → logprob: -5.336893081665039
    7. '<|end|>' → logprob: -5.586893081665039
    8. '


' → logprob: -7.336893081665039
    9. '\n' → logprob: -7.961893081665039
    10. ',' → logprob: -7.961893081665039

Token 27: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3061424493789673
    2. 'def' → logprob: -1.5561424493789673
    3. 'import' → logprob: -1.5561424493789673
    4. 'class' → logprob: -1.8061424493789673
    5. 'd' → logprob: -2.6811423301696777
    6. '
' → logprob: -3.1811423301696777
    7. '

' → logprob: -4.306142330169678
    8. 'n' → logprob: -5.056142330169678
    9. '\' → logprob: -5.431142330169678
    10. '```' → logprob: -5.931142330169678

Token 28: ' neighbors' (ID: 31655)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.3674744665622711
    2. ' solution' → logprob: -2.2424745559692383
    3. ' main' → logprob: -2.3674745559692383
    4. ' solver' → logprob: -2.9924745559692383
    5. ' ' → logprob: -3.9924745559692383
    6. ' calculate' → logprob: -4.492474555969238
    7. ' max' → logprob: -5.742474555969238
    8. ' bfs' → logprob: -5.867474555969238
    9. ' process' → logprob: -5.992474555969238
    10. ' ' → logprob: -6.242474555969238

Token 29: '(pos' (ID: 24566)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00041065402911044657
    2. '(node' → logprob: -8.375411033630371
    3. '(x' → logprob: -9.875411033630371
    4. ' (' → logprob: -10.625411033630371
    5. '(n' → logprob: -10.875411033630371
    6. '(a' → logprob: -11.125411033630371
    7. '(s' → logprob: -11.375411033630371
    8. '_' → logprob: -11.375411033630371
    9. '(cell' → logprob: -12.250411033630371
    10. '(i' → logprob: -12.375411033630371

Token 30: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001101756701245904
    2. ')' → logprob: -7.001101970672607
    3. '):
' → logprob: -9.12610149383545
    4. ',' → logprob: -9.87610149383545
    5. '):
' → logprob: -11.87610149383545
    6. ' ):' → logprob: -12.00110149383545
    7. '):

' → logprob: -12.87610149383545
    8. 'ation' → logprob: -13.00110149383545
    9. ':' → logprob: -13.50110149383545
    10. 'ector' → logprob: -13.62610149383545

Token 31: ' rel' (ID: 1536)
  Prédit: ' grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.24568703770637512
    2. ' n' → logprob: -2.3706870079040527
    3. 'grid' → logprob: -3.4956870079040527
    4. 'n' → logprob: -3.6206870079040527
    5. ' max' → logprob: -3.7456870079040527
    6. ' N' → logprob: -4.745687007904053
    7. ' graph' → logprob: -4.870687007904053
    8. 'max' → logprob: -5.370687007904053
    9. ' board' → logprob: -5.495687007904053
    10. 'N' → logprob: -5.745687007904053

Token 32: '):
' (ID: 1883)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.9048674702644348
    2. '_positions' → logprob: -1.77986741065979
    3. 'ations' → logprob: -2.27986741065979
    4. 'ative' → logprob: -2.40486741065979
    5. 'pos' → logprob: -2.77986741065979
    6. 'atives' → logprob: -2.90486741065979
    7. 'positions' → logprob: -3.40486741065979
    8. 'atifs' → logprob: -3.52986741065979
    9. ')' → logprob: -4.279867649078369
    10. '_coords' → logprob: -5.029867649078369

Token 33: '   ' (ID: 271)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07241503149271011
    2. ':' → logprob: -2.6974151134490967
    3. ',' → logprob: -7.197414875030518
    4. ')' → logprob: -7.572414875030518
    5. ' :' → logprob: -7.822414875030518
    6. ']:' → logprob: -8.572415351867676
    7. '):
' → logprob: -8.697415351867676
    8. '   ' → logprob: -8.822415351867676
    9. '[' → logprob: -9.572415351867676
    10. '=' → logprob: -9.697415351867676

Token 34: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2350461632013321
    2. ':' → logprob: -1.735046148300171
    3. '    ' → logprob: -4.73504638671875
    4. ' return' → logprob: -4.73504638671875
    5. ' :' → logprob: -5.48504638671875
    6. '       ' → logprob: -6.11004638671875
    7. 'return' → logprob: -6.23504638671875
    8. ',' → logprob: -6.61004638671875
    9. ' =' → logprob: -7.11004638671875
    10. ':
' → logprob: -7.61004638671875

Token 35: ' Cal' (ID: 4453)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4913436770439148
    2. ' return' → logprob: -1.9913437366485596
    3. ' yield' → logprob: -2.6163437366485596
    4. ' x' → logprob: -2.7413437366485596
    5. ' for' → logprob: -3.8663437366485596
    6. 'x' → logprob: -4.6163434982299805
    7. 'return' → logprob: -4.7413434982299805
    8. '    ' → logprob: -4.8663434982299805
    9. ' neighbors' → logprob: -4.8663434982299805
    10. ' y' → logprob: -5.2413434982299805

Token 36: 'cule' (ID: 45017)
  Prédit: 'cul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.0724148079752922
    2. 'cule' → logprob: -3.0724148750305176
    3. 'c' → logprob: -4.572414875030518
    4. 'culate' → logprob: -4.822414875030518
    5. 'cules' → logprob: -5.947414875030518
    6. 'cular' → logprob: -7.197414875030518
    7. 'culator' → logprob: -7.447414875030518
    8. 'culated' → logprob: -7.447414875030518
    9. 'cula' → logprob: -9.32241439819336
    10. 'culation' → logprob: -9.32241439819336

Token 37: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9477459788322449
    2. 'cule' → logprob: -2.1977460384368896
    3. 'culate' → logprob: -2.6977460384368896
    4. '(' → logprob: -2.6977460384368896
    5. 'ate' → logprob: -3.0727460384368896
    6. ')' → logprob: -3.3227460384368896
    7. ' (' → logprob: -3.5727460384368896
    8. '_' → logprob: -3.8227460384368896
    9. 'ule' → logprob: -3.9477460384368896
    10. '[' → logprob: -3.9477460384368896

Token 38: ' position' (ID: 4010)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.030161762610077858
    2. ' position' → logprob: -4.5301618576049805
    3. 's' → logprob: -4.7801618576049805
    4. 'liste' → logprob: -5.2801618576049805
    5. '   ' → logprob: -6.6551618576049805
    6. ' list' → logprob: -7.2801618576049805
    7. ' nouvelle' → logprob: -7.4051618576049805
    8. ' prochaine' → logprob: -7.5301618576049805
    9. 'position' → logprob: -7.7801618576049805
    10. ' positions' → logprob: -7.9051618576049805

Token 39: ' cible' (ID: 136857)
  Prédit: ' suivante'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' suivante' → logprob: -0.4089788794517517
    2. '+' → logprob: -2.7839789390563965
    3. ')' → logprob: -3.1589789390563965
    4. ' ' → logprob: -3.4089789390563965
    5. 's' → logprob: -3.5339789390563965
    6. '(' → logprob: -3.6589789390563965
    7. ' )' → logprob: -3.6589789390563965
    8. ' +' → logprob: -4.4089789390563965
    9. ' adj' → logprob: -4.7839789390563965
    10. '_' → logprob: -4.7839789390563965

Token 40: ' en' (ID: 469)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3624870479106903
    2. '+' → logprob: -2.3624870777130127
    3. ',' → logprob: -2.4874870777130127
    4. ')' → logprob: -3.3624870777130127
    5. '[' → logprob: -3.6124870777130127
    6. ' +' → logprob: -4.737486839294434
    7. '   ' → logprob: -4.987486839294434
    8. ' =' → logprob: -5.112486839294434
    9. '_' → logprob: -5.362486839294434
    10. ' de' → logprob: -5.362486839294434

Token 41: ' ajout' (ID: 64605)
  Prédit: ' ajout'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ajout' → logprob: -0.8299252390861511
    2. '[' → logprob: -1.579925298690796
    3. 'x' → logprob: -3.204925298690796
    4. ' ' → logprob: -3.204925298690796
    5. ' [' → logprob: -3.454925298690796
    6. '(' → logprob: -3.704925298690796
    7. '```' → logprob: -3.704925298690796
    8. 'aj' → logprob: -3.954925298690796
    9. 'rel' → logprob: -4.079925060272217
    10. '   ' → logprob: -4.079925060272217

Token 42: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0392376147210598
    2. ' ant' → logprob: -3.2892374992370605
    3. '-ant' → logprob: -8.164237976074219
    4. '_ant' → logprob: -8.789237976074219
    5. 'e' → logprob: -8.914237976074219
    6. '.ant' → logprob: -9.039237976074219
    7. '#' → logprob: -9.289237976074219
    8. 'Ant' → logprob: -9.914237976074219
    9. '   ' → logprob: -10.039237976074219
    10. '```' → logprob: -10.039237976074219

Token 43: ' le' (ID: 505)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.4396088123321533
    2. ' rel' → logprob: -1.6896088123321533
    3. ' la' → logprob: -2.4396088123321533
    4. ' (' → logprob: -3.6896088123321533
    5. '(pos' → logprob: -4.189608573913574
    6. ' les' → logprob: -4.564608573913574
    7. 'pos' → logprob: -4.814608573913574
    8. ' ' → logprob: -4.814608573913574
    9. ' tuple' → logprob: -5.564608573913574
    10. ' le' → logprob: -5.814608573913574

Token 44: ' vect' (ID: 106052)
  Prédit: ' rel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rel' → logprob: -0.5940422415733337
    2. ' vect' → logprob: -1.0940423011779785
    3. 'rel' → logprob: -3.2190423011779785
    4. ' pos' → logprob: -4.7190423011779785
    5. ' vector' → logprob: -4.8440423011779785
    6. 'i' → logprob: -4.9690423011779785
    7. ' dx' → logprob: -5.0940423011779785
    8. ' déplacement' → logprob: -5.2190423011779785
    9. ' tuple' → logprob: -5.5940423011779785
    10. ' i' → logprob: -5.7190423011779785

Token 45: 'eur' (ID: 8671)
  Prédit: 'eur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eur' → logprob: -0.0013788063079118729
    2. 'ect' → logprob: -7.251379013061523
    3. 'e' → logprob: -8.126379013061523
    4. 'eu' → logprob: -9.751379013061523
    5. 'ector' → logprob: -9.751379013061523
    6. '[' → logprob: -9.876379013061523
    7. 'eurs' → logprob: -10.126379013061523
    8. ' eur' → logprob: -10.126379013061523
    9. 'ec' → logprob: -10.626379013061523
    10. '```' → logprob: -11.251379013061523

Token 46: ' rel' (ID: 1536)
  Prédit: ' rel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rel' → logprob: -0.031248925253748894
    2. 'rel' → logprob: -4.281249046325684
    3. ' relatif' → logprob: -5.031249046325684
    4. ' ' → logprob: -6.031249046325684
    5. ' de' → logprob: -6.156249046325684
    6. ' relative' → logprob: -6.531249046325684
    7. ' relat' → logprob: -6.656249046325684
    8. '_rel' → logprob: -7.156249046325684
    9. ' déplacement' → logprob: -8.156249046325684
    10. ' rela' → logprob: -8.531249046325684

Token 47: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34634318947792053
    2. ' à' → logprob: -1.4713431596755981
    3. ' ' → logprob: -4.596343040466309
    4. 'def' → logprob: -4.596343040466309
    5. ' =' → logprob: -4.971343040466309
    6. '(' → logprob: -4.971343040466309
    7. '(pos' → logprob: -5.096343040466309
    8. '[' → logprob: -5.221343040466309
    9. ' (' → logprob: -5.471343040466309
    10. ',' → logprob: -5.846343040466309

Token 48: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6343297362327576
    2. ' pos' → logprob: -0.7593297362327576
    3. ' la' → logprob: -6.509329795837402
    4. 'la' → logprob: -9.759329795837402
    5. 'position' → logprob: -10.259329795837402
    6. '	pos' → logprob: -10.509329795837402
    7. ' ' → logprob: -10.634329795837402
    8. ' position' → logprob: -11.009329795837402
    9. '(pos' → logprob: -11.134329795837402
    10. '_pos' → logprob: -11.509329795837402

Token 49: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25460296869277954
    2. ':' → logprob: -1.7546029090881348
    3. '):' → logprob: -3.7546029090881348
    4. 'def' → logprob: -4.504602909088135
    5. ' :' → logprob: -5.379602909088135
    6. '[' → logprob: -5.754602909088135
    7. ' =' → logprob: -6.379602909088135
    8. ' return' → logprob: -6.504602909088135
    9. ',' → logprob: -6.754602909088135
    10. ')' → logprob: -6.879602909088135

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2747267484664917
    2. ':' → logprob: -1.5247267484664917
    3. ' :' → logprob: -4.649726867675781
    4. '):' → logprob: -5.024726867675781
    5. ' return' → logprob: -6.399726867675781
    6. ':return' → logprob: -7.149726867675781
    7. ',' → logprob: -7.274726867675781
    8. ')' → logprob: -7.399726867675781
    9. 'return' → logprob: -7.899726867675781
    10. 'def' → logprob: -8.024726867675781

Token 51: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5762313008308411
    2. ' return' → logprob: -1.3262312412261963
    3. 'return' → logprob: -1.8262312412261963
    4. 'x' (adapté à ' x') → logprob: -5.076231479644775
    5. ' x' → logprob: -5.451231479644775
    6. '    ' → logprob: -8.951231002807617
    7. '(x' → logprob: -9.076231002807617
    8. '    
' → logprob: -9.201231002807617
    9. ' (' → logprob: -9.201231002807617
    10. '       ' → logprob: -9.576231002807617

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037613706663250923
    2. ' ,' → logprob: -5.878761291503906
    3. '+' → logprob: -7.878761291503906
    4. ',y' → logprob: -8.003761291503906
    5. ' +' → logprob: -9.128761291503906
    6. ',x' → logprob: -9.128761291503906
    7. '+x' → logprob: -11.878761291503906
    8. ' =' → logprob: -12.253761291503906
    9. '+,' → logprob: -13.378761291503906
    10. '=' → logprob: -13.378761291503906

Token 53: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5759410858154297
    2. ' y' → logprob: -0.8259410858154297
    3. '	y' → logprob: -13.95094108581543
    4. '<|end|>' → logprob: -14.57594108581543
    5. ' ' → logprob: -16.07594108581543
    6. ',y' → logprob: -17.32594108581543
    7. '<|end|>' → logprob: -17.95094108581543
    8. '_y' → logprob: -18.07594108581543
    9. ' ' → logprob: -18.07594108581543
    10. '   ' → logprob: -18.32594108581543

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004149391781538725
    2. '=' → logprob: -5.504149436950684
    3. ',' → logprob: -9.629149436950684
    4. '<|end|>' → logprob: -13.129149436950684
    5. ')' → logprob: -13.254149436950684
    6. ' ' → logprob: -15.379149436950684
    7. ' =)' → logprob: -15.754149436950684
    8. ' =
' → logprob: -15.879149436950684
    9. '<|end|>' → logprob: -15.879149436950684
    10. ' +=' → logprob: -16.066648483276367

Token 55: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.009757270105183125
    2. 'pos' → logprob: -4.634757041931152
    3. '	pos' → logprob: -14.384757041931152
    4. ' x' → logprob: -15.259757041931152
    5. ' ' → logprob: -15.884757041931152
    6. 'x' → logprob: -16.25975799560547
    7. '(pos' → logprob: -16.38475799560547
    8. '_pos' → logprob: -16.75975799560547
    9. ' ' → logprob: -17.13475799560547
    10. '[pos' → logprob: -17.75975799560547

Token 56: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28725939989089966
    2. '<|end|>' → logprob: -1.9122593402862549
    3. '+' → logprob: -3.287259340286255
    4. '<|end|>' → logprob: -3.537259340286255
    5. ' +' → logprob: -4.037259578704834
    6. ' 
' → logprob: -5.287259578704834
    7. '   ' → logprob: -5.662259578704834
    8. ',' → logprob: -6.037259578704834
    9. '    
' → logprob: -6.412259578704834
    10. '  
' → logprob: -7.037259578704834

Token 57: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08470606803894043
    2. ' 
' → logprob: -3.8347060680389404
    3. '  
' → logprob: -4.2097063064575195
    4. '    
' → logprob: -4.4597063064575195
    5. '+' → logprob: -4.7097063064575195
    6. ' +' → logprob: -5.0847063064575195
    7. '<|end|>' → logprob: -5.2097063064575195
    8. ' =' → logprob: -5.4597063064575195
    9. '   ' → logprob: -5.8347063064575195
    10. '
' → logprob: -6.5847063064575195

Token 58: ' dx' (ID: 29472)
  Prédit: ' nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.8776397109031677
    2. ' dx' → logprob: -1.1276397705078125
    3. ' return' → logprob: -1.7526397705078125
    4. 'dx' (adapté à ' dx') → logprob: -3.2526397705078125
    5. 'nx' → logprob: -3.7526397705078125
    6. 'return' → logprob: -3.7526397705078125
    7. ' new' → logprob: -7.7526397705078125
    8. '   ' → logprob: -8.252639770507812
    9. ' tx' → logprob: -8.377639770507812
    10. ' x' → logprob: -9.502639770507812

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.97024549683556e-05
    2. ' ,' → logprob: -9.500080108642578
    3. ',y' → logprob: -12.750080108642578
    4. ',d' → logprob: -13.625080108642578
    5. '=' → logprob: -15.875080108642578
    6. ',n' → logprob: -16.125080108642578
    7. '‌,' → logprob: -16.625080108642578
    8. ',x' → logprob: -17.000080108642578
    9. ' =' → logprob: -17.125080108642578
    10. ',j' → logprob: -17.250080108642578

Token 60: ' dy' (ID: 11996)
  Prédit: ' dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.00861669983714819
    2. 'dy' → logprob: -4.758616924285889
    3. ' y' → logprob: -13.50861644744873
    4. 'y' → logprob: -15.25861644744873
    5. '<|end|>' → logprob: -15.75861644744873
    6. ' ddy' → logprob: -16.008617401123047
    7. ' dyd' → logprob: -16.633617401123047
    8. ' Dy' → logprob: -17.008617401123047
    9. ' ny' → logprob: -17.008617401123047
    10. 'Dy' → logprob: -17.633617401123047

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00990282278507948
    2. '=' → logprob: -4.6349029541015625
    3. '<|end|>' → logprob: -9.134902954101562
    4. ')' → logprob: -10.634902954101562
    5. ' =
' → logprob: -12.259902954101562
    6. '<|end|>' → logprob: -12.634902954101562
    7. ' ' → logprob: -12.884902954101562
    8. '   ' → logprob: -13.509902954101562
    9. ',' → logprob: -13.759902954101562
    10. ']' → logprob: -14.509902954101562

Token 62: ' rel' (ID: 1536)
  Prédit: ' rel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rel' → logprob: -0.00975679699331522
    2. 'rel' → logprob: -4.634756565093994
    3. ' relat' → logprob: -15.509757041931152
    4. '(rel' → logprob: -15.634757041931152
    5. '_rel' → logprob: -15.634757041931152
    6. ' ' → logprob: -16.259756088256836
    7. '<|end|>' → logprob: -16.509756088256836
    8. ' rela' → logprob: -16.884756088256836
    9. '.rel' → logprob: -16.884756088256836
    10. ' ' → logprob: -18.009756088256836

Token 63: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36041319370269775
    2. '<|end|>' → logprob: -1.2354131937026978
    3. '<|end|>' → logprob: -4.735413074493408
    4. ')' → logprob: -6.485413074493408
    5. '   ' → logprob: -7.110413074493408
    6. '
' → logprob: -8.360413551330566
    7. 'return' → logprob: -8.985413551330566
    8. ' return' → logprob: -9.360413551330566
    9. ' 
' → logprob: -9.860413551330566
    10. '    
' → logprob: -9.985413551330566

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007661751471459866
    2. 'return' → logprob: -5.757661819458008
    3. ' return' → logprob: -6.007661819458008
    4. '
' → logprob: -6.507661819458008
    5. '    
' → logprob: -8.257661819458008
    6. '	return' → logprob: -8.757661819458008
    7. '  
' → logprob: -10.507661819458008
    8. '<|end|>' → logprob: -11.132661819458008
    9. ')' → logprob: -11.257661819458008
    10. ' 
' → logprob: -12.007661819458008

Token 65: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.48317772150039673
    2. '   ' → logprob: -1.483177661895752
    3. 'return' (adapté à ' return') → logprob: -1.858177661895752
    4. '
' → logprob: -9.35817813873291
    5. '    
' → logprob: -9.73317813873291
    6. '```' → logprob: -9.85817813873291
    7. '	return' → logprob: -10.85817813873291
    8. ' new' → logprob: -10.98317813873291
    9. ' ' → logprob: -11.10817813873291
    10. ' 
' → logprob: -11.85817813873291

Token 66: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.03411183878779411
    2. '(x' → logprob: -3.409111738204956
    3. ' x' → logprob: -8.034111976623535
    4. 'x' → logprob: -9.034111976623535
    5. '(' → logprob: -11.034111976623535
    6. ' ' → logprob: -12.784111976623535
    7. '[x' → logprob: -12.909111976623535
    8. ' [' → logprob: -15.284111976623535
    9. ' ' → logprob: -15.409111976623535
    10. '   ' → logprob: -15.659111976623535

Token 67: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01815076172351837
    2. ' x' → logprob: -4.018150806427002
    3. '(x' → logprob: -14.643150329589844
    4. ')x' → logprob: -15.768150329589844
    5. ' ' → logprob: -16.018150329589844
    6. '	x' → logprob: -16.518150329589844
    7. '   ' → logprob: -16.643150329589844
    8. ')' → logprob: -17.518150329589844
    9. ' (' → logprob: -18.518150329589844
    10. '  ' → logprob: -18.768150329589844

Token 68: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10021066665649414
    2. '+' → logprob: -2.350210666656494
    3. ' plus' → logprob: -13.850210189819336
    4. ' +
' → logprob: -14.100210189819336
    5. ',' → logprob: -14.350210189819336
    6. '+x' → logprob: -14.350210189819336
    7. '+d' → logprob: -15.350210189819336
    8. ' ' → logprob: -15.600210189819336
    9. ' ,' → logprob: -15.850210189819336
    10. ' dx' → logprob: -15.975210189819336

Token 69: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.01815837249159813
    2. ' dx' → logprob: -4.018158435821533
    3. '1' → logprob: -12.018157958984375
    4. '_dx' → logprob: -13.643157958984375
    5. ' ' → logprob: -14.143157958984375
    6. '(dx' → logprob: -15.143157958984375
    7. ')' → logprob: -16.768157958984375
    8. '   ' → logprob: -16.768157958984375
    9. '```' → logprob: -17.143157958984375
    10. '.dx' → logprob: -17.268157958984375

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001502636878285557
    2. ' ,' → logprob: -9.125150680541992
    3. ')' → logprob: -10.125150680541992
    4. ',y' → logprob: -14.125150680541992
    5. ',
' → logprob: -15.625150680541992
    6. '),' → logprob: -15.750150680541992
    7. ' ' → logprob: -16.375150680541992
    8. ' )' → logprob: -16.500150680541992
    9. ',)' → logprob: -17.125150680541992
    10. '<|end|>' → logprob: -18.250150680541992

Token 71: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.004629838280379772
    2. 'y' → logprob: -5.379629611968994
    3. ' ' → logprob: -11.879630088806152
    4. ' ' → logprob: -13.254630088806152
    5. ')' → logprob: -14.254630088806152
    6. ' )' → logprob: -16.379629135131836
    7. '	y' → logprob: -16.879629135131836
    8. ''y' → logprob: -17.504629135131836
    9. ')y' → logprob: -17.504629135131836
    10. ' dy' → logprob: -17.754629135131836

Token 72: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020699729793705046
    2. ' )' → logprob: -9.12520694732666
    3. ',' → logprob: -9.37520694732666
    4. '),' → logprob: -11.62520694732666
    5. ')
' → logprob: -13.50020694732666
    6. ' ,' → logprob: -14.62520694732666
    7. '<|end|>' → logprob: -14.62520694732666
    8. 'y' → logprob: -15.00020694732666
    9. '))' → logprob: -15.12520694732666
    10. '+' → logprob: -15.12520694732666

Token 73: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.07890884578227997
    2. ' dy' → logprob: -2.578908920288086
    3. '1' → logprob: -11.203908920288086
    4. 'y' → logprob: -12.953908920288086
    5. '.dy' → logprob: -13.578908920288086
    6. ')' → logprob: -13.953908920288086
    7. ' ' → logprob: -14.953908920288086
    8. 'ay' → logprob: -15.203908920288086
    9. 'Dy' → logprob: -15.578908920288086
    10. '   ' → logprob: -16.953908920288086

Token 74: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ' )' → logprob: -14.000000953674316
    3. ')
' → logprob: -15.375000953674316
    4. ')return' → logprob: -18.125001907348633
    5. ')#' → logprob: -18.750001907348633
    6. '}' → logprob: -19.375001907348633
    7. ')

' → logprob: -19.375001907348633
    8. '),' → logprob: -19.500001907348633
    9. '))' → logprob: -19.875001907348633
    10. ')`' → logprob: -20.125001907348633

Token 75: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2566674053668976
    2. '
' → logprob: -2.256667375564575
    3. '<|end|>' → logprob: -3.006667375564575
    4. '#' → logprob: -3.131667375564575
    5. '\' → logprob: -5.381667613983154
    6. ':' → logprob: -5.631667613983154
    7. ')' → logprob: -5.631667613983154
    8. '```' → logprob: -5.631667613983154
    9. ',' → logprob: -6.256667613983154
    10. '

' → logprob: -6.381667613983154

Token 76: ' in' (ID: 306)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.2735483646392822
    2. ' solve' → logprob: -3.0235483646392822
    3. ' main' → logprob: -3.2735483646392822
    4. ' valid' → logprob: -3.3985483646392822
    5. ' possible' → logprob: -3.7735483646392822
    6. ' is' → logprob: -3.8985483646392822
    7. ' shortest' → logprob: -4.023548126220703
    8. ' move' → logprob: -4.648548126220703
    9. ' solution' → logprob: -4.898548126220703
    10. ' find' → logprob: -5.523548126220703

Token 77: '_board' (ID: 55737)
  Prédit: '_bounds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bounds' → logprob: -0.024416623637080193
    2. '_' → logprob: -4.149416446685791
    3. '_range' → logprob: -5.149416446685791
    4. '_grid' → logprob: -6.899416446685791
    5. '_bound' → logprob: -7.024416446685791
    6. '_board' → logprob: -8.02441692352295
    7. '_area' → logprob: -9.64941692352295
    8. 'side' → logprob: -9.89941692352295
    9. '_boundary' → logprob: -10.02441692352295
    10. 'bounds' → logprob: -10.89941692352295

Token 78: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.011994114145636559
    2. '(' → logprob: -4.636993885040283
    3. '(position' → logprob: -6.136993885040283
    4. '(coord' → logprob: -10.761994361877441
    5. '(x' → logprob: -11.011994361877441
    6. '(point' → logprob: -11.386994361877441
    7. ' (' → logprob: -11.761994361877441
    8. '(board' → logprob: -12.511994361877441
    9. '(cell' → logprob: -13.386994361877441
    10. '(place' → logprob: -13.511994361877441

Token 79: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015871046343818307
    2. '):' → logprob: -6.6265869140625
    3. ' ,' → logprob: -8.3765869140625
    4. ')' → logprob: -11.2515869140625
    5. ',pos' → logprob: -11.3765869140625
    6. '   ' → logprob: -13.1265869140625
    7. ' ' → logprob: -13.7515869140625
    8. ',size' → logprob: -14.3765869140625
    9. ' ):' → logprob: -14.7515869140625
    10. '):
' → logprob: -14.7515869140625

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09745656698942184
    2. 'x' → logprob: -2.597456455230713
    3. ' x' → logprob: -4.097456455230713
    4. '(x' → logprob: -6.847456455230713
    5. ' (' → logprob: -8.347456932067871
    6. ' ' → logprob: -8.722456932067871
    7. '    ' → logprob: -9.722456932067871
    8. '  ' → logprob: -9.972456932067871
    9. '<|end|>' → logprob: -10.097456932067871
    10. ',' → logprob: -10.222456932067871

Token 81: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7342253923416138
    2. '   ' → logprob: -1.2342253923416138
    3. ' x' → logprob: -1.4842253923416138
    4. '0' → logprob: -6.734225273132324
    5. ' ' → logprob: -7.234225273132324
    6. '(x' → logprob: -9.234225273132324
    7. '    
' → logprob: -9.484225273132324
    8. '    ' → logprob: -9.484225273132324
    9. ' return' → logprob: -9.484225273132324
    10. 'return' → logprob: -10.109225273132324

Token 82: ' Vér' (ID: 159169)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.19323550164699554
    2. '   ' → logprob: -2.443235397338867
    3. ' x' → logprob: -2.443235397338867
    4. ' ' → logprob: -6.818235397338867
    5. ' return' → logprob: -7.443235397338867
    6. 'return' → logprob: -9.068235397338867
    7. '  ' → logprob: -10.068235397338867
    8. 'def' → logprob: -10.193235397338867
    9. ' ' → logprob: -10.443235397338867
    10. '```' → logprob: -10.818235397338867

Token 83: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.05687514692544937
    2. 'if' → logprob: -3.056875228881836
    3. 'f' → logprob: -5.431875228881836
    4. 'ifiez' → logprob: -7.556875228881836
    5. 'def' → logprob: -7.681875228881836
    6. 'ifier' → logprob: -8.056875228881836
    7. 'ify' → logprob: -8.056875228881836
    8. 't' → logprob: -8.306875228881836
    9. 'int' → logprob: -8.681875228881836
    10. 'ife' → logprob: -9.056875228881836

Token 84: ' que' (ID: 661)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.280256748199463
    2. ' ' → logprob: -1.280256748199463
    3. '<|end|>' → logprob: -1.405256748199463
    4. ' (' → logprob: -1.905256748199463
    5. ' pos' → logprob: -3.280256748199463
    6. 'pos' → logprob: -5.030256748199463
    7. '(' → logprob: -6.530256748199463
    8. ' if' → logprob: -6.780256748199463
    9. ' len' → logprob: -7.280256748199463
    10. '  ' → logprob: -7.655256748199463

Token 85: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4748757779598236
    2. ' ' → logprob: -0.974875807762146
    3. ' pos' → logprob: -7.3498759269714355
    4. 'pos' → logprob: -9.349875450134277
    5. ' ' → logprob: -9.974875450134277
    6. '1' → logprob: -12.599875450134277
    7. '<|end|>' → logprob: -12.599875450134277
    8. '```' → logprob: -12.974875450134277
    9. ' x' → logprob: -13.349875450134277
    10. '   ' → logprob: -13.349875450134277

Token 86: ' position' (ID: 4010)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7180916666984558
    2. 'pos' → logprob: -1.5930917263031006
    3. 'position' → logprob: -1.8430917263031006
    4. ' position' → logprob: -2.4680917263031006
    5. ' pos' → logprob: -3.7180917263031006
    6. 'x' → logprob: -3.8430917263031006
    7. ' ' → logprob: -3.9680917263031006
    8. ' x' → logprob: -7.5930914878845215
    9. '1' → logprob: -8.34309196472168
    10. '2' → logprob: -10.15559196472168

Token 87: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.06988518685102463
    2. ' is' → logprob: -3.44488525390625
    3. '[' → logprob: -3.69488525390625
    4. ' x' → logprob: -6.44488525390625
    5. ' reste' → logprob: -6.44488525390625
    6. 'est' → logprob: -6.94488525390625
    7. ' a' → logprob: -6.94488525390625
    8. '0' → logprob: -7.06988525390625
    9. '   ' → logprob: -7.31988525390625
    10. 'x' → logprob: -7.44488525390625

Token 88: ' dans' (ID: 2671)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22572313249111176
    2. 'dans' → logprob: -2.2257230281829834
    3. ' dans' → logprob: -3.8507230281829834
    4. ' ' → logprob: -3.8507230281829834
    5. ' bien' → logprob: -4.1007232666015625
    6. ' within' → logprob: -4.4757232666015625
    7. 'sur' → logprob: -5.4757232666015625
    8. '(' → logprob: -5.6007232666015625
    9. 'bien' → logprob: -5.7257232666015625
    10. 'within' → logprob: -6.2257232666015625

Token 89: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.382469117641449
    2. ' le' → logprob: -1.7574691772460938
    3. 'le' → logprob: -2.5074691772460938
    4. ' les' → logprob: -4.007469177246094
    5. 'la' → logprob: -4.757469177246094
    6. ' ' → logprob: -4.882469177246094
    7. ' l' → logprob: -5.257469177246094
    8. ' range' → logprob: -5.257469177246094
    9. '0' → logprob: -5.632469177246094
    10. 'l' → logprob: -5.757469177246094

Token 90: ' limites' (ID: 72637)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -1.322719931602478
    2. 'plate' → logprob: -1.447719931602478
    3. 'lim' → logprob: -2.4477200508117676
    4. ' ' → logprob: -2.4477200508117676
    5. ' limites' → logprob: -2.6977200508117676
    6. 'pl' → logprob: -3.0727200508117676
    7. 'dimensions' → logprob: -3.1977200508117676
    8. 'bounds' → logprob: -3.4477200508117676
    9. 'gr' → logprob: -3.4477200508117676
    10. '1' → logprob: -4.072720050811768

Token 91: ' du' (ID: 1462)
  Prédit: ' du'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.15044991672039032
    2. 'du' → logprob: -2.1504499912261963
    3. ' de' → logprob: -4.650449752807617
    4. ' (' → logprob: -4.900449752807617
    5. '   ' → logprob: -6.775449752807617
    6. '(board' → logprob: -6.775449752807617
    7. 'de' → logprob: -6.900449752807617
    8. ' des' → logprob: -7.400449752807617
    9. ' ' → logprob: -7.650449752807617
    10. '(' → logprob: -8.275449752807617

Token 92: ' plateau' (ID: 78303)
  Prédit: 'plate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plate' → logprob: -0.2905757427215576
    2. ' plateau' → logprob: -1.4155757427215576
    3. 'board' → logprob: -5.040575981140137
    4. 'éch' → logprob: -6.915575981140137
    5. 'gr' → logprob: -8.415575981140137
    6. '```' → logprob: -8.540575981140137
    7. 'terrain' → logprob: -8.790575981140137
    8. ' plate' → logprob: -8.915575981140137
    9. 'g' → logprob: -8.915575981140137
    10. 'e' → logprob: -8.915575981140137

Token 93: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04513099417090416
    2. '(' → logprob: -3.795130968093872
    3. ' (' → logprob: -4.670131206512451
    4. ':' → logprob: -5.170131206512451
    5. 'def' → logprob: -6.545131206512451
    6. '(pos' → logprob: -6.670131206512451
    7. ' ' → logprob: -6.920131206512451
    8. '(
' → logprob: -6.920131206512451
    9. '  ' → logprob: -7.670131206512451
    10. ',' → logprob: -8.295130729675293

Token 94: '4' (ID: 19)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11009590327739716
    2. ' ' → logprob: -3.610095977783203
    3. ':' → logprob: -3.860095977783203
    4. '(' → logprob: -4.110095977783203
    5. ' (' → logprob: -4.110095977783203
    6. 'def' → logprob: -4.860095977783203
    7. ',' → logprob: -5.485095977783203
    8. '  ' → logprob: -5.610095977783203
    9. '<|end|>' → logprob: -5.860095977783203
    10. ')' → logprob: -6.985095977783203

Token 95: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08516401052474976
    2. ',' → logprob: -2.8351640701293945
    3. ' x' → logprob: -4.9601640701293945
    4. '0' → logprob: -5.3351640701293945
    5. '<|end|>' → logprob: -5.7101640701293945
    6. ' ,' → logprob: -6.0851640701293945
    7. ':' → logprob: -6.5851640701293945
    8. '8' → logprob: -6.8351640701293945
    9. '1' → logprob: -7.4601640701293945
    10. '4' → logprob: -7.7101640701293945

Token 96: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00015920029545668513
    2. ' ' → logprob: -8.75015926361084
    3. '5' → logprob: -14.62515926361084
    4. '```' → logprob: -16.375158309936523
    5. '3' → logprob: -17.250158309936523
    6. ',' → logprob: -17.312658309936523
    7. '   ' → logprob: -17.812658309936523
    8. '6' → logprob: -17.937658309936523
    9. '  ' → logprob: -18.000158309936523
    10. '7' → logprob: -18.687658309936523

Token 97: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040926072746515274
    2. ':' → logprob: -3.415925979614258
    3. ' ' → logprob: -6.540925979614258
    4. '
' → logprob: -6.790925979614258
    5. '(' → logprob: -7.040925979614258
    6. ':
' → logprob: -7.540925979614258
    7. ' (' → logprob: -7.665925979614258
    8. '  ' → logprob: -7.665925979614258
    9. '<|end|>' → logprob: -7.790925979614258
    10. '    
' → logprob: -7.915925979614258

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5792118310928345
    2. ':' → logprob: -0.8292118310928345
    3. ':
' → logprob: -6.829211711883545
    4. '(' → logprob: -7.079211711883545
    5. ' ' → logprob: -7.829211711883545
    6. ' :' → logprob: -8.704212188720703
    7. '    
' → logprob: -8.954212188720703
    8. ':return' → logprob: -8.954212188720703
    9. '<|end|>' → logprob: -9.079212188720703
    10. 'def' → logprob: -9.704212188720703

Token 99: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.11030368506908417
    2. '   ' → logprob: -2.3603036403656006
    3. ' x' → logprob: -4.61030387878418
    4. '
' → logprob: -11.23530387878418
    5. '(x' → logprob: -11.23530387878418
    6. '    
' → logprob: -11.36030387878418
    7. 'return' → logprob: -11.36030387878418
    8. '0' → logprob: -11.73530387878418
    9. '	x' → logprob: -11.86030387878418
    10. 'def' → logprob: -11.98530387878418

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18582665920257568
    2. ' >=' → logprob: -1.8108266592025757
    3. ' ,' → logprob: -5.810826778411865
    4. '>=' → logprob: -5.810826778411865
    5. '0' → logprob: -10.935826301574707
    6. ' >' → logprob: -11.560826301574707
    7. ')>=' → logprob: -11.685826301574707
    8. ' ' → logprob: -11.685826301574707
    9. ',y' → logprob: -11.810826301574707
    10. '<|end|>' → logprob: -12.310826301574707

Token 101: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.2014743536710739
    2. 'y' → logprob: -1.7014743089675903
    3. '<|end|>' → logprob: -9.8264741897583
    4. ' ' → logprob: -12.5764741897583
    5. 'x' → logprob: -13.0764741897583
    6. '0' → logprob: -14.4514741897583
    7. ' x' → logprob: -15.2014741897583
    8. ' ' → logprob: -15.8264741897583
    9. '<|end|>' → logprob: -15.8264741897583
    10. '	y' → logprob: -15.9514741897583

Token 102: ' =' (ID: 314)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.33143872022628784
    2. ',' → logprob: -1.4564387798309326
    3. '>=' → logprob: -3.4564387798309326
    4. ' =' → logprob: -4.4564385414123535
    5. '=' → logprob: -5.7064385414123535
    6. ' ,' → logprob: -6.2064385414123535
    7. ')' → logprob: -8.206439018249512
    8. ')>=' → logprob: -8.956439018249512
    9. ' ' → logprob: -9.706439018249512
    10. ' >' → logprob: -11.206439018249512

Token 103: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.014163747429847717
    2. 'pos' → logprob: -4.264163970947266
    3. '	pos' → logprob: -15.264163970947266
    4. '(pos' → logprob: -17.389163970947266
    5. ' posit' → logprob: -18.264163970947266
    6. '[pos' → logprob: -18.264163970947266
    7. '.pos' → logprob: -18.764163970947266
    8. ' position' → logprob: -19.014163970947266
    9. 'Pos' → logprob: -19.139163970947266
    10. ',pos' → logprob: -19.264163970947266

Token 104: '
' (ID: 198)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5332394242286682
    2. '
' → logprob: -2.0332393646240234
    3. '   ' → logprob: -2.0332393646240234
    4. '>=' → logprob: -2.5332393646240234
    5. '<|end|>' → logprob: -2.9082393646240234
    6. ' ' → logprob: -5.283239364624023
    7. ' return' → logprob: -5.658239364624023
    8. '0' → logprob: -6.408239364624023
    9. ',' → logprob: -6.908239364624023
    10. 'return' → logprob: -6.908239364624023

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004074354947078973
    2. ' return' → logprob: -8.500407218933105
    3. 'return' → logprob: -8.875407218933105
    4. ' >=' → logprob: -10.125407218933105
    5. '>=' → logprob: -12.125407218933105
    6. '    
' → logprob: -12.500407218933105
    7. '	return' → logprob: -12.750407218933105
    8. '    ' → logprob: -12.750407218933105
    9. '<|end|>' → logprob: -13.125407218933105
    10. '  ' → logprob: -13.375407218933105

Token 106: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4418109059333801
    2. 'return' (adapté à ' return') → logprob: -1.1918108463287354
    3. ' return' → logprob: -3.3168108463287354
    4. ' ' → logprob: -4.1918110847473145
    5. '   ' → logprob: -6.8168110847473145
    6. '4' → logprob: -7.0668110847473145
    7. '1' → logprob: -9.441810607910156
    8. '7' → logprob: -11.066810607910156
    9. '6' → logprob: -11.691810607910156
    10. '
' → logprob: -12.691810607910156

Token 107: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3132690191268921
    2. ' ' → logprob: -1.313269019126892
    3. '(' → logprob: -12.063268661499023
    4. ' (' → logprob: -14.438268661499023
    5. ' ' → logprob: -14.688268661499023
    6. '1' → logprob: -15.688268661499023
    7. 'x' → logprob: -15.813268661499023
    8. ' x' → logprob: -16.438268661499023
    9. '4' → logprob: -16.438268661499023
    10. '  ' → logprob: -16.813268661499023

Token 108: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017043406842276454
    2. ' ' → logprob: -6.376704216003418
    3. '(' → logprob: -13.126704216003418
    4. ' (' → logprob: -16.501705169677734
    5. '1' → logprob: -17.501705169677734
    6. '   ' → logprob: -17.626705169677734
    7. ' ' → logprob: -17.751705169677734
    8. 'x' → logprob: -18.001705169677734
    9. '4' → logprob: -18.876705169677734
    10. '  ' → logprob: -19.189205169677734

Token 109: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2255655974149704
    2. '<=' → logprob: -1.6005655527114868
    3. '<' → logprob: -9.350565910339355
    4. ' ' → logprob: -10.975565910339355
    5. ' ' → logprob: -11.475565910339355
    6. 'x' → logprob: -11.475565910339355
    7. '[' → logprob: -12.100565910339355
    8. ',' → logprob: -12.600565910339355
    9. 'le' → logprob: -12.850565910339355
    10. '(' → logprob: -13.225565910339355

Token 110: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0485873706638813
    2. ' x' → logprob: -3.0485873222351074
    3. '	x' → logprob: -18.423587799072266
    4. '4' → logprob: -19.173587799072266
    5. '"x' → logprob: -19.173587799072266
    6. ' ' → logprob: -19.673587799072266
    7. ''x' → logprob: -21.048587799072266
    8. ')x' → logprob: -21.298587799072266
    9. '```' → logprob: -21.548587799072266
    10. ' ' → logprob: -21.673587799072266

Token 111: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.10022101551294327
    2. ' <' → logprob: -2.3502209186553955
    3. '4' → logprob: -12.225220680236816
    4. ' and' → logprob: -12.725220680236816
    5. 'and' → logprob: -12.850220680236816
    6. ' ' → logprob: -13.600220680236816
    7. '[' → logprob: -14.225220680236816
    8. '3' → logprob: -14.350220680236816
    9. 'x' → logprob: -14.975220680236816
    10. '1' → logprob: -15.350220680236816

Token 112: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.004620949272066355
    2. ' ' → logprob: -5.3796210289001465
    3. '   ' → logprob: -14.504620552062988
    4. '16' → logprob: -16.879621505737305
    5. ' ' → logprob: -17.004621505737305
    6. '' → logprob: -17.629621505737305
    7. '```' → logprob: -17.629621505737305
    8. '٤' → logprob: -17.879621505737305
    9. '  ' → logprob: -18.004621505737305
    10. '۴' → logprob: -18.942121505737305

Token 113: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -17.125003814697266
    4. '16' → logprob: -17.625003814697266
    5. '' → logprob: -18.062503814697266
    6. '٤' → logprob: -18.125003814697266
    7. '   ' → logprob: -19.000003814697266
    8. '416' → logprob: -19.062503814697266
    9. '14' → logprob: -19.187503814697266
    10. '۴' → logprob: -19.250003814697266

Token 114: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01815919391810894
    2. 'and' → logprob: -4.01815938949585
    3. ' ' → logprob: -11.893158912658691
    4. '   ' → logprob: -13.768158912658691
    5. '4' → logprob: -14.143158912658691
    6. '0' → logprob: -15.018158912658691
    7. ' ' → logprob: -16.018159866333008
    8. '	and' → logprob: -16.393159866333008
    9. ',' → logprob: -16.893159866333008
    10. '  ' → logprob: -17.643159866333008

Token 115: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4740805923938751
    2. '0' → logprob: -0.9740805625915527
    3. ' ' → logprob: -12.974081039428711
    4. '4' → logprob: -14.099081039428711
    5. '  ' → logprob: -14.974081039428711
    6. '   ' → logprob: -15.974081039428711
    7. ' y' → logprob: -17.09908103942871
    8. 'y' → logprob: -18.16158103942871
    9. ' 
' → logprob: -18.53658103942871
    10. '    ' → logprob: -18.53658103942871

Token 116: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01251847855746746
    2. ' ' → logprob: -4.387518405914307
    3. '4' → logprob: -11.637518882751465
    4. 'y' → logprob: -17.63751792907715
    5. ' ' → logprob: -17.63751792907715
    6. ' y' → logprob: -18.13751792907715
    7. '   ' → logprob: -18.88751792907715
    8. '  ' → logprob: -19.13751792907715
    9. '1' → logprob: -19.95001792907715
    10. '3' → logprob: -20.70001792907715

Token 117: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.29017671942710876
    2. '<' → logprob: -1.6651767492294312
    3. ' <=' → logprob: -2.9151766300201416
    4. '4' → logprob: -5.790176868438721
    5. ' ' → logprob: -5.915176868438721
    6. '<=' → logprob: -5.915176868438721
    7. '   ' → logprob: -10.665176391601562
    8. '0' → logprob: -11.290176391601562
    9. ' <
' → logprob: -12.540176391601562
    10. '[' → logprob: -12.915176391601562

Token 118: ' y' (ID: 342)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0067208209075033665
    2. ' ' → logprob: -5.006721019744873
    3. 'y' → logprob: -12.506720542907715
    4. ' y' → logprob: -13.256720542907715
    5. '0' → logprob: -18.25672149658203
    6. ' ' → logprob: -18.50672149658203
    7. '   ' → logprob: -18.50672149658203
    8. '  ' → logprob: -20.31922149658203
    9. '```' → logprob: -20.50672149658203
    10. '=' → logprob: -20.63172149658203

Token 119: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.012510471045970917
    2. '<' → logprob: -4.387510299682617
    3. ' ' → logprob: -14.387510299682617
    4. '4' → logprob: -16.887510299682617
    5. '<|end|>' → logprob: -16.887510299682617
    6. ' <=' → logprob: -17.137510299682617
    7. '<int' → logprob: -17.262510299682617
    8. '[' → logprob: -18.012510299682617
    9. '0' → logprob: -18.137510299682617
    10. '<size' → logprob: -18.512510299682617

Token 120: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.008615161292254925
    2. ' ' → logprob: -4.758615016937256
    3. '```' → logprob: -15.633615493774414
    4. '   ' → logprob: -15.821115493774414
    5. ' ' → logprob: -16.258615493774414
    6. '  ' → logprob: -17.321115493774414
    7. '' → logprob: -17.571115493774414
    8. '.' → logprob: -17.571115493774414
    9. '<|end|>' → logprob: -17.758615493774414
    10. '٤' → logprob: -18.258615493774414

Token 121: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -15.250001907348633
    4. '<|end|>' → logprob: -17.500001907348633
    5. '' → logprob: -17.562501907348633
    6. '٤' → logprob: -18.062501907348633
    7. '৪' → logprob: -18.125001907348633
    8. '۴' → logprob: -18.125001907348633
    9. '४' → logprob: -18.500001907348633
    10. '44' → logprob: -18.687501907348633

Token 122: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4561198055744171
    2. 'def' → logprob: -1.5811197757720947
    3. '<|end|>' → logprob: -2.2061197757720947
    4. '

' → logprob: -3.9561197757720947
    5. '\n' → logprob: -4.331120014190674
    6. 'newline' → logprob: -4.581120014190674
    7. '\' → logprob: -6.331120014190674
    8. '<|end|>' → logprob: -6.706120014190674
    9. '  
' → logprob: -6.956120014190674
    10. '```' → logprob: -7.081120014190674

Token 123: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012915492057800293
    2. '
' → logprob: -5.26291561126709
    3. '<|end|>' → logprob: -5.63791561126709
    4. '#' → logprob: -7.13791561126709
    5. 'newline' → logprob: -7.38791561126709
    6. '\' → logprob: -7.76291561126709
    7. '\n' → logprob: -7.88791561126709
    8. ':' → logprob: -7.88791561126709
    9. '```' → logprob: -8.13791561126709
    10. '  
' → logprob: -8.26291561126709

Token 124: ' position' (ID: 4010)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -1.0617952346801758
    2. ' main' → logprob: -1.1867952346801758
    3. ' bfs' → logprob: -2.186795234680176
    4. ' valid' → logprob: -2.811795234680176
    5. ' is' → logprob: -3.436795234680176
    6. 'solve' → logprob: -3.686795234680176
    7. ' possible' → logprob: -3.811795234680176
    8. ' parse' → logprob: -4.186795234680176
    9. ' generate' → logprob: -4.811795234680176
    10. ' knight' → logprob: -5.061795234680176

Token 125: '_to' (ID: 5089)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.23258262872695923
    2. '_to' → logprob: -2.3575825691223145
    3. '_possible' → logprob: -3.2325825691223145
    4. '_moves' → logprob: -4.3575825691223145
    5. '(' → logprob: -4.4825825691223145
    6. '_s' → logprob: -5.1075825691223145
    7. '_of' → logprob: -5.7325825691223145
    8. '_valid' → logprob: -5.8575825691223145
    9. '_equals' → logprob: -5.8575825691223145
    10. '_available' → logprob: -5.9825825691223145

Token 126: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.44346362352371216
    2. 'index' → logprob: -1.3184635639190674
    3. '_coords' → logprob: -4.0684638023376465
    4. '_string' → logprob: -4.3184638023376465
    5. '_indices' → logprob: -4.3184638023376465
    6. 'indices' → logprob: -4.8184638023376465
    7. '_tuple' → logprob: -5.0684638023376465
    8. 'string' → logprob: -5.0684638023376465
    9. '_id' → logprob: -5.9434638023376465
    10. 'coords' → logprob: -5.9434638023376465

Token 127: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.03921377286314964
    2. '(' → logprob: -3.2892136573791504
    3. '(position' → logprob: -6.78921365737915
    4. ' (' → logprob: -10.414214134216309
    5. '(p' → logprob: -11.664214134216309
    6. '((' → logprob: -12.789214134216309
    7. '(Pos' → logprob: -14.039214134216309
    8. '(
' → logprob: -14.414214134216309
    9. '(x' → logprob: -14.414214134216309
    10. '(s' → logprob: -14.414214134216309

Token 128: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00040421701851300895
    2. '):
' → logprob: -8.250404357910156
    3. '(pos' → logprob: -10.125404357910156
    4. ',' → logprob: -10.500404357910156
    5. ':' → logprob: -10.500404357910156
    6. ' ):' → logprob: -10.625404357910156
    7. ')' → logprob: -11.000404357910156
    8. '(' → logprob: -13.125404357910156
    9. ',pos' → logprob: -13.875404357910156
    10. '   ' → logprob: -14.250404357910156

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2114330381155014
    2. '(x' → logprob: -2.086432933807373
    3. '(' → logprob: -3.836432933807373
    4. ':' → logprob: -4.211432933807373
    5. '<|end|>' → logprob: -4.461432933807373
    6. 'x' → logprob: -4.961432933807373
    7. 'def' → logprob: -5.711432933807373
    8. '(pos' → logprob: -6.461432933807373
    9. '(
' → logprob: -6.711432933807373
    10. '(position' → logprob: -7.211432933807373

Token 130: ' #' (ID: 1069)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.38966768980026245
    2. 'x' → logprob: -1.5146677494049072
    3. ' return' → logprob: -2.7646677494049072
    4. '   ' → logprob: -3.2646677494049072
    5. 'return' → logprob: -6.514667510986328
    6. ' ' → logprob: -9.139667510986328
    7. '(x' → logprob: -11.764667510986328
    8. '    ' → logprob: -12.139667510986328
    9. ' (' → logprob: -12.514667510986328
    10. '    
' → logprob: -12.639667510986328

Token 131: ' Convert' (ID: 15629)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2341429442167282
    2. ' x' → logprob: -2.359143018722534
    3. 'x' → logprob: -2.484143018722534
    4. 'return' → logprob: -3.484143018722534
    5. '   ' → logprob: -9.109143257141113
    6. ' ' → logprob: -10.484143257141113
    7. '(x' → logprob: -12.109143257141113
    8. ' index' → logprob: -12.359143257141113
    9. ' ' → logprob: -12.609143257141113
    10. ' (' → logprob: -13.109143257141113

Token 132: 'it' (ID: 278)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.932174563407898
    2. 'it' → logprob: -2.0571746826171875
    3. ' ' → logprob: -2.1821746826171875
    4. ' (' → logprob: -2.1821746826171875
    5. ' =' → logprob: -2.6821746826171875
    6. 'ir' → logprob: -2.6821746826171875
    7. '=' → logprob: -3.9321746826171875
    8. 'pos' → logprob: -4.4321746826171875
    9. '_' → logprob: -4.5571746826171875
    10. ' pos' → logprob: -4.5571746826171875

Token 133: ' une' (ID: 2463)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.3151352107524872
    2. 'pos' → logprob: -1.3151352405548096
    3. 'position' → logprob: -7.3151350021362305
    4. '(pos' → logprob: -7.4401350021362305
    5. ' (' → logprob: -8.44013500213623
    6. ' position' → logprob: -8.56513500213623
    7. '(' → logprob: -9.19013500213623
    8. ' la' → logprob: -10.06513500213623
    9. 'x' → logprob: -10.56513500213623
    10. '_pos' → logprob: -11.69013500213623

Token 134: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.8617597222328186
    2. ' position' → logprob: -0.9867597222328186
    3. 'pos' → logprob: -1.9867596626281738
    4. ' tuple' → logprob: -3.361759662628174
    5. ' pos' → logprob: -3.986759662628174
    6. 'tuple' → logprob: -4.986759662628174
    7. '(' → logprob: -6.111759662628174
    8. ' (' → logprob: -6.736759662628174
    9. ' coord' → logprob: -6.861759662628174
    10. ' case' → logprob: -7.361759662628174

Token 135: ' (' (ID: 350)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.3527942895889282
    2. 'en' → logprob: -2.3527941703796387
    3. ' (' → logprob: -2.4777941703796387
    4. '(' → logprob: -2.9777941703796387
    5. '(pos' → logprob: -3.2277941703796387
    6. 'pos' → logprob: -4.477794170379639
    7. ' ' → logprob: -5.477794170379639
    8. '(position' → logprob: -5.727794170379639
    9. ' pos' → logprob: -5.977794170379639
    10. '<|end|>' → logprob: -6.852794170379639

Token 136: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.05140729621052742
    2. ' x' → logprob: -3.3014073371887207
    3. 'int' → logprob: -4.551407337188721
    4. ' int' → logprob: -6.551407337188721
    5. 'tuple' → logprob: -7.551407337188721
    6. ' tuple' → logprob: -7.801407337188721
    7. 'pos' → logprob: -8.426406860351562
    8. ')' → logprob: -10.176406860351562
    9. ',' → logprob: -10.676406860351562
    10. ' pos' → logprob: -10.801406860351562

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002334568416699767
    2. ' ,' → logprob: -9.00023365020752
    3. ',y' → logprob: -9.12523365020752
    4. 'y' → logprob: -14.25023365020752
    5. ',
' → logprob: -16.250232696533203
    6. ')' → logprob: -16.625232696533203
    7. '‌,' → logprob: -16.750232696533203
    8. ' ' → logprob: -16.875232696533203
    9. '[' → logprob: -17.250232696533203
    10. ' y' → logprob: -17.625232696533203

Token 138: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.20141392946243286
    2. ' y' → logprob: -1.701413869857788
    3. '	y' → logprob: -14.576414108276367
    4. ',' → logprob: -17.076414108276367
    5. ',y' → logprob: -17.201414108276367
    6. ' ' → logprob: -17.201414108276367
    7. '<|end|>' → logprob: -17.451414108276367
    8. ')y' → logprob: -18.076414108276367
    9. '_y' → logprob: -18.701414108276367
    10. '<|end|>' → logprob: -18.701414108276367

Token 139: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005341666750609875
    2. '):' → logprob: -5.255341529846191
    3. ' )' → logprob: -9.380341529846191
    4. '):
' → logprob: -10.880341529846191
    5. '):

' → logprob: -13.505341529846191
    6. ',' → logprob: -13.630341529846191
    7. ' ):' → logprob: -14.005341529846191
    8. '):
' → logprob: -15.130341529846191
    9. ')->' → logprob: -15.630341529846191
    10. ' ' → logprob: -15.755341529846191

Token 140: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0056657791137695
    2. '):' → logprob: -1.3806657791137695
    3. ':' → logprob: -2.2556657791137695
    4. ' into' → logprob: -2.5056657791137695
    5. ',' → logprob: -3.0056657791137695
    6. ' en' → logprob: -3.3806657791137695
    7. ' =' → logprob: -3.5056657791137695
    8. ' to' → logprob: -3.6306657791137695
    9. ' in' → logprob: -4.6306657791137695
    10. '=' → logprob: -5.1306657791137695

Token 141: ' un' (ID: 537)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.025546308606863022
    2. '4' → logprob: -4.025546073913574
    3. ' x' → logprob: -5.025546073913574
    4. 'y' → logprob: -7.650546073913574
    5. ' ' → logprob: -8.775546073913574
    6. ' y' → logprob: -9.900546073913574
    7. 'un' → logprob: -10.650546073913574
    8. ' un' → logprob: -10.775546073913574
    9. 'index' → logprob: -11.150546073913574
    10. 'une' → logprob: -11.275546073913574

Token 142: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -1.0358165502548218
    2. ' index' → logprob: -1.4108165502548218
    3. 'indice' → logprob: -1.5358165502548218
    4. 'ent' → logprob: -2.2858166694641113
    5. ' entier' → logprob: -4.035816669464111
    6. ' indice' → logprob: -4.035816669464111
    7. ' unique' → logprob: -4.035816669464111
    8. 'int' → logprob: -4.285816669464111
    9. 'e' → logprob: -5.035816669464111
    10. ' int' → logprob: -5.535816669464111

Token 143: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07603354007005692
    2. '=' → logprob: -2.951033592224121
    3. 'x' → logprob: -5.326033592224121
    4. ' x' → logprob: -5.701033592224121
    5. 'pos' → logprob: -5.701033592224121
    6. 'def' → logprob: -5.701033592224121
    7. 'y' → logprob: -6.451033592224121
    8. ' y' → logprob: -6.451033592224121
    9. ' return' → logprob: -7.076033592224121
    10. 'return' → logprob: -7.826033592224121

Token 144: '0' (ID: 15)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.636193573474884
    2. 'x' → logprob: -2.0111935138702393
    3. '=' → logprob: -2.2611935138702393
    4. '4' → logprob: -3.0111935138702393
    5. 'def' → logprob: -3.0111935138702393
    6. 'y' → logprob: -3.3861935138702393
    7. 'unique' → logprob: -3.7611935138702393
    8. 'linear' → logprob: -3.7611935138702393
    9. 'int' → logprob: -4.511193752288818
    10. 'de' → logprob: -4.761193752288818

Token 145: '..' (ID: 485)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2900640368461609
    2. '*' → logprob: -1.7900640964508057
    3. ' +' → logprob: -2.6650640964508057
    4. ' ' → logprob: -4.540063858032227
    5. '+' → logprob: -6.540063858032227
    6. ' if' → logprob: -7.040063858032227
    7. 'x' → logprob: -7.790063858032227
    8. ',' → logprob: -7.790063858032227
    9. '  ' → logprob: -7.915063858032227
    10. '   ' → logprob: -8.415063858032227

Token 146: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.006803472060710192
    2. ' ' → logprob: -5.006803512573242
    3. '14' → logprob: -11.006803512573242
    4. '1' → logprob: -11.131803512573242
    5. '31' → logprob: -11.381803512573242
    6. '  ' → logprob: -11.381803512573242
    7. '```' → logprob: -12.131803512573242
    8. '16' → logprob: -12.381803512573242
    9. '   ' → logprob: -12.506803512573242
    10. '3' → logprob: -12.569303512573242

Token 147: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18455477058887482
    2. 'x' → logprob: -2.5595548152923584
    3. '(x' → logprob: -2.9345548152923584
    4. 'def' → logprob: -3.9345548152923584
    5. ':' → logprob: -4.684554576873779
    6. '(' → logprob: -5.934554576873779
    7. ',' → logprob: -6.309554576873779
    8. ' x' → logprob: -6.809554576873779
    9. ' (' → logprob: -7.309554576873779
    10. ' =' → logprob: -7.934554576873779

Token 148: 'ligne' (ID: 94660)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.0946555882692337
    2. 'y' → logprob: -2.5946555137634277
    3. 'x' → logprob: -4.844655513763428
    4. ' x' → logprob: -5.594655513763428
    5. ' return' → logprob: -5.719655513763428
    6. 'return' → logprob: -7.469655513763428
    7. ')' → logprob: -9.344655990600586
    8. '   ' → logprob: -9.469655990600586
    9. '4' → logprob: -11.469655990600586
    10. ' )' → logprob: -11.969655990600586

Token 149: '-major' (ID: 166736)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.008823622018098831
    2. '*' → logprob: -4.758823394775391
    3. ' ' → logprob: -9.00882339477539
    4. ',' → logprob: -10.63382339477539
    5. ')' → logprob: -11.63382339477539
    6. '   ' → logprob: -11.75882339477539
    7. ' ' → logprob: -11.88382339477539
    8. 'def' → logprob: -12.13382339477539
    9. '*num' → logprob: -12.38382339477539
    10. 'major' → logprob: -12.63382339477539

Token 150: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005975957959890366
    2. ' order' → logprob: -5.755975723266602
    3. 'order' → logprob: -6.630975723266602
    4. '_order' → logprob: -7.005975723266602
    5. ' )' → logprob: -8.130975723266602
    6. 'e' → logprob: -9.505975723266602
    7. 'ordre' → logprob: -10.130975723266602
    8. '-order' → logprob: -10.505975723266602
    9. '_)' → logprob: -10.505975723266602
    10. '_' → logprob: -11.005975723266602

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05681218206882477
    2. ':' → logprob: -3.556812286376953
    3. 'x' → logprob: -4.431812286376953
    4. '(x' → logprob: -5.431812286376953
    5. 'def' → logprob: -5.556812286376953
    6. '<|end|>' → logprob: -6.556812286376953
    7. ' x' → logprob: -6.931812286376953
    8. ',' → logprob: -7.431812286376953
    9. ' ' → logprob: -7.681812286376953
    10. '(' → logprob: -7.681812286376953

Token 152: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.32390108704566956
    2. ' x' → logprob: -1.3239010572433472
    3. ' return' → logprob: -4.698901176452637
    4. 'return' → logprob: -6.573901176452637
    5. '   ' → logprob: -9.573901176452637
    6. ' ' → logprob: -12.198901176452637
    7. '	x' → logprob: -12.823901176452637
    8. ' 
' → logprob: -13.573901176452637
    9. ' ' → logprob: -13.948901176452637
    10. '(x' → logprob: -14.198901176452637

Token 153: ',' (ID: 11)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.14870387315750122
    2. ',' → logprob: -2.1487038135528564
    3. '*' → logprob: -4.0237040519714355
    4. ' ,' → logprob: -5.6487040519714355
    5. ',y' → logprob: -9.898703575134277
    6. ' ' → logprob: -10.148703575134277
    7. ' ' → logprob: -10.898703575134277
    8. 'def' → logprob: -12.273703575134277
    9. 'y' → logprob: -12.273703575134277
    10. ')' → logprob: -12.898703575134277

Token 154: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.31326186656951904
    2. 'y' → logprob: -1.313261866569519
    3. '	y' → logprob: -16.938261032104492
    4. ' ' → logprob: -17.063261032104492
    5. '<|end|>' → logprob: -17.688261032104492
    6. ' ' → logprob: -18.688261032104492
    7. ',y' → logprob: -19.063261032104492
    8. 'x' → logprob: -19.313261032104492
    9. '.y' → logprob: -20.188261032104492
    10. '_y' → logprob: -20.188261032104492

Token 155: ' =' (ID: 314)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.05448240041732788
    2. '*' → logprob: -3.4294824600219727
    3. ',' → logprob: -4.929482460021973
    4. '=' → logprob: -5.054482460021973
    5. ' =' → logprob: -5.304482460021973
    6. ')' → logprob: -6.804482460021973
    7. ' ' → logprob: -7.679482460021973
    8. ' ,' → logprob: -8.304482460021973
    9. '   ' → logprob: -8.929482460021973
    10. '<|end|>' → logprob: -10.804482460021973

Token 156: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.03804229199886322
    2. ' pos' → logprob: -3.2880423069000244
    3. 'y' → logprob: -15.163042068481445
    4. ' y' → logprob: -15.913042068481445
    5. '0' → logprob: -16.288042068481445
    6. '	pos' → logprob: -16.538042068481445
    7. 'position' → logprob: -16.913042068481445
    8. 'x' → logprob: -17.038042068481445
    9. '(pos' → logprob: -17.913042068481445
    10. ' ' → logprob: -18.288042068481445

Token 157: '
' (ID: 198)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.057427484542131424
    2. '*' → logprob: -3.307427406311035
    3. '   ' → logprob: -4.557427406311035
    4. 'return' → logprob: -5.307427406311035
    5. ' return' → logprob: -6.182427406311035
    6. '
' → logprob: -7.307427406311035
    7. ' +' → logprob: -7.682427406311035
    8. ' ' → logprob: -8.057427406311035
    9. ',' → logprob: -9.057427406311035
    10. ' 
' → logprob: -10.807427406311035

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10468261688947678
    2. 'return' → logprob: -2.604682683944702
    3. ' return' → logprob: -3.729682683944702
    4. '
' → logprob: -6.604682445526123
    5. '	return' → logprob: -9.729682922363281
    6. '    
' → logprob: -10.604682922363281
    7. '   ' → logprob: -11.729682922363281
    8. '<|end|>' → logprob: -12.729682922363281
    9. '```' → logprob: -12.854682922363281
    10. '  
' → logprob: -13.604682922363281

Token 159: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3872048854827881
    2. 'return' (adapté à ' return') → logprob: -1.137204885482788
    3. '   ' → logprob: -8.012205123901367
    4. '	return' → logprob: -14.012205123901367
    5. '
' → logprob: -14.512205123901367
    6. '    
' → logprob: -15.137205123901367
    7. '16' → logprob: -15.512205123901367
    8. ' 
' → logprob: -15.762205123901367
    9. ' ' → logprob: -16.012205123901367
    10. '```' → logprob: -16.012205123901367

Token 160: ' y' (ID: 342)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.16110363602638245
    2. 'x' → logprob: -1.91110360622406
    3. '4' → logprob: -7.78610372543335
    4. ' y' → logprob: -8.286103248596191
    5. ' ' → logprob: -8.536103248596191
    6. 'y' → logprob: -11.411103248596191
    7. '16' → logprob: -12.911103248596191
    8. '   ' → logprob: -13.786103248596191
    9. '	x' → logprob: -14.786103248596191
    10. ' ' → logprob: -16.036104202270508

Token 161: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2519649565219879
    2. '*' → logprob: -1.5019649267196655
    3. '4' → logprob: -10.626964569091797
    4. ' ' → logprob: -11.876964569091797
    5. ' +' → logprob: -13.501964569091797
    6. ' ' → logprob: -13.876964569091797
    7. '```' → logprob: -14.126964569091797
    8. '0' → logprob: -14.751964569091797
    9. 'x' → logprob: -15.376964569091797
    10. ' x' → logprob: -15.501964569091797

Token 162: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0007101670489646494
    2. ' ' → logprob: -7.2507100105285645
    3. '```' → logprob: -17.375709533691406
    4. '' → logprob: -17.750709533691406
    5. '<|end|>' → logprob: -18.000709533691406
    6. '   ' → logprob: -18.750709533691406
    7. '٤' → logprob: -18.875709533691406
    8. '۴' → logprob: -19.125709533691406
    9. '`' → logprob: -19.875709533691406
    10. 'def' → logprob: -20.125709533691406

Token 163: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -17.75
    4. '<|end|>' → logprob: -17.875
    5. '' → logprob: -18.375
    6. '۴' → logprob: -18.875
    7. '٤' → logprob: -19.125
    8. '৪' → logprob: -19.5
    9. '४' → logprob: -20.0
    10. 'x' → logprob: -20.1875

Token 164: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16023173928260803
    2. '+' → logprob: -1.9102317094802856
    3. '+x' → logprob: -12.285231590270996
    4. ' ' → logprob: -13.285231590270996
    5. '4' → logprob: -14.285231590270996
    6. ' plus' → logprob: -15.160231590270996
    7. ' ' → logprob: -16.035232543945312
    8. ' +
' → logprob: -16.910232543945312
    9. 'x' → logprob: -17.285232543945312
    10. ' x' → logprob: -17.535232543945312

Token 165: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0001584850688232109
    2. ' x' → logprob: -8.750158309936523
    3. '4' → logprob: -18.875158309936523
    4. '	x' → logprob: -21.250158309936523
    5. '"x' → logprob: -22.000158309936523
    6. ' ' → logprob: -22.250158309936523
    7. ''x' → logprob: -22.375158309936523
    8. '(x' → logprob: -23.125158309936523
    9. '<|end|>' → logprob: -23.625158309936523
    10. '$x' → logprob: -23.750158309936523

Token 166: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 167: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1947014033794403
    2. '
' → logprob: -2.1947014331817627
    3. '

' → logprob: -3.8197014331817627
    4. '<|end|>' → logprob: -4.319701194763184
    5. '```' → logprob: -4.819701194763184
    6. 'newline' → logprob: -4.819701194763184
    7. '\' → logprob: -5.694701194763184
    8. '#' → logprob: -5.694701194763184
    9. '\n' → logprob: -6.444701194763184
    10. '<|end|>' → logprob: -6.569701194763184

Token 168: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.29263633489608765
    2. ' index' → logprob: -1.5426363945007324
    3. 'b' → logprob: -5.667636394500732
    4. 'solve' → logprob: -5.792636394500732
    5. 'parse' → logprob: -5.917636394500732
    6. 'main' → logprob: -6.042636394500732
    7. ' bfs' → logprob: -6.167636394500732
    8. ' solve' → logprob: -6.292636394500732
    9. 'board' → logprob: -6.292636394500732
    10. 'possible' → logprob: -6.292636394500732

Token 169: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.00043281487887725234
    2. 'to' → logprob: -7.875432968139648
    3. 'To' → logprob: -10.250432968139648
    4. '(' → logprob: -12.250432968139648
    5. '_' → logprob: -13.000432968139648
    6. '_of' → logprob: -13.250432968139648
    7. ' to' → logprob: -13.375432968139648
    8. 's' → logprob: -13.500432968139648
    9. 'def' → logprob: -13.750432968139648
    10. '_TO' → logprob: -14.000432968139648

Token 170: '_position' (ID: 23739)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.0210671778768301
    2. 'pos' → logprob: -4.021067142486572
    3. 'index' → logprob: -5.896067142486572
    4. '_position' → logprob: -8.77106761932373
    5. '_index' → logprob: -13.02106761932373
    6. '_pos' → logprob: -13.27106761932373
    7. 'positions' → logprob: -13.52106761932373
    8. ' position' → logprob: -13.64606761932373
    9. '```' → logprob: -15.39606761932373
    10. '(position' → logprob: -15.64606761932373

Token 171: '(idx' (ID: 42793)
  Prédit: '(index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(index' → logprob: -0.0009401659481227398
    2. '(idx' → logprob: -7.000940322875977
    3. '(i' → logprob: -10.875940322875977
    4. ' (' → logprob: -11.750940322875977
    5. '(' → logprob: -14.000940322875977
    6. '(ind' → logprob: -14.125940322875977
    7. '(pos' → logprob: -16.000940322875977
    8. '(ix' → logprob: -16.000940322875977
    9. '(Index' → logprob: -17.500940322875977
    10. 'index' → logprob: -17.750940322875977

Token 172: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03420953452587128
    2. '(' → logprob: -4.409209728240967
    3. '):
' → logprob: -5.159209728240967
    4. '(idx' → logprob: -5.159209728240967
    5. ')' → logprob: -5.284209728240967
    6. '(pos' → logprob: -5.784209728240967
    7. ' ):' → logprob: -7.159209728240967
    8. '(index' → logprob: -7.534209728240967
    9. ' (' → logprob: -7.784209728240967
    10. '):

' → logprob: -10.784209251403809

Token 173: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7007970213890076
    2. '   ' → logprob: -0.9507970213890076
    3. '(x' → logprob: -2.4507970809936523
    4. ':' → logprob: -4.450797080993652
    5. '(n' → logprob: -5.075797080993652
    6. ' (' → logprob: -5.325797080993652
    7. 'def' → logprob: -6.075797080993652
    8. '(
' → logprob: -6.950797080993652
    9. '(pos' → logprob: -7.075797080993652
    10. ':
' → logprob: -7.575797080993652

Token 174: ' #' (ID: 1069)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3921911120414734
    2. 'return' → logprob: -1.7671911716461182
    3. ' return' → logprob: -2.517191171646118
    4. ' y' → logprob: -3.642191171646118
    5. '   ' → logprob: -3.642191171646118
    6. 'x' → logprob: -4.017190933227539
    7. 'def' → logprob: -6.142190933227539
    8. ' x' → logprob: -9.142190933227539
    9. '(y' → logprob: -9.392190933227539
    10. ' (' → logprob: -9.767190933227539

Token 175: ' Convert' (ID: 15629)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1454142332077026
    2. 'y' → logprob: -1.3954142332077026
    3. ' return' → logprob: -1.8954142332077026
    4. ' y' → logprob: -2.145414352416992
    5. 'return' → logprob: -2.145414352416992
    6. ' x' → logprob: -3.020414352416992
    7. 'def' → logprob: -7.020414352416992
    8. 'row' → logprob: -9.520414352416992
    9. ' row' → logprob: -10.020414352416992
    10. '   ' → logprob: -10.645414352416992

Token 176: 'it' (ID: 278)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.58437579870224
    2. '(' → logprob: -1.4593758583068848
    3. '(x' → logprob: -2.3343758583068848
    4. '(index' → logprob: -2.5843758583068848
    5. 'x' → logprob: -4.334375858306885
    6. 'def' → logprob: -5.334375858306885
    7. 'index' → logprob: -5.959375858306885
    8. '(
' → logprob: -5.959375858306885
    9. '(tuple' → logprob: -6.334375858306885
    10. '(position' → logprob: -6.459375858306885

Token 177: ' un' (ID: 537)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.204431414604187
    2. ' (' → logprob: -2.2044315338134766
    3. '(index' → logprob: -2.9544315338134766
    4. '(' → logprob: -4.579431533813477
    5. 'idx' → logprob: -5.704431533813477
    6. '<|end|>' → logprob: -5.704431533813477
    7. ' idx' → logprob: -6.329431533813477
    8. 'def' → logprob: -6.954431533813477
    9. 'index' → logprob: -7.204431533813477
    10. '(
' → logprob: -7.329431533813477

Token 178: ' index' (ID: 3472)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.09249620884656906
    2. ' idx' → logprob: -2.467496156692505
    3. 'index' → logprob: -6.092496395111084
    4. '(idx' → logprob: -6.842496395111084
    5. ' index' → logprob: -9.217495918273926
    6. 'indice' → logprob: -9.967495918273926
    7. ' (' → logprob: -10.592495918273926
    8. '	idx' → logprob: -11.092495918273926
    9. '(' → logprob: -11.342495918273926
    10. ' indice' → logprob: -11.717495918273926

Token 179: ' ' (ID: 220)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.49932876229286194
    2. '(idx' → logprob: -1.2493287324905396
    3. '(' → logprob: -2.249328851699829
    4. '(index' → logprob: -7.62432861328125
    5. ' en' → logprob: -8.62432861328125
    6. ' idx' → logprob: -9.49932861328125
    7. '(int' → logprob: -10.24932861328125
    8. '(
' → logprob: -10.62432861328125
    9. 'idx' → logprob: -10.99932861328125
    10. ' ' → logprob: -11.24932861328125

Token 180: '0' (ID: 15)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.036019422113895416
    2. 'en' → logprob: -3.4110193252563477
    3. ' en' → logprob: -6.536019325256348
    4. 'idx' → logprob: -7.161019325256348
    5. '(index' → logprob: -9.911019325256348
    6. '[idx' → logprob: -10.411019325256348
    7. '(' → logprob: -10.536019325256348
    8. ' idx' → logprob: -11.786019325256348
    9. 'à' → logprob: -11.786019325256348
    10. '0' → logprob: -12.161019325256348

Token 181: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.05124933272600174
    2. ',' → logprob: -3.0512492656707764
    3. ' ' → logprob: -7.4262495040893555
    4. '...' → logprob: -7.8012495040893555
    5. '<=' → logprob: -7.9262495040893555
    6. ' <=' → logprob: -8.176249504089355
    7. ' ..' → logprob: -8.176249504089355
    8. 'x' → logprob: -8.926249504089355
    9. ' ,' → logprob: -9.301249504089355
    10. '*' → logprob: -9.301249504089355

Token 182: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -1.652451464906335e-05
    2. ' ' → logprob: -11.625016212463379
    3. '3' → logprob: -12.875016212463379
    4. '16' → logprob: -13.000016212463379
    5. 'idx' → logprob: -13.125016212463379
    6. '4' → logprob: -14.875016212463379
    7. '(' → logprob: -15.625016212463379
    8. '0' → logprob: -16.750017166137695
    9. '14' → logprob: -17.000017166137695
    10. '1' → logprob: -17.250017166137695

Token 183: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.2233095020055771
    2. 'en' → logprob: -1.7233095169067383
    3. '(idx' → logprob: -3.9733095169067383
    4. '(index' → logprob: -5.973309516906738
    5. ' (' → logprob: -8.973309516906738
    6. '(en' → logprob: -9.223309516906738
    7. 'def' → logprob: -11.098309516906738
    8. '```' → logprob: -11.348309516906738
    9. '(' → logprob: -11.973309516906738
    10. ' into' → logprob: -12.098309516906738

Token 184: ' une' (ID: 2463)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3593953549861908
    2. '(x' → logprob: -1.3593953847885132
    3. '(' → logprob: -3.1093952655792236
    4. 'position' → logprob: -8.234395027160645
    5. '(position' → logprob: -9.359395027160645
    6. ' position' → logprob: -10.609395027160645
    7. '(pos' → logprob: -10.859395027160645
    8. 'pos' → logprob: -10.859395027160645
    9. 'x' → logprob: -10.984395027160645
    10. '(index' → logprob: -12.109395027160645

Token 185: ' position' (ID: 4010)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5342758893966675
    2. ' (' → logprob: -1.7842758893966675
    3. 'position' → logprob: -2.409276008605957
    4. '(x' → logprob: -2.784276008605957
    5. ' tuple' → logprob: -3.034276008605957
    6. 'tuple' → logprob: -3.159276008605957
    7. ' position' → logprob: -6.034276008605957
    8. 'pos' → logprob: -7.659276008605957
    9. '(tuple' → logprob: -7.784276008605957
    10. '(position' → logprob: -8.159276008605957

Token 186: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1330454796552658
    2. '(x' → logprob: -2.1330454349517822
    3. '(' → logprob: -5.133045673370361
    4. '(index' → logprob: -9.008045196533203
    5. '(idx' → logprob: -10.258045196533203
    6. 'def' → logprob: -11.008045196533203
    7. 'x' → logprob: -11.758045196533203
    8. '(position' → logprob: -12.508045196533203
    9. ' x' → logprob: -13.008045196533203
    10. ' ' → logprob: -13.258045196533203

Token 187: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004080420359969139
    2. '(' → logprob: -6.629080295562744
    3. ' x' → logprob: -6.754080295562744
    4. '(x' → logprob: -6.879080295562744
    5. ' (' → logprob: -8.004080772399902
    6. ')' → logprob: -8.629080772399902
    7. ')x' → logprob: -10.879080772399902
    8. '0' → logprob: -11.004080772399902
    9. '(
' → logprob: -13.129080772399902
    10. 'idx' → logprob: -13.129080772399902

Token 188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017080175457522273
    2. ' ,' → logprob: -6.501708030700684
    3. ',y' → logprob: -8.501708030700684
    4. '<|end|>' → logprob: -14.001708030700684
    5. ' ' → logprob: -14.501708030700684
    6. '‌,' → logprob: -15.126708030700684
    7. ',
' → logprob: -15.876708030700684
    8. '0' → logprob: -16.126707077026367
    9. 'y' → logprob: -16.251707077026367
    10. '1' → logprob: -16.501707077026367

Token 189: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.313262403011322
    2. ' y' → logprob: -1.3132624626159668
    3. '	y' → logprob: -14.688261985778809
    4. ')y' → logprob: -16.313262939453125
    5. ',y' → logprob: -16.563262939453125
    6. ' ' → logprob: -17.313262939453125
    7. ''y' → logprob: -17.688262939453125
    8. ',' → logprob: -17.938262939453125
    9. '<|end|>' → logprob: -18.188262939453125
    10. ')' → logprob: -19.063262939453125

Token 190: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31823471188545227
    2. ')' → logprob: -1.3182346820831299
    3. '):
' → logprob: -5.318234920501709
    4. '):
' → logprob: -10.81823444366455
    5. '):

' → logprob: -10.94323444366455
    6. ')
' → logprob: -11.56823444366455
    7. 'def' → logprob: -11.94323444366455
    8. '   ' → logprob: -12.69323444366455
    9. ' ):' → logprob: -14.69323444366455
    10. ':' → logprob: -14.94323444366455

Token 191: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9184135794639587
    2. '   ' → logprob: -1.1684136390686035
    3. '(' → logprob: -2.0434136390686035
    4. 'def' → logprob: -2.6684136390686035
    5. '(x' → logprob: -2.9184136390686035
    6. ':
' → logprob: -3.7934136390686035
    7. ' def' → logprob: -5.4184136390686035
    8. ' (' → logprob: -6.2934136390686035
    9. 'x' → logprob: -6.4184136390686035
    10. ',' → logprob: -6.4184136390686035

Token 192: 'ligne' (ID: 94660)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48936784267425537
    2. ' (' → logprob: -1.1143678426742554
    3. 'x' → logprob: -3.614367961883545
    4. '(x' → logprob: -4.114367961883545
    5. '(
' → logprob: -5.489367961883545
    6. '   ' → logprob: -5.739367961883545
    7. ' x' → logprob: -6.239367961883545
    8. 'idx' → logprob: -6.614367961883545
    9. ')' → logprob: -6.739367961883545
    10. '(idx' → logprob: -6.989367961883545

Token 193: '-major' (ID: 166736)
  Prédit: '-major'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-major' → logprob: -0.01160215400159359
    2. '-' → logprob: -5.13660192489624
    3. ',' → logprob: -5.76160192489624
    4. 'major' → logprob: -7.01160192489624
    5. '_major' → logprob: -7.38660192489624
    6. ' -' → logprob: -7.63660192489624
    7. '-wise' → logprob: -8.886602401733398
    8. '-ma' → logprob: -9.011602401733398
    9. ')' → logprob: -9.261602401733398
    10. '<|end|>' → logprob: -10.011602401733398

Token 194: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015222413931041956
    2. '):' → logprob: -7.501522064208984
    3. ')
' → logprob: -7.626522064208984
    4. '   ' → logprob: -8.126522064208984
    5. '):
' → logprob: -9.251522064208984
    6. 'def' → logprob: -9.376522064208984
    7. ' )' → logprob: -13.126522064208984
    8. ' ' → logprob: -14.376522064208984
    9. '):

' → logprob: -14.376522064208984
    10. ')
' → logprob: -14.876522064208984

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2890947461128235
    2. 'def' → logprob: -2.1640946865081787
    3. ':' → logprob: -2.7890946865081787
    4. 'x' → logprob: -3.4140946865081787
    5. 'y' → logprob: -4.414094924926758
    6. ' def' → logprob: -5.539094924926758
    7. '(' → logprob: -5.664094924926758
    8. ' y' → logprob: -5.664094924926758
    9. '(x' → logprob: -5.914094924926758
    10. '(y' → logprob: -6.164094924926758

Token 196: ' y' (ID: 342)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.40814122557640076
    2. ' return' → logprob: -1.7831412553787231
    3. 'x' → logprob: -2.1581411361694336
    4. '   ' → logprob: -3.2831411361694336
    5. 'y' (adapté à ' y') → logprob: -4.533141136169434
    6. ' x' → logprob: -6.408141136169434
    7. ' y' → logprob: -6.533141136169434
    8. ' ' → logprob: -9.908141136169434
    9. '(x' → logprob: -10.908141136169434
    10. '(' → logprob: -11.283141136169434

Token 197: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6101779341697693
    2. '=' → logprob: -0.9851779341697693
    3. ',' → logprob: -2.485177993774414
    4. ' ,' → logprob: -10.110177993774414
    5. ' ' → logprob: -12.110177993774414
    6. '=int' → logprob: -12.610177993774414
    7. ' y' → logprob: -12.985177993774414
    8. '   ' → logprob: -13.110177993774414
    9. ')' → logprob: -13.110177993774414
    10. ' =
' → logprob: -13.735177993774414

Token 198: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.07889077812433243
    2. ' idx' → logprob: -2.578890800476074
    3. '	idx' → logprob: -14.203890800476074
    4. '(idx' → logprob: -16.328889846801758
    5. 'index' → logprob: -16.953889846801758
    6. '   ' → logprob: -17.203889846801758
    7. '[idx' → logprob: -17.578889846801758
    8. ' ' → logprob: -18.578889846801758
    9. 'int' → logprob: -18.703889846801758
    10. 'id' → logprob: -18.828889846801758

Token 199: ' //' (ID: 602)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8581864833831787
    2. ' =' → logprob: -0.9831864833831787
    3. '=' → logprob: -1.6081864833831787
    4. ' ,' → logprob: -6.983186721801758
    5. ' idx' → logprob: -7.858186721801758
    6. ' ' → logprob: -8.108186721801758
    7. 'idx' → logprob: -10.733186721801758
    8. '   ' → logprob: -11.108186721801758
    9. ' ' → logprob: -11.108186721801758
    10. ',
' → logprob: -11.233186721801758

Token 200: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.001170460251159966
    2. ' ' → logprob: -6.751170635223389
    3. '   ' → logprob: -15.75117015838623
    4. '' → logprob: -18.001171112060547
    5. '  ' → logprob: -18.251171112060547
    6. '٤' → logprob: -18.313671112060547
    7. '۴' → logprob: -18.563671112060547
    8. 'def' → logprob: -19.001171112060547
    9. '４' → logprob: -19.126171112060547
    10. '```' → logprob: -19.501171112060547

Token 201: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '' → logprob: -18.87500762939453
    4. '```' → logprob: -18.87500762939453
    5. '۴' → logprob: -19.50000762939453
    6. '   ' → logprob: -19.62500762939453
    7. '٤' → logprob: -19.62500762939453
    8. '４' → logprob: -19.81250762939453
    9. '४' → logprob: -20.25000762939453
    10. '
' → logprob: -20.31250762939453

Token 202: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09366120398044586
    2. 'x' → logprob: -2.593661308288574
    3. ',' → logprob: -4.968661308288574
    4. ' x' → logprob: -5.343661308288574
    5. '   ' → logprob: -6.843661308288574
    6. ',x' → logprob: -7.218661308288574
    7. '
' → logprob: -7.843661308288574
    8. '	x' → logprob: -7.968661308288574
    9. '\n' → logprob: -8.468661308288574
    10. ';' → logprob: -10.843661308288574

Token 203: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16035014390945435
    2. ' x' → logprob: -1.9103500843048096
    3. '   ' → logprob: -9.16034984588623
    4. '	x' → logprob: -11.16034984588623
    5. ' ' → logprob: -12.03534984588623
    6. '    ' → logprob: -14.66034984588623
    7. '  ' → logprob: -15.91034984588623
    8. '4' → logprob: -16.660350799560547
    9. '
' → logprob: -17.160350799560547
    10. ' ' → logprob: -17.410350799560547

Token 204: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.006715370807796717
    2. ' x' → logprob: -5.006715297698975
    3. '	x' → logprob: -17.381715774536133
    4. '4' → logprob: -20.506715774536133
    5. '   ' → logprob: -20.506715774536133
    6. ' ' → logprob: -20.881715774536133
    7. '_x' → logprob: -21.506715774536133
    8. '```' → logprob: -21.506715774536133
    9. '
' → logprob: -21.631715774536133
    10. '$x' → logprob: -22.006715774536133

Token 205: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407835721969604
    2. '=' → logprob: -0.974078357219696
    3. ' =
' → logprob: -14.349078178405762
    4. '=
' → logprob: -15.099078178405762
    5. ' ' → logprob: -15.974078178405762
    6. ',' → logprob: -16.474079132080078
    7. '＝' → logprob: -16.599079132080078
    8. '<|end|>' → logprob: -17.224079132080078
    9. '=

' → logprob: -17.224079132080078
    10. '=}' → logprob: -17.349079132080078

Token 206: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.014165744185447693
    2. ' idx' → logprob: -4.264165878295898
    3. '	idx' → logprob: -13.264165878295898
    4. '(idx' → logprob: -15.514165878295898
    5. ' ' → logprob: -15.639165878295898
    6. '[idx' → logprob: -16.1391658782959
    7. '   ' → logprob: -16.8891658782959
    8. '.idx' → logprob: -18.7641658782959
    9. '_idx' → logprob: -19.0141658782959
    10. 'indice' → logprob: -19.1391658782959

Token 207: ' %' (ID: 1851)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39312297105789185
    2. ' =' → logprob: -1.143122911453247
    3. ' idx' → logprob: -5.143123149871826
    4. 'idx' → logprob: -8.643122673034668
    5. ' ' → logprob: -8.768122673034668
    6. '%' → logprob: -10.393122673034668
    7. '[idx' → logprob: -11.268122673034668
    8. ' %' → logprob: -11.643122673034668
    9. ' y' → logprob: -12.768122673034668
    10. ' ' → logprob: -13.893122673034668

Token 208: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0009118211455643177
    2. ' ' → logprob: -7.000911712646484
    3. '   ' → logprob: -16.500911712646484
    4. ' ' → logprob: -16.500911712646484
    5. '' → logprob: -17.000911712646484
    6. '```' → logprob: -17.500911712646484
    7. '  ' → logprob: -18.500911712646484
    8. '٤' → logprob: -18.750911712646484
    9. '۴' → logprob: -19.563411712646484
    10. '４' → logprob: -20.000911712646484

Token 209: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '' → logprob: -17.750001907348633
    4. '```' → logprob: -18.125001907348633
    5. '۴' → logprob: -19.125001907348633
    6. '٤' → logprob: -19.250001907348633
    7. '४' → logprob: -20.312501907348633
    8. '   ' → logprob: -20.375001907348633
    9. '৪' → logprob: -20.375001907348633
    10. '４' → logprob: -20.437501907348633

Token 210: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030887113884091377
    2. ' return' → logprob: -3.9058871269226074
    3. 'return' → logprob: -4.655887126922607
    4. '	return' → logprob: -7.655887126922607
    5. '
' → logprob: -8.15588665008545
    6. ' ' → logprob: -11.40588665008545
    7. '   ' → logprob: -12.90588665008545
    8. '    
' → logprob: -13.15588665008545
    9. ':return' → logprob: -13.15588665008545
    10. ',' → logprob: -13.40588665008545

Token 211: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035930639132857323
    2. 'return' → logprob: -6.2535929679870605
    3. ' return' → logprob: -6.6285929679870605
    4. '	return' → logprob: -8.003593444824219
    5. '   ' → logprob: -13.253593444824219
    6. '
' → logprob: -13.378593444824219
    7. '    
' → logprob: -13.878593444824219
    8. ':return' → logprob: -14.378593444824219
    9. '       ' → logprob: -14.753593444824219
    10. ' ' → logprob: -15.003593444824219

Token 212: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.45323875546455383
    2. '   ' → logprob: -1.7032387256622314
    3. ' return' → logprob: -1.7032387256622314
    4. '	return' → logprob: -8.328238487243652
    5. ' ' → logprob: -13.203238487243652
    6. '
' → logprob: -13.703238487243652
    7. ' ' → logprob: -14.078238487243652
    8. 'eturn' → logprob: -14.203238487243652
    9. ':return' → logprob: -14.328238487243652
    10. '   ' → logprob: -15.078238487243652

Token 213: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.25391361117362976
    2. '(x' → logprob: -1.5039136409759521
    3. '(' → logprob: -6.628913402557373
    4. 'x' → logprob: -7.503913402557373
    5. ' x' → logprob: -9.128913879394531
    6. ' ' → logprob: -14.628913879394531
    7. '(y' → logprob: -15.003913879394531
    8. '(
' → logprob: -15.128913879394531
    9. ' ' → logprob: -15.753913879394531
    10. ',' → logprob: -16.62891387939453

Token 214: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.15310683415737e-05
    2. ' x' → logprob: -10.750021934509277
    3. ')x' → logprob: -19.50002098083496
    4. '	x' → logprob: -20.50002098083496
    5. ',x' → logprob: -22.75002098083496
    6. '(x' → logprob: -23.00002098083496
    7. '"x' → logprob: -23.12502098083496
    8. '   ' → logprob: -23.75002098083496
    9. '{x' → logprob: -24.62502098083496
    10. '_x' → logprob: -24.87502098083496

Token 215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026001494843512774
    2. ' ,' → logprob: -6.002600193023682
    3. ',y' → logprob: -9.002599716186523
    4. ' y' → logprob: -14.502599716186523
    5. ')' → logprob: -14.627599716186523
    6. ',
' → logprob: -16.002599716186523
    7. ' ' → logprob: -16.127599716186523
    8. ' )' → logprob: -16.627599716186523
    9. 'y' → logprob: -17.002599716186523
    10. ',)' → logprob: -17.127599716186523

Token 216: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1269282102584839
    2. ' y' → logprob: -2.1269283294677734
    3. ')y' → logprob: -15.876928329467773
    4. ' ' → logprob: -17.001928329467773
    5. '	y' → logprob: -17.001928329467773
    6. ' ' → logprob: -17.126928329467773
    7. ')' → logprob: -17.626928329467773
    8. ',y' → logprob: -20.001928329467773
    9. 'x' → logprob: -20.001928329467773
    10. ''y' → logprob: -20.251928329467773

Token 217: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ')
' → logprob: -12.87500286102295
    3. ' )' → logprob: -14.25000286102295
    4. ')

' → logprob: -17.250003814697266
    5. ')return' → logprob: -18.250003814697266
    6. '}' → logprob: -18.500003814697266
    7. ')#' → logprob: -18.875003814697266
    8. '   ' → logprob: -19.250003814697266
    9. ')}' → logprob: -19.500003814697266
    10. '<|end|>' → logprob: -19.875003814697266

Token 218: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0047170608304440975
    2. '

' → logprob: -6.254716873168945
    3. '
' → logprob: -6.629716873168945
    4. 'class' → logprob: -7.754716873168945
    5. '\' → logprob: -8.004716873168945
    6. '```' → logprob: -8.254716873168945
    7. '\n' → logprob: -9.129716873168945
    8. '#' → logprob: -9.629716873168945
    9. 'import' → logprob: -10.004716873168945
    10. '  
' → logprob: -10.629716873168945

Token 219: ' generate' (ID: 10419)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -1.1006203889846802
    2. ' solve' → logprob: -1.8506203889846802
    3. 'b' → logprob: -2.1006202697753906
    4. ' valid' → logprob: -2.3506202697753906
    5. ' main' → logprob: -2.6006202697753906
    6. 'solve' → logprob: -2.8506202697753906
    7. ' possible' → logprob: -3.4756202697753906
    8. ' is' → logprob: -3.7256202697753906
    9. ' parse' → logprob: -4.475620269775391
    10. 'main' → logprob: -4.850620269775391

Token 220: '_all' (ID: 13305)
  Prédit: '_moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_moves' → logprob: -0.19357091188430786
    2. '_positions' → logprob: -2.443570852279663
    3. '_all' → logprob: -3.443570852279663
    4. '_states' → logprob: -4.193571090698242
    5. '_per' → logprob: -4.693571090698242
    6. '_' → logprob: -5.068571090698242
    7. '_possible' → logprob: -5.318571090698242
    8. '_neighbors' → logprob: -5.443571090698242
    9. '_com' → logprob: -5.693571090698242
    10. '_move' → logprob: -6.318571090698242

Token 221: '_pairs' (ID: 90005)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.41146087646484375
    2. '_moves' → logprob: -1.5364608764648438
    3. '_states' → logprob: -2.6614608764648438
    4. '_com' → logprob: -4.036460876464844
    5. '_sub' → logprob: -4.536460876464844
    6. '_per' → logprob: -5.036460876464844
    7. '_masks' → logprob: -6.161460876464844
    8. '_configs' → logprob: -6.286460876464844
    9. '_possible' → logprob: -6.286460876464844
    10. '_pos' → logprob: -6.411460876464844

Token 222: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0019933474250137806
    2. ' ():' → logprob: -7.001993179321289
    3. '(' → logprob: -7.126993179321289
    4. '():
' → logprob: -8.376993179321289
    5. '()' → logprob: -11.001993179321289
    6. ' ()' → logprob: -12.251993179321289
    7. '_' → logprob: -12.251993179321289
    8. '_pairs' → logprob: -12.501993179321289
    9. 's' → logprob: -12.876993179321289
    10. '_positions' → logprob: -13.126993179321289

Token 223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.254119336605072
    2. '():' → logprob: -1.7541193962097168
    3. '():
' → logprob: -3.004119396209717
    4. ':' → logprob: -6.754119396209717
    5. '()' → logprob: -8.004118919372559
    6. '(' → logprob: -9.879118919372559
    7. ':
' → logprob: -10.129118919372559
    8. '):' → logprob: -10.754118919372559
    9. ' ():' → logprob: -10.754118919372559
    10. '):
' → logprob: -11.254118919372559

Token 224: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.479457825422287
    2. ' pairs' → logprob: -1.2294578552246094
    3. 'pairs' → logprob: -2.8544578552246094
    4. ' return' → logprob: -3.6044578552246094
    5. 'return' → logprob: -6.854457855224609
    6. ' for' → logprob: -6.979457855224609
    7. ' all' → logprob: -7.229457855224609
    8. '    
' → logprob: -8.85445785522461
    9. ' result' → logprob: -8.85445785522461
    10. ' res' → logprob: -9.35445785522461

Token 225: ' Gén' (ID: 71828)
  Prédit: ' pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -0.4237549901008606
    2. 'pairs' → logprob: -1.2987549304962158
    3. 'return' → logprob: -3.298754930496216
    4. ' return' → logprob: -3.423754930496216
    5. ' all' → logprob: -7.048755168914795
    6. 'all' → logprob: -7.673755168914795
    7. 'positions' → logprob: -8.048754692077637
    8. ' positions' → logprob: -8.048754692077637
    9. '   ' → logprob: -8.923754692077637
    10. ' combos' → logprob: -9.298754692077637

Token 226: 'ère' (ID: 4346)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.23587870597839355
    2. 'ère' → logprob: -1.6108787059783936
    3. 'rate' → logprob: -5.485878944396973
    4. 'érer' → logprob: -5.485878944396973
    5. 'ere' → logprob: -7.485878944396973
    6. 'èr' → logprob: -7.860878944396973
    7. 'enerate' → logprob: -8.235878944396973
    8. 'ate' → logprob: -8.985878944396973
    9. 'ér' → logprob: -9.360878944396973
    10. '#' → logprob: -9.360878944396973

Token 227: ' toutes' (ID: 17502)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.06818349659442902
    2. ' combinations' → logprob: -3.443183422088623
    3. 'list' → logprob: -3.568183422088623
    4. 'com' → logprob: -5.943183422088623
    5. ' all' → logprob: -6.443183422088623
    6. ' [(' → logprob: -7.568183422088623
    7. '[(' → logprob: -7.693183422088623
    8. ' [' → logprob: -9.068183898925781
    9. ' comb' → logprob: -9.193183898925781
    10. 'all' → logprob: -9.443183898925781

Token 228: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.42105522751808167
    2. ' pairs' → logprob: -1.7960551977157593
    3. 'les' → logprob: -2.796055316925049
    4. ' comb' → logprob: -3.046055316925049
    5. 'com' → logprob: -4.296055316925049
    6. ' des' → logprob: -4.546055316925049
    7. 'pairs' → logprob: -4.546055316925049
    8. '_pairs' → logprob: -4.671055316925049
    9. ' combinations' → logprob: -4.921055316925049
    10. ' la' → logprob: -5.296055316925049

Token 229: ' p' (ID: 275)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comb' → logprob: -1.0176112651824951
    2. 'comb' → logprob: -2.017611265182495
    3. ' pairs' → logprob: -2.267611265182495
    4. 'pairs' → logprob: -2.267611265182495
    5. ' p' → logprob: -2.517611265182495
    6. 'com' → logprob: -2.517611265182495
    7. 'p' → logprob: -2.517611265182495
    8. 'positions' → logprob: -3.767611265182495
    9. ' combinations' → logprob: -4.267611503601074
    10. ' couples' → logprob: -4.517611503601074

Token 230: 'aires' (ID: 8507)
  Prédit: 'airs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.13445214927196503
    2. 'os' → logprob: -2.5094521045684814
    3. 'air' → logprob: -4.1344523429870605
    4. 'aires' → logprob: -4.5094523429870605
    5. 'ar' → logprob: -5.2594523429870605
    6. 'a' → logprob: -5.7594523429870605
    7. 'r' → logprob: -6.0094523429870605
    8. 'oss' → logprob: -6.1344523429870605
    9. ' os' → logprob: -7.5094523429870605
    10. 'pairs' → logprob: -7.5094523429870605

Token 231: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4620344340801239
    2. '(range' → logprob: -1.5870344638824463
    3. '()' → logprob: -2.8370344638824463
    4. ' de' → logprob: -3.4620344638824463
    5. 'de' → logprob: -4.587034225463867
    6. ' (' → logprob: -4.587034225463867
    7. 'com' → logprob: -4.837034225463867
    8. '((' → logprob: -5.087034225463867
    9. 'd' → logprob: -5.212034225463867
    10. ' d' → logprob: -5.462034225463867

Token 232: ' positions' (ID: 15897)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.27087125182151794
    2. ' range' → logprob: -2.020871162414551
    3. 'positions' → logprob: -2.520871162414551
    4. ' positions' → logprob: -4.270871162414551
    5. '(range' → logprob: -5.020871162414551
    6. 'indices' → logprob: -6.395871162414551
    7. '[' → logprob: -7.270871162414551
    8. 'com' → logprob: -7.770871162414551
    9. ' indices' → logprob: -7.770871162414551
    10. '(' → logprob: -8.52087116241455

Token 233: ' distinct' (ID: 16913)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0408740043640137
    2. '()' → logprob: -1.0408740043640137
    3. '():' → logprob: -2.4158740043640137
    4. '(range' → logprob: -2.5408740043640137
    5. '   ' → logprob: -2.6658740043640137
    6. ' (' → logprob: -4.290874004364014
    7. '((' → logprob: -4.415874004364014
    8. '():
' → logprob: -4.665874004364014
    9. 'def' → logprob: -5.915874004364014
    10. ' for' → logprob: -6.040874004364014

Token 234: 'es' (ID: 268)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.140712022781372
    2. '(' → logprob: -1.390712022781372
    3. ' (' → logprob: -1.390712022781372
    4. 'def' → logprob: -3.765712022781372
    5. ',' → logprob: -4.015711784362793
    6. ')' → logprob: -4.015711784362793
    7. '_' → logprob: -4.140711784362793
    8. ' ' → logprob: -4.515711784362793
    9. '_positions' → logprob: -4.515711784362793
    10. '(pos' → logprob: -4.765711784362793

Token 235: ' possibles' (ID: 97753)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7212929129600525
    2. '   ' → logprob: -1.8462929725646973
    3. '():' → logprob: -1.8462929725646973
    4. '(' → logprob: -1.9712929725646973
    5. '(range' → logprob: -3.2212929725646973
    6. '():
' → logprob: -4.721292972564697
    7. '()
' → logprob: -5.721292972564697
    8. ' ()' → logprob: -6.971292972564697
    9. ' (' → logprob: -7.096292972564697
    10. ':' → logprob: -7.096292972564697

Token 236: ' sur' (ID: 1512)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.447035014629364
    2. '()' → logprob: -1.4470350742340088
    3. '   ' → logprob: -2.947035074234009
    4. '():
' → logprob: -3.572035074234009
    5. '(' → logprob: -3.572035074234009
    6. '(range' → logprob: -5.32203483581543
    7. ':' → logprob: -5.69703483581543
    8. '()
' → logprob: -6.57203483581543
    9. ' ()' → logprob: -6.94703483581543
    10. 'return' → logprob: -7.07203483581543

Token 237: ' le' (ID: 505)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.49037253856658936
    2. ' range' → logprob: -0.9903725385665894
    3. ' la' → logprob: -4.490372657775879
    4. '4' → logprob: -6.365372657775879
    5. 'la' → logprob: -6.615372657775879
    6. '16' → logprob: -7.490372657775879
    7. '[(' → logprob: -7.615372657775879
    8. '(range' → logprob: -8.115372657775879
    9. '[' → logprob: -8.865372657775879
    10. ' le' → logprob: -8.990372657775879

Token 238: ' board' (ID: 6796)
  Prédit: ' plateau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plateau' → logprob: -0.5469692349433899
    2. 'plate' → logprob: -1.1719691753387451
    3. 'board' → logprob: -2.421969175338745
    4. '4' → logprob: -4.796969413757324
    5. ' board' → logprob: -4.796969413757324
    6. ' plate' → logprob: -5.671969413757324
    7. ' ' → logprob: -6.046969413757324
    8. '16' → logprob: -8.921969413757324
    9. ' grid' → logprob: -10.296969413757324
    10. '_' → logprob: -10.421969413757324

Token 239: ' ' (ID: 220)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.05786668881773949
    2. '()' → logprob: -3.5578665733337402
    3. '():
' → logprob: -3.6828665733337402
    4. '   ' → logprob: -6.80786657333374
    5. '(' → logprob: -7.05786657333374
    6. ' ():' → logprob: -8.307867050170898
    7. ':' → logprob: -8.932867050170898
    8. ' ()' → logprob: -9.182867050170898
    9. ' ' → logprob: -10.182867050170898
    10. '()
' → logprob: -11.057867050170898

Token 240: '4' (ID: 19)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1752185821533203
    2. '4' → logprob: -1.3002185821533203
    3. '   ' → logprob: -2.0502185821533203
    4. '()' → logprob: -2.5502185821533203
    5. '(range' → logprob: -2.8002185821533203
    6. ':' → logprob: -2.9252185821533203
    7. 'for' → logprob: -3.6752185821533203
    8. 'range' → logprob: -4.05021858215332
    9. ',' → logprob: -4.67521858215332
    10. ' ' → logprob: -4.80021858215332

Token 241: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0008077251841314137
    2. 'def' → logprob: -8.250807762145996
    3. 'for' → logprob: -8.250807762145996
    4. ',' → logprob: -9.125807762145996
    5. ' x' → logprob: -9.750807762145996
    6. '4' → logprob: -10.125807762145996
    7. '   ' → logprob: -10.750807762145996
    8. ' for' → logprob: -11.375807762145996
    9. ',
' → logprob: -11.500807762145996
    10. '0' → logprob: -11.875807762145996

Token 242: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.5928495486150496e-05
    2. ' ' → logprob: -11.750016212463379
    3. 'range' → logprob: -13.125016212463379
    4. '```' → logprob: -13.125016212463379
    5. 'def' → logprob: -13.250016212463379
    6. ' range' → logprob: -15.125016212463379
    7. '16' → logprob: -15.375016212463379
    8. 'x' → logprob: -15.500016212463379
    9. 'for' → logprob: -15.500016212463379
    10. '<|end|>' → logprob: -15.500016212463379

Token 243: '
' (ID: 198)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.545897901058197
    2. '():
' → logprob: -1.5458979606628418
    3. '   ' → logprob: -1.6708979606628418
    4. '()' → logprob: -4.045897960662842
    5. ':' → logprob: -6.920897960662842
    6. '(' → logprob: -7.420897960662842
    7. '
' → logprob: -9.420897483825684
    8. ':
' → logprob: -9.920897483825684
    9. ' ():' → logprob: -9.920897483825684
    10. '    
' → logprob: -10.170897483825684

Token 244: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00026538874953985214
    2. 'pairs' → logprob: -8.875265121459961
    3. '    
' → logprob: -10.250265121459961
    4. 'positions' → logprob: -10.500265121459961
    5. '
' → logprob: -10.875265121459961
    6. ' pairs' → logprob: -11.375265121459961
    7. '```' → logprob: -12.000265121459961
    8. ':' → logprob: -12.125265121459961
    9. 'def' → logprob: -12.250265121459961
    10. 'indices' → logprob: -13.125265121459961

Token 245: ' all' (ID: 722)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.8413999676704407
    2. 'return' → logprob: -1.716399908065796
    3. ' return' → logprob: -1.966399908065796
    4. ' pairs' → logprob: -2.341399908065796
    5. 'positions' → logprob: -2.591399908065796
    6. '   ' → logprob: -3.341399908065796
    7. ' positions' → logprob: -3.341399908065796
    8. 'for' → logprob: -5.591400146484375
    9. ' for' → logprob: -6.216400146484375
    10. 'all' (adapté à ' all') → logprob: -7.841400146484375

Token 246: '_pos' (ID: 14692)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.5033210515975952
    2. '_pairs' → logprob: -1.0033210515975952
    3. '_com' → logprob: -3.8783211708068848
    4. '_' → logprob: -5.378321170806885
    5. '_indices' → logprob: -6.253321170806885
    6. ' =' → logprob: -8.503320693969727
    7. '_pos' → logprob: -8.503320693969727
    8. '(' → logprob: -8.628320693969727
    9. '_tokens' → logprob: -8.753320693969727
    10. 'com' → logprob: -8.753320693969727

Token 247: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5186551809310913
    2. '=' → logprob: -1.0186551809310913
    3. 'itions' → logprob: -3.143655300140381
    4. 's' → logprob: -8.268654823303223
    5. '_positions' → logprob: -10.143654823303223
    6. 'ITIONS' → logprob: -10.393654823303223
    7. 'essions' → logprob: -10.643654823303223
    8. 'positions' → logprob: -10.893654823303223
    9. '   ' → logprob: -10.893654823303223
    10. 'ibilities' → logprob: -11.268654823303223

Token 248: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.10254686325788498
    2. ' [(' → logprob: -2.3525469303131104
    3. ' list' → logprob: -6.852546691894531
    4. 'range' → logprob: -7.477546691894531
    5. ' range' → logprob: -7.852546691894531
    6. 'list' → logprob: -8.352546691894531
    7. ' [' → logprob: -9.977546691894531
    8. '[' → logprob: -10.352546691894531
    9. '[list' → logprob: -11.852546691894531
    10. '[((' → logprob: -13.352546691894531

Token 249: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0011792739387601614
    2. 'i' → logprob: -6.751179218292236
    3. ' x' → logprob: -12.376179695129395
    4. '(x' → logprob: -12.751179695129395
    5. '0' → logprob: -14.126179695129395
    6. 'ix' → logprob: -15.126179695129395
    7. ')' → logprob: -15.376179695129395
    8. ')x' → logprob: -16.126178741455078
    9. '   ' → logprob: -16.376178741455078
    10. 'a' → logprob: -16.501178741455078

Token 250: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.059153925627470016
    2. ' ,' → logprob: -3.0591540336608887
    3. ',y' → logprob: -4.559154033660889
    4. ' ' → logprob: -11.18415355682373
    5. 'y' → logprob: -11.80915355682373
    6. ' y' → logprob: -12.55915355682373
    7. '=' → logprob: -12.80915355682373
    8. ',i' → logprob: -12.80915355682373
    9. '   ' → logprob: -13.30915355682373
    10. ',j' → logprob: -13.93415355682373

Token 251: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005265804938971996
    2. ' )' → logprob: -8.000526428222656
    3. ',' → logprob: -8.750526428222656
    4. ')
' → logprob: -11.250526428222656
    5. ',)' → logprob: -11.875526428222656
    6. ' ,' → logprob: -12.500526428222656
    7. '   ' → logprob: -12.750526428222656
    8. ',x' → logprob: -13.250526428222656
    9. ' ' → logprob: -13.875526428222656
    10. 'for' → logprob: -14.750526428222656

Token 252: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7209457755088806
    2. 'for' → logprob: -0.7209457755088806
    3. ')' → logprob: -3.7209458351135254
    4. '   ' → logprob: -6.095945835113525
    5. ',' → logprob: -7.845945835113525
    6. ' ' → logprob: -8.220945358276367
    7. '	for' → logprob: -9.220945358276367
    8. '    ' → logprob: -9.220945358276367
    9. ' )' → logprob: -10.095945358276367
    10. '  ' → logprob: -10.970945358276367

Token 253: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00536692189052701
    2. ' x' → logprob: -5.255366802215576
    3. 'y' → logprob: -9.005367279052734
    4. ' y' → logprob: -11.505367279052734
    5. '0' → logprob: -16.380367279052734
    6. '	x' → logprob: -16.630367279052734
    7. ' ' → logprob: -17.005367279052734
    8. ')x' → logprob: -18.880367279052734
    9. ' ' → logprob: -19.630367279052734
    10. '_x' → logprob: -19.755367279052734

Token 254: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004640049301087856
    2. 'in' → logprob: -5.379640102386475
    3. ' ' → logprob: -11.629639625549316
    4. 'import' → logprob: -12.754639625549316
    5. '=' → logprob: -13.504639625549316
    6. 'range' → logprob: -13.504639625549316
    7. '0' → logprob: -14.004639625549316
    8. '   ' → logprob: -14.504639625549316
    9. '
' → logprob: -14.504639625549316
    10. ' ' → logprob: -14.754639625549316

Token 255: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020354038861114532
    2. ' range' → logprob: -8.500203132629395
    3. '0' → logprob: -17.25020408630371
    4. '	range' → logprob: -18.87520408630371
    5. '(range' → logprob: -19.12520408630371
    6. 'rang' → logprob: -20.25020408630371
    7. '   ' → logprob: -21.00020408630371
    8. '
' → logprob: -21.25020408630371
    9. ' ' → logprob: -21.37520408630371
    10. 'ran' → logprob: -21.50020408630371

Token 256: '(' (ID: 7)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.005439369939267635
    2. '(' → logprob: -5.255439281463623
    3. ' ' → logprob: -8.505439758300781
    4. 'def' → logprob: -13.880439758300781
    5. '   ' → logprob: -14.255439758300781
    6. '0' → logprob: -14.630439758300781
    7. '=' → logprob: -15.505439758300781
    8. ',' → logprob: -15.755439758300781
    9. '(
' → logprob: -15.880439758300781
    10. ' (' → logprob: -16.19293975830078

Token 257: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.9160102712921798e-05
    2. ' ' → logprob: -10.500029563903809
    3. '0' → logprob: -13.500029563903809
    4. '1' → logprob: -17.000028610229492
    5. ')' → logprob: -18.125028610229492
    6. '
' → logprob: -18.625028610229492
    7. '   ' → logprob: -18.750028610229492
    8. '' → logprob: -19.125028610229492
    9. '```' → logprob: -19.250028610229492
    10. 'def' → logprob: -19.625028610229492

Token 258: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000421974720666185
    2. ' )' → logprob: -8.000421524047852
    3. 'for' → logprob: -10.000421524047852
    4. ')
' → logprob: -11.125421524047852
    5. '   ' → logprob: -11.375421524047852
    6. ' for' → logprob: -11.625421524047852
    7. ' ' → logprob: -12.500421524047852
    8. ')]' → logprob: -13.625421524047852
    9. ',' → logprob: -15.250421524047852
    10. ']' → logprob: -15.750421524047852

Token 259: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02192217856645584
    2. 'for' → logprob: -3.8969221115112305
    3. '   ' → logprob: -6.7719221115112305
    4. ')' → logprob: -9.52192211151123
    5. '	for' → logprob: -9.64692211151123
    6. ' ' → logprob: -9.64692211151123
    7. '    ' → logprob: -11.02192211151123
    8. '       ' → logprob: -12.89692211151123
    9. '  ' → logprob: -13.02192211151123
    10. ']' → logprob: -13.27192211151123

Token 260: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.029750604182481766
    2. ' x' → logprob: -3.5297505855560303
    3. '	x' → logprob: -16.65475082397461
    4. '(x' → logprob: -17.27975082397461
    5. ')x' → logprob: -17.27975082397461
    6. ' ' → logprob: -18.02975082397461
    7. 'range' → logprob: -19.02975082397461
    8. ' range' → logprob: -19.90475082397461
    9. '"x' → logprob: -20.27975082397461
    10. '$x' → logprob: -20.40475082397461

Token 261: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043032076209783554
    2. 'in' → logprob: -3.168032169342041
    3. '(' → logprob: -11.168031692504883
    4. '   ' → logprob: -12.168031692504883
    5. ')' → logprob: -12.418031692504883
    6. ' ' → logprob: -13.543031692504883
    7. '4' → logprob: -13.793031692504883
    8. '0' → logprob: -14.043031692504883
    9. 'In' → logprob: -14.168031692504883
    10. 'range' → logprob: -14.168031692504883

Token 262: ' range' (ID: 3352)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.19714391231536865
    2. 'range' → logprob: -1.9471439123153687
    3. ' range' → logprob: -3.322144031524658
    4. ' ' → logprob: -8.6971435546875
    5. '(' → logprob: -13.3221435546875
    6. '(range' → logprob: -13.3221435546875
    7. '   ' → logprob: -15.0721435546875
    8. '[' → logprob: -16.0721435546875
    9. '	range' → logprob: -16.4471435546875
    10. ' xrange' → logprob: -16.9471435546875

Token 263: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07893606275320053
    2. '4' → logprob: -2.5789361000061035
    3. 'range' → logprob: -10.203935623168945
    4. ' ' → logprob: -12.203935623168945
    5. ' range' → logprob: -13.328935623168945
    6. ' (' → logprob: -13.828935623168945
    7. '   ' → logprob: -14.328935623168945
    8. '(range' → logprob: -14.453935623168945
    9. '(
' → logprob: -15.578935623168945
    10. '
' → logprob: -15.953935623168945

Token 264: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.6087021473795176e-05
    2. ' ' → logprob: -10.000045776367188
    3. '0' → logprob: -15.250045776367188
    4. '1' → logprob: -15.750045776367188
    5. ')' → logprob: -15.875045776367188
    6. '   ' → logprob: -16.750045776367188
    7. '' → logprob: -17.875045776367188
    8. '
' → logprob: -18.625045776367188
    9. '(' → logprob: -18.937545776367188
    10. '5' → logprob: -19.000045776367188

Token 265: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00023071514442563057
    2. ' )' → logprob: -9.00023078918457
    3. ')' → logprob: -9.87523078918457
    4. ')]
' → logprob: -10.25023078918457
    5. ']' → logprob: -11.25023078918457
    6. '   ' → logprob: -13.12523078918457
    7. ' ]' → logprob: -13.62523078918457
    8. ')])' → logprob: -14.12523078918457
    9. ')]

' → logprob: -14.25023078918457
    10. '')]' → logprob: -14.62523078918457

Token 266: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001290454383706674
    2. '
' → logprob: -9.750128746032715
    3. 'return' → logprob: -10.125128746032715
    4. '    
' → logprob: -10.750128746032715
    5. 'pairs' → logprob: -13.125128746032715
    6. ' return' → logprob: -13.375128746032715
    7. 'def' → logprob: -13.375128746032715
    8. ',' → logprob: -13.625128746032715
    9. '  
' → logprob: -14.500128746032715
    10. ')' → logprob: -14.625128746032715

Token 267: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.694425106048584
    2. '   ' → logprob: -0.944425106048584
    3. ' return' → logprob: -2.819425106048584
    4. 'pairs' → logprob: -3.069425106048584
    5. ' pairs' → logprob: -5.819425106048584
    6. 'for' → logprob: -6.444425106048584
    7. 'all' → logprob: -7.569425106048584
    8. ' for' → logprob: -8.569425582885742
    9. ' all' → logprob: -9.444425582885742
    10. '	return' → logprob: -9.819425582885742

Token 268: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2670711874961853
    2. ' list' → logprob: -1.76707124710083
    3. 'com' → logprob: -3.01707124710083
    4. '[(' → logprob: -5.01707124710083
    5. ' combinations' → logprob: -5.26707124710083
    6. '[list' → logprob: -6.01707124710083
    7. ' [(' → logprob: -8.892070770263672
    8. ' [' → logprob: -9.142070770263672
    9. '[' → logprob: -9.767070770263672
    10. '(com' → logprob: -10.392070770263672

Token 269: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.0003433296224102378
    2. '(per' → logprob: -8.500343322753906
    3. 'com' → logprob: -9.375343322753906
    4. '(' → logprob: -10.000343322753906
    5. ' (' → logprob: -12.500343322753906
    6. '=com' → logprob: -13.250343322753906
    7. '   ' → logprob: -13.750343322753906
    8. ')' → logprob: -14.000343322753906
    9. '((' → logprob: -14.250343322753906
    10. 'per' → logprob: -14.625343322753906

Token 270: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.0002980432182084769
    2. 'b' → logprob: -8.125298500061035
    3. 'positions' → logprob: -14.625298500061035
    4. '[b' → logprob: -14.750298500061035
    5. '(b' → logprob: -15.125298500061035
    6. '[' → logprob: -15.875298500061035
    7. 'bb' → logprob: -16.12529754638672
    8. '(' → logprob: -16.25029754638672
    9. '```' → logprob: -16.25029754638672
    10. '\b' → logprob: -16.75029754638672

Token 271: '(all' (ID: 34727)
  Prédit: '(all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(all' → logprob: -9.615255839889869e-05
    2. ' (' → logprob: -9.500096321105957
    3. ')' → logprob: -11.375096321105957
    4. 'all' → logprob: -12.500096321105957
    5. '(' → logprob: -12.625096321105957
    6. ')(' → logprob: -14.000096321105957
    7. ' all' → logprob: -14.750096321105957
    8. '(
' → logprob: -15.125096321105957
    9. '(range' → logprob: -15.500096321105957
    10. ',' → logprob: -15.625096321105957

Token 272: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -2.339278580620885e-06
    2. 'pos' → logprob: -13.250001907348633
    3. 'all' → logprob: -15.125001907348633
    4. '_positions' → logprob: -16.125001907348633
    5. 'Pos' → logprob: -16.500001907348633
    6. '(all' → logprob: -17.375001907348633
    7. 'positions' → logprob: -18.125001907348633
    8. ')' → logprob: -19.125001907348633
    9. ' _' → logprob: -19.125001907348633
    10. ' ' → logprob: -19.500001907348633

Token 273: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002349838148802519
    2. ' ,' → logprob: -6.502349853515625
    3. '(),' → logprob: -7.252349853515625
    4. '(' → logprob: -9.002349853515625
    5. ',(' → logprob: -12.502349853515625
    6. '   ' → logprob: -12.877349853515625
    7. '),' → logprob: -13.252349853515625
    8. ' ' → logprob: -13.252349853515625
    9. '2' → logprob: -13.752349853515625
    10. ')' → logprob: -13.752349853515625

Token 274: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002806417876854539
    2. ' ' → logprob: -5.877806186676025
    3. '   ' → logprob: -13.627806663513184
    4. '  ' → logprob: -15.002806663513184
    5. '    ' → logprob: -17.252805709838867
    6. ')' → logprob: -18.002805709838867
    7. ' ' → logprob: -18.252805709838867
    8. '۲' → logprob: -19.252805709838867
    9. '２' → logprob: -19.377805709838867
    10. '     ' → logprob: -19.377805709838867

Token 275: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00033593899570405483
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.125335693359375
    4. '  ' → logprob: -16.000335693359375
    5. ')' → logprob: -17.125335693359375
    6. '۲' → logprob: -17.375335693359375
    7. '２' → logprob: -18.250335693359375
    8. '
' → logprob: -18.500335693359375
    9. 'def' → logprob: -18.562835693359375
    10. '    ' → logprob: -18.562835693359375

Token 276: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005544631858356297
    2. ')' → logprob: -7.50055456161499
    3. ')))' → logprob: -14.125554084777832
    4. '))
' → logprob: -14.750554084777832
    5. ' ))' → logprob: -15.250554084777832
    6. '   ' → logprob: -17.00055503845215
    7. '()))' → logprob: -17.12555503845215
    8. '),' → logprob: -18.00055503845215
    9. '));' → logprob: -18.25055503845215
    10. ')}' → logprob: -18.25055503845215

Token 277: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 278: ' canonical' (ID: 91323)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.0091087818145752
    2. ' all' → logprob: -2.009108781814575
    3. ' valid' → logprob: -2.134108781814575
    4. ' generate' → logprob: -2.259108781814575
    5. ' is' → logprob: -2.759108781814575
    6. ' possible' → logprob: -2.884108781814575
    7. ' solve' → logprob: -3.134108781814575
    8. 'all' → logprob: -4.134108543395996
    9. 'generate' → logprob: -4.509108543395996
    10. ' adjacent' → logprob: -4.509108543395996

Token 279: '_pattern' (ID: 50002)
  Prédit: '_form'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_form' → logprob: -0.01911584846675396
    2. '(' → logprob: -5.144115924835205
    3. 'ize' → logprob: -5.144115924835205
    4. '_position' → logprob: -6.394115924835205
    5. '_forms' → logprob: -6.769115924835205
    6. '_positions' → logprob: -7.269115924835205
    7. '_rep' → logprob: -7.394115924835205
    8. 'form' → logprob: -8.269115447998047
    9. '_' → logprob: -8.269115447998047
    10. '_tuple' → logprob: -8.394115447998047

Token 280: '(p' (ID: 2407)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07003168761730194
    2. '():' → logprob: -3.5700316429138184
    3. '(pos' → logprob: -4.195031642913818
    4. '(p' → logprob: -4.320031642913818
    5. '(_' → logprob: -6.070031642913818
    6. '(s' → logprob: -6.445031642913818
    7. '(pattern' → logprob: -6.570031642913818
    8. 's' → logprob: -6.570031642913818
    9. '_' → logprob: -7.445031642913818
    10. '(:' → logprob: -7.445031642913818

Token 281: 'airs' (ID: 6498)
  Prédit: 'attern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attern' → logprob: -0.23146231472492218
    2. 'os' → logprob: -1.7314623594284058
    3. 'at' → logprob: -4.231462478637695
    4. '):' → logprob: -5.106462478637695
    5. ')' → logprob: -5.606462478637695
    6. 'air' → logprob: -6.106462478637695
    7. 'osition' → logprob: -7.231462478637695
    8. 'airs' → logprob: -7.356462478637695
    9. 'r' → logprob: -7.856462478637695
    10. '):
' → logprob: -8.606462478637695

Token 282: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014300662092864513
    2. '):
' → logprob: -4.26430082321167
    3. ')' → logprob: -9.764300346374512
    4. ' ):' → logprob: -9.889300346374512
    5. '(p' → logprob: -10.889300346374512
    6. ':' → logprob: -12.889300346374512
    7. '):
' → logprob: -13.264300346374512
    8. ',' → logprob: -13.514300346374512
    9. '(' → logprob: -14.014300346374512
    10. '):

' → logprob: -14.139300346374512

Token 283: '   ' (ID: 271)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.06924056261777878
    2. ':' → logprob: -2.8192405700683594
    3. '   ' → logprob: -5.569240570068359
    4. '(' → logprob: -5.944240570068359
    5. '():' → logprob: -8.69424057006836
    6. ' :' → logprob: -8.94424057006836
    7. '(pair' → logprob: -9.06924057006836
    8. '(s' → logprob: -10.06924057006836
    9. '(
' → logprob: -10.19424057006836
    10. '):' → logprob: -10.31924057006836

Token 284: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3872375190258026
    2. ' sorted' → logprob: -2.512237548828125
    3. 'def' → logprob: -3.512237548828125
    4. ' pairs' → logprob: -3.512237548828125
    5. ' set' → logprob: -3.762237548828125
    6. ':' → logprob: -3.762237548828125
    7. ' def' → logprob: -3.887237548828125
    8. ' (' → logprob: -4.137237548828125
    9. ':
' → logprob: -4.387237548828125
    10. ' (
' → logprob: -4.512237548828125

Token 285: ' Le' (ID: 2018)
  Prédit: ' #'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' #' → logprob: -0.4450427293777466
    2. ' pairs' → logprob: -1.8200427293777466
    3. '#' → logprob: -2.820042610168457
    4. ' sorted' → logprob: -3.070042610168457
    5. ' def' → logprob: -3.445042610168457
    6. 'def' → logprob: -3.695042610168457
    7. '   ' → logprob: -4.195042610168457
    8. ' if' → logprob: -4.945042610168457
    9. 'pairs' → logprob: -6.070042610168457
    10. ' """
' → logprob: -6.195042610168457

Token 286: ' pattern' (ID: 8302)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1591566801071167
    2. ' def' → logprob: -1.4091566801071167
    3. 'def' → logprob: -2.2841567993164062
    4. 's' → logprob: -3.2841567993164062
    5. ' '' → logprob: -3.2841567993164062
    6. ' "' → logprob: -3.4091567993164062
    7. ' =' → logprob: -3.4091567993164062
    8. ' sorted' → logprob: -3.6591567993164062
    9. ' set' → logprob: -4.034156799316406
    10. ''' → logprob: -4.034156799316406

Token 287: ' canon' (ID: 48572)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0068108150735497475
    2. '=' → logprob: -5.131810665130615
    3. 's' → logprob: -7.881810665130615
    4. ':' → logprob: -9.131811141967773
    5. ' est' → logprob: -9.506811141967773
    6. 'def' → logprob: -9.631811141967773
    7. ',' → logprob: -10.131811141967773
    8. ' s' → logprob: -10.631811141967773
    9. '_' → logprob: -10.881811141967773
    10. ' =
' → logprob: -11.006811141967773

Token 288: 'ique' (ID: 2222)
  Prédit: 'ical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ical' → logprob: -0.6948366165161133
    2. 'ique' → logprob: -0.6948366165161133
    3. 'al' → logprob: -6.819836616516113
    4. 'ic' → logprob: -8.194836616516113
    5. 'def' → logprob: -9.319836616516113
    6. '```' → logprob: -9.694836616516113
    7. 'ial' → logprob: -10.819836616516113
    8. 'e' → logprob: -10.944836616516113
    9. 'iques' → logprob: -11.319836616516113
    10. 'icale' → logprob: -11.319836616516113

Token 289: ' est' (ID: 893)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7968699336051941
    2. ' =' → logprob: -1.0468699932098389
    3. '(p' → logprob: -2.046869993209839
    4. '=' → logprob: -3.921869993209839
    5. 'def' → logprob: -4.42186975479126
    6. ':' → logprob: -4.67186975479126
    7. 's' → logprob: -4.92186975479126
    8. ' (' → logprob: -5.04686975479126
    9. ' est' → logprob: -5.29686975479126
    10. ' :' → logprob: -6.04686975479126

Token 290: ' la' (ID: 557)
  Prédit: ' tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.14865374565124512
    2. 'tuple' → logprob: -2.773653745651245
    3. ' sorted' → logprob: -2.898653745651245
    4. 'sorted' → logprob: -4.273653984069824
    5. ' lambda' → logprob: -5.273653984069824
    6. 'fro' → logprob: -7.773653984069824
    7. '(tuple' → logprob: -8.523653984069824
    8. ' fro' → logprob: -8.523653984069824
    9. 'lambda' → logprob: -8.648653984069824
    10. ' tuples' → logprob: -8.773653984069824

Token 291: ' représentation' (ID: 162614)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.5445835590362549
    2. ' tuple' → logprob: -1.4195835590362549
    3. 'sorted' → logprob: -2.044583559036255
    4. ' sorted' → logprob: -3.169583559036255
    5. 'fro' → logprob: -6.044583320617676
    6. ' liste' → logprob: -6.419583320617676
    7. 'liste' → logprob: -7.794583320617676
    8. 'sort' → logprob: -7.919583320617676
    9. 'min' → logprob: -8.044583320617676
    10. 'set' → logprob: -8.544583320617676

Token 292: ' du' (ID: 1462)
  Prédit: ' minimale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' minimale' → logprob: -0.6215806007385254
    2. ' minimal' → logprob: -1.8715806007385254
    3. ' standard' → logprob: -2.2465806007385254
    4. ' normal' → logprob: -2.3715806007385254
    5. ' canon' → logprob: -3.2465806007385254
    6. 'min' → logprob: -4.246580600738525
    7. 'normal' → logprob: -4.871580600738525
    8. ' la' → logprob: -4.871580600738525
    9. ' normale' → logprob: -5.246580600738525
    10. ' des' → logprob: -5.246580600738525

Token 293: ' motif' (ID: 72753)
  Prédit: ' tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -1.0801701545715332
    2. 'tuple' → logprob: -2.080170154571533
    3. 'pattern' → logprob: -2.205170154571533
    4. ' set' → logprob: -2.330170154571533
    5. ' pattern' → logprob: -2.705170154571533
    6. 'p' → logprob: -2.955170154571533
    7. 'set' → logprob: -3.455170154571533
    8. 'pairs' → logprob: -3.580170154571533
    9. 'fro' → logprob: -3.705170154571533
    10. 'sorted' → logprob: -3.955170154571533

Token 294: '
' (ID: 198)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.9111831784248352
    2. ' tri' → logprob: -0.9111831784248352
    3. ' sous' → logprob: -3.0361831188201904
    4. ' la' → logprob: -3.0361831188201904
    5. ' normal' → logprob: -3.6611831188201904
    6. ' standard' → logprob: -3.9111831188201904
    7. ' sorted' → logprob: -4.2861833572387695
    8. ' minimal' → logprob: -5.2861833572387695
    9. ' minimale' → logprob: -5.4111833572387695
    10. ' normalized' → logprob: -5.5361833572387695

Token 295: '   ' (ID: 271)
  Prédit: ' sous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sous' → logprob: -0.4626201093196869
    2. ' tri' → logprob: -1.8376201391220093
    3. ' des' → logprob: -2.2126200199127197
    4. ' standard' → logprob: -4.587620258331299
    5. ' sorted' → logprob: -4.587620258331299
    6. ' normal' → logprob: -4.712620258331299
    7. ' ' → logprob: -4.837620258331299
    8. ' la' → logprob: -4.962620258331299
    9. ' par' → logprob: -4.962620258331299
    10. ' normalized' → logprob: -4.962620258331299

Token 296: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0184810161590576
    2. ' sorted' → logprob: -1.3934810161590576
    3. '   ' → logprob: -2.1434810161590576
    4. 'sorted' → logprob: -2.2684810161590576
    5. ' des' → logprob: -3.2684810161590576
    6. ' sous' → logprob: -3.8934810161590576
    7. ' par' → logprob: -4.143481254577637
    8. ' ' → logprob: -4.143481254577637
    9. '(
' → logprob: -4.393481254577637
    10. '(p' → logprob: -5.018481254577637

Token 297: ' les' (ID: 1341)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6659168601036072
    2. ' sorted' → logprob: -2.040916919708252
    3. ' par' → logprob: -2.290916919708252
    4. ' tuple' → logprob: -2.665916919708252
    5. ' sous' → logprob: -3.165916919708252
    6. ' '' → logprob: -4.040916919708252
    7. ' en' → logprob: -4.415916919708252
    8. ''' → logprob: -4.415916919708252
    9. '   ' → logprob: -4.415916919708252
    10. 'sorted' → logprob: -5.040916919708252

Token 298: ' positions' (ID: 15897)
  Prédit: ' pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -1.215409278869629
    2. ' positions' → logprob: -1.465409278869629
    3. 'positions' → logprob: -1.590409278869629
    4. ' p' → logprob: -1.840409278869629
    5. 'pairs' → logprob: -3.715409278869629
    6. ' indices' → logprob: -3.840409278869629
    7. ' tuples' → logprob: -4.090409278869629
    8. 'p' → logprob: -4.215409278869629
    9. ' espaces' → logprob: -4.715409278869629
    10. 'indices' → logprob: -5.590409278869629

Token 299: ' sont' (ID: 5242)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.103173017501831
    2. ' des' → logprob: -1.228173017501831
    3. ',' → logprob: -2.103173017501831
    4. '<|end|>' → logprob: -2.478173017501831
    5. ' ,' → logprob: -3.228173017501831
    6. '_sorted' → logprob: -4.22817325592041
    7. ' sorted' → logprob: -4.47817325592041
    8. 'sorted' → logprob: -4.47817325592041
    9. 'des' → logprob: -4.47817325592041
    10. ' tri' → logprob: -4.47817325592041

Token 300: ' fixes' (ID: 60095)
  Prédit: ' tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tri' → logprob: -0.8449289798736572
    2. ' sorted' → logprob: -1.2199289798736572
    3. 'sorted' → logprob: -1.3449289798736572
    4. 'tri' → logprob: -4.344928741455078
    5. 'tr' → logprob: -7.344928741455078
    6. ' tr' → logprob: -8.219928741455078
    7. ' ' → logprob: -8.594928741455078
    8. '[' → logprob: -9.469928741455078
    9. '(sorted' → logprob: -9.469928741455078
    10. ' tuple' → logprob: -9.719928741455078

Token 301: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.954186737537384
    2. ' =' → logprob: -1.2041866779327393
    3. '(p' → logprob: -2.5791866779327393
    4. '<|end|>' → logprob: -2.7041866779327393
    5. ':' → logprob: -2.8291866779327393
    6. '   ' → logprob: -3.8291866779327393
    7. 'def' → logprob: -4.079186916351318
    8. '[' → logprob: -4.329186916351318
    9. '=' → logprob: -4.454186916351318
    10. ',
' → logprob: -4.954186916351318

Token 302: ' mais' (ID: 2899)
  Prédit: ' sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.4876915216445923
    2. ' tri' → logprob: -1.8626915216445923
    3. ' les' → logprob: -1.8626915216445923
    4. ' mais' → logprob: -4.112691402435303
    5. ' pairs' → logprob: -4.237691402435303
    6. 'sorted' → logprob: -4.237691402435303
    7. ' et' → logprob: -5.362691402435303
    8. '   ' → logprob: -5.612691402435303
    9. ' tr' → logprob: -6.112691402435303
    10. ' par' → logprob: -6.362691402435303

Token 303: ' on' (ID: 402)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.13358882069587708
    2. ' sorted' → logprob: -2.6335887908935547
    3. ' pairs' → logprob: -4.258588790893555
    4. 'les' → logprob: -4.758588790893555
    5. 'sorted' → logprob: -4.883588790893555
    6. ' leurs' → logprob: -5.258588790893555
    7. ' tri' → logprob: -5.383588790893555
    8. ' not' → logprob: -5.883588790893555
    9. ' la' → logprob: -6.258588790893555
    10. ' leur' → logprob: -6.758588790893555

Token 304: ' peut' (ID: 9216)
  Prédit: ' trie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trie' → logprob: -0.2156946063041687
    2. 'tr' → logprob: -3.2156946659088135
    3. ' applique' → logprob: -3.2156946659088135
    4. ' les' → logprob: -3.8406946659088135
    5. ' normal' → logprob: -4.340694427490234
    6. ' ord' → logprob: -4.715694427490234
    7. ' tr' → logprob: -4.965694427490234
    8. ' considère' → logprob: -4.965694427490234
    9. ' peut' → logprob: -5.215694427490234
    10. 'les' → logprob: -5.465694427490234

Token 305: ' perm' (ID: 5961)
  Prédit: ' appliquer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appliquer' → logprob: -1.1660865545272827
    2. ' tr' → logprob: -1.2910865545272827
    3. ' perm' → logprob: -1.6660865545272827
    4. 'tr' → logprob: -2.1660866737365723
    5. ' ré' → logprob: -3.9160866737365723
    6. ' les' → logprob: -4.041086673736572
    7. 'ré' → logprob: -4.291086673736572
    8. ' considérer' → logprob: -5.041086673736572
    9. ' déplacer' → logprob: -5.666086673736572
    10. 'ordon' → logprob: -5.791086673736572

Token 306: 'uter' (ID: 23469)
  Prédit: 'uter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uter' → logprob: -0.0002647927321959287
    2. 'ut' → logprob: -8.375265121459961
    3. 'utations' → logprob: -11.125265121459961
    4. 'utter' → logprob: -11.500265121459961
    5. 'utar' → logprob: -13.250265121459961
    6. 'ute' → logprob: -13.250265121459961
    7. 'uters' → logprob: -13.750265121459961
    8. 'u' → logprob: -14.125265121459961
    9. 'utet' → logprob: -14.250265121459961
    10. '#' → logprob: -14.375265121459961

Token 307: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.40144285559654236
    2. 'les' → logprob: -1.5264428853988647
    3. '(p' → logprob: -3.151442766189575
    4. ' pairs' → logprob: -3.276442766189575
    5. 'pairs' → logprob: -4.026443004608154
    6. 'the' → logprob: -5.776443004608154
    7. ' entre' → logprob: -6.026443004608154
    8. ' the' → logprob: -6.151443004608154
    9. '(' → logprob: -6.401443004608154
    10. 'p' → logprob: -6.651443004608154

Token 308: ' p' (ID: 275)
  Prédit: ' pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -1.1246435642242432
    2. 'pairs' → logprob: -1.1246435642242432
    3. 'p' → logprob: -1.8746435642242432
    4. ' p' → logprob: -2.124643564224243
    5. 'de' → logprob: -3.499643564224243
    6. 'positions' → logprob: -4.374643325805664
    7. ' deux' → logprob: -4.999643325805664
    8. ' éléments' → logprob: -5.374643325805664
    9. 'élé' → logprob: -5.749643325805664
    10. '2' → logprob: -5.749643325805664

Token 309: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.21415594220161438
    2. 'airs' → logprob: -1.964155912399292
    3. 'os' → logprob: -4.214156150817871
    4. 'a' → logprob: -4.339156150817871
    5. 'air' → logprob: -5.214156150817871
    6. 'positions' → logprob: -5.214156150817871
    7. 'pairs' → logprob: -5.964156150817871
    8. 'ai' → logprob: -6.589156150817871
    9. 'p' → logprob: -6.651656150817871
    10. 'ar' → logprob: -6.776656150817871

Token 310: '
' (ID: 198)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.15160325169563293
    2. ',' → logprob: -2.5266032218933105
    3. '(' → logprob: -3.5266032218933105
    4. 'def' → logprob: -5.0266032218933105
    5. '(
' → logprob: -5.0266032218933105
    6. ' pairs' → logprob: -5.5266032218933105
    7. ':' → logprob: -6.1516032218933105
    8. '_pairs' → logprob: -6.4016032218933105
    9. ' ,' → logprob: -6.5266032218933105
    10. ')' → logprob: -6.5266032218933105

Token 311: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39449188113212585
    2. '   ' → logprob: -2.0194919109344482
    3. '(p' → logprob: -2.1444919109344482
    4. ')' → logprob: -3.7694919109344482
    5. '[' → logprob: -4.519491672515869
    6. '(' → logprob: -4.519491672515869
    7. ' and' → logprob: -4.769491672515869
    8. ':' → logprob: -5.144491672515869
    9. ' =' → logprob: -5.519491672515869
    10. '):' → logprob: -5.644491672515869

Token 312: ' #' (ID: 1069)
  Prédit: ' pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -0.2767738103866577
    2. '   ' → logprob: -2.0267739295959473
    3. '(p' → logprob: -3.0267739295959473
    4. 'pairs' → logprob: -3.6517739295959473
    5. ' sorted' → logprob: -4.526773929595947
    6. ',' → logprob: -4.776773929595947
    7. ' and' → logprob: -4.901773929595947
    8. ' p' → logprob: -6.151773929595947
    9. 'def' → logprob: -6.901773929595947
    10. ' ,' → logprob: -7.276773929595947

Token 313: ' On' (ID: 2160)
  Prédit: ' pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -0.08345349878072739
    2. ' sorted' → logprob: -3.708453416824341
    3. ' and' → logprob: -4.08345365524292
    4. '   ' → logprob: -4.45845365524292
    5. ',' → logprob: -4.70845365524292
    6. ' return' → logprob: -4.70845365524292
    7. 'pairs' → logprob: -6.08345365524292
    8. ' p' → logprob: -6.33345365524292
    9. ' ,' → logprob: -7.08345365524292
    10. ' def' → logprob: -7.45845365524292

Token 314: ' trie' (ID: 139428)
  Prédit: ' sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.14195892214775085
    2. ' return' → logprob: -2.5169589519500732
    3. ' def' → logprob: -3.8919589519500732
    4. ' sort' → logprob: -4.266958713531494
    5. 'sorted' → logprob: -5.891958713531494
    6. ',' → logprob: -6.516958713531494
    7. 'def' → logprob: -6.766958713531494
    8. ' continue' → logprob: -7.141958713531494
    9. ' perm' → logprob: -7.141958713531494
    10. ')' → logprob: -7.391958713531494

Token 315: ' les' (ID: 1341)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.6082147359848022
    2. ' pairs' → logprob: -1.2332147359848022
    3. 'pairs' → logprob: -2.233214855194092
    4. ' les' → logprob: -3.483214855194092
    5. 'les' → logprob: -4.108214855194092
    6. 'p' → logprob: -5.733214855194092
    7. '_pairs' → logprob: -6.358214855194092
    8. 'def' → logprob: -6.858214855194092
    9. ' p' → logprob: -6.858214855194092
    10. '(' → logprob: -7.483214855194092

Token 316: ' p' (ID: 275)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.7663023471832275
    2. ' pairs' → logprob: -1.8913023471832275
    3. '[(' → logprob: -2.1413023471832275
    4. '[p' → logprob: -2.3913023471832275
    5. 'p' → logprob: -2.6413023471832275
    6. '[' → logprob: -3.0163023471832275
    7. ' p' → logprob: -3.6413023471832275
    8. '[
' → logprob: -4.641302108764648
    9. '(p' → logprob: -4.891302108764648
    10. ' [' → logprob: -5.766302108764648

Token 317: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.012752726674079895
    2. 'airs' → logprob: -4.512752532958984
    3. 'pairs' → logprob: -7.012752532958984
    4. 'a' → logprob: -8.387752532958984
    5. 'ai' → logprob: -8.887752532958984
    6. 'air' → logprob: -9.387752532958984
    7. 'ares' → logprob: -9.637752532958984
    8. '[' → logprob: -10.012752532958984
    9. ' p' → logprob: -10.512752532958984
    10. 'p' → logprob: -10.512752532958984

Token 318: ' pour' (ID: 1930)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.4930694103240967
    2. ',' → logprob: -1.7430694103240967
    3. '(sorted' → logprob: -2.1180694103240967
    4. 'sorted' → logprob: -2.9930694103240967
    5. 'def' → logprob: -3.9930694103240967
    6. '(' → logprob: -4.618069648742676
    7. '   ' → logprob: -5.868069648742676
    8. '(
' → logprob: -5.868069648742676
    9. '()' → logprob: -6.118069648742676
    10. '(par' → logprob: -6.743069648742676

Token 319: ' obtenir' (ID: 54423)
  Prédit: ' obtenir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' obtenir' → logprob: -0.6633332967758179
    2. ' que' → logprob: -1.1633332967758179
    3. ' garantir' → logprob: -2.5383334159851074
    4. ' avoir' → logprob: -3.6633334159851074
    5. ' assurer' → logprob: -4.038333415985107
    6. ' rendre' → logprob: -4.288333415985107
    7. '#' → logprob: -5.663333415985107
    8. 'p' → logprob: -5.788333415985107
    9. ' sorted' → logprob: -5.788333415985107
    10. 'sorted' → logprob: -6.163333415985107

Token 320: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.11470255255699158
    2. 'une' → logprob: -2.9897024631500244
    3. ' un' → logprob: -3.4897024631500244
    4. ' sorted' → logprob: -4.6147027015686035
    5. 'sorted' → logprob: -4.6147027015686035
    6. ' la' → logprob: -5.4897027015686035
    7. ' ' → logprob: -7.3647027015686035
    8. 'les' → logprob: -7.4897027015686035
    9. ' les' → logprob: -7.7397027015686035
    10. 'un' → logprob: -7.9897027015686035

Token 321: ' forme' (ID: 27450)
  Prédit: 'version'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'version' → logprob: -1.621023178100586
    2. 'canonical' → logprob: -1.746023178100586
    3. ' liste' → logprob: -2.121023178100586
    4. 'liste' → logprob: -2.246023178100586
    5. ' version' → logprob: -2.371023178100586
    6. 'tuple' → logprob: -2.496023178100586
    7. ' représentation' → logprob: -3.121023178100586
    8. ' canonical' → logprob: -3.246023178100586
    9. 'sorted' → logprob: -3.371023178100586
    10. 'repr' → logprob: -3.746023178100586

Token 322: ' canon' (ID: 48572)
  Prédit: ' canon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' canon' → logprob: -0.03510585054755211
    2. 'canon' → logprob: -3.9101059436798096
    3. ' standard' → logprob: -5.1601057052612305
    4. ' canonical' → logprob: -5.5351057052612305
    5. ' normal' → logprob: -6.5351057052612305
    6. ' stable' → logprob: -7.1601057052612305
    7. 'canonical' → logprob: -7.6601057052612305
    8. ' normale' → logprob: -8.16010570526123
    9. 'can' → logprob: -8.16010570526123
    10. ' can' → logprob: -8.28510570526123

Token 323: 'ique' (ID: 2222)
  Prédit: 'ique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -3.190178904333152e-05
    2. 'isée' → logprob: -12.125031471252441
    3. 'que' → logprob: -12.250031471252441
    4. 'ïque' → logprob: -12.250031471252441
    5. 'iques' → logprob: -12.375031471252441
    6. 'nique' → logprob: -12.500031471252441
    7. 'rique' → logprob: -13.375031471252441
    8. 'ale' → logprob: -13.375031471252441
    9. '   ' → logprob: -13.875031471252441
    10. 'ic' → logprob: -14.000031471252441

Token 324: '
' (ID: 198)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.0103625059127808
    2. '(sorted' → logprob: -1.6353625059127808
    3. '(
' → logprob: -1.8853625059127808
    4. '   ' → logprob: -1.8853625059127808
    5. '(' → logprob: -2.5103626251220703
    6. 'def' → logprob: -3.6353626251220703
    7. 'sorted' → logprob: -4.13536262512207
    8. ',' → logprob: -5.76036262512207
    9. ' sorted' → logprob: -6.26036262512207
    10. ':' → logprob: -6.38536262512207

Token 325: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47925055027008057
    2. '(p' → logprob: -1.6042505502700806
    3. '(' → logprob: -2.729250431060791
    4. ':' → logprob: -3.354250431060791
    5. 'def' → logprob: -3.354250431060791
    6. '(
' → logprob: -4.104250431060791
    7. '(sorted' → logprob: -4.104250431060791
    8. '[' → logprob: -6.104250431060791
    9. ' pairs' → logprob: -6.854250431060791
    10. ',' → logprob: -6.979250431060791

Token 326: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9986096024513245
    2. ' pairs' → logprob: -1.1236095428466797
    3. '   ' → logprob: -1.3736095428466797
    4. ' sorted' → logprob: -3.2486095428466797
    5. 'pairs' → logprob: -4.87360954284668
    6. 'return' → logprob: -5.37360954284668
    7. 'def' → logprob: -6.99860954284668
    8. 'sorted' → logprob: -7.12360954284668
    9. ' def' → logprob: -8.74860954284668
    10. '    
' → logprob: -9.37360954284668

Token 327: ' Chaque' (ID: 94758)
  Prédit: ' sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.871397852897644
    2. '   ' → logprob: -1.371397852897644
    3. ' return' → logprob: -2.1213979721069336
    4. 'sorted' → logprob: -2.3713979721069336
    5. ' pairs' → logprob: -2.6213979721069336
    6. 'return' → logprob: -3.7463979721069336
    7. 'pairs' → logprob: -4.246397972106934
    8. 'def' → logprob: -6.121397972106934
    9. ' all' → logprob: -7.121397972106934
    10. ' def' → logprob: -8.246397972106934

Token 328: ' paire' (ID: 148856)
  Prédit: ' paire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' paire' → logprob: -0.6239773631095886
    2. 'pair' → logprob: -1.1239774227142334
    3. ' pair' → logprob: -1.9989774227142334
    4. '(pair' → logprob: -6.498977184295654
    5. ' (' → logprob: -7.748977184295654
    6. 'pa' → logprob: -7.873977184295654
    7. '(' → logprob: -7.998977184295654
    8. ' p' → logprob: -8.248977661132812
    9. 'p' → logprob: -8.248977661132812
    10. ' ' → logprob: -9.248977661132812

Token 329: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.35172611474990845
    2. ' =' → logprob: -1.4767260551452637
    3. '=' → logprob: -2.8517260551452637
    4. 'est' → logprob: -5.101726055145264
    5. ':' → logprob: -6.726726055145264
    6. ' is' → logprob: -7.976726055145264
    7. 'sorted' → logprob: -8.101726531982422
    8. ',' → logprob: -8.226726531982422
    9. 'sort' → logprob: -8.351726531982422
    10. 's' → logprob: -8.476726531982422

Token 330: ' exprim' (ID: 118828)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.26250624656677246
    2. ' tuple' → logprob: -1.5125062465667725
    3. '(tuple' → logprob: -4.762506484985352
    4. 'sorted' → logprob: -6.637506484985352
    5. 'tu' → logprob: -8.012506484985352
    6. ' sorted' → logprob: -8.512506484985352
    7. ' ' → logprob: -10.137506484985352
    8. '(sorted' → logprob: -10.262506484985352
    9. '(' → logprob: -11.012506484985352
    10. '   ' → logprob: -11.512506484985352

Token 331: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.00955090019851923
    2. 'é' → logprob: -5.009551048278809
    3. ' en' → logprob: -6.384551048278809
    4. 'e' → logprob: -7.009551048278809
    5. 'ee' → logprob: -9.634551048278809
    6. '(' → logprob: -9.884551048278809
    7. 'en' → logprob: -10.134551048278809
    8. 'ed' → logprob: -11.009551048278809
    9. '(e' → logprob: -11.134551048278809
    10. 'd' → logprob: -11.634551048278809

Token 332: ' en' (ID: 469)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.6196002960205078
    2. ' en' → logprob: -1.6196002960205078
    3. 'comme' → logprob: -2.369600296020508
    4. ' comme' → logprob: -2.619600296020508
    5. 'en' → logprob: -3.119600296020508
    6. 'par' → logprob: -3.369600296020508
    7. ' as' → logprob: -4.994600296020508
    8. ' sous' → logprob: -5.619600296020508
    9. ' avec' → logprob: -6.369600296020508
    10. 'avec' → logprob: -6.494600296020508

Token 333: ' index' (ID: 3472)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.42092737555503845
    2. 'sorted' → logprob: -2.6709272861480713
    3. '(' → logprob: -3.4209272861480713
    4. 'positions' → logprob: -3.4209272861480713
    5. 'tu' → logprob: -3.6709272861480713
    6. 'ter' → logprob: -3.6709272861480713
    7. 'position' → logprob: -3.7959272861480713
    8. 'ordre' → logprob: -3.9209272861480713
    9. 'une' → logprob: -4.17092752456665
    10. ' ordre' → logprob: -4.42092752456665

Token 334: ' présents' (ID: 108718)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.528106689453125
    2. 'def' → logprob: -1.903106689453125
    3. '=' → logprob: -2.028106689453125
    4. ' =' → logprob: -2.278106689453125
    5. 'sorted' → logprob: -2.528106689453125
    6. '(
' → logprob: -3.028106689453125
    7. 's' → logprob: -3.403106689453125
    8. ',' → logprob: -3.528106689453125
    9. '(sorted' → logprob: -3.528106689453125
    10. '_sorted' → logprob: -3.653106689453125

Token 335: ' en' (ID: 469)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.995426595211029
    2. ')' → logprob: -2.495426654815674
    3. '=' → logprob: -2.495426654815674
    4. ',' → logprob: -2.745426654815674
    5. '=[' → logprob: -2.745426654815674
    6. 'indices' → logprob: -2.745426654815674
    7. '(' → logprob: -3.245426654815674
    8. 'es' → logprob: -3.620426654815674
    9. 'ts' → logprob: -4.120426654815674
    10. ' indices' → logprob: -4.370426654815674

Token 336: ' ordre' (ID: 103061)
  Prédit: 'ordre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordre' → logprob: -0.4180770516395569
    2. ' ordre' → logprob: -1.918076992034912
    3. 'sorted' → logprob: -2.293076992034912
    4. 'tuple' → logprob: -4.293076992034912
    5. 'position' → logprob: -4.543076992034912
    6. 'tu' → logprob: -4.543076992034912
    7. 'positions' → logprob: -4.793076992034912
    8. ' sorted' → logprob: -5.293076992034912
    9. 'order' → logprob: -5.293076992034912
    10. 'une' → logprob: -5.293076992034912

Token 337: ' cro' (ID: 11270)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -1.3654581308364868
    2. '=' → logprob: -1.6154581308364868
    3. 'def' → logprob: -1.7404581308364868
    4. '(sorted' → logprob: -2.3654580116271973
    5. '(p' → logprob: -2.7404580116271973
    6. '[(' → logprob: -3.1154580116271973
    7. '   ' → logprob: -3.4904580116271973
    8. ' sorted' → logprob: -3.7404580116271973
    9. ' =' → logprob: -3.9904580116271973
    10. '=[' → logprob: -4.365458011627197

Token 338: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.040614090859889984
    2. 'issante' → logprob: -3.790614128112793
    3. 'issance' → logprob: -5.040614128112793
    4. 'ss' → logprob: -5.790614128112793
    5. 'ix' → logprob: -5.915614128112793
    6. 'issent' → logprob: -6.415614128112793
    7. 'iss' → logprob: -7.540614128112793
    8. 'issement' → logprob: -7.790614128112793
    9. 'isant' → logprob: -7.790614128112793
    10. 'nd' → logprob: -7.915614128112793

Token 339: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5623586177825928
    2. '(p' → logprob: -1.5623586177825928
    3. '[' → logprob: -2.0623586177825928
    4. '(' → logprob: -2.0623586177825928
    5. ',' → logprob: -2.4373586177825928
    6. ' =' → logprob: -2.8123586177825928
    7. '=' → logprob: -3.0623586177825928
    8. '(
' → logprob: -3.5623586177825928
    9. '(sorted' → logprob: -3.6873586177825928
    10. 'sorted' → logprob: -4.062358856201172

Token 340: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38368430733680725
    2. '(p' → logprob: -1.7586842775344849
    3. 'def' → logprob: -2.5086843967437744
    4. ':' → logprob: -4.383684158325195
    5. '(sorted' → logprob: -4.633684158325195
    6. ' =' → logprob: -4.758684158325195
    7. '=' → logprob: -5.133684158325195
    8. ',' → logprob: -5.383684158325195
    9. '(' → logprob: -5.383684158325195
    10. '(
' → logprob: -6.133684158325195

Token 341: ' pairs' (ID: 24702)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2865516245365143
    2. ' pairs' → logprob: -2.1615517139434814
    3. ' sorted' → logprob: -2.7865517139434814
    4. 'def' → logprob: -3.7865517139434814
    5. 'sorted' → logprob: -4.036551475524902
    6. 'pairs' (adapté à ' pairs') → logprob: -4.036551475524902
    7. ' return' → logprob: -5.536551475524902
    8. ' indices' → logprob: -6.161551475524902
    9. 'return' → logprob: -6.411551475524902
    10. ' def' → logprob: -6.661551475524902

Token 342: '_sorted' (ID: 104993)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07486962527036667
    2. ' =' → logprob: -3.3248696327209473
    3. '_sorted' → logprob: -3.3248696327209473
    4. 'sorted' → logprob: -8.699869155883789
    5. '_c' → logprob: -11.949869155883789
    6. '.sort' → logprob: -13.199869155883789
    7. '=[' → logprob: -13.449869155883789
    8. '_' → logprob: -13.449869155883789
    9. '=[]' → logprob: -14.699869155883789
    10. 's' → logprob: -14.949869155883789

Token 343: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003366050310432911
    2. ' =' → logprob: -5.753365993499756
    3. 'sorted' → logprob: -9.878366470336914
    4. '(sorted' → logprob: -9.878366470336914
    5. '(' → logprob: -10.503366470336914
    6. '(p' → logprob: -10.503366470336914
    7. '=p' → logprob: -10.878366470336914
    8. '_sorted' → logprob: -12.378366470336914
    9. '=[' → logprob: -13.003366470336914
    10. '=[]' → logprob: -13.003366470336914

Token 344: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31576845049858093
    2. 'sorted' → logprob: -1.3157684803009033
    3. 'tuple' → logprob: -6.065768241882324
    4. ' sorted' → logprob: -10.065768241882324
    5. '(sorted' → logprob: -10.190768241882324
    6. '[]' → logprob: -10.440768241882324
    7. ' [' → logprob: -10.690768241882324
    8. '[s' → logprob: -10.690768241882324
    9. '[(' → logprob: -11.190768241882324
    10. '[t' → logprob: -12.940768241882324

Token 345: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.061306633055210114
    2. 'sorted' → logprob: -3.3113067150115967
    3. '(tuple' → logprob: -4.186306476593018
    4. '(sorted' → logprob: -5.186306476593018
    5. ' tuple' → logprob: -6.186306476593018
    6. '(' → logprob: -9.436306953430176
    7. ' sorted' → logprob: -10.061306953430176
    8. '   ' → logprob: -11.686306953430176
    9. ' (' → logprob: -12.061306953430176
    10. '(
' → logprob: -12.686306953430176

Token 346: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.00523612555116415
    2. 'sorted' → logprob: -5.2552361488342285
    3. '(map' → logprob: -13.63023567199707
    4. '(' → logprob: -14.50523567199707
    5. ' sorted' → logprob: -14.63023567199707
    6. 'map' → logprob: -16.50523567199707
    7. '(
' → logprob: -17.50523567199707
    8. '(sort' → logprob: -17.63023567199707
    9. 'Sorted' → logprob: -17.88023567199707
    10. '(position' → logprob: -18.13023567199707

Token 347: '(p' (ID: 2407)
  Prédit: '(pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pair' → logprob: -0.2347002476453781
    2. '(p' → logprob: -1.6097002029418945
    3. 'pair' → logprob: -4.7347002029418945
    4. 'p' → logprob: -8.359700202941895
    5. '((' → logprob: -9.484700202941895
    6. '(sorted' → logprob: -9.609700202941895
    7. '(' → logprob: -10.109700202941895
    8. '([' → logprob: -11.609700202941895
    9. ' pair' → logprob: -12.234700202941895
    10. '(pa' → logprob: -12.359700202941895

Token 348: '))' (ID: 915)
  Prédit: 'air'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'air' → logprob: -0.44018542766571045
    2. '(pair' → logprob: -2.440185546875
    3. 'pair' → logprob: -2.690185546875
    4. '(p' → logprob: -2.815185546875
    5. 'airs' → logprob: -2.940185546875
    6. 'p' → logprob: -2.940185546875
    7. ')' → logprob: -4.315185546875
    8. '))' → logprob: -4.565185546875
    9. ')]' → logprob: -5.190185546875
    10. '(' → logprob: -6.815185546875

Token 349: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009909073822200298
    2. '(p' → logprob: -5.384909152984619
    3. ' for' → logprob: -6.009909152984619
    4. ' )' → logprob: -6.759909152984619
    5. '   ' → logprob: -7.384909152984619
    6. '()' → logprob: -7.509909152984619
    7. '())' → logprob: -8.884908676147461
    8. 'for' → logprob: -9.509908676147461
    9. ')]' → logprob: -9.759908676147461
    10. '(' → logprob: -9.759908676147461

Token 350: ' p' (ID: 275)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.21178804337978363
    2. ' pairs' → logprob: -1.7117880582809448
    3. 'p' → logprob: -5.211788177490234
    4. 'pair' → logprob: -5.461788177490234
    5. ' pair' → logprob: -7.836788177490234
    6. ' p' → logprob: -8.586788177490234
    7. '_pairs' → logprob: -11.336788177490234
    8. ' paire' → logprob: -11.586788177490234
    9. '   ' → logprob: -12.961788177490234
    10. '[' → logprob: -13.211788177490234

Token 351: ' in' (ID: 306)
  Prédit: ' pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -0.05660966783761978
    2. 'pairs' → logprob: -3.306609630584717
    3. ' in' → logprob: -4.181609630584717
    4. '_pairs' → logprob: -6.681609630584717
    5. 'airs' → logprob: -6.806609630584717
    6. ' p' → logprob: -7.806609630584717
    7. 'p' → logprob: -8.556610107421875
    8. 'in' → logprob: -9.306610107421875
    9. '<|end|>' → logprob: -11.056610107421875
    10. ' pair' → logprob: -11.431610107421875

Token 352: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.002303577959537506
    2. ' pairs' → logprob: -6.127303600311279
    3. 'p' → logprob: -9.377303123474121
    4. '[p' → logprob: -10.627303123474121
    5. 'map' → logprob: -12.752303123474121
    6. '[' → logprob: -13.002303123474121
    7. 'pair' → logprob: -13.252303123474121
    8. 'index' → logprob: -13.502303123474121
    9. 'sorted' → logprob: -15.127303123474121
    10. '(p' → logprob: -15.752303123474121

Token 353: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003811234375461936
    2. ']
' → logprob: -5.878811359405518
    3. '   ' → logprob: -7.753811359405518
    4. ' ]' → logprob: -7.753811359405518
    5. ')]' → logprob: -9.12881088256836
    6. ')' → logprob: -10.75381088256836
    7. ' ]
' → logprob: -12.37881088256836
    8. ']

' → logprob: -12.87881088256836
    9. ']
' → logprob: -13.12881088256836
    10. '()]' → logprob: -13.12881088256836

Token 354: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03389452397823334
    2. ' pairs' → logprob: -4.5338945388793945
    3. '.sort' → logprob: -4.6588945388793945
    4. ')' → logprob: -5.7838945388793945
    5. ',' → logprob: -6.0338945388793945
    6. '<|end|>' → logprob: -6.5338945388793945
    7. 'pairs' → logprob: -6.7838945388793945
    8. '.' → logprob: -6.7838945388793945
    9. '[' → logprob: -7.2838945388793945
    10. '_pairs' → logprob: -7.5338945388793945

Token 355: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' (adapté à ' pairs') → logprob: -0.23296648263931274
    2. ' pairs' → logprob: -1.607966423034668
    3. '   ' → logprob: -4.982966423034668
    4. 'return' → logprob: -7.732966423034668
    5. ' return' → logprob: -8.857966423034668
    6. 'sorted' → logprob: -9.732966423034668
    7. '_pairs' → logprob: -11.482966423034668
    8. ' sorted' → logprob: -11.732966423034668
    9. 'p' → logprob: -12.357966423034668
    10. '    
' → logprob: -13.232966423034668

Token 356: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.017208069562911987
    2. '.sort' → logprob: -4.642208099365234
    3. '=' → logprob: -5.017208099365234
    4. ' =' → logprob: -7.517208099365234
    5. 'sorted' → logprob: -8.517208099365234
    6. '   ' → logprob: -11.642208099365234
    7. 'sort' → logprob: -11.642208099365234
    8. 's' → logprob: -12.017208099365234
    9. '.sorted' → logprob: -12.517208099365234
    10. 'Sorted' → logprob: -12.767208099365234

Token 357: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0009032421512529254
    2. '.' → logprob: -7.625903129577637
    3. '=' → logprob: -8.000903129577637
    4. ' .' → logprob: -9.750903129577637
    5. ' =' → logprob: -11.500903129577637
    6. 'sort' → logprob: -11.750903129577637
    7. '_sorted' → logprob: -13.750903129577637
    8. ').' → logprob: -14.375903129577637
    9. 'sorted' → logprob: -14.500903129577637
    10. ' ' → logprob: -15.000903129577637

Token 358: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003175889723934233
    2. '()
' → logprob: -8.125317573547363
    3. '())' → logprob: -12.000317573547363
    4. '<|end|>' → logprob: -12.375317573547363
    5. '();' → logprob: -13.500317573547363
    6. '(' → logprob: -13.500317573547363
    7. '()<' → logprob: -13.875317573547363
    8. 'def' → logprob: -13.875317573547363
    9. '<|end|>' → logprob: -13.875317573547363
    10. '(reverse' → logprob: -14.000317573547363

Token 359: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003639988135546446
    2. ' return' → logprob: -5.878640174865723
    3. 'return' → logprob: -7.753640174865723
    4. ')' → logprob: -8.503640174865723
    5. '	return' → logprob: -9.378640174865723
    6. '    
' → logprob: -10.128640174865723
    7. ',' → logprob: -10.753640174865723
    8. '[' → logprob: -11.503640174865723
    9. '
' → logprob: -11.753640174865723
    10. '<|end|>' → logprob: -12.753640174865723

Token 360: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08392077684402466
    2. ' return' → logprob: -2.83392071723938
    3. '   ' → logprob: -3.83392071723938
    4. 'def' → logprob: -10.8339204788208
    5. 'indices' → logprob: -11.2089204788208
    6. '
' → logprob: -11.5839204788208
    7. ')' → logprob: -11.8339204788208
    8. '	return' → logprob: -12.0839204788208
    9. 'result' → logprob: -12.0839204788208
    10. ' ' → logprob: -12.4589204788208

Token 361: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.12389100342988968
    2. 'pairs' → logprob: -2.7488911151885986
    3. ' tuple' → logprob: -2.9988911151885986
    4. 'p' → logprob: -7.1238908767700195
    5. ' pairs' → logprob: -7.2488908767700195
    6. '(tuple' → logprob: -7.4988908767700195
    7. ' tuples' → logprob: -8.49889087677002
    8. '[p' → logprob: -8.74889087677002
    9. 'tu' → logprob: -8.99889087677002
    10. '[' → logprob: -9.87389087677002

Token 362: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0002120038407156244
    2. '(sorted' → logprob: -8.750211715698242
    3. '([' → logprob: -10.375211715698242
    4. '(' → logprob: -11.375211715698242
    5. '((' → logprob: -12.375211715698242
    6. 'pairs' → logprob: -13.250211715698242
    7. '(pair' → logprob: -13.750211715698242
    8. '(tuple' → logprob: -13.875211715698242
    9. 'p' → logprob: -14.125211715698242
    10. '([(' → logprob: -14.125211715698242

Token 363: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.0001295222609769553
    2. 'pairs' → logprob: -9.750129699707031
    3. '_pairs' → logprob: -10.625129699707031
    4. '_sorted' → logprob: -11.250129699707031
    5. 'air' → logprob: -11.375129699707031
    6. '[' → logprob: -11.750129699707031
    7. ')' → logprob: -12.375129699707031
    8. 'sorted' → logprob: -12.625129699707031
    9. 'aires' → logprob: -13.125129699707031
    10. 'irs' → logprob: -13.750129699707031

Token 364: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.07051850110292435
    2. ')' → logprob: -2.6955184936523438
    3. '))' → logprob: -8.570518493652344
    4. '   ' → logprob: -9.445518493652344
    5. '[' → logprob: -9.445518493652344
    6. ')_' → logprob: -9.695518493652344
    7. ')]' → logprob: -10.195518493652344
    8. ')))' → logprob: -10.820518493652344
    9. '_s' → logprob: -11.070518493652344
    10. 'sorted' → logprob: -11.320518493652344

Token 365: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ')
' → logprob: -14.125001907348633
    3. ' )' → logprob: -14.125001907348633
    4. '   ' → logprob: -16.875001907348633
    5. ')#' → logprob: -17.625001907348633
    6. ')return' → logprob: -17.750001907348633
    7. '<|end|>' → logprob: -17.750001907348633
    8. '))' → logprob: -18.000001907348633
    9. '),' → logprob: -18.750001907348633
    10. '}' → logprob: -19.000001907348633

Token 366: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3531167507171631
    2. 'def' → logprob: -1.353116750717163
    3. ':' → logprob: -4.353116989135742
    4. '[' → logprob: -4.853116989135742
    5. '<|end|>' → logprob: -4.978116989135742
    6. ')' → logprob: -5.228116989135742
    7. '(p' → logprob: -6.353116989135742
    8. '#' → logprob: -6.728116989135742
    9. '(
' → logprob: -7.228116989135742
    10. '):' → logprob: -7.478116989135742

Token 367: ' remove' (ID: 6234)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.9014247059822083
    2. ' parse' → logprob: -2.1514246463775635
    3. ' find' → logprob: -2.6514246463775635
    4. ' main' → logprob: -2.6514246463775635
    5. 'solve' → logprob: -2.7764246463775635
    6. 'parse' → logprob: -3.1514246463775635
    7. ' is' → logprob: -3.7764246463775635
    8. ' generate' → logprob: -3.9014246463775635
    9. ' apply' → logprob: -3.9014246463775635
    10. ' move' → logprob: -3.9014246463775635

Token 368: '_pair' (ID: 34819)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.49761199951171875
    2. '_duplicates' → logprob: -1.9976119995117188
    3. '_token' → logprob: -2.4976119995117188
    4. '_duplicate' → logprob: -3.7476119995117188
    5. '_suffix' → logprob: -3.9976119995117188
    6. '_p' → logprob: -4.372611999511719
    7. '_parent' → logprob: -4.497611999511719
    8. '_s' → logprob: -4.622611999511719
    9. '_pairs' → logprob: -4.997611999511719
    10. '_unused' → logprob: -5.247611999511719

Token 369: '(p' (ID: 2407)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.7207308411598206
    2. '(' → logprob: -1.0957307815551758
    3. 's' → logprob: -2.220730781555176
    4. '(p' → logprob: -2.845730781555176
    5. '(_' → logprob: -5.345730781555176
    6. '(state' → logprob: -6.470730781555176
    7. '(pos' → logprob: -6.845730781555176
    8. '(pair' → logprob: -6.970730781555176
    9. '(position' → logprob: -7.095730781555176
    10. '_s' → logprob: -7.220730781555176

Token 370: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.39323174953460693
    2. 'air' → logprob: -1.143231749534607
    3. '(p' → logprob: -6.2682318687438965
    4. '(' → logprob: -6.6432318687438965
    5. 'a' → logprob: -6.8932318687438965
    6. ')' → logprob: -7.8932318687438965
    7. 'airo' → logprob: -8.018231391906738
    8. 'ar' → logprob: -8.268231391906738
    9. 'aire' → logprob: -8.393231391906738
    10. '(pair' → logprob: -8.518231391906738

Token 371: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05967266857624054
    2. ',p' → logprob: -3.6846725940704346
    3. '):' → logprob: -3.9346725940704346
    4. '(p' → logprob: -4.559672832489014
    5. 's' → logprob: -6.184672832489014
    6. ' ,' → logprob: -7.559672832489014
    7. ')' → logprob: -9.934672355651855
    8. '):
' → logprob: -10.184672355651855
    9. '(' → logprob: -10.684672355651855
    10. 'p' → logprob: -10.809672355651855

Token 372: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.31570786237716675
    2. ' pair' → logprob: -1.4407079219818115
    3. 'index' → logprob: -3.6907079219818115
    4. ' index' → logprob: -5.440707683563232
    5. 'idx' → logprob: -6.065707683563232
    6. ' idx' → logprob: -6.440707683563232
    7. 'target' → logprob: -8.81570816040039
    8. 'to' → logprob: -8.81570816040039
    9. 'p' → logprob: -9.44070816040039
    10. 'pattern' → logprob: -9.44070816040039

Token 373: '_to' (ID: 5089)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31053945422172546
    2. 's' → logprob: -1.8105394840240479
    3. '):
' → logprob: -2.310539484024048
    4. ',' → logprob: -5.560539245605469
    5. ')' → logprob: -8.685539245605469
    6. ' ):' → logprob: -9.685539245605469
    7. '_pairs' → logprob: -10.685539245605469
    8. '):
' → logprob: -11.185539245605469
    9. '):

' → logprob: -11.310539245605469
    10. ':' → logprob: -12.185539245605469

Token 374: '_remove' (ID: 41629)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.002051885472610593
    2. '_remove' → logprob: -6.252051830291748
    3. ' remove' → logprob: -9.377052307128906
    4. '(remove' → logprob: -11.877052307128906
    5. '	remove' → logprob: -12.252052307128906
    6. 'r' → logprob: -12.377052307128906
    7. 'rem' → logprob: -12.627052307128906
    8. 'Remove' → logprob: -12.877052307128906
    9. 'move' → logprob: -12.877052307128906
    10. '.remove' → logprob: -13.002052307128906

Token 375: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11533594876527786
    2. '):
' → logprob: -2.2403359413146973
    3. ')' → logprob: -6.115335941314697
    4. ' ):' → logprob: -8.990336418151855
    5. ',' → logprob: -9.115336418151855
    6. '):
' → logprob: -9.990336418151855
    7. '):

' → logprob: -11.740336418151855
    8. ' ):
' → logprob: -12.365336418151855
    9. '(p' → logprob: -12.990336418151855
    10. ':' → logprob: -13.240336418151855

Token 376: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03623076528310776
    2. ' pairs' → logprob: -3.4112308025360107
    3. '[' → logprob: -6.911230564117432
    4. ' [' → logprob: -8.41123104095459
    5. '):
' → logprob: -8.66123104095459
    6. '(p' → logprob: -8.66123104095459
    7. 'pairs' → logprob: -8.66123104095459
    8. '[p' → logprob: -8.78623104095459
    9. ':' → logprob: -8.78623104095459
    10. ':
' → logprob: -9.03623104095459

Token 377: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7434388399124146
    2. ' pairs' → logprob: -1.2434388399124146
    3. '[p' → logprob: -2.243438720703125
    4. ' [' → logprob: -2.868438720703125
    5. 'pairs' → logprob: -3.493438720703125
    6. '[' → logprob: -3.618438720703125
    7. '[
' → logprob: -5.368438720703125
    8. ' [
' → logprob: -5.618438720703125
    9. '    
' → logprob: -6.243438720703125
    10. ' return' → logprob: -6.243438720703125

Token 378: ' Sup' (ID: 13606)
  Prédit: ' pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -0.544879674911499
    2. 'pairs' → logprob: -0.919879674911499
    3. '[p' → logprob: -4.794879913330078
    4. 'def' → logprob: -6.044879913330078
    5. ' return' → logprob: -6.294879913330078
    6. 'p' → logprob: -6.544879913330078
    7. ' p' → logprob: -6.544879913330078
    8. 'return' → logprob: -6.669879913330078
    9. ' [' → logprob: -6.794879913330078
    10. '   ' → logprob: -7.044879913330078

Token 379: 'prime' (ID: 46441)
  Prédit: 'prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.12044969946146011
    2. 'primer' → logprob: -2.6204497814178467
    3. 'pr' → logprob: -3.7454497814178467
    4. 'p' → logprob: -4.495449542999268
    5. 'prim' → logprob: -5.620449542999268
    6. 'press' → logprob: -6.620449542999268
    7. 'prima' → logprob: -7.620449542999268
    8. 'pri' → logprob: -8.745450019836426
    9. 'pres' → logprob: -9.495450019836426
    10. '=' → logprob: -10.370450019836426

Token 380: ' une' (ID: 2463)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.8880977034568787
    2. ' pairs' → logprob: -0.8880977034568787
    3. 'pairs' → logprob: -1.8880977630615234
    4. ' [' → logprob: -4.513097763061523
    5. '(p' → logprob: -5.513097763061523
    6. '[' → logprob: -5.888097763061523
    7. '_pairs' → logprob: -6.263097763061523
    8. ' p' → logprob: -6.513097763061523
    9. 'p' → logprob: -6.763097763061523
    10. ' pair' → logprob: -7.013097763061523

Token 381: ' paire' (ID: 148856)
  Prédit: ' paire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' paire' → logprob: -0.8169481158256531
    2. ' pair' → logprob: -1.1919481754302979
    3. 'pair' → logprob: -1.4419481754302979
    4. ' p' → logprob: -5.066947937011719
    5. ' ' → logprob: -5.566947937011719
    6. ' tuple' → logprob: -6.191947937011719
    7. ' [' → logprob: -6.566947937011719
    8. 'p' → logprob: -6.816947937011719
    9. 'pa' → logprob: -7.191947937011719
    10. 'tuple' → logprob: -7.441947937011719

Token 382: ' préc' (ID: 20129)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.04204433038830757
    2. ' =' → logprob: -3.7920444011688232
    3. 'from' → logprob: -5.917044162750244
    4. ' (' → logprob: -6.167044162750244
    5. ' pairs' → logprob: -6.167044162750244
    6. '=' → logprob: -6.417044162750244
    7. ' from' → logprob: -6.542044162750244
    8. '(pair' → logprob: -6.667044162750244
    9. '[p' → logprob: -6.792044162750244
    10. '([' → logprob: -7.042044162750244

Token 383: 'isée' (ID: 59331)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.07227521389722824
    2. 'isée' → logprob: -3.447275161743164
    3. 'ise' → logprob: -3.947275161743164
    4. 'ed' → logprob: -4.822275161743164
    5. 'isement' → logprob: -5.322275161743164
    6. 'isé' → logprob: -5.697275161743164
    7. 'éd' → logprob: -7.447275161743164
    8. 'e' → logprob: -8.072275161743164
    9. 'i' → logprob: -8.822275161743164
    10. 'ised' → logprob: -9.197275161743164

Token 384: ' de' (ID: 334)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.29966431856155396
    2. 'from' → logprob: -1.5496642589569092
    3. ',' → logprob: -4.174664497375488
    4. ' from' → logprob: -4.799664497375488
    5. ' (' → logprob: -5.174664497375488
    6. '   ' → logprob: -5.799664497375488
    7. ':' → logprob: -6.549664497375488
    8. ' =' → logprob: -6.674664497375488
    9. ' ' → logprob: -6.674664497375488
    10. '(' → logprob: -6.674664497375488

Token 385: ' la' (ID: 557)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.23331037163734436
    2. '[p' → logprob: -1.608310341835022
    3. ' pairs' → logprob: -5.358310222625732
    4. 'p' → logprob: -6.233310222625732
    5. '[' → logprob: -6.983310222625732
    6. ' [' → logprob: -8.98331069946289
    7. 'pair' → logprob: -9.48331069946289
    8. 'list' → logprob: -10.73331069946289
    9. ' p' → logprob: -11.48331069946289
    10. '[
' → logprob: -11.85831069946289

Token 386: ' liste' (ID: 31719)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.04236603155732155
    2. '[p' → logprob: -3.9173660278320312
    3. ' pairs' → logprob: -4.167366027832031
    4. 'p' → logprob: -5.542366027832031
    5. '[' → logprob: -6.542366027832031
    6. '[
' → logprob: -8.542366027832031
    7. 'pair' → logprob: -9.167366027832031
    8. ' p' → logprob: -9.292366027832031
    9. 'list' → logprob: -9.292366027832031
    10. ' [' → logprob: -9.542366027832031

Token 387: ' de' (ID: 334)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.017479756847023964
    2. ' pairs' → logprob: -4.51747989654541
    3. ' (' → logprob: -5.64247989654541
    4. 'def' → logprob: -6.89247989654541
    5. 'pairs' → logprob: -7.14247989654541
    6. '_pairs' → logprob: -8.14247989654541
    7. '   ' → logprob: -8.39247989654541
    8. '(' → logprob: -8.89247989654541
    9. ',' → logprob: -9.14247989654541
    10. '(pair' → logprob: -9.76747989654541

Token 388: ' p' (ID: 275)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.0464763268828392
    2. ' pairs' → logprob: -3.296476364135742
    3. 'p' → logprob: -4.796476364135742
    4. ' p' → logprob: -9.421476364135742
    5. '[p' → logprob: -9.921476364135742
    6. '_pairs' → logprob: -12.546476364135742
    7. 'pair' → logprob: -13.296476364135742
    8. '[' → logprob: -13.671476364135742
    9. ')p' → logprob: -14.171476364135742
    10. ' tuples' → logprob: -14.296476364135742

Token 389: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.44334614276885986
    2. 'airs' → logprob: -1.0683461427688599
    3. 'pairs' → logprob: -4.44334602355957
    4. ' p' → logprob: -7.81834602355957
    5. 'a' → logprob: -7.94334602355957
    6. 'air' → logprob: -8.06834602355957
    7. 'ares' → logprob: -8.19334602355957
    8. 'p' → logprob: -8.31834602355957
    9. '_pairs' → logprob: -8.31834602355957
    10. 'ai' → logprob: -9.13084602355957

Token 390: '
' (ID: 198)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0005866335122846067
    2. ' (' → logprob: -8.12558650970459
    3. '(' → logprob: -9.12558650970459
    4. '   ' → logprob: -10.00058650970459
    5. ' pairs' → logprob: -10.12558650970459
    6. ',' → logprob: -10.37558650970459
    7. 'def' → logprob: -10.75058650970459
    8. ':' → logprob: -11.12558650970459
    9. '(
' → logprob: -11.50058650970459
    10. '_pairs' → logprob: -12.25058650970459

Token 391: '   ' (ID: 271)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.006096346769481897
    2. '   ' → logprob: -6.131096363067627
    3. 'def' → logprob: -6.381096363067627
    4. ' (' → logprob: -6.631096363067627
    5. '(' → logprob: -8.006095886230469
    6. ' pairs' → logprob: -8.256095886230469
    7. ',' → logprob: -9.256095886230469
    8. ':' → logprob: -10.256095886230469
    9. '```' → logprob: -10.256095886230469
    10. '(
' → logprob: -10.381095886230469

Token 392: ' return' (ID: 622)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.7623001337051392
    2. 'pairs' → logprob: -0.8873001337051392
    3. ' pairs' → logprob: -2.3873000144958496
    4. '   ' → logprob: -4.51230001449585
    5. ' [' → logprob: -4.76230001449585
    6. '[' → logprob: -5.76230001449585
    7. 'return' (adapté à ' return') → logprob: -5.88730001449585
    8. ' return' → logprob: -6.38730001449585
    9. 'p' → logprob: -7.01230001449585
    10. ' p' → logprob: -7.51230001449585

Token 393: ' [' (ID: 723)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.32397565245628357
    2. '[' → logprob: -1.323975682258606
    3. ' [' → logprob: -4.573975563049316
    4. '[t' → logprob: -8.698975563049316
    5. '[i' → logprob: -10.323975563049316
    6. '[type' → logprob: -10.448975563049316
    7. '[pos' → logprob: -10.573975563049316
    8. '[token' → logprob: -11.073975563049316
    9. '[x' → logprob: -11.198975563049316
    10. '[key' → logprob: -11.323975563049316

Token 394: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01614345982670784
    2. 'pair' → logprob: -4.141143321990967
    3. ' p' → logprob: -9.266143798828125
    4. ' pair' → logprob: -11.516143798828125
    5. 'tuple' → logprob: -12.641143798828125
    6. '(pair' → logprob: -15.016143798828125
    7. '(p' → logprob: -15.516143798828125
    8. 'pt' → logprob: -15.641143798828125
    9. 'pp' → logprob: -16.016143798828125
    10. 'pairs' → logprob: -16.016143798828125

Token 395: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.007613963447511196
    2. 'for' → logprob: -4.8826141357421875
    3. '	for' → logprob: -12.007614135742188
    4. 'p' → logprob: -14.382614135742188
    5. ' ' → logprob: -14.757614135742188
    6. 'or' → logprob: -15.257614135742188
    7. ' p' → logprob: -15.382614135742188
    8. ' if' → logprob: -16.257614135742188
    9. 'ort' → logprob: -17.132614135742188
    10. 'f' → logprob: -17.257614135742188

Token 396: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01105300523340702
    2. ' p' → logprob: -4.511053085327148
    3. 'pairs' → logprob: -12.511053085327148
    4. ' pairs' → logprob: -14.136053085327148
    5. 'pair' → logprob: -14.636053085327148
    6. '	p' → logprob: -15.886053085327148
    7. '_pairs' → logprob: -16.38605308532715
    8. ' pair' → logprob: -16.51105308532715
    9. '_p' → logprob: -16.88605308532715
    10. ' ' → logprob: -17.63605308532715

Token 397: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.015527346171438694
    2. 'in' → logprob: -4.265527248382568
    3. ' p' → logprob: -6.765527248382568
    4. 'p' → logprob: -8.640527725219727
    5. 's' → logprob: -10.515527725219727
    6. ' ' → logprob: -12.890527725219727
    7. ',' → logprob: -14.265527725219727
    8. '_' → logprob: -14.640527725219727
    9. 'n' → logprob: -14.890527725219727
    10. '_in' → logprob: -14.890527725219727

Token 398: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.07898815721273422
    2. ' pairs' → logprob: -2.5789880752563477
    3. 'p' → logprob: -9.453988075256348
    4. 'pair' → logprob: -11.203988075256348
    5. '_pairs' → logprob: -12.578988075256348
    6. 'airs' → logprob: -14.078988075256348
    7. 'pares' → logprob: -15.078988075256348
    8. '   ' → logprob: -15.203988075256348
    9. ' ' → logprob: -15.328988075256348
    10. 'Pairs' → logprob: -15.516488075256348

Token 399: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.000548387470189482
    2. 'if' → logprob: -8.125548362731934
    3. ' p' → logprob: -8.375548362731934
    4. ' in' → logprob: -11.000548362731934
    5. 'p' → logprob: -13.500548362731934
    6. ' ' → logprob: -13.500548362731934
    7. 'in' → logprob: -13.625548362731934
    8. '	if' → logprob: -14.000548362731934
    9. '  ' → logprob: -16.12554931640625
    10. '   ' → logprob: -16.25054931640625

Token 400: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.004623441956937313
    2. ' p' → logprob: -5.3796234130859375
    3. '   ' → logprob: -13.754623413085938
    4. 'set' → logprob: -14.129623413085938
    5. ' set' → logprob: -15.129623413085938
    6. 'not' → logprob: -15.379623413085938
    7. '    ' → logprob: -15.379623413085938
    8. ' not' → logprob: -15.629623413085938
    9. 'tuple' → logprob: -16.004623413085938
    10. '<p' → logprob: -16.317123413085938

Token 401: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3137345612049103
    2. ' !=' → logprob: -1.313734531402588
    3. ' p' → logprob: -7.938734531402588
    4. 'p' → logprob: -9.313735008239746
    5. ' not' → logprob: -12.188735008239746
    6. ']!=' → logprob: -12.563735008239746
    7. '   ' → logprob: -12.563735008239746
    8. '()!=' → logprob: -12.813735008239746
    9. ')!=' → logprob: -12.813735008239746
    10. ' ' → logprob: -13.063735008239746

Token 402: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.03364858031272888
    2. ' pair' → logprob: -3.4086484909057617
    3. 'tuple' → logprob: -13.658648490905762
    4. '(pair' → logprob: -14.283648490905762
    5. 'p' → logprob: -15.033648490905762
    6. '   ' → logprob: -15.283648490905762
    7. ' tuple' → logprob: -15.533648490905762
    8. ' ' → logprob: -15.783648490905762
    9. 'peer' → logprob: -16.783649444580078
    10. '<pair' → logprob: -17.283649444580078

Token 403: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -5.512236498361744e-07
    2. 'to' → logprob: -15.625000953674316
    3. ')' → logprob: -16.125
    4. '   ' → logprob: -16.125
    5. ' _' → logprob: -17.875
    6. '])' → logprob: -18.125
    7. 'To' → logprob: -18.375
    8. 's' → logprob: -18.5
    9. '_' → logprob: -18.625
    10. '_remove' → logprob: -19.125

Token 404: '_remove' (ID: 41629)
  Prédit: '_remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remove' → logprob: -0.12713682651519775
    2. 'remove' → logprob: -2.127136707305908
    3. ' remove' → logprob: -8.627137184143066
    4. '_' → logprob: -12.377137184143066
    5. 'em' → logprob: -12.627137184143066
    6. '	remove' → logprob: -12.627137184143066
    7. '(remove' → logprob: -12.752137184143066
    8. '_to' → logprob: -12.752137184143066
    9. '_REMOVE' → logprob: -13.127137184143066
    10. '_rem' → logprob: -13.752137184143066

Token 405: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00043281487887725234
    2. ' ]' → logprob: -7.750432968139648
    3. ']
' → logprob: -13.750432968139648
    4. '()]' → logprob: -14.875432968139648
    5. ')]' → logprob: -15.625432968139648
    6. '<|end|>' → logprob: -15.875432968139648
    7. ']

' → logprob: -16.00043296813965
    8. '   ' → logprob: -16.50043296813965
    9. '']' → logprob: -16.62543296813965
    10. '"]' → logprob: -17.25043296813965

Token 406: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 407: ' generate' (ID: 10419)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -1.0783847570419312
    2. 'b' → logprob: -2.4533848762512207
    3. ' add' → logprob: -2.7033848762512207
    4. ' find' → logprob: -2.7033848762512207
    5. 'can' → logprob: -2.8283848762512207
    6. ' can' → logprob: -2.9533848762512207
    7. ' apply' → logprob: -3.0783848762512207
    8. 'add' → logprob: -3.0783848762512207
    9. ' main' → logprob: -3.3283848762512207
    10. 'canonical' → logprob: -3.5783848762512207

Token 408: '_par' (ID: 31329)
  Prédit: '_all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_all' → logprob: -0.5049877166748047
    2. '_pairs' → logprob: -1.3799877166748047
    3. '_' → logprob: -2.1299877166748047
    4. '_possible' → logprob: -4.629987716674805
    5. '_p' → logprob: -6.004987716674805
    6. '_pair' → logprob: -6.129987716674805
    7. '<|end|>' → logprob: -6.379987716674805
    8. '_next' → logprob: -6.504987716674805
    9. '_candidates' → logprob: -6.504987716674805
    10. 'all' → logprob: -7.004987716674805

Token 409: 'ings' (ID: 963)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5700269341468811
    2. 'ams' → logprob: -1.1950268745422363
    3. 'ts' → logprob: -2.9450268745422363
    4. 'am' → logprob: -3.0700268745422363
    5. 'is' → logprob: -3.8200268745422363
    6. '_pairs' → logprob: -6.695026874542236
    7. 'ent' → logprob: -6.695026874542236
    8. '```' → logprob: -6.695026874542236
    9. 'ents' → logprob: -6.945026874542236
    10. '_' → logprob: -7.195026874542236

Token 410: '(pos' (ID: 24566)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9916611909866333
    2. 't' → logprob: -1.2416611909866333
    3. 'g' → logprob: -2.1166610717773438
    4. '():' → logprob: -2.6166610717773438
    5. '_' → logprob: -2.8666610717773438
    6. 'ts' → logprob: -2.9916610717773438
    7. '(' → logprob: -4.616661071777344
    8. 'def' → logprob: -4.616661071777344
    9. '_t' → logprob: -5.741661071777344
    10. '()' → logprob: -6.116661071777344

Token 411: '_set' (ID: 5451)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7033326029777527
    2. 's' → logprob: -1.4533326625823975
    3. ')' → logprob: -1.9533326625823975
    4. '):' → logprob: -2.4533326625823975
    5. '):
' → logprob: -3.8283326625823975
    6. 'itions' → logprob: -4.703332424163818
    7. 'ition' → logprob: -5.953332424163818
    8. '_pairs' → logprob: -6.203332424163818
    9. '=' → logprob: -6.453332424163818
    10. 'ts' → logprob: -6.578332424163818

Token 412: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07182285934686661
    2. '):
' → logprob: -2.6968228816986084
    3. 's' → logprob: -6.571822643280029
    4. ')' → logprob: -8.571823120117188
    5. 'et' → logprob: -9.571823120117188
    6. 't' → logprob: -10.071823120117188
    7. '):

' → logprob: -10.446823120117188
    8. 'u' → logprob: -10.571823120117188
    9. '):
' → logprob: -10.571823120117188
    10. 'ets' → logprob: -10.696823120117188

Token 413: ' relative' (ID: 15001)
  Prédit: ' pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -1.3304443359375
    2. '2' → logprob: -1.4554443359375
    3. 'pairs' → logprob: -1.8304443359375
    4. ' ' → logprob: -1.9554443359375
    5. ' k' → logprob: -2.9554443359375
    6. 'k' → logprob: -3.7054443359375
    7. ' len' → logprob: -4.0804443359375
    8. 'len' → logprob: -4.0804443359375
    9. ' size' → logprob: -4.0804443359375
    10. 'pair' → logprob: -4.2054443359375

Token 414: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.18401750922203064
    2. 's' → logprob: -2.4340174198150635
    3. '_pairs' → logprob: -3.3090174198150635
    4. '_vectors' → logprob: -3.8090174198150635
    5. '_rel' → logprob: -4.934017658233643
    6. '_' → logprob: -5.059017658233643
    7. '_pos' → logprob: -5.684017658233643
    8. '_s' → logprob: -6.809017658233643
    9. '_position' → logprob: -6.934017658233643
    10. ')' → logprob: -7.059017658233643

Token 415: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008776000700891018
    2. ',' → logprob: -5.3837761878967285
    3. '):
' → logprob: -5.7587761878967285
    4. ')' → logprob: -7.2587761878967285
    5. ' ):' → logprob: -8.38377571105957
    6. '=' → logprob: -10.63377571105957
    7. '):
' → logprob: -11.38377571105957
    8. '):

' → logprob: -12.25877571105957
    9. 's' → logprob: -12.75877571105957
    10. ' ,' → logprob: -13.00877571105957

Token 416: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09149271994829178
    2. '   ' → logprob: -2.7164926528930664
    3. '):' → logprob: -4.966492652893066
    4. 's' → logprob: -5.216492652893066
    5. ':
' → logprob: -5.466492652893066
    6. '(' → logprob: -6.841492652893066
    7. ',' → logprob: -7.216492652893066
    8. 'def' → logprob: -7.341492652893066
    9. ')' → logprob: -7.716492652893066
    10. '):
' → logprob: -7.841492652893066

Token 417: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023613352328538895
    2. ' pairs' → logprob: -4.398613452911377
    3. 'pairs' → logprob: -5.523613452911377
    4. ' if' → logprob: -5.773613452911377
    5. 'def' → logprob: -6.773613452911377
    6. ':' → logprob: -7.523613452911377
    7. 'if' → logprob: -8.023612976074219
    8. ' for' → logprob: -8.648612976074219
    9. '[' → logprob: -8.773612976074219
    10. ' def' → logprob: -8.898612976074219

Token 418: ' Essa' (ID: 65282)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5514753460884094
    2. ' if' → logprob: -1.4264752864837646
    3. '   ' → logprob: -2.6764752864837646
    4. 'result' → logprob: -3.8014752864837646
    5. 'par' → logprob: -3.9264752864837646
    6. 'def' → logprob: -4.051475524902344
    7. 'res' → logprob: -4.676475524902344
    8. 'pair' → logprob: -4.801475524902344
    9. ' res' → logprob: -4.926475524902344
    10. ' pair' → logprob: -5.426475524902344

Token 419: 'ie' (ID: 396)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.24949005246162415
    2. 'yer' → logprob: -1.6244900226593018
    3. 'yez' → logprob: -4.249490261077881
    4. 'ye' → logprob: -4.874490261077881
    5. 'yers' → logprob: -7.249490261077881
    6. 'yes' → logprob: -7.499490261077881
    7. 'ys' → logprob: -8.249489784240723
    8. 'yed' → logprob: -8.499489784240723
    9. 'yage' → logprob: -10.249489784240723
    10. 'ie' → logprob: -10.999489784240723

Token 420: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12855887413024902
    2. ':' → logprob: -2.878558874130249
    3. ' de' → logprob: -3.003558874130249
    4. ' d' → logprob: -5.253559112548828
    5. 'd' → logprob: -5.878559112548828
    6. '  ' → logprob: -6.003559112548828
    7. 'def' → logprob: -6.253559112548828
    8. 's' → logprob: -7.628559112548828
    9. ' ' → logprob: -7.753559112548828
    10. ' :' → logprob: -8.003559112548828

Token 421: ' produire' (ID: 107823)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.064498171210289
    2. 'generate' → logprob: -3.43949818611145
    3. ' []' → logprob: -4.939497947692871
    4. 'comb' → logprob: -5.439497947692871
    5. 'com' → logprob: -5.564497947692871
    6. '[]
' → logprob: -6.064497947692871
    7. 'len' → logprob: -6.189497947692871
    8. 'def' → logprob: -6.314497947692871
    9. 'form' → logprob: -6.439497947692871
    10. 'pair' → logprob: -6.814497947692871

Token 422: ' un' (ID: 537)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.41506946086883545
    2. ' toutes' → logprob: -1.7900694608688354
    3. ' des' → logprob: -2.415069580078125
    4. '[]' → logprob: -3.165069580078125
    5. 'all' → logprob: -4.290069580078125
    6. ' ' → logprob: -4.415069580078125
    7. ' tous' → logprob: -5.915069580078125
    8. ' []' → logprob: -6.040069580078125
    9. 'des' → logprob: -6.040069580078125
    10. 's' → logprob: -6.165069580078125

Token 423: ' app' (ID: 1053)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.16242574155330658
    2. ' all' → logprob: -3.9124257564544678
    3. ' pairing' → logprob: -3.9124257564544678
    4. ' par' → logprob: -4.037425518035889
    5. 'par' → logprob: -4.412425518035889
    6. 'all' → logprob: -4.412425518035889
    7. ' app' → logprob: -4.537425518035889
    8. 'p' → logprob: -4.662425518035889
    9. ' p' → logprob: -4.787425518035889
    10. 'part' → logprob: -4.912425518035889

Token 424: 'ari' (ID: 1683)
  Prédit: 'ari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ari' → logprob: -0.01450746227055788
    2. 'air' → logprob: -4.639507293701172
    3. 'ar' → logprob: -6.139507293701172
    4. 'a' → logprob: -6.889507293701172
    5. 'ariant' → logprob: -8.014507293701172
    6. 'ai' → logprob: -8.514507293701172
    7. 'aire' → logprob: -9.389507293701172
    8. 'oint' → logprob: -9.514507293701172
    9. 'ent' → logprob: -9.827007293701172
    10. 'art' → logprob: -10.014507293701172

Token 425: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.10938768833875656
    2. 'ements' → logprob: -2.9843876361846924
    3. 't' → logprob: -3.7343876361846924
    4. 'ment' → logprob: -4.4843878746032715
    5. 'e' → logprob: -4.9843878746032715
    6. 's' → logprob: -5.4843878746032715
    7. 'rement' → logprob: -6.4843878746032715
    8. 'gement' → logprob: -6.9843878746032715
    9. 'sement' → logprob: -7.1093878746032715
    10. 'nement' → logprob: -7.3593878746032715

Token 426: ' valide' (ID: 137323)
  Prédit: ' complet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' complet' → logprob: -0.6890996694564819
    2. 's' → logprob: -1.439099669456482
    3. '   ' → logprob: -1.939099669456482
    4. '(' → logprob: -3.6890997886657715
    5. ' ' → logprob: -3.8140997886657715
    6. '(s' → logprob: -4.1890997886657715
    7. ' s' → logprob: -4.3140997886657715
    8. ' (' → logprob: -4.6890997886657715
    9. ' possible' → logprob: -5.3140997886657715
    10. ' de' → logprob: -5.5640997886657715

Token 427: ' de' (ID: 334)
  Prédit: ' complet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' complet' → logprob: -0.7253625392913818
    2. '   ' → logprob: -1.6003625392913818
    3. ' (' → logprob: -2.225362539291382
    4. '(pos' → logprob: -2.600362539291382
    5. 's' → logprob: -3.475362539291382
    6. ',' → logprob: -4.475362777709961
    7. ' des' → logprob: -4.475362777709961
    8. '(' → logprob: -4.600362777709961
    9. ' if' → logprob: -4.725362777709961
    10. ' pos' → logprob: -4.725362777709961

Token 428: ' toutes' (ID: 17502)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.3082987070083618
    2. 'pairs' → logprob: -1.9332987070083618
    3. ' pos' → logprob: -3.3082985877990723
    4. 'p' → logprob: -3.4332985877990723
    5. ' pairs' → logprob: -4.058298587799072
    6. ' p' → logprob: -4.308298587799072
    7. 'positions' → logprob: -5.558298587799072
    8. 'pair' → logprob: -5.683298587799072
    9. '[]' → logprob: -5.808298587799072
    10. '[' → logprob: -5.808298587799072

Token 429: ' les' (ID: 1341)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.7132608890533447
    2. 'pos' → logprob: -1.0882608890533447
    3. ' positions' → logprob: -2.2132608890533447
    4. ' pos' → logprob: -3.0882608890533447
    5. 'pairs' → logprob: -5.338260650634766
    6. ' pairs' → logprob: -5.463260650634766
    7. ' p' → logprob: -6.213260650634766
    8. 'p' → logprob: -6.338260650634766
    9. 'poss' → logprob: -6.338260650634766
    10. ' les' → logprob: -6.588260650634766

Token 430: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.19628554582595825
    2. ' positions' → logprob: -1.8212854862213135
    3. 'pos' → logprob: -4.446285724639893
    4. 'p' → logprob: -7.196285724639893
    5. ' ' → logprob: -7.196285724639893
    6. 'pairs' → logprob: -7.446285724639893
    7. ' pos' → logprob: -7.571285724639893
    8. ' pairs' → logprob: -7.571285724639893
    9. ' p' → logprob: -7.571285724639893
    10. 'position' → logprob: -7.946285724639893

Token 431: ' du' (ID: 1462)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6610756516456604
    2. ' en' → logprob: -1.9110755920410156
    3. ' ,' → logprob: -2.0360755920410156
    4. ' ' → logprob: -3.4110755920410156
    5. '   ' → logprob: -3.6610755920410156
    6. 'def' → logprob: -3.7860755920410156
    7. ' (' → logprob: -3.9110755920410156
    8. ':' → logprob: -4.161075592041016
    9. ' avec' → logprob: -4.786075592041016
    10. '.' → logprob: -4.786075592041016

Token 432: ' set' (ID: 920)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.004685376305133104
    2. ' pos' → logprob: -5.379685401916504
    3. 'set' → logprob: -10.879685401916504
    4. 'ensemble' → logprob: -10.879685401916504
    5. '```' → logprob: -12.504685401916504
    6. 'position' → logprob: -12.754685401916504
    7. 'list' → logprob: -13.004685401916504
    8. '_pos' → logprob: -13.379685401916504
    9. 'p' → logprob: -13.504685401916504
    10. ' ' → logprob: -13.754685401916504

Token 433: ' pos' (ID: 1253)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6374077796936035
    2. '   ' → logprob: -1.3874077796936035
    3. ' ,' → logprob: -2.2624077796936035
    4. ' en' → logprob: -3.2624077796936035
    5. ' ' → logprob: -3.8874077796936035
    6. ' (' → logprob: -4.0124077796936035
    7. '(' → logprob: -5.1374077796936035
    8. ' avec' → logprob: -5.3874077796936035
    9. ' pos' → logprob: -5.5124077796936035
    10. ' par' → logprob: -5.5124077796936035

Token 434: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.7013837695121765
    2. '_' → logprob: -1.2013838291168213
    3. ' _' → logprob: -1.7013838291168213
    4. '   ' → logprob: -4.326383590698242
    5. '_s' → logprob: -5.826383590698242
    6. ' ' → logprob: -6.826383590698242
    7. ',' → logprob: -7.451383590698242
    8. '_t' → logprob: -7.826383590698242
    9. 'et' → logprob: -8.076383590698242
    10. '{' → logprob: -8.451383590698242

Token 435: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6200082898139954
    2. '   ' → logprob: -1.3700082302093506
    3. ':' → logprob: -2.1200082302093506
    4. ' :' → logprob: -2.9950082302093506
    5. '(' → logprob: -4.74500846862793
    6. ' ,' → logprob: -4.87000846862793
    7. ' en' → logprob: -5.49500846862793
    8. ' ' → logprob: -5.74500846862793
    9. ' (' → logprob: -5.99500846862793
    10. '<|end|>' → logprob: -6.62000846862793

Token 436: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8769958019256592
    2. ':' → logprob: -1.1269958019256592
    3. '   ' → logprob: -1.5019958019256592
    4. ' :' → logprob: -3.876995801925659
    5. 'def' → logprob: -5.376996040344238
    6. ' ,' → logprob: -6.001996040344238
    7. ' ' → logprob: -6.626996040344238
    8. ' en' → logprob: -6.876996040344238
    9. '.' → logprob: -7.001996040344238
    10. '(' → logprob: -7.126996040344238

Token 437: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19839811325073242
    2. ' :' → logprob: -2.3233981132507324
    3. '   ' → logprob: -2.9483981132507324
    4. ' :
' → logprob: -4.448398113250732
    5. ':
' → logprob: -4.948398113250732
    6. ',' → logprob: -5.823398113250732
    7. '():' → logprob: -6.198398113250732
    8. '(' → logprob: -6.323398113250732
    9. ' (' → logprob: -7.198398113250732
    10. '):' → logprob: -7.198398113250732

Token 438: ' avec' (ID: 3937)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.415636271238327
    2. 'if' → logprob: -1.4156363010406494
    3. '   ' → logprob: -2.7906363010406494
    4. 'def' → logprob: -3.4156363010406494
    5. 'pos' → logprob: -7.04063606262207
    6. ' positions' → logprob: -7.41563606262207
    7. 'positions' → logprob: -7.54063606262207
    8. ' def' → logprob: -7.66563606262207
    9. ' pos' → logprob: -8.04063606262207
    10. ' ' → logprob: -10.04063606262207

Token 439: ' la' (ID: 557)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.0318161249160767
    2. '[]' → logprob: -1.5318161249160767
    3. ' len' → logprob: -1.7818161249160767
    4. 'relative' → logprob: -3.281816005706787
    5. 'pos' → logprob: -3.406816005706787
    6. 'rel' → logprob: -3.656816005706787
    7. 'def' → logprob: -3.656816005706787
    8. ' pairs' → logprob: -3.906816005706787
    9. ' rel' → logprob: -4.031816005706787
    10. ' relative' → logprob: -4.031816005706787

Token 440: ' contr' (ID: 6030)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2468712329864502
    2. 'len' → logprob: -1.6218712329864502
    3. ' def' → logprob: -5.121870994567871
    4. ' len' → logprob: -5.246870994567871
    5. 'rel' → logprob: -6.121870994567871
    6. 'poss' → logprob: -6.246870994567871
    7. 'pos' → logprob: -7.121870994567871
    8. 'possible' → logprob: -7.121870994567871
    9. 'from' → logprob: -8.371870994567871
    10. 'relative' → logprob: -8.621870994567871

Token 441: 'ainte' (ID: 48434)
  Prédit: 'ainte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainte' → logprob: -0.002396463416516781
    2. 'a' → logprob: -6.377396583557129
    3. 'aint' → logprob: -7.502396583557129
    4. 'ain' → logprob: -9.502396583557129
    5. 'aine' → logprob: -11.502396583557129
    6. 'o' → logprob: -12.002396583557129
    7. '#' → logprob: -12.127396583557129
    8. '```' → logprob: -12.502396583557129
    9. '``' → logprob: -12.627396583557129
    10. 'aiste' → logprob: -12.752396583557129

Token 442: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.6667696833610535
    2. ' de' → logprob: -1.1667697429656982
    3. ' d' → logprob: -2.7917697429656982
    4. 'd' → logprob: -3.9167697429656982
    5. ' that' → logprob: -4.166769504547119
    6. '   ' → logprob: -4.166769504547119
    7. 's' → logprob: -4.541769504547119
    8. 'de' → logprob: -4.541769504547119
    9. ' qu' → logprob: -4.541769504547119
    10. ' des' → logprob: -5.166769504547119

Token 443: ' chaque' (ID: 21194)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.33781418204307556
    2. 'len' → logprob: -1.462814211845398
    3. ' not' → logprob: -4.0878143310546875
    4. 'pos' → logprob: -4.5878143310546875
    5. ' pos' → logprob: -5.3378143310546875
    6. ' pairs' → logprob: -5.4628143310546875
    7. ' la' → logprob: -5.8378143310546875
    8. 'pair' → logprob: -5.9628143310546875
    9. ' pair' → logprob: -6.0878143310546875
    10. ' chaque' → logprob: -6.2128143310546875

Token 444: ' paire' (ID: 148856)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -1.4230659008026123
    2. 'pos' → logprob: -1.7980659008026123
    3. ' pair' → logprob: -1.7980659008026123
    4. ' paire' → logprob: -1.9230659008026123
    5. ' position' → logprob: -2.1730659008026123
    6. 'position' → logprob: -2.5480659008026123
    7. ' pos' → logprob: -2.6730659008026123
    8. ' p' → logprob: -5.048066139221191
    9. ' next' → logprob: -6.298066139221191
    10. 'p' → logprob: -6.298066139221191

Token 445: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.8035195469856262
    2. ' doit' → logprob: -1.5535194873809814
    3. 'est' → logprob: -2.0535194873809814
    4. ' soit' → logprob: -3.0535194873809814
    5. ' de' → logprob: -3.6785194873809814
    6. ' (' → logprob: -3.8035194873809814
    7. 's' → logprob: -3.9285194873809814
    8. 'd' → logprob: -3.9285194873809814
    9. ' se' → logprob: -4.5535197257995605
    10. 'de' → logprob: -5.0535197257995605

Token 446: ' dis' (ID: 829)
  Prédit: ' form'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' form' → logprob: -0.2205486297607422
    2. 'form' → logprob: -2.720548629760742
    3. ' composée' → logprob: -2.845548629760742
    4. ' (' → logprob: -3.720548629760742
    5. '(' → logprob: -3.845548629760742
    6. ' constitu' → logprob: -4.345548629760742
    7. 'com' → logprob: -5.345548629760742
    8. '((' → logprob: -6.220548629760742
    9. '(x' → logprob: -7.220548629760742
    10. ' un' → logprob: -7.220548629760742

Token 447: 'joint' (ID: 69164)
  Prédit: 'join'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.7509356737136841
    2. 't' → logprob: -1.500935673713684
    3. 'joint' → logprob: -1.625935673713684
    4. 'j' → logprob: -2.8759355545043945
    5. 'continue' → logprob: -4.6259355545043945
    6. '{' → logprob: -5.3759355545043945
    7. 'jo' → logprob: -5.5009355545043945
    8. 'ting' → logprob: -5.6259355545043945
    9. ')' → logprob: -5.7509355545043945
    10. '   ' → logprob: -6.0009355545043945

Token 448: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3011609315872192
    2. ' et' → logprob: -1.5511609315872192
    3. 'def' → logprob: -2.1761608123779297
    4. 'e' → logprob: -2.3011608123779297
    5. ' ,' → logprob: -2.8011608123779297
    6. ' (' → logprob: -3.3011608123779297
    7. '   ' → logprob: -3.4261608123779297
    8. ' def' → logprob: -3.8011608123779297
    9. ' des' → logprob: -3.9261608123779297
    10. 'u' → logprob: -4.30116081237793

Token 449: ' correspond' (ID: 11095)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -1.3180866241455078
    2. ' que' → logprob: -2.693086624145508
    3. ' form' → logprob: -2.693086624145508
    4. ' toutes' → logprob: -2.943086624145508
    5. 'adj' → logprob: -2.943086624145508
    6. 'que' → logprob: -3.193086624145508
    7. ' adj' → logprob: -3.318086624145508
    8. 'util' → logprob: -3.943086624145508
    9. 'covered' → logprob: -4.068086624145508
    10. 'form' → logprob: -4.068086624145508

Token 450: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.09955962002277374
    2. ' aux' → logprob: -2.8495595455169678
    3. 'à' → logprob: -3.8495595455169678
    4. 'aux' → logprob: -5.474559783935547
    5. ' ' → logprob: -5.974559783935547
    6. ' au' → logprob: -6.099559783935547
    7. '   ' → logprob: -6.474559783935547
    8. ''à' → logprob: -6.474559783935547
    9. 'au' → logprob: -7.349559783935547
    10. 'a' → logprob: -7.724559783935547

Token 451: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.7384952306747437
    2. 'un' → logprob: -1.3634952306747437
    3. ' une' → logprob: -1.6134952306747437
    4. 'une' → logprob: -2.988495349884033
    5. ' l' → logprob: -5.613495349884033
    6. 'rel' → logprob: -5.988495349884033
    7. 'l' → logprob: -6.113495349884033
    8. ' ' → logprob: -6.738495349884033
    9. ' a' → logprob: -6.738495349884033
    10. 'a' → logprob: -6.863495349884033

Token 452: ' des' (ID: 731)
  Prédit: 'rel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rel' → logprob: -1.3026652336120605
    2. 'vect' → logprob: -1.5526652336120605
    3. ' déplacement' → logprob: -2.0526652336120605
    4. ' vect' → logprob: -2.1776652336120605
    5. 'move' → logprob: -3.1776652336120605
    6. 'relative' → logprob: -3.3026652336120605
    7. 'vec' → logprob: -3.5526652336120605
    8. 'dé' → logprob: -3.6776652336120605
    9. ' mouvement' → logprob: -3.8026652336120605
    10. 'des' → logprob: -4.1776652336120605

Token 453: ' relat' (ID: 37575)
  Prédit: 'relative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'relative' → logprob: -0.36228230595588684
    2. ' relative' → logprob: -1.2372822761535645
    3. 'rel' → logprob: -4.8622822761535645
    4. 'vec' → logprob: -6.3622822761535645
    5. ' vect' → logprob: -6.4872822761535645
    6. ' vectors' → logprob: -6.8622822761535645
    7. ' rel' → logprob: -7.7372822761535645
    8. 'vectors' → logprob: -8.362282752990723
    9. 'vect' → logprob: -8.737282752990723
    10. ' ' → logprob: -9.112282752990723

Token 454: 'ifs' (ID: 14119)
  Prédit: 'ive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ive' → logprob: -0.027151644229888916
    2. 'ions' → logprob: -3.777151584625244
    3. 'if' → logprob: -6.777151584625244
    4. 've' → logprob: -6.902151584625244
    5. 'e' → logprob: -7.902151584625244
    6. 'ives' → logprob: -7.902151584625244
    7. 'ion' → logprob: -8.027152061462402
    8. 'ed' → logprob: -8.902152061462402
    9. 'positions' → logprob: -9.027152061462402
    10. 'ifs' → logprob: -9.152152061462402

Token 455: ' donn' (ID: 20414)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3365486264228821
    2. ':' → logprob: -1.8365485668182373
    3. 'def' → logprob: -3.2115485668182373
    4. ' :' → logprob: -4.086548805236816
    5. '):' → logprob: -4.461548805236816
    6. ',' → logprob: -4.461548805236816
    7. ')' → logprob: -4.586548805236816
    8. ' ' → logprob: -4.711548805236816
    9. ':
' → logprob: -5.336548805236816
    10. '(' → logprob: -5.336548805236816

Token 456: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.016056424006819725
    2. 'es' → logprob: -4.766056537628174
    3. 'é' → logprob: -5.641056537628174
    4. 's' → logprob: -6.391056537628174
    5. ')' → logprob: -7.766056537628174
    6. 'ées' → logprob: -8.391056060791016
    7. '   ' → logprob: -8.516056060791016
    8. 'positions' → logprob: -8.766056060791016
    9. 'ed' → logprob: -8.891056060791016
    10. 'is' → logprob: -9.016056060791016

Token 457: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04272075742483139
    2. 'def' → logprob: -3.5427207946777344
    3. ':' → logprob: -5.542720794677734
    4. ',' → logprob: -5.542720794677734
    5. '
' → logprob: -6.792720794677734
    6. '):
' → logprob: -6.917720794677734
    7. '    
' → logprob: -7.292720794677734
    8. ':
' → logprob: -7.542720794677734
    9. ' def' → logprob: -7.542720794677734
    10. '):' → logprob: -8.167720794677734

Token 458: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00975113082677126
    2. ' if' → logprob: -4.884751319885254
    3. 'def' → logprob: -6.634751319885254
    4. 'if' → logprob: -8.634751319885254
    5. ' def' → logprob: -9.134751319885254
    6. ',' → logprob: -9.259751319885254
    7. '):
' → logprob: -9.509751319885254
    8. ':' → logprob: -9.634751319885254
    9. ')' → logprob: -9.884751319885254
    10. ' pos' → logprob: -10.009751319885254

Token 459: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2546021342277527
    2. ' if' → logprob: -2.2546021938323975
    3. 'pos' → logprob: -3.2546021938323975
    4. 'pairs' → logprob: -3.5046021938323975
    5. 'def' → logprob: -3.6296021938323975
    6. '   ' → logprob: -4.254601955413818
    7. 'res' → logprob: -6.254601955413818
    8. 'used' → logprob: -6.254601955413818
    9. ' pairs' → logprob: -6.504601955413818
    10. 'result' → logprob: -7.004601955413818

Token 460: ' pos' (ID: 1253)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3159400224685669
    2. ' if' → logprob: -1.815940022468567
    3. 'def' → logprob: -2.3159399032592773
    4. 'pos' → logprob: -5.315939903259277
    5. 'pairs' → logprob: -6.440939903259277
    6. ' def' → logprob: -7.315939903259277
    7. '   ' → logprob: -7.315939903259277
    8. 'result' → logprob: -7.940939903259277
    9. 'from' → logprob: -8.565939903259277
    10. ' pos' → logprob: -8.940939903259277

Token 461: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.07527371495962143
    2. '_list' → logprob: -3.3252737522125244
    3. 's' → logprob: -3.5752737522125244
    4. 'itions' → logprob: -5.325273513793945
    5. 'set' → logprob: -7.075273513793945
    6. 'sible' → logprob: -7.325273513793945
    7. '_positions' → logprob: -7.450273513793945
    8. '_s' → logprob: -7.700273513793945
    9. 'ions' → logprob: -7.950273513793945
    10. 'et' → logprob: -9.075273513793945

Token 462: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2536655366420746
    2. '=' → logprob: -1.503665566444397
    3. '=set' → logprob: -6.753665447235107
    4. '=list' → logprob: -7.753665447235107
    5. '_list' → logprob: -10.378665924072266
    6. '_set' → logprob: -10.753665924072266
    7. '   ' → logprob: -11.003665924072266
    8. 'set' → logprob: -11.503665924072266
    9. 'list' → logprob: -11.628665924072266
    10. '_sorted' → logprob: -12.003665924072266

Token 463: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.2048763483762741
    2. 'set' → logprob: -1.8298763036727905
    3. ' list' → logprob: -3.82987642288208
    4. 'list' → logprob: -6.07987642288208
    5. ' pos' → logprob: -7.82987642288208
    6. 'pos' → logprob: -8.829875946044922
    7. ' sorted' → logprob: -9.454875946044922
    8. ' fro' → logprob: -9.954875946044922
    9. 'sorted' → logprob: -10.829875946044922
    10. 'fro' → logprob: -10.829875946044922

Token 464: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09818040579557419
    2. ' )' → logprob: -3.3481802940368652
    3. ' of' → logprob: -3.3481802940368652
    4. '<|end|>' → logprob: -5.348180294036865
    5. '   ' → logprob: -5.723180294036865
    6. '(pos' → logprob: -5.723180294036865
    7. ',' → logprob: -5.723180294036865
    8. '<|end|>' → logprob: -6.723180294036865
    9. ' ,' → logprob: -6.848180294036865
    10. ' =' → logprob: -7.223180294036865

Token 465: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.1839487999677658
    2. 'pos' → logprob: -2.5589487552642822
    3. ' positions' → logprob: -2.6839487552642822
    4. ' tuples' → logprob: -4.433948993682861
    5. 'tuple' → logprob: -5.308948993682861
    6. ' tuple' → logprob: -5.933948993682861
    7. ' pos' → logprob: -7.058948993682861
    8. ')' → logprob: -7.433948993682861
    9. 'int' → logprob: -7.683948993682861
    10. 'tu' → logprob: -8.183948516845703

Token 466: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0039749145507812
    2. ')' → logprob: -1.2539749145507812
    3. ',' → logprob: -1.7539749145507812
    4. '   ' → logprob: -2.2539749145507812
    5. ' (' → logprob: -3.7539749145507812
    6. ' )' → logprob: -4.128974914550781
    7. 'def' → logprob: -5.253974914550781
    8. ' ,' → logprob: -5.378974914550781
    9. '):
' → logprob: -5.378974914550781
    10. '=' → logprob: -5.503974914550781

Token 467: 'x' (ID: 87)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03220444172620773
    2. ' )' → logprob: -3.6572043895721436
    3. ' tuples' → logprob: -6.782204627990723
    4. 'positions' → logprob: -6.907204627990723
    5. 'tuple' → logprob: -7.407204627990723
    6. '{' → logprob: -7.407204627990723
    7. 'pos' → logprob: -7.532204627990723
    8. 'set' → logprob: -7.782204627990723
    9. ' (' → logprob: -8.282204627990723
    10. ' tuple' → logprob: -8.407204627990723

Token 468: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021285545080900192
    2. ',y' → logprob: -3.8962855339050293
    3. ' ,' → logprob: -7.271285533905029
    4. ',
' → logprob: -11.646286010742188
    5. 'y' → logprob: -11.896286010742188
    6. ',Y' → logprob: -12.646286010742188
    7. '‌,' → logprob: -12.896286010742188
    8. ',n' → logprob: -13.021286010742188
    9. ',)' → logprob: -13.021286010742188
    10. ')' → logprob: -13.146286010742188

Token 469: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002411800203844905
    2. ')
' → logprob: -6.127411842346191
    3. ' )' → logprob: -8.627411842346191
    4. '),' → logprob: -11.377411842346191
    5. '{' → logprob: -11.627411842346191
    6. '   ' → logprob: -12.377411842346191
    7. ',' → logprob: -12.502411842346191
    8. ')

' → logprob: -12.627411842346191
    9. '):
' → logprob: -12.877411842346191
    10. '):' → logprob: -13.002411842346191

Token 470: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014376221224665642
    2. 'def' → logprob: -5.389376163482666
    3. ' if' → logprob: -5.889376163482666
    4. ',' → logprob: -6.014376163482666
    5. 'if' → logprob: -6.014376163482666
    6. ')' → logprob: -7.139376163482666
    7. '    
' → logprob: -7.889376163482666
    8. 'positions' → logprob: -8.389376640319824
    9. 'pos' → logprob: -8.639376640319824
    10. '
' → logprob: -9.889376640319824

Token 471: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9238642454147339
    2. '   ' → logprob: -1.1738642454147339
    3. 'if' → logprob: -1.6738642454147339
    4. 'pos' → logprob: -2.9238643646240234
    5. ' pos' → logprob: -3.6738643646240234
    6. 'def' → logprob: -4.923864364624023
    7. 'positions' → logprob: -5.298864364624023
    8. ' positions' → logprob: -5.548864364624023
    9. 'pairs' → logprob: -5.548864364624023
    10. ' pairs' → logprob: -5.798864364624023

Token 472: ' relative' (ID: 15001)
  Prédit: 'relative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'relative' → logprob: -1.6332091093063354
    2. ' relative' → logprob: -2.133209228515625
    3. ' used' → logprob: -2.258209228515625
    4. ' if' → logprob: -2.508209228515625
    5. 'result' → logprob: -2.508209228515625
    6. 'used' → logprob: -2.633209228515625
    7. 'pairs' → logprob: -2.633209228515625
    8. 'if' → logprob: -3.008209228515625
    9. ' pairs' → logprob: -3.008209228515625
    10. 'def' → logprob: -3.133209228515625

Token 473: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.0005538671393878758
    2. '_' → logprob: -8.250554084777832
    3. 'positions' → logprob: -9.125554084777832
    4. 's' → logprob: -9.750554084777832
    5. '_pos' → logprob: -9.750554084777832
    6. '_rel' → logprob: -11.625554084777832
    7. '_position' → logprob: -12.000554084777832
    8. 'Positions' → logprob: -12.375554084777832
    9. ')_' → logprob: -12.500554084777832
    10. '_pairs' → logprob: -12.500554084777832

Token 474: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5550575852394104
    2. ' =' → logprob: -1.0550575256347656
    3. '=' → logprob: -2.8050575256347656
    4. '):' → logprob: -4.555057525634766
    5. ' :' → logprob: -5.305057525634766
    6. ')' → logprob: -7.055057525634766
    7. ',' → logprob: -7.555057525634766
    8. ' ):' → logprob: -8.805057525634766
    9. ' ' → logprob: -8.930057525634766
    10. 's' → logprob: -10.805057525634766

Token 475: ' liste' (ID: 31719)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.23143620789051056
    2. 'list' → logprob: -2.356436252593994
    3. 'set' → logprob: -3.231436252593994
    4. ' list' → logprob: -3.606436252593994
    5. '[' → logprob: -3.731436252593994
    6. ' set' → logprob: -4.731436252593994
    7. ' [(' → logprob: -5.231436252593994
    8. '[
' → logprob: -5.731436252593994
    9. 'relative' → logprob: -6.856436252593994
    10. 'rel' → logprob: -7.106436252593994

Token 476: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.1265835762023926
    2. ' of' → logprob: -1.6265835762023926
    3. 'des' → logprob: -1.8765835762023926
    4. ' de' → logprob: -1.8765835762023926
    5. 'de' → logprob: -2.8765835762023926
    6. '[(' → logprob: -3.2515835762023926
    7. 'd' → logprob: -3.3765835762023926
    8. '[' → logprob: -3.8765835762023926
    9. ' d' → logprob: -4.876583576202393
    10. 'of' → logprob: -5.501583576202393

Token 477: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.49452269077301025
    2. 'tu' → logprob: -2.4945225715637207
    3. '[(' → logprob: -2.4945225715637207
    4. ' tuples' → logprob: -2.6195225715637207
    5. 'rel' → logprob: -2.8695225715637207
    6. '(x' → logprob: -4.244522571563721
    7. ' (' → logprob: -4.244522571563721
    8. '(rel' → logprob: -4.494522571563721
    9. 'neighbors' → logprob: -4.619522571563721
    10. 'tuple' → logprob: -4.619522571563721

Token 478: '4' (ID: 19)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10933937877416611
    2. '(pos' → logprob: -3.609339475631714
    3. '[(' → logprob: -3.609339475631714
    4. 'rel' → logprob: -4.609339237213135
    5. 'positions' → logprob: -5.109339237213135
    6. 'tu' → logprob: -5.109339237213135
    7. 'neighbors' → logprob: -5.109339237213135
    8. '(ne' → logprob: -5.234339237213135
    9. '(rel' → logprob: -5.609339237213135
    10. ' (' → logprob: -5.859339237213135

Token 479: ' tuples' (ID: 112464)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.484470009803772
    2. 'dire' → logprob: -1.859470009803772
    3. '[' → logprob: -2.2344698905944824
    4. 'rel' → logprob: -3.2344698905944824
    5. ' directions' → logprob: -3.2344698905944824
    6. '(' → logprob: -4.984469890594482
    7. ' [(' → logprob: -5.109469890594482
    8. '_rel' → logprob: -5.484469890594482
    9. '[
' → logprob: -5.484469890594482
    10. ' [' → logprob: -5.609469890594482

Token 480: ' (' (ID: 350)
  Prédit: ' [('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [(' → logprob: -1.3624647855758667
    2. '<|end|>' → logprob: -1.3624647855758667
    3. '[(' → logprob: -1.4874647855758667
    4. '   ' → logprob: -2.4874649047851562
    5. ' (' → logprob: -3.3624649047851562
    6. ' =' → logprob: -3.7374649047851562
    7. ':' → logprob: -3.7374649047851562
    8. '[' → logprob: -3.9874649047851562
    9. ')' → logprob: -4.237464904785156
    10. ' :' → logprob: -4.612464904785156

Token 481: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.5408257842063904
    2. '0' → logprob: -1.2908258438110352
    3. ' dx' → logprob: -2.665825843811035
    4. '1' → logprob: -3.415825843811035
    5. ')' → logprob: -4.540825843811035
    6. ' ' → logprob: -4.540825843811035
    7. '-' → logprob: -4.665825843811035
    8. '(dx' → logprob: -6.040825843811035
    9. '(' → logprob: -6.165825843811035
    10. ' (' → logprob: -7.290825843811035

Token 482: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013798571308143437
    2. ' ,' → logprob: -9.000138282775879
    3. ',
' → logprob: -12.625138282775879
    4. '[' → logprob: -13.250138282775879
    5. ',d' → logprob: -13.250138282775879
    6. 'dy' → logprob: -13.875138282775879
    7. '   ' → logprob: -14.000138282775879
    8. '1' → logprob: -14.250138282775879
    9. '<|end|>' → logprob: -14.375138282775879
    10. ',y' → logprob: -14.625138282775879

Token 483: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.07889242470264435
    2. ' dy' → logprob: -2.578892469406128
    3. ' ' → logprob: -13.328892707824707
    4. '0' → logprob: -14.703892707824707
    5. '   ' → logprob: -15.578892707824707
    6. ',' → logprob: -16.07889175415039
    7. '-d' → logprob: -16.20389175415039
    8. '.dy' → logprob: -16.20389175415039
    9. '  ' → logprob: -16.95389175415039
    10. '
' → logprob: -17.32889175415039

Token 484: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00029244067263789475
    2. ' )' → logprob: -9.125292778015137
    3. ')
' → logprob: -9.250292778015137
    4. '   ' → logprob: -10.250292778015137
    5. '),' → logprob: -11.000292778015137
    6. '):' → logprob: -11.625292778015137
    7. ',' → logprob: -12.125292778015137
    8. '):
' → logprob: -12.500292778015137
    9. ')

' → logprob: -12.875292778015137
    10. ')]' → logprob: -13.250292778015137

Token 485: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012155702337622643
    2. 'def' → logprob: -5.262155532836914
    3. ':' → logprob: -5.387155532836914
    4. '    
' → logprob: -6.387155532836914
    5. 'if' → logprob: -8.262155532836914
    6. ' if' → logprob: -9.262155532836914
    7. ',' → logprob: -10.262155532836914
    8. ')' → logprob: -10.262155532836914
    9. '  
' → logprob: -10.512155532836914
    10. '):' → logprob: -10.637155532836914

Token 486: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09032292664051056
    2. ' if' → logprob: -2.965322971343994
    3. 'if' → logprob: -3.590322971343994
    4. 'def' → logprob: -4.965322971343994
    5. ' def' → logprob: -8.465322494506836
    6. 'pairs' → logprob: -11.340322494506836
    7. ' ' → logprob: -11.590322494506836
    8. ' pairs' → logprob: -12.340322494506836
    9. '```' → logprob: -12.340322494506836
    10. '  ' → logprob: -13.215322494506836

Token 487: ' pos' (ID: 1253)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.30327025055885315
    2. 'def' → logprob: -1.6782702207565308
    3. ' if' → logprob: -3.0532703399658203
    4. 'pos' (adapté à ' pos') → logprob: -4.17827033996582
    5. 'pairs' → logprob: -5.05327033996582
    6. 'result' → logprob: -6.30327033996582
    7. 'res' → logprob: -6.30327033996582
    8. ' def' → logprob: -7.05327033996582
    9. 'positions' → logprob: -7.30327033996582
    10. '   ' → logprob: -7.92827033996582

Token 488: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.957091212272644
    2. '_set' → logprob: -0.957091212272644
    3. 's' → logprob: -1.582091212272644
    4. '_s' → logprob: -3.8320913314819336
    5. '_' → logprob: -5.957091331481934
    6. '_positions' → logprob: -7.082091331481934
    7. '_array' → logprob: -8.207091331481934
    8. '   ' → logprob: -8.957091331481934
    9. '_pairs' → logprob: -9.082091331481934
    10. '_arr' → logprob: -9.582091331481934

Token 489: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03807878866791725
    2. '=' → logprob: -3.288078784942627
    3. '   ' → logprob: -10.413079261779785
    4. ',' → logprob: -13.038079261779785
    5. '=list' → logprob: -13.538079261779785
    6. ' ' → logprob: -13.788079261779785
    7. '    ' → logprob: -14.413079261779785
    8. ')' → logprob: -14.788079261779785
    9. ':' → logprob: -14.788079261779785
    10. '  ' → logprob: -15.163079261779785

Token 490: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.026031915098428726
    2. 'sorted' → logprob: -3.776031970977783
    3. ' list' → logprob: -5.901031970977783
    4. ' sorted' → logprob: -10.026031494140625
    5. '[list' → logprob: -13.776031494140625
    6. 'tuple' → logprob: -15.776031494140625
    7. '(list' → logprob: -15.901031494140625
    8. '(sorted' → logprob: -16.526031494140625
    9. '=list' → logprob: -16.901031494140625
    10. 'List' → logprob: -16.901031494140625

Token 491: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.004093835595995188
    2. 'pos' → logprob: -5.504093647003174
    3. '(' → logprob: -11.379094123840332
    4. ' pos' → logprob: -13.254094123840332
    5. '[pos' → logprob: -14.254094123840332
    6. '(sorted' → logprob: -14.629094123840332
    7. ',pos' → logprob: -14.754094123840332
    8. '	pos' → logprob: -15.129094123840332
    9. '.pos' → logprob: -16.254093170166016
    10. '_pos' → logprob: -16.379093170166016

Token 492: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -5.080963092041202e-06
    2. 'set' → logprob: -12.625004768371582
    3. 'et' → logprob: -14.125004768371582
    4. ')' → logprob: -15.375004768371582
    5. '_list' → logprob: -15.625004768371582
    6. '_sets' → logprob: -15.750004768371582
    7. 's' → logprob: -16.2500057220459
    8. '_SET' → logprob: -16.3750057220459
    9. '_' → logprob: -16.6250057220459
    10. ')set' → logprob: -16.8750057220459

Token 493: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00030936390976421535
    2. ' )' → logprob: -8.125308990478516
    3. ')
' → logprob: -11.625308990478516
    4. '   ' → logprob: -13.250308990478516
    5. '())' → logprob: -13.375308990478516
    6. '[' → logprob: -15.750308990478516
    7. '))' → logprob: -15.875308990478516
    8. ')

' → logprob: -16.125308990478516
    9. ')`' → logprob: -16.125308990478516
    10. ',' → logprob: -16.375308990478516

Token 494: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14381103217601776
    2. ':' → logprob: -2.143810987472534
    3. ',' → logprob: -5.143811225891113
    4. ' =' → logprob: -6.143811225891113
    5. 'def' → logprob: -6.268811225891113
    6. '[' → logprob: -6.393811225891113
    7. ' :' → logprob: -7.268811225891113
    8. '    
' → logprob: -7.768811225891113
    9. '    ' → logprob: -7.893811225891113
    10. '=' → logprob: -7.893811225891113

Token 495: ' n' (ID: 297)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9619022011756897
    2. 'if' → logprob: -1.086902141571045
    3. 'def' → logprob: -2.586902141571045
    4. ' used' → logprob: -2.711902141571045
    5. 'n' (adapté à ' n') → logprob: -3.211902141571045
    6. ' n' → logprob: -3.461902141571045
    7. ' def' → logprob: -3.711902141571045
    8. 'used' → logprob: -4.586902141571045
    9. '   ' → logprob: -5.211902141571045
    10. 'pairs' → logprob: -5.211902141571045

Token 496: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03169041872024536
    2. '=' → logprob: -3.5316903591156006
    3. ' ' → logprob: -7.03169059753418
    4. '    ' → logprob: -7.78169059753418
    5. '   ' → logprob: -7.78169059753418
    6. '  ' → logprob: -9.78169059753418
    7. ',' → logprob: -10.65669059753418
    8. ')' → logprob: -10.65669059753418
    9. '	' → logprob: -10.78169059753418
    10. '_' → logprob: -11.28169059753418

Token 497: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.20144042372703552
    2. ' len' → logprob: -1.701440453529358
    3. '(len' → logprob: -10.826440811157227
    4. '2' → logprob: -12.951440811157227
    5. '4' → logprob: -12.951440811157227
    6. ' ' → logprob: -13.451440811157227
    7. '[len' → logprob: -15.201440811157227
    8. '0' → logprob: -15.701440811157227
    9. '8' → logprob: -16.201440811157227
    10. '16' → logprob: -16.201440811157227

Token 498: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.0025648376904428005
    2. '(' → logprob: -6.002564907073975
    3. 'pos' → logprob: -9.502564430236816
    4. ' pos' → logprob: -11.877564430236816
    5. ' (' → logprob: -11.877564430236816
    6. '(
' → logprob: -15.377564430236816
    7. ',pos' → logprob: -15.502564430236816
    8. '(Pos' → logprob: -16.502565383911133
    9. '	pos' → logprob: -16.752565383911133
    10. '[pos' → logprob: -16.752565383911133

Token 499: '_list' (ID: 4162)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.11487548053264618
    2. '(pos' → logprob: -2.364875555038452
    3. '_pos' → logprob: -4.739875316619873
    4. '_list' → logprob: -5.739875316619873
    5. ' pos' → logprob: -6.239875316619873
    6. '	pos' → logprob: -8.364875793457031
    7. '(' → logprob: -8.864875793457031
    8. ')' → logprob: -8.989875793457031
    9. '   ' → logprob: -9.364875793457031
    10. '_set' → logprob: -10.864875793457031

Token 500: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016675653168931603
    2. ' )' → logprob: -6.501667499542236
    3. '   ' → logprob: -9.001667976379395
    4. ')
' → logprob: -10.376667976379395
    5. ' ' → logprob: -12.126667976379395
    6. ')#' → logprob: -14.126667976379395
    7. ')//' → logprob: -14.751667976379395
    8. '#' → logprob: -14.751667976379395
    9. '  ' → logprob: -14.876667976379395
    10. ' ' → logprob: -14.876667976379395

Token 501: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.867479681968689
    2. ' if' → logprob: -0.992479681968689
    3. ' ' → logprob: -2.2424798011779785
    4. '<|end|>' → logprob: -2.8674798011779785
    5. 'if' → logprob: -4.2424798011779785
    6. ' 
' → logprob: -5.2424798011779785
    7. '<|end|>' → logprob: -5.2424798011779785
    8. ':' → logprob: -5.2424798011779785
    9. '    ' → logprob: -6.2424798011779785
    10. '	if' → logprob: -6.6174798011779785

Token 502: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.38865989446640015
    2. 'if' → logprob: -1.138659954071045
    3. '   ' → logprob: -6.388659954071045
    4. 'i' → logprob: -11.013659477233887
    5. 'def' → logprob: -11.013659477233887
    6. ' i' → logprob: -11.013659477233887
    7. ' ' → logprob: -11.263659477233887
    8. ' for' → logprob: -11.763659477233887
    9. 'for' → logprob: -12.138659477233887
    10. '#' (adapté à ' #') → logprob: -12.513659477233887

Token 503: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5812585949897766
    2. ' if' → logprob: -0.8312585949897766
    3. 'def' → logprob: -5.331258773803711
    4. '   ' → logprob: -9.456258773803711
    5. ' def' → logprob: -9.456258773803711
    6. 'from' → logprob: -9.706258773803711
    7. 'result' → logprob: -10.456258773803711
    8. 'assert' → logprob: -10.831258773803711
    9. 'If' → logprob: -11.081258773803711
    10. 'visited' → logprob: -11.081258773803711

Token 504: ' va' (ID: 3423)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02927028201520443
    2. 'def' → logprob: -3.9042701721191406
    3. ' if' → logprob: -5.779270172119141
    4. 'return' → logprob: -6.404270172119141
    5. 'continue' → logprob: -6.529270172119141
    6. 'n' → logprob: -7.404270172119141
    7. 'for' → logprob: -7.654270172119141
    8. 'cherche' → logprob: -7.904270172119141
    9. 'est' → logprob: -8.52927017211914
    10. '   ' → logprob: -8.77927017211914

Token 505: ' rechercher' (ID: 173335)
  Prédit: ' essayer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' essayer' → logprob: -1.1315529346466064
    2. ' chercher' → logprob: -1.8815529346466064
    3. 'chercher' → logprob: -2.1315529346466064
    4. ' génér' → logprob: -2.5065529346466064
    5. ' tester' → logprob: -2.7565529346466064
    6. 'def' → logprob: -3.1315529346466064
    7. ' utiliser' → logprob: -3.5065529346466064
    8. ' explorer' → logprob: -3.6315529346466064
    9. ' continuer' → logprob: -3.8815529346466064
    10. ' vérifier' → logprob: -4.256552696228027

Token 506: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.5211086869239807
    2. 'def' → logprob: -2.396108627319336
    3. ' une' → logprob: -2.396108627319336
    4. ' ' → logprob: -3.146108627319336
    5. ' des' → logprob: -3.396108627319336
    6. 'all' → logprob: -4.146108627319336
    7. ' n' → logprob: -4.396108627319336
    8. ' all' → logprob: -4.521108627319336
    9. '   ' → logprob: -4.646108627319336
    10. ' if' → logprob: -4.771108627319336

Token 507: ' app' (ID: 1053)
  Prédit: ' app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' app' → logprob: -0.5244767069816589
    2. 'app' → logprob: -2.2744767665863037
    3. 'def' → logprob: -2.5244767665863037
    4. ' def' → logprob: -2.8994767665863037
    5. 'e' → logprob: -3.5244767665863037
    6. ' match' → logprob: -3.5244767665863037
    7. '[]' → logprob: -3.5244767665863037
    8. ' matching' → logprob: -3.6494767665863037
    9. '[' → logprob: -5.024476528167725
    10. ' pairing' → logprob: -5.149476528167725

Token 508: 'ari' (ID: 1683)
  Prédit: 'ari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ari' → logprob: -0.023595420643687248
    2. 'ar' → logprob: -4.648595333099365
    3. 'air' → logprob: -5.023595333099365
    4. 'ai' → logprob: -5.773595333099365
    5. 'a' → logprob: -6.648595333099365
    6. 'art' → logprob: -7.898595333099365
    7. 'ro' → logprob: -8.273595809936523
    8. 'areil' → logprob: -8.398595809936523
    9. 'ri' → logprob: -8.773595809936523
    10. 'oint' → logprob: -8.898595809936523

Token 509: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.020131651312112808
    2. 'cement' → logprob: -4.270131587982178
    3. 'ment' → logprob: -5.770131587982178
    4. 'gement' → logprob: -7.020131587982178
    5. 'nement' → logprob: -7.270131587982178
    6. 'e' → logprob: -8.270132064819336
    7. 'sement' → logprob: -8.770132064819336
    8. 'rement' → logprob: -8.895132064819336
    9. 'emment' → logprob: -9.145132064819336
    10. 'element' → logprob: -9.145132064819336

Token 510: ' parfait' (ID: 39268)
  Prédit: ' complet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' complet' → logprob: -0.3679995536804199
    2. ' parfait' → logprob: -1.86799955368042
    3. ' perfect' → logprob: -3.36799955368042
    4. 'perfect' → logprob: -3.49299955368042
    5. ' valid' → logprob: -3.86799955368042
    6. ' par' → logprob: -3.99299955368042
    7. ' possible' → logprob: -4.74299955368042
    8. ' de' → logprob: -4.99299955368042
    9. 'com' → logprob: -5.61799955368042
    10. 'possible' → logprob: -6.11799955368042

Token 511: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 512: ' p' (ID: 275)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.47781622409820557
    2. 'n' → logprob: -1.7278162240982056
    3. ' pos' → logprob: -2.852816104888916
    4. 'pairs' → logprob: -3.977816104888916
    5. 'la' → logprob: -4.227816104888916
    6. ' n' → logprob: -4.227816104888916
    7. ' taille' → logprob: -4.477816104888916
    8. ' la' → logprob: -4.477816104888916
    9. 'p' → logprob: -4.602816104888916
    10. 'positions' → logprob: -4.602816104888916

Token 513: 'aires' (ID: 8507)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.10013053566217422
    2. 'osit' → logprob: -3.225130558013916
    3. 'airs' → logprob: -4.225130558013916
    4. 'oints' → logprob: -4.475130558013916
    5. 'aires' → logprob: -4.600130558013916
    6. 'oint' → logprob: -5.850130558013916
    7. 'ar' → logprob: -5.850130558013916
    8. 'air' → logprob: -6.100130558013916
    9. 'oss' → logprob: -6.225130558013916
    10. 'art' → logprob: -6.225130558013916

Token 514: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.781533122062683
    2. '.' → logprob: -1.781533122062683
    3. ' if' → logprob: -1.781533122062683
    4. '<|end|>' → logprob: -2.0315332412719727
    5. ' possible' → logprob: -2.9065332412719727
    6. ' (' → logprob: -3.1565332412719727
    7. ' de' → logprob: -3.2815332412719727
    8. 'def' → logprob: -3.6565332412719727
    9. ':' → logprob: -4.156533241271973
    10. ' dans' → logprob: -4.281533241271973

Token 515: 'match' (ID: 14893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18289318680763245
    2. 'n' → logprob: -3.1828932762145996
    3. ' n' → logprob: -3.3078932762145996
    4. 'def' → logprob: -3.9328932762145996
    5. ' )' → logprob: -4.4328932762146
    6. 'pos' → logprob: -4.6828932762146
    7. ' ' → logprob: -4.6828932762146
    8. '2' → logprob: -5.0578932762146
    9. ' def' → logprob: -5.9328932762146
    10. 'pairs' → logprob: -5.9328932762146

Token 516: 'ings' (ID: 963)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.18256023526191711
    2. 'ings' → logprob: -2.8075602054595947
    3. 'h' → logprob: -2.9325602054595947
    4. ')' → logprob: -3.1825602054595947
    5. 'e' → logprob: -6.307560443878174
    6. 'ement' → logprob: -6.307560443878174
    7. 's' → logprob: -6.682560443878174
    8. 'es' → logprob: -6.932560443878174
    9. '   ' → logprob: -6.932560443878174
    10. '=' → logprob: -7.182560443878174

Token 517: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019200868904590607
    2. ' )' → logprob: -4.394200801849365
    3. ' de' → logprob: -6.269200801849365
    4. ' dans' → logprob: -6.644200801849365
    5. ',' → logprob: -7.644200801849365
    6. '),' → logprob: -7.644200801849365
    7. ' entre' → logprob: -8.019201278686523
    8. ').' → logprob: -8.144201278686523
    9. ' par' → logprob: -8.394201278686523
    10. 's' → logprob: -8.769201278686523

Token 518: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.019965648651123
    2. ':' → logprob: -1.769965648651123
    3. ' ' → logprob: -1.894965648651123
    4. ' :' → logprob: -2.394965648651123
    5. 'def' → logprob: -2.769965648651123
    6. ' def' → logprob: -3.394965648651123
    7. ' if' → logprob: -3.519965648651123
    8. ' =' → logprob: -3.769965648651123
    9. '<|end|>' → logprob: -4.019965648651123
    10. '.' → logprob: -4.269965648651123

Token 519: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3121538460254669
    2. '   ' → logprob: -1.6871538162231445
    3. 'if' → logprob: -2.5621538162231445
    4. 'def' → logprob: -5.9371538162231445
    5. ' for' → logprob: -7.0621538162231445
    6. '[' → logprob: -7.8121538162231445
    7. ' def' → logprob: -8.562153816223145
    8. ')' → logprob: -8.687153816223145
    9. 'for' → logprob: -8.812153816223145
    10. ' ' → logprob: -8.812153816223145

Token 520: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4071939289569855
    2. ' if' → logprob: -1.157193899154663
    3. 'def' → logprob: -4.157194137573242
    4. '   ' → logprob: -6.532194137573242
    5. ' def' → logprob: -7.032194137573242
    6. 'match' → logprob: -7.657194137573242
    7. 'matches' → logprob: -8.657194137573242
    8. ' used' → logprob: -8.657194137573242
    9. 'for' → logprob: -8.782194137573242
    10. 'matched' → logprob: -8.782194137573242

Token 521: ' Constru' (ID: 98396)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04638562351465225
    2. 'def' → logprob: -3.5463855266571045
    3. ' if' → logprob: -4.296385765075684
    4. 'from' → logprob: -7.046385765075684
    5. 'visited' → logprob: -7.546385765075684
    6. 'match' → logprob: -8.296385765075684
    7. 'matched' → logprob: -8.421385765075684
    8. 'matches' → logprob: -8.546385765075684
    9. '   ' → logprob: -8.921385765075684
    10. 'result' → logprob: -9.046385765075684

Token 522: 'ire' (ID: 594)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.05439535900950432
    2. 'ction' → logprob: -3.1793954372406006
    3. 'it' → logprob: -5.5543951988220215
    4. 'ire' → logprob: -5.8043951988220215
    5. '   ' → logprob: -6.6793951988220215
    6. 'ict' → logprob: -6.9293951988220215
    7. '#' → logprob: -7.3043951988220215
    8. 'ir' → logprob: -8.30439567565918
    9. 'cter' → logprob: -8.67939567565918
    10. 'cture' → logprob: -8.67939567565918

Token 523: ' un' (ID: 537)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.42278480529785156
    2. ' un' → logprob: -2.0477848052978516
    3. ' graph' → logprob: -2.5477848052978516
    4. 'un' → logprob: -2.6727848052978516
    5. 'adj' → logprob: -3.1727848052978516
    6. ' adjacency' → logprob: -4.672784805297852
    7. ' adj' → logprob: -4.922784805297852
    8. 'le' → logprob: -6.047784805297852
    9. 'une' → logprob: -6.422784805297852
    10. 'edges' → logprob: -7.047784805297852

Token 524: ' grap' (ID: 60955)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.15414263308048248
    2. ' graph' → logprob: -2.0291426181793213
    3. 'gr' → logprob: -4.9041428565979
    4. ' grap' → logprob: -5.9041428565979
    5. 'adj' → logprob: -7.9041428565979
    6. 'dict' → logprob: -8.404142379760742
    7. ' adjacency' → logprob: -8.404142379760742
    8. 'd' → logprob: -8.904142379760742
    9. 'g' → logprob: -9.779142379760742
    10. ' diction' → logprob: -10.279142379760742

Token 525: 'he' (ID: 273)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.06411385536193848
    2. 'he' → logprob: -2.8141138553619385
    3. 'ph' → logprob: -6.939113616943359
    4. 'ah' → logprob: -7.814113616943359
    5. 'aphe' → logprob: -7.939113616943359
    6. '   ' → logprob: -9.56411361694336
    7. 'heme' → logprob: -9.81411361694336
    8. '[' → logprob: -10.18911361694336
    9. '<h' → logprob: -10.43911361694336
    10. '[h' → logprob: -10.56411361694336

Token 526: ' où' (ID: 15113)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6405223608016968
    2. ' bip' → logprob: -1.7655223608016968
    3. ',' → logprob: -3.0155224800109863
    4. ':' → logprob: -3.1405224800109863
    5. 'adj' → logprob: -3.2655224800109863
    6. '=' → logprob: -3.8905224800109863
    7. 'b' → logprob: -3.8905224800109863
    8. '   ' → logprob: -4.015522480010986
    9. ' adjacency' → logprob: -4.265522480010986
    10. ' d' → logprob: -4.390522480010986

Token 527: ' les' (ID: 1341)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.6971235871315002
    2. ' chaque' → logprob: -1.3221235275268555
    3. 'edges' → logprob: -1.6971235275268555
    4. ' les' → logprob: -3.6971235275268555
    5. 'les' → logprob: -4.3221235275268555
    6. 'adj' → logprob: -5.3221235275268555
    7. 'each' → logprob: -6.5721235275268555
    8. ' each' → logprob: -6.6971235275268555
    9. ' adjacency' → logprob: -6.6971235275268555
    10. 'for' → logprob: -7.1971235275268555

Token 528: ' somm' (ID: 44830)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -1.3176841735839844
    2. ' voisins' → logprob: -1.8176841735839844
    3. ' noe' → logprob: -2.0676841735839844
    4. ' nodes' → logprob: -2.3176841735839844
    5. ' somm' → logprob: -2.3176841735839844
    6. ' positions' → logprob: -2.8176841735839844
    7. 'positions' → logprob: -2.9426841735839844
    8. ' pairs' → logprob: -3.4426841735839844
    9. ' vertices' → logprob: -3.8176841735839844
    10. 'edges' → logprob: -4.067684173583984

Token 529: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.2775738537311554
    2. 'et' → logprob: -2.652573823928833
    3. 'ètes' → logprob: -2.777573823928833
    4. 'è' → logprob: -3.152573823928833
    5. 'ettes' → logprob: -4.652574062347412
    6. 'es' → logprob: -4.902574062347412
    7. 'etes' → logprob: -5.152574062347412
    8. '`' → logprob: -5.277574062347412
    9. 'nodes' → logprob: -5.277574062347412
    10. 'e' → logprob: -5.652574062347412

Token 530: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.5020227432250977
    2. '=' → logprob: -1.2520227432250977
    3. 's' → logprob: -2.8770227432250977
    4. ' =' → logprob: -3.1270227432250977
    5. 'pos' → logprob: -5.502022743225098
    6. ' représentent' → logprob: -6.002022743225098
    7. ' ' → logprob: -7.502022743225098
    8. ' are' → logprob: -8.502022743225098
    9. 'are' → logprob: -9.127022743225098
    10. ' represent' → logprob: -9.127022743225098

Token 531: ' les' (ID: 1341)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.24400578439235687
    2. 'les' → logprob: -1.994005799293518
    3. ' les' → logprob: -2.8690056800842285
    4. 'positions' → logprob: -4.7440056800842285
    5. 'des' → logprob: -4.8690056800842285
    6. ' pos' → logprob: -5.4940056800842285
    7. ' des' → logprob: -6.1190056800842285
    8. 'indices' → logprob: -8.494006156921387
    9. ' positions' → logprob: -8.869006156921387
    10. '[pos' → logprob: -9.369006156921387

Token 532: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.2719787359237671
    2. ' positions' → logprob: -1.646978735923767
    3. 'pos' → logprob: -3.1469788551330566
    4. ' pos' → logprob: -6.896978855133057
    5. 'indices' → logprob: -7.271978855133057
    6. ' indices' → logprob: -7.646978855133057
    7. 'points' → logprob: -9.896978378295898
    8. 'vertices' → logprob: -10.021978378295898
    9. 'nodes' → logprob: -10.146978378295898
    10. 'position' → logprob: -10.146978378295898

Token 533: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09674312174320221
    2. ' ,' → logprob: -2.971743106842041
    3. ' et' → logprob: -3.846743106842041
    4. ',
' → logprob: -5.471743106842041
    5. ' and' → logprob: -5.596743106842041
    6. '   ' → logprob: -5.596743106842041
    7. 'et' → logprob: -6.471743106842041
    8. 'pos' → logprob: -6.471743106842041
    9. ':' → logprob: -6.721743106842041
    10. ' pos' → logprob: -7.221743106842041

Token 534: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3060763478279114
    2. ' les' → logprob: -2.9310762882232666
    3. ' et' → logprob: -3.0560762882232666
    4. '   ' → logprob: -3.4310762882232666
    5. 'et' → logprob: -3.6810762882232666
    6. '<|end|>' → logprob: -3.6810762882232666
    7. 'edges' → logprob: -3.8060762882232666
    8. ' edges' → logprob: -4.681076526641846
    9. 'où' → logprob: -4.681076526641846
    10. 'and' → logprob: -4.931076526641846

Token 535: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.03055712953209877
    2. 'les' → logprob: -4.530557155609131
    3. 'et' → logprob: -4.655557155609131
    4. ' les' → logprob: -5.280557155609131
    5. ' et' → logprob: -6.155557155609131
    6. ' #' → logprob: -7.155557155609131
    7. '   ' → logprob: -7.280557155609131
    8. 'où' → logprob: -7.780557155609131
    9. 'edges' → logprob: -7.905557155609131
    10. 'and' → logprob: -9.280556678771973

Token 536: ' une' (ID: 2463)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.7496817111968994
    2. 'edges' → logprob: -0.7496817111968994
    3. '#' → logprob: -3.9996817111968994
    4. '   ' → logprob: -4.12468147277832
    5. ' les' → logprob: -4.24968147277832
    6. 'les' → logprob: -5.62468147277832
    7. 'adj' → logprob: -7.24968147277832
    8. 'ar' → logprob: -7.37468147277832
    9. ' adj' → logprob: -8.87468147277832
    10. '_edges' → logprob: -8.99968147277832

Token 537: ' ar' (ID: 646)
  Prédit: ' adjacency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adjacency' → logprob: -0.4352031648159027
    2. ' edges' → logprob: -2.4352030754089355
    3. 'd' → logprob: -2.8102030754089355
    4. '   ' → logprob: -3.4352030754089355
    5. 'edges' → logprob: -3.8102030754089355
    6. ' ' → logprob: -3.8102030754089355
    7. 'r' → logprob: -4.0602030754089355
    8. '#' → logprob: -4.4352030754089355
    9. 'adj' → logprob: -4.9352030754089355
    10. 'def' → logprob: -5.1852030754089355

Token 538: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.15957210958003998
    2. 'c' → logprob: -2.409572124481201
    3. 'r' → logprob: -3.284572124481201
    4. 'rete' → logprob: -4.284572124481201
    5. 're' → logprob: -6.409572124481201
    6. 'êtes' → logprob: -6.909572124481201
    7. 'cs' → logprob: -7.159572124481201
    8. 'ète' → logprob: -8.034571647644043
    9. 'cte' → logprob: -8.159571647644043
    10. 'ete' → logprob: -8.159571647644043

Token 539: ' représente' (ID: 88912)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.24719443917274475
    2. ' est' → logprob: -2.747194528579712
    3. ' existe' → logprob: -2.747194528579712
    4. 's' → logprob: -3.872194528579712
    5. ' between' → logprob: -3.872194528579712
    6. ' ' → logprob: -3.997194528579712
    7. 'est' → logprob: -4.872194290161133
    8. ' (' → logprob: -5.497194290161133
    9. 'entre' → logprob: -5.872194290161133
    10. ' représente' → logprob: -5.872194290161133

Token 540: ' que' (ID: 661)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.2599792778491974
    2. 'une' → logprob: -2.009979248046875
    3. ' un' → logprob: -3.134979248046875
    4. ' que' → logprob: -3.884979248046875
    5. 'un' → logprob: -4.384979248046875
    6. ' ' → logprob: -5.634979248046875
    7. ' la' → logprob: -5.759979248046875
    8. 'que' → logprob: -5.884979248046875
    9. ' qu' → logprob: -6.009979248046875
    10. 'qu' → logprob: -6.509979248046875

Token 541: ' deux' (ID: 10301)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5344125628471375
    2. ' pos' → logprob: -1.0344126224517822
    3. '(pos' → logprob: -3.1594126224517822
    4. ' (' → logprob: -5.909412384033203
    5. ' il' → logprob: -6.034412384033203
    6. ' deux' → logprob: -6.159412384033203
    7. ' ' → logprob: -6.409412384033203
    8. ' les' → logprob: -6.659412384033203
    9. 'les' → logprob: -7.159412384033203
    10. '(' → logprob: -7.284412384033203

Token 542: ' positions' (ID: 15897)
  Prédit: ' positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.6340580582618713
    2. 'positions' → logprob: -0.8840580582618713
    3. 'pos' → logprob: -3.2590579986572266
    4. ' vertices' → logprob: -4.759057998657227
    5. ' pos' → logprob: -5.009057998657227
    6. ' nodes' → logprob: -7.009057998657227
    7. 'vertices' → logprob: -7.509057998657227
    8. ' somm' → logprob: -7.884057998657227
    9. 's' → logprob: -8.134057998657227
    10. '_positions' → logprob: -8.509057998657227

Token 543: ' peuvent' (ID: 21321)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6002019643783569
    2. ' sont' → logprob: -0.8502019643783569
    3. ' peuvent' → logprob: -4.7252020835876465
    4. '<|end|>' → logprob: -4.8502020835876465
    5. 'pe' → logprob: -5.8502020835876465
    6. 'ont' → logprob: -7.4752020835876465
    7. 'pos' → logprob: -7.4752020835876465
    8. ' ont' → logprob: -7.6002020835876465
    9. ')' → logprob: -8.100201606750488
    10. ' ' → logprob: -8.225201606750488

Token 544: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.03318465128540993
    2. ' être' → logprob: -4.15818452835083
    3. 'êtres' → logprob: -4.65818452835083
    4. 'etre' → logprob: -6.28318452835083
    5. 'former' → logprob: -6.40818452835083
    6. ''être' → logprob: -7.53318452835083
    7. '’être' → logprob: -7.65818452835083
    8. 'form' → logprob: -7.78318452835083
    9. 'ête' → logprob: -7.90818452835083
    10. 'ê' → logprob: -7.90818452835083

Token 545: ' form' (ID: 1625)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.8156689405441284
    2. 'connect' → logprob: -1.4406689405441284
    3. 'appar' → logprob: -1.9406689405441284
    4. 'jum' → logprob: -2.690669059753418
    5. ' reli' → logprob: -3.190669059753418
    6. ' app' → logprob: -4.190669059753418
    7. ' connect' → logprob: -4.440669059753418
    8. 'adj' → logprob: -5.065669059753418
    9. ' liées' → logprob: -5.065669059753418
    10. ' jum' → logprob: -5.690669059753418

Token 546: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.08147966116666794
    2. 'ée' → logprob: -2.831479549407959
    3. 'é' → logprob: -4.456479549407959
    4. 'er' → logprob: -5.081479549407959
    5. 'és' → logprob: -6.831479549407959
    6. 'ed' → logprob: -8.206480026245117
    7. 'ee' → logprob: -10.081480026245117
    8. 'e' → logprob: -10.956480026245117
    9. 'al' → logprob: -11.581480026245117
    10. '#' → logprob: -11.956480026245117

Token 547: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.024526556953787804
    2. 'en' → logprob: -4.149526596069336
    3. 'e' → logprob: -6.024526596069336
    4. ',' → logprob: -7.149526596069336
    5. ' par' → logprob: -7.149526596069336
    6. 'es' → logprob: -7.149526596069336
    7. ' ensemble' → logprob: -7.149526596069336
    8. 'ensemble' → logprob: -7.399526596069336
    9. ' ' → logprob: -7.649526596069336
    10. ' entre' → logprob: -7.649526596069336

Token 548: ' paire' (ID: 148856)
  Prédit: ' paire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' paire' → logprob: -0.48116832971572876
    2. ' une' → logprob: -1.731168270111084
    3. 'une' → logprob: -2.356168270111084
    4. 'pair' → logprob: -2.731168270111084
    5. 'pa' → logprob: -4.731168270111084
    6. ' pair' → logprob: -4.856168270111084
    7. 'pairs' → logprob: -5.231168270111084
    8. 'adj' → logprob: -5.606168270111084
    9. 'paired' → logprob: -5.606168270111084
    10. 'p' → logprob: -5.731168270111084

Token 549: ' 
' (ID: 793)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1533682346343994
    2. '.' → logprob: -1.4033682346343994
    3. ' entre' → logprob: -1.6533682346343994
    4. '   ' → logprob: -1.7783682346343994
    5. ' avec' → logprob: -4.52836799621582
    6. ':' → logprob: -4.77836799621582
    7. 's' → logprob: -5.02836799621582
    8. ')' → logprob: -5.02836799621582
    9. ' (' → logprob: -5.40336799621582
    10. ' between' → logprob: -5.52836799621582

Token 550: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6704187393188477
    2. ' entre' → logprob: -1.4204187393188477
    3. '.' → logprob: -2.2954187393188477
    4. '   ' → logprob: -2.7954187393188477
    5. ' (' → logprob: -4.170418739318848
    6. ' ' → logprob: -4.420418739318848
    7. 's' → logprob: -5.045418739318848
    8. ' between' → logprob: -5.170418739318848
    9. '<|end|>' → logprob: -5.420418739318848
    10. ')' → logprob: -5.670418739318848

Token 551: ' #' (ID: 1069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0983771085739136
    2. '.' → logprob: -1.0983771085739136
    3. '   ' → logprob: -1.3483771085739136
    4. ':' → logprob: -3.598377227783203
    5. ')' → logprob: -5.098377227783203
    6. ' (' → logprob: -5.223377227783203
    7. '```' → logprob: -5.473377227783203
    8. 'def' → logprob: -5.598377227783203
    9. '<|end|>' → logprob: -5.723377227783203
    10. '#' (adapté à ' #') → logprob: -5.848377227783203

Token 552: ' selon' (ID: 27571)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9061446189880371
    2. '.' → logprob: -1.156144618988037
    3. ':' → logprob: -2.656144618988037
    4. '   ' → logprob: -2.656144618988037
    5. ' ,' → logprob: -3.656144618988037
    6. ' avec' → logprob: -3.906144618988037
    7. ' (' → logprob: -3.906144618988037
    8. ' ' → logprob: -4.531144618988037
    9. ' :' → logprob: -5.031144618988037
    10. ' =' → logprob: -5.531144618988037

Token 553: ' l' (ID: 305)
  Prédit: 'relative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'relative' → logprob: -0.4344148635864258
    2. ' relative' → logprob: -1.1844148635864258
    3. ' les' → logprob: -4.684414863586426
    4. 'rel' → logprob: -4.684414863586426
    5. 'les' → logprob: -4.934414863586426
    6. ' la' → logprob: -5.059414863586426
    7. 'le' → logprob: -5.184414863586426
    8. 'la' → logprob: -5.309414863586426
    9. ' le' → logprob: -6.434414863586426
    10. '(relative' → logprob: -7.934414863586426

Token 554: ''une' (ID: 13337)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04108431562781334
    2. 'e' → logprob: -3.6660842895507812
    3. 'es' → logprob: -5.666084289550781
    4. 'rel' → logprob: -6.166084289550781
    5. ''' → logprob: -6.416084289550781
    6. ''ensemble' → logprob: -6.541084289550781
    7. 'les' → logprob: -7.416084289550781
    8. ''in' → logprob: -7.541084289550781
    9. 'la' → logprob: -7.666084289550781
    10. 'len' → logprob: -7.666084289550781

Token 555: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.006864558905363083
    2. 'des' → logprob: -5.381864547729492
    3. '_des' → logprob: -6.631864547729492
    4. ' de' → logprob: -8.381864547729492
    5. ' d' → logprob: -9.006864547729492
    6. ')' → logprob: -9.131864547729492
    7. ' du' → logprob: -9.131864547729492
    8. ' ' → logprob: -9.256864547729492
    9. '_' → logprob: -9.756864547729492
    10. ' of' → logprob: -10.256864547729492

Token 556: ' positions' (ID: 15897)
  Prédit: 'relative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'relative' → logprob: -0.05354158580303192
    2. ' relative' → logprob: -3.053541660308838
    3. 'rel' → logprob: -5.428541660308838
    4. '(relative' → logprob: -8.80354118347168
    5. ' ' → logprob: -9.05354118347168
    6. '   ' → logprob: -9.42854118347168
    7. '[' → logprob: -10.17854118347168
    8. 'relations' → logprob: -10.30354118347168
    9. ' rel' → logprob: -11.17854118347168
    10. 'relation' → logprob: -11.55354118347168

Token 557: ' relatives' (ID: 40618)
  Prédit: 'rel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rel' → logprob: -0.48569339513778687
    2. '   ' → logprob: -2.3606934547424316
    3. 'adj' → logprob: -2.7356934547424316
    4. '_rel' → logprob: -2.8606934547424316
    5. 'relative' → logprob: -3.1106934547424316
    6. 'valid' → logprob: -3.6106934547424316
    7. ' relatives' → logprob: -3.8606934547424316
    8. '(rel' → logprob: -4.610693454742432
    9. ' relative' → logprob: -4.985693454742432
    10. 'val' → logprob: -5.110693454742432

Token 558: ' autor' (ID: 13432)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16855089366436005
    2. '.' → logprob: -2.668550968170166
    3. ',' → logprob: -3.293550968170166
    4. ':' → logprob: -4.043550968170166
    5. 'def' → logprob: -4.918550968170166
    6. ')' → logprob: -5.668550968170166
    7. '
' → logprob: -5.918550968170166
    8. '<|end|>' → logprob: -6.043550968170166
    9. 'graph' → logprob: -6.293550968170166
    10. '```' → logprob: -6.418550968170166

Token 559: 'isées' (ID: 108324)
  Prédit: 'isées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isées' → logprob: -0.0018830618355423212
    2. 'isés' → logprob: -6.626883029937744
    3. 'es' → logprob: -8.626883506774902
    4. 'is' → logprob: -9.001883506774902
    5. 'ises' → logprob: -9.126883506774902
    6. 'isée' → logprob: -9.626883506774902
    7. 'isé' → logprob: -10.126883506774902
    8. 'ées' → logprob: -11.501883506774902
    9. 'nées' → logprob: -11.501883506774902
    10. 'ise' → logprob: -12.626883506774902

Token 560: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8977763056755066
    2. 'graph' → logprob: -1.1477763652801514
    3. 'edges' → logprob: -2.5227763652801514
    4. 'adj' → logprob: -2.7727763652801514
    5. ' graph' → logprob: -3.0227763652801514
    6. ' edges' → logprob: -3.2727763652801514
    7. '.' → logprob: -4.897776126861572
    8. 'def' → logprob: -5.022776126861572
    9. '```' → logprob: -5.522776126861572
    10. '
' → logprob: -5.647776126861572

Token 561: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07571287453174591
    2. 'graph' → logprob: -3.4507129192352295
    3. 'edges' → logprob: -4.07571268081665
    4. ' edges' → logprob: -4.45071268081665
    5. ' graph' → logprob: -5.70071268081665
    6. 'adj' → logprob: -6.07571268081665
    7. ':' → logprob: -7.07571268081665
    8. '
' → logprob: -7.32571268081665
    9. '    
' → logprob: -7.45071268081665
    10. 'def' → logprob: -7.45071268081665

Token 562: ' adj' (ID: 20251)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7748920321464539
    2. 'graph' → logprob: -1.3998920917510986
    3. ' graph' → logprob: -1.8998920917510986
    4. ' edges' → logprob: -3.5248920917510986
    5. 'def' → logprob: -3.7748920917510986
    6. 'edges' → logprob: -3.8998920917510986
    7. '#' → logprob: -4.7748918533325195
    8. 'neighbors' → logprob: -4.7748918533325195
    9. '
' → logprob: -5.0248918533325195
    10. ' 
' → logprob: -5.1498918533325195

Token 563: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7142325043678284
    2. ' =' → logprob: -0.8392325043678284
    3. 'acency' → logprob: -2.5892324447631836
    4. 'acent' → logprob: -6.089232444763184
    5. 'ac' → logprob: -7.464232444763184
    6. '[' → logprob: -8.339232444763184
    7. 'ect' → logprob: -9.964232444763184
    8. '_list' → logprob: -10.589232444763184
    9. 'ects' → logprob: -10.714232444763184
    10. '_' → logprob: -10.839232444763184

Token 564: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -4.656383680412546e-05
    2. ' {' → logprob: -10.000046730041504
    3. '[' → logprob: -14.625046730041504
    4. '{}' → logprob: -15.000046730041504
    5. '{k' → logprob: -16.250045776367188
    6. '{i' → logprob: -16.875045776367188
    7. '{id' → logprob: -17.250045776367188
    8. '{x' → logprob: -17.500045776367188
    9. '{s' → logprob: -17.750045776367188
    10. '{name' → logprob: -17.875045776367188

Token 565: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.47469958662986755
    2. 'pos' → logprob: -0.9746996164321899
    3. ' pos' → logprob: -7.5996994972229
    4. ' p' → logprob: -9.224699974060059
    5. 'v' → logprob: -11.099699974060059
    6. '   ' → logprob: -12.599699974060059
    7. 'k' → logprob: -13.724699974060059
    8. 'u' → logprob: -13.849699974060059
    9. 'i' → logprob: -13.974699974060059
    10. 'pt' → logprob: -14.224699974060059

Token 566: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003650795202702284
    2. ':set' → logprob: -5.878650665283203
    3. ':p' → logprob: -7.253650665283203
    4. ' :' → logprob: -9.128650665283203
    5. 'set' → logprob: -11.378650665283203
    6. ':{}' → logprob: -12.003650665283203
    7. 'for' → logprob: -12.503650665283203
    8. 'p' → logprob: -13.128650665283203
    9. ':[' → logprob: -13.378650665283203
    10. ':Set' → logprob: -13.753650665283203

Token 567: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3869011700153351
    2. 'set' → logprob: -1.1369011402130127
    3. ' []' → logprob: -10.761900901794434
    4. ' set' → logprob: -12.386900901794434
    5. '[]}' → logprob: -12.761900901794434
    6. '[]
' → logprob: -13.261900901794434
    7. '[]

' → logprob: -16.13690185546875
    8. '[' → logprob: -17.51190185546875
    9. '(set' → logprob: -17.63690185546875
    10. '{}' → logprob: -18.51190185546875

Token 568: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1132972463965416
    2. 'for' → logprob: -2.2382972240448
    3. '   ' → logprob: -7.738297462463379
    4. ' ' → logprob: -11.238297462463379
    5. '    ' → logprob: -11.363297462463379
    6. '	for' → logprob: -11.738297462463379
    7. '  ' → logprob: -12.863297462463379
    8. '[:]' → logprob: -13.988297462463379
    9. ':' → logprob: -14.488297462463379
    10. ' p' → logprob: -14.738297462463379

Token 569: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.25426173210144043
    2. 'pos' → logprob: -1.5042617321014404
    3. ' p' → logprob: -6.3792619705200195
    4. ' pos' → logprob: -7.3792619705200195
    5. '	pos' → logprob: -13.12926197052002
    6. '	p' → logprob: -14.31676197052002
    7. 'position' → logprob: -14.44176197052002
    8. 'posit' → logprob: -14.50426197052002
    9. '   ' → logprob: -14.62926197052002
    10. '_pos' → logprob: -14.81676197052002

Token 570: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13962635397911072
    2. ' p' → logprob: -2.6396262645721436
    3. 'p' → logprob: -3.0146262645721436
    4. 'in' → logprob: -4.639626502990723
    5. 's' → logprob: -9.764626502990723
    6. 'e' → logprob: -10.389626502990723
    7. ' ' → logprob: -11.014626502990723
    8. ' ' → logprob: -11.389626502990723
    9. '_p' → logprob: -11.389626502990723
    10. '_' → logprob: -11.514626502990723

Token 571: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -8.315936429426074e-05
    2. ' pos' → logprob: -9.875082969665527
    3. 'p' → logprob: -10.375082969665527
    4. '   ' → logprob: -16.000083923339844
    5. '	pos' → logprob: -16.250083923339844
    6. 'position' → logprob: -17.125083923339844
    7. ' ' → logprob: -17.500083923339844
    8. 'positions' → logprob: -17.625083923339844
    9. '(pos' → logprob: -17.750083923339844
    10. '[pos' → logprob: -18.000083923339844

Token 572: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.018244411796331406
    2. '_set' → logprob: -4.01824426651001
    3. 'list' → logprob: -9.893244743347168
    4. 'set' → logprob: -10.268244743347168
    5. 's' → logprob: -13.018244743347168
    6. ')' → logprob: -13.643244743347168
    7. 'List' → logprob: -13.768244743347168
    8. 'et' → logprob: -14.143244743347168
    9. 'pos' → logprob: -14.643244743347168
    10. 'p' → logprob: -15.018244743347168

Token 573: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.051551446318626404
    2. '}
' → logprob: -3.426551342010498
    3. '   ' → logprob: -4.051551342010498
    4. ' }' → logprob: -8.551551818847656
    5. '}
' → logprob: -9.676551818847656
    6. '}

' → logprob: -9.801551818847656
    7. ' }
' → logprob: -10.926551818847656
    8. ' ' → logprob: -11.551551818847656
    9. '       ' → logprob: -12.926551818847656
    10. '  ' → logprob: -13.051551818847656

Token 574: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0556122250854969
    2. ' for' → logprob: -3.305612325668335
    3. 'for' → logprob: -4.055612087249756
    4. '	for' → logprob: -9.680612564086914
    5. '    
' → logprob: -10.680612564086914
    6. '
' → logprob: -12.805612564086914
    7. '       ' → logprob: -13.555612564086914
    8. '   ' → logprob: -14.555612564086914
    9. '<|end|>' → logprob: -14.930612564086914
    10. ',' → logprob: -14.930612564086914

Token 575: ' pos' (ID: 1253)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.26646944880485535
    2. 'for' → logprob: -1.5164694786071777
    3. '   ' → logprob: -4.266469478607178
    4. '	for' → logprob: -7.891469478607178
    5. ' ' → logprob: -11.64146900177002
    6. '    
' → logprob: -11.89146900177002
    7. ' 
' → logprob: -12.76646900177002
    8. ' ' → logprob: -13.01646900177002
    9. '  
' → logprob: -13.39146900177002
    10. '  ' → logprob: -13.51646900177002

Token 576: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.3492155969142914
    2. '_list' → logprob: -1.4742156267166138
    3. 's' → logprob: -3.099215507507324
    4. '_to' → logprob: -4.849215507507324
    5. 'for' → logprob: -5.349215507507324
    6. '_indices' → logprob: -5.974215507507324
    7. 'itions' → logprob: -6.224215507507324
    8. 'sible' → logprob: -6.599215507507324
    9. 'set' → logprob: -7.724215507507324
    10. 'list' → logprob: -8.474215507507324

Token 577: ' =' (ID: 314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0769305229187012
    2. '=' → logprob: -1.2019305229187012
    3. ' =' → logprob: -1.4519305229187012
    4. 'for' → logprob: -3.451930522918701
    5. ' in' → logprob: -3.951930522918701
    6. '=set' → logprob: -4.076930522918701
    7. '.add' → logprob: -4.326930522918701
    8. 'in' → logprob: -4.826930522918701
    9. '<|end|>' → logprob: -4.826930522918701
    10. ' for' → logprob: -5.451930522918701

Token 578: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.004108323249965906
    2. ' set' → logprob: -5.504108428955078
    3. 'pos' → logprob: -10.504108428955078
    4. '{' → logprob: -13.629108428955078
    5. '   ' → logprob: -14.629108428955078
    6. ' ' → logprob: -15.254108428955078
    7. '(set' → logprob: -15.504108428955078
    8. '	set' → logprob: -15.504108428955078
    9. '  ' → logprob: -16.379108428955078
    10. ' pos' → logprob: -16.879108428955078

Token 579: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.003860639641061425
    2. 'pos' → logprob: -5.6288604736328125
    3. '(p' → logprob: -8.878860473632812
    4. '()' → logprob: -9.628860473632812
    5. '[pos' → logprob: -10.378860473632812
    6. '(' → logprob: -11.878860473632812
    7. ',pos' → logprob: -12.753860473632812
    8. ' pos' → logprob: -12.878860473632812
    9. '(
' → logprob: -13.003860473632812
    10. '	pos' → logprob: -13.378860473632812

Token 580: '_list' (ID: 4162)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.26131951808929443
    2. '_list' → logprob: -2.136319637298584
    3. '(pos' → logprob: -2.261319637298584
    4. ' pos' → logprob: -5.886319637298584
    5. '_set' → logprob: -6.011319637298584
    6. '_pos' → logprob: -7.261319637298584
    7. '[pos' → logprob: -7.386319637298584
    8. ')' → logprob: -7.511319637298584
    9. 'list' → logprob: -8.386319160461426
    10. 'List' → logprob: -9.886319160461426

Token 581: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025910189375281334
    2. ')
' → logprob: -3.7759101390838623
    3. '}' → logprob: -6.400910377502441
    4. '   ' → logprob: -7.775910377502441
    5. ' )' → logprob: -7.900910377502441
    6. '}
' → logprob: -9.650910377502441
    7. ')}' → logprob: -9.775910377502441
    8. ' )
' → logprob: -10.650910377502441
    9. ')
' → logprob: -10.775910377502441
    10. ')

' → logprob: -11.025910377502441

Token 582: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023122141137719154
    2. ' for' → logprob: -3.8981220722198486
    3. 'for' → logprob: -6.023122310638428
    4. '    
' → logprob: -9.27312183380127
    5. '	for' → logprob: -10.02312183380127
    6. '
' → logprob: -11.64812183380127
    7. ')' → logprob: -13.64812183380127
    8. '       ' → logprob: -14.02312183380127
    9. '   ' → logprob: -14.02312183380127
    10. ',' → logprob: -14.14812183380127

Token 583: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10713290423154831
    2. ' for' → logprob: -2.482132911682129
    3. 'for' → logprob: -4.232132911682129
    4. '	for' → logprob: -5.732132911682129
    5. '    
' → logprob: -8.982132911682129
    6. '   ' → logprob: -10.232132911682129
    7. ' ' → logprob: -11.232132911682129
    8. '
' → logprob: -11.232132911682129
    9. '   ' → logprob: -11.607132911682129
    10. '	' → logprob: -11.607132911682129

Token 584: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.014716213569045067
    2. ' for' → logprob: -4.264716148376465
    3. '   ' → logprob: -7.514716148376465
    4. '	for' → logprob: -11.889716148376465
    5. '    
' → logprob: -15.264716148376465
    6. ' ' → logprob: -16.38971710205078
    7. '```' → logprob: -16.63971710205078
    8. '
' → logprob: -17.13971710205078
    9. '#' → logprob: -17.26471710205078
    10. '  ' → logprob: -17.63971710205078

Token 585: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.08073965460062027
    2. ' p' → logprob: -2.705739736557007
    3. 'i' → logprob: -5.455739498138428
    4. 'pos' → logprob: -5.580739498138428
    5. 'u' → logprob: -6.580739498138428
    6. ' i' → logprob: -7.580739498138428
    7. ' pos' → logprob: -7.580739498138428
    8. ' u' → logprob: -9.080739974975586
    9. 'dx' → logprob: -10.080739974975586
    10. 'rel' → logprob: -10.455739974975586

Token 586: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0008360736537724733
    2. 'in' → logprob: -7.12583589553833
    3. ',' → logprob: -11.125836372375488
    4. 's' → logprob: -12.000836372375488
    5. '   ' → logprob: -13.125836372375488
    6. ' ' → logprob: -13.250836372375488
    7. '[' → logprob: -14.250836372375488
    8. 'd' → logprob: -14.625836372375488
    9. 'os' → logprob: -14.750836372375488
    10. 'n' → logprob: -15.000836372375488

Token 587: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0002198676229454577
    2. ' pos' → logprob: -8.50022029876709
    3. 'adj' → logprob: -11.25022029876709
    4. '[pos' → logprob: -13.62522029876709
    5. 'positions' → logprob: -14.12522029876709
    6. '(pos' → logprob: -15.37522029876709
    7. 'p' → logprob: -15.37522029876709
    8. '	pos' → logprob: -15.75022029876709
    9. 'rel' → logprob: -15.87522029876709
    10. '   ' → logprob: -16.125219345092773

Token 588: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.005667930003255606
    2. 'pos' → logprob: -5.5056681632995605
    3. '_set' → logprob: -7.3806681632995605
    4. 'list' → logprob: -7.7556681632995605
    5. 'ist' → logprob: -8.005667686462402
    6. 'set' → logprob: -9.880667686462402
    7. '   ' → logprob: -10.505667686462402
    8. 'et' → logprob: -10.505667686462402
    9. 'List' → logprob: -10.630667686462402
    10. 'os' → logprob: -10.755667686462402

Token 589: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02067478373646736
    2. ':
' → logprob: -3.895674705505371
    3. '   ' → logprob: -9.645674705505371
    4. ' :' → logprob: -10.020674705505371
    5. ':
' → logprob: -11.520674705505371
    6. ' :
' → logprob: -12.145674705505371
    7. ',' → logprob: -12.520674705505371
    8. '       ' → logprob: -12.645674705505371
    9. '):
' → logprob: -14.520674705505371
    10. ':

' → logprob: -15.020674705505371

Token 590: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014881473034620285
    2. ' for' → logprob: -4.264881610870361
    3. '   ' → logprob: -7.514881610870361
    4. '    ' → logprob: -9.639881134033203
    5. 'for' → logprob: -9.764881134033203
    6. ':' → logprob: -10.889881134033203
    7. '     ' → logprob: -11.389881134033203
    8. ',' → logprob: -12.514881134033203
    9. '	   ' → logprob: -12.639881134033203
    10. '    ' → logprob: -12.639881134033203

Token 591: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07712183147668839
    2. 'for' (adapté à ' for') → logprob: -2.8271217346191406
    3. ' dx' → logprob: -5.452121734619141
    4. '   ' → logprob: -5.702121734619141
    5. ' rel' → logprob: -5.827121734619141
    6. '           ' → logprob: -6.202121734619141
    7. '       ' → logprob: -6.452121734619141
    8. 'dx' → logprob: -7.827121734619141
    9. ' rx' → logprob: -8.95212173461914
    10. ' r' → logprob: -8.95212173461914

Token 592: ' rel' (ID: 1536)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.6324701905250549
    2. 'rel' → logprob: -1.5074701309204102
    3. '(dx' → logprob: -1.5074701309204102
    4. ' dx' → logprob: -4.63247013092041
    5. '(rel' → logprob: -4.75747013092041
    6. ' rel' → logprob: -5.88247013092041
    7. '(' → logprob: -6.50747013092041
    8. 'r' → logprob: -6.50747013092041
    9. ' (' → logprob: -7.13247013092041
    10. '(d' → logprob: -8.13247013092041

Token 593: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00036037206882610917
    2. 'in' → logprob: -8.000360488891602
    3. ',' → logprob: -10.875360488891602
    4. 'dx' → logprob: -13.250360488891602
    5. '_' → logprob: -13.625360488891602
    6. '_pos' → logprob: -14.125360488891602
    7. 'ation' → logprob: -14.625360488891602
    8. '_dx' → logprob: -15.125360488891602
    9. 'a' → logprob: -15.500360488891602
    10. 'pos' → logprob: -15.500360488891602

Token 594: ' relative' (ID: 15001)
  Prédit: 'relative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'relative' → logprob: -0.0003373694489710033
    2. ' relative' → logprob: -8.000337600708008
    3. '   ' → logprob: -13.750337600708008
    4. 'rel' → logprob: -15.375337600708008
    5. '[' → logprob: -15.625337600708008
    6. '(relative' → logprob: -15.875337600708008
    7. ' ' → logprob: -16.000337600708008
    8. '  ' → logprob: -17.000337600708008
    9. '    ' → logprob: -17.250337600708008
    10. '[(' → logprob: -17.625337600708008

Token 595: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -5.157039049663581e-05
    2. 'positions' → logprob: -10.750051498413086
    3. 's' → logprob: -11.375051498413086
    4. '_' → logprob: -11.750051498413086
    5. ')' → logprob: -12.000051498413086
    6. ' positions' → logprob: -13.500051498413086
    7. '_p' → logprob: -14.250051498413086
    8. '   ' → logprob: -14.500051498413086
    9. ')_' → logprob: -14.750051498413086
    10. ' _' → logprob: -15.000051498413086

Token 596: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6335192918777466
    2. ':' → logprob: -0.7585192918777466
    3. '       ' → logprob: -7.758519172668457
    4. '   ' → logprob: -8.883519172668457
    5. ' :
' → logprob: -9.008519172668457
    6. ' :' → logprob: -9.508519172668457
    7. ':
' → logprob: -9.758519172668457
    8. '):
' → logprob: -10.508519172668457
    9. '           ' → logprob: -10.508519172668457
    10. '	' → logprob: -12.133519172668457

Token 597: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0216885507106781
    2. '       ' → logprob: -4.146688461303711
    3. '            
' → logprob: -6.646688461303711
    4. ',' → logprob: -6.771688461303711
    5. '        
' → logprob: -7.146688461303711
    6. ' if' → logprob: -7.646688461303711
    7. ':
' → logprob: -8.146688461303711
    8. '	       ' → logprob: -8.396688461303711
    9. ':' → logprob: -8.521688461303711
    10. '
' → logprob: -8.896688461303711

Token 598: ' q' (ID: 2335)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.9157620668411255
    2. ' q' → logprob: -1.9157620668411255
    3. ' np' → logprob: -2.040761947631836
    4. 'n' → logprob: -2.165761947631836
    5. ' nb' → logprob: -2.165761947631836
    6. ' n' → logprob: -2.540761947631836
    7. 'q' (adapté à ' q') → logprob: -2.665761947631836
    8. 'np' → logprob: -2.790761947631836
    9. ' nbr' → logprob: -3.040761947631836
    10. ' nxt' → logprob: -4.040761947631836

Token 599: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326231360435486
    2. ' =' → logprob: -1.3132623434066772
    3. ' ' → logprob: -15.313261985778809
    4. ',' → logprob: -16.438262939453125
    5. '_=' → logprob: -16.563262939453125
    6. '＝' → logprob: -16.813262939453125
    7. '_' → logprob: -17.313262939453125
    8. ')' → logprob: -17.813262939453125
    9. '=

' → logprob: -17.938262939453125
    10. '_candidate' → logprob: -17.938262939453125

Token 600: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.02324955351650715
    2. ' neighbors' → logprob: -3.773249626159668
    3. 'neighbor' → logprob: -13.148249626159668
    4. '(ne' → logprob: -14.148249626159668
    5. '(' → logprob: -14.398249626159668
    6. ' ' → logprob: -15.398249626159668
    7. '   ' → logprob: -15.398249626159668
    8. 'ne' → logprob: -15.773249626159668
    9. '_neighbors' → logprob: -16.39824867248535
    10. ' (' → logprob: -16.52324867248535

Token 601: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00026407750556245446
    2. '(' → logprob: -8.250264167785645
    3. ' (' → logprob: -12.875264167785645
    4. '(
' → logprob: -16.625263214111328
    5. '(pos' → logprob: -17.750263214111328
    6. '(q' → logprob: -17.875263214111328
    7. 'p' → logprob: -18.125263214111328
    8. '((' → logprob: -18.375263214111328
    9. ')' → logprob: -18.750263214111328
    10. '   ' → logprob: -19.000263214111328

Token 602: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020449401927180588
    2. ' ,' → logprob: -8.500204086303711
    3. ',
' → logprob: -14.250204086303711
    4. '           ' → logprob: -16.12520408630371
    5. ')' → logprob: -16.87520408630371
    6. ',q' → logprob: -17.00020408630371
    7. ',re' → logprob: -17.25020408630371
    8. '   ' → logprob: -17.37520408630371
    9. '	' → logprob: -17.62520408630371
    10. '
' → logprob: -17.75020408630371

Token 603: ' rel' (ID: 1536)
  Prédit: 'rel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rel' → logprob: -0.0067161982879042625
    2. ' rel' → logprob: -5.006716251373291
    3. '(rel' → logprob: -14.006715774536133
    4. ')' → logprob: -17.756715774536133
    5. '_rel' → logprob: -18.506715774536133
    6. 'relu' → logprob: -18.756715774536133
    7. '   ' → logprob: -19.006715774536133
    8. ' ' → logprob: -19.256715774536133
    9. '    ' → logprob: -19.381715774536133
    10. 'rela' → logprob: -19.506715774536133

Token 604: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.038123540580272675
    2. ')' → logprob: -3.288123607635498
    3. ')
' → logprob: -9.66312313079834
    4. '           ' → logprob: -11.03812313079834
    5. ' )
' → logprob: -13.53812313079834
    6. '):
' → logprob: -14.53812313079834
    7. ')

' → logprob: -15.41312313079834
    8. '       ' → logprob: -15.66312313079834
    9. ')`
' → logprob: -16.038124084472656
    10. ' )' → logprob: -16.788124084472656

Token 605: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004077332094311714
    2. '<|end|>' → logprob: -6.129077434539795
    3. '            
' → logprob: -7.879077434539795
    4. '<|end|>' → logprob: -7.879077434539795
    5. ' if' → logprob: -8.379076957702637
    6. ' ' → logprob: -8.754076957702637
    7. '		' → logprob: -8.754076957702637
    8. '               ' → logprob: -9.379076957702637
    9. '   ' → logprob: -9.504076957702637
    10. ' 
' → logprob: -9.629076957702637

Token 606: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.00791914016008377
    2. 'if' → logprob: -5.1329193115234375
    3. '           ' → logprob: -6.2579193115234375
    4. ' 
' → logprob: -10.882919311523438
    5. '            
' → logprob: -10.882919311523438
    6. ' ' → logprob: -11.132919311523438
    7. '	if' → logprob: -12.007919311523438
    8. '            ' → logprob: -12.007919311523438
    9. ' ' → logprob: -13.007919311523438
    10. '               ' → logprob: -13.132919311523438

Token 607: ' Check' (ID: 6208)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5807937383651733
    2. 'if' → logprob: -0.8307937383651733
    3. '           ' → logprob: -5.330793857574463
    4. ' ' → logprob: -14.455793380737305
    5. '            
' → logprob: -14.830793380737305
    6. 'If' → logprob: -14.955793380737305
    7. '	if' → logprob: -15.330793380737305
    8. ' ' → logprob: -15.455793380737305
    9. '   ' → logprob: -15.705793380737305
    10. ' 
' → logprob: -16.830793380737305

Token 608: ' q' (ID: 2335)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0027000203263014555
    2. ' in' → logprob: -6.627699851989746
    3. 'if' → logprob: -6.752699851989746
    4. 'in' → logprob: -9.002699851989746
    5. ' q' → logprob: -9.627699851989746
    6. '   ' → logprob: -11.627699851989746
    7. '           ' → logprob: -12.627699851989746
    8. ' not' → logprob: -14.002699851989746
    9. ' ' → logprob: -14.252699851989746
    10. '_in' → logprob: -14.502699851989746

Token 609: ' dans' (ID: 2671)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07002002000808716
    2. 'in' → logprob: -2.6950199604034424
    3. ' ' → logprob: -9.945019721984863
    4. ' ' → logprob: -11.695019721984863
    5. '<|end|>' → logprob: -11.695019721984863
    6. ')' → logprob: -12.070019721984863
    7. ' not' → logprob: -13.195019721984863
    8. ' if' → logprob: -13.445019721984863
    9. '=' → logprob: -13.570019721984863
    10. ',' → logprob: -13.820019721984863

Token 610: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.054887473583221436
    2. ' pos' → logprob: -2.929887533187866
    3. 'in' → logprob: -13.554887771606445
    4. ' in' → logprob: -14.179887771606445
    5. '   ' → logprob: -14.179887771606445
    6. '(pos' → logprob: -14.554887771606445
    7. '	pos' → logprob: -14.554887771606445
    8. '_pos' → logprob: -14.804887771606445
    9. 'position' → logprob: -15.429887771606445
    10. '[pos' → logprob: -15.929887771606445

Token 611: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.0005293221911415458
    2. 'et' → logprob: -7.6255292892456055
    3. '_' → logprob: -10.875529289245605
    4. 't' → logprob: -11.375529289245605
    5. 'set' → logprob: -12.000529289245605
    6. '_list' → logprob: -13.625529289245605
    7. ' _' → logprob: -14.250529289245605
    8. 'ition' → logprob: -14.750529289245605
    9. 's' → logprob: -15.000529289245605
    10. '_t' → logprob: -15.250529289245605

Token 612: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07438495010137558
    2. '           ' → logprob: -2.824384927749634
    3. 'and' → logprob: -4.449385166168213
    4. '   ' → logprob: -7.824385166168213
    5. '       ' → logprob: -9.574384689331055
    6. ' if' → logprob: -10.324384689331055
    7. '          ' → logprob: -10.699384689331055
    8. '		' → logprob: -10.824384689331055
    9. '            ' → logprob: -10.949384689331055
    10. '               ' → logprob: -11.074384689331055

Token 613: ' p' (ID: 275)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3696329593658447
    2. 'in' → logprob: -1.3696329593658447
    3. ' q' → logprob: -3.1196329593658447
    4. 'q' → logprob: -4.619632720947266
    5. ' p' → logprob: -7.744632720947266
    6. 'p' → logprob: -9.119632720947266
    7. 'pos' → logprob: -10.369632720947266
    8. ' if' → logprob: -10.744632720947266
    9. ' ' → logprob: -10.932132720947266
    10. 'if' → logprob: -11.119632720947266

Token 614: '<' (ID: 27)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5763348340988159
    2. '!=' → logprob: -0.8263348340988159
    3. ' <' → logprob: -8.701334953308105
    4. '<' → logprob: -9.201334953308105
    5. ' in' → logprob: -10.076334953308105
    6. ' q' → logprob: -10.451334953308105
    7. ' not' → logprob: -10.826334953308105
    8. 'q' → logprob: -10.951334953308105
    9. 'not' → logprob: -12.326334953308105
    10. '()!=' → logprob: -12.576334953308105

Token 615: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.005235648714005947
    2. ' q' → logprob: -5.25523567199707
    3. '	q' → logprob: -14.13023567199707
    4. ' ' → logprob: -14.38023567199707
    5. '=' → logprob: -14.63023567199707
    6. '>' → logprob: -16.25523567199707
    7. '_q' → logprob: -17.38023567199707
    8. '   ' → logprob: -18.00523567199707
    9. ' ' → logprob: -18.75523567199707
    10. '  ' → logprob: -18.88023567199707

Token 616: ' pour' (ID: 1930)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.011439992114901543
    2. 'and' → logprob: -4.511439800262451
    3. '           ' → logprob: -8.01144027709961
    4. ' if' → logprob: -11.38644027709961
    5. '            ' → logprob: -11.51144027709961
    6. ',' → logprob: -11.76144027709961
    7. '       ' → logprob: -12.38644027709961
    8. '          ' → logprob: -12.38644027709961
    9. '<|end|>' → logprob: -12.51144027709961
    10. '   ' → logprob: -12.63644027709961

Token 617: ' éviter' (ID: 64013)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.6836140155792236
    2. ' p' → logprob: -1.6836140155792236
    3. 'q' → logprob: -2.0586140155792236
    4. ' éviter' → logprob: -2.1836140155792236
    5. 'p' → logprob: -3.1836140155792236
    6. ' not' → logprob: -4.4336137771606445
    7. 'not' → logprob: -4.9336137771606445
    8. ' evitar' → logprob: -5.6836137771606445
    9. ' garantir' → logprob: -6.9336137771606445
    10. 'avoid' → logprob: -6.9336137771606445

Token 618: ' doubl' (ID: 127992)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.2616528570652008
    2. ' duplicates' → logprob: -2.386652946472168
    3. ' q' → logprob: -2.511652946472168
    4. '(p' → logprob: -3.886652946472168
    5. 'p' → logprob: -4.136652946472168
    6. 'duplicates' → logprob: -5.261652946472168
    7. ' (' → logprob: -5.511652946472168
    8. 'q' → logprob: -5.886652946472168
    9. ' duplicate' → logprob: -6.386652946472168
    10. ' ' → logprob: -7.011652946472168

Token 619: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.18506698310375214
    2. 'on' → logprob: -1.8100669384002686
    3. 'es' → logprob: -6.560067176818848
    4. 'onner' → logprob: -7.060067176818848
    5. 'é' → logprob: -7.185067176818848
    6. 'onn' → logprob: -7.310067176818848
    7. 'e' → logprob: -7.435067176818848
    8. 'onne' → logprob: -8.310067176818848
    9. 'onné' → logprob: -9.060067176818848
    10. 'onate' → logprob: -9.060067176818848

Token 620: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1558489203453064
    2. '           ' → logprob: -2.030848979949951
    3. 'and' → logprob: -4.530848979949951
    4. ',' → logprob: -7.780848979949951
    5. '            ' → logprob: -7.780848979949951
    6. ' if' → logprob: -8.030848503112793
    7. ' ' → logprob: -8.280848503112793
    8. '               ' → logprob: -8.280848503112793
    9. ':' → logprob: -8.530848503112793
    10. '            
' → logprob: -9.155848503112793

Token 621: ' et' (ID: 859)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27838465571403503
    2. ' if' → logprob: -1.7783846855163574
    3. ' q' → logprob: -3.2783846855163574
    4. '            ' → logprob: -3.7783846855163574
    5. ' ' → logprob: -5.653384685516357
    6. ' 
' → logprob: -6.153384685516357
    7. '            
' → logprob: -6.278384685516357
    8. ' and' → logprob: -6.528384685516357
    9. ' ' → logprob: -6.653384685516357
    10. ' p' → logprob: -7.028384685516357

Token 622: ' que' (ID: 661)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.35056617856025696
    2. ' p' → logprob: -1.7255661487579346
    3. 'q' → logprob: -2.6005661487579346
    4. ' in' → logprob: -3.9755661487579346
    5. 'p' → logprob: -4.100566387176514
    6. 'in' → logprob: -5.850566387176514
    7. ' not' → logprob: -6.225566387176514
    8. ' if' → logprob: -7.225566387176514
    9. ' pos' → logprob: -7.850566387176514
    10. ' adj' → logprob: -8.225565910339355

Token 623: ' q' (ID: 2335)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.689562201499939
    2. ' q' → logprob: -1.564562201499939
    3. 'in' → logprob: -2.3145623207092285
    4. ' p' → logprob: -2.3145623207092285
    5. 'q' → logprob: -2.6895623207092285
    6. 'p' → logprob: -3.8145623207092285
    7. ' not' → logprob: -7.6895623207092285
    8. ' ' → logprob: -8.68956184387207
    9. ' pos' → logprob: -8.93956184387207
    10. ' (' → logprob: -8.93956184387207

Token 624: ' est' (ID: 893)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3491925001144409
    2. 'in' → logprob: -1.224192500114441
    3. ' !=' → logprob: -8.84919261932373
    4. '>' → logprob: -8.84919261932373
    5. ' not' → logprob: -9.34919261932373
    6. ' ' → logprob: -9.84919261932373
    7. '<' → logprob: -9.84919261932373
    8. '!=' → logprob: -9.84919261932373
    9. ' <' → logprob: -10.09919261932373
    10. ')' → logprob: -10.47419261932373

Token 625: ' valide' (ID: 137323)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6942108869552612
    2. ' in' → logprob: -0.6942108869552612
    3. ' not' → logprob: -7.194211006164551
    4. 'not' → logprob: -8.44421100616455
    5. 'dans' → logprob: -10.56921100616455
    6. ' ' → logprob: -10.81921100616455
    7. ' dans' → logprob: -11.06921100616455
    8. '	in' → logprob: -11.81921100616455
    9. '_in' → logprob: -12.44421100616455
    10. 'different' → logprob: -12.56921100616455

Token 626: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.021255802363157272
    2. 'and' → logprob: -3.8962557315826416
    3. ' if' → logprob: -8.271255493164062
    4. ',' → logprob: -8.521255493164062
    5. ' ' → logprob: -9.646255493164062
    6. ' et' → logprob: -10.021255493164062
    7. '   ' → logprob: -10.521255493164062
    8. '           ' → logprob: -10.896255493164062
    9. ' ,' → logprob: -11.021255493164062
    10. ' (' → logprob: -11.146255493164062

Token 627: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02511439472436905
    2. ' if' → logprob: -4.6501145362854
    3. '           ' → logprob: -4.9001145362854
    4. 'and' → logprob: -5.0251145362854
    5. '   ' → logprob: -7.6501145362854
    6. '       ' → logprob: -8.775114059448242
    7. ',' → logprob: -8.775114059448242
    8. '               ' → logprob: -10.025114059448242
    9. 'if' → logprob: -10.025114059448242
    10. ' ' → logprob: -10.150114059448242

Token 628: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0014904579147696495
    2. '           ' → logprob: -7.001490592956543
    3. 'if' (adapté à ' if') → logprob: -8.376490592956543
    4. ' ' → logprob: -8.751490592956543
    5. '            ' → logprob: -9.501490592956543
    6. ' 
' → logprob: -9.501490592956543
    7. ' in' → logprob: -11.626490592956543
    8. '               ' → logprob: -11.751490592956543
    9. ' ' → logprob: -12.251490592956543
    10. '            
' → logprob: -12.501490592956543

Token 629: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.15357138216495514
    2. 'q' → logprob: -2.028571367263794
    3. ' in' → logprob: -5.153571605682373
    4. 'in' → logprob: -5.403571605682373
    5. ' (' → logprob: -8.403571128845215
    6. '(q' → logprob: -8.653571128845215
    7. '(' → logprob: -9.778571128845215
    8. ' ' → logprob: -9.778571128845215
    9. '	q' → logprob: -11.528571128845215
    10. '    ' → logprob: -11.966071128845215

Token 630: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14278759062290192
    2. 'in' → logprob: -2.0177876949310303
    3. ' ' → logprob: -9.26778793334961
    4. '_in' → logprob: -13.01778793334961
    5. '<|end|>' → logprob: -13.14278793334961
    6. 'and' → logprob: -13.26778793334961
    7. '	in' → logprob: -13.39278793334961
    8. ' ' → logprob: -13.83028793334961
    9. '  ' → logprob: -13.83028793334961
    10. 'In' → logprob: -14.26778793334961

Token 631: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.011048528365790844
    2. ' pos' → logprob: -4.511048316955566
    3. '	pos' → logprob: -15.011048316955566
    4. '(pos' → logprob: -16.261049270629883
    5. ' ' → logprob: -16.636049270629883
    6. 'p' → logprob: -16.886049270629883
    7. '[pos' → logprob: -17.136049270629883
    8. 'position' → logprob: -17.261049270629883
    9. 'adj' → logprob: -17.386049270629883
    10. 'positions' → logprob: -17.761049270629883

Token 632: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -7.493430894101039e-05
    2. 'et' → logprob: -10.125075340270996
    3. 'set' → logprob: -10.375075340270996
    4. 'pos' → logprob: -12.875075340270996
    5. '_pos' → logprob: -14.375075340270996
    6. '_' → logprob: -15.750075340270996
    7. 'Set' → logprob: -16.00007438659668
    8. '_SET' → logprob: -17.50007438659668
    9. '_list' → logprob: -17.62507438659668
    10. 'erset' → logprob: -17.62507438659668

Token 633: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0052514225244522095
    2. 'and' → logprob: -5.255251407623291
    3. ' ' → logprob: -11.75525188446045
    4. '    ' → logprob: -12.38025188446045
    5. '	and' → logprob: -13.25525188446045
    6. '            ' → logprob: -14.00525188446045
    7. '   ' → logprob: -14.25525188446045
    8. '        ' → logprob: -15.00525188446045
    9. '<|end|>' → logprob: -15.13025188446045
    10. '           ' → logprob: -15.13025188446045

Token 634: '               ' (ID: 506)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01296350359916687
    2. '               ' → logprob: -5.01296329498291
    3. 'and' → logprob: -5.38796329498291
    4. '            ' → logprob: -6.76296329498291
    5. '                ' → logprob: -8.01296329498291
    6. '           ' → logprob: -9.51296329498291
    7. '              ' → logprob: -10.88796329498291
    8. '             ' → logprob: -11.13796329498291
    9. ' ' → logprob: -11.38796329498291
    10. ' ' → logprob: -11.51296329498291

Token 635: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3533308804035187
    2. ' if' → logprob: -1.6033308506011963
    3. ' adj' → logprob: -2.8533308506011963
    4. 'if' → logprob: -4.103331089019775
    5. '               ' → logprob: -4.228331089019775
    6. 'adj' → logprob: -5.353331089019775
    7. '   ' → logprob: -6.603331089019775
    8. ' and' → logprob: -7.728331089019775
    9. '                       ' → logprob: -8.728330612182617
    10. '           ' → logprob: -8.728330612182617

Token 636: ' Ajouter' (ID: 165754)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0762925148010254
    2. '                   ' → logprob: -1.4512925148010254
    3. ' adj' → logprob: -1.4512925148010254
    4. 'if' → logprob: -2.4512925148010254
    5. 'adj' → logprob: -2.5762925148010254
    6. '   ' → logprob: -4.201292514801025
    7. '               ' → logprob: -4.576292514801025
    8. ' ' → logprob: -7.326292514801025
    9. '                       ' → logprob: -7.576292514801025
    10. ' ' → logprob: -7.826292514801025

Token 637: ' les' (ID: 1341)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.13434377312660217
    2. ' adj' → logprob: -2.1343438625335693
    3. 'q' → logprob: -5.25934362411499
    4. 'adj' → logprob: -6.38434362411499
    5. ' p' → logprob: -8.759344100952148
    6. '   ' → logprob: -9.384344100952148
    7. ' if' → logprob: -9.384344100952148
    8. '(q' → logprob: -10.259344100952148
    9. ' (' → logprob: -10.759344100952148
    10. '                   ' → logprob: -10.884344100952148

Token 638: ' deux' (ID: 10301)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.49259597063064575
    2. 'p' → logprob: -1.867595911026001
    3. 'q' → logprob: -2.117595911026001
    4. ' adj' → logprob: -2.992595911026001
    5. ' p' → logprob: -3.617595911026001
    6. ' q' → logprob: -4.24259614944458
    7. ' edges' → logprob: -5.36759614944458
    8. 'edges' → logprob: -5.61759614944458
    9. ' edge' → logprob: -5.86759614944458
    10. ' adjacency' → logprob: -5.99259614944458

Token 639: ' positions' (ID: 15897)
  Prédit: ' positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.5443940162658691
    2. 'positions' → logprob: -1.2943940162658691
    3. ' points' → logprob: -2.919394016265869
    4. ' p' → logprob: -3.419394016265869
    5. ' adj' → logprob: -4.169394016265869
    6. 'points' → logprob: -5.169394016265869
    7. ' à' → logprob: -5.294394016265869
    8. 'p' → logprob: -5.419394016265869
    9. 'adj' → logprob: -5.419394016265869
    10. ' côtés' → logprob: -5.794394016265869

Token 640: ' dans' (ID: 2671)
  Prédit: ' adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.0743841752409935
    2. '                   ' → logprob: -4.1993842124938965
    3. '               ' → logprob: -4.3243842124938965
    4. ' à' → logprob: -4.6993842124938965
    5. ' if' → logprob: -4.8243842124938965
    6. 'adj' → logprob: -4.9493842124938965
    7. ' p' → logprob: -5.4493842124938965
    8. ' aux' → logprob: -5.5743842124938965
    9. ' dans' → logprob: -5.6993842124938965
    10. '   ' → logprob: -6.1993842124938965

Token 641: ' une' (ID: 2463)
  Prédit: ' adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.47603940963745117
    2. 'adj' → logprob: -0.9760394096374512
    3. 'l' → logprob: -7.351039409637451
    4. ' adjacency' → logprob: -7.726039409637451
    5. ' l' → logprob: -7.976039409637451
    6. '   ' → logprob: -8.47603988647461
    7. ' la' → logprob: -8.85103988647461
    8. 'the' → logprob: -9.97603988647461
    9. ' the' → logprob: -10.72603988647461
    10. ' ' → logprob: -11.22603988647461

Token 642: ' ar' (ID: 646)
  Prédit: ' adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.6577337384223938
    2. 'adj' → logprob: -0.7827337384223938
    3. ' adjacency' → logprob: -4.032733917236328
    4. ' paire' → logprob: -6.157733917236328
    5. ' if' → logprob: -7.032733917236328
    6. 'if' → logprob: -7.282733917236328
    7. ' liste' → logprob: -7.407733917236328
    8. '   ' → logprob: -7.532733917236328
    9. ' relation' → logprob: -7.657733917236328
    10. 'ligne' → logprob: -8.157733917236328

Token 643: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.010349725373089314
    2. 'c' → logprob: -4.885349750518799
    3. 'êtes' → logprob: -6.635349750518799
    4. 'ète' → logprob: -7.635349750518799
    5. 'r' → logprob: -8.38534927368164
    6. 'ete' → logprob: -9.01034927368164
    7. 'g' → logprob: -9.26034927368164
    8. 'ène' → logprob: -9.88534927368164
    9. 'cs' → logprob: -10.01034927368164
    10. 'é' → logprob: -10.13534927368164

Token 644: ' ord' (ID: 6608)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6503409147262573
    2. '                   ' → logprob: -1.4003409147262573
    3. ' adj' → logprob: -2.400341033935547
    4. ' if' → logprob: -2.900341033935547
    5. ',' → logprob: -3.150341033935547
    6. '   ' → logprob: -4.275341033935547
    7. '           ' → logprob: -4.400341033935547
    8. 'adj' → logprob: -5.525341033935547
    9. '       ' → logprob: -5.650341033935547
    10. ' (' → logprob: -6.650341033935547

Token 645: 'onnée' (ID: 91161)
  Prédit: 'onnée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onnée' → logprob: -0.0013547601411119103
    2. 'onnées' → logprob: -7.626354694366455
    3. 'onné' → logprob: -7.876354694366455
    4. 'onn' → logprob: -8.376355171203613
    5. 'on' → logprob: -9.126355171203613
    6. 'inaire' → logprob: -9.376355171203613
    7. 're' → logprob: -10.626355171203613
    8. 'rée' → logprob: -11.626355171203613
    9. '(p' → logprob: -11.751355171203613
    10. 'in' → logprob: -12.376355171203613

Token 646: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.2116426229476929
    2. '(p' → logprob: -1.3366426229476929
    3. '               ' → logprob: -1.3366426229476929
    4. '                   ' → logprob: -2.5866427421569824
    5. ' (' → logprob: -3.0866427421569824
    6. ',' → logprob: -3.9616427421569824
    7. ' avec' → logprob: -4.336642742156982
    8. 'if' → logprob: -4.711642742156982
    9. ' with' → logprob: -6.086642742156982
    10. ' p' → logprob: -6.211642742156982

Token 647: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23119215667247772
    2. ' if' → logprob: -1.9811921119689941
    3. '                   ' → logprob: -3.731192111968994
    4. '(p' → logprob: -3.856192111968994
    5. ' (' → logprob: -4.231192111968994
    6. 'if' → logprob: -6.231192111968994
    7. ',' → logprob: -6.356192111968994
    8. ' and' → logprob: -6.481192111968994
    9. '           ' → logprob: -7.356192111968994
    10. ' p' → logprob: -7.606192111968994

Token 648: ' #' (ID: 1069)
  Prédit: ' adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.675146758556366
    2. ' if' → logprob: -0.925146758556366
    3. '                   ' → logprob: -3.1751468181610107
    4. '               ' → logprob: -3.8001468181610107
    5. 'adj' → logprob: -4.300146579742432
    6. 'if' → logprob: -4.425146579742432
    7. ' p' → logprob: -6.050146579742432
    8. '   ' → logprob: -7.050146579742432
    9. 'p' → logprob: -7.800146579742432
    10. ' pair' → logprob: -8.30014705657959

Token 649: ' ord' (ID: 6608)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1838812530040741
    2. '               ' → logprob: -2.1838812828063965
    3. 'if' → logprob: -3.4338812828063965
    4. '                   ' → logprob: -4.0588812828063965
    5. ' adj' → logprob: -5.3088812828063965
    6. 'adj' → logprob: -7.4338812828063965
    7. '           ' → logprob: -9.558880805969238
    8. '   ' → logprob: -9.933880805969238
    9. '                
' → logprob: -10.808880805969238
    10. '                ' → logprob: -10.808880805969238

Token 650: 'onner' (ID: 89457)
  Prédit: 'ered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ered' → logprob: -0.6961475610733032
    2. 'onnée' → logprob: -1.1961475610733032
    3. 'red' → logprob: -2.6961474418640137
    4. 'er' → logprob: -3.0711474418640137
    5. 'onné' → logprob: -3.3211474418640137
    6. 're' → logprob: -3.4461474418640137
    7. 'ré' → logprob: -4.696147441864014
    8. 'onne' → logprob: -6.446147441864014
    9. 'rée' → logprob: -6.571147441864014
    10. 'onnées' → logprob: -6.821147441864014

Token 651: ' par' (ID: 686)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.8848471641540527
    2. ' =' → logprob: -1.6348471641540527
    3. '_pair' → logprob: -2.3848471641540527
    4. 'ed' → logprob: -3.0098471641540527
    5. ' p' → logprob: -3.0098471641540527
    6. 'p' → logprob: -3.1348471641540527
    7. ' (' → logprob: -3.6348471641540527
    8. 'pair' → logprob: -3.7598471641540527
    9. ' if' → logprob: -3.8848471641540527
    10. ' pair' → logprob: -4.134847164154053

Token 652: ' indice' (ID: 90848)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6183775067329407
    2. 'p' → logprob: -1.618377447128296
    3. ' p' → logprob: -2.493377447128296
    4. ' min' → logprob: -2.493377447128296
    5. 'sorted' → logprob: -2.993377447128296
    6. ' sorted' → logprob: -3.618377447128296
    7. ' tuple' → logprob: -5.493377685546875
    8. ' q' → logprob: -5.618377685546875
    9. 'tuple' → logprob: -5.868377685546875
    10. 'q' → logprob: -5.868377685546875

Token 653: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1998101472854614
    2. '(p' → logprob: -1.1998101472854614
    3. ' if' → logprob: -1.1998101472854614
    4. ' (' → logprob: -3.949810028076172
    5. ',' → logprob: -4.199810028076172
    6. 'if' → logprob: -4.324810028076172
    7. ' p' → logprob: -4.324810028076172
    8. '   ' → logprob: -5.074810028076172
    9. 'p' → logprob: -5.324810028076172
    10. '                   ' → logprob: -5.574810028076172

Token 654: ' uniform' (ID: 21219)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.6110808849334717
    2. ' position' → logprob: -1.4860808849334717
    3. ' éviter' → logprob: -2.2360808849334717
    4. 'canonical' → logprob: -3.9860808849334717
    5. 'index' → logprob: -4.236081123352051
    6. 'p' → logprob: -4.236081123352051
    7. 'cons' → logprob: -4.611081123352051
    8. ' index' → logprob: -4.861081123352051
    9. ' garantir' → logprob: -4.861081123352051
    10. ' p' → logprob: -4.986081123352051

Token 655: 'ité' (ID: 3761)
  Prédit: 'iser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.0581376738846302
    2. 'ité' → logprob: -3.1831376552581787
    3. 'er' → logprob: -5.433137893676758
    4. 'e' → logprob: -5.683137893676758
    5. 'izer' → logprob: -5.808137893676758
    6. 'isation' → logprob: -6.308137893676758
    7. 'isé' → logprob: -6.808137893676758
    8. 'alité' → logprob: -8.058137893676758
    9. 'iter' → logprob: -8.308137893676758
    10. 'el' → logprob: -9.183137893676758

Token 656: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7474028468132019
    2. ' if' → logprob: -1.3724029064178467
    3. ' p' → logprob: -2.8724029064178467
    4. '                   ' → logprob: -3.1224029064178467
    5. 'if' → logprob: -3.3724029064178467
    6. ' (' → logprob: -3.9974029064178467
    7. 'pos' → logprob: -4.122402667999268
    8. 'indices' → logprob: -4.122402667999268
    9. '(p' → logprob: -4.247402667999268
    10. '
' → logprob: -4.622402667999268

Token 657: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15398812294006348
    2. '(p' → logprob: -2.7789881229400635
    3. ' (' → logprob: -2.9039881229400635
    4. ',' → logprob: -4.653987884521484
    5. ' if' → logprob: -5.153987884521484
    6. '                   ' → logprob: -6.278987884521484
    7. ' p' → logprob: -6.278987884521484
    8. ' =' → logprob: -6.403987884521484
    9. ':' → logprob: -7.153987884521484
    10. '(' → logprob: -7.278987884521484

Token 658: ' p' (ID: 275)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6908255219459534
    2. ' p' → logprob: -2.1908254623413086
    3. 'if' → logprob: -2.3158254623413086
    4. 'p' (adapté à ' p') → logprob: -2.5658254623413086
    5. ' idx' → logprob: -2.6908254623413086
    6. '               ' → logprob: -3.0658254623413086
    7. 'idx' → logprob: -3.3158254623413086
    8. ' i' → logprob: -3.5658254623413086
    9. 'i' → logprob: -4.315825462341309
    10. 'pair' → logprob: -5.940825462341309

Token 659: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.10969474911689758
    2. '_index' → logprob: -2.609694719314575
    3. 'idx' → logprob: -3.609694719314575
    4. 'index' → logprob: -7.234694957733154
    5. '_i' → logprob: -7.734694957733154
    6. 'p' → logprob: -7.734694957733154
    7. '_' → logprob: -8.484694480895996
    8. 'i' → logprob: -8.609694480895996
    9. '_pairs' → logprob: -8.859694480895996
    10. ',' → logprob: -8.984694480895996

Token 660: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3834582269191742
    2. '=' → logprob: -1.6334582567214966
    3. ' =' → logprob: -2.133458137512207
    4. ' ,' → logprob: -5.883458137512207
    5. ',p' → logprob: -6.508458137512207
    6. 'p' → logprob: -8.883458137512207
    7. 'x' → logprob: -9.883458137512207
    8. '=p' → logprob: -9.883458137512207
    9. ' <' → logprob: -10.008458137512207
    10. '<p' → logprob: -10.133458137512207

Token 661: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.0026362957432866096
    2. ' position' → logprob: -6.127636432647705
    3. 'min' → logprob: -7.752636432647705
    4. ' min' → logprob: -11.002635955810547
    5. '   ' → logprob: -13.127635955810547
    6. 'index' → logprob: -14.127635955810547
    7. 'max' → logprob: -14.377635955810547
    8. ' ' → logprob: -14.377635955810547
    9. '	position' → logprob: -15.377635955810547
    10. '  ' → logprob: -15.877635955810547

Token 662: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.0005379011854529381
    2. 'to' → logprob: -8.000537872314453
    3. 'To' → logprob: -8.625537872314453
    4. 'index' → logprob: -12.125537872314453
    5. '_index' → logprob: -12.250537872314453
    6. 'p' → logprob: -12.875537872314453
    7. ' =' → logprob: -12.875537872314453
    8. '=' → logprob: -13.125537872314453
    9. '```' → logprob: -14.500537872314453
    10. '   ' → logprob: -14.625537872314453

Token 663: '_index' (ID: 7748)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.30186524987220764
    2. '_index' → logprob: -2.051865339279175
    3. 'p' → logprob: -2.301865339279175
    4. '(p' → logprob: -3.676865339279175
    5. 'pos' → logprob: -5.801865100860596
    6. 'position' → logprob: -6.676865100860596
    7. ' p' → logprob: -7.301865100860596
    8. 'idx' → logprob: -7.426865100860596
    9. 'tuple' → logprob: -8.426865577697754
    10. 'Index' → logprob: -8.926865577697754

Token 664: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00035846480750478804
    2. '(' → logprob: -8.625358581542969
    3. 'p' → logprob: -8.750358581542969
    4. ' (' → logprob: -11.000358581542969
    5. ' p' → logprob: -13.750358581542969
    6. '((' → logprob: -14.500358581542969
    7. ')' → logprob: -14.500358581542969
    8. 's' → logprob: -15.125358581542969
    9. '(
' → logprob: -15.125358581542969
    10. ',p' → logprob: -15.500358581542969

Token 665: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043516453355550766
    2. ')
' → logprob: -3.1685163974761963
    3. ' )' → logprob: -8.918516159057617
    4. '),' → logprob: -9.793516159057617
    5. ' )
' → logprob: -10.043516159057617
    6. ',' → logprob: -10.168516159057617
    7. ')p' → logprob: -10.293516159057617
    8. '<|end|>' → logprob: -10.418516159057617
    9. '<|end|>' → logprob: -10.418516159057617
    10. ')+' → logprob: -10.793516159057617

Token 666: '               ' (ID: 506)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.27505558729171753
    2. ' q' → logprob: -2.5250556468963623
    3. 'q' → logprob: -2.9000556468963623
    4. 'if' → logprob: -3.4000556468963623
    5. ' p' → logprob: -4.150055408477783
    6. '               ' → logprob: -4.400055408477783
    7. '<|end|>' → logprob: -4.525055408477783
    8. 'p' → logprob: -4.650055408477783
    9. ',' → logprob: -5.025055408477783
    10. '   ' → logprob: -6.025055408477783

Token 667: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.024721140041947365
    2. ' q' → logprob: -3.774721145629883
    3. '               ' → logprob: -7.024721145629883
    4. '                   ' → logprob: -7.649721145629883
    5. ' if' → logprob: -9.774721145629883
    6. 'if' → logprob: -10.399721145629883
    7. '                ' → logprob: -11.649721145629883
    8. '	q' → logprob: -12.399721145629883
    9. '           ' → logprob: -13.024721145629883
    10. ' ' → logprob: -14.024721145629883

Token 668: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -6.396757089532912e-05
    2. 'idx' → logprob: -10.6250638961792
    3. ' =' → logprob: -10.8750638961792
    4. '=' → logprob: -11.7500638961792
    5. '_idxs' → logprob: -12.5000638961792
    6. '_IDX' → logprob: -12.8750638961792
    7. '_' → logprob: -13.2500638961792
    8. '	idx' → logprob: -14.2500638961792
    9. '_index' → logprob: -14.5000638961792
    10. '_pos' → logprob: -14.7500638961792

Token 669: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11310690641403198
    2. '=' → logprob: -2.2381069660186768
    3. ',' → logprob: -9.363106727600098
    4. '<|end|>' → logprob: -9.738106727600098
    5. ')' → logprob: -9.863106727600098
    6. ' <' → logprob: -10.238106727600098
    7. ' ' → logprob: -10.863106727600098
    8. '=p' → logprob: -11.613106727600098
    9. '<|end|>' → logprob: -12.363106727600098
    10. ' =)' → logprob: -12.988106727600098

Token 670: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.251936137676239
    2. ' position' → logprob: -1.5019361972808838
    3. 'p' → logprob: -13.501935958862305
    4. 'q' → logprob: -13.751935958862305
    5. 'int' → logprob: -13.751935958862305
    6. ' p' → logprob: -13.876935958862305
    7. '	position' → logprob: -14.376935958862305
    8. '(position' → logprob: -14.626935958862305
    9. '   ' → logprob: -14.876935958862305
    10. '           ' → logprob: -14.876935958862305

Token 671: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -4.60414821645827e-06
    2. 'to' → logprob: -12.500004768371582
    3. 'To' → logprob: -14.125004768371582
    4. ' to' → logprob: -17.500003814697266
    5. 'à' → logprob: -18.125003814697266
    6. '_TO' → logprob: -18.250003814697266
    7. '_index' → logprob: -18.250003814697266
    8. '```' → logprob: -18.250003814697266
    9. '   ' → logprob: -18.750003814697266
    10. ')' → logprob: -19.125003814697266

Token 672: '_index' (ID: 7748)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.00027706706896424294
    2. '_index' → logprob: -8.750277519226074
    3. 'position' → logprob: -9.125277519226074
    4. 'int' → logprob: -12.125277519226074
    5. ' index' → logprob: -12.500277519226074
    6. 'idx' → logprob: -16.125276565551758
    7. 'ind' → logprob: -16.500276565551758
    8. 'Index' → logprob: -16.625276565551758
    9. 'indice' → logprob: -17.000276565551758
    10. '	index' → logprob: -17.500276565551758

Token 673: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.0015655691968277097
    2. 'q' → logprob: -7.251565456390381
    3. '(' → logprob: -7.376565456390381
    4. ' (' → logprob: -8.501565933227539
    5. '(p' → logprob: -11.376565933227539
    6. ' q' → logprob: -11.626565933227539
    7. '(
' → logprob: -12.751565933227539
    8. ')' → logprob: -14.126565933227539
    9. '	q' → logprob: -15.001565933227539
    10. '?q' → logprob: -15.001565933227539

Token 674: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07043574005365372
    2. ')
' → logprob: -2.6954357624053955
    3. ' if' → logprob: -7.945435523986816
    4. '<|end|>' → logprob: -10.070435523986816
    5. 'if' → logprob: -10.445435523986816
    6. '<|end|>' → logprob: -11.695435523986816
    7. ')
' → logprob: -11.820435523986816
    8. ' )' → logprob: -11.820435523986816
    9. '               ' → logprob: -11.820435523986816
    10. ')p' → logprob: -11.945435523986816

Token 675: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03675786778330803
    2. ' if' → logprob: -3.5367579460144043
    3. 'if' → logprob: -6.161757946014404
    4. '                   ' → logprob: -6.411757946014404
    5. '                
' → logprob: -7.036757946014404
    6. '           ' → logprob: -7.161757946014404
    7. '   ' → logprob: -7.911757946014404
    8. '<|end|>' → logprob: -8.036757469177246
    9. '                ' → logprob: -8.786757469177246
    10. '       ' → logprob: -8.786757469177246

Token 676: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12555208802223206
    2. 'if' (adapté à ' if') → logprob: -2.250552177429199
    3. '               ' → logprob: -4.375552177429199
    4. '                   ' → logprob: -10.5005521774292
    5. '           ' → logprob: -10.7505521774292
    6. '	if' → logprob: -12.6255521774292
    7. '   ' → logprob: -12.8755521774292
    8. ' ' → logprob: -13.2505521774292
    9. '<|end|>' → logprob: -13.3755521774292
    10. '                
' → logprob: -13.5005521774292

Token 677: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.576073944568634
    2. ' p' → logprob: -0.826073944568634
    3. '(p' → logprob: -9.70107364654541
    4. ' (' → logprob: -10.95107364654541
    5. '   ' → logprob: -11.07607364654541
    6. '(' → logprob: -11.07607364654541
    7. '	p' → logprob: -11.32607364654541
    8. 'q' → logprob: -12.45107364654541
    9. '<p' → logprob: -13.45107364654541
    10. ' ' → logprob: -13.45107364654541

Token 678: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.00028529210248962045
    2. 'idx' → logprob: -8.625285148620605
    3. '<' → logprob: -9.375285148620605
    4. ' <' → logprob: -12.500285148620605
    5. '_IDX' → logprob: -12.500285148620605
    6. '	idx' → logprob: -12.875285148620605
    7. '<p' → logprob: -13.250285148620605
    8. ' idx' → logprob: -13.375285148620605
    9. '_idxs' → logprob: -13.875285148620605
    10. '[idx' → logprob: -14.000285148620605

Token 679: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11284956336021423
    2. '<' → logprob: -2.237849473953247
    3. '<p' → logprob: -11.862849235534668
    4. ' ' → logprob: -12.112849235534668
    5. '<|end|>' → logprob: -12.612849235534668
    6. '<int' → logprob: -13.362849235534668
    7. ' <
' → logprob: -13.737849235534668
    8. '<size' → logprob: -13.862849235534668
    9. '[' → logprob: -13.862849235534668
    10. ' <",' → logprob: -13.862849235534668

Token 680: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.16023509204387665
    2. ' q' → logprob: -1.910235047340393
    3. '               ' → logprob: -12.785235404968262
    4. ' ' → logprob: -13.160235404968262
    5. '                   ' → logprob: -13.660235404968262
    6. '	q' → logprob: -13.910235404968262
    7. 'position' → logprob: -14.285235404968262
    8. '_q' → logprob: -14.785235404968262
    9. '           ' → logprob: -14.972735404968262
    10. 'p' → logprob: -14.972735404968262

Token 681: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0009371895575895905
    2. 'idx' → logprob: -7.000936985015869
    3. 'x' → logprob: -11.250937461853027
    4. 'q' → logprob: -12.125937461853027
    5. 'Idx' → logprob: -12.750937461853027
    6. 'dx' → logprob: -14.250937461853027
    7. '	idx' → logprob: -14.375937461853027
    8. '_IDX' → logprob: -14.500937461853027
    9. ' idx' → logprob: -14.625937461853027
    10. 'd' → logprob: -15.000937461853027

Token 682: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22832942008972168
    2. ':
' → logprob: -1.7283294200897217
    3. '                   ' → logprob: -4.103329658508301
    4. ' and' → logprob: -5.478329658508301
    5. ' :' → logprob: -6.228329658508301
    6. '               ' → logprob: -6.228329658508301
    7. ' :
' → logprob: -6.853329658508301
    8. '                       ' → logprob: -8.3533296585083
    9. '):
' → logprob: -8.7283296585083
    10. '           ' → logprob: -8.9783296585083

Token 683: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0018025112804025412
    2. '               ' → logprob: -7.126802444458008
    3. ' adj' → logprob: -7.501802444458008
    4. '                       ' → logprob: -8.001802444458008
    5. ',' → logprob: -10.376802444458008
    6. 'adj' → logprob: -10.876802444458008
    7. '```' → logprob: -11.501802444458008
    8. '           ' → logprob: -11.626802444458008
    9. '   ' → logprob: -12.126802444458008
    10. '		           ' → logprob: -12.251802444458008

Token 684: ' adj' (ID: 20251)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5279344320297241
    2. ' adj' → logprob: -1.1529344320297241
    3. 'adj' (adapté à ' adj') → logprob: -2.4029345512390137
    4. '                       ' → logprob: -5.652934551239014
    5. ' adjacency' → logprob: -8.652934074401855
    6. '       ' → logprob: -8.902934074401855
    7. '   ' → logprob: -9.527934074401855
    8. '               ' → logprob: -9.652934074401855
    9. '           ' → logprob: -10.777934074401855
    10. '                    ' → logprob: -11.777934074401855

Token 685: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -5.5577775128767826e-06
    2. 'p' → logprob: -12.250005722045898
    3. '[' → logprob: -15.000005722045898
    4. ' [' → logprob: -15.625005722045898
    5. '(p' → logprob: -15.625005722045898
    6. '[q' → logprob: -17.6250057220459
    7. '[pos' → logprob: -17.8750057220459
    8. '   ' → logprob: -18.3750057220459
    9. '.setdefault' → logprob: -18.5000057220459
    10. '
' → logprob: -18.7500057220459

Token 686: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0004201866395305842
    2. '[p' → logprob: -8.500420570373535
    3. ']' → logprob: -9.000420570373535
    4. '][' → logprob: -10.250420570373535
    5. ' ].' → logprob: -10.500420570373535
    6. '.append' → logprob: -11.375420570373535
    7. '[' → logprob: -11.625420570373535
    8. 'append' → logprob: -12.875420570373535
    9. ''].' → logprob: -13.500420570373535
    10. '"].' → logprob: -13.875420570373535

Token 687: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.816093228830141e-06
    2. ' append' → logprob: -13.00000286102295
    3. '.append' → logprob: -14.50000286102295
    4. '_append' → logprob: -18.750001907348633
    5. 'appen' → logprob: -19.125001907348633
    6. 'Append' → logprob: -19.250001907348633
    7. '	append' → logprob: -20.125001907348633
    8. 'app' → logprob: -20.750001907348633
    9. 'add' → logprob: -22.125001907348633
    10. '   ' → logprob: -23.500001907348633

Token 688: '(q' (ID: 21479)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.04305148497223854
    2. ' q' → logprob: -3.1680514812469482
    3. '(q' → logprob: -9.918051719665527
    4. ' (' → logprob: -13.668051719665527
    5. '	q' → logprob: -14.543051719665527
    6. '[q' → logprob: -14.793051719665527
    7. '(' → logprob: -14.793051719665527
    8. ',q' → logprob: -15.668051719665527
    9. '                   ' → logprob: -16.16805076599121
    10. '   ' → logprob: -16.54305076599121

Token 689: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003373694489710033
    2. ' )' → logprob: -8.125337600708008
    3. '<|end|>' → logprob: -10.500337600708008
    4. ')
' → logprob: -11.375337600708008
    5. '<|end|>' → logprob: -15.000337600708008
    6. ')return' → logprob: -15.125337600708008
    7. '   ' → logprob: -15.375337600708008
    8. '       ' → logprob: -15.750337600708008
    9. ')}}' → logprob: -15.875337600708008
    10. ')}' → logprob: -15.875337600708008

Token 690: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 691: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 692: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4203132092952728
    2. ':' → logprob: -1.7953132390975952
    3. ':
' → logprob: -1.9203132390975952
    4. ' :
' → logprob: -4.420313358306885
    5. ' :' → logprob: -5.170313358306885
    6. '               ' → logprob: -5.170313358306885
    7. '                    
' → logprob: -6.795313358306885
    8. '   ' → logprob: -7.045313358306885
    9. ' adj' → logprob: -7.295313358306885
    10. ' p' → logprob: -7.545313358306885

Token 693: '                   ' (ID: 699)
  Prédit: ' adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.04157308116555214
    2. '                   ' → logprob: -3.9165730476379395
    3. 'adj' → logprob: -3.9165730476379395
    4. ' None' → logprob: -8.291573524475098
    5. 'None' → logprob: -8.791573524475098
    6. '               ' → logprob: -8.791573524475098
    7. ' p' → logprob: -8.916573524475098
    8. ' continue' → logprob: -9.916573524475098
    9. '   ' → logprob: -10.041573524475098
    10. '                    
' → logprob: -10.791573524475098

Token 694: ' adj' (ID: 20251)
  Prédit: ' adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.20287762582302094
    2. 'adj' (adapté à ' adj') → logprob: -1.7028776407241821
    3. '                   ' → logprob: -7.452877521514893
    4. ' p' → logprob: -8.07787799835205
    5. ' continue' → logprob: -8.57787799835205
    6. '   ' → logprob: -9.32787799835205
    7. 'p' → logprob: -9.32787799835205
    8. 'continue' → logprob: -9.82787799835205
    9. ' ' → logprob: -10.82787799835205
    10. 'None' → logprob: -11.20287799835205

Token 695: '[q' (ID: 99278)
  Prédit: '[q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[q' → logprob: -0.0014036830980330706
    2. '[p' → logprob: -6.62640380859375
    3. 'q' → logprob: -10.12640380859375
    4. '[' → logprob: -11.00140380859375
    5. 'p' → logprob: -13.00140380859375
    6. 'adj' → logprob: -13.00140380859375
    7. '=q' → logprob: -13.25140380859375
    8. 's' → logprob: -13.37640380859375
    9. ' =' → logprob: -13.50140380859375
    10. '.setdefault' → logprob: -13.87640380859375

Token 696: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.07851526886224747
    2. '.append' → logprob: -2.8285152912139893
    3. ').' → logprob: -4.82851505279541
    4. '[p' → logprob: -5.32851505279541
    5. '.' → logprob: -6.45351505279541
    6. '[q' → logprob: -6.70351505279541
    7. '[' → logprob: -8.07851505279541
    8. '][' → logprob: -8.95351505279541
    9. ' ].' → logprob: -9.95351505279541
    10. '}.' → logprob: -9.95351505279541

Token 697: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -7.896309739408025e-07
    2. '.append' → logprob: -14.625000953674316
    3. ' append' → logprob: -15.250000953674316
    4. 'appen' → logprob: -17.375
    5. '	append' → logprob: -17.375
    6. 'add' → logprob: -18.5
    7. 'app' → logprob: -18.625
    8. 'Append' → logprob: -19.75
    9. '_append' → logprob: -20.375
    10. 'appe' → logprob: -21.0

Token 698: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.04858873412013054
    2. 'p' → logprob: -3.048588752746582
    3. '(' → logprob: -13.923588752746582
    4. '[p' → logprob: -16.048587799072266
    5. ' p' → logprob: -16.548587799072266
    6. 'def' → logprob: -16.798587799072266
    7. '	p' → logprob: -17.298587799072266
    8. '<p' → logprob: -18.173587799072266
    9. ')' → logprob: -18.423587799072266
    10. 's' → logprob: -18.548587799072266

Token 699: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.68153518543113e-05
    2. '<|end|>' → logprob: -10.875057220458984
    3. ')
' → logprob: -11.000057220458984
    4. ' )' → logprob: -11.125057220458984
    5. '[' → logprob: -13.625057220458984
    6. '   ' → logprob: -13.750057220458984
    7. '(p' → logprob: -14.625057220458984
    8. ' ' → logprob: -14.750057220458984
    9. ')p' → logprob: -14.750057220458984
    10. '(' → logprob: -15.000057220458984

Token 700: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2719791829586029
    2. '<|end|>' → logprob: -1.8969792127609253
    3. 'return' → logprob: -3.2719790935516357
    4. '	return' → logprob: -3.8969790935516357
    5. '    
' → logprob: -4.771979331970215
    6. '<|end|>' → logprob: -5.021979331970215
    7. ' return' → logprob: -5.771979331970215
    8. '```' → logprob: -6.396979331970215
    9. 'def' → logprob: -6.396979331970215
    10. '       ' → logprob: -6.646979331970215

Token 701: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6075077056884766
    2. '   ' → logprob: -0.8575077056884766
    3. '
' → logprob: -4.107507705688477
    4. '    
' → logprob: -4.607507705688477
    5. ' def' → logprob: -6.107507705688477
    6. 'for' → logprob: -8.107507705688477
    7. '  
' → logprob: -8.357507705688477
    8. '```' → logprob: -8.482507705688477
    9. ' 
' → logprob: -8.607507705688477
    10. ' ' → logprob: -8.732507705688477

Token 702: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19793865084648132
    2. 'match' → logprob: -2.4479386806488037
    3. '   ' → logprob: -3.6979386806488037
    4. 'matching' → logprob: -3.9479386806488037
    5. 'matched' → logprob: -3.9479386806488037
    6. 'matches' → logprob: -4.072938442230225
    7. 'visited' → logprob: -5.947938442230225
    8. 'from' → logprob: -6.322938442230225
    9. 'pairs' → logprob: -6.447938442230225
    10. 'stack' → logprob: -6.822938442230225

Token 703: ' Trou' (ID: 58947)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32437247037887573
    2. 'match' → logprob: -2.3243725299835205
    3. 'matching' → logprob: -2.5743725299835205
    4. 'matched' → logprob: -2.6993725299835205
    5. 'visited' → logprob: -3.9493725299835205
    6. 'used' → logprob: -5.074372291564941
    7. 'matches' → logprob: -5.199372291564941
    8. '#' → logprob: -6.949372291564941
    9. 'pairs' → logprob: -7.199372291564941
    10. '   ' → logprob: -7.324372291564941

Token 704: 'ver' (ID: 445)
  Prédit: 'te'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.6243442893028259
    2. 'ver' → logprob: -0.9993442893028259
    3. 've' → logprob: -2.8743443489074707
    4. 'ter' → logprob: -3.4993443489074707
    5. 't' → logprob: -5.124344348907471
    6. 'cher' → logprob: -6.624344348907471
    7. 'v' → logprob: -6.874344348907471
    8. 'tes' → logprob: -7.624344348907471
    9. 'ner' → logprob: -8.749343872070312
    10. 'vez' → logprob: -8.874343872070312

Token 705: ' toutes' (ID: 17502)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.7795131206512451
    2. 'un' → logprob: -1.5295131206512451
    3. 'def' → logprob: -2.279513120651245
    4. 'une' → logprob: -2.529513120651245
    5. ' match' → logprob: -3.404513120651245
    6. 'match' → logprob: -3.404513120651245
    7. ' une' → logprob: -3.904513120651245
    8. 'all' → logprob: -4.529513359069824
    9. 'les' → logprob: -4.904513359069824
    10. ' des' → logprob: -5.154513359069824

Token 706: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.8237122297286987
    2. 'les' → logprob: -1.6987122297286987
    3. ' p' → logprob: -2.4487123489379883
    4. ' match' → logprob: -2.8237123489379883
    5. ' un' → logprob: -3.1987123489379883
    6. 'match' → logprob: -3.5737123489379883
    7. ' perfect' → logprob: -4.198712348937988
    8. 'p' → logprob: -4.573712348937988
    9. ' des' → logprob: -4.573712348937988
    10. '_match' → logprob: -4.573712348937988

Token 707: ' app' (ID: 1053)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.8125489354133606
    2. 'app' → logprob: -2.062548875808716
    3. ' match' → logprob: -2.187548875808716
    4. 'p' → logprob: -2.437548875808716
    5. 'perfect' → logprob: -2.437548875808716
    6. ' p' → logprob: -2.937548875808716
    7. 'pair' → logprob: -3.562548875808716
    8. ' perfect' → logprob: -4.562549114227295
    9. 'pairs' → logprob: -4.937549114227295
    10. 'matching' → logprob: -5.437549114227295

Token 708: 'ari' (ID: 1683)
  Prédit: 'ari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ari' → logprob: -0.09769996255636215
    2. 'ar' → logprob: -3.2226998805999756
    3. 'a' → logprob: -4.722700119018555
    4. 'air' → logprob: -5.222700119018555
    5. '\' → logprob: -5.535200119018555
    6. 'r' → logprob: -5.785200119018555
    7. '_' → logprob: -6.160200119018555
    8. 'ai' → logprob: -6.347700119018555
    9. '[' → logprob: -6.535200119018555
    10. '{' → logprob: -6.722700119018555

Token 709: 'ements' (ID: 4507)
  Prédit: 'ements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ements' → logprob: -0.01121499203145504
    2. 'e' → logprob: -5.1362152099609375
    3. 'ement' → logprob: -5.8862152099609375
    4. 'em' → logprob: -7.0112152099609375
    5. 'ments' → logprob: -8.011215209960938
    6. 'gements' → logprob: -8.761215209960938
    7. 'EMENTS' → logprob: -8.886215209960938
    8. '#' → logprob: -8.886215209960938
    9. 'emen' → logprob: -9.261215209960938
    10. 'nements' → logprob: -9.511215209960938

Token 710: ' parfait' (ID: 39268)
  Prédit: 'perfect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perfect' → logprob: -0.7111056447029114
    2. ' parfait' → logprob: -1.0861055850982666
    3. ' possibles' → logprob: -2.4611055850982666
    4. 'par' → logprob: -2.9611055850982666
    5. 'possible' → logprob: -5.086105823516846
    6. 'def' → logprob: -5.336105823516846
    7. '_par' → logprob: -5.836105823516846
    8. '   ' → logprob: -5.961105823516846
    9. ' possible' → logprob: -6.086105823516846
    10. ' par' → logprob: -6.086105823516846

Token 711: 's' (ID: 82)
  Prédit: 'ents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.3076886832714081
    2. 's' → logprob: -1.8076887130737305
    3. 'nts' → logprob: -2.6826887130737305
    4. 'ments' → logprob: -3.8076887130737305
    5. 'ts' → logprob: -5.1826887130737305
    6. 'ent' → logprob: -5.6826887130737305
    7. 'n' → logprob: -7.8076887130737305
    8. 'ements' → logprob: -8.68268871307373
    9. 'ns' → logprob: -9.43268871307373
    10. '```' → logprob: -9.55768871307373

Token 712: ' dans' (ID: 2671)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7718351483345032
    2. ' def' → logprob: -1.6468350887298584
    3. '   ' → logprob: -2.5218350887298584
    4. '<|end|>' → logprob: -2.5218350887298584
    5. '<|end|>' → logprob: -2.8968350887298584
    6. '
' → logprob: -4.0218353271484375
    7. ':' → logprob: -4.1468353271484375
    8. ',' → logprob: -4.1468353271484375
    9. ' 
' → logprob: -4.3968353271484375
    10. '  
' → logprob: -4.3968353271484375

Token 713: ' ce' (ID: 2357)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.07364369928836823
    2. ' adj' → logprob: -3.073643684387207
    3. 'le' → logprob: -4.448643684387207
    4. ' le' → logprob: -5.198643684387207
    5. 'l' → logprob: -6.323643684387207
    6. 'pos' → logprob: -6.698643684387207
    7. ' ce' → logprob: -6.948643684387207
    8. 'the' → logprob: -7.323643684387207
    9. 'la' → logprob: -7.698643684387207
    10. '(adj' → logprob: -7.823643684387207

Token 714: ' petit' (ID: 20577)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.5587692260742188
    2. ' graph' → logprob: -0.9337692260742188
    3. ' grap' → logprob: -3.9337692260742188
    4. 'adj' → logprob: -4.808769226074219
    5. ' adj' → logprob: -5.683769226074219
    6. 'gr' → logprob: -6.183769226074219
    7. '_graph' → logprob: -7.308769226074219
    8. ' code' → logprob: -7.433769226074219
    9. 'def' → logprob: -8.808769226074219
    10. 'code' → logprob: -9.183769226074219

Token 715: ' grap' (ID: 60955)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.5405948162078857
    2. ' graph' → logprob: -1.0405948162078857
    3. 'gr' → logprob: -3.4155948162078857
    4. ' grap' → logprob: -3.6655948162078857
    5. '_graph' → logprob: -6.665595054626465
    6. 'g' → logprob: -7.040595054626465
    7. '```' → logprob: -7.415595054626465
    8. '   ' → logprob: -7.665595054626465
    9. 'adj' → logprob: -7.790595054626465
    10. ' adj' → logprob: -7.915595054626465

Token 716: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.24720561504364014
    2. 'aphe' → logprob: -1.6222056150436401
    3. 'phe' → logprob: -4.24720573425293
    4. 'h' → logprob: -4.99720573425293
    5. 'ph' → logprob: -8.99720573425293
    6. 'heme' → logprob: -9.62220573425293
    7. '#' → logprob: -10.49720573425293
    8. 'p' → logprob: -10.74720573425293
    9. 'rap' → logprob: -10.87220573425293
    10. 'hep' → logprob: -10.99720573425293

Token 717: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5466040968894958
    2. '<|end|>' → logprob: -2.0466041564941406
    3. 'def' → logprob: -2.1716041564941406
    4. '
' → logprob: -2.9216041564941406
    5. '    
' → logprob: -3.0466041564941406
    6. '<|end|>' → logprob: -3.2966041564941406
    7. ':' → logprob: -4.421604156494141
    8. ' def' → logprob: -4.421604156494141
    9. ',' → logprob: -5.671604156494141
    10. '  
' → logprob: -6.171604156494141

Token 718: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008478525094687939
    2. '    
' → logprob: -5.50847864151001
    3. '<|end|>' → logprob: -6.63347864151001
    4. ':' → logprob: -7.25847864151001
    5. '
' → logprob: -7.38347864151001
    6. 'def' → logprob: -7.50847864151001
    7. '<|end|>' → logprob: -8.383478164672852
    8. '[' → logprob: -8.508478164672852
    9. ',' → logprob: -8.883478164672852
    10. '.' → logprob: -9.508478164672852

Token 719: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9111732840538025
    2. 'match' → logprob: -1.0361733436584473
    3. '   ' → logprob: -2.2861733436584473
    4. 'if' → logprob: -3.2861733436584473
    5. 'matches' → logprob: -3.2861733436584473
    6. ' match' → logprob: -3.4111733436584473
    7. ' if' → logprob: -4.911173343658447
    8. ' matches' → logprob: -5.036173343658447
    9. ' def' → logprob: -5.161173343658447
    10. 'from' → logprob: -5.536173343658447

Token 720: ' méthode' (ID: 71490)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7428160905838013
    2. 'def' → logprob: -1.1178160905838013
    3. 'matches' → logprob: -3.2428159713745117
    4. 'if' → logprob: -3.3678159713745117
    5. ' if' → logprob: -3.4928159713745117
    6. 'match' → logprob: -3.7428159713745117
    7. 'matched' → logprob: -4.117815971374512
    8. 'from' → logprob: -4.492815971374512
    9. 'pairs' → logprob: -4.492815971374512
    10. ' def' → logprob: -4.742815971374512

Token 721: ' classique' (ID: 76895)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14575709402561188
    2. ' =' → logprob: -2.8957571983337402
    3. ' def' → logprob: -3.6457571983337402
    4. ':' → logprob: -4.14575719833374
    5. '=' → logprob: -4.14575719833374
    6. '   ' → logprob: -5.02075719833374
    7. ' dfs' → logprob: -5.27075719833374
    8. 'dfs' → logprob: -6.02075719833374
    9. 'from' → logprob: -6.14575719833374
    10. 'import' → logprob: -6.52075719833374

Token 722: ' back' (ID: 1602)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3996172845363617
    2. ':' → logprob: -1.524617314338684
    3. ' :' → logprob: -2.7746171951293945
    4. ' def' → logprob: -3.3996171951293945
    5. '.' → logprob: -5.5246171951293945
    6. ' de' → logprob: -6.3996171951293945
    7. 'import' → logprob: -6.6496171951293945
    8. ',' → logprob: -6.7746171951293945
    9. ':
' → logprob: -6.8996171951293945
    10. ':def' → logprob: -6.8996171951293945

Token 723: 'tracking' (ID: 83383)
  Prédit: 'tracking'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tracking' → logprob: -0.06319886445999146
    2. 'track' → logprob: -2.8131988048553467
    3. 'tracker' → logprob: -7.563199043273926
    4. 'tract' → logprob: -8.063199043273926
    5. 'tr' → logprob: -8.938199043273926
    6. 't' → logprob: -9.313199043273926
    7. '_tracking' → logprob: -9.563199043273926
    8. 'trace' → logprob: -10.188199043273926
    9. '_track' → logprob: -11.188199043273926
    10. 'tracked' → logprob: -11.188199043273926

Token 724: ' car' (ID: 1669)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9310457706451416
    2. ':' → logprob: -1.1810457706451416
    3. '<|end|>' → logprob: -1.6810457706451416
    4. '<|end|>' → logprob: -2.9310457706451416
    5. 'def' → logprob: -3.5560457706451416
    6. '
' → logprob: -4.0560455322265625
    7. '    
' → logprob: -5.3060455322265625
    8. '.' → logprob: -6.4310455322265625
    9. '  
' → logprob: -6.6810455322265625
    10. ',' → logprob: -7.0560455322265625

Token 725: ' juste' (ID: 31553)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5033285021781921
    2. 'n' → logprob: -1.253328561782837
    3. ' le' → logprob: -2.878328561782837
    4. ' la' → logprob: -3.878328561782837
    5. 'le' → logprob: -4.003328323364258
    6. ' les' → logprob: -5.503328323364258
    7. 'la' → logprob: -6.378328323364258
    8. ' taille' → logprob: -6.753328323364258
    9. ' c' → logprob: -6.878328323364258
    10. ' petite' → logprob: -7.378328323364258

Token 726: ' ' (ID: 220)
  Prédit: '16'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -1.090681552886963
    2. '4' → logprob: -1.215681552886963
    3. 'n' → logprob: -2.840681552886963
    4. 'de' → logprob: -3.090681552886963
    5. ' ' → logprob: -3.590681552886963
    6. '8' → logprob: -3.715681552886963
    7. '   ' → logprob: -3.715681552886963
    8. 'un' → logprob: -4.215681552886963
    9. '14' → logprob: -4.215681552886963
    10. 'au' → logprob: -4.715681552886963

Token 727: '16' (ID: 1125)
  Prédit: '16'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -0.02581864595413208
    2. '4' → logprob: -4.525818824768066
    3. '8' → logprob: -4.900818824768066
    4. 'n' → logprob: -5.650818824768066
    5. 'une' → logprob: -7.525818824768066
    6. 'max' → logprob: -7.650818824768066
    7. 'un' → logprob: -8.275818824768066
    8. 'pet' → logprob: -8.275818824768066
    9. ' ' → logprob: -8.525818824768066
    10. 'quel' → logprob: -8.650818824768066

Token 728: ' somm' (ID: 44830)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 729: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.003233440453186631
    2. 'et' → logprob: -5.753233432769775
    3. 'ètres' → logprob: -11.003233909606934
    4. 'etes' → logprob: -11.128233909606934
    5. 'ètes' → logprob: -11.128233909606934
    6. 'es' → logprob: -12.378233909606934
    7. 'ettes' → logprob: -13.878233909606934
    8. 'è' → logprob: -14.503233909606934
    9. 'ет' → logprob: -14.503233909606934
    10. 'ats' → logprob: -14.628233909606934

Token 730: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21621687710285187
    2. ':' → logprob: -1.8412169218063354
    3. ',' → logprob: -4.841217041015625
    4. '    
' → logprob: -5.091217041015625
    5. '<|end|>' → logprob: -5.466217041015625
    6. '.' → logprob: -5.591217041015625
    7. '
' → logprob: -5.716217041015625
    8. 'def' → logprob: -5.966217041015625
    9. '<|end|>' → logprob: -6.091217041015625
    10. '  
' → logprob: -6.091217041015625

Token 731: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08293266594409943
    2. 'def' → logprob: -2.957932710647583
    3. '
' → logprob: -3.957932710647583
    4. '    
' → logprob: -5.332932472229004
    5. '```' → logprob: -7.457932472229004
    6. 'pairs' → logprob: -7.457932472229004
    7. ' used' → logprob: -7.582932472229004
    8. 'matches' → logprob: -7.707932472229004
    9. ' def' → logprob: -7.957932472229004
    10. ' if' → logprob: -8.332932472229004

Token 732: ' used' (ID: 2061)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0319829098880291
    2. '   ' → logprob: -4.406982898712158
    3. ' def' → logprob: -4.531982898712158
    4. '
' → logprob: -5.656982898712158
    5. '    
' → logprob: -5.906982898712158
    6. '```' → logprob: -8.031983375549316
    7. ' matches' → logprob: -8.156983375549316
    8. 'matches' → logprob: -8.281983375549316
    9. ' used' → logprob: -8.281983375549316
    10. ' matched' → logprob: -8.406983375549316

Token 733: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1129002496600151
    2. '=' → logprob: -2.2379002571105957
    3. '=set' → logprob: -9.737899780273438
    4. ')' → logprob: -12.112899780273438
    5. '   ' → logprob: -12.237899780273438
    6. ' ' → logprob: -12.987899780273438
    7. '  ' → logprob: -13.362899780273438
    8. ']' → logprob: -13.987899780273438
    9. '=[]' → logprob: -14.362899780273438
    10. ',' → logprob: -14.862899780273438

Token 734: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.005284865386784077
    2. ' set' → logprob: -5.255284786224365
    3. '{}' → logprob: -10.255285263061523
    4. '{' → logprob: -11.130285263061523
    5. '[' → logprob: -14.380285263061523
    6. '	set' → logprob: -14.880285263061523
    7. '=set' → logprob: -15.505285263061523
    8. '(set' → logprob: -16.130285263061523
    9. ')set' → logprob: -18.755285263061523
    10. ' {}' → logprob: -18.880285263061523

Token 735: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16246962547302246
    2. '   ' → logprob: -2.9124696254730225
    3. '<|end|>' → logprob: -3.2874696254730225
    4. '<|end|>' → logprob: -3.5374696254730225
    5. '()
' → logprob: -4.537469863891602
    6. 'def' → logprob: -5.037469863891602
    7. ')' → logprob: -5.412469863891602
    8. ',' → logprob: -6.162469863891602
    9. ' ' → logprob: -6.287469863891602
    10. '(' → logprob: -6.787469863891602

Token 736: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6447592973709106
    2. '   ' → logprob: -0.7697592973709106
    3. '    
' → logprob: -6.019759178161621
    4. 'pairs' → logprob: -6.019759178161621
    5. ' def' → logprob: -6.144759178161621
    6. 'matches' → logprob: -6.644759178161621
    7. ' matches' → logprob: -7.019759178161621
    8. ' pairs' → logprob: -7.144759178161621
    9. '
' → logprob: -7.394759178161621
    10. 'result' → logprob: -8.019759178161621

Token 737: ' pairs' (ID: 24702)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01053836289793253
    2. ' def' → logprob: -6.010538578033447
    3. 'res' → logprob: -6.135538578033447
    4. 'result' → logprob: -6.135538578033447
    5. '   ' → logprob: -7.010538578033447
    6. 'match' → logprob: -7.135538578033447
    7. 'matches' → logprob: -7.260538578033447
    8. 'pairs' (adapté à ' pairs') → logprob: -8.510538101196289
    9. 'if' → logprob: -8.635538101196289
    10. ' matches' → logprob: -8.635538101196289

Token 738: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18112339079380035
    2. '=' → logprob: -1.8061233758926392
    3. ',' → logprob: -6.93112325668335
    4. '   ' → logprob: -9.056123733520508
    5. ')' → logprob: -9.556123733520508
    6. '=[]' → logprob: -10.056123733520508
    7. ':' → logprob: -10.181123733520508
    8. '<|end|>' → logprob: -10.431123733520508
    9. '  ' → logprob: -11.056123733520508
    10. '<|end|>' → logprob: -11.306123733520508

Token 739: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00018196819291915745
    2. '[]
' → logprob: -8.750182151794434
    3. '[]

' → logprob: -11.125182151794434
    4. ' []' → logprob: -12.250182151794434
    5. '[]}' → logprob: -13.750182151794434
    6. 'def' → logprob: -14.375182151794434
    7. '=[]' → logprob: -14.375182151794434
    8. '[' → logprob: -14.500182151794434
    9. '   ' → logprob: -14.750182151794434
    10. '[]>' → logprob: -15.000182151794434

Token 740: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6368212699890137
    2. '
' → logprob: -1.0118212699890137
    3. '    
' → logprob: -2.8868212699890137
    4. 'def' → logprob: -3.0118212699890137
    5. '<|end|>' → logprob: -6.636821269989014
    6. '	
' → logprob: -8.261821746826172
    7. '<|end|>' → logprob: -8.261821746826172
    8. ' def' → logprob: -8.636821746826172
    9. ' 
' → logprob: -8.761821746826172
    10. '  
' → logprob: -9.136821746826172

Token 741: ' results' (ID: 4376)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36937642097473145
    2. 'def' → logprob: -1.3693764209747314
    3. '    
' → logprob: -3.4943764209747314
    4. '   ' → logprob: -3.9943764209747314
    5. ' def' → logprob: -5.369376182556152
    6. '```' → logprob: -7.994376182556152
    7. ' 
' → logprob: -8.369376182556152
    8. '  
' → logprob: -8.494376182556152
    9. '   
' → logprob: -9.619376182556152
    10. '<|end|>' → logprob: -9.744376182556152

Token 742: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006149665918201208
    2. '=' → logprob: -5.131149768829346
    3. '=[]' → logprob: -9.506149291992188
    4. '   ' → logprob: -10.006149291992188
    5. ':' → logprob: -10.756149291992188
    6. ',' → logprob: -10.756149291992188
    7. 'def' → logprob: -10.881149291992188
    8. ' ' → logprob: -10.881149291992188
    9. '  ' → logprob: -11.631149291992188
    10. ')' → logprob: -13.381149291992188

Token 743: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0011450991732999682
    2. ' []' → logprob: -6.876144886016846
    3. '[]
' → logprob: -9.751145362854004
    4. '[]

' → logprob: -10.376145362854004
    5. 'set' → logprob: -11.001145362854004
    6. '[' → logprob: -12.376145362854004
    7. '[]}' → logprob: -14.876145362854004
    8. ' set' → logprob: -15.001145362854004
    9. ' []

' → logprob: -15.126145362854004
    10. '   ' → logprob: -15.126145362854004

Token 744: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2701026499271393
    2. 'def' → logprob: -2.1451027393341064
    3. '   ' → logprob: -2.6451027393341064
    4. '    
' → logprob: -3.1451027393341064
    5. '	
' → logprob: -6.145102500915527
    6. ' def' → logprob: -6.270102500915527
    7. ' 
' → logprob: -7.895102500915527
    8. '  
' → logprob: -8.020102500915527
    9. '	def' → logprob: -8.145102500915527
    10. '
' → logprob: -8.895102500915527

Token 745: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.051283303648233414
    2. '
' → logprob: -4.051283359527588
    3. '   ' → logprob: -4.176283359527588
    4. ' def' → logprob: -4.426283359527588
    5. '    
' → logprob: -5.301283359527588
    6. '	def' → logprob: -9.30128288269043
    7. ' 
' → logprob: -9.67628288269043
    8. '	
' → logprob: -9.92628288269043
    9. '  
' → logprob: -10.05128288269043
    10. '```' → logprob: -10.92628288269043

Token 746: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0002390594017924741
    2. '
' → logprob: -9.125239372253418
    3. ' def' → logprob: -9.750239372253418
    4. '   ' → logprob: -10.125239372253418
    5. 'if' → logprob: -10.375239372253418
    6. '	def' → logprob: -15.000239372253418
    7. '    
' → logprob: -15.625239372253418
    8. '```' → logprob: -16.7502384185791
    9. 'de' → logprob: -17.3752384185791
    10. ' if' → logprob: -17.8752384185791

Token 747: ' back' (ID: 1602)
  Prédit: ' back'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' back' → logprob: -0.020138075575232506
    2. 'back' → logprob: -4.020138263702393
    3. ' search' → logprob: -7.645138263702393
    4. 'search' → logprob: -7.645138263702393
    5. 'dfs' → logprob: -7.645138263702393
    6. ' dfs' → logprob: -7.770138263702393
    7. '_back' → logprob: -9.895137786865234
    8. ' find' → logprob: -10.520137786865234
    9. ' match' → logprob: -10.770137786865234
    10. 'match' → logprob: -11.020137786865234

Token 748: 'track' (ID: 22792)
  Prédit: 'track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -0.050884123891592026
    2. 'tracking' → logprob: -3.0508840084075928
    3. '_track' → logprob: -7.175884246826172
    4. 't' → logprob: -7.300884246826172
    5. 'tract' → logprob: -8.175884246826172
    6. 'tr' → logprob: -8.300884246826172
    7. '_' → logprob: -9.175884246826172
    8. '_tracking' → logprob: -9.675884246826172
    9. 'trace' → logprob: -10.175884246826172
    10. 'tracker' → logprob: -10.550884246826172

Token 749: '():
' (ID: 8595)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.3568863272666931
    2. '(' → logprob: -1.356886386871338
    3. '(u' → logprob: -3.981886386871338
    4. '():' → logprob: -5.106886386871338
    5. '(p' → logprob: -5.231886386871338
    6. '(idx' → logprob: -5.856886386871338
    7. '(node' → logprob: -6.356886386871338
    8. '(current' → logprob: -6.356886386871338
    9. '(position' → logprob: -6.731886386871338
    10. '(start' → logprob: -6.856886386871338

Token 750: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.050782494246959686
    2. '   ' → logprob: -3.1757824420928955
    3. '    
' → logprob: -6.050782680511475
    4. '    ' → logprob: -6.675782680511475
    5. '
' → logprob: -6.925782680511475
    6. ' if' → logprob: -7.300782680511475
    7. '<|end|>' → logprob: -7.300782680511475
    8. ' 
' → logprob: -7.425782680511475
    9. '        
' → logprob: -8.175782203674316
    10. '	   ' → logprob: -8.425782203674316

Token 751: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6774423122406006
    2. '       ' → logprob: -1.1774423122406006
    3. ' for' → logprob: -2.9274423122406006
    4. '   ' → logprob: -3.0524423122406006
    5. 'if' (adapté à ' if') → logprob: -3.5524423122406006
    6. 'pos' → logprob: -3.9274423122406006
    7. ' 
' → logprob: -5.05244255065918
    8. ' pos' → logprob: -5.42744255065918
    9. '    
' → logprob: -5.67744255065918
    10. '        
' → logprob: -5.67744255065918

Token 752: ' len' (ID: 4631)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6458680629730225
    2. ' len' → logprob: -1.1458680629730225
    3. 'len' → logprob: -2.0208680629730225
    4. 'not' → logprob: -3.7708680629730225
    5. ' ' → logprob: -6.145868301391602
    6. ' used' → logprob: -10.145868301391602
    7. '  ' → logprob: -10.270868301391602
    8. '(len' → logprob: -10.520868301391602
    9. '   ' → logprob: -11.645868301391602
    10. 'used' → logprob: -11.770868301391602

Token 753: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009157383814454079
    2. '(p' → logprob: -4.884157180786133
    3. 'used' → logprob: -6.509157180786133
    4. ' (' → logprob: -10.259157180786133
    5. 'pairs' → logprob: -11.509157180786133
    6. ' used' → logprob: -12.259157180786133
    7. '(use' → logprob: -13.259157180786133
    8. '(results' → logprob: -13.259157180786133
    9. 'p' → logprob: -13.884157180786133
    10. ' ' → logprob: -14.509157180786133

Token 754: 'used' (ID: 4943)
  Prédit: 'used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.011192237958312035
    2. 'pairs' → logprob: -4.511192321777344
    3. '(' → logprob: -9.511192321777344
    4. 'results' → logprob: -10.261192321777344
    5. ' used' → logprob: -10.761192321777344
    6. 'positions' → logprob: -12.761192321777344
    7. 'p' → logprob: -13.136192321777344
    8. '(p' → logprob: -13.136192321777344
    9. 'pos' → logprob: -13.386192321777344
    10. '(results' → logprob: -14.386192321777344

Token 755: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16082140803337097
    2. '==' → logprob: -2.5358214378356934
    3. ')==' → logprob: -3.0358214378356934
    4. ' ==' → logprob: -4.035821437835693
    5. '()' → logprob: -6.035821437835693
    6. '()==' → logprob: -6.910821437835693
    7. ' )' → logprob: -9.410820960998535
    8. '   ' → logprob: -10.160820960998535
    9. '())' → logprob: -10.285820960998535
    10. ']==' → logprob: -10.660820960998535

Token 756: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25205713510513306
    2. ' ==' → logprob: -1.5020570755004883
    3. '()==' → logprob: -9.377057075500488
    4. '=' → logprob: -11.002057075500488
    5. ')==' → logprob: -12.002057075500488
    6. ' ' → logprob: -12.252057075500488
    7. '()' → logprob: -12.377057075500488
    8. '==
' → logprob: -12.377057075500488
    9. ')' → logprob: -13.502057075500488
    10. '>=' → logprob: -13.627057075500488

Token 757: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11313343048095703
    2. 'len' → logprob: -2.238133430480957
    3. '16' → logprob: -8.238133430480957
    4. ' n' → logprob: -10.363133430480957
    5. ' len' → logprob: -11.988133430480957
    6. '(n' → logprob: -13.613133430480957
    7. '4' → logprob: -13.988133430480957
    8. '(len' → logprob: -13.988133430480957
    9. '	n' → logprob: -14.113133430480957
    10. '8' → logprob: -14.175633430480957

Token 758: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04961814358830452
    2. ':
' → logprob: -3.0496182441711426
    3. '   ' → logprob: -8.174617767333984
    4. '       ' → logprob: -8.174617767333984
    5. ':return' → logprob: -8.174617767333984
    6. ' :' → logprob: -8.924617767333984
    7. ' or' → logprob: -11.549617767333984
    8. ' :
' → logprob: -11.674617767333984
    9. '):' → logprob: -12.049617767333984
    10. '           ' → logprob: -12.299617767333984

Token 759: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4153011739253998
    2. '
' → logprob: -1.7903012037277222
    3. ':' → logprob: -2.1653010845184326
    4. '           ' → logprob: -4.165301322937012
    5. '\n' → logprob: -4.540301322937012
    6. ':
' → logprob: -5.165301322937012
    7. '   ' → logprob: -5.290301322937012
    8. ':return' → logprob: -5.415301322937012
    9. '<|end|>' → logprob: -6.165301322937012
    10. '\' → logprob: -6.165301322937012

Token 760: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00145297113340348
    2. ' results' → logprob: -7.251452922821045
    3. '
' → logprob: -8.251453399658203
    4. 'results' → logprob: -8.501453399658203
    5. '   ' → logprob: -8.751453399658203
    6. '           ' → logprob: -11.001453399658203
    7. ' return' → logprob: -11.126453399658203
    8. ' tokens' → logprob: -11.126453399658203
    9. '        
' → logprob: -11.376453399658203
    10. 'tokens' → logprob: -12.126453399658203

Token 761: ' On' (ID: 2160)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08324994146823883
    2. ' results' → logprob: -2.708250045776367
    3. 'results' → logprob: -4.583250045776367
    4. '           ' → logprob: -6.583250045776367
    5. '
' → logprob: -7.208250045776367
    6. ' return' → logprob: -8.208250045776367
    7. '   ' → logprob: -8.208250045776367
    8. '        
' → logprob: -9.583250045776367
    9. 'return' → logprob: -9.833250045776367
    10. ' result' → logprob: -10.208250045776367

Token 762: ' a' (ID: 261)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.003869785461574793
    2. 'append' → logprob: -6.378870010375977
    3. '           ' → logprob: -7.253870010375977
    4. '   ' → logprob: -8.003870010375977
    5. ' append' → logprob: -8.253870010375977
    6. '       ' → logprob: -8.628870010375977
    7. 'app' → logprob: -8.753870010375977
    8. '_append' → logprob: -9.253870010375977
    9. '.extend' → logprob: -9.503870010375977
    10. 'est' → logprob: -9.628870010375977

Token 763: ' un' (ID: 537)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8797114491462708
    2. 'found' → logprob: -1.629711389541626
    3. ' found' → logprob: -2.504711389541626
    4. ' valid' → logprob: -2.629711389541626
    5. 'results' → logprob: -3.004711389541626
    6. 'valid' → logprob: -3.379711389541626
    7. ' ajouté' → logprob: -3.754711389541626
    8. 'pairs' → logprob: -4.129711627960205
    9. ' trouvé' → logprob: -4.254711627960205
    10. 'return' → logprob: -4.379711627960205

Token 764: ' app' (ID: 1053)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -1.125134825706482
    2. 'canonical' → logprob: -1.125134825706482
    3. 'tuple' → logprob: -2.5001349449157715
    4. ' pattern' → logprob: -3.1251349449157715
    5. 'pair' → logprob: -3.1251349449157715
    6. '   ' → logprob: -3.7501349449157715
    7. 'app' → logprob: -3.7501349449157715
    8. ' canonical' → logprob: -4.0001349449157715
    9. 'result' → logprob: -4.6251349449157715
    10. ' app' → logprob: -4.7501349449157715

Token 765: 'ari' (ID: 1683)
  Prédit: 'ari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ari' → logprob: -0.002504674717783928
    2. 'air' → logprob: -7.002504825592041
    3. 'a' → logprob: -9.127504348754883
    4. '```' → logprob: -9.127504348754883
    5. 'pair' → logprob: -9.252504348754883
    6. 'ai' → logprob: -9.377504348754883
    7. '</' → logprob: -9.377504348754883
    8. '"' → logprob: -9.502504348754883
    9. ')' → logprob: -9.627504348754883
    10. 'ri' → logprob: -9.627504348754883

Token 766: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.0056332009844481945
    2. 'e' → logprob: -6.130633354187012
    3. 'ment' → logprob: -6.755633354187012
    4. 'ed' → logprob: -6.755633354187012
    5. 'em' → logprob: -7.755633354187012
    6. 'emen' → logprob: -8.880633354187012
    7. 'emment' → logprob: -9.630633354187012
    8. '[' → logprob: -10.130633354187012
    9. 'nement' → logprob: -10.130633354187012
    10. '#' → logprob: -10.255633354187012

Token 767: ' parfait' (ID: 39268)
  Prédit: ' parfait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parfait' → logprob: -0.34760141372680664
    2. 'par' → logprob: -2.0976014137268066
    3. ' complet' → logprob: -2.7226014137268066
    4. 'perfect' → logprob: -3.2226014137268066
    5. 'com' → logprob: -3.7226014137268066
    6. '       ' → logprob: -4.472601413726807
    7. '           ' → logprob: -4.472601413726807
    8. '   ' → logprob: -5.222601413726807
    9. '.' → logprob: -6.222601413726807
    10. '
' → logprob: -6.472601413726807

Token 768: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06470592319965363
    2. '       ' → logprob: -2.8147058486938477
    3. '               ' → logprob: -6.564705848693848
    4. ',' → logprob: -8.189705848693848
    5. ':
' → logprob: -8.439705848693848
    6. '.' → logprob: -8.689705848693848
    7. '   ' → logprob: -8.689705848693848
    8. ':' → logprob: -9.564705848693848
    9. '<|end|>' → logprob: -9.564705848693848
    10. 'tokens' → logprob: -9.814705848693848

Token 769: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0047772107645869255
    2. '           ' → logprob: -5.629777431488037
    3. 'results' → logprob: -7.629777431488037
    4. '               ' → logprob: -8.379776954650879
    5. ' results' → logprob: -8.629776954650879
    6. '   ' → logprob: -9.504776954650879
    7. '        
' → logprob: -10.504776954650879
    8. ' return' → logprob: -10.629776954650879
    9. 'result' → logprob: -10.879776954650879
    10. '<|end|>' → logprob: -10.879776954650879

Token 770: ' stock' (ID: 6546)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.12214687466621399
    2. '           ' → logprob: -2.6221468448638916
    3. 'append' → logprob: -3.3721468448638916
    4. 'app' → logprob: -6.122147083282471
    5. 'return' → logprob: -6.622147083282471
    6. 's' → logprob: -6.997147083282471
    7. '       ' → logprob: -7.247147083282471
    8. '   ' → logprob: -7.247147083282471
    9. '.add' → logprob: -8.747146606445312
    10. 'can' → logprob: -8.747146606445312

Token 771: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.004107608459889889
    2. 'er' → logprob: -5.754107475280762
    3. '   ' → logprob: -7.254107475280762
    4. '       ' → logprob: -8.754107475280762
    5. '           ' → logprob: -10.004107475280762
    6. 'é' → logprob: -11.379107475280762
    7. '    ' → logprob: -13.504107475280762
    8. '        ' → logprob: -14.379107475280762
    9. '     ' → logprob: -14.379107475280762
    10. '               ' → logprob: -14.629107475280762

Token 772: ' le' (ID: 505)
  Prédit: 'canonical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'canonical' → logprob: -0.03932242840528488
    2. ' canonical' → logprob: -3.7893223762512207
    3. '   ' → logprob: -4.664322376251221
    4. '(c' → logprob: -5.789322376251221
    5. '(' → logprob: -6.664322376251221
    6. 'c' → logprob: -7.289322376251221
    7. 'tuple' → logprob: -8.164322853088379
    8. '(
' → logprob: -8.164322853088379
    9. '()' → logprob: -8.289322853088379
    10. '           ' → logprob: -8.664322853088379

Token 773: ' pattern' (ID: 8302)
  Prédit: 'canonical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'canonical' → logprob: -0.005790255032479763
    2. ' canonical' → logprob: -5.2557902336120605
    3. 'pattern' → logprob: -8.005790710449219
    4. 'tuple' → logprob: -9.005790710449219
    5. 'result' → logprob: -10.255790710449219
    6. 'pairs' → logprob: -10.880790710449219
    7. 'c' → logprob: -11.630790710449219
    8. ' pattern' → logprob: -11.755790710449219
    9. '[' → logprob: -12.130790710449219
    10. 'results' → logprob: -12.755790710449219

Token 774: ' canon' (ID: 48572)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22856439650058746
    2. '           ' → logprob: -1.6035643815994263
    3. '   ' → logprob: -6.728564262390137
    4. ',' → logprob: -7.728564262390137
    5. '        
' → logprob: -8.478564262390137
    6. '<|end|>' → logprob: -8.603564262390137
    7. '.' → logprob: -8.728564262390137
    8. '    
' → logprob: -8.853564262390137
    9. '<|end|>' → logprob: -9.228564262390137
    10. '               ' → logprob: -9.228564262390137

Token 775: 'ique' (ID: 2222)
  Prédit: 'ique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.01170819066464901
    2. 'ical' → logprob: -4.5117082595825195
    3. '   ' → logprob: -7.8867082595825195
    4. '       ' → logprob: -8.51170825958252
    5. 'nique' → logprob: -10.13670825958252
    6. 'icale' → logprob: -10.51170825958252
    7. 'iques' → logprob: -12.51170825958252
    8. 'ic' → logprob: -13.01170825958252
    9. '```' → logprob: -13.13670825958252
    10. '     ' → logprob: -13.51170825958252

Token 776: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01128583773970604
    2. '           ' → logprob: -5.136285781860352
    3. '   ' → logprob: -6.136285781860352
    4. ',' → logprob: -7.636285781860352
    5. '()
' → logprob: -7.636285781860352
    6. '(' → logprob: -8.261285781860352
    7. '()' → logprob: -8.261285781860352
    8. '
' → logprob: -8.386285781860352
    9. ':
' → logprob: -8.636285781860352
    10. '.' → logprob: -8.761285781860352

Token 777: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004659030120819807
    2. '           ' → logprob: -5.754659175872803
    3. '   ' → logprob: -7.754659175872803
    4. '
' → logprob: -8.004658699035645
    5. '\n' → logprob: -9.254658699035645
    6. '<|end|>' → logprob: -9.254658699035645
    7. '        
' → logprob: -9.379658699035645
    8. '[' → logprob: -9.379658699035645
    9. '\' → logprob: -9.629658699035645
    10. '(' → logprob: -9.754658699035645

Token 778: ' patterns' (ID: 18587)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7817625403404236
    2. 'results' → logprob: -0.7817625403404236
    3. '   ' → logprob: -2.7817625999450684
    4. ' results' → logprob: -3.9067625999450684
    5. 'pattern' → logprob: -7.031762599945068
    6. '           ' → logprob: -7.531762599945068
    7. 'result' → logprob: -7.531762599945068
    8. '	results' → logprob: -8.03176212310791
    9. 'patterns' (adapté à ' patterns') → logprob: -8.28176212310791
    10. 'non' → logprob: -9.90676212310791

Token 779: '_pairs' (ID: 90005)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6748369336128235
    2. '.append' → logprob: -0.9248369336128235
    3. '=' → logprob: -2.4248368740081787
    4. '_c' → logprob: -6.549837112426758
    5. 'e' → logprob: -6.674837112426758
    6. 's' → logprob: -7.924837112426758
    7. '.' → logprob: -8.049837112426758
    8. '=_' → logprob: -8.299837112426758
    9. '   ' → logprob: -8.424837112426758
    10. '_append' → logprob: -8.424837112426758

Token 780: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008868054486811161
    2. '.extend' → logprob: -5.508868217468262
    3. '=' → logprob: -5.883868217468262
    4. ' =' → logprob: -6.383868217468262
    5. '.' → logprob: -8.383868217468262
    6. ' .' → logprob: -10.758868217468262
    7. '.clear' → logprob: -11.008868217468262
    8. '=.' → logprob: -11.633868217468262
    9. '().' → logprob: -12.133868217468262
    10. '   ' → logprob: -12.133868217468262

Token 781: ' [(' (ID: 43900)
  Prédit: 'canonical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'canonical' → logprob: -0.22143018245697021
    2. '[' → logprob: -2.4714303016662598
    3. ' canonical' → logprob: -2.5964303016662598
    4. '[c' → logprob: -4.34643030166626
    5. '[(' → logprob: -4.72143030166626
    6. '[p' → logprob: -5.09643030166626
    7. ' [' → logprob: -5.22143030166626
    8. 'pairs' → logprob: -5.59643030166626
    9. ' pairs' → logprob: -7.59643030166626
    10. '[]' → logprob: -7.72143030166626

Token 782: 'position' (ID: 4504)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.19268910586833954
    2. 'position' → logprob: -2.0676891803741455
    3. 'pairs' → logprob: -3.9426891803741455
    4. 'pair' → logprob: -4.692688941955566
    5. 'min' → logprob: -5.317688941955566
    6. 'used' → logprob: -5.442688941955566
    7. 'neighbors' → logprob: -5.817688941955566
    8. 'tuple' → logprob: -6.067688941955566
    9. 'pos' → logprob: -7.192688941955566
    10. ' p' → logprob: -7.442688941955566

Token 783: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.0011481947731226683
    2. 'to' → logprob: -7.626148223876953
    3. '   ' → logprob: -8.626148223876953
    4. ')' → logprob: -9.001148223876953
    5. ',' → logprob: -9.626148223876953
    6. '_used' → logprob: -10.126148223876953
    7. '[' → logprob: -10.251148223876953
    8. '       ' → logprob: -10.751148223876953
    9. '_pairs' → logprob: -10.751148223876953
    10. ' to' → logprob: -10.876148223876953

Token 784: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.6331555843353271
    2. 'index' → logprob: -0.7581555843353271
    3. ' index' → logprob: -9.383155822753906
    4. 'tuple' → logprob: -9.508155822753906
    5. 'pair' → logprob: -9.883155822753906
    6. 'p' → logprob: -10.133155822753906
    7. ')' → logprob: -10.258155822753906
    8. 'idx' → logprob: -10.758155822753906
    9. '(p' → logprob: -10.883155822753906
    10. 'pos' → logprob: -10.883155822753906

Token 785: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.058365076780319214
    2. '(u' → logprob: -3.5583651065826416
    3. '(pair' → logprob: -4.0583648681640625
    4. 'pair' → logprob: -5.8083648681640625
    5. '(a' → logprob: -5.9333648681640625
    6. 'p' → logprob: -6.0583648681640625
    7. '(pos' → logprob: -6.8083648681640625
    8. '(' → logprob: -7.6833648681640625
    9. 'pairs' → logprob: -8.183364868164062
    10. 'used' → logprob: -9.058364868164062

Token 786: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.013595787808299065
    2. '[' → logprob: -4.5135955810546875
    3. ')' → logprob: -6.3885955810546875
    4. '[p' → logprob: -7.8885955810546875
    5. '),
' → logprob: -9.138595581054688
    6. '(p' → logprob: -9.388595581054688
    7. ' ),' → logprob: -9.638595581054688
    8. ')[' → logprob: -10.263595581054688
    9. ',' → logprob: -10.513595581054688
    10. 'p' → logprob: -10.513595581054688

Token 787: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.0003024537581950426
    2. ' position' → logprob: -8.1253023147583
    3. '           ' → logprob: -12.6253023147583
    4. '(position' → logprob: -14.0003023147583
    5. '	position' → logprob: -14.3753023147583
    6. '            ' → logprob: -15.2503023147583
    7. '   ' → logprob: -15.2503023147583
    8. '          ' → logprob: -15.3753023147583
    9. '       ' → logprob: -15.5003023147583
    10. '               ' → logprob: -15.6253023147583

Token 788: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -5.5577775128767826e-06
    2. 'to' → logprob: -12.875005722045898
    3. 'To' → logprob: -13.875005722045898
    4. ')' → logprob: -14.625005722045898
    5. '   ' → logprob: -14.625005722045898
    6. '[' → logprob: -14.625005722045898
    7. ')_' → logprob: -15.375005722045898
    8. ' to' → logprob: -16.0000057220459
    9. 's' → logprob: -17.2500057220459
    10. '.to' → logprob: -17.3750057220459

Token 789: '_index' (ID: 7748)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.3486555218696594
    2. '_index' → logprob: -1.2236554622650146
    3. 'position' → logprob: -9.348655700683594
    4. ' index' → logprob: -9.848655700683594
    5. '_position' → logprob: -11.473655700683594
    6. 'idx' → logprob: -11.598655700683594
    7. 'Index' → logprob: -11.598655700683594
    8. '(index' → logprob: -12.348655700683594
    9. 'indice' → logprob: -12.598655700683594
    10. 'int' → logprob: -12.598655700683594

Token 790: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.04556912183761597
    2. 'q' → logprob: -3.2955691814422607
    3. '(p' → logprob: -5.420568943023682
    4. '(pair' → logprob: -7.045568943023682
    5. '(' → logprob: -7.545568943023682
    6. '(n' → logprob: -7.670568943023682
    7. ' q' → logprob: -7.670568943023682
    8. ' (' → logprob: -9.04556941986084
    9. ')' → logprob: -9.17056941986084
    10. '[q' → logprob: -9.29556941986084

Token 791: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000616293225903064
    2. ')]' → logprob: -7.875616073608398
    3. ' )' → logprob: -9.375616073608398
    4. '))' → logprob: -9.375616073608398
    5. ')
' → logprob: -10.375616073608398
    6. '),' → logprob: -11.625616073608398
    7. '())' → logprob: -11.750616073608398
    8. '   ' → logprob: -11.875616073608398
    9. ')p' → logprob: -12.625616073608398
    10. '       ' → logprob: -13.500616073608398

Token 792: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0349215604364872
    2. ',' → logprob: -4.034921646118164
    3. ' for' → logprob: -4.909921646118164
    4. '           ' → logprob: -6.159921646118164
    5. '),' → logprob: -6.659921646118164
    6. 'for' → logprob: -6.659921646118164
    7. ')]' → logprob: -6.784921646118164
    8. ',)' → logprob: -7.159921646118164
    9. '<|end|>' → logprob: -7.159921646118164
    10. '               ' → logprob: -7.284921646118164

Token 793: ' (' (ID: 350)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.041187163442373276
    2. '(p' → logprob: -3.541187047958374
    3. ' p' → logprob: -4.791187286376953
    4. ' (' → logprob: -6.666187286376953
    5. 'pairs' → logprob: -7.291187286376953
    6. 'pair' → logprob: -7.541187286376953
    7. 'q' → logprob: -8.916187286376953
    8. '(pair' → logprob: -9.291187286376953
    9. ' pairs' → logprob: -9.291187286376953
    10. '(q' → logprob: -9.541187286376953

Token 794: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.001105683040805161
    2. '(p' → logprob: -7.126105785369873
    3. 'pair' → logprob: -8.376105308532715
    4. ' p' → logprob: -10.001105308532715
    5. 'pairs' → logprob: -12.251105308532715
    6. '(pair' → logprob: -12.501105308532715
    7. ')p' → logprob: -13.001105308532715
    8. ' (' → logprob: -13.251105308532715
    9. 'r' → logprob: -13.376105308532715
    10. '	p' → logprob: -13.501105308532715

Token 795: ',q' (ID: 86188)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04952240735292435
    2. ',q' → logprob: -3.0495223999023438
    3. ' ,' → logprob: -7.299522399902344
    4. ',p' → logprob: -8.424522399902344
    5. ',
' → logprob: -11.549522399902344
    6. ',v' → logprob: -12.674522399902344
    7. ',s' → logprob: -12.799522399902344
    8. '‌,' → logprob: -13.049522399902344
    9. ',user' → logprob: -13.049522399902344
    10. '<|end|>' → logprob: -13.174522399902344

Token 796: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010087540140375495
    2. 'in' → logprob: -7.126008987426758
    3. ' in' → logprob: -8.751008987426758
    4. ' )' → logprob: -10.251008987426758
    5. ')
' → logprob: -12.876008987426758
    6. '),' → logprob: -13.126008987426758
    7. ',' → logprob: -14.001008987426758
    8. ',)' → logprob: -14.001008987426758
    9. '
' → logprob: -14.126008987426758
    10. ')]' → logprob: -15.001008987426758

Token 797: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.528677761554718
    2. 'in' → logprob: -1.2786777019500732
    3. ')' → logprob: -2.0286777019500732
    4. ' )' → logprob: -8.153677940368652
    5. '),' → logprob: -8.653677940368652
    6. 's' → logprob: -9.528677940368652
    7. '
' → logprob: -9.903677940368652
    8. ']' → logprob: -11.153677940368652
    9. ' ' → logprob: -11.278677940368652
    10. ')]' → logprob: -11.528677940368652

Token 798: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.0028443410992622375
    2. ' pairs' → logprob: -6.252844333648682
    3. 'adj' → logprob: -7.752844333648682
    4. '[(' → logprob: -8.50284481048584
    5. '[' → logprob: -8.87784481048584
    6. 'results' → logprob: -9.62784481048584
    7. '[p' → logprob: -10.62784481048584
    8. '   ' → logprob: -10.87784481048584
    9. 'pair' → logprob: -12.12784481048584
    10. '[]' → logprob: -13.12784481048584

Token 799: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.017681574448943138
    2. ']
' → logprob: -4.26768159866333
    3. '           ' → logprob: -6.64268159866333
    4. ')]' → logprob: -7.26768159866333
    5. ' ]' → logprob: -7.76768159866333
    6. ' if' → logprob: -8.017681121826172
    7. '       ' → logprob: -8.017681121826172
    8. '   ' → logprob: -8.892681121826172
    9. ')' → logprob: -9.517681121826172
    10. '()]' → logprob: -9.892681121826172

Token 800: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9440667033195496
    2. '           ' → logprob: -1.3190667629241943
    3. ')' → logprob: -1.6940667629241943
    4. '   ' → logprob: -2.0690667629241943
    5. '[' → logprob: -5.069066524505615
    6. '<|end|>' → logprob: -5.069066524505615
    7. '<|end|>' → logprob: -5.694066524505615
    8. '               ' → logprob: -6.444066524505615
    9. '```' → logprob: -6.694066524505615
    10. '[:]' → logprob: -7.069066524505615

Token 801: ' patterns' (ID: 18587)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3470820486545563
    2. '           ' → logprob: -1.8470820188522339
    3. 'patterns' (adapté à ' patterns') → logprob: -2.8470821380615234
    4. 'results' → logprob: -2.9720821380615234
    5. ' patterns' → logprob: -4.347082138061523
    6. ' results' → logprob: -4.722082138061523
    7. '       ' → logprob: -6.222082138061523
    8. 'result' → logprob: -7.097082138061523
    9. 'pattern' → logprob: -7.347082138061523
    10. '	results' → logprob: -8.722082138061523

Token 802: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.2977849245071411
    2. '_sorted' → logprob: -1.5477849245071411
    3. '.append' → logprob: -3.2977848052978516
    4. ' =' → logprob: -6.297784805297852
    5. '.sort' → logprob: -6.297784805297852
    6. '_c' → logprob: -6.547784805297852
    7. '=' → logprob: -6.672784805297852
    8. '_patterns' → logprob: -7.797784805297852
    9. '   ' → logprob: -7.922784805297852
    10. 'canonical' → logprob: -9.172784805297852

Token 803: ' =' (ID: 314)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.9420663118362427
    2. '=' → logprob: -1.0670663118362427
    3. ' =' → logprob: -1.8170663118362427
    4. '.append' → logprob: -2.317066192626953
    5. '_sorted' → logprob: -5.942066192626953
    6. '   ' → logprob: -7.692066192626953
    7. 'sorted' → logprob: -7.817066192626953
    8. 'sort' → logprob: -8.067066192626953
    9. 'canonical' → logprob: -8.317066192626953
    10. '.' → logprob: -8.317066192626953

Token 804: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16556088626384735
    2. 'sorted' → logprob: -2.1655609607696533
    3. 'canonical' → logprob: -4.540560722351074
    4. ' [' → logprob: -4.665560722351074
    5. 'tuple' → logprob: -4.915560722351074
    6. '[(' → logprob: -5.540560722351074
    7. '[c' → logprob: -5.915560722351074
    8. ' sorted' → logprob: -6.415560722351074
    9. ' canonical' → logprob: -7.665560722351074
    10. '[s' → logprob: -8.165560722351074

Token 805: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0013659505639225245
    2. ' tuple' → logprob: -7.126366138458252
    3. '(tuple' → logprob: -7.626366138458252
    4. '   ' → logprob: -9.751365661621094
    5. '(' → logprob: -12.126365661621094
    6. '  ' → logprob: -12.876365661621094
    7. ' ' → logprob: -13.001365661621094
    8. 'sorted' → logprob: -13.251365661621094
    9. ' (' → logprob: -14.376365661621094
    10. '(
' → logprob: -14.501365661621094

Token 806: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.2254800796508789
    2. 'sorted' → logprob: -1.600480079650879
    3. '(' → logprob: -10.475480079650879
    4. ' sorted' → logprob: -11.225480079650879
    5. 'map' → logprob: -12.100480079650879
    6. 'sort' → logprob: -12.475480079650879
    7. '[' → logprob: -12.600480079650879
    8. '(map' → logprob: -12.725480079650879
    9. '(min' → logprob: -12.975480079650879
    10. '   ' → logprob: -13.600480079650879

Token 807: '(pair' (ID: 84884)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.139137402176857
    2. 'pq' → logprob: -2.8891375064849854
    3. '(pair' → logprob: -3.6391375064849854
    4. '(p' → logprob: -3.8891375064849854
    5. 'p' → logprob: -4.139137268066406
    6. 'pp' → logprob: -4.639137268066406
    7. '(pp' → logprob: -7.389137268066406
    8. 'pat' → logprob: -7.764137268066406
    9. 'pattern' → logprob: -8.764137268066406
    10. 'tp' → logprob: -9.389137268066406

Token 808: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.35870295763015747
    2. '(p' → logprob: -1.2337028980255127
    3. ')' → logprob: -4.983703136444092
    4. ')]' → logprob: -5.858703136444092
    5. '(' → logprob: -8.483702659606934
    6. '))
' → logprob: -9.983702659606934
    7. '(pair' → logprob: -9.983702659606934
    8. '   ' → logprob: -10.108702659606934
    9. ' ))' → logprob: -10.358702659606934
    10. 's' → logprob: -11.108702659606934

Token 809: ' for' (ID: 395)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.5598332285881042
    2. '(pair' → logprob: -1.059833288192749
    3. ' for' → logprob: -2.684833288192749
    4. 'for' → logprob: -4.55983304977417
    5. ')' → logprob: -6.68483304977417
    6. '(sorted' → logprob: -7.30983304977417
    7. '           ' → logprob: -7.93483304977417
    8. ']' → logprob: -7.93483304977417
    9. '               ' → logprob: -8.934833526611328
    10. 'pair' → logprob: -8.934833526611328

Token 810: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.10067189484834671
    2. ' pair' → logprob: -2.3506720066070557
    3. '(pair' → logprob: -7.725671768188477
    4. 'p' → logprob: -11.725671768188477
    5. ' paire' → logprob: -12.100671768188477
    6. 'pattern' → logprob: -13.350671768188477
    7. '<pair' → logprob: -13.475671768188477
    8. '_pair' → logprob: -13.475671768188477
    9. 'pairs' → logprob: -13.975671768188477
    10. 'pai' → logprob: -13.975671768188477

Token 811: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03983496502041817
    2. 'in' → logprob: -4.164834976196289
    3. ' pairs' → logprob: -4.289834976196289
    4. '(p' → logprob: -5.539834976196289
    5. 'pairs' → logprob: -5.789834976196289
    6. '(pair' → logprob: -6.414834976196289
    7. '_pairs' → logprob: -7.914834976196289
    8. ' pair' → logprob: -8.039834976196289
    9. 'pair' → logprob: -8.164834976196289
    10. ' paire' → logprob: -10.414834976196289

Token 812: ' patterns' (ID: 18587)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.09125314652919769
    2. 'patterns' → logprob: -2.7162530422210693
    3. ' pairs' → logprob: -3.9662530422210693
    4. ' patterns' → logprob: -6.841253280639648
    5. 'results' → logprob: -6.966253280639648
    6. ' results' → logprob: -10.466253280639648
    7. '[' → logprob: -10.966253280639648
    8. 'pair' → logprob: -11.216253280639648
    9. 'pattern' → logprob: -11.341253280639648
    10. 'pat' → logprob: -11.466253280639648

Token 813: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.1309419721364975
    2. ']' → logprob: -2.255941867828369
    3. 'pairs' → logprob: -4.255941867828369
    4. '   ' → logprob: -6.505941867828369
    5. 's' → logprob: -7.130941867828369
    6. ' pairs' → logprob: -8.005942344665527
    7. ')' → logprob: -8.255942344665527
    8. ')]' → logprob: -8.505942344665527
    9. ']
' → logprob: -8.755942344665527
    10. '])' → logprob: -9.005942344665527

Token 814: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6591739058494568
    2. ']' → logprob: -0.7841739058494568
    3. '       ' → logprob: -4.659173965454102
    4. '   ' → logprob: -5.159173965454102
    5. ']
' → logprob: -5.784173965454102
    6. '               ' → logprob: -6.034173965454102
    7. ' ]' → logprob: -6.409173965454102
    8. '<|end|>' → logprob: -6.409173965454102
    9. '<|end|>' → logprob: -7.534173965454102
    10. ')' → logprob: -7.909173965454102

Token 815: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8957765102386475
    2. '       ' → logprob: -1.1457765102386475
    3. ')' → logprob: -1.6457765102386475
    4. '               ' → logprob: -3.3957765102386475
    5. '<|end|>' → logprob: -4.145776748657227
    6. '   ' → logprob: -4.395776748657227
    7. '[' → logprob: -4.895776748657227
    8. '<|end|>' → logprob: -6.645776748657227
    9. ' ' → logprob: -6.770776748657227
    10. ')\' → logprob: -6.895776748657227

Token 816: ' patterns' (ID: 18587)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7402462363243103
    2. ' pairs' → logprob: -1.240246295928955
    3. 'pairs' → logprob: -2.115246295928955
    4. '   ' → logprob: -3.115246295928955
    5. '       ' → logprob: -3.865246295928955
    6. ' patterns' → logprob: -4.115246295928955
    7. 'patterns' (adapté à ' patterns') → logprob: -4.740246295928955
    8. '	p' → logprob: -4.865246295928955
    9. '	   ' → logprob: -5.365246295928955
    10. 'results' → logprob: -6.490246295928955

Token 817: '_pairs' (ID: 90005)
  Prédit: '_sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.3739055097103119
    2. '_pairs' → logprob: -1.3739055395126343
    3. '.append' → logprob: -3.4989054203033447
    4. '.sort' → logprob: -4.248905658721924
    5. '=' → logprob: -4.748905658721924
    6. ' =' → logprob: -5.498905658721924
    7. '_patterns' → logprob: -7.748905658721924
    8. 's' → logprob: -7.873905658721924
    9. '   ' → logprob: -8.373905181884766
    10. 'sorted' → logprob: -9.623905181884766

Token 818: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.004492427222430706
    2. ' =' → logprob: -6.129492282867432
    3. '=' → logprob: -6.254492282867432
    4. 'sort' → logprob: -8.12949275970459
    5. '           ' → logprob: -10.62949275970459
    6. '   ' → logprob: -11.37949275970459
    7. 'patterns' → logprob: -11.50449275970459
    8. '       ' → logprob: -12.12949275970459
    9. '.' → logprob: -12.25449275970459
    10. 'pairs' → logprob: -12.25449275970459

Token 819: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.027315566316246986
    2. '()
' → logprob: -3.652315616607666
    3. ')' → logprob: -7.902315616607666
    4. '   ' → logprob: -8.652315139770508
    5. '           ' → logprob: -8.777315139770508
    6. '       ' → logprob: -9.652315139770508
    7. '())' → logprob: -9.652315139770508
    8. '()]' → logprob: -10.652315139770508
    9. '();' → logprob: -10.777315139770508
    10. '<|end|>' → logprob: -10.777315139770508

Token 820: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024854877963662148
    2. '       ' → logprob: -4.39985466003418
    3. '   ' → logprob: -5.27485466003418
    4. ')' → logprob: -5.39985466003418
    5. '               ' → logprob: -6.89985466003418
    6. '<|end|>' → logprob: -6.89985466003418
    7. '...' → logprob: -9.27485466003418
    8. '```' → logprob: -9.89985466003418
    9. '<|end|>' → logprob: -10.02485466003418
    10. '[' → logprob: -10.14985466003418

Token 821: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.1376124918460846
    2. '           ' → logprob: -2.3876125812530518
    3. ' results' → logprob: -3.6376125812530518
    4. '   ' → logprob: -5.512612342834473
    5. 'patterns' → logprob: -5.637612342834473
    6. '       ' → logprob: -6.387612342834473
    7. 'return' → logprob: -7.512612342834473
    8. ' patterns' → logprob: -8.762612342834473
    9. '	results' → logprob: -8.762612342834473
    10. '```' → logprob: -9.762612342834473

Token 822: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.825890159234405e-05
    2. '.' → logprob: -9.625068664550781
    3. ' .' → logprob: -14.250068664550781
    4. '.app' → logprob: -14.375068664550781
    5. ').' → logprob: -15.000068664550781
    6. 'append' → logprob: -15.000068664550781
    7. '.extend' → logprob: -15.750068664550781
    8. '.Append' → logprob: -16.12506866455078
    9. 'Append' → logprob: -17.12506866455078
    10. '_append' → logprob: -17.37506866455078

Token 823: '(tuple' (ID: 133029)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.08249741047620773
    2. '(tuple' → logprob: -2.5824973583221436
    3. '(' → logprob: -5.707497596740723
    4. '((' → logprob: -8.332497596740723
    5. ' (' → logprob: -10.957497596740723
    6. 'tuple' → logprob: -11.082497596740723
    7. 'canonical' → logprob: -13.207497596740723
    8. '(t' → logprob: -13.457497596740723
    9. '   ' → logprob: -14.332497596740723
    10. 'c' → logprob: -14.332497596740723

Token 824: '(pattern' (ID: 62660)
  Prédit: '(pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pattern' → logprob: -0.25486502051353455
    2. 'patterns' → logprob: -1.504865050315857
    3. '(sorted' → logprob: -5.8798651695251465
    4. 'sorted' → logprob: -9.754864692687988
    5. 'pattern' → logprob: -10.254864692687988
    6. ' patterns' → logprob: -10.504864692687988
    7. '(p' → logprob: -12.504864692687988
    8. '(' → logprob: -13.129864692687988
    9. '[' → logprob: -13.254864692687988
    10. '(
' → logprob: -13.504864692687988

Token 825: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0038548242300748825
    2. '_pairs' → logprob: -5.628854751586914
    3. 'pairs' → logprob: -9.253854751586914
    4. ')' → logprob: -10.003854751586914
    5. '(s' → logprob: -10.878854751586914
    6. 'es' → logprob: -10.878854751586914
    7. ' pairs' → logprob: -11.503854751586914
    8. '(p' → logprob: -11.628854751586914
    9. '_patterns' → logprob: -11.628854751586914
    10. '[' → logprob: -11.753854751586914

Token 826: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.0023641132283955812
    2. 's' → logprob: -6.127364158630371
    3. '_sorted' → logprob: -9.877364158630371
    4. ')' → logprob: -10.002364158630371
    5. 'pairs' → logprob: -10.752364158630371
    6. '[' → logprob: -10.877364158630371
    7. ')_' → logprob: -11.627364158630371
    8. ')]' → logprob: -12.127364158630371
    9. '[p' → logprob: -12.627364158630371
    10. '(p' → logprob: -12.752364158630371

Token 827: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12712958455085754
    2. '))' → logprob: -2.127129554748535
    3. ')
' → logprob: -9.127129554748535
    4. '))
' → logprob: -10.252129554748535
    5. '           ' → logprob: -10.627129554748535
    6. '   ' → logprob: -11.127129554748535
    7. ')))' → logprob: -11.627129554748535
    8. '       ' → logprob: -12.252129554748535
    9. '())' → logprob: -13.877129554748535
    10. '               ' → logprob: -13.877129554748535

Token 828: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016928112134337425
    2. '   ' → logprob: -4.266928195953369
    3. '	' → logprob: -6.516928195953369
    4. '	return' → logprob: -7.891928195953369
    5. '           ' → logprob: -8.266927719116211
    6. '    
' → logprob: -8.766927719116211
    7. '	   ' → logprob: -9.641927719116211
    8. '        
' → logprob: -9.766927719116211
    9. '
' → logprob: -9.891927719116211
    10. '    ' → logprob: -10.141927719116211

Token 829: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12810686230659485
    2. '       ' → logprob: -2.1281068325042725
    3. 'return' (adapté à ' return') → logprob: -7.003107070922852
    4. '   ' → logprob: -8.378107070922852
    5. '               ' → logprob: -11.378107070922852
    6. ' return' → logprob: -11.753107070922852
    7. '		' → logprob: -11.753107070922852
    8. '	' → logprob: -12.753107070922852
    9. '	   ' → logprob: -13.128107070922852
    10. '	return' → logprob: -13.378107070922852

Token 830: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003810049733147025
    2. '
' → logprob: -6.253809928894043
    3. '   ' → logprob: -6.878809928894043
    4. '        
' → logprob: -7.628809928894043
    5. 'for' → logprob: -9.253809928894043
    6. '	' → logprob: -9.503809928894043
    7. '    
' → logprob: -9.628809928894043
    8. ' for' → logprob: -10.378809928894043
    9. '  
' → logprob: -11.253809928894043
    10. '           ' → logprob: -11.628809928894043

Token 831: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008114391006529331
    2. '   ' → logprob: -6.008114337921143
    3. '	' → logprob: -6.133114337921143
    4. '        
' → logprob: -6.258114337921143
    5. '    
' → logprob: -7.508114337921143
    6. '
' → logprob: -7.883114337921143
    7. '```' → logprob: -9.0081148147583
    8. '    ' → logprob: -9.6331148147583
    9. '	   ' → logprob: -9.7581148147583
    10. '		
' → logprob: -10.1331148147583

Token 832: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046965744346380234
    2. 'p' → logprob: -4.171965599060059
    3. 'next' → logprob: -4.796965599060059
    4. ' p' → logprob: -4.921965599060059
    5. 'first' → logprob: -6.171965599060059
    6. '   ' → logprob: -6.171965599060059
    7. ' next' → logprob: -6.421965599060059
    8. 'start' → logprob: -6.671965599060059
    9. ' current' → logprob: -6.796965599060059
    10. 'current' → logprob: -6.796965599060059

Token 833: ' trouver' (ID: 23195)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.4332541227340698
    2. 'for' → logprob: -1.6832541227340698
    3. 'start' → logprob: -2.3082542419433594
    4. 'u' → logprob: -2.9332542419433594
    5. 'v' → logprob: -5.558254241943359
    6. 'next' → logprob: -6.183254241943359
    7. 'p' → logprob: -6.433254241943359
    8. 'pivot' → logprob: -6.558254241943359
    9. 'un' → logprob: -6.683254241943359
    10. '   ' → logprob: -7.183254241943359

Token 834: ' le' (ID: 505)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.2332664728164673
    2. 'un' → logprob: -1.3582664728164673
    3. 'next' → logprob: -1.7332664728164673
    4. 'u' → logprob: -2.2332663536071777
    5. ' next' → logprob: -2.7332663536071777
    6. ' un' → logprob: -2.9832663536071777
    7. ' p' → logprob: -3.7332663536071777
    8. 'unused' → logprob: -5.483266353607178
    9. 'pos' → logprob: -5.733266353607178
    10. 'a' → logprob: -5.733266353607178

Token 835: ' premier' (ID: 15506)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.10234662145376205
    2. 'min' → logprob: -2.477346658706665
    3. ' next' → logprob: -5.227346420288086
    4. '[next' → logprob: -5.602346420288086
    5. 'first' → logprob: -6.477346420288086
    6. 'p' → logprob: -7.102346420288086
    7. 'v' → logprob: -7.852346420288086
    8. '   ' → logprob: -8.352346420288086
    9. '(next' → logprob: -8.352346420288086
    10. 'un' → logprob: -8.727346420288086

Token 836: ' sommet' (ID: 130502)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.27431195974349976
    2. 'unused' → logprob: -2.1493120193481445
    3. 'u' → logprob: -2.8993120193481445
    4. 'un' → logprob: -3.5243120193481445
    5. 'v' → logprob: -4.1493120193481445
    6. 'pos' → logprob: -4.6493120193481445
    7. ' p' → logprob: -5.2743120193481445
    8. ' unused' → logprob: -5.6493120193481445
    9. 'for' → logprob: -6.5243120193481445
    10. 'vertex' → logprob: -6.6493120193481445

Token 837: ' libre' (ID: 25486)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6901661157608032
    2. 'non' → logprob: -1.4401661157608032
    3. 'p' → logprob: -2.3151659965515137
    4. 'not' → logprob: -2.5651659965515137
    5. 'v' → logprob: -3.0651659965515137
    6. ' non' → logprob: -4.565165996551514
    7. 'pos' → logprob: -5.565165996551514
    8. ' p' → logprob: -5.565165996551514
    9. '_non' → logprob: -5.690165996551514
    10. '_' → logprob: -5.815165996551514

Token 838: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08547531813383102
    2. '        
' → logprob: -3.710475206375122
    3. '(p' → logprob: -4.085475444793701
    4. ' p' → logprob: -4.585475444793701
    5. 'p' → logprob: -5.335475444793701
    6. '<|end|>' → logprob: -5.335475444793701
    7. ',' → logprob: -5.460475444793701
    8. '<|end|>' → logprob: -5.960475444793701
    9. '    
' → logprob: -6.335475444793701
    10. '   ' → logprob: -6.585475444793701

Token 839: '       ' (ID: 309)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.436083436012268
    2. 'p' → logprob: -1.936083436012268
    3. '       ' → logprob: -1.936083436012268
    4. ' p' → logprob: -1.936083436012268
    5. '_' → logprob: -2.6860833168029785
    6. '[' → logprob: -3.1860833168029785
    7. '    
' → logprob: -3.4360833168029785
    8. '        
' → logprob: -3.5610833168029785
    9. '   ' → logprob: -3.6860833168029785
    10. 'pos' → logprob: -3.6860833168029785

Token 840: ' for' (ID: 395)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.762916624546051
    2. 'u' → logprob: -1.6379165649414062
    3. 'for' (adapté à ' for') → logprob: -1.7629165649414062
    4. 'v' → logprob: -2.1379165649414062
    5. ' for' → logprob: -3.8879165649414062
    6. 'next' → logprob: -4.262916564941406
    7. ' p' → logprob: -5.387916564941406
    8. '       ' → logprob: -6.012916564941406
    9. 'free' → logprob: -6.637916564941406
    10. 'first' → logprob: -6.887916564941406

Token 841: ' p' (ID: 275)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7870874404907227
    2. 'p' → logprob: -1.0370874404907227
    3. 'u' → logprob: -1.6620874404907227
    4. 'vertex' → logprob: -8.162087440490723
    5. ' v' → logprob: -8.912087440490723
    6. ' p' → logprob: -9.537087440490723
    7. ' u' → logprob: -10.037087440490723
    8. 'node' → logprob: -10.787087440490723
    9. 'i' → logprob: -10.787087440490723
    10. 'pos' → logprob: -11.412087440490723

Token 842: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014213686808943748
    2. 'in' → logprob: -4.264213562011719
    3. ' ' → logprob: -10.889213562011719
    4. '_in' → logprob: -11.514213562011719
    5. '<|end|>' → logprob: -12.389213562011719
    6. '_token' → logprob: -12.514213562011719
    7. '<|end|>' → logprob: -12.889213562011719
    8. '  ' → logprob: -13.014213562011719
    9. 'token' → logprob: -13.014213562011719
    10. '	in' → logprob: -13.389213562011719

Token 843: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.002508951351046562
    2. ' pos' → logprob: -6.002509117126465
    3. 'used' → logprob: -11.377509117126465
    4. 'adj' → logprob: -11.377509117126465
    5. '(pos' → logprob: -12.877509117126465
    6. '[pos' → logprob: -13.252509117126465
    7. '   ' → logprob: -13.377509117126465
    8. ' used' → logprob: -13.377509117126465
    9. '	pos' → logprob: -14.377509117126465
    10. 'p' → logprob: -14.752509117126465

Token 844: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.000111768240458332
    2. 'pos' → logprob: -9.62511157989502
    3. 'used' → logprob: -11.62511157989502
    4. '(pos' → logprob: -11.87511157989502
    5. '_used' → logprob: -12.25011157989502
    6. 's' → logprob: -12.62511157989502
    7. '_pos' → logprob: -12.75011157989502
    8. 'list' → logprob: -13.00011157989502
    9. '_set' → logprob: -13.00011157989502
    10. '   ' → logprob: -13.00011157989502

Token 845: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2059173882007599
    2. ':
' → logprob: -1.7059173583984375
    3. '       ' → logprob: -6.4559173583984375
    4. '   ' → logprob: -7.4559173583984375
    5. ' if' → logprob: -7.4559173583984375
    6. '           ' → logprob: -7.7059173583984375
    7. ' not' → logprob: -7.8309173583984375
    8. ' in' → logprob: -8.830917358398438
    9. ',' → logprob: -8.955917358398438
    10. ' :' → logprob: -9.080917358398438

Token 846: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4531455934047699
    2. '       ' → logprob: -2.0781455039978027
    3. ':' → logprob: -2.4531455039978027
    4. ':
' → logprob: -2.8281455039978027
    5. ' if' → logprob: -3.4531455039978027
    6. '   ' → logprob: -3.7031455039978027
    7. '<|end|>' → logprob: -4.453145503997803
    8. '<|end|>' → logprob: -4.828145503997803
    9. '        ' → logprob: -6.328145503997803
    10. '    ' → logprob: -6.578145503997803

Token 847: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04540077969431877
    2. ' if' → logprob: -3.545400857925415
    3. '               ' → logprob: -4.545400619506836
    4. '       ' → logprob: -6.170400619506836
    5. '   ' → logprob: -7.045400619506836
    6. ' not' → logprob: -7.170400619506836
    7. ' ' → logprob: -8.295400619506836
    8. ' ' → logprob: -8.545400619506836
    9. 'if' (adapté à ' if') → logprob: -8.795400619506836
    10. '	       ' → logprob: -9.045400619506836

Token 848: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.062023479491472244
    2. 'p' → logprob: -2.812023401260376
    3. ' not' → logprob: -10.187023162841797
    4. 'not' → logprob: -11.437023162841797
    5. ' ' → logprob: -12.062023162841797
    6. ' ' → logprob: -13.687023162841797
    7. '(p' → logprob: -15.187023162841797
    8. '	p' → logprob: -16.874523162841797
    9. '<p' → logprob: -17.562023162841797
    10. ' ' → logprob: -17.687023162841797

Token 849: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.038048721849918365
    2. 'not' → logprob: -3.28804874420166
    3. ')' → logprob: -13.03804874420166
    4. '	not' → logprob: -13.28804874420166
    5. '<|end|>' → logprob: -13.66304874420166
    6. '_not' → logprob: -14.78804874420166
    7. ' ' → logprob: -15.03804874420166
    8. ' )' → logprob: -15.28804874420166
    9. ' in' → logprob: -15.28804874420166
    10. ' no' → logprob: -15.41304874420166

Token 850: ' in' (ID: 306)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.12822189927101135
    2. ' used' → logprob: -2.5032219886779785
    3. 'in' → logprob: -3.8782219886779785
    4. ' in' → logprob: -4.1282219886779785
    5. '_used' → logprob: -6.7532219886779785
    6. '.used' → logprob: -8.37822151184082
    7. ' utilisé' → logprob: -9.00322151184082
    8. ' not' → logprob: -10.12822151184082
    9. '_USED' → logprob: -10.62822151184082
    10. '   ' → logprob: -10.62822151184082

Token 851: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -3.547789674485102e-05
    2. ' used' → logprob: -10.250035285949707
    3. '.used' → logprob: -18.000036239624023
    4. '_used' → logprob: -19.250036239624023
    5. '```' → logprob: -19.500036239624023
    6. '
' → logprob: -20.250036239624023
    7. 'use' → logprob: -20.750036239624023
    8. 'Used' → logprob: -21.000036239624023
    9. '-used' → logprob: -21.125036239624023
    10. '   ' → logprob: -21.125036239624023

Token 852: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2020757645368576
    2. ':
' → logprob: -1.702075719833374
    3. ' :' → logprob: -8.827075958251953
    4. ' and' → logprob: -8.827075958251953
    5. ' :
' → logprob: -8.827075958251953
    6. '           ' → logprob: -9.452075958251953
    7. '):
' → logprob: -9.827075958251953
    8. 'and' → logprob: -11.202075958251953
    9. '):' → logprob: -11.327075958251953
    10. '               ' → logprob: -11.327075958251953

Token 853: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01009744219481945
    2. ':
' → logprob: -4.635097503662109
    3. ' :' → logprob: -9.26009750366211
    4. '       ' → logprob: -9.26009750366211
    5. '           ' → logprob: -9.51009750366211
    6. ' :
' → logprob: -11.26009750366211
    7. '():' → logprob: -11.63509750366211
    8. '               ' → logprob: -11.63509750366211
    9. '   ' → logprob: -11.76009750366211
    10. '[' → logprob: -12.13509750366211

Token 854: ' break' (ID: 2338)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.49569448828697205
    2. '               ' → logprob: -0.9956945180892944
    3. ' break' → logprob: -4.620694637298584
    4. ' for' → logprob: -4.995694637298584
    5. '                   ' → logprob: -6.995694637298584
    6. '                
' → logprob: -7.245694637298584
    7. '                ' → logprob: -7.495694637298584
    8. ' 
' → logprob: -7.495694637298584
    9. ' :' → logprob: -7.995694637298584
    10. 'used' → logprob: -8.370694160461426

Token 855: '
' (ID: 198)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -1.0416470766067505
    2. '  
' → logprob: -1.7916470766067505
    3. '   ' → logprob: -1.9166470766067505
    4. ':' → logprob: -2.041646957397461
    5. '   
' → logprob: -2.791646957397461
    6. '       ' → logprob: -4.041646957397461
    7. ':
' → logprob: -4.166646957397461
    8. '```' → logprob: -4.166646957397461
    9. '        
' → logprob: -4.291646957397461
    10. ' 
' → logprob: -4.416646957397461

Token 856: '       ' (ID: 309)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -1.0356826782226562
    2. '       ' → logprob: -1.4106826782226562
    3. '   ' → logprob: -1.7856826782226562
    4. '  
' → logprob: -2.5356826782226562
    5. '        
' → logprob: -2.6606826782226562
    6. ' 
' → logprob: -3.5356826782226562
    7. '   
' → logprob: -3.7856826782226562
    8. ':' → logprob: -5.285682678222656
    9. '       
' → logprob: -5.535682678222656
    10. '     
' → logprob: -5.660682678222656

Token 857: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11162354797124863
    2. ' for' → logprob: -3.486623525619507
    3. '    
' → logprob: -4.111623764038086
    4. '\t' → logprob: -4.236623764038086
    5. ' used' → logprob: -4.736623764038086
    6. '       ' → logprob: -4.986623764038086
    7. ':' → logprob: -5.361623764038086
    8. ' 
' → logprob: -6.111623764038086
    9. ' :' → logprob: -6.236623764038086
    10. '        
' → logprob: -6.361623764038086

Token 858: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15539948642253876
    2. ':
' → logprob: -2.2803995609283447
    3. ':return' → logprob: -3.9053995609283447
    4. ' :' → logprob: -4.655399322509766
    5. ' :
' → logprob: -4.780399322509766
    6. ' return' → logprob: -6.780399322509766
    7. '   ' → logprob: -7.030399322509766
    8. '           ' → logprob: -7.280399322509766
    9. '       ' → logprob: -7.655399322509766
    10. '        ' → logprob: -9.155399322509766

Token 859: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7850053310394287
    2. ' return' → logprob: -1.1600053310394287
    3. '   ' → logprob: -2.2850053310394287
    4. '       ' → logprob: -3.0350053310394287
    5. 'return' → logprob: -3.1600053310394287
    6. '    
' → logprob: -4.535005569458008
    7. ' 
' → logprob: -4.785005569458008
    8. '            
' → logprob: -5.410005569458008
    9. ':return' → logprob: -5.535005569458008
    10. '        
' → logprob: -6.160005569458008

Token 860: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3953186273574829
    2. ' return' → logprob: -1.395318627357483
    3. '           ' → logprob: -2.6453185081481934
    4. '   ' → logprob: -4.895318508148193
    5. '       ' → logprob: -8.270318984985352
    6. '	return' → logprob: -10.395318984985352
    7. ':return' → logprob: -11.145318984985352
    8. '               ' → logprob: -11.645318984985352
    9. ' ' → logprob: -13.395318984985352
    10. '```' → logprob: -13.770318984985352

Token 861: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.5517833828926086
    2. '  
' → logprob: -2.301783323287964
    3. '    
' → logprob: -2.426783323287964
    4. '        
' → logprob: -2.676783323287964
    5. '
' → logprob: -2.926783323287964
    6. '\n' → logprob: -3.551783323287964
    7. '   
' → logprob: -3.676783323287964
    8. '       ' → logprob: -4.176783561706543
    9. '\' → logprob: -4.676783561706543
    10. '   ' → logprob: -4.926783561706543

Token 862: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5358083248138428
    2. '       ' → logprob: -1.0358083248138428
    3. '```' → logprob: -4.285808563232422
    4. '<|end|>' → logprob: -4.410808563232422
    5. '    
' → logprob: -4.660808563232422
    6. '        
' → logprob: -5.410808563232422
    7. ' for' → logprob: -5.535808563232422
    8. '[' → logprob: -6.535808563232422
    9. '	token' → logprob: -6.660808563232422
    10. '<|end|>' → logprob: -6.785808563232422

Token 863: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3966527283191681
    2. ' for' → logprob: -1.2716526985168457
    3. '       ' → logprob: -3.7716526985168457
    4. ' used' → logprob: -4.146652698516846
    5. 'for' (adapté à ' for') → logprob: -5.021652698516846
    6. '    
' → logprob: -7.396652698516846
    7. '	for' → logprob: -7.771652698516846
    8. '        
' → logprob: -8.146653175354004
    9. '
' → logprob: -9.646653175354004
    10. 'used' → logprob: -9.771653175354004

Token 864: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0004510493890848011
    2. ' q' → logprob: -7.75045108795166
    3. 'nbr' → logprob: -11.62545108795166
    4. 'n' → logprob: -12.37545108795166
    5. 'neighbor' → logprob: -12.87545108795166
    6. '   ' → logprob: -14.00045108795166
    7. 'adj' → logprob: -14.25045108795166
    8. 'v' → logprob: -14.62545108795166
    9. 'rel' → logprob: -15.12545108795166
    10. 'nei' → logprob: -15.25045108795166

Token 865: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011097692884504795
    2. 'in' → logprob: -4.5110979080200195
    3. ' ' → logprob: -10.63609790802002
    4. '	in' → logprob: -10.88609790802002
    5. '  ' → logprob: -13.13609790802002
    6. ' ' → logprob: -13.63609790802002
    7. '<|end|>' → logprob: -14.01109790802002
    8. '   ' → logprob: -15.13609790802002
    9. 's' → logprob: -15.13609790802002
    10. '<|end|>' → logprob: -15.26109790802002

Token 866: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.008616461418569088
    2. ' adj' → logprob: -4.7586164474487305
    3. '(adj' → logprob: -13.63361644744873
    4. '   ' → logprob: -15.13361644744873
    5. 'ad' → logprob: -16.008617401123047
    6. '[' → logprob: -16.008617401123047
    7. ' ' → logprob: -17.008617401123047
    8. 'aj' → logprob: -17.633617401123047
    9. '           ' → logprob: -17.883617401123047
    10. 'range' → logprob: -18.383617401123047

Token 867: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.0003872974484693259
    2. '(p' → logprob: -7.875387191772461
    3. 'p' → logprob: -12.125387191772461
    4. '[' → logprob: -13.625387191772461
    5. ' [' → logprob: -15.500387191772461
    6. ' p' → logprob: -16.25038719177246
    7. '[q' → logprob: -16.37538719177246
    8. '   ' → logprob: -16.62538719177246
    9. '<p' → logprob: -17.00038719177246
    10. '	p' → logprob: -18.00038719177246

Token 868: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.007700202986598015
    2. '[p' → logprob: -5.382699966430664
    3. ']' → logprob: -6.257699966430664
    4. ']:
' → logprob: -7.007699966430664
    5. '(p' → logprob: -9.132699966430664
    6. ' ]' → logprob: -10.882699966430664
    7. '):' → logprob: -11.007699966430664
    8. ':' → logprob: -11.007699966430664
    9. '']:' → logprob: -11.007699966430664
    10. ']:

' → logprob: -11.132699966430664

Token 869: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9506286382675171
    2. '<|end|>' → logprob: -1.325628638267517
    3. '           ' → logprob: -1.700628638267517
    4. ' if' → logprob: -3.0756287574768066
    5. '       ' → logprob: -3.2006287574768066
    6. '<|end|>' → logprob: -3.5756287574768066
    7. ':
' → logprob: -4.325628757476807
    8. ' :' → logprob: -4.575628757476807
    9. '   ' → logprob: -4.575628757476807
    10. ' ' → logprob: -5.200628757476807

Token 870: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.024256760254502296
    2. '           ' → logprob: -4.149256706237793
    3. 'if' (adapté à ' if') → logprob: -5.399256706237793
    4. '       ' → logprob: -5.899256706237793
    5. '               ' → logprob: -8.149256706237793
    6. '   ' → logprob: -9.024256706237793
    7. '	if' → logprob: -9.274256706237793
    8. ' ' → logprob: -9.399256706237793
    9. '<|end|>' → logprob: -9.399256706237793
    10. '	       ' → logprob: -9.899256706237793

Token 871: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.38688093423843384
    2. 'q' → logprob: -1.136880874633789
    3. 'not' → logprob: -12.386880874633789
    4. ' not' → logprob: -13.011880874633789
    5. '(q' → logprob: -14.261880874633789
    6. '	q' → logprob: -14.511880874633789
    7. 'p' → logprob: -14.636880874633789
    8. ' ' → logprob: -14.761880874633789
    9. '   ' → logprob: -14.761880874633789
    10. ' p' → logprob: -15.261880874633789

Token 872: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0015052208909764886
    2. 'not' → logprob: -6.501505374908447
    3. ' in' → logprob: -13.001504898071289
    4. '<|end|>' → logprob: -14.751504898071289
    5. ')' → logprob: -15.751504898071289
    6. '	not' → logprob: -16.62650489807129
    7. ' ' → logprob: -17.62650489807129
    8. ' )' → logprob: -17.87650489807129
    9. '_not' → logprob: -17.87650489807129
    10. 'in' → logprob: -17.87650489807129

Token 873: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03376257047057152
    2. 'in' → logprob: -3.4087624549865723
    3. 'used' → logprob: -9.78376293182373
    4. ' not' → logprob: -10.40876293182373
    5. 'not' → logprob: -11.03376293182373
    6. ' used' → logprob: -11.65876293182373
    7. '   ' → logprob: -13.28376293182373
    8. '           ' → logprob: -14.28376293182373
    9. ' ' → logprob: -14.28376293182373
    10. '_used' → logprob: -14.53376293182373

Token 874: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.014164102263748646
    2. ' used' → logprob: -4.264163970947266
    3. '.used' → logprob: -15.389163970947266
    4. '
' → logprob: -16.639163970947266
    5. '```' → logprob: -16.764163970947266
    6. '_used' → logprob: -16.889163970947266
    7. ' ' → logprob: -17.264163970947266
    8. '   ' → logprob: -17.764163970947266
    9. 'use' → logprob: -17.764163970947266
    10. ' ' → logprob: -17.889163970947266

Token 875: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08668294548988342
    2. '<|end|>' → logprob: -2.9616830348968506
    3. ' and' → logprob: -4.3366827964782715
    4. ' :' → logprob: -4.9616827964782715
    5. '<|end|>' → logprob: -6.0866827964782715
    6. ':
' → logprob: -6.0866827964782715
    7. '):' → logprob: -6.4616827964782715
    8. ',' → logprob: -6.5866827964782715
    9. ')' → logprob: -6.5866827964782715
    10. 'and' → logprob: -7.7116827964782715

Token 876: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6107141971588135
    2. '               ' → logprob: -1.1107141971588135
    3. '<|end|>' → logprob: -3.3607141971588135
    4. '           ' → logprob: -4.235713958740234
    5. '       ' → logprob: -4.235713958740234
    6. '):' → logprob: -4.485713958740234
    7. ')' → logprob: -4.735713958740234
    8. ' ' → logprob: -4.735713958740234
    9. ' :' → logprob: -5.110713958740234
    10. ',' → logprob: -5.235713958740234

Token 877: ' #' (ID: 1069)
  Prédit: ' pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -0.5081498622894287
    2. '               ' → logprob: -1.2581498622894287
    3. ' used' → logprob: -2.2581498622894287
    4. 'pairs' → logprob: -5.008150100708008
    5. '   ' → logprob: -7.258150100708008
    6. '       ' → logprob: -7.258150100708008
    7. '           ' → logprob: -7.383150100708008
    8. '                   ' → logprob: -8.008150100708008
    9. 'used' → logprob: -8.383150100708008
    10. '                
' → logprob: -9.508150100708008

Token 878: ' former' (ID: 9254)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.44821691513061523
    2. ' pairs' → logprob: -1.3232169151306152
    3. 'pairs' → logprob: -2.9482169151306152
    4. 'used' → logprob: -3.5732169151306152
    5. '               ' → logprob: -5.073216915130615
    6. '           ' → logprob: -5.198216915130615
    7. '   ' → logprob: -6.448216915130615
    8. '       ' → logprob: -6.948216915130615
    9. '```' → logprob: -10.573217391967773
    10. '                   ' → logprob: -10.948217391967773

Token 879: ' une' (ID: 2463)
  Prédit: ' pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -0.5462559461593628
    2. 'pairs' → logprob: -1.0462559461593628
    3. ' paire' → logprob: -2.9212560653686523
    4. ' une' → logprob: -5.296256065368652
    5. 'pair' → logprob: -6.296256065368652
    6. ' pair' → logprob: -6.421256065368652
    7. '_pairs' → logprob: -6.796256065368652
    8. '   ' → logprob: -6.921256065368652
    9. ' used' → logprob: -6.921256065368652
    10. '(p' → logprob: -7.046256065368652

Token 880: ' paire' (ID: 148856)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.9809961915016174
    2. 'pa' → logprob: -1.1059961318969727
    3. ' paire' → logprob: -1.2309961318969727
    4. 'paired' → logprob: -7.855996131896973
    5. '```' → logprob: -7.980996131896973
    6. ' pair' → logprob: -8.105996131896973
    7. 'cou' → logprob: -8.230996131896973
    8. 'pare' → logprob: -8.480996131896973
    9. 'p' → logprob: -8.480996131896973
    10. 'pause' → logprob: -8.980996131896973

Token 881: ' p' (ID: 275)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 882: ',q' (ID: 86188)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018346481025218964
    2. '<|end|>' → logprob: -4.643346309661865
    3. ' ,' → logprob: -5.018346309661865
    4. ',p' → logprob: -7.143346309661865
    5. ')' → logprob: -8.268346786499023
    6. ',q' → logprob: -8.768346786499023
    7. '<|end|>' → logprob: -9.018346786499023
    8. ' et' → logprob: -9.143346786499023
    9. '),' → logprob: -9.518346786499023
    10. ',user' → logprob: -9.643346786499023

Token 883: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 884: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0036477106623351574
    2. '<|end|>' → logprob: -6.628647804260254
    3. '                
' → logprob: -6.753647804260254
    4. '                   ' → logprob: -7.628647804260254
    5. '                ' → logprob: -8.878647804260254
    6. '<|end|>' → logprob: -9.003647804260254
    7. ',' → logprob: -9.503647804260254
    8. '                    
' → logprob: -10.003647804260254
    9. '  
' → logprob: -10.003647804260254
    10. '           ' → logprob: -10.503647804260254

Token 885: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.7922996282577515
    2. ' pairs' → logprob: -0.9172996282577515
    3. '               ' → logprob: -2.542299747467041
    4. '   ' → logprob: -3.667299747467041
    5. '       ' → logprob: -3.667299747467041
    6. 'pairs' → logprob: -4.667299747467041
    7. '           ' → logprob: -5.417299747467041
    8. 'used' (adapté à ' used') → logprob: -5.667299747467041
    9. '   ' → logprob: -9.292299270629883
    10. '```' → logprob: -9.792299270629883

Token 886: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -2.963691804325208e-05
    2. '.' → logprob: -10.500029563903809
    3. ' .' → logprob: -13.750029563903809
    4. 'add' → logprob: -14.500029563903809
    5. '.update' → logprob: -14.750029563903809
    6. '   ' → logprob: -17.250030517578125
    7. '.Add' → logprob: -17.500030517578125
    8. ' add' → logprob: -17.625030517578125
    9. '```' → logprob: -18.125030517578125
    10. '	add' → logprob: -18.375030517578125

Token 887: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.010267014615237713
    2. 'p' → logprob: -4.7602667808532715
    3. ' p' → logprob: -6.7602667808532715
    4. '(' → logprob: -7.6352667808532715
    5. ' (' → logprob: -12.38526725769043
    6. '(q' → logprob: -12.38526725769043
    7. '	p' → logprob: -14.76026725769043
    8. '<p' → logprob: -16.63526725769043
    9. ')p' → logprob: -16.76026725769043
    10. ',p' → logprob: -17.01026725769043

Token 888: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42959707975387573
    2. ')
' → logprob: -1.0545971393585205
    3. '               ' → logprob: -8.054596900939941
    4. ' )
' → logprob: -8.304596900939941
    5. '<|end|>' → logprob: -8.804596900939941
    6. ' )' → logprob: -9.429596900939941
    7. ')
' → logprob: -10.429596900939941
    8. '),' → logprob: -11.054596900939941
    9. ');' → logprob: -11.679596900939941
    10. ')

' → logprob: -12.054596900939941

Token 889: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009130682796239853
    2. '<|end|>' → logprob: -5.509130477905273
    3. '                
' → logprob: -6.509130477905273
    4. '   ' → logprob: -7.259130477905273
    5. '```' → logprob: -7.509130477905273
    6. ' 
' → logprob: -7.634130477905273
    7. '       ' → logprob: -8.384130477905273
    8. '                   ' → logprob: -8.509130477905273
    9. '           ' → logprob: -8.634130477905273
    10. ' used' → logprob: -8.759130477905273

Token 890: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.011697941459715366
    2. 'used' (adapté à ' used') → logprob: -4.511697769165039
    3. ' q' → logprob: -7.636697769165039
    4. '               ' → logprob: -9.511697769165039
    5. '```' → logprob: -10.136697769165039
    6. ' 
' → logprob: -11.011697769165039
    7. ' ' → logprob: -11.011697769165039
    8. 'q' → logprob: -11.386697769165039
    9. '.used' → logprob: -13.511697769165039
    10. ' usado' → logprob: -13.761697769165039

Token 891: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -3.225939872208983e-05
    2. '.' → logprob: -10.375032424926758
    3. 'add' → logprob: -14.125032424926758
    4. ' .' → logprob: -16.000032424926758
    5. '.Add' → logprob: -16.125032424926758
    6. '<|end|>' → logprob: -17.000032424926758
    7. ' add' → logprob: -17.625032424926758
    8. ')add' → logprob: -18.250032424926758
    9. '	add' → logprob: -19.000032424926758
    10. '   ' → logprob: -19.000032424926758

Token 892: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -9.372294698550832e-06
    2. '(' → logprob: -11.625009536743164
    3. ' (' → logprob: -15.000009536743164
    4. ' q' → logprob: -17.875009536743164
    5. 'q' → logprob: -18.000009536743164
    6. '(
' → logprob: -18.625009536743164
    7. '	q' → logprob: -18.625009536743164
    8. '[q' → logprob: -19.125009536743164
    9. '?q' → logprob: -20.250009536743164
    10. '<|end|>' → logprob: -20.250009536743164

Token 893: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008346432005055249
    2. ')
' → logprob: -7.8758344650268555
    3. '               ' → logprob: -8.375834465026855
    4. '<|end|>' → logprob: -8.500834465026855
    5. '<|end|>' → logprob: -11.375834465026855
    6. '),' → logprob: -13.000834465026855
    7. ' )' → logprob: -13.625834465026855
    8. '')' → logprob: -14.250834465026855
    9. ')#' → logprob: -14.250834465026855
    10. '           ' → logprob: -14.500834465026855

Token 894: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5757522583007812
    2. ' pairs' → logprob: -0.9507522583007812
    3. '       ' → logprob: -4.075752258300781
    4. 'pairs' → logprob: -4.200752258300781
    5. '   ' → logprob: -4.825752258300781
    6. '<|end|>' → logprob: -5.200752258300781
    7. '	p' → logprob: -7.200752258300781
    8. '_pairs' → logprob: -7.325752258300781
    9. ',p' → logprob: -7.325752258300781
    10. '           ' → logprob: -7.325752258300781

Token 895: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' (adapté à ' pairs') → logprob: -0.5798860192298889
    2. ' pairs' → logprob: -0.8298860192298889
    3. '   ' → logprob: -5.704885959625244
    4. '           ' → logprob: -7.954885959625244
    5. '               ' → logprob: -8.954886436462402
    6. '       ' → logprob: -9.079886436462402
    7. '```' → logprob: -11.579886436462402
    8. '_pairs' → logprob: -12.704886436462402
    9. '                   ' → logprob: -13.704886436462402
    10. '	p' → logprob: -14.579886436462402

Token 896: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.370294846012257e-05
    2. '.' → logprob: -10.125043869018555
    3. '.app' → logprob: -13.250043869018555
    4. '.Append' → logprob: -14.500043869018555
    5. 'append' → logprob: -15.375043869018555
    6. '.push' → logprob: -15.375043869018555
    7. '.add' → logprob: -15.375043869018555
    8. '<|end|>' → logprob: -15.375043869018555
    9. ' .' → logprob: -15.875043869018555
    10. '.ap' → logprob: -15.875043869018555

Token 897: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0009468303760513663
    2. '(' → logprob: -7.000946998596191
    3. '(p' → logprob: -10.250946998596191
    4. '(
' → logprob: -18.250946044921875
    5. ' (' → logprob: -18.500946044921875
    6. '(P' → logprob: -18.750946044921875
    7. '[(' → logprob: -18.875946044921875
    8. ' ((' → logprob: -19.000946044921875
    9. '   ' → logprob: -19.750946044921875
    10. '(tuple' → logprob: -20.000946044921875

Token 898: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.531315314830863e-06
    2. ' p' → logprob: -12.625003814697266
    3. '(p' → logprob: -16.125003814697266
    4. ')p' → logprob: -17.750003814697266
    5. '   ' → logprob: -18.125003814697266
    6. ',p' → logprob: -19.125003814697266
    7. ')' → logprob: -19.250003814697266
    8. '	p' → logprob: -19.750003814697266
    9. ''p' → logprob: -20.375003814697266
    10. '(' → logprob: -20.625003814697266

Token 899: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03384461998939514
    2. ',q' → logprob: -3.4088447093963623
    3. ',
' → logprob: -9.033844947814941
    4. ',p' → logprob: -10.033844947814941
    5. ' ,' → logprob: -10.533844947814941
    6. ',

' → logprob: -13.408844947814941
    7. '<|end|>' → logprob: -13.658844947814941
    8. ',Q' → logprob: -13.783844947814941
    9. ')' → logprob: -13.783844947814941
    10. '‌,' → logprob: -13.908844947814941

Token 900: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. ' q' → logprob: -17.125
    3. '	q' → logprob: -18.125
    4. '               ' → logprob: -19.125
    5. '                   ' → logprob: -20.0
    6. '           ' → logprob: -20.625
    7. '$q' → logprob: -21.875
    8. '   ' → logprob: -22.25
    9. '       ' → logprob: -22.5
    10. 'qml' → logprob: -22.875

Token 901: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16214734315872192
    2. ')' → logprob: -1.9121472835540771
    3. '))
' → logprob: -6.287147521972656
    4. ')
' → logprob: -9.787147521972656
    5. ')))' → logprob: -13.287147521972656
    6. '))

' → logprob: -13.412147521972656
    7. '),' → logprob: -14.912147521972656
    8. ' ))' → logprob: -14.912147521972656
    9. '));' → logprob: -15.162147521972656
    10. ' )' → logprob: -15.787147521972656

Token 902: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10798342525959015
    2. '                
' → logprob: -2.482983350753784
    3. '<|end|>' → logprob: -4.982983589172363
    4. '```' → logprob: -5.982983589172363
    5. '  
' → logprob: -5.982983589172363
    6. ' 
' → logprob: -6.357983589172363
    7. '                ' → logprob: -7.107983589172363
    8. '               
' → logprob: -7.357983589172363
    9. '				
' → logprob: -7.607983589172363
    10. ' ' → logprob: -7.857983589172363

Token 903: ' back' (ID: 1602)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018886608304455876
    2. ' ' → logprob: -7.251888751983643
    3. ' back' → logprob: -7.251888751983643
    4. 'back' (adapté à ' back') → logprob: -8.626888275146484
    5. '			' → logprob: -9.751888275146484
    6. '		       ' → logprob: -10.251888275146484
    7. '                
' → logprob: -10.376888275146484
    8. '	           ' → logprob: -10.376888275146484
    9. '```' → logprob: -10.626888275146484
    10. '
' → logprob: -10.751888275146484

Token 904: 'track' (ID: 22792)
  Prédit: 'track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -4.961759259458631e-06
    2. 'tracking' → logprob: -13.250004768371582
    3. 'tract' → logprob: -13.750004768371582
    4. 'tr' → logprob: -14.125004768371582
    5. 't' → logprob: -14.375004768371582
    6. 'trace' → logprob: -14.375004768371582
    7. '_track' → logprob: -16.3750057220459
    8. 'tick' → logprob: -17.0000057220459
    9. 'tracked' → logprob: -17.0000057220459
    10. '(track' → logprob: -17.6250057220459

Token 905: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2731729745864868
    2. '
' → logprob: -2.0231728553771973
    3. '()' → logprob: -2.6481728553771973
    4. '                
' → logprob: -4.398172855377197
    5. '<|end|>' → logprob: -4.523172855377197
    6. '()
' → logprob: -4.773172855377197
    7. '                ' → logprob: -6.648172855377197
    8. '  
' → logprob: -7.648172855377197
    9. '(
' → logprob: -7.898172855377197
    10. '<|end|>' → logprob: -8.023173332214355

Token 906: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0023021509405225515
    2. '                
' → logprob: -7.002302169799805
    3. '<|end|>' → logprob: -7.252302169799805
    4. '```' → logprob: -7.502302169799805
    5. '                ' → logprob: -9.752302169799805
    6. 'tokens' → logprob: -11.502302169799805
    7. '              ' → logprob: -11.502302169799805
    8. '<|end|>' → logprob: -12.002302169799805
    9. '                   ' → logprob: -12.127302169799805
    10. '               
' → logprob: -12.627302169799805

Token 907: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' (adapté à ' pairs') → logprob: -0.02728969231247902
    2. ' pairs' → logprob: -3.902289628982544
    3. '               ' → logprob: -5.027289867401123
    4. 'used' → logprob: -9.402289390563965
    5. 'p' → logprob: -9.902289390563965
    6. '                
' → logprob: -10.902289390563965
    7. '_pairs' → logprob: -12.277289390563965
    8. ' used' → logprob: -12.402289390563965
    9. '   ' → logprob: -13.027289390563965
    10. '```' → logprob: -13.527289390563965

Token 908: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0007964044925756752
    2. '.remove' → logprob: -7.250796318054199
    3. '.' → logprob: -10.3757963180542
    4. '<|end|>' → logprob: -10.5007963180542
    5. 'pop' → logprob: -11.5007963180542
    6. ' .' → logprob: -12.1257963180542
    7. '	pop' → logprob: -12.5007963180542
    8. '_pop' → logprob: -12.8757963180542
    9. '<|end|>' → logprob: -12.8757963180542
    10. '.Pop' → logprob: -13.7507963180542

Token 909: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.0640476644039154
    2. '()' → logprob: -2.8140475749969482
    3. '               ' → logprob: -6.189047813415527
    4. '()
' → logprob: -10.939047813415527
    5. '       ' → logprob: -12.189047813415527
    6. '()\' → logprob: -13.939047813415527
    7. '()

' → logprob: -14.064047813415527
    8. '(' → logprob: -14.814047813415527
    9. '           ' → logprob: -15.314047813415527
    10. ' ()
' → logprob: -15.439047813415527

Token 910: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0280383548888494e-06
    2. '```' → logprob: -14.875000953674316
    3. '       ' → logprob: -15.500000953674316
    4. '                
' → logprob: -15.875000953674316
    5. ' used' → logprob: -16.125001907348633
    6. '              ' → logprob: -16.125001907348633
    7. '           ' → logprob: -16.875001907348633
    8. '			' → logprob: -17.625001907348633
    9. 'used' → logprob: -17.750001907348633
    10. '   ' → logprob: -18.375001907348633

Token 911: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' (adapté à ' used') → logprob: -0.00022034443099983037
    2. ' used' → logprob: -8.50022029876709
    3. '               ' → logprob: -11.00022029876709
    4. '   ' → logprob: -16.750221252441406
    5. 'unused' → logprob: -18.500221252441406
    6. '.used' → logprob: -18.750221252441406
    7. '```' → logprob: -19.125221252441406
    8. '           ' → logprob: -19.250221252441406
    9. '       ' → logprob: -19.375221252441406
    10. '                
' → logprob: -19.500221252441406

Token 912: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.0001093841710826382
    2. 'remove' → logprob: -9.750109672546387
    3. '.dis' → logprob: -10.500109672546387
    4. '.' → logprob: -11.000109672546387
    5. '<|end|>' → logprob: -12.375109672546387
    6. '_remove' → logprob: -14.250109672546387
    7. '(remove' → logprob: -14.625109672546387
    8. ' remove' → logprob: -14.875109672546387
    9. '	remove' → logprob: -15.000109672546387
    10. '.add' → logprob: -15.375109672546387

Token 913: '(p' (ID: 2407)
  Prédit: '(q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.7113199234008789
    2. '(p' → logprob: -1.211319923400879
    3. 'q' → logprob: -1.836319923400879
    4. 'p' → logprob: -2.961319923400879
    5. '(' → logprob: -10.586319923400879
    6. ' q' → logprob: -11.961319923400879
    7. '	q' → logprob: -12.211319923400879
    8. '[q' → logprob: -13.086319923400879
    9. ' p' → logprob: -13.461319923400879
    10. '<p' → logprob: -13.586319923400879

Token 914: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.127446249127388
    2. ')' → logprob: -2.127446174621582
    3. '               ' → logprob: -7.627446174621582
    4. ')
' → logprob: -10.502446174621582
    5. ' )
' → logprob: -14.377446174621582
    6. '   ' → logprob: -14.877446174621582
    7. 'q' → logprob: -15.252446174621582
    8. '(p' → logprob: -15.377446174621582
    9. ')

' → logprob: -15.502446174621582
    10. '                   ' → logprob: -15.502446174621582

Token 915: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.8802491215174086e-05
    2. '       ' → logprob: -11.375028610229492
    3. '```' → logprob: -11.750028610229492
    4. '           ' → logprob: -13.125028610229492
    5. ' used' → logprob: -13.375028610229492
    6. '			' → logprob: -13.750028610229492
    7. '<|end|>' → logprob: -13.750028610229492
    8. '                   ' → logprob: -14.125028610229492
    9. '                
' → logprob: -14.125028610229492
    10. '   ' → logprob: -14.625028610229492

Token 916: ' used' (ID: 2061)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -6.749814019713085e-06
    2. 'used' (adapté à ' used') → logprob: -12.375006675720215
    3. '               ' → logprob: -13.500006675720215
    4. '	q' → logprob: -14.125006675720215
    5. ' q' → logprob: -15.375006675720215
    6. '$q' → logprob: -16.75000762939453
    7. '       ' → logprob: -18.12500762939453
    8. '{' → logprob: -18.25000762939453
    9. '                   ' → logprob: -18.37500762939453
    10. '   ' → logprob: -18.75000762939453

Token 917: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.018682096153497696
    2. '.add' → logprob: -4.01868200302124
    3. '.' → logprob: -8.018682479858398
    4. 'remove' → logprob: -9.268682479858398
    5. ' .' → logprob: -9.893682479858398
    6. '<|end|>' → logprob: -9.893682479858398
    7. '(remove' → logprob: -13.268682479858398
    8. '.pop' → logprob: -14.018682479858398
    9. '.dis' → logprob: -14.143682479858398
    10. '	remove' → logprob: -14.268682479858398

Token 918: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -2.558399319241289e-05
    2. '(' → logprob: -10.625025749206543
    3. 'q' → logprob: -14.000025749206543
    4. ' (' → logprob: -15.250025749206543
    5. '(p' → logprob: -16.250024795532227
    6. '(
' → logprob: -18.500024795532227
    7. '	q' → logprob: -18.500024795532227
    8. '?q' → logprob: -18.875024795532227
    9. '[q' → logprob: -19.250024795532227
    10. ')' → logprob: -19.750024795532227

Token 919: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.975612187583465e-05
    2. '<|end|>' → logprob: -11.250029563903809
    3. ')
' → logprob: -11.625029563903809
    4. ' )' → logprob: -12.750029563903809
    5. '               ' → logprob: -12.875029563903809
    6. '           ' → logprob: -14.125029563903809
    7. '       ' → logprob: -14.875029563903809
    8. '<|end|>' → logprob: -15.250029563903809
    9. ')}' → logprob: -15.500029563903809
    10. '')' → logprob: -15.875029563903809

Token 920: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 921: ' back' (ID: 1602)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'back' (adapté à ' back') → logprob: -0.7143778800964355
    2. '	back' → logprob: -0.9643778800964355
    3. '   ' → logprob: -2.0893778800964355
    4. '	return' → logprob: -5.4643778800964355
    5. ' back' → logprob: -7.3393778800964355
    6. 'return' → logprob: -8.839378356933594
    7. '       ' → logprob: -9.089378356933594
    8. '	b' → logprob: -9.464378356933594
    9. '	tab' → logprob: -9.464378356933594
    10. '	' → logprob: -9.589378356933594

Token 922: 'track' (ID: 22792)
  Prédit: 'track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -7.896309739408025e-07
    2. 't' → logprob: -14.250000953674316
    3. 'tracking' → logprob: -16.875
    4. 'tr' → logprob: -17.5
    5. 'tract' → logprob: -17.625
    6. '_track' → logprob: -18.125
    7. ' track' → logprob: -18.25
    8. 'Track' → logprob: -19.625
    9. 'trace' → logprob: -19.625
    10. '(track' → logprob: -20.25

Token 923: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04288454353809357
    2. '
' → logprob: -3.417884588241577
    3. '<|end|>' → logprob: -5.042884349822998
    4. '<|end|>' → logprob: -7.292884349822998
    5. '    
' → logprob: -7.417884349822998
    6. '()' → logprob: -7.667884349822998
    7. '	return' → logprob: -7.917884349822998
    8. 'return' → logprob: -8.042884826660156
    9. '()
' → logprob: -8.917884826660156
    10. ' return' → logprob: -9.417884826660156

Token 924: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017282012850046158
    2. '<|end|>' → logprob: -4.517282009124756
    3. '	return' → logprob: -5.642282009124756
    4. 'return' → logprob: -6.892282009124756
    5. '    
' → logprob: -6.892282009124756
    6. '<|end|>' → logprob: -8.267282485961914
    7. '
' → logprob: -8.642282485961914
    8. ' return' → logprob: -10.267282485961914
    9. '[' → logprob: -10.267282485961914
    10. '.' → logprob: -10.892282485961914

Token 925: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007255669683218002
    2. '
' → logprob: -5.382255554199219
    3. 'return' → logprob: -6.132255554199219
    4. ' return' → logprob: -8.007255554199219
    5. '    
' → logprob: -9.382255554199219
    6. '	return' → logprob: -10.257255554199219
    7. ':return' → logprob: -13.132255554199219
    8. '<|end|>' → logprob: -13.507255554199219
    9. 'eturn' → logprob: -14.132255554199219
    10. '```' → logprob: -14.757255554199219

Token 926: ' élim' (ID: 108134)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.002348411362618208
    2. ' return' → logprob: -6.25234842300415
    3. '#' → logprob: -8.002347946166992
    4. 'results' → logprob: -10.127347946166992
    5. 'patterns' → logprob: -10.877347946166992
    6. '   ' → logprob: -11.002347946166992
    7. 'result' → logprob: -11.877347946166992
    8. 'ret' → logprob: -14.502347946166992
    9. 'pattern' → logprob: -14.627347946166992
    10. 'res' → logprob: -15.002347946166992

Token 927: 'iner' (ID: 6010)
  Prédit: 'iner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iner' → logprob: -0.0009962485637515783
    2. 'ine' → logprob: -7.125996112823486
    3. 'in' → logprob: -9.875996589660645
    4. 'inez' → logprob: -10.750996589660645
    5. '[' → logprob: -11.125996589660645
    6. '#' → logprob: -11.875996589660645
    7. '{' → logprob: -12.000996589660645
    8. '\' → logprob: -12.000996589660645
    9. 'iné' → logprob: -12.000996589660645
    10. '(' → logprob: -12.250996589660645

Token 928: ' doubl' (ID: 127992)
  Prédit: 'duplicates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'duplicates' → logprob: -0.11163517087697983
    2. ' duplicates' → logprob: -3.111635208129883
    3. 'duplicate' → logprob: -3.611635208129883
    4. 'du' → logprob: -3.986635208129883
    5. '_duplicates' → logprob: -4.736635208129883
    6. 'dup' → logprob: -6.611635208129883
    7. ' duplicate' → logprob: -6.611635208129883
    8. 'd' → logprob: -6.861635208129883
    9. 'list' → logprob: -6.861635208129883
    10. 'les' → logprob: -7.736635208129883

Token 929: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -3.7697225252486533e-06
    2. 'és' → logprob: -14.000003814697266
    3. 'on' → logprob: -14.000003814697266
    4. 'онс' → logprob: -14.750003814697266
    5. '#' → logprob: -15.375003814697266
    6. '```' → logprob: -15.500003814697266
    7. '[' → logprob: -15.625003814697266
    8. '{' → logprob: -16.125003814697266
    9. '>' → logprob: -16.375003814697266
    10. 'onts' → logprob: -16.500003814697266

Token 930: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04308037459850311
    2. 'return' → logprob: -3.2930803298950195
    3. ' return' → logprob: -5.5430803298950195
    4. 'results' → logprob: -7.1680803298950195
    5. '
' → logprob: -8.66808032989502
    6. '    
' → logprob: -8.91808032989502
    7. ' results' → logprob: -10.79308032989502
    8. 'result' → logprob: -11.79308032989502
    9. '	return' → logprob: -13.16808032989502
    10. '```' → logprob: -13.79308032989502

Token 931: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01489733811467886
    2. 'return' → logprob: -4.264897346496582
    3. ' return' → logprob: -7.514897346496582
    4. 'results' → logprob: -8.764897346496582
    5. '    
' → logprob: -11.014897346496582
    6. '
' → logprob: -12.014897346496582
    7. 'result' → logprob: -12.389897346496582
    8. ' results' → logprob: -12.764897346496582
    9. 'patterns' → logprob: -14.139897346496582
    10. '	return' → logprob: -14.639897346496582

Token 932: ' results' (ID: 4376)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03807706758379936
    2. ' return' → logprob: -3.7880771160125732
    3. '   ' → logprob: -4.538076877593994
    4. 'results' (adapté à ' results') → logprob: -5.538076877593994
    5. ' results' → logprob: -9.788077354431152
    6. 'unique' → logprob: -10.788077354431152
    7. 'result' → logprob: -12.413077354431152
    8. 'patterns' → logprob: -12.663077354431152
    9. 'seen' → logprob: -12.913077354431152
    10. '	return' → logprob: -13.538077354431152

Token 933: '_unique' (ID: 51840)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.027802521362900734
    2. ' =' → logprob: -3.6528024673461914
    3. '=set' → logprob: -6.652802467346191
    4. '=list' → logprob: -8.527802467346191
    5. 'set' → logprob: -11.402802467346191
    6. 'return' → logprob: -14.777802467346191
    7. '=
' → logprob: -15.152802467346191
    8. '=[]' → logprob: -15.402802467346191
    9. '＝' → logprob: -15.777802467346191
    10. 'list' → logprob: -15.777802467346191

Token 934: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10175805538892746
    2. ' =' → logprob: -2.3517580032348633
    3. '=set' → logprob: -6.476758003234863
    4. '=list' → logprob: -11.976758003234863
    5. 'set' → logprob: -12.976758003234863
    6. '=[]' → logprob: -13.476758003234863
    7. '_set' → logprob: -14.851758003234863
    8. '＝' → logprob: -14.976758003234863
    9. '   ' → logprob: -15.976758003234863
    10. '=
' → logprob: -16.35175895690918

Token 935: ' set' (ID: 920)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.08038550615310669
    2. 'set' → logprob: -2.580385446548462
    3. ' list' → logprob: -6.580385684967041
    4. ' set' → logprob: -9.205385208129883
    5. 'sorted' → logprob: -12.080385208129883
    6. '   ' → logprob: -14.955385208129883
    7. '{' → logprob: -15.330385208129883
    8. '[list' → logprob: -15.455385208129883
    9. '[]' → logprob: -15.580385208129883
    10. 'tuple' → logprob: -16.080385208129883

Token 936: '(results' (ID: 42655)
  Prédit: '(results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(results' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.75
    3. '(result' → logprob: -17.5
    4. 'results' → logprob: -17.75
    5. ' (' → logprob: -18.0
    6. '(res' → logprob: -20.25
    7. '	results' → logprob: -20.75
    8. '()' → logprob: -20.875
    9. '((' → logprob: -21.0
    10. ' results' → logprob: -21.375

Token 937: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.280175097752362e-05
    2. '())' → logprob: -9.625082969665527
    3. '()' → logprob: -12.125082969665527
    4. '   ' → logprob: -12.500082969665527
    5. ')
' → logprob: -12.750082969665527
    6. ' )' → logprob: -13.250082969665527
    7. '(' → logprob: -13.375082969665527
    8. ')}' → logprob: -15.125082969665527
    9. ')return' → logprob: -15.375082969665527
    10. '))' → logprob: -15.375082969665527

Token 938: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005060884868726134
    2. ' return' → logprob: -8.250506401062012
    3. 'return' → logprob: -8.375506401062012
    4. '	return' → logprob: -12.000506401062012
    5. '    
' → logprob: -12.375506401062012
    6. '
' → logprob: -13.000506401062012
    7. '<|end|>' → logprob: -14.500506401062012
    8. ':return' → logprob: -15.000506401062012
    9. '```' → logprob: -15.250506401062012
    10. '       ' → logprob: -16.000505447387695

Token 939: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12981882691383362
    2. 'return' (adapté à ' return') → logprob: -2.129818916320801
    3. ' return' → logprob: -5.879818916320801
    4. '	return' → logprob: -9.5048189163208
    5. '    
' → logprob: -11.7548189163208
    6. ':return' → logprob: -13.3798189163208
    7. '<|end|>' → logprob: -13.6298189163208
    8. 'eturn' → logprob: -13.6298189163208
    9. '
' → logprob: -13.7548189163208
    10. '       ' → logprob: -14.3798189163208

Token 940: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.2623487412929535
    2. ' results' → logprob: -2.0123486518859863
    3. 'list' → logprob: -2.5123486518859863
    4. ' list' → logprob: -4.137348651885986
    5. 'sorted' → logprob: -11.012349128723145
    6. '(results' → logprob: -11.262349128723145
    7. '[list' → logprob: -12.637349128723145
    8. '	results' → logprob: -12.887349128723145
    9. '[' → logprob: -13.012349128723145
    10. ' sorted' → logprob: -13.512349128723145

Token 941: '_unique' (ID: 51840)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 942: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 943: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 944: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.443202018737793
    2. ' generate' → logprob: -1.443202018737793
    3. ' solve' → logprob: -1.818202018737793
    4. ' find' → logprob: -2.318202018737793
    5. 'generate' → logprob: -2.693202018737793
    6. ' valid' → logprob: -3.443202018737793
    7. 'solve' → logprob: -3.568202018737793
    8. 'main' → logprob: -3.818202018737793
    9. ' count' → logprob: -4.193202018737793
    10. ' possible' → logprob: -4.568202018737793

Token 945: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00046200878568924963
    2. '(' → logprob: -7.875462055206299
    3. '():
' → logprob: -10.37546157836914
    4. ' ():' → logprob: -10.50046157836914
    5. '()' → logprob: -11.00046157836914
    6. '()>' → logprob: -12.62546157836914
    7. '()">' → logprob: -14.25046157836914
    8. ':' → logprob: -14.50046157836914
    9. '_' → logprob: -14.75046157836914
    10. '():
' → logprob: -15.25046157836914

Token 946: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05110061913728714
    2. 'import' → logprob: -3.801100730895996
    3. ' import' → logprob: -4.051100730895996
    4. '```' → logprob: -5.426100730895996
    5. ' lines' → logprob: -6.301100730895996
    6. ' input' → logprob: -7.676100730895996
    7. ' readline' → logprob: -7.801100730895996
    8. 'stdin' → logprob: -7.926100730895996
    9. 'input' → logprob: -8.176100730895996
    10. '(stdin' → logprob: -8.301100730895996

Token 947: ' while' (ID: 2049)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -1.0424762964248657
    2. ' lines' → logprob: -1.4174762964248657
    3. '   ' → logprob: -1.6674762964248657
    4. ' line' → logprob: -2.542476177215576
    5. 'import' → logprob: -3.167476177215576
    6. ' input' → logprob: -3.542476177215576
    7. ' stdin' → logprob: -4.167476177215576
    8. ' n' → logprob: -5.167476177215576
    9. ' #' → logprob: -5.667476177215576
    10. 'input' → logprob: -5.667476177215576

Token 948: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.02325141802430153
    2. 'True' → logprob: -3.773251533508301
    3. '(True' → logprob: -12.1482515335083
    4. '1' → logprob: -15.3982515335083
    5. '=True' → logprob: -15.3982515335083
    6. ' ' → logprob: -15.6482515335083
    7. ' ' → logprob: -17.398250579833984
    8. '   ' → logprob: -18.023250579833984
    9. ' =' → logprob: -18.023250579833984
    10. ' true' → logprob: -18.398250579833984

Token 949: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020811164751648903
    2. ':
' → logprob: -4.145811080932617
    3. '():' → logprob: -5.770811080932617
    4. '   ' → logprob: -7.020811080932617
    5. ' :' → logprob: -7.520811080932617
    6. '():
' → logprob: -8.770811080932617
    7. ' :
' → logprob: -10.645811080932617
    8. ',' → logprob: -11.270811080932617
    9. '):' → logprob: -12.645811080932617
    10. '       ' → logprob: -13.020811080932617

Token 950: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018593916902318597
    2. ' line' → logprob: -6.626859188079834
    3. ' try' → logprob: -7.751859188079834
    4. 'try' → logprob: -9.751859664916992
    5. '   ' → logprob: -10.751859664916992
    6. '	line' → logprob: -11.501859664916992
    7. '       ' → logprob: -12.251859664916992
    8. '	try' → logprob: -12.876859664916992
    9. 'line' → logprob: -13.001859664916992
    10. '    
' → logprob: -13.626859664916992

Token 951: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.5668371915817261
    2. ' line' → logprob: -1.316837191581726
    3. '   ' → logprob: -1.816837191581726
    4. 'try' → logprob: -6.441837310791016
    5. '    
' → logprob: -8.191837310791016
    6. '	line' → logprob: -9.441837310791016
    7. ' try' → logprob: -9.941837310791016
    8. 'ligne' → logprob: -10.066837310791016
    9. 'l' → logprob: -10.566837310791016
    10. ' ligne' → logprob: -10.816837310791016

Token 952: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020774602890015
    2. '=' → logprob: -2.350207805633545
    3. '=input' → logprob: -14.850207328796387
    4. '=line' → logprob: -14.850207328796387
    5. 's' → logprob: -15.475207328796387
    6. '.' → logprob: -17.475208282470703
    7. 'input' → logprob: -17.475208282470703
    8. '_' → logprob: -17.975208282470703
    9. '_input' → logprob: -18.225208282470703
    10. ':' → logprob: -18.350208282470703

Token 953: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.02060285210609436
    2. ' stdin' → logprob: -4.145602703094482
    3. 'input' → logprob: -5.520602703094482
    4. '(stdin' → logprob: -8.02060317993164
    5. ' input' → logprob: -8.52060317993164
    6. '.stdin' → logprob: -11.14560317993164
    7. 'std' → logprob: -11.89560317993164
    8. 'stdout' → logprob: -12.77060317993164
    9. 'stdio' → logprob: -14.77060317993164
    10. 'stderr' → logprob: -15.02060317993164

Token 954: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00012487331696320325
    2. '.' → logprob: -9.50012493133545
    3. '().' → logprob: -10.25012493133545
    4. '.read' → logprob: -11.37512493133545
    5. ' readline' → logprob: -14.00012493133545
    6. 'read' → logprob: -14.00012493133545
    7. '=' → logprob: -14.12512493133545
    8. '()' → logprob: -15.50012493133545
    9. '()
' → logprob: -16.375123977661133
    10. ' =' → logprob: -16.500123977661133

Token 955: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14854709804058075
    2. '().' → logprob: -2.0235471725463867
    3. '()
' → logprob: -5.148547172546387
    4. '(' → logprob: -11.273547172546387
    5. '.strip' → logprob: -11.648547172546387
    6. '()

' → logprob: -12.023547172546387
    7. '()\' → logprob: -12.398547172546387
    8. '   ' → logprob: -13.023547172546387
    9. '.rstrip' → logprob: -13.023547172546387
    10. '()
' → logprob: -13.023547172546387

Token 956: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17579063773155212
    2. '().' → logprob: -2.800790548324585
    3. '.strip' → logprob: -3.050790548324585
    4. '()' → logprob: -3.675790548324585
    5. '   ' → logprob: -4.800790786743164
    6. ' =' → logprob: -5.175790786743164
    7. '.rstrip' → logprob: -5.425790786743164
    8. '()
' → logprob: -5.550790786743164
    9. ' if' → logprob: -7.175790786743164
    10. 'rstrip' → logprob: -7.175790786743164

Token 957: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5762438774108887
    2. 'if' (adapté à ' if') → logprob: -0.8262438774108887
    3. '
' → logprob: -8.951244354248047
    4. '       ' → logprob: -9.451244354248047
    5. '   ' → logprob: -10.951244354248047
    6. '	if' → logprob: -11.076244354248047
    7. ' =' → logprob: -11.076244354248047
    8. '.strip' → logprob: -11.326244354248047
    9. 'strip' → logprob: -11.701244354248047
    10. '=' → logprob: -11.826244354248047

Token 958: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.009122769348323345
    2. 'not' → logprob: -4.759122848510742
    3. ' line' → logprob: -7.634122848510742
    4. 'line' → logprob: -10.634122848510742
    5. ' ' → logprob: -15.634122848510742
    6. '#line' → logprob: -17.009122848510742
    7. '	not' → logprob: -17.259122848510742
    8. '=line' → logprob: -17.884122848510742
    9. ' ' → logprob: -18.009122848510742
    10. '	line' → logprob: -18.759122848510742

Token 959: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.061967913061380386
    2. 'line' → logprob: -2.8119678497314453
    3. ' ' → logprob: -15.811967849731445
    4. '	line' → logprob: -16.561967849731445
    5. '(line' → logprob: -17.561967849731445
    6. '=line' → logprob: -17.811967849731445
    7. ' ' → logprob: -18.311967849731445
    8. ' ligne' → logprob: -18.561967849731445
    9. '   ' → logprob: -18.686967849731445
    10. '_line' → logprob: -19.936967849731445

Token 960: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6255941390991211
    2. ':
' → logprob: -1.250594139099121
    3. '.strip' → logprob: -1.750594139099121
    4. '.' → logprob: -5.875594139099121
    5. ' or' → logprob: -6.250594139099121
    6. '.rstrip' → logprob: -8.875594139099121
    7. '   ' → logprob: -9.500594139099121
    8. ':return' → logprob: -10.250594139099121
    9. '=' → logprob: -11.125594139099121
    10. 'strip' → logprob: -11.625594139099121

Token 961: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08260487020015717
    2. '       ' → logprob: -2.5826048851013184
    3. '   ' → logprob: -6.207604885101318
    4. ' break' → logprob: -7.582604885101318
    5. ':' → logprob: -7.957604885101318
    6. ' ' → logprob: -8.95760440826416
    7. ':
' → logprob: -9.08260440826416
    8. '	break' → logprob: -9.33260440826416
    9. ',' → logprob: -9.45760440826416
    10. 'break' → logprob: -9.58260440826416

Token 962: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.6945188045501709
    2. 'break' (adapté à ' break') → logprob: -1.069518804550171
    3. '           ' → logprob: -2.194518804550171
    4. '       ' → logprob: -3.319518804550171
    5. '	break' → logprob: -4.94451904296875
    6. 'return' → logprob: -6.56951904296875
    7. ' return' → logprob: -7.69451904296875
    8. '               ' → logprob: -8.19451904296875
    9. ' ' → logprob: -8.31951904296875
    10. '   ' → logprob: -8.81951904296875

Token 963: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017082560807466507
    2. '        
' → logprob: -6.751708030700684
    3. '   ' → logprob: -8.501708030700684
    4. '<|end|>' → logprob: -9.001708030700684
    5. ',' → logprob: -10.126708030700684
    6. '
' → logprob: -10.376708030700684
    7. '    
' → logprob: -10.626708030700684
    8. '	' → logprob: -10.626708030700684
    9. '  
' → logprob: -10.876708030700684
    10. '		
' → logprob: -11.501708030700684

Token 964: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005430232849903405
    2. '        
' → logprob: -8.125542640686035
    3. '   ' → logprob: -8.875542640686035
    4. ',' → logprob: -10.750542640686035
    5. ' line' → logprob: -10.750542640686035
    6. '
' → logprob: -12.250542640686035
    7. ' ' → logprob: -12.375542640686035
    8. '	' → logprob: -12.375542640686035
    9. 'tokens' → logprob: -12.375542640686035
    10. '           ' → logprob: -12.500542640686035

Token 965: ' parts' (ID: 7881)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.30983415246009827
    2. 'line' → logprob: -1.8098341226577759
    3. ' parts' → logprob: -3.3098342418670654
    4. 'n' → logprob: -4.059834003448486
    5. '       ' → logprob: -4.309834003448486
    6. ' n' → logprob: -4.684834003448486
    7. 'parts' (adapté à ' parts') → logprob: -4.809834003448486
    8. '   ' → logprob: -5.934834003448486
    9. ' data' → logprob: -6.184834003448486
    10. 'data' → logprob: -6.309834003448486

Token 966: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20144052803516388
    2. ' =' → logprob: -1.7014405727386475
    3. '=line' → logprob: -10.576440811157227
    4. '＝' → logprob: -14.451440811157227
    5. '   ' → logprob: -14.701440811157227
    6. 'tokens' → logprob: -16.076440811157227
    7. '=int' → logprob: -16.201440811157227
    8. '=[]' → logprob: -16.451440811157227
    9. ')' → logprob: -16.576440811157227
    10. '_tokens' → logprob: -16.701440811157227

Token 967: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0019293478690087795
    2. ' line' → logprob: -6.25192928314209
    3. 'list' → logprob: -14.50192928314209
    4. '[line' → logprob: -15.62692928314209
    5. '	line' → logprob: -18.251930236816406
    6. '   ' → logprob: -19.001930236816406
    7. '(line' → logprob: -19.251930236816406
    8. '[' → logprob: -19.376930236816406
    9. '#line' → logprob: -20.001930236816406
    10. '=line' → logprob: -20.001930236816406

Token 968: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.04319101199507713
    2. '.split' → logprob: -3.9181909561157227
    3. '=' → logprob: -4.918190956115723
    4. '().' → logprob: -4.918190956115723
    5. '.' → logprob: -5.418190956115723
    6. '.rstrip' → logprob: -5.918190956115723
    7. ' =' → logprob: -8.043190956115723
    8. '()' → logprob: -9.168190956115723
    9. 'split' → logprob: -9.793190956115723
    10. 'strip' → logprob: -10.043190956115723

Token 969: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00018220659694634378
    2. '()' → logprob: -8.625182151794434
    3. '.split' → logprob: -13.250182151794434
    4. '().'' → logprob: -15.375182151794434
    5. 'split' → logprob: -15.500182151794434
    6. '()==' → logprob: -16.25018310546875
    7. ' ().' → logprob: -16.62518310546875
    8. '('' → logprob: -16.87518310546875
    9. '()
' → logprob: -17.25018310546875
    10. '(' → logprob: -17.25018310546875

Token 970: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. ' split' → logprob: -16.375
    3. 'spl' → logprob: -17.875
    4. '(split' → logprob: -18.5
    5. 'strip' → logprob: -20.5
    6. 'rstrip' → logprob: -21.0
    7. '.split' → logprob: -21.625
    8. 'startswith' → logprob: -22.125
    9. 'sp' → logprob: -22.25
    10. '```' → logprob: -22.25

Token 971: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007395071908831596
    2. '()
' → logprob: -5.757395267486572
    3. '(' → logprob: -6.007395267486572
    4. '<|end|>' → logprob: -7.632395267486572
    5. '('' → logprob: -7.757395267486572
    6. '[' → logprob: -8.382394790649414
    7. '()[' → logprob: -9.507394790649414
    8. '       ' → logprob: -9.507394790649414
    9. '())' → logprob: -9.507394790649414
    10. '()>' → logprob: -9.632394790649414

Token 972: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0943603590130806
    2. ' if' → logprob: -2.7193603515625
    3. 'if' → logprob: -3.8443603515625
    4. '[' → logprob: -6.3443603515625
    5. '<|end|>' → logprob: -8.0943603515625
    6. '```' → logprob: -8.8443603515625
    7. ',' → logprob: -9.5943603515625
    8. '	if' → logprob: -9.7193603515625
    9. '{' → logprob: -9.9693603515625
    10. '        
' → logprob: -10.2193603515625

Token 973: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.035055432468652725
    2. 'n' → logprob: -3.91005539894104
    3. ' if' → logprob: -4.285055637359619
    4. '       ' → logprob: -7.660055637359619
    5. 'k' → logprob: -9.410055160522461
    6. 'r' → logprob: -11.035055160522461
    7. 'i' → logprob: -11.160055160522461
    8. 't' → logprob: -11.660055160522461
    9. '#' → logprob: -11.910055160522461
    10. ' n' → logprob: -12.160055160522461

Token 974: ' len' (ID: 4631)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.9614594578742981
    2. ' not' → logprob: -1.2114593982696533
    3. 'len' → logprob: -1.2114593982696533
    4. 'parts' → logprob: -4.086459636688232
    5. ' len' → logprob: -5.461459636688232
    6. ' parts' → logprob: -6.836459636688232
    7. '   ' → logprob: -11.336459159851074
    8. '(parts' → logprob: -12.586459159851074
    9. '!' → logprob: -12.836459159851074
    10. '(len' → logprob: -13.836459159851074

Token 975: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -7.982165698194876e-05
    2. 'parts' → logprob: -9.625080108642578
    3. '(' → logprob: -11.500080108642578
    4. '==' → logprob: -13.000080108642578
    5. ' parts' → logprob: -14.750080108642578
    6. ' (' → logprob: -15.875080108642578
    7. '=' → logprob: -15.875080108642578
    8. '()' → logprob: -16.000080108642578
    9. '(part' → logprob: -16.125080108642578
    10. ' ==' → logprob: -16.250080108642578

Token 976: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25476884841918945
    2. ' ==' → logprob: -1.5047688484191895
    3. ')==' → logprob: -6.7547688484191895
    4. ')' → logprob: -7.1297688484191895
    5. '<' → logprob: -7.7547688484191895
    6. '()==' → logprob: -8.004768371582031
    7. ' <' → logprob: -10.504768371582031
    8. '=' → logprob: -10.629768371582031
    9. '0' → logprob: -11.004768371582031
    10. '===' → logprob: -11.879768371582031

Token 977: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.021812545135617256
    2. ' ==' → logprob: -3.8968124389648438
    3. '<' → logprob: -6.771812438964844
    4. '!=' → logprob: -9.521812438964844
    5. '0' → logprob: -10.896812438964844
    6. '=' → logprob: -11.521812438964844
    7. '()==' → logprob: -12.021812438964844
    8. ' <' → logprob: -12.146812438964844
    9. ' !=' → logprob: -12.521812438964844
    10. '===' → logprob: -12.646812438964844

Token 978: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003246183041483164
    2. '1' → logprob: -8.250324249267578
    3. '2' → logprob: -10.500324249267578
    4. ' ' → logprob: -10.500324249267578
    5. '4' → logprob: -12.375324249267578
    6. '3' → logprob: -12.875324249267578
    7. '   ' → logprob: -14.625324249267578
    8. '5' → logprob: -14.937824249267578
    9. '6' → logprob: -15.812824249267578
    10. '```' → logprob: -15.875324249267578

Token 979: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001769616355886683
    2. '1' → logprob: -8.750177383422852
    3. '2' → logprob: -11.125177383422852
    4. ' ' → logprob: -13.250177383422852
    5. '3' → logprob: -14.000177383422852
    6. '4' → logprob: -14.250177383422852
    7. '   ' → logprob: -15.750177383422852
    8. '```' → logprob: -16.06267738342285
    9. '5' → logprob: -16.31267738342285
    10. '6' → logprob: -17.18767738342285

Token 980: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12661169469356537
    2. 'and' → logprob: -2.8766117095947266
    3. ':
' → logprob: -3.1266117095947266
    4. ':' → logprob: -4.126611709594727
    5. '           ' → logprob: -6.751611709594727
    6. '   ' → logprob: -7.126611709594727
    7. '       ' → logprob: -8.376611709594727
    8. ' ' → logprob: -8.751611709594727
    9. '	and' → logprob: -9.751611709594727
    10. '==' → logprob: -10.126611709594727

Token 981: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024963481351733208
    2. '   ' → logprob: -4.14996337890625
    3. '       ' → logprob: -5.39996337890625
    4. ' if' → logprob: -6.89996337890625
    5. 'break' → logprob: -7.14996337890625
    6. ' break' → logprob: -7.27496337890625
    7. ' ' → logprob: -7.39996337890625
    8. '		' → logprob: -8.27496337890625
    9. 'return' → logprob: -8.77496337890625
    10. ' return' → logprob: -9.52496337890625

Token 982: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.29608261585235596
    2. 'break' → logprob: -2.2960824966430664
    3. ' n' → logprob: -2.9210824966430664
    4. ' break' → logprob: -3.5460824966430664
    5. 'return' → logprob: -3.6710824966430664
    6. '   ' → logprob: -4.296082496643066
    7. 'N' → logprob: -5.046082496643066
    8. ' return' → logprob: -5.296082496643066
    9. 'continue' → logprob: -5.421082496643066
    10. 'if' → logprob: -5.671082496643066

Token 983: ' fin' (ID: 2131)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0747644454240799
    2. 'if' → logprob: -3.8247644901275635
    3. 'N' → logprob: -4.324764251708984
    4. 'k' → logprob: -4.824764251708984
    5. 'continue' → logprob: -4.824764251708984
    6. 'return' → logprob: -5.074764251708984
    7. 'break' → logprob: -5.824764251708984
    8. 'size' → logprob: -5.949764251708984
    9. 'val' → logprob: -6.449764251708984
    10. '#' → logprob: -6.699764251708984

Token 984: ' d' (ID: 272)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0024223909713327885
    2. '               ' → logprob: -6.877422332763672
    3. '       ' → logprob: -7.627422332763672
    4. '
' → logprob: -8.002422332763672
    5. '		' → logprob: -8.502422332763672
    6. 'break' → logprob: -9.627422332763672
    7. '   ' → logprob: -10.002422332763672
    8. '=' → logprob: -10.252422332763672
    9. ' =' → logprob: -10.877422332763672
    10. '          ' → logprob: -11.002422332763672

Token 985: ''entrée' (ID: 115820)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7075070738792419
    2. ''entrée' → logprob: -0.7075070738792419
    3. 'entrée' → logprob: -5.082507133483887
    4. 'input' → logprob: -5.582507133483887
    5. 'u' → logprob: -5.957507133483887
    6. 'es' → logprob: -7.957507133483887
    7. '_input' → logprob: -8.457507133483887
    8. ''' → logprob: -8.832507133483887
    9. '’entrée' → logprob: -9.082507133483887
    10. ''ex' → logprob: -9.207507133483887

Token 986: ' si' (ID: 1784)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011378349736332893
    2. '       ' → logprob: -7.626137733459473
    3. '               ' → logprob: -8.376137733459473
    4. '		' → logprob: -8.626137733459473
    5. 'break' → logprob: -9.251137733459473
    6. '   ' → logprob: -9.876137733459473
    7. 'return' → logprob: -10.251137733459473
    8. ',' → logprob: -11.376137733459473
    9. ' break' → logprob: -11.501137733459473
    10. '          ' → logprob: -12.001137733459473

Token 987: ' ce' (ID: 2357)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.018210463225841522
    2. ' parts' → logprob: -4.018210411071777
    3. 'int' → logprob: -10.143210411071777
    4. 'line' → logprob: -11.143210411071777
    5. '(parts' → logprob: -12.518210411071777
    6. ' int' → logprob: -14.143210411071777
    7. 'not' → logprob: -14.143210411071777
    8. 'part' → logprob: -14.518210411071777
    9. ' line' → logprob: -14.893210411071777
    10. ' not' → logprob: -15.018210411071777

Token 988: ' nombre' (ID: 9733)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.17519819736480713
    2. ' parts' → logprob: -1.9251981973648071
    3. '(parts' → logprob: -4.800198078155518
    4. '[' → logprob: -5.550198078155518
    5. 'u' → logprob: -7.175198078155518
    6. ' line' → logprob: -7.425198078155518
    7. 'line' → logprob: -8.050198554992676
    8. 'lines' → logprob: -8.675198554992676
    9. 'part' → logprob: -8.675198554992676
    10. 'len' → logprob: -9.050198554992676

Token 989: ' >' (ID: 1424)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6374897360801697
    2. ' ==' → logprob: -0.7624897360801697
    3. 'int' → logprob: -5.6374897956848145
    4. '=' → logprob: -8.012489318847656
    5. '0' → logprob: -8.137489318847656
    6. '=int' → logprob: -8.637489318847656
    7. '[' → logprob: -8.887489318847656
    8. '<=' → logprob: -9.387489318847656
    9. '()==' → logprob: -9.512489318847656
    10. '[int' → logprob: -9.887489318847656

Token 990: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05145520344376564
    2. ' ' → logprob: -3.92645525932312
    3. 'int' → logprob: -4.426455020904541
    4. '=' → logprob: -4.426455020904541
    5. '1' → logprob: -5.676455020904541
    6. ' int' → logprob: -6.551455020904541
    7. '==' → logprob: -8.3014554977417
    8. '=int' → logprob: -8.5514554977417
    9. '100' → logprob: -8.5514554977417
    10. ' ==' → logprob: -9.3014554977417

Token 991: '4' (ID: 19)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018346363678574562
    2. '100' → logprob: -4.643346309661865
    3. '1' → logprob: -5.143346309661865
    4. ' ' → logprob: -6.268346309661865
    5. '=' → logprob: -8.393346786499023
    6. '10' → logprob: -8.893346786499023
    7. '500' → logprob: -9.268346786499023
    8. 'int' → logprob: -9.393346786499023
    9. '999' → logprob: -10.268346786499023
    10. '50' → logprob: -10.393346786499023

Token 992: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.18574902415275574
    2. 'and' → logprob: -1.8107490539550781
    3. '           ' → logprob: -5.810749053955078
    4. '               ' → logprob: -6.560749053955078
    5. ':' → logprob: -7.185749053955078
    6. '0' → logprob: -7.935749053955078
    7. ':
' → logprob: -8.435749053955078
    8. '>' → logprob: -9.310749053955078
    9. '<=' → logprob: -10.435749053955078
    10. ' <=' → logprob: -10.810749053955078

Token 993: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010257100686430931
    2. '               ' → logprob: -5.010257244110107
    3. ' and' → logprob: -6.510257244110107
    4. ',' → logprob: -7.260257244110107
    5. ' if' → logprob: -7.510257244110107
    6. ':' → logprob: -7.760257244110107
    7. '       ' → logprob: -8.88525676727295
    8. ' or' → logprob: -9.63525676727295
    9. '   ' → logprob: -10.38525676727295
    10. '		' → logprob: -11.01025676727295

Token 994: ' x' (ID: 1215)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.21975603699684143
    2. 'if' → logprob: -1.844756007194519
    3. 'num' → logprob: -3.7197561264038086
    4. '           ' → logprob: -4.844756126403809
    5. 'k' → logprob: -5.594756126403809
    6. ' if' → logprob: -6.844756126403809
    7. ' n' → logprob: -7.469756126403809
    8. 'count' → logprob: -8.219756126403809
    9. 'number' → logprob: -8.219756126403809
    10. 'nb' → logprob: -8.344756126403809

Token 995: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10570104420185089
    2. '=' → logprob: -2.855700969696045
    3. '=int' → logprob: -3.230700969696045
    4. '>' → logprob: -6.605700969696045
    5. 'int' → logprob: -7.480700969696045
    6. ' >' → logprob: -7.605700969696045
    7. '[' → logprob: -8.230701446533203
    8. '[int' → logprob: -8.480701446533203
    9. '_int' → logprob: -8.855701446533203
    10. '_val' → logprob: -9.980701446533203

Token 996: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -9.088346359931165e-07
    2. ' int' → logprob: -14.000000953674316
    3. '4' → logprob: -18.0
    4. 'len' → logprob: -21.25
    5. 'ints' → logprob: -22.625
    6. 'float' → logprob: -22.75
    7. '(int' → logprob: -23.25
    8. ' ' → logprob: -23.5
    9. '	int' → logprob: -23.5
    10. '[int' → logprob: -23.625

Token 997: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.0011720098555088043
    2. 'parts' → logprob: -6.751172065734863
    3. '(line' → logprob: -14.126172065734863
    4. ' parts' → logprob: -14.501172065734863
    5. '(' → logprob: -15.251172065734863
    6. '(part' → logprob: -15.501172065734863
    7. '(x' → logprob: -16.001171112060547
    8. 'line' → logprob: -17.501171112060547
    9. 'x' → logprob: -18.126171112060547
    10. '(
' → logprob: -18.251171112060547

Token 998: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.7755875129951164e-05
    2. '(' → logprob: -10.87504768371582
    3. '()[' → logprob: -11.00004768371582
    4. '0' → logprob: -11.62504768371582
    5. ')' → logprob: -12.87504768371582
    6. ' [' → logprob: -16.00004768371582
    7. '()' → logprob: -16.37504768371582
    8. '[-' → logprob: -16.37504768371582
    9. '   ' → logprob: -17.00004768371582
    10. '1' → logprob: -17.12504768371582

Token 999: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. '-' → logprob: -15.375
    3. ' ' → logprob: -16.0
    4. '1' → logprob: -17.125
    5. '
' → logprob: -17.375
    6. '[' → logprob: -17.75
    7. '۰' → logprob: -18.5
    8. '   ' → logprob: -19.0
    9. 'x' → logprob: -19.375
    10. '```' → logprob: -19.5

Token 1000: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1603710651397705
    2. ')
' → logprob: -1.9103710651397705
    3. '])' → logprob: -9.785370826721191
    4. '])
' → logprob: -10.910370826721191
    5. ' )' → logprob: -11.035370826721191
    6. ')>' → logprob: -11.410370826721191
    7. '))' → logprob: -11.535370826721191
    8. '))
' → logprob: -11.910370826721191
    9. ' )
' → logprob: -12.035370826721191
    10. ')
' → logprob: -12.410370826721191

Token 1001: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26617223024368286
    2. '       ' → logprob: -1.516172170639038
    3. ' if' → logprob: -4.891172409057617
    4. 'if' → logprob: -5.516172409057617
    5. '<|end|>' → logprob: -6.766172409057617
    6. '```' → logprob: -7.391172409057617
    7. '               ' → logprob: -7.766172409057617
    8. '   ' → logprob: -8.766172409057617
    9. '	       ' → logprob: -9.641172409057617
    10. '<|end|>' → logprob: -10.516172409057617

Token 1002: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12391101568937302
    2. '           ' → logprob: -2.623910903930664
    3. ' if' → logprob: -3.123910903930664
    4. '       ' → logprob: -10.873910903930664
    5. 'break' → logprob: -11.873910903930664
    6. '	if' → logprob: -11.998910903930664
    7. '   ' → logprob: -12.748910903930664
    8. '		' → logprob: -13.998910903930664
    9. '               ' → logprob: -14.123910903930664
    10. '	       ' → logprob: -14.373910903930664

Token 1003: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.029750604182481766
    2. ' x' → logprob: -3.5297505855560303
    3. '   ' → logprob: -16.77975082397461
    4. '	x' → logprob: -18.40475082397461
    5. '       ' → logprob: -20.27975082397461
    6. '           ' → logprob: -20.27975082397461
    7. '>x' → logprob: -20.90475082397461
    8. '(x' → logprob: -21.15475082397461
    9. '>' → logprob: -21.77975082397461
    10. ' ' → logprob: -22.15475082397461

Token 1004: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5765427947044373
    2. '>' → logprob: -0.8265427947044373
    3. ' <=' → logprob: -7.701542854309082
    4. '<=' → logprob: -9.451542854309082
    5. ' >=' → logprob: -11.451542854309082
    6. ')' → logprob: -11.451542854309082
    7. ' ==' → logprob: -11.701542854309082
    8. ' ' → logprob: -11.826542854309082
    9. '   ' → logprob: -12.076542854309082
    10. ' <' → logprob: -12.201542854309082

Token 1005: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00012356207298580557
    2. ' ' → logprob: -9.000123977661133
    3. '' → logprob: -17.500123977661133
    4. '  ' → logprob: -18.625123977661133
    5. '0' → logprob: -18.875123977661133
    6. '   ' → logprob: -19.000123977661133
    7. '=' → logprob: -19.000123977661133
    8. '3' → logprob: -19.375123977661133
    9. '۴' → logprob: -19.375123977661133
    10. '٤' → logprob: -19.437623977661133

Token 1006: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '' → logprob: -17.000003814697266
    4. '0' → logprob: -18.875003814697266
    5. '٤' → logprob: -19.250003814697266
    6. '۴' → logprob: -19.375003814697266
    7. '
' → logprob: -19.500003814697266
    8. '  ' → logprob: -19.937503814697266
    9. '5' → logprob: -20.250003814697266
    10. '   ' → logprob: -20.375003814697266

Token 1007: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7067251801490784
    2. ':
' → logprob: -0.7067251801490784
    3. '           ' → logprob: -4.331725120544434
    4. '):
' → logprob: -8.956725120544434
    5. ':return' → logprob: -9.206725120544434
    6. '       ' → logprob: -9.706725120544434
    7. '():
' → logprob: -11.456725120544434
    8. '   ' → logprob: -11.831725120544434
    9. '):' → logprob: -11.956725120544434
    10. ')' → logprob: -12.581725120544434

Token 1008: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04869262874126434
    2. '           ' → logprob: -3.0486927032470703
    3. '	           ' → logprob: -10.54869270324707
    4. '                   ' → logprob: -11.04869270324707
    5. '```' → logprob: -11.42369270324707
    6. '	       ' → logprob: -11.54869270324707
    7. 'break' → logprob: -12.04869270324707
    8. '       ' → logprob: -12.04869270324707
    9. '   ' → logprob: -12.29869270324707
    10. '<|end|>' → logprob: -12.42369270324707

Token 1009: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.024793600663542747
    2. 'return' → logprob: -4.77479362487793
    3. ' break' → logprob: -4.77479362487793
    4. '           ' → logprob: -5.27479362487793
    5. '               ' → logprob: -6.02479362487793
    6. ' return' → logprob: -9.89979362487793
    7. '	break' → logprob: -11.27479362487793
    8. '                   ' → logprob: -11.89979362487793
    9. '
' → logprob: -14.14979362487793
    10. '```' → logprob: -14.64979362487793

Token 1010: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28419703245162964
    2. '           ' → logprob: -1.4091970920562744
    3. '<|end|>' → logprob: -6.659196853637695
    4. '
' → logprob: -7.784196853637695
    5. 'continue' → logprob: -7.909196853637695
    6. '        
' → logprob: -9.034196853637695
    7. '   ' → logprob: -9.159196853637695
    8. '		' → logprob: -9.284196853637695
    9. '	' → logprob: -9.409196853637695
    10. '```' → logprob: -9.659196853637695

Token 1011: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002282764995470643
    2. '           ' → logprob: -6.627282619476318
    3. '	' → logprob: -8.127283096313477
    4. 'continue' → logprob: -8.252283096313477
    5. '<|end|>' → logprob: -9.377283096313477
    6. '        
' → logprob: -9.627283096313477
    7. '   ' → logprob: -9.752283096313477
    8. ' continue' → logprob: -10.377283096313477
    9. '
' → logprob: -10.752283096313477
    10. '```' → logprob: -10.877283096313477

Token 1012: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06002836674451828
    2. 'continue' → logprob: -3.060028314590454
    3. 'n' → logprob: -6.310028553009033
    4. 'positions' → logprob: -6.310028553009033
    5. 'relative' → logprob: -6.685028553009033
    6. '#' → logprob: -6.810028553009033
    7. '        
' → logprob: -7.185028553009033
    8. '           ' → logprob: -7.435028553009033
    9. 'rel' → logprob: -7.810028553009033
    10. 'else' (adapté à ' else') → logprob: -7.935028553009033

Token 1013: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03820638731122017
    2. ':
' → logprob: -3.2882063388824463
    3. ' :' → logprob: -9.413206100463867
    4. '           ' → logprob: -10.538206100463867
    5. '               ' → logprob: -11.288206100463867
    6. ':return' → logprob: -11.538206100463867
    7. ' :
' → logprob: -11.788206100463867
    8. 'continue' → logprob: -12.288206100463867
    9. '       ' → logprob: -12.413206100463867
    10. ' continue' → logprob: -12.413206100463867

Token 1014: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5885621309280396
    2. 'continue' → logprob: -1.0885621309280396
    3. '       ' → logprob: -2.83856201171875
    4. ' continue' → logprob: -4.21356201171875
    5. '	       ' → logprob: -4.46356201171875
    6. '               ' → logprob: -4.58856201171875
    7. '   ' → logprob: -4.96356201171875
    8. 'return' → logprob: -6.58856201171875
    9. '	continue' → logprob: -6.96356201171875
    10. '	' → logprob: -7.46356201171875

Token 1015: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.08859401196241379
    2. 'relative' → logprob: -3.3385939598083496
    3. ' continue' → logprob: -3.7135939598083496
    4. '               ' → logprob: -4.08859395980835
    5. '   ' → logprob: -5.71359395980835
    6. '#' (adapté à ' #') → logprob: -6.58859395980835
    7. '           ' → logprob: -6.96359395980835
    8. ' relative' → logprob: -7.08859395980835
    9. 'return' → logprob: -7.71359395980835
    10. 'pass' → logprob: -8.213594436645508

Token 1016: ' inval' (ID: 114516)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7005985379219055
    2. 'relative' → logprob: -1.0755984783172607
    3. ' continue' → logprob: -2.7005984783172607
    4. '#' → logprob: -2.9505984783172607
    5. ' relative' → logprob: -3.8255984783172607
    6. '           ' → logprob: -5.07559871673584
    7. 'positions' → logprob: -5.45059871673584
    8. 'rel' → logprob: -6.20059871673584
    9. 'n' → logprob: -6.32559871673584
    10. '       ' → logprob: -6.82559871673584

Token 1017: 'ide' (ID: 617)
  Prédit: 'ide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.14413206279277802
    2. 'id' → logprob: -2.019132137298584
    3. 'idé' → logprob: -7.269132137298584
    4. ' ' → logprob: -8.644131660461426
    5. 'i' → logprob: -8.769131660461426
    6. 'ider' → logprob: -9.269131660461426
    7. '   ' → logprob: -9.269131660461426
    8. 'idable' → logprob: -9.894131660461426
    9. 'idité' → logprob: -10.019131660461426
    10. ' id' → logprob: -11.269131660461426

Token 1018: ' (' (ID: 350)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.8582260608673096
    2. 'continue' → logprob: -0.9832260608673096
    3. '           ' → logprob: -2.2332260608673096
    4. '       ' → logprob: -2.8582260608673096
    5. '
' → logprob: -4.2332258224487305
    6. '	continue' → logprob: -4.7332258224487305
    7. '\n' → logprob: -5.2332258224487305
    8. '               ' → logprob: -5.4832258224487305
    9. '   ' → logprob: -6.8582258224487305
    10. '_continue' → logprob: -7.2332258224487305

Token 1019: 'pas' (ID: 21122)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.39300233125686646
    2. ' continue' → logprob: -1.7680022716522217
    3. ')' → logprob: -1.8930022716522217
    4. 'pass' → logprob: -6.768002510070801
    5. '   ' → logprob: -7.268002510070801
    6. '       ' → logprob: -8.0180025100708
    7. ' pass' → logprob: -8.2680025100708
    8. '	continue' → logprob: -8.3930025100708
    9. '           ' → logprob: -8.6430025100708
    10. '#' → logprob: -8.7680025100708

Token 1020: ' dans' (ID: 2671)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -1.0235456228256226
    2. 'de' → logprob: -1.2735456228256226
    3. ' de' → logprob: -1.5235456228256226
    4. ' possible' → logprob: -2.273545742034912
    5. 'd' → logprob: -5.023545742034912
    6. ' d' → logprob: -5.148545742034912
    7. ')' → logprob: -5.648545742034912
    8. 'com' → logprob: -5.773545742034912
    9. 'valid' → logprob: -6.148545742034912
    10. 's' → logprob: -6.773545742034912

Token 1021: ' l' (ID: 305)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.1808953285217285
    2. '[' → logprob: -1.5558953285217285
    3. 'le' → logprob: -1.5558953285217285
    4. ' range' → logprob: -2.0558953285217285
    5. 'la' → logprob: -3.5558953285217285
    6. '4' → logprob: -3.6808953285217285
    7. '(' → logprob: -3.8058953285217285
    8. ' la' → logprob: -4.1808953285217285
    9. ' le' → logprob: -4.4308953285217285
    10. '{' → logprob: -4.5558953285217285

Token 1022: ''' (ID: 6)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6111291646957397
    2. 'range' → logprob: -1.2361291646957397
    3. 'e' → logprob: -2.1111292839050293
    4. 'if' → logprob: -3.7361292839050293
    5. ')' → logprob: -5.611129283905029
    6. 'x' → logprob: -5.986129283905029
    7. 'et' → logprob: -6.361129283905029
    8. '#' → logprob: -6.611129283905029
    9. ' if' → logprob: -6.861129283905029
    10. 'input' → logprob: -6.986129283905029

Token 1023: 'én' (ID: 3289)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8223418593406677
    2. 'board' → logprob: -1.5723419189453125
    3. 'input' → logprob: -1.9473419189453125
    4. 'interval' → logprob: -2.4473419189453125
    5. 'entrée' → logprob: -2.9473419189453125
    6. 'ensemble' → logprob: -3.1973419189453125
    7. 'e' → logprob: -5.5723419189453125
    8. '#' → logprob: -5.6973419189453125
    9. 'é' → logprob: -5.8223419189453125
    10. 'expected' → logprob: -6.4473419189453125

Token 1024: 'oncé' (ID: 59071)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7063764929771423
    2. 'tré' → logprob: -1.831376552581787
    3. 'um' → logprob: -2.706376552581787
    4. 'tre' → logprob: -2.831376552581787
    5. 'oncé' → logprob: -2.831376552581787
    6. 'tr' → logprob: -2.956376552581787
    7. 'umer' → logprob: -3.456376552581787
    8. 'try' → logprob: -4.081376552581787
    9. 'entrée' → logprob: -4.206376552581787
    10. 'trer' → logprob: -4.456376552581787

Token 1025: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02078990824520588
    2. ')
' → logprob: -3.895789861679077
    3. 'continue' → logprob: -9.520790100097656
    4. '),' → logprob: -9.895790100097656
    5. ' )' → logprob: -10.395790100097656
    6. ' continue' → logprob: -10.895790100097656
    7. '):
' → logprob: -11.145790100097656
    8. '           ' → logprob: -11.895790100097656
    9. ')\' → logprob: -12.145790100097656
    10. '):' → logprob: -12.270790100097656

Token 1026: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06786854565143585
    2. '           ' → logprob: -3.06786847114563
    3. 'continue' → logprob: -4.442868709564209
    4. ' continue' → logprob: -5.192868709564209
    5. '   ' → logprob: -7.442868709564209
    6. '       ' → logprob: -7.442868709564209
    7. '```' → logprob: -8.06786823272705
    8. '                   ' → logprob: -10.06786823272705
    9. '\n' → logprob: -10.19286823272705
    10. '	continue' → logprob: -10.69286823272705

Token 1027: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.01638834923505783
    2. '               ' → logprob: -4.766388416290283
    3. ' continue' → logprob: -5.016388416290283
    4. '           ' → logprob: -6.891388416290283
    5. '	continue' → logprob: -10.016387939453125
    6. 'pass' → logprob: -11.016387939453125
    7. '   ' → logprob: -11.141387939453125
    8. '```' → logprob: -11.766387939453125
    9. '       ' → logprob: -11.891387939453125
    10. 'return' → logprob: -12.766387939453125

Token 1028: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02296648919582367
    2. '<|end|>' → logprob: -3.8979663848876953
    3. '
' → logprob: -6.397966384887695
    4. '        
' → logprob: -8.022966384887695
    5. '<|end|>' → logprob: -8.897966384887695
    6. '	' → logprob: -9.022966384887695
    7. 'continue' → logprob: -10.272966384887695
    8. '   ' → logprob: -10.522966384887695
    9. '```' → logprob: -11.022966384887695
    10. ')' → logprob: -11.272966384887695

Token 1029: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06385599821805954
    2. '<|end|>' → logprob: -2.8138558864593506
    3. '        
' → logprob: -7.56385612487793
    4. '```' → logprob: -7.81385612487793
    5. '<|end|>' → logprob: -8.43885612487793
    6. '	' → logprob: -8.68885612487793
    7. ')' → logprob: -8.81385612487793
    8. '   ' → logprob: -9.43885612487793
    9. '
' → logprob: -9.43885612487793
    10. '...' → logprob: -10.43885612487793

Token 1030: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1263000965118408
    2. '       ' → logprob: -1.2513000965118408
    3. 'x' → logprob: -2.501300096511841
    4. 'positions' → logprob: -2.751300096511841
    5. 'rel' → logprob: -3.376300096511841
    6. 'dx' → logprob: -3.501300096511841
    7. 'pairs' → logprob: -3.501300096511841
    8. '#' (adapté à ' #') → logprob: -3.626300096511841
    9. 'num' → logprob: -4.001299858093262
    10. 'relative' → logprob: -4.001299858093262

Token 1031: ' lire' (ID: 46082)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5355639457702637
    2. 'k' → logprob: -1.6605639457702637
    3. 'm' → logprob: -2.9105639457702637
    4. 'relative' → logprob: -2.9105639457702637
    5. 'num' → logprob: -3.5355639457702637
    6. 'x' → logprob: -4.160563945770264
    7. 'rel' → logprob: -4.910563945770264
    8. 'count' → logprob: -5.035563945770264
    9. 'dx' → logprob: -5.035563945770264
    10. 'r' → logprob: -5.035563945770264

Token 1032: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4070340394973755
    2. ' n' → logprob: -2.657033920288086
    3. 'l' → logprob: -2.907033920288086
    4. 'positions' → logprob: -3.157033920288086
    5. 'k' → logprob: -3.532033920288086
    6. 'relative' → logprob: -3.782033920288086
    7. ' positions' → logprob: -4.407033920288086
    8. 'x' → logprob: -4.782033920288086
    9. ' relative' → logprob: -5.032033920288086
    10. '   ' → logprob: -5.032033920288086

Token 1033: '8' (ID: 23)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8794592022895813
    2. 'positions' → logprob: -1.7544591426849365
    3. 'relative' → logprob: -1.8794591426849365
    4. 'x' → logprob: -3.0044591426849365
    5. 'pairs' → logprob: -3.0044591426849365
    6. 'k' → logprob: -3.3794591426849365
    7. 'l' → logprob: -3.5044591426849365
    8. 'rel' → logprob: -3.8794591426849365
    9. 'dx' → logprob: -4.504459381103516
    10. '4' → logprob: -4.629459381103516

Token 1034: ' ent' (ID: 1121)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.7936912775039673
    2. 'pairs' → logprob: -1.0436912775039673
    3. ' pairs' → logprob: -2.7936911582946777
    4. 'tokens' → logprob: -3.0436911582946777
    5. ' positions' → logprob: -3.6686911582946777
    6. 'values' → logprob: -4.043691158294678
    7. ' integers' → logprob: -4.418691158294678
    8. ' tokens' → logprob: -5.543691158294678
    9. 'numbers' → logprob: -5.543691158294678
    10. '<|end|>' → logprob: -6.293691158294678

Token 1035: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -6.158350151963532e-05
    2. 'ières' → logprob: -10.000061988830566
    3. 'ers' → logprob: -11.625061988830566
    4. 'i' → logprob: -13.250061988830566
    5. 'ités' → logprob: -13.500061988830566
    6. 'ries' → logprob: -14.000061988830566
    7. 'ier' → logprob: -14.125061988830566
    8. 's' → logprob: -14.250061988830566
    9. '```' → logprob: -15.125061988830566
    10. 'ieres' → logprob: -15.125061988830566

Token 1036: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5640835165977478
    2. ' =' → logprob: -1.0640835762023926
    3. ',' → logprob: -3.6890835762023926
    4. '=' → logprob: -3.8140835762023926
    5. ':' → logprob: -3.9390835762023926
    6. '[' → logprob: -5.689083576202393
    7. '        ' → logprob: -7.189083576202393
    8. '        
' → logprob: -7.189083576202393
    9. '	' → logprob: -7.314083576202393
    10. 's' → logprob: -7.314083576202393

Token 1037: ' ' (ID: 220)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5020427703857422
    2. ' list' → logprob: -1.6270427703857422
    3. 'positions' → logprob: -2.752042770385742
    4. 'int' → logprob: -3.127042770385742
    5. 'ints' → logprob: -3.252042770385742
    6. ' positions' → logprob: -4.752042770385742
    7. 'pairs' → logprob: -4.877042770385742
    8. '[int' → logprob: -5.252042770385742
    9. ' parts' → logprob: -5.377042770385742
    10. ' int' → logprob: -5.502042770385742

Token 1038: '4' (ID: 19)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.038240697234869
    2. 'positions' → logprob: -3.913240671157837
    3. 'relative' → logprob: -5.413240909576416
    4. 'ints' → logprob: -5.788240909576416
    5. 'parts' → logprob: -6.038240909576416
    6. 'int' → logprob: -6.038240909576416
    7. 'pairs' → logprob: -6.413240909576416
    8. '[int' → logprob: -6.788240909576416
    9. ' list' → logprob: -7.038240909576416
    10. '[' → logprob: -7.788240909576416

Token 1039: ' positions' (ID: 15897)
  Prédit: ' pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -0.4080713987350464
    2. 'pairs' → logprob: -1.1580713987350464
    3. 'positions' → logprob: -4.783071517944336
    4. ' positions' → logprob: -5.908071517944336
    5. ' tuples' → logprob: -6.033071517944336
    6. '_pairs' → logprob: -6.033071517944336
    7. ' couples' → logprob: -6.533071517944336
    8. ' p' → logprob: -6.908071517944336
    9. '<|end|>' → logprob: -8.033071517944336
    10. ' lines' → logprob: -8.533071517944336

Token 1040: ' relatives' (ID: 40618)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36435773968696594
    2. ' =' → logprob: -1.6143577098846436
    3. ',' → logprob: -2.7393577098846436
    4. '=' → logprob: -4.989357948303223
    5. 'positions' → logprob: -4.989357948303223
    6. ' ,' → logprob: -5.739357948303223
    7. '_positions' → logprob: -5.739357948303223
    8. ' (' → logprob: -6.239357948303223
    9. ' positions' → logprob: -6.364357948303223
    10. ':' → logprob: -6.614357948303223

Token 1041: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19093406200408936
    2. ' relative' → logprob: -3.190934181213379
    3. 'relative' → logprob: -3.440934181213379
    4. ' rel' → logprob: -3.565934181213379
    5. 'rel' → logprob: -3.815934181213379
    6. 'rels' → logprob: -4.315934181213379
    7. ',' → logprob: -4.315934181213379
    8. '	' → logprob: -4.815934181213379
    9. '(relative' → logprob: -6.190934181213379
    10. '(rel' → logprob: -6.565934181213379

Token 1042: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11676838994026184
    2. 'relative' → logprob: -3.4917683601379395
    3. 'rel' → logprob: -3.8667683601379395
    4. '	' → logprob: -3.9917683601379395
    5. ',' → logprob: -4.4917683601379395
    6. 'rels' → logprob: -4.8667683601379395
    7. ' relative' → logprob: -4.9917683601379395
    8. ' rel' → logprob: -5.7417683601379395
    9. '```' → logprob: -5.8667683601379395
    10. '(relative' → logprob: -6.1167683601379395

Token 1043: ' if' (ID: 538)
  Prédit: 'relative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'relative' → logprob: -0.8098674416542053
    2. 'rels' → logprob: -1.1848673820495605
    3. 'rel' → logprob: -1.4348673820495605
    4. '       ' → logprob: -5.5598673820495605
    5. ' relative' → logprob: -6.3098673820495605
    6. 'dx' → logprob: -6.4348673820495605
    7. 'reld' → logprob: -6.6848673820495605
    8. ' rel' → logprob: -7.0598673820495605
    9. 'relations' → logprob: -7.8098673820495605
    10. 'r' → logprob: -7.9348673820495605

Token 1044: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0009158630855381489
    2. ' len' → logprob: -7.000916004180908
    3. '(len' → logprob: -13.12591552734375
    4. '=len' → logprob: -13.75091552734375
    5. '	len' → logprob: -14.50091552734375
    6. 'True' → logprob: -14.87591552734375
    7. '       ' → logprob: -16.25091552734375
    8. '[len' → logprob: -16.50091552734375
    9. 'parts' → logprob: -16.50091552734375
    10. ',len' → logprob: -17.00091552734375

Token 1045: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -3.8889261304575484e-06
    2. 'parts' → logprob: -12.625003814697266
    3. ' parts' → logprob: -14.625003814697266
    4. '(' → logprob: -17.250003814697266
    5. '=' → logprob: -18.000003814697266
    6. ' (' → logprob: -18.500003814697266
    7. '(part' → logprob: -18.875003814697266
    8. '(tokens' → logprob: -20.125003814697266
    9. '(points' → logprob: -20.250003814697266
    10. '   ' → logprob: -20.375003814697266

Token 1046: ')' (ID: 8)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5674135684967041
    2. '!=' → logprob: -2.067413568496704
    3. ')' → logprob: -2.192413568496704
    4. ' ==' → logprob: -2.317413568496704
    5. '==' → logprob: -2.442413568496704
    6. ' <' → logprob: -5.692413330078125
    7. '<' → logprob: -6.067413330078125
    8. '=' → logprob: -6.942413330078125
    9. ')!=' → logprob: -7.442413330078125
    10. '()!=' → logprob: -7.692413330078125

Token 1047: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.29484787583351135
    2. ' ==' → logprob: -1.419847846031189
    3. ' !=' → logprob: -5.0448479652404785
    4. '!=' → logprob: -5.1698479652404785
    5. '<' → logprob: -7.2948479652404785
    6. '=' → logprob: -8.66984748840332
    7. '   ' → logprob: -8.66984748840332
    8. '{' → logprob: -9.79484748840332
    9. '<|end|>' → logprob: -9.79484748840332
    10. ')==' → logprob: -10.29484748840332

Token 1048: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.37501335144043
    3. '9' → logprob: -14.25001335144043
    4. '4' → logprob: -15.00001335144043
    5. 'eight' → logprob: -16.31251335144043
    6. '۸' → logprob: -17.25001335144043
    7. '８' → logprob: -17.31251335144043
    8. '```' → logprob: -17.37501335144043
    9. '10' → logprob: -17.56251335144043
    10. '   ' → logprob: -17.75001335144043

Token 1049: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -5.319370302458992e-06
    2. ' ' → logprob: -12.625005722045898
    3. '9' → logprob: -14.312505722045898
    4. '4' → logprob: -15.750005722045898
    5. 'eight' → logprob: -15.875005722045898
    6. '৮' → logprob: -16.3125057220459
    7. '۸' → logprob: -16.3750057220459
    8. '८' → logprob: -16.4375057220459
    9. '٨' → logprob: -16.5625057220459
    10. '８' → logprob: -16.7500057220459

Token 1050: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05608897656202316
    2. ':
' → logprob: -2.931088924407959
    3. '           ' → logprob: -6.931088924407959
    4. '       ' → logprob: -9.556089401245117
    5. ' or' → logprob: -10.056089401245117
    6. ':return' → logprob: -10.056089401245117
    7. ' :' → logprob: -10.931089401245117
    8. ' continue' → logprob: -12.056089401245117
    9. 'continue' → logprob: -12.306089401245117
    10. '	continue' → logprob: -12.306089401245117

Token 1051: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0033529745414853096
    2. '       ' → logprob: -6.003353118896484
    3. ' continue' → logprob: -7.878353118896484
    4. '	       ' → logprob: -8.878353118896484
    5. 'continue' → logprob: -9.128353118896484
    6. '		' → logprob: -9.753353118896484
    7. ',' → logprob: -10.003353118896484
    8. '   ' → logprob: -10.253353118896484
    9. ' return' → logprob: -10.378353118896484
    10. '	   ' → logprob: -10.878353118896484

Token 1052: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.1973714530467987
    2. '           ' → logprob: -2.197371482849121
    3. ' continue' → logprob: -2.697371482849121
    4. '       ' → logprob: -7.947371482849121
    5. '	continue' → logprob: -8.572371482849121
    6. '   ' → logprob: -10.322371482849121
    7. 'return' → logprob: -10.697371482849121
    8. '               ' → logprob: -10.697371482849121
    9. '```' → logprob: -11.822371482849121
    10. '		' → logprob: -12.447371482849121

Token 1053: ' inval' (ID: 114516)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.005280365236103535
    2. ' continue' → logprob: -5.255280494689941
    3. '       ' → logprob: -10.505280494689941
    4. 'return' → logprob: -11.505280494689941
    5. '           ' → logprob: -12.130280494689941
    6. '	continue' → logprob: -13.005280494689941
    7. 'continu' → logprob: -14.255280494689941
    8. '               ' → logprob: -15.505280494689941
    9. 'contin' → logprob: -15.505280494689941
    10. '   ' → logprob: -15.755280494689941

Token 1054: 'ide' (ID: 617)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.5361111760139465
    2. 'ide' → logprob: -1.4111111164093018
    3. 'alid' → logprob: -2.4111111164093018
    4. '   ' → logprob: -3.9111111164093018
    5. 'a' → logprob: -4.161111354827881
    6. 'i' → logprob: -4.411111354827881
    7. 'al' → logprob: -5.036111354827881
    8. ')' → logprob: -5.411111354827881
    9. ' ' → logprob: -5.661111354827881
    10. 'idable' → logprob: -6.036111354827881

Token 1055: ' ou' (ID: 2031)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05332132801413536
    2. 'continue' → logprob: -3.678321361541748
    3. ' continue' → logprob: -4.053321361541748
    4. '       ' → logprob: -5.053321361541748
    5. '	continue' → logprob: -6.928321361541748
    6. '               ' → logprob: -7.303321361541748
    7. '   ' → logprob: -7.803321361541748
    8. '
' → logprob: -8.05332088470459
    9. '		' → logprob: -8.42832088470459
    10. ',' → logprob: -9.05332088470459

Token 1056: ' fin' (ID: 2131)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.0728209912776947
    2. ' continue' → logprob: -2.8228209018707275
    3. 'contin' → logprob: -4.697821140289307
    4. ' continuer' → logprob: -6.697821140289307
    5. 'continu' → logprob: -8.697820663452148
    6. 'pass' → logprob: -8.947820663452148
    7. '#' → logprob: -9.572820663452148
    8. ' continu' → logprob: -11.197820663452148
    9. 'continued' → logprob: -11.447820663452148
    10. 'cont' → logprob: -11.572820663452148

Token 1057: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.41635796427726746
    2. '       ' → logprob: -1.7913579940795898
    3. '<|end|>' → logprob: -2.04135799407959
    4. '
' → logprob: -4.66635799407959
    5. '               ' → logprob: -5.29135799407959
    6. 'return' → logprob: -5.66635799407959
    7. ' ' → logprob: -5.79135799407959
    8. '   ' → logprob: -5.79135799407959
    9. '<|end|>' → logprob: -6.16635799407959
    10. '\n' → logprob: -6.66635799407959

Token 1058: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01684805192053318
    2. 'continue' → logprob: -4.391848087310791
    3. ' continue' → logprob: -5.766848087310791
    4. '               ' → logprob: -7.391848087310791
    5. '```' → logprob: -8.391847610473633
    6. '       ' → logprob: -8.516847610473633
    7. '	continue' → logprob: -9.641847610473633
    8. '_continue' → logprob: -10.766847610473633
    9. '		' → logprob: -10.891847610473633
    10. '   ' → logprob: -11.141847610473633

Token 1059: ' break' (ID: 2338)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.035888671875
    2. '           ' → logprob: -3.535888671875
    3. 'return' → logprob: -5.785888671875
    4. ' continue' → logprob: -6.285888671875
    5. 'break' (adapté à ' break') → logprob: -6.785888671875
    6. '	continue' → logprob: -10.785888671875
    7. '       ' → logprob: -10.785888671875
    8. '```' → logprob: -12.035888671875
    9. '               ' → logprob: -12.285888671875
    10. '		' → logprob: -13.160888671875

Token 1060: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06938426941633224
    2. '        
' → logprob: -2.8193843364715576
    3. '
' → logprob: -5.3193840980529785
    4. '		
' → logprob: -6.9443840980529785
    5. '	' → logprob: -7.9443840980529785
    6. '   ' → logprob: -8.069384574890137
    7. '            
' → logprob: -8.819384574890137
    8. '    
' → logprob: -9.194384574890137
    9. 'relative' → logprob: -9.444384574890137
    10. '           ' → logprob: -9.944384574890137

Token 1061: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2141796201467514
    2. '       ' → logprob: -1.8391796350479126
    3. '    
' → logprob: -4.089179515838623
    4. '        
' → logprob: -4.964179515838623
    5. '```' → logprob: -5.089179515838623
    6. 'relative' → logprob: -6.839179515838623
    7. '	' → logprob: -7.839179515838623
    8. '  
' → logprob: -8.089179992675781
    9. '
' → logprob: -8.089179992675781
    10. ' relative' → logprob: -8.714179992675781

Token 1062: ' relative' (ID: 15001)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03819813206791878
    2. 'relative' (adapté à ' relative') → logprob: -3.538198232650757
    3. 'rels' → logprob: -6.038197994232178
    4. 'rel' → logprob: -6.038197994232178
    5. '	' → logprob: -6.788197994232178
    6. '   ' → logprob: -6.913197994232178
    7. ' relative' → logprob: -7.038197994232178
    8. '        
' → logprob: -7.663197994232178
    9. '
' → logprob: -10.163198471069336
    10. '	   ' → logprob: -10.913198471069336

Token 1063: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -2.4034345187828876e-05
    2. 'positions' → logprob: -11.62502384185791
    3. '=' → logprob: -11.87502384185791
    4. 's' → logprob: -13.00002384185791
    5. ' =' → logprob: -13.00002384185791
    6. '=_' → logprob: -13.50002384185791
    7. '_' → logprob: -14.37502384185791
    8. '_pos' → logprob: -15.12502384185791
    9. '   ' → logprob: -15.50002384185791
    10. '_vectors' → logprob: -15.87502384185791

Token 1064: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693661451339722
    2. '=' → logprob: -2.126936674118042
    3. '=[]' → logprob: -12.251936912536621
    4. '=[' → logprob: -13.001936912536621
    5. '   ' → logprob: -14.001936912536621
    6. ' =[' → logprob: -14.876936912536621
    7. '=[]
' → logprob: -15.376936912536621
    8. '[' → logprob: -17.001935958862305
    9. '	' → logprob: -17.626935958862305
    10. '[:]' → logprob: -17.876935958862305

Token 1065: ' []
' (ID: 8911)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.003953848034143448
    2. '[]
' → logprob: -5.75395393371582
    3. '[' → logprob: -7.50395393371582
    4. '[]' → logprob: -8.50395393371582
    5. '[
' → logprob: -11.00395393371582
    6. '[((' → logprob: -12.50395393371582
    7. ' [(' → logprob: -13.50395393371582
    8. '[]

' → logprob: -15.00395393371582
    9. '[list' → logprob: -16.37895393371582
    10. '[int' → logprob: -16.50395393371582

Token 1066: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6004562377929688
    2. ' for' → logprob: -0.8504562377929688
    3. '	for' → logprob: -4.600456237792969
    4. '.append' → logprob: -4.975456237792969
    5. '       ' → logprob: -5.850456237792969
    6. '   ' → logprob: -6.475456237792969
    7. '[' → logprob: -6.850456237792969
    8. '[
' → logprob: -7.100456237792969
    9. '[(' → logprob: -7.600456237792969
    10. ' =' → logprob: -8.600456237792969

Token 1067: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0041067772544920444
    2. ' for' → logprob: -5.5041069984436035
    3. '	for' → logprob: -10.629106521606445
    4. '       ' → logprob: -13.254106521606445
    5. '   ' → logprob: -13.629106521606445
    6. 'i' → logprob: -13.879106521606445
    7. '
' → logprob: -17.129106521606445
    8. '```' → logprob: -17.254106521606445
    9. '\t' → logprob: -17.629106521606445
    10. ' i' → logprob: -17.879106521606445

Token 1068: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.584861744660884e-05
    2. ' i' → logprob: -10.000045776367188
    3. '_i' → logprob: -14.875045776367188
    4. '	i' → logprob: -17.375045776367188
    5. 'idx' → logprob: -19.125045776367188
    6. 'k' → logprob: -19.125045776367188
    7. '_' → logprob: -20.125045776367188
    8. '   ' → logprob: -22.250045776367188
    9. 'j' → logprob: -22.250045776367188
    10. '(i' → logprob: -22.375045776367188

Token 1069: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0297810360789299
    2. 'in' → logprob: -3.5297811031341553
    3. '	in' → logprob: -11.029781341552734
    4. 'import' → logprob: -13.404781341552734
    5. 'i' → logprob: -13.529781341552734
    6. '=' → logprob: -13.654781341552734
    7. ' ' → logprob: -13.654781341552734
    8. '0' → logprob: -13.779781341552734
    9. ' i' → logprob: -13.779781341552734
    10. '   ' → logprob: -14.029781341552734

Token 1070: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.615255839889869e-05
    2. ' range' → logprob: -9.250096321105957
    3. '	range' → logprob: -20.12509536743164
    4. '0' → logprob: -21.00009536743164
    5. '[' → logprob: -21.12509536743164
    6. '(range' → logprob: -22.00009536743164
    7. '   ' → logprob: -23.75009536743164
    8. 'rang' → logprob: -23.87509536743164
    9. ' ' → logprob: -24.25009536743164
    10. '  ' → logprob: -24.75009536743164

Token 1071: '(' (ID: 7)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.4840923249721527
    2. '0' → logprob: -0.9840923547744751
    3. '(' → logprob: -4.6090922355651855
    4. ' ' → logprob: -12.359092712402344
    5. '   ' → logprob: -17.359092712402344
    6. '1' → logprob: -18.109092712402344
    7. '(len' → logprob: -18.109092712402344
    8. '8' → logprob: -18.234092712402344
    9. '04' → logprob: -18.609092712402344
    10. '2' → logprob: -18.734092712402344

Token 1072: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10020817816257477
    2. '4' → logprob: -2.350208282470703
    3. ' ' → logprob: -13.850208282470703
    4. '8' → logprob: -15.725208282470703
    5. 'len' → logprob: -15.975208282470703
    6. '1' → logprob: -17.412708282470703
    7. '   ' → logprob: -17.475208282470703
    8. '2' → logprob: -17.662708282470703
    9. '(' → logprob: -17.850208282470703
    10. '-' → logprob: -18.350208282470703

Token 1073: ',' (ID: 11)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22192393243312836
    2. '4' → logprob: -1.9719239473342896
    3. '8' → logprob: -2.846923828125
    4. ' ' → logprob: -6.971923828125
    5. '(' → logprob: -7.471923828125
    6. ',' → logprob: -8.596923828125
    7. '   ' → logprob: -9.346923828125
    8. '7' → logprob: -11.471923828125
    9. '       ' → logprob: -11.846923828125
    10. '	' → logprob: -12.471923828125

Token 1074: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.9385402993066236e-05
    2. ' ' → logprob: -10.875019073486328
    3. 'len' → logprob: -14.875019073486328
    4. ' len' → logprob: -17.750019073486328
    5. '   ' → logprob: -18.250019073486328
    6. '۸' → logprob: -18.375019073486328
    7. '８' → logprob: -18.875019073486328
    8. '٨' → logprob: -19.000019073486328
    9. '८' → logprob: -19.125019073486328
    10. '6' → logprob: -19.125019073486328

Token 1075: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.1517960956552997e-05
    2. 'len' → logprob: -11.750011444091797
    3. ' ' → logprob: -12.625011444091797
    4. ' len' → logprob: -15.250011444091797
    5. '4' → logprob: -17.375011444091797
    6. '８' → logprob: -18.437511444091797
    7. '۸' → logprob: -18.625011444091797
    8. '6' → logprob: -18.937511444091797
    9. '7' → logprob: -19.187511444091797
    10. '   ' → logprob: -19.187511444091797

Token 1076: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.56102097814437e-05
    2. ' ,' → logprob: -10.000045776367188
    3. ',
' → logprob: -16.500045776367188
    4. ':' → logprob: -17.250045776367188
    5. '):
' → logprob: -17.500045776367188
    6. ',i' → logprob: -17.625045776367188
    7. '   ' → logprob: -18.000045776367188
    8. '```' → logprob: -18.125045776367188
    9. '2' → logprob: -18.875045776367188
    10. ' ' → logprob: -19.000045776367188

Token 1077: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '1' → logprob: -18.375059127807617
    4. '   ' → logprob: -18.750059127807617
    5. '２' → logprob: -20.125059127807617
    6. ')' → logprob: -20.750059127807617
    7. '۲' → logprob: -21.125059127807617
    8. '```' → logprob: -21.125059127807617
    9. '4' → logprob: -21.250059127807617
    10. '3' → logprob: -21.500059127807617

Token 1078: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '1' → logprob: -16.875001907348633
    4. '۲' → logprob: -18.750001907348633
    5. '２' → logprob: -19.375001907348633
    6. '```' → logprob: -20.000001907348633
    7. '   ' → logprob: -20.687501907348633
    8. ')' → logprob: -21.000001907348633
    9. '4' → logprob: -21.062501907348633
    10. '3' → logprob: -21.187501907348633

Token 1079: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.013254698365926743
    2. '):' → logprob: -4.388254642486572
    3. ':
' → logprob: -8.01325511932373
    4. ',' → logprob: -8.88825511932373
    5. ':' → logprob: -9.38825511932373
    6. '           ' → logprob: -9.76325511932373
    7. '       ' → logprob: -10.38825511932373
    8. '):
' → logprob: -10.51325511932373
    9. ')' → logprob: -10.63825511932373
    10. '   ' → logprob: -11.01325511932373

Token 1080: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1540576070547104
    2. '	       ' → logprob: -2.154057502746582
    3. ' relative' → logprob: -4.904057502746582
    4. '    	   ' → logprob: -4.904057502746582
    5. 'relative' → logprob: -5.654057502746582
    6. '    	' → logprob: -5.654057502746582
    7. '	   ' → logprob: -6.154057502746582
    8. '	           ' → logprob: -7.029057502746582
    9. '		   ' → logprob: -7.404057502746582
    10. '(relative' → logprob: -8.529057502746582

Token 1081: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' (adapté à ' dx') → logprob: -0.8714628219604492
    2. '           ' → logprob: -1.4964628219604492
    3. ' dx' → logprob: -1.4964628219604492
    4. 'rel' → logprob: -2.996462821960449
    5. 'relative' → logprob: -2.996462821960449
    6. ' rel' → logprob: -4.121462821960449
    7. ' relative' → logprob: -4.246462821960449
    8. '   ' → logprob: -6.496462821960449
    9. '               ' → logprob: -7.996462821960449
    10. '	       ' → logprob: -8.49646282196045

Token 1082: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22939050197601318
    2. ',' → logprob: -1.7293905019760132
    3. ' =' → logprob: -3.6043906211853027
    4. '=int' → logprob: -8.229390144348145
    5. ' ,' → logprob: -9.729390144348145
    6. ',int' → logprob: -11.354390144348145
    7. '=
' → logprob: -11.354390144348145
    8. '           ' → logprob: -11.854390144348145
    9. '   ' → logprob: -12.729390144348145
    10. '=

' → logprob: -12.729390144348145

Token 1083: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.200166469876422e-06
    2. ' int' → logprob: -12.250004768371582
    3. '[int' → logprob: -15.625004768371582
    4. '<int' → logprob: -16.5000057220459
    5. '=int' → logprob: -17.0000057220459
    6. '(int' → logprob: -19.3750057220459
    7. ']int' → logprob: -19.5000057220459
    8. '	int' → logprob: -20.1250057220459
    9. ':int' → logprob: -20.8750057220459
    10. '   ' → logprob: -21.5000057220459

Token 1084: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.02979503758251667
    2. 'parts' → logprob: -3.529794931411743
    3. ' parts' → logprob: -10.029794692993164
    4. '(' → logprob: -15.904794692993164
    5. '_parts' → logprob: -16.029794692993164
    6. ')' → logprob: -16.404794692993164
    7. '(part' → logprob: -16.404794692993164
    8. '(
' → logprob: -17.029794692993164
    9. '.parts' → logprob: -17.904794692993164
    10. 'part' → logprob: -18.279794692993164

Token 1085: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -13.875000953674316
    3. 'i' → logprob: -15.375000953674316
    4. ' [' → logprob: -18.500001907348633
    5. '(i' → logprob: -18.500001907348633
    6. '[
' → logprob: -19.000001907348633
    7. '{i' → logprob: -19.000001907348633
    8. '   ' → logprob: -19.375001907348633
    9. '```' → logprob: -19.500001907348633
    10. ')' → logprob: -19.625001907348633

Token 1086: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.7331963181495667
    2. '])
' → logprob: -0.7331963181495667
    3. ')' → logprob: -3.608196258544922
    4. ')
' → logprob: -4.608196258544922
    5. '           ' → logprob: -7.483196258544922
    6. '+' → logprob: -7.858196258544922
    7. ' ])
' → logprob: -8.233196258544922
    8. ']' → logprob: -8.983196258544922
    9. ' ])' → logprob: -8.983196258544922
    10. ' )' → logprob: -8.983196258544922

Token 1087: '           ' (ID: 352)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7300707697868347
    2. '           ' → logprob: -0.7300707697868347
    3. '<|end|>' → logprob: -4.1050705909729
    4. '            
' → logprob: -5.3550705909729
    5. '<|end|>' → logprob: -5.8550705909729
    6. 'dx' → logprob: -6.1050705909729
    7. ' ,' → logprob: -6.2300705909729
    8. '            ' → logprob: -6.8550705909729
    9. '		' → logprob: -7.1050705909729
    10. ' dx' → logprob: -7.4800705909729

Token 1088: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' (adapté à ' dy') → logprob: -0.005247748922556639
    2. ' dy' → logprob: -5.255247592926025
    3. '           ' → logprob: -11.255248069763184
    4. '       ' → logprob: -14.380248069763184
    5. '        ' → logprob: -16.255247116088867
    6. '   ' → logprob: -16.505247116088867
    7. '          ' → logprob: -16.505247116088867
    8. '            ' → logprob: -17.005247116088867
    9. '
' → logprob: -17.005247116088867
    10. '.dy' → logprob: -17.130247116088867

Token 1089: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5807355642318726
    2. ' =' → logprob: -1.2057355642318726
    3. ')' → logprob: -2.330735683441162
    4. '<|end|>' → logprob: -3.455735683441162
    5. '=int' → logprob: -4.955735683441162
    6. '<|end|>' → logprob: -6.080735683441162
    7. ',' → logprob: -6.705735683441162
    8. ')=' → logprob: -7.080735683441162
    9. '=
' → logprob: -8.830735206604004
    10. '           ' → logprob: -9.080735206604004

Token 1090: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.392202976712724e-06
    2. ' int' → logprob: -12.000006675720215
    3. '<int' → logprob: -16.5000057220459
    4. '[int' → logprob: -17.3750057220459
    5. '(int' → logprob: -17.8750057220459
    6. '=int' → logprob: -18.6250057220459
    7. ':int' → logprob: -20.7500057220459
    8. 'ints' → logprob: -21.1250057220459
    9. ']int' → logprob: -21.3750057220459
    10. '	int' → logprob: -22.0000057220459

Token 1091: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.0033976484555751085
    2. 'int' → logprob: -6.378397464752197
    3. 'parts' → logprob: -7.003397464752197
    4. '[int' → logprob: -7.378397464752197
    5. ' parts' → logprob: -9.628397941589355
    6. '[' → logprob: -9.628397941589355
    7. '(int' → logprob: -10.628397941589355
    8. ')' → logprob: -13.878397941589355
    9. '.parts' → logprob: -14.253397941589355
    10. '(part' → logprob: -14.753397941589355

Token 1092: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.338466093642637e-05
    2. '[j' → logprob: -10.000073432922363
    3. 'i' → logprob: -11.125073432922363
    4. '[' → logprob: -11.750073432922363
    5. '(i' → logprob: -13.000073432922363
    6. '{i' → logprob: -13.750073432922363
    7. ']' → logprob: -14.000073432922363
    8. '])' → logprob: -14.000073432922363
    9. '[
' → logprob: -17.000072479248047
    10. '+' → logprob: -17.375072479248047

Token 1093: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0018679486820474267
    2. '+i' → logprob: -6.376867771148682
    3. ' +' → logprob: -9.62686824798584
    4. '])' → logprob: -9.75186824798584
    5. 'i' → logprob: -10.50186824798584
    6. '+j' → logprob: -11.50186824798584
    7. '+
' → logprob: -13.87686824798584
    8. '[i' → logprob: -13.87686824798584
    9. '])
' → logprob: -14.25186824798584
    10. '2' → logprob: -14.87686824798584

Token 1094: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -15.000000953674316
    3. '2' → logprob: -15.125000953674316
    4. '0' → logprob: -16.5
    5. 'i' → logprob: -17.0
    6. '```' → logprob: -17.625
    7. '１' → logprob: -18.9375
    8. '   ' → logprob: -19.1875
    9. '3' → logprob: -20.0
    10. '+' → logprob: -20.0625

Token 1095: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025525618344545364
    2. ')
' → logprob: -3.7755255699157715
    3. '])' → logprob: -6.4005255699157715
    4. '])
' → logprob: -7.5255255699157715
    5. ')]' → logprob: -10.15052604675293
    6. ']' → logprob: -11.90052604675293
    7. ')])' → logprob: -12.52552604675293
    8. ')`
' → logprob: -12.52552604675293
    9. ')
' → logprob: -12.65052604675293
    10. ')]
' → logprob: -12.77552604675293

Token 1096: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029230695217847824
    2. '       ' → logprob: -4.40423059463501
    3. '	       ' → logprob: -4.90423059463501
    4. '	   ' → logprob: -5.90423059463501
    5. '   ' → logprob: -6.40423059463501
    6. ' relative' → logprob: -7.02923059463501
    7. '(relative' → logprob: -7.15423059463501
    8. 'relative' → logprob: -7.27923059463501
    9. ',' → logprob: -7.40423059463501
    10. '    	   ' → logprob: -8.529231071472168

Token 1097: ' relative' (ID: 15001)
  Prédit: 'relative'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'relative' (adapté à ' relative') → logprob: -0.09728796035051346
    2. '           ' → logprob: -2.472287893295288
    3. ' relative' → logprob: -4.847288131713867
    4. '   ' → logprob: -8.347288131713867
    5. '       ' → logprob: -9.597288131713867
    6. '		' → logprob: -9.847288131713867
    7. 'if' → logprob: -10.722288131713867
    8. '               ' → logprob: -11.097288131713867
    9. '(relative' → logprob: -11.222288131713867
    10. 'rel' → logprob: -11.472288131713867

Token 1098: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -5.2166411478538066e-05
    2. 'positions' → logprob: -10.000052452087402
    3. 'Positions' → logprob: -12.625052452087402
    4. ')_' → logprob: -14.500052452087402
    5. '```' → logprob: -14.500052452087402
    6. '_' → logprob: -14.750052452087402
    7. ' positions' → logprob: -14.750052452087402
    8. '   ' → logprob: -15.500052452087402
    9. '.positions' → logprob: -15.500052452087402
    10. 's' → logprob: -15.750052452087402

Token 1099: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0016937461914494634
    2. ' =' → logprob: -7.1266937255859375
    3. '.' → logprob: -7.7516937255859375
    4. '=' → logprob: -8.751693725585938
    5. ' .' → logprob: -9.251693725585938
    6. ').' → logprob: -9.501693725585938
    7. ')' → logprob: -9.501693725585938
    8. '.extend' → logprob: -10.501693725585938
    9. '   ' → logprob: -11.126693725585938
    10. 'append' → logprob: -12.001693725585938

Token 1100: '((' (ID: 2054)
  Prédit: '(dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dx' → logprob: -0.035574302077293396
    2. ' (' → logprob: -3.535574197769165
    3. '(' → logprob: -5.160574436187744
    4. '((' → logprob: -9.785573959350586
    5. '(dp' → logprob: -13.410573959350586
    6. '(x' → logprob: -13.410573959350586
    7. '(dl' → logprob: -13.410573959350586
    8. '(nx' → logprob: -13.410573959350586
    9. '(delta' → logprob: -14.035573959350586
    10. '(d' → logprob: -14.410573959350586

Token 1101: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -8.180258191714529e-06
    2. ' dx' → logprob: -11.750008583068848
    3. '(dx' → logprob: -15.375008583068848
    4. '_dx' → logprob: -17.25000762939453
    5. '   ' → logprob: -17.62500762939453
    6. ' ' → logprob: -18.75000762939453
    7. '.dx' → logprob: -19.00000762939453
    8. ')' → logprob: -19.62500762939453
    9. 'Dx' → logprob: -20.00000762939453
    10. '
' → logprob: -20.12500762939453

Token 1102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004697595722973347
    2. ' ,' → logprob: -5.379697799682617
    3. ',d' → logprob: -10.004697799682617
    4. '<|end|>' → logprob: -11.254697799682617
    5. ',
' → logprob: -11.754697799682617
    6. ',y' → logprob: -12.504697799682617
    7. ')' → logprob: -13.129697799682617
    8. ' ,
' → logprob: -14.004697799682617
    9. '‌,' → logprob: -14.129697799682617
    10. ',)' → logprob: -14.254697799682617

Token 1103: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.00038014890742488205
    2. ' dy' → logprob: -7.875380039215088
    3. '.dy' → logprob: -18.37537956237793
    4. '   ' → logprob: -18.87537956237793
    5. 'dx' → logprob: -18.87537956237793
    6. 'Dy' → logprob: -19.62537956237793
    7. 'dym' → logprob: -20.12537956237793
    8. ' ' → logprob: -20.25037956237793
    9. 'ddy' → logprob: -20.50037956237793
    10. 'd' → logprob: -20.87537956237793

Token 1104: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013011827832087874
    2. '))' → logprob: -9.000129699707031
    3. ')
' → logprob: -12.375129699707031
    4. ' )' → logprob: -13.750129699707031
    5. ')}' → logprob: -13.875129699707031
    6. '   ' → logprob: -15.625129699707031
    7. ')))' → logprob: -15.750129699707031
    8. ')}}' → logprob: -16.87512969970703
    9. ')]' → logprob: -17.12512969970703
    10. ')#' → logprob: -17.37512969970703

Token 1105: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30337801575660706
    2. '<|end|>' → logprob: -1.4283779859542847
    3. '        
' → logprob: -4.428378105163574
    4. '
' → logprob: -5.303378105163574
    5. '<|end|>' → logprob: -6.553378105163574
    6. '   ' → logprob: -7.053378105163574
    7. ')' → logprob: -7.428378105163574
    8. '```' → logprob: -7.553378105163574
    9. '#' → logprob: -8.178378105163574
    10. '		
' → logprob: -9.053378105163574

Token 1106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.159849613904953
    2. 'positions' → logprob: -3.0348496437072754
    3. 'results' → logprob: -3.7848496437072754
    4. '   ' → logprob: -4.284849643707275
    5. '```' → logprob: -4.534849643707275
    6. '
' → logprob: -4.534849643707275
    7. 'pairs' → logprob: -4.659849643707275
    8. '        
' → logprob: -4.784849643707275
    9. 'result' → logprob: -5.034849643707275
    10. ' positions' → logprob: -5.659849643707275

Token 1107: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.2784534692764282
    2. 'pos' → logprob: -1.4034534692764282
    3. 'positions' → logprob: -1.6534534692764282
    4. 'pairs' → logprob: -2.7784533500671387
    5. 'possible' → logprob: -2.9034533500671387
    6. 'all' → logprob: -3.0284533500671387
    7. 'result' → logprob: -3.9034533500671387
    8. 'valid' → logprob: -4.278453350067139
    9. 'results' → logprob: -4.278453350067139
    10. '       ' → logprob: -4.653453350067139

Token 1108: ' On' (ID: 2160)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.085559368133545
    2. 'pos' → logprob: -1.085559368133545
    3. '#' → logprob: -1.585559368133545
    4. 'positions' → logprob: -2.585559368133545
    5. 'possible' → logprob: -4.460559368133545
    6. 'valid' → logprob: -4.960559368133545
    7. 'for' → logprob: -5.085559368133545
    8. 'available' → logprob: -5.835559368133545
    9. 'pairs' → logprob: -5.960559368133545
    10. 'full' → logprob: -5.960559368133545

Token 1109: ' doit' (ID: 21822)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.02435302734375
    2. 'continue' → logprob: -1.02435302734375
    3. '#' → logprob: -1.64935302734375
    4. ' continue' → logprob: -3.02435302734375
    5. 'pos' → logprob: -4.14935302734375
    6. ' #' → logprob: -4.39935302734375
    7. '   ' → logprob: -5.39935302734375
    8. 'contin' → logprob: -6.39935302734375
    9. '```' → logprob: -6.89935302734375
    10. 'def' → logprob: -7.02435302734375

Token 1110: ' compter' (ID: 81694)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6044570803642273
    2. '   ' → logprob: -2.479457139968872
    3. '       ' → logprob: -2.604457139968872
    4. 'contin' → logprob: -2.854457139968872
    5. 'print' → logprob: -3.229457139968872
    6. 'calcul' → logprob: -3.229457139968872
    7. 'chercher' → logprob: -3.604457139968872
    8. 'tr' → logprob: -3.854457139968872
    9. 'voir' → logprob: -3.979457139968872
    10. 'try' → logprob: -4.729456901550293

Token 1111: ' le' (ID: 505)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.760313868522644
    2. '#' → logprob: -1.510313868522644
    3. 'pos' → logprob: -2.0103139877319336
    4. 'positions' → logprob: -2.5103139877319336
    5. 'pairs' → logprob: -3.3853139877319336
    6. ' all' → logprob: -4.635313987731934
    7. 'result' → logprob: -5.010313987731934
    8. 'les' → logprob: -5.260313987731934
    9. 'def' → logprob: -5.510313987731934
    10. 'patterns' → logprob: -5.760313987731934

Token 1112: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.008023575879633427
    2. 'number' → logprob: -5.508023738861084
    3. '#' → logprob: -6.133023738861084
    4. 'total' → logprob: -6.758023738861084
    5. ' nombre' → logprob: -8.008023262023926
    6. 'nb' → logprob: -8.758023262023926
    7. 'maximum' → logprob: -10.633023262023926
    8. 'n' → logprob: -11.008023262023926
    9. 'nbr' → logprob: -11.133023262023926
    10. 'num' → logprob: -11.508023262023926

Token 1113: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7488030791282654
    2. '_' → logprob: -1.8738031387329102
    3. '_d' → logprob: -2.12380313873291
    4. '_total' → logprob: -2.74880313873291
    5. '_de' → logprob: -2.87380313873291
    6. ' d' → logprob: -3.24880313873291
    7. 'de' → logprob: -3.49880313873291
    8. 'total' → logprob: -3.62380313873291
    9. '#' → logprob: -4.74880313873291
    10. '_des' → logprob: -4.87380313873291

Token 1114: ' arrangements' (ID: 34602)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.5042026042938232
    2. 'match' → logprob: -1.8792026042938232
    3. 'pattern' → logprob: -2.8792026042938232
    4. 'pair' → logprob: -3.1292026042938232
    5. ' match' → logprob: -3.8792026042938232
    6. 'par' → logprob: -4.129202842712402
    7. 'app' → logprob: -4.129202842712402
    8. ' patterns' → logprob: -4.254202842712402
    9. 'positions' → logprob: -4.379202842712402
    10. '#' → logprob: -4.504202842712402

Token 1115: ' correspond' (ID: 11095)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02507348731160164
    2. '        
' → logprob: -3.900073528289795
    3. 'pos' → logprob: -6.775073528289795
    4. '#' → logprob: -7.650073528289795
    5. '   ' → logprob: -7.900073528289795
    6. ',' → logprob: -7.900073528289795
    7. 'possible' → logprob: -7.900073528289795
    8. 'positions' → logprob: -8.150073051452637
    9. 'total' → logprob: -9.025073051452637
    10. ' (' → logprob: -9.275073051452637

Token 1116: 'ants' (ID: 2027)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.002473635831847787
    2. 'ants' → logprob: -6.502473831176758
    3. ' à' → logprob: -7.877473831176758
    4. 'ent' → logprob: -9.127473831176758
    5. 'aux' → logprob: -9.627473831176758
    6. 'à' → logprob: -9.877473831176758
    7. 'ance' → logprob: -10.002473831176758
    8. 'au' → logprob: -10.127473831176758
    9. '#' → logprob: -10.252473831176758
    10. 'u' → logprob: -10.627473831176758

Token 1117: ' par' (ID: 686)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020169740542769432
    2. '        
' → logprob: -4.020169734954834
    3. 'pos' → logprob: -7.020169734954834
    4. '#' → logprob: -7.770169734954834
    5. 'positions' → logprob: -8.770170211791992
    6. '```' → logprob: -9.145170211791992
    7. '   ' → logprob: -9.520170211791992
    8. 'def' → logprob: -9.645170211791992
    9. '
' → logprob: -10.270170211791992
    10. '<|end|>' → logprob: -10.270170211791992

Token 1118: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.9236504435539246
    2. 'fait' → logprob: -2.0486505031585693
    3. 'pas' → logprob: -2.5486505031585693
    4. 'faite' → logprob: -3.4236505031585693
    5. 'pair' → logprob: -3.7986505031585693
    6. 'print' → logprob: -3.7986505031585693
    7. '```' → logprob: -3.9236505031585693
    8. '#' → logprob: -4.17365026473999
    9. 'rapport' → logprob: -4.17365026473999
    10. 'faire' → logprob: -4.29865026473999

Token 1119: ' distinct' (ID: 16913)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006251203827559948
    2. '        
' → logprob: -5.131251335144043
    3. ',' → logprob: -9.256251335144043
    4. '
' → logprob: -10.131251335144043
    5. '   ' → logprob: -10.256251335144043
    6. 'pos' → logprob: -10.756251335144043
    7. 'positions' → logprob: -10.881251335144043
    8. '<|end|>' → logprob: -11.006251335144043
    9. '#' → logprob: -11.381251335144043
    10. '       
' → logprob: -11.756251335144043

Token 1120: 's' (ID: 82)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0242154560983181
    2. '        
' → logprob: -4.024215221405029
    3. ',' → logprob: -6.899215221405029
    4. 'pos' → logprob: -7.024215221405029
    5. 'positions' → logprob: -7.024215221405029
    6. '```' → logprob: -7.274215221405029
    7. '.' → logprob: -7.524215221405029
    8. '
' → logprob: -7.774215221405029
    9. '   ' → logprob: -8.024215698242188
    10. 'et' → logprob: -8.899215698242188

Token 1121: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021054097451269627
    2. '        
' → logprob: -6.252105236053467
    3. 'pos' → logprob: -9.877105712890625
    4. 'positions' → logprob: -10.502105712890625
    5. '
' → logprob: -10.752105712890625
    6. '#' → logprob: -11.252105712890625
    7. '```' → logprob: -11.252105712890625
    8. ',' → logprob: -12.127105712890625
    9. '   ' → logprob: -12.127105712890625
    10. 'all' → logprob: -12.502105712890625

Token 1122: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009597073309123516
    2. '        
' → logprob: -4.884597301483154
    3. '```' → logprob: -7.259597301483154
    4. '
' → logprob: -7.509597301483154
    5. ',' → logprob: -8.509596824645996
    6. '   ' → logprob: -9.384596824645996
    7. 'pos' → logprob: -9.509596824645996
    8. 'positions' → logprob: -9.634596824645996
    9. '  
' → logprob: -9.884596824645996
    10. '#' → logprob: -10.384596824645996

Token 1123: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7874118089675903
    2. 'pos' → logprob: -1.0374118089675903
    3. 'all' → logprob: -2.662411689758301
    4. 'positions' → logprob: -3.412411689758301
    5. '        
' → logprob: -3.662411689758301
    6. '#' (adapté à ' #') → logprob: -3.787411689758301
    7. ' pos' → logprob: -4.287411689758301
    8. ' positions' → logprob: -4.912411689758301
    9. ' all' → logprob: -5.537411689758301
    10. '
' → logprob: -5.662411689758301

Token 1124: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4929499924182892
    2. 'pos' → logprob: -0.9929499626159668
    3. '        
' → logprob: -5.242949962615967
    4. '#' → logprob: -5.367949962615967
    5. 'positions' → logprob: -5.992949962615967
    6. ' pos' → logprob: -6.367949962615967
    7. 'all' → logprob: -6.617949962615967
    8. '   ' → logprob: -6.742949962615967
    9. '
' → logprob: -6.742949962615967
    10. ' ' → logprob: -9.117950439453125

Token 1125: ' en' (ID: 469)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6758156418800354
    2. 'print' → logprob: -1.9258155822753906
    3. ' #' → logprob: -2.1758155822753906
    4. '
' → logprob: -2.8008155822753906
    5. 'positions' → logprob: -2.8008155822753906
    6. ' print' → logprob: -4.050815582275391
    7. 'pos' → logprob: -4.175815582275391
    8. ' les' → logprob: -4.675815582275391
    9. 'valid' → logprob: -5.050815582275391
    10. '        
' → logprob: -5.300815582275391

Token 1126: ' compt' (ID: 39238)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2212841510772705
    2. 'com' → logprob: -1.3462841510772705
    3. 'canonical' → logprob: -2.2212841510772705
    4. 'consider' → logprob: -2.4712841510772705
    5. 'multip' → logprob: -2.9712841510772705
    6. 'util' → logprob: -3.2212841510772705
    7. 'print' → logprob: -4.221283912658691
    8. 'part' → logprob: -4.221283912658691
    9. 'memo' → logprob: -4.471283912658691
    10. ' utilisant' → logprob: -4.471283912658691

Token 1127: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0245352815836668
    2. 'e' → logprob: -4.524535179138184
    3. 'pt' → logprob: -4.649535179138184
    4. 'é' → logprob: -7.149535179138184
    5. '#' → logprob: -7.274535179138184
    6. 'ent' → logprob: -7.399535179138184
    7. 'te' → logprob: -7.524535179138184
    8. 'abil' → logprob: -8.649535179138184
    9. 'nt' → logprob: -8.774535179138184
    10. 'ep' → logprob: -9.149535179138184

Token 1128: ' les' (ID: 1341)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.39530664682388306
    2. 'les' → logprob: -2.6453065872192383
    3. ' les' → logprob: -3.2703065872192383
    4. 'positions' → logprob: -3.2703065872192383
    5. 'le' → logprob: -3.5203065872192383
    6. 'all' → logprob: -3.7703065872192383
    7. 'la' → logprob: -3.7703065872192383
    8. 'for' → logprob: -4.145306587219238
    9. ' #' → logprob: -4.145306587219238
    10. ' la' → logprob: -4.145306587219238

Token 1129: ' permutations' (ID: 174595)
  Prédit: 'sym'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sym' → logprob: -0.38113340735435486
    2. ' sym' → logprob: -2.2561333179473877
    3. 'patterns' → logprob: -2.7561333179473877
    4. 'positions' → logprob: -2.7561333179473877
    5. 'rot' → logprob: -4.256133556365967
    6. ' patterns' → logprob: -5.131133556365967
    7. ' motifs' → logprob: -5.256133556365967
    8. 'mot' → logprob: -5.256133556365967
    9. ' configurations' → logprob: -5.631133556365967
    10. 'dup' → logprob: -5.631133556365967

Token 1130: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1937914341688156
    2. '        
' → logprob: -2.443791389465332
    3. 'pos' → logprob: -3.318791389465332
    4. '
' → logprob: -3.818791389465332
    5. 'positions' → logprob: -4.568791389465332
    6. '```' → logprob: -4.943791389465332
    7. 'all' → logprob: -5.818791389465332
    8. '#' → logprob: -6.193791389465332
    9. '   ' → logprob: -6.818791389465332
    10. ' positions' → logprob: -6.943791389465332

Token 1131: ' p' (ID: 275)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.7073682546615601
    2. '4' → logprob: -1.08236825466156
    3. 'p' → logprob: -2.4573683738708496
    4. 'la' → logprob: -3.5823683738708496
    5. ' pairs' → logprob: -4.45736837387085
    6. 'l' → logprob: -4.58236837387085
    7. 'positions' → logprob: -4.70736837387085
    8. 'les' → logprob: -4.83236837387085
    9. ' p' → logprob: -5.70736837387085
    10. 'pair' → logprob: -5.83236837387085

Token 1132: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.30402347445487976
    2. 'airs' → logprob: -1.4290235042572021
    3. 'air' → logprob: -4.929023265838623
    4. 'a' → logprob: -5.179023265838623
    5. 'ar' → logprob: -6.679023265838623
    6. '```' → logprob: -6.929023265838623
    7. 'r' → logprob: -7.054023265838623
    8. 'os' → logprob: -7.679023265838623
    9. 'pairs' → logprob: -7.804023265838623
    10. 'aire' → logprob: -7.804023265838623

Token 1133: ' comme' (ID: 7971)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06877994537353516
    2. '        
' → logprob: -3.318779945373535
    3. 'pos' → logprob: -4.193779945373535
    4. '
' → logprob: -4.693779945373535
    5. '```' → logprob: -6.068779945373535
    6. 'positions' → logprob: -7.068779945373535
    7. '   ' → logprob: -7.568779945373535
    8. 'def' → logprob: -7.943779945373535
    9. ' pos' → logprob: -8.193779945373535
    10. '#' → logprob: -8.318779945373535

Token 1134: ' un' (ID: 537)
  Prédit: 'ident'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ident' → logprob: -0.6559891700744629
    2. 'distinct' → logprob: -1.030989170074463
    3. 'diff' → logprob: -2.655989170074463
    4. ' ident' → logprob: -4.280989170074463
    5. ' distinct' → logprob: -4.405989170074463
    6. 'ind' → logprob: -4.905989170074463
    7. 'ég' → logprob: -5.030989170074463
    8. 'équ' → logprob: -5.155989170074463
    9. 'des' → logprob: -5.905989170074463
    10. 'invalid' → logprob: -7.030989170074463

Token 1135: ' seul' (ID: 33041)
  Prédit: ' arrangement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arrangement' → logprob: -0.9567726254463196
    2. 'ensemble' → logprob: -2.081772565841675
    3. 'arr' → logprob: -2.581772565841675
    4. ' unique' → logprob: -2.831772565841675
    5. ' tout' → logprob: -2.956772565841675
    6. ' seul' → logprob: -3.331772565841675
    7. 'tout' → logprob: -3.456772565841675
    8. 'pattern' → logprob: -3.456772565841675
    9. ' ensemble' → logprob: -3.831772565841675
    10. ' pattern' → logprob: -3.831772565841675

Token 1136: ' motif' (ID: 72753)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1879090964794159
    2. '
' → logprob: -2.8129091262817383
    3. 'pos' → logprob: -3.0629091262817383
    4. '        
' → logprob: -3.1879091262817383
    5. 'positions' → logprob: -4.437909126281738
    6. '   ' → logprob: -5.812909126281738
    7. '```' → logprob: -5.812909126281738
    8. '#' → logprob: -6.937909126281738
    9. '    
' → logprob: -7.062909126281738
    10. 'pairs' → logprob: -7.437909126281738

Token 1137: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22097747027873993
    2. '        
' → logprob: -2.345977544784546
    3. '
' → logprob: -2.720977544784546
    4. 'pos' → logprob: -3.470977544784546
    5. 'positions' → logprob: -6.595977306365967
    6. '   ' → logprob: -7.220977306365967
    7. 'n' → logprob: -7.220977306365967
    8. 'all' → logprob: -7.345977306365967
    9. '    
' → logprob: -7.845977306365967
    10. '#' → logprob: -8.220977783203125

Token 1138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024485258385539055
    2. '        
' → logprob: -4.524485111236572
    3. 'positions' → logprob: -5.524485111236572
    4. 'pairs' → logprob: -5.774485111236572
    5. 'count' → logprob: -6.399485111236572
    6. '```' → logprob: -6.649485111236572
    7. '   ' → logprob: -7.649485111236572
    8. ' positions' → logprob: -8.14948558807373
    9. 'pos' → logprob: -8.14948558807373
    10. 'counts' → logprob: -8.27448558807373

Token 1139: ' #' (ID: 1069)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.22816261649131775
    2. '       ' → logprob: -2.2281625270843506
    3. 'all' → logprob: -2.8531625270843506
    4. '#' (adapté à ' #') → logprob: -4.10316276550293
    5. 'positions' → logprob: -4.10316276550293
    6. '        
' → logprob: -5.97816276550293
    7. 'total' → logprob: -7.10316276550293
    8. '
' → logprob: -7.35316276550293
    9. 'n' → logprob: -7.35316276550293
    10. '   ' → logprob: -8.72816276550293

Token 1140: ' On' (ID: 2160)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5423926711082458
    2. '       ' → logprob: -1.4173927307128906
    3. 'positions' → logprob: -2.0423927307128906
    4. 'all' → logprob: -3.5423927307128906
    5. '#' → logprob: -4.542392730712891
    6. '        
' → logprob: -6.542392730712891
    7. '```' → logprob: -6.667392730712891
    8. 'n' → logprob: -7.167392730712891
    9. 'available' → logprob: -7.667392730712891
    10. 'total' → logprob: -8.16739273071289

Token 1141: ' parc' (ID: 22138)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0911126136779785
    2. 'continue' → logprob: -1.0911126136779785
    3. '       ' → logprob: -1.5911126136779785
    4. 'def' → logprob: -2.8411126136779785
    5. '   ' → logprob: -4.2161126136779785
    6. ' #' → logprob: -4.5911126136779785
    7. ' continue' → logprob: -5.5911126136779785
    8. 'do' → logprob: -5.5911126136779785
    9. 'contin' → logprob: -5.7161126136779785
    10. '```' → logprob: -5.8411126136779785

Token 1142: 'ourt' (ID: 38600)
  Prédit: 'ours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ours' → logprob: -0.445453017950058
    2. 'ourt' → logprob: -1.1954530477523804
    3. 'court' → logprob: -3.945452928543091
    4. '
' → logprob: -4.57045316696167
    5. 'oure' → logprob: -4.82045316696167
    6. '_' → logprob: -4.82045316696167
    7. '#' → logprob: -6.32045316696167
    8. '```' → logprob: -6.32045316696167
    9. 'c' → logprob: -6.44545316696167
    10. 'cours' → logprob: -6.82045316696167

Token 1143: ' les' (ID: 1341)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.0158411264419556
    2. ' les' → logprob: -1.2658411264419556
    3. ' toutes' → logprob: -1.8908411264419556
    4. ' la' → logprob: -2.515841007232666
    5. 'all' → logprob: -2.890841007232666
    6. ' pos' → logprob: -4.265841007232666
    7. ' l' → logprob: -4.640841007232666
    8. 'les' → logprob: -5.140841007232666
    9. 'pos' → logprob: -5.140841007232666
    10. ' le' → logprob: -5.140841007232666

Token 1144: ' app' (ID: 1053)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.5002983212471008
    2. ' positions' → logprob: -1.625298261642456
    3. 'pos' → logprob: -2.500298261642456
    4. ' pos' → logprob: -3.500298261642456
    5. 'all' → logprob: -3.625298261642456
    6. 'pairs' → logprob: -4.500298500061035
    7. ' all' → logprob: -4.750298500061035
    8. ' pairs' → logprob: -5.125298500061035
    9. 'poss' → logprob: -5.250298500061035
    10. 'possible' → logprob: -5.500298500061035

Token 1145: 'ari' (ID: 1683)
  Prédit: 'ari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ari' → logprob: -0.021988999098539352
    2. 'ar' → logprob: -4.146988868713379
    3. 'ri' → logprob: -6.021988868713379
    4. 'r' → logprob: -7.146988868713379
    5. 'air' → logprob: -7.146988868713379
    6. 'aris' → logprob: -7.646988868713379
    7. 'a' → logprob: -8.271988868713379
    8. 'arri' → logprob: -8.521988868713379
    9. 'ro' → logprob: -9.021988868713379
    10. 'airs' → logprob: -9.459488868713379

Token 1146: 'ements' (ID: 4507)
  Prédit: 'ements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ements' → logprob: -0.02092674933373928
    2. 'ement' → logprob: -4.2709269523620605
    3. 'e' → logprob: -6.3959269523620605
    4. 'nements' → logprob: -6.5209269523620605
    5. 'em' → logprob: -6.7709269523620605
    6. 'ments' → logprob: -7.1459269523620605
    7. 'gements' → logprob: -8.395926475524902
    8. 'cements' → logprob: -8.645926475524902
    9. 'ment' → logprob: -8.770926475524902
    10. 'emen' → logprob: -9.145926475524902

Token 1147: ' parfait' (ID: 39268)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3243374824523926
    2. '    
' → logprob: -2.5743374824523926
    3. 'pos' → logprob: -3.1993374824523926
    4. '
' → logprob: -3.3243374824523926
    5. 'possible' → logprob: -3.6993374824523926
    6. 'com' → logprob: -3.6993374824523926
    7. 'de' → logprob: -4.574337482452393
    8. 'all' → logprob: -4.699337482452393
    9. 'poss' → logprob: -4.949337482452393
    10. 'des' → logprob: -5.324337482452393

Token 1148: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.5118337869644165
    2. 'ments' → logprob: -1.6368337869644165
    3. 'par' → logprob: -2.511833667755127
    4. ' parfait' → logprob: -2.511833667755127
    5. ' de' → logprob: -2.761833667755127
    6. 'de' → logprob: -2.761833667755127
    7. ' possibles' → logprob: -2.886833667755127
    8. 'perfect' → logprob: -3.261833667755127
    9. 'sets' → logprob: -3.386833667755127
    10. 'ions' → logprob: -4.136833667755127

Token 1149: ' du' (ID: 1462)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027055464684963226
    2. '        
' → logprob: -3.902055501937866
    3. '
' → logprob: -5.902055263519287
    4. '   ' → logprob: -7.152055263519287
    5. ',' → logprob: -7.277055263519287
    6. 'pos' → logprob: -7.527055263519287
    7. 'positions' → logprob: -7.652055263519287
    8. '```' → logprob: -8.152055740356445
    9. '    
' → logprob: -8.652055740356445
    10. ' positions' → logprob: -9.402055740356445

Token 1150: ' board' (ID: 6796)
  Prédit: 'relative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'relative' → logprob: -0.933993935585022
    2. 'pos' → logprob: -1.308993935585022
    3. 'generate' → logprob: -1.308993935585022
    4. 'set' → logprob: -3.4339938163757324
    5. '{' → logprob: -4.933993816375732
    6. 'neighbors' → logprob: -5.433993816375732
    7. 'positions' → logprob: -5.558993816375732
    8. 'pairs' → logprob: -5.933993816375732
    9. 'range' → logprob: -6.183993816375732
    10. '```' → logprob: -6.433993816375732

Token 1151: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4297648072242737
    2. '       ' → logprob: -2.054764747619629
    3. '    
' → logprob: -2.179764747619629
    4. '
' → logprob: -3.304764747619629
    5. '        
' → logprob: -3.679764747619629
    6. ',' → logprob: -4.554764747619629
    7. '```' → logprob: -4.804764747619629
    8. 'pos' → logprob: -6.054764747619629
    9. '  
' → logprob: -6.179764747619629
    10. 'positions' → logprob: -6.304764747619629

Token 1152: '4' (ID: 19)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.3955129384994507
    2. 'pos' → logprob: -2.3955130577087402
    3. '   ' → logprob: -2.8955130577087402
    4. ',' → logprob: -3.5205130577087402
    5. 'complete' → logprob: -3.7705130577087402
    6. 'positions' → logprob: -3.7705130577087402
    7. 'all' → logprob: -4.02051305770874
    8. '(' → logprob: -4.39551305770874
    9. 'ent' → logprob: -4.39551305770874
    10. '4' → logprob: -4.52051305770874

Token 1153: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0012946429196745157
    2. '*' → logprob: -7.1262946128845215
    3. '```' → logprob: -7.7512946128845215
    4. '4' → logprob: -10.62629508972168
    5. 'for' → logprob: -11.00129508972168
    6. '<|end|>' → logprob: -12.87629508972168
    7. '`' → logprob: -13.00129508972168
    8. '*
' → logprob: -13.12629508972168
    9. '``' → logprob: -13.12629508972168
    10. '   ' → logprob: -13.75129508972168

Token 1154: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.961759259458631e-06
    2. '```' → logprob: -12.625004768371582
    3. ' ' → logprob: -14.250004768371582
    4. '16' → logprob: -14.625004768371582
    5. '...' → logprob: -16.3750057220459
    6. '' → logprob: -17.0000057220459
    7. '<|end|>' → logprob: -17.0000057220459
    8. '
' → logprob: -17.2500057220459
    9. '<|end|>' → logprob: -17.5000057220459
    10. '`' → logprob: -17.5625057220459

Token 1155: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021723898127675056
    2. 'positions' → logprob: -4.771723747253418
    3. '        
' → logprob: -5.271723747253418
    4. 'pos' → logprob: -5.271723747253418
    5. 'all' → logprob: -7.146723747253418
    6. ' positions' → logprob: -7.271723747253418
    7. '   ' → logprob: -8.396723747253418
    8. 'empty' → logprob: -8.521723747253418
    9. '```' → logprob: -8.521723747253418
    10. '
' → logprob: -9.146723747253418

Token 1156: '16' (ID: 1125)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5059536695480347
    2. 'pos' → logprob: -1.5059536695480347
    3. 'positions' → logprob: -3.005953788757324
    4. ' pos' → logprob: -3.255953788757324
    5. 'p' → logprob: -4.630953788757324
    6. 'pairs' → logprob: -5.005953788757324
    7. ' positions' → logprob: -5.130953788757324
    8. ' )' → logprob: -5.380953788757324
    9. 'ensemble' → logprob: -5.505953788757324
    10. ')
' → logprob: -5.630953788757324

Token 1157: ' positions' (ID: 15897)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6524912714958191
    2. 'positions' → logprob: -0.9024912714958191
    3. ' positions' → logprob: -2.902491331100464
    4. ',' → logprob: -5.152491092681885
    5. '_positions' → logprob: -5.777491092681885
    6. ' ,' → logprob: -6.277491092681885
    7. ' )' → logprob: -6.402491092681885
    8. ')
' → logprob: -7.027491092681885
    9. 'tokens' → logprob: -7.027491092681885
    10. '   ' → logprob: -7.652491092681885

Token 1158: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11796440929174423
    2. ',' → logprob: -2.617964506149292
    3. '.' → logprob: -4.367964267730713
    4. '):' → logprob: -5.117964267730713
    5. ':' → logprob: -5.617964267730713
    6. ').' → logprob: -5.992964267730713
    7. '),' → logprob: -6.492964267730713
    8. '```' → logprob: -6.492964267730713
    9. '...' → logprob: -6.617964267730713
    10. '   ' → logprob: -6.617964267730713

Token 1159: ' en' (ID: 469)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010996770113706589
    2. '
' → logprob: -5.1359968185424805
    3. '        
' → logprob: -5.3859968185424805
    4. 'positions' → logprob: -9.13599681854248
    5. 'pos' → logprob: -9.38599681854248
    6. ',' → logprob: -9.38599681854248
    7. '```' → logprob: -10.38599681854248
    8. '   ' → logprob: -10.38599681854248
    9. '    
' → logprob: -10.76099681854248
    10. 'all' → logprob: -10.88599681854248

Token 1160: ' p' (ID: 275)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.2333006858825684
    2. 'positions' → logprob: -1.6083006858825684
    3. 'pairs' → logprob: -1.6083006858825684
    4. 'generate' → logprob: -2.6083006858825684
    5. 'consider' → logprob: -2.8583006858825684
    6. '```' → logprob: -3.4833006858825684
    7. 'com' → logprob: -3.7333006858825684
    8. ' utilisant' → logprob: -4.483300685882568
    9. 'part' → logprob: -4.608300685882568
    10. 'enumer' → logprob: -5.108300685882568

Token 1161: 'aires' (ID: 8507)
  Prédit: 'airs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.5941430330276489
    2. 'aires' → logprob: -1.094143033027649
    3. 'air' → logprob: -2.5941429138183594
    4. 'ermut' → logprob: -4.594142913818359
    5. 'er' → logprob: -5.219142913818359
    6. 'ar' → logprob: -5.594142913818359
    7. 'aire' → logprob: -5.719142913818359
    8. 'a' → logprob: -6.094142913818359
    9. 'ass' → logprob: -6.344142913818359
    10. 'r' → logprob: -6.344142913818359

Token 1162: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013209416531026363
    2. ',' → logprob: -4.638209342956543
    3. '.' → logprob: -6.638209342956543
    4. '        
' → logprob: -7.013209342956543
    5. '   ' → logprob: -8.888209342956543
    6. 'et' → logprob: -8.888209342956543
    7. ' et' → logprob: -9.013209342956543
    8. ' (' → logprob: -9.013209342956543
    9. ',
' → logprob: -9.138209342956543
    10. '(' → logprob: -9.388209342956543

Token 1163: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.674858301877975e-05
    2. '        
' → logprob: -10.500096321105957
    3. ',' → logprob: -10.625096321105957
    4. '<|end|>' → logprob: -11.250096321105957
    5. '.' → logprob: -11.375096321105957
    6. '{' → logprob: -12.375096321105957
    7. '(' → logprob: -12.875096321105957
    8. '   ' → logprob: -12.875096321105957
    9. '#' → logprob: -13.625096321105957
    10. '      ' → logprob: -13.875096321105957

Token 1164: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005567294079810381
    2. '        
' → logprob: -6.0055670738220215
    3. 'pos' → logprob: -6.5055670738220215
    4. '
' → logprob: -6.6305670738220215
    5. '   ' → logprob: -8.63056755065918
    6. ' pos' → logprob: -10.75556755065918
    7. 'positions' → logprob: -10.75556755065918
    8. '    
' → logprob: -11.25556755065918
    9. 'empty' → logprob: -12.13056755065918
    10. '#' (adapté à ' #') → logprob: -12.38056755065918

Token 1165: ' dans' (ID: 2671)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7006706595420837
    2. 'pos' → logprob: -1.2006707191467285
    3. 'all' → logprob: -2.3256707191467285
    4. 'positions' → logprob: -3.8256707191467285
    5. '   ' → logprob: -3.9506707191467285
    6. 'results' → logprob: -4.0756707191467285
    7. 'relative' → logprob: -4.5756707191467285
    8. 'result' → logprob: -4.8256707191467285
    9. 'possible' → logprob: -5.5756707191467285
    10. '
' → logprob: -5.5756707191467285

Token 1166: ' lesquels' (ID: 106476)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.9815185070037842
    2. 'la' → logprob: -1.6065185070037842
    3. 'les' → logprob: -1.8565185070037842
    4. '#' → logprob: -2.981518507003784
    5. 'un' → logprob: -3.356518507003784
    6. 'l' → logprob: -3.356518507003784
    7. '   ' → logprob: -3.481518507003784
    8. 'def' → logprob: -3.731518507003784
    9. 'positions' → logprob: -3.856518507003784
    10. 'ensemble' → logprob: -4.481518745422363

Token 1167: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.874868631362915
    2. 'cha' → logprob: -1.249868631362915
    3. 'each' → logprob: -2.124868631362915
    4. 'les' → logprob: -3.374868631362915
    5. 'ch' → logprob: -3.499868631362915
    6. 't' → logprob: -3.624868631362915
    7. '   ' → logprob: -4.124868392944336
    8. ' toutes' → logprob: -4.249868392944336
    9. 'every' → logprob: -4.874868392944336
    10. 'la' → logprob: -4.999868392944336

Token 1168: ' paire' (ID: 148856)
  Prédit: ' paire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' paire' → logprob: -0.8685036897659302
    2. 'pair' → logprob: -1.1185036897659302
    3. ' pair' → logprob: -1.7435036897659302
    4. 'pa' → logprob: -3.8685035705566406
    5. 'position' → logprob: -4.243503570556641
    6. 'p' → logprob: -4.493503570556641
    7. 'pos' → logprob: -4.618503570556641
    8. ' position' → logprob: -4.743503570556641
    9. ' p' → logprob: -5.493503570556641
    10. ' couple' → logprob: -6.493503570556641

Token 1169: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.0665958970785141
    2. ' est' → logprob: -3.0665957927703857
    3. 'util' → logprob: -4.316596031188965
    4. ' utilise' → logprob: -6.191596031188965
    5. 's' → logprob: -7.441596031188965
    6. '```' → logprob: -8.191596031188965
    7. ' is' → logprob: -8.316596031188965
    8. 'forme' → logprob: -8.316596031188965
    9. 'se' → logprob: -8.691596031188965
    10. 'compr' → logprob: -9.066596031188965

Token 1170: ' conforme' (ID: 45547)
  Prédit: 'form'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'form' → logprob: -0.3825215995311737
    2. 'con' → logprob: -2.507521629333496
    3. 'un' → logprob: -2.632521629333496
    4. 'valid' → logprob: -3.507521629333496
    5. 'const' → logprob: -3.632521629333496
    6. 'com' → logprob: -3.632521629333496
    7. 'forme' → logprob: -4.257521629333496
    8. 'adj' → logprob: -4.507521629333496
    9. 'compatible' → logprob: -5.007521629333496
    10. 'dans' → logprob: -5.007521629333496

Token 1171: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9406870007514954
    2. ' aux' → logprob: -0.9406870007514954
    3. 'aux' → logprob: -2.6906869411468506
    4. 'à' → logprob: -3.0656869411468506
    5. 'au' → logprob: -3.1906869411468506
    6. ' à' → logprob: -3.4406869411468506
    7. ' au' → logprob: -4.19068717956543
    8. ',' → logprob: -5.81568717956543
    9. '<|end|>' → logprob: -5.94068717956543
    10. ')' → logprob: -6.06568717956543

Token 1172: ' un' (ID: 537)
  Prédit: 'relative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'relative' → logprob: -0.007292831316590309
    2. ' relative' → logprob: -5.257292747497559
    3. 'la' → logprob: -7.507292747497559
    4. 'l' → logprob: -7.632292747497559
    5. 'un' → logprob: -7.632292747497559
    6. 'one' → logprob: -8.382292747497559
    7. 'une' → logprob: -9.382292747497559
    8. 'rel' → logprob: -9.882292747497559
    9. '   ' → logprob: -10.257292747497559
    10. '(relative' → logprob: -10.507292747497559

Token 1173: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.5035632252693176
    2. 'rel' → logprob: -1.1285631656646729
    3. 'relative' → logprob: -3.003563165664673
    4. ' des' → logprob: -4.378563404083252
    5. 'vect' → logprob: -6.753563404083252
    6. 'vec' → logprob: -6.878563404083252
    7. 'de' → logprob: -7.003563404083252
    8. 'tuple' → logprob: -7.128563404083252
    9. ' relative' → logprob: -7.503563404083252
    10. '```' → logprob: -7.628563404083252

Token 1174: ' relative' (ID: 15001)
  Prédit: 'relative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'relative' → logprob: -0.0054674712009727955
    2. ' relative' → logprob: -5.255467414855957
    3. 'rel' → logprob: -8.755467414855957
    4. '(relative' → logprob: -10.130467414855957
    5. '   ' → logprob: -11.005467414855957
    6. ' ' → logprob: -11.630467414855957
    7. 'tuple' → logprob: -12.755467414855957
    8. '
' → logprob: -13.755467414855957
    9. '    ' → logprob: -14.380467414855957
    10. '.relative' → logprob: -14.630467414855957

Token 1175: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -7.910643762443215e-05
    2. 'positions' → logprob: -9.750079154968262
    3. '_' → logprob: -12.125079154968262
    4. ' _' → logprob: -12.500079154968262
    5. '_pos' → logprob: -12.875079154968262
    6. '_position' → logprob: -12.875079154968262
    7. 's' → logprob: -13.875079154968262
    8. '(' → logprob: -14.125079154968262
    9. '   ' → logprob: -14.375079154968262
    10. ' ' → logprob: -14.875079154968262

Token 1176: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010809509083628654
    2. 'pos' → logprob: -5.635809421539307
    3. 'positions' → logprob: -5.635809421539307
    4. '        
' → logprob: -6.260809421539307
    5. 'all' → logprob: -7.510809421539307
    6. '```' → logprob: -7.760809421539307
    7. '
' → logprob: -8.010809898376465
    8. '   ' → logprob: -8.635809898376465
    9. ' positions' → logprob: -9.635809898376465
    10. '    
' → logprob: -10.885809898376465

Token 1177: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004603741690516472
    2. '        
' → logprob: -5.879603862762451
    3. 'pos' → logprob: -7.254603862762451
    4. '
' → logprob: -8.004603385925293
    5. 'positions' → logprob: -8.129603385925293
    6. '   ' → logprob: -9.129603385925293
    7. '```' → logprob: -9.379603385925293
    8. '    
' → logprob: -10.004603385925293
    9. 'all' → logprob: -10.254603385925293
    10. ' positions' → logprob: -10.504603385925293

Token 1178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001098418957553804
    2. 'pos' → logprob: -7.2510986328125
    3. '        
' → logprob: -8.6260986328125
    4. '
' → logprob: -9.3760986328125
    5. '   ' → logprob: -9.5010986328125
    6. 'positions' → logprob: -10.5010986328125
    7. '```' → logprob: -12.3760986328125
    8. ' pos' → logprob: -12.7510986328125
    9. '    
' → logprob: -12.7510986328125
    10. 'all' → logprob: -13.2510986328125

Token 1179: ' #' (ID: 1069)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.2892071306705475
    2. '       ' → logprob: -2.0392072200775146
    3. 'all' → logprob: -2.6642072200775146
    4. 'positions' → logprob: -3.4142072200775146
    5. 'full' → logprob: -5.4142069816589355
    6. 'result' → logprob: -5.7892069816589355
    7. '        
' → logprob: -6.2892069816589355
    8. 'possible' → logprob: -6.5392069816589355
    9. ' pos' → logprob: -6.7892069816589355
    10. '#' (adapté à ' #') → logprob: -6.7892069816589355

Token 1180: ' Gén' (ID: 71828)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.05015955865383148
    2. 'all' → logprob: -3.550159454345703
    3. 'full' → logprob: -4.175159454345703
    4. '#' → logprob: -6.300159454345703
    5. '       ' → logprob: -6.675159454345703
    6. 'positions' → logprob: -7.300159454345703
    7. 'board' → logprob: -8.050159454345703
    8. '   ' → logprob: -8.800159454345703
    9. 'valid' → logprob: -8.925159454345703
    10. 'possible' → logprob: -9.050159454345703

Token 1181: 'érer' (ID: 29097)
  Prédit: 'érer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érer' → logprob: -0.44401228427886963
    2. 'er' → logprob: -1.0690122842788696
    3. '       ' → logprob: -4.56901216506958
    4. '   ' → logprob: -6.94401216506958
    5. '#' → logprob: -7.31901216506958
    6. 'all' → logprob: -7.44401216506958
    7. 'enerate' → logprob: -7.44401216506958
    8. 'rate' → logprob: -7.81901216506958
    9. 'erer' → logprob: -8.319012641906738
    10. 'ér' → logprob: -8.569012641906738

Token 1182: ' toutes' (ID: 17502)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.7030652761459351
    2. 'pos' → logprob: -0.7030652761459351
    3. 't' → logprob: -5.953065395355225
    4. ' pos' → logprob: -6.203065395355225
    5. ' all' → logprob: -6.453065395355225
    6. 'positions' → logprob: -6.453065395355225
    7. 'tout' → logprob: -8.203064918518066
    8. ' toutes' → logprob: -8.328064918518066
    9. '   ' → logprob: -8.578064918518066
    10. 'le' → logprob: -8.578064918518066

Token 1183: ' configurations' (ID: 56804)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.5923912525177002
    2. 'pos' → logprob: -1.4673912525177002
    3. '_pairs' → logprob: -2.8423912525177
    4. 'positions' → logprob: -3.0923912525177
    5. 'pairs' → logprob: -3.0923912525177
    6. 'les' → logprob: -3.8423912525177
    7. '_positions' → logprob: -4.217391014099121
    8. 'all' → logprob: -4.717391014099121
    9. ' pairs' → logprob: -5.217391014099121
    10. 'par' → logprob: -5.842391014099121

Token 1184: ' adéqu' (ID: 158942)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.121912956237793
    2. 'de' → logprob: -1.996912956237793
    3. '_pos' → logprob: -2.621912956237793
    4. 'valid' → logprob: -2.621912956237793
    5. ' =' → logprob: -2.746912956237793
    6. '_valid' → logprob: -2.871912956237793
    7. '=' → logprob: -2.871912956237793
    8. '   ' → logprob: -3.246912956237793
    9. 'poss' → logprob: -3.496912956237793
    10. 'possible' → logprob: -3.996912956237793

Token 1185: 'ates' (ID: 1381)
  Prédit: 'ues'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ues' → logprob: -0.1720273792743683
    2. 'ates' → logprob: -2.047027349472046
    3. 'es' → logprob: -3.797027349472046
    4. '   ' → logprob: -5.547027587890625
    5. 'ites' → logprob: -7.047027587890625
    6. 'def' → logprob: -7.797027587890625
    7. 'ées' → logprob: -8.047027587890625
    8. 'ations' → logprob: -8.672027587890625
    9. 'ies' → logprob: -9.172027587890625
    10. 'aces' → logprob: -9.297027587890625

Token 1186: ' (' (ID: 350)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.4848088324069977
    2. '       ' → logprob: -2.234808921813965
    3. ' pos' → logprob: -2.734808921813965
    4. 'all' → logprob: -2.734808921813965
    5. 'positions' → logprob: -2.734808921813965
    6. ' all' → logprob: -4.359808921813965
    7. '   ' → logprob: -4.359808921813965
    8. ' positions' → logprob: -4.609808921813965
    9. '(pos' → logprob: -4.859808921813965
    10. '
' → logprob: -4.984808921813965

Token 1187: 'patterns' (ID: 58184)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.04022139310836792
    2. 'positions' → logprob: -4.540221214294434
    3. ' pos' → logprob: -4.665221214294434
    4. 'all' → logprob: -4.915221214294434
    5. ')' → logprob: -5.040221214294434
    6. 'valid' → logprob: -7.040221214294434
    7. 'pairs' → logprob: -7.165221214294434
    8. 'possible' → logprob: -7.290221214294434
    9. '#' → logprob: -7.540221214294434
    10. ' positions' → logprob: -8.165221214294434

Token 1188: ')
' (ID: 446)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36854472756385803
    2. ')' → logprob: -1.7435446977615356
    3. '=' → logprob: -2.368544816970825
    4. '_possible' → logprob: -4.743544578552246
    5. 's' → logprob: -4.868544578552246
    6. '   ' → logprob: -5.243544578552246
    7. ',' → logprob: -5.618544578552246
    8. '_unique' → logprob: -5.743544578552246
    9. ')=' → logprob: -6.243544578552246
    10. '_' → logprob: -6.368544578552246

Token 1189: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030295252799987793
    2. '        
' → logprob: -5.8780293464660645
    3. 'positions' → logprob: -9.503029823303223
    4. '
' → logprob: -9.878029823303223
    5. 'pos' → logprob: -10.628029823303223
    6. 'all' → logprob: -10.753029823303223
    7. ',' → logprob: -11.628029823303223
    8. '   ' → logprob: -12.003029823303223
    9. '```' → logprob: -12.003029823303223
    10. '       
' → logprob: -13.003029823303223

Token 1190: ' #' (ID: 1069)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.18347729742527008
    2. 'all' → logprob: -1.9334772825241089
    3. '       ' → logprob: -5.183477401733398
    4. 'full' → logprob: -5.308477401733398
    5. '   ' → logprob: -5.558477401733398
    6. 'positions' → logprob: -6.058477401733398
    7. 'relative' → logprob: -6.183477401733398
    8. 'valid' → logprob: -6.683477401733398
    9. 'possible' → logprob: -6.683477401733398
    10. 'results' → logprob: -7.558477401733398

Token 1191: ' C' (ID: 363)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.4430745244026184
    2. 'pos' → logprob: -1.4430744647979736
    3. 'valid' → logprob: -2.6930744647979736
    4. 'results' → logprob: -4.443074703216553
    5. '       ' → logprob: -4.693074703216553
    6. 'positions' → logprob: -4.943074703216553
    7. 'patterns' → logprob: -4.943074703216553
    8. 'full' → logprob: -5.068074703216553
    9. 'possible' → logprob: -5.693074703216553
    10. '   ' → logprob: -5.818074703216553

Token 1192: ''est' (ID: 6616)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.700701117515564
    2. 'pos' → logprob: -2.2007012367248535
    3. 'ont' → logprob: -2.4507012367248535
    4. 'positions' → logprob: -2.8257012367248535
    5. 'on' → logprob: -2.9507012367248535
    6. 'urrent' → logprob: -3.0757012367248535
    7. 'om' → logprob: -3.2007012367248535
    8. 'omb' → logprob: -3.9507012367248535
    9. '_pos' → logprob: -4.0757012367248535
    10. 'ode' → logprob: -4.8257012367248535

Token 1193: ' exactement' (ID: 108701)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -1.1010382175445557
    2. '   ' → logprob: -1.6010382175445557
    3. 'all' → logprob: -2.4760382175445557
    4. '=' → logprob: -3.1010382175445557
    5. 'une' → logprob: -3.3510382175445557
    6. 'à' → logprob: -3.3510382175445557
    7. 'pos' → logprob: -3.4760382175445557
    8. 'les' → logprob: -3.6010382175445557
    9. 'le' → logprob: -3.7260382175445557
    10. '       ' → logprob: -3.7260382175445557

Token 1194: ' les' (ID: 1341)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.08747369796037674
    2. ' generate' → logprob: -2.5874736309051514
    3. '   ' → logprob: -5.5874738693237305
    4. '(generate' → logprob: -6.5874738693237305
    5. 'possible' → logprob: -7.2124738693237305
    6. 'le' → logprob: -7.8374738693237305
    7. 'len' → logprob: -8.08747386932373
    8. ' la' → logprob: -8.33747386932373
    9. ' ' → logprob: -8.58747386932373
    10. ' possible' → logprob: -8.83747386932373

Token 1195: ' app' (ID: 1053)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.017391672357916832
    2. 'match' → logprob: -5.517391681671143
    3. 'pairs' → logprob: -6.142391681671143
    4. ' generate' → logprob: -6.267391681671143
    5. 'positions' → logprob: -6.642391681671143
    6. 'len' → logprob: -6.767391681671143
    7. 'result' → logprob: -7.017391681671143
    8. 'all' → logprob: -7.017391681671143
    9. 'pos' → logprob: -7.017391681671143
    10. 'com' → logprob: -7.767391681671143

Token 1196: 'ari' (ID: 1683)
  Prédit: 'ari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ari' → logprob: -0.019721124321222305
    2. 'ar' → logprob: -5.144721031188965
    3. 'air' → logprob: -6.082221031188965
    4. 'ri' → logprob: -6.832221031188965
    5. 'are' → logprob: -7.269721031188965
    6. 'r' → logprob: -7.332221031188965
    7. 'ai' → logprob: -7.457221031188965
    8. 'art' → logprob: -7.582221031188965
    9. 'ariant' → logprob: -7.957221031188965
    10. 'a' → logprob: -8.019721031188965

Token 1197: 'ements' (ID: 4507)
  Prédit: 'ements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ements' → logprob: -0.0020312999840825796
    2. 'ement' → logprob: -6.752031326293945
    3. 'gements' → logprob: -8.377031326293945
    4. 'ments' → logprob: -8.627031326293945
    5. 'nements' → logprob: -8.752031326293945
    6. 'e' → logprob: -9.752031326293945
    7. 'EMENTS' → logprob: -10.002031326293945
    8. 'cements' → logprob: -10.502031326293945
    9. 't' → logprob: -10.752031326293945
    10. 'em' → logprob: -11.002031326293945

Token 1198: ' parfait' (ID: 39268)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.08650748431682587
    2. 'perfect' → logprob: -3.086507558822632
    3. ' parfait' → logprob: -3.461507558822632
    4. '```' → logprob: -6.711507320404053
    5. 'perf' → logprob: -6.836507320404053
    6. '   ' → logprob: -7.336507320404053
    7. '#' → logprob: -7.961507320404053
    8. 'de' → logprob: -8.336507797241211
    9. '_par' → logprob: -8.586507797241211
    10. 'per' → logprob: -8.711507797241211

Token 1199: 's' (ID: 82)
  Prédit: 'ments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.8115707635879517
    2. 'ents' → logprob: -1.3115707635879517
    3. 's' → logprob: -1.9365707635879517
    4. 'ements' → logprob: -2.061570644378662
    5. 'és' → logprob: -4.936570644378662
    6. 'ts' → logprob: -6.061570644378662
    7. 'ets' → logprob: -6.186570644378662
    8. 'ent' → logprob: -7.311570644378662
    9. 'nts' → logprob: -7.311570644378662
    10. 'ment' → logprob: -8.06157112121582

Token 1200: ' du' (ID: 1462)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6092893481254578
    2. '   ' → logprob: -1.2342894077301025
    3. '
' → logprob: -2.9842894077301025
    4. '        
' → logprob: -3.1092894077301025
    5. '    
' → logprob: -4.359289169311523
    6. 'pos' → logprob: -4.359289169311523
    7. 'sur' → logprob: -5.109289169311523
    8. '(pos' → logprob: -5.359289169311523
    9. 'de' → logprob: -5.609289169311523
    10. ' sur' → logprob: -5.734289169311523

Token 1201: ' grap' (ID: 60955)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.6021611094474792
    2. 'gr' → logprob: -1.602161169052124
    3. 'graph' → logprob: -2.602161169052124
    4. 'plate' → logprob: -3.227161169052124
    5. ' {(' → logprob: -3.727161169052124
    6. '[(' → logprob: -3.977161169052124
    7. ' board' → logprob: -3.977161169052124
    8. '4' → logprob: -4.477160930633545
    9. '```' → logprob: -4.852160930633545
    10. 'set' → logprob: -4.977160930633545

Token 1202: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.0010889010736718774
    2. 'h' → logprob: -7.001089096069336
    3. 'phe' → logprob: -9.501089096069336
    4. 'aphe' → logprob: -9.876089096069336
    5. 'hé' → logprob: -11.501089096069336
    6. 'hehe' → logprob: -12.126089096069336
    7. 'e' → logprob: -12.376089096069336
    8. 'heme' → logprob: -12.626089096069336
    9. '#' → logprob: -12.751089096069336
    10. '}' → logprob: -13.001089096069336

Token 1203: ' construit' (ID: 119882)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.133996605873108
    2. 'com' → logprob: -1.758996605873108
    3. '       ' → logprob: -1.883996605873108
    4. '
' → logprob: -2.7589964866638184
    5. ' complet' → logprob: -2.7589964866638184
    6. ' sur' → logprob: -3.5089964866638184
    7. '        
' → logprob: -3.6339964866638184
    8. '    
' → logprob: -3.7589964866638184
    9. ' de' → logprob: -3.8839964866638184
    10. 'du' → logprob: -4.133996486663818

Token 1204: ' avec' (ID: 3937)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20244532823562622
    2. 'sur' → logprob: -2.4524452686309814
    3. 'avec' → logprob: -3.0774452686309814
    4. 'com' → logprob: -4.0774455070495605
    5. 'pos' → logprob: -4.8274455070495605
    6. '   ' → logprob: -5.0774455070495605
    7. 'de' → logprob: -6.2024455070495605
    8. '        
' → logprob: -6.2024455070495605
    9. '```' → logprob: -6.3274455070495605
    10. '.' → logprob: -6.5774455070495605

Token 1205: ' ces' (ID: 10532)
  Prédit: 'relative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'relative' → logprob: -0.004529569298028946
    2. 'les' → logprob: -6.2545294761657715
    3. 'ces' → logprob: -7.5045294761657715
    4. 'la' → logprob: -8.00452995300293
    5. 'these' → logprob: -8.12952995300293
    6. ' relative' → logprob: -8.37952995300293
    7. 'pos' → logprob: -8.50452995300293
    8. 'set' → logprob: -8.75452995300293
    9. 'adj' → logprob: -8.87952995300293
    10. '```' → logprob: -9.37952995300293

Token 1206: ' edges' (ID: 22569)
  Prédit: 'relative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'relative' → logprob: -0.007742912974208593
    2. 'positions' → logprob: -5.507742881774902
    3. ' relative' → logprob: -6.882742881774902
    4. 'rel' → logprob: -7.257742881774902
    5. 'edges' → logprob: -7.632742881774902
    6. 'vectors' → logprob: -8.382742881774902
    7. 'dire' → logprob: -8.507742881774902
    8. 'ar' → logprob: -8.757742881774902
    9. '```' → logprob: -8.757742881774902
    10. 'relations' → logprob: -9.007742881774902

Token 1207: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016802458092570305
    2. '        
' → logprob: -4.1418023109436035
    3. 'pos' → logprob: -7.8918023109436035
    4. '
' → logprob: -8.766802787780762
    5. '   ' → logprob: -9.891802787780762
    6. '```' → logprob: -10.141802787780762
    7. ',' → logprob: -10.391802787780762
    8. '    
' → logprob: -10.891802787780762
    9. 'positions' → logprob: -10.891802787780762
    10. 'all' → logprob: -11.016802787780762

Token 1208: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008037167601287365
    2. '        
' → logprob: -4.883037090301514
    3. 'pos' → logprob: -8.633037567138672
    4. '   ' → logprob: -9.758037567138672
    5. 'positions' → logprob: -9.758037567138672
    6. '```' → logprob: -10.383037567138672
    7. 'all' → logprob: -10.758037567138672
    8. '    
' → logprob: -10.883037567138672
    9. 'full' → logprob: -11.258037567138672
    10. '
' → logprob: -11.508037567138672

Token 1209: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006958558224141598
    2. '        
' → logprob: -5.631958484649658
    3. 'pos' → logprob: -6.506958484649658
    4. '```' → logprob: -7.006958484649658
    5. '   ' → logprob: -7.631958484649658
    6. '    
' → logprob: -9.256958961486816
    7. 'positions' → logprob: -9.256958961486816
    8. '
' → logprob: -9.256958961486816
    9. ' pos' → logprob: -9.881958961486816
    10. '#' → logprob: -10.881958961486816

Token 1210: ' all' (ID: 722)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49963852763175964
    2. 'pos' → logprob: -1.749638557434082
    3. 'relative' → logprob: -1.999638557434082
    4. 'all' (adapté à ' all') → logprob: -3.249638557434082
    5. '       ' → logprob: -4.249638557434082
    6. 'adj' → logprob: -4.749638557434082
    7. 'positions' → logprob: -5.499638557434082
    8. 'full' → logprob: -5.624638557434082
    9. '    
' → logprob: -5.749638557434082
    10. 'rel' → logprob: -6.124638557434082

Token 1211: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.13043297827243805
    2. '_positions' → logprob: -2.1304330825805664
    3. '_pairs' → logprob: -6.005433082580566
    4. 'positions' → logprob: -7.505433082580566
    5. 'pos' → logprob: -7.880433082580566
    6. '_par' → logprob: -10.505433082580566
    7. '_' → logprob: -11.130433082580566
    8. 'pairs' → logprob: -11.255433082580566
    9. '   ' → logprob: -11.630433082580566
    10. '_possible' → logprob: -11.755433082580566

Token 1212: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005736083257943392
    2. '=' → logprob: -5.255735874176025
    3. '_set' → logprob: -7.630735874176025
    4. '=set' → logprob: -12.130736351013184
    5. 'et' → logprob: -12.755736351013184
    6. '   ' → logprob: -13.380736351013184
    7. ',' → logprob: -13.380736351013184
    8. 'set' → logprob: -13.755736351013184
    9. '_' → logprob: -13.755736351013184
    10. ')' → logprob: -14.005736351013184

Token 1213: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.06419647485017776
    2. ' {(' → logprob: -3.4391965866088867
    3. ' [(' → logprob: -3.8141965866088867
    4. '{' → logprob: -4.939196586608887
    5. 'set' → logprob: -7.189196586608887
    6. ' set' → logprob: -9.189196586608887
    7. '[{' → logprob: -12.189196586608887
    8. '([(' → logprob: -12.939196586608887
    9. '   ' → logprob: -13.064196586608887
    10. '[((' → logprob: -13.064196586608887

Token 1214: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.014176084659993649
    2. '0' → logprob: -4.264175891876221
    3. ' x' → logprob: -11.389176368713379
    4. '(x' → logprob: -14.889176368713379
    5. '   ' → logprob: -15.014176368713379
    6. 'i' → logprob: -15.139176368713379
    7. ' ' → logprob: -15.764176368713379
    8. ')x' → logprob: -17.639175415039062
    9. '_x' → logprob: -17.764175415039062
    10. '```' → logprob: -18.139175415039062

Token 1215: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3164426386356354
    2. ',y' → logprob: -1.316442608833313
    3. ' ,' → logprob: -5.816442489624023
    4. '=' → logprob: -8.941442489624023
    5. 'for' → logprob: -10.566442489624023
    6. ',
' → logprob: -11.566442489624023
    7. '0' → logprob: -11.691442489624023
    8. 'y' → logprob: -11.691442489624023
    9. ' for' → logprob: -12.566442489624023
    10. ' y' → logprob: -12.941442489624023

Token 1216: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.313184916973114
    2. ',' → logprob: -1.9381849765777588
    3. 'for' → logprob: -2.438184976577759
    4. ' for' → logprob: -3.438184976577759
    5. ',y' → logprob: -5.93818473815918
    6. ' ,' → logprob: -6.06318473815918
    7. ',x' → logprob: -9.18818473815918
    8. ' )' → logprob: -9.31318473815918
    9. '   ' → logprob: -9.56318473815918
    10. '0' → logprob: -10.06318473815918

Token 1217: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.42985692620277405
    2. 'for' → logprob: -1.0548568964004517
    3. ',' → logprob: -7.304856777191162
    4. ')' → logprob: -7.804856777191162
    5. '	for' → logprob: -11.05485725402832
    6. '       ' → logprob: -11.17985725402832
    7. '   ' → logprob: -11.92985725402832
    8. ' ,' → logprob: -11.92985725402832
    9. ' ' → logprob: -12.05485725402832
    10. ' pour' → logprob: -12.17985725402832

Token 1218: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0498107448220253
    2. ' y' → logprob: -3.0498106479644775
    3. '0' → logprob: -6.799810886383057
    4. 'x' → logprob: -9.674810409545898
    5. ' ' → logprob: -10.174810409545898
    6. '	y' → logprob: -13.049810409545898
    7. 'range' → logprob: -13.424810409545898
    8. '   ' → logprob: -13.924810409545898
    9. ' x' → logprob: -14.674810409545898
    10. '<|end|>' → logprob: -14.924810409545898

Token 1219: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06998156756162643
    2. 'in' → logprob: -2.694981575012207
    3. '0' → logprob: -11.069981575012207
    4. ' ' → logprob: -11.069981575012207
    5. '=' → logprob: -12.569981575012207
    6. ',' → logprob: -13.194981575012207
    7. 'import' → logprob: -13.819981575012207
    8. 'range' → logprob: -13.944981575012207
    9. '<|end|>' → logprob: -13.944981575012207
    10. ')' → logprob: -14.319981575012207

Token 1220: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014165391214191914
    2. ' range' → logprob: -4.26416540145874
    3. '0' → logprob: -13.389164924621582
    4. '(range' → logprob: -15.264164924621582
    5. '	range' → logprob: -15.889164924621582
    6. ' ' → logprob: -18.3891658782959
    7. '_range' → logprob: -19.2641658782959
    8. 'r' → logprob: -19.5141658782959
    9. '.range' → logprob: -19.7641658782959
    10. '   ' → logprob: -19.7641658782959

Token 1221: '(' (ID: 7)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1833542436361313
    2. ' range' → logprob: -1.9333542585372925
    3. ' in' → logprob: -4.683354377746582
    4. 'in' → logprob: -4.808354377746582
    5. '0' → logprob: -5.683354377746582
    6. '4' → logprob: -7.058354377746582
    7. '(' → logprob: -7.058354377746582
    8. '(range' → logprob: -8.183354377746582
    9. ' ' → logprob: -10.058354377746582
    10. ')' → logprob: -12.808354377746582

Token 1222: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.8289361000061035
    2. '0' → logprob: -1.0789361000061035
    3. 'range' → logprob: -1.5789361000061035
    4. ' range' → logprob: -4.0789361000061035
    5. ' ' → logprob: -7.8289361000061035
    6. '(range' → logprob: -12.703935623168945
    7. '1' → logprob: -13.453935623168945
    8. 'Range' → logprob: -13.828935623168945
    9. '   ' → logprob: -13.828935623168945
    10. 'in' → logprob: -14.078935623168945

Token 1223: ')' (ID: 8)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7058790922164917
    2. ' for' → logprob: -1.2058790922164917
    3. ')' → logprob: -1.5808790922164917
    4. '   ' → logprob: -7.830879211425781
    5. '	for' → logprob: -8.330879211425781
    6. ',' → logprob: -8.955879211425781
    7. ' in' → logprob: -9.205879211425781
    8. ' ' → logprob: -9.455879211425781
    9. '       ' → logprob: -9.830879211425781
    10. '
' → logprob: -10.580879211425781

Token 1224: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5762082934379578
    2. 'for' → logprob: -0.8262082934379578
    3. ' in' → logprob: -8.701208114624023
    4. '       ' → logprob: -9.451208114624023
    5. '   ' → logprob: -12.201208114624023
    6. 'in' → logprob: -12.576208114624023
    7. '	for' → logprob: -12.576208114624023
    8. '           ' → logprob: -12.826208114624023
    9. ' ' → logprob: -13.201208114624023
    10. '        ' → logprob: -13.451208114624023

Token 1225: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16022524237632751
    2. ' x' → logprob: -1.91022527217865
    3. '_x' → logprob: -15.535224914550781
    4. '	x' → logprob: -15.535224914550781
    5. '0' → logprob: -15.660224914550781
    6. '(x' → logprob: -16.03522491455078
    7. ')x' → logprob: -16.16022491455078
    8. ' ' → logprob: -16.66022491455078
    9. ' range' → logprob: -17.16022491455078
    10. 'range' → logprob: -17.41022491455078

Token 1226: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04865174740552902
    2. 'in' → logprob: -3.048651695251465
    3. 'x' → logprob: -10.548651695251465
    4. '=' → logprob: -11.423651695251465
    5. '0' → logprob: -12.173651695251465
    6. ',' → logprob: -12.423651695251465
    7. ')' → logprob: -12.548651695251465
    8. ' x' → logprob: -12.798651695251465
    9. ' ' → logprob: -13.048651695251465
    10. 'n' → logprob: -13.548651695251465

Token 1227: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759405493736267
    2. ' range' → logprob: -0.8259405493736267
    3. '0' → logprob: -13.825940132141113
    4. '(range' → logprob: -16.32594108581543
    5. '4' → logprob: -16.70094108581543
    6. '	range' → logprob: -17.95094108581543
    7. '(' → logprob: -18.45094108581543
    8. ' in' → logprob: -18.57594108581543
    9. ' ' → logprob: -18.70094108581543
    10. '[' → logprob: -19.20094108581543

Token 1228: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.144923135638237
    2. 'range' → logprob: -2.394923210144043
    3. '4' → logprob: -3.144923210144043
    4. ' range' → logprob: -7.394923210144043
    5. ' (' → logprob: -10.644923210144043
    6. '(range' → logprob: -10.894923210144043
    7. '0' → logprob: -13.144923210144043
    8. ' ' → logprob: -13.769923210144043
    9. '   ' → logprob: -14.019923210144043
    10. 'in' → logprob: -16.019922256469727

Token 1229: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.75000286102295
    3. 'range' → logprob: -13.75000286102295
    4. ' ' → logprob: -15.25000286102295
    5. '0' → logprob: -17.125001907348633
    6. ' range' → logprob: -18.375001907348633
    7. '=' → logprob: -19.625001907348633
    8. '(range' → logprob: -20.000001907348633
    9. '1' → logprob: -20.750001907348633
    10. '   ' → logprob: -20.875001907348633

Token 1230: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.21957890689373016
    2. ']' → logprob: -1.7195788621902466
    3. ')]
' → logprob: -4.594578742980957
    4. ')' → logprob: -5.094578742980957
    5. ']
' → logprob: -6.719578742980957
    6. ' ]' → logprob: -7.719578742980957
    7. ' )' → logprob: -10.469578742980957
    8. ')]

' → logprob: -10.844578742980957
    9. '   ' → logprob: -11.344578742980957
    10. '       ' → logprob: -11.469578742980957

Token 1231: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4038810431957245
    2. '
' → logprob: -2.153881072998047
    3. 'adj' → logprob: -2.278881072998047
    4. '   ' → logprob: -4.028881072998047
    5. 'edges' → logprob: -4.278881072998047
    6. 'pos' → logprob: -4.278881072998047
    7. 'all' → logprob: -4.403881072998047
    8. '        
' → logprob: -4.403881072998047
    9. 'graph' → logprob: -4.903881072998047
    10. 'pairs' → logprob: -5.028881072998047

Token 1232: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.9064942598342896
    2. 'results' → logprob: -1.5314942598342896
    3. 'relative' → logprob: -1.9064942598342896
    4. 'valid' → logprob: -3.156494140625
    5. 'possible' → logprob: -3.281494140625
    6. 'result' → logprob: -3.531494140625
    7. 'all' → logprob: -3.781494140625
    8. 'patterns' → logprob: -4.031494140625
    9. 'pairs' → logprob: -4.156494140625
    10. 'res' → logprob: -4.406494140625

Token 1233: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.0002258277963846922
    2. 's' → logprob: -9.750226020812988
    3. 'set' → logprob: -9.750226020812988
    4. '_list' → logprob: -10.000226020812988
    5. '_sets' → logprob: -10.750226020812988
    6. '_' → logprob: -11.375226020812988
    7. 'Set' → logprob: -12.125226020812988
    8. '_s' → logprob: -12.375226020812988
    9. 'et' → logprob: -12.750226020812988
    10. ' _' → logprob: -12.750226020812988

Token 1234: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932092905044556
    2. ' =' → logprob: -0.6932092905044556
    3. '=set' → logprob: -9.693209648132324
    4. ',' → logprob: -16.193208694458008
    5. '=
' → logprob: -16.318208694458008
    6. ' =
' → logprob: -16.568208694458008
    7. ')' → logprob: -16.568208694458008
    8. 'set' → logprob: -17.193208694458008
    9. ' ' → logprob: -18.193208694458008
    10. '＝' → logprob: -18.568208694458008

Token 1235: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.20144900679588318
    2. ' set' → logprob: -1.7014490365982056
    3. '{' → logprob: -10.326449394226074
    4. '(set' → logprob: -13.701449394226074
    5. '=set' → logprob: -14.451449394226074
    6. ')set' → logprob: -14.826449394226074
    7. ' {(' → logprob: -15.326449394226074
    8. '	set' → logprob: -15.576449394226074
    9. ' {' → logprob: -15.951449394226074
    10. '   ' → logprob: -16.201448440551758

Token 1236: '(all' (ID: 34727)
  Prédit: '(all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(all' → logprob: -0.0017042214749380946
    2. 'all' → logprob: -6.376704216003418
    3. ' all' → logprob: -14.126704216003418
    4. '	all' → logprob: -15.001704216003418
    5. '   ' → logprob: -15.126704216003418
    6. '```' → logprob: -15.501704216003418
    7. '(' → logprob: -15.501704216003418
    8. '(pos' → logprob: -15.626704216003418
    9. '(
' → logprob: -16.251705169677734
    10. 'pos' → logprob: -17.126705169677734

Token 1237: '_pos' (ID: 14692)
  Prédit: '(all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(all' → logprob: -0.21723879873752594
    2. 'all' → logprob: -1.9672387838363647
    3. 'pos' → logprob: -3.4672389030456543
    4. '_pos' → logprob: -3.8422389030456543
    5. '(
' → logprob: -7.217238903045654
    6. '(pos' → logprob: -7.342238903045654
    7. '_all' → logprob: -7.342238903045654
    8. ')' → logprob: -8.342238426208496
    9. ' all' → logprob: -8.592238426208496
    10. '(' → logprob: -9.217238426208496

Token 1238: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03843022137880325
    2. ')
' → logprob: -3.2884302139282227
    3. '<|end|>' → logprob: -8.913430213928223
    4. '   ' → logprob: -9.913430213928223
    5. '       ' → logprob: -9.913430213928223
    6. ' )' → logprob: -10.038430213928223
    7. '<|end|>' → logprob: -10.538430213928223
    8. '()' → logprob: -10.663430213928223
    9. '
' → logprob: -11.663430213928223
    10. '())' → logprob: -11.663430213928223

Token 1239: '        
' (ID: 3564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08069203048944473
    2. '       ' → logprob: -3.5806920528411865
    3. 'results' → logprob: -3.7056920528411865
    4. 'matches' → logprob: -5.080691814422607
    5. 'pairs' → logprob: -5.080691814422607
    6. 'patterns' → logprob: -5.580691814422607
    7. 'match' → logprob: -5.705691814422607
    8. '    
' → logprob: -6.330691814422607
    9. '        
' → logprob: -7.580691814422607
    10. '```' → logprob: -7.580691814422607

Token 1240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040879156440496445
    2. 'results' → logprob: -3.415879249572754
    3. 'pairs' → logprob: -6.040879249572754
    4. '   ' → logprob: -6.415879249572754
    5. 'relative' → logprob: -6.540879249572754
    6. 'patterns' → logprob: -7.290879249572754
    7. 'result' → logprob: -8.790879249572754
    8. 'matches' → logprob: -8.790879249572754
    9. ' results' → logprob: -8.790879249572754
    10. 'edges' → logprob: -9.165879249572754

Token 1241: ' valid' (ID: 4529)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.36933448910713196
    2. 'patterns' → logprob: -1.4943344593048096
    3. 'match' → logprob: -2.7443344593048096
    4. 'result' → logprob: -4.869334697723389
    5. 'pattern' → logprob: -5.619334697723389
    6. 'pair' → logprob: -5.869334697723389
    7. 'all' → logprob: -6.744334697723389
    8. 'res' → logprob: -6.994334697723389
    9. 'matches' → logprob: -7.119334697723389
    10. 'valid' (adapté à ' valid') → logprob: -7.119334697723389

Token 1242: '_patterns' (ID: 161400)
  Prédit: '_pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.12989450991153717
    2. '_pair' → logprob: -3.129894495010376
    3. '_par' → logprob: -3.254894495010376
    4. '_match' → logprob: -3.379894495010376
    5. '_patterns' → logprob: -6.004894733428955
    6. '_matches' → logprob: -6.504894733428955
    7. '_p' → logprob: -7.504894733428955
    8. '_' → logprob: -7.504894733428955
    9. 'pairs' → logprob: -9.254894256591797
    10. '_pattern' → logprob: -9.504894256591797

Token 1243: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132670223712921
    2. '=' → logprob: -1.3132669925689697
    3. '   ' → logprob: -13.31326675415039
    4. '(valid' → logprob: -13.81326675415039
    5. 'valid' → logprob: -14.68826675415039
    6. '(' → logprob: -14.81326675415039
    7. ')' → logprob: -14.93826675415039
    8. ',' → logprob: -15.18826675415039
    9. '=set' → logprob: -15.31326675415039
    10. '_valid' → logprob: -15.68826675415039

Token 1244: ' generate' (ID: 10419)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.005234832875430584
    2. ' generate' → logprob: -5.255234718322754
    3. '   ' → logprob: -14.505234718322754
    4. '(generate' → logprob: -14.755234718322754
    5. ' ' → logprob: -17.50523567199707
    6. '.generate' → logprob: -17.88023567199707
    7. '  ' → logprob: -18.38023567199707
    8. 'list' → logprob: -18.38023567199707
    9. '       ' → logprob: -18.38023567199707
    10. '_generate' → logprob: -19.00523567199707

Token 1245: '_par' (ID: 31329)
  Prédit: '_par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_par' → logprob: -1.4736459888808895e-05
    2. 'par' → logprob: -11.375014305114746
    3. '_pair' → logprob: -14.000014305114746
    4. '_all' → logprob: -14.125014305114746
    5. '_pairs' → logprob: -14.125014305114746
    6. '_per' → logprob: -15.500014305114746
    7. 'all' → logprob: -15.875014305114746
    8. '_parallel' → logprob: -16.250015258789062
    9. '_p' → logprob: -16.375015258789062
    10. 'Par' → logprob: -16.500015258789062

Token 1246: 'ings' (ID: 963)
  Prédit: 'ings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ings' → logprob: -1.8193366486229934e-05
    2. 'ing' → logprob: -11.250018119812012
    3. 'tings' → logprob: -13.750018119812012
    4. 'nings' → logprob: -13.875018119812012
    5. 's' → logprob: -14.125018119812012
    6. 'rings' → logprob: -14.250018119812012
    7. 'atings' → logprob: -14.750018119812012
    8. 'ins' → logprob: -15.000018119812012
    9. 'ingss' → logprob: -16.000019073486328
    10. 'gings' → logprob: -16.500019073486328

Token 1247: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -4.310693111619912e-05
    2. 'pos' → logprob: -10.375042915344238
    3. '(' → logprob: -11.500042915344238
    4. ' (' → logprob: -14.500042915344238
    5. '[pos' → logprob: -14.750042915344238
    6. ' pos' → logprob: -15.125042915344238
    7. ',pos' → logprob: -15.375042915344238
    8. '(
' → logprob: -15.500042915344238
    9. '(p' → logprob: -16.625043869018555
    10. '```' → logprob: -17.375043869018555

Token 1248: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.3609180748462677
    2. 'set' → logprob: -1.4859180450439453
    3. '(pos' → logprob: -3.1109180450439453
    4. 'et' → logprob: -3.4859180450439453
    5. 'pos' → logprob: -7.235918045043945
    6. 't' → logprob: -8.485918045043945
    7. 'Set' → logprob: -8.860918045043945
    8. 'ot' → logprob: -8.985918045043945
    9. 'at' → logprob: -9.360918045043945
    10. ' set' → logprob: -9.735918045043945

Token 1249: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018979361280798912
    2. '(relative' → logprob: -4.018979549407959
    3. '(' → logprob: -7.643979549407959
    4. '       ' → logprob: -8.6439790725708
    5. ')' → logprob: -9.1439790725708
    6. ' ,' → logprob: -10.7689790725708
    7. 'relative' → logprob: -11.2689790725708
    8. ',
' → logprob: -11.5189790725708
    9. '(
' → logprob: -12.0189790725708
    10. '   ' → logprob: -12.1439790725708

Token 1250: ' relative' (ID: 15001)
  Prédit: 'relative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'relative' → logprob: -0.002195933135226369
    2. ' relative' → logprob: -6.127195835113525
    3. '   ' → logprob: -12.752196311950684
    4. 'tuple' → logprob: -13.127196311950684
    5. '           ' → logprob: -13.377196311950684
    6. '(relative' → logprob: -13.377196311950684
    7. '       ' → logprob: -13.752196311950684
    8. '    ' → logprob: -14.752196311950684
    9. '        ' → logprob: -15.002196311950684
    10. ' tuple' → logprob: -15.752196311950684

Token 1251: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.0001468067930545658
    2. 'positions' → logprob: -8.875146865844727
    3. '_' → logprob: -13.000146865844727
    4. ')_' → logprob: -13.375146865844727
    5. ')' → logprob: -13.500146865844727
    6. 's' → logprob: -14.250146865844727
    7. '_)' → logprob: -15.250146865844727
    8. '```' → logprob: -15.500146865844727
    9. 'Positions' → logprob: -16.000146865844727
    10. '_
' → logprob: -16.500146865844727

Token 1252: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001984663773328066
    2. ')
' → logprob: -6.251984596252441
    3. '       ' → logprob: -10.001984596252441
    4. '())' → logprob: -12.001984596252441
    5. '()' → logprob: -13.126984596252441
    6. '   ' → logprob: -13.126984596252441
    7. ' )' → logprob: -15.251984596252441
    8. ')
' → logprob: -16.126985549926758
    9. '())
' → logprob: -16.251985549926758
    10. '()
' → logprob: -16.501985549926758

Token 1253: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002620370127260685
    2. 'print' → logprob: -6.752620220184326
    3. '        
' → logprob: -7.252620220184326
    4. '   ' → logprob: -7.502620220184326
    5. '```' → logprob: -9.252620697021484
    6. '<|end|>' → logprob: -10.127620697021484
    7. '
' → logprob: -10.877620697021484
    8. 'count' → logprob: -11.627620697021484
    9. '    
' → logprob: -12.002620697021484
    10. ' print' → logprob: -12.127620697021484

Token 1254: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2283252477645874
    2. '       ' → logprob: -1.6033252477645874
    3. '        
' → logprob: -6.728325366973877
    4. '
' → logprob: -7.478325366973877
    5. 'count' → logprob: -7.603325366973877
    6. '```' → logprob: -7.603325366973877
    7. ' print' → logprob: -9.478324890136719
    8. '   ' → logprob: -11.353324890136719
    9. 'result' → logprob: -11.478324890136719
    10. 'import' → logprob: -12.103324890136719

Token 1255: ' Chaque' (ID: 94758)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005076381494291127
    2. 'count' → logprob: -8.000507354736328
    3. '       ' → logprob: -8.750507354736328
    4. 'result' → logprob: -12.250507354736328
    5. ' print' → logprob: -12.625507354736328
    6. '```' → logprob: -13.625507354736328
    7. 'total' → logprob: -13.875507354736328
    8. '#' → logprob: -14.125507354736328
    9. '        
' → logprob: -14.375507354736328
    10. 'pattern' → logprob: -14.375507354736328

Token 1256: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.46177056431770325
    2. 'valid' → logprob: -1.7117705345153809
    3. ' pattern' → logprob: -3.086770534515381
    4. 'token' → logprob: -3.086770534515381
    5. ' valid' → logprob: -3.336770534515381
    6. 'print' → logprob: -4.086770534515381
    7. '_valid' → logprob: -4.086770534515381
    8. '       ' → logprob: -5.461770534515381
    9. ')' → logprob: -5.586770534515381
    10. '#' → logprob: -5.586770534515381

Token 1257: ' dans' (ID: 2671)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9841269850730896
    2. ' =' → logprob: -1.9841270446777344
    3. '_valid' → logprob: -2.1091270446777344
    4. '_sorted' → logprob: -3.2341270446777344
    5. '_repr' → logprob: -3.3591270446777344
    6. '_count' → logprob: -3.4841270446777344
    7. 'len' → logprob: -3.6091270446777344
    8. ' est' → logprob: -3.9841270446777344
    9. '_' → logprob: -4.109127044677734
    10. 'valid' → logprob: -4.109127044677734

Token 1258: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.0005570820067077875
    2. ' valid' → logprob: -7.500556945800781
    3. '(valid' → logprob: -13.750556945800781
    4. 'len' → logprob: -14.375556945800781
    5. '
' → logprob: -14.500556945800781
    6. '	valid' → logprob: -14.625556945800781
    7. '```' → logprob: -15.375556945800781
    8. '       ' → logprob: -15.500556945800781
    9. '   ' → logprob: -15.500556945800781
    10. '_valid' → logprob: -15.875556945800781

Token 1259: '_patterns' (ID: 161400)
  Prédit: '_patterns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_patterns' → logprob: -3.292907877039397e-06
    2. 'patterns' → logprob: -13.62500286102295
    3. '_pat' → logprob: -14.00000286102295
    4. '_pattern' → logprob: -14.87500286102295
    5. '_pairs' → logprob: -15.00000286102295
    6. '\' → logprob: -15.87500286102295
    7. '_p' → logprob: -16.125003814697266
    8. 's' → logprob: -16.125003814697266
    9. '_' → logprob: -16.375003814697266
    10. '_positions' → logprob: -17.000003814697266

Token 1260: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6609466671943665
    2. '       ' → logprob: -1.2859466075897217
    3. ':
' → logprob: -1.6609466075897217
    4. 'for' → logprob: -4.535946846008301
    5. '        
' → logprob: -6.035946846008301
    6. '           ' → logprob: -7.160946846008301
    7. '```' → logprob: -7.285946846008301
    8. '#' → logprob: -7.410946846008301
    9. '
' → logprob: -7.785946846008301
    10. ',' → logprob: -8.0359468460083

Token 1261: ' une' (ID: 2463)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.4125818610191345
    2. ' un' → logprob: -1.7875819206237793
    3. 'un' → logprob: -2.5375819206237793
    4. ' len' → logprob: -3.2875819206237793
    5. ' une' → logprob: -3.4125819206237793
    6. 'une' → logprob: -4.287581920623779
    7. '#' → logprob: -6.287581920623779
    8. 'unique' → logprob: -7.412581920623779
    9. '(len' → logprob: -7.412581920623779
    10. 'valid' → logprob: -7.787581920623779

Token 1262: ' combinaison' (ID: 165933)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.7970824837684631
    2. ' set' → logprob: -1.1720824241638184
    3. 'len' → logprob: -2.4220824241638184
    4. 'tuple' → logprob: -2.9220824241638184
    5. 'pattern' → logprob: -3.5470824241638184
    6. 'pair' → logprob: -5.047082424163818
    7. ' len' → logprob: -5.297082424163818
    8. 'canonical' → logprob: -5.297082424163818
    9. ' combinaison' → logprob: -5.297082424163818
    10. ' paire' → logprob: -5.422082424163818

Token 1263: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31380364298820496
    2. ' de' → logprob: -1.8138036727905273
    3. 'de' → logprob: -3.8138036727905273
    4. ' des' → logprob: -4.438803672790527
    5. '   ' → logprob: -4.563803672790527
    6. '(
' → logprob: -5.313803672790527
    7. '        ' → logprob: -5.438803672790527
    8. ' complète' → logprob: -5.438803672790527
    9. '_unique' → logprob: -5.688803672790527
    10. '
' → logprob: -5.688803672790527

Token 1264: ''ap' (ID: 31362)
  Prédit: ' pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -1.2793197631835938
    2. 'pairs' → logprob: -1.5293197631835938
    3. ' tuples' → logprob: -1.5293197631835938
    4. ' p' → logprob: -2.0293197631835938
    5. 'p' → logprob: -2.5293197631835938
    6. ' des' → logprob: -3.0293197631835938
    7. 'des' → logprob: -5.154319763183594
    8. 'tu' → logprob: -5.404319763183594
    9. '(p' → logprob: -5.779319763183594
    10. ' paire' → logprob: -6.154319763183594

Token 1265: 'pari' (ID: 169452)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.5994014143943787
    2. 'p' → logprob: -1.2244014739990234
    3. 'pair' → logprob: -2.7244014739990234
    4. 'pari' → logprob: -2.8494014739990234
    5. 'par' → logprob: -4.474401473999023
    6. 'pai' → logprob: -5.349401473999023
    7. 'paren' → logprob: -6.099401473999023
    8. 'pare' → logprob: -6.099401473999023
    9. 'pro' → logprob: -6.724401473999023
    10. '_pairs' → logprob: -6.974401473999023

Token 1266: 'ement' (ID: 962)
  Prédit: 'ements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ements' → logprob: -0.42246559262275696
    2. 'ement' → logprob: -2.1724655628204346
    3. 'nements' → logprob: -2.2974655628204346
    4. 'nement' → logprob: -3.2974655628204346
    5. 't' → logprob: -3.4224655628204346
    6. 'rement' → logprob: -3.7974655628204346
    7. 'ment' → logprob: -4.672465801239014
    8. 'che' → logprob: -5.297465801239014
    9. 'e' → logprob: -5.672465801239014
    10. 're' → logprob: -5.922465801239014

Token 1267: ' 
' (ID: 793)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5732601881027222
    2. '(
' → logprob: -1.5732601881027222
    3. '(' → logprob: -2.4482603073120117
    4. ')' → logprob: -3.1982603073120117
    5. 's' → logprob: -3.5732603073120117
    6. ',
' → logprob: -3.6982603073120117
    7. '.' → logprob: -4.573260307312012
    8. '       ' → logprob: -5.823260307312012
    9. '{' → logprob: -5.948260307312012
    10. '   ' → logprob: -6.073260307312012

Token 1268: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8087840676307678
    2. ',' → logprob: -1.933784008026123
    3. 's' → logprob: -2.308784008026123
    4. '(' → logprob: -2.683784008026123
    5. '   ' → logprob: -3.058784008026123
    6. ',
' → logprob: -3.433784008026123
    7. '(
' → logprob: -3.558784008026123
    8. 'de' → logprob: -4.058784008026123
    9. '        
' → logprob: -4.308784008026123
    10. ' de' → logprob: -4.433784008026123

Token 1269: ' #' (ID: 1069)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.219298005104065
    2. ',' → logprob: -1.219298005104065
    3. 's' → logprob: -2.4692978858947754
    4. 'de' → logprob: -2.5942978858947754
    5. '(
' → logprob: -2.7192978858947754
    6. '=' → logprob: -3.5942978858947754
    7. '       ' → logprob: -4.094297885894775
    8. ' de' → logprob: -4.344297885894775
    9. '.' → logprob: -4.594297885894775
    10. ',
' → logprob: -4.594297885894775

Token 1270: ' représent' (ID: 42664)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40503859519958496
    2. '#' → logprob: -1.155038595199585
    3. 'for' → logprob: -5.655038833618164
    4. '```' → logprob: -6.280038833618164
    5. 'len' → logprob: -6.405038833618164
    6. '   ' → logprob: -6.530038833618164
    7. 'print' → logprob: -6.780038833618164
    8. 'pour' → logprob: -6.905038833618164
    9. '        
' → logprob: -7.030038833618164
    10. 'count' → logprob: -7.155038833618164

Token 1271: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.044490303844213486
    2. 'é' → logprob: -3.169490337371826
    3. 'és' → logprob: -7.419490337371826
    4. 'ant' → logprob: -7.544490337371826
    5. 'ées' → logprob: -8.169489860534668
    6. 'ee' → logprob: -10.044489860534668
    7. 'ation' → logprob: -10.544489860534668
    8. '#' → logprob: -13.294489860534668
    9. 'e' → logprob: -13.544489860534668
    10. 'É' → logprob: -13.919489860534668

Token 1272: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.5167111754417419
    2. ' par' → logprob: -1.0167112350463867
    3. 'as' → logprob: -4.391711235046387
    4. '=' → logprob: -5.391711235046387
    5. 'by' → logprob: -5.391711235046387
    6. ')' → logprob: -5.766711235046387
    7. 'comme' → logprob: -5.891711235046387
    8. ' =' → logprob: -6.391711235046387
    9. '_par' → logprob: -6.516711235046387
    10. '(' → logprob: -6.516711235046387

Token 1273: ' ' (ID: 220)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.8889492750167847
    2. 'tu' → logprob: -1.2639492750167847
    3. ' tuples' → logprob: -2.513949394226074
    4. 'pairs' → logprob: -3.013949394226074
    5. 'les' → logprob: -3.263949394226074
    6. ' tuple' → logprob: -3.388949394226074
    7. 'la' → logprob: -3.888949394226074
    8. 'len' → logprob: -4.138949394226074
    9. 'une' → logprob: -5.013949394226074
    10. ' des' → logprob: -5.138949394226074

Token 1274: '8' (ID: 23)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.8935180306434631
    2. 'canonical' → logprob: -0.8935180306434631
    3. 'tu' → logprob: -2.2685179710388184
    4. 'len' → logprob: -3.5185179710388184
    5. 'pairs' → logprob: -4.393517971038818
    6. 'pattern' → logprob: -4.643517971038818
    7. 'sorted' → logprob: -5.143517971038818
    8. 'les' → logprob: -5.893517971038818
    9. 'a' → logprob: -6.018517971038818
    10. 'la' → logprob: -6.143517971038818

Token 1275: ' p' (ID: 275)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.3011952042579651
    2. ' pairs' → logprob: -2.8011951446533203
    3. ' tuples' → logprob: -2.8011951446533203
    4. '(' → logprob: -3.3011951446533203
    5. 'tu' → logprob: -3.4261951446533203
    6. ',' → logprob: -3.8011951446533203
    7. ')' → logprob: -4.67619514465332
    8. '(p' → logprob: -5.30119514465332
    9. 'par' → logprob: -5.80119514465332
    10. ' (' → logprob: -5.92619514465332

Token 1276: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.1724649965763092
    2. 'airs' → logprob: -1.9224649667739868
    3. 'air' → logprob: -5.297464847564697
    4. 'a' → logprob: -5.797464847564697
    5. 'aire' → logprob: -6.672464847564697
    6. '(' → logprob: -7.547464847564697
    7. 'r' → logprob: -7.797464847564697
    8. 'ar' → logprob: -8.172465324401855
    9. ')' → logprob: -8.547465324401855
    10. 'pairs' → logprob: -8.672465324401855

Token 1277: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043225038796663284
    2. '        
' → logprob: -4.293224811553955
    3. '   ' → logprob: -4.918224811553955
    4. '
' → logprob: -5.168224811553955
    5. ',' → logprob: -5.293224811553955
    6. ':' → logprob: -5.668224811553955
    7. '.' → logprob: -6.293224811553955
    8. ':
' → logprob: -6.793224811553955
    9. ',
' → logprob: -7.293224811553955
    10. '```' → logprob: -7.418224811553955

Token 1278: 'indices' (ID: 30992)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4787212610244751
    2. ',' → logprob: -1.978721261024475
    3. '(' → logprob: -2.3537211418151855
    4. ' (' → logprob: -2.9787211418151855
    5. '),' → logprob: -4.6037211418151855
    6. 'indices' → logprob: -4.6037211418151855
    7. '(p' → logprob: -4.6037211418151855
    8. 'positions' → logprob: -4.7287211418151855
    9. '(position' → logprob: -5.2287211418151855
    10. 'tu' → logprob: -5.3537211418151855

Token 1279: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17989389598369598
    2. ',' → logprob: -2.179893970489502
    3. '),' → logprob: -3.179893970489502
    4. '(' → logprob: -6.179893970489502
    5. ' ,' → logprob: -6.804893970489502
    6. ' (' → logprob: -7.054893970489502
    7. ',)' → logprob: -7.054893970489502
    8. 's' → logprob: -7.429893970489502
    9. ',
' → logprob: -7.429893970489502
    10. ' )' → logprob: -7.554893970489502

Token 1280: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11825507134199142
    2. 'count' → logprob: -2.243255138397217
    3. 'total' → logprob: -5.993255138397217
    4. '```' → logprob: -6.618255138397217
    5. '        
' → logprob: -7.368255138397217
    6. 'result' → logprob: -7.743255138397217
    7. '
' → logprob: -8.243254661560059
    8. 'print' → logprob: -9.743254661560059
    9. 'for' → logprob: -9.868254661560059
    10. 'counts' → logprob: -10.118254661560059

Token 1281: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0414152517914772
    2. 'print' → logprob: -3.791415214538574
    3. 'count' → logprob: -4.416415214538574
    4. '        
' → logprob: -5.791415214538574
    5. '```' → logprob: -6.541415214538574
    6. '
' → logprob: -7.291415214538574
    7. 'total' → logprob: -8.041415214538574
    8. '   ' → logprob: -8.541415214538574
    9. 'result' → logprob: -9.791415214538574
    10. '    
' → logprob: -10.666415214538574

Token 1282: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.051777638494968414
    2. 'print' → logprob: -3.5517776012420654
    3. '       ' → logprob: -4.6767778396606445
    4. 'total' → logprob: -5.5517778396606445
    5. 'counts' → logprob: -5.6767778396606445
    6. 'result' → logprob: -5.8017778396606445
    7. 'pattern' → logprob: -6.9267778396606445
    8. 'counter' → logprob: -7.0517778396606445
    9. 'answer' → logprob: -9.176777839660645
    10. 'patterns' → logprob: -9.926777839660645

Token 1283: ' Il' (ID: 5329)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.033284738659858704
    2. 'count' → logprob: -3.5332846641540527
    3. '       ' → logprob: -6.033284664154053
    4. 'result' → logprob: -7.783284664154053
    5. 'counts' → logprob: -8.033285140991211
    6. 'pattern' → logprob: -9.033285140991211
    7. '#' → logprob: -9.658285140991211
    8. 'total' → logprob: -9.908285140991211
    9. 'answer' → logprob: -10.158285140991211
    10. 'counter' → logprob: -10.408285140991211

Token 1284: ' faut' (ID: 17821)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0319660902023315
    2. '_' → logprob: -1.7819660902023315
    3. '       ' → logprob: -1.7819660902023315
    4. 's' → logprob: -2.906966209411621
    5. 'est' → logprob: -3.281966209411621
    6. ' n' → logprob: -3.281966209411621
    7. '=' → logprob: -3.281966209411621
    8. ')' → logprob: -3.656966209411621
    9. '   ' → logprob: -3.781966209411621
    10. 'for' → logprob: -4.031966209411621

Token 1285: ' gérer' (ID: 86786)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011907290667295456
    2. '       ' → logprob: -5.38690710067749
    3. '#' → logprob: -5.51190710067749
    4. '```' → logprob: -7.26190710067749
    5. 'count' → logprob: -7.51190710067749
    6. '
' → logprob: -7.63690710067749
    7. 'len' → logprob: -7.88690710067749
    8. 'pr' → logprob: -8.011907577514648
    9. '   ' → logprob: -8.386907577514648
    10. 'prendre' → logprob: -9.511907577514648

Token 1286: ' la' (ID: 557)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5233161449432373
    2. '#' → logprob: -1.8983161449432373
    3. 'la' → logprob: -2.2733161449432373
    4. ' la' → logprob: -3.0233161449432373
    5. 'le' → logprob: -3.5233161449432373
    6. '```' → logprob: -3.7733161449432373
    7. 'les' → logprob: -4.023316383361816
    8. 'l' → logprob: -4.898316383361816
    9. 'un' → logprob: -5.148316383361816
    10. '   ' → logprob: -5.398316383361816

Token 1287: ' double' (ID: 3503)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5937357544898987
    2. 'com' → logprob: -2.093735694885254
    3. 'comp' → logprob: -2.218735694885254
    4. 'sym' → logprob: -2.218735694885254
    5. 'count' → logprob: -3.593735694885254
    6. 'print' → logprob: -3.968735694885254
    7. 'visited' → logprob: -4.968735694885254
    8. 'import' → logprob: -5.093735694885254
    9. ' #' → logprob: -5.343735694885254
    10. 'from' → logprob: -5.343735694885254

Token 1288: ' compt' (ID: 39238)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8461854457855225
    2. 's' → logprob: -1.4711854457855225
    3. '_s' → logprob: -2.8461854457855225
    4. '\' → logprob: -3.2211854457855225
    5. '_count' → logprob: -3.2211854457855225
    6. '#' → logprob: -4.346185684204102
    7. 'count' → logprob: -4.471185684204102
    8. 'underscore' → logprob: -4.471185684204102
    9. 'com' → logprob: -4.596185684204102
    10. '_parent' → logprob: -4.846185684204102

Token 1289: 'abil' (ID: 4168)
  Prédit: 'age'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.04989376664161682
    2. 'e' → logprob: -3.049893856048584
    3. 'é' → logprob: -7.674893856048584
    4. 'te' → logprob: -8.174893379211426
    5. 'es' → logprob: -8.299893379211426
    6. 'tage' → logprob: -9.799893379211426
    7. ')' → logprob: -10.549893379211426
    8. '}' → logprob: -10.924893379211426
    9. 'eg' → logprob: -10.924893379211426
    10. 'ure' → logprob: -11.174893379211426

Token 1290: 'isation' (ID: 6993)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.0513509176671505
    2. 'e' → logprob: -3.3013508319854736
    3. 'ion' → logprob: -5.301351070404053
    4. 'age' → logprob: -5.801351070404053
    5. ')' → logprob: -6.801351070404053
    6. 'ing' → logprob: -7.551351070404053
    7. 'aire' → logprob: -7.676351070404053
    8. '   ' → logprob: -8.176350593566895
    9. 'ité' → logprob: -8.426350593566895
    10. 'ération' → logprob: -8.551350593566895

Token 1291: ' des' (ID: 731)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9026948809623718
    2. '       ' → logprob: -1.4026949405670166
    3. ' des' → logprob: -1.5276949405670166
    4. 'des' → logprob: -3.0276949405670166
    5. '        
' → logprob: -4.1526947021484375
    6. 'due' → logprob: -4.2776947021484375
    7. 'def' → logprob: -4.6526947021484375
    8. '
' → logprob: -5.4026947021484375
    9. ',' → logprob: -5.4026947021484375
    10. 'from' → logprob: -5.5276947021484375

Token 1292: ' motifs' (ID: 89637)
  Prédit: ' permutations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.43222323060035706
    2. 'patterns' → logprob: -1.8072232007980347
    3. ' patterns' → logprob: -3.807223320007324
    4. 'per' → logprob: -3.807223320007324
    5. ' motifs' → logprob: -3.932223320007324
    6. 'p' → logprob: -3.932223320007324
    7. 'mot' → logprob: -4.057223320007324
    8. 'sym' → logprob: -4.307223320007324
    9. 'pattern' → logprob: -4.307223320007324
    10. ' sym' → logprob: -4.557223320007324

Token 1293: ' équ' (ID: 18899)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7607144713401794
    2. '#' → logprob: -1.1357145309448242
    3. 'from' → logprob: -1.7607145309448242
    4. 'import' → logprob: -5.010714530944824
    5. '```' → logprob: -5.010714530944824
    6. 'par' → logprob: -5.135714530944824
    7. 'def' → logprob: -5.885714530944824
    8. '   ' → logprob: -6.385714530944824
    9. 'due' → logprob: -6.385714530944824
    10. ',' → logprob: -6.385714530944824

Token 1294: 'ival' (ID: 4552)
  Prédit: 'iv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.6211017370223999
    2. 'ival' → logprob: -1.3711017370224
    3. 'i' → logprob: -1.7461017370224
    4. '=' → logprob: -4.1211018562316895
    5. '_' → logprob: -5.2461018562316895
    6. '}' → logprob: -6.3711018562316895
    7. ' =' → logprob: -6.9961018562316895
    8. 'ivalent' → logprob: -6.9961018562316895
    9. 'aux' → logprob: -7.1211018562316895
    10. '|' → logprob: -7.4961018562316895

Token 1295: 'ents' (ID: 1094)
  Prédit: 'ents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.026953011751174927
    2. 'aux' → logprob: -3.6519529819488525
    3. 'ent' → logprob: -7.776953220367432
    4. 'alent' → logprob: -9.526952743530273
    5. 'al' → logprob: -9.901952743530273
    6. 'a' → logprob: -10.526952743530273
    7. 'ants' → logprob: -10.776952743530273
    8. 'val' → logprob: -11.026952743530273
    9. 'ence' → logprob: -11.651952743530273
    10. '#' → logprob: -12.026952743530273

Token 1296: ' par' (ID: 686)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3074920177459717
    2. '#' → logprob: -2.1824920177459717
    3. '        
' → logprob: -3.1824920177459717
    4. 'def' → logprob: -3.5574920177459717
    5. '
' → logprob: -3.6824920177459717
    6. ',' → logprob: -4.432492256164551
    7. '```' → logprob: -4.557492256164551
    8. ',
' → logprob: -5.057492256164551
    9. 'from' → logprob: -5.432492256164551
    10. '   ' → logprob: -5.432492256164551

Token 1297: ' échange' (ID: 139953)
  Prédit: ' permutations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.43884485960006714
    2. ' permutation' → logprob: -1.188844919204712
    3. 'per' → logprob: -3.813844919204712
    4. ' perm' → logprob: -3.938844919204712
    5. 'perm' → logprob: -5.438844680786133
    6. 'com' → logprob: -7.188844680786133
    7. ' la' → logprob: -7.688844680786133
    8. '#' → logprob: -7.813844680786133
    9. 'les' → logprob: -7.938844680786133
    10. '```' → logprob: -8.063844680786133

Token 1298: ' des' (ID: 731)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.767367959022522
    2. ' de' → logprob: -1.392367959022522
    3. ' des' → logprob: -1.892367959022522
    4. 'des' → logprob: -2.0173678398132324
    5. 's' → logprob: -7.142367839813232
    6. 'def' → logprob: -7.392367839813232
    7. 'd' → logprob: -7.892367839813232
    8. '_de' → logprob: -8.26736831665039
    9. 'entre' → logprob: -8.39236831665039
    10. 'import' → logprob: -8.51736831665039

Token 1299: ' symbol' (ID: 10038)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7389167547225952
    2. 'pairs' → logprob: -1.2389167547225952
    3. ' p' → logprob: -1.8639167547225952
    4. ' pairs' → logprob: -2.8639168739318848
    5. 'pair' → logprob: -4.988916873931885
    6. 'pa' → logprob: -5.113916873931885
    7. ',' → logprob: -6.488916873931885
    8. '```' → logprob: -6.613916873931885
    9. ' ' → logprob: -7.363916873931885
    10. 'positions' → logprob: -7.363916873931885

Token 1300: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.5056855082511902
    2. '_' → logprob: -1.005685567855835
    3. 'e' → logprob: -4.630685329437256
    4. ')' → logprob: -5.255685329437256
    5. ' _' → logprob: -5.255685329437256
    6. 's' → logprob: -5.505685329437256
    7. '_pairs' → logprob: -6.005685329437256
    8. ' pairs' → logprob: -7.630685329437256
    9. ''' → logprob: -7.630685329437256
    10. '```' → logprob: -7.755685329437256

Token 1301: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7760236859321594
    2. '        
' → logprob: -2.0260236263275146
    3. ',' → logprob: -2.5260236263275146
    4. '
' → logprob: -2.6510236263275146
    5. 'def' → logprob: -2.9010236263275146
    6. '#' → logprob: -2.9010236263275146
    7. ',
' → logprob: -3.5260236263275146
    8. '   ' → logprob: -3.6510236263275146
    9. 'import' → logprob: -3.7760236263275146
    10. '```' → logprob: -4.651023864746094

Token 1302: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.798183262348175
    2. '       ' → logprob: -1.4231832027435303
    3. '_' → logprob: -1.9231832027435303
    4. '#' → logprob: -3.5481832027435303
    5. ')' → logprob: -3.6731832027435303
    6. ' _' → logprob: -4.548183441162109
    7. 's' → logprob: -4.798183441162109
    8. ',
' → logprob: -4.798183441162109
    9. '<|end|>' → logprob: -4.798183441162109
    10. '```' → logprob: -4.923183441162109

Token 1303: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07648541033267975
    2. '
' → logprob: -3.8264853954315186
    3. '#' (adapté à ' #') → logprob: -3.9514853954315186
    4. '        
' → logprob: -3.9514853954315186
    5. '```' → logprob: -5.826485633850098
    6. ',' → logprob: -5.951485633850098
    7. '\' → logprob: -6.826485633850098
    8. '   ' → logprob: -7.076485633850098
    9. ',
' → logprob: -7.076485633850098
    10. 'for' → logprob: -7.201485633850098

Token 1304: ' "' (ID: 392)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5177381038665771
    2. '#' → logprob: -1.1427381038665771
    3. 'from' → logprob: -4.142738342285156
    4. '```' → logprob: -4.642738342285156
    5. 'counts' → logprob: -4.642738342285156
    6. '
' → logprob: -5.017738342285156
    7. 'symbols' → logprob: -5.142738342285156
    8. '        
' → logprob: -5.267738342285156
    9. 'def' → logprob: -5.517738342285156
    10. 'symbol' → logprob: -5.642738342285156

Token 1305: 'patterns' (ID: 58184)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.23466941714286804
    2. '       ' → logprob: -1.6096694469451904
    3. '
' → logprob: -6.484669208526611
    4. 'def' → logprob: -7.109669208526611
    5. 'counts' → logprob: -7.109669208526611
    6. '```' → logprob: -7.109669208526611
    7. 'count' → logprob: -7.484669208526611
    8. 'from' → logprob: -7.609669208526611
    9. 'symbol' → logprob: -7.734669208526611
    10. 'sym' → logprob: -7.859669208526611

Token 1306: ' équ' (ID: 18899)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4362571239471436
    2. ')' → logprob: -1.5612571239471436
    3. ' =' → logprob: -1.8112571239471436
    4. 's' → logprob: -1.9362571239471436
    5. '_s' → logprob: -2.4362571239471436
    6. '_sorted' → logprob: -2.4362571239471436
    7. '_unique' → logprob: -3.8112571239471436
    8. '=' → logprob: -4.186257362365723
    9. ',' → logprob: -4.686257362365723
    10. ')_' → logprob: -5.811257362365723

Token 1307: 'ival' (ID: 4552)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.510384738445282
    2. ' =' → logprob: -1.6353847980499268
    3. '_' → logprob: -3.1353847980499268
    4. 'i' → logprob: -3.2603847980499268
    5. ')' → logprob: -3.3853847980499268
    6. 'iv' → logprob: -3.7603847980499268
    7. ''' → logprob: -4.510384559631348
    8. 'v' → logprob: -4.760384559631348
    9. 'ival' → logprob: -4.885384559631348
    10. '=
' → logprob: -5.010384559631348

Token 1308: 'ents' (ID: 1094)
  Prédit: 'ents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.0029684302862733603
    2. 'ent' → logprob: -5.8779683113098145
    3. 'aux' → logprob: -9.502968788146973
    4. 'nts' → logprob: -10.127968788146973
    5. 'entes' → logprob: -10.752968788146973
    6. 'd' → logprob: -12.252968788146973
    7. 'ants' → logprob: -12.502968788146973
    8. 'ence' → logprob: -12.752968788146973
    9. 'nt' → logprob: -13.377968788146973
    10. 'ts' → logprob: -13.502968788146973

Token 1309: '"' (ID: 1)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8801668286323547
    2. '"' → logprob: -1.38016676902771
    3. ')' → logprob: -2.00516676902771
    4. ',' → logprob: -2.88016676902771
    5. ' =' → logprob: -3.38016676902771
    6. '
' → logprob: -4.130167007446289
    7. '=' → logprob: -4.380167007446289
    8. 's' → logprob: -4.380167007446289
    9. '<|end|>' → logprob: -4.630167007446289
    10. ':' → logprob: -4.880167007446289

Token 1310: ' si' (ID: 1784)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7183036208152771
    2. 'def' → logprob: -1.3433036804199219
    3. ',' → logprob: -2.968303680419922
    4. '
' → logprob: -3.218303680419922
    5. '=' → logprob: -3.593303680419922
    6. '#' → logprob: -3.593303680419922
    7. '       ' → logprob: -4.093303680419922
    8. '        
' → logprob: -4.093303680419922
    9. ':' → logprob: -4.343303680419922
    10. ',
' → logprob: -4.468303680419922

Token 1311: ' on' (ID: 402)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.4700396060943604
    2. ' on' → logprob: -1.5950396060943604
    3. 'on' → logprob: -1.7200396060943604
    4. 'len' → logprob: -2.3450396060943604
    5. 'patterns' → logprob: -2.5950396060943604
    6. ' les' → logprob: -2.9700396060943604
    7. '#' → logprob: -3.2200396060943604
    8. ' patterns' → logprob: -3.9700396060943604
    9. 'pattern' → logprob: -4.095039367675781
    10. 'le' → logprob: -4.720039367675781

Token 1312: ' perm' (ID: 5961)
  Prédit: ' perm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' perm' → logprob: -1.4942423105239868
    2. 'perm' → logprob: -1.4942423105239868
    3. ' échange' → logprob: -1.4942423105239868
    4. ' considère' → logprob: -1.9942423105239868
    5. ' applique' → logprob: -3.1192421913146973
    6. 'pe' → logprob: -3.9942421913146973
    7. 'les' → logprob: -4.119242191314697
    8. ' les' → logprob: -4.119242191314697
    9. 'per' → logprob: -4.369242191314697
    10. 'rem' → logprob: -4.619242191314697

Token 1313: 'ute' (ID: 1331)
  Prédit: 'ute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ute' → logprob: -0.10837864130735397
    2. 'ut' → logprob: -3.2333786487579346
    3. 'utable' → logprob: -4.1083784103393555
    4. 'utations' → logprob: -4.2333784103393555
    5. 'et' → logprob: -4.7333784103393555
    6. 'utate' → logprob: -4.9833784103393555
    7. 'utte' → logprob: -5.1083784103393555
    8. 'u' → logprob: -5.4833784103393555
    9. 'utation' → logprob: -5.7333784103393555
    10. 'uta' → logprob: -7.1083784103393555

Token 1314: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.2950888872146606
    2. ')' → logprob: -1.7950888872146606
    3. '(p' → logprob: -2.420088768005371
    4. ',' → logprob: -2.420088768005371
    5. '(' → logprob: -3.045088768005371
    6. 'pairs' → logprob: -3.045088768005371
    7. ' pairs' → logprob: -3.295088768005371
    8. ' les' → logprob: -3.295088768005371
    9. '   ' → logprob: -3.795088768005371
    10. '       ' → logprob: -3.795088768005371

Token 1315: ' p' (ID: 275)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.4418827295303345
    2. '(' → logprob: -1.8168827295303345
    3. 'range' → logprob: -2.066882610321045
    4. '('' → logprob: -3.941882610321045
    5. 'patterns' → logprob: -4.316882610321045
    6. '(range' → logprob: -4.566882610321045
    7. '(p' → logprob: -5.316882610321045
    8. 'pattern' → logprob: -5.941882610321045
    9. '[' → logprob: -5.941882610321045
    10. '("' → logprob: -6.066882610321045

Token 1316: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.07647822797298431
    2. 'airs' → logprob: -2.8264782428741455
    3. 'air' → logprob: -5.701478004455566
    4. 'a' → logprob: -5.951478004455566
    5. '[' → logprob: -6.826478004455566
    6. 'ai' → logprob: -6.951478004455566
    7. 'p' → logprob: -7.201478004455566
    8. 'aire' → logprob: -7.326478004455566
    9. 'pairs' → logprob: -7.388978004455566
    10. '```' → logprob: -7.826478004455566

Token 1317: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38321876525878906
    2. '
' → logprob: -1.383218765258789
    3. '        
' → logprob: -3.133218765258789
    4. 'def' → logprob: -5.508218765258789
    5. '   ' → logprob: -5.633218765258789
    6. '<|end|>' → logprob: -5.633218765258789
    7. ',' → logprob: -5.883218765258789
    8. '```' → logprob: -6.133218765258789
    9. '#' → logprob: -6.383218765258789
    10. ',
' → logprob: -6.633218765258789

Token 1318: ' mais' (ID: 2899)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3938744068145752
    2. '       ' → logprob: -1.1438744068145752
    3. ' #' → logprob: -5.893874168395996
    4. '```' → logprob: -5.893874168395996
    5. '   ' → logprob: -8.268874168395996
    6. 'et' → logprob: -8.518874168395996
    7. '        
' → logprob: -8.518874168395996
    8. 'def' → logprob: -8.893874168395996
    9. '        ' → logprob: -9.768874168395996
    10. ' et' → logprob: -9.893874168395996

Token 1319: ' notre' (ID: 12092)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.234171062707901
    2. ' pas' → logprob: -2.984171152114868
    3. ' #' → logprob: -3.109171152114868
    4. ' les' → logprob: -3.359171152114868
    5. 'pas' → logprob: -3.609171152114868
    6. 'les' → logprob: -3.984171152114868
    7. '...' → logprob: -5.484170913696289
    8. 'le' → logprob: -5.484170913696289
    9. ' la' → logprob: -5.734170913696289
    10. '<|end|>' → logprob: -6.234170913696289

Token 1320: ' pattern' (ID: 8302)
  Prédit: ' canonical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' canonical' → logprob: -0.7785850167274475
    2. 'canonical' → logprob: -0.9035850167274475
    3. ')' → logprob: -3.2785849571228027
    4. ' code' → logprob: -3.9035849571228027
    5. 'patterns' → logprob: -4.278584957122803
    6. 'def' → logprob: -4.653584957122803
    7. ' valid' → logprob: -5.403584957122803
    8. ' patterns' → logprob: -5.403584957122803
    9. 'valid' → logprob: -5.778584957122803
    10. 'code' → logprob: -5.778584957122803

Token 1321: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8821883797645569
    2. '=' → logprob: -1.757188320159912
    3. ' =' → logprob: -1.882188320159912
    4. 'canonical' → logprob: -2.257188320159912
    5. '<|end|>' → logprob: -3.132188320159912
    6. 's' → logprob: -3.132188320159912
    7. '_can' → logprob: -4.507188320159912
    8. ' canonical' → logprob: -4.632188320159912
    9. 'can' → logprob: -5.132188320159912
    10. '
' → logprob: -5.257188320159912

Token 1322: ' déjà' (ID: 21229)
  Prédit: ' already'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' already' → logprob: -0.9890082478523254
    2. 'already' → logprob: -1.3640081882476807
    3. 'dé' → logprob: -1.6140081882476807
    4. ' déjà' → logprob: -2.2390081882476807
    5. 'canonical' → logprob: -3.7390081882476807
    6. ' canon' → logprob: -3.9890081882476807
    7. ' canonical' → logprob: -4.61400842666626
    8. 'canon' → logprob: -4.73900842666626
    9. ' dé' → logprob: -5.73900842666626
    10. ' a' → logprob: -7.61400842666626

Token 1323: ' tri' (ID: 12665)
  Prédit: 'canon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'canon' → logprob: -0.9232455492019653
    2. 'canonical' → logprob: -1.1732455492019653
    3. 'tri' → logprob: -1.4232455492019653
    4. 'un' → logprob: -4.423245429992676
    5. ' canon' → logprob: -4.423245429992676
    6. 'can' → logprob: -4.423245429992676
    7. ' tri' → logprob: -5.298245429992676
    8. 'une' → logprob: -5.798245429992676
    9. 'tuple' → logprob: -6.173245429992676
    10. ' canonical' → logprob: -6.298245429992676

Token 1324: 'é' (ID: 377)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.7119035124778748
    2. 'é' → logprob: -1.0869035720825195
    3. 'ed' → logprob: -1.8369035720825195
    4. 'ées' → logprob: -4.9619035720825195
    5. 'e' → logprob: -6.2119035720825195
    6. 'éd' → logprob: -6.9619035720825195
    7. 'és' → logprob: -7.2119035720825195
    8. 'd' → logprob: -7.7119035720825195
    9. 'p' → logprob: -7.7119035720825195
    10. 'pl' → logprob: -8.58690357208252

Token 1325: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021133486181497574
    2. '        
' → logprob: -4.3961334228515625
    3. ',' → logprob: -5.5211334228515625
    4. '
' → logprob: -6.7711334228515625
    5. '<|end|>' → logprob: -6.8961334228515625
    6. ')' → logprob: -7.1461334228515625
    7. ',
' → logprob: -8.146133422851562
    8. '#' → logprob: -8.271133422851562
    9. '```' → logprob: -8.646133422851562
    10. ')
' → logprob: -8.646133422851562

Token 1326: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1686914712190628
    2. ')' → logprob: -2.668691396713257
    3. ',' → logprob: -2.668691396713257
    4. '   ' → logprob: -4.793691635131836
    5. ',
' → logprob: -6.543691635131836
    6. '.' → logprob: -6.668691635131836
    7. '(' → logprob: -6.793691635131836
    8. '(
' → logprob: -7.293691635131836
    9. '...' → logprob: -7.793691635131836
    10. '        
' → logprob: -7.793691635131836

Token 1327: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08835309743881226
    2. '   ' → logprob: -3.713353157043457
    3. '        
' → logprob: -4.088353157043457
    4. '
' → logprob: -4.338353157043457
    5. '```' → logprob: -5.088353157043457
    6. '#' (adapté à ' #') → logprob: -5.338353157043457
    7. ',' → logprob: -5.588353157043457
    8. 'for' → logprob: -5.838353157043457
    9. '<|end|>' → logprob: -6.088353157043457
    10. '    
' → logprob: -6.463353157043457

Token 1328: ' donc' (ID: 14206)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28187137842178345
    2. 'print' → logprob: -1.7818713188171387
    3. '#' → logprob: -3.0318713188171387
    4. '        
' → logprob: -4.531871318817139
    5. 'count' → logprob: -4.781871318817139
    6. '
' → logprob: -5.156871318817139
    7. '```' → logprob: -6.656871318817139
    8. 'result' → logprob: -7.281871318817139
    9. 'total' → logprob: -7.281871318817139
    10. '   ' → logprob: -8.656871795654297

Token 1329: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5535701513290405
    2. 'pas' → logprob: -2.55357027053833
    3. 'on' → logprob: -2.80357027053833
    4. '       ' → logprob: -3.05357027053833
    5. 'print' → logprob: -3.05357027053833
    6. 'il' → logprob: -3.17857027053833
    7. 'auc' → logprob: -3.67857027053833
    8. 'ils' → logprob: -4.17857027053833
    9. 'le' → logprob: -4.55357027053833
    10. 'la' → logprob: -4.55357027053833

Token 1330: ' a' (ID: 261)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.40361419320106506
    2. ' continue' → logprob: -1.2786141633987427
    3. 'contin' → logprob: -3.6536142826080322
    4. 'return' → logprob: -4.778614044189453
    5. ' continues' → logprob: -5.778614044189453
    6. ' peut' → logprob: -6.278614044189453
    7. 'continu' → logprob: -6.278614044189453
    8. '_continue' → logprob: -6.403614044189453
    9. ' considère' → logprob: -6.403614044189453
    10. ' return' → logprob: -6.778614044189453

Token 1331: ' déjà' (ID: 21229)
  Prédit: 'uni'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uni' → logprob: -1.1196988821029663
    2. 'dé' → logprob: -1.4946988821029663
    3. 'len' → logprob: -1.9946988821029663
    4. 'une' → logprob: -2.869699001312256
    5. 'direct' → logprob: -2.994699001312256
    6. 'just' → logprob: -3.369699001312256
    7. 'exact' → logprob: -3.619699001312256
    8. 'pr' → logprob: -4.119699001312256
    9. 'print' → logprob: -4.119699001312256
    10. ' déjà' → logprob: -4.369699001312256

Token 1332: ' canon' (ID: 48572)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.0378389358520508
    2. 'év' → logprob: -1.2878389358520508
    3. 'une' → logprob: -2.912838935852051
    4. 'un' → logprob: -3.037838935852051
    5. 'uni' → logprob: -3.162838935852051
    6. 'la' → logprob: -3.412838935852051
    7. 'le' → logprob: -3.662838935852051
    8. 'pris' → logprob: -3.787838935852051
    9. 'l' → logprob: -4.287838935852051
    10. 'trait' → logprob: -4.287838935852051

Token 1333: 'isé' (ID: 30065)
  Prédit: 'ique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.14924587309360504
    2. 'ical' → logprob: -2.0242459774017334
    3. ')' → logprob: -6.149245738983154
    4. 'ic' → logprob: -6.274245738983154
    5. 'nique' → logprob: -6.524245738983154
    6. 'iques' → logprob: -7.399245738983154
    7. 'icale' → logprob: -8.399246215820312
    8. 'ïque' → logprob: -9.649246215820312
    9. 'ically' → logprob: -10.399246215820312
    10. '))' → logprob: -10.899246215820312

Token 1334: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11207156628370285
    2. '        
' → logprob: -2.8620715141296387
    3. '
' → logprob: -3.1120715141296387
    4. '```' → logprob: -6.362071514129639
    5. '<|end|>' → logprob: -6.737071514129639
    6. 'print' → logprob: -7.237071514129639
    7. '  
' → logprob: -8.987071990966797
    8. ',' → logprob: -9.487071990966797
    9. '   ' → logprob: -9.737071990966797
    10. '            
' → logprob: -9.862071990966797

Token 1335: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16036425530910492
    2. 'count' → logprob: -2.9103641510009766
    3. 'print' → logprob: -3.2853641510009766
    4. '
' → logprob: -3.4103641510009766
    5. '        
' → logprob: -4.035364151000977
    6. 'total' → logprob: -5.535364151000977
    7. '```' → logprob: -7.285364151000977
    8. 'result' → logprob: -8.660364151000977
    9. 'counts' → logprob: -8.785364151000977
    10. '   ' → logprob: -8.910364151000977

Token 1336: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0728326290845871
    2. '        
' → logprob: -2.8228325843811035
    3. '
' → logprob: -5.6978325843811035
    4. 'print' → logprob: -6.0728325843811035
    5. '```' → logprob: -6.3228325843811035
    6. 'count' → logprob: -6.6978325843811035
    7. '   ' → logprob: -7.1978325843811035
    8. 'result' → logprob: -7.8228325843811035
    9. '    
' → logprob: -7.9478325843811035
    10. '  
' → logprob: -9.322833061218262

Token 1337: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05127141252160072
    2. 'count' → logprob: -3.176271438598633
    3. '       ' → logprob: -4.926271438598633
    4. 'result' → logprob: -7.676271438598633
    5. '
' → logprob: -8.676271438598633
    6. '```' → logprob: -8.926271438598633
    7. 'total' → logprob: -9.551271438598633
    8. '        
' → logprob: -10.051271438598633
    9. 'counter' → logprob: -10.926271438598633
    10. 'answer' → logprob: -10.926271438598633

Token 1338: ' Maintenant' (ID: 163349)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00834541954100132
    2. 'count' → logprob: -4.883345603942871
    3. '       ' → logprob: -7.508345603942871
    4. '#' → logprob: -9.508345603942871
    5. 'result' → logprob: -10.008345603942871
    6. 'total' → logprob: -10.758345603942871
    7. ' print' → logprob: -11.258345603942871
    8. '        
' → logprob: -11.508345603942871
    9. '```' → logprob: -12.133345603942871
    10. 'pattern' → logprob: -12.258345603942871

Token 1339: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010390779934823513
    2. 'print' → logprob: -5.260390758514404
    3. 'count' → logprob: -5.760390758514404
    4. '        
' → logprob: -7.135390758514404
    5. 'total' → logprob: -7.885390758514404
    6. '   ' → logprob: -9.135391235351562
    7. 'nombre' → logprob: -9.385391235351562
    8. 'result' → logprob: -9.385391235351562
    9. '#' → logprob: -9.510391235351562
    10. ' print' → logprob: -9.635391235351562

Token 1340: ' il' (ID: 1793)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19077931344509125
    2. ' print' → logprob: -2.315779209136963
    3. 'count' → logprob: -2.815779209136963
    4. 'result' → logprob: -4.565779209136963
    5. ' count' → logprob: -6.315779209136963
    6. '       ' → logprob: -6.815779209136963
    7. ' result' → logprob: -6.815779209136963
    8. 'total' → logprob: -8.440779685974121
    9. ' #' → logprob: -9.315779685974121
    10. '#' → logprob: -9.315779685974121

Token 1341: ' faut' (ID: 17821)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31191858649253845
    2. '   ' → logprob: -2.1869184970855713
    3. '=' → logprob: -3.4369184970855713
    4. ' =' → logprob: -3.9369184970855713
    5. '_' → logprob: -4.18691873550415
    6. ' faut' → logprob: -4.43691873550415
    7. 'print' → logprob: -4.43691873550415
    8. '#' → logprob: -4.56191873550415
    9. ' reste' → logprob: -4.56191873550415
    10. 'est' → logprob: -4.93691873550415

Token 1342: ' élim' (ID: 108134)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11052102595567703
    2. '       ' → logprob: -2.485521078109741
    3. 'count' → logprob: -4.610520839691162
    4. ' compter' → logprob: -5.485520839691162
    5. 'comp' → logprob: -6.235520839691162
    6. '#' → logprob: -6.235520839691162
    7. ' print' → logprob: -6.485520839691162
    8. '```' → logprob: -7.360520839691162
    9. 'calcul' → logprob: -8.11052131652832
    10. '   ' → logprob: -8.23552131652832

Token 1343: 'iner' (ID: 6010)
  Prédit: 'iner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iner' → logprob: -1.2664456789934775e-06
    2. 'ner' → logprob: -15.125000953674316
    3. '   ' → logprob: -15.500000953674316
    4. 'îner' → logprob: -15.625000953674316
    5. 'urer' → logprob: -15.875000953674316
    6. 'er' → logprob: -16.500001907348633
    7. 'iter' → logprob: -16.750001907348633
    8. '
' → logprob: -17.125001907348633
    9. 'inner' → logprob: -17.375001907348633
    10. 'ine' → logprob: -17.500001907348633

Token 1344: ' ceux' (ID: 26863)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.17472565174102783
    2. 'les' → logprob: -2.0497255325317383
    3. '_duplicates' → logprob: -4.674725532531738
    4. '_' → logprob: -5.799725532531738
    5. ' celles' → logprob: -5.924725532531738
    6. ' duplicates' → logprob: -5.924725532531738
    7. 'd' → logprob: -6.049725532531738
    8. ' ceux' → logprob: -6.174725532531738
    9. '#' → logprob: -6.674725532531738
    10. '```' → logprob: -7.049725532531738

Token 1345: ' qui' (ID: 2780)
  Prédit: ' qui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qui' → logprob: -0.18054406344890594
    2. 'qui' → logprob: -2.055544137954712
    3. '_' → logprob: -4.805543899536133
    4. '#' → logprob: -4.930543899536133
    5. '_d' → logprob: -5.430543899536133
    6. '_duplicates' → logprob: -5.805543899536133
    7. ' des' → logprob: -6.055543899536133
    8. '       ' → logprob: -6.430543899536133
    9. '_des' → logprob: -6.430543899536133
    10. ' déjà' → logprob: -6.930543899536133

Token 1346: ' sont' (ID: 5242)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.9120506048202515
    2. 'ne' → logprob: -1.6620506048202515
    3. ' cont' → logprob: -2.287050724029541
    4. ' ne' → logprob: -2.787050724029541
    5. 'pe' → logprob: -2.912050724029541
    6. 's' → logprob: -3.037050724029541
    7. ' utilisent' → logprob: -3.412050724029541
    8. 'cont' → logprob: -3.662050724029541
    9. ' sont' → logprob: -4.037050724029541
    10. ' ont' → logprob: -4.537050724029541

Token 1347: ' équ' (ID: 18899)
  Prédit: 'sym'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sym' → logprob: -0.28279080986976624
    2. ' sym' → logprob: -1.5327907800674438
    3. 'com' → logprob: -4.532790660858154
    4. 'invalid' → logprob: -5.282790660858154
    5. 'dé' → logprob: -6.282790660858154
    6. 'in' → logprob: -6.782790660858154
    7. 'compat' → logprob: -6.782790660858154
    8. ' invalid' → logprob: -6.907790660858154
    9. '_sym' → logprob: -7.407790660858154
    10. ' compos' → logprob: -7.407790660858154

Token 1348: 'ival' (ID: 4552)
  Prédit: 'ival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -0.0037143307272344828
    2. 'iv' → logprob: -5.878714561462402
    3. 'ivalent' → logprob: -7.378714561462402
    4. '
' → logprob: -8.753714561462402
    5. 'aux' → logprob: -10.128714561462402
    6. 'val' → logprob: -10.753714561462402
    7. 'ivo' → logprob: -11.253714561462402
    8. 'ivals' → logprob: -11.503714561462402
    9. 'i' → logprob: -11.878714561462402
    10. '   ' → logprob: -12.003714561462402

Token 1349: 'ents' (ID: 1094)
  Prédit: 'ents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.026827801018953323
    2. 'ent' → logprob: -3.651827812194824
    3. 'aux' → logprob: -7.776827812194824
    4. '
' → logprob: -10.526827812194824
    5. '#' → logprob: -10.776827812194824
    6. '```' → logprob: -11.401827812194824
    7. '{' → logprob: -12.151827812194824
    8. 'entes' → logprob: -12.276827812194824
    9. 'e' → logprob: -12.401827812194824
    10. '**' → logprob: -12.776827812194824

Token 1350: ' par' (ID: 686)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5318894386291504
    2. 'par' → logprob: -2.5318894386291504
    3. '_par' → logprob: -2.6568894386291504
    4. '#' → logprob: -2.6568894386291504
    5. '        
' → logprob: -2.9068894386291504
    6. ',' → logprob: -3.1568894386291504
    7. 'def' → logprob: -3.4068894386291504
    8. ' par' → logprob: -4.03188943862915
    9. '   ' → logprob: -4.40688943862915
    10. '```' → logprob: -4.40688943862915

Token 1351: ' échanges' (ID: 136443)
  Prédit: 'sym'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sym' → logprob: -0.6871259808540344
    2. ' sym' → logprob: -1.0621259212493896
    3. 'rotation' → logprob: -3.1871259212493896
    4. '#' → logprob: -3.6871259212493896
    5. 'trans' → logprob: -3.9371259212493896
    6. ' rotation' → logprob: -4.062126159667969
    7. 'rot' → logprob: -4.312126159667969
    8. 'transform' → logprob: -5.312126159667969
    9. ' transformations' → logprob: -5.687126159667969
    10. ' inversion' → logprob: -5.937126159667969

Token 1352: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.0765098333358765
    2. 'des' → logprob: -1.4515098333358765
    3. ' entre' → logprob: -2.326509952545166
    4. ' de' → logprob: -2.451509952545166
    5. 'de' → logprob: -3.326509952545166
    6. ' between' → logprob: -3.451509952545166
    7. 'between' → logprob: -3.576509952545166
    8. '       ' → logprob: -3.701509952545166
    9. '_' → logprob: -4.201509952545166
    10. '<|end|>' → logprob: -4.201509952545166

Token 1353: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.3445734977722168
    2. 'pairs' → logprob: -1.5945734977722168
    3. 'sym' → logprob: -1.9695734977722168
    4. 'cou' → logprob: -2.344573497772217
    5. 'labels' → logprob: -2.344573497772217
    6. 'positions' → logprob: -3.094573497772217
    7. 'symbol' → logprob: -3.094573497772217
    8. '```' → logprob: -3.469573497772217
    9. 'range' → logprob: -3.844573497772217
    10. 'symbols' → logprob: -4.344573497772217

Token 1354: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.050787705928087234
    2. 'airs' → logprob: -4.175787925720215
    3. 'aire' → logprob: -4.425787925720215
    4. 'air' → logprob: -4.675787925720215
    5. '```' → logprob: -6.300787925720215
    6. 'a' → logprob: -6.925787925720215
    7. 'p' → logprob: -7.238287925720215
    8. 'r' → logprob: -7.488287925720215
    9. '``' → logprob: -7.675787925720215
    10. '{'' → logprob: -7.863287925720215

Token 1355: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16339488327503204
    2. '        
' → logprob: -2.5383949279785156
    3. '
' → logprob: -3.5383949279785156
    4. 'def' → logprob: -4.038394927978516
    5. '   ' → logprob: -4.288394927978516
    6. '    
' → logprob: -5.413394927978516
    7. ',' → logprob: -6.788394927978516
    8. '#' → logprob: -7.038394927978516
    9. 'import' → logprob: -7.538394927978516
    10. '```' → logprob: -7.663394927978516

Token 1356: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06041299179196358
    2. '   ' → logprob: -3.810412883758545
    3. '```' → logprob: -4.310412883758545
    4. '        
' → logprob: -4.685412883758545
    5. '
' → logprob: -5.185412883758545
    6. '#' → logprob: -5.435412883758545
    7. 'for' → logprob: -6.935412883758545
    8. ',' → logprob: -7.435412883758545
    9. '    
' → logprob: -7.685412883758545
    10. '``' → logprob: -8.310413360595703

Token 1357: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025959672406315804
    2. '        
' → logprob: -4.025959491729736
    3. '
' → logprob: -5.650959491729736
    4. '#' (adapté à ' #') → logprob: -5.775959491729736
    5. '   ' → logprob: -7.275959491729736
    6. 'def' → logprob: -9.650959968566895
    7. '    
' → logprob: -9.775959968566895
    8. 'from' → logprob: -9.775959968566895
    9. '```' → logprob: -9.775959968566895
    10. '       
' → logprob: -10.150959968566895

Token 1358: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0456968545913696
    2. '       ' → logprob: -1.1706968545913696
    3. 'seen' → logprob: -2.42069673538208
    4. 'pattern' → logprob: -3.29569673538208
    5. 'equ' → logprob: -3.42069673538208
    6. 'from' → logprob: -3.54569673538208
    7. 'counts' → logprob: -3.67069673538208
    8. 'visited' → logprob: -3.79569673538208
    9. 'patterns' → logprob: -4.04569673538208
    10. 'def' → logprob: -4.17069673538208

Token 1359: ' normal' (ID: 6078)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.260951280593872
    2. 'continue' → logprob: -1.260951280593872
    3. 'def' → logprob: -2.010951280593872
    4. '       ' → logprob: -2.385951280593872
    5. 'do' → logprob: -2.760951280593872
    6. ' continue' → logprob: -2.885951280593872
    7. ' #' → logprob: -3.635951280593872
    8. '   ' → logprob: -4.510951042175293
    9. ' doit' → logprob: -5.010951042175293
    10. 'contin' → logprob: -5.135951042175293

Token 1360: 'ise' (ID: 1096)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.12902241945266724
    2. 'izer' → logprob: -2.8790223598480225
    3. 'ized' → logprob: -4.254022598266602
    4. 'iser' → logprob: -4.379022598266602
    5. '   ' → logprob: -5.254022598266602
    6. 'er' → logprob: -5.379022598266602
    7. 'e' → logprob: -5.379022598266602
    8. '       ' → logprob: -5.629022598266602
    9. '#' → logprob: -5.754022598266602
    10. '=' → logprob: -6.004022598266602

Token 1361: ' nos' (ID: 4001)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37539586424827576
    2. 'def' → logprob: -1.5003958940505981
    3. '()' → logprob: -3.5003957748413086
    4. '#' → logprob: -4.250395774841309
    5. 'patterns' → logprob: -4.875395774841309
    6. ' =' → logprob: -5.250395774841309
    7. '        
' → logprob: -5.375395774841309
    8. '   ' → logprob: -5.750395774841309
    9. '()
' → logprob: -5.750395774841309
    10. '```' → logprob: -6.000395774841309

Token 1362: ' patterns' (ID: 18587)
  Prédit: ' patterns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' patterns' → logprob: -0.9792013168334961
    2. '_patterns' → logprob: -1.229201316833496
    3. 'patterns' → logprob: -1.354201316833496
    4. '_pairs' → logprob: -4.604201316833496
    5. ' pairs' → logprob: -4.729201316833496
    6. '_' → logprob: -4.979201316833496
    7. ' p' → logprob: -5.354201316833496
    8. 'pattern' → logprob: -5.604201316833496
    9. 'def' → logprob: -5.604201316833496
    10. ' tuples' → logprob: -5.604201316833496

Token 1363: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03906669467687607
    2. '=' → logprob: -3.414066791534424
    3. 'def' → logprob: -6.664066791534424
    4. '_sorted' → logprob: -7.164066791534424
    5. ',' → logprob: -7.289066791534424
    6. '   ' → logprob: -7.414066791534424
    7. '       ' → logprob: -7.539066791534424
    8. '_' → logprob: -8.289066314697266
    9. '_tokens' → logprob: -8.914066314697266
    10. ' =
' → logprob: -9.039066314697266

Token 1364: ' tri' (ID: 12665)
  Prédit: 'consider'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'consider' → logprob: -2.000208854675293
    2. 'fro' → logprob: -2.500208854675293
    3. 'canonical' → logprob: -2.500208854675293
    4. 'def' → logprob: -2.750208854675293
    5. 'list' → logprob: -3.000208854675293
    6. 'tu' → logprob: -3.000208854675293
    7. 'sorted' → logprob: -3.125208854675293
    8. 'tuple' → logprob: -3.250208854675293
    9. 'set' → logprob: -3.250208854675293
    10. 'normal' → logprob: -3.500208854675293

Token 1365: 'ant' (ID: 493)
  Prédit: 'geant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'geant' → logprob: -1.5057884454727173
    2. 'é' → logprob: -1.7557884454727173
    3. 'ées' → logprob: -2.1307883262634277
    4. 'ant' → logprob: -2.3807883262634277
    5. 'ée' → logprob: -2.6307883262634277
    6. 'sort' → logprob: -2.8807883262634277
    7. 'és' → logprob: -3.0057883262634277
    8. 'e' → logprob: -3.1307883262634277
    9. 'sorted' → logprob: -3.1307883262634277
    10. 'ge' → logprob: -3.6307883262634277

Token 1366: ' les' (ID: 1341)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2618228793144226
    2. '(p' → logprob: -2.7618229389190674
    3. 'def' → logprob: -2.8868229389190674
    4. 'patterns' → logprob: -3.7618229389190674
    5. '(lambda' → logprob: -4.636822700500488
    6. '(sorted' → logprob: -4.636822700500488
    7. 'pairs' → logprob: -4.886822700500488
    8. ')' → logprob: -4.886822700500488
    9. '(' → logprob: -5.011822700500488
    10. ',' → logprob: -5.261822700500488

Token 1367: ' p' (ID: 275)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.4667845070362091
    2. 'p' → logprob: -1.2167844772338867
    3. 'tuple' → logprob: -3.2167844772338867
    4. ' p' → logprob: -4.591784477233887
    5. ' pairs' → logprob: -4.966784477233887
    6. 'pair' → logprob: -5.341784477233887
    7. ' tuples' → logprob: -5.591784477233887
    8. 'list' → logprob: -5.841784477233887
    9. '[' → logprob: -6.466784477233887
    10. '(p' → logprob: -6.591784477233887

Token 1368: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.009647243656218052
    2. 'airs' → logprob: -5.259647369384766
    3. 'ai' → logprob: -7.259647369384766
    4. 'a' → logprob: -7.384647369384766
    5. 'aire' → logprob: -7.634647369384766
    6. '[' → logprob: -7.634647369384766
    7. 'air' → logprob: -7.759647369384766
    8. 'p' → logprob: -7.884647369384766
    9. 'pairs' → logprob: -8.134647369384766
    10. ' p' → logprob: -9.009647369384766

Token 1369: ' donc' (ID: 14206)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7101139426231384
    2. ')' → logprob: -1.9601140022277832
    3. '       ' → logprob: -2.335114002227783
    4. ',
' → logprob: -2.710114002227783
    5. '.sort' → logprob: -2.960114002227783
    6. 'def' → logprob: -3.460114002227783
    7. '   ' → logprob: -3.710114002227783
    8. '[' → logprob: -4.335114002227783
    9. '_sorted' → logprob: -4.335114002227783
    10. '(
' → logprob: -4.585114002227783

Token 1370: ' ça' (ID: 13590)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2575100362300873
    2. ' continue' → logprob: -2.38250994682312
    3. 'continue' → logprob: -3.50750994682312
    4. '<|end|>' → logprob: -3.88250994682312
    5. '```' → logprob: -4.007510185241699
    6. '#' → logprob: -4.507510185241699
    7. '        
' → logprob: -5.132510185241699
    8. ')' → logprob: -5.257510185241699
    9. ' return' → logprob: -5.382510185241699
    10. '   ' → logprob: -5.632510185241699

Token 1371: ' élim' (ID: 108134)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.2843368947505951
    2. 'contin' → logprob: -2.159336805343628
    3. ' continue' → logprob: -2.784336805343628
    4. 's' → logprob: -3.534336805343628
    5. 'est' → logprob: -3.784336805343628
    6. '#' → logprob: -5.034337043762207
    7. ' continues' → logprob: -6.284337043762207
    8. ' s' → logprob: -6.534337043762207
    9. '```' → logprob: -6.659337043762207
    10. 'reste' → logprob: -6.784337043762207

Token 1372: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.0023805228993296623
    2. '#' → logprob: -7.50238037109375
    3. 'îne' → logprob: -8.00238037109375
    4. '       ' → logprob: -8.25238037109375
    5. '\' → logprob: -8.62738037109375
    6. 'inue' → logprob: -9.12738037109375
    7. 'iné' → logprob: -9.12738037109375
    8. '```' → logprob: -9.12738037109375
    9. '   ' → logprob: -9.50238037109375
    10. 'e' → logprob: -9.62738037109375

Token 1373: ' l' (ID: 305)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.12709735333919525
    2. ' les' → logprob: -2.3770973682403564
    3. 'la' → logprob: -5.252097129821777
    4. '_duplicates' → logprob: -5.377097129821777
    5. 'duplicates' → logprob: -5.877097129821777
    6. 'l' → logprob: -6.002097129821777
    7. ' la' → logprob: -6.002097129821777
    8. 'le' → logprob: -6.502097129821777
    9. '<|end|>' → logprob: -6.627097129821777
    10. 'd' → logprob: -6.877097129821777

Token 1374: ''ordre' (ID: 124753)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.600985050201416
    2. 'es' → logprob: -1.725985050201416
    3. 's' → logprob: -2.350985050201416
    4. 'ouble' → logprob: -3.475985050201416
    5. 'double' → logprob: -3.600985050201416
    6. ' double' → logprob: -3.850985050201416
    7. 'd' → logprob: -4.225985050201416
    8. 'u' → logprob: -4.350985050201416
    9. ' doubl' → logprob: -4.350985050201416
    10. 'dou' → logprob: -4.975985050201416

Token 1375: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1376: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.41329872608184814
    2. 'pairs' → logprob: -1.6632987260818481
    3. ' p' → logprob: -2.0382986068725586
    4. ' pairs' → logprob: -4.163298606872559
    5. 'pair' → logprob: -6.538298606872559
    6. 'app' → logprob: -7.788298606872559
    7. '```' → logprob: -7.913298606872559
    8. ' tuples' → logprob: -8.538298606872559
    9. 'pa' → logprob: -9.788298606872559
    10. 'indices' → logprob: -9.788298606872559

Token 1377: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.0036249039694666862
    2. 'airs' → logprob: -6.50362491607666
    3. 'a' → logprob: -8.00362491607666
    4. 'aire' → logprob: -8.00362491607666
    5. 'ai' → logprob: -8.37862491607666
    6. ' p' → logprob: -8.37862491607666
    7. 'air' → logprob: -8.37862491607666
    8. 'p' → logprob: -9.44112491607666
    9. '```' → logprob: -9.69112491607666
    10. ')' → logprob: -10.12862491607666

Token 1378: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44323354959487915
    2. '        
' → logprob: -1.0682334899902344
    3. '
' → logprob: -5.068233489990234
    4. '<|end|>' → logprob: -5.693233489990234
    5. ',' → logprob: -5.943233489990234
    6. ',
' → logprob: -7.693233489990234
    7. '#' → logprob: -8.193233489990234
    8. '        
        
' → logprob: -8.568233489990234
    9. '```' → logprob: -9.068233489990234
    10. '            
' → logprob: -9.068233489990234

Token 1379: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3050719201564789
    2. '#' → logprob: -1.5550719499588013
    3. '        
' → logprob: -4.055071830749512
    4. ' mais' → logprob: -4.555071830749512
    5. '   ' → logprob: -5.430071830749512
    6. ',' → logprob: -5.805071830749512
    7. ' #' → logprob: -5.930071830749512
    8. ' et' → logprob: -5.930071830749512
    9. 'et' → logprob: -6.680071830749512
    10. '```' → logprob: -6.680071830749512

Token 1380: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12515918910503387
    2. '        
' → logprob: -2.62515926361084
    3. '#' (adapté à ' #') → logprob: -4.50015926361084
    4. '   ' → logprob: -4.87515926361084
    5. ')' → logprob: -5.87515926361084
    6. '
' → logprob: -6.00015926361084
    7. ')
' → logprob: -6.00015926361084
    8. ' 
' → logprob: -6.00015926361084
    9. '```' → logprob: -6.00015926361084
    10. '    
' → logprob: -6.25015926361084

Token 1381: ' mais' (ID: 2899)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.29831981658935547
    2. '       ' → logprob: -1.4233198165893555
    3. ' #' → logprob: -4.9233198165893555
    4. '        
' → logprob: -5.9233198165893555
    5. '   ' → logprob: -6.0483198165893555
    6. 'mais' → logprob: -6.4233198165893555
    7. '```' → logprob: -7.0483198165893555
    8. ' mais' → logprob: -7.6733198165893555
    9. 'continue' → logprob: -7.9233198165893555
    10. 'et' → logprob: -8.173319816589355

Token 1382: ' ça' (ID: 13590)
  Prédit: ' il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' il' → logprob: -0.624695897102356
    2. '#' → logprob: -1.374695897102356
    3. ' on' → logprob: -2.7496957778930664
    4. ' #' → logprob: -2.8746957778930664
    5. 'il' → logprob: -2.9996957778930664
    6. ' la' → logprob: -4.624695777893066
    7. 'on' → logprob: -4.999695777893066
    8. ' pas' → logprob: -5.374695777893066
    9. ' les' → logprob: -5.499695777893066
    10. 'le' → logprob: -5.999695777893066

Token 1383: ' ne' (ID: 453)
  Prédit: ' ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ne' → logprob: -1.252082109451294
    2. ' reste' → logprob: -1.502082109451294
    3. ' continue' → logprob: -2.127082109451294
    4. '#' → logprob: -2.252082109451294
    5. 'n' → logprob: -2.502082109451294
    6. 'ne' → logprob: -3.252082109451294
    7. 'continue' → logprob: -3.502082109451294
    8. ' n' → logprob: -4.127081871032715
    9. ' peut' → logprob: -4.252081871032715
    10. ' ignore' → logprob: -4.627081871032715

Token 1384: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.6125016212463379
    2. ' prend' → logprob: -1.362501621246338
    3. 's' → logprob: -3.237501621246338
    4. 'pr' → logprob: -3.362501621246338
    5. ' g' → logprob: -3.487501621246338
    6. ' permet' → logprob: -3.737501621246338
    7. 'f' → logprob: -4.737501621246338
    8. ' garantit' → logprob: -4.737501621246338
    9. ' couvre' → logprob: -4.862501621246338
    10. ' élim' → logprob: -5.112501621246338

Token 1385: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.008818305097520351
    2. 'ére' → logprob: -6.25881814956665
    3. 'èrent' → logprob: -6.38381814956665
    4. 'er' → logprob: -6.63381814956665
    5. 'é' → logprob: -6.88381814956665
    6. 'arde' → logprob: -7.38381814956665
    7. 'estion' → logprob: -7.75881814956665
    8. 'érer' → logprob: -8.008818626403809
    9. 'ér' → logprob: -8.383818626403809
    10. 'ar' → logprob: -8.633818626403809

Token 1386: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.11623875051736832
    2. 'pas' → logprob: -2.241238832473755
    3. ' que' → logprob: -6.116238594055176
    4. '_pas' → logprob: -7.741238594055176
    5. '#' → logprob: -8.991238594055176
    6. 't' → logprob: -9.866238594055176
    7. '<|end|>' → logprob: -9.866238594055176
    8. ' #' → logprob: -9.991238594055176
    9. ' ' → logprob: -9.991238594055176
    10. '   ' → logprob: -10.241238594055176

Token 1387: ' encore' (ID: 14043)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.1504127979278564
    2. 'l' → logprob: -1.4004127979278564
    3. ' les' → logprob: -1.9004127979278564
    4. ' l' → logprob: -2.4004127979278564
    5. ' la' → logprob: -2.6504127979278564
    6. 'la' → logprob: -2.9004127979278564
    7. 'le' → logprob: -3.9004127979278564
    8. '```' → logprob: -5.025412559509277
    9. 'pas' → logprob: -5.150412559509277
    10. ' pas' → logprob: -5.400412559509277

Token 1388: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.2833222150802612
    2. 'les' → logprob: -1.5333222150802612
    3. ' l' → logprob: -1.7833222150802612
    4. ' les' → logprob: -2.158322334289551
    5. ' la' → logprob: -2.408322334289551
    6. 'la' → logprob: -2.658322334289551
    7. 'le' → logprob: -3.908322334289551
    8. '#' → logprob: -4.783322334289551
    9. '       ' → logprob: -5.158322334289551
    10. '```' → logprob: -5.158322334289551

Token 1389: ''équ' (ID: 170507)
  Prédit: ' sym'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sym' → logprob: -1.5923576354980469
    2. ' permutations' → logprob: -1.7173576354980469
    3. 'e' → logprob: -1.8423576354980469
    4. ' permutation' → logprob: -2.342357635498047
    5. 'é' → logprob: -2.467357635498047
    6. ' échange' → logprob: -2.967357635498047
    7. ' perm' → logprob: -3.342357635498047
    8. '#' → logprob: -3.842357635498047
    9. ' #' → logprob: -3.967357635498047
    10. ' échanges' → logprob: -3.967357635498047

Token 1390: 'ivalence' (ID: 161261)
  Prédit: 'ivalence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivalence' → logprob: -0.3904919922351837
    2. 'ival' → logprob: -1.1404919624328613
    3. '
' → logprob: -6.640491962432861
    4. 'iv' → logprob: -7.140491962432861
    5. 'ivalent' → logprob: -8.01549243927002
    6. '``' → logprob: -9.14049243927002
    7. '```' → logprob: -9.14049243927002
    8. '\' → logprob: -9.26549243927002
    9. '{}' → logprob: -9.39049243927002
    10. '{
' → logprob: -9.39049243927002

Token 1391: ' par' (ID: 686)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1392: ' échange' (ID: 139953)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.5358241200447083
    2. 'sym' → logprob: -1.4108240604400635
    3. ' permutation' → logprob: -3.2858240604400635
    4. 'ren' → logprob: -3.5358240604400635
    5. 'in' → logprob: -4.160824298858643
    6. 'é' → logprob: -4.535824298858643
    7. ' permutations' → logprob: -4.785824298858643
    8. 'trans' → logprob: -5.035824298858643
    9. 'perm' → logprob: -5.160824298858643
    10. '#' → logprob: -5.285824298858643

Token 1393: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.055553674697876
    2. 'des' → logprob: -1.055553674697876
    3. 'de' → logprob: -2.055553674697876
    4. ' de' → logprob: -2.305553674697876
    5. '<|end|>' → logprob: -3.180553674697876
    6. 's' → logprob: -4.305553436279297
    7. 'd' → logprob: -5.055553436279297
    8. 'def' → logprob: -6.055553436279297
    9. '(s' → logprob: -6.305553436279297
    10. 'import' → logprob: -6.555553436279297

Token 1394: ' symbol' (ID: 10038)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.1468337774276733
    2. 'sym' → logprob: -1.3968337774276733
    3. 'symbol' → logprob: -1.7718337774276733
    4. 'labels' → logprob: -2.646833896636963
    5. 'symbols' → logprob: -3.021833896636963
    6. 'positions' → logprob: -3.396833896636963
    7. 'pairs' → logprob: -3.396833896636963
    8. '```' → logprob: -4.146833896636963
    9. 'cou' → logprob: -4.896833896636963
    10. 's' → logprob: -5.146833896636963

Token 1395: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.17287413775920868
    2. ')' → logprob: -2.0478742122650146
    3. 'e' → logprob: -3.9228742122650146
    4. 'è' → logprob: -5.5478739738464355
    5. '_' → logprob: -6.7978739738464355
    6. '()' → logprob: -6.7978739738464355
    7. ' )' → logprob: -7.0478739738464355
    8. '(' → logprob: -8.672874450683594
    9. '))' → logprob: -8.672874450683594
    10. ',' → logprob: -8.797874450683594

Token 1396: ' (' (ID: 350)
  Prédit: '        
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '        
' → logprob: -0.8660038113594055
    2. '       ' → logprob: -1.1160037517547607
    3. '
' → logprob: -1.6160037517547607
    4. 'def' → logprob: -3.9910037517547607
    5. '   ' → logprob: -4.11600399017334
    6. '    
' → logprob: -5.11600399017334
    7. '#' → logprob: -5.36600399017334
    8. ',' → logprob: -6.86600399017334
    9. '<|end|>' → logprob: -6.99100399017334
    10. '        
        
' → logprob: -7.36600399017334

Token 1397: 'pairs' (ID: 175838)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42288899421691895
    2. '#' → logprob: -2.172888994216919
    3. ',' → logprob: -3.172888994216919
    4. '...' → logprob: -3.672888994216919
    5. ')
' → logprob: -3.797888994216919
    6. ' )' → logprob: -3.922888994216919
    7. '       ' → logprob: -4.42288875579834
    8. ' des' → logprob: -4.67288875579834
    9. '   ' → logprob: -5.04788875579834
    10. ' #' → logprob: -5.29788875579834

Token 1398: ' labels' (ID: 17125)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26077723503112793
    2. ')' → logprob: -1.885777235031128
    3. 's' → logprob: -3.010777235031128
    4. '<|end|>' → logprob: -5.010777473449707
    5. ' ,' → logprob: -5.510777473449707
    6. '),' → logprob: -5.760777473449707
    7. ',
' → logprob: -5.760777473449707
    8. '_' → logprob: -6.135777473449707
    9. '[' → logprob: -6.760777473449707
    10. 'es' → logprob: -7.010777473449707

Token 1399: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3626053035259247
    2. ',' → logprob: -1.362605333328247
    3. 's' → logprob: -4.237605094909668
    4. '<|end|>' → logprob: -4.487605094909668
    5. '   ' → logprob: -5.487605094909668
    6. '_' → logprob: -5.612605094909668
    7. ' ,' → logprob: -5.987605094909668
    8. ',
' → logprob: -6.487605094909668
    9. '
' → logprob: -6.612605094909668
    10. '...' → logprob: -6.737605094909668

Token 1400: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11002574115991592
    2. '
' → logprob: -2.860025644302368
    3. '        
' → logprob: -3.610025644302368
    4. '#' → logprob: -5.110025882720947
    5. '   ' → logprob: -5.110025882720947
    6. '    
' → logprob: -6.610025882720947
    7. '```' → logprob: -6.610025882720947
    8. '  
' → logprob: -6.735025882720947
    9. '<|end|>' → logprob: -7.360025882720947
    10. ' 
' → logprob: -7.485025882720947

Token 1401: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08457595109939575
    2. '        
' → logprob: -2.959575891494751
    3. '   ' → logprob: -4.58457612991333
    4. '
' → logprob: -4.83457612991333
    5. '    
' → logprob: -5.45957612991333
    6. '```' → logprob: -6.08457612991333
    7. '\' → logprob: -6.58457612991333
    8. ' 
' → logprob: -6.83457612991333
    9. '  
' → logprob: -7.58457612991333
    10. '\n' → logprob: -8.459575653076172

Token 1402: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15217921137809753
    2. '        
' → logprob: -2.52717924118042
    3. '
' → logprob: -2.90217924118042
    4. '```' → logprob: -6.52717924118042
    5. ' 
' → logprob: -7.40217924118042
    6. '    
' → logprob: -7.52717924118042
    7. '#' (adapté à ' #') → logprob: -7.65217924118042
    8. '  
' → logprob: -7.65217924118042
    9. '\
' → logprob: -7.90217924118042
    10. '   ' → logprob: -8.027178764343262

Token 1403: ' Deux' (ID: 92086)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08638983964920044
    2. '        
' → logprob: -3.2113897800445557
    3. '#' → logprob: -3.4613897800445557
    4. 'from' → logprob: -6.211390018463135
    5. '
' → logprob: -6.461390018463135
    6. 'def' → logprob: -6.461390018463135
    7. ' #' → logprob: -6.961390018463135
    8. 'labels' → logprob: -7.336390018463135
    9. 'symbol' → logprob: -7.461390018463135
    10. 'import' → logprob: -7.836390018463135

Token 1404: ' patterns' (ID: 18587)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1405: ' sont' (ID: 5242)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1406: ' équ' (ID: 18899)
  Prédit: 'sym'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sym' → logprob: -1.3372832536697388
    2. ' équ' → logprob: -1.4622832536697388
    3. 'équ' → logprob: -1.9622832536697388
    4. ' sym' → logprob: -2.087283134460449
    5. 'ident' → logprob: -3.462283134460449
    6. 'equ' → logprob: -3.587283134460449
    7. ' ident' → logprob: -3.712283134460449
    8. '#' → logprob: -3.712283134460449
    9. 'égal' → logprob: -3.712283134460449
    10. 'ég' → logprob: -4.212283134460449

Token 1407: 'ival' (ID: 4552)
  Prédit: 'ival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -0.052170123904943466
    2. 'iv' → logprob: -3.5521700382232666
    3. '{
' → logprob: -5.302170276641846
    4. '=' → logprob: -5.677170276641846
    5. 'val' → logprob: -5.927170276641846
    6. 'i' → logprob: -5.927170276641846
    7. '}' → logprob: -6.677170276641846
    8. 'aux' → logprob: -6.677170276641846
    9. '}
' → logprob: -7.302170276641846
    10. '
' → logprob: -7.427170276641846

Token 1408: 'ents' (ID: 1094)
  Prédit: 'ents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.027361152693629265
    2. 'aux' → logprob: -3.6523611545562744
    3. 'ent' → logprob: -6.902360916137695
    4. 'eux' → logprob: -11.277360916137695
    5. 'entes' → logprob: -11.527360916137695
    6. 'ence' → logprob: -12.277360916137695
    7. 'al' → logprob: -12.652360916137695
    8. 'a' → logprob: -12.777360916137695
    9. '
' → logprob: -12.777360916137695
    10. 'alent' → logprob: -13.152360916137695

Token 1409: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.3651496171951294
    2. ' par' → logprob: -1.3651496171951294
    3. '<|end|>' → logprob: -1.4901496171951294
    4. ' si' → logprob: -2.61514949798584
    5. 's' → logprob: -3.24014949798584
    6. 'par' → logprob: -3.61514949798584
    7. 'si' → logprob: -3.61514949798584
    8. 'if' → logprob: -3.86514949798584
    9. ' s' → logprob: -4.24014949798584
    10. ',' → logprob: -4.24014949798584

Token 1410: ' on' (ID: 402)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.1334065198898315
    2. 'they' → logprob: -2.133406639099121
    3. 'all' → logprob: -2.508406639099121
    4. ' ils' → logprob: -2.883406639099121
    5. ' they' → logprob: -3.008406639099121
    6. '#' → logprob: -3.133406639099121
    7. ' any' → logprob: -3.258406639099121
    8. 'len' → logprob: -3.383406639099121
    9. ' for' → logprob: -3.383406639099121
    10. ' there' → logprob: -3.508406639099121

Token 1411: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.36869898438453674
    2. ' applique' → logprob: -2.243699073791504
    3. ' perm' → logprob: -2.743699073791504
    4. 'pe' → logprob: -3.118699073791504
    5. 'perm' → logprob: -3.743699073791504
    6. ' peux' → logprob: -4.118699073791504
    7. ' can' → logprob: -4.118699073791504
    8. ' échange' → logprob: -5.243699073791504
    9. '#' → logprob: -5.368699073791504
    10. 'can' → logprob: -5.368699073791504

Token 1412: ' perm' (ID: 5961)
  Prédit: ' appliquer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appliquer' → logprob: -0.5221260190010071
    2. ' perm' → logprob: -1.0221259593963623
    3. ' les' → logprob: -3.6471259593963623
    4. 'perm' → logprob: -5.397126197814941
    5. '#' → logprob: -5.522126197814941
    6. 'les' → logprob: -6.022126197814941
    7. ' #' → logprob: -6.522126197814941
    8. ' éch' → logprob: -6.522126197814941
    9. ' remplacer' → logprob: -6.647126197814941
    10. '   ' → logprob: -6.772126197814941

Token 1413: 'uter' (ID: 23469)
  Prédit: 'uter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uter' → logprob: -2.9040898880339228e-05
    2. 'ut' → logprob: -11.000028610229492
    3. 'utter' → logprob: -11.875028610229492
    4. 'ute' → logprob: -13.625028610229492
    5. 'utations' → logprob: -13.750028610229492
    6. 'utar' → logprob: -14.125028610229492
    7. 'user' → logprob: -14.750028610229492
    8. 'et' → logprob: -14.875028610229492
    9. 'éter' → logprob: -15.250028610229492
    10. 'uting' → logprob: -15.375028610229492

Token 1414: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.08335084468126297
    2. ' les' → logprob: -2.583350896835327
    3. '(' → logprob: -6.208350658416748
    4. 'leurs' → logprob: -7.708350658416748
    5. '(
' → logprob: -7.958350658416748
    6. '       ' → logprob: -8.333351135253906
    7. '()' → logprob: -8.833351135253906
    8. '(p' → logprob: -8.958351135253906
    9. ' (' → logprob: -9.083351135253906
    10. 'la' → logprob: -9.333351135253906

Token 1415: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.146967887878418
    2. 'pairs' → logprob: -1.146967887878418
    3. '(' → logprob: -1.896967887878418
    4. 'indices' → logprob: -3.021967887878418
    5. 'range' → logprob: -3.271967887878418
    6. '(p' → logprob: -3.646967887878418
    7. 'pair' → logprob: -3.896967887878418
    8. ' p' → logprob: -4.146967887878418
    9. ' pairs' → logprob: -4.521967887878418
    10. '(range' → logprob: -4.521967887878418

Token 1416: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.011496094986796379
    2. 'airs' → logprob: -5.761496067047119
    3. ' p' → logprob: -6.511496067047119
    4. 'ai' → logprob: -6.636496067047119
    5. 'air' → logprob: -6.886496067047119
    6. 'p' → logprob: -6.886496067047119
    7. 'a' → logprob: -7.636496067047119
    8. 'aire' → logprob: -8.011496543884277
    9. '[' → logprob: -8.136496543884277
    10. '(p' → logprob: -8.261496543884277

Token 1417: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43433335423469543
    2. ')' → logprob: -1.934333324432373
    3. ',
' → logprob: -2.809333324432373
    4. '(
' → logprob: -3.184333324432373
    5. ''' → logprob: -4.434333324432373
    6. '.' → logprob: -4.559333324432373
    7. '#' → logprob: -4.684333324432373
    8. '(' → logprob: -4.684333324432373
    9. ' (' → logprob: -4.809333324432373
    10. '```' → logprob: -5.059333324432373

Token 1418: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2339366376399994
    2. '<|end|>' → logprob: -2.3589365482330322
    3. '#' → logprob: -2.8589365482330322
    4. '        
' → logprob: -3.4839365482330322
    5. ')' → logprob: -4.483936786651611
    6. '\' → logprob: -6.358936786651611
    7. ',' → logprob: -6.483936786651611
    8. '...' → logprob: -6.608936786651611
    9. ' (' → logprob: -6.858936786651611
    10. '   ' → logprob: -6.983936786651611

Token 1419: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5679193735122681
    2. ')' → logprob: -1.567919373512268
    3. '<|end|>' → logprob: -2.1929192543029785
    4. '#' (adapté à ' #') → logprob: -3.6929192543029785
    5. '   ' → logprob: -4.3179192543029785
    6. ')
' → logprob: -4.4429192543029785
    7. '\' → logprob: -4.6929192543029785
    8. '        
' → logprob: -4.6929192543029785
    9. '\n' → logprob: -4.8179192543029785
    10. '
' → logprob: -5.1929192543029785

Token 1420: ' mais' (ID: 2899)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23597058653831482
    2. '        
' → logprob: -2.2359704971313477
    3. '
' → logprob: -2.7359704971313477
    4. '#' → logprob: -3.6109704971313477
    5. '   ' → logprob: -6.360970497131348
    6. '```' → logprob: -6.610970497131348
    7. 'from' → logprob: -6.735970497131348
    8. '  
' → logprob: -6.735970497131348
    9. 'def' → logprob: -6.985970497131348
    10. '        
        
' → logprob: -7.735970497131348

Token 1421: ' dans' (ID: 2671)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1689375787973404
    2. '<|end|>' → logprob: -3.4189376831054688
    3. '#' → logprob: -3.5439376831054688
    4. 'continue' → logprob: -3.6689376831054688
    5. ')' → logprob: -4.043937683105469
    6. ' continue' → logprob: -4.918937683105469
    7. 'not' → logprob: -5.668937683105469
    8. ' #' → logprob: -5.793937683105469
    9. '        ' → logprob: -5.918937683105469
    10. '(
' → logprob: -6.043937683105469

Token 1422: ' notre' (ID: 12092)
  Prédit: ' notre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' notre' → logprob: -1.1271451711654663
    2. ' ce' → logprob: -1.8771451711654663
    3. ' la' → logprob: -2.002145290374756
    4. 'patterns' → logprob: -3.002145290374756
    5. 'not' → logprob: -3.252145290374756
    6. ' patterns' → logprob: -3.252145290374756
    7. 'pattern' → logprob: -3.377145290374756
    8. 'les' → logprob: -3.377145290374756
    9. ' le' → logprob: -3.752145290374756
    10. 'la' → logprob: -3.877145290374756

Token 1423: ' canon' (ID: 48572)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.9804317355155945
    2. 'canonical' → logprob: -1.7304317951202393
    3. 'code' → logprob: -2.1054317951202393
    4. ' canonical' → logprob: -2.6054317951202393
    5. 'pattern' → logprob: -2.8554317951202393
    6. '#' → logprob: -3.3554317951202393
    7. ' pattern' → logprob: -3.3554317951202393
    8. 'case' → logprob: -3.6054317951202393
    9. ' case' → logprob: -4.10543155670166
    10. 'def' → logprob: -4.23043155670166

Token 1424: 'isation' (ID: 6993)
  Prédit: 'ique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.016287490725517273
    2. 'ical' → logprob: -4.141287326812744
    3. 'iques' → logprob: -9.391287803649902
    4. ')' → logprob: -9.766287803649902
    5. 'ic' → logprob: -10.141287803649902
    6. '```' → logprob: -10.766287803649902
    7. 'icale' → logprob: -11.391287803649902
    8. 'iqué' → logprob: -11.391287803649902
    9. 'nique' → logprob: -12.016287803649902
    10. '()' → logprob: -12.266287803649902

Token 1425: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8555235862731934
    2. ')' → logprob: -1.4805235862731934
    3. ',' → logprob: -1.4805235862731934
    4. '_' → logprob: -3.8555235862731934
    5. '<|end|>' → logprob: -3.9805235862731934
    6. '(p' → logprob: -4.480523586273193
    7. '   ' → logprob: -4.730523586273193
    8. '<|end|>' → logprob: -5.105523586273193
    9. 'def' → logprob: -5.355523586273193
    10. '):' → logprob: -5.355523586273193

Token 1426: ' on' (ID: 402)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1427: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6668822765350342
    2. ' continue' → logprob: -1.4168822765350342
    3. ' n' → logprob: -2.541882276535034
    4. ' peut' → logprob: -3.416882276535034
    5. 'a' → logprob: -3.541882276535034
    6. '<|end|>' → logprob: -4.291882514953613
    7. ')' → logprob: -4.416882514953613
    8. ' has' → logprob: -4.666882514953613
    9. '#' → logprob: -4.916882514953613
    10. '```' → logprob: -5.041882514953613

Token 1428: ' déjà' (ID: 21229)
  Prédit: ' déjà'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' déjà' → logprob: -0.27269259095191956
    2. 'dé' → logprob: -1.6476925611495972
    3. 'already' → logprob: -4.647692680358887
    4. ' dé' → logprob: -4.772692680358887
    5. ' already' → logprob: -4.897692680358887
    6. ' deja' → logprob: -5.772692680358887
    7. 'les' → logprob: -6.772692680358887
    8. ' les' → logprob: -6.897692680358887
    9. 'un' → logprob: -7.022692680358887
    10. ' ' → logprob: -7.022692680358887

Token 1429: ' tri' (ID: 12665)
  Prédit: 'tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tri' → logprob: -0.49799683690071106
    2. 'g' → logprob: -1.8729968070983887
    3. 'fait' → logprob: -3.3729968070983887
    4. 'les' → logprob: -3.6229968070983887
    5. 'le' → logprob: -3.8729968070983887
    6. 'pris' → logprob: -4.122996807098389
    7. 'leur' → logprob: -4.247996807098389
    8. 'trait' → logprob: -4.247996807098389
    9. 'tr' → logprob: -4.247996807098389
    10. 'év' → logprob: -4.622996807098389

Token 1430: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.005835299380123615
    2. 'ée' → logprob: -6.00583553314209
    3. 'gé' → logprob: -6.38083553314209
    4. '#' → logprob: -8.00583553314209
    5. 'ed' → logprob: -8.25583553314209
    6. 'e' → logprob: -8.38083553314209
    7. 'mé' → logprob: -8.50583553314209
    8. '   ' → logprob: -9.25583553314209
    9. 'g' → logprob: -9.50583553314209
    10. '```' → logprob: -9.63083553314209

Token 1431: ' les' (ID: 1341)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5054194927215576
    2. '<|end|>' → logprob: -1.1304194927215576
    3. '<|end|>' → logprob: -4.130419731140137
    4. ',' → logprob: -4.505419731140137
    5. '(' → logprob: -5.255419731140137
    6. '   ' → logprob: -5.255419731140137
    7. ' ' → logprob: -5.630419731140137
    8. '_' → logprob: -5.630419731140137
    9. 's' → logprob: -5.880419731140137
    10. '(
' → logprob: -6.005419731140137

Token 1432: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -1.23175048828125
    2. 'pairs' → logprob: -1.35675048828125
    3. ' pairs' → logprob: -1.60675048828125
    4. 'p' → logprob: -2.48175048828125
    5. ')' → logprob: -2.73175048828125
    6. ',' → logprob: -3.60675048828125
    7. ' tuples' → logprob: -4.10675048828125
    8. 'patterns' → logprob: -4.23175048828125
    9. '(p' → logprob: -4.48175048828125
    10. 'pattern' → logprob: -5.10675048828125

Token 1433: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.1322377473115921
    2. 'airs' → logprob: -2.257237672805786
    3. 'a' → logprob: -4.257237911224365
    4. 'pairs' → logprob: -7.007237911224365
    5. 'air' → logprob: -7.132237911224365
    6. 'ai' → logprob: -7.257237911224365
    7. 'uples' → logprob: -7.382237911224365
    8. 'ares' → logprob: -8.132237434387207
    9. 'aire' → logprob: -8.382237434387207
    10. ')' → logprob: -8.382237434387207

Token 1434: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1435: 'ils' (ID: 5879)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025836534798145294
    2. ')#' → logprob: -5.15083646774292
    3. ')
' → logprob: -5.27583646774292
    4. ',' → logprob: -5.40083646774292
    5. '#' → logprob: -5.77583646774292
    6. '),' → logprob: -6.15083646774292
    7. ' ce' → logprob: -6.77583646774292
    8. ' )' → logprob: -7.27583646774292
    9. '...' → logprob: -7.90083646774292
    10. 'ce' → logprob: -8.275836944580078

Token 1436: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.7221639752388
    2. ')' → logprob: -1.7221639156341553
    3. 's' → logprob: -1.7221639156341553
    4. '#' → logprob: -2.2221639156341553
    5. ' are' → logprob: -3.3471639156341553
    6. 'are' → logprob: -5.222164154052734
    7. ' )' → logprob: -6.222164154052734
    8. ')#' → logprob: -6.722164154052734
    9. ' #' → logprob: -6.847164154052734
    10. 'ont' → logprob: -7.472164154052734

Token 1437: ' en' (ID: 469)
  Prédit: 'tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tri' → logprob: -1.2341359853744507
    2. 'dé' → logprob: -1.7341359853744507
    3. 'des' → logprob: -1.8591359853744507
    4. ')' → logprob: -2.1091361045837402
    5. 'tu' → logprob: -2.3591361045837402
    6. ' tri' → logprob: -2.7341361045837402
    7. ' des' → logprob: -3.6091361045837402
    8. 'tr' → logprob: -4.48413610458374
    9. 't' → logprob: -4.85913610458374
    10. ' déjà' → logprob: -5.10913610458374

Token 1438: ' ordre' (ID: 103061)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.43795067071914673
    2. 'ordre' → logprob: -1.937950611114502
    3. 'tu' → logprob: -2.187950611114502
    4. 'forme' → logprob: -2.812950611114502
    5. 'order' → logprob: -4.937950611114502
    6. ' ordre' → logprob: -5.187950611114502
    7. 'canonical' → logprob: -5.187950611114502
    8. 'form' → logprob: -5.937950611114502
    9. ' tuples' → logprob: -5.937950611114502
    10. 'indices' → logprob: -6.562950611114502

Token 1439: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39580726623535156
    2. ' )' → logprob: -1.3958072662353516
    3. '<|end|>' → logprob: -3.1458072662353516
    4. ',' → logprob: -4.645807266235352
    5. ' lex' → logprob: -4.895807266235352
    6. ' ),' → logprob: -6.270807266235352
    7. ' ,' → logprob: -6.395807266235352
    8. '),' → logprob: -6.520807266235352
    9. ' sym' → logprob: -6.895807266235352
    10. ' naturel' → logprob: -7.145807266235352

Token 1440: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10754406452178955
    2. ')' → logprob: -2.3575439453125
    3. '#' → logprob: -6.1075439453125
    4. '   ' → logprob: -7.1075439453125
    5. '...' → logprob: -7.2325439453125
    6. '        
' → logprob: -7.3575439453125
    7. '<|end|>' → logprob: -7.4825439453125
    8. '.' → logprob: -8.2325439453125
    9. '           ' → logprob: -8.3575439453125
    10. '               ' → logprob: -8.4825439453125

Token 1441: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.050761304795742035
    2. '#' (adapté à ' #') → logprob: -3.1757612228393555
    3. '        
' → logprob: -6.3007612228393555
    4. ')' → logprob: -6.4257612228393555
    5. '   ' → logprob: -6.8007612228393555
    6. '
' → logprob: -7.6757612228393555
    7. '```' → logprob: -7.8007612228393555
    8. ' #' → logprob: -7.9257612228393555
    9. ')
' → logprob: -8.050761222839355
    10. 'et' → logprob: -8.425761222839355

Token 1442: ' du' (ID: 1462)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09746868163347244
    2. '#' → logprob: -2.472468614578247
    3. ')' → logprob: -5.722468852996826
    4. 'continue' → logprob: -6.222468852996826
    5. '        
' → logprob: -7.722468852996826
    6. '   ' → logprob: -7.722468852996826
    7. ' continue' → logprob: -7.972468852996826
    8. ' #' → logprob: -8.222468376159668
    9. '
' → logprob: -8.347468376159668
    10. '           ' → logprob: -8.472468376159668

Token 1443: ' coup' (ID: 25465)
  Prédit: ' coup'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coup' → logprob: -0.13398945331573486
    2. 'c' → logprob: -2.1339893341064453
    3. 'cou' → logprob: -6.008989334106445
    4. 'moins' → logprob: -6.133989334106445
    5. '```' → logprob: -7.383989334106445
    6. 'fait' → logprob: -7.633989334106445
    7. ' coups' → logprob: -7.758989334106445
    8. '
' → logprob: -8.758989334106445
    9. ' fait' → logprob: -8.883989334106445
    10. '_c' → logprob: -9.508989334106445

Token 1444: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9982252717018127
    2. ' continue' → logprob: -1.498225212097168
    3. '       ' → logprob: -2.123225212097168
    4. ',' → logprob: -2.623225212097168
    5. ' #' → logprob: -2.623225212097168
    6. 'continue' → logprob: -3.123225212097168
    7. 'pass' → logprob: -4.123225212097168
    8. '   ' → logprob: -4.998225212097168
    9. ':' → logprob: -4.998225212097168
    10. '```' → logprob: -5.123225212097168

Token 1445: ' chaque' (ID: 21194)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7082571387290955
    2. '<|end|>' → logprob: -1.2082571983337402
    3. '#' → logprob: -3.2082571983337402
    4. '       ' → logprob: -3.5832571983337402
    5. ' )' → logprob: -3.5832571983337402
    6. ' continue' → logprob: -3.7082571983337402
    7. 'pass' → logprob: -3.9582571983337402
    8. ' pass' → logprob: -4.45825719833374
    9. 'continue' → logprob: -4.70825719833374
    10. '(
' → logprob: -5.20825719833374

Token 1446: ' pattern' (ID: 8302)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4192681312561035
    2. ' pattern' → logprob: -2.0442681312561035
    3. ' _' → logprob: -2.6692681312561035
    4. ')' → logprob: -3.0442681312561035
    5. 'pattern' → logprob: -3.6692681312561035
    6. ' ' → logprob: -4.1692681312561035
    7. ' token' → logprob: -4.7942681312561035
    8. ' )' → logprob: -4.9192681312561035
    9. ' paire' → logprob: -5.2942681312561035
    10. '\' → logprob: -5.4192681312561035

Token 1447: ' représente' (ID: 88912)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6776074171066284
    2. ')' → logprob: -1.8026074171066284
    3. '<|end|>' → logprob: -2.052607536315918
    4. 's' → logprob: -3.177607536315918
    5. ' continue' → logprob: -3.927607536315918
    6. ' est' → logprob: -4.052607536315918
    7. ',' → logprob: -4.302607536315918
    8. ' s' → logprob: -4.302607536315918
    9. '[' → logprob: -4.427607536315918
    10. ' continues' → logprob: -4.552607536315918

Token 1448: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.4830540418624878
    2. ' une' → logprob: -1.4830540418624878
    3. 'un' → logprob: -2.2330541610717773
    4. ' ' → logprob: -4.358054161071777
    5. 'une' → logprob: -4.608054161071777
    6. 'a' → logprob: -5.483054161071777
    7. '<|end|>' → logprob: -5.608054161071777
    8. ' a' → logprob: -5.858054161071777
    9. 'le' → logprob: -6.108054161071777
    10. ' l' → logprob: -6.108054161071777

Token 1449: ' classe' (ID: 29329)
  Prédit: 'classe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'classe' → logprob: -0.28479042649269104
    2. 'unique' → logprob: -2.409790515899658
    3. 'forme' → logprob: -2.409790515899658
    4. 'partition' → logprob: -4.659790515899658
    5. ' forme' → logprob: -4.909790515899658
    6. ' unique' → logprob: -4.909790515899658
    7. 'configuration' → logprob: -5.034790515899658
    8. 'class' → logprob: -5.284790515899658
    9. 'structure' → logprob: -5.659790515899658
    10. ' combinaison' → logprob: -6.034790515899658

Token 1450: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1451: ''is' (ID: 112682)
  Prédit: ''équ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''équ' → logprob: -0.6157132387161255
    2. 'équ' → logprob: -0.8657132387161255
    3. 'equ' → logprob: -3.990713119506836
    4. '’équ' → logprob: -4.740713119506836
    5. ''' → logprob: -6.115713119506836
    6. ''é' → logprob: -6.240713119506836
    7. ' équ' → logprob: -6.240713119506836
    8. 'égalité' → logprob: -7.240713119506836
    9. ' equival' → logprob: -7.740713119506836
    10. 'e' → logprob: -7.865713119506836

Token 1452: 'om' (ID: 310)
  Prédit: 'équ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'équ' → logprob: -0.26848068833351135
    2. 'é' → logprob: -1.643480658531189
    3. 'equ' → logprob: -3.8934807777404785
    4. 'ém' → logprob: -5.5184807777404785
    5. ''équ' → logprob: -6.1434807777404785
    6. ' équ' → logprob: -6.2684807777404785
    7. 'qu' → logprob: -6.3934807777404785
    8. 'égal' → logprob: -6.8934807777404785
    9. '-equ' → logprob: -6.8934807777404785
    10. 'égalité' → logprob: -7.3934807777404785

Token 1453: 'orph' (ID: 28296)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.7762510776519775
    2. 'ométr' → logprob: -2.1512510776519775
    3. 'om' → logprob: -2.5262510776519775
    4. ')' → logprob: -2.7762510776519775
    5. '}' → logprob: -3.4012510776519775
    6. '#' → logprob: -3.6512510776519775
    7. 'omie' → logprob: -3.6512510776519775
    8. 'orph' → logprob: -3.7762510776519775
    9. '```' → logprob: -4.026250839233398
    10. 'émie' → logprob: -4.151250839233398

Token 1454: 'ie' (ID: 396)
  Prédit: 'isme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isme' → logprob: -0.005459524225443602
    2. 'ie' → logprob: -5.880459308624268
    3. 'ismes' → logprob: -6.255459308624268
    4. 'me' → logprob: -8.005459785461426
    5. 'e' → logprob: -9.005459785461426
    6. 'ème' → logprob: -9.755459785461426
    7. 'ime' → logprob: -9.880459785461426
    8. 'ism' → logprob: -10.380459785461426
    9. 'é' → logprob: -10.505459785461426
    10. 'isms' → logprob: -11.380459785461426

Token 1455: ' unique' (ID: 5746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9105362892150879
    2. '   ' → logprob: -1.660536289215088
    3. '       ' → logprob: -2.160536289215088
    4. '.' → logprob: -2.410536289215088
    5. ',' → logprob: -2.535536289215088
    6. 's' → logprob: -3.660536289215088
    7. '<|end|>' → logprob: -4.035536289215088
    8. ':' → logprob: -4.410536289215088
    9. '#' → logprob: -4.660536289215088
    10. '...' → logprob: -4.910536289215088

Token 1456: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0875653401017189
    2. '<|end|>' → logprob: -2.8375654220581055
    3. '
' → logprob: -4.5875654220581055
    4. '        
' → logprob: -5.2125654220581055
    5. ')' → logprob: -5.7125654220581055
    6. '   ' → logprob: -6.3375654220581055
    7. '<|end|>' → logprob: -6.8375654220581055
    8. ',' → logprob: -7.2125654220581055
    9. '...' → logprob: -7.7125654220581055
    10. '.' → logprob: -7.8375654220581055

Token 1457: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5912643074989319
    2. '
' → logprob: -0.9662643074989319
    3. '        
' → logprob: -2.841264247894287
    4. '```' → logprob: -5.841264247894287
    5. '   ' → logprob: -7.341264247894287
    6. '    
' → logprob: -7.466264247894287
    7. '#' → logprob: -7.591264247894287
    8. '  
' → logprob: -8.091264724731445
    9. '\n' → logprob: -8.216264724731445
    10. 'if' → logprob: -8.466264724731445

Token 1458: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33108633756637573
    2. '
' → logprob: -1.7060863971710205
    3. '        
' → logprob: -2.4560863971710205
    4. '   ' → logprob: -5.456086158752441
    5. '    
' → logprob: -5.831086158752441
    6. '#' (adapté à ' #') → logprob: -6.331086158752441
    7. '  
' → logprob: -6.456086158752441
    8. 'if' → logprob: -7.456086158752441
    9. '```' → logprob: -7.581086158752441
    10. 'print' → logprob: -8.206086158752441

Token 1459: ' Pour' (ID: 13931)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13935251533985138
    2. '
' → logprob: -2.764352560043335
    3. 'print' → logprob: -2.889352560043335
    4. '        
' → logprob: -4.764352321624756
    5. '```' → logprob: -6.764352321624756
    6. '#' → logprob: -7.514352321624756
    7. 'for' → logprob: -7.764352321624756
    8. 'if' → logprob: -9.389352798461914
    9. '   ' → logprob: -9.514352798461914
    10. 'from' → logprob: -9.764352798461914

Token 1460: ' plus' (ID: 2932)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.12973298132419586
    2. ' pair' → logprob: -3.379733085632324
    3. ' _' → logprob: -3.629733085632324
    4. 'p' → logprob: -4.004733085632324
    5. ' pattern' → logprob: -4.504733085632324
    6. ' i' → logprob: -4.754733085632324
    7. ' line' → logprob: -5.379733085632324
    8. 'pair' → logprob: -5.504733085632324
    9. ' ' → logprob: -6.379733085632324
    10. 'pattern' → logprob: -6.379733085632324

Token 1461: ' de' (ID: 334)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8863783478736877
    2. '...' → logprob: -1.261378288269043
    3. '_' → logprob: -2.511378288269043
    4. '```' → logprob: -3.136378288269043
    5. ' complet' → logprob: -3.261378288269043
    6. ' de' → logprob: -3.886378288269043
    7. '   ' → logprob: -4.136378288269043
    8. '<|end|>' → logprob: -4.261378288269043
    9. 'def' → logprob: -4.386378288269043
    10. ' complète' → logprob: -4.886378288269043

Token 1462: ' sû' (ID: 32291)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.6944662928581238
    2. 'cl' → logprob: -1.5694663524627686
    3. 'clar' → logprob: -1.5694663524627686
    4. 'fi' → logprob: -3.0694663524627686
    5. '#' → logprob: -4.8194661140441895
    6. 'simp' → logprob: -4.8194661140441895
    7. 's' → logprob: -5.9444661140441895
    8. 'prec' → logprob: -6.1944661140441895
    9. 'sé' → logprob: -6.1944661140441895
    10. 'la' → logprob: -6.8194661140441895

Token 1463: 'reté' (ID: 114893)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03245396539568901
    2. 're' → logprob: -4.032454013824463
    3. 'rement' → logprob: -5.282454013824463
    4. 'p' → logprob: -5.907454013824463
    5. 'pr' → logprob: -6.282454013824463
    6. 'per' → logprob: -6.407454013824463
    7. 'f' → logprob: -6.782454013824463
    8. 'ré' → logprob: -7.907454013824463
    9. 'reté' → logprob: -7.907454013824463
    10. 'ff' → logprob: -7.907454013824463

Token 1464: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013229284435510635
    2. ',' → logprob: -5.6382293701171875
    3. '   ' → logprob: -5.6382293701171875
    4. ':' → logprob: -5.8882293701171875
    5. '        
' → logprob: -6.7632293701171875
    6. '#' → logprob: -8.138229370117188
    7. '           ' → logprob: -8.388229370117188
    8. ':
' → logprob: -8.638229370117188
    9. 'def' → logprob: -8.638229370117188
    10. '<|end|>' → logprob: -9.013229370117188

Token 1465: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5044767260551453
    2. ' continue' → logprob: -1.50447678565979
    3. 'continue' → logprob: -2.25447678565979
    4. ' pass' → logprob: -4.004476547241211
    5. '#' → logprob: -4.004476547241211
    6. 'pass' → logprob: -4.879476547241211
    7. ' #' → logprob: -5.004476547241211
    8. ' break' → logprob: -5.004476547241211
    9. 'break' → logprob: -5.879476547241211
    10. ' for' → logprob: -6.504476547241211

Token 1466: ' doit' (ID: 21822)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.3068903684616089
    2. ' continue' → logprob: -2.3068904876708984
    3. '       ' → logprob: -2.4318904876708984
    4. '   ' → logprob: -2.9318904876708984
    5. 'contin' → logprob: -4.931890487670898
    6. '_continue' → logprob: -5.681890487670898
    7. '#' → logprob: -6.181890487670898
    8. '           ' → logprob: -6.181890487670898
    9. '    ' → logprob: -6.431890487670898
    10. 'pass' → logprob: -6.431890487670898

Token 1467: ' considérer' (ID: 172894)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.8526898622512817
    2. '#' → logprob: -0.9776898622512817
    3. 'pass' → logprob: -2.227689743041992
    4. 'continue' → logprob: -3.727689743041992
    5. ' continuer' → logprob: -3.727689743041992
    6. '   ' → logprob: -3.852689743041992
    7. '       ' → logprob: -5.602689743041992
    8. ' #' → logprob: -6.102689743041992
    9. '```' → logprob: -6.227689743041992
    10. 'v' → logprob: -6.227689743041992

Token 1468: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1681461334228516
    2. '       ' → logprob: -1.2931461334228516
    3. 'import' → logprob: -2.7931461334228516
    4. '<|end|>' → logprob: -2.9181461334228516
    5. ' les' → logprob: -3.4181461334228516
    6. ' la' → logprob: -3.5431461334228516
    7. '```' → logprob: -3.7931461334228516
    8. '	' → logprob: -3.9181461334228516
    9. 'les' → logprob: -4.043146133422852
    10. 'possible' → logprob: -4.168146133422852

Token 1469: ' permutations' (ID: 174595)
  Prédit: ' permutations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.9352992177009583
    2. 'sym' → logprob: -1.5602991580963135
    3. ' sym' → logprob: -2.1852991580963135
    4. 'import' → logprob: -2.5602991580963135
    5. '#' → logprob: -2.9352991580963135
    6. 'transform' → logprob: -3.3102991580963135
    7. 'poss' → logprob: -3.6852991580963135
    8. 'patterns' → logprob: -3.9352991580963135
    9. '...' → logprob: -4.060299396514893
    10. 'from' → logprob: -4.685299396514893

Token 1470: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22959528863430023
    2. ' _' → logprob: -3.479595184326172
    3. ',' → logprob: -3.604595184326172
    4. ')' → logprob: -3.729595184326172
    5. '[' → logprob: -3.979595184326172
    6. '(' → logprob: -4.104595184326172
    7. 's' → logprob: -4.604595184326172
    8. '   ' → logprob: -4.604595184326172
    9. ' =' → logprob: -4.729595184326172
    10. ' (' → logprob: -4.979595184326172

Token 1471: ' p' (ID: 275)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.1805688589811325
    2. 'p' → logprob: -2.1805689334869385
    3. ' pairs' → logprob: -3.6805689334869385
    4. ' p' → logprob: -4.180568695068359
    5. 'pair' → logprob: -5.680568695068359
    6. 'patterns' → logprob: -5.930568695068359
    7. '8' → logprob: -7.055568695068359
    8. 'indices' → logprob: -7.055568695068359
    9. 'range' → logprob: -7.180568695068359
    10. '(p' → logprob: -7.555568695068359

Token 1472: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.03361273184418678
    2. 'airs' → logprob: -3.7836127281188965
    3. 'a' → logprob: -5.4086127281188965
    4. 'air' → logprob: -6.6586127281188965
    5. 'ai' → logprob: -6.7836127281188965
    6. 'aire' → logprob: -7.5336127281188965
    7. 'pairs' → logprob: -8.033613204956055
    8. ' p' → logprob: -8.158613204956055
    9. 'p' → logprob: -8.158613204956055
    10. ')' → logprob: -8.658613204956055

Token 1473: ' :
' (ID: 10039)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0295835733413696
    2. ':' → logprob: -2.02958345413208
    3. ')' → logprob: -2.15458345413208
    4. '<|end|>' → logprob: -2.27958345413208
    5. '.' → logprob: -2.90458345413208
    6. '   ' → logprob: -3.02958345413208
    7. '_' → logprob: -3.15458345413208
    8. 'def' → logprob: -3.52958345413208
    9. '       ' → logprob: -4.40458345413208
    10. '
' → logprob: -4.40458345413208

Token 1474: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022080197930336
    2. '<|end|>' → logprob: -4.522080421447754
    3. '#' → logprob: -5.772080421447754
    4. '        
' → logprob: -6.397080421447754
    5. '```' → logprob: -6.522080421447754
    6. 'from' → logprob: -7.147080421447754
    7. '...' → logprob: -7.147080421447754
    8. '        ' → logprob: -7.522080421447754
    9. 'import' → logprob: -8.022080421447754
    10. ' from' → logprob: -8.022080421447754

Token 1475: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.054499104619026184
    2. '#' (adapté à ' #') → logprob: -3.6794991493225098
    3. 'continue' → logprob: -4.55449914932251
    4. 'pass' → logprob: -5.42949914932251
    5. ' continue' → logprob: -6.42949914932251
    6. '   ' → logprob: -6.67949914932251
    7. ' pass' → logprob: -6.92949914932251
    8. '...' → logprob: -6.92949914932251
    9. '        
' → logprob: -6.92949914932251
    10. 'for' → logprob: -7.42949914932251

Token 1476: ' Mais' (ID: 13880)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5873628854751587
    2. '#' → logprob: -1.7123628854751587
    3. 'from' → logprob: -1.7123628854751587
    4. 'pass' → logprob: -3.337362766265869
    5. 'import' → logprob: -3.462362766265869
    6. 'valid' → logprob: -4.962362766265869
    7. '   ' → logprob: -6.087362766265869
    8. '```' → logprob: -6.712362766265869
    9. 'patterns' → logprob: -6.837362766265869
    10. 'continue' → logprob: -7.212362766265869

Token 1477: ' si' (ID: 1784)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12353412061929703
    2. '       ' → logprob: -2.6235342025756836
    3. 'pass' → logprob: -3.7485342025756836
    4. 'continue' → logprob: -4.248534202575684
    5. 'return' → logprob: -5.873534202575684
    6. ' #' → logprob: -7.248534202575684
    7. '```' → logprob: -7.623534202575684
    8. ' continue' → logprob: -8.248534202575684
    9. ' pass' → logprob: -8.373534202575684
    10. '           ' → logprob: -8.498534202575684

Token 1478: ' on' (ID: 402)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.8776651620864868
    2. 'True' → logprob: -1.8776651620864868
    3. ' len' → logprob: -2.1276650428771973
    4. 'len' → logprob: -2.6276650428771973
    5. ' not' → logprob: -2.8776650428771973
    6. 'not' → logprob: -3.2526650428771973
    7. ' valid' → logprob: -3.3776650428771973
    8. '<|end|>' → logprob: -3.8776650428771973
    9. 'valid' → logprob: -4.002665042877197
    10. ' ' → logprob: -4.377665042877197

Token 1479: ' trie' (ID: 139428)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9953978657722473
    2. ' continue' → logprob: -1.2453978061676025
    3. 'continue' → logprob: -1.3703978061676025
    4. ' considère' → logprob: -3.6203978061676025
    5. 'n' → logprob: -4.870398044586182
    6. 'ignore' → logprob: -5.495398044586182
    7. ' trie' → logprob: -5.620398044586182
    8. 'tr' → logprob: -5.620398044586182
    9. ' ignore' → logprob: -5.870398044586182
    10. '```' → logprob: -5.995398044586182

Token 1480: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.2910695970058441
    2. ' les' → logprob: -2.666069507598877
    3. '()' → logprob: -3.291069507598877
    4. '(' → logprob: -3.791069507598877
    5. 'des' → logprob: -3.791069507598877
    6. '(p' → logprob: -3.791069507598877
    7. ',' → logprob: -3.916069507598877
    8. 'the' → logprob: -4.416069507598877
    9. 'patterns' → logprob: -4.416069507598877
    10. '(pattern' → logprob: -5.291069507598877

Token 1481: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -1.1686166524887085
    2. 'p' → logprob: -1.6686166524887085
    3. 'pairs' → logprob: -1.6686166524887085
    4. ' pairs' → logprob: -1.7936166524887085
    5. ' tuples' → logprob: -3.168616771697998
    6. 'patterns' → logprob: -3.293616771697998
    7. ' patterns' → logprob: -3.793616771697998
    8. ',' → logprob: -3.918616771697998
    9. 'pattern' → logprob: -4.418616771697998
    10. '(p' → logprob: -6.043616771697998

Token 1482: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.1702449470758438
    2. 'a' → logprob: -2.2952449321746826
    3. 'airs' → logprob: -3.2952449321746826
    4. 'air' → logprob: -5.420245170593262
    5. 'ai' → logprob: -5.545245170593262
    6. 'aire' → logprob: -6.045245170593262
    7. ')' → logprob: -6.795245170593262
    8. 'ar' → logprob: -6.920245170593262
    9. '[' → logprob: -7.045245170593262
    10. 'r' → logprob: -7.545245170593262

Token 1483: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23551271855831146
    2. '<|end|>' → logprob: -1.8605127334594727
    3. ')' → logprob: -4.360512733459473
    4. '<|end|>' → logprob: -4.860512733459473
    5. ',
' → logprob: -5.235512733459473
    6. '),' → logprob: -5.360512733459473
    7. '[' → logprob: -5.610512733459473
    8. '#' → logprob: -5.735512733459473
    9. ' ,' → logprob: -5.860512733459473
    10. '   ' → logprob: -6.735512733459473

Token 1484: ' la' (ID: 557)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.043680787086486816
    2. '       ' → logprob: -3.5436806678771973
    3. ' #' → logprob: -4.918680667877197
    4. ' on' → logprob: -6.668680667877197
    5. ',' → logprob: -7.543680667877197
    6. ' la' → logprob: -7.918680667877197
    7. 'cela' → logprob: -8.043681144714355
    8. ')' → logprob: -8.168681144714355
    9. '...' → logprob: -8.293681144714355
    10. ' les' → logprob: -8.418681144714355

Token 1485: ' forme' (ID: 27450)
  Prédit: ' pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -0.5714133381843567
    2. 'pattern' → logprob: -1.821413278579712
    3. ',' → logprob: -2.321413278579712
    4. ' patterns' → logprob: -2.696413278579712
    5. 'patterns' → logprob: -3.696413278579712
    6. '#' → logprob: -4.071413516998291
    7. ' #' → logprob: -4.571413516998291
    8. '<|end|>' → logprob: -4.821413516998291
    9. ' tuple' → logprob: -4.946413516998291
    10. ' ,' → logprob: -5.321413516998291

Token 1486: ' canon' (ID: 48572)
  Prédit: ' canon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' canon' → logprob: -0.3810129761695862
    2. ' canonical' → logprob: -2.5060129165649414
    3. 'canonical' → logprob: -2.6310129165649414
    4. 'canon' → logprob: -2.8810129165649414
    5. '_' → logprob: -3.6310129165649414
    6. '_can' → logprob: -4.006012916564941
    7. ',' → logprob: -4.631012916564941
    8. ')' → logprob: -4.631012916564941
    9. ' can' → logprob: -4.631012916564941
    10. 'can' → logprob: -5.006012916564941

Token 1487: 'ique' (ID: 2222)
  Prédit: 'ique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.1707918792963028
    2. 'nique' → logprob: -1.9207918643951416
    3. 'ïque' → logprob: -5.670792102813721
    4. '```' → logprob: -6.545792102813721
    5. '__' → logprob: -6.670792102813721
    6. '_' → logprob: -6.795792102813721
    7. 'n' → logprob: -7.420792102813721
    8. 'rique' → logprob: -7.545792102813721
    9. 'iques' → logprob: -8.420791625976562
    10. '``' → logprob: -8.795791625976562

Token 1488: ' unique' (ID: 5746)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.7237199544906616
    2. '<|end|>' → logprob: -1.8487199544906616
    3. ':' → logprob: -2.473720073699951
    4. ',' → logprob: -2.723720073699951
    5. ')' → logprob: -2.723720073699951
    6. 'est' → logprob: -4.473720073699951
    7. '#' → logprob: -4.473720073699951
    8. '<|end|>' → logprob: -4.598720073699951
    9. 's' → logprob: -4.723720073699951
    10. ' continue' → logprob: -4.723720073699951

Token 1489: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11223471909761429
    2. ')' → logprob: -2.6122348308563232
    3. ',' → logprob: -4.362234592437744
    4. '):' → logprob: -5.237234592437744
    5. '<|end|>' → logprob: -5.612234592437744
    6. 's' → logprob: -6.362234592437744
    7. '_' → logprob: -6.362234592437744
    8. ' :' → logprob: -6.612234592437744
    9. '<|end|>' → logprob: -7.237234592437744
    10. ':
' → logprob: -7.487234592437744

Token 1490: ' la' (ID: 557)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.5409464836120605
    2. 'ob' → logprob: -1.9159464836120605
    3. 'atte' → logprob: -2.5409464836120605
    4. 'already' → logprob: -3.4159464836120605
    5. 'ass' → logprob: -3.6659464836120605
    6. ' déjà' → logprob: -4.0409464836120605
    7. 'la' → logprob: -4.2909464836120605
    8. 'exact' → logprob: -4.5409464836120605
    9. 'celle' → logprob: -4.6659464836120605
    10. '...' → logprob: -4.7909464836120605

Token 1491: ' représentation' (ID: 162614)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.3953913450241089
    2. 'tuple' → logprob: -1.7703913450241089
    3. 'patterns' → logprob: -2.6453914642333984
    4. ' pattern' → logprob: -4.395391464233398
    5. 'final' → logprob: -4.770391464233398
    6. 'valid' → logprob: -4.770391464233398
    7. 'canonical' → logprob: -4.770391464233398
    8. 'next' → logprob: -5.020391464233398
    9. 'token' → logprob: -5.270391464233398
    10. ' suivante' → logprob: -5.395391464233398

Token 1492: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4695207178592682
    2. '<|end|>' → logprob: -1.8445206880569458
    3. ':' → logprob: -3.0945208072662354
    4. '\n' → logprob: -3.3445208072662354
    5. '.' → logprob: -3.4695208072662354
    6. '<|end|>' → logprob: -4.094520568847656
    7. '\' → logprob: -4.094520568847656
    8. ',' → logprob: -4.094520568847656
    9. '}' → logprob: -4.844520568847656
    10. '(' → logprob: -5.219520568847656

Token 1493: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09067987650632858
    2. ')' → logprob: -3.215679883956909
    3. ',' → logprob: -4.71567964553833
    4. '   ' → logprob: -4.96567964553833
    5. '```' → logprob: -5.46567964553833
    6. '<|end|>' → logprob: -5.46567964553833
    7. '        
' → logprob: -5.59067964553833
    8. '[' → logprob: -5.96567964553833
    9. '\' → logprob: -6.21567964553833
    10. '#' → logprob: -6.34067964553833

Token 1494: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038721099495887756
    2. '<|end|>' → logprob: -4.163721084594727
    3. ')' → logprob: -5.163721084594727
    4. '        
' → logprob: -5.288721084594727
    5. '
' → logprob: -5.663721084594727
    6. '   ' → logprob: -5.788721084594727
    7. '#' (adapté à ' #') → logprob: -6.538721084594727
    8. '```' → logprob: -7.538721084594727
    9. ',' → logprob: -7.663721084594727
    10. '...' → logprob: -7.663721084594727

Token 1495: ' Donc' (ID: 88837)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1568859964609146
    2. '
' → logprob: -2.656886100769043
    3. '        
' → logprob: -3.156886100769043
    4. '#' → logprob: -4.156886100769043
    5. '   ' → logprob: -4.906886100769043
    6. '<|end|>' → logprob: -6.156886100769043
    7. '    
' → logprob: -6.781886100769043
    8. '```' → logprob: -6.906886100769043
    9. '  
' → logprob: -7.156886100769043
    10. '\n' → logprob: -7.531886100769043

Token 1496: ' valid' (ID: 4529)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6242292523384094
    2. 'continue' → logprob: -1.1242291927337646
    3. ' continue' → logprob: -3.1242291927337646
    4. 'pass' → logprob: -3.4992291927337646
    5. 'return' → logprob: -3.8742291927337646
    6. 'print' → logprob: -4.249229431152344
    7. '#' → logprob: -4.374229431152344
    8. '```' → logprob: -5.374229431152344
    9. 'valid' → logprob: -5.874229431152344
    10. '   ' → logprob: -6.374229431152344

Token 1497: '_patterns' (ID: 161400)
  Prédit: '_patterns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_patterns' → logprob: -7.266944157890975e-05
    2. '_' → logprob: -9.750072479248047
    3. '_pat' → logprob: -12.000072479248047
    4. '_p' → logprob: -13.000072479248047
    5. '_pattern' → logprob: -13.250072479248047
    6. 'patterns' → logprob: -13.625072479248047
    7. '\' → logprob: -14.000072479248047
    8. '_pairs' → logprob: -14.000072479248047
    9. '_positions' → logprob: -15.250072479248047
    10. '_
' → logprob: -15.750072479248047

Token 1498: ' est' (ID: 893)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1499: ' déjà' (ID: 21229)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.5833407640457153
    2. 'valid' → logprob: -0.8333407640457153
    3. ' la' → logprob: -5.958340644836426
    4. ' valide' → logprob: -7.083340644836426
    5. ' ready' → logprob: -8.208340644836426
    6. ' un' → logprob: -8.208340644836426
    7. ' set' → logprob: -8.208340644836426
    8. ' val' → logprob: -8.333340644836426
    9. 'la' → logprob: -8.333340644836426
    10. 'val' → logprob: -8.583340644836426

Token 1500: ' l' (ID: 305)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.5450383424758911
    2. 'final' → logprob: -1.5450383424758911
    3. 'unique' → logprob: -3.0450382232666016
    4. ' valid' → logprob: -3.1700382232666016
    5. 'complete' → logprob: -3.2950382232666016
    6. 'len' → logprob: -4.295038223266602
    7. 's' → logprob: -5.045038223266602
    8. 'la' → logprob: -5.045038223266602
    9. 'canonical' → logprob: -5.045038223266602
    10. 'set' → logprob: -5.295038223266602

Token 1501: ''ensemble' (ID: 79341)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.5429812669754028
    2. 'set' → logprob: -2.1679811477661133
    3. 'final' → logprob: -2.5429811477661133
    4. 'ensemble' → logprob: -2.5429811477661133
    5. ''ensemble' → logprob: -2.7929811477661133
    6. ' final' → logprob: -3.7929811477661133
    7. 'unique' → logprob: -3.9179811477661133
    8. ' unique' → logprob: -4.417981147766113
    9. ' ensemble' → logprob: -5.167981147766113
    10. ' complete' → logprob: -5.542981147766113

Token 1502: ' des' (ID: 731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1503: ' patterns' (ID: 18587)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.5065236687660217
    2. ' valid' → logprob: -1.381523609161377
    3. 'patterns' → logprob: -2.131523609161377
    4. ' patterns' → logprob: -3.631523609161377
    5. 'unique' → logprob: -8.381524085998535
    6. 'pattern' → logprob: -8.756524085998535
    7. '(valid' → logprob: -9.131524085998535
    8. ' unique' → logprob: -9.256524085998535
    9. 'canonical' → logprob: -9.381524085998535
    10. ' valide' → logprob: -9.631524085998535

Token 1504: ' uniques' (ID: 156848)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28332987427711487
    2. '
' → logprob: -1.9083298444747925
    3. '        
' → logprob: -2.783329963684082
    4. '<|end|>' → logprob: -3.783329963684082
    5. '   ' → logprob: -5.283329963684082
    6. '    
' → logprob: -6.283329963684082
    7. '  
' → logprob: -6.908329963684082
    8. ')' → logprob: -7.033329963684082
    9. ',' → logprob: -7.658329963684082
    10. '\n' → logprob: -7.908329963684082

Token 1505: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1506: '        
' (ID: 3564)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6959118247032166
    2. '       ' → logprob: -0.8209118247032166
    3. '        
' → logprob: -2.9459118843078613
    4. '   ' → logprob: -6.320911884307861
    5. '```' → logprob: -6.320911884307861
    6. '\n' → logprob: -7.070911884307861
    7. '<|end|>' → logprob: -7.195911884307861
    8. '    
' → logprob: -7.320911884307861
    9. 'print' → logprob: -7.945911884307861
    10. 'return' → logprob: -8.070911407470703

Token 1507: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4129094183444977
    2. '        
' → logprob: -1.4129093885421753
    3. '
' → logprob: -2.412909507751465
    4. 'print' → logprob: -6.037909507751465
    5. '    
' → logprob: -7.037909507751465
    6. '```' → logprob: -7.412909507751465
    7. '   ' → logprob: -7.787909507751465
    8. '            
' → logprob: -8.537909507751465
    9. '<|end|>' → logprob: -8.787909507751465
    10. '  
' → logprob: -8.912909507751465

Token 1508: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18460343778133392
    2. '       ' → logprob: -1.8096034526824951
    3. 'count' → logprob: -6.184603214263916
    4. '        
' → logprob: -6.309603214263916
    5. 'result' → logprob: -8.059603691101074
    6. ' print' → logprob: -8.559603691101074
    7. '```' → logprob: -8.809603691101074
    8. '
' → logprob: -9.559603691101074
    9. '   ' → logprob: -10.184603691101074
    10. 'output' → logprob: -10.434603691101074

Token 1509: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09131298214197159
    2. '       ' → logprob: -2.591312885284424
    3. 'count' → logprob: -4.966312885284424
    4. 'result' → logprob: -6.091312885284424
    5. '        
' → logprob: -6.341312885284424
    6. ' print' → logprob: -7.341312885284424
    7. '#' → logprob: -8.591313362121582
    8. '
' → logprob: -9.341313362121582
    9. 'total' → logprob: -9.466313362121582
    10. 'counts' → logprob: -9.841313362121582

Token 1510: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009212899953126907
    2. ' print' → logprob: -5.634212970733643
    3. '       ' → logprob: -5.884212970733643
    4. '_print' → logprob: -7.384212970733643
    5. '   ' → logprob: -7.509212970733643
    6. '_' → logprob: -8.134212493896484
    7. '#' → logprob: -8.134212493896484
    8. '```' → logprob: -8.259212493896484
    9. ' =' → logprob: -8.759212493896484
    10. '           ' → logprob: -9.009212493896484

Token 1511: ' donc' (ID: 14206)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.5903231501579285
    2. 'len' → logprob: -0.8403231501579285
    3. '(' → logprob: -4.590322971343994
    4. '       ' → logprob: -6.465322971343994
    5. ' len' → logprob: -7.215322971343994
    6. '()' → logprob: -7.340322971343994
    7. '   ' → logprob: -7.465322971343994
    8. '(
' → logprob: -8.590323448181152
    9. 'print' → logprob: -9.215323448181152
    10. '()
' → logprob: -9.590323448181152

Token 1512: ' simplement' (ID: 45065)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20495910942554474
    2. 'len' → logprob: -1.7049591541290283
    3. '(len' → logprob: -5.704958915710449
    4. '   ' → logprob: -8.70495891571045
    5. '       ' → logprob: -10.57995891571045
    6. ' len' → logprob: -11.32995891571045
    7. ' print' → logprob: -12.07995891571045
    8. '[len' → logprob: -14.95495891571045
    9. '(print' → logprob: -15.32995891571045
    10. '```' → logprob: -15.57995891571045

Token 1513: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003564904211089015
    2. '       ' → logprob: -5.753564834594727
    3. ' print' → logprob: -8.003564834594727
    4. 'len' → logprob: -10.503564834594727
    5. '   ' → logprob: -11.378564834594727
    6. '```' → logprob: -11.378564834594727
    7. '(len' → logprob: -13.253564834594727
    8. '`' → logprob: -15.628564834594727
    9. ' len' → logprob: -15.628564834594727
    10. '``' → logprob: -15.753564834594727

Token 1514: ' nombre' (ID: 9733)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.006939382757991552
    2. 'print' → logprob: -5.00693941116333
    3. '(len' → logprob: -8.506938934326172
    4. ' len' → logprob: -10.756938934326172
    5. ' print' → logprob: -16.006938934326172
    6. 'length' → logprob: -16.131938934326172
    7. '[len' → logprob: -16.506938934326172
    8. 'nombre' → logprob: -16.631938934326172
    9. '   ' → logprob: -16.756938934326172
    10. '=len' → logprob: -17.256938934326172

Token 1515: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.576580822467804
    2. '       ' → logprob: -0.826580822467804
    3. ' print' → logprob: -8.951581001281738
    4. '(len' → logprob: -9.076581001281738
    5. '(' → logprob: -9.326581001281738
    6. '   ' → logprob: -9.576581001281738
    7. ',' → logprob: -9.576581001281738
    8. '(print' → logprob: -10.326581001281738
    9. 'len' → logprob: -10.576581001281738
    10. 'import' → logprob: -11.076581001281738

Token 1516: ' ces' (ID: 10532)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.01131906732916832
    2. ' len' → logprob: -4.761319160461426
    3. 'print' → logprob: -6.761319160461426
    4. 'valid' → logprob: -6.886319160461426
    5. '(len' → logprob: -7.886319160461426
    6. ' valid' → logprob: -8.886319160461426
    7. '[len' → logprob: -13.261319160461426
    8. ' print' → logprob: -13.261319160461426
    9. '{' → logprob: -13.636319160461426
    10. 'str' → logprob: -13.636319160461426

Token 1517: ' patterns' (ID: 18587)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.3654997646808624
    2. 'valid' → logprob: -1.24049973487854
    3. 'patterns' → logprob: -4.615499973297119
    4. ' patterns' → logprob: -5.990499973297119
    5. '(valid' → logprob: -6.115499973297119
    6. 'len' → logprob: -7.865499973297119
    7. '_valid' → logprob: -8.115499496459961
    8. '{' → logprob: -8.115499496459961
    9. ' unique' → logprob: -8.490499496459961
    10. '(' → logprob: -8.615499496459961

Token 1518: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028487443923950195
    2. 'print' → logprob: -5.8778486251831055
    3. '```' → logprob: -11.252848625183105
    4. ' print' → logprob: -12.002848625183105
    5. '        
' → logprob: -12.127848625183105
    6. '
' → logprob: -12.252848625183105
    7. ',' → logprob: -12.502848625183105
    8. '           ' → logprob: -12.752848625183105
    9. '   ' → logprob: -13.127848625183105
    10. 'import' → logprob: -13.752848625183105

Token 1519: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005392888095229864
    2. 'print' → logprob: -5.255393028259277
    3. '```' → logprob: -9.380393028259277
    4. '        
' → logprob: -9.755393028259277
    5. '
' → logprob: -11.755393028259277
    6. '   ' → logprob: -11.880393028259277
    7. '           ' → logprob: -13.630393028259277
    8. '    
' → logprob: -15.380393028259277
    9. '``' → logprob: -15.630393028259277
    10. ' print' → logprob: -15.880393028259277

Token 1520: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.47414445877075195
    2. '       ' → logprob: -0.974144458770752
    3. '```' → logprob: -10.099143981933594
    4. ' print' → logprob: -11.224143981933594
    5. '   ' → logprob: -11.724143981933594
    6. '        
' → logprob: -12.474143981933594
    7. '
' → logprob: -14.849143981933594
    8. '``' → logprob: -15.599143981933594
    9. '           ' → logprob: -15.974143981933594
    10. '	print' → logprob: -16.224143981933594

Token 1521: ' NB' (ID: 68568)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.47427451610565186
    2. '       ' → logprob: -0.9742745161056519
    3. '
' → logprob: -9.474274635314941
    4. '```' → logprob: -9.474274635314941
    5. '        
' → logprob: -10.474274635314941
    6. '   ' → logprob: -11.724274635314941
    7. ' print' → logprob: -12.099274635314941
    8. '``' → logprob: -14.099274635314941
    9. '           ' → logprob: -14.724274635314941
    10. '    
' → logprob: -15.849274635314941

Token 1522: ':' (ID: 25)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16625860333442688
    2. '       ' → logprob: -1.9162585735321045
    3. '   ' → logprob: -5.541258811950684
    4. ' =' → logprob: -7.791258811950684
    5. ',' → logprob: -8.041258811950684
    6. '=' → logprob: -8.166258811950684
    7. ' print' → logprob: -8.166258811950684
    8. '```' → logprob: -8.416258811950684
    9. ':' → logprob: -8.791258811950684
    10. '           ' → logprob: -8.916258811950684

Token 1523: ' Le' (ID: 2018)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.016117068007588387
    2. '       ' → logprob: -4.266117095947266
    3. ' print' → logprob: -6.266117095947266
    4. '```' → logprob: -9.891117095947266
    5. '   ' → logprob: -14.141117095947266
    6. '``' → logprob: -15.391117095947266
    7. '
' → logprob: -15.516117095947266
    8. '        
' → logprob: -15.766117095947266
    9. '	print' → logprob: -17.266117095947266
    10. ' ' → logprob: -17.391117095947266

Token 1524: ' problème' (ID: 35630)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0023886142298579216
    2. ' print' → logprob: -6.5023884773254395
    3. ' ' → logprob: -8.252388954162598
    4. '```' → logprob: -8.752388954162598
    5. 'pr' → logprob: -9.127388954162598
    6. '   ' → logprob: -9.252388954162598
    7. ')' → logprob: -9.502388954162598
    8. '
' → logprob: -10.877388954162598
    9. 'len' → logprob: -11.002388954162598
    10. 'for' → logprob: -11.127388954162598

Token 1525: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6993508338928223
    2. 'print' → logprob: -1.1993508338928223
    3. '=' → logprob: -2.6993508338928223
    4. '   ' → logprob: -2.9493508338928223
    5. ' =' → logprob: -4.199350833892822
    6. '#' → logprob: -4.324350833892822
    7. '        
' → logprob: -4.699350833892822
    8. ')' → logprob: -4.699350833892822
    9. '           ' → logprob: -5.074350833892822
    10. '```' → logprob: -5.199350833892822

Token 1526: ' compter' (ID: 81694)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.5759791135787964
    2. 'complex' → logprob: -1.7009791135787964
    3. 'la' → logprob: -2.325979232788086
    4. 'l' → logprob: -2.700979232788086
    5. '#' → logprob: -3.575979232788086
    6. '```' → logprob: -4.450979232788086
    7. 'dé' → logprob: -4.825979232788086
    8. 'fin' → logprob: -5.450979232788086
    9. 'comp' → logprob: -5.575979232788086
    10. 'code' → logprob: -5.825979232788086

Token 1527: ' les' (ID: 1341)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.9375643134117126
    2. 'valid' → logprob: -1.3125643730163574
    3. 'len' → logprob: -1.3125643730163574
    4. '(valid' → logprob: -3.3125643730163574
    5. 'patterns' → logprob: -4.687564373016357
    6. '   ' → logprob: -5.187564373016357
    7. ' valid' → logprob: -5.312564373016357
    8. 'les' → logprob: -6.437564373016357
    9. 'des' → logprob: -6.437564373016357
    10. '(' → logprob: -6.562564373016357

Token 1528: ' arrangements' (ID: 34602)
  Prédit: ' motifs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' motifs' → logprob: -0.8256655931472778
    2. 'patterns' → logprob: -1.3256655931472778
    3. 'mot' → logprob: -1.4506655931472778
    4. 'arr' → logprob: -4.325665473937988
    5. ' patterns' → logprob: -4.450665473937988
    6. 'm' → logprob: -4.825665473937988
    7. 'pattern' → logprob: -5.200665473937988
    8. 'car' → logprob: -5.825665473937988
    9. 'pat' → logprob: -5.825665473937988
    10. 'match' → logprob: -5.950665473937988

Token 1529: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30027106404304504
    2. '=' → logprob: -2.0502710342407227
    3. '   ' → logprob: -3.4252710342407227
    4. ',' → logprob: -4.175271034240723
    5. ':' → logprob: -4.675271034240723
    6. ')' → logprob: -4.675271034240723
    7. '_' → logprob: -4.800271034240723
    8. '       ' → logprob: -4.800271034240723
    9. '        
' → logprob: -5.425271034240723
    10. '_final' → logprob: -5.425271034240723

Token 1530: ' distingu' (ID: 29535)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.6679896116256714
    2. 'p' → logprob: -1.9179896116256714
    3. 'match' → logprob: -2.792989730834961
    4. 'app' → logprob: -3.542989730834961
    5. 'part' → logprob: -3.667989730834961
    6. 'nombre' → logprob: -3.792989730834961
    7. 'sym' → logprob: -4.042989730834961
    8. 'sembl' → logprob: -4.042989730834961
    9. 'pair' → logprob: -4.042989730834961
    10. 'mot' → logprob: -4.167989730834961

Token 1531: 'ant' (ID: 493)
  Prédit: 'ateur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ateur' → logprob: -0.24384483695030212
    2. 'eur' → logprob: -1.9938448667526245
    3. 'ueur' → logprob: -3.493844747543335
    4. 'u' → logprob: -4.618844985961914
    5. '```' → logprob: -4.868844985961914
    6. ')' → logprob: -5.118844985961914
    7. 'e' → logprob: -5.493844985961914
    8. 'ateurs' → logprob: -5.993844985961914
    9. '=' → logprob: -6.118844985961914
    10. '_' → logprob: -6.243844985961914

Token 1532: ' les' (ID: 1341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17901740968227386
    2. 'les' → logprob: -3.0540173053741455
    3. ' les' → logprob: -3.0540173053741455
    4. ' _' → logprob: -3.9290173053741455
    5. ' ' → logprob: -5.054017543792725
    6. ')' → logprob: -5.304017543792725
    7. ' )' → logprob: -5.679017543792725
    8. '_pairs' → logprob: -5.679017543792725
    9. ' ' → logprob: -5.804017543792725
    10. ' des' → logprob: -6.054017543792725

Token 1533: ' labels' (ID: 17125)
  Prédit: 'symbol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'symbol' → logprob: -0.2560375928878784
    2. ' symbol' → logprob: -2.756037712097168
    3. 'symbols' → logprob: -2.881037712097168
    4. ' p' → logprob: -3.631037712097168
    5. 'p' → logprob: -4.256037712097168
    6. 'sym' → logprob: -4.381037712097168
    7. ' symbols' → logprob: -4.881037712097168
    8. 'pairs' → logprob: -5.006037712097168
    9. ' couples' → logprob: -5.381037712097168
    10. 'cou' → logprob: -5.381037712097168

Token 1534: ' des' (ID: 731)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3514150381088257
    2. ')' → logprob: -2.7264151573181152
    3. ' =' → logprob: -2.9764151573181152
    4. ':' → logprob: -3.1014151573181152
    5. 'print' → logprob: -3.1014151573181152
    6. '=' → logprob: -3.2264151573181152
    7. '   ' → logprob: -3.6014151573181152
    8. ',' → logprob: -5.101415157318115
    9. '()' → logprob: -5.976415157318115
    10. '):' → logprob: -6.726415157318115

Token 1535: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1912054717540741
    2. ' p' → logprob: -2.4412055015563965
    3. 'pairs' → logprob: -2.8162055015563965
    4. 'symbol' → logprob: -5.1912055015563965
    5. ' pairs' → logprob: -5.5662055015563965
    6. 'patterns' → logprob: -5.6912055015563965
    7. '```' → logprob: -5.6912055015563965
    8. 'sym' → logprob: -6.3162055015563965
    9. 'symbols' → logprob: -6.4412055015563965
    10. 'pair' → logprob: -6.9412055015563965

Token 1536: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.1855037808418274
    2. 'a' → logprob: -2.1855037212371826
    3. 'airs' → logprob: -3.5605037212371826
    4. 'air' → logprob: -5.185503959655762
    5. 'ai' → logprob: -5.435503959655762
    6. '_' → logprob: -5.685503959655762
    7. 'aire' → logprob: -6.435503959655762
    8. '``' → logprob: -6.748003959655762
    9. 'attern' → logprob: -6.873003959655762
    10. '```' → logprob: -6.998003959655762

Token 1537: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28099608421325684
    2. 'print' → logprob: -1.9059960842132568
    3. '=' → logprob: -3.405996084213257
    4. ')' → logprob: -3.780996084213257
    5. ' =' → logprob: -4.530996322631836
    6. '        
' → logprob: -5.155996322631836
    7. ',' → logprob: -5.405996322631836
    8. '   ' → logprob: -5.405996322631836
    9. ':' → logprob: -6.030996322631836
    10. ' print' → logprob: -6.405996322631836

Token 1538: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6693987846374512
    2. ')' → logprob: -1.4193987846374512
    3. '   ' → logprob: -2.169398784637451
    4. '[' → logprob: -3.794398784637451
    5. ':' → logprob: -4.169398784637451
    6. '<|end|>' → logprob: -4.544398784637451
    7. '```' → logprob: -4.544398784637451
    8. '.' → logprob: -5.044398784637451
    9. ',' → logprob: -5.169398784637451
    10. '#' → logprob: -5.169398784637451

Token 1539: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6170210242271423
    2. 'print' → logprob: -1.617021083831787
    3. ')' → logprob: -1.992021083831787
    4. '   ' → logprob: -3.242021083831787
    5. '=' → logprob: -3.367021083831787
    6. ':' → logprob: -3.742021083831787
    7. ' =' → logprob: -5.492021083831787
    8. ',' → logprob: -5.617021083831787
    9. '.' → logprob: -6.242021083831787
    10. '           ' → logprob: -6.367021083831787

Token 1540: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.339072823524475
    2. '=' → logprob: -1.339072823524475
    3. '_' → logprob: -1.589072823524475
    4. ':' → logprob: -3.2140727043151855
    5. '   ' → logprob: -3.5890727043151855
    6. ' =' → logprob: -3.8390727043151855
    7. ',' → logprob: -3.8390727043151855
    8. '#' → logprob: -3.8390727043151855
    9. '==' → logprob: -3.8390727043151855
    10. '```' → logprob: -3.9640727043151855

Token 1541: ' "' (ID: 392)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rés' → logprob: -0.47345003485679626
    2. 'dé' → logprob: -1.5984500646591187
    3. 'complex' → logprob: -2.098449945449829
    4. 'com' → logprob: -4.848450183868408
    5. 'ré' → logprob: -5.098450183868408
    6. 'res' → logprob: -5.098450183868408
    7. 'simple' → logprob: -5.223450183868408
    8. ' rés' → logprob: -5.348450183868408
    9. 'd' → logprob: -5.598450183868408
    10. ' déjà' → logprob: -5.723450183868408

Token 1542: 'rés' (ID: 60278)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.8555478453636169
    2. 'rés' → logprob: -1.3555479049682617
    3. '```' → logprob: -2.8555479049682617
    4. 'simple' → logprob: -2.9805479049682617
    5. 'exact' → logprob: -3.1055479049682617
    6. 'dé' → logprob: -3.4805479049682617
    7. 'd' → logprob: -3.7305479049682617
    8. 'complex' → logprob: -4.105547904968262
    9. 'resolved' → logprob: -4.480547904968262
    10. 'correct' → logprob: -4.605547904968262

Token 1543: 'olu' (ID: 23250)
  Prédit: 'olu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olu' → logprob: -0.36878377199172974
    2. 'ol' → logprob: -2.243783712387085
    3. 'umé' → logprob: -3.368783712387085
    4. 'ultat' → logprob: -3.368783712387085
    5. 'um' → logprob: -3.493783712387085
    6. '#' → logprob: -3.493783712387085
    7. 'u' → logprob: -3.743783712387085
    8. 'ult' → logprob: -3.868783712387085
    9. '```' → logprob: -5.243783950805664
    10. 'sol' → logprob: -5.493783950805664

Token 1544: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.16069920361042023
    2. '.' → logprob: -2.5356991291046143
    3. ')' → logprob: -3.0356991291046143
    4. '```' → logprob: -4.660699367523193
    5. '."' → logprob: -5.660699367523193
    6. ':' → logprob: -6.285699367523193
    7. ' par' → logprob: -6.785699367523193
    8. 'par' → logprob: -7.285699367523193
    9. ')"' → logprob: -7.535699367523193
    10. '"""' → logprob: -7.535699367523193

Token 1545: ' en' (ID: 469)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5321531295776367
    2. 'print' → logprob: -1.1571531295776367
    3. ')' → logprob: -2.7821531295776367
    4. '
' → logprob: -4.657153129577637
    5. '   ' → logprob: -5.032153129577637
    6. '        
' → logprob: -5.782153129577637
    7. '```' → logprob: -6.032153129577637
    8. ':' → logprob: -6.157153129577637
    9. ')
' → logprob: -6.407153129577637
    10. '()' → logprob: -6.532153129577637

Token 1546: ' prenant' (ID: 140375)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009160450659692287
    2. 'len' → logprob: -5.38416051864624
    3. 'aff' → logprob: -6.88416051864624
    4. 'im' → logprob: -7.00916051864624
    5. '```' → logprob: -7.88416051864624
    6. ' print' → logprob: -7.88416051864624
    7. 'consider' → logprob: -8.384160041809082
    8. 'continu' → logprob: -8.384160041809082
    9. 'com' → logprob: -8.884160041809082
    10. '   ' → logprob: -8.884160041809082

Token 1547: ' l' (ID: 305)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0017515801591798663
    2. ' len' → logprob: -6.75175142288208
    3. 'la' → logprob: -8.126751899719238
    4. '```' → logprob: -8.501751899719238
    5. 'le' → logprob: -10.626751899719238
    6. '   ' → logprob: -11.001751899719238
    7. '(len' → logprob: -11.501751899719238
    8. ' la' → logprob: -11.876751899719238
    9. '=len' → logprob: -12.251751899719238
    10. 'l' → logprob: -12.251751899719238

Token 1548: ''ensemble' (ID: 79341)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6640172600746155
    2. 'e' → logprob: -1.6640172004699707
    3. ''ensemble' → logprob: -2.5390172004699707
    4. 'u' → logprob: -3.0390172004699707
    5. ' len' → logprob: -3.0390172004699707
    6. '=len' → logprob: -3.5390172004699707
    7. 'a' → logprob: -4.414017200469971
    8. ''' → logprob: -4.414017200469971
    9. ''en' → logprob: -4.789017200469971
    10. '(len' → logprob: -4.914017200469971

Token 1549: ' des' (ID: 731)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.328455924987793
    2. ')' → logprob: -1.328455924987793
    3. '()' → logprob: -1.578455924987793
    4. ':' → logprob: -2.328455924987793
    5. '   ' → logprob: -3.453455924987793
    6. '       ' → logprob: -3.703455924987793
    7. '(
' → logprob: -3.953455924987793
    8. '()
' → logprob: -3.953455924987793
    9. '.' → logprob: -4.578455924987793
    10. '(len' → logprob: -4.953455924987793

Token 1550: ' app' (ID: 1053)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.013029985129833221
    2. ' valid' → logprob: -4.638030052185059
    3. 'patterns' → logprob: -6.013030052185059
    4. '(valid' → logprob: -8.138030052185059
    5. 'len' → logprob: -8.263030052185059
    6. 'pattern' → logprob: -9.513030052185059
    7. ' patterns' → logprob: -10.263030052185059
    8. '```' → logprob: -11.138030052185059
    9. 'val' → logprob: -11.388030052185059
    10. ')' → logprob: -11.388030052185059

Token 1551: 'ari' (ID: 1683)
  Prédit: 'air'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'air' → logprob: -0.6353214979171753
    2. 'airs' → logprob: -1.7603214979171753
    3. ')' → logprob: -2.760321617126465
    4. 'ari' → logprob: -2.760321617126465
    5. 'p' → logprob: -3.135321617126465
    6. 's' → logprob: -4.135321617126465
    7. 'ai' → logprob: -4.260321617126465
    8. 'pairs' → logprob: -4.385321617126465
    9. 'aires' → logprob: -4.885321617126465
    10. 'aire' → logprob: -5.260321617126465

Token 1552: 'ements' (ID: 4507)
  Prédit: 'ements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ements' → logprob: -0.025386739522218704
    2. 'ments' → logprob: -4.525386810302734
    3. 'nements' → logprob: -4.525386810302734
    4. 'e' → logprob: -6.025386810302734
    5. 'em' → logprob: -8.275386810302734
    6. 're' → logprob: -9.525386810302734
    7. 's' → logprob: -9.525386810302734
    8. 't' → logprob: -9.900386810302734
    9. 'Perfect' → logprob: -9.900386810302734
    10. 'EMENTS' → logprob: -9.900386810302734

Token 1553: ' parfait' (ID: 39268)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9518710374832153
    2. 'print' → logprob: -1.0768710374832153
    3. '   ' → logprob: -2.201870918273926
    4. ')' → logprob: -2.951870918273926
    5. '```' → logprob: -3.326870918273926
    6. ' =' → logprob: -3.951870918273926
    7. '=' → logprob: -4.201870918273926
    8. '_' → logprob: -4.701870918273926
    9. '           ' → logprob: -5.826870918273926
    10. '
' → logprob: -5.951870918273926

Token 1554: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.019847583025693893
    2. ')' → logprob: -4.769847393035889
    3. '_' → logprob: -5.144847393035889
    4. 'ments' → logprob: -5.769847393035889
    5. '_s' → logprob: -7.394847393035889
    6. 'ts' → logprob: -7.394847393035889
    7. 'nts' → logprob: -8.019847869873047
    8. '__' → logprob: -9.394847869873047
    9. ')s' → logprob: -9.394847869873047
    10. 'ents' → logprob: -9.394847869873047

Token 1555: ' sans' (ID: 9828)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18423853814601898
    2. '       ' → logprob: -1.9342385530471802
    3. ')' → logprob: -4.809238433837891
    4. '```' → logprob: -4.934238433837891
    5. '()' → logprob: -5.934238433837891
    6. '()
' → logprob: -6.309238433837891
    7. ')
' → logprob: -6.934238433837891
    8. '   ' → logprob: -7.184238433837891
    9. '
' → logprob: -7.809238433837891
    10. ' print' → logprob: -7.934238433837891

Token 1556: ' distinction' (ID: 48685)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.8479722738265991
    2. 'd' → logprob: -1.5979722738265991
    3. 'dou' → logprob: -2.9729723930358887
    4. 'duplicates' → logprob: -3.3479723930358887
    5. 'double' → logprob: -3.5979723930358887
    6. 'com' → logprob: -3.5979723930358887
    7. 're' → logprob: -3.7229723930358887
    8. 'comp' → logprob: -3.8479723930358887
    9. 'dup' → logprob: -3.8479723930358887
    10. 'cons' → logprob: -4.222972393035889

Token 1557: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027594616636633873
    2. 'print' → logprob: -4.027594566345215
    3. '
' → logprob: -5.277594566345215
    4. '        
' → logprob: -6.402594566345215
    5. '```' → logprob: -7.027594566345215
    6. ')
' → logprob: -7.527594566345215
    7. ')' → logprob: -8.027594566345215
    8. '   ' → logprob: -8.152594566345215
    9. '()
' → logprob: -8.402594566345215
    10. ',' → logprob: -9.652594566345215

Token 1558: ' p' (ID: 275)
  Prédit: 'labels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'labels' → logprob: -0.12212777137756348
    2. 'label' → logprob: -2.6221277713775635
    3. 'l' → logprob: -3.3721277713775635
    4. 'sym' → logprob: -6.247127532958984
    5. 'symbol' → logprob: -6.747127532958984
    6. 'leur' → logprob: -7.372127532958984
    7. 'é' → logprob: -7.497127532958984
    8. 'ordre' → logprob: -7.497127532958984
    9. 'lab' → logprob: -7.747127532958984
    10. ' labels' → logprob: -7.747127532958984

Token 1559: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.09452002495527267
    2. 'aire' → logprob: -3.219520092010498
    3. 'airs' → logprob: -4.094520092010498
    4. 'a' → logprob: -4.219520092010498
    5. 'air' → logprob: -5.594520092010498
    6. 'r' → logprob: -5.594520092010498
    7. 'ai' → logprob: -5.969520092010498
    8. '_' → logprob: -6.594520092010498
    9. 'ar' → logprob: -7.219520092010498
    10. '`' → logprob: -7.719520092010498

Token 1560: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005692115053534508
    2. '        
' → logprob: -5.880692005157471
    3. 'print' → logprob: -6.005692005157471
    4. '
' → logprob: -8.130692481994629
    5. '   ' → logprob: -10.130692481994629
    6. '```' → logprob: -11.255692481994629
    7. '           ' → logprob: -11.380692481994629
    8. '  
' → logprob: -11.380692481994629
    9. '    
' → logprob: -11.880692481994629
    10. '	' → logprob: -12.505692481994629

Token 1561: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19204579293727875
    2. 'print' → logprob: -1.81704580783844
    3. '
' → logprob: -5.44204568862915
    4. '        
' → logprob: -5.56704568862915
    5. '   ' → logprob: -7.31704568862915
    6. '\n' → logprob: -7.31704568862915
    7. '```' → logprob: -7.31704568862915
    8. ')' → logprob: -7.44204568862915
    9. '    
' → logprob: -8.692046165466309
    10. ' print' → logprob: -8.692046165466309

Token 1562: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2568347752094269
    2. 'print' → logprob: -1.5068347454071045
    3. '
' → logprob: -6.256834983825684
    4. '        
' → logprob: -6.506834983825684
    5. '```' → logprob: -6.631834983825684
    6. '   ' → logprob: -9.256834983825684
    7. ' print' → logprob: -11.131834983825684
    8. '    
' → logprob: -11.131834983825684
    9. '``' → logprob: -11.381834983825684
    10. '           ' → logprob: -11.631834983825684

Token 1563: ' Parce' (ID: 119112)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16078588366508484
    2. '       ' → logprob: -1.9107859134674072
    3. '
' → logprob: -7.910785675048828
    4. '```' → logprob: -8.910785675048828
    5. '        
' → logprob: -9.910785675048828
    6. ' print' → logprob: -12.160785675048828
    7. '   ' → logprob: -13.035785675048828
    8. '``' → logprob: -13.910785675048828
    9. '#print' → logprob: -14.535785675048828
    10. '           ' → logprob: -14.785785675048828

Token 1564: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.15833812952041626
    2. ')' → logprob: -2.9083380699157715
    3. '       ' → logprob: -3.5333380699157715
    4. 'que' → logprob: -3.7833380699157715
    5. '#' → logprob: -4.0333380699157715
    6. '   ' → logprob: -5.2833380699157715
    7. ' )' → logprob: -5.2833380699157715
    8. ' de' → logprob: -6.4083380699157715
    9. ''' → logprob: -6.4083380699157715
    10. ' qu' → logprob: -6.6583380699157715

Token 1565: ' le' (ID: 505)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.35375264286994934
    2. '#' → logprob: -1.978752613067627
    3. 'c' → logprob: -3.228752613067627
    4. '       ' → logprob: -3.978752613067627
    5. 'cha' → logprob: -4.228752613067627
    6. 'la' → logprob: -4.603752613067627
    7. 'nous' → logprob: -4.603752613067627
    8. 'le' → logprob: -4.728752613067627
    9. '   ' → logprob: -4.728752613067627
    10. 't' → logprob: -4.728752613067627

Token 1566: ' problème' (ID: 35630)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -1.4268932342529297
    2. ' code' → logprob: -1.9268932342529297
    3. 'len' → logprob: -1.9268932342529297
    4. ''' → logprob: -2.4268932342529297
    5. '#' → logprob: -2.6768932342529297
    6. ')' → logprob: -3.1768932342529297
    7. '"' → logprob: -3.1768932342529297
    8. ' ' → logprob: -3.6768932342529297
    9. '`' → logprob: -3.8018932342529297
    10. '\n' → logprob: -4.05189323425293

Token 1567: ' dit' (ID: 4758)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1568: ' qu' (ID: 474)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4515873193740845
    2. '   ' → logprob: -1.9515873193740845
    3. '```' → logprob: -2.076587200164795
    4. ' que' → logprob: -2.701587200164795
    5. '...' → logprob: -2.826587200164795
    6. '#' → logprob: -3.451587200164795
    7. ''' → logprob: -3.576587200164795
    8. ' de' → logprob: -3.701587200164795
    9. '<|end|>' → logprob: -3.826587200164795
    10. ' ' → logprob: -3.951587200164795

Token 1569: ''on' (ID: 25812)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4360894560813904
    2. 'u' → logprob: -1.3110895156860352
    3. 'e' → logprob: -3.311089515686035
    4. ''on' → logprob: -3.936089515686035
    5. ''il' → logprob: -4.436089515686035
    6. ' on' → logprob: -6.061089515686035
    7. ' '' → logprob: -6.186089515686035
    8. ''espace' → logprob: -7.061089515686035
    9. ''u' → logprob: -7.186089515686035
    10. 'a' → logprob: -7.436089515686035

Token 1570: ' compte' (ID: 19657)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'do' → logprob: -1.322992205619812
    2. 'ne' → logprob: -1.697992205619812
    3. 'comp' → logprob: -1.947992205619812
    4. ' considère' → logprob: -2.3229923248291016
    5. ' ne' → logprob: -2.9479923248291016
    6. 'pe' → logprob: -3.0729923248291016
    7. ' doit' → logprob: -3.0729923248291016
    8. '#' → logprob: -3.1979923248291016
    9. 'n' → logprob: -3.3229923248291016
    10. ' compte' → logprob: -3.5729923248291016

Token 1571: ' comme' (ID: 7971)
  Prédit: ' uniquement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' uniquement' → logprob: -1.1331888437271118
    2. ')' → logprob: -1.5081888437271118
    3. ' seulement' → logprob: -2.3831887245178223
    4. '<|end|>' → logprob: -2.3831887245178223
    5. 'les' → logprob: -2.8831887245178223
    6. 'only' → logprob: -3.5081887245178223
    7. '```' → logprob: -3.6331887245178223
    8. ' )' → logprob: -4.133188724517822
    9. ' ' → logprob: -4.633188724517822
    10. 'tokens' → logprob: -4.883188724517822

Token 1572: ' ident' (ID: 3951)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.6516285538673401
    2. 'distinct' → logprob: -1.5266284942626953
    3. ' distinct' → logprob: -2.5266284942626953
    4. '1' → logprob: -3.5266284942626953
    5. 'un' → logprob: -3.6516284942626953
    6. 'une' → logprob: -3.7766284942626953
    7. '```' → logprob: -3.7766284942626953
    8. ' ' → logprob: -4.776628494262695
    9. 'des' → logprob: -4.901628494262695
    10. 'dist' → logprob: -5.026628494262695

Token 1573: 'iques' (ID: 11654)
  Prédit: 'ique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.2261452078819275
    2. 'iques' → logprob: -1.6011452674865723
    3. '
' → logprob: -8.601144790649414
    4. '#' → logprob: -8.976144790649414
    5. '=' → logprob: -9.101144790649414
    6. '```' → logprob: -9.351144790649414
    7. ')' → logprob: -9.976144790649414
    8. 'ical' → logprob: -9.976144790649414
    9. 'e' → logprob: -10.101144790649414
    10. '\n' → logprob: -11.351144790649414

Token 1574: ' ceux' (ID: 26863)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.900233268737793
    2. '       ' → logprob: -0.900233268737793
    3. 'print' → logprob: -2.525233268737793
    4. '   ' → logprob: -3.400233268737793
    5. ',' → logprob: -4.275233268737793
    6. ':' → logprob: -4.400233268737793
    7. '(
' → logprob: -4.525233268737793
    8. ')
' → logprob: -5.275233268737793
    9. '```' → logprob: -5.275233268737793
    10. '.' → logprob: -6.150233268737793

Token 1575: ' qui' (ID: 2780)
  Prédit: ' qui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qui' → logprob: -0.1526859849691391
    2. ' des' → logprob: -2.5276858806610107
    3. '_' → logprob: -3.2776858806610107
    4. 'qui' → logprob: -4.65268611907959
    5. ' que' → logprob: -5.65268611907959
    6. 'des' → logprob: -6.52768611907959
    7. ')' → logprob: -6.52768611907959
    8. ' ' → logprob: -6.77768611907959
    9. ' qu' → logprob: -6.90268611907959
    10. ' _' → logprob: -7.27768611907959

Token 1576: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.3314841687679291
    2. 's' → logprob: -1.5814841985702515
    3. 'ont' → logprob: -4.206484317779541
    4. ' sont' → logprob: -4.706484317779541
    5. 'ne' → logprob: -4.706484317779541
    6. ' diff' → logprob: -4.831484317779541
    7. 'n' → logprob: -5.331484317779541
    8. ' ne' → logprob: -5.456484317779541
    9. 'se' → logprob: -5.456484317779541
    10. 'pe' → logprob: -5.581484317779541

Token 1577: 'èrent' (ID: 55228)
  Prédit: 'èrent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'èrent' → logprob: -0.007741374429315329
    2. 'érent' → logprob: -5.132741451263428
    3. 'ère' → logprob: -7.007741451263428
    4. 'érents' → logprob: -7.757741451263428
    5. 'ères' → logprob: -9.25774097442627
    6. 'èr' → logprob: -9.88274097442627
    7. ' sont' → logprob: -10.25774097442627
    8. 'érant' → logprob: -10.25774097442627
    9. 'érer' → logprob: -10.25774097442627
    10. 'érés' → logprob: -10.88274097442627

Token 1578: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -1.093135952949524
    2. ' seulement' → logprob: -1.343135952949524
    3. ' uniquement' → logprob: -1.343135952949524
    4. 'par' → logprob: -3.4681358337402344
    5. '```' → logprob: -3.7181358337402344
    6. ')' → logprob: -3.7181358337402344
    7. '<|end|>' → logprob: -4.468135833740234
    8. 'se' → logprob: -4.718135833740234
    9. ' ' → logprob: -5.218135833740234
    10. ' only' → logprob: -5.218135833740234

Token 1579: ' permutation' (ID: 135200)
  Prédit: ' permutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutation' → logprob: -0.2825877070426941
    2. 'une' → logprob: -2.657587766647339
    3. 'l' → logprob: -2.782587766647339
    4. 'per' → logprob: -3.157587766647339
    5. 'un' → logprob: -4.03258752822876
    6. 'la' → logprob: -4.53258752822876
    7. ' permutations' → logprob: -4.78258752822876
    8. 'perm' → logprob: -5.03258752822876
    9. 'é' → logprob: -5.28258752822876
    10. ' une' → logprob: -5.53258752822876

Token 1580: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7603469491004944
    2. '_des' → logprob: -1.0103468894958496
    3. ')' → logprob: -2.6353468894958496
    4. 'des' → logprob: -3.3853468894958496
    5. '_de' → logprob: -4.01034688949585
    6. 's' → logprob: -4.13534688949585
    7. ' des' → logprob: -4.63534688949585
    8. '_s' → logprob: -4.63534688949585
    9. '(s' → logprob: -5.63534688949585
    10. '_of' → logprob: -6.88534688949585

Token 1581: ' app' (ID: 1053)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.1433691680431366
    2. 'p' → logprob: -2.518369197845459
    3. ' pairs' → logprob: -3.393369197845459
    4. 'pairs' → logprob: -4.393369197845459
    5. 'labels' → logprob: -6.268369197845459
    6. ' labels' → logprob: -6.893369197845459
    7. ' ' → logprob: -7.018369197845459
    8. ' ' → logprob: -7.143369197845459
    9. ' espaces' → logprob: -7.143369197845459
    10. 'esp' → logprob: -7.893369197845459

Token 1582: 'ari' (ID: 1683)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.1249151229858398
    2. '_' → logprob: -1.2499151229858398
    3. '_pairs' → logprob: -1.9999151229858398
    4. 'a' → logprob: -2.62491512298584
    5. 'pairs' → logprob: -3.49991512298584
    6. 'airs' → logprob: -3.87491512298584
    7. 'ari' → logprob: -3.99991512298584
    8. '_p' → logprob: -4.24991512298584
    9. 'r' → logprob: -4.62491512298584
    10. 'aires' → logprob: -4.87491512298584

Token 1583: 'ements' (ID: 4507)
  Prédit: 'ements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ements' → logprob: -0.2512667775154114
    2. 'es' → logprob: -2.0012667179107666
    3. 'è' → logprob: -3.6262667179107666
    4. 'nements' → logprob: -4.126266956329346
    5. 'éments' → logprob: -4.751266956329346
    6. 'ments' → logprob: -4.876266956329346
    7. 'e' → logprob: -5.126266956329346
    8. 'ement' → logprob: -5.751266956329346
    9. 'étés' → logprob: -5.751266956329346
    10. 'èces' → logprob: -6.251266956329346

Token 1584: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12873874604701996
    2. ':' → logprob: -3.3787386417388916
    3. ')' → logprob: -3.7537386417388916
    4. ':
' → logprob: -4.503738880157471
    5. 's' → logprob: -4.753738880157471
    6. ')
' → logprob: -4.753738880157471
    7. ',' → logprob: -4.878738880157471
    8. '[' → logprob: -5.753738880157471
    9. '   ' → logprob: -5.878738880157471
    10. '.' → logprob: -5.878738880157471

Token 1585: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10298324376344681
    2. ')' → logprob: -2.602983236312866
    3. '\n' → logprob: -4.227983474731445
    4. ')
' → logprob: -5.602983474731445
    5. '        
' → logprob: -6.602983474731445
    6. '.' → logprob: -6.727983474731445
    7. '```' → logprob: -7.352983474731445
    8. '#' → logprob: -7.477983474731445
    9. '   ' → logprob: -7.602983474731445
    10. ',' → logprob: -8.852983474731445

Token 1586: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3541763722896576
    2. '       ' → logprob: -1.22917640209198
    3. ')
' → logprob: -6.2291765213012695
    4. '\n' → logprob: -6.8541765213012695
    5. '        
' → logprob: -7.7291765213012695
    6. '   ' → logprob: -7.8541765213012695
    7. ' )' → logprob: -7.8541765213012695
    8. ')\' → logprob: -7.9791765213012695
    9. '#' (adapté à ' #') → logprob: -8.35417652130127
    10. '
' → logprob: -9.22917652130127

Token 1587: ' ce' (ID: 2357)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06792791932821274
    2. 'print' → logprob: -2.817927837371826
    3. '
' → logprob: -5.442927837371826
    4. '        
' → logprob: -6.942927837371826
    5. ')' → logprob: -8.442928314208984
    6. '```' → logprob: -8.692928314208984
    7. '#' → logprob: -9.317928314208984
    8. ')
' → logprob: -10.317928314208984
    9. ' print' → logprob: -10.317928314208984
    10. '#print' → logprob: -10.817928314208984

Token 1588: ' que' (ID: 661)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6293937563896179
    2. ''' → logprob: -1.2543938159942627
    3. 'n' → logprob: -3.0043938159942627
    4. ')' → logprob: -3.3793938159942627
    5. ' qui' → logprob: -3.6293938159942627
    6. '_' → logprob: -3.7543938159942627
    7. 's' → logprob: -4.379393577575684
    8. ''\' → logprob: -4.629393577575684
    9. '\' → logprob: -5.629393577575684
    10. 'u' → logprob: -5.879393577575684

Token 1589: ' trie' (ID: 139428)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.9391758441925049
    2. 'valid' → logprob: -1.4391758441925049
    3. ' set' → logprob: -1.9391758441925049
    4. 'set' → logprob: -2.939175844192505
    5. 'le' → logprob: -3.689175844192505
    6. ' la' → logprob: -3.814175844192505
    7. ' nous' → logprob: -3.939175844192505
    8. ' le' → logprob: -4.439175605773926
    9. '        ' → logprob: -4.564175605773926
    10. '#' → logprob: -4.814175605773926

Token 1590: ' +' (ID: 659)
  Prédit: '(valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(valid' → logprob: -1.4561257362365723
    2. 'valid' → logprob: -1.7061257362365723
    3. 'des' → logprob: -1.8311257362365723
    4. '()' → logprob: -1.8311257362365723
    5. 'les' → logprob: -3.0811257362365723
    6. 'd' → logprob: -3.2061257362365723
    7. 's' → logprob: -3.9561257362365723
    8. '(p' → logprob: -4.331125736236572
    9. 'pairs' → logprob: -4.456125736236572
    10. '(' → logprob: -4.581125736236572

Token 1591: ' tuple' (ID: 31311)
  Prédit: 'canonical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'canonical' → logprob: -0.3226583003997803
    2. 'set' → logprob: -1.9476583003997803
    3. 'tuple' → logprob: -2.5726583003997803
    4. ' canonical' → logprob: -3.4476583003997803
    5. 'canon' → logprob: -4.822658538818359
    6. 'sorted' → logprob: -5.572658538818359
    7. ' set' → logprob: -5.947658538818359
    8. ' canon' → logprob: -6.197658538818359
    9. ' tuple' → logprob: -6.572658538818359
    10. 'sort' → logprob: -6.697658538818359

Token 1592: ' canonical' (ID: 91323)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0617927610874176
    2. '))' → logprob: -4.186792850494385
    3. '(' → logprob: -4.811792850494385
    4. '()' → logprob: -4.936792850494385
    5. ']' → logprob: -5.061792850494385
    6. '(
' → logprob: -5.436792850494385
    7. '(p' → logprob: -5.811792850494385
    8. ')))' → logprob: -5.811792850494385
    9. ')
' → logprob: -6.186792850494385
    10. '.' → logprob: -6.311792850494385

Token 1593: '_pattern' (ID: 50002)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.921625554561615
    2. 'print' → logprob: -1.4216256141662598
    3. '       ' → logprob: -1.4216256141662598
    4. '()' → logprob: -3.0466256141662598
    5. ')
' → logprob: -3.4216256141662598
    6. '()
' → logprob: -4.04662561416626
    7. '   ' → logprob: -5.04662561416626
    8. '
' → logprob: -6.04662561416626
    9. '(
' → logprob: -6.67162561416626
    10. '```' → logprob: -6.79662561416626

Token 1594: ' fait' (ID: 7473)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37418535351753235
    2. '):' → logprob: -1.99918532371521
    3. '()' → logprob: -2.74918532371521
    4. '       ' → logprob: -3.74918532371521
    5. ':' → logprob: -3.99918532371521
    6. '   ' → logprob: -4.124185562133789
    7. '):
' → logprob: -4.749185562133789
    8. '())' → logprob: -5.124185562133789
    9. ')
' → logprob: -5.249185562133789
    10. '():' → logprob: -5.874185562133789

Token 1595: ' déjà' (ID: 21229)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33012235164642334
    2. ')' → logprob: -1.7051223516464233
    3. '
' → logprob: -3.205122470855713
    4. ')
' → logprob: -3.705122470855713
    5. '        
' → logprob: -3.955122470855713
    6. '\n' → logprob: -5.205122470855713
    7. '   ' → logprob: -6.205122470855713
    8. '    
' → logprob: -6.955122470855713
    9. '()' → logprob: -6.955122470855713
    10. '()
' → logprob: -7.080122470855713

Token 1596: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4886607825756073
    2. '
' → logprob: -0.9886608123779297
    3. '        
' → logprob: -4.36366081237793
    4. 'print' → logprob: -6.73866081237793
    5. '\n' → logprob: -9.23866081237793
    6. '
' → logprob: -9.48866081237793
    7. ')
' → logprob: -9.73866081237793
    8. '    
' → logprob: -9.98866081237793
    9. '  
' → logprob: -10.11366081237793
    10. '```' → logprob: -10.23866081237793

Token 1597: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004120788536965847
    2. '        
' → logprob: -6.254120826721191
    3. 'print' → logprob: -6.629120826721191
    4. '
' → logprob: -7.129120826721191
    5. '```' → logprob: -10.379120826721191
    6. '   ' → logprob: -10.754120826721191
    7. '    
' → logprob: -12.129120826721191
    8. '           ' → logprob: -12.504120826721191
    9. '  
' → logprob: -13.254120826721191
    10. ' print' → logprob: -14.629120826721191

Token 1598: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1567014455795288
    2. 'print' → logprob: -2.4067015647888184
    3. '
' → logprob: -3.0317015647888184
    4. '        
' → logprob: -5.656701564788818
    5. '   ' → logprob: -6.406701564788818
    6. '```' → logprob: -6.656701564788818
    7. '    
' → logprob: -9.03170108795166
    8. ' print' → logprob: -10.03170108795166
    9. '  
' → logprob: -10.53170108795166
    10. '``' → logprob: -11.15670108795166

Token 1599: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.062282364815473557
    2. '       ' → logprob: -2.8122823238372803
    3. '        
' → logprob: -8.93728256225586
    4. ' print' → logprob: -9.06228256225586
    5. '   ' → logprob: -10.43728256225586
    6. '
' → logprob: -11.06228256225586
    7. '```' → logprob: -11.31228256225586
    8. '    
' → logprob: -13.06228256225586
    9. '  
' → logprob: -13.06228256225586
    10. '#print' → logprob: -13.43728256225586

Token 1600: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0001617035741219297
    2. 'len' → logprob: -8.750162124633789
    3. '(' → logprob: -12.750162124633789
    4. ' len' → logprob: -15.875162124633789
    5. '(f' → logprob: -16.37516212463379
    6. '[len' → logprob: -17.37516212463379
    7. ' (' → logprob: -17.50016212463379
    8. '(sum' → logprob: -18.12516212463379
    9. '	len' → logprob: -18.50016212463379
    10. '(str' → logprob: -18.62516212463379

Token 1601: '(valid' (ID: 76588)
  Prédit: '(valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(valid' → logprob: -0.00044068231363780797
    2. '(' → logprob: -7.75044059753418
    3. 'valid' → logprob: -12.12544059753418
    4. ' (' → logprob: -12.75044059753418
    5. ' valid' → logprob: -13.87544059753418
    6. ')' → logprob: -14.50044059753418
    7. '	valid' → logprob: -16.37544059753418
    8. '(validate' → logprob: -16.50044059753418
    9. '(
' → logprob: -16.75044059753418
    10. ')(' → logprob: -18.25044059753418

Token 1602: '_patterns' (ID: 161400)
  Prédit: '_patterns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_patterns' → logprob: -0.00012487331696320325
    2. '_valid' → logprob: -9.37512493133545
    3. '(valid' → logprob: -11.50012493133545
    4. '_pat' → logprob: -11.62512493133545
    5. '_' → logprob: -11.87512493133545
    6. 'patterns' → logprob: -12.37512493133545
    7. '(_' → logprob: -12.87512493133545
    8. '_pattern' → logprob: -13.37512493133545
    9. '(' → logprob: -13.62512493133545
    10. 'valid' → logprob: -13.62512493133545

Token 1603: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015279557555913925
    2. '))' → logprob: -6.501527786254883
    3. '())' → logprob: -10.751527786254883
    4. ' )' → logprob: -13.501527786254883
    5. ')
' → logprob: -14.001527786254883
    6. '()' → logprob: -14.126527786254883
    7. ')))' → logprob: -14.126527786254883
    8. '   ' → logprob: -15.251527786254883
    9. ')`' → logprob: -16.376527786254883
    10. ')}' → logprob: -16.751527786254883

Token 1604: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1605: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.02324652671813965
    2. '__' → logprob: -3.7732465267181396
    3. '_' → logprob: -14.898246765136719
    4. ' ' → logprob: -15.648246765136719
    5. '___' → logprob: -16.02324676513672
    6. ' _' → logprob: -16.27324676513672
    7. '```' → logprob: -16.39824676513672
    8. ' ___' → logprob: -17.02324676513672
    9. '/__' → logprob: -17.39824676513672
    10. ' True' → logprob: -17.89824676513672

Token 1606: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1596798151731491
    2. ' ==' → logprob: -2.159679889678955
    3. '==' → logprob: -3.659679889678955
    4. '=="' → logprob: -6.409679889678955
    5. '```' → logprob: -6.409679889678955
    6. ' __' → logprob: -6.784679889678955
    7. '=='' → logprob: -8.409679412841797
    8. '_' → logprob: -8.409679412841797
    9. '__.__' → logprob: -8.659679412841797
    10. '__":
' → logprob: -9.284679412841797

Token 1607: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.01141984574496746
    2. '==' → logprob: -4.761419773101807
    3. '=="' → logprob: -6.136419773101807
    4. '=='' → logprob: -8.011420249938965
    5. ' ==' → logprob: -8.511420249938965
    6. '__('' → logprob: -10.511420249938965
    7. '___' → logprob: -11.011420249938965
    8. '____' → logprob: -11.511420249938965
    9. '__.__' → logprob: -11.511420249938965
    10. '__":
' → logprob: -12.386420249938965

Token 1608: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.39339280128479004
    2. ' ==' → logprob: -1.51839280128479
    3. '=="' → logprob: -2.64339280128479
    4. '__' → logprob: -3.51839280128479
    5. '=='' → logprob: -5.768392562866211
    6. '```' → logprob: -7.393392562866211
    7. '_' → logprob: -7.893392562866211
    8. '()==' → logprob: -8.143392562866211
    9. '=' → logprob: -8.643392562866211
    10. '**' → logprob: -9.268392562866211

Token 1609: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3135792315006256
    2. ''' → logprob: -1.3135792016983032
    3. '__' → logprob: -8.063579559326172
    4. ' "__' → logprob: -13.063579559326172
    5. ' '__' → logprob: -14.813579559326172
    6. 'main' → logprob: -16.813579559326172
    7. '___' → logprob: -17.438579559326172
    8. '"name' → logprob: -17.688579559326172
    9. ''name' → logprob: -18.188579559326172
    10. '('__' → logprob: -18.688579559326172

Token 1610: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0005334943416528404
    2. '__' → logprob: -7.625533580780029
    3. '"' → logprob: -10.375533103942871
    4. ''' → logprob: -12.750533103942871
    5. 'built' → logprob: -12.750533103942871
    6. 'name' → logprob: -12.875533103942871
    7. 'python' → logprob: -13.125533103942871
    8. '__":
' → logprob: -14.125533103942871
    9. 'builtin' → logprob: -14.250533103942871
    10. '```' → logprob: -14.625533103942871

Token 1611: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.4404561221599579
    2. '__' → logprob: -1.0654561519622803
    3. '__':
' → logprob: -4.565455913543701
    4. '__:' → logprob: -8.06545639038086
    5. '==' → logprob: -8.31545639038086
    6. '__["' → logprob: -8.56545639038086
    7. '__.__' → logprob: -9.31545639038086
    8. '__.' → logprob: -9.94045639038086
    9. '__);
' → logprob: -10.06545639038086
    10. '():
' → logprob: -10.06545639038086

Token 1612: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.008607951924204826
    2. '   ' → logprob: -5.508607864379883
    3. '	main' → logprob: -5.883607864379883
    4. ' main' → logprob: -6.383607864379883
    5. '_main' → logprob: -10.633607864379883
    6. '(main' → logprob: -11.008607864379883
    7. '```' → logprob: -12.758607864379883
    8. 'Main' → logprob: -14.508607864379883
    9. '.main' → logprob: -15.008607864379883
    10. '__' → logprob: -15.258607864379883

Token 1613: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -15.25
    3. '	main' → logprob: -19.25
    4. '   ' → logprob: -19.5
    5. '_main' → logprob: -23.875
    6. '(main' → logprob: -24.75
    7. '.main' → logprob: -25.625
    8. 'import' → logprob: -27.75
    9. '```' → logprob: -28.25
    10. '__' → logprob: -28.25

Token 1614: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1612
Tokens correctement prédits (1ère position, stricte): 507
Tokens correctement prédits (1ère position, avec adaptation): 537
Tokens correctement prédits (top 10): 1102
Précision stricte (1ère position): 31.45%
Précision adaptée (1ère position): 33.31%
Précision (top 10): 68.36%
================================================================================
