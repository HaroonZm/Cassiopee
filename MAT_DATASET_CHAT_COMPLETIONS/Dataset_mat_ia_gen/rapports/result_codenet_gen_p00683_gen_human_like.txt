================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    import sys
    input = sys.stdin.readline

    def split_words(text, cursor_pos):
        # Returns two lists of word boundaries: words left of cursor, words right of cursor
        # A word is a sequence of non-space characters delimited by spaces or cursor
        # We need to know the positions of words relative to text to move cursor.

        # Left of cursor
        left_part = text[:cursor_pos]
        right_part = text[cursor_pos:]

        # Find words in left part
        left_words = []
        start = None
        for i, c in enumerate(left_part):
            if c != ' ':
                if start is None:
                    start = i
            else:
                if start is not None:
                    left_words.append((start, i))
                    start = None
        if start is not None:
            left_words.append((start, len(left_part)))

        # Find words in right part
        right_words = []
        start = None
        for i, c in enumerate(right_part):
            if c != ' ':
                if start is None:
                    start = i
            else:
                if start is not None:
                    right_words.append((start, i))
                    start = None
        if start is not None:
            right_words.append((start, len(right_part)))

        return left_words, right_words

    def forward_char(text, cursor):
        if cursor < len(text):
            return cursor + 1
        return cursor

    def backward_char(cursor):
        if cursor > 0:
            return cursor - 1
        return cursor

    def forward_word(text, cursor):
        left_words, right_words = split_words(text, cursor)
        if not right_words:
            return len(text)
        else:
            # move cursor to the end of the leftmost word in right part
            start, end = right_words[0]
            # position in text is cursor + end
            return cursor + end

    def backward_word(text, cursor):
        left_words, right_words = split_words(text, cursor)
        if not left_words:
            return 0
        else:
            # move cursor to the beginning of the rightmost word in left part
            start, end = left_words[-1]
            return start

    def insert_text(text, cursor, ins):
        return text[:cursor] + ins + text[cursor:], cursor + len(ins)

    def delete_char(text, cursor):
        # delete character right next to cursor if exists
        if cursor < len(text):
            return text[:cursor] + text[cursor+1:]
        return text

    def delete_word(text, cursor):
        left_words, right_words = split_words(text, cursor)
        if not right_words:
            return text
        # delete blanks between cursor and leftmost word in right part (if any)
        # Find number of blanks after cursor and before word start:
        first_word_start = cursor + right_words[0][0]
        i = cursor
        while i < first_word_start and text[i] == ' ':
            i += 1
        delete_start = cursor
        delete_end = cursor + right_words[0][1]  # end of the word in right part
        return text[:delete_start] + text[delete_end:]

    N = int(input())
    for _ in range(N):
        text = input().rstrip('\n')
        cursor = 0  # initially at beginning
        M = int(input())
        for __ in range(M):
            line = input().rstrip('\n')
            parts = line.split(' ', 1)
            cmd = parts[0]
            if cmd == 'forward':
                arg = parts[1]
                if arg == 'char':
                    cursor = forward_char(text, cursor)
                elif arg == 'word':
                    cursor = forward_word(text, cursor)
            elif cmd == 'backward':
                arg = parts[1]
                if arg == 'char':
                    cursor = backward_char(cursor)
                elif arg == 'word':
                    cursor = backward_word(text, cursor)
            elif cmd == 'insert':
                # format is insert "any-text"
                arg = parts[1]
                # extract string inside quotes
                ins_text = arg[1:-1]
                text, cursor = insert_text(text, cursor, ins_text)
            elif cmd == 'delete':
                arg = parts[1]
                if arg == 'char':
                    text = delete_char(text, cursor)
                elif arg == 'word':
                    text = delete_word(text, cursor)
        # print final text with cursor as '^'
        print(text[:cursor] + '^' + text[cursor:])

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.2763567566871643
    2. '   ' → logprob: -2.2763566970825195
    3. '\n' → logprob: -2.7763566970825195
    4. '(' → logprob: -3.6513566970825195
    5. ''' → logprob: -4.5263566970825195
    6. '```' → logprob: -4.7763566970825195
    7. '    
' → logprob: -4.9013566970825195
    8. ' ' → logprob: -5.6513566970825195
    9. ':' → logprob: -5.6513566970825195
    10. '    ' → logprob: -5.7763566970825195

Token 4: ' import' (ID: 1588)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5601270794868469
    2. '#' → logprob: -2.060127019882202
    3. '   ' → logprob: -2.185127019882202
    4. 'pass' → logprob: -2.685127019882202
    5. '    ' → logprob: -3.435127019882202
    6. 'return' → logprob: -3.685127019882202
    7. 'p' → logprob: -4.435127258300781
    8. ' ' → logprob: -4.435127258300781
    9. '_' → logprob: -4.560127258300781
    10. 'a' → logprob: -5.060127258300781

Token 5: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.031138351187109947
    2. ' sys' → logprob: -3.6561384201049805
    3. ' math' → logprob: -5.7811384201049805
    4. ' ' → logprob: -6.6561384201049805
    5. ' numpy' → logprob: -8.65613842010498
    6. ' json' → logprob: -9.15613842010498
    7. ' random' → logprob: -10.15613842010498
    8. ' tensorflow' → logprob: -10.28113842010498
    9. ' space' → logprob: -11.15613842010498
    10. 'os' → logprob: -11.28113842010498

Token 6: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2184634655714035
    2. '\n' → logprob: -3.34346342086792
    3. 'newline' → logprob: -3.46846342086792
    4. '\' → logprob: -3.71846342086792
    5. '<|end|>' → logprob: -3.84346342086792
    6. '.readline' → logprob: -4.21846342086792
    7. 'import' → logprob: -4.34346342086792
    8. '```' → logprob: -4.59346342086792
    9. '   ' → logprob: -4.71846342086792
    10. '[' → logprob: -5.46846342086792

Token 7: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8574399948120117
    2. '<|end|>' → logprob: -1.2324399948120117
    3. 'import' → logprob: -2.8574399948120117
    4. '```' → logprob: -3.2324399948120117
    5. '.readline' → logprob: -3.4824399948120117
    6. '<|end|>' → logprob: -3.8574399948120117
    7. '
' → logprob: -3.9824399948120117
    8. 'newline' → logprob: -4.232439994812012
    9. '\n' → logprob: -4.357439994812012
    10. '   ' → logprob: -4.607439994812012

Token 8: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8383373022079468
    2. '.' → logprob: -1.0883373022079468
    3. '[' → logprob: -2.4633374214172363
    4. ' ' → logprob: -3.2133374214172363
    5. '\' → logprob: -3.7133374214172363
    6. '\n' → logprob: -4.213337421417236
    7. 'newline' → logprob: -4.213337421417236
    8. '    ' → logprob: -4.463337421417236
    9. 'print' → logprob: -4.588337421417236
    10. '.readline' → logprob: -5.338337421417236

Token 9: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008923469111323357
    2. '()' → logprob: -5.258923530578613
    3. '_' → logprob: -6.633923530578613
    4. '.' → logprob: -7.258923530578613
    5. ')' → logprob: -8.133923530578613
    6. '_data' → logprob: -8.258923530578613
    7. ' ' → logprob: -9.133923530578613
    8. '```' → logprob: -9.133923530578613
    9. ''' → logprob: -9.508923530578613
    10. '('' → logprob: -9.633923530578613

Token 10: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.00018375257786829025
    2. 'sys' → logprob: -8.625184059143066
    3. '	sys' → logprob: -13.500184059143066
    4. '=sys' → logprob: -13.750184059143066
    5. '(sys' → logprob: -14.000184059143066
    6. ' input' → logprob: -14.375184059143066
    7. ' ' → logprob: -15.250184059143066
    8. ' system' → logprob: -16.37518310546875
    9. 'input' → logprob: -18.00018310546875
    10. ' ' → logprob: -18.00018310546875

Token 11: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005843584891408682
    2. '.readline' → logprob: -5.880843639373779
    3. ' .' → logprob: -6.505843639373779
    4. '[' → logprob: -6.755843639373779
    5. ''.' → logprob: -9.255843162536621
    6. '.get' → logprob: -9.755843162536621
    7. '.setdefault' → logprob: -10.255843162536621
    8. '<|end|>' → logprob: -10.255843162536621
    9. '.read' → logprob: -11.005843162536621
    10. '.stdin' → logprob: -11.005843162536621

Token 12: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.030841687694191933
    2. '.read' → logprob: -3.530841588973999
    3. '.' → logprob: -6.905841827392578
    4. 'read' → logprob: -10.030841827392578
    5. '.readlines' → logprob: -10.530841827392578
    6. '.Read' → logprob: -11.780841827392578
    7. '<|end|>' → logprob: -12.405841827392578
    8. '.buffer' → logprob: -13.030841827392578
    9. ' .' → logprob: -14.405841827392578
    10. '.stdin' → logprob: -14.530841827392578

Token 13: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0562414675951004
    2. '(' → logprob: -3.056241512298584
    3. '()
' → logprob: -5.181241512298584
    4. '(
' → logprob: -6.806241512298584
    5. '()

' → logprob: -7.681241512298584
    6. '()\' → logprob: -9.056241035461426
    7. '(

' → logprob: -9.806241035461426
    8. ' ' → logprob: -10.056241035461426
    9. '\n' → logprob: -10.181241035461426
    10. '
' → logprob: -10.306241035461426

Token 14: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.30887719988822937
    2. '()' → logprob: -1.4338772296905518
    3. '   ' → logprob: -3.6838772296905518
    4. '(
' → logprob: -6.808876991271973
    5. '    
' → logprob: -8.683876991271973
    6. 's' → logprob: -9.058876991271973
    7. 'a' → logprob: -9.183876991271973
    8. ')' → logprob: -9.308876991271973
    9. 'data' → logprob: -9.433876991271973
    10. 'def' → logprob: -9.558876991271973

Token 15: ' def' (ID: 1056)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.013907729648053646
    2. 'data' → logprob: -5.2639079093933105
    3. 'name' → logprob: -6.0139079093933105
    4. 'user' → logprob: -6.3889079093933105
    5. 't' → logprob: -6.7639079093933105
    6. 'x' → logprob: -6.7639079093933105
    7. 'for' → logprob: -7.3889079093933105
    8. '   ' → logprob: -7.7639079093933105
    9. 'q' → logprob: -8.513907432556152
    10. 'a' → logprob: -8.888907432556152

Token 16: ' split' (ID: 12648)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -1.6145310401916504
    2. ' main' → logprob: -1.7395310401916504
    3. ' ' → logprob: -1.8645310401916504
    4. ' parse' → logprob: -1.8645310401916504
    5. ' solve' → logprob: -2.2395310401916504
    6. ' split' → logprob: -3.7395310401916504
    7. ' calculate' → logprob: -3.7395310401916504
    8. ' read' → logprob: -3.7395310401916504
    9. ' print' → logprob: -3.9895310401916504
    10. '(' → logprob: -4.23953104019165

Token 17: '_words' (ID: 45077)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013280577957630157
    2. '_' → logprob: -5.388280391693115
    3. '()' → logprob: -5.763280391693115
    4. '('' → logprob: -6.513280391693115
    5. '_line' → logprob: -6.763280391693115
    6. '('_' → logprob: -8.013280868530273
    7. '(line' → logprob: -8.388280868530273
    8. '("("' → logprob: -8.388280868530273
    9. ' (' → logprob: -8.513280868530273
    10. 'line' → logprob: -8.638280868530273

Token 18: '(text' (ID: 13414)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0031621530652046204
    2. '():' → logprob: -6.128162384033203
    3. '('' → logprob: -8.753162384033203
    4. '_' → logprob: -8.878162384033203
    5. ' (' → logprob: -9.003162384033203
    6. '(line' → logprob: -9.128162384033203
    7. '()' → logprob: -9.503162384033203
    8. '(s' → logprob: -9.503162384033203
    9. '(text' → logprob: -10.378162384033203
    10. '("("' → logprob: -10.503162384033203

Token 19: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006113886367529631
    2. ')' → logprob: -5.2561140060424805
    3. ',' → logprob: -7.1311140060424805
    4. ' ):' → logprob: -10.13111400604248
    5. '   ' → logprob: -11.25611400604248
    6. ':' → logprob: -11.25611400604248
    7. '):
' → logprob: -11.75611400604248
    8. ' ' → logprob: -13.88111400604248
    9. '=' → logprob: -14.88111400604248
    10. ' )' → logprob: -14.88111400604248

Token 20: ' cursor' (ID: 14944)
  Prédit: ' delimit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' delimit' → logprob: -0.7105873227119446
    2. ' sep' → logprob: -2.4605872631073
    3. 'sep' → logprob: -2.4605872631073
    4. 'delimiter' → logprob: -2.5855872631073
    5. 'del' → logprob: -3.0855872631073
    6. ' separators' → logprob: -3.0855872631073
    7. ' max' → logprob: -3.3355872631073
    8. 'se' → logprob: -3.3355872631073
    9. 'max' → logprob: -3.3355872631073
    10. ' delimiter' → logprob: -4.210587501525879

Token 21: '_pos' (ID: 14692)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11139129847288132
    2. '_pos' → logprob: -2.361391305923462
    3. '_position' → logprob: -5.236391067504883
    4. '=' → logprob: -5.986391067504883
    5. ')' → logprob: -6.986391067504883
    6. 'pos' → logprob: -7.361391067504883
    7. ',' → logprob: -7.611391067504883
    8. '):
' → logprob: -7.736391067504883
    9. ' ):' → logprob: -8.236391067504883
    10. 'position' → logprob: -8.861391067504883

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012067806674167514
    2. ')' → logprob: -6.876206874847412
    3. ',' → logprob: -9.251206398010254
    4. ' ):' → logprob: -9.876206398010254
    5. ':' → logprob: -11.626206398010254
    6. '=' → logprob: -11.751206398010254
    7. ' ' → logprob: -12.626206398010254
    8. '   ' → logprob: -13.001206398010254
    9. '):
' → logprob: -13.251206398010254
    10. ')：' → logprob: -15.126206398010254

Token 23: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8867408633232117
    2. ':' → logprob: -1.2617409229278564
    3. '       ' → logprob: -1.7617409229278564
    4. '):' → logprob: -2.6367409229278564
    5. ')' → logprob: -3.1367409229278564
    6. '(' → logprob: -5.011740684509277
    7. '    ' → logprob: -5.761740684509277
    8. ' ' → logprob: -6.136740684509277
    9. ',' → logprob: -6.511740684509277
    10. ' :' → logprob: -6.886740684509277

Token 24: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.888422429561615
    2. '       ' → logprob: -1.0134224891662598
    3. '    ' → logprob: -2.2634224891662598
    4. '        ' → logprob: -3.1384224891662598
    5. '   ' → logprob: -3.6384224891662598
    6. ' 
' → logprob: -4.26342248916626
    7. '\' → logprob: -5.26342248916626
    8. '     
' → logprob: -5.76342248916626
    9. 'w' → logprob: -6.01342248916626
    10. ' words' → logprob: -6.38842248916626

Token 25: ' Returns' (ID: 9609)
  Prédit: ' words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' words' → logprob: -0.3392695188522339
    2. '       ' → logprob: -1.7142695188522339
    3. ' tokens' → logprob: -3.3392696380615234
    4. ' pass' → logprob: -4.589269638061523
    5. 'words' → logprob: -4.714269638061523
    6. ' if' → logprob: -4.714269638061523
    7. '   ' → logprob: -4.839269638061523
    8. ' """' → logprob: -4.839269638061523
    9. ' parts' → logprob: -5.589269638061523
    10. ' #' → logprob: -5.589269638061523

Token 26: ' two' (ID: 1920)
  Prédit: ' text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' text' → logprob: -0.0463554710149765
    2. ' a' → logprob: -3.9213554859161377
    3. ' ' → logprob: -4.171355247497559
    4. 'text' → logprob: -5.171355247497559
    5. ' []' → logprob: -6.546355247497559
    6. ' the' → logprob: -7.421355247497559
    7. ' [' → logprob: -7.671355247497559
    8. ' words' → logprob: -7.921355247497559
    9. '[' → logprob: -8.546355247497559
    10. '   ' → logprob: -8.671355247497559

Token 27: ' lists' (ID: 19471)
  Prédit: ' lists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lists' → logprob: -0.0012785687576979399
    2. ' sets' → logprob: -8.1262788772583
    3. ' strings' → logprob: -8.2512788772583
    4. ' tokens' → logprob: -8.6262788772583
    5. ' parts' → logprob: -9.2512788772583
    6. ' arrays' → logprob: -9.2512788772583
    7. 'lists' → logprob: -9.3762788772583
    8. '_lists' → logprob: -9.3762788772583
    9. ' words' → logprob: -9.6262788772583
    10. '_' → logprob: -10.8762788772583

Token 28: ' of' (ID: 328)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6536608338356018
    2. ':' → logprob: -1.153660774230957
    3. ' of' → logprob: -2.278660774230957
    4. '<|end|>' → logprob: -4.153660774230957
    5. ' ,' → logprob: -4.403660774230957
    6. '<|end|>' → logprob: -4.653660774230957
    7. 'tokens' → logprob: -5.403660774230957
    8. '       ' → logprob: -5.653660774230957
    9. '_tokens' → logprob: -6.403660774230957
    10. '   ' → logprob: -6.403660774230957

Token 29: ' word' (ID: 2195)
  Prédit: ' words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' words' → logprob: -1.4395943880081177
    2. 'str' → logprob: -1.5645943880081177
    3. 'words' → logprob: -1.6895943880081177
    4. ' tokens' → logprob: -1.8145943880081177
    5. 'tokens' → logprob: -2.564594268798828
    6. ' str' → logprob: -2.689594268798828
    7. ' strings' → logprob: -3.564594268798828
    8. 'strings' → logprob: -4.939594268798828
    9. ' tuples' → logprob: -5.314594268798828
    10. ' lists' → logprob: -5.439594268798828

Token 30: ' boundaries' (ID: 35665)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.001393092330545187
    2. ' s' → logprob: -6.8763933181762695
    3. '_s' → logprob: -8.00139331817627
    4. '_' → logprob: -11.25139331817627
    5. '_tokens' → logprob: -13.00139331817627
    6. '_parts' → logprob: -13.00139331817627
    7. ' parts' → logprob: -13.75139331817627
    8. '_segments' → logprob: -14.00139331817627
    9. 'es' → logprob: -14.12639331817627
    10. ',' → logprob: -14.25139331817627

Token 31: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24509915709495544
    2. '(' → logprob: -2.3700990676879883
    3. ' :' → logprob: -3.2450990676879883
    4. ',' → logprob: -3.8700990676879883
    5. '   ' → logprob: -3.8700990676879883
    6. 's' → logprob: -4.370099067687988
    7. ' (' → logprob: -4.745099067687988
    8. '       ' → logprob: -5.620099067687988
    9. ' ' → logprob: -5.745099067687988
    10. '[' → logprob: -5.745099067687988

Token 32: ' words' (ID: 6391)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6421229839324951
    2. ' [' → logprob: -2.267122983932495
    3. ' [(' → logprob: -2.392122983932495
    4. ' [
' → logprob: -2.892122983932495
    5. '[]' → logprob: -3.142122983932495
    6. '[' → logprob: -3.142122983932495
    7. ' []' → logprob: -3.392122983932495
    8. '[(' → logprob: -3.767122983932495
    9. '[start' → logprob: -4.267123222351074
    10. '        ' → logprob: -4.642123222351074

Token 33: ' left' (ID: 3561)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0780091285705566
    2. '_start' → logprob: -1.3280091285705566
    3. '_' → logprob: -1.9530091285705566
    4. '_before' → logprob: -2.4530091285705566
    5. 's' → logprob: -3.0780091285705566
    6. '_s' → logprob: -3.0780091285705566
    7. ' =' → logprob: -4.578009128570557
    8. '[' → logprob: -4.578009128570557
    9. '_lower' → logprob: -5.078009128570557
    10. '_end' → logprob: -5.203009128570557

Token 34: ' of' (ID: 328)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0898364782333374
    2. '   ' → logprob: -1.4648364782333374
    3. ' and' → logprob: -1.8398364782333374
    4. '=' → logprob: -2.339836597442627
    5. ' of' → logprob: -2.839836597442627
    6. '_' → logprob: -3.464836597442627
    7. '_of' → logprob: -3.839836597442627
    8. ' =' → logprob: -3.964836597442627
    9. '    ' → logprob: -4.589836597442627
    10. ')' → logprob: -4.839836597442627

Token 35: ' cursor' (ID: 14944)
  Prédit: ' cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cursor' → logprob: -0.06935190409421921
    2. 'cursor' → logprob: -3.1943519115448
    3. ' the' → logprob: -3.8193519115448
    4. '_cursor' → logprob: -6.194351673126221
    5. ' ' → logprob: -7.194351673126221
    6. 'the' → logprob: -7.444351673126221
    7. '(cursor' → logprob: -8.194352149963379
    8. '	cursor' → logprob: -8.944352149963379
    9. '_' → logprob: -9.444352149963379
    10. '   ' → logprob: -9.694352149963379

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39671921730041504
    2. ' ,' → logprob: -1.146719217300415
    3. '   ' → logprob: -6.146718978881836
    4. '_' → logprob: -6.146718978881836
    5. ' =' → logprob: -6.271718978881836
    6. ' and' → logprob: -6.646718978881836
    7. 's' → logprob: -7.396718978881836
    8. '_,' → logprob: -7.646718978881836
    9. ' (' → logprob: -8.146718978881836
    10. '=' → logprob: -8.146718978881836

Token 37: ' words' (ID: 6391)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.9409633874893188
    2. ' ' → logprob: -1.4409633874893188
    3. ' words' → logprob: -1.5659633874893188
    4. '<|end|>' → logprob: -2.8159632682800293
    5. 's' → logprob: -3.3159632682800293
    6. ' tokens' → logprob: -4.190963268280029
    7. ' right' → logprob: -4.315963268280029
    8. ',' → logprob: -5.440963268280029
    9. 'words' → logprob: -5.565963268280029
    10. '    ' → logprob: -5.565963268280029

Token 38: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.519233763217926
    2. '_right' → logprob: -1.8942337036132812
    3. '_' → logprob: -2.5192337036132812
    4. 'right' → logprob: -2.8942337036132812
    5. '<|end|>' → logprob: -3.7692337036132812
    6. ')' → logprob: -3.7692337036132812
    7. ' _' → logprob: -4.144233703613281
    8. ' left' → logprob: -4.644233703613281
    9. '	right' → logprob: -4.769233703613281
    10. '_left' → logprob: -5.394233703613281

Token 39: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5840533971786499
    2. 'of' → logprob: -2.3340535163879395
    3. ')' → logprob: -2.4590535163879395
    4. '   ' → logprob: -2.4590535163879395
    5. '_of' → logprob: -2.4590535163879395
    6. '_tokens' → logprob: -3.7090535163879395
    7. '=' → logprob: -3.9590535163879395
    8. '_' → logprob: -4.0840535163879395
    9. 'def' → logprob: -5.0840535163879395
    10. ',' → logprob: -5.5840535163879395

Token 40: ' cursor' (ID: 14944)
  Prédit: ' cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cursor' → logprob: -0.11873144656419754
    2. 'cursor' → logprob: -2.2437314987182617
    3. ' the' → logprob: -5.868731498718262
    4. '_cursor' → logprob: -6.743731498718262
    5. 'the' → logprob: -7.243731498718262
    6. ')' → logprob: -7.618731498718262
    7. '	cursor' → logprob: -8.618731498718262
    8. '(cursor' → logprob: -9.243731498718262
    9. ' ' → logprob: -9.243731498718262
    10. ' )' → logprob: -9.368731498718262

Token 41: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2553118169307709
    2. '):' → logprob: -2.1303117275238037
    3. '       ' → logprob: -3.0053117275238037
    4. ',' → logprob: -3.5053117275238037
    5. '   ' → logprob: -4.380311965942383
    6. ')' → logprob: -4.880311965942383
    7. ' :' → logprob: -6.505311965942383
    8. '<|end|>' → logprob: -7.005311965942383
    9. 's' → logprob: -7.255311965942383
    10. '```' → logprob: -7.630311965942383

Token 42: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32242047786712646
    2. '   ' → logprob: -1.8224204778671265
    3. '):' → logprob: -3.197420597076416
    4. ')' → logprob: -3.447420597076416
    5. '       ' → logprob: -4.322420597076416
    6. '(' → logprob: -4.572420597076416
    7. ',' → logprob: -5.322420597076416
    8. '```' → logprob: -5.697420597076416
    9. '
' → logprob: -6.822420597076416
    10. '.' → logprob: -6.822420597076416

Token 43: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1395864337682724
    2. '   ' → logprob: -3.5145864486694336
    3. '
' → logprob: -4.014586448669434
    4. '        
' → logprob: -4.139586448669434
    5. '        ' → logprob: -4.514586448669434
    6. ' ' → logprob: -4.639586448669434
    7. '    ' → logprob: -5.139586448669434
    8. 'n' → logprob: -5.264586448669434
    9. ')' → logprob: -5.514586448669434
    10. '<|end|>' → logprob: -5.514586448669434

Token 44: ' A' (ID: 355)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.041037410497665405
    2. '   ' → logprob: -4.916037559509277
    3. '        ' → logprob: -5.291037559509277
    4. ' lines' → logprob: -5.416037559509277
    5. '        
' → logprob: -5.541037559509277
    6. ' words' → logprob: -6.041037559509277
    7. 'words' → logprob: -6.041037559509277
    8. '
' → logprob: -6.541037559509277
    9. '    ' → logprob: -6.541037559509277
    10. ' 
' → logprob: -6.916037559509277

Token 45: ' word' (ID: 2195)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7990451455116272
    2. 'l' → logprob: -2.2990450859069824
    3. ' l' → logprob: -2.6740450859069824
    4. ' ' → logprob: -2.7990450859069824
    5. '       ' → logprob: -3.0490450859069824
    6. 'll' → logprob: -3.0490450859069824
    7. '    ' → logprob: -3.6740450859069824
    8. ' cursor' → logprob: -3.6740450859069824
    9. ' line' → logprob: -3.9240450859069824
    10. ' word' → logprob: -4.299045085906982

Token 46: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2539571523666382
    2. ' ' → logprob: -1.8789571523666382
    3. '_' → logprob: -4.003957271575928
    4. 's' → logprob: -4.378957271575928
    5. ' =' → logprob: -4.503957271575928
    6. ' consists' → logprob: -4.753957271575928
    7. ' boundary' → logprob: -5.003957271575928
    8. ' can' → logprob: -5.628957271575928
    9. ' comprises' → logprob: -6.753957271575928
    10. '  ' → logprob: -7.003957271575928

Token 47: ' a' (ID: 261)
  Prédit: ' defined'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defined' → logprob: -0.3480307161808014
    2. ' any' → logprob: -1.723030686378479
    3. ' a' → logprob: -2.5980308055877686
    4. 'defined' → logprob: -3.3480308055877686
    5. 'any' → logprob: -5.8480305671691895
    6. 'a' → logprob: -6.4730305671691895
    7. ' either' → logprob: -7.9730305671691895
    8. ' ' → logprob: -8.348031044006348
    9. ' an' → logprob: -8.723031044006348
    10. ' composed' → logprob: -8.723031044006348

Token 48: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.17108887434005737
    2. 'n' → logprob: -2.296088933944702
    3. 'sequence' → logprob: -3.796088933944702
    4. ' contiguous' → logprob: -4.671088695526123
    5. 'ny' → logprob: -5.296088695526123
    6. 's' → logprob: -5.421088695526123
    7. ' letter' → logprob: -6.046088695526123
    8. ' word' → logprob: -6.546088695526123
    9. 'l' → logprob: -6.671088695526123
    10. ' continuous' → logprob: -6.671088695526123

Token 49: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.047147251665592194
    2. '_' → logprob: -3.797147274017334
    3. 'of' → logprob: -4.797147274017334
    4. '<|end|>' → logprob: -4.922147274017334
    5. ' ' → logprob: -5.672147274017334
    6. '<|end|>' → logprob: -6.922147274017334
    7. ')' → logprob: -7.297147274017334
    8. ' =' → logprob: -7.297147274017334
    9. '   ' → logprob: -7.922147274017334
    10. ',' → logprob: -8.047146797180176

Token 50: ' non' (ID: 2893)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.906046450138092
    2. 'al' → logprob: -1.2810463905334473
    3. 'abcdefghijklmnopqrstuvwxyz' → logprob: -2.5310463905334473
    4. ' al' → logprob: -2.6560463905334473
    5. ' a' → logprob: -3.1560463905334473
    6. 'alphabet' → logprob: -3.5310463905334473
    7. ' alphabet' → logprob: -3.9060463905334473
    8. ' letters' → logprob: -4.281046390533447
    9. ' non' → logprob: -4.531046390533447
    10. 'letters' → logprob: -4.781046390533447

Token 51: '-space' (ID: 59776)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'al' → logprob: -1.31644606590271
    2. '-' → logprob: -1.81644606590271
    3. ' -' → logprob: -2.06644606590271
    4. ' whitespace' → logprob: -2.06644606590271
    5. ' ' → logprob: -2.19144606590271
    6. 'space' → logprob: -2.56644606590271
    7. '-wh' → logprob: -3.31644606590271
    8. 's' → logprob: -4.316446304321289
    9. 'wh' → logprob: -4.441446304321289
    10. ' ```' → logprob: -4.691446304321289

Token 52: ' characters' (ID: 9862)
  Prédit: ' characters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' characters' → logprob: -0.5356417894363403
    2. 'characters' → logprob: -0.9106417894363403
    3. '<|end|>' → logprob: -4.660641670227051
    4. 'chars' → logprob: -6.785641670227051
    5. 's' → logprob: -7.410641670227051
    6. '_chars' → logprob: -8.16064167022705
    7. 'character' → logprob: -9.16064167022705
    8. ',' → logprob: -9.16064167022705
    9. '<char' → logprob: -9.41064167022705
    10. ' and' → logprob: -9.41064167022705

Token 53: ' del' (ID: 1083)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9330357313156128
    2. ':' → logprob: -1.4330357313156128
    3. '
' → logprob: -2.3080358505249023
    4. '       ' → logprob: -2.6830358505249023
    5. 's' → logprob: -3.5580358505249023
    6. ',' → logprob: -3.5580358505249023
    7. '    
' → logprob: -3.6830358505249023
    8. 'def' → logprob: -4.183035850524902
    9. '\n' → logprob: -4.308035850524902
    10. '):' → logprob: -4.558035850524902

Token 54: 'imited' (ID: 74176)
  Prédit: 'imited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imited' → logprob: -0.005912088789045811
    2. 'eted' → logprob: -5.8809123039245605
    3. 'im' → logprob: -6.3809123039245605
    4. 'imiter' → logprob: -7.6309123039245605
    5. 'imit' → logprob: -7.6309123039245605
    6. 'ete' → logprob: -9.630911827087402
    7. 'et' → logprob: -9.630911827087402
    8. 'imin' → logprob: -10.130911827087402
    9. '```' → logprob: -10.505911827087402
    10. 'e' → logprob: -10.505911827087402

Token 55: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.020772641524672508
    2. 'by' → logprob: -3.895772695541382
    3. '<|end|>' → logprob: -8.520772933959961
    4. ' ' → logprob: -11.145772933959961
    5. '<|end|>' → logprob: -11.520772933959961
    6. '_by' → logprob: -13.145772933959961
    7. ' bya' → logprob: -14.270772933959961
    8. ',' → logprob: -14.395772933959961
    9. ' to' → logprob: -14.770772933959961
    10. '```' → logprob: -14.895772933959961

Token 56: ' spaces' (ID: 18608)
  Prédit: ' spaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' spaces' → logprob: -0.07858733832836151
    2. 'spaces' → logprob: -3.453587293624878
    3. ' whitespace' → logprob: -3.578587293624878
    4. ' a' → logprob: -4.578587532043457
    5. ' space' → logprob: -5.953587532043457
    6. ' ' → logprob: -6.328587532043457
    7. 'space' → logprob: -7.078587532043457
    8. ' either' → logprob: -8.328587532043457
    9. 'wh' → logprob: -9.203587532043457
    10. ' the' → logprob: -9.453587532043457

Token 57: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.06722092628479
    2. '       ' → logprob: -1.19222092628479
    3. '    
' → logprob: -2.19222092628479
    4. '
' → logprob: -2.31722092628479
    5. ',' → logprob: -3.19222092628479
    6. '        
' → logprob: -3.31722092628479
    7. ':' → logprob: -4.192220687866211
    8. '):' → logprob: -4.817220687866211
    9. '  
' → logprob: -5.442220687866211
    10. 'def' → logprob: -5.442220687866211

Token 58: ' cursor' (ID: 14944)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6958363652229309
    2. ' new' → logprob: -1.6958363056182861
    3. 'newline' → logprob: -2.320836305618286
    4. 'new' → logprob: -2.445836305618286
    5. ''\' → logprob: -2.445836305618286
    6. ' newline' → logprob: -3.570836305618286
    7. ' line' → logprob: -4.820836544036865
    8. 'line' → logprob: -5.820836544036865
    9. '\t' → logprob: -6.570836544036865
    10. ' the' → logprob: -7.195836544036865

Token 59: '
' (ID: 198)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4693925082683563
    2. '   ' → logprob: -1.8443925380706787
    3. ')' → logprob: -2.3443925380706787
    4. ':' → logprob: -2.9693925380706787
    5. '_' → logprob: -3.7193925380706787
    6. '
' → logprob: -4.8443922996521
    7. '):
' → logprob: -5.0943922996521
    8. '```' → logprob: -5.3443922996521
    9. '       ' → logprob: -5.5943922996521
    10. '    
' → logprob: -5.7193922996521

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0800299197435379
    2. '
' → logprob: -2.8300299644470215
    3. '        
' → logprob: -4.8300299644470215
    4. '<|end|>' → logprob: -5.9550299644470215
    5. ':' → logprob: -6.3300299644470215
    6. '   ' → logprob: -6.7050299644470215
    7. '<|end|>' → logprob: -6.8300299644470215
    8. '    
' → logprob: -7.3300299644470215
    9. ',' → logprob: -7.5800299644470215
    10. '```' → logprob: -7.8300299644470215

Token 61: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04090685024857521
    2. '
' → logprob: -3.9159069061279297
    3. '        
' → logprob: -5.04090690612793
    4. 'words' → logprob: -5.54090690612793
    5. '   ' → logprob: -5.66590690612793
    6. '    
' → logprob: -6.41590690612793
    7. 'tokens' → logprob: -7.04090690612793
    8. ' lines' → logprob: -7.66590690612793
    9. ' words' → logprob: -7.91590690612793
    10. '```' → logprob: -8.04090690612793

Token 62: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0277351513504982
    2. 'words' → logprob: -4.902735233306885
    3. ' words' → logprob: -5.152735233306885
    4. ' lines' → logprob: -5.902735233306885
    5. '   ' → logprob: -6.277735233306885
    6. '
' → logprob: -6.277735233306885
    7. 'tokens' → logprob: -6.777735233306885
    8. '        
' → logprob: -6.902735233306885
    9. ' tokens' → logprob: -7.152735233306885
    10. 'word' → logprob: -7.152735233306885

Token 63: ' need' (ID: 1309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7728286981582642
    2. ' can' → logprob: -2.0228285789489746
    3. ' ' → logprob: -2.2728285789489746
    4. ' split' → logprob: -2.7728285789489746
    5. ' want' → logprob: -3.2728285789489746
    6. ' have' → logprob: -3.5228285789489746
    7. ' define' → logprob: -3.7728285789489746
    8. ' first' → logprob: -3.8978285789489746
    9. ' need' → logprob: -3.8978285789489746
    10. ' are' → logprob: -4.022828578948975

Token 64: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.07957897335290909
    2. 'to' → logprob: -2.7045788764953613
    3. '    ' → logprob: -4.829578876495361
    4. '   ' → logprob: -7.454578876495361
    5. ' ' → logprob: -8.45457935333252
    6. ' two' → logprob: -8.82957935333252
    7. ' more' → logprob: -9.07957935333252
    8. ' a' → logprob: -9.45457935333252
    9. '  ' → logprob: -9.82957935333252
    10. '<|end|>' → logprob: -9.82957935333252

Token 65: ' know' (ID: 1761)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.5954274535179138
    2. ' split' → logprob: -1.3454275131225586
    3. 'find' → logprob: -2.9704275131225586
    4. 'split' → logprob: -2.9704275131225586
    5. ' handle' → logprob: -3.3454275131225586
    6. 'handle' → logprob: -5.095427513122559
    7. ' return' → logprob: -5.220427513122559
    8. ' get' → logprob: -5.470427513122559
    9. ' identify' → logprob: -5.470427513122559
    10. 'identify' → logprob: -5.845427513122559

Token 66: ' the' (ID: 290)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23014765977859497
    2. ' the' → logprob: -2.85514760017395
    3. '    ' → logprob: -3.48014760017395
    4. '_' → logprob: -3.60514760017395
    5. '   ' → logprob: -3.60514760017395
    6. ' how' → logprob: -4.605147838592529
    7. ')' → logprob: -5.230147838592529
    8. ' what' → logprob: -5.230147838592529
    9. '  ' → logprob: -5.355147838592529
    10. ' whether' → logprob: -5.980147838592529

Token 67: ' positions' (ID: 15897)
  Prédit: ' boundaries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boundaries' → logprob: -0.804210364818573
    2. ' positions' → logprob: -1.4292104244232178
    3. 'positions' → logprob: -2.5542104244232178
    4. ' current' → logprob: -3.1792104244232178
    5. ' exact' → logprob: -3.3042104244232178
    6. ' position' → logprob: -3.4292104244232178
    7. 'position' → logprob: -4.304210186004639
    8. ' cursor' → logprob: -4.554210186004639
    9. ' indices' → logprob: -4.804210186004639
    10. ' words' → logprob: -4.804210186004639

Token 68: ' of' (ID: 328)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3992398977279663
    2. ' ' → logprob: -1.5242398977279663
    3. '   ' → logprob: -1.7742398977279663
    4. ' :' → logprob: -2.024240016937256
    5. ',' → logprob: -2.524240016937256
    6. '       ' → logprob: -3.399240016937256
    7. '(' → logprob: -4.024240016937256
    8. '<|end|>' → logprob: -4.149240016937256
    9. ' of' → logprob: -4.524240016937256
    10. ' ,' → logprob: -4.774240016937256

Token 69: ' words' (ID: 6391)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3051106631755829
    2. ' each' → logprob: -2.0551106929779053
    3. 'the' → logprob: -2.6801106929779053
    4. ' spaces' → logprob: -3.8051106929779053
    5. 'each' → logprob: -4.805110454559326
    6. ' word' → logprob: -5.305110454559326
    7. ' words' → logprob: -5.305110454559326
    8. 'words' → logprob: -5.430110454559326
    9. ' start' → logprob: -5.430110454559326
    10. ' all' → logprob: -5.555110454559326

Token 70: ' relative' (ID: 15001)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8978514671325684
    2. '   ' → logprob: -1.5228514671325684
    3. ' :' → logprob: -2.6478514671325684
    4. ' ' → logprob: -2.6478514671325684
    5. '(' → logprob: -2.8978514671325684
    6. ',' → logprob: -3.1478514671325684
    7. '_' → logprob: -3.2728514671325684
    8. '       ' → logprob: -4.147851467132568
    9. ')' → logprob: -4.272851467132568
    10. '):' → logprob: -4.272851467132568

Token 71: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2034577876329422
    2. 'to' → logprob: -1.7034578323364258
    3. '=' → logprob: -6.328457832336426
    4. ' =' → logprob: -8.578457832336426
    5. '_to' → logprob: -10.578457832336426
    6. ')' → logprob: -11.203457832336426
    7. ' ' → logprob: -11.828457832336426
    8. ' the' → logprob: -11.953457832336426
    9. 'the' → logprob: -12.828457832336426
    10. '   ' → logprob: -13.203457832336426

Token 72: ' text' (ID: 2201)
  Prédit: ' text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' text' → logprob: -0.6222637295722961
    2. ' cursor' → logprob: -1.4972636699676514
    3. ' the' → logprob: -1.6222636699676514
    4. 'text' → logprob: -3.8722636699676514
    5. 'the' → logprob: -4.2472639083862305
    6. 'cursor' → logprob: -4.9972639083862305
    7. '<|end|>' → logprob: -10.12226390838623
    8. ' len' → logprob: -10.37226390838623
    9. '<|end|>' → logprob: -10.37226390838623
    10. '_cursor' → logprob: -10.87226390838623

Token 73: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6301665306091309
    2. '
' → logprob: -1.6301665306091309
    3. '   ' → logprob: -2.255166530609131
    4. '       ' → logprob: -2.755166530609131
    5. '    
' → logprob: -3.380166530609131
    6. '        
' → logprob: -4.005166530609131
    7. ' :' → logprob: -5.255166530609131
    8. '\n' → logprob: -5.630166530609131
    9. '```' → logprob: -5.630166530609131
    10. ' ' → logprob: -5.755166530609131

Token 74: ' move' (ID: 5275)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.0910283327102661
    2. ' find' → logprob: -1.2160283327102661
    3. ' identify' → logprob: -1.8410283327102661
    4. ' extract' → logprob: -2.8410282135009766
    5. ' split' → logprob: -3.5910282135009766
    6. ' the' → logprob: -4.466028213500977
    7. ' correctly' → logprob: -4.591028213500977
    8. 'identify' → logprob: -4.841028213500977
    9. ' provide' → logprob: -4.966028213500977
    10. 'return' → logprob: -4.966028213500977

Token 75: ' cursor' (ID: 14944)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.49327802658081055
    2. '_cursor' → logprob: -2.6182780265808105
    3. 'tokens' → logprob: -3.1182780265808105
    4. 'the' → logprob: -3.2432780265808105
    5. '   ' → logprob: -3.2432780265808105
    6. 'def' → logprob: -3.4932780265808105
    7. '_tokens' → logprob: -3.4932780265808105
    8. ' cursor' → logprob: -3.9932780265808105
    9. ' tokens' → logprob: -4.1182780265808105
    10. 's' → logprob: -4.4932780265808105

Token 76: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7253068089485168
    2. '
' → logprob: -1.600306749343872
    3. '   ' → logprob: -1.850306749343872
    4. '<|end|>' → logprob: -2.850306749343872
    5. ':' → logprob: -3.350306749343872
    6. '<|end|>' → logprob: -3.850306749343872
    7. '        
' → logprob: -4.225306987762451
    8. '    
' → logprob: -4.975306987762451
    9. '    ' → logprob: -5.975306987762451
    10. ' ' → logprob: -6.100306987762451

Token 77: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16848692297935486
    2. '   ' → logprob: -2.5434868335723877
    3. '        
' → logprob: -3.4184868335723877
    4. '    
' → logprob: -4.418487071990967
    5. '
' → logprob: -4.543487071990967
    6. '    ' → logprob: -4.668487071990967
    7. '<|end|>' → logprob: -6.418487071990967
    8. ' ' → logprob: -6.668487071990967
    9. ' 
' → logprob: -6.668487071990967
    10. '     
' → logprob: -6.918487071990967

Token 78: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05618150532245636
    2. '        
' → logprob: -4.30618143081665
    3. '   ' → logprob: -4.80618143081665
    4. '
' → logprob: -4.80618143081665
    5. ' 
' → logprob: -5.30618143081665
    6. 'n' → logprob: -5.68118143081665
    7. '    ' → logprob: -5.68118143081665
    8. '    
' → logprob: -6.18118143081665
    9. '        ' → logprob: -6.43118143081665
    10. 'words' → logprob: -6.68118143081665

Token 79: ' Left' (ID: 26982)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2463771104812622
    2. ' words' → logprob: -1.2463771104812622
    3. 'words' → logprob: -2.3713769912719727
    4. '       ' → logprob: -2.6213769912719727
    5. ' left' → logprob: -2.6213769912719727
    6. ' n' → logprob: -2.7463769912719727
    7. 'left' → logprob: -3.7463769912719727
    8. ' text' → logprob: -4.371376991271973
    9. 'n' → logprob: -4.371376991271973
    10. '#' → logprob: -4.371376991271973

Token 80: ' of' (ID: 328)
  Prédit: '_words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_words' → logprob: -0.07218948006629944
    2. '_' → logprob: -3.1971895694732666
    3. '_tokens' → logprob: -4.8221893310546875
    4. '_bound' → logprob: -5.0721893310546875
    5. '_pos' → logprob: -5.3221893310546875
    6. '_word' → logprob: -5.8221893310546875
    7. '_positions' → logprob: -6.1971893310546875
    8. ' =' → logprob: -6.3221893310546875
    9. '_boundary' → logprob: -7.8221893310546875
    10. '   ' → logprob: -8.447189331054688

Token 81: ' cursor' (ID: 14944)
  Prédit: ' cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cursor' → logprob: -0.21761956810951233
    2. ' text' → logprob: -2.3426196575164795
    3. ' the' → logprob: -3.0926196575164795
    4. 'cursor' → logprob: -3.2176196575164795
    5. 'text' → logprob: -4.5926194190979
    6. 'the' → logprob: -5.8426194190979
    7. '_cursor' → logprob: -8.467619895935059
    8. ' ' → logprob: -8.717619895935059
    9. '   ' → logprob: -8.717619895935059
    10. 'space' → logprob: -9.217619895935059

Token 82: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21474304795265198
    2. ':' → logprob: -2.839743137359619
    3. ' =' → logprob: -2.964743137359619
    4. '_' → logprob: -3.464743137359619
    5. '   ' → logprob: -3.714743137359619
    6. '=' → logprob: -4.964743137359619
    7. '    ' → logprob: -5.089743137359619
    8. '<|end|>' → logprob: -5.839743137359619
    9. ',' → logprob: -6.089743137359619
    10. '        ' → logprob: -6.464743137359619

Token 83: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024204634130001068
    2. ':' → logprob: -4.774204730987549
    3. ',' → logprob: -5.149204730987549
    4. ' =' → logprob: -5.399204730987549
    5. '<|end|>' → logprob: -6.649204730987549
    6. '        
' → logprob: -7.399204730987549
    7. '   ' → logprob: -7.524204730987549
    8. '        ' → logprob: -7.524204730987549
    9. ')' → logprob: -7.899204730987549
    10. '=' → logprob: -7.899204730987549

Token 84: ' left' (ID: 3561)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13105468451976776
    2. '   ' → logprob: -2.631054639816284
    3. '    ' → logprob: -4.131054878234863
    4. 'words' → logprob: -4.131054878234863
    5. ' words' → logprob: -5.756054878234863
    6. 'left' (adapté à ' left') → logprob: -5.881054878234863
    7. 'word' → logprob: -5.881054878234863
    8. '  ' → logprob: -6.506054878234863
    9. '      ' → logprob: -6.756054878234863
    10. '        ' → logprob: -6.881054878234863

Token 85: '_part' (ID: 24053)
  Prédit: '_words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_words' → logprob: -0.014978475868701935
    2. '_' → logprob: -5.639978408813477
    3. '_text' → logprob: -5.639978408813477
    4. '_pos' → logprob: -5.764978408813477
    5. ' =' → logprob: -6.139978408813477
    6. '_bound' → logprob: -7.514978408813477
    7. '_start' → logprob: -7.514978408813477
    8. '_tokens' → logprob: -8.264978408813477
    9. '_end' → logprob: -8.514978408813477
    10. '_word' → logprob: -8.639978408813477

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08073294162750244
    2. '=' → logprob: -2.580732822418213
    3. '_' → logprob: -6.330732822418213
    4. ',' → logprob: -10.580733299255371
    5. ' ' → logprob: -11.330733299255371
    6. '   ' → logprob: -11.955733299255371
    7. '  ' → logprob: -12.580733299255371
    8. '_text' → logprob: -13.205733299255371
    9. '    ' → logprob: -13.205733299255371
    10. '_tokens' → logprob: -13.580733299255371

Token 87: ' text' (ID: 2201)
  Prédit: ' text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' text' → logprob: -0.03804550692439079
    2. 'text' → logprob: -3.2880454063415527
    3. '   ' → logprob: -13.538045883178711
    4. '	text' → logprob: -13.663045883178711
    5. ' ' → logprob: -14.413045883178711
    6. '    ' → logprob: -15.038045883178711
    7. ' ' → logprob: -15.663045883178711
    8. '{text' → logprob: -15.788045883178711
    9. '"text' → logprob: -16.03804588317871
    10. '=text' → logprob: -16.91304588317871

Token 88: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -5.2762428822461516e-05
    2. '[' → logprob: -10.000052452087402
    3. '   ' → logprob: -12.375052452087402
    4. ':' → logprob: -13.500052452087402
    5. ' [:' → logprob: -13.875052452087402
    6. '[:-' → logprob: -15.250052452087402
    7. '[
' → logprob: -15.625052452087402
    8. '       ' → logprob: -15.625052452087402
    9. '][:' → logprob: -16.50005340576172
    10. '[:]' → logprob: -16.87505340576172

Token 89: 'cursor' (ID: 34222)
  Prédit: 'cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.004630672745406628
    2. ' cursor' → logprob: -5.3796305656433105
    3. '	cursor' → logprob: -12.254631042480469
    4. '(cursor' → logprob: -13.254631042480469
    5. '_cursor' → logprob: -13.754631042480469
    6. '.cursor' → logprob: -14.129631042480469
    7. ' ' → logprob: -14.629631042480469
    8. '   ' → logprob: -14.754631042480469
    9. 'Cursor' → logprob: -15.129631042480469
    10. 'ursor' → logprob: -15.254631042480469

Token 90: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.3856492842023727e-06
    2. 'pos' → logprob: -14.125000953674316
    3. '_' → logprob: -15.125000953674316
    4. ' _' → logprob: -15.250000953674316
    5. '_position' → logprob: -17.375001907348633
    6. '_p' → logprob: -17.375001907348633
    7. ']_' → logprob: -18.250001907348633
    8. 'Pos' → logprob: -18.750001907348633
    9. '_POS' → logprob: -18.750001907348633
    10. ')_' → logprob: -18.750001907348633

Token 91: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015754664316773415
    2. '].' → logprob: -4.265754699707031
    3. ')' → logprob: -7.015754699707031
    4. '   ' → logprob: -8.390754699707031
    5. ' ]' → logprob: -8.515754699707031
    6. ']
' → logprob: -8.765754699707031
    7. '])' → logprob: -10.265754699707031
    8. ']
' → logprob: -10.890754699707031
    9. '       ' → logprob: -11.140754699707031
    10. ')]' → logprob: -11.515754699707031

Token 92: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5346978902816772
    2. '       ' → logprob: -1.5346978902816772
    3. '    
' → logprob: -2.534698009490967
    4. '   ' → logprob: -2.659698009490967
    5. '        
' → logprob: -3.534698009490967
    6. '  
' → logprob: -4.784698009490967
    7. ' 
' → logprob: -5.784698009490967
    8. '   
' → logprob: -6.534698009490967
    9. '\n' → logprob: -7.284698009490967
    10. '     
' → logprob: -7.284698009490967

Token 93: ' right' (ID: 1849)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6929284334182739
    2. ' words' → logprob: -1.317928433418274
    3. 'words' → logprob: -1.692928433418274
    4. '
' → logprob: -4.567928314208984
    5. '        
' → logprob: -4.942928314208984
    6. ' left' → logprob: -5.192928314208984
    7. 'left' → logprob: -5.192928314208984
    8. '   ' → logprob: -5.817928314208984
    9. 'tokens' → logprob: -5.942928314208984
    10. '    
' → logprob: -6.067928314208984

Token 94: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -3.500108141452074e-05
    2. '_' → logprob: -10.875035285949707
    3. '_parts' → logprob: -11.250035285949707
    4. '_text' → logprob: -14.375035285949707
    5. ' _' → logprob: -14.750035285949707
    6. 'Part' → logprob: -14.750035285949707
    7. ' =' → logprob: -15.500035285949707
    8. 'part' → logprob: -15.750035285949707
    9. '_PART' → logprob: -15.750035285949707
    10. '_p' → logprob: -15.750035285949707

Token 95: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020828247070312
    2. '=' → logprob: -2.350208282470703
    3. 's' → logprob: -14.225208282470703
    4. ' ' → logprob: -15.100208282470703
    5. '=text' → logprob: -15.350208282470703
    6. '   ' → logprob: -15.850208282470703
    7. '```' → logprob: -16.475208282470703
    8. ')' → logprob: -16.975208282470703
    9. ' ' → logprob: -17.100208282470703
    10. ' =
' → logprob: -17.350208282470703

Token 96: ' text' (ID: 2201)
  Prédit: ' text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' text' → logprob: -0.029751762747764587
    2. 'text' → logprob: -3.529751777648926
    3. '   ' → logprob: -14.154751777648926
    4. '    ' → logprob: -15.404751777648926
    5. '	text' → logprob: -15.904751777648926
    6. ' ' → logprob: -16.15475082397461
    7. '=text' → logprob: -17.15475082397461
    8. '       ' → logprob: -17.27975082397461
    9. '        ' → logprob: -18.15475082397461
    10. ' texto' → logprob: -18.27975082397461

Token 97: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.009818308055400848
    2. '[' → logprob: -4.759818077087402
    3. '[:]' → logprob: -7.259818077087402
    4. '[:' → logprob: -7.634818077087402
    5. '[]' → logprob: -11.759818077087402
    6. '[len' → logprob: -13.134818077087402
    7. '```' → logprob: -13.759818077087402
    8. '   ' → logprob: -13.884818077087402
    9. '       ' → logprob: -13.884818077087402
    10. '[:,' → logprob: -14.134818077087402

Token 98: 'ursor' (ID: 6519)
  Prédit: 'ursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursor' → logprob: -0.0002214172709500417
    2. 'urs' → logprob: -8.875221252441406
    3. 'URSOR' → logprob: -10.375221252441406
    4. '[' → logprob: -10.750221252441406
    5. 'os' → logprob: -11.875221252441406
    6. 'ur' → logprob: -12.250221252441406
    7. 'ursors' → logprob: -12.500221252441406
    8. 'cursor' → logprob: -13.000221252441406
    9. '   ' → logprob: -13.250221252441406
    10. ')' → logprob: -13.625221252441406

Token 99: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0030494853854179382
    2. 'pos' → logprob: -5.878049373626709
    3. ')' → logprob: -8.378049850463867
    4. 'Pos' → logprob: -12.003049850463867
    5. '[pos' → logprob: -13.003049850463867
    6. '   ' → logprob: -13.753049850463867
    7. '])' → logprob: -13.878049850463867
    8. ']' → logprob: -14.378049850463867
    9. '	pos' → logprob: -14.503049850463867
    10. ')]' → logprob: -15.003049850463867

Token 100: ':]

' (ID: 170549)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010661551496014
    2. ' ]' → logprob: -6.876066207885742
    3. ':]' → logprob: -10.376066207885742
    4. ' :]' → logprob: -14.751066207885742
    5. '()]' → logprob: -15.001066207885742
    6. ')' → logprob: -15.126066207885742
    7. ']
' → logprob: -15.251066207885742
    8. '])' → logprob: -15.376066207885742
    9. '   ' → logprob: -15.876066207885742
    10. ')]' → logprob: -16.001066207885742

Token 101: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29496610164642334
    2. '       ' → logprob: -1.4199661016464233
    3. '        
' → logprob: -4.794966220855713
    4. '   ' → logprob: -6.044966220855713
    5. '    
' → logprob: -6.169966220855713
    6. '<|end|>' → logprob: -8.544965744018555
    7. 'def' → logprob: -8.669965744018555
    8. '  
' → logprob: -9.169965744018555
    9. '```' → logprob: -9.419965744018555
    10. '
' → logprob: -9.919965744018555

Token 102: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.5694004893302917
    2. 'words' → logprob: -1.4444005489349365
    3. 'import' → logprob: -2.3194005489349365
    4. '       ' → logprob: -3.0694005489349365
    5. '   ' → logprob: -3.8194005489349365
    6. ' left' → logprob: -4.194400310516357
    7. 'def' → logprob: -4.569400310516357
    8. ' import' → logprob: -5.819400310516357
    9. ' words' → logprob: -6.819400310516357
    10. '#' (adapté à ' #') → logprob: -6.819400310516357

Token 103: ' Find' (ID: 9764)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.697969913482666
    2. 'left' → logprob: -0.947969913482666
    3. ' import' → logprob: -3.322969913482666
    4. ' left' → logprob: -3.447969913482666
    5. 'words' → logprob: -3.822969913482666
    6. '       ' → logprob: -4.822969913482666
    7. '#' → logprob: -4.947969913482666
    8. '   ' → logprob: -5.072969913482666
    9. 'def' → logprob: -6.322969913482666
    10. ' words' → logprob: -6.822969913482666

Token 104: ' words' (ID: 6391)
  Prédit: ' words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' words' → logprob: -0.8946696519851685
    2. ' left' → logprob: -1.1446696519851685
    3. 'left' → logprob: -2.019669532775879
    4. 'import' → logprob: -2.894669532775879
    5. ' import' → logprob: -3.769669532775879
    6. ' word' → logprob: -4.019669532775879
    7. 'words' → logprob: -4.144669532775879
    8. '_words' → logprob: -5.144669532775879
    9. '   ' → logprob: -5.269669532775879
    10. ' all' → logprob: -5.394669532775879

Token 105: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5287211537361145
    2. '   ' → logprob: -1.7787210941314697
    3. '_left' → logprob: -2.4037210941314697
    4. 'import' → logprob: -2.4037210941314697
    5. '       ' → logprob: -3.6537210941314697
    6. '=' → logprob: -4.653721332550049
    7. 'left' → logprob: -5.028721332550049
    8. '_words' → logprob: -5.528721332550049
    9. ' in' → logprob: -6.028721332550049
    10. 's' → logprob: -6.153721332550049

Token 106: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.11310500651597977
    2. 'left' → logprob: -2.238105058670044
    3. ' the' → logprob: -8.738104820251465
    4. 'import' → logprob: -10.113104820251465
    5. '_left' → logprob: -10.238104820251465
    6. '	left' → logprob: -11.488104820251465
    7. 're' → logprob: -12.363104820251465
    8. ' right' → logprob: -12.363104820251465
    9. '[left' → logprob: -12.363104820251465
    10. '   ' → logprob: -12.363104820251465

Token 107: ' part' (ID: 997)
  Prédit: '_words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_words' → logprob: -0.07750492542982101
    2. '_tokens' → logprob: -3.952504873275757
    3. '_bound' → logprob: -4.077505111694336
    4. '   ' → logprob: -4.327505111694336
    5. 'words' → logprob: -4.827505111694336
    6. '_' → logprob: -5.327505111694336
    7. ' =' → logprob: -5.702505111694336
    8. '_positions' → logprob: -6.577505111694336
    9. '_pos' → logprob: -6.827505111694336
    10. 'import' → logprob: -6.952505111694336

Token 108: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048843853175640106
    2. 'words' → logprob: -4.048843860626221
    3. 'import' → logprob: -4.548843860626221
    4. '        
' → logprob: -5.173843860626221
    5. '
' → logprob: -6.048843860626221
    6. 'tokens' → logprob: -6.048843860626221
    7. '   ' → logprob: -6.423843860626221
    8. ',' → logprob: -6.423843860626221
    9. ' =' → logprob: -6.673843860626221
    10. '_words' → logprob: -7.048843860626221

Token 109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009134229272603989
    2. 'import' → logprob: -5.259134292602539
    3. 'words' → logprob: -6.009134292602539
    4. '   ' → logprob: -7.884134292602539
    5. '        
' → logprob: -8.009134292602539
    6. ' words' → logprob: -8.634134292602539
    7. '
' → logprob: -9.009134292602539
    8. 'tokens' → logprob: -9.384134292602539
    9. '_words' → logprob: -10.134134292602539
    10. ',' → logprob: -10.134134292602539

Token 110: ' left' (ID: 3561)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3526556193828583
    2. ' import' → logprob: -1.4776556491851807
    3. '       ' → logprob: -2.8526556491851807
    4. 'words' → logprob: -5.477655410766602
    5. ' words' → logprob: -5.977655410766602
    6. '   ' → logprob: -6.352655410766602
    7. ' left' → logprob: -6.477655410766602
    8. 'left' (adapté à ' left') → logprob: -6.852655410766602
    9. 'word' → logprob: -9.352655410766602
    10. '	import' → logprob: -9.852655410766602

Token 111: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -0.0015669959830120206
    2. '_bound' → logprob: -7.3765668869018555
    3. 'import' → logprob: -8.626566886901855
    4. '_tokens' → logprob: -9.001566886901855
    5. '       ' → logprob: -9.126566886901855
    6. '_word' → logprob: -9.376566886901855
    7. '_' → logprob: -9.376566886901855
    8. 'words' → logprob: -9.501566886901855
    9. '   ' → logprob: -9.626566886901855
    10. '_indices' → logprob: -10.001566886901855

Token 112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0025044360663741827
    2. '=' → logprob: -6.002504348754883
    3. '   ' → logprob: -10.752504348754883
    4. '=[]' → logprob: -13.002504348754883
    5. ',' → logprob: -13.502504348754883
    6. ' ' → logprob: -14.002504348754883
    7. '_positions' → logprob: -14.377504348754883
    8. '    ' → logprob: -14.377504348754883
    9. '_' → logprob: -15.127504348754883
    10. '       ' → logprob: -15.377504348754883

Token 113: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.4871298670768738
    2. '[]' → logprob: -0.9871298670768738
    3. ' []
' → logprob: -4.9871296882629395
    4. ' []' → logprob: -5.1121296882629395
    5. '   ' → logprob: -10.362130165100098
    6. '[]

' → logprob: -10.737130165100098
    7. 're' → logprob: -10.862130165100098
    8. '[' → logprob: -11.237130165100098
    9. '[(' → logprob: -11.612130165100098
    10. '[len' → logprob: -12.362130165100098

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0046177455224096775
    2. '        
' → logprob: -6.879617691040039
    3. ',' → logprob: -7.004617691040039
    4. ' =' → logprob: -7.629617691040039
    5. 'word' → logprob: -8.004617691040039
    6. ' word' → logprob: -8.129617691040039
    7. '   ' → logprob: -8.379617691040039
    8. 'start' → logprob: -8.504617691040039
    9. ' start' → logprob: -8.629617691040039
    10. 'token' → logprob: -9.504617691040039

Token 115: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.2737530767917633
    2. ' start' → logprob: -2.3987531661987305
    3. 'word' → logprob: -2.6487531661987305
    4. '       ' → logprob: -3.2737531661987305
    5. ' word' → logprob: -4.6487531661987305
    6. 'import' → logprob: -4.6487531661987305
    7. 'for' → logprob: -5.1487531661987305
    8. ' for' → logprob: -5.7737531661987305
    9. ' import' → logprob: -5.7737531661987305
    10. 'pos' → logprob: -6.0237531661987305

Token 116: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6336683034896851
    2. ' =' → logprob: -0.7586683034896851
    3. '_idx' → logprob: -7.008668422698975
    4. '<|end|>' → logprob: -9.883667945861816
    5. '_index' → logprob: -10.258667945861816
    6. '_' → logprob: -11.258667945861816
    7. '_pos' → logprob: -11.758667945861816
    8. '_=' → logprob: -11.883667945861816
    9. ' ' → logprob: -12.133667945861816
    10. '<|end|>' → logprob: -12.133667945861816

Token 117: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2765809893608093
    2. ' None' → logprob: -1.901581048965454
    3. 'None' → logprob: -2.526581048965454
    4. ' ' → logprob: -4.401580810546875
    5. '-' → logprob: -9.776580810546875
    6. ' -' → logprob: -10.026580810546875
    7. '   ' → logprob: -12.776580810546875
    8. 'len' → logprob: -14.776580810546875
    9. '=None' → logprob: -15.401580810546875
    10. '  ' → logprob: -15.401580810546875

Token 118: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1346094608306885
    2. '<|end|>' → logprob: -1.1346094608306885
    3. ' 
' → logprob: -2.1346094608306885
    4. ' for' → logprob: -2.6346094608306885
    5. ' ' → logprob: -2.8846094608306885
    6. '
' → logprob: -3.5096094608306885
    7. 'for' → logprob: -3.6346094608306885
    8. '  
' → logprob: -4.134609222412109
    9. '   ' → logprob: -4.384609222412109
    10. '        
' → logprob: -4.759609222412109

Token 119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05178431048989296
    2. ' for' → logprob: -4.176784515380859
    3. '<|end|>' → logprob: -4.551784515380859
    4. '   ' → logprob: -5.051784515380859
    5. ' ' → logprob: -5.301784515380859
    6. ' 
' → logprob: -5.426784515380859
    7. 'for' → logprob: -5.926784515380859
    8. '        
' → logprob: -6.051784515380859
    9. '  
' → logprob: -6.801784515380859
    10. '    ' → logprob: -7.426784515380859

Token 120: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.45766139030456543
    2. 'for' (adapté à ' for') → logprob: -1.5826613903045654
    3. '       ' → logprob: -1.8326613903045654
    4. '   ' → logprob: -6.4576616287231445
    5. ' i' → logprob: -9.832661628723145
    6. ' ' → logprob: -10.332661628723145
    7. '    ' → logprob: -10.332661628723145
    8. ' if' → logprob: -10.332661628723145
    9. 'i' → logprob: -10.457661628723145
    10. '	for' → logprob: -10.832661628723145

Token 121: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.018196886405348778
    2. 'i' → logprob: -4.018197059631348
    3. ' idx' → logprob: -10.018197059631348
    4. ' ' → logprob: -14.018197059631348
    5. 'idx' → logprob: -14.143197059631348
    6. ' index' → logprob: -14.768197059631348
    7. '(i' → logprob: -16.14319610595703
    8. ' pos' → logprob: -16.76819610595703
    9. '	i' → logprob: -16.76819610595703
    10. 'index' → logprob: -17.01819610595703

Token 122: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01106562465429306
    2. 'in' → logprob: -4.636065483093262
    3. ',' → logprob: -6.761065483093262
    4. ' ' → logprob: -9.511065483093262
    5. ' ,' → logprob: -9.761065483093262
    6. '	in' → logprob: -12.386065483093262
    7. ',in' → logprob: -13.261065483093262
    8. 'In' → logprob: -13.261065483093262
    9. '=' → logprob: -13.386065483093262
    10. '_in' → logprob: -13.511065483093262

Token 123: ' c' (ID: 274)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.440711110830307
    2. ' ch' → logprob: -1.6907111406326294
    3. 'c' → logprob: -2.44071102142334
    4. 'char' → logprob: -2.94071102142334
    5. ' c' → logprob: -3.69071102142334
    6. ' char' → logprob: -4.94071102142334
    7. ' ' → logprob: -13.56571102142334
    8. '_char' → logprob: -14.94071102142334
    9. '	ch' → logprob: -15.81571102142334
    10. '   ' → logprob: -16.440711975097656

Token 124: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020554613322019577
    2. 'in' → logprob: -3.895554542541504
    3. '	in' → logprob: -12.395554542541504
    4. ' ' → logprob: -12.770554542541504
    5. '_in' → logprob: -13.770554542541504
    6. 's' → logprob: -14.270554542541504
    7. '<|end|>' → logprob: -14.520554542541504
    8. '   ' → logprob: -14.645554542541504
    9. '    ' → logprob: -14.645554542541504
    10. ',' → logprob: -14.645554542541504

Token 125: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.12692810595035553
    2. 'enumer' → logprob: -2.1269280910491943
    3. '```' → logprob: -17.501928329467773
    4. 'range' → logprob: -18.001928329467773
    5. '(en' → logprob: -18.626928329467773
    6. ' enumer' → logprob: -18.626928329467773
    7. ' range' → logprob: -18.751928329467773
    8. '.enumer' → logprob: -18.876928329467773
    9. ' enumeration' → logprob: -20.126928329467773
    10. ' ' → logprob: -20.501928329467773

Token 126: '(left' (ID: 32958)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.18323972821235657
    2. '(left' → logprob: -1.9332396984100342
    3. 'left' → logprob: -3.808239698410034
    4. ' (' → logprob: -8.183239936828613
    5. '(' → logprob: -8.933239936828613
    6. '	left' → logprob: -9.058239936828613
    7. ',left' → logprob: -11.808239936828613
    8. '_left' → logprob: -11.933239936828613
    9. ':left' → logprob: -11.933239936828613
    10. ')' → logprob: -12.308239936828613

Token 127: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -9.794061770662665e-05
    2. '_words' → logprob: -10.37509822845459
    3. ')' → logprob: -10.75009822845459
    4. 'part' → logprob: -11.25009822845459
    5. '_' → logprob: -11.87509822845459
    6. '_parts' → logprob: -12.00009822845459
    7. '   ' → logprob: -12.37509822845459
    8. ' part' → logprob: -13.12509822845459
    9. ':' → logprob: -13.62509822845459
    10. ' ' → logprob: -13.87509822845459

Token 128: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2542681097984314
    2. '):' → logprob: -1.5042681694030762
    3. ':' → logprob: -6.254268169403076
    4. ' ):
' → logprob: -9.129267692565918
    5. ':
' → logprob: -9.504267692565918
    6. '       ' → logprob: -9.629267692565918
    7. ' ):' → logprob: -10.129267692565918
    8. '   ' → logprob: -10.254267692565918
    9. '():
' → logprob: -10.379267692565918
    10. '):
' → logprob: -10.504267692565918

Token 129: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0028450563549995422
    2. '            ' → logprob: -7.127845287322998
    3. '<|end|>' → logprob: -7.502845287322998
    4. '        ' → logprob: -7.752845287322998
    5. '       ' → logprob: -7.877845287322998
    6. ' if' → logprob: -8.75284481048584
    7. ' ' → logprob: -9.00284481048584
    8. '<|end|>' → logprob: -9.25284481048584
    9. '	       ' → logprob: -9.62784481048584
    10. ':' → logprob: -10.25284481048584

Token 130: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.007698433008044958
    2. ' ' → logprob: -5.3826985359191895
    3. 'if' (adapté à ' if') → logprob: -6.8826985359191895
    4. '           ' → logprob: -7.0076985359191895
    5. '               ' → logprob: -7.8826985359191895
    6. '        ' → logprob: -8.007698059082031
    7. '            ' → logprob: -8.757698059082031
    8. ' 
' → logprob: -8.882698059082031
    9. '       ' → logprob: -10.132698059082031
    10. '   ' → logprob: -11.007698059082031

Token 131: ' c' (ID: 274)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6690973043441772
    2. ' c' → logprob: -0.7940973043441772
    3. 'c' → logprob: -3.419097423553467
    4. 'not' → logprob: -5.794097423553467
    5. ' ' → logprob: -10.294096946716309
    6. '(c' → logprob: -12.544096946716309
    7. '	c' → logprob: -12.919096946716309
    8. '   ' → logprob: -12.919096946716309
    9. '(not' → logprob: -13.169096946716309
    10. '	not' → logprob: -13.544096946716309

Token 132: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.7122110724449158
    2. ' !=' → logprob: -1.3372111320495605
    3. ' not' → logprob: -1.9622111320495605
    4. '!='' → logprob: -2.3372111320495605
    5. '!="' → logprob: -5.9622111320495605
    6. 'not' → logprob: -6.2122111320495605
    7. '==' → logprob: -6.3372111320495605
    8. '.' → logprob: -7.4622111320495605
    9. ' ==' → logprob: -7.7122111320495605
    10. '=='' → logprob: -7.7122111320495605

Token 133: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.026449846103787422
    2. ' '' → logprob: -3.6514499187469482
    3. '"' → logprob: -8.901450157165527
    4. ''s' → logprob: -11.526450157165527
    5. ' ' → logprob: -13.651450157165527
    6. ' "' → logprob: -14.276450157165527
    7. ''a' → logprob: -14.651450157165527
    8. ''t' → logprob: -14.901450157165527
    9. ''S' → logprob: -16.02644920349121
    10. ''o' → logprob: -16.40144920349121

Token 134: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.015484608709812164
    2. ' ':' → logprob: -4.390484809875488
    3. ''' → logprob: -5.890484809875488
    4. ' ' → logprob: -9.015484809875488
    5. ' ')' → logprob: -10.390484809875488
    6. ''s' → logprob: -11.015484809875488
    7. '':' → logprob: -11.515484809875488
    8. ' '>' → logprob: -11.640484809875488
    9. ' '}' → logprob: -12.515484809875488
    10. ' ',' → logprob: -12.640484809875488

Token 135: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03561227023601532
    2. 'and' → logprob: -3.9106123447418213
    3. ':
' → logprob: -4.785612106323242
    4. ':' → logprob: -5.035612106323242
    5. ' ' → logprob: -9.910612106323242
    6. '<|end|>' → logprob: -10.910612106323242
    7. '       ' → logprob: -11.910612106323242
    8. ' :
' → logprob: -12.035612106323242
    9. ':

' → logprob: -12.285612106323242
    10. ' :' → logprob: -12.410612106323242

Token 136: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3220391869544983
    2. ' and' → logprob: -1.3220391273498535
    3. '           ' → logprob: -5.3220391273498535
    4. ':' → logprob: -6.5720391273498535
    5. ':
' → logprob: -6.8220391273498535
    6. 'and' → logprob: -7.1970391273498535
    7. '<|end|>' → logprob: -8.572039604187012
    8. ' if' → logprob: -8.822039604187012
    9. '       ' → logprob: -9.447039604187012
    10. '<|end|>' → logprob: -10.072039604187012

Token 137: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09724847972393036
    2. '               ' → logprob: -2.7222485542297363
    3. '<|end|>' → logprob: -4.347248554229736
    4. 'if' (adapté à ' if') → logprob: -5.222248554229736
    5. '           ' → logprob: -5.347248554229736
    6. ' ' → logprob: -6.347248554229736
    7. '                ' → logprob: -7.222248554229736
    8. '            ' → logprob: -7.472248554229736
    9. '<|end|>' → logprob: -8.472248077392578
    10. '
' → logprob: -9.597248077392578

Token 138: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.2014133334159851
    2. 'start' → logprob: -1.7014133930206299
    3. ' ' → logprob: -17.076414108276367
    4. '	start' → logprob: -17.326414108276367
    5. ' not' → logprob: -17.951414108276367
    6. 'Start' → logprob: -19.076414108276367
    7. ':start' → logprob: -19.201414108276367
    8. '               ' → logprob: -19.826414108276367
    9. '_start' → logprob: -19.951414108276367
    10. ' ' → logprob: -20.076414108276367

Token 139: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.16024424135684967
    2. 'is' → logprob: -1.9102442264556885
    3. '==' → logprob: -11.16024398803711
    4. '=' → logprob: -13.03524398803711
    5. ')' → logprob: -13.41024398803711
    6. '	is' → logprob: -14.53524398803711
    7. '===' → logprob: -14.66024398803711
    8. ')is' → logprob: -15.53524398803711
    9. ' =' → logprob: -15.66024398803711
    10. ' ==' → logprob: -15.66024398803711

Token 140: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0005547016044147313
    2. ' None' → logprob: -7.50055456161499
    3. '(None' → logprob: -14.375555038452148
    4. '_None' → logprob: -14.375555038452148
    5. '   ' → logprob: -15.250555038452148
    6. ' ' → logprob: -16.00055503845215
    7. '  ' → logprob: -16.37555503845215
    8. '_none' → logprob: -16.87555503845215
    9. 'none' → logprob: -17.00055503845215
    10. '=None' → logprob: -17.62555503845215

Token 141: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6342768669128418
    2. ':
' → logprob: -0.7592768669128418
    3. '                   ' → logprob: -6.634276866912842
    4. '               ' → logprob: -8.50927734375
    5. ':start' → logprob: -10.13427734375
    6. '                       ' → logprob: -10.88427734375
    7. '):
' → logprob: -10.88427734375
    8. ':

' → logprob: -10.88427734375
    9. '=' → logprob: -11.50927734375
    10. '           ' → logprob: -11.63427734375

Token 142: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0042478120885789394
    2. 'start' → logprob: -5.754247665405273
    3. ' start' → logprob: -7.004247665405273
    4. '                       ' → logprob: -9.004247665405273
    5. ',start' → logprob: -11.504247665405273
    6. '               ' → logprob: -11.879247665405273
    7. '		           ' → logprob: -12.379247665405273
    8. '[start' → logprob: -12.504247665405273
    9. '                  ' → logprob: -13.254247665405273
    10. '	               ' → logprob: -13.254247665405273

Token 143: ' start' (ID: 1604)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.25208836793899536
    2. ' i' → logprob: -1.5020883083343506
    3. '                   ' → logprob: -9.12708854675293
    4. 'start' (adapté à ' start') → logprob: -10.00208854675293
    5. ' start' → logprob: -12.75208854675293
    6. '                       ' → logprob: -13.62708854675293
    7. '               ' → logprob: -14.25208854675293
    8. '   ' → logprob: -16.50208854675293
    9. ' ' → logprob: -16.75208854675293
    10. '           ' → logprob: -17.00208854675293

Token 144: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804171830415726
    2. ' =' → logprob: -3.288041830062866
    3. '=i' → logprob: -16.413042068481445
    4. '＝' → logprob: -16.538042068481445
    5. '=
' → logprob: -16.788042068481445
    6. '=}' → logprob: -18.038042068481445
    7. '<|end|>' → logprob: -18.538042068481445
    8. '=int' → logprob: -18.663042068481445
    9. '=start' → logprob: -18.913042068481445
    10. '=

' → logprob: -19.038042068481445

Token 145: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006715370807796717
    2. ' i' → logprob: -5.006715297698975
    3. '                   ' → logprob: -18.506715774536133
    4. '               ' → logprob: -19.506715774536133
    5. '           ' → logprob: -20.006715774536133
    6. ' ' → logprob: -20.131715774536133
    7. '   ' → logprob: -20.881715774536133
    8. '	i' → logprob: -20.881715774536133
    9. '0' → logprob: -21.006715774536133
    10. '  ' → logprob: -23.006715774536133

Token 146: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0024888573680073023
    2. 'elif' → logprob: -6.75248908996582
    3. '
' → logprob: -7.75248908996582
    4. '       ' → logprob: -8.25248908996582
    5. '<|end|>' → logprob: -8.62748908996582
    6. ')' → logprob: -9.12748908996582
    7. 'else' → logprob: -9.62748908996582
    8. ' elif' → logprob: -9.75248908996582
    9. '               ' → logprob: -9.75248908996582
    10. '<|end|>' → logprob: -9.87748908996582

Token 147: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002764710516203195
    2. 'elif' → logprob: -8.375276565551758
    3. 'else' → logprob: -11.000276565551758
    4. '       ' → logprob: -11.500276565551758
    5. ' elif' → logprob: -12.125276565551758
    6. '	       ' → logprob: -12.750276565551758
    7. '<|end|>' → logprob: -13.125276565551758
    8. '<|end|>' → logprob: -13.500276565551758
    9. '               ' → logprob: -13.625276565551758
    10. ')' → logprob: -14.000276565551758

Token 148: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06099635362625122
    2. '       ' → logprob: -3.1859962940216064
    3. 'else' (adapté à ' else') → logprob: -4.4359965324401855
    4. 'elif' → logprob: -5.3109965324401855
    5. ' else' → logprob: -7.3109965324401855
    6. ' elif' → logprob: -8.060996055603027
    7. '   ' → logprob: -10.435996055603027
    8. '
' → logprob: -10.560996055603027
    9. '               ' → logprob: -12.560996055603027
    10. '	       ' → logprob: -12.810996055603027

Token 149: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3885292708873749
    2. ':
' → logprob: -1.2635293006896973
    3. '               ' → logprob: -3.6385293006896973
    4. '       ' → logprob: -4.763529300689697
    5. '<|end|>' → logprob: -6.263529300689697
    6. '           ' → logprob: -7.138529300689697
    7. '):
' → logprob: -7.513529300689697
    8. ' :
' → logprob: -7.888529300689697
    9. ',' → logprob: -8.138528823852539
    10. ' :' → logprob: -8.763528823852539

Token 150: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.33055201172828674
    2. '           ' → logprob: -1.3305519819259644
    3. 'if' → logprob: -4.455552101135254
    4. '       ' → logprob: -5.330552101135254
    5. ' if' → logprob: -7.330552101135254
    6. '   ' → logprob: -11.330552101135254
    7. '                   ' → logprob: -12.205552101135254
    8. '```' → logprob: -12.580552101135254
    9. '	       ' → logprob: -13.080552101135254
    10. '             ' → logprob: -13.080552101135254

Token 151: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6457825303077698
    2. 'if' (adapté à ' if') → logprob: -0.8957825303077698
    3. ' if' → logprob: -3.395782470703125
    4. '           ' → logprob: -3.395782470703125
    5. '       ' → logprob: -8.145782470703125
    6. '   ' → logprob: -9.270782470703125
    7. '                   ' → logprob: -10.270782470703125
    8. '	if' → logprob: -12.520782470703125
    9. 'If' → logprob: -13.270782470703125
    10. ' ' → logprob: -13.645782470703125

Token 152: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.2014138251543045
    2. 'start' → logprob: -1.701413869857788
    3. '   ' → logprob: -15.201414108276367
    4. ' ' → logprob: -15.826414108276367
    5. '  ' → logprob: -17.201414108276367
    6. '               ' → logprob: -17.701414108276367
    7. '(start' → logprob: -18.201414108276367
    8. '	start' → logprob: -18.201414108276367
    9. '                   ' → logprob: -18.451414108276367
    10. 'Start' → logprob: -18.701414108276367

Token 153: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0006332091288641095
    2. 'is' → logprob: -7.375633239746094
    3. ')' → logprob: -12.625633239746094
    4. ' ' → logprob: -13.625633239746094
    5. '!=' → logprob: -14.375633239746094
    6. ' )' → logprob: -15.375633239746094
    7. ' !=' → logprob: -15.625633239746094
    8. ' not' → logprob: -15.625633239746094
    9. '=' → logprob: -15.750633239746094
    10. ')is' → logprob: -16.000633239746094

Token 154: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.007761719636619091
    2. ' not' → logprob: -4.8827619552612305
    3. 'None' → logprob: -9.13276195526123
    4. '0' → logprob: -10.38276195526123
    5. '!' → logprob: -12.50776195526123
    6. 'Not' → logprob: -12.63276195526123
    7. '	not' → logprob: -13.25776195526123
    8. 'none' → logprob: -13.63276195526123
    9. 'i' → logprob: -14.13276195526123
    10. ' ' → logprob: -14.38276195526123

Token 155: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0007101670489646494
    2. ' None' → logprob: -7.2507100105285645
    3. '=None' → logprob: -15.625710487365723
    4. 'none' → logprob: -17.000709533691406
    5. '_None' → logprob: -17.000709533691406
    6. '(None' → logprob: -18.000709533691406
    7. 'not' → logprob: -18.625709533691406
    8. '_none' → logprob: -19.250709533691406
    9. '   ' → logprob: -19.625709533691406
    10. '.None' → logprob: -20.250709533691406

Token 156: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.39068323373794556
    2. ':' → logprob: -1.3906831741333008
    3. '                   ' → logprob: -2.640683174133301
    4. '               ' → logprob: -6.265683174133301
    5. '):
' → logprob: -7.140683174133301
    6. '           ' → logprob: -8.8906831741333
    7. ',' → logprob: -9.1406831741333
    8. ' and' → logprob: -9.5156831741333
    9. '                       ' → logprob: -10.2656831741333
    10. ':

' → logprob: -10.2656831741333

Token 157: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01467051450163126
    2. 'left' → logprob: -4.514670372009277
    3. ' left' → logprob: -6.139670372009277
    4. '               ' → logprob: -6.889670372009277
    5. 'end' → logprob: -8.639670372009277
    6. '                       ' → logprob: -9.764670372009277
    7. '   ' → logprob: -10.014670372009277
    8. 'start' → logprob: -10.139670372009277
    9. 'word' → logprob: -10.389670372009277
    10. '```' → logprob: -10.514670372009277

Token 158: ' left' (ID: 3561)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5808758735656738
    2. ' left' → logprob: -0.9558758735656738
    3. 'left' (adapté à ' left') → logprob: -2.955875873565674
    4. '                       ' → logprob: -5.705875873565674
    5. '   ' → logprob: -7.955875873565674
    6. '       ' → logprob: -8.705875396728516
    7. '               ' → logprob: -8.955875396728516
    8. '           ' → logprob: -10.705875396728516
    9. ',left' → logprob: -10.955875396728516
    10. '	left' → logprob: -11.080875396728516

Token 159: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -2.5941604690160602e-05
    2. 'words' → logprob: -11.500025749206543
    3. '.append' → logprob: -12.250025749206543
    4. '       ' → logprob: -13.250025749206543
    5. '               ' → logprob: -13.250025749206543
    6. '           ' → logprob: -13.375025749206543
    7. '   ' → logprob: -13.500025749206543
    8. 'start' → logprob: -13.875025749206543
    9. '_word' → logprob: -14.500025749206543
    10. '_start' → logprob: -14.625025749206543

Token 160: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.5716304410016164e-05
    2. '.' → logprob: -10.250035285949707
    3. ' .' → logprob: -16.500036239624023
    4. '.ap' → logprob: -16.750036239624023
    5. 'append' → logprob: -17.625036239624023
    6. '.extend' → logprob: -18.000036239624023
    7. '.Append' → logprob: -18.750036239624023
    8. '].' → logprob: -18.875036239624023
    9. ').' → logprob: -19.000036239624023
    10. '.app' → logprob: -19.000036239624023

Token 161: '((' (ID: 2054)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.03821900859475136
    2. '(' → logprob: -3.7882189750671387
    3. '((' → logprob: -4.788218975067139
    4. ' (' → logprob: -5.038218975067139
    5. '   ' → logprob: -10.413219451904297
    6. '(text' → logprob: -11.913219451904297
    7. '(end' → logprob: -11.913219451904297
    8. '(i' → logprob: -14.288219451904297
    9. '(left' → logprob: -14.288219451904297
    10. '(input' → logprob: -14.413219451904297

Token 162: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0009120595059357584
    2. ' start' → logprob: -7.000912189483643
    3. '(start' → logprob: -14.375911712646484
    4. '   ' → logprob: -17.875911712646484
    5. '[start' → logprob: -18.500911712646484
    6. ' ' → logprob: -18.875911712646484
    7. ' (' → logprob: -19.625911712646484
    8. '	start' → logprob: -20.125911712646484
    9. ',start' → logprob: -20.250911712646484
    10. '_start' → logprob: -21.000911712646484

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.407366916188039e-05
    2. ' ,' → logprob: -10.000054359436035
    3. ',
' → logprob: -12.375054359436035
    4. ',start' → logprob: -12.750054359436035
    5. ',end' → logprob: -14.625054359436035
    6. ',i' → logprob: -14.875054359436035
    7. ',c' → logprob: -15.375054359436035
    8. ',n' → logprob: -16.37505340576172
    9. ',index' → logprob: -16.37505340576172
    10. ',last' → logprob: -17.12505340576172

Token 164: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.000932421418838203
    2. ' i' → logprob: -7.000932216644287
    3. '                   ' → logprob: -11.000932693481445
    4. '               ' → logprob: -13.250932693481445
    5. '   ' → logprob: -14.125932693481445
    6. '                       ' → logprob: -14.875932693481445
    7. '           ' → logprob: -14.875932693481445
    8. '                           ' → logprob: -15.125932693481445
    9. '                ' → logprob: -16.375932693481445
    10. '                               ' → logprob: -16.375932693481445

Token 165: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0028461257461458445
    2. ' ))' → logprob: -6.1278462409973145
    3. '))
' → logprob: -7.3778462409973145
    4. ')' → logprob: -10.752845764160156
    5. ' ))
' → logprob: -12.627845764160156
    6. '   ' → logprob: -13.252845764160156
    7. '-' → logprob: -13.377845764160156
    8. '))

' → logprob: -13.377845764160156
    9. ' ' → logprob: -13.502845764160156
    10. ' )' → logprob: -13.752845764160156

Token 166: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11210514605045319
    2. '               ' → logprob: -2.737105131149292
    3. '           ' → logprob: -3.362105131149292
    4. '       ' → logprob: -5.737105369567871
    5. '<|end|>' → logprob: -6.362105369567871
    6. '                    
' → logprob: -7.987105369567871
    7. '
' → logprob: -8.112105369567871
    8. '    
' → logprob: -9.362105369567871
    9. '   ' → logprob: -9.362105369567871
    10. '         ' → logprob: -9.487105369567871

Token 167: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.25305503606796265
    2. ' start' → logprob: -1.5030550956726074
    3. '                   ' → logprob: -6.878055095672607
    4. '               ' → logprob: -10.37805461883545
    5. '       ' → logprob: -10.50305461883545
    6. '           ' → logprob: -10.75305461883545
    7. '   ' → logprob: -12.00305461883545
    8. '	start' → logprob: -13.12805461883545
    9. '[start' → logprob: -13.12805461883545
    10. ' ' → logprob: -13.37805461883545

Token 168: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048617228865623474
    2. ' =' → logprob: -3.048617124557495
    3. '=None' → logprob: -10.423617362976074
    4. '=
' → logprob: -17.048616409301758
    5. '＝' → logprob: -17.923616409301758
    6. ' None' → logprob: -18.298616409301758
    7. '=

' → logprob: -18.673616409301758
    8. 'None' → logprob: -18.923616409301758
    9. '<|end|>' → logprob: -18.923616409301758
    10. '=}' → logprob: -20.048616409301758

Token 169: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0007099286303855479
    2. ' None' → logprob: -7.2507100105285645
    3. '(None' → logprob: -18.750709533691406
    4. '=None' → logprob: -19.375709533691406
    5. 'none' → logprob: -20.250709533691406
    6. '_None' → logprob: -20.250709533691406
    7. ',None' → logprob: -21.625709533691406
    8. '   ' → logprob: -22.000709533691406
    9. '_none' → logprob: -23.500709533691406
    10. '.None' → logprob: -23.625709533691406

Token 170: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015600931365042925
    2. '
' → logprob: -6.626560211181641
    3. '           ' → logprob: -9.62656021118164
    4. '   ' → logprob: -9.75156021118164
    5. '<|end|>' → logprob: -10.62656021118164
    6. '    
' → logprob: -11.00156021118164
    7. '        
' → logprob: -11.00156021118164
    8. '\n' → logprob: -11.75156021118164
    9. '  
' → logprob: -11.87656021118164
    10. 'if' → logprob: -12.50156021118164

Token 171: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019221604452468455
    2. '
' → logprob: -9.375192642211914
    3. '           ' → logprob: -10.000192642211914
    4. '   ' → logprob: -10.500192642211914
    5. '<|end|>' → logprob: -11.375192642211914
    6. 'if' → logprob: -12.750192642211914
    7. '        
' → logprob: -12.875192642211914
    8. '	' → logprob: -13.000192642211914
    9. '    
' → logprob: -13.125192642211914
    10. '```' → logprob: -13.375192642211914

Token 172: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12906871736049652
    2. '   ' → logprob: -2.879068613052368
    3. 'if' (adapté à ' if') → logprob: -2.879068613052368
    4. ' if' → logprob: -4.754068851470947
    5. '```' → logprob: -10.754068374633789
    6. '#' → logprob: -10.879068374633789
    7. '	if' → logprob: -11.004068374633789
    8. '        
' → logprob: -12.004068374633789
    9. ' ' → logprob: -12.129068374633789
    10. '
' → logprob: -12.379068374633789

Token 173: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.06197104603052139
    2. 'start' → logprob: -2.8119709491729736
    3. '   ' → logprob: -13.561970710754395
    4. ' ' → logprob: -13.811970710754395
    5. '    ' → logprob: -14.436970710754395
    6. '	start' → logprob: -15.936970710754395
    7. '(start' → logprob: -16.31197166442871
    8. '  ' → logprob: -16.56197166442871
    9. ' ' → logprob: -17.31197166442871
    10. '       ' → logprob: -17.43697166442871

Token 174: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.018150178715586662
    2. 'is' → logprob: -4.018150329589844
    3. ')' → logprob: -16.018150329589844
    4. '	is' → logprob: -17.143150329589844
    5. ' ' → logprob: -17.393150329589844
    6. '=' → logprob: -17.643150329589844
    7. 'not' → logprob: -17.768150329589844
    8. '        ' → logprob: -18.643150329589844
    9. 'Is' → logprob: -18.768150329589844
    10. ' not' → logprob: -18.893150329589844

Token 175: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.17977827787399292
    2. ' not' → logprob: -1.8047783374786377
    3. '0' → logprob: -11.429778099060059
    4. 'None' → logprob: -11.804778099060059
    5. 'Not' → logprob: -12.179778099060059
    6. ' ' → logprob: -13.054778099060059
    7. '	not' → logprob: -13.429778099060059
    8. '   ' → logprob: -13.429778099060059
    9. 'n' → logprob: -13.804778099060059
    10. '!' → logprob: -14.304778099060059

Token 176: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.7968066206085496e-05
    2. ' None' → logprob: -10.500027656555176
    3. '_None' → logprob: -15.500027656555176
    4. '(None' → logprob: -15.875027656555176
    5. '=None' → logprob: -17.250028610229492
    6. 'none' → logprob: -17.375028610229492
    7. '_none' → logprob: -17.500028610229492
    8. '   ' → logprob: -18.000028610229492
    9. '.None' → logprob: -19.250028610229492
    10. ' ' → logprob: -20.250028610229492

Token 177: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6993110179901123
    2. '           ' → logprob: -1.0743110179901123
    3. ':
' → logprob: -1.8243110179901123
    4. ':left' → logprob: -10.324311256408691
    5. '   ' → logprob: -10.449311256408691
    6. 'left' → logprob: -10.574311256408691
    7. '):
' → logprob: -10.699311256408691
    8. '       ' → logprob: -10.824311256408691
    9. '               ' → logprob: -11.074311256408691
    10. ':

' → logprob: -11.324311256408691

Token 178: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07107070088386536
    2. 'left' → logprob: -3.071070671081543
    3. ' left' → logprob: -3.821070671081543
    4. '   ' → logprob: -8.196070671081543
    5. '       ' → logprob: -10.321070671081543
    6. '               ' → logprob: -11.446070671081543
    7. '	left' → logprob: -12.696070671081543
    8. '          ' → logprob: -13.321070671081543
    9. ' ' → logprob: -13.696070671081543
    10. '(left' → logprob: -14.196070671081543

Token 179: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.18747927248477936
    2. ' left' → logprob: -1.8124792575836182
    3. '           ' → logprob: -4.937479496002197
    4. '               ' → logprob: -7.937479496002197
    5. '   ' → logprob: -9.062479019165039
    6. '       ' → logprob: -10.312479019165039
    7. '	left' → logprob: -11.312479019165039
    8. ' ' → logprob: -12.312479019165039
    9. '(left' → logprob: -12.812479019165039
    10. '[left' → logprob: -13.312479019165039

Token 180: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -8.061054359131958e-06
    2. 'words' → logprob: -11.875007629394531
    3. 'append' → logprob: -14.875007629394531
    4. 'start' → logprob: -15.750007629394531
    5. '_tokens' → logprob: -16.00000762939453
    6. '   ' → logprob: -16.50000762939453
    7. '.append' → logprob: -16.62500762939453
    8. 'Words' → logprob: -16.62500762939453
    9. 'word' → logprob: -17.25000762939453
    10. '_word' → logprob: -17.37500762939453

Token 181: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.5577775128767826e-06
    2. '.' → logprob: -12.250005722045898
    3. 'append' → logprob: -14.250005722045898
    4. ' .' → logprob: -16.1250057220459
    5. '.app' → logprob: -19.6250057220459
    6. '.ap' → logprob: -20.7500057220459
    7. '.Append' → logprob: -21.2500057220459
    8. ' append' → logprob: -21.5000057220459
    9. 'Append' → logprob: -21.8750057220459
    10. '.extend' → logprob: -22.5000057220459

Token 182: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.5927812457084656
    2. '(start' → logprob: -0.8427812457084656
    3. '(' → logprob: -4.092781066894531
    4. ' (' → logprob: -12.342781066894531
    5. '(Start' → logprob: -13.217781066894531
    6. '(
' → logprob: -14.342781066894531
    7. '(None' → logprob: -15.092781066894531
    8. ' ' → logprob: -15.092781066894531
    9. '(end' → logprob: -15.342781066894531
    10. '  ' → logprob: -16.71778106689453

Token 183: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -8.061054359131958e-06
    2. ' start' → logprob: -11.750007629394531
    3. '(start' → logprob: -17.00000762939453
    4. '   ' → logprob: -18.50000762939453
    5. '[start' → logprob: -19.50000762939453
    6. ' ' → logprob: -20.37500762939453
    7. '  ' → logprob: -21.37500762939453
    8. '0' → logprob: -21.37500762939453
    9. '	start' → logprob: -21.50000762939453
    10. 'left' → logprob: -22.00000762939453

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.729906196298543e-06
    2. ' ,' → logprob: -12.000009536743164
    3. ',c' → logprob: -12.625009536743164
    4. ',
' → logprob: -16.875009536743164
    5. ',current' → logprob: -16.875009536743164
    6. '           ' → logprob: -17.625009536743164
    7. ',len' → logprob: -17.750009536743164
    8. ',end' → logprob: -18.125009536743164
    9. ',

' → logprob: -18.625009536743164
    10. '   ' → logprob: -18.625009536743164

Token 185: ' len' (ID: 4631)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.001435708487406373
    2. ' cursor' → logprob: -6.75143575668335
    3. 'len' → logprob: -8.251435279846191
    4. ' len' → logprob: -13.376435279846191
    5. '   ' → logprob: -13.626435279846191
    6. ' ' → logprob: -14.626435279846191
    7. 'cur' → logprob: -15.001435279846191
    8. '  ' → logprob: -15.376435279846191
    9. 'Cursor' → logprob: -15.501435279846191
    10. '	cursor' → logprob: -16.001436233520508

Token 186: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.016058536246418953
    2. 'left' → logprob: -4.141058444976807
    3. ' left' → logprob: -11.516058921813965
    4. '_left' → logprob: -12.141058921813965
    5. '[left' → logprob: -12.641058921813965
    6. '(' → logprob: -12.891058921813965
    7. '	left' → logprob: -13.141058921813965
    8. ':left' → logprob: -15.016058921813965
    9. 'Left' → logprob: -15.641058921813965
    10. '左' → logprob: -15.891058921813965

Token 187: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.01018489245325327
    2. 'left' → logprob: -5.5101847648620605
    3. '_left' → logprob: -5.6351847648620605
    4. '(left' → logprob: -6.1351847648620605
    5. 'part' → logprob: -8.135185241699219
    6. '[left' → logprob: -11.010185241699219
    7. ' left' → logprob: -11.260185241699219
    8. '_words' → logprob: -11.760185241699219
    9. 'Part' → logprob: -12.635185241699219
    10. ')' → logprob: -12.635185241699219

Token 188: ')))

' (ID: 46526)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.007205720990896225
    2. ')))' → logprob: -5.257205486297607
    3. ' ))' → logprob: -6.632205486297607
    4. ')' → logprob: -7.507205486297607
    5. '))
' → logprob: -9.757205963134766
    6. ' ' → logprob: -10.382205963134766
    7. ' )' → logprob: -12.757205963134766
    8. '()))' → logprob: -12.882205963134766
    9. '   ' → logprob: -13.007205963134766
    10. '))))' → logprob: -13.507205963134766

Token 189: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5869920253753662
    2. '<|end|>' → logprob: -1.2119920253753662
    3. '
' → logprob: -2.211992025375366
    4. '<|end|>' → logprob: -3.961992025375366
    5. '        
' → logprob: -4.461992263793945
    6. '   ' → logprob: -6.211992263793945
    7. '    
' → logprob: -6.336992263793945
    8. ')' → logprob: -7.586992263793945
    9. '```' → logprob: -7.586992263793945
    10. 'newline' → logprob: -7.836992263793945

Token 190: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0528843030333519
    2. '#' (adapté à ' #') → logprob: -3.677884340286255
    3. 'right' → logprob: -3.677884340286255
    4. ' right' → logprob: -7.802884101867676
    5. '   ' → logprob: -8.302884101867676
    6. '        
' → logprob: -8.802884101867676
    7. '
' → logprob: -9.052884101867676
    8. ' #' → logprob: -12.052884101867676
    9. '      ' → logprob: -12.177884101867676
    10. '    
' → logprob: -12.302884101867676

Token 191: ' Find' (ID: 9764)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6030730605125427
    2. 'right' → logprob: -0.9780730605125427
    3. '       ' → logprob: -3.2280731201171875
    4. 'Find' → logprob: -3.3530731201171875
    5. '   ' → logprob: -6.8530731201171875
    6. 'Right' → logprob: -7.4780731201171875
    7. ' right' → logprob: -8.228073120117188
    8. ' #' → logprob: -9.103073120117188
    9. 'def' → logprob: -9.978073120117188
    10. 'return' → logprob: -10.228073120117188

Token 192: ' words' (ID: 6391)
  Prédit: ' words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' words' → logprob: -0.004066171124577522
    2. 'words' → logprob: -5.754065990447998
    3. ' right' → logprob: -7.629065990447998
    4. '_words' → logprob: -8.129066467285156
    5. 'right' → logprob: -10.004066467285156
    6. ' ' → logprob: -10.754066467285156
    7. ' #' → logprob: -11.129066467285156
    8. '#' → logprob: -11.379066467285156
    9. ' word' → logprob: -13.379066467285156
    10. '   ' → logprob: -13.504066467285156

Token 193: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.034470196813344955
    2. 'in' → logprob: -3.4094700813293457
    3. '   ' → logprob: -8.034470558166504
    4. '       ' → logprob: -8.284470558166504
    5. ' right' → logprob: -9.534470558166504
    6. 'right' → logprob: -9.534470558166504
    7. '=' → logprob: -10.909470558166504
    8. ' ' → logprob: -11.159470558166504
    9. 'In' → logprob: -11.534470558166504
    10. '_right' → logprob: -11.784470558166504

Token 194: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.06199435144662857
    2. ' right' → logprob: -2.8119943141937256
    3. '(right' → logprob: -11.186994552612305
    4. '[right' → logprob: -12.436994552612305
    5. '	right' → logprob: -13.061994552612305
    6. 'left' → logprob: -13.311994552612305
    7. 'the' → logprob: -13.561994552612305
    8. ' the' → logprob: -14.061994552612305
    9. ' ' → logprob: -14.186994552612305
    10. '   ' → logprob: -14.311994552612305

Token 195: ' part' (ID: 997)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.00026085900026373565
    2. '_words' → logprob: -8.375261306762695
    3. 'part' → logprob: -11.000261306762695
    4. '_parts' → logprob: -11.750261306762695
    5. ' part' → logprob: -12.875261306762695
    6. '_' → logprob: -13.125261306762695
    7. '_text' → logprob: -15.250261306762695
    8. '   ' → logprob: -16.000261306762695
    9. 'words' → logprob: -16.125261306762695
    10. 'Part' → logprob: -16.125261306762695

Token 196: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007865801453590393
    2. '
' → logprob: -5.632865905761719
    3. 'right' → logprob: -6.257865905761719
    4. ' right' → logprob: -6.757865905761719
    5. 'start' → logprob: -7.257865905761719
    6. '   ' → logprob: -8.257865905761719
    7. '        
' → logprob: -9.257865905761719
    8. ' start' → logprob: -9.632865905761719
    9. '      ' → logprob: -11.507865905761719
    10. '    
' → logprob: -12.007865905761719

Token 197: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007320931763388216
    2. '
' → logprob: -8.125732421875
    3. '   ' → logprob: -8.625732421875
    4. 'start' → logprob: -8.750732421875
    5. '        
' → logprob: -10.000732421875
    6. '<|end|>' → logprob: -11.625732421875
    7. ' start' → logprob: -11.875732421875
    8. 'right' → logprob: -12.000732421875
    9. '      ' → logprob: -12.125732421875
    10. '    
' → logprob: -12.500732421875

Token 198: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.8194583058357239
    2. '       ' → logprob: -1.069458246231079
    3. ' right' → logprob: -1.569458246231079
    4. 'start' → logprob: -5.194458484649658
    5. '
' → logprob: -6.569458484649658
    6. ' start' → logprob: -7.194458484649658
    7. '   ' → logprob: -8.5694580078125
    8. 'Right' → logprob: -10.8194580078125
    9. '        
' → logprob: -11.3194580078125
    10. '	right' → logprob: -11.3194580078125

Token 199: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -4.961759259458631e-06
    2. '_part' → logprob: -12.625004768371582
    3. '_parts' → logprob: -14.000004768371582
    4. '_tokens' → logprob: -15.500004768371582
    5. 'words' → logprob: -15.750004768371582
    6. '_' → logprob: -15.875004768371582
    7. 'part' → logprob: -16.0000057220459
    8. '   ' → logprob: -16.6250057220459
    9. '_word' → logprob: -16.6250057220459
    10. 'def' → logprob: -17.1250057220459

Token 200: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692873179912567
    2. '=' → logprob: -2.1269288063049316
    3. '=[]' → logprob: -14.376928329467773
    4. '=[]
' → logprob: -16.626928329467773
    5. '   ' → logprob: -17.001928329467773
    6. ' ' → logprob: -17.876928329467773
    7. 's' → logprob: -19.751928329467773
    8. ')' → logprob: -19.751928329467773
    9. '  ' → logprob: -20.126928329467773
    10. 'import' → logprob: -20.126928329467773

Token 201: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.002024996792897582
    2. '[]' → logprob: -6.252025127410889
    3. ' []
' → logprob: -9.25202465057373
    4. ' []' → logprob: -15.50202465057373
    5. '([])
' → logprob: -15.87702465057373
    6. '[]

' → logprob: -16.377025604248047
    7. '[])
' → logprob: -17.002025604248047
    8. '=[]
' → logprob: -17.002025604248047
    9. '[' → logprob: -20.127025604248047
    10. ' []
' → logprob: -21.002025604248047

Token 202: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030047597363591194
    2. 'start' → logprob: -3.530047655105591
    3. ' start' → logprob: -8.405047416687012
    4. '
' → logprob: -10.155047416687012
    5. '   ' → logprob: -10.405047416687012
    6. '```' → logprob: -13.905047416687012
    7. 'def' → logprob: -14.655047416687012
    8. '
' → logprob: -15.030047416687012
    9. '           ' → logprob: -15.030047416687012
    10. ' ' → logprob: -15.030047416687012

Token 203: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.0002234437270089984
    2. '       ' → logprob: -9.125223159790039
    3. ' start' → logprob: -9.125223159790039
    4. '   ' → logprob: -13.000223159790039
    5. '
' → logprob: -13.125223159790039
    6. 'for' → logprob: -13.875223159790039
    7. '{
' → logprob: -16.75022315979004
    8. '```' → logprob: -17.00022315979004
    9. '[start' → logprob: -17.00022315979004
    10. ' ' → logprob: -17.37522315979004

Token 204: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3876730799674988
    2. '=' → logprob: -1.1376731395721436
    3. '=None' → logprob: -7.1376729011535645
    4. 'None' → logprob: -12.262673377990723
    5. ' None' → logprob: -13.137673377990723
    6. ' ' → logprob: -15.512673377990723
    7. '(None' → logprob: -16.137672424316406
    8. ' is' → logprob: -17.012672424316406
    9. '=False' → logprob: -17.262672424316406
    10. '   ' → logprob: -17.637672424316406

Token 205: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.001502598519437015
    2. ' None' → logprob: -6.501502513885498
    3. '0' → logprob: -15.751502990722656
    4. '(None' → logprob: -16.751502990722656
    5. '=None' → logprob: -17.501502990722656
    6. 'none' → logprob: -17.501502990722656
    7. '_None' → logprob: -17.751502990722656
    8. '   ' → logprob: -19.126502990722656
    9. ',None' → logprob: -19.626502990722656
    10. '.None' → logprob: -19.876502990722656

Token 206: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02656070701777935
    2. ' for' → logprob: -4.1515607833862305
    3. 'for' → logprob: -4.6515607833862305
    4. '
' → logprob: -7.1515607833862305
    5. '        
' → logprob: -10.02656078338623
    6. '<|end|>' → logprob: -10.15156078338623
    7. '   ' → logprob: -11.15156078338623
    8. '<|end|>' → logprob: -11.65156078338623
    9. ',' → logprob: -12.52656078338623
    10. '           ' → logprob: -12.65156078338623

Token 207: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4869890511035919
    2. '       ' → logprob: -0.9869890213012695
    3. ' for' → logprob: -4.3619890213012695
    4. '	for' → logprob: -10.11198902130127
    5. '   ' → logprob: -11.73698902130127
    6. '
' → logprob: -11.73698902130127
    7. '<|end|>' → logprob: -11.98698902130127
    8. 'For' → logprob: -12.61198902130127
    9. '        
' → logprob: -13.36198902130127
    10. '	' → logprob: -13.48698902130127

Token 208: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00036263695801608264
    2. '       ' → logprob: -8.500362396240234
    3. ' for' → logprob: -8.750362396240234
    4. '	for' → logprob: -14.250362396240234
    5. '   ' → logprob: -16.875362396240234
    6. '
' → logprob: -18.250362396240234
    7. 'For' → logprob: -18.625362396240234
    8. '```' → logprob: -19.000362396240234
    9. '0' → logprob: -19.750362396240234
    10. '           ' → logprob: -20.125362396240234

Token 209: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11358896642923355
    2. ' i' → logprob: -2.23858904838562
    3. 'j' → logprob: -7.488588809967041
    4. ' j' → logprob: -9.2385892868042
    5. ',' → logprob: -9.3635892868042
    6. '   ' → logprob: -11.6135892868042
    7. ' ' → logprob: -11.8635892868042
    8. '  ' → logprob: -13.4885892868042
    9. 'index' → logprob: -13.8635892868042
    10. 'idx' → logprob: -14.1135892868042

Token 210: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.3358446166384965e-05
    2. ' ,' → logprob: -10.000053405761719
    3. ' in' → logprob: -12.250053405761719
    4. 'in' → logprob: -14.000053405761719
    5. '_,' → logprob: -14.125053405761719
    6. ',c' → logprob: -15.125053405761719
    7. '=' → logprob: -15.125053405761719
    8. '   ' → logprob: -15.250053405761719
    9. ',
' → logprob: -16.62505340576172
    10. '‌,' → logprob: -16.75005340576172

Token 211: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.142708420753479
    2. 'c' → logprob: -2.0177083015441895
    3. ' ' → logprob: -11.642708778381348
    4. '(c' → logprob: -12.142708778381348
    5. ',' → logprob: -12.517708778381348
    6. 'token' → logprob: -12.517708778381348
    7. '<|end|>' → logprob: -13.205208778381348
    8. '```' → logprob: -13.517708778381348
    9. ' (' → logprob: -14.205208778381348
    10. '`' → logprob: -14.517708778381348

Token 212: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002264686394482851
    2. 'in' → logprob: -6.127264499664307
    3. ',' → logprob: -9.502264976501465
    4. ' ' → logprob: -12.752264976501465
    5. ' ,' → logprob: -14.127264976501465
    6. '   ' → logprob: -14.752264976501465
    7. '	in' → logprob: -15.002264976501465
    8. '  ' → logprob: -15.502264976501465
    9. '    ' → logprob: -16.25226402282715
    10. '<|end|>' → logprob: -16.50226402282715

Token 213: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0485873706638813
    2. ' enumerate' → logprob: -3.0485873222351074
    3. 'en' → logprob: -18.173587799072266
    4. 'enum' → logprob: -18.548587799072266
    5. '(en' → logprob: -18.923587799072266
    6. 'Enumer' → logprob: -19.298587799072266
    7. '.enumer' → logprob: -19.423587799072266
    8. ' enumer' → logprob: -20.173587799072266
    9. 'enqueue' → logprob: -20.298587799072266
    10. '```' → logprob: -21.048587799072266

Token 214: '(right' (ID: 52104)
  Prédit: '(right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(right' → logprob: -0.0006588232354260981
    2. 'right' → logprob: -7.375658988952637
    3. ' right' → logprob: -10.625658988952637
    4. '(' → logprob: -12.750658988952637
    5. ' (' → logprob: -13.250658988952637
    6. '	right' → logprob: -13.625658988952637
    7. '[right' → logprob: -14.125658988952637
    8. ',right' → logprob: -14.625658988952637
    9. '(left' → logprob: -14.875658988952637
    10. ':right' → logprob: -15.375658988952637

Token 215: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.04773795232176781
    2. 'right' → logprob: -3.2977378368377686
    3. '_right' → logprob: -4.797738075256348
    4. 'part' → logprob: -6.672738075256348
    5. ')' → logprob: -9.797738075256348
    6. '[right' → logprob: -10.547738075256348
    7. ' right' → logprob: -10.672738075256348
    8. '(right' → logprob: -10.922738075256348
    9. ' part' → logprob: -13.172738075256348
    10. '(part' → logprob: -13.672738075256348

Token 216: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16371707618236542
    2. '):' → logprob: -1.9137170314788818
    3. ':' → logprob: -6.163717269897461
    4. '       ' → logprob: -6.913717269897461
    5. ':
' → logprob: -8.913717269897461
    6. '():
' → logprob: -9.538717269897461
    7. '):
' → logprob: -9.788717269897461
    8. '   ' → logprob: -9.913717269897461
    9. '<|end|>' → logprob: -11.288717269897461
    10. '():' → logprob: -11.413717269897461

Token 217: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00026777281891554594
    2. '       ' → logprob: -8.37526798248291
    3. '   ' → logprob: -11.00026798248291
    4. '	       ' → logprob: -12.12526798248291
    5. '               ' → logprob: -12.50026798248291
    6. ' if' → logprob: -13.00026798248291
    7. '<|end|>' → logprob: -13.12526798248291
    8. '          ' → logprob: -13.37526798248291
    9. '         ' → logprob: -13.37526798248291
    10. ' ' → logprob: -13.62526798248291

Token 218: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07000156491994858
    2. '           ' → logprob: -2.8200016021728516
    3. 'if' (adapté à ' if') → logprob: -5.070001602172852
    4. '               ' → logprob: -6.445001602172852
    5. '            ' → logprob: -9.945001602172852
    6. ' ' → logprob: -10.820001602172852
    7. '       ' → logprob: -10.820001602172852
    8. '   ' → logprob: -11.695001602172852
    9. '          ' → logprob: -11.945001602172852
    10. '        ' → logprob: -12.070001602172852

Token 219: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.17974911630153656
    2. 'c' → logprob: -1.8047491312026978
    3. ' ' → logprob: -13.304749488830566
    4. '	c' → logprob: -14.054749488830566
    5. '(c' → logprob: -14.867249488830566
    6. '```' → logprob: -15.554749488830566
    7. 'not' → logprob: -15.929749488830566
    8. '   ' → logprob: -15.992249488830566
    9. ' ' → logprob: -16.24224853515625
    10. '  ' → logprob: -16.55474853515625

Token 220: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.34869101643562317
    2. '!=' → logprob: -1.2236909866333008
    3. '!='' → logprob: -8.5986909866333
    4. ' ' → logprob: -11.2236909866333
    5. ' not' → logprob: -11.9736909866333
    6. ' ' → logprob: -11.9736909866333
    7. ')!=' → logprob: -12.3486909866333
    8. '()!=' → logprob: -12.3486909866333
    9. 'not' → logprob: -12.4736909866333
    10. ')' → logprob: -12.4736909866333

Token 221: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0021999788004904985
    2. ' '' → logprob: -6.127200126647949
    3. '"' → logprob: -11.25220012664795
    4. ''s' → logprob: -13.75220012664795
    5. ''end' → logprob: -16.127199172973633
    6. '('' → logprob: -16.377199172973633
    7. ''a' → logprob: -16.502199172973633
    8. ' ' → logprob: -16.502199172973633
    9. ''S' → logprob: -16.752199172973633
    10. ''user' → logprob: -17.002199172973633

Token 222: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06216676905751228
    2. ' '' → logprob: -2.812166690826416
    3. ''s' → logprob: -9.062167167663574
    4. ' ' → logprob: -9.562167167663574
    5. '"' → logprob: -13.062167167663574
    6. ''>' → logprob: -13.437167167663574
    7. ' '>' → logprob: -13.687167167663574
    8. 'space' → logprob: -13.812167167663574
    9. '<|end|>' → logprob: -13.812167167663574
    10. ''end' → logprob: -14.437167167663574

Token 223: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07141038775444031
    2. ':
' → logprob: -2.6964104175567627
    3. '               ' → logprob: -6.571410179138184
    4. ' :' → logprob: -10.946410179138184
    5. '):
' → logprob: -11.071410179138184
    6. '):' → logprob: -11.196410179138184
    7. ' :
' → logprob: -11.446410179138184
    8. ':

' → logprob: -12.071410179138184
    9. '           ' → logprob: -12.696410179138184
    10. '<|end|>' → logprob: -13.696410179138184

Token 224: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00013524403038900346
    2. '           ' → logprob: -10.00013542175293
    3. 'if' → logprob: -10.00013542175293
    4. ' if' → logprob: -10.50013542175293
    5. '              ' → logprob: -11.50013542175293
    6. '```' → logprob: -13.12513542175293
    7. '<|end|>' → logprob: -13.37513542175293
    8. '                ' → logprob: -14.12513542175293
    9. '                   ' → logprob: -14.87513542175293
    10. '             ' → logprob: -15.12513542175293

Token 225: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12277019768953323
    2. '               ' → logprob: -2.247770309448242
    3. 'if' (adapté à ' if') → logprob: -4.622770309448242
    4. '           ' → logprob: -10.747770309448242
    5. '              ' → logprob: -10.997770309448242
    6. '                ' → logprob: -11.247770309448242
    7. ' ' → logprob: -11.872770309448242
    8. '                   ' → logprob: -12.122770309448242
    9. '<|end|>' → logprob: -13.122770309448242
    10. '            ' → logprob: -13.122770309448242

Token 226: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.47407814860343933
    2. 'start' → logprob: -0.9740781784057617
    3. ' ' → logprob: -14.974078178405762
    4. 'Start' → logprob: -15.224078178405762
    5. '[start' → logprob: -15.474078178405762
    6. '(start' → logprob: -15.974078178405762
    7. '   ' → logprob: -16.974077224731445
    8. 'None' → logprob: -17.599077224731445
    9. '  ' → logprob: -17.849077224731445
    10. ' not' → logprob: -17.974077224731445

Token 227: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0008112939540296793
    2. 'is' → logprob: -7.1258111000061035
    3. '=None' → logprob: -13.250811576843262
    4. 'None' → logprob: -13.625811576843262
    5. ' =' → logprob: -14.000811576843262
    6. '=' → logprob: -14.000811576843262
    7. ' None' → logprob: -14.125811576843262
    8. '<|end|>' → logprob: -14.125811576843262
    9. ' ' → logprob: -15.000811576843262
    10. '==' → logprob: -15.250811576843262

Token 228: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.07889077812433243
    2. ' None' → logprob: -2.578890800476074
    3. '=None' → logprob: -15.203890800476074
    4. ' ' → logprob: -15.328890800476074
    5. 'i' → logprob: -15.578890800476074
    6. '_None' → logprob: -15.828890800476074
    7. '(None' → logprob: -16.078889846801758
    8. '   ' → logprob: -17.328889846801758
    9. 'is' → logprob: -17.953889846801758
    10. ',None' → logprob: -18.078889846801758

Token 229: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6224425435066223
    2. ':' → logprob: -0.9974425435066223
    3. ':
' → logprob: -2.3724424839019775
    4. '               ' → logprob: -7.747442722320557
    5. '<|end|>' → logprob: -7.997442722320557
    6. '                       ' → logprob: -8.747442245483398
    7. '                  ' → logprob: -9.122442245483398
    8. '           ' → logprob: -9.622442245483398
    9. '):
' → logprob: -9.997442245483398
    10. '=' → logprob: -10.872442245483398

Token 230: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -9.531813702778891e-05
    2. '               ' → logprob: -9.62509536743164
    3. '                       ' → logprob: -10.87509536743164
    4. '                  ' → logprob: -12.62509536743164
    5. 'i' → logprob: -13.25009536743164
    6. '           ' → logprob: -13.75009536743164
    7. '                    ' → logprob: -14.12509536743164
    8. '                 ' → logprob: -14.50009536743164
    9. '       ' → logprob: -14.87509536743164
    10. '```' → logprob: -15.00009536743164

Token 231: ' start' (ID: 1604)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.49879682064056396
    2. 'i' → logprob: -0.998796820640564
    3. '                   ' → logprob: -4.3737969398498535
    4. 'start' (adapté à ' start') → logprob: -4.6237969398498535
    5. '               ' → logprob: -6.6237969398498535
    6. ' start' → logprob: -7.7487969398498535
    7. '                       ' → logprob: -9.373796463012695
    8. '                ' → logprob: -9.998796463012695
    9. '                 ' → logprob: -10.373796463012695
    10. ' ' → logprob: -11.123796463012695

Token 232: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519291639328003
    2. '=' → logprob: -1.5019291639328003
    3. ' ' → logprob: -17.501928329467773
    4. '=i' → logprob: -18.001928329467773
    5. '<|end|>' → logprob: -18.376928329467773
    6. ' =
' → logprob: -18.501928329467773
    7. '＝' → logprob: -19.251928329467773
    8. '=True' → logprob: -19.251928329467773
    9. '=
' → logprob: -19.376928329467773
    10. '=None' → logprob: -19.501928329467773

Token 233: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00861468818038702
    2. ' i' → logprob: -4.758614540100098
    3. '0' → logprob: -16.383615493774414
    4. '                   ' → logprob: -17.133615493774414
    5. ' ' → logprob: -17.383615493774414
    6. '               ' → logprob: -18.008615493774414
    7. '           ' → logprob: -18.258615493774414
    8. '	i' → logprob: -19.383615493774414
    9. '   ' → logprob: -19.508615493774414
    10. 'I' → logprob: -20.633615493774414

Token 234: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8096349239349365
    2. '<|end|>' → logprob: -0.8096349239349365
    3. '       ' → logprob: -3.3096349239349365
    4. '               ' → logprob: -3.4346349239349365
    5. '                   ' → logprob: -3.5596349239349365
    6. '<|end|>' → logprob: -5.059635162353516
    7. ')' → logprob: -6.559635162353516
    8. '   ' → logprob: -7.184635162353516
    9. '
' → logprob: -7.309635162353516
    10. '          ' → logprob: -7.559635162353516

Token 235: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006627569673582911
    2. '               ' → logprob: -7.375662803649902
    3. '       ' → logprob: -10.375662803649902
    4. '```' → logprob: -13.250662803649902
    5. '                   ' → logprob: -13.750662803649902
    6. '<|end|>' → logprob: -14.625662803649902
    7. '          ' → logprob: -14.875662803649902
    8. '
' → logprob: -15.625662803649902
    9. '   ' → logprob: -15.625662803649902
    10. '            ' → logprob: -15.750662803649902

Token 236: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003154546022415161
    2. 'else' (adapté à ' else') → logprob: -6.128154754638672
    3. '       ' → logprob: -7.628154754638672
    4. '               ' → logprob: -7.753154754638672
    5. ' else' → logprob: -10.253154754638672
    6. '```' → logprob: -11.753154754638672
    7. '
' → logprob: -12.503154754638672
    8. 'elif' → logprob: -13.003154754638672
    9. '          ' → logprob: -13.628154754638672
    10. '   ' → logprob: -13.878154754638672

Token 237: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012566609075292945
    2. ':
' → logprob: -7.501256465911865
    3. ':' → logprob: -7.626256465911865
    4. '<|end|>' → logprob: -8.751256942749023
    5. '           ' → logprob: -11.126256942749023
    6. '              ' → logprob: -11.251256942749023
    7. '```' → logprob: -11.876256942749023
    8. '                ' → logprob: -11.876256942749023
    9. '                   ' → logprob: -12.126256942749023
    10. '       ' → logprob: -13.501256942749023

Token 238: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.895480277715251e-06
    2. '              ' → logprob: -12.750008583068848
    3. '                ' → logprob: -13.250008583068848
    4. '           ' → logprob: -13.375008583068848
    5. '                   ' → logprob: -13.750008583068848
    6. '```' → logprob: -13.750008583068848
    7. '             ' → logprob: -15.750008583068848
    8. ' if' → logprob: -16.000009536743164
    9. '       ' → logprob: -16.000009536743164
    10. '            ' → logprob: -16.375009536743164

Token 239: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019006958231329918
    2. ' if' → logprob: -4.019006729125977
    3. 'if' (adapté à ' if') → logprob: -7.519006729125977
    4. '                   ' → logprob: -8.394006729125977
    5. '                ' → logprob: -9.769006729125977
    6. '           ' → logprob: -11.269006729125977
    7. '              ' → logprob: -12.269006729125977
    8. '```' → logprob: -12.644006729125977
    9. ' ' → logprob: -12.769006729125977
    10. '   ' → logprob: -13.519006729125977

Token 240: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.20141451060771942
    2. 'start' → logprob: -1.7014144659042358
    3. '(start' → logprob: -14.326414108276367
    4. '[start' → logprob: -14.701414108276367
    5. 'Start' → logprob: -16.326414108276367
    6. ' ' → logprob: -16.451414108276367
    7. '_start' → logprob: -17.576414108276367
    8. '	start' → logprob: -17.701414108276367
    9. ':start' → logprob: -17.701414108276367
    10. '=start' → logprob: -18.076414108276367

Token 241: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.005237668287009001
    2. 'is' → logprob: -5.255237579345703
    3. '                   ' → logprob: -12.880237579345703
    4. '                ' → logprob: -13.880237579345703
    5. '               ' → logprob: -15.130237579345703
    6. '                    ' → logprob: -16.505237579345703
    7. ' not' → logprob: -17.380237579345703
    8. '                 ' → logprob: -17.505237579345703
    9. '                  ' → logprob: -17.630237579345703
    10. '<|end|>' → logprob: -17.880237579345703

Token 242: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.4741736352443695
    2. ' not' → logprob: -0.9741736650466919
    3. 'None' → logprob: -9.349173545837402
    4. 'Not' → logprob: -11.724173545837402
    5. ' None' → logprob: -14.224173545837402
    6. '	not' → logprob: -15.599173545837402
    7. ' ' → logprob: -15.724173545837402
    8. '_not' → logprob: -15.974173545837402
    9. '   ' → logprob: -16.34917449951172
    10. 'False' → logprob: -16.34917449951172

Token 243: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0004315036640036851
    2. ' None' → logprob: -7.750431537628174
    3. '(None' → logprob: -14.625431060791016
    4. '_None' → logprob: -15.500431060791016
    5. 'not' → logprob: -16.500431060791016
    6. 'none' → logprob: -18.125431060791016
    7. '.None' → logprob: -18.250431060791016
    8. '=None' → logprob: -18.625431060791016
    9. '_none' → logprob: -18.875431060791016
    10. 'Not' → logprob: -19.000431060791016

Token 244: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0009657727787271142
    2. ',' → logprob: -7.875965595245361
    3. ':
' → logprob: -8.37596607208252
    4. '               ' → logprob: -9.62596607208252
    5. '):
' → logprob: -9.75096607208252
    6. '<|end|>' → logprob: -10.00096607208252
    7. ')' → logprob: -10.25096607208252
    8. '                  ' → logprob: -10.25096607208252
    9. '                       ' → logprob: -10.37596607208252
    10. ':' → logprob: -11.00096607208252

Token 245: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0001290454383706674
    2. '               ' → logprob: -9.500128746032715
    3. 'right' → logprob: -10.875128746032715
    4. '                       ' → logprob: -11.250128746032715
    5. ' right' → logprob: -11.500128746032715
    6. '                  ' → logprob: -12.250128746032715
    7. '   ' → logprob: -13.250128746032715
    8. '           ' → logprob: -13.375128746032715
    9. '                 ' → logprob: -13.750128746032715
    10. '                    ' → logprob: -14.125128746032715

Token 246: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.5762416124343872
    2. 'right' (adapté à ' right') → logprob: -0.8262416124343872
    3. '                   ' → logprob: -8.326241493225098
    4. '                       ' → logprob: -10.326241493225098
    5. '               ' → logprob: -10.951241493225098
    6. '	right' → logprob: -12.451241493225098
    7. '[right' → logprob: -12.576241493225098
    8. 'Right' → logprob: -14.201241493225098
    9. '(right' → logprob: -15.076241493225098
    10. '.right' → logprob: -15.326241493225098

Token 247: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -4.008129963040119e-06
    2. '_right' → logprob: -13.000003814697266
    3. '_tokens' → logprob: -14.250003814697266
    4. 'right' → logprob: -14.750003814697266
    5. 'words' → logprob: -15.375003814697266
    6. '               ' → logprob: -16.875003814697266
    7. '_chars' → logprob: -17.125003814697266
    8. '.append' → logprob: -17.125003814697266
    9. '_users' → logprob: -17.375003814697266
    10. '_parts' → logprob: -17.375003814697266

Token 248: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.961759259458631e-06
    2. '.' → logprob: -12.250004768371582
    3. 'append' → logprob: -16.5000057220459
    4. '.app' → logprob: -17.1250057220459
    5. ' .' → logprob: -17.6250057220459
    6. '.add' → logprob: -17.8750057220459
    7. ').' → logprob: -18.3750057220459
    8. '.extend' → logprob: -18.6250057220459
    9. '.Append' → logprob: -18.8750057220459
    10. '.ap' → logprob: -19.0000057220459

Token 249: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.001933397026732564
    2. '(start' → logprob: -6.251933574676514
    3. '(' → logprob: -12.376933097839355
    4. ' ((' → logprob: -15.126933097839355
    5. ' (' → logprob: -16.001934051513672
    6. '[(' → logprob: -16.501934051513672
    7. 'start' → logprob: -16.876934051513672
    8. '(
' → logprob: -17.376934051513672
    9. '(Start' → logprob: -17.626934051513672
    10. ' ' → logprob: -17.751934051513672

Token 250: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00010247035970678553
    2. '(start' → logprob: -9.250102043151855
    3. ' start' → logprob: -12.000102043151855
    4. '[start' → logprob: -16.125102996826172
    5. '	start' → logprob: -19.000102996826172
    6. '=start' → logprob: -19.125102996826172
    7. ',start' → logprob: -19.250102996826172
    8. ':start' → logprob: -20.375102996826172
    9. ' (' → logprob: -21.500102996826172
    10. '/start' → logprob: -21.625102996826172

Token 251: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.054500666621607e-06
    2. ' ,' → logprob: -13.25000286102295
    3. '<|end|>' → logprob: -14.87500286102295
    4. ',
' → logprob: -15.00000286102295
    5. ',end' → logprob: -16.250003814697266
    6. ',start' → logprob: -16.375003814697266
    7. '‌,' → logprob: -16.750003814697266
    8. ',c' → logprob: -17.500003814697266
    9. ',next' → logprob: -17.500003814697266
    10. '),' → logprob: -17.500003814697266

Token 252: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06197183206677437
    2. ' i' → logprob: -2.81197190284729
    3. '                   ' → logprob: -13.686971664428711
    4. '               ' → logprob: -13.686971664428711
    5. '           ' → logprob: -14.186971664428711
    6. 'None' → logprob: -15.436971664428711
    7. '   ' → logprob: -15.686971664428711
    8. ' ' → logprob: -15.936971664428711
    9. ' None' → logprob: -16.18697166442871
    10. '       ' → logprob: -16.31197166442871

Token 253: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03817965090274811
    2. '))
' → logprob: -3.288179636001587
    3. ')' → logprob: -9.038179397583008
    4. '                   ' → logprob: -11.538179397583008
    5. '))

' → logprob: -12.038179397583008
    6. ')
' → logprob: -13.663179397583008
    7. ' ))' → logprob: -14.413179397583008
    8. '               ' → logprob: -14.788179397583008
    9. '<|end|>' → logprob: -15.038179397583008
    10. '))
' → logprob: -15.163179397583008

Token 254: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0001310719089815393
    2. '               ' → logprob: -9.375130653381348
    3. '           ' → logprob: -10.750130653381348
    4. '<|end|>' → logprob: -11.750130653381348
    5. '       ' → logprob: -12.125130653381348
    6. '                       ' → logprob: -12.875130653381348
    7. '                  ' → logprob: -13.125130653381348
    8. '                    
' → logprob: -13.625130653381348
    9. '                    ' → logprob: -14.000130653381348
    10. '
' → logprob: -14.125130653381348

Token 255: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.6941438317298889
    2. 'start' (adapté à ' start') → logprob: -0.6941438317298889
    3. 'None' → logprob: -7.569143772125244
    4. ' None' → logprob: -7.694143772125244
    5. '[start' → logprob: -11.444144248962402
    6. '
' → logprob: -12.569144248962402
    7. '                   ' → logprob: -12.694144248962402
    8. '               ' → logprob: -12.944144248962402
    9. ' ' → logprob: -13.694144248962402
    10. '(start' → logprob: -13.944144248962402

Token 256: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740922451019287
    2. ' =' → logprob: -0.9740922451019287
    3. '=None' → logprob: -11.099092483520508
    4. '                   ' → logprob: -17.099092483520508
    5. ' ' → logprob: -17.599092483520508
    6. '=
' → logprob: -18.099092483520508
    7. '<|end|>' → logprob: -18.224092483520508
    8. ' None' → logprob: -18.349092483520508
    9. '=False' → logprob: -18.849092483520508
    10. '=True' → logprob: -18.974092483520508

Token 257: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0067154900170862675
    2. ' None' → logprob: -5.006715297698975
    3. '(None' → logprob: -17.256715774536133
    4. '=None' → logprob: -17.506715774536133
    5. '_None' → logprob: -17.506715774536133
    6. 'none' → logprob: -17.756715774536133
    7. '0' → logprob: -18.506715774536133
    8. ' ' → logprob: -19.506715774536133
    9. '_none' → logprob: -19.756715774536133
    10. ',None' → logprob: -20.006715774536133

Token 258: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.8312570318812504e-05
    2. '
' → logprob: -11.750018119812012
    3. '           ' → logprob: -12.500018119812012
    4. '<|end|>' → logprob: -13.000018119812012
    5. '               ' → logprob: -13.750018119812012
    6. '   ' → logprob: -14.000018119812012
    7. ')
' → logprob: -14.625018119812012
    8. '                   ' → logprob: -15.000018119812012
    9. '```' → logprob: -15.000018119812012
    10. ')' → logprob: -15.375018119812012

Token 259: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.7954958821064793e-05
    2. '<|end|>' → logprob: -12.000018119812012
    3. '           ' → logprob: -12.875018119812012
    4. '
' → logprob: -12.875018119812012
    5. '               ' → logprob: -13.250018119812012
    6. 'if' → logprob: -13.750018119812012
    7. '   ' → logprob: -13.875018119812012
    8. '        
' → logprob: -14.625018119812012
    9. '[' → logprob: -14.625018119812012
    10. '```' → logprob: -15.000018119812012

Token 260: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013417120499070734
    2. ' if' → logprob: -9.500134468078613
    3. '<|end|>' → logprob: -10.375134468078613
    4. '   ' → logprob: -11.500134468078613
    5. 'if' (adapté à ' if') → logprob: -11.750134468078613
    6. '           ' → logprob: -12.625134468078613
    7. '```' → logprob: -13.125134468078613
    8. '<|end|>' → logprob: -14.125134468078613
    9. '               ' → logprob: -14.250134468078613
    10. 'If' → logprob: -14.375134468078613

Token 261: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.20141363143920898
    2. 'start' → logprob: -1.701413631439209
    3. '(start' → logprob: -15.951414108276367
    4. 'Start' → logprob: -16.451414108276367
    5. '[start' → logprob: -16.576414108276367
    6. ' ' → logprob: -17.451414108276367
    7. '   ' → logprob: -17.951414108276367
    8. 'end' → logprob: -18.451414108276367
    9. '_start' → logprob: -18.451414108276367
    10. '	start' → logprob: -18.951414108276367

Token 262: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.00038014890742488205
    2. 'is' → logprob: -7.875380039215088
    3. '<|end|>' → logprob: -18.50037956237793
    4. ' not' → logprob: -19.00037956237793
    5. ' ' → logprob: -19.00037956237793
    6. '        ' → logprob: -20.00037956237793
    7. 'not' → logprob: -20.12537956237793
    8. '	is' → logprob: -20.12537956237793
    9. '```' → logprob: -20.25037956237793
    10. '<|end|>' → logprob: -21.25037956237793

Token 263: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3868740200996399
    2. 'not' → logprob: -1.1368739604949951
    3. 'Not' → logprob: -13.136874198913574
    4. 'None' → logprob: -14.511874198913574
    5. '_not' → logprob: -16.011873245239258
    6. '	not' → logprob: -16.136873245239258
    7. '!' → logprob: -16.386873245239258
    8. '...' → logprob: -17.011873245239258
    9. ' ' → logprob: -17.386873245239258
    10. '0' → logprob: -17.636873245239258

Token 264: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00012356207298580557
    2. ' None' → logprob: -9.000123977661133
    3. '(None' → logprob: -17.000123977661133
    4. '_None' → logprob: -17.625123977661133
    5. 'none' → logprob: -20.000123977661133
    6. '_none' → logprob: -20.500123977661133
    7. '=None' → logprob: -21.375123977661133
    8. '.None' → logprob: -22.250123977661133
    9. 'No' → logprob: -23.500123977661133
    10. 'not' → logprob: -23.500123977661133

Token 265: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5133041739463806
    2. ':
' → logprob: -1.3883042335510254
    3. ':' → logprob: -1.8883042335510254
    4. '          ' → logprob: -8.388303756713867
    5. 'right' → logprob: -9.138303756713867
    6. '               ' → logprob: -9.763303756713867
    7. ':right' → logprob: -10.138303756713867
    8. '):
' → logprob: -10.263303756713867
    9. '```' → logprob: -10.763303756713867
    10. ' right' → logprob: -10.763303756713867

Token 266: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0069115604273974895
    2. 'right' → logprob: -5.006911754608154
    3. ' right' → logprob: -8.631911277770996
    4. '               ' → logprob: -11.756911277770996
    5. '       ' → logprob: -13.006911277770996
    6. '          ' → logprob: -13.131911277770996
    7. '	right' → logprob: -13.131911277770996
    8. '   ' → logprob: -13.631911277770996
    9. '[right' → logprob: -14.506911277770996
    10. '                   ' → logprob: -14.506911277770996

Token 267: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.008200590498745441
    2. ' right' → logprob: -5.258200645446777
    3. '           ' → logprob: -6.008200645446777
    4. '               ' → logprob: -7.633200645446777
    5. '	right' → logprob: -12.008200645446777
    6. '       ' → logprob: -12.133200645446777
    7. '   ' → logprob: -12.508200645446777
    8. '                   ' → logprob: -13.383200645446777
    9. '[right' → logprob: -14.258200645446777
    10. 'Right' → logprob: -14.508200645446777

Token 268: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -2.696889623621246e-06
    2. '_tokens' → logprob: -13.75000286102295
    3. '_right' → logprob: -14.25000286102295
    4. 'right' → logprob: -15.25000286102295
    5. 'words' → logprob: -15.25000286102295
    6. '.append' → logprob: -15.75000286102295
    7. 'append' → logprob: -16.125001907348633
    8. 'Words' → logprob: -16.250001907348633
    9. '```' → logprob: -17.750001907348633
    10. '_word' → logprob: -19.000001907348633

Token 269: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.782141569303349e-05
    2. 'append' → logprob: -9.25009822845459
    3. '.' → logprob: -13.37509822845459
    4. 'app' → logprob: -17.250097274780273
    5. ' .' → logprob: -17.375097274780273
    6. 'Append' → logprob: -18.875097274780273
    7. '.app' → logprob: -19.250097274780273
    8. '.Append' → logprob: -19.250097274780273
    9. ' append' → logprob: -19.500097274780273
    10. '_append' → logprob: -19.750097274780273

Token 270: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.001568545587360859
    2. '(start' → logprob: -6.50156831741333
    3. '(' → logprob: -9.626568794250488
    4. ' (' → logprob: -15.876568794250488
    5. '(
' → logprob: -16.626567840576172
    6. 'start' → logprob: -18.126567840576172
    7. '(None' → logprob: -18.126567840576172
    8. '(end' → logprob: -18.126567840576172
    9. ' ' → logprob: -18.251567840576172
    10. ' ((' → logprob: -18.751567840576172

Token 271: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0002639582962729037
    2. '(start' → logprob: -8.250264167785645
    3. ' start' → logprob: -12.875264167785645
    4. '[start' → logprob: -15.750264167785645
    5. ' (' → logprob: -18.125263214111328
    6. ',start' → logprob: -19.375263214111328
    7. '(' → logprob: -19.625263214111328
    8. '=start' → logprob: -19.750263214111328
    9. 'len' → logprob: -20.250263214111328
    10. '0' → logprob: -20.375263214111328

Token 272: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.776898251497187e-05
    2. ',len' → logprob: -9.8750581741333
    3. ' ,' → logprob: -12.1250581741333
    4. ',
' → logprob: -14.5000581741333
    5. ',length' → logprob: -15.1250581741333
    6. 'len' → logprob: -17.125057220458984
    7. ',end' → logprob: -18.000057220458984
    8. ',

' → logprob: -18.500057220458984
    9. '           ' → logprob: -18.750057220458984
    10. '<|end|>' → logprob: -18.875057220458984

Token 273: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.011047935113310814
    2. ' len' → logprob: -4.511047840118408
    3. '(len' → logprob: -16.13604736328125
    4. '[len' → logprob: -18.01104736328125
    5. 'length' → logprob: -18.38604736328125
    6. '   ' → logprob: -18.63604736328125
    7. '	len' → logprob: -18.76104736328125
    8. ' ' → logprob: -19.01104736328125
    9. 'Len' → logprob: -19.63604736328125
    10. '=len' → logprob: -20.01104736328125

Token 274: '(right' (ID: 52104)
  Prédit: '(right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(right' → logprob: -0.000923965300898999
    2. 'right' → logprob: -7.000924110412598
    3. ' right' → logprob: -11.625924110412598
    4. '[right' → logprob: -13.625924110412598
    5. '(' → logprob: -13.750924110412598
    6. '	right' → logprob: -14.625924110412598
    7. '_right' → logprob: -14.875924110412598
    8. 'Right' → logprob: -15.875924110412598
    9. ',right' → logprob: -16.25092315673828
    10. ' (' → logprob: -16.37592315673828

Token 275: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.00011343709047650918
    2. 'right' → logprob: -9.875113487243652
    3. '_right' → logprob: -10.000113487243652
    4. 'part' → logprob: -11.250113487243652
    5. '(right' → logprob: -13.625113487243652
    6. '_words' → logprob: -13.875113487243652
    7. ')' → logprob: -14.625113487243652
    8. '[right' → logprob: -15.625113487243652
    9. '(part' → logprob: -15.875113487243652
    10. 'Part' → logprob: -16.125112533569336

Token 276: ')))

' (ID: 46526)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0008369080605916679
    2. '))
' → logprob: -7.1258368492126465
    3. ')' → logprob: -10.875837326049805
    4. ' ))' → logprob: -11.750837326049805
    5. '       ' → logprob: -12.875837326049805
    6. ')))' → logprob: -13.625837326049805
    7. '   ' → logprob: -14.000837326049805
    8. '           ' → logprob: -14.875837326049805
    9. '))

' → logprob: -15.000837326049805
    10. '()))' → logprob: -15.750837326049805

Token 277: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 278: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015955570852383971
    2. 'return' (adapté à ' return') → logprob: -6.876595497131348
    3. ' return' → logprob: -7.751595497131348
    4. '   ' → logprob: -9.001595497131348
    5. '
' → logprob: -12.376595497131348
    6. '	return' → logprob: -13.126595497131348
    7. '        
' → logprob: -13.751595497131348
    8. ' ' → logprob: -14.626595497131348
    9. '<|end|>' → logprob: -14.626595497131348
    10. '{return' → logprob: -15.376595497131348

Token 279: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.00640922412276268
    2. '(left' → logprob: -5.256409168243408
    3. ' left' → logprob: -6.756409168243408
    4. '[left' → logprob: -12.256409645080566
    5. ' (' → logprob: -12.881409645080566
    6. '   ' → logprob: -12.881409645080566
    7. '	left' → logprob: -14.131409645080566
    8. '(' → logprob: -14.631409645080566
    9. '_left' → logprob: -16.63140869140625
    10. ':left' → logprob: -16.63140869140625

Token 280: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -1.2113979209971149e-05
    2. '_left' → logprob: -11.875012397766113
    3. '_parts' → logprob: -12.750012397766113
    4. '_tokens' → logprob: -14.000012397766113
    5. '_w' → logprob: -14.375012397766113
    6. '_' → logprob: -15.375012397766113
    7. '```' → logprob: -16.250011444091797
    8. '_part' → logprob: -16.375011444091797
    9. '_weights' → logprob: -16.625011444091797
    10. '_word' → logprob: -16.625011444091797

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001652796781854704
    2. ',right' → logprob: -9.000164985656738
    3. ' ,' → logprob: -10.875164985656738
    4. ',
' → logprob: -11.125164985656738
    5. '       ' → logprob: -12.750164985656738
    6. '<|end|>' → logprob: -13.375164985656738
    7. ',left' → logprob: -13.875164985656738
    8. ',user' → logprob: -14.375164985656738
    9. '   ' → logprob: -14.500164985656738
    10. ',next' → logprob: -15.500164985656738

Token 282: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.6931484937667847
    2. 'right' → logprob: -0.6931484937667847
    3. '[right' → logprob: -14.443148612976074
    4. '       ' → logprob: -14.943148612976074
    5. '(right' → logprob: -15.693148612976074
    6. '	right' → logprob: -15.693148612976074
    7. '_right' → logprob: -17.318147659301758
    8. ',right' → logprob: -18.193147659301758
    9. '.right' → logprob: -18.443147659301758
    10. '   ' → logprob: -18.943147659301758

Token 283: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -8.180258191714529e-06
    2. '_parts' → logprob: -11.875008583068848
    3. '_part' → logprob: -14.625008583068848
    4. 'words' → logprob: -14.875008583068848
    5. '_word' → logprob: -16.25000762939453
    6. 't' → logprob: -16.37500762939453
    7. '_tokens' → logprob: -16.62500762939453
    8. '_w' → logprob: -16.75000762939453
    9. 'Words' → logprob: -17.25000762939453
    10. '_right' → logprob: -17.50000762939453

Token 284: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 285: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 286: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.583404541015625
    2. '
' → logprob: -1.583404541015625
    3. '<|end|>' → logprob: -1.958404541015625
    4. '    
' → logprob: -3.333404541015625
    5. '       ' → logprob: -3.958404541015625
    6. ' 
' → logprob: -4.333404541015625
    7. ' ' → logprob: -4.833404541015625
    8. 'newline' → logprob: -5.833404541015625
    9. '        
' → logprob: -6.083404541015625
    10. '<|end|>' → logprob: -6.083404541015625

Token 287: ' forward' (ID: 6687)
  Prédit: ' move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.03625616803765297
    2. 'move' → logprob: -4.161256313323975
    3. ' cursor' → logprob: -5.036256313323975
    4. ' split' → logprob: -5.911256313323975
    5. ' process' → logprob: -6.161256313323975
    6. ' word' → logprob: -6.661256313323975
    7. ' find' → logprob: -6.661256313323975
    8. ' next' → logprob: -7.161256313323975
    9. ' insert' → logprob: -7.286256313323975
    10. ' delete' → logprob: -7.411256313323975

Token 288: '_char' (ID: 23398)
  Prédit: '_word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.021884968504309654
    2. '_move' → logprob: -4.646884918212891
    3. '_char' → logprob: -5.271884918212891
    4. '_' → logprob: -5.771884918212891
    5. '_cursor' → logprob: -6.771884918212891
    6. '_delete' → logprob: -7.146884918212891
    7. '_words' → logprob: -8.14688491821289
    8. '()' → logprob: -8.52188491821289
    9. '(' → logprob: -8.64688491821289
    10. '_jump' → logprob: -8.89688491821289

Token 289: '(text' (ID: 13414)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0007182692061178386
    2. '():
' → logprob: -8.500718116760254
    3. '(' → logprob: -8.625718116760254
    4. ' ():' → logprob: -8.750718116760254
    5. '()' → logprob: -9.000718116760254
    6. '_' → logprob: -11.125718116760254
    7. '(cursor' → logprob: -12.375718116760254
    8. '_pos' → logprob: -12.500718116760254
    9. 's' → logprob: -12.625718116760254
    10. '(pos' → logprob: -12.625718116760254

Token 290: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.572941179503687e-05
    2. ' ,' → logprob: -10.125045776367188
    3. ',text' → logprob: -12.500045776367188
    4. '   ' → logprob: -14.250045776367188
    5. ',index' → logprob: -15.250045776367188
    6. ',
' → logprob: -15.500045776367188
    7. ',line' → logprob: -16.000045776367188
    8. '‌,' → logprob: -16.125045776367188
    9. '):' → logprob: -16.125045776367188
    10. ',pos' → logprob: -16.250045776367188

Token 291: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.160941481590271
    2. 'pos' → logprob: -2.4109416007995605
    3. ' cursor' → logprob: -2.9109416007995605
    4. ' pos' → logprob: -6.1609416007995605
    5. 'position' → logprob: -7.1609416007995605
    6. '   ' → logprob: -7.2859416007995605
    7. 'index' → logprob: -8.535941123962402
    8. 'cur' → logprob: -8.660941123962402
    9. 'current' → logprob: -9.285941123962402
    10. ' ' → logprob: -9.410941123962402

Token 292: '):
' (ID: 1883)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -6.869017852295656e-06
    2. '):' → logprob: -12.500006675720215
    3. 'pos' → logprob: -13.250006675720215
    4. ',' → logprob: -14.875006675720215
    5. 'Pos' → logprob: -14.875006675720215
    6. '):
' → logprob: -15.375006675720215
    7. '_' → logprob: -15.875006675720215
    8. '_position' → logprob: -16.00000762939453
    9. '   ' → logprob: -17.00000762939453
    10. '_,' → logprob: -17.37500762939453

Token 293: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23171991109848022
    2. '   ' → logprob: -2.231719970703125
    3. ':' → logprob: -2.606719970703125
    4. ':
' → logprob: -4.481719970703125
    5. ' :' → logprob: -5.356719970703125
    6. ' if' → logprob: -6.481719970703125
    7. ',' → logprob: -6.481719970703125
    8. ' cursor' → logprob: -7.231719970703125
    9. '    ' → logprob: -7.481719970703125
    10. '):' → logprob: -7.481719970703125

Token 294: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6975907683372498
    2. '       ' → logprob: -1.5725908279418945
    3. 'if' (adapté à ' if') → logprob: -1.9475908279418945
    4. 'return' → logprob: -2.5725908279418945
    5. ' return' → logprob: -2.6975908279418945
    6. '   ' → logprob: -4.8225908279418945
    7. '
' → logprob: -9.697590827941895
    8. '	return' → logprob: -9.947590827941895
    9. '	if' → logprob: -9.947590827941895
    10. ' cursor' → logprob: -10.322590827941895

Token 295: ' cursor' (ID: 14944)
  Prédit: ' cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cursor' → logprob: -0.0031796174589544535
    2. 'cursor' → logprob: -5.753179550170898
    3. '	cursor' → logprob: -13.753179550170898
    4. '(cursor' → logprob: -14.378179550170898
    5. '_cursor' → logprob: -16.2531795501709
    6. ' ' → logprob: -16.6281795501709
    7. 'Cursor' → logprob: -17.1281795501709
    8. ' curs' → logprob: -17.6281795501709
    9. '```' → logprob: -17.7531795501709
    10. ' ' → logprob: -18.0031795501709

Token 296: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.026407703757286072
    2. '<' → logprob: -3.6514077186584473
    3. '<len' → logprob: -9.401407241821289
    4. '+' → logprob: -11.276407241821289
    5. ' +' → logprob: -12.026407241821289
    6. '<size' → logprob: -13.151407241821289
    7. '<n' → logprob: -13.651407241821289
    8. ' ' → logprob: -14.776407241821289
    9. '<int' → logprob: -15.026407241821289
    10. ')' → logprob: -15.026407241821289

Token 297: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2519303858280182
    2. ' len' → logprob: -1.5019303560256958
    3. '(len' → logprob: -14.501930236816406
    4. '   ' → logprob: -14.626930236816406
    5. '=len' → logprob: -15.501930236816406
    6. '	len' → logprob: -16.751930236816406
    7. '[len' → logprob: -16.876930236816406
    8. '    ' → logprob: -17.751930236816406
    9. ',len' → logprob: -18.251930236816406
    10. '<len' → logprob: -18.376930236816406

Token 298: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -0.0009486184571869671
    2. 'text' → logprob: -7.000948429107666
    3. ' text' → logprob: -10.250948905944824
    4. '(' → logprob: -13.625948905944824
    5. '{text' → logprob: -15.125948905944824
    6. '=text' → logprob: -16.125947952270508
    7. ')' → logprob: -16.250947952270508
    8. ' (' → logprob: -16.750947952270508
    9. '_text' → logprob: -17.500947952270508
    10. '	text' → logprob: -17.625947952270508

Token 299: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.23949408531188965
    2. '):' → logprob: -1.8644940853118896
    3. ')' → logprob: -2.8644940853118896
    4. ' ):
' → logprob: -7.864494323730469
    5. ')-' → logprob: -8.489494323730469
    6. ' ):' → logprob: -8.614494323730469
    7. '   ' → logprob: -9.739494323730469
    8. ' )' → logprob: -9.864494323730469
    9. '):
' → logprob: -10.114494323730469
    10. '       ' → logprob: -11.364494323730469

Token 300: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0157648716121912
    2. ' return' → logprob: -5.2657647132873535
    3. ':
' → logprob: -5.3907647132873535
    4. '       ' → logprob: -6.5157647132873535
    5. ' 
' → logprob: -6.8907647132873535
    6. 'return' → logprob: -7.0157647132873535
    7. ' cursor' → logprob: -7.2657647132873535
    8. '
' → logprob: -8.015765190124512
    9. '```' → logprob: -8.640765190124512
    10. '               ' → logprob: -8.765765190124512

Token 301: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6512497067451477
    2. ' cursor' → logprob: -0.9012497067451477
    3. 'cursor' → logprob: -3.401249647140503
    4. 'return' (adapté à ' return') → logprob: -3.776249647140503
    5. '           ' → logprob: -4.276249885559082
    6. '       ' → logprob: -6.151249885559082
    7. '               ' → logprob: -9.401249885559082
    8. '.cursor' → logprob: -10.151249885559082
    9. ' 
' → logprob: -10.526249885559082
    10. '	cursor' → logprob: -10.651249885559082

Token 302: ' cursor' (ID: 14944)
  Prédit: ' cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cursor' → logprob: -0.31326571106910706
    2. 'cursor' → logprob: -1.3132656812667847
    3. '(cursor' → logprob: -13.188265800476074
    4. '	cursor' → logprob: -13.438265800476074
    5. '.cursor' → logprob: -15.688265800476074
    6. '_cursor' → logprob: -16.438264846801758
    7. '```' → logprob: -16.438264846801758
    8. 'c' → logprob: -16.813264846801758
    9. 'Cursor' → logprob: -16.813264846801758
    10. ' ' → logprob: -16.813264846801758

Token 303: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759395360946655
    2. '+' → logprob: -0.8259395360946655
    3. '+
' → logprob: -16.825939178466797
    4. ' +
' → logprob: -17.325939178466797
    5. '()+' → logprob: -18.075939178466797
    6. ' plus' → logprob: -18.325939178466797
    7. '＋' → logprob: -18.450939178466797
    8. '+c' → logprob: -19.075939178466797
    9. '+C' → logprob: -19.450939178466797
    10. '+[' → logprob: -19.950939178466797

Token 304: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -16.87510871887207
    4. '```' → logprob: -18.75010871887207
    5. '<|end|>' → logprob: -20.62510871887207
    6. '       ' → logprob: -21.25010871887207
    7. 'def' → logprob: -21.37510871887207
    8. '
' → logprob: -21.50010871887207
    9. '  ' → logprob: -22.25010871887207
    10. '0' → logprob: -22.37510871887207

Token 305: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -17.875001907348633
    4. '   ' → logprob: -18.125001907348633
    5. 'def' → logprob: -20.625001907348633
    6. '
' → logprob: -21.250001907348633
    7. '  ' → logprob: -21.375001907348633
    8. '0' → logprob: -21.875001907348633
    9. '<|end|>' → logprob: -22.437501907348633
    10. '۱' → logprob: -22.500001907348633

Token 306: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021687502041459084
    2. '<|end|>' → logprob: -3.8966875076293945
    3. '
' → logprob: -7.3966875076293945
    4. '<|end|>' → logprob: -8.271687507629395
    5. '   ' → logprob: -9.646687507629395
    6. 'return' → logprob: -9.896687507629395
    7. '	' → logprob: -10.396687507629395
    8. 'else' → logprob: -10.771687507629395
    9. ' else' → logprob: -10.771687507629395
    10. '	return' → logprob: -10.896687507629395

Token 307: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4873644709587097
    2. '<|end|>' → logprob: -0.9873644709587097
    3. '
' → logprob: -5.112364292144775
    4. '   ' → logprob: -5.862364292144775
    5. '<|end|>' → logprob: -6.237364292144775
    6. '  
' → logprob: -7.737364292144775
    7. '        
' → logprob: -8.237364768981934
    8. ' 
' → logprob: -8.487364768981934
    9. ' ' → logprob: -8.737364768981934
    10. '        ' → logprob: -8.862364768981934

Token 308: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008753311820328236
    2. 'return' (adapté à ' return') → logprob: -5.633753299713135
    3. '
' → logprob: -6.258753299713135
    4. '   ' → logprob: -6.883753299713135
    5. 'else' → logprob: -6.883753299713135
    6. ' else' → logprob: -7.508753299713135
    7. ' return' → logprob: -8.258753776550293
    8. '<|end|>' → logprob: -8.383753776550293
    9. '	return' → logprob: -10.258753776550293
    10. 'def' → logprob: -11.133753776550293

Token 309: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.20141586661338806
    2. ' cursor' → logprob: -1.7014158964157104
    3. '	cursor' → logprob: -13.326416015625
    4. '(cursor' → logprob: -15.076416015625
    5. 'text' → logprob: -15.201416015625
    6. 'None' → logprob: -16.576416015625
    7. 'len' → logprob: -16.826416015625
    8. '.cursor' → logprob: -16.951416015625
    9. ' ' → logprob: -17.451416015625
    10. ' None' → logprob: -17.451416015625

Token 310: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 311: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 312: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.22266565263271332
    2. '<|end|>' → logprob: -1.9726656675338745
    3. '
' → logprob: -3.347665548324585
    4. '```' → logprob: -4.972665786743164
    5. ' def' → logprob: -5.347665786743164
    6. '    
' → logprob: -5.347665786743164
    7. '   ' → logprob: -5.597665786743164
    8. '  
' → logprob: -5.972665786743164
    9. '<|end|>' → logprob: -6.722665786743164
    10. ' 
' → logprob: -7.722665786743164

Token 313: ' backward' (ID: 58986)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'back' → logprob: -0.0006364276050589979
    2. ' backward' → logprob: -7.625636577606201
    3. 'forward' → logprob: -8.875636100769043
    4. ' back' → logprob: -12.125636100769043
    5. ' ' → logprob: -13.875636100769043
    6. 'main' → logprob: -14.000636100769043
    7. 'reverse' → logprob: -14.625636100769043
    8. '   ' → logprob: -15.375636100769043
    9. '.backward' → logprob: -15.625636100769043
    10. '_backward' → logprob: -16.00063705444336

Token 314: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -5.0259150157216936e-05
    2. '_' → logprob: -10.50005054473877
    3. '_token' → logprob: -12.00005054473877
    4. '_character' → logprob: -12.25005054473877
    5. 'char' → logprob: -12.50005054473877
    6. '_cursor' → logprob: -12.75005054473877
    7. '_word' → logprob: -13.50005054473877
    8. '_chars' → logprob: -14.00005054473877
    9. ' _' → logprob: -14.37505054473877
    10. '_c' → logprob: -14.50005054473877

Token 315: '(cursor' (ID: 50526)
  Prédit: '(text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(text' → logprob: -1.7432603272027336e-06
    2. ' (' → logprob: -13.750001907348633
    3. '(' → logprob: -14.500001907348633
    4. ',text' → logprob: -17.500001907348633
    5. '{text' → logprob: -17.625001907348633
    6. ' text' → logprob: -18.875001907348633
    7. '(TEXT' → logprob: -19.000001907348633
    8. '(Text' → logprob: -19.000001907348633
    9. '(txt' → logprob: -19.250001907348633
    10. ':text' → logprob: -19.375001907348633

Token 316: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013536880724132061
    2. '):' → logprob: -4.8885369300842285
    3. '):
' → logprob: -5.2635369300842285
    4. ' ,' → logprob: -7.7635369300842285
    5. '   ' → logprob: -8.26353645324707
    6. ' ):' → logprob: -10.88853645324707
    7. ',
' → logprob: -11.38853645324707
    8. ' ):
' → logprob: -11.63853645324707
    9. '    ' → logprob: -12.51353645324707
    10. ',c' → logprob: -12.88853645324707

Token 317: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014739005826413631
    2. '   ' → logprob: -4.264739036560059
    3. ' if' → logprob: -7.514739036560059
    4. 'if' → logprob: -11.514739036560059
    5. '	if' → logprob: -12.014739036560059
    6. '	   ' → logprob: -12.014739036560059
    7. '    ' → logprob: -12.514739036560059
    8. '	' → logprob: -13.389739036560059
    9. '     ' → logprob: -14.389739036560059
    10. ' ' → logprob: -15.014739036560059

Token 318: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5198416709899902
    2. 'if' (adapté à ' if') → logprob: -1.0198416709899902
    3. '       ' → logprob: -3.2698416709899902
    4. '   ' → logprob: -5.01984167098999
    5. 'return' → logprob: -9.644842147827148
    6. '	if' → logprob: -10.269842147827148
    7. ' return' → logprob: -11.269842147827148
    8. '    ' → logprob: -13.144842147827148
    9. '```' → logprob: -14.894842147827148
    10. ' ' → logprob: -15.394842147827148

Token 319: ' cursor' (ID: 14944)
  Prédit: ' cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cursor' → logprob: -0.25193020701408386
    2. 'cursor' → logprob: -1.5019302368164062
    3. '	cursor' → logprob: -14.626930236816406
    4. '   ' → logprob: -15.251930236816406
    5. '(cursor' → logprob: -15.251930236816406
    6. ' ' → logprob: -16.751930236816406
    7. '0' → logprob: -17.001930236816406
    8. '_cursor' → logprob: -17.376930236816406
    9. 'Cursor' → logprob: -17.876930236816406
    10. '.cursor' → logprob: -18.001930236816406

Token 320: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4740772247314453
    2. ' >' → logprob: -0.9740772247314453
    3. '()>' → logprob: -16.349077224731445
    4. '   ' → logprob: -16.724077224731445
    5. ' ' → logprob: -16.849077224731445
    6. ' ' → logprob: -18.349077224731445
    7. ':' → logprob: -19.224077224731445
    8. '0' → logprob: -19.724077224731445
    9. ' >
' → logprob: -20.099077224731445
    10. ')>' → logprob: -20.224077224731445

Token 321: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008616935461759567
    2. ' ' → logprob: -4.758616924285889
    3. '=' → logprob: -13.383617401123047
    4. '   ' → logprob: -14.008617401123047
    5. '1' → logprob: -16.633617401123047
    6. '  ' → logprob: -18.008617401123047
    7. '       ' → logprob: -19.008617401123047
    8. '```' → logprob: -19.508617401123047
    9. '    ' → logprob: -19.633617401123047
    10. '     ' → logprob: -19.696117401123047

Token 322: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -17.500009536743164
    4. '1' → logprob: -18.625009536743164
    5. '=' → logprob: -19.375009536743164
    6. '
' → logprob: -20.625009536743164
    7. '```' → logprob: -20.750009536743164
    8. '۰' → logprob: -21.750009536743164
    9. '  ' → logprob: -21.875009536743164
    10. '[' → logprob: -22.500009536743164

Token 323: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07582327723503113
    2. ':' → logprob: -2.8258233070373535
    3. '-' → logprob: -5.0758233070373535
    4. '       ' → logprob: -5.2008233070373535
    5. '           ' → logprob: -6.9508233070373535
    6. ' -' → logprob: -7.8258233070373535
    7. ':return' → logprob: -7.8258233070373535
    8. '):
' → logprob: -9.325822830200195
    9. ' :
' → logprob: -9.575822830200195
    10. '   ' → logprob: -10.200822830200195

Token 324: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002462218049913645
    2. '           ' → logprob: -6.377462387084961
    3. ' return' → logprob: -7.627462387084961
    4. 'return' → logprob: -8.377462387084961
    5. '
' → logprob: -11.502462387084961
    6. '	       ' → logprob: -11.752462387084961
    7. '   ' → logprob: -11.877462387084961
    8. '	return' → logprob: -12.002462387084961
    9. '	   ' → logprob: -12.252462387084961
    10. '	' → logprob: -12.252462387084961

Token 325: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1618705689907074
    2. ' return' → logprob: -1.9118705987930298
    3. '       ' → logprob: -6.41187047958374
    4. '	return' → logprob: -13.036870956420898
    5. '           ' → logprob: -14.286870956420898
    6. '   ' → logprob: -14.911870956420898
    7. ' ' → logprob: -17.4118709564209
    8. ' ' → logprob: -17.7868709564209
    9. '
' → logprob: -18.6618709564209
    10. ':return' → logprob: -18.6618709564209

Token 326: ' cursor' (ID: 14944)
  Prédit: ' cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cursor' → logprob: -0.20141538977622986
    2. 'cursor' → logprob: -1.7014154195785522
    3. '	cursor' → logprob: -14.076415061950684
    4. '       ' → logprob: -14.201415061950684
    5. '(cursor' → logprob: -14.701415061950684
    6. '_cursor' → logprob: -16.826416015625
    7. '.cursor' → logprob: -16.826416015625
    8. '           ' → logprob: -16.826416015625
    9. 'Cursor' → logprob: -17.076416015625
    10. '   ' → logprob: -17.576416015625

Token 327: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03804171830415726
    2. '-' → logprob: -3.288041830062866
    3. '       ' → logprob: -15.538042068481445
    4. '   ' → logprob: -16.538042068481445
    5. ' ' → logprob: -17.413042068481445
    6. ' ' → logprob: -17.413042068481445
    7. '()-' → logprob: -19.038042068481445
    8. '<|end|>' → logprob: -19.163042068481445
    9. '−' → logprob: -19.288042068481445
    10. 'def' → logprob: -19.663042068481445

Token 328: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -18.750003814697266
    4. '   ' → logprob: -19.125003814697266
    5. '
' → logprob: -20.375003814697266
    6. '<|end|>' → logprob: -21.000003814697266
    7. 'def' → logprob: -21.500003814697266
    8. '       ' → logprob: -21.500003814697266
    9. '۱' → logprob: -23.000003814697266
    10. '0' → logprob: -23.125003814697266

Token 329: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '```' → logprob: -18.25
    4. '   ' → logprob: -19.375
    5. 'def' → logprob: -21.25
    6. '
' → logprob: -21.25
    7. '<|end|>' → logprob: -21.9375
    8. '       ' → logprob: -22.25
    9. '۱' → logprob: -22.375
    10. '0' → logprob: -22.375

Token 330: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 331: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020271388348191977
    2. '   ' → logprob: -7.0020270347595215
    3. 'return' → logprob: -7.1270270347595215
    4. ' return' → logprob: -8.75202751159668
    5. '	return' → logprob: -9.37702751159668
    6. '	' → logprob: -10.37702751159668
    7. '
' → logprob: -10.87702751159668
    8. '<|end|>' → logprob: -11.25202751159668
    9. '	   ' → logprob: -13.50202751159668
    10. '           ' → logprob: -13.50202751159668

Token 332: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.317294716835022
    2. 'return' (adapté à ' return') → logprob: -1.567294716835022
    3. '   ' → logprob: -2.8172945976257324
    4. ' return' → logprob: -5.692294597625732
    5. '	return' → logprob: -8.94229507446289
    6. '
' → logprob: -12.81729507446289
    7. '           ' → logprob: -14.19229507446289
    8. 'else' → logprob: -15.06729507446289
    9. '	' → logprob: -15.31729507446289
    10. '	   ' → logprob: -15.44229507446289

Token 333: ' cursor' (ID: 14944)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.43723583221435547
    2. 'cursor' → logprob: -1.1872358322143555
    3. ' cursor' → logprob: -3.0622358322143555
    4. ' ' → logprob: -6.0622358322143555
    5. '   ' → logprob: -13.562235832214355
    6. '(cursor' → logprob: -13.687235832214355
    7. '	cursor' → logprob: -13.687235832214355
    8. '.cursor' → logprob: -15.187235832214355
    9. 'Cursor' → logprob: -15.437235832214355
    10. '  ' → logprob: -15.437235832214355

Token 334: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 335: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 336: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6430845856666565
    2. 'def' (adapté à ' def') → logprob: -0.7680845856666565
    3. '<|end|>' → logprob: -5.393084526062012
    4. ' def' → logprob: -5.893084526062012
    5. '```' → logprob: -6.143084526062012
    6. '    
' → logprob: -7.768084526062012
    7. '
' → logprob: -8.393084526062012
    8. '<|end|>' → logprob: -8.643084526062012
    9. '  ' → logprob: -10.143084526062012
    10. '	def' → logprob: -10.268084526062012

Token 337: ' forward' (ID: 6687)
  Prédit: 'forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forward' → logprob: -0.0011249757371842861
    2. ' forward' → logprob: -6.876124858856201
    3. 'back' → logprob: -9.87612533569336
    4. 'word' → logprob: -11.00112533569336
    5. 'next' → logprob: -11.50112533569336
    6. 'skip' → logprob: -11.62612533569336
    7. 'move' → logprob: -12.75112533569336
    8. 'jump' → logprob: -14.12612533569336
    9. '_forward' → logprob: -14.50112533569336
    10. 'find' → logprob: -15.87612533569336

Token 338: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -5.872261317563243e-05
    2. '_' → logprob: -10.375059127807617
    3. '_char' → logprob: -11.375059127807617
    4. '_words' → logprob: -11.750059127807617
    5. '_token' → logprob: -12.125059127807617
    6. '_line' → logprob: -14.125059127807617
    7. '_w' → logprob: -14.125059127807617
    8. 'word' → logprob: -15.500059127807617
    9. '_WORD' → logprob: -16.000059127807617
    10. '_cursor' → logprob: -16.375059127807617

Token 339: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -6.659005157416686e-05
    2. '(cursor' → logprob: -10.250066757202148
    3. '(' → logprob: -10.750066757202148
    4. '_cursor' → logprob: -12.500066757202148
    5. ' (' → logprob: -13.500066757202148
    6. '(token' → logprob: -13.875066757202148
    7. '(word' → logprob: -14.000066757202148
    8. '_text' → logprob: -14.375066757202148
    9. '(txt' → logprob: -14.875066757202148
    10. 'text' → logprob: -15.625066757202148

Token 340: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.034592388459714e-06
    2. ' ,' → logprob: -12.250005722045898
    3. ',c' → logprob: -14.125005722045898
    4. '   ' → logprob: -15.000005722045898
    5. ',text' → logprob: -16.8750057220459
    6. ',
' → logprob: -17.3750057220459
    7. '‌,' → logprob: -17.7500057220459
    8. '       ' → logprob: -18.6250057220459
    9. '(cursor' → logprob: -18.6250057220459
    10. ',current' → logprob: -18.8750057220459

Token 341: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.6652882695198059
    2. ' cursor' → logprob: -0.7902882695198059
    3. 'text' → logprob: -3.540288209915161
    4. ' text' → logprob: -5.79028844833374
    5. '   ' → logprob: -9.915287971496582
    6. '(cursor' → logprob: -11.540287971496582
    7. ' ' → logprob: -11.790287971496582
    8. '	cursor' → logprob: -11.915287971496582
    9. '_cursor' → logprob: -12.165287971496582
    10. ',' → logprob: -12.415287971496582

Token 342: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00690078642219305
    2. '):
' → logprob: -5.006900787353516
    3. '   ' → logprob: -8.881900787353516
    4. '       ' → logprob: -10.631900787353516
    5. ',' → logprob: -10.881900787353516
    6. '):
' → logprob: -13.756900787353516
    7. ')' → logprob: -14.256900787353516
    8. ' ):' → logprob: -14.256900787353516
    9. ':' → logprob: -14.381900787353516
    10. '):

' → logprob: -15.756900787353516

Token 343: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017186157638207078
    2. '   ' → logprob: -6.376718521118164
    3. ' left' → logprob: -13.126718521118164
    4. 'left' → logprob: -13.501718521118164
    5. '```' → logprob: -13.501718521118164
    6. ' if' → logprob: -13.751718521118164
    7. ',' → logprob: -13.751718521118164
    8. 'words' → logprob: -13.876718521118164
    9. ' words' → logprob: -14.376718521118164
    10. 'word' → logprob: -14.376718521118164

Token 344: ' left' (ID: 3561)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030177149921655655
    2. '   ' → logprob: -3.780177116394043
    3. 'n' → logprob: -5.905177116394043
    4. 'if' → logprob: -6.405177116394043
    5. 'pos' → logprob: -6.530177116394043
    6. 'i' → logprob: -7.780177116394043
    7. 'cursor' → logprob: -9.030177116394043
    8. 'length' → logprob: -9.780177116394043
    9. 'word' → logprob: -9.905177116394043
    10. 'while' → logprob: -10.030177116394043

Token 345: '_words' (ID: 45077)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7542924880981445
    2. '_part' → logprob: -1.1292924880981445
    3. '_words' → logprob: -2.0042924880981445
    4. '=' → logprob: -3.7542924880981445
    5. '   ' → logprob: -4.3792924880981445
    6. ',' → logprob: -4.7542924880981445
    7. '_len' → logprob: -4.8792924880981445
    8. '_pos' → logprob: -5.3792924880981445
    9. 'part' → logprob: -6.2542924880981445
    10. '_text' → logprob: -6.2542924880981445

Token 346: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00804935023188591
    2. ' =' → logprob: -5.383049488067627
    3. '=' → logprob: -5.758049488067627
    4. ' ,' → logprob: -8.633049011230469
    5. ',right' → logprob: -10.508049011230469
    6. '_,' → logprob: -11.633049011230469
    7. '   ' → logprob: -11.758049011230469
    8. 'def' → logprob: -12.133049011230469
    9. ')' → logprob: -12.383049011230469
    10. ',text' → logprob: -12.508049011230469

Token 347: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.10947103053331375
    2. ' right' → logprob: -2.359471082687378
    3. '_,' → logprob: -4.859470844268799
    4. '_right' → logprob: -7.359470844268799
    5. ' _,' → logprob: -7.484470844268799
    6. '_' → logprob: -8.609471321105957
    7. ',right' → logprob: -10.234471321105957
    8. ',' → logprob: -11.609471321105957
    9. '   ' → logprob: -11.609471321105957
    10. '
' → logprob: -11.859471321105957

Token 348: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -1.7120533811976202e-05
    2. '_tokens' → logprob: -11.625017166137695
    3. '_parts' → logprob: -12.250017166137695
    4. '_text' → logprob: -14.375017166137695
    5. '=_' → logprob: -14.375017166137695
    6. '```' → logprob: -14.625017166137695
    7. '_chars' → logprob: -15.125017166137695
    8. ')_' → logprob: -15.250017166137695
    9. 'words' → logprob: -15.500017166137695
    10. '=' → logprob: -15.500017166137695

Token 349: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47410765290260315
    2. ' =' → logprob: -0.9741076231002808
    3. '       ' → logprob: -11.09910774230957
    4. '   ' → logprob: -12.22410774230957
    5. ')' → logprob: -12.22410774230957
    6. '=text' → logprob: -14.09910774230957
    7. ' ' → logprob: -14.47410774230957
    8. ',' → logprob: -14.59910774230957
    9. ')=' → logprob: -14.72410774230957
    10. 'def' → logprob: -14.72410774230957

Token 350: ' split' (ID: 12648)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.018192199990153313
    2. ' split' → logprob: -4.018192291259766
    3. '   ' → logprob: -10.393192291259766
    4. '(split' → logprob: -12.143192291259766
    5. '       ' → logprob: -12.643192291259766
    6. ' ' → logprob: -14.018192291259766
    7. '     ' → logprob: -14.268192291259766
    8. '    ' → logprob: -15.018192291259766
    9. '         ' → logprob: -15.143192291259766
    10. '           ' → logprob: -15.143192291259766

Token 351: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -1.1398757123970427e-05
    2. 'words' → logprob: -12.000011444091797
    3. '_text' → logprob: -13.000011444091797
    4. '_word' → logprob: -13.125011444091797
    5. '```' → logprob: -15.125011444091797
    6. '(text' → logprob: -15.625011444091797
    7. '(words' → logprob: -15.750011444091797
    8. 'text' → logprob: -16.000011444091797
    9. ' words' → logprob: -16.500011444091797
    10. '_' → logprob: -16.625011444091797

Token 352: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -6.988221684878226e-06
    2. '(' → logprob: -12.250006675720215
    3. 'text' → logprob: -14.125006675720215
    4. ' (' → logprob: -14.750006675720215
    5. ',text' → logprob: -15.375006675720215
    6. '=text' → logprob: -15.625006675720215
    7. '   ' → logprob: -15.625006675720215
    8. '{text' → logprob: -15.750006675720215
    9. '       ' → logprob: -16.25000762939453
    10. '```' → logprob: -16.62500762939453

Token 353: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.259079363080673e-05
    2. ' ,' → logprob: -11.625012397766113
    3. ',c' → logprob: -13.750012397766113
    4. ',
' → logprob: -14.125012397766113
    5. '(cursor' → logprob: -14.625012397766113
    6. ')' → logprob: -15.000012397766113
    7. '   ' → logprob: -15.375012397766113
    8. '       ' → logprob: -15.500012397766113
    9. '```' → logprob: -15.625012397766113
    10. '[' → logprob: -16.12501335144043

Token 354: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.023252349346876144
    2. ' cursor' → logprob: -3.773252248764038
    3. '(cursor' → logprob: -12.898252487182617
    4. '	cursor' → logprob: -13.898252487182617
    5. '   ' → logprob: -14.023252487182617
    6. '```' → logprob: -14.148252487182617
    7. ')' → logprob: -14.273252487182617
    8. '       ' → logprob: -14.398252487182617
    9. '.cursor' → logprob: -15.648252487182617
    10. '
' → logprob: -15.648252487182617

Token 355: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06206493452191353
    2. ')
' → logprob: -2.8120648860931396
    3. ')

' → logprob: -9.687065124511719
    4. '       ' → logprob: -11.187065124511719
    5. ')[' → logprob: -11.687065124511719
    6. ')
' → logprob: -11.937065124511719
    7. '   ' → logprob: -12.437065124511719
    8. '[' → logprob: -13.062065124511719
    9. ')`
' → logprob: -16.43706512451172
    10. ')`' → logprob: -16.56206512451172

Token 356: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018162935972213745
    2. 'if' → logprob: -4.393162727355957
    3. ' if' → logprob: -5.768162727355957
    4. '   ' → logprob: -6.268162727355957
    5. '
' → logprob: -8.393162727355957
    6. 'for' → logprob: -8.768162727355957
    7. '+' → logprob: -9.643162727355957
    8. ' for' → logprob: -10.393162727355957
    9. 'next' → logprob: -10.518162727355957
    10. 'token' → logprob: -11.018162727355957

Token 357: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.38825368881225586
    2. '       ' → logprob: -1.1382536888122559
    3. ' if' → logprob: -6.888253688812256
    4. '   ' → logprob: -8.013254165649414
    5. 'for' → logprob: -10.888254165649414
    6. '```' → logprob: -12.763254165649414
    7. '	if' → logprob: -12.888254165649414
    8. '+' → logprob: -13.138254165649414
    9. '
' → logprob: -13.388254165649414
    10. '           ' → logprob: -14.513254165649414

Token 358: ' not' (ID: 625)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.4321977198123932
    2. ' right' → logprob: -1.0571976900100708
    3. ' not' → logprob: -5.932197570800781
    4. 'not' → logprob: -7.807197570800781
    5. ' len' → logprob: -8.807197570800781
    6. '   ' → logprob: -8.932197570800781
    7. 'len' → logprob: -9.057197570800781
    8. '       ' → logprob: -11.307197570800781
    9. ' ' → logprob: -11.807197570800781
    10. '	right' → logprob: -12.057197570800781

Token 359: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.38687223196029663
    2. ' right' → logprob: -1.1368722915649414
    3. ' ' → logprob: -14.886872291564941
    4. '   ' → logprob: -15.011872291564941
    5. '	right' → logprob: -15.386872291564941
    6. 'left' → logprob: -16.386871337890625
    7. '[right' → logprob: -16.511871337890625
    8. '(right' → logprob: -17.011871337890625
    9. '_right' → logprob: -17.011871337890625
    10. '
' → logprob: -17.761871337890625

Token 360: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.125000953674316
    3. '_tokens' → logprob: -16.375
    4. '_w' → logprob: -16.5
    5. '_parts' → logprob: -16.75
    6. 'words' → logprob: -17.125
    7. '_chars' → logprob: -18.125
    8. '```' → logprob: -18.375
    9. '_
' → logprob: -18.625
    10. '_word' → logprob: -18.625

Token 361: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31509146094322205
    2. ':
' → logprob: -1.3150914907455444
    3. ' or' → logprob: -6.940091609954834
    4. '[' → logprob: -7.565091609954834
    5. ':return' → logprob: -8.565091133117676
    6. '==' → logprob: -9.815091133117676
    7. '       ' → logprob: -10.815091133117676
    8. '           ' → logprob: -11.065091133117676
    9. '   ' → logprob: -11.315091133117676
    10. '=' → logprob: -11.315091133117676

Token 362: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003627865808084607
    2. ' return' → logprob: -5.753627777099609
    3. 'return' → logprob: -8.00362777709961
    4. ',' → logprob: -10.25362777709961
    5. ':
' → logprob: -10.25362777709961
    6. ':' → logprob: -11.50362777709961
    7. '
' → logprob: -11.75362777709961
    8. '```' → logprob: -12.25362777709961
    9. '       ' → logprob: -12.50362777709961
    10. '[' → logprob: -13.25362777709961

Token 363: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2953564524650574
    2. '           ' → logprob: -1.5453565120697021
    3. '       ' → logprob: -3.795356512069702
    4. ' return' → logprob: -3.920356512069702
    5. '   ' → logprob: -9.295356750488281
    6. '               ' → logprob: -9.795356750488281
    7. '{return' → logprob: -11.045356750488281
    8. '
' → logprob: -11.545356750488281
    9. '	return' → logprob: -11.795356750488281
    10. '```' → logprob: -12.670356750488281

Token 364: ' len' (ID: 4631)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.02275850810110569
    2. 'len' → logprob: -4.147758483886719
    3. ' cursor' → logprob: -5.022758483886719
    4. ' len' → logprob: -9.147758483886719
    5. '
' → logprob: -13.272758483886719
    6. '	cursor' → logprob: -13.272758483886719
    7. '```' → logprob: -13.647758483886719
    8. '(cursor' → logprob: -13.772758483886719
    9. '   ' → logprob: -14.397758483886719
    10. 'c' → logprob: -15.147758483886719

Token 365: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -4.6087021473795176e-05
    2. 'text' → logprob: -10.000045776367188
    3. ' text' → logprob: -14.500045776367188
    4. '(' → logprob: -16.500045776367188
    5. '{text' → logprob: -17.125045776367188
    6. '=text' → logprob: -19.000045776367188
    7. ' (' → logprob: -20.125045776367188
    8. '	text' → logprob: -20.125045776367188
    9. ',text' → logprob: -20.625045776367188
    10. 'Text' → logprob: -20.750045776367188

Token 366: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.25207215547561646
    2. ')' → logprob: -1.5020720958709717
    3. '   ' → logprob: -9.37707233428955
    4. '       ' → logprob: -10.00207233428955
    5. ' )
' → logprob: -12.00207233428955
    6. ')

' → logprob: -13.12707233428955
    7. ')
' → logprob: -13.25207233428955
    8. '
' → logprob: -13.75207233428955
    9. ' )' → logprob: -14.12707233428955
    10. ')return' → logprob: -15.12707233428955

Token 367: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0608755499124527
    2. '
' → logprob: -2.935875654220581
    3. '        
' → logprob: -6.435875415802002
    4. 'word' → logprob: -6.935875415802002
    5. 'start' → logprob: -7.185875415802002
    6. 'right' → logprob: -7.560875415802002
    7. 'next' → logprob: -8.06087589263916
    8. ' right' → logprob: -8.56087589263916
    9. ' for' → logprob: -8.68587589263916
    10. '
' → logprob: -8.81087589263916

Token 368: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2465767115354538
    2. 'start' → logprob: -1.6215766668319702
    3. 'offset' → logprob: -5.74657678604126
    4. ',' → logprob: -5.99657678604126
    5. 'return' → logprob: -5.99657678604126
    6. ' start' → logprob: -5.99657678604126
    7. 'next' → logprob: -6.12157678604126
    8. 'word' → logprob: -6.37157678604126
    9. '_,' → logprob: -6.62157678604126
    10. 'new' → logprob: -6.99657678604126

Token 369: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25985851883888245
    2. ':
' → logprob: -1.75985848903656
    3. ':' → logprob: -3.3848586082458496
    4. '            ' → logprob: -4.88485860824585
    5. ' return' → logprob: -5.00985860824585
    6. 'return' → logprob: -5.75985860824585
    7. '   ' → logprob: -7.00985860824585
    8. '        ' → logprob: -7.13485860824585
    9. '               ' → logprob: -7.38485860824585
    10. ' cursor' → logprob: -8.134858131408691

Token 370: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4804304540157318
    2. ' return' → logprob: -2.2304303646087646
    3. 'return' → logprob: -2.2304303646087646
    4. '           ' → logprob: -2.3554303646087646
    5. 'cursor' → logprob: -3.2304303646087646
    6. ' cursor' → logprob: -3.4804303646087646
    7. '   ' → logprob: -7.855430603027344
    8. 'text' → logprob: -8.855430603027344
    9. '               ' → logprob: -9.105430603027344
    10. 'start' → logprob: -9.480430603027344

Token 371: ' #' (ID: 1069)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.6573184728622437
    2. 'return' → logprob: -0.7823184728622437
    3. '       ' → logprob: -4.032318592071533
    4. '           ' → logprob: -6.157318592071533
    5. ' return' → logprob: -6.282318592071533
    6. ' cursor' → logprob: -6.407318592071533
    7. 'start' → logprob: -8.032318115234375
    8. '   ' → logprob: -8.407318115234375
    9. 'cur' → logprob: -9.032318115234375
    10. 'end' → logprob: -9.532318115234375

Token 372: ' move' (ID: 5275)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1981237679719925
    2. '       ' → logprob: -2.8231236934661865
    3. 'start' → logprob: -2.8231236934661865
    4. '           ' → logprob: -4.198123931884766
    5. 'cursor' → logprob: -4.198123931884766
    6. 'word' → logprob: -4.448123931884766
    7. 'next' → logprob: -4.698123931884766
    8. 'end' → logprob: -5.448123931884766
    9. 'right' → logprob: -5.948123931884766
    10. '#' → logprob: -7.073123931884766

Token 373: ' cursor' (ID: 14944)
  Prédit: ' cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cursor' → logprob: -0.8324902653694153
    2. ' to' → logprob: -1.2074902057647705
    3. 'to' → logprob: -1.7074902057647705
    4. 'cursor' → logprob: -2.9574902057647705
    5. '_cursor' → logprob: -4.08249044418335
    6. '_to' → logprob: -4.70749044418335
    7. ' forward' → logprob: -5.83249044418335
    8. '           ' → logprob: -6.08249044418335
    9. '       ' → logprob: -9.082489967346191
    10. 'To' → logprob: -9.082489967346191

Token 374: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.23635737597942352
    2. ' to' → logprob: -1.61135733127594
    3. '           ' → logprob: -4.98635721206665
    4. '_to' → logprob: -6.23635721206665
    5. '=' → logprob: -7.11135721206665
    6. ' =' → logprob: -7.23635721206665
    7. 'To' → logprob: -8.361357688903809
    8. '            ' → logprob: -8.736357688903809
    9. '               ' → logprob: -10.111357688903809
    10. ',' → logprob: -10.736357688903809

Token 375: ' the' (ID: 290)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.5804677605628967
    2. ' cursor' → logprob: -0.8304677605628967
    3. 'right' → logprob: -6.330467700958252
    4. ' right' → logprob: -7.205467700958252
    5. 'text' → logprob: -7.330467700958252
    6. '       ' → logprob: -7.705467700958252
    7. ' text' → logprob: -8.33046817779541
    8. '   ' → logprob: -8.45546817779541
    9. '           ' → logprob: -8.58046817779541
    10. '(cursor' → logprob: -9.33046817779541

Token 376: ' end' (ID: 1268)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.021283559501171112
    2. ' cursor' → logprob: -3.8962836265563965
    3. 'right' → logprob: -7.6462836265563965
    4. '(cursor' → logprob: -9.271283149719238
    5. 'text' → logprob: -9.646283149719238
    6. 'len' → logprob: -10.396283149719238
    7. '   ' → logprob: -11.271283149719238
    8. ' right' → logprob: -11.396283149719238
    9. 'next' → logprob: -11.771283149719238
    10. 'end' → logprob: -11.896283149719238

Token 377: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.06400629878044128
    2. 'of' → logprob: -2.8140063285827637
    3. '           ' → logprob: -6.939006328582764
    4. ')' → logprob: -7.814006328582764
    5. '            ' → logprob: -8.939005851745605
    6. '(' → logprob: -9.189005851745605
    7. '_of' → logprob: -9.189005851745605
    8. 'right' → logprob: -9.564005851745605
    9. ' right' → logprob: -9.689005851745605
    10. '               ' → logprob: -9.939005851745605

Token 378: ' the' (ID: 290)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.18972060084342957
    2. ' right' → logprob: -1.814720630645752
    3. 'text' → logprob: -5.189720630645752
    4. ' text' → logprob: -5.814720630645752
    5. ' the' → logprob: -7.189720630645752
    6. 'the' → logprob: -7.939720630645752
    7. ')' → logprob: -9.564720153808594
    8. '(right' → logprob: -9.564720153808594
    9. '           ' → logprob: -10.689720153808594
    10. '[right' → logprob: -10.939720153808594

Token 379: ' left' (ID: 3561)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.05624811723828316
    2. ' right' → logprob: -2.931248188018799
    3. 'first' → logprob: -7.056248188018799
    4. ' first' → logprob: -7.681248188018799
    5. ')' → logprob: -11.05624771118164
    6. '           ' → logprob: -11.55624771118164
    7. '0' → logprob: -12.30624771118164
    8. '(right' → logprob: -12.43124771118164
    9. 'text' → logprob: -13.18124771118164
    10. '       ' → logprob: -14.18124771118164

Token 380: 'most' (ID: 5309)
  Prédit: '_words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -0.005211228504776955
    2. '_right' → logprob: -6.130211353302002
    3. 'word' → logprob: -6.880211353302002
    4. 'right' → logprob: -7.130211353302002
    5. '_word' → logprob: -7.880211353302002
    6. 'most' → logprob: -8.005210876464844
    7. 'words' → logprob: -9.005210876464844
    8. ' right' → logprob: -9.880210876464844
    9. '[' → logprob: -10.005210876464844
    10. ')' → logprob: -10.505210876464844

Token 381: ' word' (ID: 2195)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.24262766540050507
    2. 'word' → logprob: -2.3676276206970215
    3. ' right' → logprob: -2.4926276206970215
    4. ''' → logprob: -4.6176276206970215
    5. ' word' → logprob: -4.7426276206970215
    6. ' ' → logprob: -5.3676276206970215
    7. '_right' → logprob: -5.9926276206970215
    8. 'space' → logprob: -6.1176276206970215
    9. '_word' → logprob: -6.2426276206970215
    10. '[' → logprob: -6.4926276206970215

Token 382: ' in' (ID: 306)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5172884464263916
    2. ' right' → logprob: -1.8922884464263916
    3. '[right' → logprob: -2.5172884464263916
    4. '           ' → logprob: -2.6422884464263916
    5. '[' → logprob: -3.3922884464263916
    6. '(right' → logprob: -4.3922882080078125
    7. ' of' → logprob: -4.5172882080078125
    8. ' at' → logprob: -5.0172882080078125
    9. ')' → logprob: -5.3922882080078125
    10. ' +' → logprob: -5.5172882080078125

Token 383: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.018166566267609596
    2. ' right' → logprob: -4.018166542053223
    3. 'the' → logprob: -11.643166542053223
    4. 'text' → logprob: -12.393166542053223
    5. '   ' → logprob: -14.143166542053223
    6. ' the' → logprob: -14.143166542053223
    7. ')' → logprob: -15.018166542053223
    8. '           ' → logprob: -15.018166542053223
    9. '_right' → logprob: -15.018166542053223
    10. '[right' → logprob: -15.268166542053223

Token 384: ' part' (ID: 997)
  Prédit: '_words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_words' → logprob: -0.000867752474732697
    2. '_part' → logprob: -7.50086784362793
    3. '_parts' → logprob: -8.87586784362793
    4. '_side' → logprob: -9.62586784362793
    5. '_' → logprob: -10.50086784362793
    6. '_text' → logprob: -10.87586784362793
    7. '[' → logprob: -11.37586784362793
    8. 'part' → logprob: -11.62586784362793
    9. '```' → logprob: -11.62586784362793
    10. '_right' → logprob: -11.87586784362793

Token 385: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6431618928909302
    2. '           ' → logprob: -2.0181617736816406
    3. '+' → logprob: -2.3931617736816406
    4. ')' → logprob: -2.5181617736816406
    5. 'right' → logprob: -2.8931617736816406
    6. ']' → logprob: -3.5181617736816406
    7. '       ' → logprob: -3.5181617736816406
    8. 'return' → logprob: -4.768161773681641
    9. '[' → logprob: -4.893161773681641
    10. ' right' → logprob: -5.018161773681641

Token 386: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18443553149700165
    2. ' +' → logprob: -2.6844356060028076
    3. 'right' → logprob: -3.6844356060028076
    4. '+' → logprob: -3.8094356060028076
    5. ' right' → logprob: -3.8094356060028076
    6. ' return' → logprob: -4.6844353675842285
    7. ')' → logprob: -5.8094353675842285
    8. 'return' → logprob: -5.9344353675842285
    9. '```' → logprob: -6.1844353675842285
    10. ' (' → logprob: -6.3094353675842285

Token 387: ' start' (ID: 1604)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3170711100101471
    2. ' return' → logprob: -1.9420710802078247
    3. '           ' → logprob: -2.6920711994171143
    4. '       ' → logprob: -3.5670711994171143
    5. 'cursor' → logprob: -4.067070960998535
    6. 'end' → logprob: -4.817070960998535
    7. ' cursor' → logprob: -5.692070960998535
    8. 'start' (adapté à ' start') → logprob: -6.692070960998535
    9. ' end' → logprob: -7.317070960998535
    10. 'word' → logprob: -7.442070960998535

Token 388: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007306627230718732
    2. ',end' → logprob: -8.125730514526367
    3. '=' → logprob: -8.375730514526367
    4. '_,' → logprob: -9.375730514526367
    5. ' ,' → logprob: -10.000730514526367
    6. ',right' → logprob: -10.500730514526367
    7. ' =' → logprob: -11.000730514526367
    8. ',start' → logprob: -12.250730514526367
    9. '=end' → logprob: -12.250730514526367
    10. ',_' → logprob: -13.000730514526367

Token 389: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.31338179111480713
    2. ' end' → logprob: -1.3133817911148071
    3. 'stop' → logprob: -9.063382148742676
    4. ' stop' → logprob: -12.813382148742676
    5. '=end' → logprob: -15.063382148742676
    6. ' ' → logprob: -15.188382148742676
    7. 'length' → logprob: -15.563382148742676
    8. '   ' → logprob: -15.813382148742676
    9. '	end' → logprob: -15.813382148742676
    10. '    ' → logprob: -16.56338119506836

Token 390: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006047892849892378
    2. '=' → logprob: -5.13104772567749
    3. '<|end|>' → logprob: -9.756048202514648
    4. ')' → logprob: -10.006048202514648
    5. '<|end|>' → logprob: -12.381048202514648
    6. '       ' → logprob: -13.131048202514648
    7. ']' → logprob: -13.381048202514648
    8. ' ' → logprob: -13.631048202514648
    9. ',' → logprob: -13.881048202514648
    10. '           ' → logprob: -13.881048202514648

Token 391: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.061967913061380386
    2. 'right' → logprob: -2.8119678497314453
    3. '	right' → logprob: -16.311967849731445
    4. '_right' → logprob: -16.936967849731445
    5. '           ' → logprob: -17.311967849731445
    6. '[right' → logprob: -17.436967849731445
    7. '    ' → logprob: -17.686967849731445
    8. '(right' → logprob: -17.811967849731445
    9. '            ' → logprob: -18.061967849731445
    10. 'Right' → logprob: -18.311967849731445

Token 392: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -2.935296834039036e-06
    2. '_parts' → logprob: -13.37500286102295
    3. '[' → logprob: -14.00000286102295
    4. '_part' → logprob: -15.62500286102295
    5. '_word' → logprob: -16.000003814697266
    6. '_right' → logprob: -16.500003814697266
    7. '_tokens' → logprob: -17.375003814697266
    8. 'words' → logprob: -17.375003814697266
    9. 'Words' → logprob: -17.500003814697266
    10. '```' → logprob: -17.875003814697266

Token 393: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002808798337355256
    2. '0' → logprob: -5.877808570861816
    3. '           ' → logprob: -13.127808570861816
    4. '```' → logprob: -14.252808570861816
    5. ' [' → logprob: -14.502808570861816
    6. '   ' → logprob: -14.752808570861816
    7. '       ' → logprob: -15.627808570861816
    8. ' ' → logprob: -16.502809524536133
    9. '][' → logprob: -16.627809524536133
    10. ',' → logprob: -17.252809524536133

Token 394: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.65707261255011e-06
    2. ' ' → logprob: -11.875008583068848
    3. '   ' → logprob: -14.375008583068848
    4. '[' → logprob: -15.687508583068848
    5. '           ' → logprob: -15.687508583068848
    6. '       ' → logprob: -16.000009536743164
    7. '
' → logprob: -16.625009536743164
    8. '```' → logprob: -17.312509536743164
    9. '000' → logprob: -17.500009536743164
    10. '۰' → logprob: -17.500009536743164

Token 395: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.108193039894104
    2. ')' → logprob: -2.7331929206848145
    3. ']
' → logprob: -3.3581929206848145
    4. ')
' → logprob: -5.9831929206848145
    5. '<|end|>' → logprob: -8.983193397521973
    6. '])' → logprob: -10.483193397521973
    7. ' ]' → logprob: -10.983193397521973
    8. ')]' → logprob: -11.483193397521973
    9. ']

' → logprob: -11.983193397521973
    10. '<|end|>' → logprob: -12.108193397521973

Token 396: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028853772208094597
    2. 'return' → logprob: -3.90385365486145
    3. ' return' → logprob: -4.903853893280029
    4. '
' → logprob: -7.778853893280029
    5. '       ' → logprob: -8.403853416442871
    6. '   ' → logprob: -9.403853416442871
    7. '		' → logprob: -10.778853416442871
    8. '	       ' → logprob: -11.153853416442871
    9. '    
' → logprob: -11.278853416442871
    10. '            
' → logprob: -11.403853416442871

Token 397: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2189265489578247
    2. ' return' → logprob: -2.093926429748535
    3. '           ' → logprob: -2.718926429748535
    4. 'cursor' → logprob: -5.093926429748535
    5. ' cursor' → logprob: -7.343926429748535
    6. '   ' → logprob: -8.093926429748535
    7. '       ' → logprob: -8.343926429748535
    8. '	return' → logprob: -10.093926429748535
    9. '	       ' → logprob: -11.343926429748535
    10. '
' → logprob: -11.468926429748535

Token 398: ' position' (ID: 4010)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.13821640610694885
    2. '           ' → logprob: -2.638216495513916
    3. ' return' → logprob: -2.888216495513916
    4. '       ' → logprob: -6.638216495513916
    5. '	return' → logprob: -8.013216018676758
    6. '   ' → logprob: -8.513216018676758
    7. '	       ' → logprob: -10.638216018676758
    8. '		' → logprob: -11.138216018676758
    9. '	   ' → logprob: -12.138216018676758
    10. '```' → logprob: -12.513216018676758

Token 399: ' in' (ID: 306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15619120001792908
    2. ' =' → logprob: -2.031191110610962
    3. '+=' → logprob: -4.656191349029541
    4. ' +=' → logprob: -5.906191349029541
    5. 'return' → logprob: -7.406191349029541
    6. 'cursor' → logprob: -8.906190872192383
    7. ' return' → logprob: -9.031190872192383
    8. '           ' → logprob: -9.781190872192383
    9. '+' → logprob: -9.906190872192383
    10. '_cursor' → logprob: -10.031190872192383

Token 400: ' text' (ID: 2201)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.15815822780132294
    2. 'text' → logprob: -2.533158302307129
    3. ' cursor' → logprob: -2.783158302307129
    4. ' text' → logprob: -5.408158302307129
    5. 'code' → logprob: -8.158158302307129
    6. '(cursor' → logprob: -9.033158302307129
    7. ' code' → logprob: -10.158158302307129
    8. '_cursor' → logprob: -10.283158302307129
    9. '.cursor' → logprob: -11.408158302307129
    10. 'return' → logprob: -11.408158302307129

Token 401: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22117288410663605
    2. ' =' → logprob: -1.9711729288101196
    3. '           ' → logprob: -3.72117280960083
    4. '+=' → logprob: -4.47117280960083
    5. ' +=' → logprob: -4.84617280960083
    6. 'cursor' → logprob: -5.22117280960083
    7. 'return' → logprob: -5.97117280960083
    8. ' return' → logprob: -6.34617280960083
    9. ' cursor' → logprob: -6.34617280960083
    10. '>' → logprob: -7.09617280960083

Token 402: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.002409065840765834
    2. ' cursor' → logprob: -6.127408981323242
    3. 'end' → logprob: -8.877408981323242
    4. '   ' → logprob: -10.002408981323242
    5. '           ' → logprob: -10.627408981323242
    6. '(cursor' → logprob: -11.877408981323242
    7. '	cursor' → logprob: -12.252408981323242
    8. '_cursor' → logprob: -14.252408981323242
    9. 'cur' → logprob: -14.752408981323242
    10. '```' → logprob: -15.377408981323242

Token 403: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1269330382347107
    2. '+' → logprob: -2.1269330978393555
    3. ' ' → logprob: -13.751933097839355
    4. ' plus' → logprob: -14.001933097839355
    5. '+c' → logprob: -14.126933097839355
    6. ' +
' → logprob: -14.376933097839355
    7. '   ' → logprob: -14.876933097839355
    8. '+
' → logprob: -15.501933097839355
    9. 'cursor' → logprob: -15.751933097839355
    10. ' ' → logprob: -15.751933097839355

Token 404: ' end' (ID: 1268)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0848819687962532
    2. 'end' → logprob: -2.5848820209503174
    3. ' start' → logprob: -5.209881782531738
    4. ' end' → logprob: -7.584881782531738
    5. ' ' → logprob: -12.709881782531738
    6. '(start' → logprob: -15.209881782531738
    7. '(end' → logprob: -15.584881782531738
    8. '  ' → logprob: -16.584882736206055
    9. '   ' → logprob: -16.959882736206055
    10. '[start' → logprob: -17.334882736206055

Token 405: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 406: '           ' (ID: 352)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.9675764441490173
    2. '+' → logprob: -1.092576503753662
    3. '           ' → logprob: -1.342576503753662
    4. '<|end|>' → logprob: -4.592576503753662
    5. '   ' → logprob: -5.717576503753662
    6. ')' → logprob: -5.842576503753662
    7. '
' → logprob: -5.967576503753662
    8. '<|end|>' → logprob: -6.467576503753662
    9. '       ' → logprob: -7.092576503753662
    10. '\n' → logprob: -7.717576503753662

Token 407: ' return' (ID: 622)
  Prédit: ' cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cursor' → logprob: -0.43260979652404785
    2. 'cursor' → logprob: -1.1826097965240479
    3. '           ' → logprob: -3.807609796524048
    4. ' return' → logprob: -4.057609558105469
    5. 'return' (adapté à ' return') → logprob: -5.932609558105469
    6. '(cursor' → logprob: -6.432609558105469
    7. '   ' → logprob: -8.307609558105469
    8. '	cursor' → logprob: -8.682609558105469
    9. '       ' → logprob: -9.182609558105469
    10. '_cursor' → logprob: -9.182609558105469

Token 408: ' cursor' (ID: 14944)
  Prédit: ' cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cursor' → logprob: -0.20142541825771332
    2. 'cursor' → logprob: -1.7014254331588745
    3. '   ' → logprob: -11.951425552368164
    4. '(cursor' → logprob: -12.576425552368164
    5. '	cursor' → logprob: -13.576425552368164
    6. ' ' → logprob: -15.201425552368164
    7. '_cursor' → logprob: -15.951425552368164
    8. '.cursor' → logprob: -16.076425552368164
    9. '       ' → logprob: -16.076425552368164
    10. '    ' → logprob: -16.201425552368164

Token 409: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07889111340045929
    2. '+' → logprob: -2.5788910388946533
    3. ' plus' → logprob: -14.578890800476074
    4. ' ' → logprob: -14.828890800476074
    5. ' +
' → logprob: -15.578890800476074
    6. ' ' → logprob: -16.32889175415039
    7. '```' → logprob: -16.45389175415039
    8. '<|end|>' → logprob: -16.82889175415039
    9. ' +=' → logprob: -17.20389175415039
    10. '＋' → logprob: -17.20389175415039

Token 410: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0040785204619169235
    2. ' end' → logprob: -5.504078388214111
    3. '(end' → logprob: -17.379077911376953
    4. ' ' → logprob: -21.254077911376953
    5. '	end' → logprob: -21.379077911376953
    6. '_end' → logprob: -21.754077911376953
    7. '[end' → logprob: -21.754077911376953
    8. '   ' → logprob: -21.754077911376953
    9. '=end' → logprob: -22.004077911376953
    10. ''end' → logprob: -22.504077911376953

Token 411: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 412: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 413: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 414: ' backward' (ID: 58986)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'back' → logprob: -3.054500666621607e-06
    2. ' backward' → logprob: -13.12500286102295
    3. 'forward' → logprob: -14.00000286102295
    4. '.backward' → logprob: -16.250003814697266
    5. '_backward' → logprob: -18.000003814697266
    6. 'main' → logprob: -18.500003814697266
    7. 'Backward' → logprob: -20.000003814697266
    8. 'left' → logprob: -20.375003814697266
    9. ' back' → logprob: -21.000003814697266
    10. 'skip' → logprob: -21.375003814697266

Token 415: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.005296723451465368
    2. '_char' → logprob: -5.25529670715332
    3. '_' → logprob: -10.38029670715332
    4. '_cursor' → logprob: -10.50529670715332
    5. '_words' → logprob: -13.00529670715332
    6. '_token' → logprob: -14.63029670715332
    7. '```' → logprob: -14.75529670715332
    8. '_character' → logprob: -15.25529670715332
    9. 'def' → logprob: -15.50529670715332
    10. 'word' → logprob: -16.00529670715332

Token 416: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -0.011103121563792229
    2. '(cursor' → logprob: -4.51110315322876
    3. ' (' → logprob: -9.886102676391602
    4. '(' → logprob: -12.386102676391602
    5. '(txt' → logprob: -17.0111026763916
    6. ',' → logprob: -17.1361026763916
    7. ',text' → logprob: -17.2611026763916
    8. ' text' → logprob: -17.3861026763916
    9. '   ' → logprob: -17.5111026763916
    10. '(context' → logprob: -17.5111026763916

Token 417: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.1888679839321412e-05
    2. ' ,' → logprob: -11.375021934509277
    3. ',c' → logprob: -11.750021934509277
    4. '   ' → logprob: -13.250021934509277
    5. ',
' → logprob: -15.125021934509277
    6. ',text' → logprob: -15.375021934509277
    7. '(cursor' → logprob: -15.875021934509277
    8. '‌,' → logprob: -17.37502098083496
    9. '       ' → logprob: -17.50002098083496
    10. '```' → logprob: -18.12502098083496

Token 418: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.1269831359386444
    2. ' cursor' → logprob: -2.126983165740967
    3. '_cursor' → logprob: -10.376982688903809
    4. '	cursor' → logprob: -11.501982688903809
    5. '(cursor' → logprob: -11.751982688903809
    6. '.cursor' → logprob: -13.376982688903809
    7. '   ' → logprob: -13.876982688903809
    8. '       ' → logprob: -14.376982688903809
    9. 'Cursor' → logprob: -14.501982688903809
    10. ')' → logprob: -14.501982688903809

Token 419: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5761821269989014
    2. '):' → logprob: -0.8261821269989014
    3. '   ' → logprob: -8.57618236541748
    4. '       ' → logprob: -10.70118236541748
    5. '):
' → logprob: -11.07618236541748
    6. ')' → logprob: -11.57618236541748
    7. '):

' → logprob: -12.70118236541748
    8. ':' → logprob: -13.57618236541748
    9. '():
' → logprob: -13.95118236541748
    10. '**' → logprob: -15.57618236541748

Token 420: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014585316239390522
    2. '   ' → logprob: -9.50014591217041
    3. ' if' → logprob: -9.75014591217041
    4. 'if' → logprob: -11.62514591217041
    5. ' left' → logprob: -13.25014591217041
    6. 'left' → logprob: -13.25014591217041
    7. 'def' → logprob: -16.625144958496094
    8. '```' → logprob: -17.000144958496094
    9. ',' → logprob: -17.125144958496094
    10. '	if' → logprob: -17.625144958496094

Token 421: ' left' (ID: 3561)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9421598315238953
    2. ' left' → logprob: -1.31715989112854
    3. '   ' → logprob: -1.69215989112854
    4. 'left' (adapté à ' left') → logprob: -2.56715989112854
    5. ' if' → logprob: -2.94215989112854
    6. 'if' → logprob: -3.56715989112854
    7. 'def' → logprob: -8.692159652709961
    8. 'text' → logprob: -9.317159652709961
    9. '    ' → logprob: -9.817159652709961
    10. '	left' → logprob: -10.192159652709961

Token 422: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -3.8889261304575484e-06
    2. '_tokens' → logprob: -13.875003814697266
    3. '_parts' → logprob: -14.375003814697266
    4. '_word' → logprob: -14.500003814697266
    5. '_' → logprob: -14.875003814697266
    6. '_chars' → logprob: -15.000003814697266
    7. 'def' → logprob: -15.125003814697266
    8. ',_' → logprob: -15.500003814697266
    9. ',' → logprob: -15.625003814697266
    10. 'words' → logprob: -16.625003814697266

Token 423: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.1080467781284824e-05
    2. '=' → logprob: -10.500041007995605
    3. ' ,' → logprob: -11.500041007995605
    4. ' =' → logprob: -13.875041007995605
    5. 'def' → logprob: -14.250041007995605
    6. '       ' → logprob: -14.875041007995605
    7. '   ' → logprob: -15.125041007995605
    8. ',text' → logprob: -15.250041007995605
    9. '_,' → logprob: -15.625041007995605
    10. 'if' → logprob: -15.875041007995605

Token 424: ' right' (ID: 1849)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.6665285229682922
    2. ' text' → logprob: -1.0415284633636475
    3. 'cursor' → logprob: -3.0415284633636475
    4. ' cursor' → logprob: -3.2915284633636475
    5. 'split' → logprob: -4.041528701782227
    6. '<|end|>' → logprob: -4.541528701782227
    7. ',' → logprob: -5.791528701782227
    8. ' split' → logprob: -5.916528701782227
    9. 'right' → logprob: -5.916528701782227
    10. ' right' → logprob: -6.041528701782227

Token 425: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -0.023464307188987732
    2. ',' → logprob: -4.523464202880859
    3. '_pos' → logprob: -4.898464202880859
    4. '=' → logprob: -6.273464202880859
    5. 'words' → logprob: -7.148464202880859
    6. '       ' → logprob: -7.523464202880859
    7. '_chars' → logprob: -7.898464202880859
    8. ' =' → logprob: -8.02346420288086
    9. 'text' → logprob: -9.02346420288086
    10. '   ' → logprob: -9.27346420288086

Token 426: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3134405016899109
    2. '=' → logprob: -1.3134405612945557
    3. '=text' → logprob: -8.688440322875977
    4. '   ' → logprob: -11.813440322875977
    5. '(text' → logprob: -13.438440322875977
    6. '       ' → logprob: -14.563440322875977
    7. ',' → logprob: -15.188440322875977
    8. ' ' → logprob: -15.438440322875977
    9. '=
' → logprob: -16.563440322875977
    10. 'text' → logprob: -16.813440322875977

Token 427: ' split' (ID: 12648)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007769925869069993
    2. ' split' → logprob: -7.500776767730713
    3. 'text' → logprob: -8.500777244567871
    4. '(text' → logprob: -11.250777244567871
    5. '(split' → logprob: -12.000777244567871
    6. ' text' → logprob: -14.125777244567871
    7. 'return' → logprob: -15.125777244567871
    8. '   ' → logprob: -15.250777244567871
    9. '[text' → logprob: -16.500776290893555
    10. '       ' → logprob: -17.000776290893555

Token 428: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -1.7432603272027336e-06
    2. 'words' → logprob: -14.500001907348633
    3. '_word' → logprob: -14.875001907348633
    4. '```' → logprob: -15.000001907348633
    5. '_chars' → logprob: -16.125001907348633
    6. 'def' → logprob: -16.500001907348633
    7. '_' → logprob: -16.625001907348633
    8. '_text' → logprob: -16.750001907348633
    9. '_parts' → logprob: -17.625001907348633
    10. '(words' → logprob: -17.750001907348633

Token 429: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -3.702754474943504e-05
    2. 'text' → logprob: -10.37503719329834
    3. '{text' → logprob: -12.87503719329834
    4. ' text' → logprob: -14.12503719329834
    5. ',text' → logprob: -14.50003719329834
    6. '(' → logprob: -14.75003719329834
    7. ' (' → logprob: -14.75003719329834
    8. '```' → logprob: -15.00003719329834
    9. '   ' → logprob: -15.12503719329834
    10. '=text' → logprob: -15.62503719329834

Token 430: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009628580883145332
    2. ',text' → logprob: -4.759628772735596
    3. '(text' → logprob: -7.009628772735596
    4. 'text' → logprob: -10.509628295898438
    5. '       ' → logprob: -10.759628295898438
    6. ' ,' → logprob: -10.884628295898438
    7. '   ' → logprob: -10.884628295898438
    8. ' text' → logprob: -11.884628295898438
    9. ',
' → logprob: -12.009628295898438
    10. '=text' → logprob: -12.009628295898438

Token 431: ' cursor' (ID: 14944)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.0009125363430939615
    2. ' text' → logprob: -7.000912666320801
    3. '   ' → logprob: -14.5009126663208
    4. '       ' → logprob: -14.8759126663208
    5. '(text' → logprob: -17.000911712646484
    6. 'cursor' → logprob: -17.500911712646484
    7. '           ' → logprob: -18.000911712646484
    8. '
' → logprob: -18.125911712646484
    9. '{text' → logprob: -18.750911712646484
    10. ')' → logprob: -18.750911712646484

Token 432: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.049764592200517654
    2. ')' → logprob: -3.049764633178711
    3. '       ' → logprob: -6.799764633178711
    4. '):
' → logprob: -10.049764633178711
    5. '   ' → logprob: -11.674764633178711
    6. ')
' → logprob: -11.924764633178711
    7. '):' → logprob: -13.299764633178711
    8. ')

' → logprob: -13.924764633178711
    9. ')`
' → logprob: -14.174764633178711
    10. 'def' → logprob: -15.049764633178711

Token 433: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002312145894393325
    2. '   ' → logprob: -6.752312183380127
    3. 'if' → logprob: -7.252312183380127
    4. ' if' → logprob: -7.752312183380127
    5. '
' → logprob: -13.752311706542969
    6. '	if' → logprob: -14.627311706542969
    7. '     ' → logprob: -14.627311706542969
    8. '      ' → logprob: -15.627311706542969
    9. '```' → logprob: -16.00231170654297
    10. '    ' → logprob: -16.12731170654297

Token 434: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04922988638281822
    2. '       ' → logprob: -3.299229860305786
    3. ' if' → logprob: -4.549230098724365
    4. '   ' → logprob: -7.549230098724365
    5. '
' → logprob: -11.049229621887207
    6. '	if' → logprob: -12.299229621887207
    7. 'for' → logprob: -13.299229621887207
    8. '     ' → logprob: -14.674229621887207
    9. '```' → logprob: -14.924229621887207
    10. ' ' → logprob: -14.924229621887207

Token 435: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3132675588130951
    2. 'not' → logprob: -1.3132675886154175
    3. '   ' → logprob: -12.563267707824707
    4. 'left' → logprob: -13.563267707824707
    5. 'len' → logprob: -14.813267707824707
    6. '       ' → logprob: -15.813267707824707
    7. ' ' → logprob: -15.938267707824707
    8. ' len' → logprob: -16.06326675415039
    9. '	not' → logprob: -16.18826675415039
    10. '!' → logprob: -16.43826675415039

Token 436: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.06196959316730499
    2. ' left' → logprob: -2.811969518661499
    3. '   ' → logprob: -14.311969757080078
    4. '[left' → logprob: -15.061969757080078
    5. '(left' → logprob: -15.311969757080078
    6. '	left' → logprob: -15.311969757080078
    7. ' ' → logprob: -15.311969757080078
    8. 'right' → logprob: -15.686969757080078
    9. '       ' → logprob: -16.686969757080078
    10. '_left' → logprob: -17.061969757080078

Token 437: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -1.2664456789934775e-06
    2. '_parts' → logprob: -15.125000953674316
    3. ')' → logprob: -15.375000953674316
    4. 'words' → logprob: -15.500000953674316
    5. ')_' → logprob: -15.875000953674316
    6. '_' → logprob: -16.500001907348633
    7. '_chars' → logprob: -17.125001907348633
    8. '_word' → logprob: -17.250001907348633
    9. '
' → logprob: -17.250001907348633
    10. 'def' → logprob: -17.375001907348633

Token 438: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5235758423805237
    2. ':' → logprob: -0.8985758423805237
    3. '           ' → logprob: -8.648575782775879
    4. '       ' → logprob: -8.773575782775879
    5. ':return' → logprob: -10.148575782775879
    6. ':

' → logprob: -10.773575782775879
    7. '):
' → logprob: -10.773575782775879
    8. '[' → logprob: -11.523575782775879
    9. ':
' → logprob: -11.648575782775879
    10. '():
' → logprob: -12.023575782775879

Token 439: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.700481116771698
    2. ' return' → logprob: -1.0754811763763428
    3. '       ' → logprob: -2.0754811763763428
    4. 'return' → logprob: -3.3254811763763428
    5. '   ' → logprob: -7.325480937957764
    6. '
' → logprob: -8.325481414794922
    7. '	return' → logprob: -9.950481414794922
    8. ':return' → logprob: -10.700481414794922
    9. '	   ' → logprob: -10.950481414794922
    10. ',' → logprob: -10.950481414794922

Token 440: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10047774761915207
    2. ' return' → logprob: -2.350477695465088
    3. '           ' → logprob: -8.600478172302246
    4. '       ' → logprob: -9.600478172302246
    5. '   ' → logprob: -11.475478172302246
    6. '
' → logprob: -12.100478172302246
    7. '0' → logprob: -12.975478172302246
    8. ' ' → logprob: -14.225478172302246
    9. '	return' → logprob: -15.225478172302246
    10. '               ' → logprob: -16.72547721862793

Token 441: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008634611731395125
    2. 'cursor' → logprob: -7.250863552093506
    3. ' ' → logprob: -8.875863075256348
    4. ' cursor' → logprob: -11.250863075256348
    5. '   ' → logprob: -14.500863075256348
    6. '```' → logprob: -16.625864028930664
    7. '(cursor' → logprob: -16.875864028930664
    8. '       ' → logprob: -17.125864028930664
    9. '
' → logprob: -17.188364028930664
    10. '  ' → logprob: -17.438364028930664

Token 442: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021893989760428667
    2. 'cursor' → logprob: -6.127189636230469
    3. ' ' → logprob: -12.752189636230469
    4. ' cursor' → logprob: -13.752189636230469
    5. '   ' → logprob: -15.877189636230469
    6. '```' → logprob: -16.25218963623047
    7. '(cursor' → logprob: -17.43968963623047
    8. '`' → logprob: -17.68968963623047
    9. '	cursor' → logprob: -17.87718963623047
    10. '０' → logprob: -18.43968963623047

Token 443: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.633072555065155
    2. '       ' → logprob: -0.758072555065155
    3. ',' → logprob: -8.883072853088379
    4. '   ' → logprob: -9.008072853088379
    5. 'else' → logprob: -9.758072853088379
    6. '        
' → logprob: -10.008072853088379
    7. ' else' → logprob: -10.383072853088379
    8. ',
' → logprob: -10.758072853088379
    9. '    
' → logprob: -11.133072853088379
    10. '
' → logprob: -11.383072853088379

Token 444: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003038558876141906
    2. 'else' → logprob: -6.12803840637207
    3. ' else' → logprob: -7.75303840637207
    4. '   ' → logprob: -7.87803840637207
    5. '
' → logprob: -10.62803840637207
    6. '```' → logprob: -11.25303840637207
    7. ',' → logprob: -13.00303840637207
    8. '​' → logprob: -14.00303840637207
    9. '#else' → logprob: -14.75303840637207
    10. '	else' → logprob: -15.00303840637207

Token 445: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.6073653697967529
    2. '       ' → logprob: -0.8573653697967529
    3. ' else' → logprob: -3.607365369796753
    4. '   ' → logprob: -5.857365608215332
    5. '```' → logprob: -7.732365608215332
    6. ',' → logprob: -8.732365608215332
    7. '
' → logprob: -8.857365608215332
    8. 'start' → logprob: -8.982365608215332
    9. '	else' → logprob: -10.607365608215332
    10. '	' → logprob: -11.482365608215332

Token 446: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7117634415626526
    2. ':' → logprob: -0.8367634415626526
    3. '           ' → logprob: -2.586763381958008
    4. '       ' → logprob: -8.586763381958008
    5. ' :
' → logprob: -8.836763381958008
    6. ' :' → logprob: -8.961763381958008
    7. ',' → logprob: -9.086763381958008
    8. '          ' → logprob: -9.461763381958008
    9. '         ' → logprob: -9.836763381958008
    10. ':
' → logprob: -10.336763381958008

Token 447: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04381612315773964
    2. 'start' → logprob: -3.543816089630127
    3. '#' → logprob: -4.668816089630127
    4. '           ' → logprob: -5.793816089630127
    5. ' start' → logprob: -7.168816089630127
    6. '   ' → logprob: -7.543816089630127
    7. '
' → logprob: -9.418816566467285
    8. ' #' → logprob: -9.793816566467285
    9. '```' → logprob: -10.043816566467285
    10. 'return' → logprob: -11.418816566467285

Token 448: ' #' (ID: 1069)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.046016037464141846
    2. '#' (adapté à ' #') → logprob: -3.296015977859497
    3. '           ' → logprob: -5.421016216278076
    4. '       ' → logprob: -6.296016216278076
    5. ' start' → logprob: -6.796016216278076
    6. 'return' → logprob: -7.671016216278076
    7. ' #' → logprob: -10.046015739440918
    8. '   ' → logprob: -10.296015739440918
    9. ' return' → logprob: -12.921015739440918
    10. '
' → logprob: -12.921015739440918

Token 449: ' move' (ID: 5275)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.021214712411165237
    2. '#' → logprob: -4.021214485168457
    3. '           ' → logprob: -6.021214485168457
    4. ' start' → logprob: -7.646214485168457
    5. 'return' → logprob: -9.146214485168457
    6. ' #' → logprob: -10.521214485168457
    7. '       ' → logprob: -11.771214485168457
    8. '
' → logprob: -12.146214485168457
    9. '   ' → logprob: -12.771214485168457
    10. 's' → logprob: -14.271214485168457

Token 450: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.27025333046913147
    2. ' cursor' → logprob: -1.520253300666809
    3. '_cursor' → logprob: -5.0202531814575195
    4. 'to' → logprob: -5.0202531814575195
    5. 'start' → logprob: -6.5202531814575195
    6. '(cursor' → logprob: -6.8952531814575195
    7. '           ' → logprob: -7.1452531814575195
    8. 'text' → logprob: -7.7702531814575195
    9. '_start' → logprob: -8.27025318145752
    10. '_to' → logprob: -8.52025318145752

Token 451: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.25424185395240784
    2. ' to' → logprob: -1.5042418241500854
    3. '=' → logprob: -6.504241943359375
    4. ' =' → logprob: -7.379241943359375
    5. '           ' → logprob: -9.129241943359375
    6. '_to' → logprob: -9.629241943359375
    7. ',' → logprob: -12.629241943359375
    8. ' ' → logprob: -12.754241943359375
    9. 'To' → logprob: -13.254241943359375
    10. '            ' → logprob: -13.754241943359375

Token 452: ' the' (ID: 290)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.3222655653953552
    2. ' left' → logprob: -1.322265625
    3. ' cursor' → logprob: -5.447265625
    4. 'cursor' → logprob: -5.447265625
    5. 'text' → logprob: -9.072265625
    6. '           ' → logprob: -9.197265625
    7. 'start' → logprob: -10.197265625
    8. ' text' → logprob: -10.947265625
    9. '   ' → logprob: -11.322265625
    10. '       ' → logprob: -11.447265625

Token 453: ' beginning' (ID: 10526)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.2861747443675995
    2. 'left' → logprob: -2.161174774169922
    3. ' cursor' → logprob: -2.286174774169922
    4. 'start' → logprob: -4.036174774169922
    5. ' left' → logprob: -4.786174774169922
    6. 'text' → logprob: -5.286174774169922
    7. ' start' → logprob: -7.286174774169922
    8. ' text' → logprob: -8.911174774169922
    9. 'begin' → logprob: -10.161174774169922
    10. ' ' → logprob: -10.536174774169922

Token 454: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.42538148164749146
    2. '           ' → logprob: -1.5503814220428467
    3. 'of' → logprob: -2.0503814220428467
    4. '       ' → logprob: -6.175381660461426
    5. '=' → logprob: -6.675381660461426
    6. ' =' → logprob: -7.175381660461426
    7. ',' → logprob: -7.675381660461426
    8. '_of' → logprob: -8.675381660461426
    9. 'Of' → logprob: -9.050381660461426
    10. 'left' → logprob: -9.175381660461426

Token 455: ' the' (ID: 290)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.1957000494003296
    2. ' left' → logprob: -1.8207000494003296
    3. 'text' → logprob: -4.320700168609619
    4. ' text' → logprob: -6.195700168609619
    5. '           ' → logprob: -7.820700168609619
    6. '       ' → logprob: -10.070699691772461
    7. '   ' → logprob: -11.195699691772461
    8. 'the' → logprob: -11.695699691772461
    9. ' the' → logprob: -11.820699691772461
    10. '        ' → logprob: -12.195699691772461

Token 456: ' right' (ID: 1849)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.3618197441101074
    2. ' left' → logprob: -1.2368197441101074
    3. 'last' → logprob: -4.986819744110107
    4. ' last' → logprob: -5.236819744110107
    5. 'text' → logprob: -7.486819744110107
    6. 'word' → logprob: -8.611820220947266
    7. 'first' → logprob: -8.986820220947266
    8. ' first' → logprob: -9.611820220947266
    9. ' text' → logprob: -9.986820220947266
    10. 'start' → logprob: -10.361820220947266

Token 457: 'most' (ID: 5309)
  Prédit: 'most'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -0.0004083891399204731
    2. '_words' → logprob: -8.125408172607422
    3. '_m' → logprob: -9.375408172607422
    4. '-most' → logprob: -11.750408172607422
    5. '[-' → logprob: -12.500408172607422
    6. 'est' → logprob: -12.500408172607422
    7. 'Most' → logprob: -13.750408172607422
    8. 'left' → logprob: -13.750408172607422
    9. 'm' → logprob: -13.750408172607422
    10. '```' → logprob: -13.750408172607422

Token 458: ' word' (ID: 2195)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.7562055587768555
    2. ' left' → logprob: -1.5062055587768555
    3. 'word' → logprob: -1.7562055587768555
    4. ' word' → logprob: -2.0062055587768555
    5. '(left' → logprob: -6.6312055587768555
    6. '_word' → logprob: -8.506205558776855
    7. '(word' → logprob: -9.881205558776855
    8. '_left' → logprob: -10.506205558776855
    9. '[left' → logprob: -12.756205558776855
    10. '(' → logprob: -13.506205558776855

Token 459: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11153846234083176
    2. '           ' → logprob: -2.3615384101867676
    3. ' =' → logprob: -5.861538410186768
    4. ',' → logprob: -5.861538410186768
    5. '       ' → logprob: -5.986538410186768
    6. ' left' → logprob: -7.736538410186768
    7. 'left' → logprob: -7.861538410186768
    8. '(left' → logprob: -7.986538410186768
    9. 'in' → logprob: -8.111538887023926
    10. '[left' → logprob: -8.236538887023926

Token 460: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.027022045105695724
    2. ' left' → logprob: -3.652022123336792
    3. 'text' → logprob: -7.277021884918213
    4. ' text' → logprob: -10.652022361755371
    5. '   ' → logprob: -12.652022361755371
    6. ' ' → logprob: -13.527022361755371
    7. 'right' → logprob: -14.777022361755371
    8. '```' → logprob: -14.777022361755371
    9. '(left' → logprob: -15.277022361755371
    10. '	left' → logprob: -15.402022361755371

Token 461: ' part' (ID: 997)
  Prédit: '_words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -0.0002800471556838602
    2. '_part' → logprob: -8.750280380249023
    3. 'part' → logprob: -9.750280380249023
    4. 'words' → logprob: -10.625280380249023
    5. '_parts' → logprob: -11.000280380249023
    6. '```' → logprob: -12.125280380249023
    7. ' part' → logprob: -12.250280380249023
    8. '   ' → logprob: -12.250280380249023
    9. 'def' → logprob: -13.000280380249023
    10. '_' → logprob: -13.625280380249023

Token 462: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08355636149644852
    2. '
' → logprob: -2.5835564136505127
    3. 'start' → logprob: -5.708556175231934
    4. ',' → logprob: -7.708556175231934
    5. '       ' → logprob: -7.958556175231934
    6. '(start' → logprob: -8.333556175231934
    7. ' start' → logprob: -9.458556175231934
    8. '
' → logprob: -10.083556175231934
    9. '            
' → logprob: -10.458556175231934
    10. ',start' → logprob: -10.583556175231934

Token 463: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25826525688171387
    2. 'start' → logprob: -1.7582652568817139
    3. '       ' → logprob: -3.133265256881714
    4. ' start' → logprob: -5.258265495300293
    5. '
' → logprob: -5.383265495300293
    6. 'return' → logprob: -7.258265495300293
    7. '(start' → logprob: -7.383265495300293
    8. ',' → logprob: -9.008265495300293
    9. '   ' → logprob: -9.258265495300293
    10. '         ' → logprob: -9.508265495300293

Token 464: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.10346920043230057
    2. ' start' → logprob: -2.478469133377075
    3. 'return' → logprob: -4.853469371795654
    4. '           ' → logprob: -5.478469371795654
    5. ' return' → logprob: -6.228469371795654
    6. '       ' → logprob: -8.228468894958496
    7. ',' → logprob: -9.978468894958496
    8. '(start' → logprob: -10.228468894958496
    9. '_,' → logprob: -10.353468894958496
    10. ',start' → logprob: -10.478468894958496

Token 465: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025455779395997524
    2. '=' → logprob: -6.002545356750488
    3. ' =' → logprob: -9.877545356750488
    4. ' ,' → logprob: -11.627545356750488
    5. '           ' → logprob: -12.127545356750488
    6. ',end' → logprob: -13.877545356750488
    7. ',_' → logprob: -14.002545356750488
    8. ',
' → logprob: -14.627545356750488
    9. '_,' → logprob: -15.127545356750488
    10. '       ' → logprob: -15.377545356750488

Token 466: ' end' (ID: 1268)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.2813476026058197
    2. ' left' → logprob: -1.406347632408142
    3. '<|end|>' → logprob: -9.656347274780273
    4. '[left' → logprob: -10.531347274780273
    5. 'start' → logprob: -11.031347274780273
    6. '0' → logprob: -11.281347274780273
    7. '(left' → logprob: -11.531347274780273
    8. '        ' → logprob: -11.656347274780273
    9. ')' → logprob: -11.781347274780273
    10. '	left' → logprob: -11.781347274780273

Token 467: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011048170737922192
    2. '=' → logprob: -4.511048316955566
    3. '           ' → logprob: -16.01104736328125
    4. ' ' → logprob: -16.51104736328125
    5. '       ' → logprob: -16.88604736328125
    6. '   ' → logprob: -17.01104736328125
    7. '    ' → logprob: -17.38604736328125
    8. '        ' → logprob: -17.63604736328125
    9. ',' → logprob: -17.88604736328125
    10. '            ' → logprob: -18.76104736328125

Token 468: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.029753848910331726
    2. 'left' → logprob: -3.5297539234161377
    3. '           ' → logprob: -13.404753684997559
    4. '    ' → logprob: -14.529753684997559
    5. '	left' → logprob: -15.029753684997559
    6. '        ' → logprob: -15.279753684997559
    7. '            ' → logprob: -15.404753684997559
    8. '(left' → logprob: -15.404753684997559
    9. ' lef' → logprob: -16.154754638671875
    10. ' ' → logprob: -16.654754638671875

Token 469: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -1.9361264946837764e-07
    2. 'words' → logprob: -16.5
    3. '_parts' → logprob: -19.375
    4. '_word' → logprob: -19.75
    5. 'Words' → logprob: -20.0
    6. '(words' → logprob: -20.75
    7. '_weights' → logprob: -20.875
    8. '_' → logprob: -21.25
    9. '_w' → logprob: -21.25
    10. '_letters' → logprob: -21.375

Token 470: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -6.630610641877865e-06
    2. '-' → logprob: -12.000006675720215
    3. '```' → logprob: -15.625006675720215
    4. '   ' → logprob: -15.750006675720215
    5. '(-' → logprob: -17.2500057220459
    6. '[' → logprob: -17.7500057220459
    7. '[len' → logprob: -17.7500057220459
    8. '       ' → logprob: -18.0000057220459
    9. '
' → logprob: -18.1250057220459
    10. ' -' → logprob: -18.2500057220459

Token 471: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -14.000001907348633
    3. ']' → logprob: -15.750001907348633
    4. '(' → logprob: -16.250001907348633
    5. '])' → logprob: -16.875001907348633
    6. '```' → logprob: -17.000001907348633
    7. '-' → logprob: -17.250001907348633
    8. '   ' → logprob: -17.875001907348633
    9. '
' → logprob: -18.062501907348633
    10. '2' → logprob: -18.062501907348633

Token 472: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0691303238272667
    2. ')' → logprob: -3.0691304206848145
    3. ']
' → logprob: -3.9441304206848145
    4. ')
' → logprob: -7.9441304206848145
    5. ' ]' → logprob: -8.694129943847656
    6. '           ' → logprob: -8.819129943847656
    7. '<|end|>' → logprob: -9.069129943847656
    8. '])' → logprob: -9.194129943847656
    9. ')]' → logprob: -10.569129943847656
    10. '       ' → logprob: -11.319129943847656

Token 473: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012111775577068329
    2. 'return' → logprob: -4.637111663818359
    3. '       ' → logprob: -6.887111663818359
    4. ' return' → logprob: -7.012111663818359
    5. '   ' → logprob: -8.01211166381836
    6. '
' → logprob: -9.76211166381836
    7. '```' → logprob: -11.01211166381836
    8. '<|end|>' → logprob: -12.38711166381836
    9. '            
' → logprob: -12.63711166381836
    10. '        
' → logprob: -12.88711166381836

Token 474: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.26650452613830566
    2. '           ' → logprob: -1.5165045261383057
    3. ' return' → logprob: -4.516504287719727
    4. '   ' → logprob: -6.141504287719727
    5. '       ' → logprob: -6.766504287719727
    6. '
' → logprob: -8.766504287719727
    7. '	return' → logprob: -9.516504287719727
    8. '```' → logprob: -12.766504287719727
    9. '	       ' → logprob: -12.766504287719727
    10. ' ' → logprob: -14.641504287719727

Token 475: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00317783304490149
    2. ' start' → logprob: -5.753177642822266
    3. '   ' → logprob: -16.628177642822266
    4. '[start' → logprob: -19.003177642822266
    5. '	start' → logprob: -19.753177642822266
    6. '(start' → logprob: -20.753177642822266
    7. '       ' → logprob: -20.753177642822266
    8. ' ' → logprob: -20.753177642822266
    9. '           ' → logprob: -21.003177642822266
    10. '    ' → logprob: -21.003177642822266

Token 476: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 477: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34184303879737854
    2. '<|end|>' → logprob: -1.3418430089950562
    3. 'def' → logprob: -4.591843128204346
    4. 'if' → logprob: -4.716843128204346
    5. '    
' → logprob: -5.716843128204346
    6. '
' → logprob: -5.716843128204346
    7. ')' → logprob: -7.341843128204346
    8. '```' → logprob: -7.466843128204346
    9. 'return' → logprob: -7.966843128204346
    10. '#' → logprob: -8.091842651367188

Token 478: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22192737460136414
    2. '<|end|>' → logprob: -1.9719274044036865
    3. '    
' → logprob: -3.3469274044036865
    4. 'def' (adapté à ' def') → logprob: -4.221927165985107
    5. 'while' → logprob: -5.971927165985107
    6. 'if' → logprob: -6.096927165985107
    7. '    ' → logprob: -7.221927165985107
    8. 'for' → logprob: -7.346927165985107
    9. '#' → logprob: -7.471927165985107
    10. '
' → logprob: -7.596927165985107

Token 479: ' insert' (ID: 10898)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.4547027051448822
    2. 'move' → logprob: -1.9547027349472046
    3. 'delete' → logprob: -2.579702615737915
    4. 'insert' → logprob: -2.954702615737915
    5. 'forward' → logprob: -3.704702615737915
    6. 'word' → logprob: -4.204702854156494
    7. 'process' → logprob: -4.454702854156494
    8. 'handle' → logprob: -5.079702854156494
    9. 'run' → logprob: -5.579702854156494
    10. 'home' → logprob: -5.579702854156494

Token 480: '_text' (ID: 9118)
  Prédit: '_text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_text' → logprob: -0.7571389079093933
    2. '_char' → logprob: -0.7571389079093933
    3. '(text' → logprob: -3.882138967514038
    4. '_character' → logprob: -4.007138729095459
    5. '_(' → logprob: -4.882138729095459
    6. '_' → logprob: -4.882138729095459
    7. '_token' → logprob: -5.132138729095459
    8. '(' → logprob: -6.632138729095459
    9. ' (' → logprob: -8.382139205932617
    10. 'char' → logprob: -8.882139205932617

Token 481: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -0.0023982475977391005
    2. ' (' → logprob: -6.7523980140686035
    3. '(' → logprob: -7.0023980140686035
    4. '(cursor' → logprob: -8.502398490905762
    5. '(line' → logprob: -9.752398490905762
    6. '(position' → logprob: -11.752398490905762
    7. '(txt' → logprob: -11.752398490905762
    8. '(parent' → logprob: -12.002398490905762
    9. 'text' → logprob: -12.502398490905762
    10. '(Text' → logprob: -12.502398490905762

Token 482: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2664456789934775e-06
    2. ',text' → logprob: -14.250000953674316
    3. ' ,' → logprob: -14.875000953674316
    4. ',index' → logprob: -16.875001907348633
    5. '‌,' → logprob: -17.000001907348633
    6. ',c' → logprob: -17.625001907348633
    7. ',line' → logprob: -17.750001907348633
    8. ',
' → logprob: -17.875001907348633
    9. ',pos' → logprob: -18.000001907348633
    10. ',current' → logprob: -18.250001907348633

Token 483: ' cursor' (ID: 14944)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5328490734100342
    2. 'cursor' → logprob: -1.1578490734100342
    3. ' cursor' → logprob: -2.907849073410034
    4. ' pos' → logprob: -3.407849073410034
    5. 'position' → logprob: -5.407849311828613
    6. 'insert' → logprob: -5.657849311828613
    7. 'index' → logprob: -6.657849311828613
    8. ' position' → logprob: -7.407849311828613
    9. 'text' → logprob: -7.532849311828613
    10. ' insert' → logprob: -7.657849311828613

Token 484: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.080963092041202e-06
    2. ' ,' → logprob: -12.625004768371582
    3. ',text' → logprob: -13.625004768371582
    4. '   ' → logprob: -14.625004768371582
    5. ',
' → logprob: -17.1250057220459
    6. ':' → logprob: -17.6250057220459
    7. 'text' → logprob: -18.2500057220459
    8. '       ' → logprob: -18.5000057220459
    9. '‌,' → logprob: -18.5000057220459
    10. ',line' → logprob: -18.6250057220459

Token 485: ' ins' (ID: 2215)
  Prédit: 'insert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'insert' → logprob: -0.029404444620013237
    2. ' insert' → logprob: -4.029404640197754
    3. 'new' → logprob: -5.154404640197754
    4. 'in' → logprob: -6.029404640197754
    5. 'ins' → logprob: -7.029404640197754
    6. 'to' → logprob: -7.154404640197754
    7. ' insertion' → logprob: -7.654404640197754
    8. 'text' → logprob: -8.279404640197754
    9. 's' → logprob: -8.779404640197754
    10. ' new' → logprob: -8.904404640197754

Token 486: '):
' (ID: 1883)
  Prédit: 'ert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ert' → logprob: -1.688212614681106e-05
    2. ')' → logprob: -11.500017166137695
    3. '_text' → logprob: -12.875017166137695
    4. '```' → logprob: -13.625017166137695
    5. 'ort' → logprob: -14.375017166137695
    6. ' ert' → logprob: -14.875017166137695
    7. '``' → logprob: -15.000017166137695
    8. 'ерт' → logprob: -15.625017166137695
    9. 'rt' → logprob: -15.625017166137695
    10. 'ért' → logprob: -15.750017166137695

Token 487: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019106694962829351
    2. '   ' → logprob: -7.25191068649292
    3. ':' → logprob: -7.75191068649292
    4. ' return' → logprob: -8.126910209655762
    5. ' text' → logprob: -8.501910209655762
    6. ':
' → logprob: -8.876910209655762
    7. ',' → logprob: -10.376910209655762
    8. 'text' → logprob: -10.501910209655762
    9. ' new' → logprob: -10.751910209655762
    10. '{text' → logprob: -11.251910209655762

Token 488: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7562115788459778
    2. '   ' → logprob: -1.256211519241333
    3. 'return' (adapté à ' return') → logprob: -1.506211519241333
    4. ' new' → logprob: -4.256211757659912
    5. '       ' → logprob: -5.131211757659912
    6. 'new' → logprob: -5.631211757659912
    7. 'text' → logprob: -8.381211280822754
    8. ' text' → logprob: -8.881211280822754
    9. '	return' → logprob: -10.381211280822754
    10. ' before' → logprob: -12.131211280822754

Token 489: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.6931474208831787
    2. ' text' → logprob: -0.6931474208831787
    3. '(text' → logprob: -16.318147659301758
    4. '{text' → logprob: -17.443147659301758
    5. '	text' → logprob: -17.693147659301758
    6. ' ' → logprob: -17.943147659301758
    7. '   ' → logprob: -18.193147659301758
    8. '_text' → logprob: -18.568147659301758
    9. '"text' → logprob: -18.943147659301758
    10. '.text' → logprob: -19.068147659301758

Token 490: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -5.080963092041202e-06
    2. '[' → logprob: -12.750004768371582
    3. '+' → logprob: -13.375004768371582
    4. ' +' → logprob: -14.625004768371582
    5. '[:]' → logprob: -15.750004768371582
    6. ' [:' → logprob: -17.8750057220459
    7. '   ' → logprob: -18.1250057220459
    8. '```' → logprob: -18.3750057220459
    9. '[
' → logprob: -19.6250057220459
    10. '.replace' → logprob: -20.1250057220459

Token 491: 'cursor' (ID: 34222)
  Prédit: 'cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -3.7697225252486533e-06
    2. ' cursor' → logprob: -12.500003814697266
    3. '	cursor' → logprob: -16.875003814697266
    4. '(cursor' → logprob: -17.625003814697266
    5. '_cursor' → logprob: -18.000003814697266
    6. '.cursor' → logprob: -18.250003814697266
    7. 'ursor' → logprob: -18.875003814697266
    8. 'Cursor' → logprob: -21.375003814697266
    9. '   ' → logprob: -21.875003814697266
    10. '```' → logprob: -22.375003814697266

Token 492: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00030936390976421535
    2. ']+' → logprob: -8.375308990478516
    3. '+' → logprob: -9.500308990478516
    4. ' ]' → logprob: -12.500308990478516
    5. ' +' → logprob: -16.750308990478516
    6. ')' → logprob: -17.125308990478516
    7. '}' → logprob: -18.000308990478516
    8. '+]' → logprob: -18.000308990478516
    9. '>' → logprob: -18.125308990478516
    10. ']+"' → logprob: -19.000308990478516

Token 493: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47407716512680054
    2. ' +' → logprob: -0.9740771651268005
    3. ' ' → logprob: -17.474077224731445
    4. '   ' → logprob: -18.099077224731445
    5. ' plus' → logprob: -18.099077224731445
    6. '＋' → logprob: -18.599077224731445
    7. '+
' → logprob: -18.724077224731445
    8. '>' → logprob: -18.849077224731445
    9. '```' → logprob: -19.099077224731445
    10. ' +
' → logprob: -19.099077224731445

Token 494: ' ins' (ID: 2215)
  Prédit: 'ins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -7.941850526549388e-06
    2. ' ins' → logprob: -11.750007629394531
    3. '(ins' → logprob: -20.87500762939453
    4. 'inst' → logprob: -21.25000762939453
    5. 'insert' → logprob: -22.62500762939453
    6. 'ind' → logprob: -22.62500762939453
    7. 'in' → logprob: -23.50000762939453
    8. 'Ins' → logprob: -23.62500762939453
    9. '```' → logprob: -24.12500762939453
    10. '_ins' → logprob: -24.12500762939453

Token 495: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07889066636562347
    2. ' +' → logprob: -2.578890562057495
    3. 'text' → logprob: -14.078890800476074
    4. ' text' → logprob: -16.203889846801758
    5. '[text' → logprob: -18.953889846801758
    6. '[' → logprob: -19.078889846801758
    7. '+c' → logprob: -19.078889846801758
    8. '+xml' → logprob: -19.453889846801758
    9. ' ' → logprob: -19.578889846801758
    10. '{text' → logprob: -19.703889846801758

Token 496: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.00861456897109747
    2. ' text' → logprob: -4.758614540100098
    3. '   ' → logprob: -21.133615493774414
    4. '	text' → logprob: -21.258615493774414
    5. ' ' → logprob: -21.633615493774414
    6. 'Text' → logprob: -23.133615493774414
    7. '(text' → logprob: -23.383615493774414
    8. '{text' → logprob: -23.383615493774414
    9. '.text' → logprob: -23.508615493774414
    10. '"text' → logprob: -23.883615493774414

Token 497: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.250000953674316
    3. '[cur' → logprob: -15.250000953674316
    4. '[:]' → logprob: -17.000001907348633
    5. '```' → logprob: -17.500001907348633
    6. '[
' → logprob: -17.875001907348633
    7. '[:' → logprob: -18.500001907348633
    8. '[]' → logprob: -18.500001907348633
    9. '   ' → logprob: -18.750001907348633
    10. '\[' → logprob: -19.000001907348633

Token 498: 'ursor' (ID: 6519)
  Prédit: 'ursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursor' → logprob: -0.000169332604855299
    2. 'URSOR' → logprob: -9.25016975402832
    3. 'cursor' → logprob: -9.87516975402832
    4. '```' → logprob: -11.50016975402832
    5. 'ursors' → logprob: -12.50016975402832
    6. 'urse' → logprob: -13.62516975402832
    7. '_cursor' → logprob: -14.25016975402832
    8. 'urs' → logprob: -14.25016975402832
    9. '[' → logprob: -14.37516975402832
    10. 'ur' → logprob: -14.62516975402832

Token 499: ':],' (ID: 117284)
  Prédit: ':],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':],' → logprob: -0.6873131394386292
    2. ':]' → logprob: -1.1873130798339844
    3. ']' → logprob: -1.8123130798339844
    4. '],' → logprob: -3.5623130798339844
    5. ':' → logprob: -8.312313079833984
    6. ' :]' → logprob: -10.062313079833984
    7. ' ]' → logprob: -10.562313079833984
    8. ']+' → logprob: -10.562313079833984
    9. ',' → logprob: -10.687313079833984
    10. ' ],' → logprob: -12.062313079833984

Token 500: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.25197634100914
    2. ' cursor' → logprob: -1.5019763708114624
    3. '(cursor' → logprob: -10.501976013183594
    4. '	cursor' → logprob: -11.876976013183594
    5. 'len' → logprob: -12.126976013183594
    6. '.cursor' → logprob: -12.751976013183594
    7. '_cursor' → logprob: -13.501976013183594
    8. '   ' → logprob: -13.751976013183594
    9. 'Cursor' → logprob: -14.626976013183594
    10. ' len' → logprob: -15.001976013183594

Token 501: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.22597099840641022
    2. '+' → logprob: -1.600970983505249
    3. '[' → logprob: -8.350971221923828
    4. '<|end|>' → logprob: -8.850971221923828
    5. 'cursor' → logprob: -9.975971221923828
    6. '
' → logprob: -10.475971221923828
    7. 'def' → logprob: -11.100971221923828
    8. '   ' → logprob: -11.100971221923828
    9. '_cursor' → logprob: -11.350971221923828
    10. ',' → logprob: -12.100971221923828

Token 502: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: 0.0
    2. ' len' → logprob: -18.0
    3. '(len' → logprob: -21.0
    4. 'length' → logprob: -25.5
    5. '[len' → logprob: -25.625
    6. '   ' → logprob: -26.375
    7. '	len' → logprob: -26.5
    8. '=len' → logprob: -27.75
    9. '1' → logprob: -28.875
    10. 'Len' → logprob: -29.0

Token 503: '(ins' (ID: 125327)
  Prédit: '(ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ins' → logprob: -3.128163257315464e-07
    2. 'ins' → logprob: -15.25
    3. '(' → logprob: -17.625
    4. '(inst' → logprob: -20.125
    5. '(
' → logprob: -22.25
    6. '(inv' → logprob: -22.375
    7. '(ans' → logprob: -22.375
    8. '(insert' → logprob: -23.375
    9. '.ins' → logprob: -24.0
    10. ' ins' → logprob: -24.375

Token 504: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04322926327586174
    2. '<|end|>' → logprob: -3.168229341506958
    3. '<|end|>' → logprob: -8.793229103088379
    4. ' )' → logprob: -9.918229103088379
    5. '   ' → logprob: -11.418229103088379
    6. ')
' → logprob: -12.793229103088379
    7. ')return' → logprob: -12.918229103088379
    8. '}' → logprob: -13.418229103088379
    9. '```' → logprob: -13.543229103088379
    10. '')' → logprob: -13.543229103088379

Token 505: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 506: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0943028926849365
    2. 'def' (adapté à ' def') → logprob: -1.4693028926849365
    3. '<|end|>' → logprob: -1.5943028926849365
    4. 'while' → logprob: -1.9693028926849365
    5. '#' → logprob: -3.7193028926849365
    6. '    
' → logprob: -4.094303131103516
    7. 'try' → logprob: -4.344303131103516
    8. '
' → logprob: -4.469303131103516
    9. 'return' → logprob: -5.219303131103516
    10. 'import' → logprob: -5.469303131103516

Token 507: ' delete' (ID: 6168)
  Prédit: 'delete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delete' → logprob: -0.23106378316879272
    2. ' delete' → logprob: -1.6060638427734375
    3. ' back' → logprob: -5.8560638427734375
    4. 'main' → logprob: -6.6060638427734375
    5. 'back' → logprob: -7.4810638427734375
    6. ' main' → logprob: -7.7310638427734375
    7. 'remove' → logprob: -8.981063842773438
    8. 'erase' → logprob: -9.231063842773438
    9. 'replace' → logprob: -9.981063842773438
    10. 'del' → logprob: -10.231063842773438

Token 508: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.10104801505804062
    2. '_text' → logprob: -2.351047992706299
    3. '_character' → logprob: -8.226048469543457
    4. '_word' → logprob: -8.976048469543457
    5. '(text' → logprob: -9.101048469543457
    6. '_backward' → logprob: -9.226048469543457
    7. '_left' → logprob: -9.351048469543457
    8. '_' → logprob: -9.601048469543457
    9. '_right' → logprob: -10.476048469543457
    10. '_back' → logprob: -10.726048469543457

Token 509: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -2.8444881536415778e-05
    2. '(' → logprob: -11.125028610229492
    3. '```' → logprob: -12.625028610229492
    4. ' (' → logprob: -13.000028610229492
    5. 's' → logprob: -13.625028610229492
    6. '_forward' → logprob: -13.875028610229492
    7. '_backward' → logprob: -14.125028610229492
    8. '_at' → logprob: -14.250028610229492
    9. '=text' → logprob: -14.375028610229492
    10. '{text' → logprob: -14.625028610229492

Token 510: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.03521392197581e-05
    2. ',text' → logprob: -10.500030517578125
    3. ' ,' → logprob: -13.250030517578125
    4. '   ' → logprob: -14.000030517578125
    5. '[],' → logprob: -16.875030517578125
    6. ',c' → logprob: -17.000030517578125
    7. '       ' → logprob: -17.125030517578125
    8. '[' → logprob: -18.000030517578125
    9. ',line' → logprob: -18.000030517578125
    10. ',
' → logprob: -18.125030517578125

Token 511: ' cursor' (ID: 14944)
  Prédit: ' cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cursor' → logprob: -0.6328331828117371
    2. 'cursor' → logprob: -0.7578331828117371
    3. ')' → logprob: -8.882833480834961
    4. '(cursor' → logprob: -10.882833480834961
    5. '	cursor' → logprob: -10.882833480834961
    6. 'text' → logprob: -11.132833480834961
    7. ',' → logprob: -11.382833480834961
    8. '   ' → logprob: -11.882833480834961
    9. '_cursor' → logprob: -12.007833480834961
    10. ' ' → logprob: -12.757833480834961

Token 512: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3068322539329529
    2. '):' → logprob: -1.6818323135375977
    3. ',' → logprob: -2.5568323135375977
    4. '   ' → logprob: -7.556832313537598
    5. '):
' → logprob: -9.931832313537598
    6. '       ' → logprob: -9.931832313537598
    7. ')' → logprob: -11.931832313537598
    8. '):

' → logprob: -12.306832313537598
    9. ' ):
' → logprob: -13.056832313537598
    10. 'def' → logprob: -13.181832313537598

Token 513: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002364586340263486
    2. 'if' → logprob: -6.252364635467529
    3. ' if' → logprob: -7.752364635467529
    4. '	if' → logprob: -12.627364158630371
    5. '       ' → logprob: -12.752364158630371
    6. '   ' → logprob: -17.627365112304688
    7. 'If' → logprob: -18.877365112304688
    8. ' ' → logprob: -19.252365112304688
    9. '  ' → logprob: -20.252365112304688
    10. '    ' → logprob: -20.502365112304688

Token 514: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5773858428001404
    2. ' if' → logprob: -0.8273858428001404
    3. '   ' → logprob: -6.577385902404785
    4. '       ' → logprob: -10.077385902404785
    5. '	if' → logprob: -11.702385902404785
    6. '
' → logprob: -12.952385902404785
    7. '    ' → logprob: -14.077385902404785
    8. ' ' → logprob: -15.577385902404785
    9. '  ' → logprob: -16.07738494873047
    10. 'If' → logprob: -16.45238494873047

Token 515: ' delete' (ID: 6168)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0013621398247778416
    2. ' if' → logprob: -6.626362323760986
    3. '   ' → logprob: -10.501361846923828
    4. 'If' → logprob: -11.876361846923828
    5. '       ' → logprob: -14.751361846923828
    6. 'def' → logprob: -14.876361846923828
    7. '#' → logprob: -14.876361846923828
    8. '	if' → logprob: -15.501361846923828
    9. 'text' → logprob: -15.876361846923828
    10. '"""' → logprob: -16.626361846923828

Token 516: ' character' (ID: 5855)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2930472493171692
    2. 'if' → logprob: -2.0430471897125244
    3. ' text' → logprob: -2.5430471897125244
    4. 's' → logprob: -4.1680474281311035
    5. 'text' → logprob: -4.1680474281311035
    6. ' after' → logprob: -4.9180474281311035
    7. '_char' → logprob: -6.0430474281311035
    8. ' at' → logprob: -6.9180474281311035
    9. 'char' → logprob: -7.2930474281311035
    10. '_text' → logprob: -7.6680474281311035

Token 517: ' right' (ID: 1849)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16502755880355835
    2. ' at' → logprob: -2.915027618408203
    3. 'if' → logprob: -3.290027618408203
    4. ',' → logprob: -4.165027618408203
    5. ' =' → logprob: -4.290027618408203
    6. '   ' → logprob: -4.790027618408203
    7. '=' → logprob: -5.040027618408203
    8. '       ' → logprob: -5.415027618408203
    9. 'def' → logprob: -5.540027618408203
    10. 's' → logprob: -5.790027618408203

Token 518: ' next' (ID: 2613)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'of' → logprob: -1.386582374572754
    2. 'after' → logprob: -1.511582374572754
    3. ' after' → logprob: -1.761582374572754
    4. ' of' → logprob: -1.761582374572754
    5. ' at' → logprob: -2.011582374572754
    6. 'at' → logprob: -3.386582374572754
    7. '[' → logprob: -4.386582374572754
    8. '   ' → logprob: -6.261582374572754
    9. 'to' → logprob: -6.511582374572754
    10. '```' → logprob: -6.886582374572754

Token 519: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.023276465013623238
    2. ' to' → logprob: -3.7732765674591064
    3. '_to' → logprob: -11.023276329040527
    4. 'o' → logprob: -11.648276329040527
    5. 'cursor' → logprob: -13.773276329040527
    6. 'token' → logprob: -13.898276329040527
    7. '_cursor' → logprob: -14.273276329040527
    8. 't' → logprob: -14.398276329040527
    9. 'tocol' → logprob: -14.523276329040527
    10. 'To' → logprob: -15.273276329040527

Token 520: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.001099491841159761
    2. ' cursor' → logprob: -7.001099586486816
    3. '(cursor' → logprob: -9.001099586486816
    4. 'text' → logprob: -9.876099586486816
    5. 'the' → logprob: -11.751099586486816
    6. '_cursor' → logprob: -13.126099586486816
    7. '	cursor' → logprob: -13.126099586486816
    8. '.cursor' → logprob: -13.876099586486816
    9. '```' → logprob: -15.001099586486816
    10. 'Cursor' → logprob: -16.8760986328125

Token 521: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5099695324897766
    2. ' if' → logprob: -1.3849694728851318
    3. '       ' → logprob: -2.009969472885132
    4. ',' → logprob: -4.634969711303711
    5. 'if' → logprob: -5.384969711303711
    6. ' ' → logprob: -8.634969711303711
    7. ' (' → logprob: -8.884969711303711
    8. '	if' → logprob: -9.009969711303711
    9. '<|end|>' → logprob: -9.509969711303711
    10. 'def' → logprob: -9.759969711303711

Token 522: ' exists' (ID: 13031)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.2519422471523285
    2. ' cursor' → logprob: -1.5019422769546509
    3. '	cursor' → logprob: -12.00194263458252
    4. '(cursor' → logprob: -12.25194263458252
    5. '_cursor' → logprob: -13.62694263458252
    6. '```' → logprob: -14.50194263458252
    7. '.cursor' → logprob: -15.00194263458252
    8. 'ursor' → logprob: -17.126941680908203
    9. '   ' → logprob: -17.501941680908203
    10. 'Cursor' → logprob: -17.626941680908203

Token 523: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2417176067829132
    2. '   ' → logprob: -1.7417175769805908
    3. ' if' → logprob: -3.366717576980591
    4. ',' → logprob: -5.49171781539917
    5. '<|end|>' → logprob: -7.86671781539917
    6. 'if' → logprob: -9.116717338562012
    7. ' (' → logprob: -9.241717338562012
    8. ' and' → logprob: -9.991717338562012
    9. '
' → logprob: -10.241717338562012
    10. '<|end|>' → logprob: -10.366717338562012

Token 524: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47970423102378845
    2. '   ' → logprob: -0.9797042608261108
    3. ' if' → logprob: -5.3547043800354
    4. ',' → logprob: -7.7297043800354
    5. '<|end|>' → logprob: -8.229703903198242
    6. 'if' → logprob: -9.479703903198242
    7. '<|end|>' → logprob: -11.104703903198242
    8. 'def' → logprob: -11.229703903198242
    9. '    ' → logprob: -11.354703903198242
    10. '```' → logprob: -11.729703903198242

Token 525: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13320283591747284
    2. 'if' (adapté à ' if') → logprob: -2.1332027912139893
    3. '   ' → logprob: -5.258203029632568
    4. '       ' → logprob: -6.883203029632568
    5. '	if' → logprob: -10.63320255279541
    6. ' ' → logprob: -14.88320255279541
    7. 'If' → logprob: -14.88320255279541
    8. '    ' → logprob: -15.63320255279541
    9. '```' → logprob: -16.133203506469727
    10. '  ' → logprob: -16.258203506469727

Token 526: ' cursor' (ID: 14944)
  Prédit: ' cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cursor' → logprob: -0.008621904999017715
    2. 'cursor' → logprob: -4.758621692657471
    3. '	cursor' → logprob: -12.133622169494629
    4. '(cursor' → logprob: -14.133622169494629
    5. '_cursor' → logprob: -14.633622169494629
    6. ' ' → logprob: -14.758622169494629
    7. 'Cursor' → logprob: -16.008621215820312
    8. '.cursor' → logprob: -16.258621215820312
    9. '```' → logprob: -16.883621215820312
    10. ' ' → logprob: -17.008621215820312

Token 527: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.006865509320050478
    2. '<' → logprob: -5.006865501403809
    3. '<len' → logprob: -8.881865501403809
    4. ' >=' → logprob: -12.756865501403809
    5. '<size' → logprob: -12.756865501403809
    6. ' ' → logprob: -13.506865501403809
    7. '<|end|>' → logprob: -14.381865501403809
    8. '[' → logprob: -14.506865501403809
    9. '>=' → logprob: -14.756865501403809
    10. '<int' → logprob: -14.756865501403809

Token 528: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.005233882926404476
    2. ' len' → logprob: -5.2552337646484375
    3. '(len' → logprob: -16.130233764648438
    4. '=len' → logprob: -17.130233764648438
    5. '   ' → logprob: -18.130233764648438
    6. '	len' → logprob: -18.380233764648438
    7. '[len' → logprob: -19.255233764648438
    8. ',len' → logprob: -20.255233764648438
    9. '       ' → logprob: -21.005233764648438
    10. 'length' → logprob: -21.130233764648438

Token 529: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -0.003190905088558793
    2. 'text' → logprob: -5.753190994262695
    3. ' text' → logprob: -11.253190994262695
    4. '{text' → logprob: -15.253190994262695
    5. '=text' → logprob: -17.378190994262695
    6. '(' → logprob: -17.878190994262695
    7. '	text' → logprob: -18.003190994262695
    8. '.text' → logprob: -18.378190994262695
    9. 'Text' → logprob: -18.878190994262695
    10. '_text' → logprob: -19.253190994262695

Token 530: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2014836072921753
    2. '):' → logprob: -1.7014836072921753
    3. ' ):
' → logprob: -10.576483726501465
    4. ')' → logprob: -10.951483726501465
    5. ' ):' → logprob: -11.576483726501465
    6. '   ' → logprob: -11.701483726501465
    7. '):
' → logprob: -12.326483726501465
    8. '):

' → logprob: -13.201483726501465
    9. ':' → logprob: -13.326483726501465
    10. '       ' → logprob: -14.451483726501465

Token 531: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6361458897590637
    2. '           ' → logprob: -0.7611458897590637
    3. ' return' → logprob: -6.511146068572998
    4. 'return' → logprob: -7.011146068572998
    5. 'text' → logprob: -7.511146068572998
    6. ',' → logprob: -8.63614559173584
    7. ':
' → logprob: -9.13614559173584
    8. ' text' → logprob: -9.38614559173584
    9. '	       ' → logprob: -9.38614559173584
    10. ':' → logprob: -9.63614559173584

Token 532: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5490160584449768
    2. ' return' → logprob: -1.049015998840332
    3. '           ' → logprob: -2.674015998840332
    4. 'text' → logprob: -6.174015998840332
    5. '       ' → logprob: -7.174015998840332
    6. ' text' → logprob: -8.174015998840332
    7. '   ' → logprob: -9.674015998840332
    8. '               ' → logprob: -11.299015998840332
    9. '	return' → logprob: -11.549015998840332
    10. '	       ' → logprob: -12.549015998840332

Token 533: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.6931511759757996
    2. ' text' → logprob: -0.6931511759757996
    3. '(text' → logprob: -12.568151473999023
    4. '{text' → logprob: -15.318151473999023
    5. ' (' → logprob: -16.443151473999023
    6. '	text' → logprob: -17.318151473999023
    7. '"text' → logprob: -17.318151473999023
    8. '   ' → logprob: -17.443151473999023
    9. '_text' → logprob: -17.568151473999023
    10. ' ' → logprob: -17.693151473999023

Token 534: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: 0.0
    2. ':' → logprob: -18.375
    3. '[' → logprob: -19.25
    4. '
' → logprob: -19.5
    5. '```' → logprob: -19.75
    6. '   ' → logprob: -20.0
    7. '[:-' → logprob: -21.125
    8. ' [:' → logprob: -21.375
    9. '[:]' → logprob: -21.375
    10. '][:' → logprob: -21.625

Token 535: 'cursor' (ID: 34222)
  Prédit: 'cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -2.5776860184123507e-06
    2. ' cursor' → logprob: -13.00000286102295
    3. '	cursor' → logprob: -15.37500286102295
    4. '   ' → logprob: -17.625001907348633
    5. '.cursor' → logprob: -18.000001907348633
    6. '(cursor' → logprob: -18.125001907348633
    7. 'ursor' → logprob: -19.750001907348633
    8. '
' → logprob: -20.500001907348633
    9. '_cursor' → logprob: -20.625001907348633
    10. '       ' → logprob: -20.750001907348633

Token 536: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4336347281932831
    2. ']' → logprob: -1.0586347579956055
    3. ' +' → logprob: -5.5586347579956055
    4. ']+' → logprob: -7.4336347579956055
    5. '}' → logprob: -8.558634757995605
    6. 'cursor' → logprob: -9.683634757995605
    7. ')' → logprob: -10.058634757995605
    8. '>' → logprob: -10.058634757995605
    9. 'text' → logprob: -10.183634757995605
    10. '+c' → logprob: -10.308634757995605

Token 537: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0032466354314237833
    2. ' +' → logprob: -5.753246784210205
    3. '+c' → logprob: -9.628246307373047
    4. 'text' → logprob: -13.253246307373047
    5. '+
' → logprob: -15.253246307373047
    6. '```' → logprob: -15.628246307373047
    7. 'cursor' → logprob: -15.753246307373047
    8. '+x' → logprob: -15.878246307373047
    9. '[' → logprob: -16.253246307373047
    10. '+s' → logprob: -17.003246307373047

Token 538: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -2.15310683415737e-05
    2. ' text' → logprob: -10.750021934509277
    3. '	text' → logprob: -24.87502098083496
    4. '.text' → logprob: -25.00002098083496
    5. '   ' → logprob: -25.00002098083496
    6. '=text' → logprob: -25.25002098083496
    7. '{text' → logprob: -25.37502098083496
    8. '(text' → logprob: -25.50002098083496
    9. 'Text' → logprob: -26.12502098083496
    10. 'txt' → logprob: -26.25002098083496

Token 539: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.0004319804720580578
    2. '[' → logprob: -7.750432014465332
    3. 'cursor' → logprob: -13.875432014465332
    4. '[cur' → logprob: -15.625432014465332
    5. '[(' → logprob: -16.250431060791016
    6. '[:' → logprob: -17.125431060791016
    7. '(cursor' → logprob: -17.250431060791016
    8. ' [' → logprob: -18.125431060791016
    9. 'c' → logprob: -18.125431060791016
    10. '[counter' → logprob: -18.375431060791016

Token 540: 'ursor' (ID: 6519)
  Prédit: 'ursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursor' → logprob: -0.0028671622276306152
    2. 'cursor' → logprob: -5.877867221832275
    3. 'URSOR' → logprob: -10.752866744995117
    4. '+' → logprob: -11.377866744995117
    5. 'ursors' → logprob: -12.127866744995117
    6. '   ' → logprob: -12.127866744995117
    7. 'ur' → logprob: -12.502866744995117
    8. '[' → logprob: -12.877866744995117
    9. '.cursor' → logprob: -13.377866744995117
    10. 'urs' → logprob: -13.502866744995117

Token 541: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00043126524542458355
    2. ' +' → logprob: -7.750431060791016
    3. '1' → logprob: -14.375431060791016
    4. '```' → logprob: -19.250431060791016
    5. '+c' → logprob: -19.250431060791016
    6. '[' → logprob: -20.000431060791016
    7. '+
' → logprob: -20.250431060791016
    8. '   ' → logprob: -20.750431060791016
    9. 'cursor' → logprob: -20.750431060791016
    10. '()+' → logprob: -20.750431060791016

Token 542: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -21.0
    4. '```' → logprob: -21.125
    5. '１' → logprob: -22.875
    6. '+' → logprob: -22.875
    7. '۱' → logprob: -23.0
    8. '  ' → logprob: -23.5
    9. '
' → logprob: -23.625
    10. '=' → logprob: -24.125

Token 543: ':]
' (ID: 61598)
  Prédit: ':],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':],' → logprob: -0.010323172435164452
    2. '],' → logprob: -4.7603230476379395
    3. ':]' → logprob: -6.5103230476379395
    4. ']' → logprob: -8.510323524475098
    5. ':' → logprob: -11.010323524475098
    6. ' ],' → logprob: -14.135323524475098
    7. ''],' → logprob: -15.885323524475098
    8. '()],' → logprob: -16.13532257080078
    9. ' :]' → logprob: -16.76032257080078
    10. '"],' → logprob: -16.76032257080078

Token 544: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010711929644457996
    2. ' ,' → logprob: -9.375106811523438
    3. ',c' → logprob: -11.000106811523438
    4. ',
' → logprob: -13.000106811523438
    5. '   ' → logprob: -13.375106811523438
    6. '       ' → logprob: -14.875106811523438
    7. '	' → logprob: -15.125106811523438
    8. '```' → logprob: -15.375106811523438
    9. ',\
' → logprob: -15.625106811523438
    10. ' cursor' → logprob: -16.125106811523438

Token 545: ' return' (ID: 622)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011903966515092179
    2. ' ,' → logprob: -9.75011920928955
    3. ',c' → logprob: -10.50011920928955
    4. '   ' → logprob: -10.87511920928955
    5. ',
' → logprob: -12.37511920928955
    6. '       ' → logprob: -12.62511920928955
    7. ' cursor' → logprob: -13.00011920928955
    8. '	' → logprob: -14.12511920928955
    9. '	cursor' → logprob: -14.12511920928955
    10. 'cursor' → logprob: -14.62511920928955

Token 546: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.6931474208831787
    2. ' text' → logprob: -0.6931474208831787
    3. '(text' → logprob: -16.818147659301758
    4. '	text' → logprob: -17.068147659301758
    5. '_text' → logprob: -17.318147659301758
    6. 'Text' → logprob: -17.568147659301758
    7. '{text' → logprob: -17.943147659301758
    8. ' ' → logprob: -18.443147659301758
    9. '"text' → logprob: -19.693147659301758
    10. ' (' → logprob: -19.943147659301758

Token 547: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -6.790129555156454e-05
    2. ',c' → logprob: -9.625067710876465
    3. ' ,' → logprob: -13.625067710876465
    4. 'cursor' → logprob: -16.00006866455078
    5. '<|end|>' → logprob: -16.00006866455078
    6. ',current' → logprob: -16.50006866455078
    7. ',
' → logprob: -16.75006866455078
    8. ',text' → logprob: -17.75006866455078
    9. ',user' → logprob: -17.87506866455078
    10. ',p' → logprob: -18.12506866455078

Token 548: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 549: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 550: ' delete' (ID: 6168)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'back' → logprob: -0.3503555357456207
    2. 'delete' → logprob: -1.2253555059432983
    3. 'insert' → logprob: -7.100355625152588
    4. 'main' → logprob: -7.600355625152588
    5. 'forward' → logprob: -8.22535514831543
    6. 'move' → logprob: -9.10035514831543
    7. 'remove' → logprob: -9.97535514831543
    8. 'cut' → logprob: -10.35035514831543
    9. 'def' → logprob: -10.60035514831543
    10. 'replace' → logprob: -11.22535514831543

Token 551: '_word' (ID: 32074)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.006638394668698311
    2. '_word' → logprob: -5.131638526916504
    3. '_text' → logprob: -8.131638526916504
    4. '_' → logprob: -8.506638526916504
    5. '_backward' → logprob: -9.756638526916504
    6. '_forward' → logprob: -10.381638526916504
    7. '_right' → logprob: -10.756638526916504
    8. '_at' → logprob: -11.006638526916504
    9. '_after' → logprob: -11.006638526916504
    10. '_left' → logprob: -11.256638526916504

Token 552: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -8.537868779967539e-06
    2. '(' → logprob: -11.875008583068848
    3. ' (' → logprob: -14.000008583068848
    4. '_forward' → logprob: -15.375008583068848
    5. '{text' → logprob: -15.875008583068848
    6. '_right' → logprob: -16.75000762939453
    7. '=text' → logprob: -17.00000762939453
    8. '(txt' → logprob: -17.25000762939453
    9. '_left' → logprob: -17.37500762939453
    10. '(word' → logprob: -17.50000762939453

Token 553: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.981667537620524e-06
    2. ',text' → logprob: -13.375001907348633
    3. ' ,' → logprob: -15.250001907348633
    4. '   ' → logprob: -17.125001907348633
    5. ',c' → logprob: -18.500001907348633
    6. ',
' → logprob: -19.000001907348633
    7. '```' → logprob: -19.250001907348633
    8. '(cursor' → logprob: -19.375001907348633
    9. '       ' → logprob: -20.375001907348633
    10. 'text' → logprob: -20.875001907348633

Token 554: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.029812980443239212
    2. ' cursor' → logprob: -3.529813051223755
    3. 'text' → logprob: -9.779812812805176
    4. '(cursor' → logprob: -12.779812812805176
    5. '	cursor' → logprob: -14.154812812805176
    6. '.cursor' → logprob: -14.404812812805176
    7. ' text' → logprob: -15.029812812805176
    8. '_cursor' → logprob: -15.154812812805176
    9. '   ' → logprob: -15.279812812805176
    10. ' ' → logprob: -15.404812812805176

Token 555: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2032163441181183
    2. '):
' → logprob: -2.328216314315796
    3. ',' → logprob: -2.453216314315796
    4. '   ' → logprob: -8.203216552734375
    5. ')' → logprob: -9.578216552734375
    6. '):
' → logprob: -9.828216552734375
    7. '       ' → logprob: -11.828216552734375
    8. ' ):' → logprob: -12.828216552734375
    9. '):

' → logprob: -13.078216552734375
    10. ',
' → logprob: -14.078216552734375

Token 556: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16177454590797424
    2. '   ' → logprob: -1.9117745161056519
    3. 'left' → logprob: -6.661774635314941
    4. ' left' → logprob: -8.411774635314941
    5. 'if' → logprob: -10.786774635314941
    6. ' if' → logprob: -12.036774635314941
    7. 'def' → logprob: -12.536774635314941
    8. ',' → logprob: -12.536774635314941
    9. '```' → logprob: -12.661774635314941
    10. '   ' → logprob: -13.036774635314941

Token 557: ' left' (ID: 3561)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2764894962310791
    2. 'left' (adapté à ' left') → logprob: -1.526489496231079
    3. ' left' → logprob: -4.1514892578125
    4. '       ' → logprob: -4.7764892578125
    5. '	left' → logprob: -10.7764892578125
    6. ',' → logprob: -11.4014892578125
    7. ',left' → logprob: -11.5264892578125
    8. 'text' → logprob: -11.6514892578125
    9. 'right' → logprob: -11.6514892578125
    10. '_,' → logprob: -11.7764892578125

Token 558: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -8.244413766078651e-05
    2. ',' → logprob: -9.750082015991211
    3. '_tokens' → logprob: -12.000082015991211
    4. '_text' → logprob: -12.000082015991211
    5. 'words' → logprob: -13.000082015991211
    6. '_chars' → logprob: -13.125082015991211
    7. '_,' → logprob: -13.250082015991211
    8. '_word' → logprob: -13.875082015991211
    9. 'Words' → logprob: -13.875082015991211
    10. 'def' → logprob: -14.250082015991211

Token 559: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010545044642640278
    2. ',right' → logprob: -9.375105857849121
    3. ' ,' → logprob: -11.875105857849121
    4. ',text' → logprob: -12.000105857849121
    5. ',left' → logprob: -12.250105857849121
    6. '_,' → logprob: -14.500105857849121
    7. '=' → logprob: -14.875105857849121
    8. 'def' → logprob: -15.000105857849121
    9. 'right' → logprob: -15.125105857849121
    10. '       ' → logprob: -15.750105857849121

Token 560: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.3132767677307129
    2. ' right' → logprob: -1.313276767730713
    3. 'text' → logprob: -11.938276290893555
    4. ' text' → logprob: -12.813276290893555
    5. '[right' → logprob: -13.563276290893555
    6. 'Right' → logprob: -13.813276290893555
    7. '	right' → logprob: -14.063276290893555
    8. 'split' → logprob: -14.313276290893555
    9. ',right' → logprob: -14.688276290893555
    10. '_right' → logprob: -15.063276290893555

Token 561: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -2.45848218582978e-06
    2. '_parts' → logprob: -14.12500286102295
    3. '_text' → logprob: -14.25000286102295
    4. '_tokens' → logprob: -14.50000286102295
    5. '```' → logprob: -16.125001907348633
    6. 'words' → logprob: -16.500001907348633
    7. ')_' → logprob: -16.750001907348633
    8. '_weights' → logprob: -17.000001907348633
    9. 'def' → logprob: -17.250001907348633
    10. '_' → logprob: -17.250001907348633

Token 562: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3519493341445923
    2. ' =' → logprob: -1.2269493341445923
    3. ',' → logprob: -6.101949214935303
    4. '=text' → logprob: -7.226949214935303
    5. '       ' → logprob: -8.226949691772461
    6. '   ' → logprob: -8.601949691772461
    7. 'text' → logprob: -10.476949691772461
    8. ')' → logprob: -11.101949691772461
    9. '(text' → logprob: -11.101949691772461
    10. ',text' → logprob: -12.351949691772461

Token 563: ' split' (ID: 12648)
  Prédit: ' split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' split' → logprob: -0.20141568779945374
    2. 'split' → logprob: -1.7014156579971313
    3. '(split' → logprob: -13.451416015625
    4. '   ' → logprob: -14.826416015625
    5. ' ' → logprob: -15.576416015625
    6. '.split' → logprob: -16.701416015625
    7. 'text' → logprob: -16.826416015625
    8. 'plit' → logprob: -17.451416015625
    9. '       ' → logprob: -17.576416015625
    10. '    ' → logprob: -17.576416015625

Token 564: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -3.523948907968588e-05
    2. '_text' → logprob: -10.375035285949707
    3. 'words' → logprob: -13.125035285949707
    4. '_code' → logprob: -14.250035285949707
    5. 'text' → logprob: -14.375035285949707
    6. '_word' → logprob: -14.875035285949707
    7. '```' → logprob: -15.500035285949707
    8. '_parts' → logprob: -15.875035285949707
    9. '(text' → logprob: -17.00003433227539
    10. 'def' → logprob: -17.62503433227539

Token 565: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -0.0003831252979580313
    2. 'text' → logprob: -7.875382900238037
    3. ' text' → logprob: -14.000383377075195
    4. ',text' → logprob: -14.500383377075195
    5. '{text' → logprob: -14.500383377075195
    6. '```' → logprob: -14.750383377075195
    7. '   ' → logprob: -14.875383377075195
    8. '(' → logprob: -15.625383377075195
    9. '=text' → logprob: -16.500383377075195
    10. ' (' → logprob: -16.500383377075195

Token 566: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01253590453416109
    2. ',text' → logprob: -4.51253604888916
    3. 'text' → logprob: -7.01253604888916
    4. '(text' → logprob: -7.63753604888916
    5. '   ' → logprob: -10.26253604888916
    6. '       ' → logprob: -10.26253604888916
    7. ' text' → logprob: -10.63753604888916
    8. ' ,' → logprob: -12.13753604888916
    9. '[text' → logprob: -13.88753604888916
    10. '.text' → logprob: -14.26253604888916

Token 567: ' cursor' (ID: 14944)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.0001720742875477299
    2. 'cursor' → logprob: -9.375171661376953
    3. ' text' → logprob: -9.375171661376953
    4. '   ' → logprob: -14.250171661376953
    5. '(text' → logprob: -14.375171661376953
    6. ')' → logprob: -14.875171661376953
    7. '```' → logprob: -15.750171661376953
    8. '{text' → logprob: -15.875171661376953
    9. ' cursor' → logprob: -16.125171661376953
    10. '       ' → logprob: -16.250171661376953

Token 568: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.17045336961746216
    2. ')' → logprob: -2.1704533100128174
    3. '       ' → logprob: -3.1704533100128174
    4. '   ' → logprob: -7.7954535484313965
    5. ',' → logprob: -9.420453071594238
    6. ',
' → logprob: -10.170453071594238
    7. '):
' → logprob: -10.670453071594238
    8. ')
' → logprob: -10.920453071594238
    9. '           ' → logprob: -12.170453071594238
    10. '[' → logprob: -12.295453071594238

Token 569: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003777505364269018
    2. '   ' → logprob: -5.628777503967285
    3. '
' → logprob: -10.003777503967285
    4. ' if' → logprob: -10.253777503967285
    5. 'if' → logprob: -10.503777503967285
    6. '```' → logprob: -11.253777503967285
    7. '           ' → logprob: -11.628777503967285
    8. '[' → logprob: -11.753777503967285
    9. '<|end|>' → logprob: -12.128777503967285
    10. '        
' → logprob: -12.253777503967285

Token 570: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.29473769664764404
    2. ' if' → logprob: -1.794737696647644
    3. '       ' → logprob: -2.4197378158569336
    4. '   ' → logprob: -9.044737815856934
    5. '
' → logprob: -11.669737815856934
    6. '	if' → logprob: -12.044737815856934
    7. '```' → logprob: -12.169737815856934
    8. 'text' → logprob: -12.419737815856934
    9. ' ' → logprob: -12.794737815856934
    10. '           ' → logprob: -12.919737815856934

Token 571: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.663305938243866
    2. ' not' → logprob: -0.788305938243866
    3. 'right' → logprob: -3.6633059978485107
    4. ' right' → logprob: -5.413305759429932
    5. '   ' → logprob: -10.03830623626709
    6. ' ' → logprob: -10.53830623626709
    7. ' cursor' → logprob: -11.16330623626709
    8. 'cursor' → logprob: -11.16330623626709
    9. 'len' → logprob: -11.66330623626709
    10. '(not' → logprob: -11.91330623626709

Token 572: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.4741007089614868
    2. ' right' → logprob: -0.9741007089614868
    3. 'left' → logprob: -11.224101066589355
    4. ' left' → logprob: -12.599101066589355
    5. ' ' → logprob: -12.724101066589355
    6. '   ' → logprob: -13.599101066589355
    7. '	right' → logprob: -13.849101066589355
    8. '_right' → logprob: -14.599101066589355
    9. '(right' → logprob: -15.349101066589355
    10. '[right' → logprob: -15.474101066589355

Token 573: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -2.2723104848410003e-05
    2. '_right' → logprob: -11.125022888183594
    3. '_parts' → logprob: -12.500022888183594
    4. 'right' → logprob: -13.625022888183594
    5. '_' → logprob: -14.000022888183594
    6. '_chars' → logprob: -14.500022888183594
    7. '_tokens' → logprob: -14.625022888183594
    8. '_spaces' → logprob: -15.375022888183594
    9. 'words' → logprob: -15.875022888183594
    10. '```' → logprob: -16.000022888183594

Token 574: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.47466176748275757
    2. ':' → logprob: -0.9746617674827576
    3. '           ' → logprob: -7.724661827087402
    4. ':return' → logprob: -9.724661827087402
    5. '[' → logprob: -10.349661827087402
    6. '       ' → logprob: -10.974661827087402
    7. '):
' → logprob: -11.849661827087402
    8. ' or' → logprob: -12.224661827087402
    9. ':
' → logprob: -12.349661827087402
    10. 'return' → logprob: -12.599661827087402

Token 575: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2292563021183014
    2. ':
' → logprob: -1.729256272315979
    3. ':' → logprob: -3.7292563915252686
    4. '       ' → logprob: -5.9792561531066895
    5. ',' → logprob: -8.479256629943848
    6. ':return' → logprob: -8.479256629943848
    7. '[' → logprob: -8.979256629943848
    8. 'return' → logprob: -9.104256629943848
    9. ' return' → logprob: -10.104256629943848
    10. '```' → logprob: -10.229256629943848

Token 576: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6480522751808167
    2. 'return' (adapté à ' return') → logprob: -0.8980522751808167
    3. ' return' → logprob: -2.773052215576172
    4. '       ' → logprob: -5.273052215576172
    5. 'text' → logprob: -6.523052215576172
    6. '               ' → logprob: -8.398052215576172
    7. '   ' → logprob: -8.648052215576172
    8. ' text' → logprob: -9.773052215576172
    9. ' ' → logprob: -11.398052215576172
    10. '```' → logprob: -11.523052215576172

Token 577: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.01815333589911461
    2. ' text' → logprob: -4.018153190612793
    3. '   ' → logprob: -12.893153190612793
    4. '(text' → logprob: -14.393153190612793
    5. '       ' → logprob: -15.393153190612793
    6. '{text' → logprob: -16.76815414428711
    7. '
' → logprob: -17.01815414428711
    8. '           ' → logprob: -17.39315414428711
    9. ',' → logprob: -17.51815414428711
    10. '	text' → logprob: -18.01815414428711

Token 578: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.031214501708745956
    2. '
' → logprob: -4.031214714050293
    3. '       ' → logprob: -4.406214714050293
    4. '[:' → logprob: -8.031214714050293
    5. '        
' → logprob: -9.281214714050293
    6. ' ,' → logprob: -9.281214714050293
    7. '[' → logprob: -9.531214714050293
    8. '   ' → logprob: -10.281214714050293
    9. ',text' → logprob: -10.656214714050293
    10. '<|end|>' → logprob: -10.781214714050293

Token 579: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5292543172836304
    2. ',' → logprob: -0.9042543172836304
    3. '        
' → logprob: -5.90425443649292
    4. '
' → logprob: -6.15425443649292
    5. ' ,' → logprob: -7.65425443649292
    6. ',
' → logprob: -8.904253959655762
    7. '   ' → logprob: -9.029253959655762
    8. '    
' → logprob: -9.279253959655762
    9. '           ' → logprob: -9.529253959655762
    10. ' else' → logprob: -9.904253959655762

Token 580: ' #' (ID: 1069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11226636916399002
    2. '       ' → logprob: -2.4872663021087646
    3. ',
' → logprob: -4.862266540527344
    4. ' ,' → logprob: -5.237266540527344
    5. ' else' → logprob: -5.737266540527344
    6. '
' → logprob: -5.862266540527344
    7. 'else' → logprob: -6.612266540527344
    8. '        
' → logprob: -7.612266540527344
    9. '           ' → logprob: -7.987266540527344
    10. '   ' → logprob: -7.987266540527344

Token 581: ' delete' (ID: 6168)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0214557982981205
    2. '       ' → logprob: -4.271455764770508
    3. ' start' → logprob: -5.021455764770508
    4. 'left' → logprob: -8.771455764770508
    5. 'right' → logprob: -9.271455764770508
    6. '   ' → logprob: -9.521455764770508
    7. 'end' → logprob: -9.521455764770508
    8. 'cursor' → logprob: -9.646455764770508
    9. 'word' → logprob: -10.396455764770508
    10. 'delete' → logprob: -10.646455764770508

Token 582: ' blanks' (ID: 160898)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.4972403645515442
    2. ' text' → logprob: -0.9972403645515442
    3. '_text' → logprob: -4.2472405433654785
    4. ' =' → logprob: -5.8722405433654785
    5. '   ' → logprob: -7.6222405433654785
    6. ' cursor' → logprob: -7.6222405433654785
    7. 'word' → logprob: -7.6222405433654785
    8. '=' → logprob: -7.7472405433654785
    9. '=text' → logprob: -7.7472405433654785
    10. '_word' → logprob: -7.9972405433654785

Token 583: ' between' (ID: 2870)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0126334885135293
    2. ',' → logprob: -4.887633323669434
    3. ' and' → logprob: -6.762633323669434
    4. '=' → logprob: -7.762633323669434
    5. ' =' → logprob: -7.762633323669434
    6. 'next' → logprob: -7.762633323669434
    7. 'start' → logprob: -7.887633323669434
    8. '           ' → logprob: -7.887633323669434
    9. 'from' → logprob: -8.012633323669434
    10. ' next' → logprob: -8.637633323669434

Token 584: ' cursor' (ID: 14944)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.0004480692732613534
    2. 'cursor' → logprob: -8.125448226928711
    3. ' text' → logprob: -8.875448226928711
    4. 'right' → logprob: -11.500448226928711
    5. ' cursor' → logprob: -14.250448226928711
    6. '
' → logprob: -15.000448226928711
    7. '   ' → logprob: -15.125448226928711
    8. '(text' → logprob: -16.00044822692871
    9. '[text' → logprob: -16.37544822692871
    10. '```' → logprob: -16.37544822692871

Token 585: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5650227665901184
    2. ' and' → logprob: -1.8150227069854736
    3. ',' → logprob: -1.9400227069854736
    4. 'and' → logprob: -2.6900227069854736
    5. '+' → logprob: -3.5650227069854736
    6. '=' → logprob: -4.565022945404053
    7. ' +' → logprob: -4.690022945404053
    8. ' =' → logprob: -6.190022945404053
    9. 'pos' → logprob: -6.565022945404053
    10. 'index' → logprob: -7.065022945404053

Token 586: ' left' (ID: 3561)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.16838398575782776
    2. 'cursor' → logprob: -2.418384075164795
    3. ' right' → logprob: -3.043384075164795
    4. ' cursor' → logprob: -4.293384075164795
    5. 'text' → logprob: -6.543384075164795
    6. 'start' → logprob: -6.668384075164795
    7. '(cursor' → logprob: -7.668384075164795
    8. 'forward' → logprob: -7.918384075164795
    9. '(right' → logprob: -8.793383598327637
    10. ' text' → logprob: -9.168383598327637

Token 587: 'most' (ID: 5309)
  Prédit: '_words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_words' → logprob: -0.02494453638792038
    2. '   ' → logprob: -5.399944305419922
    3. 'words' → logprob: -5.774944305419922
    4. 'right' → logprob: -5.899944305419922
    5. '_part' → logprob: -6.024944305419922
    6. ',' → logprob: -6.399944305419922
    7. '```' → logprob: -6.899944305419922
    8. '_pos' → logprob: -7.024944305419922
    9. '       ' → logprob: -7.024944305419922
    10. 'of' → logprob: -7.524944305419922

Token 588: ' word' (ID: 2195)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -1.2185255289077759
    2. '0' → logprob: -1.5935255289077759
    3. 'right' → logprob: -1.5935255289077759
    4. ' right' → logprob: -1.9685255289077759
    5. ' word' → logprob: -2.3435254096984863
    6. '1' → logprob: -3.8435254096984863
    7. ' ' → logprob: -4.343525409698486
    8. '[' → logprob: -5.343525409698486
    9. '+' → logprob: -5.718525409698486
    10. ' (' → logprob: -5.843525409698486

Token 589: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7346989512443542
    2. '=' → logprob: -1.984699010848999
    3. ' =' → logprob: -2.109699010848999
    4. ',' → logprob: -2.234699010848999
    5. '+' → logprob: -2.609699010848999
    6. ' +' → logprob: -3.609699010848999
    7. '        ' → logprob: -5.10969877243042
    8. 'text' → logprob: -5.48469877243042
    9. '```' → logprob: -5.48469877243042
    10. ' and' → logprob: -5.60969877243042

Token 590: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.01815134845674038
    2. ' right' → logprob: -4.01815128326416
    3. 'text' → logprob: -14.26815128326416
    4. '0' → logprob: -15.89315128326416
    5. 'the' → logprob: -16.268152236938477
    6. 'Right' → logprob: -16.268152236938477
    7. '```' → logprob: -16.268152236938477
    8. '_right' → logprob: -16.643152236938477
    9. '	right' → logprob: -16.893152236938477
    10. '1' → logprob: -17.268152236938477

Token 591: ' part' (ID: 997)
  Prédit: ' part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' part' → logprob: -0.5018602609634399
    2. 'part' → logprob: -1.62686026096344
    3. '_words' → logprob: -2.2518601417541504
    4. '_part' → logprob: -2.6268601417541504
    5. '   ' → logprob: -4.50186014175415
    6. 'right' → logprob: -6.12686014175415
    7. '_parts' → logprob: -6.12686014175415
    8. '       ' → logprob: -6.62686014175415
    9. '```' → logprob: -7.12686014175415
    10. 'words' → logprob: -7.50186014175415

Token 592: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04558597505092621
    2. ',' → logprob: -4.045586109161377
    3. '
' → logprob: -4.420586109161377
    4. 'start' → logprob: -5.045586109161377
    5. '        
' → logprob: -5.920586109161377
    6. ' start' → logprob: -6.295586109161377
    7. '+' → logprob: -6.545586109161377
    8. ' +' → logprob: -7.795586109161377
    9. '```' → logprob: -8.170585632324219
    10. '   ' → logprob: -8.295585632324219

Token 593: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9645334482192993
    2. 'start' → logprob: -1.3395334482192993
    3. 'text' → logprob: -2.0895333290100098
    4. ')
' → logprob: -2.8395333290100098
    5. '       ' → logprob: -3.2145333290100098
    6. ',' → logprob: -3.2145333290100098
    7. 'cursor' → logprob: -3.3395333290100098
    8. '           ' → logprob: -4.71453332901001
    9. '0' → logprob: -4.83953332901001
    10. 'def' → logprob: -4.83953332901001

Token 594: ' any' (ID: 1062)
  Prédit: ' any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.9032300710678101
    2. 'any' → logprob: -1.15323007106781
    3. 'right' → logprob: -1.77823007106781
    4. ' right' → logprob: -3.6532301902770996
    5. 'text' → logprob: -4.2782301902771
    6. 'True' → logprob: -4.4032301902771
    7. ' text' → logprob: -4.4032301902771
    8. 'cursor' → logprob: -4.4032301902771
    9. 'start' → logprob: -5.1532301902771
    10. 'len' → logprob: -5.1532301902771

Token 595: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008010920137166977
    2. ',' → logprob: -5.2580108642578125
    3. ')' → logprob: -6.2580108642578125
    4. '           ' → logprob: -8.133010864257812
    5. ' and' → logprob: -9.133010864257812
    6. '   ' → logprob: -9.133010864257812
    7. '        
' → logprob: -9.508010864257812
    8. ')
' → logprob: -9.758010864257812
    9. '),' → logprob: -10.383010864257812
    10. ' =' → logprob: -10.633010864257812

Token 596: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017957700416445732
    2. '        
' → logprob: -4.89295768737793
    3. '
' → logprob: -6.01795768737793
    4. '   ' → logprob: -6.14295768737793
    5. ',' → logprob: -6.51795768737793
    6. ' +' → logprob: -7.26795768737793
    7. '+' → logprob: -7.39295768737793
    8. '<|end|>' → logprob: -7.64295768737793
    9. '    
' → logprob: -7.76795768737793
    10. '[' → logprob: -7.76795768737793

Token 597: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1595571041107178
    2. 'start' → logprob: -1.4095571041107178
    3. 'pos' → logprob: -2.1595571041107178
    4. 'cursor' → logprob: -2.4095571041107178
    5. 'i' → logprob: -2.9095571041107178
    6. 'next' → logprob: -3.1595571041107178
    7. 'idx' → logprob: -3.4095571041107178
    8. 'index' → logprob: -3.7845571041107178
    9. 'text' → logprob: -4.034557342529297
    10. ' start' → logprob: -4.159557342529297

Token 598: ' Find' (ID: 9764)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.28636640310287476
    2. 'pos' → logprob: -1.7863664627075195
    3. '       ' → logprob: -3.2863664627075195
    4. 'ws' → logprob: -4.6613664627075195
    5. ' start' → logprob: -4.7863664627075195
    6. 'i' → logprob: -5.0363664627075195
    7. 'idx' → logprob: -5.1613664627075195
    8. 'cursor' → logprob: -6.4113664627075195
    9. 'space' → logprob: -6.5363664627075195
    10. '   ' → logprob: -6.6613664627075195

Token 599: ' number' (ID: 2086)
  Prédit: ' first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' first' → logprob: -1.2887911796569824
    2. 'pos' → logprob: -1.4137911796569824
    3. 'first' → logprob: -2.6637911796569824
    4. 'start' → logprob: -2.7887911796569824
    5. ' next' → logprob: -2.7887911796569824
    6. ' pos' → logprob: -2.9137911796569824
    7. 'next' → logprob: -3.1637911796569824
    8. 'i' → logprob: -3.6637911796569824
    9. ' i' → logprob: -3.7887911796569824
    10. ' word' → logprob: -4.163791179656982

Token 600: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.9924135208129883
    2. 'of' → logprob: -0.9924135208129883
    3. '       ' → logprob: -2.3674135208129883
    4. '=' → logprob: -2.3674135208129883
    5. '           ' → logprob: -3.8674135208129883
    6. ',' → logprob: -4.867413520812988
    7. '_of' → logprob: -4.992413520812988
    8. '...' → logprob: -5.492413520812988
    9. ' =' → logprob: -5.742413520812988
    10. 'start' → logprob: -5.992413520812988

Token 601: ' blanks' (ID: 160898)
  Prédit: 'spaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spaces' → logprob: -0.33074066042900085
    2. ' spaces' → logprob: -1.7057406902313232
    3. 'i' → logprob: -3.2057406902313232
    4. ' i' → logprob: -3.9557406902313232
    5. 'bl' → logprob: -4.455740451812744
    6. ' blanks' → logprob: -4.580740451812744
    7. ' leading' → logprob: -5.205740451812744
    8. 'chars' → logprob: -5.330740451812744
    9. 'pos' → logprob: -6.705740451812744
    10. 'space' → logprob: -6.830740451812744

Token 602: ' after' (ID: 1934)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.0865470170974731
    2. ' =' → logprob: -1.5865470170974731
    3. 'i' → logprob: -1.7115470170974731
    4. '=' → logprob: -2.3365468978881836
    5. '       ' → logprob: -2.3365468978881836
    6. 'bl' → logprob: -3.9615468978881836
    7. '        ' → logprob: -4.461546897888184
    8. 'pos' → logprob: -4.711546897888184
    9. 'idx' → logprob: -5.336546897888184
    10. '           ' → logprob: -5.586546897888184

Token 603: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.012893245555460453
    2. ' cursor' → logprob: -4.387893199920654
    3. 'text' → logprob: -9.387893676757812
    4. '_cursor' → logprob: -9.887893676757812
    5. '(cursor' → logprob: -10.012893676757812
    6. 'right' → logprob: -10.012893676757812
    7. '   ' → logprob: -10.262893676757812
    8. '	cursor' → logprob: -11.137893676757812
    9. '       ' → logprob: -11.387893676757812
    10. '
' → logprob: -11.512893676757812

Token 604: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6046177744865417
    2. '=' → logprob: -1.4796178340911865
    3. '       ' → logprob: -1.8546178340911865
    4. ',' → logprob: -3.8546178340911865
    5. 'i' → logprob: -3.8546178340911865
    6. 'pos' → logprob: -4.854617595672607
    7. ' i' → logprob: -5.104617595672607
    8. 'idx' → logprob: -5.354617595672607
    9. 'n' → logprob: -6.604617595672607
    10. '           ' → logprob: -6.979617595672607

Token 605: ' before' (ID: 2254)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -1.8623098134994507
    2. 'for' → logprob: -1.9873098134994507
    3. 'len' → logprob: -2.4873099327087402
    4. 'count' → logprob: -2.4873099327087402
    5. 'if' → logprob: -2.7373099327087402
    6. '
' → logprob: -3.1123099327087402
    7. 'import' → logprob: -3.1123099327087402
    8. 'text' → logprob: -3.2373099327087402
    9. ' for' → logprob: -3.3623099327087402
    10. ' right' → logprob: -3.3623099327087402

Token 606: ' word' (ID: 2195)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.00842225644737482
    2. ' right' → logprob: -5.258422374725342
    3. 'cursor' → logprob: -6.508422374725342
    4. '(right' → logprob: -6.758422374725342
    5. 'start' → logprob: -8.508421897888184
    6. '(cursor' → logprob: -8.758421897888184
    7. '   ' → logprob: -10.383421897888184
    8. 'text' → logprob: -10.383421897888184
    9. ' cursor' → logprob: -10.633421897888184
    10. ' (' → logprob: -10.758421897888184

Token 607: ' start' (ID: 1604)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039429131895303726
    2. 'pos' → logprob: -4.164429187774658
    3. 'i' → logprob: -4.414429187774658
    4. 'count' → logprob: -5.914429187774658
    5. 'n' → logprob: -6.289429187774658
    6. ' i' → logprob: -7.164429187774658
    7. 'start' → logprob: -7.164429187774658
    8. '
' → logprob: -7.539429187774658
    9. 'next' → logprob: -7.539429187774658
    10. 'idx' → logprob: -7.539429187774658

Token 608: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030805623158812523
    2. ' =' → logprob: -4.780805587768555
    3. ',' → logprob: -4.905805587768555
    4. '=' → logprob: -5.530805587768555
    5. '           ' → logprob: -6.405805587768555
    6. '
' → logprob: -6.405805587768555
    7. '        ' → logprob: -6.780805587768555
    8. 'start' → logprob: -6.905805587768555
    9. 'next' → logprob: -7.030805587768555
    10. '        
' → logprob: -7.155805587768555

Token 609: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020058399066329002
    2. ' next' → logprob: -5.520058631896973
    3. ' word' → logprob: -5.520058631896973
    4. 'next' → logprob: -6.145058631896973
    5. 'word' → logprob: -6.395058631896973
    6. '
' → logprob: -6.645058631896973
    7. '```' → logprob: -6.770058631896973
    8. ' start' → logprob: -6.895058631896973
    9. 'start' → logprob: -7.020058631896973
    10. '        
' → logprob: -7.395058631896973

Token 610: ' first' (ID: 1577)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7137821912765503
    2. ' cursor' → logprob: -2.46378231048584
    3. ' right' → logprob: -2.83878231048584
    4. 'cursor' → logprob: -2.96378231048584
    5. '
' → logprob: -3.21378231048584
    6. '0' → logprob: -3.33878231048584
    7. '        
' → logprob: -3.83878231048584
    8. ' next' → logprob: -3.96378231048584
    9. 'next' → logprob: -4.08878231048584
    10. 'right' → logprob: -4.08878231048584

Token 611: '_word' (ID: 32074)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.993198812007904
    2. '_word' → logprob: -1.4931988716125488
    3. ',' → logprob: -1.6181988716125488
    4. '_,' → logprob: -2.993198871612549
    5. '_space' → logprob: -3.118198871612549
    6. '_blank' → logprob: -3.493198871612549
    7. 'start' → logprob: -3.868198871612549
    8. '_right' → logprob: -4.368198871612549
    9. '_' → logprob: -4.368198871612549
    10. ' ,' → logprob: -5.118198871612549

Token 612: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.024802204221487045
    2. ' =' → logprob: -4.274802207946777
    3. 'start' → logprob: -5.024802207946777
    4. '=' → logprob: -5.649802207946777
    5. '[' → logprob: -8.774802207946777
    6. '=start' → logprob: -9.024802207946777
    7. ',' → logprob: -10.399802207946777
    8. '_pos' → logprob: -10.524802207946777
    9. '```' → logprob: -10.524802207946777
    10. '=_' → logprob: -10.649802207946777

Token 613: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5653139352798462
    2. '=' → logprob: -1.0653139352798462
    3. ',' → logprob: -2.4403138160705566
    4. ' ,' → logprob: -10.690314292907715
    5. '   ' → logprob: -11.065314292907715
    6. '       ' → logprob: -11.940314292907715
    7. ',right' → logprob: -12.190314292907715
    8. ')' → logprob: -13.315314292907715
    9. ',_' → logprob: -13.565314292907715
    10. '    ' → logprob: -13.565314292907715

Token 614: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.001723488443531096
    2. ' cursor' → logprob: -7.001723289489746
    3. 'right' → logprob: -7.126723289489746
    4. '   ' → logprob: -12.501723289489746
    5. ' right' → logprob: -13.501723289489746
    6. '(cursor' → logprob: -13.501723289489746
    7. '	cursor' → logprob: -14.501723289489746
    8. '       ' → logprob: -14.626723289489746
    9. '```' → logprob: -15.001723289489746
    10. 'forward' → logprob: -15.751723289489746

Token 615: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2311838865280151
    2. ' +' → logprob: -1.3561838865280151
    3. '       ' → logprob: -1.8561838865280151
    4. '+' → logprob: -2.2311840057373047
    5. '   ' → logprob: -3.1061840057373047
    6. '<|end|>' → logprob: -3.7311840057373047
    7. ' =' → logprob: -3.8561840057373047
    8. ',' → logprob: -3.9811840057373047
    9. '<|end|>' → logprob: -4.106184005737305
    10. 'def' → logprob: -4.231184005737305

Token 616: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.0005600620643235743
    2. ' right' → logprob: -7.500560283660889
    3. '(right' → logprob: -12.37555980682373
    4. '(' → logprob: -14.50055980682373
    5. '   ' → logprob: -14.50055980682373
    6. 'left' → logprob: -14.87555980682373
    7. '
' → logprob: -15.00055980682373
    8. 'start' → logprob: -15.12555980682373
    9. '[right' → logprob: -15.75055980682373
    10. ' (' → logprob: -16.000560760498047

Token 617: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -7.703443770878948e-06
    2. 'words' → logprob: -12.375007629394531
    3. '[' → logprob: -13.500007629394531
    4. '_tokens' → logprob: -13.500007629394531
    5. '_parts' → logprob: -15.250007629394531
    6. 'Words' → logprob: -15.625007629394531
    7. '```' → logprob: -16.25000762939453
    8. '_weights' → logprob: -17.50000762939453
    9. '   ' → logprob: -17.75000762939453
    10. 's' → logprob: -17.75000762939453

Token 618: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002646735229063779
    2. '0' → logprob: -8.250265121459961
    3. '```' → logprob: -13.250265121459961
    4. ' [' → logprob: -15.500265121459961
    5. '`' → logprob: -15.625265121459961
    6. '[
' → logprob: -16.00026512145996
    7. '\[' → logprob: -16.00026512145996
    8. 's' → logprob: -16.37526512145996
    9. 'def' → logprob: -16.50026512145996
    10. '1' → logprob: -16.50026512145996

Token 619: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6405310816480778e-05
    2. '[' → logprob: -11.250016212463379
    3. ' ' → logprob: -12.875016212463379
    4. '۰' → logprob: -16.500017166137695
    5. '```' → logprob: -16.500017166137695
    6. '(' → logprob: -16.562517166137695
    7. '000' → logprob: -16.812517166137695
    8. '00' → logprob: -16.937517166137695
    9. '０' → logprob: -17.062517166137695
    10. '#' → logprob: -17.187517166137695

Token 620: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005222017411142588
    2. '0' → logprob: -5.380221843719482
    3. '][' → logprob: -7.505221843719482
    4. ' [' → logprob: -11.00522232055664
    5. '(' → logprob: -11.38022232055664
    6. ']' → logprob: -12.13022232055664
    7. '
' → logprob: -12.63022232055664
    8. ' ' → logprob: -12.88022232055664
    9. '[
' → logprob: -13.13022232055664
    10. '```' → logprob: -13.25522232055664

Token 621: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.500000953674316
    3. '[' → logprob: -15.875000953674316
    4. 'start' → logprob: -16.375
    5. '۰' → logprob: -17.25
    6. '
' → logprob: -17.6875
    7. '1' → logprob: -17.8125
    8. '```' → logprob: -18.25
    9. ']' → logprob: -18.4375
    10. '   ' → logprob: -18.5625

Token 622: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1443842649459839
    2. ']
' → logprob: -2.0193843841552734
    3. '       ' → logprob: -7.519384384155273
    4. ' ]' → logprob: -7.769384384155273
    5. ']

' → logprob: -8.769384384155273
    6. '
' → logprob: -9.394384384155273
    7. ' ]
' → logprob: -9.394384384155273
    8. 'def' → logprob: -9.644384384155273
    9. ']>' → logprob: -9.644384384155273
    10. '   ' → logprob: -9.769384384155273

Token 623: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19653737545013428
    2. 'first' → logprob: -2.571537494659424
    3. '
' → logprob: -2.821537494659424
    4. ' first' → logprob: -4.446537494659424
    5. 'text' → logprob: -4.946537494659424
    6. ',' → logprob: -4.946537494659424
    7. '+' → logprob: -5.571537494659424
    8. '```' → logprob: -6.321537494659424
    9. ' +' → logprob: -6.446537494659424
    10. '        
' → logprob: -6.446537494659424

Token 624: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24468979239463806
    2. 'if' → logprob: -2.744689702987671
    3. 'first' → logprob: -2.994689702987671
    4. 'text' → logprob: -3.869689702987671
    5. 'bl' → logprob: -4.24468994140625
    6. 'i' (adapté à ' i') → logprob: -4.74468994140625
    7. 'num' → logprob: -4.86968994140625
    8. '   ' → logprob: -4.99468994140625
    9. 'index' → logprob: -5.24468994140625
    10. 'idx' → logprob: -5.36968994140625

Token 625: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6470160484313965
    2. '=' → logprob: -0.7720160484313965
    3. 'n' → logprob: -4.2720160484313965
    4. 'f' → logprob: -8.397016525268555
    5. 'nt' → logprob: -10.522016525268555
    6. ',' → logprob: -10.647016525268555
    7. ' ' → logprob: -11.147016525268555
    8. '=n' → logprob: -11.522016525268555
    9. 's' → logprob: -11.772016525268555
    10. ' n' → logprob: -12.022016525268555

Token 626: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.0017434853361919522
    2. ' cursor' → logprob: -6.376743316650391
    3. 'first' → logprob: -10.87674331665039
    4. '	cursor' → logprob: -11.25174331665039
    5. '0' → logprob: -12.25174331665039
    6. '(cursor' → logprob: -13.25174331665039
    7. '   ' → logprob: -13.87674331665039
    8. '_cursor' → logprob: -14.87674331665039
    9. ' first' → logprob: -15.00174331665039
    10. 'cur' → logprob: -15.50174331665039

Token 627: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 628: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6245576739311218
    2. ' while' → logprob: -1.7495577335357666
    3. '	while' → logprob: -1.8745577335357666
    4. '   ' → logprob: -2.7495577335357666
    5. 'while' → logprob: -2.7495577335357666
    6. '<|end|>' → logprob: -5.1245574951171875
    7. '<|end|>' → logprob: -7.3745574951171875
    8. '           ' → logprob: -7.9995574951171875
    9. '	       ' → logprob: -8.124557495117188
    10. '	   ' → logprob: -8.124557495117188

Token 629: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.2816719710826874
    2. 'while' (adapté à ' while') → logprob: -1.5316720008850098
    3. '	while' → logprob: -4.03167200088501
    4. '       ' → logprob: -4.78167200088501
    5. ' 
' → logprob: -7.65667200088501
    6. '
' → logprob: -7.78167200088501
    7. '   ' → logprob: -8.031671524047852
    8. '<|end|>' → logprob: -8.281671524047852
    9. ' =' → logprob: -8.531671524047852
    10. '    ' → logprob: -8.656671524047852

Token 630: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06197485327720642
    2. ' i' → logprob: -2.8119747638702393
    3. '   ' → logprob: -12.43697452545166
    4. '    ' → logprob: -14.06197452545166
    5. '
' → logprob: -14.68697452545166
    6. '           ' → logprob: -14.81197452545166
    7. '       ' → logprob: -15.06197452545166
    8. ' ' → logprob: -15.18697452545166
    9. 'text' → logprob: -15.18697452545166
    10. '	i' → logprob: -15.18697452545166

Token 631: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.10059493035078049
    2. '<' → logprob: -2.350594997406006
    3. '<len' → logprob: -8.600594520568848
    4. ' <=' → logprob: -9.975594520568848
    5. '<i' → logprob: -9.975594520568848
    6. ' ' → logprob: -10.850594520568848
    7. '<=' → logprob: -11.100594520568848
    8. ' i' → logprob: -11.100594520568848
    9. '<n' → logprob: -11.600594520568848
    10. '<p' → logprob: -11.975594520568848

Token 632: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.005283680744469166
    2. ' first' → logprob: -5.255283832550049
    3. 'len' → logprob: -10.00528335571289
    4. 'text' → logprob: -12.88028335571289
    5. ' len' → logprob: -14.13028335571289
    6. 'cursor' → logprob: -14.50528335571289
    7. 'length' → logprob: -14.88028335571289
    8. 'First' → logprob: -15.88028335571289
    9. '
' → logprob: -16.13028335571289
    10. '[first' → logprob: -16.25528335571289

Token 633: '_word' (ID: 32074)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.2116968631744385
    2. 'len' → logprob: -1.4616968631744385
    3. ' len' → logprob: -1.8366968631744385
    4. '_pos' → logprob: -1.8366968631744385
    5. '_words' → logprob: -3.3366968631744385
    6. '_word' → logprob: -3.9616968631744385
    7. ' ' → logprob: -4.836696624755859
    8. ')' → logprob: -4.961696624755859
    9. '   ' → logprob: -5.086696624755859
    10. 'text' → logprob: -5.211696624755859

Token 634: '_start' (ID: 10949)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.7734819054603577
    2. 'pos' → logprob: -2.023481845855713
    3. '_start' → logprob: -2.398481845855713
    4. 'and' → logprob: -2.648481845855713
    5. 'start' → logprob: -2.773481845855713
    6. ' and' → logprob: -3.398481845855713
    7. '+' → logprob: -3.523481845855713
    8. ' ' → logprob: -4.273481845855713
    9. '_len' → logprob: -4.523481845855713
    10. '   ' → logprob: -4.773481845855713

Token 635: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07024440169334412
    2. 'and' → logprob: -2.695244312286377
    3. '           ' → logprob: -8.570244789123535
    4. '       ' → logprob: -10.445244789123535
    5. ':
' → logprob: -10.445244789123535
    6. '+' → logprob: -10.695244789123535
    7. ':' → logprob: -11.820244789123535
    8. '          ' → logprob: -12.070244789123535
    9. '	and' → logprob: -12.445244789123535
    10. '   ' → logprob: -12.570244789123535

Token 636: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.014263052493333817
    2. ' text' → logprob: -4.514263153076172
    3. 'i' → logprob: -5.764263153076172
    4. ' i' → logprob: -9.764263153076172
    5. '   ' → logprob: -11.639263153076172
    6. '	text' → logprob: -13.139263153076172
    7. '(text' → logprob: -13.639263153076172
    8. ' ' → logprob: -14.264263153076172
    9. '  ' → logprob: -14.389263153076172
    10. '$text' → logprob: -15.639263153076172

Token 637: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.610702363715973e-06
    2. 'i' → logprob: -12.250009536743164
    3. '```' → logprob: -12.875009536743164
    4. ' [' → logprob: -13.375009536743164
    5. '[' → logprob: -15.500009536743164
    6. '[
' → logprob: -15.625009536743164
    7. ' ==' → logprob: -16.750009536743164
    8. '==' → logprob: -16.875009536743164
    9. '   ' → logprob: -16.875009536743164
    10. ' i' → logprob: -17.125009536743164

Token 638: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.130240336060524
    2. '==' → logprob: -2.1302404403686523
    3. '=='' → logprob: -6.005240440368652
    4. ' =='' → logprob: -7.505240440368652
    5. ']==' → logprob: -8.755240440368652
    6. '=' → logprob: -10.255240440368652
    7. ')==' → logprob: -10.630240440368652
    8. ']=='' → logprob: -10.880240440368652
    9. ' ' → logprob: -11.755240440368652
    10. '']=='' → logprob: -12.130240440368652

Token 639: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6642010807991028
    2. ' ==' → logprob: -0.7892010807991028
    3. '=='' → logprob: -3.539201021194458
    4. ' =='' → logprob: -6.539201259613037
    5. '=' → logprob: -7.789201259613037
    6. '==
' → logprob: -9.664200782775879
    7. '=="' → logprob: -9.914200782775879
    8. ' ' → logprob: -10.414200782775879
    9. 'iss' → logprob: -10.789200782775879
    10. ')==' → logprob: -11.664200782775879

Token 640: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00016778295685071498
    2. ' '' → logprob: -9.125167846679688
    3. '"' → logprob: -9.750167846679688
    4. ' ' → logprob: -15.250167846679688
    5. ''s' → logprob: -15.750167846679688
    6. '`' → logprob: -16.000167846679688
    7. 'space' → logprob: -17.500167846679688
    8. '32' → logprob: -17.750167846679688
    9. ''a' → logprob: -18.375167846679688
    10. '',' → logprob: -18.375167846679688

Token 641: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.53239506483078
    2. ''' → logprob: -0.90739506483078
    3. ' ':' → logprob: -5.282394886016846
    4. '':' → logprob: -6.657394886016846
    5. ' ' → logprob: -6.782394886016846
    6. ''s' → logprob: -7.657394886016846
    7. ' 
' → logprob: -8.032395362854004
    8. '<|end|>' → logprob: -8.157395362854004
    9. '<|end|>' → logprob: -9.282395362854004
    10. ':' → logprob: -9.282395362854004

Token 642: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7714906334877014
    2. ':' → logprob: -1.0214905738830566
    3. '       ' → logprob: -1.7714905738830566
    4. '           ' → logprob: -6.021490573883057
    5. '   ' → logprob: -6.521490573883057
    6. 'i' → logprob: -6.646490573883057
    7. ' and' → logprob: -7.146490573883057
    8. '):
' → logprob: -7.896490573883057
    9. ' i' → logprob: -8.146491050720215
    10. ':i' → logprob: -8.521491050720215

Token 643: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12439535558223724
    2. 'i' → logprob: -2.7493953704833984
    3. ' i' → logprob: -3.3743953704833984
    4. '       ' → logprob: -4.749395370483398
    5. '   ' → logprob: -5.499395370483398
    6. '	       ' → logprob: -5.749395370483398
    7. '               ' → logprob: -6.749395370483398
    8. '	   ' → logprob: -7.624395370483398
    9. '	i' → logprob: -8.874395370483398
    10. '         ' → logprob: -8.999395370483398

Token 644: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.021571537479758263
    2. ' i' → logprob: -4.021571636199951
    3. '               ' → logprob: -6.396571636199951
    4. '           ' → logprob: -6.396571636199951
    5. '   ' → logprob: -9.771571159362793
    6. '	i' → logprob: -11.146571159362793
    7. '                   ' → logprob: -12.771571159362793
    8. ' ' → logprob: -13.271571159362793
    9. '	       ' → logprob: -14.021571159362793
    10. '
' → logprob: -14.396571159362793

Token 645: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10029207170009613
    2. ' +=' → logprob: -2.3502919673919678
    3. '+' → logprob: -9.975292205810547
    4. '=' → logprob: -10.350292205810547
    5. '<|end|>' → logprob: -12.850292205810547
    6. ']+=' → logprob: -13.600292205810547
    7. '           ' → logprob: -14.350292205810547
    8. '```' → logprob: -14.600292205810547
    9. '+='' → logprob: -14.850292205810547
    10. 'i' → logprob: -15.225292205810547

Token 646: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.625024795532227
    4. '```' → logprob: -18.125024795532227
    5. '           ' → logprob: -19.125024795532227
    6. '       ' → logprob: -19.875024795532227
    7. '۱' → logprob: -19.875024795532227
    8. '１' → logprob: -20.250024795532227
    9. '  ' → logprob: -20.500024795532227
    10. '0' → logprob: -20.500024795532227

Token 647: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.8125057220459
    4. '
' → logprob: -18.4375057220459
    5. '```' → logprob: -18.5000057220459
    6. '１' → logprob: -19.1250057220459
    7. '۱' → logprob: -19.3750057220459
    8. '  ' → logprob: -20.0625057220459
    9. '

' → logprob: -20.3125057220459
    10. '१' → logprob: -20.4375057220459

Token 648: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.337307333946228
    2. '
' → logprob: -1.337307333946228
    3. '<|end|>' → logprob: -4.087307453155518
    4. '        
' → logprob: -5.587307453155518
    5. '<|end|>' → logprob: -7.712307453155518
    6. '   ' → logprob: -7.962307453155518
    7. ',' → logprob: -7.962307453155518
    8. ' 
' → logprob: -8.08730697631836
    9. '		
' → logprob: -8.08730697631836
    10. ' return' → logprob: -8.71230697631836

Token 649: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005117884837090969
    2. ' return' → logprob: -6.130117893218994
    3. ' text' → logprob: -6.630117893218994
    4. '   ' → logprob: -8.005117416381836
    5. 'text' → logprob: -8.255117416381836
    6. ',' → logprob: -8.505117416381836
    7. ' if' → logprob: -8.505117416381836
    8. '
' → logprob: -8.630117416381836
    9. '        
' → logprob: -9.255117416381836
    10. 'return' → logprob: -9.505117416381836

Token 650: ' delete' (ID: 6168)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40662795305252075
    2. ' return' → logprob: -2.156627893447876
    3. ' text' → logprob: -2.531627893447876
    4. 'return' → logprob: -2.781627893447876
    5. 'text' → logprob: -2.906627893447876
    6. ' new' → logprob: -4.531628131866455
    7. 'new' → logprob: -5.156628131866455
    8. ' if' → logprob: -6.156628131866455
    9. 'rest' → logprob: -6.281628131866455
    10. 'if' → logprob: -7.656628131866455

Token 651: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.4766828715801239
    2. '_range' → logprob: -1.7266829013824463
    3. 'd' → logprob: -2.8516829013824463
    4. '_len' → logprob: -3.4766829013824463
    5. '_text' → logprob: -3.4766829013824463
    6. '_from' → logprob: -3.8516829013824463
    7. '_pos' → logprob: -4.351682662963867
    8. '_count' → logprob: -4.726682662963867
    9. '_length' → logprob: -4.851682662963867
    10. ' =' → logprob: -4.851682662963867

Token 652: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021260380744934
    2. '=' → logprob: -2.350212574005127
    3. ',' → logprob: -12.350213050842285
    4. '=i' → logprob: -14.100213050842285
    5. ' =
' → logprob: -14.850213050842285
    6. ' ' → logprob: -16.10021209716797
    7. '=
' → logprob: -16.22521209716797
    8. '   ' → logprob: -16.60021209716797
    9. '=cut' → logprob: -16.60021209716797
    10. '=text' → logprob: -16.85021209716797

Token 653: ' cursor' (ID: 14944)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5946836471557617
    2. 'cursor' → logprob: -0.8446836471557617
    3. ' cursor' → logprob: -4.219683647155762
    4. ' i' → logprob: -5.594683647155762
    5. '   ' → logprob: -9.844683647155762
    6. '	cursor' → logprob: -10.594683647155762
    7. '(cursor' → logprob: -11.219683647155762
    8. 'Cursor' → logprob: -11.907183647155762
    9. '    ' → logprob: -11.907183647155762
    10. 'c' → logprob: -12.094683647155762

Token 654: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 655: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004083891399204731
    2. ',' → logprob: -8.125408172607422
    3. '   ' → logprob: -10.125408172607422
    4. 'delete' → logprob: -10.375408172607422
    5. '        
' → logprob: -11.500408172607422
    6. '
' → logprob: -11.875408172607422
    7. '           ' → logprob: -12.125408172607422
    8. '<|end|>' → logprob: -12.250408172607422
    9. ',
' → logprob: -12.875408172607422
    10. ' delete' → logprob: -13.250408172607422

Token 656: ' delete' (ID: 6168)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4316329061985016
    2. 'delete' (adapté à ' delete') → logprob: -1.0566328763961792
    3. ' delete' → logprob: -6.431632995605469
    4. '   ' → logprob: -6.806632995605469
    5. 'if' → logprob: -9.806632995605469
    6. '	delete' → logprob: -9.806632995605469
    7. '
' → logprob: -9.931632995605469
    8. '           ' → logprob: -11.306632995605469
    9. '        
' → logprob: -12.181632995605469
    10. 'text' → logprob: -12.431632995605469

Token 657: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.010854686610400677
    2. ' =' → logprob: -5.635854721069336
    3. '_stop' → logprob: -6.135854721069336
    4. '=' → logprob: -6.135854721069336
    5. 'end' → logprob: -6.760854721069336
    6. '=end' → logprob: -6.885854721069336
    7. '_' → logprob: -8.635854721069336
    8. '<|end|>' → logprob: -9.510854721069336
    9. '_END' → logprob: -9.885854721069336
    10. '_length' → logprob: -10.010854721069336

Token 658: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020806640386581
    2. '=' → logprob: -2.350208044052124
    3. '=i' → logprob: -13.725208282470703
    4. ' ' → logprob: -16.225208282470703
    5. '        ' → logprob: -16.350208282470703
    6. '    ' → logprob: -16.475208282470703
    7. '   ' → logprob: -16.975208282470703
    8. ',' → logprob: -17.225208282470703
    9. '       ' → logprob: -17.600208282470703
    10. ' =
' → logprob: -17.725208282470703

Token 659: ' cursor' (ID: 14944)
  Prédit: ' first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.31721165776252747
    2. 'first' → logprob: -1.442211627960205
    3. ' cursor' → logprob: -4.317211627960205
    4. 'i' → logprob: -4.817211627960205
    5. ' i' → logprob: -4.817211627960205
    6. 'cursor' → logprob: -5.192211627960205
    7. ' right' → logprob: -8.942212104797363
    8. 'right' → logprob: -9.817212104797363
    9. 'First' → logprob: -11.067212104797363
    10. 'user' → logprob: -11.129712104797363

Token 660: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4325172007083893
    2. '+' → logprob: -1.807517170906067
    3. '<|end|>' → logprob: -1.807517170906067
    4. '<|end|>' → logprob: -3.8075172901153564
    5. ' +
' → logprob: -8.807517051696777
    6. '...' → logprob: -8.932517051696777
    7. '       ' → logprob: -9.307517051696777
    8. '   ' → logprob: -9.432517051696777
    9. '+
' → logprob: -9.432517051696777
    10. '
' → logprob: -9.682517051696777

Token 661: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.02979828231036663
    2. ' right' → logprob: -3.5297982692718506
    3. '0' → logprob: -11.52979850769043
    4. 'i' → logprob: -11.52979850769043
    5. '(right' → logprob: -11.90479850769043
    6. 'len' → logprob: -12.27979850769043
    7. '1' → logprob: -12.52979850769043
    8. ' i' → logprob: -12.77979850769043
    9. 'left' → logprob: -13.27979850769043
    10. 'max' → logprob: -13.27979850769043

Token 662: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -0.0006816957029514015
    2. '_tokens' → logprob: -7.3756818771362305
    3. 'words' → logprob: -10.25068187713623
    4. '_parts' → logprob: -12.25068187713623
    5. '+' → logprob: -12.62568187713623
    6. '_spaces' → logprob: -13.12568187713623
    7. '[' → logprob: -13.37568187713623
    8. 'Words' → logprob: -13.50068187713623
    9. '_weights' → logprob: -13.87568187713623
    10. '
' → logprob: -14.37568187713623

Token 663: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00033832306507974863
    2. '0' → logprob: -8.000338554382324
    3. '```' → logprob: -13.000338554382324
    4. ' [' → logprob: -15.250338554382324
    5. '[
' → logprob: -15.500338554382324
    6. '<|end|>' → logprob: -17.000337600708008
    7. ' ' → logprob: -17.125337600708008
    8. '   ' → logprob: -17.250337600708008
    9. '(' → logprob: -17.625337600708008
    10. '`' → logprob: -17.750337600708008

Token 664: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.3954463510308415e-05
    2. '[' → logprob: -10.000054359436035
    3. ' ' → logprob: -11.750054359436035
    4. '   ' → logprob: -15.625054359436035
    5. '1' → logprob: -16.75005340576172
    6. '```' → logprob: -16.75005340576172
    7. '  ' → logprob: -17.31255340576172
    8. '][' → logprob: -17.50005340576172
    9. '...' → logprob: -17.50005340576172
    10. '(' → logprob: -17.50005340576172

Token 665: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31407177448272705
    2. '][' → logprob: -1.314071774482727
    3. '0' → logprob: -7.4390716552734375
    4. ')[' → logprob: -9.564071655273438
    5. '1' → logprob: -9.939071655273438
    6. ']' → logprob: -10.689071655273438
    7. ' [' → logprob: -10.814071655273438
    8. '>[' → logprob: -11.439071655273438
    9. '()[' → logprob: -11.939071655273438
    10. ' ][' → logprob: -12.064071655273438

Token 666: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010163593105971813
    2. '0' → logprob: -9.250102043151855
    3. '
' → logprob: -13.500102043151855
    4. ' ' → logprob: -13.750102043151855
    5. 'end' → logprob: -14.437602043151855
    6. '```' → logprob: -14.437602043151855
    7. '[' → logprob: -14.687602043151855
    8. '   ' → logprob: -15.125102043151855
    9. ']' → logprob: -15.125102043151855
    10. '``' → logprob: -16.25010108947754

Token 667: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.19425475597381592
    2. '<|end|>' → logprob: -2.3192548751831055
    3. ')' → logprob: -3.0692548751831055
    4. '       ' → logprob: -3.9442548751831055
    5. '<|end|>' → logprob: -5.0692548751831055
    6. ']
' → logprob: -6.0692548751831055
    7. '```' → logprob: -6.8192548751831055
    8. '   ' → logprob: -7.4442548751831055
    9. '']' → logprob: -7.6942548751831055
    10. '}' → logprob: -8.069254875183105

Token 668: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4319568872451782
    2. '       ' → logprob: -1.0569568872451782
    3. '   ' → logprob: -6.931956768035889
    4. '
' → logprob: -7.181956768035889
    5. '        
' → logprob: -7.931956768035889
    6. '<|end|>' → logprob: -7.931956768035889
    7. 'text' → logprob: -8.806957244873047
    8. '    
' → logprob: -9.056957244873047
    9. ',' → logprob: -9.306957244873047
    10. '  
' → logprob: -9.681957244873047

Token 669: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07837837934494019
    2. '<|end|>' → logprob: -3.203378438949585
    3. '   ' → logprob: -4.203378200531006
    4. '       ' → logprob: -4.203378200531006
    5. '    
' → logprob: -6.703378200531006
    6. '        
' → logprob: -7.453378200531006
    7. '<|end|>' → logprob: -7.453378200531006
    8. '  
' → logprob: -7.578378200531006
    9. ' 
' → logprob: -7.703378200531006
    10. '[' → logprob: -8.578378677368164

Token 670: ' end' (ID: 1268)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13783800601959229
    2. '       ' → logprob: -2.6378378868103027
    3. '<|end|>' → logprob: -3.1378378868103027
    4. 'return' → logprob: -5.262837886810303
    5. '   ' → logprob: -6.512837886810303
    6. ' return' → logprob: -6.762837886810303
    7. '```' → logprob: -6.762837886810303
    8. 'text' → logprob: -6.887837886810303
    9. '        
' → logprob: -7.262837886810303
    10. ')
' → logprob: -7.387837886810303

Token 671: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 672: ' the' (ID: 290)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.01445599552243948
    2. ' right' → logprob: -4.264455795288086
    3. 'first' → logprob: -8.764455795288086
    4. '(right' → logprob: -9.764455795288086
    5. '_right' → logprob: -10.139455795288086
    6. '	right' → logprob: -11.889455795288086
    7. ' first' → logprob: -12.014455795288086
    8. 'the' → logprob: -12.014455795288086
    9. '(' → logprob: -12.639455795288086
    10. 'word' → logprob: -12.764455795288086

Token 673: ' word' (ID: 2195)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.29738664627075195
    2. 'right' → logprob: -2.172386646270752
    3. ' first' → logprob: -2.297386646270752
    4. 'word' → logprob: -3.672386646270752
    5. ' right' → logprob: -4.672386646270752
    6. 'left' → logprob: -5.422386646270752
    7. ' word' → logprob: -5.922386646270752
    8. '0' → logprob: -8.547386169433594
    9. 'last' → logprob: -8.547386169433594
    10. ' left' → logprob: -9.172386169433594

Token 674: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1663953810930252
    2. '
' → logprob: -1.9163954257965088
    3. '<|end|>' → logprob: -6.04139518737793
    4. '   ' → logprob: -6.66639518737793
    5. '        
' → logprob: -7.04139518737793
    6. ' return' → logprob: -8.16639518737793
    7. ',' → logprob: -8.29139518737793
    8. '
' → logprob: -8.41639518737793
    9. 'return' → logprob: -8.54139518737793
    10. '<|end|>' → logprob: -8.79139518737793

Token 675: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.006241364870220423
    2. ' right' → logprob: -5.131241321563721
    3. 'text' → logprob: -8.256241798400879
    4. '0' → logprob: -10.756241798400879
    5. ' text' → logprob: -11.381241798400879
    6. '
' → logprob: -12.631241798400879
    7. 'first' → logprob: -12.756241798400879
    8. '_right' → logprob: -12.881241798400879
    9. '   ' → logprob: -13.006241798400879
    10. ')' → logprob: -13.506241798400879

Token 676: ' part' (ID: 997)
  Prédit: '_words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_words' → logprob: -0.15537570416927338
    2. '_part' → logprob: -2.0303757190704346
    3. '_parts' → logprob: -5.5303754806518555
    4. 'part' → logprob: -5.7803754806518555
    5. '```' → logprob: -6.5303754806518555
    6. ')' → logprob: -6.5303754806518555
    7. 'words' → logprob: -6.6553754806518555
    8. 'text' → logprob: -8.155375480651855
    9. '_text' → logprob: -8.405375480651855
    10. ']' → logprob: -8.655375480651855

Token 677: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0402521975338459
    2. '
' → logprob: -4.040252208709717
    3. '<|end|>' → logprob: -4.290252208709717
    4. ',' → logprob: -6.290252208709717
    5. '   ' → logprob: -6.290252208709717
    6. '<|end|>' → logprob: -6.915252208709717
    7. ')' → logprob: -7.040252208709717
    8. '        
' → logprob: -7.540252208709717
    9. ' return' → logprob: -8.165251731872559
    10. ')
' → logprob: -8.290251731872559

Token 678: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007112328894436359
    2. '<|end|>' → logprob: -5.757112503051758
    3. '
' → logprob: -6.757112503051758
    4. ',' → logprob: -7.132112503051758
    5. '        
' → logprob: -7.757112503051758
    6. '   ' → logprob: -8.007112503051758
    7. ' return' → logprob: -8.257112503051758
    8. '[' → logprob: -8.632112503051758
    9. '<|end|>' → logprob: -8.632112503051758
    10. 'return' → logprob: -9.132112503051758

Token 679: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005376760382205248
    2. ' return' → logprob: -5.630376815795898
    3. 'return' (adapté à ' return') → logprob: -6.505376815795898
    4. '   ' → logprob: -8.505376815795898
    5. '	return' → logprob: -9.880376815795898
    6. '
' → logprob: -11.505376815795898
    7. '        
' → logprob: -12.380376815795898
    8. '	   ' → logprob: -12.755376815795898
    9. '<|end|>' → logprob: -12.880376815795898
    10. '	' → logprob: -13.630376815795898

Token 680: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.6931481957435608
    2. ' text' → logprob: -0.6931481957435608
    3. '   ' → logprob: -15.568148612976074
    4. 'Text' → logprob: -15.818148612976074
    5. '(text' → logprob: -15.943148612976074
    6. '{text' → logprob: -16.193147659301758
    7. '"text' → logprob: -16.318147659301758
    8. 'delete' → logprob: -16.443147659301758
    9. '	text' → logprob: -16.818147659301758
    10. '_text' → logprob: -17.068147659301758

Token 681: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.0015046248445287347
    2. '[' → logprob: -6.501504421234131
    3. 'delete' → logprob: -13.751504898071289
    4. 'def' → logprob: -15.001504898071289
    5. '[:]' → logprob: -15.001504898071289
    6. '       ' → logprob: -15.501504898071289
    7. '   ' → logprob: -15.626504898071289
    8. '.delete' → logprob: -17.12650489807129
    9. '[:-' → logprob: -17.37650489807129
    10. ' [:' → logprob: -17.37650489807129

Token 682: 'delete' (ID: 8509)
  Prédit: 'delete'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delete' → logprob: -4.127333340875339e-06
    2. ' delete' → logprob: -12.625003814697266
    3. 'cursor' → logprob: -14.500003814697266
    4. 'remove' → logprob: -16.000003814697266
    5. '	delete' → logprob: -16.250003814697266
    6. '(delete' → logprob: -16.875003814697266
    7. '   ' → logprob: -17.250003814697266
    8. '
' → logprob: -17.500003814697266
    9. '```' → logprob: -17.750003814697266
    10. 'replace' → logprob: -17.750003814697266

Token 683: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.018499556928873062
    2. '_end' → logprob: -4.268499374389648
    3. 'start' → logprob: -5.518499374389648
    4. 'delete' → logprob: -8.768499374389648
    5. 'end' → logprob: -9.643499374389648
    6. 'cursor' → logprob: -9.893499374389648
    7. '_cursor' → logprob: -10.893499374389648
    8. 'Start' → logprob: -12.143499374389648
    9. '_delete' → logprob: -12.268499374389648
    10. '   ' → logprob: -13.018499374389648

Token 684: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7290916442871094
    2. '+' → logprob: -0.8540916442871094
    3. ' +' → logprob: -2.4790916442871094
    4. ']+' → logprob: -4.854091644287109
    5. ')' → logprob: -8.97909164428711
    6. '}' → logprob: -9.10409164428711
    7. '```' → logprob: -9.85409164428711
    8. ' ]' → logprob: -11.22909164428711
    9. '   ' → logprob: -11.47909164428711
    10. '>' → logprob: -11.85409164428711

Token 685: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3869243860244751
    2. '+' → logprob: -1.136924386024475
    3. 'text' → logprob: -10.011924743652344
    4. '```' → logprob: -12.636924743652344
    5. '   ' → logprob: -14.386924743652344
    6. '+t' → logprob: -14.511924743652344
    7. '[text' → logprob: -14.761924743652344
    8. ',' → logprob: -14.761924743652344
    9. ')' → logprob: -15.011924743652344
    10. 'Text' → logprob: -15.011924743652344

Token 686: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.011047935113310814
    2. ' text' → logprob: -4.511047840118408
    3. '   ' → logprob: -16.76104736328125
    4. '       ' → logprob: -18.13604736328125
    5. '	text' → logprob: -18.26104736328125
    6. ' ' → logprob: -18.63604736328125
    7. '.text' → logprob: -18.76104736328125
    8. '(text' → logprob: -18.88604736328125
    9. '{text' → logprob: -19.13604736328125
    10. '           ' → logprob: -19.63604736328125

Token 687: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.8325677703833207e-05
    2. 'delete' → logprob: -11.375028610229492
    3. '[text' → logprob: -11.625028610229492
    4. 'text' → logprob: -12.750028610229492
    5. '```' → logprob: -13.125028610229492
    6. '[c' → logprob: -13.375028610229492
    7. '[i' → logprob: -13.875028610229492
    8. '[:' → logprob: -15.750028610229492
    9. '[
' → logprob: -16.625028610229492
    10. '   ' → logprob: -17.250028610229492

Token 688: 'delete' (ID: 8509)
  Prédit: 'delete'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delete' → logprob: -2.045823566731997e-05
    2. '[' → logprob: -11.250020027160645
    3. '(delete' → logprob: -12.250020027160645
    4. ' delete' → logprob: -13.125020027160645
    5. 'cursor' → logprob: -15.125020027160645
    6. 'text' → logprob: -16.50002098083496
    7. '```' → logprob: -16.75002098083496
    8. '.delete' → logprob: -16.75002098083496
    9. '
' → logprob: -16.87502098083496
    10. '+' → logprob: -17.62502098083496

Token 689: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.0011502212146297097
    2. 'end' → logprob: -7.251150131225586
    3. 'End' → logprob: -7.751150131225586
    4. '_start' → logprob: -11.876150131225586
    5. 'END' → logprob: -14.626150131225586
    6. '   ' → logprob: -14.751150131225586
    7. '[' → logprob: -14.751150131225586
    8. '_END' → logprob: -15.126150131225586
    9. '       ' → logprob: -15.876150131225586
    10. '-end' → logprob: -15.876150131225586

Token 690: ':]

' (ID: 170549)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.039612699300050735
    2. ':]' → logprob: -3.2896127700805664
    3. '()]' → logprob: -6.664612770080566
    4. ' ]' → logprob: -9.289612770080566
    5. ':],' → logprob: -9.539612770080566
    6. ' :]' → logprob: -9.914612770080566
    7. '],' → logprob: -10.289612770080566
    8. '+]' → logprob: -11.539612770080566
    9. '_]' → logprob: -12.039612770080566
    10. ']()' → logprob: -12.039612770080566

Token 691: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 692: ' N' (ID: 478)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 693: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.701120913028717
    2. ' =' → logprob: -0.701120913028717
    3. ',' → logprob: -5.326120853424072
    4. '   ' → logprob: -6.326120853424072
    5. '  ' → logprob: -8.20112133026123
    6. '=int' → logprob: -8.70112133026123
    7. '=input' → logprob: -8.82612133026123
    8. '    ' → logprob: -8.82612133026123
    9. ' ' → logprob: -9.07612133026123
    10. '.' → logprob: -9.57612133026123

Token 694: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.003287155646830797
    2. ' int' → logprob: -5.753287315368652
    3. '0' → logprob: -9.878287315368652
    4. '10' → logprob: -10.378287315368652
    5. '100' → logprob: -12.003287315368652
    6. '1' → logprob: -12.003287315368652
    7. ' ' → logprob: -12.003287315368652
    8. 'len' → logprob: -12.503287315368652
    9. '(int' → logprob: -13.628287315368652
    10. 'input' → logprob: -14.128287315368652

Token 695: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.003821098944172263
    2. 'input' → logprob: -5.753820896148682
    3. '(' → logprob: -7.378820896148682
    4. '('' → logprob: -11.75382137298584
    5. '()' → logprob: -12.00382137298584
    6. ' input' → logprob: -13.12882137298584
    7. '(sys' → logprob: -14.00382137298584
    8. '=input' → logprob: -14.12882137298584
    9. ' (' → logprob: -14.75382137298584
    10. '(
' → logprob: -14.87882137298584

Token 696: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.019387252628803253
    2. '()' → logprob: -4.269387245178223
    3. '().' → logprob: -5.269387245178223
    4. '())
' → logprob: -9.769387245178223
    5. '()
' → logprob: -13.144387245178223
    6. ' ())' → logprob: -13.269387245178223
    7. ')' → logprob: -13.394387245178223
    8. '(' → logprob: -14.644387245178223
    9. '())

' → logprob: -15.144387245178223
    10. '();)' → logprob: -16.01938819885254

Token 697: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26376786828041077
    2. 'for' → logprob: -2.013767957687378
    3. 'text' → logprob: -2.638767957687378
    4. 'cursor' → logprob: -3.638767957687378
    5. ' for' → logprob: -8.138768196105957
    6. '    
' → logprob: -9.888768196105957
    7. 'cur' → logprob: -10.013768196105957
    8. '	cursor' → logprob: -10.263768196105957
    9. ' cursor' → logprob: -10.388768196105957
    10. 'current' → logprob: -10.513768196105957

Token 698: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6007629036903381
    2. 'text' → logprob: -0.9757629036903381
    3. '   ' → logprob: -2.8507628440856934
    4. 'cursor' → logprob: -4.600762844085693
    5. ' for' → logprob: -5.600762844085693
    6. 'commands' → logprob: -6.975762844085693
    7. ' text' → logprob: -7.600762844085693
    8. 'results' → logprob: -8.100763320922852
    9. 'line' → logprob: -8.225763320922852
    10. 'lines' → logprob: -8.725763320922852

Token 699: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.011047935113310814
    2. ' _' → logprob: -4.511047840118408
    3. '_i' → logprob: -16.76104736328125
    4. ' i' → logprob: -16.88604736328125
    5. '_line' → logprob: -19.26104736328125
    6. '_

' → logprob: -20.01104736328125
    7. ' ' → logprob: -21.13604736328125
    8. '_case' → logprob: -21.26104736328125
    9. '_N' → logprob: -21.26104736328125
    10. ' line' → logprob: -21.51104736328125

Token 700: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0001434690784662962
    2. 'in' → logprob: -8.875143051147461
    3. 'range' → logprob: -12.750143051147461
    4. ' ' → logprob: -14.250143051147461
    5. ' range' → logprob: -18.12514305114746
    6. '  ' → logprob: -18.25014305114746
    7. 'count' → logprob: -18.25014305114746
    8. 'i' → logprob: -18.37514305114746
    9. ' _' → logprob: -18.50014305114746
    10. '	in' → logprob: -18.50014305114746

Token 701: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.6240566083070007e-06
    2. ' range' → logprob: -13.375001907348633
    3. '(range' → logprob: -16.750001907348633
    4. 'input' → logprob: -18.375001907348633
    5. '   ' → logprob: -19.250001907348633
    6. '
' → logprob: -19.875001907348633
    7. '```' → logprob: -20.375001907348633
    8. '[' → logprob: -20.500001907348633
    9. '	range' → logprob: -20.500001907348633
    10. 'rang' → logprob: -20.500001907348633

Token 702: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0005543439765460789
    2. '(' → logprob: -7.50055456161499
    3. 'N' → logprob: -14.375554084777832
    4. ' (' → logprob: -14.625554084777832
    5. '(
' → logprob: -15.875554084777832
    6. '()' → logprob: -16.50055503845215
    7. '(n' → logprob: -17.25055503845215
    8. '(range' → logprob: -18.00055503845215
    9. 'range' → logprob: -18.00055503845215
    10. '(int' → logprob: -18.87555503845215

Token 703: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16169047355651855
    2. '):
' → logprob: -1.9116904735565186
    3. ':' → logprob: -6.786690711975098
    4. '   ' → logprob: -8.286690711975098
    5. ':
' → logprob: -10.161690711975098
    6. '():
' → logprob: -11.286690711975098
    7. '):
' → logprob: -11.661690711975098
    8. '       ' → logprob: -12.161690711975098
    9. '():' → logprob: -12.161690711975098
    10. ',' → logprob: -12.286690711975098

Token 704: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013157175853848457
    2. 'text' → logprob: -5.263157367706299
    3. ' line' → logprob: -5.763157367706299
    4. 'line' → logprob: -6.138157367706299
    5. '   ' → logprob: -7.513157367706299
    6. '<|end|>' → logprob: -7.763157367706299
    7. ' text' → logprob: -8.01315689086914
    8. '```' → logprob: -8.26315689086914
    9. 'code' → logprob: -8.38815689086914
    10. '	line' → logprob: -8.88815689086914

Token 705: ' text' (ID: 2201)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.3854661285877228
    2. ' line' → logprob: -1.3854660987854004
    3. '       ' → logprob: -3.2604660987854004
    4. 'text' (adapté à ' text') → logprob: -4.0104660987854
    5. 'command' → logprob: -5.5104660987854
    6. 'cmd' → logprob: -5.8854660987854
    7. '   ' → logprob: -6.2604660987854
    8. ' text' → logprob: -6.5104660987854
    9. 's' → logprob: -7.1354660987854
    10. 'parts' → logprob: -7.5104660987854

Token 706: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06313104927539825
    2. ' =' → logprob: -2.813131093978882
    3. '=' → logprob: -6.938130855560303
    4. ',line' → logprob: -9.813131332397461
    5. ' ,' → logprob: -9.938131332397461
    6. '=line' → logprob: -10.563131332397461
    7. '   ' → logprob: -10.813131332397461
    8. '_line' → logprob: -11.188131332397461
    9. 'line' → logprob: -11.938131332397461
    10. ' ' → logprob: -13.188131332397461

Token 707: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.13257314264774323
    2. '""' → logprob: -2.382573127746582
    3. ' input' → logprob: -3.632573127746582
    4. '''' → logprob: -5.882573127746582
    5. '"' → logprob: -6.382573127746582
    6. ' ""' → logprob: -7.507573127746582
    7. ''' → logprob: -8.882573127746582
    8. ' ''' → logprob: -9.382573127746582
    9. '"""' → logprob: -10.132573127746582
    10. '(input' → logprob: -10.257573127746582

Token 708: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.006744269747287035
    2. '()' → logprob: -5.006744384765625
    3. '()
' → logprob: -10.506744384765625
    4. 'line' → logprob: -15.006744384765625
    5. '()\' → logprob: -15.006744384765625
    6. '.rstrip' → logprob: -15.131744384765625
    7. 'rstrip' → logprob: -15.256744384765625
    8. '()).' → logprob: -15.881744384765625
    9. ' ().' → logprob: -16.631744384765625
    10. '(' → logprob: -17.006744384765625

Token 709: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.00043257648940198123
    2. 'strip' → logprob: -7.75043249130249
    3. 'r' → logprob: -13.750432968139648
    4. 'rs' → logprob: -14.500432968139648
    5. '.rstrip' → logprob: -15.250432968139648
    6. 'rst' → logprob: -18.62543296813965
    7. 'decode' → logprob: -19.25043296813965
    8. 'replace' → logprob: -19.50043296813965
    9. ' r' → logprob: -20.12543296813965
    10. '```' → logprob: -20.37543296813965

Token 710: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6626874208450317
    2. '()
' → logprob: -0.7876874208450317
    3. '()\' → logprob: -3.787687301635742
    4. '('\' → logprob: -5.287687301635742
    5. '()

' → logprob: -7.412687301635742
    6. '   ' → logprob: -7.537687301635742
    7. '       ' → logprob: -8.412687301635742
    8. '<|end|>' → logprob: -9.162687301635742
    9. '()
' → logprob: -9.287687301635742
    10. '\n' → logprob: -9.787687301635742

Token 711: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.5048530030981055e-06
    2. '\n' → logprob: -13.500001907348633
    3. 'newline' → logprob: -18.625001907348633
    4. 'r' → logprob: -18.875001907348633
    5. ' n' → logprob: -19.250001907348633
    6. 'ndef' → logprob: -20.000001907348633
    7. 'nl' → logprob: -20.750001907348633
    8. '
' → logprob: -20.875001907348633
    9. '``' → logprob: -21.375001907348633
    10. ')\' → logprob: -21.375001907348633

Token 712: '')
' (ID: 2515)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6719940900802612
    2. '')
' → logprob: -0.7969940900802612
    3. '')' → logprob: -4.046994209289551
    4. ')' → logprob: -4.171994209289551
    5. '())
' → logprob: -5.671994209289551
    6. '       ' → logprob: -7.171994209289551
    7. '()' → logprob: -8.04699420928955
    8. '').' → logprob: -8.29699420928955
    9. '   ' → logprob: -8.54699420928955
    10. ')
' → logprob: -9.04699420928955

Token 713: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023805228993296623
    2. 'cursor' → logprob: -6.50238037109375
    3. '<|end|>' → logprob: -7.62738037109375
    4. '   ' → logprob: -8.62738037109375
    5. 'tokens' → logprob: -10.25238037109375
    6. '	' → logprob: -10.37738037109375
    7. ' cursor' → logprob: -10.37738037109375
    8. '```' → logprob: -10.87738037109375
    9. '	cursor' → logprob: -11.00238037109375
    10. 'token' → logprob: -11.37738037109375

Token 714: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' (adapté à ' cursor') → logprob: -0.05421029031276703
    2. 'M' → logprob: -4.429210186004639
    3. '   ' → logprob: -4.429210186004639
    4. 'Q' → logprob: -4.929210186004639
    5. 'pos' → logprob: -4.929210186004639
    6. '       ' → logprob: -5.929210186004639
    7. 'cmd' → logprob: -5.929210186004639
    8. 'commands' → logprob: -6.429210186004639
    9. 'K' → logprob: -6.554210186004639
    10. ' cursor' → logprob: -6.679210186004639

Token 715: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02837834507226944
    2. '_pos' → logprob: -4.403378486633301
    3. ',' → logprob: -4.653378486633301
    4. '=' → logprob: -5.153378486633301
    5. ' ,' → logprob: -8.7783784866333
    6. 'pos' → logprob: -9.1533784866333
    7. '=line' → logprob: -10.2783784866333
    8. ',pos' → logprob: -10.7783784866333
    9. ' ' → logprob: -10.9033784866333
    10. '=int' → logprob: -10.9033784866333

Token 716: ' ' (ID: 220)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.002088996348902583
    2. '0' → logprob: -6.252089023590088
    3. 'int' → logprob: -8.75208854675293
    4. ' len' → logprob: -13.12708854675293
    5. '(len' → logprob: -16.25208854675293
    6. 'text' → logprob: -17.37708854675293
    7. '[len' → logprob: -17.62708854675293
    8. '=len' → logprob: -18.00208854675293
    9. ' ' → logprob: -18.37708854675293
    10. 'l' → logprob: -18.75208854675293

Token 717: '0' (ID: 15)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0005537479883059859
    2. '0' → logprob: -7.500553607940674
    3. 'int' → logprob: -14.375554084777832
    4. ' len' → logprob: -16.000553131103516
    5. '(len' → logprob: -17.500553131103516
    6. 'text' → logprob: -19.125553131103516
    7. '[len' → logprob: -19.500553131103516
    8. '=len' → logprob: -19.500553131103516
    9. 'le' → logprob: -20.750553131103516
    10. '	len' → logprob: -20.875553131103516

Token 718: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08059635758399963
    2. '<|end|>' → logprob: -2.580596446990967
    3. '<|end|>' → logprob: -7.330596446990967
    4. 'while' → logprob: -8.330595970153809
    5. ' while' → logprob: -8.830595970153809
    6. '        
' → logprob: -8.830595970153809
    7. ' for' → logprob: -9.205595970153809
    8. '   ' → logprob: -9.580595970153809
    9. '	while' → logprob: -9.830595970153809
    10. '	' → logprob: -9.830595970153809

Token 719: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003927129786461592
    2. 'while' → logprob: -6.753927230834961
    3. 'for' → logprob: -7.003927230834961
    4. '
' → logprob: -7.253927230834961
    5. ' for' → logprob: -7.628927230834961
    6. ' while' → logprob: -8.503927230834961
    7. '<|end|>' → logprob: -8.878927230834961
    8. ',' → logprob: -9.378927230834961
    9. '   ' → logprob: -9.753927230834961
    10. '	' → logprob: -9.878927230834961

Token 720: ' initially' (ID: 25998)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06024320423603058
    2. '       ' → logprob: -3.9352431297302246
    3. ' for' → logprob: -4.060243129730225
    4. 'text' → logprob: -5.560243129730225
    5. '   ' → logprob: -5.685243129730225
    6. 'while' → logprob: -5.810243129730225
    7. 'commands' → logprob: -5.810243129730225
    8. 'cursor' → logprob: -6.435243129730225
    9. 'pos' → logprob: -6.935243129730225
    10. 'output' → logprob: -7.185243129730225

Token 721: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03472423180937767
    2. '<|end|>' → logprob: -3.409724235534668
    3. '        
' → logprob: -8.409724235534668
    4. 'for' → logprob: -9.034724235534668
    5. '<|end|>' → logprob: -9.034724235534668
    6. ' for' → logprob: -9.034724235534668
    7. '
' → logprob: -9.159724235534668
    8. '   ' → logprob: -9.159724235534668
    9. ',' → logprob: -10.034724235534668
    10. 'while' → logprob: -10.034724235534668

Token 722: ' beginning' (ID: 10526)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010759611177491024
    2. 'start' → logprob: -9.875107765197754
    3. 'the' → logprob: -10.625107765197754
    4. 'begin' → logprob: -11.500107765197754
    5. 'end' → logprob: -11.625107765197754
    6. ' ' → logprob: -11.625107765197754
    7. 'len' → logprob: -12.875107765197754
    8. 'cursor' → logprob: -14.375107765197754
    9. 'position' → logprob: -15.500107765197754
    10. ' the' → logprob: -16.000106811523438

Token 723: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00443415530025959
    2. '<|end|>' → logprob: -5.504434108734131
    3. '   ' → logprob: -9.254434585571289
    4. '	' → logprob: -9.504434585571289
    5. '<|end|>' → logprob: -9.754434585571289
    6. '        
' → logprob: -10.254434585571289
    7. ' for' → logprob: -10.754434585571289
    8. '	   ' → logprob: -11.004434585571289
    9. '
' → logprob: -11.879434585571289
    10. 'for' → logprob: -12.004434585571289

Token 724: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005382333882153034
    2. '<|end|>' → logprob: -5.380382537841797
    3. '   ' → logprob: -8.005382537841797
    4. 'while' → logprob: -8.755382537841797
    5. '	' → logprob: -9.505382537841797
    6. '<|end|>' → logprob: -9.880382537841797
    7. ' while' → logprob: -10.130382537841797
    8. '```' → logprob: -10.630382537841797
    9. '	   ' → logprob: -10.755382537841797
    10. '	while' → logprob: -11.505382537841797

Token 725: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' (adapté à ' M') → logprob: -0.6584603190422058
    2. '       ' → logprob: -1.0334603786468506
    3. 'Q' → logprob: -2.9084603786468506
    4. 'while' → logprob: -3.5334603786468506
    5. ' M' → logprob: -4.5334601402282715
    6. 'num' → logprob: -4.6584601402282715
    7. 'm' → logprob: -5.1584601402282715
    8. 'for' → logprob: -5.5334601402282715
    9. ' while' → logprob: -5.9084601402282715
    10. 'K' → logprob: -6.5334601402282715

Token 726: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06207512691617012
    2. '=' → logprob: -2.812075138092041
    3. '   ' → logprob: -9.562074661254883
    4. '=int' → logprob: -10.687074661254883
    5. '    ' → logprob: -12.062074661254883
    6. '=input' → logprob: -12.562074661254883
    7. '       ' → logprob: -13.562074661254883
    8. '	' → logprob: -14.062074661254883
    9. '        ' → logprob: -14.562074661254883
    10. ' ' → logprob: -15.187074661254883

Token 727: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.7610454708337784e-05
    2. ' int' → logprob: -10.500027656555176
    3. '   ' → logprob: -17.00002670288086
    4. '  ' → logprob: -20.25002670288086
    5. ' ' → logprob: -21.00002670288086
    6. 'input' → logprob: -21.37502670288086
    7. '    ' → logprob: -21.50002670288086
    8. '       ' → logprob: -21.62502670288086
    9. '
' → logprob: -22.50002670288086
    10. '[int' → logprob: -23.00002670288086

Token 728: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0001593195047462359
    2. 'input' → logprob: -8.75015926361084
    3. ' input' → logprob: -14.25015926361084
    4. ' (' → logprob: -16.250160217285156
    5. '(' → logprob: -16.500160217285156
    6. '=input' → logprob: -17.375160217285156
    7. ',input' → logprob: -18.250160217285156
    8. '[input' → logprob: -18.750160217285156
    9. '	input' → logprob: -19.750160217285156
    10. '<input' → logprob: -20.000160217285156

Token 729: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.025518648326396942
    2. '())
' → logprob: -4.025518417358398
    3. '()' → logprob: -5.025518417358398
    4. ')' → logprob: -7.650518417358398
    5. '()
' → logprob: -8.150518417358398
    6. '())
' → logprob: -12.775518417358398
    7. ')
' → logprob: -12.900518417358398
    8. ' ())' → logprob: -13.150518417358398
    9. '();)' → logprob: -13.900518417358398
    10. '   ' → logprob: -15.275518417358398

Token 730: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07794996351003647
    2. ' for' → logprob: -3.3279500007629395
    3. '<|end|>' → logprob: -3.9529500007629395
    4. 'for' → logprob: -4.0779500007629395
    5. '	for' → logprob: -6.7029500007629395
    6. '   ' → logprob: -7.4529500007629395
    7. '	' → logprob: -7.7029500007629395
    8. '	   ' → logprob: -8.702949523925781
    9. '<|end|>' → logprob: -8.702949523925781
    10. '```' → logprob: -9.952949523925781

Token 731: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0068392143584787846
    2. 'for' (adapté à ' for') → logprob: -5.006839275360107
    3. ' for' → logprob: -9.13183879852295
    4. '	for' → logprob: -11.88183879852295
    5. '   ' → logprob: -12.50683879852295
    6. '	   ' → logprob: -13.00683879852295
    7. '<|end|>' → logprob: -13.25683879852295
    8. '	' → logprob: -14.25683879852295
    9. '           ' → logprob: -16.006839752197266
    10. '	       ' → logprob: -16.131839752197266

Token 732: ' __' (ID: 2516)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.6028635501861572
    2. '_' → logprob: -0.8528635501861572
    3. ' __' → logprob: -4.352863311767578
    4. '__' → logprob: -4.352863311767578
    5. '___' → logprob: -7.227863311767578
    6. '_i' → logprob: -10.352863311767578
    7. ' ' → logprob: -10.477863311767578
    8. ' i' → logprob: -11.102863311767578
    9. ' ___' → logprob: -11.477863311767578
    10. 'i' → logprob: -12.977863311767578

Token 733: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005255814641714096
    2. 'in' → logprob: -5.380255699157715
    3. '_' → logprob: -7.380255699157715
    4. ' _' → logprob: -11.880255699157715
    5. '_in' → logprob: -13.255255699157715
    6. ' ' → logprob: -14.380255699157715
    7. 's' → logprob: -14.755255699157715
    8. 'In' → logprob: -14.755255699157715
    9. '0' → logprob: -14.755255699157715
    10. 'import' → logprob: -15.630255699157715

Token 734: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00015860427811276168
    2. ' range' → logprob: -8.750158309936523
    3. '
' → logprob: -16.375158309936523
    4. '_' → logprob: -18.125158309936523
    5. 'input' → logprob: -18.250158309936523
    6. 'in' → logprob: -18.625158309936523
    7. '0' → logprob: -18.875158309936523
    8. ' ' → logprob: -19.000158309936523
    9. '   ' → logprob: -19.625158309936523
    10. '_range' → logprob: -19.750158309936523

Token 735: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0001987722353078425
    2. 'M' → logprob: -9.000198364257812
    3. '(' → logprob: -9.875198364257812
    4. ' (' → logprob: -12.000198364257812
    5. 'range' → logprob: -12.000198364257812
    6. ' M' → logprob: -12.500198364257812
    7. '   ' → logprob: -12.625198364257812
    8. 'input' → logprob: -13.750198364257812
    9. '(int' → logprob: -13.875198364257812
    10. 'int' → logprob: -14.000198364257812

Token 736: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.09487570077180862
    2. '):' → logprob: -2.4698758125305176
    3. '       ' → logprob: -5.219875812530518
    4. '           ' → logprob: -8.59487533569336
    5. '():
' → logprob: -8.96987533569336
    6. '):
' → logprob: -9.59487533569336
    7. '   ' → logprob: -9.71987533569336
    8. ':' → logprob: -10.09487533569336
    9. ':
' → logprob: -11.46987533569336
    10. ')' → logprob: -12.71987533569336

Token 737: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007544778054580092
    2. '	       ' → logprob: -7.625754356384277
    3. '		' → logprob: -9.625754356384277
    4. ' line' → logprob: -10.500754356384277
    5. '		   ' → logprob: -10.500754356384277
    6. ' code' → logprob: -10.625754356384277
    7. '    	   ' → logprob: -10.875754356384277
    8. '	   ' → logprob: -11.125754356384277
    9. 'tokens' → logprob: -11.375754356384277
    10. '   ' → logprob: -11.375754356384277

Token 738: ' line' (ID: 2543)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5595324635505676
    2. 'command' → logprob: -2.059532403945923
    3. 'cmd' → logprob: -2.184532403945923
    4. 'line' (adapté à ' line') → logprob: -2.559532403945923
    5. ' line' → logprob: -2.809532403945923
    6. ' command' → logprob: -3.559532403945923
    7. ' cmd' → logprob: -4.184532642364502
    8. ' op' → logprob: -6.059532642364502
    9. ' parts' → logprob: -6.184532642364502
    10. 'parts' → logprob: -7.059532642364502

Token 739: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018232475966215134
    2. '=' → logprob: -4.018232345581055
    3. '=line' → logprob: -9.768232345581055
    4. '           ' → logprob: -10.643232345581055
    5. '=input' → logprob: -14.268232345581055
    6. '       ' → logprob: -15.393232345581055
    7. '()' → logprob: -15.768232345581055
    8. '		' → logprob: -16.268232345581055
    9. '               ' → logprob: -16.393232345581055
    10. '   ' → logprob: -16.893232345581055

Token 740: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5759397745132446
    2. 'input' → logprob: -0.8259397745132446
    3. '           ' → logprob: -15.325940132141113
    4. '=input' → logprob: -16.200939178466797
    5. '	input' → logprob: -17.325939178466797
    6. '(input' → logprob: -17.450939178466797
    7. '_input' → logprob: -18.575939178466797
    8. '<input' → logprob: -19.325939178466797
    9. '   ' → logprob: -19.325939178466797
    10. ',input' → logprob: -19.700939178466797

Token 741: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.008642109110951424
    2. '()' → logprob: -4.758642196655273
    3. '()
' → logprob: -10.758642196655273
    4. '.rstrip' → logprob: -12.758642196655273
    5. ' =' → logprob: -13.883642196655273
    6. '=' → logprob: -14.258642196655273
    7. '.strip' → logprob: -14.883642196655273
    8. '(' → logprob: -15.258642196655273
    9. '()

' → logprob: -15.508642196655273
    10. ' ().' → logprob: -15.508642196655273

Token 742: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.007048771250993013
    2. 'strip' → logprob: -5.007048606872559
    3. 'split' → logprob: -8.007048606872559
    4. '.rstrip' → logprob: -16.257049560546875
    5. 'rs' → logprob: -16.382049560546875
    6. 'r' → logprob: -16.507049560546875
    7. 'str' → logprob: -20.007049560546875
    8. 'replace' → logprob: -20.632049560546875
    9. 'rst' → logprob: -21.132049560546875
    10. 'startswith' → logprob: -21.632049560546875

Token 743: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.1604287475347519
    2. '()' → logprob: -1.910428762435913
    3. '()
' → logprob: -9.035429000854492
    4. '()\' → logprob: -9.660429000854492
    5. ''\' → logprob: -11.535429000854492
    6. '().' → logprob: -12.410429000854492
    7. '("\' → logprob: -12.535429000854492
    8. '(' → logprob: -13.285429000854492
    9. '('' → logprob: -13.285429000854492
    10. '='\' → logprob: -15.160429000854492

Token 744: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.02990090660750866
    2. 'n' → logprob: -3.5299007892608643
    3. ''\' → logprob: -9.279900550842285
    4. '')' → logprob: -10.404900550842285
    5. '('\' → logprob: -11.029900550842285
    6. 'newline' → logprob: -12.279900550842285
    7. '')
' → logprob: -13.529900550842285
    8. '
' → logprob: -13.529900550842285
    9. ')' → logprob: -13.779900550842285
    10. 'nl' → logprob: -14.279900550842285

Token 745: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5768716335296631
    2. ')
' → logprob: -0.8268716335296631
    3. '           ' → logprob: -8.076871871948242
    4. '')' → logprob: -8.326871871948242
    5. '')
' → logprob: -8.701871871948242
    6. ').' → logprob: -8.701871871948242
    7. ')
' → logprob: -11.201871871948242
    8. ' )
' → logprob: -11.826871871948242
    9. ' )' → logprob: -12.076871871948242
    10. '())
' → logprob: -12.201871871948242

Token 746: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014068307355046272
    2. '<|end|>' → logprob: -4.389068126678467
    3. '<|end|>' → logprob: -7.639068126678467
    4. '		' → logprob: -8.139068603515625
    5. '       ' → logprob: -8.764068603515625
    6. '   ' → logprob: -8.889068603515625
    7. '            
' → logprob: -9.139068603515625
    8. '	       ' → logprob: -9.514068603515625
    9. ' tokens' → logprob: -9.639068603515625
    10. '          ' → logprob: -10.014068603515625

Token 747: ' parts' (ID: 7881)
  Prédit: ' parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.4832867681980133
    2. ' if' → logprob: -1.983286738395691
    3. ' tokens' → logprob: -2.6082868576049805
    4. 'parts' (adapté à ' parts') → logprob: -2.7332868576049805
    5. 'tokens' → logprob: -2.8582868576049805
    6. '           ' → logprob: -3.4832868576049805
    7. 'if' → logprob: -4.8582868576049805
    8. ' cmd' → logprob: -5.2332868576049805
    9. 'cmd' → logprob: -5.3582868576049805
    10. 'token' → logprob: -7.6082868576049805

Token 748: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687965273857117
    2. ' =' → logprob: -1.1368796825408936
    3. '=line' → logprob: -11.886879920959473
    4. '_tokens' → logprob: -14.511879920959473
    5. 'tokens' → logprob: -14.636879920959473
    6. '＝' → logprob: -15.261879920959473
    7. '=[]' → logprob: -16.136878967285156
    8. 'split' → logprob: -16.511878967285156
    9. '           ' → logprob: -16.511878967285156
    10. '_split' → logprob: -17.011878967285156

Token 749: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.001170225441455841
    2. ' line' → logprob: -6.7511701583862305
    3. 'list' → logprob: -21.501171112060547
    4. '[line' → logprob: -22.876171112060547
    5. '	line' → logprob: -23.876171112060547
    6. '(line' → logprob: -24.501171112060547
    7. 'Line' → logprob: -24.751171112060547
    8. ' ' → logprob: -25.126171112060547
    9. '   ' → logprob: -26.001171112060547
    10. '=line' → logprob: -26.001171112060547

Token 750: '.split' (ID: 10347)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.476736456155777
    2. ' =' → logprob: -1.2267364263534546
    3. '.split' → logprob: -2.476736545562744
    4. 'split' → logprob: -6.726736545562744
    5. '[' → logprob: -7.726736545562744
    6. '.' → logprob: -8.976736068725586
    7. '_split' → logprob: -9.351736068725586
    8. ' .' → logprob: -10.726736068725586
    9. '=line' → logprob: -11.351736068725586
    10. '           ' → logprob: -11.476736068725586

Token 751: '('' (ID: 706)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3220229148864746
    2. '('' → logprob: -1.3220229148864746
    3. '(' → logprob: -4.822022914886475
    4. '(['' → logprob: -7.697022914886475
    5. '("' → logprob: -9.447023391723633
    6. '([]' → logprob: -9.822023391723633
    7. '()[' → logprob: -10.947023391723633
    8. '(',' → logprob: -11.572023391723633
    9. '([' → logprob: -11.572023391723633
    10. '(None' → logprob: -11.572023391723633

Token 752: ' ',' (ID: 14089)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.6877498626708984
    2. '()' → logprob: -1.1877498626708984
    3. ')
' → logprob: -2.3127498626708984
    4. ')' → logprob: -2.4377498626708984
    5. '())
' → logprob: -6.312749862670898
    6. '('' → logprob: -6.812749862670898
    7. ' )
' → logprob: -7.187749862670898
    8. '(' → logprob: -7.937749862670898
    9. '')
' → logprob: -8.062749862670898
    10. '1' → logprob: -8.062749862670898

Token 753: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. 'max' → logprob: -15.375
    3. ' ' → logprob: -17.875
    4. '2' → logprob: -18.625
    5. ')' → logprob: -21.375
    6. '0' → logprob: -22.5
    7. '```' → logprob: -23.375
    8. '
' → logprob: -24.375
    9. '   ' → logprob: -24.375
    10. ' max' → logprob: -24.5

Token 754: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. 'max' → logprob: -14.875
    3. '2' → logprob: -16.75
    4. ' ' → logprob: -17.375
    5. '0' → logprob: -19.25
    6. ')' → logprob: -20.25
    7. '
' → logprob: -21.625
    8. '```' → logprob: -21.625
    9. '3' → logprob: -22.0
    10. '   ' → logprob: -22.625

Token 755: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16035400331020355
    2. ')
' → logprob: -1.9103540182113647
    3. '           ' → logprob: -9.035353660583496
    4. ')
' → logprob: -12.535353660583496
    5. ')

' → logprob: -13.160353660583496
    6. '')' → logprob: -13.535353660583496
    7. '       ' → logprob: -13.660353660583496
    8. ']' → logprob: -14.285353660583496
    9. '               ' → logprob: -14.785353660583496
    10. ')[' → logprob: -14.910353660583496

Token 756: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11318601667881012
    2. 'token' → logprob: -2.4881861209869385
    3. 'if' → logprob: -4.238185882568359
    4. ' if' → logprob: -5.113185882568359
    5. ' token' → logprob: -6.738185882568359
    6. 'command' → logprob: -7.238185882568359
    7. '   ' → logprob: -7.363185882568359
    8. 'cmd' → logprob: -7.863185882568359
    9. '       ' → logprob: -8.48818588256836
    10. ' command' → logprob: -9.36318588256836

Token 757: ' cmd' (ID: 11704)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmd' (adapté à ' cmd') → logprob: -0.014610839076340199
    2. 'command' → logprob: -4.264610767364502
    3. 'op' → logprob: -7.764610767364502
    4. '           ' → logprob: -11.26461124420166
    5. 'if' → logprob: -12.63961124420166
    6. 'action' → logprob: -12.63961124420166
    7. ' cmd' → logprob: -13.01461124420166
    8. 'opcode' → logprob: -14.26461124420166
    9. 'operation' → logprob: -14.76461124420166
    10. '_cmd' → logprob: -17.389610290527344

Token 758: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2919888198375702
    2. '[' → logprob: -1.7919888496398926
    3. '=' → logprob: -2.5419888496398926
    4. '_token' → logprob: -6.041988849639893
    5. ' ' → logprob: -6.166988849639893
    6. '_' → logprob: -6.666988849639893
    7. '_tokens' → logprob: -7.666988849639893
    8. '_idx' → logprob: -7.916988849639893
    9. '   ' → logprob: -8.666988372802734
    10. '_index' → logprob: -8.791988372802734

Token 759: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.0005532711511477828
    2. ' parts' → logprob: -7.500553131103516
    3. '(parts' → logprob: -15.375553131103516
    4. '   ' → logprob: -16.875553131103516
    5. 'line' → logprob: -17.000553131103516
    6. 'lines' → logprob: -17.875553131103516
    7. 'part' → logprob: -18.250553131103516
    8. ' ' → logprob: -18.750553131103516
    9. 'pieces' → logprob: -18.875553131103516
    10. '           ' → logprob: -19.750553131103516

Token 760: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00020854694594163448
    2. '0' → logprob: -8.875208854675293
    3. '=' → logprob: -11.250208854675293
    4. '   ' → logprob: -11.625208854675293
    5. '[
' → logprob: -11.875208854675293
    6. '_tokens' → logprob: -11.875208854675293
    7. '1' → logprob: -12.125208854675293
    8. '_token' → logprob: -12.375208854675293
    9. 'def' → logprob: -12.375208854675293
    10. '```' → logprob: -12.625208854675293

Token 761: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.25
    3. '[' → logprob: -16.0
    4. '1' → logprob: -17.875
    5. '۰' → logprob: -19.1875
    6. '```' → logprob: -19.1875
    7. '   ' → logprob: -19.75
    8. '
' → logprob: -20.25
    9. '-' → logprob: -20.3125
    10. '`' → logprob: -20.5

Token 762: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04115627706050873
    2. '<|end|>' → logprob: -3.29115629196167
    3. ']' → logprob: -6.29115629196167
    4. '<|end|>' → logprob: -7.29115629196167
    5. '')' → logprob: -7.91615629196167
    6. '")' → logprob: -10.291155815124512
    7. '}' → logprob: -10.416155815124512
    8. ')
' → logprob: -10.416155815124512
    9. '   ' → logprob: -10.916155815124512
    10. '```' → logprob: -11.291155815124512

Token 763: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03218725323677063
    2. '<|end|>' → logprob: -3.5321872234344482
    3. '```' → logprob: -6.907187461853027
    4. '       ' → logprob: -7.282187461853027
    5. '<|end|>' → logprob: -8.407187461853027
    6. '   ' → logprob: -8.907187461853027
    7. '		' → logprob: -9.407187461853027
    8. ' if' → logprob: -9.657187461853027
    9. 'if' → logprob: -9.782187461853027
    10. '[' → logprob: -10.282187461853027

Token 764: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.019428176805377007
    2. ' if' → logprob: -4.644428253173828
    3. '           ' → logprob: -4.644428253173828
    4. 'args' → logprob: -12.894428253173828
    5. '       ' → logprob: -13.269428253173828
    6. '```' → logprob: -13.519428253173828
    7. 'token' → logprob: -13.769428253173828
    8. '          ' → logprob: -14.144428253173828
    9. 'arg' → logprob: -14.269428253173828
    10. '            ' → logprob: -14.644428253173828

Token 765: ' cmd' (ID: 11704)
  Prédit: ' cmd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cmd' → logprob: -0.12693357467651367
    2. 'cmd' → logprob: -2.1269335746765137
    3. '	cmd' → logprob: -12.376934051513672
    4. ' len' → logprob: -14.751934051513672
    5. '(cmd' → logprob: -14.876934051513672
    6. ' ' → logprob: -15.001934051513672
    7. '  ' → logprob: -16.376934051513672
    8. 'len' → logprob: -16.626934051513672
    9. '_cmd' → logprob: -18.001934051513672
    10. 'False' → logprob: -18.126934051513672

Token 766: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2519856095314026
    2. '==' → logprob: -1.5019855499267578
    3. '=' → logprob: -10.501985549926758
    4. '==
' → logprob: -11.751985549926758
    5. '=='' → logprob: -12.376985549926758
    6. '[' → logprob: -12.376985549926758
    7. ' =' → logprob: -12.501985549926758
    8. '=="' → logprob: -13.001985549926758
    9. '===' → logprob: -13.626985549926758
    10. ' in' → logprob: -14.001985549926758

Token 767: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02558394894003868
    2. '"' → logprob: -3.9005839824676514
    3. ' '' → logprob: -5.400583744049072
    4. ''m' → logprob: -9.27558422088623
    5. ' "' → logprob: -9.52558422088623
    6. ''ins' → logprob: -9.65058422088623
    7. ''b' → logprob: -9.77558422088623
    8. ''in' → logprob: -10.02558422088623
    9. ''d' → logprob: -10.40058422088623
    10. ''f' → logprob: -10.65058422088623

Token 768: 'forward' (ID: 20233)
  Prédit: 'insert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'insert' → logprob: -0.7029402852058411
    2. 'INSERT' → logprob: -1.4529402256011963
    3. 'forward' → logprob: -1.8279402256011963
    4. ''' → logprob: -3.4529402256011963
    5. 'MOVE' → logprob: -3.8279402256011963
    6. 'F' → logprob: -4.452940464019775
    7. 'FOR' → logprob: -4.577940464019775
    8. 'I' → logprob: -4.577940464019775
    9. 'move' → logprob: -4.952940464019775
    10. '"' → logprob: -5.827940464019775

Token 769: '':
' (ID: 7669)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.0004284043679945171
    2. '_word' → logprob: -8.125428199768066
    3. '_' → logprob: -9.375428199768066
    4. 'char' → logprob: -10.000428199768066
    5. 'Char' → logprob: -14.375428199768066
    6. '_CHAR' → logprob: -15.125428199768066
    7. ''_' → logprob: -15.125428199768066
    8. '_character' → logprob: -15.250428199768066
    9. ''' → logprob: -15.375428199768066
    10. '_token' → logprob: -15.625428199768066

Token 770: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07093845307826996
    2. '           ' → logprob: -3.1959383487701416
    3. '_cursor' → logprob: -4.570938587188721
    4. ' cursor' → logprob: -4.945938587188721
    5. 'cursor' → logprob: -5.945938587188721
    6. '(cursor' → logprob: -6.570938587188721
    7. '                
' → logprob: -6.820938587188721
    8. '   ' → logprob: -7.195938587188721
    9. '       ' → logprob: -7.320938587188721
    10. ':
' → logprob: -7.570938587188721

Token 771: ' arg' (ID: 2341)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.1749962717294693
    2. ' cursor' → logprob: -2.4249963760375977
    3. '               ' → logprob: -3.2999963760375977
    4. '           ' → logprob: -4.174996376037598
    5. 'if' → logprob: -4.174996376037598
    6. '   ' → logprob: -6.549996376037598
    7. ' if' → logprob: -6.549996376037598
    8. '       ' → logprob: -7.424996376037598
    9. '	cursor' → logprob: -8.174996376037598
    10. ' ' → logprob: -8.674996376037598

Token 772: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.249468132853508
    2. '=' → logprob: -2.3744680881500244
    3. '_char' → logprob: -2.8744680881500244
    4. '_cursor' → logprob: -3.2494680881500244
    5. '_token' → logprob: -4.6244683265686035
    6. '_' → logprob: -4.7494683265686035
    7. '_pos' → logprob: -4.8744683265686035
    8. '_idx' → logprob: -6.2494683265686035
    9. '_len' → logprob: -6.7494683265686035
    10. '_=' → logprob: -7.3744683265686035

Token 773: ' parts' (ID: 7881)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.336762398481369
    2. 'parts' → logprob: -1.3367624282836914
    3. ' int' → logprob: -4.086762428283691
    4. ' parts' → logprob: -5.086762428283691
    5. 'forward' → logprob: -9.336762428283691
    6. '(parts' → logprob: -10.461762428283691
    7. 'None' → logprob: -10.586762428283691
    8. 'line' → logprob: -10.586762428283691
    9. '(int' → logprob: -10.586762428283691
    10. '0' → logprob: -10.961762428283691

Token 774: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0022758657578378916
    2. '=' → logprob: -6.7522759437561035
    3. '1' → logprob: -7.0022759437561035
    4. ' ' → logprob: -10.627275466918945
    5. '   ' → logprob: -10.627275466918945
    6. '```' → logprob: -10.627275466918945
    7. ' [' → logprob: -10.877275466918945
    8. 's' → logprob: -10.877275466918945
    9. ' =' → logprob: -11.377275466918945
    10. 'if' → logprob: -11.377275466918945

Token 775: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. '0' → logprob: -12.750005722045898
    3. ' ' → logprob: -13.000005722045898
    4. '-' → logprob: -16.0000057220459
    5. '[' → logprob: -16.5000057220459
    6. '   ' → logprob: -16.8750057220459
    7. '(' → logprob: -17.2500057220459
    8. '
' → logprob: -17.6250057220459
    9. '```' → logprob: -18.5000057220459
    10. ' -' → logprob: -19.5625057220459

Token 776: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3713666498661041
    2. ']
' → logprob: -2.3713667392730713
    3. ')' → logprob: -2.8713667392730713
    4. ' ]' → logprob: -3.3713667392730713
    5. '
' → logprob: -3.8713667392730713
    6. ' ]
' → logprob: -3.9963667392730713
    7. '<|end|>' → logprob: -4.121366500854492
    8. ')
' → logprob: -4.246366500854492
    9. ' )
' → logprob: -4.371366500854492
    10. ' )' → logprob: -4.371366500854492

Token 777: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5705385804176331
    2. '<|end|>' → logprob: -1.5705385208129883
    3. '           ' → logprob: -1.8205385208129883
    4. ' if' → logprob: -3.9455385208129883
    5. '<|end|>' → logprob: -4.195538520812988
    6. ' =' → logprob: -5.445538520812988
    7. '                   ' → logprob: -5.570538520812988
    8. '            
' → logprob: -5.695538520812988
    9. '
' → logprob: -5.945538520812988
    10. '                
' → logprob: -5.945538520812988

Token 778: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.001248804503120482
    2. ' if' → logprob: -6.876248836517334
    3. '           ' → logprob: -9.001248359680176
    4. '               ' → logprob: -9.626248359680176
    5. 'char' → logprob: -10.751248359680176
    6. 'n' → logprob: -13.251248359680176
    7. 'num' → logprob: -14.501248359680176
    8. 'pos' → logprob: -14.501248359680176
    9. 'length' → logprob: -14.751248359680176
    10. 'chars' → logprob: -14.876248359680176

Token 779: ' arg' (ID: 2341)
  Prédit: 'arg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arg' → logprob: -0.0008090290939435363
    2. ' arg' → logprob: -7.125809192657471
    3. ' ' → logprob: -13.125808715820312
    4. '  ' → logprob: -13.875808715820312
    5. '   ' → logprob: -14.125808715820312
    6. 'cmd' → logprob: -14.375808715820312
    7. '    ' → logprob: -16.500808715820312
    8. '	arg' → logprob: -16.500808715820312
    9. '[arg' → logprob: -16.875808715820312
    10. 'argin' → logprob: -17.000808715820312

Token 780: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4296673536300659
    2. '==' → logprob: -1.054667353630066
    3. '=='' → logprob: -7.3046674728393555
    4. '[' → logprob: -9.054667472839355
    5. '=="' → logprob: -9.554667472839355
    6. ' =='' → logprob: -10.054667472839355
    7. '=' → logprob: -10.929667472839355
    8. '()==' → logprob: -11.804667472839355
    9. '===' → logprob: -12.054667472839355
    10. ')==' → logprob: -12.054667472839355

Token 781: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0014078515814617276
    2. '"' → logprob: -6.751407623291016
    3. ''ch' → logprob: -9.626407623291016
    4. '_char' → logprob: -10.501407623291016
    5. ''s' → logprob: -10.876407623291016
    6. ''t' → logprob: -11.001407623291016
    7. 'char' → logprob: -11.251407623291016
    8. ' '' → logprob: -11.251407623291016
    9. ''a' → logprob: -11.376407623291016
    10. '   ' → logprob: -12.001407623291016

Token 782: 'char' (ID: 3257)
  Prédit: 'char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.00042090186616405845
    2. ''' → logprob: -8.500420570373535
    3. '_char' → logprob: -9.000420570373535
    4. 'word' → logprob: -10.000420570373535
    5. 'character' → logprob: -10.875420570373535
    6. 'Char' → logprob: -11.375420570373535
    7. '-char' → logprob: -12.500420570373535
    8. '"' → logprob: -12.625420570373535
    9. '1' → logprob: -12.625420570373535
    10. 'c' → logprob: -12.750420570373535

Token 783: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.0036254855804145336
    2. '):
' → logprob: -6.503625392913818
    3. '':' → logprob: -6.628625392913818
    4. ''):
' → logprob: -8.378625869750977
    5. ':
' → logprob: -8.503625869750977
    6. ')' → logprob: -9.003625869750977
    7. ''' → logprob: -9.253625869750977
    8. '':
' → logprob: -10.128625869750977
    9. '           ' → logprob: -10.378625869750977
    10. ':' → logprob: -10.628625869750977

Token 784: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.034469734877347946
    2. '
' → logprob: -3.5344698429107666
    3. 'cursor' → logprob: -5.9094696044921875
    4. ':
' → logprob: -7.2844696044921875
    5. ' cursor' → logprob: -7.9094696044921875
    6. '                       ' → logprob: -8.159469604492188
    7. '               ' → logprob: -8.409469604492188
    8. '           ' → logprob: -8.784469604492188
    9. '```' → logprob: -9.784469604492188
    10. '(cursor' → logprob: -9.909469604492188

Token 785: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' (adapté à ' cursor') → logprob: -0.04060756415128708
    2. ' cursor' → logprob: -3.540607452392578
    3. '                   ' → logprob: -4.540607452392578
    4. '               ' → logprob: -9.790607452392578
    5. '	cursor' → logprob: -10.665607452392578
    6. '                       ' → logprob: -10.915607452392578
    7. '           ' → logprob: -11.165607452392578
    8. '   ' → logprob: -11.165607452392578
    9. '       ' → logprob: -13.165607452392578
    10. '.cursor' → logprob: -13.790607452392578

Token 786: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.251936137676239
    2. ' =' → logprob: -1.5019361972808838
    3. '+=' → logprob: -12.001935958862305
    4. ' +=' → logprob: -14.001935958862305
    5. '＝' → logprob: -17.751935958862305
    6. '.=' → logprob: -17.751935958862305
    7. ' ' → logprob: -19.001935958862305
    8. '=

' → logprob: -19.376935958862305
    9. ',' → logprob: -20.876935958862305
    10. '=}' → logprob: -21.251935958862305

Token 787: ' forward' (ID: 6687)
  Prédit: 'forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forward' → logprob: -0.004078401252627373
    2. ' forward' → logprob: -5.504078388214111
    3. 'back' → logprob: -21.504077911376953
    4. '.forward' → logprob: -22.129077911376953
    5. '_forward' → logprob: -22.254077911376953
    6. '   ' → logprob: -22.379077911376953
    7. 'Forward' → logprob: -22.754077911376953
    8. '-forward' → logprob: -24.254077911376953
    9. '
' → logprob: -24.629077911376953
    10. ' ' → logprob: -24.879077911376953

Token 788: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -2.451116051815916e-05
    2. 'char' → logprob: -10.625024795532227
    3. 'Char' → logprob: -16.375024795532227
    4. '_word' → logprob: -17.375024795532227
    5. '_cursor' → logprob: -17.500024795532227
    6. '```' → logprob: -17.625024795532227
    7. '_CHAR' → logprob: -18.875024795532227
    8. 'cursor' → logprob: -19.250024795532227
    9. '<char' → logprob: -19.500024795532227
    10. '"_' → logprob: -19.625024795532227

Token 789: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -3.128163257315464e-07
    2. 'text' → logprob: -15.875
    3. ' (' → logprob: -17.125
    4. '(' → logprob: -17.125
    5. '{text' → logprob: -17.25
    6. ',text' → logprob: -18.5
    7. ' text' → logprob: -18.625
    8. '=text' → logprob: -19.875
    9. '(Text' → logprob: -20.25
    10. '[text' → logprob: -20.5

Token 790: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5778243541717529
    2. ')' → logprob: -0.8278243541717529
    3. ')
' → logprob: -6.702824592590332
    4. '                   ' → logprob: -7.827824592590332
    5. ',text' → logprob: -8.952824592590332
    6. '               ' → logprob: -9.827824592590332
    7. ' ,' → logprob: -9.952824592590332
    8. ')
' → logprob: -12.077824592590332
    9. ' )' → logprob: -12.452824592590332
    10. '       ' → logprob: -12.577824592590332

Token 791: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.0019293478690087795
    2. ' cursor' → logprob: -6.25192928314209
    3. '	cursor' → logprob: -15.00192928314209
    4. '(cursor' → logprob: -15.75192928314209
    5. '
' → logprob: -16.251930236816406
    6. '   ' → logprob: -16.251930236816406
    7. '               ' → logprob: -18.501930236816406
    8. '                   ' → logprob: -18.751930236816406
    9. '       ' → logprob: -18.876930236816406
    10. '_cursor' → logprob: -18.876930236816406

Token 792: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10057801008224487
    2. ')
' → logprob: -2.3505780696868896
    3. '               ' → logprob: -7.9755778312683105
    4. '                   ' → logprob: -11.350578308105469
    5. '           ' → logprob: -11.475578308105469
    6. '<|end|>' → logprob: -13.600578308105469
    7. ')
' → logprob: -13.725578308105469
    8. ')

' → logprob: -13.850578308105469
    9. '       ' → logprob: -13.975578308105469
    10. '   ' → logprob: -15.100578308105469

Token 793: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 794: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.48241257667541504
    2. 'elif' (adapté à ' elif') → logprob: -1.607412576675415
    3. '           ' → logprob: -1.732412576675415
    4. ' elif' → logprob: -5.232412338256836
    5. 'else' → logprob: -10.357412338256836
    6. '	elif' → logprob: -10.732412338256836
    7. '                   ' → logprob: -11.357412338256836
    8. '       ' → logprob: -11.857412338256836
    9. '		' → logprob: -11.857412338256836
    10. ' else' → logprob: -12.232412338256836

Token 795: ' arg' (ID: 2341)
  Prédit: ' arg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arg' → logprob: -0.006720705423504114
    2. 'arg' → logprob: -5.006720542907715
    3. '[arg' → logprob: -12.756720542907715
    4. '(arg' → logprob: -13.881720542907715
    5. '	arg' → logprob: -14.506720542907715
    6. ''' → logprob: -14.631720542907715
    7. ' ' → logprob: -15.631720542907715
    8. ' ' → logprob: -15.881720542907715
    9. ')arg' → logprob: -16.25672149658203
    10. ',arg' → logprob: -17.13172149658203

Token 796: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1428031027317047
    2. '==' → logprob: -2.017803192138672
    3. ' =' → logprob: -9.767803192138672
    4. '=' → logprob: -10.142803192138672
    5. '=='' → logprob: -11.392803192138672
    6. '===' → logprob: -11.642803192138672
    7. '.startswith' → logprob: -13.267803192138672
    8. '[' → logprob: -13.392803192138672
    9. ' ===' → logprob: -13.517803192138672
    10. '=="' → logprob: -14.017803192138672

Token 797: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0006378580583259463
    2. ' '' → logprob: -7.375638008117676
    3. '"' → logprob: -11.625638008117676
    4. ''w' → logprob: -14.375638008117676
    5. ''s' → logprob: -14.625638008117676
    6. ' ' → logprob: -15.000638008117676
    7. '
' → logprob: -15.250638008117676
    8. '`' → logprob: -15.875638008117676
    9. '('' → logprob: -16.37563705444336
    10. 'word' → logprob: -16.50063705444336

Token 798: 'word' (ID: 1801)
  Prédit: 'word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -3.650518920039758e-06
    2. ''' → logprob: -13.125003814697266
    3. 'char' → logprob: -13.750003814697266
    4. ' word' → logprob: -14.875003814697266
    5. '_word' → logprob: -16.250003814697266
    6. 'Word' → logprob: -19.875003814697266
    7. '	word' → logprob: -20.250003814697266
    8. 'WORD' → logprob: -20.375003814697266
    9. ' ' → logprob: -20.500003814697266
    10. '`' → logprob: -20.750003814697266

Token 799: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.10024776309728622
    2. '                   ' → logprob: -3.725247859954834
    3. '':' → logprob: -3.725247859954834
    4. ':
' → logprob: -4.350247859954834
    5. '):
' → logprob: -4.350247859954834
    6. '               ' → logprob: -4.475247859954834
    7. ''):
' → logprob: -5.350247859954834
    8. ':' → logprob: -5.975247859954834
    9. '']:
' → logprob: -6.600247859954834
    10. '           ' → logprob: -7.850247859954834

Token 800: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003962278366088867
    2. 'cursor' → logprob: -6.003962516784668
    3. ':
' → logprob: -7.503962516784668
    4. '               ' → logprob: -7.503962516784668
    5. '           ' → logprob: -8.378962516784668
    6. ' cursor' → logprob: -9.378962516784668
    7. '):
' → logprob: -11.003962516784668
    8. '   ' → logprob: -11.378962516784668
    9. ':' → logprob: -11.753962516784668
    10. '```' → logprob: -11.878962516784668

Token 801: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' (adapté à ' cursor') → logprob: -0.008722590282559395
    2. ' cursor' → logprob: -4.75872278213501
    3. '                   ' → logprob: -9.258722305297852
    4. '               ' → logprob: -12.008722305297852
    5. '	cursor' → logprob: -12.508722305297852
    6. '   ' → logprob: -13.633722305297852
    7. '       ' → logprob: -13.883722305297852
    8. '           ' → logprob: -15.008722305297852
    9. '                       ' → logprob: -15.258722305297852
    10. '.cursor' → logprob: -16.00872230529785

Token 802: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132617771625519
    2. '=' → logprob: -1.3132617473602295
    3. '   ' → logprob: -17.563261032104492
    4. ' ' → logprob: -17.813261032104492
    5. ')' → logprob: -18.938261032104492
    6. '                   ' → logprob: -18.938261032104492
    7. '       ' → logprob: -19.188261032104492
    8. '           ' → logprob: -19.563261032104492
    9. '=
' → logprob: -19.688261032104492
    10. '＝' → logprob: -19.813261032104492

Token 803: ' forward' (ID: 6687)
  Prédit: 'forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forward' → logprob: -0.001170225441455841
    2. ' forward' → logprob: -6.7511701583862305
    3. '.forward' → logprob: -20.501171112060547
    4. '_forward' → logprob: -22.376171112060547
    5. 'for' → logprob: -24.876171112060547
    6. '   ' → logprob: -24.876171112060547
    7. 'Forward' → logprob: -25.251171112060547
    8. 'back' → logprob: -25.501171112060547
    9. '```' → logprob: -26.251171112060547
    10. '
' → logprob: -26.626171112060547

Token 804: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.00030841029365547
    2. '_char' → logprob: -8.1253080368042
    3. '_' → logprob: -12.1253080368042
    4. '_words' → logprob: -12.7503080368042
    5. ''_' → logprob: -13.5003080368042
    6. '```' → logprob: -13.6253080368042
    7. '_token' → logprob: -15.2503080368042
    8. '"_' → logprob: -15.8753080368042
    9. ' _' → logprob: -16.000308990478516
    10. 'word' → logprob: -16.125308990478516

Token 805: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -3.292907877039397e-06
    2. '{text' → logprob: -13.87500286102295
    3. ' (' → logprob: -14.00000286102295
    4. ',text' → logprob: -14.75000286102295
    5. 'text' → logprob: -15.12500286102295
    6. '(' → logprob: -15.12500286102295
    7. ' text' → logprob: -15.37500286102295
    8. '```' → logprob: -16.000003814697266
    9. '(code' → logprob: -17.625003814697266
    10. ':text' → logprob: -17.625003814697266

Token 806: ',' (ID: 11)
  Prédit: '(text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -0.02134063094854355
    2. ',' → logprob: -4.021340847015381
    3. ',text' → logprob: -5.771340847015381
    4. 'text' → logprob: -10.896340370178223
    5. ' text' → logprob: -11.271340370178223
    6. ')' → logprob: -11.646340370178223
    7. '{text' → logprob: -11.771340370178223
    8. '       ' → logprob: -11.896340370178223
    9. '=text' → logprob: -12.896340370178223
    10. '),' → logprob: -13.021340370178223

Token 807: ' cursor' (ID: 14944)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'text' → logprob: -1.676292231422849e-05
    2. ' text' → logprob: -11.000017166137695
    3. '(text' → logprob: -18.625017166137695
    4. '
' → logprob: -18.750017166137695
    5. ')' → logprob: -20.375017166137695
    6. '{text' → logprob: -20.375017166137695
    7. '```' → logprob: -20.500017166137695
    8. 'cursor' → logprob: -20.625017166137695
    9. '   ' → logprob: -20.625017166137695
    10. '"text' → logprob: -20.625017166137695

Token 808: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005766240647062659
    2. '<|end|>' → logprob: -8.000576972961426
    3. '               ' → logprob: -8.875576972961426
    4. ')
' → logprob: -9.750576972961426
    5. '           ' → logprob: -10.375576972961426
    6. '       ' → logprob: -12.500576972961426
    7. '                   ' → logprob: -12.750576972961426
    8. '<|end|>' → logprob: -13.250576972961426
    9. ' )' → logprob: -14.625576972961426
    10. '')' → logprob: -14.875576972961426

Token 809: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03625386580824852
    2. '<|end|>' → logprob: -3.6612539291381836
    3. 'elif' → logprob: -5.036253929138184
    4. '               ' → logprob: -6.536253929138184
    5. ' elif' → logprob: -7.286253929138184
    6. '       ' → logprob: -8.161253929138184
    7. '<|end|>' → logprob: -8.286253929138184
    8. '
' → logprob: -8.411253929138184
    9. '```' → logprob: -8.786253929138184
    10. '		' → logprob: -8.911253929138184

Token 810: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008121723309159279
    2. 'elif' (adapté à ' elif') → logprob: -4.883121490478516
    3. ' elif' → logprob: -7.758121490478516
    4. '		' → logprob: -9.633121490478516
    5. '       ' → logprob: -11.383121490478516
    6. '               ' → logprob: -12.383121490478516
    7. '	elif' → logprob: -12.633121490478516
    8. '	       ' → logprob: -13.633121490478516
    9. 'else' → logprob: -14.258121490478516
    10. '```' → logprob: -14.633121490478516

Token 811: ' cmd' (ID: 11704)
  Prédit: ' cmd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cmd' → logprob: -0.007675010710954666
    2. 'cmd' → logprob: -4.8826751708984375
    3. ' arg' → logprob: -10.007675170898438
    4. '(cmd' → logprob: -11.382675170898438
    5. ' parts' → logprob: -12.007675170898438
    6. '	cmd' → logprob: -12.757675170898438
    7. ' cursor' → logprob: -13.507675170898438
    8. 'arg' → logprob: -14.382675170898438
    9. ' line' → logprob: -14.632675170898438
    10. ' ' → logprob: -15.007675170898438

Token 812: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.006735384464263916
    2. '==' → logprob: -5.006735324859619
    3. ' =' → logprob: -11.506735801696777
    4. ' ===' → logprob: -12.256735801696777
    5. '===' → logprob: -13.381735801696777
    6. '=' → logprob: -14.006735801696777
    7. ' ' → logprob: -14.631735801696777
    8. '.startswith' → logprob: -14.881735801696777
    9. '[' → logprob: -15.256735801696777
    10. '           ' → logprob: -15.256735801696777

Token 813: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.011096746660768986
    2. ' '' → logprob: -4.511096954345703
    3. ''s' → logprob: -10.511096954345703
    4. ' backward' → logprob: -11.886096954345703
    5. '"' → logprob: -12.261096954345703
    6. ''post' → logprob: -12.761096954345703
    7. '('' → logprob: -13.136096954345703
    8. ''b' → logprob: -13.511096954345703
    9. ''m' → logprob: -14.886096954345703
    10. ' ' → logprob: -15.136096954345703

Token 814: 'back' (ID: 2205)
  Prédit: 'back'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'back' → logprob: -1.6047699318733066e-05
    2. ''' → logprob: -11.125016212463379
    3. ''b' → logprob: -14.750016212463379
    4. ' backward' → logprob: -14.750016212463379
    5. 'insert' → logprob: -15.375016212463379
    6. '.backward' → logprob: -15.625016212463379
    7. '_backward' → logprob: -16.500015258789062
    8. '"' → logprob: -17.875015258789062
    9. 'forward' → logprob: -18.125015258789062
    10. 'Backward' → logprob: -18.125015258789062

Token 815: 'ward' (ID: 2076)
  Prédit: 'ward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ward' → logprob: -0.0009202735964208841
    2. 'word' → logprob: -7.000920295715332
    3. '_word' → logprob: -12.250920295715332
    4. '_char' → logprob: -12.625920295715332
    5. '_' → logprob: -15.250920295715332
    6. 'w' → logprob: -15.750920295715332
    7. 'wards' → logprob: -16.000919342041016
    8. 'ard' → logprob: -16.750919342041016
    9. '```' → logprob: -16.750919342041016
    10. 'wd' → logprob: -17.125919342041016

Token 816: '':
' (ID: 7669)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.005125126801431179
    2. '_' → logprob: -7.005125045776367
    3. ':
' → logprob: -7.005125045776367
    4. '_cmd' → logprob: -7.130125045776367
    5. ''_' → logprob: -7.505125045776367
    6. '_word' → logprob: -7.630125045776367
    7. '_token' → logprob: -7.880125045776367
    8. '```' → logprob: -8.505125045776367
    9. '_cursor' → logprob: -8.755125045776367
    10. ''' → logprob: -9.005125045776367

Token 817: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005824394524097443
    2. '           ' → logprob: -7.005824565887451
    3. ' ' → logprob: -7.130824565887451
    4. '<|end|>' → logprob: -7.130824565887451
    5. '```' → logprob: -7.380824565887451
    6. '		       ' → logprob: -7.505824565887451
    7. ' _' → logprob: -8.005824089050293
    8. '	       ' → logprob: -8.130824089050293
    9. '_' → logprob: -8.505824089050293
    10. '	           ' → logprob: -8.880824089050293

Token 818: ' arg' (ID: 2341)
  Prédit: ' arg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arg' → logprob: -0.034445665776729584
    2. '           ' → logprob: -4.409445762634277
    3. ' parts' → logprob: -4.409445762634277
    4. 'arg' (adapté à ' arg') → logprob: -4.784445762634277
    5. 'parts' → logprob: -7.534445762634277
    6. '```' → logprob: -8.534445762634277
    7. '               ' → logprob: -8.659445762634277
    8. ' part' → logprob: -9.909445762634277
    9. '[arg' → logprob: -10.034445762634277
    10. '	arg' → logprob: -10.159445762634277

Token 819: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16025489568710327
    2. '=' → logprob: -1.910254955291748
    3. ',' → logprob: -11.28525447845459
    4. '_' → logprob: -11.91025447845459
    5. '_=' → logprob: -12.78525447845459
    6. ' ' → logprob: -12.91025447845459
    7. 'if' → logprob: -14.03525447845459
    8. '_token' → logprob: -14.53525447845459
    9. ' if' → logprob: -14.53525447845459
    10. ')' → logprob: -14.66025447845459

Token 820: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.31327441334724426
    2. ' parts' → logprob: -1.3132743835449219
    3. '(parts' → logprob: -11.563274383544922
    4. '   ' → logprob: -14.313274383544922
    5. ' ' → logprob: -14.438274383544922
    6. '.parts' → logprob: -14.813274383544922
    7. '       ' → logprob: -14.938274383544922
    8. '           ' → logprob: -15.313274383544922
    9. 'part' → logprob: -15.563274383544922
    10. '_parts' → logprob: -16.438274383544922

Token 821: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8624639324116288e-06
    2. '1' → logprob: -13.250001907348633
    3. ' [' → logprob: -17.750001907348633
    4. '```' → logprob: -18.500001907348633
    5. '   ' → logprob: -18.625001907348633
    6. '
' → logprob: -18.750001907348633
    7. '[
' → logprob: -18.875001907348633
    8. '           ' → logprob: -19.750001907348633
    9. '       ' → logprob: -20.250001907348633
    10. 'def' → logprob: -20.375001907348633

Token 822: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. '[' → logprob: -13.750001907348633
    3. ' ' → logprob: -14.625001907348633
    4. ''' → logprob: -15.875001907348633
    5. '
' → logprob: -17.000001907348633
    6. '```' → logprob: -17.250001907348633
    7. '   ' → logprob: -17.750001907348633
    8. '0' → logprob: -18.375001907348633
    9. ''s' → logprob: -18.812501907348633
    10. '...' → logprob: -19.125001907348633

Token 823: ']
' (ID: 1592)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.023185255005955696
    2. '           ' → logprob: -3.8981852531433105
    3. ']' → logprob: -6.8981852531433105
    4. ']
' → logprob: -7.6481852531433105
    5. 'if' → logprob: -8.273185729980469
    6. '
' → logprob: -8.648185729980469
    7. '<|end|>' → logprob: -8.773185729980469
    8. ' if' → logprob: -9.523185729980469
    9. ',' → logprob: -9.523185729980469
    10. '```' → logprob: -9.648185729980469

Token 824: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015212877187877893
    2. ' =' → logprob: -7.626521110534668
    3. '=' → logprob: -7.751521110534668
    4. '                   ' → logprob: -8.626521110534668
    5. '```' → logprob: -8.876521110534668
    6. '           ' → logprob: -9.126521110534668
    7. 'cursor' → logprob: -10.001521110534668
    8. '<|end|>' → logprob: -10.501521110534668
    9. '	       ' → logprob: -11.126521110534668
    10. '		       ' → logprob: -11.501521110534668

Token 825: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5870956778526306
    2. '               ' → logprob: -0.8370956778526306
    3. ' if' → logprob: -4.587095737457275
    4. '           ' → logprob: -7.087095737457275
    5. '
' → logprob: -10.962095260620117
    6. '       ' → logprob: -11.587095260620117
    7. '                   ' → logprob: -11.587095260620117
    8. '             ' → logprob: -11.962095260620117
    9. '	if' → logprob: -11.962095260620117
    10. '   ' → logprob: -12.087095260620117

Token 826: ' arg' (ID: 2341)
  Prédit: ' arg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arg' → logprob: -0.12693408131599426
    2. 'arg' → logprob: -2.126934051513672
    3. '[arg' → logprob: -12.626934051513672
    4. '(arg' → logprob: -13.126934051513672
    5. ')arg' → logprob: -15.001934051513672
    6. 'argin' → logprob: -15.626934051513672
    7. '	arg' → logprob: -15.626934051513672
    8. ',arg' → logprob: -16.126934051513672
    9. 'argon' → logprob: -16.876934051513672
    10. 'cmd' → logprob: -17.876934051513672

Token 827: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08923802524805069
    2. '==' → logprob: -2.464237928390503
    3. ' =' → logprob: -8.589238166809082
    4. '=' → logprob: -9.339238166809082
    5. '===' → logprob: -12.089238166809082
    6. ')' → logprob: -12.464238166809082
    7. '==
' → logprob: -12.964238166809082
    8. ' ===' → logprob: -13.214238166809082
    9. '<|end|>' → logprob: -13.214238166809082
    10. '=='' → logprob: -13.339238166809082

Token 828: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0028364919126033783
    2. ' '' → logprob: -5.87783670425415
    3. ''s' → logprob: -10.627836227416992
    4. '"' → logprob: -13.002836227416992
    5. ''w' → logprob: -14.127836227416992
    6. ''user' → logprob: -14.252836227416992
    7. 'char' → logprob: -14.627836227416992
    8. ''b' → logprob: -14.752836227416992
    9. ''end' → logprob: -15.127836227416992
    10. ''m' → logprob: -15.127836227416992

Token 829: 'char' (ID: 3257)
  Prédit: 'arg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arg' → logprob: -0.4109572768211365
    2. 'char' → logprob: -1.4109573364257812
    3. ''' → logprob: -2.4109573364257812
    4. 'cmd' → logprob: -6.035957336425781
    5. 'word' → logprob: -7.410957336425781
    6. 'back' → logprob: -8.785957336425781
    7. ' arg' → logprob: -10.160957336425781
    8. ''b' → logprob: -10.410957336425781
    9. '[arg' → logprob: -10.410957336425781
    10. '(arg' → logprob: -11.285957336425781

Token 830: '':
' (ID: 7669)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5435621738433838
    2. ':
' → logprob: -0.9185621738433838
    3. ':' → logprob: -5.168561935424805
    4. '):
' → logprob: -5.293561935424805
    5. '':
' → logprob: -5.418561935424805
    6. '               ' → logprob: -5.918561935424805
    7. '=' → logprob: -7.793561935424805
    8. ''):
' → logprob: -7.918561935424805
    9. '           ' → logprob: -8.043561935424805
    10. '                  ' → logprob: -8.168561935424805

Token 831: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0020756712183356285
    2. 'cursor' → logprob: -6.627075672149658
    3. '               ' → logprob: -7.377075672149658
    4. '                       ' → logprob: -10.0020751953125
    5. '           ' → logprob: -10.5020751953125
    6. '```' → logprob: -10.8770751953125
    7. ' cursor' → logprob: -11.1270751953125
    8. '   ' → logprob: -11.7520751953125
    9. '       ' → logprob: -13.0020751953125
    10. '                  ' → logprob: -13.2520751953125

Token 832: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' (adapté à ' cursor') → logprob: -0.00013858173042535782
    2. ' cursor' → logprob: -9.000138282775879
    3. '                   ' → logprob: -11.500138282775879
    4. '               ' → logprob: -12.250138282775879
    5. '	cursor' → logprob: -15.625138282775879
    6. '       ' → logprob: -16.750139236450195
    7. '           ' → logprob: -16.750139236450195
    8. '   ' → logprob: -17.375139236450195
    9. '                       ' → logprob: -17.375139236450195
    10. '.cursor' → logprob: -18.500139236450195

Token 833: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740772247314453
    2. ' =' → logprob: -0.9740772247314453
    3. '   ' → logprob: -16.349077224731445
    4. ' ' → logprob: -16.474077224731445
    5. ')' → logprob: -17.474077224731445
    6. '               ' → logprob: -17.474077224731445
    7. '                   ' → logprob: -17.599077224731445
    8. '	' → logprob: -17.599077224731445
    9. '       ' → logprob: -18.099077224731445
    10. '           ' → logprob: -18.474077224731445

Token 834: ' backward' (ID: 58986)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'back' → logprob: -0.006716674659401178
    2. ' backward' → logprob: -5.006716728210449
    3. ' back' → logprob: -14.00671672821045
    4. '.backward' → logprob: -15.00671672821045
    5. '_backward' → logprob: -17.131715774536133
    6. '(back' → logprob: -17.131715774536133
    7. '   ' → logprob: -17.881715774536133
    8. ' backwards' → logprob: -18.756715774536133
    9. 'Backward' → logprob: -18.756715774536133
    10. '	back' → logprob: -19.381715774536133

Token 835: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -5.5577775128767826e-06
    2. 'char' → logprob: -12.125005722045898
    3. '_cursor' → logprob: -17.3750057220459
    4. '_word' → logprob: -17.7500057220459
    5. '_' → logprob: -17.7500057220459
    6. 'Char' → logprob: -17.8750057220459
    7. '
' → logprob: -18.1250057220459
    8. '```' → logprob: -18.5000057220459
    9. '_character' → logprob: -18.6250057220459
    10. '(char' → logprob: -19.0000057220459

Token 836: '(cursor' (ID: 50526)
  Prédit: '(cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cursor' → logprob: -2.1888679839321412e-05
    2. '                   ' → logprob: -11.375021934509277
    3. ' (' → logprob: -12.125021934509277
    4. 'cursor' → logprob: -12.500021934509277
    5. '(' → logprob: -14.000021934509277
    6. ' cursor' → logprob: -16.25002098083496
    7. ',' → logprob: -16.50002098083496
    8. '```' → logprob: -17.00002098083496
    9. '                       ' → logprob: -17.12502098083496
    10. '               ' → logprob: -17.12502098083496

Token 837: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.322546124458313
    2. ')
' → logprob: -1.322546124458313
    3. '               ' → logprob: -4.697546005249023
    4. '                   ' → logprob: -9.822546005249023
    5. '           ' → logprob: -9.947546005249023
    6. '       ' → logprob: -11.822546005249023
    7. ')
' → logprob: -11.947546005249023
    8. ')

' → logprob: -12.947546005249023
    9. '<|end|>' → logprob: -13.447546005249023
    10. ' )
' → logprob: -13.697546005249023

Token 838: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005102360621094704
    2. '           ' → logprob: -5.630102157592773
    3. 'elif' → logprob: -7.380102157592773
    4. '<|end|>' → logprob: -7.630102157592773
    5. '```' → logprob: -8.505102157592773
    6. '       ' → logprob: -9.255102157592773
    7. ' elif' → logprob: -10.005102157592773
    8. '
' → logprob: -11.255102157592773
    9. '                   ' → logprob: -11.255102157592773
    10. '<|end|>' → logprob: -12.755102157592773

Token 839: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12738916277885437
    2. '           ' → logprob: -2.3773891925811768
    3. 'elif' (adapté à ' elif') → logprob: -3.6273891925811768
    4. ' elif' → logprob: -8.752388954162598
    5. '```' → logprob: -10.252388954162598
    6. 'else' → logprob: -10.502388954162598
    7. '                   ' → logprob: -12.252388954162598
    8. '       ' → logprob: -13.252388954162598
    9. '   ' → logprob: -13.502388954162598
    10. '
' → logprob: -14.252388954162598

Token 840: ' arg' (ID: 2341)
  Prédit: 'arg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arg' → logprob: -0.6931536197662354
    2. ' arg' → logprob: -0.6931536197662354
    3. '(arg' → logprob: -12.943153381347656
    4. 'cmd' → logprob: -13.443153381347656
    5. '[arg' → logprob: -13.818153381347656
    6. '	arg' → logprob: -14.818153381347656
    7. ' cmd' → logprob: -14.943153381347656
    8. 'parts' → logprob: -15.318153381347656
    9. ')arg' → logprob: -15.818153381347656
    10. ' parts' → logprob: -16.068153381347656

Token 841: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.05497943237423897
    2. '==' → logprob: -2.9299793243408203
    3. '=' → logprob: -9.67997932434082
    4. ' =' → logprob: -10.92997932434082
    5. '[' → logprob: -12.42997932434082
    6. '=='' → logprob: -12.55497932434082
    7. ':' → logprob: -13.67997932434082
    8. ' ' → logprob: -13.67997932434082
    9. ' =='' → logprob: -13.67997932434082
    10. '===' → logprob: -13.80497932434082

Token 842: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.018257638439536095
    2. ' '' → logprob: -4.0182576179504395
    3. ''s' → logprob: -9.268258094787598
    4. ' ' → logprob: -13.018258094787598
    5. ' parts' → logprob: -13.268258094787598
    6. ''post' → logprob: -13.643258094787598
    7. ''user' → logprob: -13.643258094787598
    8. '`' → logprob: -14.018258094787598
    9. ''value' → logprob: -14.018258094787598
    10. '   ' → logprob: -14.268258094787598

Token 843: 'word' (ID: 1801)
  Prédit: 'word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.01832704432308674
    2. ''' → logprob: -4.643327236175537
    3. 'arg' → logprob: -5.018327236175537
    4. 'parts' → logprob: -7.393327236175537
    5. ' word' → logprob: -8.268326759338379
    6. 'part' → logprob: -8.268326759338379
    7. 'back' → logprob: -8.268326759338379
    8. 'cmd' → logprob: -9.268326759338379
    9. 'words' → logprob: -9.518326759338379
    10. 'args' → logprob: -9.643326759338379

Token 844: '':
' (ID: 7669)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1972641795873642
    2. ':
' → logprob: -2.0722641944885254
    3. '               ' → logprob: -3.5722641944885254
    4. ':' → logprob: -4.822264194488525
    5. '<|end|>' → logprob: -5.447264194488525
    6. '(cursor' → logprob: -5.572264194488525
    7. '():
' → logprob: -5.697264194488525
    8. '):
' → logprob: -6.322264194488525
    9. '           ' → logprob: -6.947264194488525
    10. '                       ' → logprob: -7.697264194488525

Token 845: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0004908377304673195
    2. '               ' → logprob: -8.25049114227295
    3. 'cursor' → logprob: -8.87549114227295
    4. '                       ' → logprob: -9.87549114227295
    5. ' cursor' → logprob: -11.62549114227295
    6. '           ' → logprob: -12.00049114227295
    7. '                  ' → logprob: -12.25049114227295
    8. '```' → logprob: -12.75049114227295
    9. 'back' → logprob: -13.12549114227295
    10. '                    ' → logprob: -13.50049114227295

Token 846: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' (adapté à ' cursor') → logprob: -0.015189596451818943
    2. '                   ' → logprob: -4.7651896476745605
    3. ' cursor' → logprob: -5.1401896476745605
    4. '                       ' → logprob: -7.6401896476745605
    5. '               ' → logprob: -9.140189170837402
    6. '	cursor' → logprob: -9.640189170837402
    7. '       ' → logprob: -11.140189170837402
    8. '           ' → logprob: -11.265189170837402
    9. '(cursor' → logprob: -12.015189170837402
    10. '   ' → logprob: -12.265189170837402

Token 847: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022422909736633
    2. '=' → logprob: -1.910224199295044
    3. ' ' → logprob: -16.53522491455078
    4. '<|end|>' → logprob: -17.66022491455078
    5. '   ' → logprob: -17.91022491455078
    6. ')' → logprob: -18.53522491455078
    7. '=
' → logprob: -20.03522491455078
    8. '＝' → logprob: -20.03522491455078
    9. '```' → logprob: -20.03522491455078
    10. '	' → logprob: -20.66022491455078

Token 848: ' backward' (ID: 58986)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'back' → logprob: -0.12694616615772247
    2. ' backward' → logprob: -2.126946210861206
    3. '(back' → logprob: -11.751946449279785
    4. '.backward' → logprob: -11.876946449279785
    5. '_backward' → logprob: -12.876946449279785
    6. ' back' → logprob: -14.376946449279785
    7. 'Backward' → logprob: -15.751946449279785
    8. ' backwards' → logprob: -16.75194549560547
    9. '/back' → logprob: -17.87694549560547
    10. '	back' → logprob: -18.62694549560547

Token 849: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -1.1041145626222715e-05
    2. 'word' → logprob: -11.625011444091797
    3. '_char' → logprob: -13.250011444091797
    4. '_' → logprob: -15.875011444091797
    5. 'Word' → logprob: -17.000011444091797
    6. '_words' → logprob: -18.500011444091797
    7. '
' → logprob: -18.500011444091797
    8. '_token' → logprob: -18.750011444091797
    9. '```' → logprob: -18.875011444091797
    10. 'underscore' → logprob: -19.000011444091797

Token 850: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -8.895480277715251e-06
    2. 'text' → logprob: -11.875008583068848
    3. ' (' → logprob: -14.250008583068848
    4. ' text' → logprob: -14.500008583068848
    5. '(' → logprob: -15.125008583068848
    6. '{text' → logprob: -15.250008583068848
    7. '```' → logprob: -16.875009536743164
    8. ',text' → logprob: -17.500009536743164
    9. '.text' → logprob: -17.750009536743164
    10. '   ' → logprob: -17.875009536743164

Token 851: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005717128049582243
    2. ',text' → logprob: -5.3807172775268555
    3. '(text' → logprob: -6.8807172775268555
    4. '                   ' → logprob: -10.880717277526855
    5. ' ,' → logprob: -11.255717277526855
    6. ')' → logprob: -11.755717277526855
    7. 'text' → logprob: -12.130717277526855
    8. '               ' → logprob: -12.255717277526855
    9. '```' → logprob: -12.380717277526855
    10. '(' → logprob: -12.880717277526855

Token 852: ' cursor' (ID: 14944)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.00012356207298580557
    2. ' text' → logprob: -9.000123977661133
    3. '   ' → logprob: -16.750123977661133
    4. '           ' → logprob: -17.500123977661133
    5. '               ' → logprob: -17.625123977661133
    6. '```' → logprob: -18.375123977661133
    7. 'cursor' → logprob: -18.375123977661133
    8. '(text' → logprob: -18.750123977661133
    9. '       ' → logprob: -18.875123977661133
    10. '                   ' → logprob: -19.125123977661133

Token 853: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021269454155117273
    2. '<|end|>' → logprob: -6.877127170562744
    3. '               ' → logprob: -7.502127170562744
    4. '           ' → logprob: -8.127126693725586
    5. ')
' → logprob: -9.127126693725586
    6. '       ' → logprob: -9.752126693725586
    7. '                   ' → logprob: -9.752126693725586
    8. '<|end|>' → logprob: -12.127126693725586
    9. '')' → logprob: -13.127126693725586
    10. '),' → logprob: -13.252126693725586

Token 854: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003155625017825514
    2. '       ' → logprob: -9.00031566619873
    3. 'elif' → logprob: -9.12531566619873
    4. '```' → logprob: -9.50031566619873
    5. '<|end|>' → logprob: -13.00031566619873
    6. '               ' → logprob: -13.12531566619873
    7. ' elif' → logprob: -13.12531566619873
    8. '   ' → logprob: -14.12531566619873
    9. '          ' → logprob: -14.75031566619873
    10. 'else' → logprob: -15.25031566619873

Token 855: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07195477932691574
    2. 'elif' (adapté à ' elif') → logprob: -3.0719547271728516
    3. '       ' → logprob: -3.9469547271728516
    4. ' elif' → logprob: -5.821954727172852
    5. '```' → logprob: -7.321954727172852
    6. '   ' → logprob: -9.321954727172852
    7. '	elif' → logprob: -10.946954727172852
    8. ' ' → logprob: -11.321954727172852
    9. 'else' → logprob: -11.446954727172852
    10. '               ' → logprob: -11.571954727172852

Token 856: ' cmd' (ID: 11704)
  Prédit: ' cmd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cmd' → logprob: -0.2522110939025879
    2. 'cmd' → logprob: -1.502211093902588
    3. ' parts' → logprob: -8.25221061706543
    4. 'parts' → logprob: -11.12721061706543
    5. '	cmd' → logprob: -12.37721061706543
    6. '(cmd' → logprob: -13.12721061706543
    7. '.cmd' → logprob: -16.50221061706543
    8. ' cmds' → logprob: -16.62721061706543
    9. '_cmd' → logprob: -16.87721061706543
    10. ' ' → logprob: -17.25221061706543

Token 857: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.021299894899129868
    2. '==' → logprob: -3.8962998390197754
    3. ' =' → logprob: -8.896300315856934
    4. ' ===' → logprob: -8.896300315856934
    5. '.startswith' → logprob: -9.146300315856934
    6. '[' → logprob: -9.146300315856934
    7. '<|end|>' → logprob: -9.896300315856934
    8. '=='' → logprob: -10.021300315856934
    9. '<|end|>' → logprob: -10.646300315856934
    10. ' =='' → logprob: -10.771300315856934

Token 858: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.004759530071169138
    2. ' '' → logprob: -5.379759311676025
    3. ''ins' → logprob: -9.504759788513184
    4. '"' → logprob: -11.004759788513184
    5. 'insert' → logprob: -11.754759788513184
    6. ' insert' → logprob: -12.004759788513184
    7. ''s' → logprob: -12.254759788513184
    8. ''post' → logprob: -12.254759788513184
    9. ''on' → logprob: -12.379759788513184
    10. '('' → logprob: -12.629759788513184

Token 859: 'insert' (ID: 14813)
  Prédit: 'insert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'insert' → logprob: -0.00020771251001860946
    2. 'delete' → logprob: -9.500207901000977
    3. ' insert' → logprob: -9.750207901000977
    4. 'parts' → logprob: -10.375207901000977
    5. ''' → logprob: -11.125207901000977
    6. 'append' → logprob: -12.125207901000977
    7. 'len' → logprob: -12.250207901000977
    8. 'input' → logprob: -12.750207901000977
    9. 'split' → logprob: -12.750207901000977
    10. 'startswith' → logprob: -13.000207901000977

Token 860: '':
' (ID: 7669)
  Prédit: '_text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_text' → logprob: -0.5077698826789856
    2. '(parts' → logprob: -1.7577698230743408
    3. '',' → logprob: -2.382769823074341
    4. 'text' → logprob: -3.757769823074341
    5. '_parts' → logprob: -3.757769823074341
    6. ''' → logprob: -4.13277006149292
    7. ' text' → logprob: -4.13277006149292
    8. '           ' → logprob: -5.13277006149292
    9. ' (' → logprob: -5.38277006149292
    10. ' parts' → logprob: -5.50777006149292

Token 861: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0070047322660684586
    2. '               ' → logprob: -5.257004737854004
    3. ' parts' → logprob: -8.257004737854004
    4. ',' → logprob: -8.632004737854004
    5. ' (' → logprob: -8.632004737854004
    6. '       ' → logprob: -8.632004737854004
    7. '(parts' → logprob: -8.757004737854004
    8. ' text' → logprob: -8.882004737854004
    9. '(' → logprob: -9.257004737854004
    10. '('' → logprob: -9.382004737854004

Token 862: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12411604821681976
    2. 'ins' → logprob: -2.6241159439086914
    3. ' ins' → logprob: -4.124115943908691
    4. ' arg' → logprob: -4.249115943908691
    5. 'text' → logprob: -5.249115943908691
    6. ' text' → logprob: -5.749115943908691
    7. 'arg' → logprob: -5.999115943908691
    8. 'insert' → logprob: -6.374115943908691
    9. ' insert' → logprob: -8.249115943908691
    10. '                   ' → logprob: -8.624115943908691

Token 863: ' format' (ID: 6011)
  Prédit: 'ins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.01414423156529665
    2. '               ' → logprob: -5.014144420623779
    3. '           ' → logprob: -6.389144420623779
    4. 'text' → logprob: -6.639144420623779
    5. ' ins' → logprob: -6.639144420623779
    6. 'arg' → logprob: -6.639144420623779
    7. 'insert' → logprob: -6.889144420623779
    8. '_,' → logprob: -8.014143943786621
    9. '                   ' → logprob: -8.514143943786621
    10. ',' → logprob: -10.139143943786621

Token 864: ' is' (ID: 382)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parts' → logprob: -1.3719216585159302
    2. '               ' → logprob: -1.7469216585159302
    3. '_,' → logprob: -1.9969216585159302
    4. '           ' → logprob: -2.3719215393066406
    5. '('' → logprob: -2.4969215393066406
    6. ' _,' → logprob: -2.9969215393066406
    7. '('',' → logprob: -2.9969215393066406
    8. 'insert' → logprob: -3.4969215393066406
    9. ' =' → logprob: -3.4969215393066406
    10. 'parts' → logprob: -3.6219215393066406

Token 865: ' insert' (ID: 10898)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.8651421666145325
    2. 'insert' → logprob: -1.3651421070098877
    3. 'parts' → logprob: -1.4901421070098877
    4. ' insert' → logprob: -2.7401421070098877
    5. ''' → logprob: -3.9901421070098877
    6. '           ' → logprob: -4.990142345428467
    7. '(parts' → logprob: -5.865142345428467
    8. 'line' → logprob: -6.990142345428467
    9. '('' → logprob: -7.240142345428467
    10. ' line' → logprob: -7.240142345428467

Token 866: ' "' (ID: 392)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.06854365766048431
    2. '(parts' → logprob: -3.4435436725616455
    3. ' '' → logprob: -4.443543434143066
    4. ''' → logprob: -5.193543434143066
    5. '('' → logprob: -5.568543434143066
    6. ' ',' → logprob: -6.443543434143066
    7. ' ,' → logprob: -6.568543434143066
    8. ' text' → logprob: -6.568543434143066
    9. ' _,' → logprob: -6.693543434143066
    10. ',' → logprob: -6.693543434143066

Token 867: 'any' (ID: 1252)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.04604996368288994
    2. ''"' → logprob: -4.421050071716309
    3. '"' → logprob: -4.546050071716309
    4. '(parts' → logprob: -4.921050071716309
    5. ''' → logprob: -5.296050071716309
    6. 'text' → logprob: -5.796050071716309
    7. ' parts' → logprob: -5.921050071716309
    8. 'words' → logprob: -6.671050071716309
    9. '"+' → logprob: -7.296050071716309
    10. '")' → logprob: -7.421050071716309

Token 868: '-text' (ID: 18422)
  Prédit: '_text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_text' → logprob: -0.20807406306266785
    2. 'text' → logprob: -2.2080740928649902
    3. '"' → logprob: -3.8330740928649902
    4. '_char' → logprob: -4.08307409286499
    5. ' text' → logprob: -4.20807409286499
    6. ' "' → logprob: -5.70807409286499
    7. ''' → logprob: -5.70807409286499
    8. '('' → logprob: -5.83307409286499
    9. '_string' → logprob: -6.20807409286499
    10. 'char' → logprob: -6.33307409286499

Token 869: '"
' (ID: 1092)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.2950882017612457
    2. '"' → logprob: -1.9200881719589233
    3. ' ",' → logprob: -2.670088291168213
    4. '",' → logprob: -3.545088291168213
    5. ' "
' → logprob: -5.795088291168213
    6. ' "+' → logprob: -5.795088291168213
    7. ' '' → logprob: -7.670088291168213
    8. ''' → logprob: -7.670088291168213
    9. '"
' → logprob: -7.795088291168213
    10. ' "',' → logprob: -7.920088291168213

Token 870: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.034027099609375
    2. ',' → logprob: -1.284027099609375
    3. '           ' → logprob: -1.534027099609375
    4. ' (' → logprob: -3.409027099609375
    5. ' ,' → logprob: -4.034027099609375
    6. ' "' → logprob: -4.159027099609375
    7. ' =' → logprob: -4.284027099609375
    8. '"' → logprob: -4.284027099609375
    9. '(parts' → logprob: -4.284027099609375
    10. ' ",' → logprob: -4.909027099609375

Token 871: ' arg' (ID: 2341)
  Prédit: 'ins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.399297297000885
    2. '               ' → logprob: -1.7742972373962402
    3. 'text' → logprob: -2.2742972373962402
    4. 'insert' → logprob: -4.14929723739624
    5. 'import' → logprob: -4.39929723739624
    6. ' ins' → logprob: -4.39929723739624
    7. ' text' → logprob: -5.02429723739624
    8. 'rest' → logprob: -6.14929723739624
    9. 'quote' → logprob: -6.27429723739624
    10. 'arg' (adapté à ' arg') → logprob: -6.77429723739624

Token 872: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023265978321433067
    2. '=' → logprob: -3.773266077041626
    3. ',' → logprob: -11.773265838623047
    4. '=line' → logprob: -12.398265838623047
    5. ' ='' → logprob: -13.398265838623047
    6. '_idx' → logprob: -13.898265838623047
    7. '_tokens' → logprob: -14.148265838623047
    8. ' ' → logprob: -14.523265838623047
    9. '           ' → logprob: -14.523265838623047
    10. '_token' → logprob: -14.648265838623047

Token 873: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.06202392280101776
    2. ' parts' → logprob: -2.812023878097534
    3. 'line' → logprob: -9.937024116516113
    4. '(parts' → logprob: -12.562024116516113
    5. ' line' → logprob: -12.812024116516113
    6. 'lines' → logprob: -13.812024116516113
    7. '   ' → logprob: -15.187024116516113
    8. 'eval' → logprob: -15.437024116516113
    9. ' ' → logprob: -16.187023162841797
    10. 'part' → logprob: -16.937023162841797

Token 874: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.3319124011322856e-05
    2. '1' → logprob: -10.750022888183594
    3. ' [' → logprob: -13.625022888183594
    4. ' ' → logprob: -15.500022888183594
    5. '(' → logprob: -15.750022888183594
    6. '```' → logprob: -16.375022888183594
    7. '   ' → logprob: -17.250022888183594
    8. '[
' → logprob: -17.375022888183594
    9. '#' → logprob: -17.875022888183594
    10. 's' → logprob: -18.125022888183594

Token 875: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.750001907348633
    3. '[' → logprob: -14.125001907348633
    4. '   ' → logprob: -17.125001907348633
    5. '
' → logprob: -17.125001907348633
    6. '```' → logprob: -17.375001907348633
    7. '0' → logprob: -17.625001907348633
    8. '3' → logprob: -19.000001907348633
    9. '-' → logprob: -19.125001907348633
    10. '`' → logprob: -19.375001907348633

Token 876: ']
' (ID: 1592)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.043708961457014084
    2. '
' → logprob: -3.1687090396881104
    3. '.strip' → logprob: -7.418708801269531
    4. '.l' → logprob: -9.668708801269531
    5. '           ' → logprob: -10.668708801269531
    6. '.rstrip' → logprob: -12.418708801269531
    7. '       ' → logprob: -12.918708801269531
    8. '               ' → logprob: -12.918708801269531
    9. '.startswith' → logprob: -12.918708801269531
    10. ')
' → logprob: -13.168708801269531

Token 877: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.025446826592087746
    2. ' =' → logprob: -3.900446891784668
    3. '=' → logprob: -7.025446891784668
    4. '<|end|>' → logprob: -7.025446891784668
    5. '```' → logprob: -7.775446891784668
    6. '.strip' → logprob: -8.025446891784668
    7. '.startswith' → logprob: -8.150446891784668
    8. '[' → logprob: -8.150446891784668
    9. '<|end|>' → logprob: -8.650446891784668
    10. '           ' → logprob: -8.775446891784668

Token 878: ' #' (ID: 1069)
  Prédit: 'ins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.8427305817604065
    2. '               ' → logprob: -1.2177305221557617
    3. 'if' → logprob: -2.0927305221557617
    4. 'text' → logprob: -2.7177305221557617
    5. 'insert' → logprob: -2.8427305221557617
    6. 'import' → logprob: -4.092730522155762
    7. ' if' → logprob: -5.592730522155762
    8. ' ins' → logprob: -6.592730522155762
    9. 'quote' → logprob: -6.717730522155762
    10. 'start' → logprob: -6.717730522155762

Token 879: ' extract' (ID: 13424)
  Prédit: 'ins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.19830240309238434
    2. 'import' → logprob: -2.5733025074005127
    3. 'if' → logprob: -2.8233025074005127
    4. 'insert' → logprob: -3.9483025074005127
    5. 'arg' → logprob: -4.573302268981934
    6. '               ' → logprob: -4.573302268981934
    7. 'text' → logprob: -6.198302268981934
    8. 'quote' → logprob: -6.448302268981934
    9. '#' → logprob: -7.823302268981934
    10. 'quoted' → logprob: -10.198302268981934

Token 880: ' string' (ID: 1621)
  Prédit: 'arg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arg' → logprob: -0.005724117159843445
    2. 'ins' → logprob: -5.75572395324707
    3. ' arg' → logprob: -6.63072395324707
    4. 'text' → logprob: -7.00572395324707
    5. '"' → logprob: -8.75572395324707
    6. '(arg' → logprob: -10.00572395324707
    7. 'insert' → logprob: -10.88072395324707
    8. '	arg' → logprob: -11.13072395324707
    9. '")' → logprob: -11.50572395324707
    10. 'token' → logprob: -11.63072395324707

Token 881: ' inside' (ID: 6772)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7425447106361389
    2. 'start' → logprob: -1.4925446510314941
    3. '=' → logprob: -2.117544651031494
    4. 's' → logprob: -2.742544651031494
    5. '_start' → logprob: -3.242544651031494
    6. 'import' → logprob: -4.117544651031494
    7. 'if' → logprob: -4.367544651031494
    8. 'text' → logprob: -4.492544651031494
    9. 'token' → logprob: -4.867544651031494
    10. 'arg' → logprob: -5.992544651031494

Token 882: ' quotes' (ID: 22661)
  Prédit: 'arg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arg' → logprob: -0.004770326428115368
    2. '"' → logprob: -5.754770278930664
    3. ''"' → logprob: -7.629770278930664
    4. '")' → logprob: -7.879770278930664
    5. 'quotes' → logprob: -8.004770278930664
    6. '('"' → logprob: -9.379770278930664
    7. '"
' → logprob: -9.504770278930664
    8. ' arg' → logprob: -9.629770278930664
    9. '(arg' → logprob: -9.879770278930664
    10. '"""' → logprob: -10.754770278930664

Token 883: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6717596054077148
    2. ' =' → logprob: -1.6717596054077148
    3. 'start' → logprob: -1.6717596054077148
    4. '=' → logprob: -3.171759605407715
    5. 'arg' → logprob: -3.921759605407715
    6. 'import' → logprob: -4.546759605407715
    7. 'idx' → logprob: -5.171759605407715
    8. ',arg' → logprob: -5.296759605407715
    9. 's' → logprob: -5.421759605407715
    10. '[arg' → logprob: -5.546759605407715

Token 884: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006495215930044651
    2. 'start' → logprob: -5.506494998931885
    3. ' =' → logprob: -6.756494998931885
    4. '"' → logprob: -8.381495475769043
    5. '=' → logprob: -8.756495475769043
    6. ',' → logprob: -9.006495475769043
    7. ' start' → logprob: -9.131495475769043
    8. 'text' → logprob: -9.506495475769043
    9. 'import' → logprob: -9.631495475769043
    10. 'token' → logprob: -9.881495475769043

Token 885: ' ins' (ID: 2215)
  Prédit: 'ins'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' (adapté à ' ins') → logprob: -0.6776788234710693
    2. 'start' → logprob: -1.3026788234710693
    3. 'import' → logprob: -2.5526788234710693
    4. 'quote' → logprob: -2.9276788234710693
    5. 's' → logprob: -3.5526788234710693
    6. 'text' → logprob: -3.6776788234710693
    7. 'insert' → logprob: -4.427679061889648
    8. 'pos' → logprob: -5.177679061889648
    9. 'if' → logprob: -5.427679061889648
    10. ' start' → logprob: -5.677679061889648

Token 886: '_text' (ID: 9118)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11269407719373703
    2. '=' → logprob: -2.362694025039673
    3. '_start' → logprob: -4.487694263458252
    4. '_text' → logprob: -7.737694263458252
    5. '_pos' → logprob: -8.862693786621094
    6. '_idx' → logprob: -9.362693786621094
    7. '_str' → logprob: -9.487693786621094
    8. '"' → logprob: -9.987693786621094
    9. 'art' → logprob: -10.112693786621094
    10. '_tokens' → logprob: -10.112693786621094

Token 887: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760273337364197
    2. '=' → logprob: -0.8260273337364197
    3. '=start' → logprob: -10.576026916503906
    4. '_start' → logprob: -11.201026916503906
    5. '=[]' → logprob: -11.701026916503906
    6. '=int' → logprob: -11.826026916503906
    7. '=[' → logprob: -12.951026916503906
    8. '=line' → logprob: -12.951026916503906
    9. '_idx' → logprob: -13.076026916503906
    10. '='' → logprob: -13.076026916503906

Token 888: ' arg' (ID: 2341)
  Prédit: 'arg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arg' → logprob: -0.00011248346709180623
    2. ' arg' → logprob: -9.125112533569336
    3. 'eval' → logprob: -13.000112533569336
    4. '(arg' → logprob: -15.125112533569336
    5. '   ' → logprob: -15.625112533569336
    6. 'argon' → logprob: -15.625112533569336
    7. '	arg' → logprob: -15.625112533569336
    8. '[arg' → logprob: -15.750112533569336
    9. 'args' → logprob: -16.250112533569336
    10. '""' → logprob: -16.750112533569336

Token 889: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010472200810909271
    2. '[arg' → logprob: -6.876047134399414
    3. '.strip' → logprob: -11.876047134399414
    4. '[len' → logprob: -12.501047134399414
    5. '.split' → logprob: -13.626047134399414
    6. '
' → logprob: -14.251047134399414
    7. '           ' → logprob: -15.001047134399414
    8. ',arg' → logprob: -15.251047134399414
    9. 'arg' → logprob: -15.501047134399414
    10. '[int' → logprob: -15.626047134399414

Token 890: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.420598219847307e-05
    2. 'arg' → logprob: -9.7500638961792
    3. ' ' → logprob: -12.5000638961792
    4. '2' → logprob: -13.6250638961792
    5. '   ' → logprob: -15.5000638961792
    6. ':' → logprob: -15.7500638961792
    7. '
' → logprob: -15.8750638961792
    8. '```' → logprob: -16.250064849853516
    9. '0' → logprob: -16.500064849853516
    10. '

' → logprob: -17.312564849853516

Token 891: ':-' (ID: 20118)
  Prédit: ':-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':-' → logprob: -0.07619880139827728
    2. ':' → logprob: -2.9511988162994385
    3. ':]' → logprob: -3.9511988162994385
    4. ':].' → logprob: -6.951198577880859
    5. ']' → logprob: -7.201198577880859
    6. '1' → logprob: -8.95119857788086
    7. '+' → logprob: -11.82619857788086
    8. ' :]' → logprob: -12.82619857788086
    9. 'arg' → logprob: -12.95119857788086
    10. ':end' → logprob: -13.07619857788086

Token 892: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '"' → logprob: -21.0
    3. '2' → logprob: -21.5
    4. '```' → logprob: -21.625
    5. ' ' → logprob: -21.875
    6. '"]' → logprob: -23.0
    7. '0' → logprob: -23.125
    8. '１' → logprob: -23.625
    9. '   ' → logprob: -23.75
    10. 'len' → logprob: -24.0

Token 893: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20211735367774963
    2. ']' → logprob: -1.7021173238754272
    3. '           ' → logprob: -7.827117443084717
    4. '<|end|>' → logprob: -9.077116966247559
    5. '               ' → logprob: -9.452116966247559
    6. ')
' → logprob: -10.077116966247559
    7. ']
' → logprob: -11.202116966247559
    8. '       ' → logprob: -11.452116966247559
    9. '']' → logprob: -11.702116966247559
    10. '                   ' → logprob: -12.202116966247559

Token 894: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010679395636543632
    2. '           ' → logprob: -7.001068115234375
    3. '
' → logprob: -10.001068115234375
    4. '<|end|>' → logprob: -10.001068115234375
    5. '                   ' → logprob: -11.001068115234375
    6. 'text' → logprob: -11.126068115234375
    7. ' text' → logprob: -12.251068115234375
    8. '       ' → logprob: -12.251068115234375
    9. '	       ' → logprob: -12.501068115234375
    10. ',' → logprob: -12.751068115234375

Token 895: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' (adapté à ' text') → logprob: -0.59675532579422
    2. '               ' → logprob: -0.84675532579422
    3. '           ' → logprob: -4.471755504608154
    4. ' text' → logprob: -4.721755504608154
    5. '       ' → logprob: -8.971755027770996
    6. '   ' → logprob: -9.096755027770996
    7. '                   ' → logprob: -11.596755027770996
    8. '{text' → logprob: -11.596755027770996
    9. ' ' → logprob: -11.721755027770996
    10. '	text' → logprob: -13.096755027770996

Token 896: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018384411232545972
    2. '=' → logprob: -6.376838207244873
    3. ',c' → logprob: -9.376838684082031
    4. ' ,' → logprob: -10.626838684082031
    5. ' =' → logprob: -11.626838684082031
    6. '       ' → logprob: -11.626838684082031
    7. 'cursor' → logprob: -13.501838684082031
    8. '+=' → logprob: -13.626838684082031
    9. '<|end|>' → logprob: -14.001838684082031
    10. '   ' → logprob: -14.126838684082031

Token 897: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.31326186656951904
    2. ' cursor' → logprob: -1.313261866569519
    3. '(cursor' → logprob: -16.438261032104492
    4. 'Cursor' → logprob: -17.188261032104492
    5. '	cursor' → logprob: -17.563261032104492
    6. '_cursor' → logprob: -17.938261032104492
    7. '
' → logprob: -18.563261032104492
    8. '   ' → logprob: -18.938261032104492
    9. 'c' → logprob: -18.938261032104492
    10. '```' → logprob: -19.063261032104492

Token 898: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759535431861877
    2. '=' → logprob: -0.8259535431861877
    3. '<|end|>' → logprob: -12.075953483581543
    4. '   ' → logprob: -12.825953483581543
    5. '+=' → logprob: -13.325953483581543
    6. ' +=' → logprob: -13.950953483581543
    7. '=
' → logprob: -14.325953483581543
    8. ' ' → logprob: -14.575953483581543
    9. '    ' → logprob: -14.700953483581543
    10. ',' → logprob: -15.700953483581543

Token 899: ' insert' (ID: 10898)
  Prédit: 'insert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'insert' → logprob: -0.04858759790658951
    2. ' insert' → logprob: -3.0485875606536865
    3. '(insert' → logprob: -16.048587799072266
    4. '	insert' → logprob: -16.548587799072266
    5. '   ' → logprob: -17.173587799072266
    6. '.insert' → logprob: -18.673587799072266
    7. '
' → logprob: -19.298587799072266
    8. '_insert' → logprob: -19.548587799072266
    9. ' ' → logprob: -19.673587799072266
    10. 'Insert' → logprob: -19.798587799072266

Token 900: '_text' (ID: 9118)
  Prédit: '_text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_text' → logprob: -4.60414821645827e-06
    2. '(text' → logprob: -12.875004768371582
    3. 'text' → logprob: -13.875004768371582
    4. '_' → logprob: -14.250004768371582
    5. '(_' → logprob: -16.000003814697266
    6. '```' → logprob: -16.375003814697266
    7. ' _' → logprob: -16.500003814697266
    8. '_char' → logprob: -17.250003814697266
    9. '{text' → logprob: -17.500003814697266
    10. '(' → logprob: -17.625003814697266

Token 901: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -0.00012892624363303185
    2. 'text' → logprob: -9.000128746032715
    3. ' text' → logprob: -12.625128746032715
    4. ' (' → logprob: -13.875128746032715
    5. '{text' → logprob: -14.625128746032715
    6. '(' → logprob: -14.875128746032715
    7. ',text' → logprob: -15.250128746032715
    8. '=text' → logprob: -16.87512969970703
    9. '[text' → logprob: -17.12512969970703
    10. '   ' → logprob: -17.75012969970703

Token 902: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07575023174285889
    2. '(text' → logprob: -2.8257503509521484
    3. ',text' → logprob: -4.450750350952148
    4. ' ,' → logprob: -6.825750350952148
    5. ')' → logprob: -8.325750350952148
    6. 'text' → logprob: -8.825750350952148
    7. '[text' → logprob: -9.200750350952148
    8. '{text' → logprob: -9.200750350952148
    9. ' text' → logprob: -9.575750350952148
    10. '<|end|>' → logprob: -9.950750350952148

Token 903: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.005234952084720135
    2. ' cursor' → logprob: -5.255234718322754
    3. 'text' → logprob: -14.380234718322754
    4. '(cursor' → logprob: -15.130234718322754
    5. '	cursor' → logprob: -15.380234718322754
    6. '_cursor' → logprob: -17.75523567199707
    7. '.cursor' → logprob: -17.88023567199707
    8. 'Cursor' → logprob: -18.50523567199707
    9. '
' → logprob: -18.50523567199707
    10. 'c' → logprob: -18.75523567199707

Token 904: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001887591351987794
    2. ' ,' → logprob: -8.625188827514648
    3. '(ins' → logprob: -12.000188827514648
    4. 'ins' → logprob: -13.625188827514648
    5. '               ' → logprob: -13.750188827514648
    6. '           ' → logprob: -15.125188827514648
    7. ')' → logprob: -16.00018882751465
    8. ',
' → logprob: -16.62518882751465
    9. '```' → logprob: -16.75018882751465
    10. '<|end|>' → logprob: -17.00018882751465

Token 905: ' ins' (ID: 2215)
  Prédit: 'ins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.0002036595979006961
    2. ' ins' → logprob: -8.500204086303711
    3. '(ins' → logprob: -15.750204086303711
    4. 'inst' → logprob: -19.50020408630371
    5. ''ins' → logprob: -20.12520408630371
    6. 'Ins' → logprob: -20.25020408630371
    7. '```' → logprob: -20.50020408630371
    8. '   ' → logprob: -21.00020408630371
    9. '_ins' → logprob: -21.37520408630371
    10. '
' → logprob: -21.50020408630371

Token 906: '_text' (ID: 9118)
  Prédit: '_text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_text' → logprob: -0.0015092701651155949
    2. 's' → logprob: -6.501509189605713
    3. 'ins' → logprob: -13.001509666442871
    4. 'text' → logprob: -13.626509666442871
    5. '_TEXT' → logprob: -14.501509666442871
    6. '_txt' → logprob: -14.751509666442871
    7. 'ust' → logprob: -14.876509666442871
    8. 'us' → logprob: -15.001509666442871
    9. 'Text' → logprob: -15.001509666442871
    10. 'sert' → logprob: -15.001509666442871

Token 907: ')
' (ID: 446)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 908: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 909: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.036192018538713455
    2. 'elif' (adapté à ' elif') → logprob: -3.536191940307617
    3. '       ' → logprob: -5.161191940307617
    4. '   ' → logprob: -8.286191940307617
    5. ' elif' → logprob: -8.661191940307617
    6. '	elif' → logprob: -9.411191940307617
    7. '<|end|>' → logprob: -9.536191940307617
    8. '	       ' → logprob: -10.036191940307617
    9. '		' → logprob: -11.161191940307617
    10. '```' → logprob: -11.411191940307617

Token 910: ' cmd' (ID: 11704)
  Prédit: ' cmd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cmd' → logprob: -0.2519395649433136
    2. 'cmd' → logprob: -1.5019395351409912
    3. '(cmd' → logprob: -11.62693977355957
    4. '	cmd' → logprob: -13.75193977355957
    5. '.cmd' → logprob: -14.75193977355957
    6. '_cmd' → logprob: -16.50193977355957
    7. ' cmds' → logprob: -17.87693977355957
    8. '           ' → logprob: -19.12693977355957
    9. ' command' → logprob: -19.12693977355957
    10. ' ' → logprob: -19.37693977355957

Token 911: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.005243833642452955
    2. '==' → logprob: -5.25524377822876
    3. ' ===' → logprob: -12.130244255065918
    4. ' =' → logprob: -13.755244255065918
    5. '=='' → logprob: -14.005244255065918
    6. ' =='' → logprob: -14.130244255065918
    7. '===' → logprob: -15.005244255065918
    8. '=' → logprob: -15.005244255065918
    9. '[' → logprob: -15.380244255065918
    10. ' ' → logprob: -15.505244255065918

Token 912: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.002402528189122677
    2. ' '' → logprob: -6.252402305603027
    3. ''d' → logprob: -8.002402305603027
    4. '"' → logprob: -9.002402305603027
    5. '('' → logprob: -11.502402305603027
    6. ''post' → logprob: -13.377402305603027
    7. 'delete' → logprob: -13.502402305603027
    8. '`' → logprob: -14.377402305603027
    9. '           ' → logprob: -14.502402305603027
    10. ''b' → logprob: -15.127402305603027

Token 913: 'delete' (ID: 8509)
  Prédit: 'delete'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delete' → logprob: -8.566264295950532e-05
    2. 'replace' → logprob: -10.875085830688477
    3. 'insert' → logprob: -10.875085830688477
    4. 'back' → logprob: -11.000085830688477
    5. ''' → logprob: -11.625085830688477
    6. ' delete' → logprob: -12.000085830688477
    7. 'remove' → logprob: -12.750085830688477
    8. 'forward' → logprob: -12.875085830688477
    9. 'erase' → logprob: -12.875085830688477
    10. 'print' → logprob: -13.250085830688477

Token 914: '':
' (ID: 7669)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.027499865740537643
    2. '_word' → logprob: -3.7774999141693115
    3. ':
' → logprob: -6.527499675750732
    4. '_' → logprob: -6.777499675750732
    5. 'char' → logprob: -7.402499675750732
    6. ''_' → logprob: -7.902499675750732
    7. '':
' → logprob: -8.02750015258789
    8. ''' → logprob: -9.40250015258789
    9. '               ' → logprob: -9.90250015258789
    10. ':' → logprob: -10.52750015258789

Token 915: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011222298257052898
    2. '               ' → logprob: -4.7612223625183105
    3. 'arg' → logprob: -6.8862223625183105
    4. 'if' → logprob: -7.6362223625183105
    5. ' arg' → logprob: -7.7612223625183105
    6. ' if' → logprob: -8.261221885681152
    7. '       ' → logprob: -9.261221885681152
    8. '            
' → logprob: -9.511221885681152
    9. '(arg' → logprob: -10.011221885681152
    10. '	       ' → logprob: -10.136221885681152

Token 916: ' arg' (ID: 2341)
  Prédit: 'arg'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arg' (adapté à ' arg') → logprob: -0.05044785141944885
    2. 'if' → logprob: -3.175447940826416
    3. ' arg' → logprob: -5.550447940826416
    4. '           ' → logprob: -6.050447940826416
    5. 'sub' → logprob: -7.550447940826416
    6. ' if' → logprob: -8.175447463989258
    7. '               ' → logprob: -8.175447463989258
    8. '	arg' → logprob: -10.800447463989258
    9. 'del' → logprob: -10.800447463989258
    10. 'delete' → logprob: -11.675447463989258

Token 917: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048589076846838
    2. '=' → logprob: -3.048588991165161
    3. '=line' → logprob: -14.298588752746582
    4. ' if' → logprob: -14.673588752746582
    5. 'if' → logprob: -15.798588752746582
    6. ' ' → logprob: -16.0485897064209
    7. '_parts' → logprob: -16.1735897064209
    8. '           ' → logprob: -16.6735897064209
    9. '	' → logprob: -16.7985897064209
    10. '_' → logprob: -17.2985897064209

Token 918: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.474094957113266
    2. ' parts' → logprob: -0.9740949869155884
    3. '(parts' → logprob: -10.974095344543457
    4. '.parts' → logprob: -15.849095344543457
    5. 'lines' → logprob: -16.09909439086914
    6. ' ' → logprob: -16.34909439086914
    7. ''' → logprob: -16.47409439086914
    8. '   ' → logprob: -16.59909439086914
    9. 'line' → logprob: -16.84909439086914
    10. '_parts' → logprob: -16.84909439086914

Token 919: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.016047153621912003
    2. '1' → logprob: -4.14104700088501
    3. '(' → logprob: -12.391047477722168
    4. '   ' → logprob: -12.766047477722168
    5. ' ' → logprob: -14.141047477722168
    6. 's' → logprob: -14.266047477722168
    7. 'from' → logprob: -14.641047477722168
    8. '[
' → logprob: -14.641047477722168
    9. '_parts' → logprob: -14.766047477722168
    10. 'def' → logprob: -14.891047477722168

Token 920: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '0' → logprob: -17.625
    4. '   ' → logprob: -18.125
    5. '[' → logprob: -18.375
    6. ''' → logprob: -18.875
    7. '```' → logprob: -19.25
    8. '2' → logprob: -20.125
    9. '
' → logprob: -20.25
    10. '           ' → logprob: -21.125

Token 921: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3891671597957611
    2. '               ' → logprob: -1.3891671895980835
    3. ']
' → logprob: -3.014167070388794
    4. ']' → logprob: -4.514167308807373
    5. ')
' → logprob: -5.139167308807373
    6. 'if' → logprob: -6.139167308807373
    7. ')' → logprob: -7.014167308807373
    8. ']==' → logprob: -7.639167308807373
    9. '<|end|>' → logprob: -7.764167308807373
    10. '==' → logprob: -7.764167308807373

Token 922: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003237013006582856
    2. 'if' → logprob: -6.128237247467041
    3. '               ' → logprob: -7.128237247467041
    4. ' if' → logprob: -8.378236770629883
    5. '       ' → logprob: -11.128236770629883
    6. '```' → logprob: -13.253236770629883
    7. '                   ' → logprob: -14.128236770629883
    8. '   ' → logprob: -14.378236770629883
    9. '	       ' → logprob: -14.628236770629883
    10. '<|end|>' → logprob: -14.878236770629883

Token 923: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.015259108506143093
    2. '           ' → logprob: -4.515259265899658
    3. ' if' → logprob: -5.515259265899658
    4. '               ' → logprob: -8.6402587890625
    5. '       ' → logprob: -14.2652587890625
    6. '	if' → logprob: -15.6402587890625
    7. '   ' → logprob: -17.1402587890625
    8. 'If' → logprob: -17.1402587890625
    9. ' ' → logprob: -18.2652587890625
    10. '		' → logprob: -18.2652587890625

Token 924: ' arg' (ID: 2341)
  Prédit: 'arg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arg' → logprob: -0.12692883610725403
    2. ' arg' → logprob: -2.1269288063049316
    3. '[arg' → logprob: -14.37692928314209
    4. 'argon' → logprob: -16.126928329467773
    5. '(arg' → logprob: -16.501928329467773
    6. '	arg' → logprob: -16.501928329467773
    7. 'argin' → logprob: -17.251928329467773
    8. '           ' → logprob: -17.501928329467773
    9. ')arg' → logprob: -17.751928329467773
    10. 'cmd' → logprob: -18.751928329467773

Token 925: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16023123264312744
    2. '==' → logprob: -1.9102312326431274
    3. '=='' → logprob: -12.910231590270996
    4. '=' → logprob: -13.035231590270996
    5. '===' → logprob: -14.785231590270996
    6. '[' → logprob: -14.785231590270996
    7. ' =' → logprob: -14.910231590270996
    8. '()==' → logprob: -15.285231590270996
    9. '.startswith' → logprob: -15.410231590270996
    10. '==
' → logprob: -15.785231590270996

Token 926: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.0206720617134124e-05
    2. '"' → logprob: -11.75001049041748
    3. ' '' → logprob: -13.50001049041748
    4. 'char' → logprob: -14.25001049041748
    5. ''s' → logprob: -15.62501049041748
    6. ''ch' → logprob: -18.125009536743164
    7. '`' → logprob: -18.375009536743164
    8. ''ex' → logprob: -18.375009536743164
    9. '<char' → logprob: -18.875009536743164
    10. ' char' → logprob: -19.000009536743164

Token 927: 'char' (ID: 3257)
  Prédit: 'char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -6.704273118884885e-07
    2. ' char' → logprob: -14.750000953674316
    3. 'word' → logprob: -15.250000953674316
    4. '_char' → logprob: -19.75
    5. 'character' → logprob: -21.125
    6. 'Char' → logprob: -22.0
    7. '<char' → logprob: -22.625
    8. ' ' → logprob: -22.875
    9. 'chars' → logprob: -23.5
    10. '	char' → logprob: -24.0

Token 928: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.24712543189525604
    2. '                   ' → logprob: -1.9971253871917725
    3. '):
' → logprob: -3.3721253871917725
    4. ':
' → logprob: -3.6221253871917725
    5. '               ' → logprob: -4.747125625610352
    6. ''):
' → logprob: -4.997125625610352
    7. '':' → logprob: -5.622125625610352
    8. '           ' → logprob: -6.747125625610352
    9. ':' → logprob: -7.122125625610352
    10. '():
' → logprob: -7.747125625610352

Token 929: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006306292489171028
    2. '               ' → logprob: -5.631306171417236
    3. 'text' → logprob: -6.131306171417236
    4. '           ' → logprob: -7.881306171417236
    5. ' text' → logprob: -9.506306648254395
    6. '                       ' → logprob: -10.381306648254395
    7. '   ' → logprob: -10.506306648254395
    8. '       ' → logprob: -11.006306648254395
    9. '                  ' → logprob: -15.131306648254395
    10. '                 ' → logprob: -15.881306648254395

Token 930: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' (adapté à ' text') → logprob: -0.00011951648048125207
    2. ' text' → logprob: -9.25011920928955
    3. '                   ' → logprob: -10.75011920928955
    4. '               ' → logprob: -13.50011920928955
    5. '   ' → logprob: -15.00011920928955
    6. '                       ' → logprob: -15.25011920928955
    7. ' ' → logprob: -18.750120162963867
    8. '       ' → logprob: -18.875120162963867
    9. '           ' → logprob: -19.000120162963867
    10. '	text' → logprob: -19.250120162963867

Token 931: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08222196996212006
    2. ' =' → logprob: -2.5822219848632812
    3. ',' → logprob: -5.707221984863281
    4. '       ' → logprob: -13.582221984863281
    5. ',c' → logprob: -14.457221984863281
    6. '           ' → logprob: -14.707221984863281
    7. '   ' → logprob: -14.707221984863281
    8. '=cut' → logprob: -15.082221984863281
    9. '=text' → logprob: -15.082221984863281
    10. '               ' → logprob: -15.707221984863281

Token 932: ' delete' (ID: 6168)
  Prédit: 'delete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delete' → logprob: -0.010863409377634525
    2. ' delete' → logprob: -4.635863304138184
    3. 'text' → logprob: -6.885863304138184
    4. ' text' → logprob: -9.385863304138184
    5. '(delete' → logprob: -15.010863304138184
    6. '	delete' → logprob: -15.260863304138184
    7. '   ' → logprob: -16.2608642578125
    8. 'remove' → logprob: -17.0108642578125
    9. '.delete' → logprob: -17.2608642578125
    10. ' ' → logprob: -18.0108642578125

Token 933: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -2.2961512513575144e-05
    2. 'char' → logprob: -10.750022888183594
    3. '_' → logprob: -14.250022888183594
    4. ''_' → logprob: -14.500022888183594
    5. 'Char' → logprob: -16.375022888183594
    6. '
' → logprob: -16.375022888183594
    7. '```' → logprob: -16.375022888183594
    8. '_CHAR' → logprob: -17.500022888183594
    9. '_word' → logprob: -18.375022888183594
    10. '"_' → logprob: -18.875022888183594

Token 934: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -3.786196975852363e-05
    2. '(' → logprob: -10.250038146972656
    3. 'text' → logprob: -13.750038146972656
    4. ' (' → logprob: -14.250038146972656
    5. '```' → logprob: -15.125038146972656
    6. '(code' → logprob: -15.250038146972656
    7. ',text' → logprob: -16.125038146972656
    8. ' text' → logprob: -16.500038146972656
    9. '(line' → logprob: -17.625038146972656
    10. '(txt' → logprob: -17.625038146972656

Token 935: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005679310765117407
    2. '(text' → logprob: -5.880679130554199
    3. ',text' → logprob: -5.880679130554199
    4. 'text' → logprob: -10.1306791305542
    5. '                   ' → logprob: -11.2556791305542
    6. ' ,' → logprob: -12.1306791305542
    7. '(' → logprob: -12.1306791305542
    8. '               ' → logprob: -12.2556791305542
    9. '           ' → logprob: -13.2556791305542
    10. ')' → logprob: -13.2556791305542

Token 936: ' cursor' (ID: 14944)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.0014667731011286378
    2. 'cursor' → logprob: -7.001466751098633
    3. ' text' → logprob: -7.501466751098633
    4. ' cursor' → logprob: -12.876466751098633
    5. ')' → logprob: -16.251466751098633
    6. '   ' → logprob: -16.751466751098633
    7. '```' → logprob: -16.751466751098633
    8. '(text' → logprob: -17.376466751098633
    9. ' ' → logprob: -18.501466751098633
    10. '(cursor' → logprob: -18.751466751098633

Token 937: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.647266149520874
    2. ')' → logprob: -1.022266149520874
    3. '<|end|>' → logprob: -2.272266149520874
    4. '           ' → logprob: -4.647266387939453
    5. '                   ' → logprob: -6.022266387939453
    6. ')
' → logprob: -7.647266387939453
    7. '<|end|>' → logprob: -8.147266387939453
    8. '),' → logprob: -8.522266387939453
    9. ',' → logprob: -8.522266387939453
    10. '       ' → logprob: -8.772266387939453

Token 938: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22659607231616974
    2. '               ' → logprob: -1.6015961170196533
    3. 'elif' → logprob: -7.726595878601074
    4. '                   ' → logprob: -8.351595878601074
    5. '       ' → logprob: -8.476595878601074
    6. '<|end|>' → logprob: -9.101595878601074
    7. '```' → logprob: -9.101595878601074
    8. 'else' → logprob: -10.601595878601074
    9. ' elif' → logprob: -10.851595878601074
    10. '   ' → logprob: -11.976595878601074

Token 939: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.5863826870918274
    2. '           ' → logprob: -0.8363826870918274
    3. '               ' → logprob: -4.836382865905762
    4. 'else' → logprob: -6.086382865905762
    5. ' elif' → logprob: -8.836382865905762
    6. '       ' → logprob: -10.836382865905762
    7. '```' → logprob: -11.836382865905762
    8. '   ' → logprob: -12.711382865905762
    9. '                   ' → logprob: -13.086382865905762
    10. ' ' → logprob: -14.836382865905762

Token 940: ' arg' (ID: 2341)
  Prédit: ' arg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arg' → logprob: -0.12693293392658234
    2. 'arg' → logprob: -2.1269328594207764
    3. '[arg' → logprob: -12.751933097839355
    4. '(arg' → logprob: -13.376933097839355
    5. '	arg' → logprob: -15.251933097839355
    6. ')arg' → logprob: -16.37693214416504
    7. ',arg' → logprob: -17.25193214416504
    8. 'argon' → logprob: -17.37693214416504
    9. 'argin' → logprob: -18.00193214416504
    10. 'Arg' → logprob: -19.00193214416504

Token 941: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5774526000022888
    2. '==' → logprob: -0.8274526000022888
    3. '[' → logprob: -7.077452659606934
    4. '=='' → logprob: -8.577452659606934
    5. '<|end|>' → logprob: -8.577452659606934
    6. '=' → logprob: -9.202452659606934
    7. '<|end|>' → logprob: -10.577452659606934
    8. ')' → logprob: -10.577452659606934
    9. '===' → logprob: -10.702452659606934
    10. ']==' → logprob: -10.952452659606934

Token 942: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -9.269565634895116e-05
    2. ' '' → logprob: -10.250092506408691
    3. '[word' → logprob: -10.625092506408691
    4. ' word' → logprob: -10.875092506408691
    5. 'word' → logprob: -11.500092506408691
    6. ''s' → logprob: -14.000092506408691
    7. ''user' → logprob: -14.250092506408691
    8. ' ' → logprob: -14.500092506408691
    9. '(word' → logprob: -15.000092506408691
    10. '"' → logprob: -15.000092506408691

Token 943: 'word' (ID: 1801)
  Prédit: 'word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.00034118397161364555
    2. ''' → logprob: -8.250341415405273
    3. ' word' → logprob: -9.500341415405273
    4. '_word' → logprob: -12.250341415405273
    5. 'Word' → logprob: -16.625341415405273
    6. '	word' → logprob: -16.750341415405273
    7. ' ' → logprob: -16.875341415405273
    8. '[word' → logprob: -17.125341415405273
    9. ''user' → logprob: -17.625341415405273
    10. 'WORD' → logprob: -17.875341415405273

Token 944: '':
' (ID: 7669)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1122969463467598
    2. ':
' → logprob: -2.8622970581054688
    3. '                   ' → logprob: -3.6122970581054688
    4. '':
' → logprob: -4.737297058105469
    5. ':' → logprob: -5.112297058105469
    6. '']:
' → logprob: -6.237297058105469
    7. '           ' → logprob: -6.487297058105469
    8. '==' → logprob: -7.487297058105469
    9. '):
' → logprob: -7.737297058105469
    10. '']' → logprob: -7.862297058105469

Token 945: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.047354307025671005
    2. '                   ' → logprob: -3.422354221343994
    3. 'text' → logprob: -4.547354221343994
    4. ' text' → logprob: -5.922354221343994
    5. '           ' → logprob: -9.047354698181152
    6. '   ' → logprob: -9.172354698181152
    7. '                       ' → logprob: -9.797354698181152
    8. '       ' → logprob: -11.172354698181152
    9. '```' → logprob: -11.297354698181152
    10. '                ' → logprob: -11.422354698181152

Token 946: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' (adapté à ' text') → logprob: -4.5491004129871726e-05
    2. ' text' → logprob: -10.000045776367188
    3. '               ' → logprob: -16.750045776367188
    4. '                   ' → logprob: -17.000045776367188
    5. '                       ' → logprob: -19.000045776367188
    6. '           ' → logprob: -19.875045776367188
    7. '   ' → logprob: -21.000045776367188
    8. '	text' → logprob: -21.375045776367188
    9. '       ' → logprob: -22.250045776367188
    10. ' ' → logprob: -22.375045776367188

Token 947: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141372084617615
    2. ' =' → logprob: -1.7014137506484985
    3. ',' → logprob: -15.701414108276367
    4. ')' → logprob: -16.701414108276367
    5. '   ' → logprob: -17.951414108276367
    6. '=line' → logprob: -17.951414108276367
    7. '=
' → logprob: -17.951414108276367
    8. '.=' → logprob: -18.076414108276367
    9. '＝' → logprob: -18.451414108276367
    10. ')=' → logprob: -18.951414108276367

Token 948: ' delete' (ID: 6168)
  Prédit: 'delete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delete' → logprob: -0.023245712742209435
    2. ' delete' → logprob: -3.7732458114624023
    3. '(delete' → logprob: -15.648245811462402
    4. '	delete' → logprob: -16.523244857788086
    5. '   ' → logprob: -17.148244857788086
    6. '.delete' → logprob: -17.523244857788086
    7. ' ' → logprob: -18.523244857788086
    8. '  ' → logprob: -20.023244857788086
    9. 'de' → logprob: -20.148244857788086
    10. '_delete' → logprob: -20.398244857788086

Token 949: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.0001863750658230856
    2. '_char' → logprob: -8.7501859664917
    3. ''_' → logprob: -10.8751859664917
    4. '_text' → logprob: -12.8751859664917
    5. '_code' → logprob: -13.1251859664917
    6. '_words' → logprob: -13.3751859664917
    7. 'word' → logprob: -13.7501859664917
    8. '_' → logprob: -14.3751859664917
    9. '```' → logprob: -14.7501859664917
    10. '"_' → logprob: -15.1251859664917

Token 950: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -7.896309739408025e-07
    2. 'text' → logprob: -15.250000953674316
    3. '(' → logprob: -15.625000953674316
    4. '{text' → logprob: -16.5
    5. '```' → logprob: -17.125
    6. ' text' → logprob: -17.375
    7. ',text' → logprob: -17.75
    8. ' (' → logprob: -18.125
    9. '[text' → logprob: -18.25
    10. '(code' → logprob: -18.25

Token 951: ',' (ID: 11)
  Prédit: '(text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -0.013436553068459034
    2. ',' → logprob: -4.388436317443848
    3. ',text' → logprob: -7.013436317443848
    4. '               ' → logprob: -12.263436317443848
    5. '                   ' → logprob: -12.638436317443848
    6. '           ' → logprob: -12.763436317443848
    7. ' (' → logprob: -12.763436317443848
    8. '       ' → logprob: -12.888436317443848
    9. '```' → logprob: -13.263436317443848
    10. '{text' → logprob: -13.263436317443848

Token 952: ' cursor' (ID: 14944)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'text' → logprob: -1.676292231422849e-05
    2. ' text' → logprob: -11.000017166137695
    3. 'cursor' → logprob: -17.000017166137695
    4. '(text' → logprob: -18.000017166137695
    5. '```' → logprob: -21.250017166137695
    6. '{text' → logprob: -21.625017166137695
    7. ')' → logprob: -22.000017166137695
    8. '.text' → logprob: -22.125017166137695
    9. '
' → logprob: -22.125017166137695
    10. '   ' → logprob: -22.375017166137695

Token 953: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010902655776590109
    2. ')
' → logprob: -10.00010871887207
    3. '               ' → logprob: -10.50010871887207
    4. '           ' → logprob: -10.87510871887207
    5. '       ' → logprob: -11.37510871887207
    6. '                   ' → logprob: -13.25010871887207
    7. '<|end|>' → logprob: -13.37510871887207
    8. ' )' → logprob: -14.12510871887207
    9. '   ' → logprob: -15.37510871887207
    10. ',' → logprob: -15.50010871887207

Token 954: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000614028365816921
    2. 'print' → logprob: -7.500614166259766
    3. '   ' → logprob: -10.875614166259766
    4. '```' → logprob: -10.875614166259766
    5. '           ' → logprob: -11.125614166259766
    6. '
' → logprob: -12.250614166259766
    7. ' print' → logprob: -12.750614166259766
    8. '<|end|>' → logprob: -15.250614166259766
    9. 'import' → logprob: -16.000614166259766
    10. '               ' → logprob: -16.125614166259766

Token 955: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7639539837837219
    2. '   ' → logprob: -1.0139539241790771
    3. 'print' → logprob: -1.7639539241790771
    4. ' print' → logprob: -10.638954162597656
    5. '```' → logprob: -12.013954162597656
    6. '	print' → logprob: -14.513954162597656
    7. '           ' → logprob: -14.638954162597656
    8. '        
' → logprob: -16.138954162597656
    9. '    
' → logprob: -16.888954162597656
    10. '``' → logprob: -17.013954162597656

Token 956: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.318681188422488e-05
    2. '       ' → logprob: -11.25001335144043
    3. ' print' → logprob: -16.00001335144043
    4. '   ' → logprob: -17.00001335144043
    5. '           ' → logprob: -20.25001335144043
    6. '```' → logprob: -20.62501335144043
    7. '	print' → logprob: -22.25001335144043
    8. '#print' → logprob: -23.75001335144043
    9. 'printf' → logprob: -24.75001335144043
    10. '``' → logprob: -25.25001335144043

Token 957: ' final' (ID: 1721)
  Prédit: '(text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(text' → logprob: -0.001313213026151061
    2. 'text' → logprob: -7.126313209533691
    3. '   ' → logprob: -8.376313209533691
    4. 'print' → logprob: -8.876313209533691
    5. '(' → logprob: -9.751313209533691
    6. '(len' → logprob: -10.001313209533691
    7. '       ' → logprob: -10.751313209533691
    8. '(print' → logprob: -11.626313209533691
    9. '```' → logprob: -13.126313209533691
    10. '()' → logprob: -13.876313209533691

Token 958: ' text' (ID: 2201)
  Prédit: '(text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -0.00035572313936427236
    2. 'text' → logprob: -8.00035572052002
    3. 'print' → logprob: -11.50035572052002
    4. '(print' → logprob: -12.25035572052002
    5. '(' → logprob: -12.62535572052002
    6. '(line' → logprob: -14.50035572052002
    7. '(result' → logprob: -14.87535572052002
    8. '(output' → logprob: -15.00035572052002
    9. ' text' → logprob: -15.62535572052002
    10. ' (' → logprob: -15.87535572052002

Token 959: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010661551496014
    2. '   ' → logprob: -7.376066207885742
    3. 'print' → logprob: -7.751066207885742
    4. '```' → logprob: -11.751066207885742
    5. ' print' → logprob: -13.751066207885742
    6. '           ' → logprob: -15.626066207885742
    7. '<|end|>' → logprob: -17.251066207885742
    8. '        
' → logprob: -17.626066207885742
    9. '`' → logprob: -17.751066207885742
    10. '     ' → logprob: -17.876066207885742

Token 960: ' cursor' (ID: 14944)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5773268938064575
    2. 'cursor' → logprob: -0.8273268938064575
    3. 'text' → logprob: -7.577326774597168
    4. 'the' → logprob: -8.202326774597168
    5. ' cursor' → logprob: -8.702326774597168
    6. '|' → logprob: -8.952326774597168
    7. ''' → logprob: -9.327326774597168
    8. 'final' → logprob: -9.952326774597168
    9. 'caret' → logprob: -10.077326774597168
    10. 'str' → logprob: -11.077326774597168

Token 961: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.307334303855896
    2. 'print' → logprob: -1.432334303855896
    3. '   ' → logprob: -4.1823344230651855
    4. '()
' → logprob: -5.8073344230651855
    5. '()' → logprob: -6.0573344230651855
    6. '```' → logprob: -6.1823344230651855
    7. '(' → logprob: -7.1823344230651855
    8. '(text' → logprob: -7.6823344230651855
    9. 'text' → logprob: -7.8073344230651855
    10. ',' → logprob: -7.8073344230651855

Token 962: ' '^' (ID: 117788)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.15664292871952057
    2. 'text' → logprob: -2.5316429138183594
    3. '|' → logprob: -2.7816429138183594
    4. '"' → logprob: -6.531642913818359
    5. '"|' → logprob: -7.906642913818359
    6. '`' → logprob: -8.40664291381836
    7. ' text' → logprob: -8.40664291381836
    8. ''^' → logprob: -8.53164291381836
    9. '|`
' → logprob: -8.65664291381836
    10. 'print' → logprob: -8.78164291381836

Token 963: ''
' (ID: 2207)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '^' → logprob: -0.46817290782928467
    2. 'print' → logprob: -1.0931729078292847
    3. 'text' → logprob: -3.343173027038574
    4. ''' → logprob: -7.343173027038574
    5. ''^' → logprob: -7.343173027038574
    6. '+' → logprob: -7.718173027038574
    7. '^)' → logprob: -7.718173027038574
    8. 'cursor' → logprob: -8.343173027038574
    9. '^{' → logprob: -8.718173027038574
    10. '"' → logprob: -8.843173027038574

Token 964: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20561404526233673
    2. '       ' → logprob: -1.7056140899658203
    3. ' print' → logprob: -6.20561408996582
    4. '```' → logprob: -6.83061408996582
    5. '   ' → logprob: -7.33061408996582
    6. 'text' → logprob: -7.95561408996582
    7. '
' → logprob: -10.20561408996582
    8. '``' → logprob: -11.20561408996582
    9. 'output' → logprob: -11.58061408996582
    10. '`' → logprob: -12.70561408996582

Token 965: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.036524842376821e-05
    2. '       ' → logprob: -10.875040054321289
    3. 'output' → logprob: -11.125040054321289
    4. '   ' → logprob: -12.875040054321289
    5. 'result' → logprob: -12.875040054321289
    6. ' print' → logprob: -13.750040054321289
    7. '```' → logprob: -15.625040054321289
    8. 'text' → logprob: -16.00004005432129
    9. 'out' → logprob: -16.50004005432129
    10. 'final' → logprob: -17.12504005432129

Token 966: '(text' (ID: 13414)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.04866855591535568
    2. '(text' → logprob: -3.048668622970581
    3. ' text' → logprob: -9.92366886138916
    4. '(' → logprob: -10.42366886138916
    5. '{text' → logprob: -13.42366886138916
    6. '   ' → logprob: -14.79866886138916
    7. '"text' → logprob: -16.173667907714844
    8. ' ' → logprob: -16.298667907714844
    9. ' (' → logprob: -16.298667907714844
    10. '	text' → logprob: -16.673667907714844

Token 967: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.00014525714504998177
    2. ',' → logprob: -9.250144958496094
    3. '[' → logprob: -11.000144958496094
    4. ')
' → logprob: -11.250144958496094
    5. '   ' → logprob: -12.000144958496094
    6. ',c' → logprob: -12.625144958496094
    7. ')' → logprob: -12.875144958496094
    8. '+' → logprob: -12.875144958496094
    9. '.replace' → logprob: -13.750144958496094
    10. 'cursor' → logprob: -14.000144958496094

Token 968: 'cursor' (ID: 34222)
  Prédit: 'cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -4.320199877838604e-07
    2. ' cursor' → logprob: -15.0
    3. '.cursor' → logprob: -18.125
    4. '_cursor' → logprob: -18.25
    5. '	cursor' → logprob: -18.375
    6. '(cursor' → logprob: -18.75
    7. 'ursor' → logprob: -20.625
    8. '   ' → logprob: -20.625
    9. 'Cursor' → logprob: -21.625
    10. '```' → logprob: -22.0

Token 969: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014570196159183979
    2. ' +' → logprob: -4.264570236206055
    3. '+'' → logprob: -7.889570236206055
    4. ')' → logprob: -11.264570236206055
    5. '^' → logprob: -11.889570236206055
    6. ',' → logprob: -12.889570236206055
    7. '+')' → logprob: -12.889570236206055
    8. '+"' → logprob: -13.014570236206055
    9. '   ' → logprob: -13.139570236206055
    10. '+'\' → logprob: -13.514570236206055

Token 970: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.009217155165970325
    2. ' +' → logprob: -4.759217262268066
    3. '+'' → logprob: -7.884217262268066
    4. '^' → logprob: -8.634217262268066
    5. '+"' → logprob: -11.134217262268066
    6. ')' → logprob: -11.134217262268066
    7. '+')' → logprob: -11.634217262268066
    8. ',' → logprob: -12.509217262268066
    9. '   ' → logprob: -12.634217262268066
    10. '+'\' → logprob: -14.009217262268066

Token 971: ' '^' (ID: 117788)
  Prédit: ''^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''^' → logprob: -0.011440349742770195
    2. '"' → logprob: -4.511440277099609
    3. '^' → logprob: -7.886440277099609
    4. ''' → logprob: -11.13644027709961
    5. ' '^' → logprob: -13.51144027709961
    6. '`' → logprob: -14.76144027709961
    7. '_^' → logprob: -15.88644027709961
    8. '("^' → logprob: -16.63644027709961
    9. '^)' → logprob: -16.63644027709961
    10. '   ' → logprob: -16.88644027709961

Token 972: ''' (ID: 6)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.024806387722492218
    2. ' text' → logprob: -4.024806499481201
    3. '+' → logprob: -5.024806499481201
    4. ' +' → logprob: -10.649806022644043
    5. '{text' → logprob: -11.149806022644043
    6. '^' → logprob: -12.024806022644043
    7. '$text' → logprob: -12.524806022644043
    8. ')' → logprob: -12.649806022644043
    9. 'print' → logprob: -12.774806022644043
    10. '(text' → logprob: -13.149806022644043

Token 973: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0485873706638813
    2. ' +' → logprob: -3.0485873222351074
    3. ')' → logprob: -18.048587799072266
    4. '+
' → logprob: -18.798587799072266
    5. ' ' → logprob: -19.298587799072266
    6. 'text' → logprob: -19.298587799072266
    7. '+'' → logprob: -19.423587799072266
    8. '＋' → logprob: -20.173587799072266
    9. '[' → logprob: -20.298587799072266
    10. '^' → logprob: -20.423587799072266

Token 974: ' text' (ID: 2201)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -4.320199877838604e-07
    2. ' text' → logprob: -15.0
    3. '(text' → logprob: -24.75
    4. '	text' → logprob: -25.25
    5. '.text' → logprob: -26.25
    6. '$text' → logprob: -27.25
    7. '[text' → logprob: -27.625
    8. '{text' → logprob: -27.75
    9. 'print' → logprob: -27.875
    10. '"text' → logprob: -27.875

Token 975: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.5048530030981055e-06
    2. '[cur' → logprob: -14.000001907348633
    3. '[' → logprob: -15.250001907348633
    4. '```' → logprob: -15.875001907348633
    5. '\[' → logprob: -16.625001907348633
    6. '[
' → logprob: -16.625001907348633
    7. '   ' → logprob: -17.625001907348633
    8. '/c' → logprob: -18.125001907348633
    9. ' [' → logprob: -18.625001907348633
    10. '[counter' → logprob: -18.625001907348633

Token 976: 'ursor' (ID: 6519)
  Prédit: 'ursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursor' → logprob: -9.913265239447355e-05
    2. 'cursor' → logprob: -10.250099182128906
    3. '[' → logprob: -10.500099182128906
    4. 'URSOR' → logprob: -10.625099182128906
    5. 'ursors' → logprob: -11.500099182128906
    6. 'urs' → logprob: -14.000099182128906
    7. '.cursor' → logprob: -15.625099182128906
    8. '[c' → logprob: -15.750099182128906
    9. 'ur' → logprob: -16.000099182128906
    10. '_cursor' → logprob: -16.375099182128906

Token 977: ':' (ID: 25)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00015335931675508618
    2. ']' → logprob: -9.375153541564941
    3. ')' → logprob: -9.625153541564941
    4. ''])' → logprob: -13.625153541564941
    5. '+' → logprob: -14.875153541564941
    6. ']+' → logprob: -15.000153541564941
    7. ' ])' → logprob: -15.125153541564941
    8. '])
' → logprob: -16.125152587890625
    9. '})' → logprob: -16.500152587890625
    10. '))' → logprob: -16.500152587890625

Token 978: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1888679839321412e-05
    2. '])' → logprob: -11.000021934509277
    3. '})' → logprob: -12.750021934509277
    4. '`)' → logprob: -14.375021934509277
    5. '')' → logprob: -14.500021934509277
    6. '))' → logprob: -14.750021934509277
    7. '>)' → logprob: -15.625021934509277
    8. ' )' → logprob: -15.625021934509277
    9. '）' → logprob: -16.12502098083496
    10. '")' → logprob: -16.37502098083496

Token 979: 'if' (ID: 366)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.39910048246383667
    2. '<|end|>' → logprob: -1.2741005420684814
    3. 'if' → logprob: -4.024100303649902
    4. '```' → logprob: -4.524100303649902
    5. ')' → logprob: -4.899100303649902
    6. '
' → logprob: -5.024100303649902
    7. '(main' → logprob: -5.774100303649902
    8. ' main' → logprob: -6.524100303649902
    9. '()' → logprob: -7.274100303649902
    10. '#' → logprob: -7.774100303649902

Token 980: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.1426943689584732
    2. '__' → logprob: -2.0176944732666016
    3. ' ' → logprob: -12.267694473266602
    4. '_' → logprob: -12.392694473266602
    5. ''' → logprob: -13.142694473266602
    6. '```' → logprob: -13.392694473266602
    7. '_name' → logprob: -13.767694473266602
    8. '  ' → logprob: -14.392694473266602
    9. '/__' → logprob: -14.392694473266602
    10. 'name' → logprob: -14.517694473266602

Token 981: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.09717267006635666
    2. ' ==' → logprob: -2.972172737121582
    3. '==' → logprob: -3.597172737121582
    4. '__.__' → logprob: -5.222172737121582
    5. '.__' → logprob: -5.847172737121582
    6. '.' → logprob: -6.097172737121582
    7. ' __' → logprob: -6.097172737121582
    8. '__.' → logprob: -7.847172737121582
    9. '.py' → logprob: -8.972172737121582
    10. 'name' → logprob: -9.097172737121582

Token 982: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004611218813806772
    2. '==' → logprob: -5.504611015319824
    3. ' ==' → logprob: -8.629611015319824
    4. '=='' → logprob: -9.254611015319824
    5. '__.__' → logprob: -9.629611015319824
    6. '__('' → logprob: -9.754611015319824
    7. '=="' → logprob: -10.379611015319824
    8. ''' → logprob: -10.629611015319824
    9. '```' → logprob: -10.629611015319824
    10. '('__' → logprob: -11.254611015319824

Token 983: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4045858085155487
    2. '==' → logprob: -1.154585838317871
    3. '__' → logprob: -4.529585838317871
    4. '=="' → logprob: -5.529585838317871
    5. '=='' → logprob: -5.904585838317871
    6. '==
' → logprob: -11.279585838317871
    7. '```' → logprob: -11.279585838317871
    8. '()==' → logprob: -12.154585838317871
    9. '===' → logprob: -12.404585838317871
    10. '**' → logprob: -12.529585838317871

Token 984: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.062022022902965546
    2. '"' → logprob: -2.8120219707489014
    3. '__' → logprob: -9.93702220916748
    4. ' '__' → logprob: -12.56202220916748
    5. ' "__' → logprob: -13.81202220916748
    6. ''name' → logprob: -14.68702220916748
    7. '('__' → logprob: -15.06202220916748
    8. ''user' → logprob: -15.31202220916748
    9. ''"' → logprob: -15.93702220916748
    10. '   ' → logprob: -16.437021255493164

Token 985: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.12703362107276917
    2. 'main' → logprob: -2.1270337104797363
    3. 'name' → logprob: -9.252033233642578
    4. ''' → logprob: -12.002033233642578
    5. '___' → logprob: -13.752033233642578
    6. '_main' → logprob: -14.002033233642578
    7. '__':
' → logprob: -14.752033233642578
    8. '____' → logprob: -15.377033233642578
    9. '```' → logprob: -15.752033233642578
    10. '"' → logprob: -16.002033233642578

Token 986: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.041337937116622925
    2. '__' → logprob: -3.5413379669189453
    3. '__":
' → logprob: -4.916337966918945
    4. '():
' → logprob: -5.666337966918945
    5. '__:' → logprob: -8.916337966918945
    6. ':' → logprob: -9.291337966918945
    7. '()' → logprob: -9.291337966918945
    8. '().__' → logprob: -9.291337966918945
    9. '('__' → logprob: -9.291337966918945
    10. '__()
' → logprob: -9.916337966918945

Token 987: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006825486198067665
    2. 'main' → logprob: -5.0068254470825195
    3. '	main' → logprob: -9.50682544708252
    4. ' main' → logprob: -10.25682544708252
    5. '_main' → logprob: -15.50682544708252
    6. '   ' → logprob: -15.63182544708252
    7. '```' → logprob: -15.88182544708252
    8. '(main' → logprob: -16.131826400756836
    9. 'import' → logprob: -17.381826400756836
    10. ' ' → logprob: -17.756826400756836

Token 988: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.0
    3. '	main' → logprob: -20.125
    4. 'import' → logprob: -21.25
    5. '   ' → logprob: -22.375
    6. '(main' → logprob: -22.75
    7. '_main' → logprob: -23.375
    8. '.main' → logprob: -23.625
    9. '
' → logprob: -24.625
    10. 'Main' → logprob: -25.25

Token 989: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 987
Tokens correctement prédits (1ère position, stricte): 433
Tokens correctement prédits (1ère position, avec adaptation): 472
Tokens correctement prédits (top 10): 817
Précision stricte (1ère position): 43.87%
Précision adaptée (1ère position): 47.82%
Précision (top 10): 82.78%
================================================================================
