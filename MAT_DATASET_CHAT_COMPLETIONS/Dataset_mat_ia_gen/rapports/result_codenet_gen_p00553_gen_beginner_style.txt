================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:00:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
A = int(input())
B = int(input())
C = int(input())
D = int(input())
E = int(input())

time = 0
temp = A

if temp < 0:
    # chauffer jusqu'à 0
    time += C * (-temp)
    temp = 0
    # dégel à 0
    time += D
    # chauffer jusqu'à B
    time += E * (B - temp)
else:
    # chauffer directement jusqu'à B
    time += E * (B - temp)

print(time)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'A' (ID: 32)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004915529862046242
    2. 'A' → logprob: -8.12549114227295
    3. '(A' → logprob: -9.25049114227295
    4. ''' → logprob: -10.00049114227295
    5. '```' → logprob: -11.37549114227295
    6. '('' → logprob: -11.62549114227295
    7. ' (' → logprob: -12.12549114227295
    8. '(
' → logprob: -12.37549114227295
    9. '`' → logprob: -12.37549114227295
    10. '\(' → logprob: -12.50049114227295

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006335660815238953
    2. ')' → logprob: -5.256335735321045
    3. '()' → logprob: -7.256335735321045
    4. '(
' → logprob: -9.381335258483887
    5. '())' → logprob: -10.006335258483887
    6. '<|end|>' → logprob: -10.381335258483887
    7. '```' → logprob: -10.506335258483887
    8. '(()' → logprob: -10.506335258483887
    9. '(

' → logprob: -10.631335258483887
    10. '("("' → logprob: -10.881335258483887

Token 5: 'B' (ID: 33)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17955347895622253
    2. '*' → logprob: -1.929553508758545
    3. '\n' → logprob: -4.929553508758545
    4. '%' → logprob: -5.054553508758545
    5. '#' → logprob: -6.054553508758545
    6. '**' → logprob: -7.054553508758545
    7. ')' → logprob: -7.554553508758545
    8. '\' → logprob: -7.679553508758545
    9. '+
' → logprob: -7.679553508758545
    10. ''' → logprob: -9.054553031921387

Token 6: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0281766653060913
    2. ' =' → logprob: -1.0281766653060913
    3. ' ' → logprob: -2.028176784515381
    4. ' +' → logprob: -2.903176784515381
    5. ')' → logprob: -3.278176784515381
    6. '=' → logprob: -3.403176784515381
    7. '[' → logprob: -4.653176784515381
    8. ' +=' → logprob: -5.028176784515381
    9. '*' → logprob: -5.528176784515381
    10. '  ' → logprob: -6.778176784515381

Token 7: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.16022828221321106
    2. 'int' → logprob: -1.9102282524108887
    3. '=int' → logprob: -13.910228729248047
    4. ' input' → logprob: -14.035228729248047
    5. ' ' → logprob: -14.160228729248047
    6. ' A' → logprob: -14.535228729248047
    7. 'input' → logprob: -15.035228729248047
    8. '<int' → logprob: -15.410228729248047
    9. '(int' → logprob: -15.410228729248047
    10. '[int' → logprob: -15.535228729248047

Token 8: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01135997660458088
    2. '(input' → logprob: -4.511360168457031
    3. '()' → logprob: -8.636360168457031
    4. ' (' → logprob: -10.636360168457031
    5. '(
' → logprob: -10.886360168457031
    6. '(A' → logprob: -11.136360168457031
    7. ')' → logprob: -11.261360168457031
    8. '(

' → logprob: -11.261360168457031
    9. '('' → logprob: -11.511360168457031
    10. '(**' → logprob: -12.261360168457031

Token 9: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.31559839844703674
    2. '()' → logprob: -1.9405983686447144
    3. ')' → logprob: -2.065598487854004
    4. '(' → logprob: -8.565598487854004
    5. ' ())' → logprob: -10.315598487854004
    6. '`)' → logprob: -10.815598487854004
    7. '()))' → logprob: -11.065598487854004
    8. '))' → logprob: -12.190598487854004
    9. '();)' → logprob: -12.940598487854004
    10. '')' → logprob: -13.315598487854004

Token 10: 'C' (ID: 34)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3207167387008667
    2. 'C' → logprob: -2.1957168579101562
    3. 'if' → logprob: -2.1957168579101562
    4. '+' → logprob: -3.6957168579101562
    5. 'result' → logprob: -4.070716857910156
    6. 'sum' → logprob: -5.195716857910156
    7. 's' → logprob: -6.070716857910156
    8. 'c' → logprob: -6.945716857910156
    9. 'S' → logprob: -8.695716857910156
    10. '`' → logprob: -9.070716857910156

Token 11: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5292380452156067
    2. ' =' → logprob: -0.9042380452156067
    3. '+' → logprob: -5.279238224029541
    4. ')' → logprob: -7.779238224029541
    5. '_' → logprob: -8.654237747192383
    6. '*' → logprob: -8.904237747192383
    7. ' +=' → logprob: -9.904237747192383
    8. ' +' → logprob: -10.029237747192383
    9. '+=' → logprob: -10.404237747192383
    10. '[' → logprob: -10.529237747192383

Token 12: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.17251303791999817
    2. ' int' → logprob: -1.9225130081176758
    3. ' A' → logprob: -5.047513008117676
    4. 'A' → logprob: -5.172513008117676
    5. '(int' → logprob: -10.047513008117676
    6. ' ' → logprob: -10.797513008117676
    7. 'input' → logprob: -11.422513008117676
    8. 'float' → logprob: -12.047513008117676
    9. ' (' → logprob: -12.297513008117676
    10. ' input' → logprob: -12.297513008117676

Token 13: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0054281046614050865
    2. '()' → logprob: -6.130428314208984
    3. ')' → logprob: -6.755428314208984
    4. ' (' → logprob: -8.005428314208984
    5. '('' → logprob: -8.130428314208984
    6. '(input' → logprob: -8.130428314208984
    7. '*' → logprob: -8.255428314208984
    8. ''' → logprob: -9.005428314208984
    9. '```' → logprob: -9.130428314208984
    10. '+' → logprob: -9.630428314208984

Token 14: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.39707204699516296
    2. '()' → logprob: -1.3970720767974854
    3. ')' → logprob: -2.5220720767974854
    4. '(' → logprob: -10.147071838378906
    5. '`)' → logprob: -10.647071838378906
    6. ' ())' → logprob: -11.397071838378906
    7. '()
' → logprob: -12.522071838378906
    8. '())
' → logprob: -12.647071838378906
    9. '();)' → logprob: -12.647071838378906
    10. '```' → logprob: -12.772071838378906

Token 15: 'D' (ID: 35)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.679168701171875
    2. 'print' → logprob: -1.179168701171875
    3. 'sum' → logprob: -2.179168701171875
    4. 'total' → logprob: -3.304168701171875
    5. 'D' → logprob: -4.179168701171875
    6. 's' → logprob: -4.804168701171875
    7. 'max' → logprob: -5.804168701171875
    8. 'result' → logprob: -6.054168701171875
    9. 'X' → logprob: -6.179168701171875
    10. 'S' → logprob: -7.179168701171875

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11399302631616592
    2. '=' → logprob: -2.238992929458618
    3. '+' → logprob: -7.363993167877197
    4. ' +=' → logprob: -8.613992691040039
    5. '_' → logprob: -9.613992691040039
    6. ' ' → logprob: -9.863992691040039
    7. '*' → logprob: -10.238992691040039
    8. ')' → logprob: -10.488992691040039
    9. ' +' → logprob: -10.488992691040039
    10. '.' → logprob: -10.738992691040039

Token 17: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5362384915351868
    2. ' int' → logprob: -1.286238431930542
    3. ' A' → logprob: -2.411238431930542
    4. 'A' → logprob: -3.036238431930542
    5. '(int' → logprob: -7.661238670349121
    6. ' (' → logprob: -8.411238670349121
    7. ' ' → logprob: -9.036238670349121
    8. '(A' → logprob: -10.286238670349121
    9. 'B' → logprob: -11.036238670349121
    10. ' B' → logprob: -11.161238670349121

Token 18: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010807292710524052
    2. ' (' → logprob: -9.625107765197754
    3. '(
' → logprob: -11.375107765197754
    4. ')' → logprob: -12.000107765197754
    5. '()' → logprob: -12.000107765197754
    6. '('' → logprob: -12.625107765197754
    7. ' ' → logprob: -13.125107765197754
    8. '(

' → logprob: -13.125107765197754
    9. ''' → logprob: -13.250107765197754
    10. '(space' → logprob: -13.875107765197754

Token 19: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06822223961353302
    2. '()' → logprob: -3.0682222843170166
    3. '())' → logprob: -3.9432222843170166
    4. '`)' → logprob: -10.818222045898438
    5. ' )' → logprob: -11.318222045898438
    6. '()
' → logprob: -11.943222045898438
    7. '')' → logprob: -12.193222045898438
    8. '(' → logprob: -12.693222045898438
    9. '))' → logprob: -12.943222045898438
    10. '")' → logprob: -13.068222045898438

Token 20: 'E' (ID: 36)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7750380039215088
    2. '\n' → logprob: -0.7750380039215088
    3. 'if' → logprob: -3.150038003921509
    4. 'E' → logprob: -4.40003776550293
    5. 'x' → logprob: -5.52503776550293
    6. 'P' → logprob: -5.52503776550293
    7. 'p' → logprob: -6.02503776550293
    8. 'n' → logprob: -6.15003776550293
    9. 'result' → logprob: -6.15003776550293
    10. 'X' → logprob: -6.52503776550293

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.031363312155008316
    2. '=' → logprob: -3.5313632488250732
    3. ' ' → logprob: -7.906363487243652
    4. ')' → logprob: -8.031363487243652
    5. '+' → logprob: -8.406363487243652
    6. '>' → logprob: -9.656363487243652
    7. '.' → logprob: -9.656363487243652
    8. ' +=' → logprob: -9.656363487243652
    9. '_' → logprob: -9.781363487243652
    10. '*' → logprob: -10.031363487243652

Token 22: ' int' (ID: 677)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.14517153799533844
    2. ' int' → logprob: -2.645171642303467
    3. 'A' → logprob: -3.270171642303467
    4. 'int' → logprob: -4.270171642303467
    5. ' ' → logprob: -5.145171642303467
    6. ' (' → logprob: -5.520171642303467
    7. '(' → logprob: -7.645171642303467
    8. ' max' → logprob: -7.895171642303467
    9. ' B' → logprob: -8.020171165466309
    10. '(A' → logprob: -8.520171165466309

Token 23: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006310671451501548
    2. '(input' → logprob: -7.750630855560303
    3. '()' → logprob: -9.625631332397461
    4. '('' → logprob: -10.375631332397461
    5. ' (' → logprob: -10.375631332397461
    6. '(
' → logprob: -11.000631332397461
    7. '("("' → logprob: -12.000631332397461
    8. '(`' → logprob: -12.125631332397461
    9. '(A' → logprob: -12.375631332397461
    10. 'input' → logprob: -12.375631332397461

Token 24: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32000598311424255
    2. '()' → logprob: -1.820006012916565
    3. '())' → logprob: -2.1950058937072754
    4. ' )' → logprob: -8.695006370544434
    5. '`)' → logprob: -8.820006370544434
    6. '(' → logprob: -9.445006370544434
    7. '()
' → logprob: -10.820006370544434
    8. ' ())' → logprob: -11.820006370544434
    9. '```' → logprob: -12.070006370544434
    10. '）' → logprob: -12.195006370544434

Token 25: 'time' (ID: 4580)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -1.3406306505203247
    2. 'sum' → logprob: -1.5906306505203247
    3. 's' → logprob: -1.7156306505203247
    4. 'total' → logprob: -2.590630531311035
    5. 'max' → logprob: -2.840630531311035
    6. 'if' → logprob: -2.965630531311035
    7. 'print' → logprob: -3.215630531311035
    8. 'result' → logprob: -3.465630531311035
    9. 'S' → logprob: -3.590630531311035
    10. 'x' → logprob: -4.340630531311035

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6643154621124268
    2. '=' → logprob: -0.7893154621124268
    3. '_' → logprob: -3.5393154621124268
    4. 's' → logprob: -6.789315223693848
    5. '1' → logprob: -7.664315223693848
    6. '_space' → logprob: -9.164315223693848
    7. '_taken' → logprob: -9.164315223693848
    8. '.' → logprob: -10.289315223693848
    9. 'space' → logprob: -10.414315223693848
    10. '_total' → logprob: -10.539315223693848

Token 27: ' ' (ID: 220)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.23956312239170074
    2. '(A' → logprob: -2.614563226699829
    3. '((' → logprob: -3.489563226699829
    4. 'B' → logprob: -3.864563226699829
    5. 'max' → logprob: -3.864563226699829
    6. 'min' → logprob: -4.36456298828125
    7. 'D' → logprob: -4.61456298828125
    8. '(min' → logprob: -4.73956298828125
    9. '(max' → logprob: -4.98956298828125
    10. 'abs' → logprob: -5.36456298828125

Token 28: '0' (ID: 15)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.31030967831611633
    2. '(A' → logprob: -1.935309648513794
    3. '((' → logprob: -3.560309648513794
    4. 'B' → logprob: -3.810309648513794
    5. 'abs' → logprob: -4.310309886932373
    6. 'D' → logprob: -4.560309886932373
    7. 'max' → logprob: -4.810309886932373
    8. '(max' → logprob: -4.935309886932373
    9. '(min' → logprob: -5.060309886932373
    10. '(B' → logprob: -5.435309886932373

Token 29: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.4285144805908203
    2. ' 
' → logprob: -1.5535144805908203
    3. 't' → logprob: -1.5535144805908203
    4. '
' → logprob: -1.8035144805908203
    5. 'i' → logprob: -2.8035144805908203
    6. 'if' → logprob: -4.05351448059082
    7. '+
' → logprob: -4.55351448059082
    8. '=' → logprob: -4.67851448059082
    9. ' ' → logprob: -4.67851448059082
    10. '' → logprob: -4.92851448059082

Token 30: 'temp' (ID: 7340)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1613038182258606
    2. 'time' → logprob: -2.411303758621216
    3. 'i' → logprob: -3.536303758621216
    4. '+' → logprob: -4.786303997039795
    5. 't' → logprob: -5.286303997039795
    6. 'for' → logprob: -5.411303997039795
    7. ' if' → logprob: -5.661303997039795
    8. 'while' → logprob: -5.661303997039795
    9. '
' → logprob: -6.161303997039795
    10. '+
' → logprob: -7.911303997039795

Token 31: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6038029789924622
    2. ' =' → logprob: -0.8538029789924622
    3. '=' → logprob: -3.7288029193878174
    4. ' _' → logprob: -7.2288031578063965
    5. '[' → logprob: -7.6038031578063965
    6. '_space' → logprob: -7.8538031578063965
    7. 'space' → logprob: -8.103802680969238
    8. ' +=' → logprob: -8.103802680969238
    9. '_time' → logprob: -8.228802680969238
    10. '1' → logprob: -8.978802680969238

Token 32: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.09907929599285126
    2. '0' → logprob: -3.0990793704986572
    3. ' A' → logprob: -4.099079132080078
    4. 'B' → logprob: -4.474079132080078
    5. 'E' → logprob: -4.474079132080078
    6. 'time' → logprob: -6.349079132080078
    7. 'D' → logprob: -6.474079132080078
    8. 'C' → logprob: -6.599079132080078
    9. ' ' → logprob: -6.724079132080078
    10. '100' → logprob: -6.849079132080078

Token 33: '

' (ID: 279)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.15985508263111115
    2. ' ' → logprob: -3.5348551273345947
    3. ' +' → logprob: -3.7848551273345947
    4. '*' → logprob: -3.7848551273345947
    5. 'if' → logprob: -3.7848551273345947
    6. 'while' → logprob: -3.7848551273345947
    7. ' if' → logprob: -4.909854888916016
    8. '-' → logprob: -5.534854888916016
    9. '>' → logprob: -5.784854888916016
    10. 'for' → logprob: -5.909854888916016

Token 34: 'if' (ID: 366)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07134846597909927
    2. '-' → logprob: -3.6963484287261963
    3. 'if' → logprob: -4.571348667144775
    4. ' +' → logprob: -4.571348667144775
    5. ' if' → logprob: -4.821348667144775
    6. '>' → logprob: -5.196348667144775
    7. ' ' → logprob: -5.196348667144775
    8. '*' → logprob: -7.071348667144775
    9. 'while' → logprob: -7.321348667144775
    10. ' >' → logprob: -7.446348667144775

Token 35: ' temp' (ID: 5484)
  Prédit: ' temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' temp' → logprob: -0.3974660336971283
    2. ' B' → logprob: -1.7724660634994507
    3. ' A' → logprob: -3.022465944290161
    4. ' time' → logprob: -3.272465944290161
    5. ' ' → logprob: -3.647465944290161
    6. ' E' → logprob: -3.897465944290161
    7. 'temp' → logprob: -4.77246618270874
    8. ' (' → logprob: -4.89746618270874
    9. ' C' → logprob: -6.02246618270874
    10. 'B' → logprob: -6.27246618270874

Token 36: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3513217270374298
    2. ' >' → logprob: -1.7263216972351074
    3. ' <=' → logprob: -2.8513216972351074
    4. ' ==' → logprob: -3.1013216972351074
    5. ' !=' → logprob: -5.101321697235107
    6. '<' → logprob: -5.601321697235107
    7. ' >=' → logprob: -5.976321697235107
    8. '>' → logprob: -6.476321697235107
    9. ' +' → logprob: -7.351321697235107
    10. '+' → logprob: -7.726321697235107

Token 37: ' ' (ID: 220)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.09083576500415802
    2. ' B' → logprob: -2.4658358097076416
    3. 'D' → logprob: -6.9658355712890625
    4. 'C' → logprob: -7.9658355712890625
    5. 'E' → logprob: -8.090835571289062
    6. '=' → logprob: -9.465835571289062
    7. ' D' → logprob: -9.840835571289062
    8. '0' → logprob: -10.090835571289062
    9. ' C' → logprob: -10.340835571289062
    10. ' E' → logprob: -10.840835571289062

Token 38: '0' (ID: 15)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0030629150569438934
    2. 'C' → logprob: -6.753062725067139
    3. ' B' → logprob: -6.878062725067139
    4. 'D' → logprob: -7.503062725067139
    5. 'E' → logprob: -8.378063201904297
    6. '10' → logprob: -11.003063201904297
    7. '5' → logprob: -11.128063201904297
    8. '0' → logprob: -11.378063201904297
    9. '100' → logprob: -11.878063201904297
    10. '20' → logprob: -12.628063201904297

Token 39: ':
' (ID: 734)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.5951564908027649
    2. ':' → logprob: -0.8451564908027649
    3. ' and' → logprob: -4.345156669616699
    4. ' or' → logprob: -5.220156669616699
    5. 'and' → logprob: -8.7201566696167
    6. ' ' → logprob: -8.8451566696167
    7. ' :
' → logprob: -9.8451566696167
    8. '-' → logprob: -10.2201566696167
    9. ' else' → logprob: -10.4701566696167
    10. 'or' → logprob: -10.4701566696167

Token 40: '   ' (ID: 271)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.2546595335006714
    2. ':' → logprob: -1.6296595335006714
    3. ' ' → logprob: -4.004659652709961
    4. ' :
' → logprob: -5.129659652709961
    5. ' and' → logprob: -6.504659652709961
    6. '.' → logprob: -7.504659652709961
    7. ' or' → logprob: -7.879659652709961
    8. ' +' → logprob: -8.004659652709961
    9. '0' → logprob: -8.129659652709961
    10. ')' → logprob: -8.379659652709961

Token 41: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6208528280258179
    2. '0' → logprob: -1.8708528280258179
    3. ' +' → logprob: -2.4958529472351074
    4. 'time' → logprob: -2.8708529472351074
    5. ' :' → logprob: -3.6208529472351074
    6. ' time' → logprob: -3.7458529472351074
    7. '+' → logprob: -3.8708529472351074
    8. ' \' → logprob: -4.120852947235107
    9. 'temp' → logprob: -4.620852947235107
    10. ' A' → logprob: -4.870852947235107

Token 42: ' chau' (ID: 129790)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.8586490154266357
    2. 'time' → logprob: -0.8586490154266357
    3. ' temp' → logprob: -2.4836490154266357
    4. 'temp' → logprob: -2.9836490154266357
    5. ' pass' → logprob: -4.983649253845215
    6. ' ' → logprob: -5.858649253845215
    7. 'pass' → logprob: -6.233649253845215
    8. 't' → logprob: -6.608649253845215
    9. '   ' → logprob: -7.358649253845215
    10. ' A' → logprob: -7.671149253845215

Token 43: 'ffer' (ID: 6166)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3099895417690277
    2. 'n' → logprob: -2.4349894523620605
    3. 't' → logprob: -3.0599894523620605
    4. ' ' → logprob: -3.1849894523620605
    5. 'e' → logprob: -4.5599894523620605
    6. 'm' → logprob: -5.0599894523620605
    7. 's' → logprob: -5.1849894523620605
    8. '+' → logprob: -5.1849894523620605
    9. 'time' → logprob: -5.1849894523620605
    10. '   ' → logprob: -5.4349894523620605

Token 44: ' jusqu' (ID: 21961)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0027445554733276
    2. ' :' → logprob: -1.3777445554733276
    3. ' =' → logprob: -1.6277445554733276
    4. ' ' → logprob: -3.002744674682617
    5. '=' → logprob: -3.377744674682617
    6. '   ' → logprob: -3.502744674682617
    7. ' +=' → logprob: -3.877744674682617
    8. '_' → logprob: -4.377744674682617
    9. '  ' → logprob: -4.752744674682617
    10. 's' → logprob: -4.877744674682617

Token 45: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.43741923570632935
    2. ''' → logprob: -1.0624191761016846
    3. ''au' → logprob: -5.062419414520264
    4. ''a' → logprob: -6.312419414520264
    5. '’à' → logprob: -8.312418937683105
    6. 'a' → logprob: -9.062418937683105
    7. 'e' → logprob: -9.812418937683105
    8. 'à' → logprob: -10.062418937683105
    9. ' ' → logprob: -11.562418937683105
    10. ''u' → logprob: -11.687418937683105

Token 46: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07537918537855148
    2. ' ' → logprob: -3.2003791332244873
    3. ' ce' → logprob: -4.200379371643066
    4. ' zéro' → logprob: -5.825379371643066
    5. 'ce' → logprob: -6.575379371643066
    6. 'temp' → logprob: -6.700379371643066
    7. ' à' → logprob: -6.700379371643066
    8. ' temp' → logprob: -6.950379371643066
    9. 'à' → logprob: -6.950379371643066
    10. '10' → logprob: -7.075379371643066

Token 47: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009396199136972427
    2. ' ' → logprob: -5.009396076202393
    3. 'à' → logprob: -6.884396076202393
    4. 'z' → logprob: -7.634396076202393
    5. '1' → logprob: -7.884396076202393
    6. 'C' → logprob: -8.63439655303955
    7. 'E' → logprob: -9.13439655303955
    8. '10' → logprob: -9.75939655303955
    9. ' à' → logprob: -10.13439655303955
    10. 'A' → logprob: -10.25939655303955

Token 48: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3809548616409302
    2. ' :' → logprob: -1.2559548616409302
    3. ' ' → logprob: -3.7559547424316406
    4. '   ' → logprob: -5.880954742431641
    5. ',' → logprob: -7.255954742431641
    6. 'space' → logprob: -7.380954742431641
    7. '  ' → logprob: -7.505954742431641
    8. ' and' → logprob: -7.880954742431641
    9. '<|end|>' → logprob: -7.880954742431641
    10. '    ' → logprob: -7.880954742431641

Token 49: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3643242120742798
    2. ' :' → logprob: -2.3643240928649902
    3. ' +=' → logprob: -2.7393240928649902
    4. ' +' → logprob: -2.7393240928649902
    5. '+' → logprob: -3.2393240928649902
    6. ' and' → logprob: -4.11432409286499
    7. ' =' → logprob: -4.86432409286499
    8. '   ' → logprob: -5.98932409286499
    9. '=' → logprob: -6.11432409286499
    10. ' ' → logprob: -6.36432409286499

Token 50: ' time' (ID: 1058)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9309219717979431
    2. ' +' → logprob: -0.9309219717979431
    3. '+' → logprob: -2.180922031402588
    4. ' :' → logprob: -3.430922031402588
    5. ' +=' → logprob: -3.680922031402588
    6. ' -' → logprob: -4.180922031402588
    7. 'time' (adapté à ' time') → logprob: -4.555922031402588
    8. ' =' → logprob: -5.430922031402588
    9. '-' → logprob: -6.055922031402588
    10. ' ' → logprob: -6.805922031402588

Token 51: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6004137992858887
    2. ' +=' → logprob: -0.8504137992858887
    3. ' -=' → logprob: -4.225413799285889
    4. '-=' → logprob: -5.100413799285889
    5. '-' → logprob: -6.850413799285889
    6. '=' → logprob: -6.975413799285889
    7. '+=(' → logprob: -6.975413799285889
    8. '+' → logprob: -8.100414276123047
    9. ' =' → logprob: -8.850414276123047
    10. ' ' → logprob: -10.475414276123047

Token 52: ' C' (ID: 363)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3286357522010803
    2. ' -' → logprob: -2.0786356925964355
    3. '-A' → logprob: -2.3286356925964355
    4. '-temp' → logprob: -3.3286356925964355
    5. '-B' → logprob: -5.2036356925964355
    6. 'abs' → logprob: -5.2036356925964355
    7. '-C' → logprob: -5.5786356925964355
    8. '-E' → logprob: -5.9536356925964355
    9. '(-' → logprob: -6.7036356925964355
    10. '-D' → logprob: -6.8286356925964355

Token 53: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1460726261138916
    2. ' +' → logprob: -1.1460726261138916
    3. ' *' → logprob: -1.2710726261138916
    4. '*' → logprob: -2.5210726261138916
    5. '-' → logprob: -6.7710723876953125
    6. ' -' → logprob: -7.1460723876953125
    7. 'if' → logprob: -7.7710723876953125
    8. ' ' → logprob: -8.521072387695312
    9. 'else' → logprob: -8.771072387695312
    10. ' if' → logprob: -9.271072387695312

Token 54: ' (-' (ID: 21382)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8245603442192078
    2. '(-' → logprob: -1.1995604038238525
    3. 'abs' → logprob: -2.1995604038238525
    4. ' abs' → logprob: -2.9495604038238525
    5. '(abs' → logprob: -3.1995604038238525
    6. ' -' → logprob: -3.3245604038238525
    7. '-temp' → logprob: -4.699560165405273
    8. '(' → logprob: -4.824560165405273
    9. ' (-' → logprob: -6.199560165405273
    10. ' (' → logprob: -8.074560165405273

Token 55: 'temp' (ID: 7340)
  Prédit: 'temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.0002560945285949856
    2. ' temp' → logprob: -8.375256538391113
    3. 'tem' → logprob: -11.375256538391113
    4. '1' → logprob: -11.625256538391113
    5. '<|end|>' → logprob: -13.375256538391113
    6. 'temps' → logprob: -14.000256538391113
    7. 'tmp' → logprob: -14.375256538391113
    8. 't' → logprob: -14.500256538391113
    9. 'time' → logprob: -14.625256538391113
    10. '	temp' → logprob: -14.875256538391113

Token 56: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011570196511456743
    2. ' )' → logprob: -9.250115394592285
    3. ')
' → logprob: -10.875115394592285
    4. '))' → logprob: -15.875115394592285
    5. ')

' → logprob: -16.2501163482666
    6. '+' → logprob: -16.2501163482666
    7. ')+' → logprob: -17.2501163482666
    8. '),' → logprob: -17.3751163482666
    9. ')
' → logprob: -17.5001163482666
    10. ' )
' → logprob: -17.5001163482666

Token 57: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.1085224151611328
    2. 'elif' → logprob: -1.1085224151611328
    3. ' else' → logprob: -1.7335224151611328
    4. ' elif' → logprob: -2.733522415161133
    5. ' 
' → logprob: -3.608522415161133
    6. ' ' → logprob: -3.858522415161133
    7. '<|end|>' → logprob: -4.483522415161133
    8. ' if' → logprob: -5.233522415161133
    9. 'temp' → logprob: -5.358522415161133
    10. 'time' → logprob: -5.483522415161133

Token 58: ' temp' (ID: 5484)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44609692692756653
    2. ' temp' → logprob: -1.3210968971252441
    3. 'temp' (adapté à ' temp') → logprob: -2.446096897125244
    4. ' ' → logprob: -6.446096897125244
    5. '    ' → logprob: -6.946096897125244
    6. '0' → logprob: -7.196096897125244
    7. ' temps' → logprob: -7.196096897125244
    8. ' time' → logprob: -7.321096897125244
    9. '  ' → logprob: -8.446097373962402
    10. 'time' → logprob: -8.696097373962402

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193482637405396
    2. '=' → logprob: -1.5019347667694092
    3. ' +=' → logprob: -12.251935005187988
    4. '+=' → logprob: -14.501935005187988
    5. ' ' → logprob: -14.876935005187988
    6. '＝' → logprob: -17.751934051513672
    7. ' *=' → logprob: -17.751934051513672
    8. '0' → logprob: -18.001934051513672
    9. '.=' → logprob: -19.126934051513672
    10. '=}' → logprob: -19.126934051513672

Token 60: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. ' ' → logprob: -18.375123977661133
    4. '1' → logprob: -19.500123977661133
    5. '   ' → logprob: -19.625123977661133
    6. '۰' → logprob: -19.875123977661133
    7. '```' → logprob: -20.250123977661133
    8. '00' → logprob: -20.437623977661133
    9. '>' → logprob: -21.000123977661133
    10. '2' → logprob: -21.125123977661133

Token 61: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. ' ' → logprob: -19.250085830688477
    4. '1' → logprob: -20.000085830688477
    5. '   ' → logprob: -20.125085830688477
    6. '  ' → logprob: -20.250085830688477
    7. '۰' → logprob: -20.375085830688477
    8. '00' → logprob: -21.312585830688477
    9. '```' → logprob: -21.812585830688477
    10. '2' → logprob: -21.937585830688477

Token 62: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9234367609024048
    2. ' if' → logprob: -1.1734367609024048
    3. 'elif' → logprob: -1.9234367609024048
    4. '<|end|>' → logprob: -2.7984366416931152
    5. ' elif' → logprob: -3.2984366416931152
    6. '\n' → logprob: -4.548436641693115
    7. ')' → logprob: -5.298436641693115
    8. ' 
' → logprob: -5.298436641693115
    9. ' ' → logprob: -5.298436641693115
    10. ' while' → logprob: -5.548436641693115

Token 64: ' #' (ID: 1069)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0845531225204468
    2. ' if' → logprob: -1.9595531225204468
    3. 'elif' → logprob: -2.0845532417297363
    4. 'if' → logprob: -2.2095532417297363
    5. ' elif' → logprob: -2.5845532417297363
    6. ' ' → logprob: -2.7095532417297363
    7. ' +' → logprob: -2.9595532417297363
    8. ')' → logprob: -3.0845532417297363
    9. ' )' → logprob: -4.959553241729736
    10. '<|end|>' → logprob: -5.334553241729736

Token 65: ' dé' (ID: 2393)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -1.0833626985549927
    2. 'if' → logprob: -2.083362579345703
    3. ' elif' → logprob: -2.208362579345703
    4. ' if' → logprob: -2.458362579345703
    5. 'time' → logprob: -2.583362579345703
    6. ' ' → logprob: -2.833362579345703
    7. '+' → logprob: -2.958362579345703
    8. ' else' → logprob: -3.833362579345703
    9. 'else' → logprob: -3.833362579345703
    10. ' time' → logprob: -3.958362579345703

Token 66: 'gel' (ID: 9457)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.7419967651367188
    2. 'f' → logprob: -2.1169967651367188
    3. 'crement' → logprob: -2.2419967651367188
    4. 'g' → logprob: -2.6169967651367188
    5. 'cr' → logprob: -2.7419967651367188
    6. 'caler' → logprob: -2.8669967651367188
    7. 'placer' → logprob: -3.2419967651367188
    8. 'con' → logprob: -3.3669967651367188
    9. 'sc' → logprob: -3.3669967651367188
    10. 'cro' → logprob: -3.6169967651367188

Token 67: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.217329740524292
    2. ' ' → logprob: -1.217329740524292
    3. 'E' → logprob: -1.967329740524292
    4. ' E' → logprob: -2.092329740524292
    5. ' D' → logprob: -3.467329740524292
    6. 'D' → logprob: -3.592329740524292
    7. '  ' → logprob: -4.467329978942871
    8. 'temp' → logprob: -4.592329978942871
    9. '1' → logprob: -4.717329978942871
    10. '+' → logprob: -5.092329978942871

Token 69: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5089163780212402
    2. 'D' → logprob: -1.3839163780212402
    3. 'E' → logprob: -2.1339163780212402
    4. '1' → logprob: -4.63391637802124
    5. 'temp' → logprob: -5.00891637802124
    6. '10' → logprob: -5.63391637802124
    7. '+' → logprob: -5.75891637802124
    8. 'B' → logprob: -6.13391637802124
    9. '20' → logprob: -7.25891637802124
    10. ' ' → logprob: -7.63391637802124

Token 70: '
' (ID: 198)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.2987161874771118
    2. ' time' → logprob: -2.0487160682678223
    3. ' if' → logprob: -2.4237160682678223
    4. ' +' → logprob: -2.4237160682678223
    5. 'elif' → logprob: -2.4237160682678223
    6. '<|end|>' → logprob: -2.6737160682678223
    7. '   ' → logprob: -2.7987160682678223
    8. 'if' → logprob: -2.7987160682678223
    9. '+' → logprob: -3.0487160682678223
    10. ' elif' → logprob: -3.4237160682678223

Token 71: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2655534744262695
    2. ' if' → logprob: -1.2655534744262695
    3. 'elif' → logprob: -1.3905534744262695
    4. ' elif' → logprob: -2.1405534744262695
    5. '+' → logprob: -3.5155534744262695
    6. ' for' → logprob: -4.8905534744262695
    7. ' while' → logprob: -5.0155534744262695
    8. ' +' → logprob: -5.5155534744262695
    9. ' else' → logprob: -5.5155534744262695
    10. 'else' → logprob: -5.6405534744262695

Token 72: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' (adapté à ' time') → logprob: -0.0028104635421186686
    2. '+' → logprob: -6.627810478210449
    3. ' time' → logprob: -7.377810478210449
    4. 'D' → logprob: -8.37781047821045
    5. 'E' → logprob: -8.37781047821045
    6. 'if' → logprob: -8.50281047821045
    7. '   ' → logprob: -9.87781047821045
    8. 'B' → logprob: -10.00281047821045
    9. '<|end|>' → logprob: -11.12781047821045
    10. 'temp' → logprob: -11.25281047821045

Token 73: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.16211256384849548
    2. '+=' → logprob: -1.9121125936508179
    3. '+' → logprob: -6.287112712860107
    4. ' +' → logprob: -11.66211223602295
    5. ']+=' → logprob: -12.53711223602295
    6. '<|end|>' → logprob: -12.78711223602295
    7. ' -=' → logprob: -12.91211223602295
    8. '+='' → logprob: -13.28711223602295
    9. '=' → logprob: -13.41211223602295
    10. '++' → logprob: -13.41211223602295

Token 74: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.3247106075286865
    2. 'E' → logprob: -1.3247106075286865
    3. 'B' → logprob: -4.699710845947266
    4. 'A' → logprob: -7.074710845947266
    5. 'C' → logprob: -7.199710845947266
    6. ' D' → logprob: -7.824710845947266
    7. ' E' → logprob: -8.824710845947266
    8. 'F' → logprob: -9.324710845947266
    9. ' ' → logprob: -11.574710845947266
    10. '	E' → logprob: -12.012210845947266

Token 75: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.648247241973877
    2. 'elif' → logprob: -0.898247241973877
    3. ' if' → logprob: -3.148247241973877
    4. 'while' → logprob: -4.898247241973877
    5. ' elif' → logprob: -5.023247241973877
    6. ' while' → logprob: -5.023247241973877
    7. 'else' → logprob: -6.273247241973877
    8. '+' → logprob: -6.273247241973877
    9. ')' → logprob: -7.898247241973877
    10. ' +' → logprob: -7.898247241973877

Token 77: ' #' (ID: 1069)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.7386619448661804
    2. 'if' → logprob: -0.9886619448661804
    3. ' if' → logprob: -2.738662004470825
    4. 'else' → logprob: -3.488662004470825
    5. ' elif' → logprob: -3.738662004470825
    6. '+' → logprob: -4.738661766052246
    7. 'while' → logprob: -4.863661766052246
    8. ' while' → logprob: -5.488661766052246
    9. ' +' → logprob: -5.988661766052246
    10. ' else' → logprob: -5.988661766052246

Token 78: ' chau' (ID: 129790)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.9215521812438965
    2. ' time' → logprob: -1.5465521812438965
    3. 'if' → logprob: -1.7965521812438965
    4. ' if' → logprob: -2.4215521812438965
    5. 'temp' → logprob: -2.9215521812438965
    6. ' temp' → logprob: -3.0465521812438965
    7. 'chauff' → logprob: -5.9840521812438965
    8. ' chauff' → logprob: -6.0465521812438965
    9. ' chau' → logprob: -6.3590521812438965
    10. 'elif' → logprob: -6.3590521812438965

Token 79: 'ffer' (ID: 6166)
  Prédit: 'ffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ffer' → logprob: -0.018253076821565628
    2. 'ff' → logprob: -4.393252849578857
    3. 'f' → logprob: -5.268252849578857
    4. 'ffe' → logprob: -8.518253326416016
    5. 'фф' → logprob: -9.393253326416016
    6. '   ' → logprob: -9.893253326416016
    7. 'd' → logprob: -9.893253326416016
    8. 'FFER' → logprob: -11.018253326416016
    9. '\xef\xac' → logprob: -11.143253326416016
    10. '

' → logprob: -11.268253326416016

Token 80: ' jusqu' (ID: 21961)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.39139583706855774
    2. ' à' → logprob: -1.3913958072662354
    3. 'à' → logprob: -3.8913958072662354
    4. ''au' → logprob: -4.2663960456848145
    5. '’à' → logprob: -4.5163960456848145
    6. ''' → logprob: -4.7663960456848145
    7. 'a' → logprob: -5.1413960456848145
    8. 'e' → logprob: -5.8913960456848145
    9. ' au' → logprob: -5.8913960456848145
    10. 'au' → logprob: -6.0163960456848145

Token 82: ' B' (ID: 418)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.6762633323669434
    2. ' E' → logprob: -1.1762633323669434
    3. 'B' → logprob: -2.1762633323669434
    4. ' B' → logprob: -2.6762633323669434
    5. ' ' → logprob: -7.426263332366943
    6. '1' → logprob: -9.676263809204102
    7. 'temp' → logprob: -10.176263809204102
    8. ' temp' → logprob: -11.363763809204102
    9. 'A' → logprob: -11.426263809204102
    10. '	E' → logprob: -11.926263809204102

Token 83: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.21724848449230194
    2. '<|end|>' → logprob: -2.0922484397888184
    3. ' +' → logprob: -2.9672484397888184
    4. ' ' → logprob: -4.092248439788818
    5. '<|end|>' → logprob: -7.092248439788818
    6. ' if' → logprob: -7.342248439788818
    7. ')' → logprob: -7.842248439788818
    8. '    ' → logprob: -8.217248916625977
    9. '  ' → logprob: -8.342248916625977
    10. ' plus' → logprob: -8.467248916625977

Token 84: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20241260528564453
    2. ' +' → logprob: -1.8274126052856445
    3. ' ' → logprob: -5.2024126052856445
    4. ' if' → logprob: -5.4524126052856445
    5. '<|end|>' → logprob: -5.5774126052856445
    6. 'if' → logprob: -5.8274126052856445
    7. '   ' → logprob: -6.8274126052856445
    8. ')' → logprob: -7.0774126052856445
    9. 'elif' → logprob: -7.0774126052856445
    10. ' while' → logprob: -7.4524126052856445

Token 85: ' time' (ID: 1058)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.7396167516708374
    2. 'C' → logprob: -1.3646167516708374
    3. '+' → logprob: -2.614616870880127
    4. ' C' → logprob: -2.614616870880127
    5. ' B' → logprob: -2.864616870880127
    6. '   ' → logprob: -3.989616870880127
    7. ' (' → logprob: -4.489616870880127
    8. ' +' → logprob: -4.739616870880127
    9. '(' → logprob: -5.239616870880127
    10. 'E' → logprob: -5.864616870880127

Token 86: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.020974142476916313
    2. '+=' → logprob: -3.8959741592407227
    3. '+' → logprob: -7.895974159240723
    4. ' +' → logprob: -9.770974159240723
    5. ' ' → logprob: -14.145974159240723
    6. '=' → logprob: -14.395974159240723
    7. '+=(' → logprob: -14.395974159240723
    8. '+='' → logprob: -15.395974159240723
    9. ' =' → logprob: -15.520974159240723
    10. ']+=' → logprob: -15.645974159240723

Token 87: ' E' (ID: 457)
  Prédit: ' C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.8249700665473938
    2. 'C' → logprob: -0.9499700665473938
    3. 'B' → logprob: -2.574970006942749
    4. ' B' → logprob: -2.824970006942749
    5. ' ' → logprob: -4.449970245361328
    6. ' A' → logprob: -4.949970245361328
    7. ' E' → logprob: -5.324970245361328
    8. ' (' → logprob: -5.574970245361328
    9. 'A' → logprob: -5.574970245361328
    10. 'E' → logprob: -5.699970245361328

Token 88: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5914486646652222
    2. '*' → logprob: -0.8414486646652222
    3. '*(' → logprob: -4.216448783874512
    4. ' (' → logprob: -8.466448783874512
    5. '(B' → logprob: -8.716448783874512
    6. 'B' → logprob: -9.341448783874512
    7. '(' → logprob: -9.591448783874512
    8. ' *(' → logprob: -10.591448783874512
    9. ' ' → logprob: -10.716448783874512
    10. '`' → logprob: -10.841448783874512

Token 89: ' (' (ID: 350)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.42341306805610657
    2. ' B' → logprob: -1.1734130382537842
    3. ' (' → logprob: -3.798413038253784
    4. '(B' → logprob: -4.423413276672363
    5. '(' → logprob: -6.548413276672363
    6. ' ' → logprob: -10.423413276672363
    7. ' ' → logprob: -13.110913276672363
    8. '   ' → logprob: -13.173413276672363
    9. '	B' → logprob: -13.298413276672363
    10. '  ' → logprob: -13.485913276672363

Token 90: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.05508888512849808
    2. ' B' → logprob: -2.930088996887207
    3. ' (' → logprob: -9.430088996887207
    4. '(B' → logprob: -9.555088996887207
    5. '(' → logprob: -10.805088996887207
    6. ' ' → logprob: -11.680088996887207
    7. ' -' → logprob: -12.055088996887207
    8. '-B' → logprob: -12.180088996887207
    9. '   ' → logprob: -12.430088996887207
    10. '-' → logprob: -12.930088996887207

Token 91: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07891688495874405
    2. '-' → logprob: -2.5789167881011963
    3. '-temp' → logprob: -11.078916549682617
    4. '-tem' → logprob: -11.703916549682617
    5. ' ' → logprob: -13.328916549682617
    6. ' ' → logprob: -13.953916549682617
    7. '-t' → logprob: -14.453916549682617
    8. '-time' → logprob: -16.578916549682617
    9. '-temperature' → logprob: -16.828916549682617
    10. '‌' → logprob: -17.078916549682617

Token 92: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.35997700691223145
    2. ' temp' → logprob: -1.4849770069122314
    3. '0' → logprob: -2.6099770069122314
    4. ' ' → logprob: -6.109976768493652
    5. ')' → logprob: -11.734976768493652
    6. 'tmp' → logprob: -11.984976768493652
    7. '	temp' → logprob: -12.109976768493652
    8. 'temps' → logprob: -12.609976768493652
    9. ' ' → logprob: -13.109976768493652
    10. ' temps' → logprob: -13.109976768493652

Token 93: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001760148094035685
    2. ')
' → logprob: -6.376760005950928
    3. ' )' → logprob: -9.876760482788086
    4. ')

' → logprob: -12.876760482788086
    5. ')
' → logprob: -13.876760482788086
    6. '))' → logprob: -14.251760482788086
    7. ')#' → logprob: -14.751760482788086
    8. ' )
' → logprob: -15.126760482788086
    9. '+' → logprob: -15.376760482788086
    10. '),' → logprob: -15.876760482788086

Token 94: 'else' (ID: 2807)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6355856657028198
    2. 'else' → logprob: -1.6355856657028198
    3. 'elif' → logprob: -1.6355856657028198
    4. '
' → logprob: -3.3855857849121094
    5. ' else' → logprob: -3.7605857849121094
    6. '<|end|>' → logprob: -4.510585784912109
    7. ' elif' → logprob: -5.260585784912109
    8. '\' → logprob: -6.510585784912109
    9. ' 
' → logprob: -6.635585784912109
    10. '' → logprob: -7.010585784912109

Token 95: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00376101303845644
    2. ':
' → logprob: -5.753760814666748
    3. ' :' → logprob: -7.503760814666748
    4. ' :
' → logprob: -10.503761291503906
    5. ':

' → logprob: -13.503761291503906
    6. '
' → logprob: -14.378761291503906
    7. ':
' → logprob: -14.628761291503906
    8. '   ' → logprob: -14.878761291503906
    9. ' if' → logprob: -14.878761291503906
    10. ',' → logprob: -15.253761291503906

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4139619469642639
    2. 'time' → logprob: -1.4139618873596191
    3. ' time' → logprob: -2.538961887359619
    4. ' if' → logprob: -4.663961887359619
    5. 'if' → logprob: -5.163961887359619
    6. ' ' → logprob: -7.538961887359619
    7. '    ' → logprob: -7.788961887359619
    8. '  ' → logprob: -8.538962364196777
    9. '	time' → logprob: -8.538962364196777
    10. '   ' → logprob: -9.788962364196777

Token 97: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7038286328315735
    2. 'time' → logprob: -0.7038286328315735
    3. ' if' → logprob: -5.203828811645508
    4. '   ' → logprob: -6.078828811645508
    5. ' time' → logprob: -6.453828811645508
    6. '#' (adapté à ' #') → logprob: -7.578828811645508
    7. ' ' → logprob: -8.828828811645508
    8. '  ' → logprob: -9.328828811645508
    9. 'E' → logprob: -9.578828811645508
    10. 'temp' → logprob: -9.828828811645508

Token 98: ' chau' (ID: 129790)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4383072555065155
    2. ' if' → logprob: -1.813307285308838
    3. 'time' → logprob: -2.563307285308838
    4. 'chau' → logprob: -2.813307285308838
    5. 'chauff' → logprob: -4.063307285308838
    6. ' chau' → logprob: -4.188307285308838
    7. ' time' → logprob: -4.313307285308838
    8. 'temp' → logprob: -6.750807285308838
    9. '#' → logprob: -7.000807285308838
    10. 'E' → logprob: -7.188307285308838

Token 99: 'ffer' (ID: 6166)
  Prédit: 'ffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ffer' → logprob: -0.13870923221111298
    2. 'f' → logprob: -2.138709306716919
    3. 'ff' → logprob: -4.88870906829834
    4. ' f' → logprob: -6.26370906829834
    5. 'fer' → logprob: -6.26370906829834
    6. 'ffe' → logprob: -8.88870906829834
    7. 'fter' → logprob: -9.51370906829834
    8. '   ' → logprob: -10.76370906829834
    9. 'fff' → logprob: -11.26370906829834
    10. 't' → logprob: -11.63870906829834

Token 100: ' directement' (ID: 52317)
  Prédit: ' jusqu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -0.0512409508228302
    2. ' up' → logprob: -4.676240921020508
    3. ' à' → logprob: -4.676240921020508
    4. ' +=' → logprob: -4.801240921020508
    5. ' jusque' → logprob: -5.301240921020508
    6. ' to' → logprob: -5.426240921020508
    7. ' until' → logprob: -5.426240921020508
    8. ' ' → logprob: -5.801240921020508
    9. '<|end|>' → logprob: -7.051240921020508
    10. ' +' → logprob: -7.176240921020508

Token 101: ' jusqu' (ID: 21961)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.7535574436187744
    2. ' time' → logprob: -1.5035574436187744
    3. '   ' → logprob: -1.8785574436187744
    4. 'E' → logprob: -2.5035574436187744
    5. ' E' → logprob: -3.1285574436187744
    6. ' to' → logprob: -4.878557205200195
    7. 'to' → logprob: -5.253557205200195
    8. '  ' → logprob: -6.003557205200195
    9. '    ' → logprob: -6.128557205200195
    10. ' until' → logprob: -6.128557205200195

Token 102: ''à' (ID: 33688)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.4207365810871124
    2. ' à' → logprob: -1.17073655128479
    3. ''à' → logprob: -3.54573655128479
    4. '’à' → logprob: -6.545736789703369
    5. '   ' → logprob: -6.670736789703369
    6. 'au' → logprob: -7.795736789703369
    7. 'À' → logprob: -7.920736789703369
    8. 'a' → logprob: -8.295736312866211
    9. 'B' → logprob: -8.545736312866211
    10. 'to' → logprob: -9.045736312866211

Token 103: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.6326107978820801
    2. 'B' → logprob: -0.7576107978820801
    3. ' ' → logprob: -11.757610321044922
    4. ' ' → logprob: -13.882610321044922
    5. 'E' → logprob: -14.382610321044922
    6. 'A' → logprob: -14.632610321044922
    7. ' E' → logprob: -15.132610321044922
    8. ' A' → logprob: -15.132610321044922
    9. ' max' → logprob: -15.257610321044922
    10. '	B' → logprob: -15.507610321044922

Token 104: '
' (ID: 198)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.23355209827423096
    2. '   ' → logprob: -1.608552098274231
    3. ' time' → logprob: -5.358551979064941
    4. '
' → logprob: -5.983551979064941
    5. 'if' → logprob: -7.358551979064941
    6. '	time' → logprob: -9.108551979064941
    7. ' if' → logprob: -10.233551979064941
    8. '  ' → logprob: -10.608551979064941
    9. ' ' → logprob: -11.358551979064941
    10. '"time' → logprob: -11.733551979064941

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0682341605424881
    2. 'time' → logprob: -3.0682342052459717
    3. ' time' → logprob: -5.193233966827393
    4. '
' → logprob: -5.443233966827393
    5. '\n' → logprob: -5.818233966827393
    6. '<|end|>' → logprob: -6.693233966827393
    7. 'E' → logprob: -7.068233966827393
    8. '    
' → logprob: -7.193233966827393
    9. ' ' → logprob: -7.318233966827393
    10. '  
' → logprob: -7.568233966827393

Token 106: ' time' (ID: 1058)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.011656583286821842
    2. ' E' → logprob: -5.011656761169434
    3. 'time' (adapté à ' time') → logprob: -5.386656761169434
    4. ' time' → logprob: -8.386656761169434
    5. 'if' → logprob: -9.886656761169434
    6. 'A' → logprob: -10.261656761169434
    7. 'B' → logprob: -11.386656761169434
    8. '   ' → logprob: -11.886656761169434
    9. ' if' → logprob: -12.761656761169434
    10. '`' → logprob: -13.011656761169434

Token 107: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.009823144413530827
    2. '+=' → logprob: -4.634823322296143
    3. ' +' → logprob: -10.259822845458984
    4. '+' → logprob: -10.384822845458984
    5. '+='' → logprob: -14.759822845458984
    6. ']+=' → logprob: -15.384822845458984
    7. '+="' → logprob: -15.634822845458984
    8. '+=(' → logprob: -15.759822845458984
    9. ' ' → logprob: -16.009822845458984
    10. '=' → logprob: -16.509822845458984

Token 108: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.1429234892129898
    2. ' E' → logprob: -2.017923593521118
    3. 'A' → logprob: -8.517923355102539
    4. ' A' → logprob: -10.517923355102539
    5. ' ' → logprob: -11.142923355102539
    6. '	E' → logprob: -12.517923355102539
    7. 'B' → logprob: -13.892923355102539
    8. '  ' → logprob: -14.767923355102539
    9. '(E' → logprob: -15.017923355102539
    10. '   ' → logprob: -15.017923355102539

Token 109: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.012528485618531704
    2. '*' → logprob: -4.387528419494629
    3. ' ' → logprob: -11.137528419494629
    4. '*(' → logprob: -13.012528419494629
    5. ' ' → logprob: -13.387528419494629
    6. ')' → logprob: -15.637528419494629
    7. ' **' → logprob: -16.137529373168945
    8. ' (' → logprob: -16.762529373168945
    9. ' *(' → logprob: -17.012529373168945
    10. '+' → logprob: -17.637529373168945

Token 110: ' (' (ID: 350)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.1355370283126831
    2. ' (' → logprob: -2.1355371475219727
    3. '(' → logprob: -4.760537147521973
    4. '(A' → logprob: -12.760537147521973
    5. '(max' → logprob: -12.885537147521973
    6. '(abs' → logprob: -13.760537147521973
    7. '(int' → logprob: -14.385537147521973
    8. ' ' → logprob: -14.385537147521973
    9. 'max' → logprob: -14.510537147521973
    10. 'B' → logprob: -14.635537147521973

Token 111: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.1379871368408203
    2. ' B' → logprob: -2.3879871368408203
    3. '(B' → logprob: -3.3879871368408203
    4. ' (' → logprob: -5.76298713684082
    5. '(' → logprob: -9.38798713684082
    6. '   ' → logprob: -10.76298713684082
    7. ' ' → logprob: -10.76298713684082
    8. 'max' → logprob: -11.63798713684082
    9. '	B' → logprob: -12.26298713684082
    10. ' max' → logprob: -12.51298713684082

Token 112: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.38735783100128174
    2. '-' → logprob: -1.1373578310012817
    3. ')' → logprob: -7.637357711791992
    4. ' )' → logprob: -13.262357711791992
    5. '-)' → logprob: -13.262357711791992
    6. ' ' → logprob: -14.387357711791992
    7. '-temp' → logprob: -15.887357711791992
    8. '))' → logprob: -16.137357711791992
    9. '   ' → logprob: -16.637357711791992
    10. '-tem' → logprob: -17.262357711791992

Token 113: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.1270311027765274
    2. ' temp' → logprob: -2.127031087875366
    3. 'A' → logprob: -9.627031326293945
    4. ' A' → logprob: -10.877031326293945
    5. ' ' → logprob: -12.002031326293945
    6. '   ' → logprob: -12.752031326293945
    7. '	temp' → logprob: -13.127031326293945
    8. 'tmp' → logprob: -13.377031326293945
    9. '  ' → logprob: -13.877031326293945
    10. 'tem' → logprob: -14.002031326293945

Token 114: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.511406809295295e-06
    2. ')
' → logprob: -12.250006675720215
    3. ' )' → logprob: -13.625006675720215
    4. '))' → logprob: -15.750006675720215
    5. '')' → logprob: -16.5000057220459
    6. ')

' → logprob: -16.5000057220459
    7. ')#' → logprob: -17.5000057220459
    8. ')return' → logprob: -18.5000057220459
    9. '<|end|>' → logprob: -18.5000057220459
    10. '```' → logprob: -18.6250057220459

Token 115: 'print' (ID: 1598)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6660733819007874
    2. 'print' → logprob: -1.1660733222961426
    3. 'if' → logprob: -2.4160733222961426
    4. '
' → logprob: -2.6660733222961426
    5. '+' → logprob: -5.041073322296143
    6. '```' → logprob: -5.916073322296143
    7. ' if' → logprob: -6.166073322296143
    8. '<|end|>' → logprob: -6.791073322296143
    9. 'time' → logprob: -7.666073322296143
    10. '+
' → logprob: -7.666073322296143

Token 116: '(time' (ID: 19192)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759661793708801
    2. '(time' → logprob: -0.8259661793708801
    3. '()' → logprob: -11.575965881347656
    4. '('' → logprob: -12.450965881347656
    5. '(t' → logprob: -12.575965881347656
    6. ' (' → logprob: -13.325965881347656
    7. 'time' → logprob: -13.700965881347656
    8. '((' → logprob: -13.700965881347656
    9. '("("' → logprob: -13.700965881347656
    10. '(times' → logprob: -14.075965881347656

Token 117: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ' )' → logprob: -15.250000953674316
    3. ')`' → logprob: -15.500000953674316
    4. '))' → logprob: -16.25
    5. ')
' → logprob: -17.375
    6. ')}' → logprob: -18.875
    7. ')**' → logprob: -19.625
    8. '()' → logprob: -19.75
    9. '`)' → logprob: -19.875
    10. '')' → logprob: -19.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 115
Tokens correctement prédits (1ère position, stricte): 28
Tokens correctement prédits (1ère position, avec adaptation): 29
Tokens correctement prédits (top 10): 77
Précision stricte (1ère position): 24.35%
Précision adaptée (1ère position): 25.22%
Précision (top 10): 66.96%
================================================================================
