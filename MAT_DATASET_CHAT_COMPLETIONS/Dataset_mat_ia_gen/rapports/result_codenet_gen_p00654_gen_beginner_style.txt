================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

while True:
    n = int(input())
    if n == 0:
        break
    b = list(map(int, input().split()))
    # Total elements in a: n + 1
    # number of products: (n+1)*n/2 = length of b
    # a[0] is even, a[1..n] are odd
    # b contains all products a[i]*a[j], i<j

    # Sort b to get smallest products first
    b.sort()
    # The smallest product must be a[0]*a[1]
    # The products between odd elements start from b[n] because the first n products involve a[0]
    # To find a[0], use:
    # a[0] = gcd(b[0], b[1], b[2],...) but safer to pick a method:
    # For n odd integers a[1..n], products among them are b[n..]
    # a[0]*a[1] = b[0], a[0]*a[2] = b[1], a[0]*a[3] = b[2], ...
    # Then a[1]*a[2] = b[n], a[1]*a[3] = b[n+1], etc.

    # We can get a[0] by gcd of first n elements in b
    g = b[0]
    for i in range(1, n):
        g = math.gcd(g, b[i])
    a0 = g

    # Then get odd elements by dividing first n elements by a0
    odds = []
    for i in range(n):
        odds.append(b[i] // a0)
    odds.sort()

    print(a0)
    print(' '.join(str(x) for x in odds))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'while' (ID: 7032)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -8.470901229884475e-05
    2. 'import' → logprob: -10.62508487701416
    3. '```' → logprob: -11.00008487701416
    4. '\' → logprob: -11.25008487701416
    5. '.
' → logprob: -12.62508487701416
    6. 'def' → logprob: -12.75008487701416
    7. '.pi' → logprob: -12.87508487701416
    8. '\n' → logprob: -13.00008487701416
    9. '<|end|>' → logprob: -13.12508487701416
    10. '.e' → logprob: -13.25008487701416

Token 4: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006404604762792587
    2. '  ' → logprob: -5.131404399871826
    3. '"' → logprob: -9.256404876708984
    4. ''' → logprob: -9.256404876708984
    5. ' (' → logprob: -9.756404876708984
    6. 'space' → logprob: -9.881404876708984
    7. ' space' → logprob: -10.256404876708984
    8. '(' → logprob: -10.756404876708984
    9. ' ' → logprob: -11.006404876708984
    10. ' True' → logprob: -11.131404876708984

Token 5: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005667338264174759
    2. ' :' → logprob: -8.000566482543945
    3. '():' → logprob: -8.500566482543945
    4. ':**' → logprob: -11.750566482543945
    5. '):' → logprob: -12.375566482543945
    6. '(:' → logprob: -12.500566482543945
    7. ':
' → logprob: -12.500566482543945
    8. '':' → logprob: -13.500566482543945
    9. '':'' → logprob: -13.500566482543945
    10. '":"' → logprob: -14.250566482543945

Token 6: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16214703023433685
    2. '    ' → logprob: -2.162147045135498
    3. '    
' → logprob: -4.662147045135498
    4. ' ' → logprob: -4.912147045135498
    5. '```' → logprob: -5.037147045135498
    6. '     
' → logprob: -6.162147045135498
    7. '    
    
' → logprob: -6.412147045135498
    8. ' (' → logprob: -6.787147045135498
    9. ' 
' → logprob: -6.912147045135498
    10. '\' → logprob: -7.162147045135498

Token 7: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6522464156150818
    2. 'user' → logprob: -1.2772464752197266
    3. 'n' (adapté à ' n') → logprob: -3.0272464752197266
    4. 'pass' → logprob: -3.5272464752197266
    5. 'input' → logprob: -3.5272464752197266
    6. 'x' → logprob: -3.7772464752197266
    7. ' user' → logprob: -3.9022464752197266
    8. 'inp' → logprob: -4.527246475219727
    9. '```' → logprob: -5.152246475219727
    10. 'i' → logprob: -5.277246475219727

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3369753658771515
    2. '=' → logprob: -1.461975336074829
    3. ' ' → logprob: -3.336975336074829
    4. 'o' → logprob: -4.586975574493408
    5. '.' → logprob: -6.086975574493408
    6. 'u' → logprob: -6.461975574493408
    7. '+' → logprob: -6.711975574493408
    8. '  ' → logprob: -7.336975574493408
    9. '   ' → logprob: -7.586975574493408
    10. 'umber' → logprob: -7.711975574493408

Token 9: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.006365866865962744
    2. 'int' → logprob: -5.631365776062012
    3. ' input' → logprob: -6.006365776062012
    4. ' float' → logprob: -8.381365776062012
    5. 'input' → logprob: -10.256365776062012
    6. ' ' → logprob: -11.381365776062012
    7. '   ' → logprob: -11.756365776062012
    8. ' math' → logprob: -11.881365776062012
    9. '=int' → logprob: -12.381365776062012
    10. 'float' → logprob: -13.256365776062012

Token 10: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.20142202079296112
    2. '(' → logprob: -1.7014219760894775
    3. 'input' → logprob: -12.076421737670898
    4. '(
' → logprob: -13.451421737670898
    5. ' (' → logprob: -14.451421737670898
    6. '()' → logprob: -14.576421737670898
    7. ' input' → logprob: -16.2014217376709
    8. '(in' → logprob: -16.2014217376709
    9. '(math' → logprob: -16.8264217376709
    10. '('' → logprob: -16.9514217376709

Token 11: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04696370288729668
    2. '()' → logprob: -3.171963691711426
    3. ')' → logprob: -6.421963691711426
    4. '())' → logprob: -7.046963691711426
    5. '("("' → logprob: -7.546963691711426
    6. '('' → logprob: -7.671963691711426
    7. '(
' → logprob: -8.421963691711426
    8. '(""))' → logprob: -9.671963691711426
    9. '("")' → logprob: -10.046963691711426
    10. ' ' → logprob: -11.046963691711426

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38684868812561035
    2. ' if' → logprob: -2.1368486881256104
    3. '```' → logprob: -2.1368486881256104
    4. ')' → logprob: -3.3868486881256104
    5. '    ' → logprob: -4.136848449707031
    6. ' ' → logprob: -4.386848449707031
    7. '``' → logprob: -5.261848449707031
    8. '    
' → logprob: -5.386848449707031
    9. '<|end|>' → logprob: -6.511848449707031
    10. '     
' → logprob: -6.511848449707031

Token 13: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4420919120311737
    2. '   ' → logprob: -1.192091941833496
    3. ' ' → logprob: -3.567091941833496
    4. '    ' → logprob: -4.442091941833496
    5. 'if' (adapté à ' if') → logprob: -4.942091941833496
    6. '```' → logprob: -6.067091941833496
    7. ')' → logprob: -6.192091941833496
    8. '  ' → logprob: -7.442091941833496
    9. '<|end|>' → logprob: -8.442091941833496
    10. '    
' → logprob: -8.567091941833496

Token 14: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0026640042196959257
    2. ' not' → logprob: -6.252664089202881
    3. ' ' → logprob: -7.502664089202881
    4. 'n' → logprob: -8.627663612365723
    5. 'not' → logprob: -13.252663612365723
    6. ' ' → logprob: -13.377663612365723
    7. '  ' → logprob: -15.377663612365723
    8. '	n' → logprob: -15.627663612365723
    9. '(n' → logprob: -16.12766456604004
    10. ')' → logprob: -16.50266456604004

Token 15: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -1.0727577209472656
    2. ' <=' → logprob: -1.0727577209472656
    3. ' ==' → logprob: -1.3227577209472656
    4. ' >' → logprob: -3.4477577209472656
    5. '==' → logprob: -4.947757720947266
    6. '<' → logprob: -5.572757720947266
    7. '<=' → logprob: -6.197757720947266
    8. '>' → logprob: -6.572757720947266
    9. ' >=' → logprob: -6.572757720947266
    10. ' ' → logprob: -6.572757720947266

Token 16: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03364696726202965
    2. '0' → logprob: -3.408647060394287
    3. ' -' → logprob: -14.908646583557129
    4. ' ' → logprob: -14.908646583557129
    5. '  ' → logprob: -15.783646583557129
    6. ')' → logprob: -16.533647537231445
    7. '<|end|>' → logprob: -16.846147537231445
    8. '1' → logprob: -16.971147537231445
    9. '-' → logprob: -17.096147537231445
    10. '_' → logprob: -17.346147537231445

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00045593673712573946
    2. ' ' → logprob: -7.750455856323242
    3. '-' → logprob: -10.625455856323242
    4. ' -' → logprob: -14.250455856323242
    5. '1' → logprob: -16.625455856323242
    6. '42' → logprob: -16.875455856323242
    7. '```' → logprob: -17.250455856323242
    8. '   ' → logprob: -17.500455856323242
    9. '=' → logprob: -17.750455856323242
    10. '  ' → logprob: -17.812955856323242

Token 18: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000762691895943135
    2. ':
' → logprob: -7.500762462615967
    3. '   ' → logprob: -8.750762939453125
    4. '       ' → logprob: -10.375762939453125
    5. ' :' → logprob: -11.250762939453125
    6. '    ' → logprob: -12.250762939453125
    7. '     ' → logprob: -14.875762939453125
    8. '      ' → logprob: -14.875762939453125
    9. ' break' → logprob: -15.000762939453125
    10. ':return' → logprob: -15.375762939453125

Token 19: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00036918214755132794
    2. '   ' → logprob: -8.37536907196045
    3. ':' → logprob: -10.12536907196045
    4. '    ' → logprob: -10.25036907196045
    5. ' break' → logprob: -10.37536907196045
    6. '      ' → logprob: -11.87536907196045
    7. '     ' → logprob: -12.00036907196045
    8. ' ' → logprob: -12.75036907196045
    9. '        ' → logprob: -13.00036907196045
    10. '	break' → logprob: -13.12536907196045

Token 20: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09045306593179703
    2. ' break' → logprob: -2.4654531478881836
    3. '   ' → logprob: -7.465453147888184
    4. '\n' → logprob: -7.715453147888184
    5. 'break' (adapté à ' break') → logprob: -8.340453147888184
    6. '	break' → logprob: -8.590453147888184
    7. '    ' → logprob: -11.090453147888184
    8. '\t' → logprob: -11.715453147888184
    9. '           ' → logprob: -12.215453147888184
    10. ' ' → logprob: -12.340453147888184

Token 21: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13516095280647278
    2. '    
' → logprob: -3.0101609230041504
    3. '\n' → logprob: -3.6351609230041504
    4. '<|end|>' → logprob: -4.76016092300415
    5. '\' → logprob: -4.88516092300415
    6. '```' → logprob: -5.01016092300415
    7. '    ' → logprob: -5.26016092300415
    8. ' 
' → logprob: -5.38516092300415
    9. ':' → logprob: -5.63516092300415
    10. '\r' → logprob: -5.76016092300415

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20033949613571167
    2. ':' → logprob: -1.9503395557403564
    3. '    
' → logprob: -4.325339317321777
    4. ')' → logprob: -4.575339317321777
    5. '<|end|>' → logprob: -5.200339317321777
    6. '```' → logprob: -6.325339317321777
    7. '\n' → logprob: -6.700339317321777
    8. '\r' → logprob: -7.075339317321777
    9. ',' → logprob: -7.200339317321777
    10. '  
' → logprob: -7.325339317321777

Token 23: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2622520625591278
    2. ' ' → logprob: -2.63725209236145
    3. '    ' → logprob: -3.01225209236145
    4. '    
' → logprob: -3.26225209236145
    5. ' 
' → logprob: -4.137251853942871
    6. '     
' → logprob: -5.012251853942871
    7. '   
' → logprob: -5.262251853942871
    8. 'result' → logprob: -5.387251853942871
    9. ')' → logprob: -5.637251853942871
    10. 's' → logprob: -5.762251853942871

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22843368351459503
    2. '=' → logprob: -2.728433609008789
    3. 'ase' → logprob: -3.103433609008789
    4. '**' → logprob: -3.228433609008789
    5. ' **' → logprob: -4.478433609008789
    6. 'i' → logprob: -4.978433609008789
    7. ' ' → logprob: -5.478433609008789
    8. 'in' → logprob: -5.603433609008789
    9. '_' → logprob: -5.728433609008789
    10. 'a' → logprob: -5.728433609008789

Token 25: ' list' (ID: 1562)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.6411495804786682
    2. 'math' → logprob: -1.5161495208740234
    3. 'int' → logprob: -2.1411495208740234
    4. ' int' → logprob: -2.2661495208740234
    5. ' n' → logprob: -4.516149520874023
    6. ' ' → logprob: -5.391149520874023
    7. 'n' → logprob: -5.641149520874023
    8. ' [' → logprob: -5.766149520874023
    9. '1' → logprob: -5.891149520874023
    10. ' []' → logprob: -6.141149520874023

Token 26: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.16954277455806732
    2. '(' → logprob: -1.9195427894592285
    3. '(range' → logprob: -4.7945427894592285
    4. '(math' → logprob: -7.2945427894592285
    5. '(input' → logprob: -8.54454231262207
    6. '(int' → logprob: -9.66954231262207
    7. '()' → logprob: -10.79454231262207
    8. '(
' → logprob: -11.41954231262207
    9. '(filter' → logprob: -11.91954231262207
    10. '(re' → logprob: -12.54454231262207

Token 27: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0020932804327458143
    2. '(' → logprob: -6.252093315124512
    3. 'int' → logprob: -10.002093315124512
    4. '(str' → logprob: -10.502093315124512
    5. ')' → logprob: -10.752093315124512
    6. '(float' → logprob: -11.127093315124512
    7. '(math' → logprob: -11.252093315124512
    8. '(lambda' → logprob: -11.377093315124512
    9. '<int' → logprob: -11.627093315124512
    10. ',int' → logprob: -11.877093315124512

Token 28: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.6186091303825378
    2. '(input' → logprob: -0.8686091303825378
    3. ',' → logprob: -3.2436091899871826
    4. '(' → logprob: -5.9936089515686035
    5. 'input' → logprob: -9.243609428405762
    6. ' ,' → logprob: -9.368609428405762
    7. ',(' → logprob: -10.368609428405762
    8. ' (' → logprob: -11.368609428405762
    9. ' input' → logprob: -11.993609428405762
    10. '=input' → logprob: -12.618609428405762

Token 29: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12708790600299835
    2. ' input' → logprob: -2.1270878314971924
    3. ',input' → logprob: -9.252087593078613
    4. '(input' → logprob: -10.252087593078613
    5. '	input' → logprob: -12.377087593078613
    6. ')' → logprob: -12.377087593078613
    7. '=input' → logprob: -12.627087593078613
    8. ' ' → logprob: -12.877087593078613
    9. '   ' → logprob: -13.127087593078613
    10. '[input' → logprob: -13.377087593078613

Token 30: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.930552313453518e-05
    2. '()' → logprob: -10.000049591064453
    3. ' ().' → logprob: -13.375049591064453
    4. '()))' → logprob: -13.750049591064453
    5. '(' → logprob: -15.000049591064453
    6. '())' → logprob: -15.250049591064453
    7. ')' → logprob: -15.875049591064453
    8. '()
' → logprob: -16.000049591064453
    9. '   ' → logprob: -16.500049591064453
    10. '))' → logprob: -16.750049591064453

Token 31: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0024936108384281397
    2. 'strip' → logprob: -6.002493381500244
    3. ' split' → logprob: -11.752493858337402
    4. 'rstrip' → logprob: -11.877493858337402
    5. '(split' → logprob: -12.752493858337402
    6. 'spl' → logprob: -16.002492904663086
    7. ' strip' → logprob: -16.252492904663086
    8. ')' → logprob: -17.877492904663086
    9. '.split' → logprob: -18.377492904663086
    10. ' ' → logprob: -18.877492904663086

Token 32: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.4012109637260437
    2. '))' → logprob: -1.2762110233306885
    3. '())' → logprob: -3.5262110233306885
    4. '()' → logprob: -4.526210784912109
    5. ')' → logprob: -4.651210784912109
    6. '(' → logprob: -6.651210784912109
    7. ')))' → logprob: -9.15121078491211
    8. '()))
' → logprob: -9.52621078491211
    9. '())))' → logprob: -10.15121078491211
    10. ''))' → logprob: -10.90121078491211

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04835625737905502
    2. ')' → logprob: -4.548356056213379
    3. '[' → logprob: -4.548356056213379
    4. '    
' → logprob: -4.673356056213379
    5. '```' → logprob: -5.798356056213379
    6. '    ' → logprob: -6.173356056213379
    7. ',' → logprob: -6.423356056213379
    8. ' ' → logprob: -6.673356056213379
    9. ' 
' → logprob: -7.173356056213379
    10. '
' → logprob: -7.298356056213379

Token 34: ' #' (ID: 1069)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.6514458656311035
    2. '   ' → logprob: -1.6514458656311035
    3. 's' → logprob: -1.7764458656311035
    4. 'm' → logprob: -2.7764458656311035
    5. 'd' → logprob: -3.1514458656311035
    6. 'c' → logprob: -3.4014458656311035
    7. 'b' → logprob: -3.6514458656311035
    8. 'diff' → logprob: -3.6514458656311035
    9. 'mean' → logprob: -3.9014458656311035
    10. 'sum' → logprob: -4.0264458656311035

Token 35: ' Total' (ID: 17565)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.6551098823547363
    2. ' mean' → logprob: -1.6551098823547363
    3. ' sum' → logprob: -1.9051098823547363
    4. ' median' → logprob: -2.2801098823547363
    5. ' max' → logprob: -2.7801098823547363
    6. ' avg' → logprob: -3.5301098823547363
    7. ' total' → logprob: -3.7801098823547363
    8. ' cnt' → logprob: -3.7801098823547363
    9. ' g' → logprob: -4.030109882354736
    10. 's' → logprob: -4.155109882354736

Token 36: ' elements' (ID: 8632)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1216455027461052
    2. '_sum' → logprob: -2.871645450592041
    3. '=' → logprob: -3.871645450592041
    4. 'sum' → logprob: -4.496645450592041
    5. '_' → logprob: -4.996645450592041
    6. '_b' → logprob: -5.746645450592041
    7. 's' → logprob: -5.871645450592041
    8. '_count' → logprob: -6.996645450592041
    9. '_votes' → logprob: -6.996645450592041
    10. '_distance' → logprob: -7.121645450592041

Token 37: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10547460615634918
    2. '=' → logprob: -2.3554747104644775
    3. ':' → logprob: -6.230474472045898
    4. '   ' → logprob: -6.480474472045898
    5. ')' → logprob: -7.855474472045898
    6. ' ' → logprob: -7.980474472045898
    7. '_' → logprob: -8.105474472045898
    8. ' :' → logprob: -8.605474472045898
    9. '(' → logprob: -8.980474472045898
    10. '    ' → logprob: -9.105474472045898

Token 38: ' a' (ID: 261)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4773179590702057
    2. ' b' → logprob: -0.9773179292678833
    3. ' the' → logprob: -5.977317810058594
    4. 'the' → logprob: -7.477317810058594
    5. 'a' → logprob: -10.477317810058594
    6. ' list' → logprob: -10.852317810058594
    7. 'list' → logprob: -10.852317810058594
    8. ' array' → logprob: -10.977317810058594
    9. ' a' → logprob: -11.227317810058594
    10. ' ' → logprob: -11.602317810058594

Token 39: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0915222018957138
    2. '=' → logprob: -2.591522216796875
    3. ':' → logprob: -5.341522216796875
    4. ')' → logprob: -6.466522216796875
    5. '[' → logprob: -6.966522216796875
    6. ' ' → logprob: -6.966522216796875
    7. ',' → logprob: -7.466522216796875
    8. ' :' → logprob: -7.591522216796875
    9. '   ' → logprob: -7.841522216796875
    10. ' +=' → logprob: -7.841522216796875

Token 40: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.053774554282426834
    2. 'n' → logprob: -3.67877459526062
    3. ' len' → logprob: -3.92877459526062
    4. ' ' → logprob: -5.803774356842041
    5. 'len' → logprob: -6.178774356842041
    6. ' sum' → logprob: -6.553774356842041
    7. '    ' → logprob: -7.803774356842041
    8. 'sum' → logprob: -8.0537748336792
    9. '   ' → logprob: -10.4287748336792
    10. ' m' → logprob: -10.9287748336792

Token 41: ' +' (ID: 659)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2107148915529251
    2. ' a' → logprob: -2.210714817047119
    3. '   ' → logprob: -2.710714817047119
    4. '<|end|>' → logprob: -5.585714817047119
    5. '```' → logprob: -6.460714817047119
    6. '    
' → logprob: -6.710714817047119
    7. ' 
' → logprob: -6.960714817047119
    8. ')' → logprob: -7.210714817047119
    9. 'n' → logprob: -7.210714817047119
    10. '
' → logprob: -7.335714817047119

Token 42: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0194852277636528
    2. ' ' → logprob: -4.144484996795654
    3. 'n' → logprob: -6.894484996795654
    4. ' n' → logprob: -6.894484996795654
    5. '2' → logprob: -7.394484996795654
    6. 'len' → logprob: -8.144485473632812
    7. ' len' → logprob: -9.269485473632812
    8. '(n' → logprob: -9.269485473632812
    9. '(len' → logprob: -10.144485473632812
    10. '3' → logprob: -10.269485473632812

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.022588012740015984
    2. 'n' → logprob: -4.647587776184082
    3. 'len' → logprob: -5.522587776184082
    4. '2' → logprob: -5.772587776184082
    5. '(n' → logprob: -6.022587776184082
    6. ' ' → logprob: -7.272587776184082
    7. '(len' → logprob: -7.397587776184082
    8. 'sum' → logprob: -7.772587776184082
    9. 'math' → logprob: -8.022587776184082
    10. '3' → logprob: -8.147587776184082

Token 44: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6971637010574341
    2. '   ' → logprob: -1.822163701057434
    3. '<|end|>' → logprob: -1.822163701057434
    4. '
' → logprob: -2.0721635818481445
    5. ' ' → logprob: -3.9471635818481445
    6. '    
' → logprob: -4.9471635818481445
    7. ' a' → logprob: -4.9471635818481445
    8. ' 
' → logprob: -5.5721635818481445
    9. ',' → logprob: -5.9471635818481445
    10. 'n' → logprob: -6.5721635818481445

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48960253596305847
    2. '
' → logprob: -1.6146025657653809
    3. 'a' → logprob: -1.8646025657653809
    4. '<|end|>' → logprob: -3.864602565765381
    5. '    
' → logprob: -5.614602565765381
    6. '```' → logprob: -5.989602565765381
    7. 'n' → logprob: -6.864602565765381
    8. ' a' → logprob: -6.864602565765381
    9. '[a' → logprob: -7.614602565765381
    10. ',' → logprob: -7.739602565765381

Token 46: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03446006774902344
    2. ' a' → logprob: -4.034460067749023
    3. '   ' → logprob: -4.159460067749023
    4. '```' → logprob: -8.534460067749023
    5. '    
' → logprob: -9.784460067749023
    6. ' ' → logprob: -9.784460067749023
    7. 's' → logprob: -10.034460067749023
    8. '
' → logprob: -10.534460067749023
    9. 'n' → logprob: -10.659460067749023
    10. ',' → logprob: -10.784460067749023

Token 47: ' number' (ID: 2086)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13327524065971375
    2. ' a' → logprob: -2.133275270462036
    3. 's' → logprob: -7.008275032043457
    4. 'c' → logprob: -7.383275032043457
    5. 'd' → logprob: -7.883275032043457
    6. ' s' → logprob: -8.133275032043457
    7. 'm' → logprob: -8.320775032043457
    8. ' c' → logprob: -8.570775032043457
    9. ' sum' → logprob: -8.633275032043457
    10. 'sum' → logprob: -8.633275032043457

Token 48: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5536942481994629
    2. '_of' → logprob: -1.053694248199463
    3. '_elements' → logprob: -3.678694248199463
    4. '_s' → logprob: -4.053694248199463
    5. ' =' → logprob: -4.428694248199463
    6. '_a' → logprob: -5.553694248199463
    7. ' of' → logprob: -5.803694248199463
    8. '_list' → logprob: -6.303694248199463
    9. '_sum' → logprob: -6.553694248199463
    10. '_' → logprob: -6.803694248199463

Token 49: ' products' (ID: 3891)
  Prédit: ' elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' elements' → logprob: -2.064542055130005
    2. 'elements' → logprob: -2.189542055130005
    3. ' b' → logprob: -2.314542055130005
    4. ' ' → logprob: -2.814542055130005
    5. 'pairs' → logprob: -2.939542055130005
    6. ' spaces' → logprob: -3.064542055130005
    7. 'spaces' → logprob: -3.064542055130005
    8. ' pairs' → logprob: -3.064542055130005
    9. 'dif' → logprob: -3.189542055130005
    10. 'div' → logprob: -3.314542055130005

Token 50: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05716745927929878
    2. '=' → logprob: -4.5571675300598145
    3. ' of' → logprob: -4.5571675300598145
    4. ' ' → logprob: -4.5571675300598145
    5. 's' → logprob: -4.9321675300598145
    6. ' ,' → logprob: -6.5571675300598145
    7. ' s' → logprob: -6.5571675300598145
    8. 'a' → logprob: -6.5571675300598145
    9. '<|end|>' → logprob: -6.5571675300598145
    10. '<|end|>' → logprob: -6.5571675300598145

Token 51: ' (' (ID: 350)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1631861925125122
    2. 'n' → logprob: -1.9131861925125122
    3. ' ' → logprob: -5.913186073303223
    4. '(n' → logprob: -10.038186073303223
    5. '	n' → logprob: -10.538186073303223
    6. ' (' → logprob: -10.538186073303223
    7. ' math' → logprob: -10.663186073303223
    8. '`' → logprob: -11.038186073303223
    9. '```' → logprob: -11.163186073303223
    10. '<|end|>' → logprob: -11.163186073303223

Token 52: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10094252228736877
    2. ' n' → logprob: -2.350942611694336
    3. '(n' → logprob: -8.225942611694336
    4. ')n' → logprob: -8.725942611694336
    5. ' (' → logprob: -9.225942611694336
    6. ')' → logprob: -9.225942611694336
    7. ' ' → logprob: -9.850942611694336
    8. '(' → logprob: -10.725942611694336
    9. ' )' → logprob: -11.850942611694336
    10. '   ' → logprob: -11.975942611694336

Token 53: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.29270485043525696
    2. ' +' → logprob: -1.5427048206329346
    3. ' *' → logprob: -3.7927048206329346
    4. ')' → logprob: -4.792705059051514
    5. '*' → logprob: -5.167705059051514
    6. ' )' → logprob: -6.292705059051514
    7. '*(' → logprob: -7.042705059051514
    8. ' -' → logprob: -9.042704582214355
    9. '-' → logprob: -9.042704582214355
    10. '+)' → logprob: -9.417704582214355

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002018570899963379
    2. ' ' → logprob: -6.502018451690674
    3. '2' → logprob: -7.752018451690674
    4. '+' → logprob: -9.502018928527832
    5. ' +' → logprob: -12.502018928527832
    6. ')' → logprob: -13.502018928527832
    7. '  ' → logprob: -13.627018928527832
    8. '   ' → logprob: -13.752018928527832
    9. '3' → logprob: -14.127018928527832
    10. '```' → logprob: -14.377018928527832

Token 55: ')*' (ID: 11043)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9696714878082275
    2. ')' → logprob: -1.4696714878082275
    3. ' *' → logprob: -1.5946714878082275
    4. '+' → logprob: -1.9696714878082275
    5. ' +' → logprob: -3.5946714878082275
    6. '*(' → logprob: -4.469671249389648
    7. ')*(' → logprob: -5.719671249389648
    8. ')*' → logprob: -6.219671249389648
    9. ' )' → logprob: -6.719671249389648
    10. ' ' → logprob: -7.094671249389648

Token 56: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.26510941982269287
    2. ' n' → logprob: -1.8901094198226929
    3. '(n' → logprob: -2.7651095390319824
    4. ' (' → logprob: -4.515109539031982
    5. '(' → logprob: -4.890109539031982
    6. ' ' → logprob: -8.765109062194824
    7. '2' → logprob: -9.890109062194824
    8. '_n' → logprob: -10.015109062194824
    9. '	n' → logprob: -10.640109062194824
    10. '```' → logprob: -10.765109062194824

Token 57: '/' (ID: 14)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17176516354084015
    2. '
' → logprob: -2.671765089035034
    3. '    
' → logprob: -3.421765089035034
    4. 'a' → logprob: -3.921765089035034
    5. '<|end|>' → logprob: -4.796765327453613
    6. ')' → logprob: -5.421765327453613
    7. '```' → logprob: -5.796765327453613
    8. '  
' → logprob: -6.171765327453613
    9. '    ' → logprob: -6.171765327453613
    10. 'n' → logprob: -6.296765327453613

Token 58: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001171056181192398
    2. ' ' → logprob: -6.751171112060547
    3. '1' → logprob: -15.001171112060547
    4. '```' → logprob: -15.251171112060547
    5. '  ' → logprob: -15.501171112060547
    6. '   ' → logprob: -16.876171112060547
    7. '<|end|>' → logprob: -17.626171112060547
    8. '۲' → logprob: -17.938671112060547
    9. '
' → logprob: -18.063671112060547
    10. '.' → logprob: -18.438671112060547

Token 59: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026802605018019676
    2. 'a' → logprob: -4.5268025398254395
    3. '    
' → logprob: -4.6518025398254395
    4. '
' → logprob: -6.2768025398254395
    5. 's' → logprob: -7.5268025398254395
    6. '<|end|>' → logprob: -7.7768025398254395
    7. '    ' → logprob: -7.9018025398254395
    8. ' for' → logprob: -7.9018025398254395
    9. '  ' → logprob: -8.151803016662598
    10. 'n' → logprob: -8.151803016662598

Token 60: ' length' (ID: 5517)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.31264328956604004
    2. ' ' → logprob: -2.06264328956604
    3. ' n' → logprob: -2.81264328956604
    4. ' ((' → logprob: -2.93764328956604
    5. '(n' → logprob: -3.81264328956604
    6. 'n' → logprob: -6.187643051147461
    7. '((' → logprob: -6.312643051147461
    8. '(' → logprob: -6.937643051147461
    9. '<|end|>' → logprob: -7.937643051147461
    10. '  ' → logprob: -8.312643051147461

Token 61: ' of' (ID: 328)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.869463324546814
    2. '<|end|>' → logprob: -1.119463324546814
    3. '   ' → logprob: -3.2444634437561035
    4. ')' → logprob: -3.6194634437561035
    5. '\' → logprob: -3.6194634437561035
    6. '(' → logprob: -3.8694634437561035
    7. '
' → logprob: -3.9944634437561035
    8. ' 
' → logprob: -4.3694634437561035
    9. 'a' → logprob: -4.3694634437561035
    10. '<|end|>' → logprob: -4.7444634437561035

Token 62: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.38701847195625305
    2. 'b' → logprob: -1.1370184421539307
    3. ' ' → logprob: -9.637018203735352
    4. '(b' → logprob: -10.637018203735352
    5. ' a' → logprob: -10.762018203735352
    6. 'a' → logprob: -10.887018203735352
    7. '<|end|>' → logprob: -12.262018203735352
    8. ' (' → logprob: -13.012018203735352
    9. '  ' → logprob: -13.137018203735352
    10. '	b' → logprob: -13.762018203735352

Token 63: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6949309706687927
    2. ' 
' → logprob: -1.6949310302734375
    3. 'n' → logprob: -1.8199310302734375
    4. '
' → logprob: -2.6949310302734375
    5. '\' → logprob: -4.4449310302734375
    6. ' ' → logprob: -4.4449310302734375
    7. '<|end|>' → logprob: -4.8199310302734375
    8. '    
' → logprob: -4.9449310302734375
    9. '     
' → logprob: -5.1949310302734375
    10. 'c' → logprob: -5.4449310302734375

Token 64: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16763129830360413
    2. '   ' → logprob: -1.9176312685012817
    3. '    
' → logprob: -6.292631149291992
    4. ' a' → logprob: -6.542631149291992
    5. 's' → logprob: -6.917631149291992
    6. 'n' → logprob: -7.167631149291992
    7. 'c' → logprob: -7.667631149291992
    8. '```' → logprob: -7.917631149291992
    9. 'result' → logprob: -8.667631149291992
    10. '
' → logprob: -8.917631149291992

Token 65: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09286987781524658
    2. '   ' → logprob: -3.342869758605957
    3. '
' → logprob: -4.092869758605957
    4. '    
' → logprob: -4.717869758605957
    5. ' 
' → logprob: -4.717869758605957
    6. ' a' → logprob: -5.092869758605957
    7. 'n' → logprob: -5.592869758605957
    8. '<|end|>' → logprob: -5.842869758605957
    9. '```' → logprob: -6.842869758605957
    10. '     
' → logprob: -7.342869758605957

Token 66: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.21423819661140442
    2. ' a' → logprob: -1.964238166809082
    3. 's' → logprob: -4.964238166809082
    4. 'for' → logprob: -5.339238166809082
    5. 'from' → logprob: -5.464238166809082
    6. '#' → logprob: -5.964238166809082
    7. 'dp' → logprob: -6.089238166809082
    8. ' for' → logprob: -6.214238166809082
    9. ' s' → logprob: -6.464238166809082
    10. 'c' → logprob: -6.589238166809082

Token 67: '[' (ID: 58)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008595546707510948
    2. '=' → logprob: -5.3835954666137695
    3. ' ' → logprob: -6.3835954666137695
    4. '_length' → logprob: -7.0085954666137695
    5. '_' → logprob: -7.1335954666137695
    6. '_len' → logprob: -8.00859546661377
    7. '[' → logprob: -9.50859546661377
    8. ',' → logprob: -11.13359546661377
    9. '_size' → logprob: -11.25859546661377
    10. ' =[' → logprob: -11.25859546661377

Token 68: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011327913030982018
    2. ' ' → logprob: -4.636327743530273
    3. ']' → logprob: -7.261327743530273
    4. ')' → logprob: -8.761327743530273
    5. ' ]' → logprob: -8.886327743530273
    6. 'i' → logprob: -9.136327743530273
    7. 'a' → logprob: -9.511327743530273
    8. '1' → logprob: -9.511327743530273
    9. '[' → logprob: -9.761327743530273
    10. '_' → logprob: -10.511327743530273

Token 69: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04379979521036148
    2. '=' → logprob: -3.418799877166748
    3. ',' → logprob: -5.543799877166748
    4. ')' → logprob: -5.793799877166748
    5. ' ' → logprob: -6.793799877166748
    6. '+' → logprob: -7.293799877166748
    7. ' +' → logprob: -8.16879940032959
    8. ']' → logprob: -8.41879940032959
    9. ' )' → logprob: -8.79379940032959
    10. ' ,' → logprob: -9.29379940032959

Token 70: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008051242679357529
    2. ' ' → logprob: -5.25805139541626
    3. '=' → logprob: -6.63305139541626
    4. ',' → logprob: -7.38305139541626
    5. '_' → logprob: -8.383050918579102
    6. 'a' → logprob: -9.383050918579102
    7. '0' → logprob: -9.508050918579102
    8. ' ,' → logprob: -9.508050918579102
    9. '<|end|>' → logprob: -9.508050918579102
    10. 's' → logprob: -9.633050918579102

Token 71: ' even' (ID: 1952)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4341948330402374
    2. ' math' → logprob: -1.559194803237915
    3. ' b' → logprob: -2.934194803237915
    4. 'math' → logprob: -3.809194803237915
    5. ' int' → logprob: -4.059195041656494
    6. ' None' → logprob: -4.434195041656494
    7. '0' → logprob: -4.559195041656494
    8. '1' → logprob: -4.809195041656494
    9. 'int' → logprob: -5.059195041656494
    10. 'b' → logprob: -5.309195041656494

Token 72: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3101639747619629
    2. '<|end|>' → logprob: -2.435163974761963
    3. '   ' → logprob: -2.560163974761963
    4. '
' → logprob: -2.685163974761963
    5. ' ' → logprob: -4.185163974761963
    6. ' 
' → logprob: -5.310163974761963
    7. ' a' → logprob: -5.810163974761963
    8. '    
' → logprob: -5.810163974761963
    9. 'n' → logprob: -6.310163974761963
    10. '  ' → logprob: -7.185163974761963

Token 73: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10067857801914215
    2. '   ' → logprob: -3.3506786823272705
    3. 'a' → logprob: -3.6006786823272705
    4. '    ' → logprob: -4.100678443908691
    5. ' a' → logprob: -4.975678443908691
    6. '<|end|>' → logprob: -5.350678443908691
    7. '[' → logprob: -7.100678443908691
    8. '  ' → logprob: -7.350678443908691
    9. '[a' → logprob: -7.600678443908691
    10. ' )' → logprob: -7.725678443908691

Token 74: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00021760274830739945
    2. '0' → logprob: -9.50021743774414
    3. '<|end|>' → logprob: -10.25021743774414
    4. ' =' → logprob: -10.62521743774414
    5. '_' → logprob: -11.12521743774414
    6. ' ' → logprob: -11.25021743774414
    7. '<|end|>' → logprob: -11.50021743774414
    8. ' [' → logprob: -11.87521743774414
    9. '=' → logprob: -12.00021743774414
    10. 's' → logprob: -12.37521743774414

Token 75: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001261067809537053
    2. ' ' → logprob: -7.001261234283447
    3. '1' → logprob: -8.876260757446289
    4. '[' → logprob: -9.126260757446289
    5. ']' → logprob: -9.876260757446289
    6. '   ' → logprob: -11.251260757446289
    7. ')' → logprob: -11.626260757446289
    8. '_' → logprob: -12.626260757446289
    9. 'i' → logprob: -12.688760757446289
    10. ' ]' → logprob: -12.751260757446289

Token 76: '..' (ID: 485)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002968072658404708
    2. ' ]' → logprob: -7.127967834472656
    3. ']=' → logprob: -7.502967834472656
    4. ' is' → logprob: -7.627967834472656
    5. '[' → logprob: -7.627967834472656
    6. '0' → logprob: -9.127967834472656
    7. '=' → logprob: -9.377967834472656
    8. ')' → logprob: -9.627967834472656
    9. ' =' → logprob: -9.877967834472656
    10. '#' → logprob: -10.002967834472656

Token 77: 'n' (ID: 77)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.34097957611083984
    2. '0' → logprob: -2.84097957611084
    3. ':' → logprob: -2.84097957611084
    4. ' ]' → logprob: -3.21597957611084
    5. ' ' → logprob: -3.46597957611084
    6. ':]' → logprob: -3.46597957611084
    7. '...' → logprob: -4.84097957611084
    8. ' :' → logprob: -4.96597957611084
    9. ' :]' → logprob: -4.96597957611084
    10. ' =' → logprob: -5.09097957611084

Token 78: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0034756974782794714
    2. ' ]' → logprob: -6.253475666046143
    3. ']=' → logprob: -7.503475666046143
    4. ':]' → logprob: -8.2534761428833
    5. '-' → logprob: -8.5034761428833
    6. ':' → logprob: -9.3784761428833
    7. '[' → logprob: -9.7534761428833
    8. ' is' → logprob: -10.1284761428833
    9. ' -' → logprob: -10.3784761428833
    10. ' ' → logprob: -10.6284761428833

Token 79: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05813126638531685
    2. '=' → logprob: -3.558131217956543
    3. '<|end|>' → logprob: -4.183131217956543
    4. ' ' → logprob: -5.308131217956543
    5. '[' → logprob: -5.808131217956543
    6. '   ' → logprob: -6.808131217956543
    7. 'a' → logprob: -7.433131217956543
    8. ',' → logprob: -7.433131217956543
    9. ' =
' → logprob: -7.558131217956543
    10. ':' → logprob: -7.933131217956543

Token 80: ' odd' (ID: 14210)
  Prédit: ' odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' odd' → logprob: -0.1753612756729126
    2. ' positive' → logprob: -2.800361156463623
    3. ' even' → logprob: -3.050361156463623
    4. ' all' → logprob: -3.675361156463623
    5. ' ' → logprob: -4.925361156463623
    6. 'odd' → logprob: -5.050361156463623
    7. ' unknown' → logprob: -5.800361156463623
    8. ' prime' → logprob: -6.300361156463623
    9. '1' → logprob: -6.675361156463623
    10. ' integers' → logprob: -7.050361156463623

Token 81: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8384795784950256
    2. '
' → logprob: -0.8384795784950256
    3. '   ' → logprob: -2.963479518890381
    4. '\' → logprob: -3.963479518890381
    5. '<|end|>' → logprob: -3.963479518890381
    6. ' 
' → logprob: -4.713479518890381
    7. '```' → logprob: -5.088479518890381
    8. '    
' → logprob: -5.088479518890381
    9. ' a' → logprob: -5.338479518890381
    10. ' ' → logprob: -5.463479518890381

Token 82: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.644950807094574
    2. '   ' → logprob: -0.769950807094574
    3. ' a' → logprob: -5.394950866699219
    4. '<|end|>' → logprob: -5.894950866699219
    5. '```' → logprob: -6.769950866699219
    6. '    
' → logprob: -6.894950866699219
    7. '
' → logprob: -7.394950866699219
    8. '    ' → logprob: -8.019950866699219
    9. ' ' → logprob: -8.269950866699219
    10. 'n' → logprob: -8.269950866699219

Token 83: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6445218920707703
    2. '   ' → logprob: -0.7695218920707703
    3. ' a' → logprob: -4.769521713256836
    4. '    ' → logprob: -7.394521713256836
    5. ' ' → logprob: -8.269521713256836
    6. '  ' → logprob: -8.394521713256836
    7. '```' → logprob: -8.394521713256836
    8. 'n' → logprob: -8.519521713256836
    9. 's' → logprob: -8.644521713256836
    10. '    
' → logprob: -8.644521713256836

Token 84: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.15376263856887817
    2. ' a' → logprob: -2.1537625789642334
    3. '   ' → logprob: -4.0287628173828125
    4. ' ' → logprob: -5.7787628173828125
    5. ' #' → logprob: -6.5287628173828125
    6. '```' → logprob: -7.9037628173828125
    7. '    ' → logprob: -8.028762817382812
    8. ' ```' → logprob: -8.153762817382812
    9. 'n' → logprob: -8.278762817382812
    10. ' 
' → logprob: -8.278762817382812

Token 85: ' contains' (ID: 8895)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17045316100120544
    2. '_' → logprob: -2.2954530715942383
    3. '.' → logprob: -4.045453071594238
    4. '=' → logprob: -4.420453071594238
    5. '.sort' → logprob: -4.795453071594238
    6. ' ' → logprob: -4.795453071594238
    7. '[' → logprob: -5.795453071594238
    8. '.append' → logprob: -6.670453071594238
    9. 's' → logprob: -6.920453071594238
    10. '[:]' → logprob: -7.545453071594238

Token 86: ' all' (ID: 722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.35298994183540344
    2. '<|end|>' → logprob: -1.852989912033081
    3. '[' → logprob: -2.727989912033081
    4. ' [' → logprob: -3.477989912033081
    5. '(' → logprob: -4.35299015045166
    6. ' n' → logprob: -5.47799015045166
    7. ' (' → logprob: -5.47799015045166
    8. ' a' → logprob: -5.85299015045166
    9. ' b' → logprob: -5.97799015045166
    10. '<|end|>' → logprob: -6.10299015045166

Token 87: ' products' (ID: 3891)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.37472033500671387
    2. '<|end|>' → logprob: -1.4997203350067139
    3. '(' → logprob: -3.749720335006714
    4. '_' → logprob: -4.499720573425293
    5. '  ' → logprob: -4.624720573425293
    6. '<|end|>' → logprob: -4.749720573425293
    7. ' (' → logprob: -5.124720573425293
    8. '[' → logprob: -5.249720573425293
    9. '    ' → logprob: -5.749720573425293
    10. 's' → logprob: -6.124720573425293

Token 88: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14827865362167358
    2. 'a' → logprob: -3.0232787132263184
    3. ' ' → logprob: -3.5232787132263184
    4. '<|end|>' → logprob: -4.523278713226318
    5. 'n' → logprob: -4.648278713226318
    6. ',' → logprob: -4.898278713226318
    7. '[' → logprob: -5.023278713226318
    8. '    ' → logprob: -5.398278713226318
    9. '    
' → logprob: -5.523278713226318
    10. '  ' → logprob: -6.023278713226318

Token 89: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03706106171011925
    2. '[i' → logprob: -4.5370612144470215
    3. '<|end|>' → logprob: -5.4120612144470215
    4. '.' → logprob: -5.5370612144470215
    5. '_' → logprob: -5.6620612144470215
    6. ')' → logprob: -5.7870612144470215
    7. '[n' → logprob: -6.5370612144470215
    8. ' ' → logprob: -6.6620612144470215
    9. '[:]' → logprob: -6.7870612144470215
    10. '   ' → logprob: -7.1620612144470215

Token 90: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8270106315612793
    2. ']*' → logprob: -0.9520106315612793
    3. '*' → logprob: -1.8270106315612793
    4. ' *' → logprob: -4.702010631561279
    5. '*a' → logprob: -6.077010631561279
    6. ' ]' → logprob: -6.452010631561279
    7. '*i' → logprob: -6.952010631561279
    8. ' ' → logprob: -7.202010631561279
    9. '*j' → logprob: -7.327010631561279
    10. '```' → logprob: -8.827011108398438

Token 91: 'a' (ID: 64)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3704965114593506
    2. '[j' → logprob: -1.4954965114593506
    3. '[' → logprob: -2.7454965114593506
    4. 'i' → logprob: -4.24549674987793
    5. ' ' → logprob: -5.62049674987793
    6. 'j' → logprob: -6.74549674987793
    7. 'a' → logprob: -7.74549674987793
    8. '[a' → logprob: -8.12049674987793
    9. '[]' → logprob: -8.87049674987793
    10. ' [' → logprob: -8.87049674987793

Token 92: '[j' (ID: 7895)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3647775948047638
    2. '[i' → logprob: -1.7397775650024414
    3. '[j' → logprob: -2.1147775650024414
    4. ']' → logprob: -5.114777565002441
    5. '[n' → logprob: -7.239777565002441
    6. '[]' → logprob: -7.614777565002441
    7. '[:]' → logprob: -7.989777565002441
    8. '[m' → logprob: -8.364777565002441
    9. '[a' → logprob: -8.739777565002441
    10. '0' → logprob: -8.739777565002441

Token 93: '],' (ID: 2155)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02690868265926838
    2. ' )' → logprob: -4.901908874511719
    3. ' for' → logprob: -5.151908874511719
    4. ',' → logprob: -5.651908874511719
    5. '))' → logprob: -5.651908874511719
    6. ' ' → logprob: -5.776908874511719
    7. '])' → logprob: -6.651908874511719
    8. '),' → logprob: -7.151908874511719
    9. ' ))' → logprob: -8.526908874511719
    10. 'for' → logprob: -8.901908874511719

Token 94: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.32949206233024597
    2. '<|end|>' → logprob: -1.7044920921325684
    3. '   ' → logprob: -3.2044920921325684
    4. '    ' → logprob: -3.5794920921325684
    5. '[' → logprob: -4.704492092132568
    6. '  ' → logprob: -5.079492092132568
    7. '<|end|>' → logprob: -6.079492092132568
    8. ' 
' → logprob: -6.204492092132568
    9. ' )' → logprob: -6.454492092132568
    10. '     
' → logprob: -6.704492092132568

Token 95: '<' (ID: 27)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3835238814353943
    2. ',' → logprob: -2.508523941040039
    3. ' ,' → logprob: -3.133523941040039
    4. ' ' → logprob: -3.133523941040039
    5. '<|end|>' → logprob: -3.258523941040039
    6. ' <' → logprob: -3.508523941040039
    7. '<=' → logprob: -3.883523941040039
    8. '=' → logprob: -4.633523941040039
    9. '+' → logprob: -4.758523941040039
    10. ',j' → logprob: -4.883523941040039

Token 96: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06202056258916855
    2. ' j' → logprob: -2.8120205402374268
    3. '<|end|>' → logprob: -10.812020301818848
    4. ' ' → logprob: -11.312020301818848
    5. '	j' → logprob: -11.562020301818848
    6. ',j' → logprob: -12.937020301818848
    7. ',' → logprob: -13.062020301818848
    8. '    ' → logprob: -13.312020301818848
    9. '   ' → logprob: -13.437020301818848
    10. '=j' → logprob: -14.437020301818848

Token 97: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44988948106765747
    2. 'a' → logprob: -1.1998894214630127
    3. '
' → logprob: -3.3248894214630127
    4. '    
' → logprob: -4.824889659881592
    5. '[' → logprob: -5.324889659881592
    6. 'n' → logprob: -5.824889659881592
    7. ' a' → logprob: -5.949889659881592
    8. '<|end|>' → logprob: -6.824889659881592
    9. '[a' → logprob: -7.074889659881592
    10. '```' → logprob: -7.199889659881592

Token 98: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2945854365825653
    2. '   ' → logprob: -1.4195854663848877
    3. '    
' → logprob: -5.044585227966309
    4. ' a' → logprob: -5.794585227966309
    5. '
' → logprob: -6.294585227966309
    6. 'n' → logprob: -7.669585227966309
    7. '```' → logprob: -7.919585227966309
    8. ' 
' → logprob: -8.044585227966309
    9. '#' → logprob: -8.794585227966309
    10. '[' → logprob: -9.294585227966309

Token 99: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05123506113886833
    2. '   ' → logprob: -3.0512349605560303
    3. ' a' → logprob: -6.301235198974609
    4. '#' (adapté à ' #') → logprob: -7.426235198974609
    5. 's' → logprob: -10.05123519897461
    6. ' #' → logprob: -10.42623519897461
    7. '    
' → logprob: -10.42623519897461
    8. '
' → logprob: -10.67623519897461
    9. 'import' → logprob: -10.80123519897461
    10. 'from' → logprob: -11.92623519897461

Token 100: ' Sort' (ID: 25945)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.034731365740299225
    2. '#' → logprob: -3.784731388092041
    3. 'from' → logprob: -6.034731388092041
    4. ' a' → logprob: -6.159731388092041
    5. 'import' → logprob: -6.784731388092041
    6. 's' → logprob: -6.784731388092041
    7. 'for' → logprob: -7.284731388092041
    8. 'def' → logprob: -7.409731388092041
    9. 'x' → logprob: -7.659731388092041
    10. 'even' → logprob: -8.284730911254883

Token 101: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00024715426843613386
    2. ' b' → logprob: -8.37524700164795
    3. '(b' → logprob: -12.12524700164795
    4. '   ' → logprob: -12.50024700164795
    5. '(' → logprob: -13.12524700164795
    6. '()' → logprob: -13.25024700164795
    7. '```' → logprob: -13.62524700164795
    8. '	b' → logprob: -14.00024700164795
    9. '_b' → logprob: -14.62524700164795
    10. ')b' → logprob: -15.12524700164795

Token 102: ' to' (ID: 316)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9669079780578613
    2. '.sort' → logprob: -0.9669079780578613
    3. 'b' → logprob: -1.5919079780578613
    4. ')' → logprob: -3.5919079780578613
    5. '.b' → logprob: -5.591907978057861
    6. '=' → logprob: -6.216907978057861
    7. ').' → logprob: -6.716907978057861
    8. ' =' → logprob: -7.966907978057861
    9. '   ' → logprob: -8.091907501220703
    10. ',' → logprob: -8.466907501220703

Token 103: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.33686086535453796
    2. ' sort' → logprob: -2.3368608951568604
    3. ' continue' → logprob: -2.4618608951568604
    4. 'sort' → logprob: -4.086860656738281
    5. '   ' → logprob: -4.211860656738281
    6. ' reverse' → logprob: -4.461860656738281
    7. 'get' → logprob: -4.586860656738281
    8. ' find' → logprob: -5.086860656738281
    9. ' ' → logprob: -5.336860656738281
    10. ' b' → logprob: -5.461860656738281

Token 104: ' smallest' (ID: 42173)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.37452349066734314
    2. 'b' → logprob: -1.2495235204696655
    3. ' the' → logprob: -3.999523401260376
    4. '[' → logprob: -5.624523639678955
    5. 'the' → logprob: -6.874523639678955
    6. ' a' → logprob: -6.999523639678955
    7. ' ' → logprob: -8.249523162841797
    8. '[:]' → logprob: -8.499523162841797
    9. '```' → logprob: -8.499523162841797
    10. '   ' → logprob: -8.624523162841797

Token 105: ' products' (ID: 3891)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012383203953504562
    2. '(' → logprob: -4.762382984161377
    3. '_b' → logprob: -6.512382984161377
    4. '_' → logprob: -6.762382984161377
    5. '()
' → logprob: -8.012383460998535
    6. ')' → logprob: -8.512383460998535
    7. 'b' → logprob: -8.637383460998535
    8. 's' → logprob: -9.887383460998535
    9. '()

' → logprob: -10.012383460998535
    10. '()\' → logprob: -10.012383460998535

Token 106: ' first' (ID: 1577)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.13259612023830414
    2. 'b' → logprob: -3.132596015930176
    3. ' =' → logprob: -3.257596015930176
    4. '.' → logprob: -4.507596015930176
    5. '
' → logprob: -4.632596015930176
    6. '[' → logprob: -4.632596015930176
    7. '_sorted' → logprob: -5.757596015930176
    8. '=' → logprob: -6.007596015930176
    9. '   ' → logprob: -6.007596015930176
    10. 'sorted' → logprob: -7.382596015930176

Token 107: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6764678955078125
    2. 'b' → logprob: -0.8014678955078125
    3. '
' → logprob: -3.4264678955078125
    4. '    
' → logprob: -5.1764678955078125
    5. '```' → logprob: -6.1764678955078125
    6. ' b' → logprob: -7.3014678955078125
    7. ',' → logprob: -7.4264678955078125
    8. '.' → logprob: -7.8014678955078125
    9. ')' → logprob: -8.676467895507812
    10. 'sorted' → logprob: -9.426467895507812

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06178827956318855
    2. '
' → logprob: -3.311788320541382
    3. 'b' → logprob: -4.186788082122803
    4. '    
' → logprob: -4.936788082122803
    5. '```' → logprob: -8.436788558959961
    6. ' b' → logprob: -8.686788558959961
    7. '[' → logprob: -9.186788558959961
    8. ',' → logprob: -9.186788558959961
    9. '   
' → logprob: -9.561788558959961
    10. 'sorted' → logprob: -9.561788558959961

Token 109: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.0020260661840438843
    2. ' b' → logprob: -6.627026081085205
    3. '   ' → logprob: -7.377026081085205
    4. '
' → logprob: -9.752025604248047
    5. '```' → logprob: -11.877025604248047
    6. '    
' → logprob: -12.377025604248047
    7. 'sorted' → logprob: -13.377025604248047
    8. ' ' → logprob: -13.502025604248047
    9. 'a' → logprob: -15.377025604248047
    10. ' 
' → logprob: -15.439525604248047

Token 110: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.014246013946831226
    2. '.' → logprob: -4.264245986938477
    3. '=' → logprob: -9.764245986938477
    4. ' =' → logprob: -11.264245986938477
    5. '.=' → logprob: -12.889245986938477
    6. 'sort' → logprob: -13.139245986938477
    7. '.sorted' → logprob: -13.264245986938477
    8. ' .' → logprob: -13.264245986938477
    9. '_sorted' → logprob: -14.139245986938477
    10. ').' → logprob: -14.264245986938477

Token 111: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.027529440820217133
    2. '()
' → logprob: -3.65252947807312
    3. '()

' → logprob: -6.777529239654541
    4. '   ' → logprob: -10.0275297164917
    5. '(' → logprob: -11.2775297164917
    6. '()\' → logprob: -11.5275297164917
    7. '()
' → logprob: -12.0275297164917
    8. '()


' → logprob: -12.5275297164917
    9. '(
' → logprob: -12.9025297164917
    10. '()[' → logprob: -13.2775297164917

Token 112: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.49176082015037537
    2. '   ' → logprob: -1.1167608499526978
    3. '    
' → logprob: -3.116760730743408
    4. '```' → logprob: -5.116760730743408
    5. 'a' → logprob: -5.366760730743408
    6. 'n' → logprob: -6.241760730743408
    7. '

' → logprob: -7.241760730743408
    8. '  
' → logprob: -7.241760730743408
    9. '\n' → logprob: -7.491760730743408
    10. '[' → logprob: -7.616760730743408

Token 113: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.015480264090001583
    2. '   ' → logprob: -5.015480041503906
    3. '
' → logprob: -5.640480041503906
    4. ' a' → logprob: -6.015480041503906
    5. 'n' → logprob: -7.140480041503906
    6. '```' → logprob: -7.140480041503906
    7. '#' (adapté à ' #') → logprob: -7.765480041503906
    8. '    
' → logprob: -8.265480041503906
    9. '[' → logprob: -9.640480041503906
    10. '\n' → logprob: -9.765480041503906

Token 114: ' The' (ID: 623)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11509023606777191
    2. ' a' → logprob: -2.3650901317596436
    3. '#' → logprob: -4.740090370178223
    4. 'from' → logprob: -6.365090370178223
    5. ' #' → logprob: -6.865090370178223
    6. 'n' → logprob: -7.740090370178223
    7. 'for' → logprob: -7.865090370178223
    8. ' from' → logprob: -7.990090370178223
    9. ' for' → logprob: -8.365090370178223
    10. 'import' → logprob: -8.365090370178223

Token 115: ' smallest' (ID: 42173)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6974935531616211
    2. ' a' → logprob: -0.8224935531616211
    3. ' first' → logprob: -4.197493553161621
    4. ' #' → logprob: -4.322493553161621
    5. 'n' → logprob: -4.947493553161621
    6. 're' → logprob: -5.197493553161621
    7. ' n' → logprob: -5.697493553161621
    8. ' next' → logprob: -5.822493553161621
    9. '#' → logprob: -6.072493553161621
    10. ' result' → logprob: -6.197493553161621

Token 116: ' product' (ID: 1888)
  Prédit: ' product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.3342077434062958
    2. 'product' → logprob: -1.9592077732086182
    3. ' =' → logprob: -3.209207773208618
    4. ' ' → logprob: -3.334207773208618
    5. 'b' → logprob: -3.834207773208618
    6. '_product' → logprob: -4.459207534790039
    7. '=' → logprob: -5.084207534790039
    8. ' value' → logprob: -5.584207534790039
    9. ' b' → logprob: -5.709207534790039
    10. 's' → logprob: -5.709207534790039

Token 117: ' must' (ID: 2804)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03159722313284874
    2. ' is' → logprob: -3.656597137451172
    3. '=' → logprob: -5.906597137451172
    4. ' will' → logprob: -7.031597137451172
    5. ',' → logprob: -7.156597137451172
    6. 's' → logprob: -8.531597137451172
    7. ' should' → logprob: -8.656597137451172
    8. '_' → logprob: -9.031597137451172
    9. ':' → logprob: -9.531597137451172
    10. ' would' → logprob: -9.781597137451172

Token 118: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.008820313960313797
    2. 'be' → logprob: -4.758820533752441
    3. ' =' → logprob: -9.133820533752441
    4. '=' → logprob: -10.383820533752441
    5. ' equal' → logprob: -10.508820533752441
    6. ' come' → logprob: -11.133820533752441
    7. 'equal' → logprob: -11.633820533752441
    8. ' ' → logprob: -11.758820533752441
    9. '<|end|>' → logprob: -12.758820533752441
    10. 'come' → logprob: -13.883820533752441

Token 119: ' a' (ID: 261)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1806238889694214
    2. ' b' → logprob: -1.8056238889694214
    3. 'a' → logprob: -7.680624008178711
    4. ' a' → logprob: -8.555624008178711
    5. '0' → logprob: -8.680624008178711
    6. ' ' → logprob: -10.055624008178711
    7. '   ' → logprob: -12.805624008178711
    8. ' even' → logprob: -13.430624008178711
    9. ' an' → logprob: -13.930624008178711
    10. ' divisible' → logprob: -14.180624008178711

Token 120: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06156916543841362
    2. 'b' → logprob: -2.9365692138671875
    3. '0' → logprob: -6.0615692138671875
    4. ' b' → logprob: -6.1865692138671875
    5. ' [' → logprob: -7.6865692138671875
    6. '   ' → logprob: -7.6865692138671875
    7. ' ' → logprob: -7.8115692138671875
    8. ' =' → logprob: -8.561569213867188
    9. 's' → logprob: -8.811569213867188
    10. '[b' → logprob: -8.811569213867188

Token 121: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0018783047562465072
    2. '1' → logprob: -6.376878261566162
    3. '[' → logprob: -9.25187873840332
    4. ' ' → logprob: -10.75187873840332
    5. '(' → logprob: -10.87687873840332
    6. ']' → logprob: -11.00187873840332
    7. '-' → logprob: -12.81437873840332
    8. '```' → logprob: -13.06437873840332
    9. '])' → logprob: -13.12687873840332
    10. '][' → logprob: -13.37687873840332

Token 122: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6941475868225098
    2. ']*' → logprob: -0.6941475868225098
    3. ' ]' → logprob: -7.81914758682251
    4. '*' → logprob: -8.944147109985352
    5. '[' → logprob: -8.944147109985352
    6. ']*(' → logprob: -8.944147109985352
    7. ' ' → logprob: -10.069147109985352
    8. '0' → logprob: -10.569147109985352
    9. '])*' → logprob: -11.444147109985352
    10. '   ' → logprob: -11.569147109985352

Token 123: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011931445449590683
    2. 'b' → logprob: -4.511931419372559
    3. '1' → logprob: -7.886931419372559
    4. ' a' → logprob: -8.386931419372559
    5. '[' → logprob: -9.636931419372559
    6. '0' → logprob: -9.886931419372559
    7. '<|end|>' → logprob: -9.886931419372559
    8. '<|end|>' → logprob: -10.261931419372559
    9. '2' → logprob: -11.011931419372559
    10. ' ' → logprob: -11.386931419372559

Token 124: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.012921725399792194
    2. '1' → logprob: -4.3879218101501465
    3. '0' → logprob: -7.8879218101501465
    4. ']' → logprob: -11.637921333312988
    5. '[
' → logprob: -11.887921333312988
    6. '```' → logprob: -12.637921333312988
    7. '{' → logprob: -13.137921333312988
    8. '\[' → logprob: -13.512921333312988
    9. '(' → logprob: -13.762921333312988
    10. '[i' → logprob: -13.762921333312988

Token 125: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2233183042553719e-05
    2. '0' → logprob: -11.625012397766113
    3. ']' → logprob: -14.000012397766113
    4. ' ' → logprob: -14.000012397766113
    5. 'n' → logprob: -14.375012397766113
    6. '```' → logprob: -15.625012397766113
    7. '   ' → logprob: -15.750012397766113
    8. '[' → logprob: -16.062511444091797
    9. '2' → logprob: -16.187511444091797
    10. ')' → logprob: -16.500011444091797

Token 126: ']
' (ID: 1592)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.389217734336853
    2. ']' → logprob: -1.139217734336853
    3. ')' → logprob: -6.764217853546143
    4. '[' → logprob: -7.139217853546143
    5. '],' → logprob: -9.889217376708984
    6. ' ])' → logprob: -9.889217376708984
    7. '()' → logprob: -10.139217376708984
    8. ''])' → logprob: -10.264217376708984
    9. 's' → logprob: -10.389217376708984
    10. '])
' → logprob: -10.514217376708984

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0690072774887085
    2. 'a' → logprob: -3.319007396697998
    3. '
' → logprob: -4.569007396697998
    4. '    
' → logprob: -5.069007396697998
    5. ' =' → logprob: -5.319007396697998
    6. '[' → logprob: -6.194007396697998
    7. ' a' → logprob: -6.569007396697998
    8. '```' → logprob: -6.944007396697998
    9. '=' → logprob: -7.194007396697998
    10. ',' → logprob: -7.194007396697998

Token 128: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4084567129611969
    2. 'a' → logprob: -1.6584566831588745
    3. ' a' → logprob: -2.533456802368164
    4. '    
' → logprob: -3.658456802368164
    5. ' for' → logprob: -3.658456802368164
    6. '
' → logprob: -5.408456802368164
    7. 'for' → logprob: -5.908456802368164
    8. ' 
' → logprob: -6.658456802368164
    9. '   
' → logprob: -7.158456802368164
    10. ',' → logprob: -7.533456802368164

Token 129: ' The' (ID: 623)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11023354530334473
    2. ' a' → logprob: -2.3602335453033447
    3. '#' → logprob: -5.610233306884766
    4. 'x' → logprob: -6.235233306884766
    5. 'for' → logprob: -6.735233306884766
    6. ' for' → logprob: -7.485233306884766
    7. ' x' → logprob: -7.485233306884766
    8. ' #' → logprob: -7.985233306884766
    9. '   ' → logprob: -8.235233306884766
    10. 'p' → logprob: -8.735233306884766

Token 130: ' products' (ID: 3891)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1606274843215942
    2. ' a' → logprob: -1.5356274843215942
    3. ' #' → logprob: -1.7856274843215942
    4. ' next' → logprob: -2.5356273651123047
    5. ' first' → logprob: -2.6606273651123047
    6. ' for' → logprob: -3.4106273651123047
    7. '#' → logprob: -3.5356273651123047
    8. ' smallest' → logprob: -3.5356273651123047
    9. '0' → logprob: -4.785627365112305
    10. 'for' → logprob: -4.910627365112305

Token 131: ' between' (ID: 2870)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35371774435043335
    2. '   ' → logprob: -2.478717803955078
    3. '[' → logprob: -2.603717803955078
    4. '_min' → logprob: -3.228717803955078
    5. '=' → logprob: -3.853717803955078
    6. '#' → logprob: -4.728717803955078
    7. '_' → logprob: -4.853717803955078
    8. '_first' → logprob: -4.853717803955078
    9. ' are' → logprob: -5.353717803955078
    10. 's' → logprob: -5.478717803955078

Token 132: ' odd' (ID: 14210)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09915541857481003
    2. ' a' → logprob: -2.5991554260253906
    3. 'b' → logprob: -4.099155426025391
    4. ' b' → logprob: -6.099155426025391
    5. '0' → logprob: -7.349155426025391
    6. ' ' → logprob: -8.47415542602539
    7. '[' → logprob: -9.34915542602539
    8. '#' → logprob: -9.72415542602539
    9. ' the' → logprob: -9.72415542602539
    10. '   ' → logprob: -9.97415542602539

Token 133: ' elements' (ID: 8632)
  Prédit: ' elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.6437491178512573
    2. ' numbers' → logprob: -1.6437491178512573
    3. 'a' → logprob: -2.393749237060547
    4. 's' → logprob: -2.518749237060547
    5. 'numbers' → logprob: -3.393749237060547
    6. 'elements' → logprob: -3.518749237060547
    7. ' and' → logprob: -4.643749237060547
    8. ' a' → logprob: -5.268749237060547
    9. ']' → logprob: -5.393749237060547
    10. ' indices' → logprob: -5.893749237060547

Token 134: ' start' (ID: 1604)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18033486604690552
    2. '#' → logprob: -2.8053348064422607
    3. ' are' → logprob: -3.5553348064422607
    4. '   ' → logprob: -3.6803348064422607
    5. ' =' → logprob: -4.18033504486084
    6. ',' → logprob: -4.68033504486084
    7. 'a' → logprob: -5.18033504486084
    8. 's' → logprob: -5.80533504486084
    9. 'b' → logprob: -5.93033504486084
    10. ':' → logprob: -6.68033504486084

Token 135: ' from' (ID: 591)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'with' → logprob: -1.0670413970947266
    2. 'from' → logprob: -1.3170413970947266
    3. ' =' → logprob: -2.1920413970947266
    4. '   ' → logprob: -2.8170413970947266
    5. '=' → logprob: -2.9420413970947266
    6. ' with' → logprob: -3.3170413970947266
    7. '_idx' → logprob: -3.8170413970947266
    8. '_index' → logprob: -3.9420413970947266
    9. ' at' → logprob: -4.067041397094727
    10. 'ing' → logprob: -4.192041397094727

Token 136: ' b' (ID: 287)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.36024031043052673
    2. 'b' → logprob: -1.7352403402328491
    3. '2' → logprob: -2.8602402210235596
    4. 'n' → logprob: -3.1102402210235596
    5. '(n' → logprob: -5.235240459442139
    6. '   ' → logprob: -5.610240459442139
    7. ' b' → logprob: -5.735240459442139
    8. ' ' → logprob: -5.985240459442139
    9. '(' → logprob: -6.110240459442139
    10. '0' → logprob: -6.235240459442139

Token 137: '[n' (ID: 15433)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.37181466817855835
    2. '[n' → logprob: -1.2468147277832031
    3. '[len' → logprob: -4.121814727783203
    4. '[-' → logprob: -5.996814727783203
    5. 'len' → logprob: -6.746814727783203
    6. '[
' → logprob: -7.371814727783203
    7. ' [' → logprob: -7.371814727783203
    8. '0' → logprob: -7.996814727783203
    9. '[(' → logprob: -7.996814727783203
    10. 'n' → logprob: -8.371814727783203

Token 138: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.29470279812812805
    2. '+' → logprob: -1.4197027683258057
    3. '*(' → logprob: -5.794703006744385
    4. '*n' → logprob: -5.794703006744385
    5. ':' → logprob: -6.419703006744385
    6. ' +' → logprob: -7.044703006744385
    7. '-' → logprob: -7.044703006744385
    8. '])' → logprob: -7.419703006744385
    9. '*' → logprob: -7.544703006744385
    10. ':]' → logprob: -7.669703006744385

Token 139: ' because' (ID: 2236)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025743518490344286
    2. '    
' → logprob: -6.377574443817139
    3. '[' → logprob: -8.25257396697998
    4. '<|end|>' → logprob: -8.37757396697998
    5. 'a' → logprob: -9.00257396697998
    6. '#' → logprob: -9.87757396697998
    7. ')' → logprob: -10.50257396697998
    8. '    ' → logprob: -10.75257396697998
    9. '[a' → logprob: -10.87757396697998
    10. '(' → logprob: -11.12757396697998

Token 140: ' the' (ID: 290)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.4279501438140869
    2. ' a' → logprob: -2.052950143814087
    3. 'b' → logprob: -2.177950143814087
    4. ' all' → logprob: -3.052950143814087
    5. 'a' → logprob: -3.427950143814087
    6. ' n' → logprob: -4.302949905395508
    7. ' len' → logprob: -5.677949905395508
    8. '   ' → logprob: -5.927949905395508
    9. ' ' → logprob: -6.802949905395508
    10. 'all' → logprob: -6.802949905395508

Token 141: ' first' (ID: 1577)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.8811582922935486
    2. ' first' → logprob: -1.8811583518981934
    3. ' odd' → logprob: -1.8811583518981934
    4. ' next' → logprob: -2.7561583518981934
    5. '#' → logprob: -3.2561583518981934
    6. 'first' → logprob: -3.3811583518981934
    7. ' smallest' → logprob: -4.006158351898193
    8. 'a' → logprob: -4.131158351898193
    9. ' elements' → logprob: -4.506158351898193
    10. 'next' → logprob: -4.506158351898193

Token 142: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07098553329706192
    2. ' n' → logprob: -2.6959855556488037
    3. ']' → logprob: -7.445985317230225
    4. '[n' → logprob: -9.695985794067383
    5. '\n' → logprob: -9.695985794067383
    6. '=n' → logprob: -9.695985794067383
    7. ')' → logprob: -9.945985794067383
    8. 'b' → logprob: -10.195985794067383
    9. '0' → logprob: -10.445985794067383
    10. '=' → logprob: -11.070985794067383

Token 143: ' products' (ID: 3891)
  Prédit: ' elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.06837166845798492
    2. 'elements' → logprob: -3.3183717727661133
    3. '+' → logprob: -4.693371772766113
    4. ' products' → logprob: -5.068371772766113
    5. ' are' → logprob: -5.193371772766113
    6. '#' → logprob: -6.443371772766113
    7. ' b' → logprob: -6.693371772766113
    8. ' entries' → logprob: -6.818371772766113
    9. ']' → logprob: -7.068371772766113
    10. 'b' → logprob: -7.318371772766113

Token 144: ' involve' (ID: 28726)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.9060796499252319
    2. '<|end|>' → logprob: -1.281079649925232
    3. '[' → logprob: -1.656079649925232
    4. '   ' → logprob: -2.7810797691345215
    5. '<|end|>' → logprob: -3.6560797691345215
    6. ']' → logprob: -4.7810797691345215
    7. '[n' → logprob: -4.9060797691345215
    8. 'are' → logprob: -5.4060797691345215
    9. ')' → logprob: -5.6560797691345215
    10. ' ' → logprob: -6.1560797691345215

Token 145: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5759834051132202
    2. 'a' → logprob: -0.8259834051132202
    3. ' the' → logprob: -11.200983047485352
    4. '	a' → logprob: -11.825983047485352
    5. 'the' → logprob: -12.200983047485352
    6. ' ' → logprob: -12.200983047485352
    7. ' ' → logprob: -12.575983047485352
    8. 'space' → logprob: -12.950983047485352
    9. '_a' → logprob: -13.950983047485352
    10. ' spaces' → logprob: -14.075983047485352

Token 146: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.792751032160595e-05
    2. '0' → logprob: -9.50008773803711
    3. 'def' → logprob: -13.00008773803711
    4. '[n' → logprob: -13.00008773803711
    5. '[
' → logprob: -13.00008773803711
    6. 'import' → logprob: -13.62508773803711
    7. '```' → logprob: -14.37508773803711
    8. '#' → logprob: -14.50008773803711
    9. 's' → logprob: -14.50008773803711
    10. '\[' → logprob: -14.50008773803711

Token 147: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.64970643306151e-05
    2. ' ' → logprob: -10.750086784362793
    3. '1' → logprob: -11.000086784362793
    4. 'n' → logprob: -11.500086784362793
    5. ']' → logprob: -11.625086784362793
    6. 'i' → logprob: -11.625086784362793
    7. '[' → logprob: -12.000086784362793
    8. '
' → logprob: -12.687586784362793
    9. '

' → logprob: -13.750086784362793
    10. 'a' → logprob: -13.875086784362793

Token 148: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3276202380657196
    2. ']*' → logprob: -1.827620267868042
    3. '*' → logprob: -2.577620267868042
    4. '])' → logprob: -3.327620267868042
    5. '],' → logprob: -5.702620029449463
    6. '])*' → logprob: -7.452620029449463
    7. ']*)' → logprob: -7.452620029449463
    8. '+' → logprob: -7.952620029449463
    9. '].' → logprob: -8.077620506286621
    10. ' *' → logprob: -8.577620506286621

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0743071660399437
    2. 'a' → logprob: -3.1993072032928467
    3. ' for' → logprob: -4.699306964874268
    4. 'for' → logprob: -4.949306964874268
    5. '    
' → logprob: -5.574306964874268
    6. ' a' → logprob: -5.574306964874268
    7. '[' → logprob: -6.574306964874268
    8. '#' → logprob: -6.699306964874268
    9. '
' → logprob: -7.699306964874268
    10. '<|end|>' → logprob: -7.824306964874268

Token 150: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31213849782943726
    2. '   ' → logprob: -1.812138557434082
    3. ' a' → logprob: -2.937138557434082
    4. 'for' → logprob: -3.937138557434082
    5. ' for' → logprob: -3.937138557434082
    6. '#' (adapté à ' #') → logprob: -5.687138557434082
    7. 'x' → logprob: -6.187138557434082
    8. '    
' → logprob: -6.437138557434082
    9. ' #' → logprob: -7.437138557434082
    10. 'c' → logprob: -7.687138557434082

Token 151: ' To' (ID: 2514)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10167417675256729
    2. 'for' → logprob: -3.2266740798950195
    3. '#' → logprob: -4.1016740798950195
    4. ' a' → logprob: -4.6016740798950195
    5. 'possible' → logprob: -4.9766740798950195
    6. '   ' → logprob: -5.1016740798950195
    7. ' for' → logprob: -5.6016740798950195
    8. 'c' → logprob: -5.7266740798950195
    9. 'found' → logprob: -6.1016740798950195
    10. ' possible' → logprob: -6.6016740798950195

Token 152: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.017380889505147934
    2. ' reconstruct' → logprob: -4.767380714416504
    3. 'find' → logprob: -5.142380714416504
    4. ' guess' → logprob: -7.267380714416504
    5. ' solve' → logprob: -7.642380714416504
    6. ' recover' → logprob: -8.267380714416504
    7. ' continue' → logprob: -8.642380714416504
    8. ' determine' → logprob: -8.767380714416504
    9. ' get' → logprob: -9.142380714416504
    10. ' ded' → logprob: -9.642380714416504

Token 153: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.04312753304839134
    2. 'a' → logprob: -3.1681275367736816
    3. ' the' → logprob: -9.793127059936523
    4. ' ' → logprob: -10.543127059936523
    5. '_' → logprob: -11.543127059936523
    6. ' space' → logprob: -12.043127059936523
    7. ' possible' → logprob: -12.168127059936523
    8. ' b' → logprob: -12.168127059936523
    9. ' for' → logprob: -13.043127059936523
    10. ' an' → logprob: -13.293127059936523

Token 154: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14555728435516357
    2. '0' → logprob: -2.020557403564453
    3. '_' → logprob: -6.020557403564453
    4. ' ' → logprob: -8.270557403564453
    5. ' [' → logprob: -9.395557403564453
    6. '(' → logprob: -11.020557403564453
    7. 'a' → logprob: -11.520557403564453
    8. '_[' → logprob: -11.770557403564453
    9. ',' → logprob: -11.958057403564453
    10. '[
' → logprob: -12.208057403564453

Token 155: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007802037871442735
    2. '1' → logprob: -7.25078010559082
    3. '[' → logprob: -10.37578010559082
    4. ' ' → logprob: -10.50078010559082
    5. '2' → logprob: -12.25078010559082
    6. ']' → logprob: -12.75078010559082
    7. ')' → logprob: -13.62578010559082
    8. '_' → logprob: -14.62578010559082
    9. 'i' → logprob: -14.75078010559082
    10. 'n' → logprob: -15.25078010559082

Token 156: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.843760073184967
    2. '],' → logprob: -0.843760073184967
    3. '[' → logprob: -2.5937600135803223
    4. ']:' → logprob: -4.093760013580322
    5. ')' → logprob: -4.468760013580322
    6. ',' → logprob: -4.718760013580322
    7. '),' → logprob: -5.093760013580322
    8. '):' → logprob: -5.843760013580322
    9. ']=' → logprob: -6.093760013580322
    10. '*' → logprob: -6.218760013580322

Token 157: ' use' (ID: 1199)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8892674446105957
    2. 'a' → logprob: -1.0142674446105957
    3. ' for' → logprob: -1.8892674446105957
    4. 'for' → logprob: -2.7642674446105957
    5. 'import' → logprob: -5.264267444610596
    6. ' possible' → logprob: -6.639267444610596
    7. ' import' → logprob: -6.889267444610596
    8. 'from' → logprob: -7.014267444610596
    9. ' from' → logprob: -7.389267444610596
    10. ' found' → logprob: -7.389267444610596

Token 158: ':
' (ID: 734)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4002779722213745
    2. ' b' → logprob: -1.4002779722213745
    3. ' math' → logprob: -3.525278091430664
    4. 'math' → logprob: -3.775278091430664
    5. 'int' → logprob: -4.400278091430664
    6. 'a' → logprob: -4.900278091430664
    7. ' int' → logprob: -6.025278091430664
    8. ' a' → logprob: -6.150278091430664
    9. ' (' → logprob: -6.150278091430664
    10. '[' → logprob: -7.400278091430664

Token 159: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3296060860157013
    2. ' a' → logprob: -1.579606056213379
    3. 'for' → logprob: -3.454606056213379
    4. '   ' → logprob: -3.829606056213379
    5. ' for' → logprob: -4.204606056213379
    6. 'import' → logprob: -7.079606056213379
    7. '[a' → logprob: -7.454606056213379
    8. ' math' → logprob: -7.579606056213379
    9. 'math' → logprob: -7.704606056213379
    10. 'i' → logprob: -7.829606056213379

Token 160: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16145791113376617
    2. ' a' → logprob: -2.6614580154418945
    3. 'for' → logprob: -2.7864580154418945
    4. ' for' → logprob: -4.7864580154418945
    5. 'possible' → logprob: -6.0364580154418945
    6. ' possible' → logprob: -6.5364580154418945
    7. 'import' → logprob: -7.0364580154418945
    8. '[a' → logprob: -7.1614580154418945
    9. 'math' → logprob: -7.6614580154418945
    10. '   ' → logprob: -7.9114580154418945

Token 161: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.21140466630458832
    2. ' a' → logprob: -1.8364046812057495
    3. 'for' → logprob: -3.96140456199646
    4. ' for' → logprob: -5.211404800415039
    5. 'import' → logprob: -6.461404800415039
    6. 'from' → logprob: -6.711404800415039
    7. '   ' → logprob: -6.961404800415039
    8. 'b' → logprob: -7.836404800415039
    9. 'i' → logprob: -8.086404800415039
    10. ' b' → logprob: -8.086404800415039

Token 162: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013369150459766388
    2. '_' → logprob: -4.513369083404541
    3. '[' → logprob: -6.263369083404541
    4. ' =' → logprob: -8.1383695602417
    5. '_values' → logprob: -10.3883695602417
    6. '_candidates' → logprob: -10.3883695602417
    7. ' ' → logprob: -12.2633695602417
    8. '
' → logprob: -12.2633695602417
    9. '1' → logprob: -12.2633695602417
    10. '=' → logprob: -12.2633695602417

Token 163: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011105302110081539
    2. '1' → logprob: -9.500110626220703
    3. ' ' → logprob: -10.625110626220703
    4. ']' → logprob: -12.562610626220703
    5. '[' → logprob: -13.062610626220703
    6. '   ' → logprob: -14.437610626220703
    7. '_' → logprob: -14.812610626220703
    8. 'n' → logprob: -14.875110626220703
    9. ')' → logprob: -15.000110626220703
    10. '۰' → logprob: -15.062610626220703

Token 164: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.35550951957702637
    2. ' =' → logprob: -1.3555095195770264
    3. '_candidates' → logprob: -3.7305095195770264
    4. '=' → logprob: -5.4805097579956055
    5. '_' → logprob: -5.6055097579956055
    6. 's' → logprob: -6.2305097579956055
    7. '_candidate' → logprob: -6.3555097579956055
    8. '0' → logprob: -6.3555097579956055
    9. ']=' → logprob: -6.4805097579956055
    10. ' ' → logprob: -8.105509757995605

Token 165: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.062174491584300995
    2. '_candidates' → logprob: -3.0621745586395264
    3. '=' → logprob: -4.812174320220947
    4. '_val' → logprob: -6.687174320220947
    5. 's' → logprob: -7.187174320220947
    6. '_' → logprob: -7.187174320220947
    7. '_candidate' → logprob: -7.187174320220947
    8. '_values' → logprob: -7.687174320220947
    9. '_possible' → logprob: -8.812174797058105
    10. '0' → logprob: -8.937174797058105

Token 166: ' gcd' (ID: 106918)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4963291883468628
    2. 'b' → logprob: -1.2463291883468628
    3. 'abs' → logprob: -2.9963293075561523
    4. 'math' → logprob: -3.1213293075561523
    5. ' int' → logprob: -5.371329307556152
    6. ' b' → logprob: -6.121329307556152
    7. ' math' → logprob: -6.371329307556152
    8. ' abs' → logprob: -7.496329307556152
    9. '(int' → logprob: -8.496329307556152
    10. ' ' → logprob: -9.996329307556152

Token 167: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.20196881890296936
    2. '(' → logprob: -1.701968789100647
    3. '(a' → logprob: -8.451969146728516
    4. 'b' → logprob: -8.701969146728516
    5. '(
' → logprob: -9.451969146728516
    6. '(math' → logprob: -10.451969146728516
    7. '(abs' → logprob: -10.701969146728516
    8. '((' → logprob: -11.201969146728516
    9. '([' → logprob: -11.576969146728516
    10. ' (' → logprob: -12.451969146728516

Token 168: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00016802136087790132
    2. '[n' → logprob: -9.000167846679688
    3. '[
' → logprob: -11.250167846679688
    4. '(' → logprob: -11.250167846679688
    5. ')' → logprob: -12.000167846679688
    6. ' [' → logprob: -12.625167846679688
    7. '[-' → logprob: -12.875167846679688
    8. ')[' → logprob: -13.500167846679688
    9. '\[' → logprob: -13.625167846679688
    10. '0' → logprob: -13.875167846679688

Token 169: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0632413923740387
    2. '[' → logprob: -2.813241481781006
    3. '[n' → logprob: -7.188241481781006
    4. 'n' → logprob: -8.313241004943848
    5. ' ' → logprob: -9.063241004943848
    6. '1' → logprob: -9.313241004943848
    7. ' [' → logprob: -10.438241004943848
    8. '   ' → logprob: -11.563241004943848
    9. ']' → logprob: -12.063241004943848
    10. ')' → logprob: -12.563241004943848

Token 170: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1806754320859909
    2. '],' → logprob: -1.9306753873825073
    3. ',b' → logprob: -4.430675506591797
    4. ' ,' → logprob: -5.555675506591797
    5. ']' → logprob: -6.680675506591797
    6. '),' → logprob: -6.805675506591797
    7. '[' → logprob: -6.930675506591797
    8. '],[' → logprob: -7.930675506591797
    9. '   ' → logprob: -8.430675506591797
    10. ' ],' → logprob: -9.680675506591797

Token 171: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.038090839982032776
    2. 'b' → logprob: -3.288090944290161
    3. ' )' → logprob: -11.038090705871582
    4. ' ' → logprob: -11.663090705871582
    5. ')' → logprob: -11.788090705871582
    6. ' ' → logprob: -12.038090705871582
    7. ''' → logprob: -12.788090705871582
    8. '    ' → logprob: -13.163090705871582
    9. '"' → logprob: -13.413090705871582
    10. ')b' → logprob: -13.538090705871582

Token 172: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12704308331012726
    2. '[n' → logprob: -2.1270430088043213
    3. '1' → logprob: -9.502042770385742
    4. 'n' → logprob: -11.127042770385742
    5. '[
' → logprob: -11.377042770385742
    6. '\[' → logprob: -12.252042770385742
    7. '0' → logprob: -13.127042770385742
    8. '[-' → logprob: -13.877042770385742
    9. '[i' → logprob: -14.002042770385742
    10. ']' → logprob: -14.002042770385742

Token 173: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14322702586650848
    2. '1' → logprob: -2.0182271003723145
    3. '0' → logprob: -7.8932271003723145
    4. ' n' → logprob: -9.143226623535156
    5. '[n' → logprob: -10.518226623535156
    6. ']' → logprob: -11.393226623535156
    7. '[' → logprob: -12.018226623535156
    8. '```' → logprob: -12.393226623535156
    9. '   ' → logprob: -12.705726623535156
    10. '(n' → logprob: -12.893226623535156

Token 174: '],' (ID: 2155)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.1019837036728859
    2. ')' → logprob: -2.3519837856292725
    3. ']' → logprob: -7.351983547210693
    4. '))' → logprob: -7.726983547210693
    5. '[' → logprob: -8.851984024047852
    6. ' ])' → logprob: -9.101984024047852
    7. ')])' → logprob: -9.351984024047852
    8. ']))' → logprob: -9.851984024047852
    9. '),' → logprob: -10.101984024047852
    10. ',' → logprob: -10.101984024047852

Token 175: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.1777449995279312
    2. 'b' → logprob: -1.92774498462677
    3. ')' → logprob: -4.3027448654174805
    4. ' )' → logprob: -5.6777448654174805
    5. ' ' → logprob: -8.92774486541748
    6. '    ' → logprob: -9.42774486541748
    7. '   ' → logprob: -10.17774486541748
    8. '...' → logprob: -10.17774486541748
    9. ')b' → logprob: -10.42774486541748
    10. '...)' → logprob: -11.05274486541748

Token 176: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0030071772634983063
    2. '[
' → logprob: -6.878007411956787
    3. '])' → logprob: -7.003007411956787
    4. ']' → logprob: -8.128006935119629
    5. ')' → logprob: -8.128006935119629
    6. '0' → logprob: -8.878006935119629
    7. '...' → logprob: -9.128006935119629
    8. '[n' → logprob: -9.878006935119629
    9. '2' → logprob: -10.503006935119629
    10. '   ' → logprob: -10.628006935119629

Token 177: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004996551433578134
    2. '1' → logprob: -8.375499725341797
    3. '0' → logprob: -8.750499725341797
    4. ' ' → logprob: -10.125499725341797
    5. '])' → logprob: -10.250499725341797
    6. '3' → logprob: -10.750499725341797
    7. 'n' → logprob: -12.750499725341797
    8. '   ' → logprob: -12.875499725341797
    9. '```' → logprob: -13.625499725341797
    10. ']' → logprob: -13.812999725341797

Token 178: '],' (ID: 2155)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06359046697616577
    2. '])' → logprob: -2.8135905265808105
    3. '))' → logprob: -8.063590049743652
    4. '[' → logprob: -8.188590049743652
    5. ' )' → logprob: -8.188590049743652
    6. '   ' → logprob: -8.438590049743652
    7. ')])' → logprob: -9.063590049743652
    8. ')
' → logprob: -9.313590049743652
    9. ']' → logprob: -9.688590049743652
    10. ' ])' → logprob: -10.063590049743652

Token 179: '...)' (ID: 29081)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.3448571264743805
    2. '...)' → logprob: -2.4698572158813477
    3. 'b' → logprob: -2.7198572158813477
    4. ')' → logprob: -2.9698572158813477
    5. '...' → logprob: -3.3448572158813477
    6. ' ...)' → logprob: -3.3448572158813477
    7. ' ...' → logprob: -4.719857215881348
    8. ' )' → logprob: -5.219857215881348
    9. ' ' → logprob: -6.094857215881348
    10. '    ' → logprob: -7.219857215881348

Token 180: ' but' (ID: 889)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1931767463684082
    2. '(' → logprob: -1.3181767463684082
    3. '_' → logprob: -1.5681767463684082
    4. ' =' → logprob: -2.193176746368408
    5. '[' → logprob: -3.818176746368408
    6. '   ' → logprob: -3.943176746368408
    7. 's' → logprob: -4.443176746368408
    8. '()' → logprob: -4.943176746368408
    9. ' )' → logprob: -4.943176746368408
    10. ',' → logprob: -5.193176746368408

Token 181: ' safer' (ID: 46763)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.411178320646286
    2. ' not' → logprob: -2.4111783504486084
    3. ')' → logprob: -2.7861783504486084
    4. ' math' → logprob: -2.7861783504486084
    5. ' ' → logprob: -3.1611783504486084
    6. 'b' → logprob: -3.9111783504486084
    7. ' )' → logprob: -3.9111783504486084
    8. '   ' → logprob: -4.286178112030029
    9. '    ' → logprob: -4.411178112030029
    10. 'not' → logprob: -5.536178112030029

Token 182: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9415203332901001
    2. ')' → logprob: -1.9415203332901
    3. ' =' → logprob: -2.3165202140808105
    4. '[' → logprob: -2.6915202140808105
    5. '=' → logprob: -2.9415202140808105
    6. '(' → logprob: -2.9415202140808105
    7. ',' → logprob: -2.9415202140808105
    8. '_' → logprob: -3.3165202140808105
    9. 'a' → logprob: -3.4415202140808105
    10. ':' → logprob: -3.9415202140808105

Token 183: ' pick' (ID: 5230)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.1464526504278183
    2. ' math' → logprob: -2.5214526653289795
    3. 'import' → logprob: -3.6464526653289795
    4. 'b' → logprob: -4.0214524269104
    5. 'min' → logprob: -5.0214524269104
    6. ' b' → logprob: -5.5214524269104
    7. 'a' → logprob: -8.146452903747559
    8. 'reduce' → logprob: -8.771452903747559
    9. '(math' → logprob: -9.146452903747559
    10. 'max' → logprob: -9.396452903747559

Token 184: ' a' (ID: 261)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7139358520507812
    2. ' b' → logprob: -0.7139358520507812
    3. ' math' → logprob: -4.713935852050781
    4. 'math' → logprob: -5.838935852050781
    5. ' ' → logprob: -6.213935852050781
    6. '   ' → logprob: -6.338935852050781
    7. 'a' → logprob: -6.713935852050781
    8. ' a' → logprob: -6.963935852050781
    9. ')' → logprob: -7.088935852050781
    10. '0' → logprob: -7.338935852050781

Token 185: ' method' (ID: 2595)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0030327325221151114
    2. '0' → logprob: -6.878032684326172
    3. 'b' → logprob: -6.878032684326172
    4. '   ' → logprob: -8.253032684326172
    5. ' b' → logprob: -8.378032684326172
    6. 'import' → logprob: -9.003032684326172
    7. 'def' → logprob: -9.378032684326172
    8. '(' → logprob: -9.753032684326172
    9. ' ' → logprob: -10.753032684326172
    10. ' [' → logprob: -10.753032684326172

Token 186: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37856626510620117
    2. 'a' → logprob: -1.3785662651062012
    3. ' a' → logprob: -4.003566265106201
    4. 'g' → logprob: -4.128566265106201
    5. ' =' → logprob: -5.378566265106201
    6. ')' → logprob: -5.753566265106201
    7. '=' → logprob: -5.753566265106201
    8. ',' → logprob: -5.753566265106201
    9. '#' → logprob: -6.128566265106201
    10. ' gcd' → logprob: -7.003566265106201

Token 187: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6914379596710205
    2. '   ' → logprob: -1.3164379596710205
    3. ' a' → logprob: -1.6914379596710205
    4. 'g' → logprob: -4.066437721252441
    5. 'from' → logprob: -5.066437721252441
    6. ' g' → logprob: -5.566437721252441
    7. ' gcd' → logprob: -5.566437721252441
    8. ' from' → logprob: -5.691437721252441
    9. 'import' → logprob: -6.191437721252441
    10. ' b' → logprob: -6.691437721252441

Token 188: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9969395399093628
    2. ' a' → logprob: -0.9969395399093628
    3. 'g' → logprob: -2.3719396591186523
    4. ' g' → logprob: -2.7469396591186523
    5. '   ' → logprob: -3.6219396591186523
    6. 'from' → logprob: -3.9969396591186523
    7. ' from' → logprob: -4.246939659118652
    8. ' def' → logprob: -4.746939659118652
    9. 'def' → logprob: -4.871939659118652
    10. ' gcd' → logprob: -5.121939659118652

Token 189: ' For' (ID: 2214)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.55973219871521
    2. 'g' → logprob: -1.80973219871521
    3. 'from' → logprob: -2.05973219871521
    4. ' a' → logprob: -2.80973219871521
    5. 'def' → logprob: -4.184732437133789
    6. ' g' → logprob: -4.184732437133789
    7. 'import' → logprob: -4.434732437133789
    8. ' from' → logprob: -4.434732437133789
    9. '#' → logprob: -5.309732437133789
    10. 'candidate' → logprob: -6.059732437133789

Token 190: ' n' (ID: 297)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3155392110347748
    2. 'i' → logprob: -1.3155392408370972
    3. ' k' → logprob: -7.940539360046387
    4. ' _' → logprob: -8.065539360046387
    5. ' j' → logprob: -8.190539360046387
    6. 'k' → logprob: -8.315539360046387
    7. '_' → logprob: -8.690539360046387
    8. ' b' → logprob: -8.940539360046387
    9. 'a' → logprob: -9.065539360046387
    10. ' d' → logprob: -9.190539360046387

Token 191: ' odd' (ID: 14210)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2304575890302658
    2. ' +' → logprob: -2.3554575443267822
    3. ' >' → logprob: -3.1054575443267822
    4. ' in' → logprob: -3.7304575443267822
    5. '>' → logprob: -4.230457782745361
    6. ' >=' → logprob: -4.480457782745361
    7. '>=' → logprob: -5.355457782745361
    8. '=' → logprob: -5.480457782745361
    9. ' =' → logprob: -5.980457782745361
    10. '1' → logprob: -6.855457782745361

Token 192: ' integers' (ID: 54912)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08463399857282639
    2. '[' → logprob: -3.2096340656280518
    3. '   ' → logprob: -4.709633827209473
    4. ':
' → logprob: -5.334633827209473
    5. ' =' → logprob: -5.459633827209473
    6. '):' → logprob: -5.584633827209473
    7. ',' → logprob: -5.834633827209473
    8. '=' → logprob: -5.834633827209473
    9. ')' → logprob: -5.959633827209473
    10. ']' → logprob: -5.959633827209473

Token 193: ' a' (ID: 261)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.435123324394226
    2. '   ' → logprob: -1.435123324394226
    3. ')' → logprob: -1.685123324394226
    4. '[' → logprob: -1.935123324394226
    5. ' =' → logprob: -3.1851234436035156
    6. '=' → logprob: -3.1851234436035156
    7. ' ' → logprob: -3.5601234436035156
    8. 'a' → logprob: -4.185123443603516
    9. ',' → logprob: -4.310123443603516
    10. ']' → logprob: -4.310123443603516

Token 194: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08553080260753632
    2. '0' → logprob: -2.9605307579040527
    3. ']' → logprob: -4.335530757904053
    4. ')' → logprob: -4.835530757904053
    5. ' =' → logprob: -6.085530757904053
    6. '=' → logprob: -6.585530757904053
    7. '[
' → logprob: -6.960530757904053
    8. '[i' → logprob: -7.460530757904053
    9. 'def' → logprob: -7.460530757904053
    10. 's' → logprob: -8.210531234741211

Token 195: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07955992221832275
    2. '0' → logprob: -2.704559803009033
    3. ']' → logprob: -4.954559803009033
    4. '   ' → logprob: -7.954559803009033
    5. ' ' → logprob: -8.079560279846191
    6. 'i' → logprob: -8.329560279846191
    7. '=' → logprob: -8.329560279846191
    8. '#' → logprob: -8.704560279846191
    9. ':' → logprob: -8.704560279846191
    10. ')' → logprob: -9.079560279846191

Token 196: '..' (ID: 485)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1173710972070694
    2. '],' → logprob: -2.367371082305908
    3. ':' → logprob: -5.242371082305908
    4. ']:' → logprob: -5.367371082305908
    5. '   ' → logprob: -5.617371082305908
    6. ']=' → logprob: -6.867371082305908
    7. ':]' → logprob: -7.367371082305908
    8. '+' → logprob: -7.742371082305908
    9. ']*' → logprob: -8.242371559143066
    10. ':],' → logprob: -8.742371559143066

Token 197: 'n' (ID: 77)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023659799247980118
    2. '],' → logprob: -4.023659706115723
    3. '0' → logprob: -6.023659706115723
    4. 'n' → logprob: -6.523659706115723
    5. ']:' → logprob: -7.523659706115723
    6. '   ' → logprob: -8.273659706115723
    7. '])' → logprob: -8.523659706115723
    8. '+' → logprob: -9.023659706115723
    9. ':' → logprob: -9.523659706115723
    10. ']=' → logprob: -9.523659706115723

Token 198: '],' (ID: 2155)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.1558690220117569
    2. ']' → logprob: -2.2808690071105957
    3. '],' → logprob: -3.6558690071105957
    4. ']):' → logprob: -5.155869007110596
    5. ']:
' → logprob: -5.405869007110596
    6. '   ' → logprob: -6.405869007110596
    7. '):' → logprob: -6.530869007110596
    8. '])' → logprob: -6.905869007110596
    9. '[' → logprob: -7.780869007110596
    10. ':' → logprob: -7.780869007110596

Token 199: ' products' (ID: 3891)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5211626887321472
    2. ' a' → logprob: -2.146162748336792
    3. '   ' → logprob: -2.271162748336792
    4. ' for' → logprob: -2.396162748336792
    5. 'for' → logprob: -3.521162748336792
    6. 'g' → logprob: -3.896162748336792
    7. '#' → logprob: -4.646162509918213
    8. 'import' → logprob: -5.146162509918213
    9. ' gcd' → logprob: -5.646162509918213
    10. ' g' → logprob: -5.646162509918213

Token 200: ' among' (ID: 6200)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4771430492401123
    2. '[' → logprob: -1.9771430492401123
    3. '   ' → logprob: -2.6021430492401123
    4. 'a' → logprob: -3.8521430492401123
    5. ' between' → logprob: -4.227143287658691
    6. '=' → logprob: -4.227143287658691
    7. '0' → logprob: -4.352143287658691
    8. 'from' → logprob: -4.352143287658691
    9. 'g' → logprob: -4.477143287658691
    10. 'with' → logprob: -4.602143287658691

Token 201: ' them' (ID: 1373)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.059168752282857895
    2. 'them' → logprob: -4.184168815612793
    3. 'the' → logprob: -4.559168815612793
    4. ' b' → logprob: -4.559168815612793
    5. 'a' → logprob: -4.809168815612793
    6. ' them' → logprob: -4.934168815612793
    7. 'odd' → logprob: -6.309168815612793
    8. '[' → logprob: -6.809168815612793
    9. ' the' → logprob: -6.934168815612793
    10. '<|end|>' → logprob: -8.184168815612793

Token 202: ' are' (ID: 553)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5658824443817139
    2. '[' → logprob: -1.1908824443817139
    3. ']' → logprob: -3.690882444381714
    4. '=' → logprob: -3.940882444381714
    5. ' =' → logprob: -4.065882682800293
    6. ':' → logprob: -4.190882682800293
    7. ',' → logprob: -4.315882682800293
    8. ')' → logprob: -5.065882682800293
    9. 'import' → logprob: -5.690882682800293
    10. '<|end|>' → logprob: -5.690882682800293

Token 203: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.19161567091941833
    2. ' b' → logprob: -1.8166157007217407
    3. '   ' → logprob: -4.566615581512451
    4. ' ' → logprob: -7.816615581512451
    5. ' sorted' → logprob: -8.31661605834961
    6. '  ' → logprob: -8.81661605834961
    7. 'a' → logprob: -9.31661605834961
    8. ' a' → logprob: -9.44161605834961
    9. 'sorted' → logprob: -9.56661605834961
    10. '[b' → logprob: -9.94161605834961

Token 204: '[n' (ID: 15433)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06411664932966232
    2. '0' → logprob: -3.1891167163848877
    3. '<|end|>' → logprob: -5.064116477966309
    4. '<|end|>' → logprob: -5.439116477966309
    5. '[n' → logprob: -5.814116477966309
    6. 'def' → logprob: -6.814116477966309
    7. '[
' → logprob: -7.064116477966309
    8. ')' → logprob: -7.439116477966309
    9. ' =' → logprob: -7.439116477966309
    10. '.' → logprob: -7.939116477966309

Token 205: '..' (ID: 485)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6138815879821777
    2. ':n' → logprob: -0.9888815879821777
    3. ':]' → logprob: -3.2388815879821777
    4. ']' → logprob: -3.4888815879821777
    5. ' :' → logprob: -4.238881587982178
    6. ':].' → logprob: -6.488881587982178
    7. ' :]' → logprob: -8.113882064819336
    8. ']:' → logprob: -8.488882064819336
    9. '+' → logprob: -8.863882064819336
    10. ':j' → logprob: -9.738882064819336

Token 206: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.44529372453689575
    2. '(n' → logprob: -2.445293664932251
    3. '-' → logprob: -3.070293664932251
    4. '(' → logprob: -3.070293664932251
    5. ':]' → logprob: -3.070293664932251
    6. 'len' → logprob: -3.320293664932251
    7. 'n' → logprob: -3.320293664932251
    8. '2' → logprob: -3.820293664932251
    9. ':' → logprob: -4.19529390335083
    10. '])' → logprob: -5.32029390335083

Token 207: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.38860395550727844
    2. '   ' → logprob: -1.263603925704956
    3. 'g' → logprob: -4.013604164123535
    4. '#' → logprob: -5.263604164123535
    5. ' a' → logprob: -5.888604164123535
    6. '    
' → logprob: -6.388604164123535
    7. 'from' → logprob: -6.513604164123535
    8. ')' → logprob: -6.638604164123535
    9. 'for' → logprob: -6.638604164123535
    10. 'd' → logprob: -6.763604164123535

Token 208: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37731608748435974
    2. 'a' → logprob: -1.3773161172866821
    3. 'g' → logprob: -3.8773159980773926
    4. 'from' → logprob: -3.8773159980773926
    5. 'import' → logprob: -4.627315998077393
    6. '    
' → logprob: -5.502315998077393
    7. '#' (adapté à ' #') → logprob: -6.752315998077393
    8. 'def' → logprob: -6.752315998077393
    9. 'x' → logprob: -6.877315998077393
    10. 'for' → logprob: -7.377315998077393

Token 209: ' a' (ID: 261)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.7378025054931641
    2. 'a' → logprob: -0.8628025054931641
    3. '   ' → logprob: -3.362802505493164
    4. 'from' → logprob: -3.362802505493164
    5. '#' → logprob: -5.362802505493164
    6. ' a' → logprob: -5.487802505493164
    7. 'def' → logprob: -5.612802505493164
    8. 'd' → logprob: -5.862802505493164
    9. 'import' → logprob: -6.112802505493164
    10. ' g' → logprob: -6.112802505493164

Token 210: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.999274492263794
    2. '0' → logprob: -1.124274492263794
    3. '_' → logprob: -1.624274492263794
    4. '1' → logprob: -3.249274492263794
    5. 'odd' → logprob: -4.124274253845215
    6. ' =' → logprob: -4.374274253845215
    7. 'od' → logprob: -4.624274253845215
    8. '_products' → logprob: -5.249274253845215
    9. '_values' → logprob: -5.499274253845215
    10. '=' → logprob: -5.624274253845215

Token 211: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009328982559964061
    2. '1' → logprob: -7.125932693481445
    3. '[' → logprob: -9.250932693481445
    4. 'i' → logprob: -11.750932693481445
    5. 'import' → logprob: -12.375932693481445
    6. ']' → logprob: -12.625932693481445
    7. ' ' → logprob: -12.875932693481445
    8. 'n' → logprob: -12.875932693481445
    9. '=' → logprob: -13.000932693481445
    10. '(' → logprob: -13.000932693481445

Token 212: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03735268861055374
    2. ' =' → logprob: -4.287352561950684
    3. '=' → logprob: -5.037352561950684
    4. '_candidates' → logprob: -5.162352561950684
    5. '_candidate' → logprob: -6.287352561950684
    6. ']=' → logprob: -6.287352561950684
    7. '_val' → logprob: -6.412352561950684
    8. '_' → logprob: -6.537352561950684
    9. '0' → logprob: -7.412352561950684
    10. '[' → logprob: -7.537352561950684

Token 213: 'a' (ID: 64)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04940735921263695
    2. 'a' → logprob: -3.1744072437286377
    3. '=' → logprob: -5.299407482147217
    4. ' b' → logprob: -7.049407482147217
    5. '(' → logprob: -8.799407005310059
    6. '=b' → logprob: -9.299407005310059
    7. ' a' → logprob: -9.549407005310059
    8. ' =' → logprob: -10.174407005310059
    9. '1' → logprob: -10.299407005310059
    10. '(b' → logprob: -10.424407005310059

Token 214: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08239312469959259
    2. '1' → logprob: -2.707393169403076
    3. '0' → logprob: -4.582393169403076
    4. ']' → logprob: -6.707393169403076
    5. '[
' → logprob: -8.207392692565918
    6. '=' → logprob: -8.582392692565918
    7. ' =' → logprob: -9.332392692565918
    8. ' ' → logprob: -9.582392692565918
    9. '[]' → logprob: -10.207392692565918
    10. ''s' → logprob: -10.457392692565918

Token 215: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03809749335050583
    2. '0' → logprob: -3.288097381591797
    3. '2' → logprob: -10.663097381591797
    4. 'n' → logprob: -11.663097381591797
    5. ']' → logprob: -11.788097381591797
    6. ' ' → logprob: -12.538097381591797
    7. 'i' → logprob: -12.663097381591797
    8. '[' → logprob: -12.788097381591797
    9. '(' → logprob: -13.538097381591797
    10. '   ' → logprob: -13.788097381591797

Token 216: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018981700763106346
    2. '])' → logprob: -4.89398193359375
    3. ']=' → logprob: -5.64398193359375
    4. '],' → logprob: -6.01898193359375
    5. ']))' → logprob: -6.39398193359375
    6. ']*' → logprob: -7.64398193359375
    7. '[' → logprob: -7.64398193359375
    8. ')' → logprob: -7.64398193359375
    9. '//' → logprob: -7.89398193359375
    10. ' ]' → logprob: -8.01898193359375

Token 217: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18255627155303955
    2. '0' → logprob: -3.05755615234375
    3. '=' → logprob: -3.18255615234375
    4. ')' → logprob: -3.93255615234375
    5. '[' → logprob: -4.30755615234375
    6. ',' → logprob: -4.55755615234375
    7. ']' → logprob: -4.80755615234375
    8. '_' → logprob: -5.43255615234375
    9. '
' → logprob: -6.05755615234375
    10. '_candidate' → logprob: -6.05755615234375

Token 218: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.008621785789728165
    2. ' b' → logprob: -4.758621692657471
    3. 'abs' → logprob: -12.133622169494629
    4. '   ' → logprob: -14.258622169494629
    5. ' ' → logprob: -14.758622169494629
    6. ' abs' → logprob: -15.008622169494629
    7. '  ' → logprob: -15.883622169494629
    8. '    ' → logprob: -16.633621215820312
    9. ')b' → logprob: -17.008621215820312
    10. 'math' → logprob: -17.321121215820312

Token 219: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.7888184528565034e-05
    2. '[n' → logprob: -10.6250581741333
    3. ' [' → logprob: -10.7500581741333
    4. '0' → logprob: -12.3750581741333
    5. '   ' → logprob: -13.1250581741333
    6. 's' → logprob: -13.3750581741333
    7. '[
' → logprob: -13.6250581741333
    8. '][' → logprob: -14.5000581741333
    9. '\[' → logprob: -14.6250581741333
    10. ']' → logprob: -14.6250581741333

Token 220: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -13.250003814697266
    3. '[' → logprob: -14.250003814697266
    4. 'n' → logprob: -14.625003814697266
    5. '   ' → logprob: -15.750003814697266
    6. '1' → logprob: -16.000003814697266
    7. ']' → logprob: -16.437503814697266
    8. '```' → logprob: -16.437503814697266
    9. '#' → logprob: -17.750003814697266
    10. '2' → logprob: -17.750003814697266

Token 221: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012230859138071537
    2. ')' → logprob: -7.001223087310791
    3. ' ]' → logprob: -8.876222610473633
    4. ']
' → logprob: -9.876222610473633
    5. '])' → logprob: -10.376222610473633
    6. '   ' → logprob: -10.501222610473633
    7. '[' → logprob: -10.626222610473633
    8. ')]' → logprob: -12.001222610473633
    9. '}' → logprob: -12.376222610473633
    10. '+' → logprob: -12.626222610473633

Token 222: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03823668137192726
    2. ' a' → logprob: -3.913236618041992
    3. '   ' → logprob: -4.663236618041992
    4. 'g' → logprob: -5.788236618041992
    5. 'x' → logprob: -6.538236618041992
    6. 'import' → logprob: -6.913236618041992
    7. '#' → logprob: -7.288236618041992
    8. 'from' → logprob: -7.663236618041992
    9. 'for' → logprob: -7.913236618041992
    10. 'b' → logprob: -8.663236618041992

Token 223: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008735861047171056
    2. '0' → logprob: -7.125873565673828
    3. '_' → logprob: -10.500873565673828
    4. '1' → logprob: -11.375873565673828
    5. '2' → logprob: -12.250873565673828
    6. '
' → logprob: -12.625873565673828
    7. ']' → logprob: -12.750873565673828
    8. '[i' → logprob: -12.750873565673828
    9. '=' → logprob: -13.125873565673828
    10. '   ' → logprob: -13.375873565673828

Token 224: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0016767330234870315
    2. '1' → logprob: -6.501676559448242
    3. '2' → logprob: -8.751676559448242
    4. '[' → logprob: -12.376676559448242
    5. 'n' → logprob: -12.376676559448242
    6. '
' → logprob: -13.126676559448242
    7. ']' → logprob: -13.376676559448242
    8. ' ' → logprob: -14.001676559448242
    9. '   ' → logprob: -14.876676559448242
    10. '```' → logprob: -14.876676559448242

Token 225: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.011456144042313099
    2. ']' → logprob: -4.51145601272583
    3. '*' → logprob: -7.88645601272583
    4. ']*(' → logprob: -11.136456489562988
    5. ' ]' → logprob: -12.761456489562988
    6. '])*' → logprob: -13.261456489562988
    7. ']*)' → logprob: -13.261456489562988
    8. ')*' → logprob: -13.386456489562988
    9. '   ' → logprob: -13.761456489562988
    10. ''*' → logprob: -13.886456489562988

Token 226: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.127333340875339e-06
    2. ' a' → logprob: -12.500003814697266
    3. ' ' → logprob: -16.250003814697266
    4. '
' → logprob: -16.375003814697266
    5. '[' → logprob: -16.875003814697266
    6. '2' → logprob: -17.500003814697266
    7. '   ' → logprob: -17.875003814697266
    8. 'b' → logprob: -18.875003814697266
    9. '  ' → logprob: -19.125003814697266
    10. '	a' → logprob: -19.125003814697266

Token 227: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000838576874230057
    2. '2' → logprob: -7.625838756561279
    3. '1' → logprob: -8.000838279724121
    4. '][' → logprob: -12.375838279724121
    5. '```' → logprob: -13.000838279724121
    6. ']' → logprob: -13.375838279724121
    7. ' [' → logprob: -13.625838279724121
    8. '*' → logprob: -13.625838279724121
    9. '
' → logprob: -13.750838279724121
    10. '[
' → logprob: -13.875838279724121

Token 228: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00484435772523284
    2. '1' → logprob: -5.3798441886901855
    3. '0' → logprob: -8.629844665527344
    4. ']' → logprob: -11.004844665527344
    5. ' ' → logprob: -11.254844665527344
    6. '```' → logprob: -11.754844665527344
    7. 'n' → logprob: -13.692344665527344
    8. ')' → logprob: -14.129844665527344
    9. '
' → logprob: -14.317344665527344
    10. '[' → logprob: -14.317344665527344

Token 229: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003790760529227555
    2. ']=' → logprob: -8.375378608703613
    3. ' ]' → logprob: -9.750378608703613
    4. '],' → logprob: -10.625378608703613
    5. '']' → logprob: -10.750378608703613
    6. '   ' → logprob: -11.750378608703613
    7. '0' → logprob: -12.250378608703613
    8. '[' → logprob: -12.250378608703613
    9. ']
' → logprob: -12.500378608703613
    10. '=' → logprob: -12.500378608703613

Token 230: ' =' (ID: 314)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12775945663452148
    2. ',' → logprob: -2.8777594566345215
    3. '   ' → logprob: -4.1277594566345215
    4. ')' → logprob: -4.5027594566345215
    5. ' =' → logprob: -4.5027594566345215
    6. '[' → logprob: -4.7527594566345215
    7. '=' → logprob: -5.2527594566345215
    8. '#' → logprob: -5.6277594566345215
    9. ' ]' → logprob: -7.0027594566345215
    10. 'import' → logprob: -7.1277594566345215

Token 231: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.20141489803791046
    2. 'b' → logprob: -1.701414942741394
    3. ' ' → logprob: -14.076415061950684
    4. ''' → logprob: -15.076415061950684
    5. ' ' → logprob: -15.201415061950684
    6. ' б' → logprob: -16.576414108276367
    7. ''b' → logprob: -16.826414108276367
    8. '	b' → logprob: -17.076414108276367
    9. '"' → logprob: -17.201414108276367
    10. '`' → logprob: -17.451414108276367

Token 232: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01646878942847252
    2. '1' → logprob: -4.1414690017700195
    3. '   ' → logprob: -8.26646900177002
    4. '0' → logprob: -9.14146900177002
    5. '.' → logprob: -11.64146900177002
    6. '(' → logprob: -11.64146900177002
    7. ' ' → logprob: -11.64146900177002
    8. '```' → logprob: -11.64146900177002
    9. ' [' → logprob: -12.26646900177002
    10. '2' → logprob: -12.26646900177002

Token 233: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4021237802808173e-05
    2. ' ' → logprob: -12.000014305114746
    3. '0' → logprob: -12.750014305114746
    4. '   ' → logprob: -13.375014305114746
    5. '2' → logprob: -13.750014305114746
    6. '```' → logprob: -14.125014305114746
    7. ']' → logprob: -14.812514305114746
    8. '[' → logprob: -15.250014305114746
    9. '
' → logprob: -15.562514305114746
    10. 'n' → logprob: -16.43751335144043

Token 234: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08534978330135345
    2. ')' → logprob: -3.2103497982025146
    3. '   ' → logprob: -3.3353497982025146
    4. ',' → logprob: -6.0853495597839355
    5. '])' → logprob: -6.7103495597839355
    6. ' ]' → logprob: -7.7103495597839355
    7. ']
' → logprob: -7.8353495597839355
    8. ':' → logprob: -8.335350036621094
    9. '):' → logprob: -8.710350036621094
    10. ']:' → logprob: -8.835350036621094

Token 235: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8469480872154236
    2. '   ' → logprob: -0.8469480872154236
    3. ' a' → logprob: -1.9719481468200684
    4. '#' → logprob: -7.221948146820068
    5. '...' → logprob: -7.221948146820068
    6. ' ' → logprob: -7.471948146820068
    7. '    ' → logprob: -7.721948146820068
    8. ' #' → logprob: -8.34694766998291
    9. '  ' → logprob: -8.84694766998291
    10. ')' → logprob: -8.97194766998291

Token 236: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007790116942487657
    2. '0' → logprob: -7.250779151916504
    3. '[
' → logprob: -10.500779151916504
    4. '   ' → logprob: -11.000779151916504
    5. ']' → logprob: -11.250779151916504
    6. '```' → logprob: -12.125779151916504
    7. '][' → logprob: -13.500779151916504
    8. ' ' → logprob: -13.750779151916504
    9. '2' → logprob: -14.375779151916504
    10. '#' → logprob: -14.625779151916504

Token 237: '0' (ID: 15)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004565327544696629
    2. '[' → logprob: -8.000456809997559
    3. '0' → logprob: -9.125456809997559
    4. ' ' → logprob: -12.125456809997559
    5. '```' → logprob: -12.875456809997559
    6. '   ' → logprob: -13.000456809997559
    7. '1' → logprob: -14.750456809997559
    8. ']' → logprob: -15.000456809997559
    9. '
' → logprob: -15.125456809997559
    10. '[
' → logprob: -15.625456809997559

Token 238: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.0808442234992981
    2. ']' → logprob: -2.5808441638946533
    3. '*' → logprob: -6.330844402313232
    4. '][' → logprob: -9.830843925476074
    5. '[' → logprob: -10.455843925476074
    6. ''*' → logprob: -11.080843925476074
    7. '   ' → logprob: -11.205843925476074
    8. ' ]' → logprob: -11.830843925476074
    9. '```' → logprob: -11.955843925476074
    10. '+' → logprob: -12.580843925476074

Token 239: 'a' (ID: 64)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20224328339099884
    2. ' b' → logprob: -2.4522433280944824
    3. ' ' → logprob: -2.7022433280944824
    4. ''' → logprob: -3.8272433280944824
    5. '[' → logprob: -6.077243328094482
    6. 'a' → logprob: -6.202243328094482
    7. '"' → logprob: -7.577243328094482
    8. ' '' → logprob: -7.827243328094482
    9. ')' → logprob: -8.077242851257324
    10. ' a' → logprob: -8.202242851257324

Token 240: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31399697065353394
    2. '2' → logprob: -1.3139970302581787
    3. ']' → logprob: -7.6889967918396
    4. '][' → logprob: -9.688997268676758
    5. '```' → logprob: -9.813997268676758
    6. '*' → logprob: -9.813997268676758
    7. '   ' → logprob: -10.313997268676758
    8. ' ' → logprob: -10.563997268676758
    9. ']*' → logprob: -12.188997268676758
    10. '+' → logprob: -12.313997268676758

Token 241: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4378848391061183e-05
    2. ' ' → logprob: -12.125014305114746
    3. ']' → logprob: -12.750014305114746
    4. '```' → logprob: -12.875014305114746
    5. '3' → logprob: -13.250014305114746
    6. '   ' → logprob: -14.625014305114746
    7. '``' → logprob: -15.625014305114746
    8. '
' → logprob: -15.750014305114746
    9. ')' → logprob: -15.875014305114746
    10. '[' → logprob: -16.000015258789062

Token 242: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006184352096170187
    2. ']=' → logprob: -7.6256184577941895
    3. '   ' → logprob: -10.125617980957031
    4. '']' → logprob: -10.250617980957031
    5. ']
' → logprob: -11.000617980957031
    6. ' ]' → logprob: -11.625617980957031
    7. '2' → logprob: -11.875617980957031
    8. '#' → logprob: -12.625617980957031
    9. '"]' → logprob: -12.625617980957031
    10. ']==' → logprob: -13.250617980957031

Token 243: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 244: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.023250021040439606
    2. 'b' → logprob: -3.773250102996826
    3. ' ' → logprob: -12.648249626159668
    4. ' ' → logprob: -14.898249626159668
    5. '	b' → logprob: -16.273250579833984
    6. ')' → logprob: -16.398250579833984
    7. '...' → logprob: -16.523250579833984
    8. '0' → logprob: -16.523250579833984
    9. '<|end|>' → logprob: -16.523250579833984
    10. '    ' → logprob: -16.773250579833984

Token 245: '[' (ID: 58)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02335367351770401
    2. '[' → logprob: -3.7733535766601562
    3. ' ' → logprob: -9.898353576660156
    4. '   ' → logprob: -10.273353576660156
    5. '```' → logprob: -11.023353576660156
    6. '(' → logprob: -14.023353576660156
    7. '
' → logprob: -14.023353576660156
    8. '#' → logprob: -14.398353576660156
    9. '...' → logprob: -14.398353576660156
    10. '.' → logprob: -14.648353576660156

Token 246: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8624639324116288e-06
    2. '
' → logprob: -14.250001907348633
    3. '```' → logprob: -14.625001907348633
    4. ' ' → logprob: -15.000001907348633
    5. '   ' → logprob: -16.375001907348633
    6. '3' → logprob: -16.625001907348633
    7. '２' → logprob: -16.750001907348633
    8. ')' → logprob: -17.375001907348633
    9. '۲' → logprob: -17.375001907348633
    10. ']' → logprob: -17.687501907348633

Token 247: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3279367685317993
    2. '   ' → logprob: -1.7029367685317993
    3. ')' → logprob: -2.4529366493225098
    4. ']
' → logprob: -6.07793664932251
    5. '])' → logprob: -6.32793664932251
    6. ')
' → logprob: -6.57793664932251
    7. '[' → logprob: -7.07793664932251
    8. ':' → logprob: -7.20293664932251
    9. '):' → logprob: -7.32793664932251
    10. ',' → logprob: -7.57793664932251

Token 248: ' ...
' (ID: 12646)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14408984780311584
    2. ')' → logprob: -2.394089937210083
    3. 'a' → logprob: -3.894089937210083
    4. ' a' → logprob: -5.144089698791504
    5. ' )' → logprob: -6.144089698791504
    6. ' b' → logprob: -6.269089698791504
    7. '0' → logprob: -6.269089698791504
    8. '    ' → logprob: -6.269089698791504
    9. 'import' → logprob: -6.394089698791504
    10. 'b' → logprob: -6.769089698791504

Token 249: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7537157535552979
    2. '   ' → logprob: -0.8787157535552979
    3. 'g' → logprob: -2.503715753555298
    4. 'from' → logprob: -5.128715515136719
    5. ' a' → logprob: -5.253715515136719
    6. 'import' → logprob: -5.253715515136719
    7. 'd' → logprob: -6.378715515136719
    8. '#' → logprob: -6.503715515136719
    9. 'for' → logprob: -6.503715515136719
    10. '    
' → logprob: -6.503715515136719

Token 250: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6670951247215271
    2. '   ' → logprob: -0.7920951247215271
    3. 'g' → logprob: -4.417095184326172
    4. ' a' → logprob: -4.542095184326172
    5. 'd' → logprob: -5.667095184326172
    6. 'x' → logprob: -6.792095184326172
    7. ',' → logprob: -7.167095184326172
    8. '    
' → logprob: -7.292095184326172
    9. ')
' → logprob: -7.542095184326172
    10. '#' (adapté à ' #') → logprob: -7.542095184326172

Token 251: ' Then' (ID: 7801)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.23609420657157898
    2. 'g' → logprob: -2.1110942363739014
    3. '   ' → logprob: -3.2360942363739014
    4. 'from' → logprob: -3.8610942363739014
    5. 'x' → logprob: -4.986093997955322
    6. ' a' → logprob: -5.111093997955322
    7. 'd' → logprob: -5.361093997955322
    8. 'import' → logprob: -5.486093997955322
    9. 'for' → logprob: -5.736093997955322
    10. '#' → logprob: -7.361093997955322

Token 252: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.37403789162635803
    2. ' a' → logprob: -1.9990378618240356
    3. '   ' → logprob: -2.374037981033325
    4. 'g' → logprob: -3.374037981033325
    5. 'from' → logprob: -3.999037981033325
    6. 'import' → logprob: -4.249037742614746
    7. ' g' → logprob: -5.249037742614746
    8. ' from' → logprob: -5.499037742614746
    9. 'x' → logprob: -6.624037742614746
    10. 'for' → logprob: -6.749037742614746

Token 253: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009537404985167086
    2. '_' → logprob: -7.500953674316406
    3. '[' → logprob: -8.000953674316406
    4. '
' → logprob: -10.875953674316406
    5. ' ' → logprob: -11.500953674316406
    6. ' =' → logprob: -11.625953674316406
    7. '   ' → logprob: -11.875953674316406
    8. '_values' → logprob: -12.500953674316406
    9. '_zero' → logprob: -13.500953674316406
    10. '

' → logprob: -13.625953674316406

Token 254: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009454108658246696
    2. '[' → logprob: -7.000945568084717
    3. '_' → logprob: -11.625945091247559
    4. '1' → logprob: -12.000945091247559
    5. '   ' → logprob: -12.250945091247559
    6. ' ' → logprob: -12.625945091247559
    7. ']' → logprob: -13.000945091247559
    8. 'i' → logprob: -13.625945091247559
    9. '
' → logprob: -14.000945091247559
    10. '(' → logprob: -14.250945091247559

Token 255: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07112954556941986
    2. '[' → logprob: -3.196129560470581
    3. 's' → logprob: -5.071129322052002
    4. ',' → logprob: -5.571129322052002
    5. ']=' → logprob: -5.821129322052002
    6. '_]' → logprob: -5.821129322052002
    7. '0' → logprob: -5.946129322052002
    8. '_' → logprob: -5.946129322052002
    9. ' =' → logprob: -6.196129322052002
    10. ' ]' → logprob: -6.946129322052002

Token 256: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.000529202981851995
    2. ' a' → logprob: -8.750529289245605
    3. '[' → logprob: -9.000529289245605
    4. 'b' → logprob: -9.000529289245605
    5. '1' → logprob: -9.375529289245605
    6. '0' → logprob: -11.500529289245605
    7. '2' → logprob: -12.625529289245605
    8. '<|end|>' → logprob: -12.625529289245605
    9. ' ' → logprob: -12.750529289245605
    10. '...' → logprob: -12.750529289245605

Token 257: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.016588034108281136
    2. '2' → logprob: -4.51658821105957
    3. ']' → logprob: -5.89158821105957
    4. '1' → logprob: -7.39158821105957
    5. ',' → logprob: -7.64158821105957
    6. '3' → logprob: -8.26658821105957
    7. '[
' → logprob: -8.51658821105957
    8. '```' → logprob: -8.76658821105957
    9. '[]' → logprob: -9.14158821105957
    10. 'a' → logprob: -9.14158821105957

Token 258: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007258269935846329
    2. '3' → logprob: -5.632258415222168
    3. '4' → logprob: -6.132258415222168
    4. '1' → logprob: -7.257258415222168
    5. '0' → logprob: -7.632258415222168
    6. '[' → logprob: -9.007258415222168
    7. '```' → logprob: -10.007258415222168
    8. ']' → logprob: -10.132258415222168
    9. '   ' → logprob: -10.507258415222168
    10. 'n' → logprob: -11.132258415222168

Token 259: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009126550517976284
    2. ']=' → logprob: -5.384126663208008
    3. ' ]' → logprob: -6.009126663208008
    4. ' =' → logprob: -7.259126663208008
    5. '   ' → logprob: -7.509126663208008
    6. '=' → logprob: -8.259126663208008
    7. '']' → logprob: -8.384126663208008
    8. ')' → logprob: -9.384126663208008
    9. ',' → logprob: -10.009126663208008
    10. '[' → logprob: -10.259126663208008

Token 260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0659627690911293
    2. '[' → logprob: -3.565962791442871
    3. '=' → logprob: -4.565962791442871
    4. ']' → logprob: -4.690962791442871
    5. '   ' → logprob: -4.690962791442871
    6. ' =
' → logprob: -6.440962791442871
    7. ',' → logprob: -7.065962791442871
    8. ' ' → logprob: -7.440962791442871
    9. 'import' → logprob: -7.565962791442871
    10. ')' → logprob: -7.815962791442871

Token 261: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.3484528362751007
    2. 'b' → logprob: -1.2234528064727783
    3. ' ' → logprob: -13.0984525680542
    4. 'a' → logprob: -13.8484525680542
    5. ')b' → logprob: -14.0984525680542
    6. ' ' → logprob: -14.7859525680542
    7. ' a' → logprob: -14.7859525680542
    8. '   ' → logprob: -14.9734525680542
    9. '>b' → logprob: -15.0359525680542
    10. '	b' → logprob: -15.1609525680542

Token 262: '[n' (ID: 15433)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.46010974049568176
    2. '[n' → logprob: -1.0851097106933594
    3. 'n' → logprob: -4.835109710693359
    4. ']' → logprob: -5.210109710693359
    5. '[
' → logprob: -5.460109710693359
    6. ' =' → logprob: -5.835109710693359
    7. '0' → logprob: -6.210109710693359
    8. '=' → logprob: -6.335109710693359
    9. '#' → logprob: -6.460109710693359
    10. '\[' → logprob: -7.085109710693359

Token 263: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.024397889152169228
    2. '[n' → logprob: -3.774397850036621
    3. '[' → logprob: -7.524397850036621
    4. '])' → logprob: -8.774397850036621
    5. '   ' → logprob: -9.274397850036621
    6. '],' → logprob: -9.899397850036621
    7. '[
' → logprob: -10.024397850036621
    8. 'n' → logprob: -10.274397850036621
    9. '][' → logprob: -10.399397850036621
    10. ']
' → logprob: -10.649397850036621

Token 264: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6996261477470398
    2. 'g' → logprob: -1.6996262073516846
    3. 'a' → logprob: -1.8246262073516846
    4. ' a' → logprob: -2.9496262073516846
    5. ' g' → logprob: -3.0746262073516846
    6. 'from' → logprob: -4.6996259689331055
    7. 'd' → logprob: -4.8246259689331055
    8. 'import' → logprob: -4.9496259689331055
    9. ' gcd' → logprob: -5.0746259689331055
    10. ' d' → logprob: -5.3246259689331055

Token 265: '[' (ID: 58)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.011003255844116211
    2. '[' → logprob: -5.136003494262695
    3. 'n' → logprob: -6.136003494262695
    4. '   ' → logprob: -6.886003494262695
    5. '0' → logprob: -7.011003494262695
    6. '```' → logprob: -8.136003494262695
    7. ']' → logprob: -9.011003494262695
    8. '1' → logprob: -9.011003494262695
    9. '[
' → logprob: -9.011003494262695
    10. '
' → logprob: -9.261003494262695

Token 266: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0018498663557693362
    2. '0' → logprob: -6.62684965133667
    3. '1' → logprob: -8.501850128173828
    4. ' n' → logprob: -9.376850128173828
    5. '   ' → logprob: -9.376850128173828
    6. '[n' → logprob: -10.126850128173828
    7. ']' → logprob: -10.251850128173828
    8. '(n' → logprob: -11.501850128173828
    9. '  ' → logprob: -11.626850128173828
    10. '
' → logprob: -11.751850128173828

Token 267: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01565585471689701
    2. '[n' → logprob: -4.515655994415283
    3. '   ' → logprob: -6.140655994415283
    4. ']*' → logprob: -7.015655994415283
    5. '][' → logprob: -7.640655994415283
    6. '+' → logprob: -8.515655517578125
    7. '[' → logprob: -8.890655517578125
    8. '[
' → logprob: -9.265655517578125
    9. '+n' → logprob: -9.390655517578125
    10. ']
' → logprob: -9.515655517578125

Token 268: 'a' (ID: 64)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0014372545992955565
    2. '[n' → logprob: -6.751437187194824
    3. '   ' → logprob: -9.376437187194824
    4. '1' → logprob: -10.376437187194824
    5. '...' → logprob: -10.751437187194824
    6. ' n' → logprob: -10.751437187194824
    7. ']' → logprob: -10.751437187194824
    8. 'a' → logprob: -11.001437187194824
    9. '(n' → logprob: -11.376437187194824
    10. '0' → logprob: -11.376437187194824

Token 269: '[' (ID: 58)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.22289137542247772
    2. ']' → logprob: -1.9728913307189941
    3. '+' → logprob: -3.472891330718994
    4. 'n' → logprob: -4.222891330718994
    5. '[' → logprob: -4.847891330718994
    6. '   ' → logprob: -6.722891330718994
    7. '(n' → logprob: -6.847891330718994
    8. '+n' → logprob: -6.847891330718994
    9. '
' → logprob: -7.222891330718994
    10. '[
' → logprob: -7.722891330718994

Token 270: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008597672916948795
    2. 'n' → logprob: -5.0085978507995605
    3. '0' → logprob: -7.0085978507995605
    4. '+' → logprob: -7.3835978507995605
    5. '3' → logprob: -8.508597373962402
    6. '2' → logprob: -9.133597373962402
    7. '```' → logprob: -11.383597373962402
    8. ']' → logprob: -11.508597373962402
    9. ' ' → logprob: -12.133597373962402
    10. '(n' → logprob: -12.258597373962402

Token 271: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010022050701081753
    2. ']=' → logprob: -7.501002311706543
    3. '[n' → logprob: -8.751002311706543
    4. '   ' → logprob: -8.751002311706543
    5. '+' → logprob: -10.126002311706543
    6. ' ]' → logprob: -10.251002311706543
    7. ']
' → logprob: -11.001002311706543
    8. '']' → logprob: -11.751002311706543
    9. '],' → logprob: -12.126002311706543
    10. '[' → logprob: -12.751002311706543

Token 272: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6531161069869995
    2. ']' → logprob: -1.1531161069869995
    3. '   ' → logprob: -2.153116226196289
    4. '[n' → logprob: -3.778116226196289
    5. ' =' → logprob: -4.528116226196289
    6. '#' → logprob: -6.153116226196289
    7. ']=' → logprob: -6.153116226196289
    8. '[
' → logprob: -6.153116226196289
    9. ',' → logprob: -6.778116226196289
    10. '=' → logprob: -6.903116226196289

Token 273: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11290493607521057
    2. ' b' → logprob: -2.2379050254821777
    3. 'n' → logprob: -10.36290454864502
    4. ' n' → logprob: -10.98790454864502
    5. '   ' → logprob: -11.11290454864502
    6. ' ' → logprob: -11.98790454864502
    7. '[n' → logprob: -12.36290454864502
    8. '    ' → logprob: -13.36290454864502
    9. '       ' → logprob: -13.73790454864502
    10. '     ' → logprob: -13.86290454864502

Token 274: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.02809627167880535
    2. '[' → logprob: -3.7780961990356445
    3. ']' → logprob: -6.1530961990356445
    4. 'n' → logprob: -6.6530961990356445
    5. '[
' → logprob: -7.1530961990356445
    6. '\[' → logprob: -9.028096199035645
    7. '```' → logprob: -9.028096199035645
    8. '{' → logprob: -9.153096199035645
    9. '   ' → logprob: -9.403096199035645
    10. '0' → logprob: -10.653096199035645

Token 275: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6566445231437683
    2. ']' → logprob: -0.7816445231437683
    3. ' +' → logprob: -4.156644344329834
    4. '],' → logprob: -5.656644344329834
    5. ':]' → logprob: -6.656644344329834
    6. '+n' → logprob: -7.281644344329834
    7. '   ' → logprob: -7.531644344329834
    8. ' ]' → logprob: -7.656644344329834
    9. '+]' → logprob: -7.656644344329834
    10. ']+' → logprob: -8.031644821166992

Token 276: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004313330166041851
    2. '0' → logprob: -5.5043134689331055
    3. '2' → logprob: -9.254313468933105
    4. ']' → logprob: -10.004313468933105
    5. ' ' → logprob: -10.254313468933105
    6. '
' → logprob: -10.879313468933105
    7. '3' → logprob: -11.004313468933105
    8. '```' → logprob: -11.504313468933105
    9. 'n' → logprob: -12.254313468933105
    10. '4' → logprob: -12.879313468933105

Token 277: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6391049027442932
    2. '])' → logprob: -0.7641049027442932
    3. ')' → logprob: -5.889104843139648
    4. '],' → logprob: -6.264104843139648
    5. '   ' → logprob: -6.889104843139648
    6. '])
' → logprob: -8.764104843139648
    7. ']
' → logprob: -9.014104843139648
    8. '#' → logprob: -9.139104843139648
    9. ' ])' → logprob: -9.514104843139648
    10. ' ]' → logprob: -9.889104843139648

Token 278: ' etc' (ID: 5178)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24291129410266876
    2. ')' → logprob: -2.1179113388061523
    3. 'a' → logprob: -2.4929113388061523
    4. '0' → logprob: -5.867911338806152
    5. 'n' → logprob: -5.992911338806152
    6. '#' → logprob: -6.367911338806152
    7. 'import' → logprob: -6.492911338806152
    8. ' )' → logprob: -6.992911338806152
    9. '...' → logprob: -8.242911338806152
    10. ' ' → logprob: -8.242911338806152

Token 279: '.

' (ID: 364)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.37541264295578003
    2. '   ' → logprob: -1.7504127025604248
    3. 'g' → logprob: -2.750412702560425
    4. 'for' → logprob: -4.125412464141846
    5. 'i' → logprob: -4.250412464141846
    6. '#' → logprob: -4.625412464141846
    7. 'x' → logprob: -5.125412464141846
    8. 'from' → logprob: -5.250412464141846
    9. 'd' → logprob: -5.375412464141846
    10. '0' → logprob: -5.750412464141846

Token 280: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.615746796131134
    2. 'a' → logprob: -0.865746796131134
    3. 'g' → logprob: -4.865746974945068
    4. '#' → logprob: -4.990746974945068
    5. ' a' → logprob: -4.990746974945068
    6. 'd' → logprob: -5.490746974945068
    7. 'x' → logprob: -5.615746974945068
    8. 'for' → logprob: -5.990746974945068
    9. '    
' → logprob: -6.490746974945068
    10. ' #' → logprob: -6.615746974945068

Token 281: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9622121453285217
    2. 'g' → logprob: -1.462212085723877
    3. '   ' → logprob: -1.712212085723877
    4. 'from' → logprob: -2.212212085723877
    5. '#' (adapté à ' #') → logprob: -3.587212085723877
    6. 'import' → logprob: -3.837212085723877
    7. 'for' → logprob: -3.837212085723877
    8. 'd' → logprob: -4.462212085723877
    9. 'def' → logprob: -5.712212085723877
    10. 'x' → logprob: -5.712212085723877

Token 282: ' We' (ID: 1416)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3752315640449524
    2. 'g' → logprob: -1.8752315044403076
    3. 'import' → logprob: -2.7502315044403076
    4. '#' → logprob: -3.3752315044403076
    5. 'for' → logprob: -3.5002315044403076
    6. '   ' → logprob: -5.125231742858887
    7. 'def' → logprob: -5.375231742858887
    8. 'a' → logprob: -5.375231742858887
    9. 'prod' → logprob: -6.125231742858887
    10. 'first' → logprob: -6.250231742858887

Token 283: ' can' (ID: 665)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17916959524154663
    2. '=' → logprob: -2.1791696548461914
    3. '[' → logprob: -4.054169654846191
    4. '   ' → logprob: -4.554169654846191
    5. ' need' → logprob: -4.679169654846191
    6. 'need' → logprob: -5.554169654846191
    7. '_' → logprob: -5.929169654846191
    8. '#' → logprob: -7.054169654846191
    9. 'import' → logprob: -7.054169654846191
    10. ' can' → logprob: -7.429169654846191

Token 284: ' get' (ID: 717)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.44972938299179077
    2. ' try' → logprob: -1.0747294425964355
    3. '   ' → logprob: -5.1997294425964355
    4. 'find' → logprob: -5.9497294425964355
    5. ' use' → logprob: -6.1997294425964355
    6. 'for' → logprob: -6.3247294425964355
    7. 'guess' → logprob: -6.4497294425964355
    8. ' find' → logprob: -6.6997294425964355
    9. 'import' → logprob: -6.8247294425964355
    10. ' for' → logprob: -7.1997294425964355

Token 285: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6154835820198059
    2. 'a' → logprob: -0.8654835820198059
    3. ' d' → logprob: -4.36548376083374
    4. 'd' → logprob: -4.86548376083374
    5. ' x' → logprob: -5.61548376083374
    6. 'import' → logprob: -5.86548376083374
    7. '   ' → logprob: -5.86548376083374
    8. 'x' → logprob: -6.36548376083374
    9. ' math' → logprob: -6.99048376083374
    10. 'from' → logprob: -7.11548376083374

Token 286: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.051865242421627045
    2. ' =' → logprob: -3.301865339279175
    3. '[' → logprob: -4.426865100860596
    4. '_' → logprob: -6.676865100860596
    5. ' ' → logprob: -8.676865577697754
    6. '=' → logprob: -9.551865577697754
    7. '   ' → logprob: -9.551865577697754
    8. '=[' → logprob: -9.801865577697754
    9. ' =[' → logprob: -10.301865577697754
    10. '_candidates' → logprob: -10.676865577697754

Token 287: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03119855560362339
    2. '[' → logprob: -3.531198501586914
    3. ' ' → logprob: -7.406198501586914
    4. ' =' → logprob: -8.406198501586914
    5. '_' → logprob: -8.531198501586914
    6. '=' → logprob: -9.406198501586914
    7. ')' → logprob: -9.656198501586914
    8. ']' → logprob: -9.781198501586914
    9. 'import' → logprob: -9.781198501586914
    10. '
' → logprob: -9.906198501586914

Token 288: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3867056369781494
    2. '[' → logprob: -1.3867056369781494
    3. ')' → logprob: -3.3867056369781494
    4. '0' → logprob: -4.38670539855957
    5. ' =' → logprob: -4.88670539855957
    6. '_' → logprob: -5.38670539855957
    7. '_]' → logprob: -5.88670539855957
    8. ']=' → logprob: -6.01170539855957
    9. '   ' → logprob: -6.01170539855957
    10. ' ]' → logprob: -6.63670539855957

Token 289: ' by' (ID: 656)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.028347641229629517
    2. '=' → logprob: -3.6533477306365967
    3. '   ' → logprob: -6.653347492218018
    4. ',' → logprob: -8.778347969055176
    5. 'import' → logprob: -9.153347969055176
    6. '0' → logprob: -9.278347969055176
    7. 's' → logprob: -9.528347969055176
    8. ' ' → logprob: -9.653347969055176
    9. 'from' → logprob: -9.653347969055176
    10. ' =
' → logprob: -10.403347969055176

Token 290: ' gcd' (ID: 106918)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.26117822527885437
    2. 'b' → logprob: -1.7611782550811768
    3. 'a' → logprob: -3.6361782550811768
    4. 'g' → logprob: -4.386178016662598
    5. ' math' → logprob: -4.511178016662598
    6. 'import' → logprob: -6.261178016662598
    7. 'int' → logprob: -6.386178016662598
    8. ' b' → logprob: -6.511178016662598
    9. 'for' → logprob: -6.886178016662598
    10. '   ' → logprob: -7.261178016662598

Token 291: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.036347683519124985
    2. '(
' → logprob: -4.28634786605835
    3. '(b' → logprob: -4.66134786605835
    4. ' =' → logprob: -4.78634786605835
    5. '=' → logprob: -6.53634786605835
    6. ' (' → logprob: -6.78634786605835
    7. '_' → logprob: -7.53634786605835
    8. '(a' → logprob: -8.286347389221191
    9. '   ' → logprob: -8.661347389221191
    10. '()' → logprob: -9.536347389221191

Token 292: ' first' (ID: 1577)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.062081288546323776
    2. ' b' → logprob: -2.8120813369750977
    3. '[b' → logprob: -9.937081336975098
    4. '(b' → logprob: -10.812081336975098
    5. '   ' → logprob: -10.937081336975098
    6. ' ' → logprob: -11.437081336975098
    7. ' [' → logprob: -12.312081336975098
    8. ' (' → logprob: -12.437081336975098
    9. ' math' → logprob: -12.687081336975098
    10. 'math' → logprob: -13.562081336975098

Token 293: ' n' (ID: 297)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.28632989525794983
    2. 'b' → logprob: -1.7863298654556274
    3. 'n' → logprob: -2.661329984664917
    4. ' ' → logprob: -5.911329746246338
    5. ' b' → logprob: -6.536329746246338
    6. ' n' → logprob: -6.661329746246338
    7. '2' → logprob: -6.786329746246338
    8. '(n' → logprob: -6.786329746246338
    9. '4' → logprob: -6.911329746246338
    10. ' three' → logprob: -7.536329746246338

Token 294: ' elements' (ID: 8632)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11905565857887268
    2. '(b' → logprob: -2.49405574798584
    3. 'b' → logprob: -4.74405574798584
    4. '(
' → logprob: -4.86905574798584
    5. ' (' → logprob: -5.49405574798584
    6. '_b' → logprob: -5.74405574798584
    7. '_' → logprob: -5.99405574798584
    8. ' ' → logprob: -6.99405574798584
    9. ' b' → logprob: -7.24405574798584
    10. '[' → logprob: -7.74405574798584

Token 295: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09950760751962662
    2. 'a' → logprob: -2.9745075702667236
    3. ' =' → logprob: -3.8495075702667236
    4. '    
' → logprob: -4.849507808685303
    5. '
' → logprob: -6.099507808685303
    6. '=' → logprob: -6.224507808685303
    7. '(a' → logprob: -6.474507808685303
    8. '(' → logprob: -6.599507808685303
    9. 'import' → logprob: -6.724507808685303
    10. ',' → logprob: -7.224507808685303

Token 296: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01612645387649536
    2. ' b' → logprob: -4.14112663269043
    3. '   ' → logprob: -9.51612663269043
    4. ' ' → logprob: -11.26612663269043
    5. '  ' → logprob: -13.39112663269043
    6. '
' → logprob: -13.76612663269043
    7. '[b' → logprob: -14.14112663269043
    8. '    ' → logprob: -14.39112663269043
    9. '```' → logprob: -15.26612663269043
    10. ')' → logprob: -15.26612663269043

Token 297: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5255492329597473
    2. 'a' → logprob: -1.0255491733551025
    3. ' =' → logprob: -3.6505491733551025
    4. '    
' → logprob: -5.400549411773682
    5. '_' → logprob: -5.775549411773682
    6. '=' → logprob: -5.775549411773682
    7. '(' → logprob: -6.025549411773682
    8. 'g' → logprob: -6.400549411773682
    9. 'ans' → logprob: -6.400549411773682
    10. 'x' → logprob: -6.775549411773682

Token 298: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7773755788803101
    2. 'a' → logprob: -1.52737557888031
    3. ' =' → logprob: -1.52737557888031
    4. '_' → logprob: -3.2773756980895996
    5. ' a' → logprob: -4.1523756980896
    6. '0' → logprob: -4.2773756980896
    7. '=' → logprob: -4.2773756980896
    8. '(' → logprob: -5.0273756980896
    9. '_a' → logprob: -5.7773756980896
    10. '    
' → logprob: -6.0273756980896

Token 299: ' g' (ID: 329)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2267233282327652
    2. 'a' → logprob: -1.726723313331604
    3. ' a' → logprob: -4.8517231941223145
    4. '    
' → logprob: -4.9767231941223145
    5. '0' → logprob: -5.3517231941223145
    6. '
' → logprob: -6.6017231941223145
    7. ' =' → logprob: -6.8517231941223145
    8. 'x' → logprob: -7.8517231941223145
    9. '  
' → logprob: -7.8517231941223145
    10. ' 
' → logprob: -7.9767231941223145

Token 300: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18149887025356293
    2. '=' → logprob: -1.8064988851547241
    3. '_' → logprob: -7.056499004364014
    4. '   ' → logprob: -8.181498527526855
    5. ' ' → logprob: -8.556498527526855
    6. '=b' → logprob: -8.681498527526855
    7. '=g' → logprob: -9.056498527526855
    8. 'b' → logprob: -10.431498527526855
    9. 'g' → logprob: -10.681498527526855
    10. '_=' → logprob: -11.056498527526855

Token 301: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004201986361294985
    2. '0' → logprob: -5.879201889038086
    3. 'math' → logprob: -6.629201889038086
    4. '   ' → logprob: -10.254201889038086
    5. ' b' → logprob: -10.254201889038086
    6. ' ' → logprob: -13.254201889038086
    7. ' math' → logprob: -13.504201889038086
    8. 'abs' → logprob: -14.879201889038086
    9. '       ' → logprob: -15.004201889038086
    10. '	b' → logprob: -15.504201889038086

Token 302: '[' (ID: 58)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.04311714693903923
    2. '[' → logprob: -3.168117046356201
    3. '0' → logprob: -9.41811752319336
    4. '
' → logprob: -11.41811752319336
    5. '[:]' → logprob: -12.04311752319336
    6. ' [:' → logprob: -12.16811752319336
    7. '   ' → logprob: -12.41811752319336
    8. '.copy' → logprob: -12.91811752319336
    9. ':' → logprob: -13.41811752319336
    10. '[n' → logprob: -13.91811752319336

Token 303: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.721228368813172e-05
    2. ':' → logprob: -10.000086784362793
    3. ' ' → logprob: -10.125086784362793
    4. ' :' → logprob: -13.750086784362793
    5. 'n' → logprob: -15.000086784362793
    6. ':n' → logprob: -16.00008773803711
    7. '   ' → logprob: -16.25008773803711
    8. '  ' → logprob: -17.12508773803711
    9. '[:' → logprob: -18.37508773803711
    10. '    ' → logprob: -18.62508773803711

Token 304: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10400225967168808
    2. ',' → logprob: -3.6040022373199463
    3. ')
' → logprob: -3.6040022373199463
    4. ']' → logprob: -3.9790022373199463
    5. '])' → logprob: -4.104002475738525
    6. ' )' → logprob: -5.604002475738525
    7. ',
' → logprob: -6.479002475738525
    8. 'g' → logprob: -7.229002475738525
    9. ']
' → logprob: -7.854002475738525
    10. '
' → logprob: -7.979002475738525

Token 305: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24891622364521027
    2. 'for' → logprob: -2.1239161491394043
    3. '   ' → logprob: -2.8739161491394043
    4. '    
' → logprob: -4.123916149139404
    5. 'while' → logprob: -4.248916149139404
    6. '  
' → logprob: -5.498916149139404
    7. ' 
' → logprob: -5.873916149139404
    8. ' for' → logprob: -5.998916149139404
    9. '   
' → logprob: -6.623916149139404
    10. '=' → logprob: -7.373916149139404

Token 306: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9231131076812744
    2. '
' → logprob: -1.4231131076812744
    3. 'for' (adapté à ' for') → logprob: -1.7981131076812744
    4. '    
' → logprob: -1.7981131076812744
    5. ' for' → logprob: -4.298112869262695
    6. ' 
' → logprob: -5.673112869262695
    7. '   
' → logprob: -5.798112869262695
    8. '=' → logprob: -5.923112869262695
    9. '  
' → logprob: -6.298112869262695
    10. 'import' → logprob: -6.548112869262695

Token 307: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03810414299368858
    2. ' i' → logprob: -3.2881040573120117
    3. 'x' → logprob: -10.413104057312012
    4. 'k' → logprob: -10.538104057312012
    5. ' ' → logprob: -12.788104057312012
    6. ' x' → logprob: -13.288104057312012
    7. '   ' → logprob: -14.288104057312012
    8. ' k' → logprob: -14.663104057312012
    9. '	i' → logprob: -14.913104057312012
    10. '  ' → logprob: -16.913105010986328

Token 308: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03805767372250557
    2. 'in' → logprob: -3.288057565689087
    3. ' ' → logprob: -11.663057327270508
    4. '	in' → logprob: -12.788057327270508
    5. '   ' → logprob: -12.913057327270508
    6. '    ' → logprob: -13.663057327270508
    7. 'import' → logprob: -14.788057327270508
    8. '  ' → logprob: -14.913057327270508
    9. ',' → logprob: -15.788057327270508
    10. ' i' → logprob: -16.038057327270508

Token 309: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008619185537099838
    2. ' range' → logprob: -4.75861930847168
    3. '   ' → logprob: -12.50861930847168
    4. ' ' → logprob: -15.00861930847168
    5. 'b' → logprob: -15.13361930847168
    6. '  ' → logprob: -15.75861930847168
    7. '(range' → logprob: -16.63361930847168
    8. ' b' → logprob: -17.63361930847168
    9. '	range' → logprob: -17.63361930847168
    10. '    ' → logprob: -17.88361930847168

Token 310: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6977146863937378
    2. '1' → logprob: -0.6977146863937378
    3. ' ' → logprob: -5.697714805603027
    4. '(n' → logprob: -7.572714805603027
    5. '   ' → logprob: -7.572714805603027
    6. ' n' → logprob: -9.572714805603027
    7. ' (' → logprob: -9.572714805603027
    8. 'n' → logprob: -10.572714805603027
    9. ',' → logprob: -12.072714805603027
    10. '    ' → logprob: -12.822714805603027

Token 311: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001290454383706674
    2. 'n' → logprob: -9.000128746032715
    3. ' ' → logprob: -12.375128746032715
    4. '   ' → logprob: -13.750128746032715
    5. ' n' → logprob: -15.125128746032715
    6. '0' → logprob: -17.87512969970703
    7. '    ' → logprob: -19.12512969970703
    8. '	n' → logprob: -19.25012969970703
    9. '(' → logprob: -19.37512969970703
    10. '
' → logprob: -20.12512969970703

Token 312: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1455792337656021
    2. ',n' → logprob: -2.1455793380737305
    3. ' ,' → logprob: -4.3955793380737305
    4. 'n' → logprob: -5.2705793380737305
    5. ' n' → logprob: -7.0205793380737305
    6. '   ' → logprob: -9.14557933807373
    7. '	n' → logprob: -13.27057933807373
    8. ',
' → logprob: -13.27057933807373
    9. '    ' → logprob: -14.89557933807373
    10. '<n' → logprob: -14.89557933807373

Token 313: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0019341122824698687
    2. ' n' → logprob: -6.251934051513672
    3. '   ' → logprob: -12.126934051513672
    4. '	n' → logprob: -16.876934051513672
    5. 'len' → logprob: -17.501934051513672
    6. '    
' → logprob: -18.751934051513672
    7. '    ' → logprob: -19.126934051513672
    8. ' ' → logprob: -19.376934051513672
    9. '(n' → logprob: -19.626934051513672
    10. '  ' → logprob: -19.626934051513672

Token 314: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2547067403793335
    2. '):' → logprob: -1.5047067403793335
    3. '+' → logprob: -6.004706859588623
    4. '   ' → logprob: -9.004706382751465
    5. ':' → logprob: -9.754706382751465
    6. ' ):
' → logprob: -10.379706382751465
    7. ')' → logprob: -10.629706382751465
    8. ' ):' → logprob: -10.754706382751465
    9. ',' → logprob: -11.004706382751465
    10. 'n' → logprob: -12.129706382751465

Token 315: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01942233182489872
    2. '   ' → logprob: -4.01942253112793
    3. ' g' → logprob: -6.89442253112793
    4. '
' → logprob: -8.64442253112793
    5. '<|end|>' → logprob: -10.89442253112793
    6. 'g' → logprob: -11.01942253112793
    7. '    
' → logprob: -11.14442253112793
    8. '	g' → logprob: -12.39442253112793
    9. '```' → logprob: -12.39442253112793
    10. ',' → logprob: -12.64442253112793

Token 316: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.2045692801475525
    2. ' g' → logprob: -1.7045693397521973
    3. '   ' → logprob: -5.829569339752197
    4. '       ' → logprob: -9.079568862915039
    5. '	g' → logprob: -9.954568862915039
    6. 'import' → logprob: -10.579568862915039
    7. '           ' → logprob: -11.704568862915039
    8. ' ' → logprob: -12.079568862915039
    9. '    ' → logprob: -12.704568862915039
    10. '_g' → logprob: -13.579568862915039

Token 317: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163628220558167
    2. ' =' → logprob: -4.264163494110107
    3. '*=' → logprob: -16.764163970947266
    4. '=g' → logprob: -18.139163970947266
    5. '   ' → logprob: -18.764163970947266
    6. ' ' → logprob: -19.014163970947266
    7. '=

' → logprob: -19.389163970947266
    8. '=Math' → logprob: -19.389163970947266
    9. '%=' → logprob: -19.514163970947266
    10. '.=' → logprob: -20.139163970947266

Token 318: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.0001234428636962548
    2. ' math' → logprob: -9.000123023986816
    3. '(math' → logprob: -17.750123977661133
    4. 'Math' → logprob: -18.750123977661133
    5. '   ' → logprob: -19.250123977661133
    6. ' ' → logprob: -20.625123977661133
    7. 'g' → logprob: -20.875123977661133
    8. '.math' → logprob: -21.125123977661133
    9. '_math' → logprob: -21.500123977661133
    10. 'import' → logprob: -21.750123977661133

Token 319: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -1.0921942703134846e-05
    2. 'g' → logprob: -11.87501049041748
    3. '.' → logprob: -12.50001049041748
    4. ' gcd' → logprob: -16.250011444091797
    5. '#g' → logprob: -17.625011444091797
    6. '_g' → logprob: -18.125011444091797
    7. '=g' → logprob: -19.125011444091797
    8. ',g' → logprob: -19.500011444091797
    9. '	g' → logprob: -19.750011444091797
    10. ':g' → logprob: -20.250011444091797

Token 320: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0006756199873052537
    2. 'cf' → logprob: -7.500675678253174
    3. 'cdf' → logprob: -9.625675201416016
    4. 'g' → logprob: -10.250675201416016
    5. 'cdn' → logprob: -11.875675201416016
    6. 'dc' → logprob: -12.000675201416016
    7. 'c' → logprob: -13.125675201416016
    8. 'cl' → logprob: -14.250675201416016
    9. 'CD' → logprob: -14.250675201416016
    10. 'ef' → logprob: -14.250675201416016

Token 321: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -1.2113979209971149e-05
    2. '(' → logprob: -12.000012397766113
    3. 'g' → logprob: -12.125012397766113
    4. '(b' → logprob: -14.500012397766113
    5. 'b' → logprob: -18.250011444091797
    6. '[g' → logprob: -18.750011444091797
    7. ' g' → logprob: -19.125011444091797
    8. '(
' → logprob: -19.625011444091797
    9. ' (' → logprob: -19.625011444091797
    10. ',g' → logprob: -20.375011444091797

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002230309881269932
    2. ',b' → logprob: -6.252230167388916
    3. ' ,' → logprob: -8.127230644226074
    4. 'b' → logprob: -13.002230644226074
    5. ' b' → logprob: -13.127230644226074
    6. ',g' → logprob: -13.752230644226074
    7. ',
' → logprob: -14.627230644226074
    8. '   ' → logprob: -14.752230644226074
    9. '    ' → logprob: -17.377229690551758
    10. 'g' → logprob: -17.502229690551758

Token 323: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.029750484973192215
    2. ' b' → logprob: -3.5297505855560303
    3. '   ' → logprob: -17.90475082397461
    4. ')b' → logprob: -18.65475082397461
    5. '	b' → logprob: -19.90475082397461
    6. ' ' → logprob: -20.02975082397461
    7. ')' → logprob: -20.15475082397461
    8. '    ' → logprob: -20.27975082397461
    9. '(b' → logprob: -21.15475082397461
    10. '  ' → logprob: -22.02975082397461

Token 324: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8624639324116288e-06
    2. 'i' → logprob: -13.500001907348633
    3. '[' → logprob: -14.875001907348633
    4. '   ' → logprob: -16.750001907348633
    5. '[
' → logprob: -16.875001907348633
    6. '```' → logprob: -19.125001907348633
    7. ' i' → logprob: -19.625001907348633
    8. ' ' → logprob: -20.000001907348633
    9. ' [' → logprob: -20.375001907348633
    10. ')' → logprob: -20.875001907348633

Token 325: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.004145591985434294
    2. ')' → logprob: -5.504145622253418
    3. '))' → logprob: -9.879145622253418
    4. '])
' → logprob: -12.004145622253418
    5. ')])' → logprob: -12.754145622253418
    6. ' ])' → logprob: -12.879145622253418
    7. ')
' → logprob: -13.879145622253418
    8. ')]' → logprob: -14.129145622253418
    9. ''])' → logprob: -14.379145622253418
    10. ']' → logprob: -14.504145622253418

Token 326: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4684240520000458
    2. 'a' → logprob: -1.4684240818023682
    3. '
' → logprob: -2.343424081802368
    4. '    
' → logprob: -3.093424081802368
    5. '  
' → logprob: -6.968423843383789
    6. '   
' → logprob: -7.843423843383789
    7. '```' → logprob: -8.843423843383789
    8. 'for' → logprob: -8.843423843383789
    9. '

' → logprob: -8.968423843383789
    10. 'print' → logprob: -9.218423843383789

Token 327: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5415513515472412
    2. 'a' (adapté à ' a') → logprob: -1.1665513515472412
    3. '
' → logprob: -2.666551351547241
    4. '    
' → logprob: -3.416551351547241
    5. ' a' → logprob: -6.66655158996582
    6. '<|end|>' → logprob: -7.16655158996582
    7. '

' → logprob: -7.29155158996582
    8. 'print' → logprob: -7.66655158996582
    9. '  
' → logprob: -8.54155158996582
    10. ',' → logprob: -8.79155158996582

Token 328: '0' (ID: 15)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0004897649050690234
    2. '=' → logprob: -8.125490188598633
    3. '[' → logprob: -8.625490188598633
    4. ' =[' → logprob: -11.875490188598633
    5. '.append' → logprob: -12.375490188598633
    6. '=[' → logprob: -13.750490188598633
    7. ',' → logprob: -14.500490188598633
    8. '[]' → logprob: -15.625490188598633
    9. '=[]' → logprob: -15.625490188598633
    10. '0' → logprob: -16.125490188598633

Token 329: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005929274018853903
    2. '=' → logprob: -5.130929470062256
    3. '_' → logprob: -14.880928993225098
    4. ',' → logprob: -16.380929946899414
    5. '   ' → logprob: -16.380929946899414
    6. ' ' → logprob: -16.880929946899414
    7. ' =
' → logprob: -17.130929946899414
    8. '    ' → logprob: -17.380929946899414
    9. ')' → logprob: -17.880929946899414
    10. 's' → logprob: -18.005929946899414

Token 330: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0003727582807186991
    2. ' g' → logprob: -8.500372886657715
    3. 'abs' → logprob: -8.750372886657715
    4. 'int' → logprob: -12.000372886657715
    5. 'math' → logprob: -13.500372886657715
    6. ' abs' → logprob: -13.625372886657715
    7. 'b' → logprob: -13.625372886657715
    8. '   ' → logprob: -14.375372886657715
    9. ' math' → logprob: -16.6253719329834
    10. '2' → logprob: -16.8753719329834

Token 331: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44339779019355774
    2. '
' → logprob: -1.1933977603912354
    3. '<|end|>' → logprob: -3.4433977603912354
    4. '    
' → logprob: -4.3183979988098145
    5. 'a' → logprob: -5.8183979988098145
    6. '\n' → logprob: -6.8183979988098145
    7. '<|end|>' → logprob: -6.8183979988098145
    8. '  
' → logprob: -7.3183979988098145
    9. '*a' → logprob: -7.3183979988098145
    10. '#' → logprob: -7.8183979988098145

Token 332: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11725491285324097
    2. 'a' → logprob: -2.8672549724578857
    3. '<|end|>' → logprob: -3.8672549724578857
    4. '    
' → logprob: -4.117254734039307
    5. '
' → logprob: -4.742254734039307
    6. '```' → logprob: -6.242254734039307
    7. '#' → logprob: -6.742254734039307
    8. '<|end|>' → logprob: -6.867254734039307
    9. ',' → logprob: -7.367254734039307
    10. 'for' → logprob: -7.742254734039307

Token 333: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -9.968312951968983e-06
    2. 'print' → logprob: -12.750009536743164
    3. '   ' → logprob: -13.250009536743164
    4. 'import' → logprob: -13.500009536743164
    5. 'ans' → logprob: -13.750009536743164
    6. ' a' → logprob: -14.500009536743164
    7. 'result' → logprob: -14.625009536743164
    8. 'res' → logprob: -14.625009536743164
    9. 'answers' → logprob: -14.750009536743164
    10. 'from' → logprob: -15.000009536743164

Token 334: ' Then' (ID: 7801)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00011236425780225545
    2. '#' → logprob: -10.625112533569336
    3. ' a' → logprob: -10.625112533569336
    4. '   ' → logprob: -11.125112533569336
    5. 'odd' → logprob: -11.500112533569336
    6. 'import' → logprob: -11.625112533569336
    7. 'ans' → logprob: -11.625112533569336
    8. 'res' → logprob: -12.250112533569336
    9. 'from' → logprob: -12.375112533569336
    10. 'print' → logprob: -12.500112533569336

Token 335: ' get' (ID: 717)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.38842692971229553
    2. ' a' → logprob: -1.1384268999099731
    3. '   ' → logprob: -6.513426780700684
    4. 'import' → logprob: -10.638426780700684
    5. '    
' → logprob: -11.763426780700684
    6. '#' → logprob: -11.888426780700684
    7. 'from' → logprob: -12.263426780700684
    8. '	a' → logprob: -12.388426780700684
    9. '```' → logprob: -12.763426780700684
    10. '    ' → logprob: -13.013426780700684

Token 336: ' odd' (ID: 14210)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0019751458894461393
    2. ' a' → logprob: -6.251975059509277
    3. '   ' → logprob: -10.876975059509277
    4. '[a' → logprob: -11.501975059509277
    5. '[' → logprob: -12.001975059509277
    6. 'rest' → logprob: -12.126975059509277
    7. 'ans' → logprob: -13.501975059509277
    8. 'the' → logprob: -13.751975059509277
    9. ' the' → logprob: -14.251975059509277
    10. ' rest' → logprob: -14.626975059509277

Token 337: ' elements' (ID: 8632)
  Prédit: '_elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.6366980075836182
    2. 's' → logprob: -1.7616980075836182
    3. ' =' → logprob: -2.011698007583618
    4. 'elements' → logprob: -2.886698007583618
    5. 'a' → logprob: -3.261698007583618
    6. '_numbers' → logprob: -3.261698007583618
    7. '_nums' → logprob: -4.511697769165039
    8. '_values' → logprob: -5.136697769165039
    9. 'nums' → logprob: -6.011697769165039
    10. '_a' → logprob: -6.011697769165039

Token 338: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005115157458931208
    2. 'a' → logprob: -5.505115032196045
    3. '    
' → logprob: -7.505115032196045
    4. ' =' → logprob: -8.505115509033203
    5. ':' → logprob: -9.255115509033203
    6. ' a' → logprob: -9.505115509033203
    7. '
' → logprob: -10.505115509033203
    8. ',' → logprob: -10.630115509033203
    9. '[' → logprob: -11.380115509033203
    10. '  ' → logprob: -12.005115509033203

Token 339: ' dividing' (ID: 94879)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.04935766011476517
    2. '[b' → logprob: -3.2993576526641846
    3. '[' → logprob: -4.549357891082764
    4. '[o' → logprob: -8.049357414245605
    5. '[i' → logprob: -8.924357414245605
    6. ' [' → logprob: -9.049357414245605
    7. '[j' → logprob: -10.799357414245605
    8. 'a' → logprob: -11.049357414245605
    9. '[p' → logprob: -11.549357414245605
    10. '[]
' → logprob: -11.549357414245605

Token 340: ' first' (ID: 1577)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20357410609722137
    2. ' b' → logprob: -1.9535740613937378
    3. '   ' → logprob: -3.7035741806030273
    4. '[b' → logprob: -4.953574180603027
    5. ' each' → logprob: -5.203574180603027
    6. ' [' → logprob: -6.453574180603027
    7. 'each' → logprob: -6.703574180603027
    8. '[' → logprob: -6.828574180603027
    9. '    ' → logprob: -8.203574180603027
    10. '[i' → logprob: -8.328574180603027

Token 341: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006715967319905758
    2. ' n' → logprob: -5.006715774536133
    3. '   ' → logprob: -14.631715774536133
    4. '	n' → logprob: -16.381715774536133
    5. '_n' → logprob: -16.881715774536133
    6. ' ' → logprob: -17.381715774536133
    7. '[n' → logprob: -17.506715774536133
    8. '(n' → logprob: -18.131715774536133
    9. '[' → logprob: -19.131715774536133
    10. '  ' → logprob: -19.256715774536133

Token 342: ' elements' (ID: 8632)
  Prédit: ' elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.2701232433319092
    2. ' b' → logprob: -2.145123243331909
    3. 'b' → logprob: -2.645123243331909
    4. 'elements' → logprob: -3.520123243331909
    5. ' tokens' → logprob: -4.395123481750488
    6. 'tokens' → logprob: -5.270123481750488
    7. ' products' → logprob: -7.645123481750488
    8. '   ' → logprob: -8.395123481750488
    9. ' items' → logprob: -8.895123481750488
    10. ' entries' → logprob: -9.020123481750488

Token 343: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.12274585664272308
    2. '   ' → logprob: -2.4977457523345947
    3. ',' → logprob: -4.122745990753174
    4. 'by' → logprob: -4.872745990753174
    5. '[' → logprob: -5.872745990753174
    6. ' for' → logprob: -5.997745990753174
    7. 'for' → logprob: -7.122745990753174
    8. '    ' → logprob: -7.247745990753174
    9. '[i' → logprob: -7.372745990753174
    10. '<|end|>' → logprob: -7.872745990753174

Token 344: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0019289902411401272
    2. ' a' → logprob: -6.251928806304932
    3. 'g' → logprob: -14.75192928314209
    4. ' g' → logprob: -17.251928329467773
    5. '   ' → logprob: -18.501928329467773
    6. ' ' → logprob: -18.751928329467773
    7. '	a' → logprob: -20.876928329467773
    8. '  ' → logprob: -21.501928329467773
    9. '```' → logprob: -22.501928329467773
    10. '`' → logprob: -23.126928329467773

Token 345: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.00000286102295
    3. ' ' → logprob: -15.12500286102295
    4. '_' → logprob: -17.875001907348633
    5. '   ' → logprob: -19.250001907348633
    6. '[i' → logprob: -19.875001907348633
    7. '(' → logprob: -20.125001907348633
    8. '０' → logprob: -20.250001907348633
    9. ' [' → logprob: -20.250001907348633
    10. '[
' → logprob: -20.375001907348633

Token 346: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2521873116493225
    2. '   ' → logprob: -1.5021872520446777
    3. '    
' → logprob: -8.627187728881836
    4. ' a' → logprob: -10.252187728881836
    5. 'odd' → logprob: -10.502187728881836
    6. '```' → logprob: -12.627187728881836
    7. '
' → logprob: -13.002187728881836
    8. 'ans' → logprob: -13.127187728881836
    9. '	a' → logprob: -13.502187728881836
    10. '  ' → logprob: -13.627187728881836

Token 347: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08098439872264862
    2. 'a' → logprob: -2.580984354019165
    3. '    
' → logprob: -6.330984592437744
    4. '
' → logprob: -8.455984115600586
    5. ' a' → logprob: -10.330984115600586
    6. '```' → logprob: -10.455984115600586
    7. '  
' → logprob: -11.955984115600586
    8. '   
' → logprob: -12.205984115600586
    9. 'ai' → logprob: -12.705984115600586
    10. '	a' → logprob: -12.830984115600586

Token 348: ' odds' (ID: 28374)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.027309535071253777
    2. ' a' → logprob: -3.6523094177246094
    3. '   ' → logprob: -7.027309417724609
    4. 'odd' → logprob: -10.02730941772461
    5. '    
' → logprob: -10.40230941772461
    6. 'ai' → logprob: -10.65230941772461
    7. '```' → logprob: -12.27730941772461
    8. 'ans' → logprob: -12.52730941772461
    9. ' odd' → logprob: -12.52730941772461
    10. 'ao' → logprob: -13.02730941772461

Token 349: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759401321411133
    2. '=' → logprob: -0.8259401321411133
    3. '   ' → logprob: -15.075940132141113
    4. '[' → logprob: -16.575939178466797
    5. '＝' → logprob: -16.575939178466797
    6. ' =[' → logprob: -16.825939178466797
    7. 's' → logprob: -17.075939178466797
    8. ' ' → logprob: -17.200939178466797
    9. '=[]' → logprob: -17.325939178466797
    10. '=[' → logprob: -17.325939178466797

Token 350: ' []
' (ID: 8911)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.0016989875584840775
    2. ' [' → logprob: -6.501698970794678
    3. '[' → logprob: -8.751699447631836
    4. '[list' → logprob: -10.251699447631836
    5. '[a' → logprob: -12.751699447631836
    6. '[i' → logprob: -16.501699447631836
    7. 'list' → logprob: -17.376699447631836
    8. '[p' → logprob: -17.626699447631836
    9. '   ' → logprob: -17.751699447631836
    10. '[x' → logprob: -17.876699447631836

Token 351: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08118050545454025
    2. '   ' → logprob: -2.5811805725097656
    3. ' for' → logprob: -6.081180572509766
    4. '	for' → logprob: -13.081180572509766
    5. '    
' → logprob: -14.581180572509766
    6. '
' → logprob: -16.706180572509766
    7. '[' → logprob: -18.081180572509766
    8. '```' → logprob: -18.456180572509766
    9. '  ' → logprob: -18.706180572509766
    10. '       ' → logprob: -18.706180572509766

Token 352: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00011033779446734115
    2. ' for' → logprob: -9.500110626220703
    3. '   ' → logprob: -10.250110626220703
    4. '	for' → logprob: -18.250110626220703
    5. '
' → logprob: -19.500110626220703
    6. '    
' → logprob: -21.500110626220703
    7. '```' → logprob: -21.500110626220703
    8. '  ' → logprob: -23.500110626220703
    9. '       ' → logprob: -24.125110626220703
    10. ' 
' → logprob: -24.625110626220703

Token 353: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.010104882530868053
    2. ' i' → logprob: -4.635104656219482
    3. 'x' → logprob: -8.01010513305664
    4. 'j' → logprob: -11.76010513305664
    5. ' x' → logprob: -12.01010513305664
    6. '   ' → logprob: -13.51010513305664
    7. 'k' → logprob: -14.88510513305664
    8. ' ' → logprob: -15.01010513305664
    9. 'num' → logprob: -15.63510513305664
    10. ' j' → logprob: -15.63510513305664

Token 354: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47408992052078247
    2. 'in' → logprob: -0.9740899205207825
    3. ' ' → logprob: -12.599089622497559
    4. '	in' → logprob: -12.974089622497559
    5. 'n' → logprob: -13.099089622497559
    6. '   ' → logprob: -13.474089622497559
    7. '0' → logprob: -13.599089622497559
    8. ',' → logprob: -14.224089622497559
    9. '  ' → logprob: -14.849089622497559
    10. '(' → logprob: -14.974089622497559

Token 355: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019291093340143561
    2. ' range' → logprob: -6.25192928314209
    3. '   ' → logprob: -14.87692928314209
    4. ' ' → logprob: -16.501928329467773
    5. '  ' → logprob: -17.501928329467773
    6. '(range' → logprob: -17.626928329467773
    7. '    ' → logprob: -18.251928329467773
    8. '	range' → logprob: -18.251928329467773
    9. '[' → logprob: -19.751928329467773
    10. '     ' → logprob: -20.251928329467773

Token 356: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.002489926293492317
    2. '(' → logprob: -6.002490043640137
    3. 'n' → logprob: -11.252490043640137
    4. '1' → logprob: -13.627490043640137
    5. '   ' → logprob: -18.00248908996582
    6. ' (' → logprob: -18.12748908996582
    7. '(len' → logprob: -18.12748908996582
    8. '0' → logprob: -18.25248908996582
    9. ',n' → logprob: -18.62748908996582
    10. '(i' → logprob: -19.00248908996582

Token 357: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3896231949329376
    2. '):
' → logprob: -1.1396231651306152
    3. '+' → logprob: -6.264623165130615
    4. '   ' → logprob: -7.264623165130615
    5. ' ):' → logprob: -9.764623641967773
    6. ' ):
' → logprob: -11.264623641967773
    7. '1' → logprob: -11.389623641967773
    8. ')' → logprob: -11.389623641967773
    9. '):
' → logprob: -11.514623641967773
    10. '0' → logprob: -11.639623641967773

Token 358: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03455771878361702
    2. '   ' → logprob: -3.409557819366455
    3. 'od' → logprob: -7.284557819366455
    4. ' odds' → logprob: -9.284557342529297
    5. ' od' → logprob: -10.159557342529297
    6. '    
' → logprob: -11.284557342529297
    7. '_od' → logprob: -11.284557342529297
    8. '    ' → logprob: -11.909557342529297
    9. ' ind' → logprob: -11.909557342529297
    10. '```' → logprob: -12.034557342529297

Token 359: ' odds' (ID: 28374)
  Prédit: 'od'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'od' → logprob: -0.039605721831321716
    2. ' odds' → logprob: -3.2896056175231934
    3. '   ' → logprob: -7.164605617523193
    4. '       ' → logprob: -7.914605617523193
    5. 'odd' → logprob: -7.914605617523193
    6. ' odd' → logprob: -10.789606094360352
    7. ' od' → logprob: -10.789606094360352
    8. 'o' → logprob: -12.164606094360352
    9. 'Odds' → logprob: -12.914606094360352
    10. '_od' → logprob: -13.414606094360352

Token 360: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0010108959395438433
    2. '.' → logprob: -7.001010894775391
    3. '=' → logprob: -9.37601089477539
    4. ' =' → logprob: -11.75101089477539
    5. 'append' → logprob: -12.87601089477539
    6. '.extend' → logprob: -13.62601089477539
    7. ' .' → logprob: -13.62601089477539
    8. '.=' → logprob: -14.50101089477539
    9. '.app' → logprob: -14.75101089477539
    10. '.Append' → logprob: -15.37601089477539

Token 361: '(b' (ID: 3229)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.22871994972229004
    2. ' b' → logprob: -1.60371994972229
    3. '(b' → logprob: -5.728719711303711
    4. '   ' → logprob: -10.353719711303711
    5. ' (' → logprob: -11.728719711303711
    6. '(' → logprob: -11.728719711303711
    7. '	b' → logprob: -13.728719711303711
    8. ' ' → logprob: -14.103719711303711
    9. '    ' → logprob: -15.353719711303711
    10. 'int' → logprob: -15.853719711303711

Token 362: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005219352315180004
    2. '[' → logprob: -7.750522136688232
    3. 'i' → logprob: -9.625521659851074
    4. '0' → logprob: -10.750521659851074
    5. '[
' → logprob: -13.625521659851074
    6. ' [' → logprob: -14.250521659851074
    7. '   ' → logprob: -14.500521659851074
    8. '```' → logprob: -15.250521659851074
    9. 'index' → logprob: -15.750521659851074
    10. ' i' → logprob: -16.00052261352539

Token 363: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00011105302110081539
    2. ' ]' → logprob: -9.125110626220703
    3. '']' → logprob: -14.750110626220703
    4. 'i' → logprob: -14.875110626220703
    5. '   ' → logprob: -15.625110626220703
    6. '])' → logprob: -15.750110626220703
    7. ']
' → logprob: -16.000110626220703
    8. '[i' → logprob: -16.000110626220703
    9. ']/' → logprob: -16.375110626220703
    10. '//' → logprob: -16.500110626220703

Token 364: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.038847241550683975
    2. '//' → logprob: -3.6638472080230713
    3. ')' → logprob: -4.53884744644165
    4. ')//' → logprob: -7.53884744644165
    5. ']' → logprob: -7.66384744644165
    6. ' ' → logprob: -8.538846969604492
    7. '    ' → logprob: -9.163846969604492
    8. '   ' → logprob: -9.413846969604492
    9. '```' → logprob: -9.413846969604492
    10. '/' → logprob: -9.413846969604492

Token 365: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.339278580620885e-06
    2. 'g' → logprob: -13.000001907348633
    3. ' a' → logprob: -18.625001907348633
    4. '   ' → logprob: -19.750001907348633
    5. '	a' → logprob: -22.875001907348633
    6. '```' → logprob: -23.000001907348633
    7. '  ' → logprob: -23.875001907348633
    8. '
' → logprob: -24.750001907348633
    9. 'а' → logprob: -24.875001907348633
    10. '(a' → logprob: -25.000001907348633

Token 366: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '_' → logprob: -21.0
    4. '[' → logprob: -21.125
    5. '۰' → logprob: -21.125
    6. '０' → logprob: -22.375
    7. 'o' → logprob: -22.875
    8. '   ' → logprob: -23.125
    9. '  ' → logprob: -23.25
    10. '```' → logprob: -23.625

Token 367: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.319370302458992e-06
    2. ' )' → logprob: -12.750005722045898
    3. ')
' → logprob: -13.125005722045898
    4. '   ' → logprob: -16.1250057220459
    5. '<|end|>' → logprob: -16.2500057220459
    6. '),' → logprob: -17.0000057220459
    7. '`)' → logprob: -17.1250057220459
    8. '))' → logprob: -18.0000057220459
    9. ')}' → logprob: -18.1250057220459
    10. '')' → logprob: -18.5000057220459

Token 368: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43010231852531433
    2. '<|end|>' → logprob: -1.6801023483276367
    3. 'a' → logprob: -2.4301023483276367
    4. '```' → logprob: -3.1801023483276367
    5. '    
' → logprob: -4.430102348327637
    6. '#' → logprob: -5.430102348327637
    7. 'od' → logprob: -5.430102348327637
    8. '[' → logprob: -5.930102348327637
    9. '.' → logprob: -6.305102348327637
    10. '
' → logprob: -6.555102348327637

Token 369: ' odds' (ID: 28374)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33138906955718994
    2. 'a' → logprob: -1.83138906955719
    3. '#' → logprob: -2.9563889503479004
    4. '<|end|>' → logprob: -2.9563889503479004
    5. '    
' → logprob: -5.8313889503479
    6. '```' → logprob: -5.9563889503479
    7. ')' → logprob: -6.3313889503479
    8. 'print' → logprob: -6.5813889503479
    9. '
' → logprob: -6.5813889503479
    10. 'od' → logprob: -6.7063889503479

Token 370: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 371: '()

' (ID: 5874)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 372: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25335997343063354
    2. 'a' → logprob: -1.8783600330352783
    3. '<|end|>' → logprob: -2.7533600330352783
    4. '```' → logprob: -6.378359794616699
    5. 'for' → logprob: -6.503359794616699
    6. '#' → logprob: -6.503359794616699
    7. '    
' → logprob: -7.628359794616699
    8. ')' → logprob: -7.753359794616699
    9. '
' → logprob: -7.878359794616699
    10. '\' → logprob: -9.0033597946167

Token 373: ' print' (ID: 2123)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2234058976173401
    2. 'from' → logprob: -1.8484058380126953
    3. '   ' → logprob: -3.8484058380126953
    4. '#' → logprob: -4.348405838012695
    5. 'import' → logprob: -5.098405838012695
    6. 'print' (adapté à ' print') → logprob: -7.473405838012695
    7. 'for' → logprob: -7.723405838012695
    8. 'result' → logprob: -7.973405838012695
    9. 'res' → logprob: -8.598405838012695
    10. ' from' → logprob: -9.223405838012695

Token 374: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.1269156038761139
    2. '(*' → logprob: -2.376915693283081
    3. '(' → logprob: -3.751915693283081
    4. '('' → logprob: -6.501915454864502
    5. '()' → logprob: -7.251915454864502
    6. '((' → logprob: -9.12691593170166
    7. '("' → logprob: -9.37691593170166
    8. '(
' → logprob: -9.50191593170166
    9. '(sum' → logprob: -9.75191593170166
    10. '("("' → logprob: -9.75191593170166

Token 375: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000553151941858232
    2. '[' → logprob: -7.500553131103516
    3. ' ' → logprob: -17.250553131103516
    4. ' [' → logprob: -17.375553131103516
    5. '\[' → logprob: -17.375553131103516
    6. '```' → logprob: -17.500553131103516
    7. '   ' → logprob: -17.875553131103516
    8. '012' → logprob: -18.000553131103516
    9. '_' → logprob: -18.375553131103516
    10. '01' → logprob: -18.500553131103516

Token 376: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014967082068324089
    2. ',end' → logprob: -4.88996696472168
    3. ')' → logprob: -5.01496696472168
    4. ' ,' → logprob: -7.51496696472168
    5. ' )' → logprob: -10.01496696472168
    6. ',a' → logprob: -10.51496696472168
    7. ',)' → logprob: -10.88996696472168
    8. '   ' → logprob: -11.13996696472168
    9. '*' → logprob: -11.51496696472168
    10. ' +' → logprob: -12.01496696472168

Token 377: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 378: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43000125885009766
    2. '<|end|>' → logprob: -1.5550012588500977
    3. '   ' → logprob: -2.4300012588500977
    4. '[' → logprob: -3.8050012588500977
    5. ' for' → logprob: -3.9300012588500977
    6. 'print' (adapté à ' print') → logprob: -5.305001258850098
    7. '```' → logprob: -6.930001258850098
    8. '#' → logprob: -8.055001258850098
    9. '[
' → logprob: -8.180001258850098
    10. 'a' → logprob: -8.305001258850098

Token 379: '('' (ID: 706)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.062220655381679535
    2. '('' → logprob: -3.312220573425293
    3. '(' → logprob: -3.812220573425293
    4. '("' → logprob: -6.437220573425293
    5. '()' → logprob: -8.812220573425293
    6. '(len' → logprob: -11.187220573425293
    7. '(a' → logprob: -11.187220573425293
    8. '(
' → logprob: -12.437220573425293
    9. '(*(' → logprob: -12.562220573425293
    10. '*' → logprob: -12.812220573425293

Token 380: ' '.' (ID: 12662)
  Prédit: ' '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '.' → logprob: -0.08996966481208801
    2. ''' → logprob: -2.8399696350097656
    3. ''.' → logprob: -3.5899696350097656
    4. ' '' → logprob: -11.589969635009766
    5. ''*' → logprob: -13.589969635009766
    6. ''+' → logprob: -13.964969635009766
    7. ''O' → logprob: -14.464969635009766
    8. '''.' → logprob: -14.589969635009766
    9. ''a' → logprob: -14.714969635009766
    10. '')' → logprob: -15.214969635009766

Token 381: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.0683535037969705e-05
    2. 'print' → logprob: -11.62501049041748
    3. ''.' → logprob: -13.75001049041748
    4. ' join' → logprob: -15.00001049041748
    5. ''' → logprob: -15.37501049041748
    6. 'jo' → logprob: -18.000011444091797
    7. '.join' → logprob: -18.500011444091797
    8. '(join' → logprob: -19.125011444091797
    9. 'write' → logprob: -19.250011444091797
    10. 'sep' → logprob: -20.000011444091797

Token 382: '(str' (ID: 7946)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0051031881012022495
    2. '(str' → logprob: -5.75510311126709
    3. 'map' → logprob: -6.25510311126709
    4. 'str' → logprob: -12.75510311126709
    5. ' map' → logprob: -16.505104064941406
    6. '(list' → logprob: -17.005104064941406
    7. '[str' → logprob: -17.005104064941406
    8. '	map' → logprob: -18.630104064941406
    9. '.map' → logprob: -18.880104064941406
    10. ',map' → logprob: -19.255104064941406

Token 383: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -4.68022444692906e-05
    2. 'x' → logprob: -11.000046730041504
    3. '(o' → logprob: -11.250046730041504
    4. '(' → logprob: -12.125046730041504
    5. '(i' → logprob: -12.375046730041504
    6. '(num' → logprob: -12.500046730041504
    7. '(a' → logprob: -13.000046730041504
    8. '(e' → logprob: -14.000046730041504
    9. '(k' → logprob: -15.875046730041504
    10. '(ai' → logprob: -16.12504768371582

Token 384: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031625106930732727
    2. 'for' → logprob: -6.128162384033203
    3. '(x' → logprob: -7.003162384033203
    4. ' for' → logprob: -9.878162384033203
    5. 'odd' → logprob: -12.503162384033203
    6. 'x' → logprob: -12.878162384033203
    7. '(' → logprob: -13.003162384033203
    8. '   ' → logprob: -13.003162384033203
    9. '(a' → logprob: -13.503162384033203
    10. 'a' → logprob: -14.003162384033203

Token 385: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01516036968678236
    2. ' for' → logprob: -5.01516056060791
    3. '(x' → logprob: -5.39016056060791
    4. '(' → logprob: -6.26516056060791
    5. 'od' → logprob: -6.64016056060791
    6. ')' → logprob: -7.51516056060791
    7. 'odd' → logprob: -10.26516056060791
    8. '(o' → logprob: -10.76516056060791
    9. '   ' → logprob: -11.26516056060791
    10. 'x' → logprob: -11.64016056060791

Token 386: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09140383452177048
    2. 'in' → logprob: -2.9664037227630615
    3. ' in' → logprob: -3.7164037227630615
    4. ' x' → logprob: -4.716403961181641
    5. 'od' → logprob: -6.091403961181641
    6. 'odd' → logprob: -8.46640396118164
    7. ' odds' → logprob: -10.09140396118164
    8. 'a' → logprob: -10.46640396118164
    9. ' od' → logprob: -10.71640396118164
    10. 'ods' → logprob: -11.71640396118164

Token 387: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4876381456851959
    2. ' in' → logprob: -0.9876381158828735
    3. 'od' → logprob: -4.612637996673584
    4. '(' → logprob: -5.737637996673584
    5. '=' → logprob: -8.862638473510742
    6. ' od' → logprob: -9.862638473510742
    7. 'odd' → logprob: -9.987638473510742
    8. ')' → logprob: -10.487638473510742
    9. ' (' → logprob: -11.612638473510742
    10. ' odds' → logprob: -11.862638473510742

Token 388: ' odds' (ID: 28374)
  Prédit: 'od'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'od' → logprob: -0.004780407529324293
    2. ' odds' → logprob: -5.379780292510986
    3. 'odd' → logprob: -9.004780769348145
    4. '[' → logprob: -10.504780769348145
    5. 'ods' → logprob: -12.129780769348145
    6. '   ' → logprob: -13.754780769348145
    7. 'Odds' → logprob: -14.129780769348145
    8. ' ' → logprob: -14.629780769348145
    9. 'ord' → logprob: -15.129780769348145
    10. '_od' → logprob: -15.629780769348145

Token 389: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0004972710739821196
    2. ')' → logprob: -7.625497341156006
    3. ')))' → logprob: -12.500496864318848
    4. '))
' → logprob: -12.625496864318848
    5. '   ' → logprob: -14.500496864318848
    6. ''))' → logprob: -14.500496864318848
    7. '()))' → logprob: -14.750496864318848
    8. '[' → logprob: -15.125496864318848
    9. ' ))' → logprob: -15.500496864318848
    10. '+' → logprob: -16.375497817993164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 387
Tokens correctement prédits (1ère position, stricte): 142
Tokens correctement prédits (1ère position, avec adaptation): 145
Tokens correctement prédits (top 10): 271
Précision stricte (1ère position): 36.69%
Précision adaptée (1ère position): 37.47%
Précision (top 10): 70.03%
================================================================================
