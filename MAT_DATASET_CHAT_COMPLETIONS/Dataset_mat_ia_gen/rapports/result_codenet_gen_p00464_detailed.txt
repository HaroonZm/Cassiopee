================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:52:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

def main():
    # Lecture des données tant que H, W, N ne sont pas tous nuls
    while True:
        # Lire H, W, N
        H, W, N = map(int, sys.stdin.readline().split())
        if H == 0 and W == 0 and N == 0:
            break

        # Lire la grille initiale des directions
        # 0 -> Sud (down), 1 -> Est (right)
        grid = [list(map(int, sys.stdin.readline().split())) for _ in range(H)]

        # On va simuler la marche mais pas naïvement pour N fois (N peut être grand)
        # Solution efficace: utiliser la technique de "doublage" pour simuler plusieurs marches en O(logN)

        # Préparons une structure pour simuler une marche en partant de chaque case (i,j)
        # à travers les directions, on peut déterminer pour chaque position le point de sortie.

        # On veut calculer pour tout sommet (i,j) la position où on arrive après une seule promenade
        # Selon la règle:
        # On regarde la direction dans grid[i][j]
        # Si c'est 1 (Est), on remplace par 0 (Sud) et on va à (i, j+1)
        # Si c'est 0 (Sud), on remplace par 1 (Est) et on va à (i+1, j)

        # Comme on change la valeur à chaque passage, la position après k fois dépend de la modification des directions.

        # On remarque que l'évolution est déterministe et on peut modéliser chaque promenade comme une fonction f:
        # f: (i,j) -> (end_i, end_j)
        # et on veut f^N((1,1)) (N-ième promenade)

        # Implémentation de la technique de 'doublage' (binary lifting):
        # On calcule f^1, f^2, f^4, f^8,... jusqu'à la plus grande puissance de 2 <= N
        # Puis on compose ces fonctions pour obtenir f^N en O(log N)

        # Cependant, il faut aussi simuler la modification des directions:
        # On remarque que les directions à chaque intersection changent à chaque fois que l'on passe dessus.
        # La direction dépend donc de la parité du nombre de passages en cette case.

        # Un autre point important: Pour un même point (i,j),
        # la direction lors du k-ième promenade peut être déterminée par k mod 2

        # Par conséquent, on fait la modélisation suivante pour chaque intersection:
        # direction actuelle = initial_direction ^ (nombre_de_passages mod 2)

        # On peut donc représenter la position finale de la promenade en termes de N mod 2

        # La solution est donc:
        # - Tracer dans une première matrice la destination pour N=1 (puisque on fait une promenade)
        # - Construire des tables de transition pour les puissances de 2 jusqu'à la puissance maximale <= N
        # - Puis combiner en suivant l'exposant binaire de N pour trouver la position finale.

        # Pour cela, on va considérer un tableau "next_pos" de taille H x W qui contient la position
        # où on arrive après 1 promenade en partant depuis (i,j) en prenant en compte la direction initiale.

        # Nous allons gérer une matrice 0-based en Python mais correspondante à (1-based) du problème.

        # Construction du tableau next_pos:
        # next_pos[i][j] -> (i', j') où on arrive après avoir appliqué la règle du passage une fois.

        next_pos = [[(-1, -1) for _ in range(W)] for _ in range(H)]

        for i in range(H):
            for j in range(W):
                d = grid[i][j]  # initial direction: 0=S,1=E
                # Au passage, on inversera d pour la prochaine fois, mais là on simule un seul passage,
                # donc on part de d, et on va dans la direction correspondante.
                if d == 1:
                    # aller vers Est -> (i, j+1)
                    if j+1 <= W-1:
                        next_pos[i][j] = (i, j+1)
                    else:
                        # on est à la toute est donc arrêt, ici on notera position de sortie (i,j+1)
                        # La route la plus est est la colonne W, mais les croisements vont de 1 à W+1
                        # Le problème dit que les croisements vont jusqu'à W+1,
                        # donc on doit gérer la sortie en indiquant la coordonnée finale (i,j+2?).
                        # Mais on ne peut pas sortir du tableau, on se trouve sur la rue la plus à l'est.
                        # On devons arrêter, donc next_pos[i][j] = fin de promenade (i, j+1+1)
                        # On va gérer plus bas la fin de la promenade (quand on est sur limite).
                        # Pour la simulation, pos finale hors du tableau:
                        # On peut utiliser (i, W) si 0-based correspond à col W, qui est hors de la grille.
                        # En sortie on doit afficher en 1-based, la colonne j+2.
                        next_pos[i][j] = (i, W)
                else:
                    # aller vers Sud -> (i+1, j)
                    if i+1 <= H-1:
                        next_pos[i][j] = (i+1, j)
                    else:
                        # On est tout en bas -> même raisonnement que ci-dessus
                        next_pos[i][j] = (H, j)

        # Maintenant on construit la table de saut binaire (binary lifting).
        # max_power = max puissance de 2 <= N
        max_power = 1
        while max_power <= N:
            max_power <<=1
        max_power >>=1

        # On stockera les transitions pour 2^k promenades:
        # dp[k][i][j] = position finale après 2^k promenades en partant de (i,j)

        # Par souci de mémoire, on ne peut pas stocker dp pour tous k, i,j car H,W=1000 -> 1M elements, k peut être 24 ~ log2(10^7)

        # On va représenter dp par une liste de matrices. Stocker environ 25 matrices de 1000x1000 est possible en mémoire.

        dp = [next_pos]  # dp[0] correspond à 1 promenade

        # Construction dp pour les puissances supérieures
        # dp[k] = dp[k-1] o dp[k-1]
        # où o est la composition fonctionnelle

        # But: dp[k][i][j] = dp[k-1][dp[k-1][i][j]]

        k = 0
        while (1 << (k+1)) <= N:
            prev = dp[k]
            curr = [[(-1,-1) for _ in range(W)] for _ in range(H)]
            for i_ in range(H):
                for j_ in range(W):
                    pos1 = prev[i_][j_]
                    # pos1 peut être hors du tableau ==> on stocke position finale *comme cela*
                    # Si pos1 est hors de la grille (i>=H ou j>=W), dp[k][i][j] = pos1 (pas de changement)
                    i2, j2 = pos1
                    if i2 >= H or j2 >= W:
                        # terminaison, on reste sur cette position finale
                        curr[i_][j_] = pos1
                    else:
                        curr[i_][j_] = prev[i2][j2]
            dp.append(curr)
            k += 1

        # maintenant on applique la marche N fois en combinant les puissances de deux

        # position initiale = (0,0) en 0-based
        pos = (0,0)
        length = len(dp)
        current_power = 0
        # il faut décomposer N en binaire et appliquer la composition des dp correspondants

        exp = N
        for bit in range(length):
            if exp & (1 << bit):
                i_, j_ = pos
                if i_ >= H or j_ >= W:
                    # déjà en position finale
                    break
                pos = dp[bit][i_][j_]

        # pos peut être hors de la grille, on doit afficher 1-based.
        # La sortie indique la croisement finale (i,j) (1-based).
        # Dans le cas de sortie hors limite à droite ou en bas, on doit donner la position finale d'arrêt.

        # rappel: croisements sont de 1..H pour ligne, 1..W pour colonne
        # La position finale pos = (i,j) 0-based correspond à (i+1,j+1) 1-based
        # Si i == H (hors indice), cela correspond à la route la plus au sud, donc i+1 = H+1
        # Idem pour colonne j == W => j+1 = W+1

        i_final = pos[0] + 1
        j_final = pos[1] + 1

        print(i_final, j_final)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.157039049663581e-05
    2. ' .' → logprob: -11.125051498413086
    3. '.import' → logprob: -11.750051498413086
    4. '.readline' → logprob: -12.625051498413086
    5. '[' → logprob: -12.875051498413086
    6. '.user' → logprob: -12.875051498413086
    7. '.`' → logprob: -13.250051498413086
    8. '.stdout' → logprob: -13.500051498413086
    9. '.exit' → logprob: -13.500051498413086
    10. '.next' → logprob: -13.875051498413086

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.6398184895515442
    2. '_' → logprob: -2.3898184299468994
    3. 't' → logprob: -2.3898184299468994
    4. 'default' → logprob: -2.8898184299468994
    5. '_trace' → logprob: -2.8898184299468994
    6. 's' → logprob: -3.2648184299468994
    7. 'sys' → logprob: -3.6398184299468994
    8. '_sys' → logprob: -3.7648184299468994
    9. 'set' → logprob: -4.5148186683654785
    10. 'x' → logprob: -4.6398186683654785

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0008707251981832087
    2. 'ursive' → logprob: -7.250870704650879
    3. 'urs' → logprob: -10.000870704650879
    4. 'ursor' → logprob: -10.875870704650879
    5. 'ision' → logprob: -11.250870704650879
    6. 'alc' → logprob: -11.625870704650879
    7. 'set' → logprob: -11.625870704650879
    8. '_limit' → logprob: -11.750870704650879
    9. 'ursively' → logprob: -11.750870704650879
    10. 't' → logprob: -12.125870704650879

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.22935611009597778
    2. '_limit' → logprob: -1.604356050491333
    3. '_depth' → logprob: -5.729356288909912
    4. 'depth' → logprob: -7.854356288909912
    5. ' limit' → logprob: -9.354355812072754
    6. 'Limit' → logprob: -9.604355812072754
    7. 'lim' → logprob: -10.354355812072754
    8. 'error' → logprob: -10.854355812072754
    9. '-limit' → logprob: -11.229355812072754
    10. '_lim' → logprob: -11.479355812072754

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.8550976164988242e-05
    2. '(
' → logprob: -11.750018119812012
    3. ' (' → logprob: -12.375018119812012
    4. '(

' → logprob: -12.375018119812012
    5. '```' → logprob: -14.625018119812012
    6. '("("' → logprob: -14.750018119812012
    7. '((' → logprob: -14.750018119812012
    8. '(.' → logprob: -14.875018119812012
    9. '('' → logprob: -16.000019073486328
    10. '(
' → logprob: -16.375019073486328

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.12741151452064514
    2. '100' → logprob: -2.1274116039276123
    3. ' ' → logprob: -8.002411842346191
    4. '500' → logprob: -9.752411842346191
    5. '300' → logprob: -9.877411842346191
    6. '250' → logprob: -10.752411842346191
    7. '  ' → logprob: -12.252411842346191
    8. '   ' → logprob: -12.502411842346191
    9. '200' → logprob: -12.877411842346191
    10. '150' → logprob: -13.127411842346191

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006857931148260832
    2. '000' → logprob: -5.756857872009277
    3. '00' → logprob: -5.881857872009277
    4. '4' → logprob: -7.256857872009277
    5. '6' → logprob: -8.881857872009277
    6. '5' → logprob: -11.506857872009277
    7. '```' → logprob: -12.006857872009277
    8. ')' → logprob: -12.256857872009277
    9. '3' → logprob: -12.381857872009277
    10. '**' → logprob: -12.381857872009277

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.007951783947646618
    2. '9' → logprob: -5.257951736450195
    3. '6' → logprob: -6.257951736450195
    4. '8' → logprob: -7.132951736450195
    5. ' ' → logprob: -14.382951736450195
    6. '```' → logprob: -16.007951736450195
    7. '``' → logprob: -18.882951736450195
    8. '(' → logprob: -19.007951736450195
    9. '  ' → logprob: -19.757951736450195
    10. ')' → logprob: -20.007951736450195

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3663626305060461e-05
    2. '))' → logprob: -11.75001335144043
    3. ' )' → logprob: -12.12501335144043
    4. ')
' → logprob: -15.62501335144043
    5. ')))' → logprob: -16.75001335144043
    6. ')`' → logprob: -17.00001335144043
    7. ' ' → logprob: -17.25001335144043
    8. '）' → logprob: -18.12501335144043
    9. '`)' → logprob: -18.12501335144043
    10. '```' → logprob: -18.37501335144043

Token 13: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.057186923921108246
    2. '
' → logprob: -3.6821868419647217
    3. '```' → logprob: -3.6821868419647217
    4. '\' → logprob: -5.682187080383301
    5. '\n' → logprob: -6.932187080383301
    6. '

' → logprob: -8.1821870803833
    7. '
' → logprob: -8.5571870803833
    8. '`' → logprob: -9.0571870803833
    9. '``' → logprob: -9.8071870803833
    10. ' def' → logprob: -10.1821870803833

Token 14: ' main' (ID: 2758)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.1775183230638504
    2. ' dfs' → logprob: -2.052518367767334
    3. ' ' → logprob: -3.927518367767334
    4. ' fibonacci' → logprob: -4.927518367767334
    5. ' factor' → logprob: -6.052518367767334
    6. ' f' → logprob: -6.052518367767334
    7. ' space' → logprob: -7.677518367767334
    8. ' fib' → logprob: -7.927518367767334
    9. ' solve' → logprob: -8.427517890930176
    10. ' main' → logprob: -8.552517890930176

Token 15: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005382453091442585
    2. '():' → logprob: -5.755382537841797
    3. ':' → logprob: -7.005382537841797
    4. '(:' → logprob: -7.380382537841797
    5. '_' → logprob: -8.255382537841797
    6. '):' → logprob: -9.130382537841797
    7. ' (' → logprob: -9.255382537841797
    8. '```' → logprob: -10.130382537841797
    9. ')' → logprob: -10.505382537841797
    10. '.' → logprob: -11.255382537841797

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011910118162631989
    2. '    ' → logprob: -5.1369099617004395
    3. '    
' → logprob: -5.3869099617004395
    4. '\' → logprob: -8.261910438537598
    5. '\n' → logprob: -8.261910438537598
    6. 'n' → logprob: -8.761910438537598
    7. ' 
' → logprob: -9.011910438537598
    8. '<|end|>' → logprob: -9.261910438537598
    9. '
' → logprob: -9.761910438537598
    10. '(' → logprob: -9.761910438537598

Token 17: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4868811070919037
    2. ' n' → logprob: -1.861881136894226
    3. 'n' → logprob: -2.1118810176849365
    4. '    ' → logprob: -2.9868810176849365
    5. ' pass' → logprob: -4.861881256103516
    6. ' ' → logprob: -4.861881256103516
    7. ' while' → logprob: -4.986881256103516
    8. 'i' → logprob: -5.361881256103516
    9. 'print' → logprob: -5.611881256103516
    10. ' i' → logprob: -5.611881256103516

Token 18: ' Lecture' (ID: 106534)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.05019833892583847
    2. 'n' → logprob: -3.8001983165740967
    3. ' pass' → logprob: -4.675198554992676
    4. '   ' → logprob: -4.925198554992676
    5. '    ' → logprob: -5.800198554992676
    6. ' input' → logprob: -6.300198554992676
    7. 'pass' → logprob: -6.675198554992676
    8. ' a' → logprob: -7.050198554992676
    9. ' s' → logprob: -7.800198554992676
    10. ' N' → logprob: -7.925198554992676

Token 19: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3217483460903168
    2. '(' → logprob: -2.3217482566833496
    3. ' =' → logprob: -2.9467482566833496
    4. '_' → logprob: -3.1967482566833496
    5. '   ' → logprob: -3.9467482566833496
    6. 's' → logprob: -4.32174825668335
    7. ':' → logprob: -4.44674825668335
    8. '()' → logprob: -4.44674825668335
    9. ' (' → logprob: -4.82174825668335
    10. '  ' → logprob: -4.94674825668335

Token 20: ' données' (ID: 30580)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.42692750692367554
    2. 'l' → logprob: -1.6769275665283203
    3. ' la' → logprob: -3.0519275665283203
    4. ' ' → logprob: -3.1769275665283203
    5. ' données' → logprob: -3.5519275665283203
    6. ' input' → logprob: -4.05192756652832
    7. '   ' → logprob: -4.30192756652832
    8. '()' → logprob: -5.55192756652832
    9. 'input' → logprob: -6.55192756652832
    10. ' lignes' → logprob: -6.92692756652832

Token 21: ' tant' (ID: 16235)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11900866031646729
    2. ' ' → logprob: -2.4940085411071777
    3. '  ' → logprob: -4.619008541107178
    4. '    ' → logprob: -4.869008541107178
    5. '    
' → logprob: -5.744008541107178
    6. ',' → logprob: -6.119008541107178
    7. 'import' → logprob: -6.994008541107178
    8. ':' → logprob: -7.619008541107178
    9. ' (' → logprob: -7.619008541107178
    10. '<|end|>' → logprob: -7.619008541107178

Token 22: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.090346559882164
    2. ' qu' → logprob: -2.965346574783325
    3. 'que' → logprob: -3.590346574783325
    4. ' ' → logprob: -5.215346336364746
    5. 'qu' → logprob: -6.715346336364746
    6. '   ' → logprob: -7.965346336364746
    7. '  ' → logprob: -9.590346336364746
    8. '_' → logprob: -9.840346336364746
    9. ' ' → logprob: -10.215346336364746
    10. 'ôt' → logprob: -10.215346336364746

Token 23: ' H' (ID: 487)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.021011384204030037
    2. 'True' → logprob: -3.8960113525390625
    3. '(True' → logprob: -8.396011352539062
    4. '   ' → logprob: -9.271011352539062
    5. ' ' → logprob: -10.646011352539062
    6. ' la' → logprob: -10.771011352539062
    7. ' sys' → logprob: -11.146011352539062
    8. ' vrai' → logprob: -11.521011352539062
    9. '1' → logprob: -11.646011352539062
    10. ' ' → logprob: -11.771011352539062

Token 24: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20626787841320038
    2. 'a' → logprob: -3.331267833709717
    3. ',' → logprob: -3.456267833709717
    4. '=' → logprob: -3.581267833709717
    5. 'e' → logprob: -3.581267833709717
    6. ' and' → logprob: -4.956267833709717
    7. ' :' → logprob: -4.956267833709717
    8. ':\' → logprob: -5.331267833709717
    9. 'ere' → logprob: -5.456267833709717
    10. '>' → logprob: -5.581267833709717

Token 25: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.6804813146591187
    2. 'W' → logprob: -1.3054813146591187
    3. 'T' → logprob: -2.305481433868408
    4. ' T' → logprob: -2.680481433868408
    5. 'V' → logprob: -3.930481433868408
    6. ' V' → logprob: -4.805481433868408
    7. '   ' → logprob: -5.055481433868408
    8. ' ' → logprob: -5.555481433868408
    9. 'B' → logprob: -5.930481433868408
    10. ' L' → logprob: -5.930481433868408

Token 26: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44402414560317993
    2. ' >' → logprob: -1.3190240859985352
    3. '>' → logprob: -3.069024085998535
    4. ' :' → logprob: -4.319024085998535
    5. '=' → logprob: -4.944024085998535
    6. ' !=' → logprob: -5.069024085998535
    7. '   ' → logprob: -5.569024085998535
    8. ',' → logprob: -5.569024085998535
    9. ' ==' → logprob: -6.319024085998535
    10. ' =' → logprob: -6.319024085998535

Token 27: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.598240315914154
    2. '    ' → logprob: -1.7232403755187988
    3. '   ' → logprob: -2.223240375518799
    4. ' et' → logprob: -2.848240375518799
    5. ',' → logprob: -3.598240375518799
    6. '  ' → logprob: -3.723240375518799
    7. ' ,' → logprob: -5.098240375518799
    8. 'et' → logprob: -5.223240375518799
    9. ' n' → logprob: -5.473240375518799
    10. ' =' → logprob: -5.660740375518799

Token 28: ' ne' (ID: 453)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8609486222267151
    2. '   ' → logprob: -0.9859486222267151
    3. ' >' → logprob: -2.2359485626220703
    4. '    ' → logprob: -3.9859485626220703
    5. ',' → logprob: -3.9859485626220703
    6. ' :' → logprob: -4.11094856262207
    7. '>' → logprob: -4.36094856262207
    8. '=' → logprob: -4.73594856262207
    9. '  ' → logprob: -4.86094856262207
    10. ' =' → logprob: -5.73594856262207

Token 29: ' sont' (ID: 5242)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.41777685284614563
    2. '==' → logprob: -2.6677768230438232
    3. ' sont' → logprob: -2.6677768230438232
    4. ' =' → logprob: -3.1677768230438232
    5. ' ==' → logprob: -3.4177768230438232
    6. ' pas' → logprob: -3.6677768230438232
    7. 'ont' → logprob: -3.7927768230438232
    8. 'est' → logprob: -4.792777061462402
    9. 'pas' → logprob: -5.167777061462402
    10. 'a' → logprob: -5.292777061462402

Token 30: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.2813780903816223
    2. 'pas' → logprob: -1.4063780307769775
    3. '0' → logprob: -9.156377792358398
    4. ' not' → logprob: -10.531377792358398
    5. ' None' → logprob: -10.656377792358398
    6. '_pas' → logprob: -10.906377792358398
    7. 'not' → logprob: -11.281377792358398
    8. '```' → logprob: -11.531377792358398
    9. 's' → logprob: -12.031377792358398
    10. 'Pas' → logprob: -12.156377792358398

Token 31: ' tous' (ID: 10688)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.24632738530635834
    2. 'None' → logprob: -1.6213274002075195
    3. ' pas' → logprob: -4.7463274002075195
    4. '0' → logprob: -5.6213274002075195
    5. 'pas' → logprob: -5.7463274002075195
    6. ' ' → logprob: -5.8713274002075195
    7. '=' → logprob: -8.37132740020752
    8. ' ég' → logprob: -8.37132740020752
    9. ' none' → logprob: -8.62132740020752
    10. '=None' → logprob: -8.62132740020752

Token 32: ' n' (ID: 297)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.4014720618724823
    2. 'None' → logprob: -1.6514720916748047
    3. '0' → logprob: -2.6514720916748047
    4. ' présents' → logprob: -4.026472091674805
    5. ' ' → logprob: -4.901472091674805
    6. '=' → logprob: -4.901472091674805
    7. ' rempl' → logprob: -5.151472091674805
    8. ' ég' → logprob: -5.151472091674805
    9. ' four' → logprob: -6.026472091674805
    10. '=None' → logprob: -6.276472091674805

Token 33: 'uls' (ID: 13433)
  Prédit: 'uls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uls' → logprob: -0.674108624458313
    2. 'ull' → logprob: -2.0491085052490234
    3. ''' → logprob: -2.4241085052490234
    4. 'one' → logprob: -2.7991085052490234
    5. 'ul' → logprob: -3.0491085052490234
    6. ''ont' → logprob: -3.7991085052490234
    7. 'ulls' → logprob: -3.9241085052490234
    8. '=None' → logprob: -4.424108505249023
    9. '```' → logprob: -4.549108505249023
    10. 'e' → logprob: -4.674108505249023

Token 34: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5693587064743042
    2. '
' → logprob: -0.9443587064743042
    3. '    
' → logprob: -3.9443588256835938
    4. ':' → logprob: -5.319358825683594
    5. '\' → logprob: -5.694358825683594
    6. '\n' → logprob: -5.819358825683594
    7. '  
' → logprob: -5.944358825683594
    8. ' 
' → logprob: -6.194358825683594
    9. '   
' → logprob: -6.319358825683594
    10. '' → logprob: -6.694358825683594

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005096545442938805
    2. ':' → logprob: -6.130096435546875
    3. '    
' → logprob: -6.755096435546875
    4. '
' → logprob: -7.380096435546875
    5. ' while' → logprob: -8.005096435546875
    6. 'while' → logprob: -8.630096435546875
    7. '```' → logprob: -8.630096435546875
    8. '  ' → logprob: -9.255096435546875
    9. ' ' → logprob: -9.755096435546875
    10. ',' → logprob: -10.005096435546875

Token 36: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09545959532260895
    2. ' while' → logprob: -2.5954596996307373
    3. 'while' (adapté à ' while') → logprob: -4.970459461212158
    4. '    
' → logprob: -5.470459461212158
    5. '
' → logprob: -6.345459461212158
    6. '```' → logprob: -6.345459461212158
    7. '   
' → logprob: -7.595459461212158
    8. ' 
' → logprob: -8.220459938049316
    9. '    ' → logprob: -8.345459938049316
    10. '\n' → logprob: -8.720459938049316

Token 37: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.002028446411713958
    2. 'True' → logprob: -6.252028465270996
    3. '(True' → logprob: -9.877028465270996
    4. ' ' → logprob: -10.377028465270996
    5. ' not' → logprob: -11.627028465270996
    6. ' (' → logprob: -12.377028465270996
    7. ' ' → logprob: -13.377028465270996
    8. ' H' → logprob: -14.752028465270996
    9. '   ' → logprob: -14.752028465270996
    10. ' sys' → logprob: -15.002028465270996

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013834332639817148
    2. ':
' → logprob: -9.375138282775879
    3. ' :' → logprob: -10.875138282775879
    4. '   ' → logprob: -11.500138282775879
    5. '():' → logprob: -11.750138282775879
    6. '):' → logprob: -11.750138282775879
    7. ',' → logprob: -12.500138282775879
    8. ':**' → logprob: -13.375138282775879
    9. '       ' → logprob: -13.875138282775879
    10. ' and' → logprob: -14.125138282775879

Token 39: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013229284435510635
    2. '   ' → logprob: -5.0132293701171875
    3. '    ' → logprob: -6.0132293701171875
    4. '        
' → logprob: -6.5132293701171875
    5. ' ' → logprob: -7.2632293701171875
    6. '<|end|>' → logprob: -7.7632293701171875
    7. '    
' → logprob: -8.013229370117188
    8. '  ' → logprob: -8.513229370117188
    9. '      ' → logprob: -8.763229370117188
    10. '     ' → logprob: -9.013229370117188

Token 40: ' #' (ID: 1069)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.3962987959384918
    2. '   ' → logprob: -1.8962987661361694
    3. 'H' → logprob: -2.271298885345459
    4. ' line' → logprob: -3.771298885345459
    5. ' ' → logprob: -4.271298885345459
    6. ' h' → logprob: -4.646298885345459
    7. '    ' → logprob: -4.896298885345459
    8. '       ' → logprob: -5.146298885345459
    9. 'line' → logprob: -5.646298885345459
    10. '  ' → logprob: -6.146298885345459

Token 41: ' Lire' (ID: 57624)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.8414897322654724
    2. 'H' → logprob: -1.4664897918701172
    3. '   ' → logprob: -1.7164897918701172
    4. ' line' → logprob: -2.216489791870117
    5. 'line' → logprob: -3.466489791870117
    6. '```' → logprob: -5.216489791870117
    7. 'ligne' → logprob: -5.591489791870117
    8. ' h' → logprob: -6.591489791870117
    9. ' ligne' → logprob: -6.591489791870117
    10. 'h' → logprob: -6.716489791870117

Token 42: ' H' (ID: 487)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22944414615631104
    2. ' H' → logprob: -2.1044440269470215
    3. '   ' → logprob: -3.6044440269470215
    4. '    ' → logprob: -4.4794440269470215
    5. '  ' → logprob: -4.6044440269470215
    6. ' ' → logprob: -4.6044440269470215
    7. ' line' → logprob: -4.8544440269470215
    8. ' les' → logprob: -5.7294440269470215
    9. ' la' → logprob: -6.2294440269470215
    10. ' une' → logprob: -6.4794440269470215

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026099022943526506
    2. ' ,' → logprob: -6.002609729766846
    3. ' =' → logprob: -9.002610206604004
    4. '<|end|>' → logprob: -12.377610206604004
    5. ',H' → logprob: -13.627610206604004
    6. '=' → logprob: -13.877610206604004
    7. '       ' → logprob: -14.377610206604004
    8. ',W' → logprob: -14.502610206604004
    9. '<|end|>' → logprob: -14.627610206604004
    10. ',w' → logprob: -14.627610206604004

Token 44: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.2872438430786133
    2. 'W' → logprob: -1.4122438430786133
    3. ' ' → logprob: -6.162243843078613
    4. ' ' → logprob: -6.662243843078613
    5. ',' → logprob: -6.787243843078613
    6. '  ' → logprob: -8.287243843078613
    7. '    ' → logprob: -8.537243843078613
    8. ' ,' → logprob: -8.662243843078613
    9. ',W' → logprob: -8.662243843078613
    10. '<|end|>' → logprob: -8.787243843078613

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014317858731374145
    2. ' =' → logprob: -6.626431941986084
    3. ' ,' → logprob: -9.501431465148926
    4. '=' → logprob: -10.501431465148926
    5. '       ' → logprob: -13.876431465148926
    6. '<|end|>' → logprob: -13.876431465148926
    7. ')' → logprob: -15.126431465148926
    8. '<|end|>' → logprob: -15.751431465148926
    9. '   ' → logprob: -16.001432418823242
    10. '        ' → logprob: -16.126432418823242

Token 46: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.11352256685495377
    2. ' N' → logprob: -2.238522529602051
    3. '<|end|>' → logprob: -8.73852252960205
    4. ' and' → logprob: -8.86352252960205
    5. ',' → logprob: -9.36352252960205
    6. ' ' → logprob: -9.86352252960205
    7. 'n' → logprob: -10.23852252960205
    8. ' ' → logprob: -10.36352252960205
    9. '<|end|>' → logprob: -10.36352252960205
    10. 'and' → logprob: -10.36352252960205

Token 47: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2674882113933563
    2. ',' → logprob: -1.7674882411956787
    3. '       ' → logprob: -3.1424882411956787
    4. '=' → logprob: -4.2674880027771
    5. ' ,' → logprob: -6.5174880027771
    6. '   ' → logprob: -6.8924880027771
    7. '<|end|>' → logprob: -7.0174880027771
    8. '    ' → logprob: -7.2674880027771
    9. ' ' → logprob: -7.5174880027771
    10. ')' → logprob: -7.6424880027771

Token 48: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7456691861152649
    2. ' =' → logprob: -1.4956691265106201
    3. '       ' → logprob: -1.7456691265106201
    4. ' ,' → logprob: -3.74566912651062
    5. ' ' → logprob: -3.87066912651062
    6. '    ' → logprob: -3.99566912651062
    7. '=' → logprob: -3.99566912651062
    8. '   ' → logprob: -4.120669364929199
    9. '  ' → logprob: -4.745669364929199
    10. '        ' → logprob: -4.745669364929199

Token 49: ' H' (ID: 487)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3767736852169037
    2. ' H' → logprob: -1.501773715019226
    3. '       ' → logprob: -3.7517735958099365
    4. ' h' → logprob: -4.126773834228516
    5. '    ' → logprob: -4.626773834228516
    6. 'H' (adapté à ' H') → logprob: -4.626773834228516
    7. '   ' → logprob: -4.626773834228516
    8. ' line' → logprob: -5.126773834228516
    9. '  ' → logprob: -5.751773834228516
    10. '        ' → logprob: -6.001773834228516

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022547018306795508
    2. ',W' → logprob: -8.875225067138672
    3. ' ,' → logprob: -9.375225067138672
    4. ',w' → logprob: -14.625225067138672
    5. ',H' → logprob: -16.250225067138672
    6. ' W' → logprob: -17.125225067138672
    7. ',N' → logprob: -17.500225067138672
    8. ',,' → logprob: -17.625225067138672
    9. ',
' → logprob: -18.125225067138672
    10. ' =' → logprob: -18.250225067138672

Token 51: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.13774847984313965
    2. ' ' → logprob: -2.1377484798431396
    3. '<|end|>' → logprob: -5.137748718261719
    4. 'W' → logprob: -5.512748718261719
    5. ' ' → logprob: -7.887748718261719
    6. '  ' → logprob: -7.887748718261719
    7. ' ' → logprob: -10.262748718261719
    8. '<|end|>' → logprob: -11.012748718261719
    9. ')' → logprob: -11.762748718261719
    10. ',' → logprob: -11.887748718261719

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.363617962459102e-05
    2. ' ,' → logprob: -9.500083923339844
    3. '=' → logprob: -12.625083923339844
    4. '<|end|>' → logprob: -12.875083923339844
    5. ' =' → logprob: -13.375083923339844
    6. ',W' → logprob: -14.500083923339844
    7. '<|end|>' → logprob: -15.000083923339844
    8. '‌,' → logprob: -16.125083923339844
    9. ',N' → logprob: -16.250083923339844
    10. ',w' → logprob: -17.125083923339844

Token 53: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5806554555892944
    2. ' N' → logprob: -0.8306554555892944
    3. ' ' → logprob: -5.705655574798584
    4. '<|end|>' → logprob: -6.955655574798584
    5. '<|end|>' → logprob: -9.080655097961426
    6. ' =' → logprob: -9.580655097961426
    7. '  ' → logprob: -9.830655097961426
    8. ' ' → logprob: -9.830655097961426
    9. '=' → logprob: -10.705655097961426
    10. ',N' → logprob: -10.830655097961426

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07890014350414276
    2. '=' → logprob: -2.578900098800659
    3. '=input' → logprob: -11.703900337219238
    4. ',' → logprob: -14.203900337219238
    5. ')' → logprob: -15.203900337219238
    6. ' ' → logprob: -15.328900337219238
    7. '＝' → logprob: -15.328900337219238
    8. '=sys' → logprob: -15.703900337219238
    9. '=int' → logprob: -15.828900337219238
    10. ' ' → logprob: -16.578899383544922

Token 55: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.007651234045624733
    2. 'map' → logprob: -4.882651329040527
    3. ' list' → logprob: -10.632651329040527
    4. ' ' → logprob: -12.132651329040527
    5. '	map' → logprob: -12.132651329040527
    6. ' ' → logprob: -12.757651329040527
    7. ' tuple' → logprob: -13.007651329040527
    8. ' [' → logprob: -13.382651329040527
    9. '[' → logprob: -14.132651329040527
    10. '  ' → logprob: -14.382651329040527

Token 56: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03862212225794792
    2. '(' → logprob: -3.2886221408843994
    3. '(input' → logprob: -7.53862190246582
    4. 'int' → logprob: -10.66362190246582
    5. '(list' → logprob: -11.28862190246582
    6. '<int' → logprob: -12.91362190246582
    7. '(
' → logprob: -12.91362190246582
    8. '(str' → logprob: -13.16362190246582
    9. ' (' → logprob: -14.03862190246582
    10. '(eval' → logprob: -14.03862190246582

Token 57: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.08133217692375183
    2. 'input' → logprob: -2.831332206726074
    3. '(sys' → logprob: -4.831332206726074
    4. ')' → logprob: -5.206332206726074
    5. ',input' → logprob: -6.081332206726074
    6. '(' → logprob: -6.206332206726074
    7. ',' → logprob: -6.956332206726074
    8. ' input' → logprob: -8.081332206726074
    9. 'sys' → logprob: -9.581332206726074
    10. '=input' → logprob: -10.081332206726074

Token 58: ' sys' (ID: 12228)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5818720459938049
    2. 'input' → logprob: -0.8318720459938049
    3. ' sys' → logprob: -5.70687198638916
    4. 'sys' → logprob: -5.95687198638916
    5. '	input' → logprob: -13.83187198638916
    6. '=input' → logprob: -13.95687198638916
    7. ')' → logprob: -14.33187198638916
    8. ' ' → logprob: -14.45687198638916
    9. '=sys' → logprob: -15.20687198638916
    10. '(input' → logprob: -15.33187198638916

Token 59: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0007063561934046447
    2. '.readline' → logprob: -7.625706195831299
    3. '.' → logprob: -8.500706672668457
    4. '.argv' → logprob: -12.250706672668457
    5. '.stdout' → logprob: -12.750706672668457
    6. '(stdin' → logprob: -13.250706672668457
    7. 'stdin' → logprob: -13.500706672668457
    8. '.std' → logprob: -13.500706672668457
    9. '.input' → logprob: -13.625706672668457
    10. '.setdefault' → logprob: -15.000706672668457

Token 60: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -4.723352049040841e-06
    2. '.' → logprob: -12.875004768371582
    3. '.read' → logprob: -13.125004768371582
    4. '.readlines' → logprob: -16.500003814697266
    5. '.stdin' → logprob: -17.750003814697266
    6. '.buffer' → logprob: -19.000003814697266
    7. ' readline' → logprob: -19.500003814697266
    8. 'read' → logprob: -20.000003814697266
    9. ')' → logprob: -20.375003814697266
    10. ').' → logprob: -20.500003814697266

Token 61: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.662937372922897e-05
    2. '()' → logprob: -9.250096321105957
    3. '(' → logprob: -15.500096321105957
    4. ' ().' → logprob: -15.500096321105957
    5. '.readline' → logprob: -16.000097274780273
    6. '())' → logprob: -17.125097274780273
    7. '().__' → logprob: -18.625097274780273
    8. '()?.' → logprob: -19.000097274780273
    9. '()).' → logprob: -19.125097274780273
    10. '()
' → logprob: -19.250097274780273

Token 62: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.3914438784122467
    2. 'split' → logprob: -1.1414438486099243
    3. 'rstrip' → logprob: -5.391443729400635
    4. ' strip' → logprob: -12.641444206237793
    5. ' split' → logprob: -12.641444206237793
    6. '(split' → logprob: -15.391444206237793
    7. 'read' → logprob: -15.766444206237793
    8. '(strip' → logprob: -17.266443252563477
    9. ' ' → logprob: -17.391443252563477
    10. 'decode' → logprob: -18.141443252563477

Token 63: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.027435271069407463
    2. ')' → logprob: -4.027435302734375
    3. '()))' → logprob: -5.152435302734375
    4. '()' → logprob: -5.902435302734375
    5. '))' → logprob: -7.277435302734375
    6. '())
' → logprob: -10.902435302734375
    7. '()),' → logprob: -12.527435302734375
    8. '(' → logprob: -12.777435302734375
    9. ' ())' → logprob: -13.277435302734375
    10. '()))
' → logprob: -14.027435302734375

Token 64: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19306616485118866
    2. '<|end|>' → logprob: -1.818066120147705
    3. '   ' → logprob: -5.693066120147705
    4. '        
' → logprob: -6.318066120147705
    5. '
' → logprob: -6.443066120147705
    6. '<|end|>' → logprob: -6.568066120147705
    7. ':' → logprob: -7.193066120147705
    8. ')' → logprob: -7.318066120147705
    9. '\' → logprob: -7.443066120147705
    10. '```' → logprob: -7.443066120147705

Token 65: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05788671597838402
    2. '<|end|>' → logprob: -3.0578866004943848
    3. '        
' → logprob: -5.932886600494385
    4. 'if' (adapté à ' if') → logprob: -6.432886600494385
    5. '
' → logprob: -6.807886600494385
    6. '\n' → logprob: -7.307886600494385
    7. '   ' → logprob: -7.432886600494385
    8. ' ' → logprob: -7.557886600494385
    9. '<|end|>' → logprob: -7.932886600494385
    10. ' if' → logprob: -7.932886600494385

Token 66: ' H' (ID: 487)
  Prédit: ' H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.01817862130701542
    2. 'H' → logprob: -4.018178462982178
    3. ' ' → logprob: -11.268178939819336
    4. ' not' → logprob: -11.768178939819336
    5. ' (' → logprob: -12.018178939819336
    6. 'not' → logprob: -13.893178939819336
    7. '(' → logprob: -14.268178939819336
    8. '(H' → logprob: -15.018178939819336
    9. ' ' → logprob: -15.768178939819336
    10. '	H' → logprob: -17.018178939819336

Token 67: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.42871496081352234
    2. '==' → logprob: -1.0537149906158447
    3. '=' → logprob: -12.053714752197266
    4. ' ' → logprob: -12.928714752197266
    5. '```' → logprob: -13.303714752197266
    6. ' =' → logprob: -14.053714752197266
    7. '===' → logprob: -14.178714752197266
    8. '()==' → logprob: -14.303714752197266
    9. ' ' → logprob: -14.928714752197266
    10. ')==' → logprob: -15.053714752197266

Token 68: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011047935113310814
    2. ' ' → logprob: -4.511047840118408
    3. '<|end|>' → logprob: -17.38604736328125
    4. ' and' → logprob: -17.76104736328125
    5. '۰' → logprob: -17.88604736328125
    6. '   ' → logprob: -18.13604736328125
    7. ' ' → logprob: -18.26104736328125
    8. '  ' → logprob: -18.76104736328125
    9. 'and' → logprob: -18.76104736328125
    10. ' W' → logprob: -18.88604736328125

Token 69: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.052377623040229e-05
    2. ' ' → logprob: -9.625070571899414
    3. 'W' → logprob: -12.375070571899414
    4. ' W' → logprob: -15.750070571899414
    5. '```' → logprob: -16.875070571899414
    6. 'and' → logprob: -17.375070571899414
    7. '۰' → logprob: -17.750070571899414
    8. ' ' → logprob: -18.625070571899414
    9. '  ' → logprob: -18.625070571899414
    10. '

' → logprob: -19.250070571899414

Token 70: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02054831013083458
    2. 'and' → logprob: -3.8955483436584473
    3. ' ' → logprob: -12.020547866821289
    4. ' ' → logprob: -16.39554786682129
    5. ' и' → logprob: -16.64554786682129
    6. '	and' → logprob: -16.77054786682129
    7. '  ' → logprob: -17.14554786682129
    8. ' a' → logprob: -18.14554786682129
    9. 'そして' → logprob: -18.27054786682129
    10. '0' → logprob: -18.27054786682129

Token 71: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.011051944456994534
    2. 'W' → logprob: -4.511052131652832
    3. ' ' → logprob: -13.261052131652832
    4. ' ' → logprob: -13.761052131652832
    5. '	W' → logprob: -14.261052131652832
    6. '```' → logprob: -14.511052131652832
    7. '    ' → logprob: -16.011051177978516
    8. '   ' → logprob: -16.761051177978516
    9. ',W' → logprob: -17.261051177978516
    10. ' and' → logprob: -17.636051177978516

Token 72: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.038056179881095886
    2. '==' → logprob: -3.2880561351776123
    3. '<|end|>' → logprob: -11.663056373596191
    4. ' ' → logprob: -12.413056373596191
    5. '0' → logprob: -14.663056373596191
    6. '<|end|>' → logprob: -15.038056373596191
    7. ' =' → logprob: -15.288056373596191
    8. ')==' → logprob: -15.288056373596191
    9. '=' → logprob: -15.538056373596191
    10. ' ' → logprob: -15.663056373596191

Token 73: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02630332112312317
    2. ' ' → logprob: -3.651303291320801
    3. ' and' → logprob: -13.7763032913208
    4. '   ' → logprob: -14.2763032913208
    5. 'and' → logprob: -14.9013032913208
    6. '  ' → logprob: -15.0263032913208
    7. '       ' → logprob: -15.1513032913208
    8. ' ' → logprob: -15.9013032913208
    9. '<|end|>' → logprob: -16.526304244995117
    10. '```' → logprob: -17.026304244995117

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007101670489646494
    2. ' ' → logprob: -7.2507100105285645
    3. ' and' → logprob: -16.250709533691406
    4. 'and' → logprob: -16.375709533691406
    5. '   ' → logprob: -17.125709533691406
    6. '  ' → logprob: -17.250709533691406
    7. '<|end|>' → logprob: -18.688209533691406
    8. '۰' → logprob: -18.875709533691406
    9. '```' → logprob: -18.875709533691406
    10. ' ' → logprob: -19.500709533691406

Token 75: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0040793512016534805
    2. 'and' → logprob: -5.504079341888428
    3. ' ' → logprob: -15.129079818725586
    4. '	and' → logprob: -15.129079818725586
    5. '<|end|>' → logprob: -15.379079818725586
    6. ' и' → logprob: -16.004079818725586
    7. '0' → logprob: -16.254079818725586
    8. '```' → logprob: -16.879079818725586
    9. '<|end|>' → logprob: -16.879079818725586
    10. '   ' → logprob: -17.879079818725586

Token 76: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.062109414488077164
    2. 'N' → logprob: -2.8121094703674316
    3. ' ' → logprob: -9.562108993530273
    4. '0' → logprob: -9.687108993530273
    5. ' ' → logprob: -12.437108993530273
    6. '	N' → logprob: -13.562108993530273
    7. '```' → logprob: -13.687108993530273
    8. '<|end|>' → logprob: -13.812108993530273
    9. ' and' → logprob: -14.437108993530273
    10. '  ' → logprob: -14.687108993530273

Token 77: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3133124113082886
    2. '==' → logprob: -1.3133124113082886
    3. '=' → logprob: -11.688312530517578
    4. '<|end|>' → logprob: -11.688312530517578
    5. ')==' → logprob: -11.813312530517578
    6. ' ' → logprob: -11.938312530517578
    7. ' ' → logprob: -12.188312530517578
    8. ')' → logprob: -12.563312530517578
    9. '()==' → logprob: -12.688312530517578
    10. '0' → logprob: -13.313312530517578

Token 78: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2014141082763672
    2. ' ' → logprob: -1.7014141082763672
    3. ' ' → logprob: -14.701414108276367
    4. '  ' → logprob: -15.451414108276367
    5. '   ' → logprob: -16.076414108276367
    6. '۰' → logprob: -17.513914108276367
    7. '<|end|>' → logprob: -17.826414108276367
    8. '```' → logprob: -19.013914108276367
    9. '	' → logprob: -19.076414108276367
    10. '=' → logprob: -19.076414108276367

Token 79: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019286326132714748
    2. ' ' → logprob: -6.251928806304932
    3. '۰' → logprob: -19.126928329467773
    4. '  ' → logprob: -19.376928329467773
    5. '<|end|>' → logprob: -20.626928329467773
    6. ')' → logprob: -21.251928329467773
    7. ' ' → logprob: -21.501928329467773
    8. '   ' → logprob: -21.626928329467773
    9. ' ' → logprob: -21.751928329467773
    10. '０' → logprob: -21.876928329467773

Token 80: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00047214110963977873
    2. ':
' → logprob: -7.750472068786621
    3. '       ' → logprob: -10.500472068786621
    4. '   ' → logprob: -12.000472068786621
    5. ':return' → logprob: -12.375472068786621
    6. '           ' → logprob: -13.250472068786621
    7. ' :' → logprob: -13.625472068786621
    8. ' break' → logprob: -15.375472068786621
    9. '):' → logprob: -16.625473022460938
    10. '	break' → logprob: -16.875473022460938

Token 81: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008939516264945269
    2. '       ' → logprob: -7.250894069671631
    3. ' break' → logprob: -9.625893592834473
    4. ':' → logprob: -9.875893592834473
    5. '          ' → logprob: -11.250893592834473
    6. '   ' → logprob: -11.375893592834473
    7. '		' → logprob: -11.875893592834473
    8. '               ' → logprob: -12.000893592834473
    9. '	break' → logprob: -12.375893592834473
    10. 'break' → logprob: -12.375893592834473

Token 82: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.42791035771369934
    2. '           ' → logprob: -1.427910327911377
    3. 'break' (adapté à ' break') → logprob: -2.552910327911377
    4. '       ' → logprob: -3.552910327911377
    5. '	break' → logprob: -6.677910327911377
    6. 'return' → logprob: -9.052910804748535
    7. ' return' → logprob: -9.052910804748535
    8. '               ' → logprob: -9.427910804748535
    9. '   ' → logprob: -9.552910804748535
    10. '_break' → logprob: -10.177910804748535

Token 83: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7697288393974304
    2. '       ' → logprob: -1.5197288990020752
    3. '<|end|>' → logprob: -1.5197288990020752
    4. '        
' → logprob: -2.519728899002075
    5. '        ' → logprob: -4.769728660583496
    6. '<|end|>' → logprob: -5.394728660583496
    7. '\n' → logprob: -7.144728660583496
    8. '    ' → logprob: -7.269728660583496
    9. '            
' → logprob: -7.644728660583496
    10. '    
' → logprob: -7.644728660583496

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30648940801620483
    2. '
' → logprob: -2.0564894676208496
    3. '        
' → logprob: -2.0564894676208496
    4. '        ' → logprob: -5.93148946762085
    5. '' → logprob: -7.05648946762085
    6. '<|end|>' → logprob: -7.18148946762085
    7. '        
        
' → logprob: -7.43148946762085
    8. '    ' → logprob: -7.43148946762085
    9. '            
' → logprob: -7.93148946762085
    10. '```' → logprob: -8.056488990783691

Token 85: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031788576394319534
    2. '        
' → logprob: -4.906788349151611
    3. 'grid' → logprob: -5.281788349151611
    4. '#' (adapté à ' #') → logprob: -5.531788349151611
    5. '```' → logprob: -6.406788349151611
    6. '        ' → logprob: -6.531788349151611
    7. '      ' → logprob: -7.156788349151611
    8. '
' → logprob: -7.281788349151611
    9. ' lines' → logprob: -7.406788349151611
    10. '    ' → logprob: -7.656788349151611

Token 86: ' Lire' (ID: 57624)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -1.3722833395004272
    2. '#' → logprob: -1.4972833395004272
    3. '       ' → logprob: -1.7472833395004272
    4. ' grid' → logprob: -2.372283458709717
    5. 'gr' → logprob: -3.247283458709717
    6. 'mat' → logprob: -3.372283458709717
    7. ' #' → logprob: -4.747283458709717
    8. 'field' → logprob: -4.872283458709717
    9. 'counts' → logprob: -4.872283458709717
    10. '   ' → logprob: -4.934783458709717

Token 87: ' la' (ID: 557)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.0609657764434814
    2. '       ' → logprob: -1.9359657764434814
    3. ' la' → logprob: -2.4359657764434814
    4. 'grid' → logprob: -2.6859657764434814
    5. 'les' → logprob: -2.6859657764434814
    6. 'the' → logprob: -3.0609657764434814
    7. ' grid' → logprob: -3.3109657764434814
    8. ' l' → logprob: -4.060965538024902
    9. '<|end|>' → logprob: -4.060965538024902
    10. 's' → logprob: -4.185965538024902

Token 88: ' grille' (ID: 99153)
  Prédit: ' grille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grille' → logprob: -0.5452083945274353
    2. 'gr' → logprob: -2.04520845413208
    3. ' liste' → logprob: -3.17020845413208
    4. 'liste' → logprob: -3.42020845413208
    5. 'mat' → logprob: -3.54520845413208
    6. ' matr' → logprob: -3.67020845413208
    7. 'position' → logprob: -3.92020845413208
    8. ' suite' → logprob: -4.29520845413208
    9. 's' → logprob: -4.29520845413208
    10. ' carte' → logprob: -4.42020845413208

Token 89: ' initial' (ID: 4871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014375632628798485
    2. '<|end|>' → logprob: -4.764375686645508
    3. '   ' → logprob: -6.639375686645508
    4. '        ' → logprob: -7.514375686645508
    5. 'grid' → logprob: -7.639375686645508
    6. ' ' → logprob: -7.764375686645508
    7. '<|end|>' → logprob: -7.764375686645508
    8. '#' → logprob: -8.514375686645508
    9. '...' → logprob: -8.514375686645508
    10. '```' → logprob: -8.514375686645508

Token 90: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.009162462316453457
    2. '   ' → logprob: -5.509162425994873
    3. '       ' → logprob: -6.134162425994873
    4. 'es' → logprob: -7.134162425994873
    5. ')' → logprob: -7.884162425994873
    6. ' ' → logprob: -8.134162902832031
    7. 'isée' → logprob: -8.384162902832031
    8. '    ' → logprob: -8.509162902832031
    9. '  ' → logprob: -8.884162902832031
    10. '_' → logprob: -8.884162902832031

Token 91: ' des' (ID: 731)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08787817507982254
    2. 'grid' → logprob: -2.5878782272338867
    3. ' grid' → logprob: -5.962878227233887
    4. '   ' → logprob: -6.587878227233887
    5. ',' → logprob: -7.337878227233887
    6. '<|end|>' → logprob: -7.337878227233887
    7. '        ' → logprob: -7.462878227233887
    8. '      ' → logprob: -8.087878227233887
    9. '```' → logprob: -8.212878227233887
    10. '    ' → logprob: -8.462878227233887

Token 92: ' directions' (ID: 24921)
  Prédit: ' cellules'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cellules' → logprob: -0.9929347634315491
    2. 'cells' → logprob: -2.4929347038269043
    3. 'cell' → logprob: -2.4929347038269043
    4. 'm' → logprob: -2.9929347038269043
    5. 'cases' → logprob: -2.9929347038269043
    6. 'bomb' → logprob: -2.9929347038269043
    7. 'd' → logprob: -3.4929347038269043
    8. 'b' → logprob: -3.8679347038269043
    9. 'mat' → logprob: -4.242934703826904
    10. ' cells' → logprob: -4.367934703826904

Token 93: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007881768979132175
    2. '   ' → logprob: -5.8828816413879395
    3. ' for' → logprob: -6.6328816413879395
    4. 'for' → logprob: -7.0078816413879395
    5. 'grid' → logprob: -7.0078816413879395
    6. '<|end|>' → logprob: -8.132882118225098
    7. ' ' → logprob: -8.882882118225098
    8. ',' → logprob: -9.007882118225098
    9. '      ' → logprob: -9.007882118225098
    10. ')' → logprob: -9.257882118225098

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002213657833635807
    2. ',' → logprob: -7.877213478088379
    3. '        ' → logprob: -8.127213478088379
    4. 'grid' → logprob: -8.252213478088379
    5. '      ' → logprob: -8.502213478088379
    6. '   ' → logprob: -8.502213478088379
    7. '<|end|>' → logprob: -8.627213478088379
    8. 'n' → logprob: -8.877213478088379
    9. '        
' → logprob: -9.377213478088379
    10. ')' → logprob: -9.627213478088379

Token 95: ' #' (ID: 1069)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.6604470014572144
    2. ' grid' → logprob: -0.9104470014572144
    3. '       ' → logprob: -3.160447120666504
    4. ' directions' → logprob: -3.660447120666504
    5. 'dire' → logprob: -5.160447120666504
    6. 'direction' → logprob: -7.035447120666504
    7. ' lines' → logprob: -7.160447120666504
    8. '   ' → logprob: -7.285447120666504
    9. 'g' → logprob: -7.535447120666504
    10. ' direction' → logprob: -7.910447120666504

Token 96: ' ' (ID: 220)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.2996506989002228
    2. ' grid' → logprob: -1.5496506690979004
    3. 'dire' → logprob: -4.2996506690979
    4. '       ' → logprob: -4.4246506690979
    5. ' directions' → logprob: -4.9246506690979
    6. '   ' → logprob: -5.2996506690979
    7. 'gr' → logprob: -6.4246506690979
    8. 'direction' → logprob: -6.5496506690979
    9. 'board' → logprob: -7.5496506690979
    10. ' grille' → logprob: -7.6746506690979

Token 97: '0' (ID: 15)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.0775938406586647
    2. 'dire' → logprob: -3.0775938034057617
    3. ' grid' → logprob: -4.202593803405762
    4. 'direction' → logprob: -5.702593803405762
    5. '   ' → logprob: -5.827593803405762
    6. 'board' → logprob: -6.577593803405762
    7. ' directions' → logprob: -6.952593803405762
    8. 'gr' → logprob: -7.077593803405762
    9. 'maze' → logprob: -7.327593803405762
    10. ' ' → logprob: -7.952593803405762

Token 98: ' ->' (ID: 2747)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5695149302482605
    2. 'for' → logprob: -1.8195149898529053
    3. ':' → logprob: -2.1945149898529053
    4. ' ' → logprob: -3.4445149898529053
    5. ')' → logprob: -3.8195149898529053
    6. ',' → logprob: -3.9445149898529053
    7. ' =' → logprob: -4.319514751434326
    8. '    ' → logprob: -4.444514751434326
    9. '<|end|>' → logprob: -4.694514751434326
    10. '   ' → logprob: -4.944514751434326

Token 99: ' Sud' (ID: 22501)
  Prédit: ' droite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' droite' → logprob: -1.4272469282150269
    2. ' ' → logprob: -1.6772469282150269
    3. '.' → logprob: -1.9272469282150269
    4. 'dro' → logprob: -2.3022470474243164
    5. ' '' → logprob: -2.6772470474243164
    6. ' up' → logprob: -3.0522470474243164
    7. ' dro' → logprob: -3.9272470474243164
    8. ' .' → logprob: -4.052247047424316
    9. ' None' → logprob: -4.302247047424316
    10. ' gauche' → logprob: -4.364747047424316

Token 100: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: 'down' (ID: 4653)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05266379937529564
    2. ',' → logprob: -4.052663803100586
    3. ' )' → logprob: -5.052663803100586
    4. ' down' → logprob: -5.552663803100586
    5. 'down' → logprob: -5.552663803100586
    6. ' ' → logprob: -5.677663803100586
    7. '),' → logprob: -6.302663803100586
    8. '')' → logprob: -6.427663803100586
    9. 'East' → logprob: -6.427663803100586
    10. ' East' → logprob: -6.552663803100586

Token 102: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09115532785654068
    2. '),' → logprob: -2.9661552906036377
    3. ')
' → logprob: -3.3411552906036377
    4. ' )' → logprob: -9.966155052185059
    5. ')
' → logprob: -10.091155052185059
    6. ',' → logprob: -10.091155052185059
    7. ')

' → logprob: -10.341155052185059
    8. '),
' → logprob: -11.091155052185059
    9. ' )
' → logprob: -12.091155052185059
    10. '   ' → logprob: -12.216155052185059

Token 103: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6959294080734253
    2. '1' → logprob: -0.8209294080734253
    3. '       ' → logprob: -3.070929527282715
    4. '<|end|>' → logprob: -5.570929527282715
    5. '        ' → logprob: -5.820929527282715
    6. '0' → logprob: -5.820929527282715
    7. '  ' → logprob: -6.945929527282715
    8. '   ' → logprob: -7.320929527282715
    9. '    ' → logprob: -7.695929527282715
    10. '2' → logprob: -7.695929527282715

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05454267933964729
    2. ' ' → logprob: -3.0545427799224854
    3. '       ' → logprob: -5.304542541503906
    4. '   ' → logprob: -7.804542541503906
    5. '  ' → logprob: -8.304542541503906
    6. '        ' → logprob: -8.804542541503906
    7. '    ' → logprob: -10.429542541503906
    8. '0' → logprob: -10.554542541503906
    9. '      ' → logprob: -11.679542541503906
    10. ')' → logprob: -11.804542541503906

Token 105: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.0015098588773980737
    2. '->' → logprob: -6.501509666442871
    3. ' ' → logprob: -12.251509666442871
    4. ' #' → logprob: -14.501509666442871
    5. ' ->
' → logprob: -14.501509666442871
    6. ' -->' → logprob: -14.751509666442871
    7. ' →' → logprob: -15.751509666442871
    8. ' =' → logprob: -15.876509666442871
    9. ')->' → logprob: -16.001510620117188
    10. ',' → logprob: -16.001510620117188

Token 106: ' Est' (ID: 4555)
  Prédit: 'Dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dro' → logprob: -0.6361718773841858
    2. 'O' → logprob: -1.636171817779541
    3. 'Est' → logprob: -2.136171817779541
    4. ' Dro' → logprob: -2.886171817779541
    5. 'Sud' → logprob: -3.761171817779541
    6. 'East' → logprob: -4.261171817779541
    7. ' Est' → logprob: -4.386171817779541
    8. 'D' → logprob: -4.636171817779541
    9. 'Nord' → logprob: -4.761171817779541
    10. ' East' → logprob: -4.761171817779541

Token 107: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.09144071489572525
    2. '       ' → logprob: -3.0914406776428223
    3. ',' → logprob: -3.3414406776428223
    4. '(' → logprob: -6.466440677642822
    5. ' ,' → logprob: -6.716440677642822
    6. '<|end|>' → logprob: -6.966440677642822
    7. ')' → logprob: -7.341440677642822
    8. '```' → logprob: -7.716440677642822
    9. ' ' → logprob: -8.09144115447998
    10. '        ' → logprob: -8.09144115447998

Token 108: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.05101293697953224
    2. ' right' → logprob: -3.6760129928588867
    3. 'east' → logprob: -4.051012992858887
    4. 'up' → logprob: -6.551012992858887
    5. 'East' → logprob: -6.801012992858887
    6. 'est' → logprob: -7.051012992858887
    7. ' droite' → logprob: -7.301012992858887
    8. 'down' → logprob: -7.426012992858887
    9. 'dro' → logprob: -7.426012992858887
    10. ' east' → logprob: -7.926012992858887

Token 109: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05463658645749092
    2. '),' → logprob: -3.0546364784240723
    3. ')
' → logprob: -5.179636478424072
    4. '       ' → logprob: -9.17963695526123
    5. ')

' → logprob: -9.80463695526123
    6. '#' → logprob: -9.80463695526123
    7. ' )' → logprob: -9.92963695526123
    8. '   ' → logprob: -10.30463695526123
    9. ',' → logprob: -10.42963695526123
    10. '),
' → logprob: -11.17963695526123

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.053431179374456406
    2. 'grid' → logprob: -3.178431272506714
    3. ' grid' → logprob: -5.553431034088135
    4. ' directions' → logprob: -6.178431034088135
    5. 'dire' → logprob: -6.678431034088135
    6. '        
' → logprob: -7.553431034088135
    7. 'direction' → logprob: -7.678431034088135
    8. ',' → logprob: -8.428431510925293
    9. '<|end|>' → logprob: -8.553431510925293
    10. '   ' → logprob: -8.553431510925293

Token 111: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -0.10751666128635406
    2. ' grid' → logprob: -2.6075167655944824
    3. '       ' → logprob: -4.357516765594482
    4. 'dire' → logprob: -4.482516765594482
    5. ' directions' → logprob: -6.982516765594482
    6. 'direction' → logprob: -6.982516765594482
    7. '   ' → logprob: -7.482516765594482
    8. 'graph' → logprob: -8.482516288757324
    9. 'gr' → logprob: -8.732516288757324
    10. 'dp' → logprob: -8.982516288757324

Token 112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06995110958814621
    2. '=' → logprob: -2.694951057434082
    3. ' ' → logprob: -12.444951057434082
    4. '[' → logprob: -12.444951057434082
    5. ' =
' → logprob: -13.194951057434082
    6. ',' → logprob: -13.694951057434082
    7. '=[]' → logprob: -13.819951057434082
    8. ' =[' → logprob: -13.819951057434082
    9. ')' → logprob: -14.819951057434082
    10. '[]' → logprob: -15.194951057434082

Token 113: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0698506161570549
    2. '[]' → logprob: -3.0698506832122803
    3. ' [' → logprob: -4.069850444793701
    4. '[]
' → logprob: -6.444850444793701
    5. ' []' → logprob: -7.069850444793701
    6. '[list' → logprob: -7.944850444793701
    7. '[
' → logprob: -8.56985092163086
    8. '[s' → logprob: -8.69485092163086
    9. '[[' → logprob: -8.81985092163086
    10. '[int' → logprob: -9.06985092163086

Token 114: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.03371739387512207
    2. ' list' → logprob: -3.408717393875122
    3. '[list' → logprob: -9.783717155456543
    4. 'sys' → logprob: -11.908717155456543
    5. '[' → logprob: -12.408717155456543
    6. ' [' → logprob: -13.158717155456543
    7. ' sys' → logprob: -14.283717155456543
    8. '	list' → logprob: -14.408717155456543
    9. '   ' → logprob: -15.033717155456543
    10. '(list' → logprob: -15.158717155456543

Token 115: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0004481885116547346
    2. 'map' → logprob: -7.875448226928711
    3. '(' → logprob: -10.000448226928711
    4. '()' → logprob: -11.625448226928711
    5. ')' → logprob: -12.625448226928711
    6. '(
' → logprob: -12.875448226928711
    7. ' map' → logprob: -13.125448226928711
    8. '(int' → logprob: -13.125448226928711
    9. ']' → logprob: -13.625448226928711
    10. '(sys' → logprob: -13.625448226928711

Token 116: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0017427700804546475
    2. '(lambda' → logprob: -7.001742839813232
    3. '(str' → logprob: -7.626742839813232
    4. 'int' → logprob: -8.376742362976074
    5. '(' → logprob: -10.001742362976074
    6. 'str' → logprob: -10.626742362976074
    7. 'lambda' → logprob: -11.501742362976074
    8. '<int' → logprob: -11.751742362976074
    9. ']int' → logprob: -11.751742362976074
    10. ')' → logprob: -12.001742362976074

Token 117: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.006749005056917667
    2. ',' → logprob: -5.131749153137207
    3. 'sys' → logprob: -7.381749153137207
    4. '(' → logprob: -9.006749153137207
    5. '=sys' → logprob: -10.256749153137207
    6. ' sys' → logprob: -11.131749153137207
    7. '	sys' → logprob: -11.381749153137207
    8. '(s' → logprob: -12.881749153137207
    9. '(
' → logprob: -13.006749153137207
    10. '(input' → logprob: -13.131749153137207

Token 118: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.004661403596401215
    2. ' sys' → logprob: -5.379661560058594
    3. 'input' → logprob: -10.879661560058594
    4. 'lambda' → logprob: -11.004661560058594
    5. '(sys' → logprob: -12.754661560058594
    6. ')' → logprob: -14.129661560058594
    7. '	sys' → logprob: -14.754661560058594
    8. ' input' → logprob: -15.004661560058594
    9. '=sys' → logprob: -15.004661560058594
    10. 'list' → logprob: -15.004661560058594

Token 119: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.003863854566588998
    2. 'stdin' → logprob: -5.62886381149292
    3. 'sys' → logprob: -8.753864288330078
    4. '.readline' → logprob: -9.503864288330078
    5. '(stdin' → logprob: -10.628864288330078
    6. '=sys' → logprob: -12.503864288330078
    7. '(sys' → logprob: -13.878864288330078
    8. '.stdout' → logprob: -14.503864288330078
    9. '.sys' → logprob: -14.628864288330078
    10. '.' → logprob: -15.003864288330078

Token 120: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -4.320199877838604e-07
    2. '.stdin' → logprob: -15.25
    3. '.' → logprob: -15.875
    4. '.readlines' → logprob: -17.75
    5. '.read' → logprob: -18.25
    6. '().' → logprob: -19.0
    7. ' readline' → logprob: -19.375
    8. ').' → logprob: -20.5
    9. 'stdin' → logprob: -21.625
    10. '```' → logprob: -22.25

Token 121: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.869017852295656e-06
    2. '()' → logprob: -12.000006675720215
    3. ' ().' → logprob: -15.500006675720215
    4. '(' → logprob: -15.875006675720215
    5. '.readline' → logprob: -16.50000762939453
    6. ')' → logprob: -17.00000762939453
    7. '().__' → logprob: -17.12500762939453
    8. '()[' → logprob: -17.25000762939453
    9. '()-' → logprob: -17.87500762939453
    10. '()))' → logprob: -18.62500762939453

Token 122: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.010115377604961395
    2. 'strip' → logprob: -4.760115146636963
    3. 'rstrip' → logprob: -6.510115146636963
    4. ' split' → logprob: -11.760115623474121
    5. 'read' → logprob: -12.635115623474121
    6. ' strip' → logprob: -16.510114669799805
    7. '(split' → logprob: -16.635114669799805
    8. ')' → logprob: -18.010114669799805
    9. 'decode' → logprob: -18.385114669799805
    10. 'spl' → logprob: -18.385114669799805

Token 123: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.011295736767351627
    2. '()' → logprob: -4.761295795440674
    3. '))' → logprob: -6.386295795440674
    4. '(' → logprob: -7.386295795440674
    5. '()))
' → logprob: -8.261295318603516
    6. '())' → logprob: -9.761295318603516
    7. '()
' → logprob: -10.511295318603516
    8. '()));' → logprob: -11.636295318603516
    9. '().' → logprob: -12.261295318603516
    10. '())).' → logprob: -12.636295318603516

Token 124: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.33543771505355835
    2. ')' → logprob: -1.8354377746582031
    3. '())' → logprob: -2.085437774658203
    4. '(' → logprob: -7.585437774658203
    5. 'for' → logprob: -8.085437774658203
    6. ' for' → logprob: -8.335437774658203
    7. ' ()' → logprob: -10.460437774658203
    8. ' )' → logprob: -10.460437774658203
    9. '   ' → logprob: -11.335437774658203
    10. ' ())' → logprob: -11.460437774658203

Token 125: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6435840725898743
    2. '_' → logprob: -0.8935840725898743
    3. '_range' → logprob: -3.5185840129852295
    4. 'range' → logprob: -3.5185840129852295
    5. ' _' → logprob: -5.143584251403809
    6. ' in' → logprob: -8.643584251403809
    7. '(range' → logprob: -10.018584251403809
    8. '_in' → logprob: -10.893584251403809
    9. '_i' → logprob: -10.893584251403809
    10. 'i' → logprob: -11.893584251403809

Token 126: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07901966571807861
    2. ' in' → logprob: -3.079019546508789
    3. ' range' → logprob: -3.579019546508789
    4. 'in' → logprob: -6.204019546508789
    5. '(range' → logprob: -10.579019546508789
    6. 'ange' → logprob: -10.829019546508789
    7. '	range' → logprob: -13.204019546508789
    8. ' ' → logprob: -14.204019546508789
    9. '   ' → logprob: -14.454019546508789
    10. ' xrange' → logprob: -14.704019546508789

Token 127: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005538671393878758
    2. ' range' → logprob: -7.500554084777832
    3. '(range' → logprob: -15.375554084777832
    4. '   ' → logprob: -15.500554084777832
    5. ' ' → logprob: -15.625554084777832
    6. '	range' → logprob: -16.125553131103516
    7. '  ' → logprob: -17.125553131103516
    8. 'rang' → logprob: -18.750553131103516
    9. '    ' → logprob: -19.000553131103516
    10. '[' → logprob: -19.000553131103516

Token 128: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -1.9981420336989686e-05
    2. '(' → logprob: -10.875020027160645
    3. ' (' → logprob: -14.125020027160645
    4. 'H' → logprob: -15.750020027160645
    5. '(
' → logprob: -16.500019073486328
    6. '	H' → logprob: -17.125019073486328
    7. '(W' → logprob: -17.250019073486328
    8. ' H' → logprob: -18.125019073486328
    9. '(N' → logprob: -18.125019073486328
    10. '   ' → logprob: -18.875019073486328

Token 129: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00030042731668800116
    2. ')' → logprob: -8.125300407409668
    3. ']' → logprob: -13.250300407409668
    4. ' )' → logprob: -13.625300407409668
    5. '))' → logprob: -14.875300407409668
    6. ')]
' → logprob: -15.375300407409668
    7. ')])' → logprob: -15.375300407409668
    8. ')}' → logprob: -15.750300407409668
    9. '')]' → logprob: -16.375301361083984
    10. '   ' → logprob: -16.500301361083984

Token 130: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03352097421884537
    2. '        
' → logprob: -4.2835211753845215
    3. '   ' → logprob: -5.1585211753845215
    4. '
' → logprob: -5.4085211753845215
    5. '<|end|>' → logprob: -5.9085211753845215
    6. 'for' → logprob: -6.1585211753845215
    7. ' for' → logprob: -6.7835211753845215
    8. '    
' → logprob: -7.1585211753845215
    9. '    ' → logprob: -8.158520698547363
    10. '  
' → logprob: -8.408520698547363

Token 131: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8037509322166443
    2. 'pos' → logprob: -1.428750991821289
    3. 'result' → logprob: -2.803750991821289
    4. '       ' → logprob: -2.928750991821289
    5. '#' (adapté à ' #') → logprob: -3.303750991821289
    6. 'position' → logprob: -3.803750991821289
    7. 'dp' → logprob: -4.178750991821289
    8. 'path' → logprob: -4.303750991821289
    9. 'x' → logprob: -4.428750991821289
    10. 'ans' → logprob: -4.553750991821289

Token 132: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22813841700553894
    2. 'pos' → logprob: -3.4781384468078613
    3. 'result' → logprob: -3.6031384468078613
    4. ' for' → logprob: -3.8531384468078613
    5. 'def' → logprob: -3.8531384468078613
    6. '#' → logprob: -3.9781384468078613
    7. 'dp' → logprob: -4.103138446807861
    8. 'positions' → logprob: -4.353138446807861
    9. 'ans' → logprob: -5.353138446807861
    10. 'results' → logprob: -5.478138446807861

Token 133: ' va' (ID: 3423)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2876558303833008
    2. 'for' → logprob: -1.7876558303833008
    3. ' def' → logprob: -3.287655830383301
    4. ' visited' → logprob: -4.662655830383301
    5. 'def' → logprob: -4.662655830383301
    6. '       ' → logprob: -5.037655830383301
    7. '#' → logprob: -5.412655830383301
    8. 'visited' → logprob: -5.912655830383301
    9. '   ' → logprob: -6.412655830383301
    10. 'r' → logprob: -6.787655830383301

Token 134: ' sim' (ID: 1845)
  Prédit: ' sim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sim' → logprob: -0.4382757246494293
    2. 'simulate' → logprob: -1.313275694847107
    3. ' simulate' → logprob: -2.8132758140563965
    4. 'sim' → logprob: -3.9382758140563965
    5. ' parcour' → logprob: -6.1882758140563965
    6. 'def' → logprob: -6.6882758140563965
    7. ' créer' → logprob: -7.8132758140563965
    8. ' suivre' → logprob: -7.8132758140563965
    9. ' simulated' → logprob: -8.188275337219238
    10. '_sim' → logprob: -8.938275337219238

Token 135: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.43542352318763733
    2. 'pl' → logprob: -2.3104236125946045
    3. 'pler' → logprob: -2.5604236125946045
    4. 'ple' → logprob: -2.9354236125946045
    5. 'ulate' → logprob: -3.3104236125946045
    6. 'p' → logprob: -3.3104236125946045
    7. 'ul' → logprob: -4.435423374176025
    8. 'plement' → logprob: -5.185423374176025
    9. '#' → logprob: -5.435423374176025
    10. 'u' → logprob: -5.560423374176025

Token 136: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.32130977511405945
    2. ' le' → logprob: -1.8213098049163818
    3. ' les' → logprob: -3.446309804916382
    4. ' the' → logprob: -3.696309804916382
    5. ' for' → logprob: -4.196309566497803
    6. 'le' → logprob: -4.696309566497803
    7. ' l' → logprob: -5.071309566497803
    8. 'les' → logprob: -5.321309566497803
    9. ' ' → logprob: -5.571309566497803
    10. 'for' → logprob: -5.571309566497803

Token 137: ' marche' (ID: 58191)
  Prédit: ' traject'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' traject' → logprob: -1.0665959119796753
    2. 'position' → logprob: -2.191596031188965
    3. 'desc' → logprob: -2.691596031188965
    4. 'ball' → logprob: -2.941596031188965
    5. 'tra' → logprob: -3.191596031188965
    6. 'robot' → logprob: -3.316596031188965
    7. 'dé' → logprob: -4.066596031188965
    8. 'route' → logprob: -4.066596031188965
    9. 'def' → logprob: -4.191596031188965
    10. 'pos' → logprob: -4.191596031188965

Token 138: ' mais' (ID: 2899)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 139: ' pas' (ID: 2173)
  Prédit: 'sans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sans' → logprob: -0.9000446200370789
    2. ' on' → logprob: -2.2750446796417236
    3. 'for' → logprob: -2.2750446796417236
    4. 'on' → logprob: -2.6500446796417236
    5. 'pas' → logprob: -2.7750446796417236
    6. '#' → logprob: -2.9000446796417236
    7. ' pas' → logprob: -3.2750446796417236
    8. ' sans' → logprob: -3.4000446796417236
    9. '...' → logprob: -3.6500446796417236
    10. 'without' → logprob: -4.4000444412231445

Token 140: ' naï' (ID: 153475)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4468711614608765
    2. 't' → logprob: -2.571871280670166
    3. 'ent' → logprob: -2.571871280670166
    4. ' for' → logprob: -2.696871280670166
    5. ' toute' → logprob: -3.071871280670166
    6. 'compl' → logprob: -3.196871280670166
    7. ' complètement' → logprob: -3.196871280670166
    8. 'tout' → logprob: -3.196871280670166
    9. 'pour' → logprob: -3.571871280670166
    10. ' ' → logprob: -3.571871280670166

Token 141: 'vement' (ID: 9725)
  Prédit: 'ral'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ral' → logprob: -0.5786269903182983
    2. 'r' → logprob: -1.8286269903182983
    3. 'm' → logprob: -2.203627109527588
    4. 'rement' → logprob: -2.578627109527588
    5. 'ment' → logprob: -2.953627109527588
    6. 'mente' → logprob: -4.828627109527588
    7. 'rale' → logprob: -4.953627109527588
    8. 'mal' → logprob: -5.453627109527588
    9. 've' → logprob: -5.578627109527588
    10. 're' → logprob: -6.453627109527588

Token 142: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9075981974601746
    2. '<|end|>' → logprob: -1.2825982570648193
    3. ',' → logprob: -1.4075982570648193
    4. '.' → logprob: -3.7825982570648193
    5. '<|end|>' → logprob: -4.53259801864624
    6. '...' → logprob: -4.53259801864624
    7. ' ' → logprob: -5.28259801864624
    8. '        
' → logprob: -5.40759801864624
    9. '#' → logprob: -5.40759801864624
    10. '
' → logprob: -5.65759801864624

Token 143: ' N' (ID: 478)
  Prédit: 'év'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'év' → logprob: -1.0036296844482422
    2. 'g' → logprob: -1.2536296844482422
    3. 'optim' → logprob: -1.8786296844482422
    4. ' éviter' → logprob: -2.128629684448242
    5. ' gagner' → logprob: -4.253629684448242
    6. 'ev' → logprob: -4.878629684448242
    7. 'gain' → logprob: -4.878629684448242
    8. 't' → logprob: -5.003629684448242
    9. 'é' → logprob: -5.128629684448242
    10. ' chaque' → logprob: -5.503629684448242

Token 144: ' fois' (ID: 14697)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -1.0635626316070557
    2. ')' → logprob: -2.4385626316070557
    3. '>' → logprob: -2.4385626316070557
    4. '+' → logprob: -2.8135626316070557
    5. '==' → logprob: -3.0635626316070557
    6. ' times' → logprob: -3.1885626316070557
    7. ' ' → logprob: -3.4385626316070557
    8. '-' → logprob: -3.6885626316070557
    9. '=' → logprob: -3.6885626316070557
    10. ' continuer' → logprob: -3.8135626316070557

Token 145: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.355122834444046
    2. ',' → logprob: -1.7301228046417236
    3. '.' → logprob: -3.1051228046417236
    4. '
' → logprob: -3.6051228046417236
    5. '<|end|>' → logprob: -3.7301228046417236
    6. '...' → logprob: -5.105123043060303
    7. ':' → logprob: -5.480123043060303
    8. '<|end|>' → logprob: -5.605123043060303
    9. '        
' → logprob: -6.230123043060303
    10. ' ,' → logprob: -6.730123043060303

Token 146: 'N' (ID: 45)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1478593349456787
    2. ' )' → logprob: -2.0228593349456787
    3. ' ' → logprob: -7.147859573364258
    4. '...' → logprob: -7.147859573364258
    5. ' ' → logprob: -7.522859573364258
    6. '
' → logprob: -7.647859573364258
    7. '<|end|>' → logprob: -7.897859573364258
    8. ')n' → logprob: -8.147859573364258
    9. '...)' → logprob: -8.397859573364258
    10. ' for' → logprob: -8.897859573364258

Token 147: ' peut' (ID: 9216)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -1.038953185081482
    2. ')' → logprob: -1.288953185081482
    3. '>' → logprob: -1.413953185081482
    4. '==' → logprob: -3.5389533042907715
    5. '=' → logprob: -3.7889533042907715
    6. ' ==' → logprob: -4.0389533042907715
    7. ' )' → logprob: -4.4139533042907715
    8. '+' → logprob: -4.9139533042907715
    9. ' ' → logprob: -4.9139533042907715
    10. ' >=' → logprob: -5.5389533042907715

Token 148: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.6156180500984192
    2. ' être' → logprob: -0.8656180500984192
    3. ' be' → logprob: -4.1156182289123535
    4. '’être' → logprob: -5.2406182289123535
    5. 'be' → logprob: -5.4906182289123535
    6. '<|end|>' → logprob: -5.6156182289123535
    7. ''être' → logprob: -5.7406182289123535
    8. ' devenir' → logprob: -7.1156182289123535
    9. ' etre' → logprob: -7.3656182289123535
    10. 'êtres' → logprob: -7.3656182289123535

Token 149: ' grand' (ID: 6363)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.06486937403678894
    2. ' très' → logprob: -3.0648694038391113
    3. 'very' → logprob: -4.564869403839111
    4. ' very' → logprob: -6.189869403839111
    5. 'up' → logprob: -6.939869403839111
    6. 'grand' → logprob: -7.189869403839111
    7. 't' → logprob: -7.564869403839111
    8. 'large' → logprob: -7.814869403839111
    9. ' énorme' → logprob: -8.689868927001953
    10. ' trés' → logprob: -8.814868927001953

Token 150: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006646449211984873
    2. ' )' → logprob: -5.631646633148193
    3. ',' → logprob: -6.506646633148193
    4. ').' → logprob: -7.381646633148193
    5. ')
' → logprob: -8.381646156311035
    6. '),' → logprob: -9.256646156311035
    7. '<|end|>' → logprob: -9.256646156311035
    8. ')\' → logprob: -9.756646156311035
    9. ' ' → logprob: -9.756646156311035
    10. '
' → logprob: -9.881646156311035

Token 151: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07506969571113586
    2. ' ' → logprob: -3.5750696659088135
    3. '   ' → logprob: -4.075069904327393
    4. '<|end|>' → logprob: -5.075069904327393
    5. ',' → logprob: -5.200069904327393
    6. '        
' → logprob: -5.825069904327393
    7. '        ' → logprob: -6.450069904327393
    8. '    ' → logprob: -6.575069904327393
    9. '
' → logprob: -6.825069904327393
    10. ')' → logprob: -6.825069904327393

Token 152: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1397571563720703
    2. '        ' → logprob: -1.5147571563720703
    3. ' ' → logprob: -2.1397571563720703
    4. '#' (adapté à ' #') → logprob: -2.2647571563720703
    5. '        
' → logprob: -2.7647571563720703
    6. ' 
' → logprob: -3.0147571563720703
    7. ' #' → logprob: -3.6397571563720703
    8. '
' → logprob: -3.8897571563720703
    9. 'def' → logprob: -3.8897571563720703
    10. 'dp' → logprob: -4.26475715637207

Token 153: ' Solution' (ID: 20858)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8505527973175049
    2. ' next' → logprob: -1.8505527973175049
    3. ' dp' → logprob: -1.9755527973175049
    4. '#' → logprob: -2.975552797317505
    5. 'next' → logprob: -3.350552797317505
    6. ' #' → logprob: -3.725552797317505
    7. 'visited' → logprob: -4.100552558898926
    8. ' visited' → logprob: -4.225552558898926
    9. 'memo' → logprob: -4.225552558898926
    10. ' jump' → logprob: -4.850552558898926

Token 154: ' efficace' (ID: 54338)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005515960976481438
    2. '=' → logprob: -6.255516052246094
    3. ' =' → logprob: -6.255516052246094
    4. ' :' → logprob: -7.505516052246094
    5. '<|end|>' → logprob: -7.880516052246094
    6. ':
' → logprob: -9.005516052246094
    7. 'def' → logprob: -9.005516052246094
    8. 'import' → logprob: -9.755516052246094
    9. '<|end|>' → logprob: -9.755516052246094
    10. '...' → logprob: -10.005516052246094

Token 155: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25285398960113525
    2. '<|end|>' → logprob: -2.0028538703918457
    3. '       ' → logprob: -3.0028538703918457
    4. ':
' → logprob: -4.877853870391846
    5. '#' → logprob: -5.252853870391846
    6. '        
' → logprob: -5.502853870391846
    7. ' :' → logprob: -5.627853870391846
    8. '<|end|>' → logprob: -6.002853870391846
    9. ',' → logprob: -6.252853870391846
    10. 'def' → logprob: -6.377853870391846

Token 156: ' utiliser' (ID: 43227)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.3952770233154297
    2. '#' → logprob: -1.5202770233154297
    3. 'import' → logprob: -2.5202770233154297
    4. 'memo' → logprob: -2.5202770233154297
    5. 'from' → logprob: -2.6452770233154297
    6. 'def' → logprob: -2.7702770233154297
    7. ' dp' → logprob: -3.5202770233154297
    8. ' from' → logprob: -3.6452770233154297
    9. ' on' → logprob: -3.6452770233154297
    10. 'for' → logprob: -3.8952770233154297

Token 157: ' la' (ID: 557)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.465553641319275
    2. ' la' → logprob: -1.590553641319275
    3. 'la' → logprob: -1.715553641319275
    4. 'une' → logprob: -2.2155537605285645
    5. 'l' → logprob: -2.5905537605285645
    6. 'un' → logprob: -2.7155537605285645
    7. ' un' → logprob: -2.8405537605285645
    8. 'le' → logprob: -3.8405537605285645
    9. ' l' → logprob: -4.0905537605285645
    10. ' des' → logprob: -4.7155537605285645

Token 158: ' technique' (ID: 16410)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -1.1327812671661377
    2. 'dou' → logprob: -1.1327812671661377
    3. 'p' → logprob: -3.1327812671661377
    4. 'table' → logprob: -3.3827812671661377
    5. 'double' → logprob: -3.3827812671661377
    6. 'div' → logprob: -3.5077812671661377
    7. 'binary' → logprob: -3.5077812671661377
    8. 'b' → logprob: -3.7577812671661377
    9. 'mé' → logprob: -4.007781028747559
    10. 'pow' → logprob: -4.257781028747559

Token 159: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7777135968208313
    2. '<|end|>' → logprob: -1.4027135372161865
    3. 'de' → logprob: -1.7777135372161865
    4. ' of' → logprob: -2.7777135372161865
    5. ' des' → logprob: -3.5277135372161865
    6. 'des' → logprob: -4.277713775634766
    7. 'd' → logprob: -4.902713775634766
    8. '<|end|>' → logprob: -6.027713775634766
    9. 'of' → logprob: -6.152713775634766
    10. 's' → logprob: -6.902713775634766

Token 160: ' "' (ID: 392)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -1.0118738412857056
    2. '"' → logprob: -1.7618738412857056
    3. 'l' → logprob: -2.011873722076416
    4. 'la' → logprob: -2.136873722076416
    5. 'double' → logprob: -3.136873722076416
    6. ' la' → logprob: -3.636873722076416
    7. ' saut' → logprob: -3.636873722076416
    8. 'binary' → logprob: -3.636873722076416
    9. 's' → logprob: -3.761873722076416
    10. ' doubling' → logprob: -4.511873722076416

Token 161: 'dou' (ID: 122443)
  Prédit: 'dou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.466819703578949
    2. 's' → logprob: -2.3418197631835938
    3. 'double' → logprob: -2.9668197631835938
    4. 'binary' → logprob: -3.0918197631835938
    5. ' saut' → logprob: -3.3418197631835938
    6. '"' → logprob: -3.4668197631835938
    7. ' doubling' → logprob: -3.8418197631835938
    8. 'l' → logprob: -3.9668197631835938
    9. 'd' → logprob: -4.341819763183594
    10. ' binary' → logprob: -4.466819763183594

Token 162: 'bl' (ID: 1751)
  Prédit: 'bling'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bling' → logprob: -0.03551125526428223
    2. 'bl' → logprob: -3.5355112552642822
    3. 'ble' → logprob: -6.660511016845703
    4. 'b' → logprob: -6.910511016845703
    5. '```' → logprob: -6.910511016845703
    6. '   ' → logprob: -7.660511016845703
    7. 'blings' → logprob: -8.035511016845703
    8. 'k' → logprob: -8.160511016845703
    9. '``' → logprob: -8.785511016845703
    10. 'blers' → logprob: -9.160511016845703

Token 163: 'age' (ID: 477)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.5760475397109985
    2. 'e' → logprob: -0.8260475397109985
    3. 'eing' → logprob: -9.701047897338867
    4. 'es' → logprob: -12.326047897338867
    5. '-ing' → logprob: -12.701047897338867
    6. 'é' → logprob: -12.826047897338867
    7. 'ｅ' → logprob: -12.826047897338867
    8. '
' → logprob: -12.951047897338867
    9. '%e' → logprob: -12.951047897338867
    10. '```' → logprob: -13.076047897338867

Token 164: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.27000731229782104
    2. ' de' → logprob: -2.020007371902466
    3. 'de' → logprob: -3.895007371902466
    4. '")' → logprob: -3.895007371902466
    5. 's' → logprob: -4.270007133483887
    6. ' des' → logprob: -5.020007133483887
    7. 'dou' → logprob: -5.145007133483887
    8. ' ' → logprob: -5.395007133483887
    9. ' doubling' → logprob: -5.770007133483887
    10. ' exponent' → logprob: -6.145007133483887

Token 165: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020442267879843712
    2. '        
' → logprob: -4.395442485809326
    3. '
' → logprob: -5.770442485809326
    4. '#' → logprob: -6.895442485809326
    5. 'def' → logprob: -7.520442485809326
    6. ',' → logprob: -7.645442485809326
    7. 'import' → logprob: -7.770442485809326
    8. '       
' → logprob: -8.270442008972168
    9. 'dp' → logprob: -8.645442008972168
    10. '  
' → logprob: -8.770442008972168

Token 166: ' sim' (ID: 1845)
  Prédit: 'pré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pré' → logprob: -1.1323890686035156
    2. ' sim' → logprob: -1.7573890686035156
    3. ' prec' → logprob: -2.5073890686035156
    4. ' pré' → logprob: -2.7573890686035156
    5. ' gérer' → logprob: -2.8823890686035156
    6. 'pre' → logprob: -3.1323890686035156
    7. ' accél' → logprob: -3.1323890686035156
    8. 'sim' → logprob: -3.3823890686035156
    9. ' effectuer' → logprob: -3.6323890686035156
    10. 'pr' → logprob: -3.7573890686035156

Token 167: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.017428917810320854
    2. 'ul' → logprob: -4.767428874969482
    3. 'm' → logprob: -6.142428874969482
    4. 'ulation' → logprob: -6.392428874969482
    5. '-' → logprob: -7.142428874969482
    6. 'ulate' → logprob: -7.392428874969482
    7. '#' → logprob: -8.14242935180664
    8. 'ule' → logprob: -8.26742935180664
    9. 'ulat' → logprob: -8.51742935180664
    10. 'u' → logprob: -8.64242935180664

Token 168: ' plusieurs' (ID: 20875)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.5861697196960449
    2. ' la' → logprob: -1.836169719696045
    3. 'les' → logprob: -2.211169719696045
    4. ' ' → logprob: -3.211169719696045
    5. ' le' → logprob: -3.461169719696045
    6. ' steps' → logprob: -3.961169719696045
    7. ' des' → logprob: -4.086169719696045
    8. ' the' → logprob: -4.336169719696045
    9. ' une' → logprob: -4.461169719696045
    10. 'le' → logprob: -4.461169719696045

Token 169: ' marches' (ID: 169241)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.6565929651260376
    2. 'pas' → logprob: -1.1565929651260376
    3. ' étapes' → logprob: -2.406592845916748
    4. ' déplacements' → logprob: -3.781592845916748
    5. 'steps' → logprob: -4.031592845916748
    6. ' steps' → logprob: -4.281592845916748
    7. 'march' → logprob: -5.406592845916748
    8. 'm' → logprob: -5.656592845916748
    9. 's' → logprob: -5.781592845916748
    10. ' mouvements' → logprob: -6.406592845916748

Token 170: ' en' (ID: 469)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16172951459884644
    2. '<|end|>' → logprob: -2.536729574203491
    3. '        
' → logprob: -3.411729574203491
    4. ',' → logprob: -4.536729335784912
    5. '<|end|>' → logprob: -4.911729335784912
    6. '.' → logprob: -4.911729335784912
    7. '
' → logprob: -6.536729335784912
    8. '        ' → logprob: -6.536729335784912
    9. '        

' → logprob: -6.536729335784912
    10. ' ' → logprob: -6.911729335784912

Token 171: ' O' (ID: 532)
  Prédit: 'log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'log' → logprob: -0.7099142074584961
    2. 'O' → logprob: -2.084914207458496
    3. 'une' → logprob: -2.209914207458496
    4. 'python' → logprob: -2.334914207458496
    5. ' une' → logprob: -2.334914207458496
    6. ' O' → logprob: -3.584914207458496
    7. ' logarith' → logprob: -4.209914207458496
    8. 'un' → logprob: -5.209914207458496
    9. 'temps' → logprob: -5.709914207458496
    10. ' ' → logprob: -5.709914207458496

Token 172: '(log' (ID: 25116)
  Prédit: '(log'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(log' → logprob: -0.1534828245639801
    2. '(' → logprob: -2.0284829139709473
    3. '(\' → logprob: -4.778482913970947
    4. '(
' → logprob: -6.528482913970947
    5. '(N' → logprob: -8.153482437133789
    6. 'log' → logprob: -8.278482437133789
    7. '(H' → logprob: -9.278482437133789
    8. '(n' → logprob: -10.153482437133789
    9. '((' → logprob: -10.403482437133789
    10. '(math' → logprob: -10.903482437133789

Token 173: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.22349035739898682
    2. ' N' → logprob: -1.7234903573989868
    3. '(N' → logprob: -4.348490238189697
    4. ' ' → logprob: -5.973490238189697
    5. ')' → logprob: -6.723490238189697
    6. '2' → logprob: -6.973490238189697
    7. 'space' → logprob: -7.348490238189697
    8. ' n' → logprob: -7.473490238189697
    9. ' space' → logprob: -7.473490238189697
    10. 'n' → logprob: -7.598490238189697

Token 174: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022392053506337106
    2. ' )' → logprob: -8.875224113464355
    3. ')
' → logprob: -10.250224113464355
    4. ')`' → logprob: -12.125224113464355
    5. '))' → logprob: -12.250224113464355
    6. ' ' → logprob: -12.500224113464355
    7. ')

' → logprob: -12.500224113464355
    8. '")' → logprob: -12.625224113464355
    9. '')' → logprob: -12.625224113464355
    10. ')")' → logprob: -12.875224113464355

Token 175: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11450217664241791
    2. '        
' → logprob: -2.489502191543579
    3. '
' → logprob: -4.364501953125
    4. '        ' → logprob: -5.489501953125
    5. '    ' → logprob: -6.739501953125
    6. '   ' → logprob: -7.114501953125
    7. '        

' → logprob: -7.114501953125
    8. 'def' → logprob: -7.489501953125
    9. ' ' → logprob: -7.739501953125
    10. '#' → logprob: -7.864501953125

Token 176: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.6298455595970154
    2. '       ' → logprob: -1.6298456192016602
    3. 'dp' → logprob: -1.8798456192016602
    4. 'next' → logprob: -3.00484561920166
    5. 'max' → logprob: -3.50484561920166
    6. 'move' → logprob: -5.00484561920166
    7. 'jump' → logprob: -5.12984561920166
    8. 'pos' → logprob: -5.62984561920166
    9. 'log' → logprob: -5.75484561920166
    10. 'def' → logprob: -5.87984561920166

Token 177: ' Pré' (ID: 86400)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0403095483779907
    2. '#' → logprob: -1.2903095483779907
    3. 'max' → logprob: -2.165309429168701
    4. 'next' → logprob: -2.915309429168701
    5. 'log' → logprob: -3.290309429168701
    6. ' max' → logprob: -3.665309429168701
    7. 'dire' → logprob: -3.915309429168701
    8. ' next' → logprob: -4.040309429168701
    9. 'jump' → logprob: -4.665309429168701
    10. ' dp' → logprob: -4.665309429168701

Token 178: 'par' (ID: 796)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.148437038064003
    2. 'c' → logprob: -3.523437023162842
    3. 'dict' → logprob: -3.898437023162842
    4. 's' → logprob: -4.023437023162842
    5. 'pare' → logprob: -4.273437023162842
    6. 'cis' → logprob: -4.648437023162842
    7. 'f' → logprob: -4.648437023162842
    8. 'compute' → logprob: -5.273437023162842
    9. 'parer' → logprob: -5.523437023162842
    10. '   ' → logprob: -5.523437023162842

Token 179: 'ons' (ID: 1808)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.31367799639701843
    2. 'e' → logprob: -2.063678026199341
    3. '   ' → logprob: -3.063678026199341
    4. 'ation' → logprob: -3.063678026199341
    5. 'ons' → logprob: -4.063677787780762
    6. 'es' → logprob: -4.688677787780762
    7. 'ed' → logprob: -4.813677787780762
    8. 'é' → logprob: -5.813677787780762
    9. 'ing' → logprob: -5.938677787780762
    10. ' e' → logprob: -6.188677787780762

Token 180: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3951209485530853
    2. ' une' → logprob: -1.6451209783554077
    3. ' dp' → logprob: -3.145120859146118
    4. ' les' → logprob: -3.770120859146118
    5. ' ' → logprob: -4.395121097564697
    6. ' un' → logprob: -4.520121097564697
    7. 'dp' → logprob: -4.895121097564697
    8. ' max' → logprob: -4.895121097564697
    9. ' next' → logprob: -5.020121097564697
    10. '   ' → logprob: -5.270121097564697

Token 181: ' structure' (ID: 8866)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.45216697454452515
    2. ' dp' → logprob: -2.07716703414917
    3. 'liste' → logprob: -3.07716703414917
    4. 'next' → logprob: -3.20216703414917
    5. 'table' → logprob: -3.32716703414917
    6. ' table' → logprob: -3.32716703414917
    7. ' next' → logprob: -4.07716703414917
    8. ' liste' → logprob: -4.20216703414917
    9. '#' → logprob: -4.57716703414917
    10. 'list' → logprob: -4.70216703414917

Token 182: ' pour' (ID: 1930)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.3030987977981567
    2. 'de' → logprob: -1.3030987977981567
    3. '[]' → logprob: -1.8030987977981567
    4. 'dp' → logprob: -2.178098678588867
    5. 'd' → logprob: -2.553098678588867
    6. ' d' → logprob: -4.303098678588867
    7. '[][]' → logprob: -4.428098678588867
    8. 'e' → logprob: -4.803098678588867
    9. 'next' → logprob: -4.803098678588867
    10. 'data' → logprob: -4.803098678588867

Token 183: ' sim' (ID: 1845)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.06529662758111954
    2. 'stock' → logprob: -3.3152966499328613
    3. ' la' → logprob: -3.9402966499328613
    4. ' le' → logprob: -6.815296649932861
    5. 'l' → logprob: -6.940296649932861
    6. ' sim' → logprob: -7.065296649932861
    7. ' les' → logprob: -7.065296649932861
    8. 'la' → logprob: -7.315296649932861
    9. 'le' → logprob: -7.815296649932861
    10. ' l' → logprob: -8.190296173095703

Token 184: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.0056257350370287895
    2. 'ulate' → logprob: -6.0056257247924805
    3. 'ul' → logprob: -6.8806257247924805
    4. 'ule' → logprob: -7.1306257247924805
    5. '-' → logprob: -9.00562572479248
    6. 'ulation' → logprob: -9.00562572479248
    7. 'm' → logprob: -9.38062572479248
    8. 'u' → logprob: -9.38062572479248
    9. '\' → logprob: -9.88062572479248
    10. '_' → logprob: -9.88062572479248

Token 185: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6368616819381714
    2. ' next' → logprob: -1.6368616819381714
    3. ' ' → logprob: -2.511861801147461
    4. ' les' → logprob: -2.636861801147461
    5. 'next' → logprob: -3.011861801147461
    6. 'les' → logprob: -4.886861801147461
    7. ' le' → logprob: -5.136861801147461
    8. ' steps' → logprob: -5.136861801147461
    9. ' des' → logprob: -5.261861801147461
    10. 'moves' → logprob: -5.261861801147461

Token 186: ' marche' (ID: 58191)
  Prédit: 'mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mar' → logprob: -0.2667997181415558
    2. 'transition' → logprob: -3.3917996883392334
    3. 'position' → logprob: -3.6417996883392334
    4. ' marche' → logprob: -3.7667996883392334
    5. 'dé' → logprob: -3.8917996883392334
    6. 'case' → logprob: -4.2667999267578125
    7. 'ét' → logprob: -4.2667999267578125
    8. 'se' → logprob: -4.6417999267578125
    9. 'unique' → logprob: -4.8917999267578125
    10. ' étape' → logprob: -4.8917999267578125

Token 187: ' en' (ID: 469)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.1139500141143799
    2. 'next' → logprob: -1.2389500141143799
    3. '       ' → logprob: -1.9889500141143799
    4. '   ' → logprob: -2.48895001411438
    5. 'dp' → logprob: -3.23895001411438
    6. ',' → logprob: -3.61395001411438
    7. '[next' → logprob: -4.363949775695801
    8. ' steps' → logprob: -4.488949775695801
    9. 'steps' → logprob: -4.613949775695801
    10. ' =' → logprob: -4.863949775695801

Token 188: ' part' (ID: 997)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.39452266693115234
    2. 'une' → logprob: -2.0195226669311523
    3. 'H' → logprob: -3.0195226669311523
    4. 'O' → logprob: -3.1445226669311523
    5. ' une' → logprob: -3.7695226669311523
    6. ' ' → logprob: -3.7695226669311523
    7. 'un' → logprob: -4.019522666931152
    8. ' H' → logprob: -4.644522666931152
    9. 'gr' → logprob: -5.519522666931152
    10. ' O' → logprob: -5.644522666931152

Token 189: 'ant' (ID: 493)
  Prédit: 'ition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ition' → logprob: -1.5855519771575928
    2. '   ' → logprob: -1.7105519771575928
    3. ' de' → logprob: -2.0855519771575928
    4. 'ie' → logprob: -2.4605519771575928
    5. ' des' → logprob: -3.3355519771575928
    6. '       ' → logprob: -3.3355519771575928
    7. ' from' → logprob: -3.7105519771575928
    8. 'itions' → logprob: -3.7105519771575928
    9. ' ' → logprob: -3.8355519771575928
    10. 'from' → logprob: -3.9605519771575928

Token 190: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5819147825241089
    2. ' d' → logprob: -1.8319147825241089
    3. 'de' → logprob: -2.0819149017333984
    4. ' des' → logprob: -2.8319149017333984
    5. 'd' → logprob: -3.0819149017333984
    6. '       ' → logprob: -3.8319149017333984
    7. 'from' → logprob: -4.331914901733398
    8. ' from' → logprob: -5.581914901733398
    9. 'des' → logprob: -5.581914901733398
    10. ' du' → logprob: -5.956914901733398

Token 191: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.6863569021224976
    2. 'each' → logprob: -1.0613569021224976
    3. '[' → logprob: -3.436357021331787
    4. ' each' → logprob: -3.561357021331787
    5. 'range' → logprob: -3.811357021331787
    6. 'ch' → logprob: -4.436357021331787
    7. '[(' → logprob: -4.561357021331787
    8. 'une' → logprob: -5.061357021331787
    9. '(' → logprob: -5.436357021331787
    10. 'every' → logprob: -5.561357021331787

Token 192: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -1.4294908046722412
    2. ' cellule' → logprob: -1.4294908046722412
    3. 'cell' → logprob: -1.6794908046722412
    4. ' position' → logprob: -1.8044908046722412
    5. ' case' → logprob: -2.554490804672241
    6. 'position' → logprob: -3.054490804672241
    7. ' cell' → logprob: -3.304490804672241
    8. 'cases' → logprob: -6.30449104309082
    9. ' ' → logprob: -7.17949104309082
    10. 'point' → logprob: -7.30449104309082

Token 193: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23282048106193542
    2. ':' → logprob: -2.982820510864258
    3. ',' → logprob: -3.232820510864258
    4. '        
' → logprob: -3.232820510864258
    5. 'next' → logprob: -4.107820510864258
    6. ' next' → logprob: -4.232820510864258
    7. 'dp' → logprob: -5.107820510864258
    8. '   ' → logprob: -5.107820510864258
    9. ' :' → logprob: -5.857820510864258
    10. '[next' → logprob: -5.857820510864258

Token 194: 'i' (ID: 72)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13111701607704163
    2. ' )' → logprob: -2.131117105484009
    3. ').' → logprob: -6.63111686706543
    4. '):' → logprob: -7.50611686706543
    5. '),' → logprob: -7.63111686706543
    6. ',' → logprob: -8.38111686706543
    7. ' ' → logprob: -8.63111686706543
    8. '   ' → logprob: -8.63111686706543
    9. ')
' → logprob: -8.75611686706543
    10. ' grid' → logprob: -9.25611686706543

Token 195: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08899421989917755
    2. ')' → logprob: -3.088994264602661
    3. ',j' → logprob: -4.213994026184082
    4. ' ,' → logprob: -4.838994026184082
    5. '),' → logprob: -5.713994026184082
    6. '   ' → logprob: -5.838994026184082
    7. 's' → logprob: -6.588994026184082
    8. 'n' → logprob: -6.713994026184082
    9. 'x' → logprob: -6.838994026184082
    10. '=' → logprob: -6.963994026184082

Token 196: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00803113542497158
    2. ' )' → logprob: -5.258031368255615
    3. ',' → logprob: -6.633031368255615
    4. ').' → logprob: -7.508031368255615
    5. ')
' → logprob: -7.883031368255615
    6. '):' → logprob: -8.633030891418457
    7. '   ' → logprob: -9.258030891418457
    8. '),' → logprob: -9.258030891418457
    9. ' ' → logprob: -10.258030891418457
    10. '       ' → logprob: -10.633030891418457

Token 197: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5384969711303711
    2. 'dp' → logprob: -2.038496971130371
    3. ' dp' → logprob: -2.913496971130371
    4. ',' → logprob: -2.913496971130371
    5. 'next' → logprob: -3.538496971130371
    6. '   ' → logprob: -3.663496971130371
    7. ' next' → logprob: -3.913496971130371
    8. '        
' → logprob: -4.288496971130371
    9. '
' → logprob: -4.288496971130371
    10. ')' → logprob: -4.538496971130371

Token 198: ' #' (ID: 1069)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.2077539563179016
    2. 'next' → logprob: -2.207753896713257
    3. ' dp' → logprob: -3.832753896713257
    4. 'dp' → logprob: -4.332754135131836
    5. ' jump' → logprob: -4.457754135131836
    6. '   ' → logprob: -4.707754135131836
    7. ' nxt' → logprob: -5.082754135131836
    8. 'jump' → logprob: -5.707754135131836
    9. ' max' → logprob: -6.207754135131836
    10. ' ' → logprob: -6.457754135131836

Token 199: ' à' (ID: 1221)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.6069357991218567
    2. 'next' → logprob: -1.356935739517212
    3. 'dp' → logprob: -2.606935739517212
    4. ' jump' → logprob: -3.231935739517212
    5. ' dp' → logprob: -3.481935739517212
    6. 'jump' → logprob: -3.981935739517212
    7. '   ' → logprob: -4.481935977935791
    8. ' nxt' → logprob: -4.856935977935791
    9. 'dou' → logprob: -5.981935977935791
    10. ' max' → logprob: -6.106935977935791

Token 200: ' travers' (ID: 26957)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -1.0128858089447021
    2. '[' → logprob: -2.512885808944702
    3. ' partir' → logprob: -2.887885808944702
    4. ']' → logprob: -3.012885808944702
    5. 'part' → logprob: -3.137885808944702
    6. 'next' → logprob: -3.387885808944702
    7. 'len' → logprob: -3.637885808944702
    8. 'each' → logprob: -3.762885808944702
    9. 'i' → logprob: -4.012886047363281
    10. '[]' → logprob: -4.012886047363281

Token 201: ' les' (ID: 1341)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.1749184131622314
    2. 'une' → logprob: -1.5499184131622314
    3. 'H' → logprob: -2.4249184131622314
    4. 'les' → logprob: -2.6749184131622314
    5. ' les' → logprob: -3.4249184131622314
    6. ' H' → logprob: -3.5499184131622314
    7. 'un' → logprob: -3.5499184131622314
    8. ' la' → logprob: -3.7999184131622314
    9. ' des' → logprob: -3.9249184131622314
    10. ' un' → logprob: -3.9249184131622314

Token 202: ' directions' (ID: 24921)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -1.3202835321426392
    2. ' directions' → logprob: -1.5702835321426392
    3. 'H' → logprob: -1.6952835321426392
    4. ' H' → logprob: -2.4452834129333496
    5. 'pas' → logprob: -3.3202834129333496
    6. 'positions' → logprob: -3.5702834129333496
    7. 'indices' → logprob: -3.5702834129333496
    8. 'gr' → logprob: -3.8202834129333496
    9. 'cases' → logprob: -3.8202834129333496
    10. ' ' → logprob: -4.19528341293335

Token 203: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5217379927635193
    2. 'dp' → logprob: -2.396738052368164
    3. '   ' → logprob: -2.646738052368164
    4. '
' → logprob: -2.896738052368164
    5. 'next' → logprob: -3.021738052368164
    6. ' next' → logprob: -3.521738052368164
    7. ':' → logprob: -3.896738052368164
    8. ' dp' → logprob: -4.271738052368164
    9. ',' → logprob: -4.646738052368164
    10. '#' → logprob: -4.896738052368164

Token 204: ' on' (ID: 402)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.3424023687839508
    2. 'next' → logprob: -2.467402458190918
    3. '       ' → logprob: -2.717402458190918
    4. ' dp' → logprob: -3.092402458190918
    5. 'dp' → logprob: -3.217402458190918
    6. ' nxt' → logprob: -4.592402458190918
    7. '   ' → logprob: -4.967402458190918
    8. ' steps' → logprob: -5.467402458190918
    9. '#' → logprob: -5.842402458190918
    10. ' ' → logprob: -6.217402458190918

Token 205: ' peut' (ID: 9216)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.828065037727356
    2. 'continue' → logprob: -2.3280649185180664
    3. 'n' → logprob: -2.7030649185180664
    4. 'simulate' → logprob: -2.8280649185180664
    5. '#' → logprob: -2.9530649185180664
    6. 'ir' → logprob: -3.0780649185180664
    7. ' continue' → logprob: -3.4530649185180664
    8. 'dp' → logprob: -3.4530649185180664
    9. 'dire' → logprob: -3.4530649185180664
    10. 'def' → logprob: -3.5780649185180664

Token 206: ' déterminer' (ID: 122024)
  Prédit: 'pré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pré' → logprob: -0.6008971929550171
    2. ' créer' → logprob: -1.975897192955017
    3. 'pre' → logprob: -2.3508973121643066
    4. 'dé' → logprob: -3.2258973121643066
    5. ' stock' → logprob: -3.6008973121643066
    6. 'initial' → logprob: -4.100897312164307
    7. ' prec' → logprob: -4.350897312164307
    8. ' construire' → logprob: -4.600897312164307
    9. ' pré' → logprob: -4.600897312164307
    10. ' pre' → logprob: -4.600897312164307

Token 207: ' pour' (ID: 1930)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.198639154434204
    2. 'le' → logprob: -2.073639154434204
    3. 'où' → logprob: -2.198639154434204
    4. 'la' → logprob: -2.573639154434204
    5. ' où' → logprob: -2.823639154434204
    6. ' next' → logprob: -3.073639154434204
    7. ',' → logprob: -3.198639154434204
    8. 'next' → logprob: -3.198639154434204
    9. ' for' → logprob: -3.323639154434204
    10. ' le' → logprob: -3.448639154434204

Token 208: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5757046937942505
    2. ' each' → logprob: -1.9507046937942505
    3. ' chaque' → logprob: -1.9507046937942505
    4. 'i' → logprob: -3.075704574584961
    5. 'each' → logprob: -3.325704574584961
    6. ' ' → logprob: -4.200704574584961
    7. ' range' → logprob: -4.325704574584961
    8. ' _' → logprob: -4.575704574584961
    9. ' next' → logprob: -4.825704574584961
    10. 'range' → logprob: -5.700704574584961

Token 209: ' position' (ID: 4010)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8787071108818054
    2. 'i' → logprob: -1.1287071704864502
    3. '(i' → logprob: -2.62870717048645
    4. ' (' → logprob: -3.00370717048645
    5. ' position' → logprob: -3.37870717048645
    6. 'cell' → logprob: -3.62870717048645
    7. 'position' → logprob: -3.75370717048645
    8. 'case' → logprob: -4.253706932067871
    9. ' cellule' → logprob: -4.753706932067871
    10. ' cell' → logprob: -4.753706932067871

Token 210: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6066142916679382
    2. ',' → logprob: -1.731614351272583
    3. ' ' → logprob: -2.981614351272583
    4. ' où' → logprob: -3.106614351272583
    5. ' le' → logprob: -3.606614351272583
    6. 'où' → logprob: -3.856614351272583
    7. ' une' → logprob: -4.106614112854004
    8. ' ,' → logprob: -4.106614112854004
    9. ' (' → logprob: -4.481614112854004
    10. ' next' → logprob: -4.731614112854004

Token 211: ' point' (ID: 2438)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.4673542082309723
    2. ' next' → logprob: -1.71735417842865
    3. 'pro' → logprob: -2.7173542976379395
    4. ' prochain' → logprob: -3.8423542976379395
    5. 'su' → logprob: -3.8423542976379395
    6. ' déplacement' → logprob: -3.9673542976379395
    7. ' prochaine' → logprob: -4.7173542976379395
    8. 'succ' → logprob: -5.0923542976379395
    9. 'destination' → logprob: -5.2173542976379395
    10. ' mouvement' → logprob: -5.3423542976379395

Token 212: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.3398628234863281
    2. ' suivant' → logprob: -1.7148628234863281
    3. ' de' → logprob: -1.8398628234863281
    4. 'd' → logprob: -2.089862823486328
    5. 'final' → logprob: -2.464862823486328
    6. ' final' → logprob: -2.839862823486328
    7. 'de' → logprob: -3.214862823486328
    8. ' next' → logprob: -3.839862823486328
    9. 'next' → logprob: -4.089862823486328
    10. ' ' → logprob: -4.714862823486328

Token 213: ' sortie' (ID: 52761)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.42152532935142517
    2. 'arr' → logprob: -1.4215253591537476
    3. 'destination' → logprob: -2.921525239944458
    4. 'vue' → logprob: -4.546525478363037
    5. 'depart' → logprob: -4.546525478363037
    6. 'd' → logprob: -4.921525478363037
    7. ' départ' → logprob: -4.921525478363037
    8. 'part' → logprob: -5.421525478363037
    9. 'dest' → logprob: -6.171525478363037
    10. 'pass' → logprob: -7.046525478363037

Token 214: '.

' (ID: 364)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3685522079467773
    2. '<|end|>' → logprob: -1.6185522079467773
    3. '       ' → logprob: -1.9935522079467773
    4. ' ' → logprob: -2.4935522079467773
    5. 'from' → logprob: -2.4935522079467773
    6. 's' → logprob: -2.9935522079467773
    7. ' ,' → logprob: -3.3685522079467773
    8. ')' → logprob: -3.7435522079467773
    9. '.' → logprob: -3.7435522079467773
    10. ' from' → logprob: -4.118552207946777

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11456181854009628
    2. '        
' → logprob: -2.4895617961883545
    3. 'next' → logprob: -4.739562034606934
    4. ',' → logprob: -6.489562034606934
    5. '
' → logprob: -6.614562034606934
    6. '  
' → logprob: -6.614562034606934
    7. ' next' → logprob: -6.864562034606934
    8. '#' → logprob: -6.864562034606934
    9. '<|end|>' → logprob: -6.864562034606934
    10. ')' → logprob: -6.989562034606934

Token 216: ' #' (ID: 1069)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.6530760526657104
    2. ' next' → logprob: -0.9030760526657104
    3. '       ' → logprob: -3.403076171875
    4. 'dp' → logprob: -3.903076171875
    5. '#' (adapté à ' #') → logprob: -4.903076171875
    6. '        
' → logprob: -5.653076171875
    7. ' dp' → logprob: -5.903076171875
    8. '
' → logprob: -6.778076171875
    9. 'from' → logprob: -7.153076171875
    10. ' nxt' → logprob: -7.528076171875

Token 217: ' On' (ID: 2160)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.49777114391326904
    2. 'dp' → logprob: -1.497771143913269
    3. '#' → logprob: -2.2477712631225586
    4. 'exit' → logprob: -4.122771263122559
    5. ' next' → logprob: -4.372771263122559
    6. 'jump' → logprob: -4.497771263122559
    7. 'max' → logprob: -5.372771263122559
    8. 'pos' → logprob: -6.122771263122559
    9. 'from' → logprob: -6.372771263122559
    10. '   ' → logprob: -6.497771263122559

Token 218: ' veut' (ID: 41653)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -2.4901773929595947
    2. '_next' → logprob: -2.4901773929595947
    3. '_direction' → logprob: -2.7401773929595947
    4. ')' → logprob: -2.9901773929595947
    5. 'next' → logprob: -3.1151773929595947
    6. ' =' → logprob: -3.1151773929595947
    7. ' next' → logprob: -3.3651773929595947
    8. '_size' → logprob: -3.3651773929595947
    9. ']' → logprob: -3.6151773929595947
    10. '#' → logprob: -3.6151773929595947

Token 219: ' calcul' (ID: 7559)
  Prédit: 'pré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pré' → logprob: -0.21191130578517914
    2. 'sim' → logprob: -3.211911201477051
    3. 'calcul' → logprob: -3.961911201477051
    4. 'pre' → logprob: -3.961911201477051
    5. 'pr' → logprob: -4.461911201477051
    6. 'dé' → logprob: -4.586911201477051
    7. 'stock' → logprob: -4.836911201477051
    8. ' créer' → logprob: -4.836911201477051
    9. ' prec' → logprob: -4.961911201477051
    10. ' calcul' → logprob: -5.211911201477051

Token 220: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0062175593338906765
    2. 'uler' → logprob: -5.5062174797058105
    3. 'ate' → logprob: -7.1312174797058105
    4. 'ulate' → logprob: -7.6312174797058105
    5. 'uer' → logprob: -8.131217956542969
    6. 'e' → logprob: -9.006217956542969
    7. 'ul' → logprob: -9.131217956542969
    8. 'ule' → logprob: -9.506217956542969
    9. '_' → logprob: -10.131217956542969
    10. '_er' → logprob: -10.631217956542969

Token 221: ' pour' (ID: 1930)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6297689080238342
    2. ',' → logprob: -2.0047688484191895
    3. ' les' → logprob: -2.5047688484191895
    4. ' next' → logprob: -2.7547688484191895
    5. ' le' → logprob: -2.8797688484191895
    6. ' l' → logprob: -3.7547688484191895
    7. ' for' → logprob: -3.7547688484191895
    8. ' une' → logprob: -4.2547688484191895
    9. ' pour' → logprob: -4.5047688484191895
    10. 'le' → logprob: -4.7547688484191895

Token 222: ' tout' (ID: 5501)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.4364931285381317
    2. 'k' → logprob: -1.561493158340454
    3. ' k' → logprob: -2.311493158340454
    4. '_' → logprob: -4.561492919921875
    5. 'each' → logprob: -5.311492919921875
    6. 'd' → logprob: -5.811492919921875
    7. ' each' → logprob: -5.936492919921875
    8. ' ' → logprob: -6.186492919921875
    9. '_k' → logprob: -6.186492919921875
    10. 'n' → logprob: -6.186492919921875

Token 223: ' sommet' (ID: 130502)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4881988763809204
    2. 'i' → logprob: -0.9881988763809204
    3. '(i' → logprob: -4.863198757171631
    4. ' (' → logprob: -6.488198757171631
    5. ' ' → logprob: -6.988198757171631
    6. ' la' → logprob: -7.238198757171631
    7. '(' → logprob: -8.113199234008789
    8. '_' → logprob: -8.238199234008789
    9. 's' → logprob: -8.238199234008789
    10. 'position' → logprob: -8.238199234008789

Token 224: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.39823591709136963
    2. ',' → logprob: -1.7732359170913696
    3. ' ,' → logprob: -3.64823579788208
    4. '<|end|>' → logprob: -3.64823579788208
    5. '(i' → logprob: -3.89823579788208
    6. '(s' → logprob: -4.02323579788208
    7. ' ' → logprob: -4.14823579788208
    8. 's' → logprob: -4.27323579788208
    9. ')' → logprob: -5.02323579788208
    10. '(' → logprob: -5.02323579788208

Token 225: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3285282254219055
    2. ' i' → logprob: -1.5785281658172607
    3. ' (' → logprob: -3.3285281658172607
    4. ')' → logprob: -4.20352840423584
    5. '(i' → logprob: -4.82852840423584
    6. ',' → logprob: -4.95352840423584
    7. '(' → logprob: -5.95352840423584
    8. ')i' → logprob: -6.20352840423584
    9. ',i' → logprob: -6.57852840423584
    10. ' ,' → logprob: -8.07852840423584

Token 226: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23597143590450287
    2. ',j' → logprob: -1.610971450805664
    3. '),' → logprob: -5.235971450805664
    4. ')' → logprob: -5.985971450805664
    5. ' ,' → logprob: -6.610971450805664
    6. ',i' → logprob: -8.360971450805664
    7. ',n' → logprob: -8.735971450805664
    8. '),(' → logprob: -8.985971450805664
    9. ',y' → logprob: -9.360971450805664
    10. ',w' → logprob: -9.360971450805664

Token 227: ')' (ID: 8)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.5120024085044861
    2. ')' → logprob: -1.0120024681091309
    3. ',' → logprob: -3.387002468109131
    4. ',)' → logprob: -6.637002468109131
    5. ' ),' → logprob: -7.512002468109131
    6. ' )' → logprob: -7.887002468109131
    7. '):' → logprob: -8.262001991271973
    8. ',),' → logprob: -8.637001991271973
    9. '),
' → logprob: -8.762001991271973
    10. ' ,' → logprob: -9.012001991271973

Token 228: ' la' (ID: 557)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3639620244503021
    2. ' la' → logprob: -1.9889620542526245
    3. ' ,' → logprob: -2.113961935043335
    4. ' une' → logprob: -4.488962173461914
    5. ' le' → logprob: -4.738962173461914
    6. ' un' → logprob: -5.113962173461914
    7. ' ' → logprob: -5.863962173461914
    8. ' les' → logprob: -5.988962173461914
    9. ':' → logprob: -6.363962173461914
    10. ' the' → logprob: -6.738962173461914

Token 229: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -1.0164893865585327
    2. 'pro' → logprob: -1.2664893865585327
    3. ' prochaine' → logprob: -1.5164893865585327
    4. 'case' → logprob: -3.1414895057678223
    5. 'destination' → logprob: -3.2664895057678223
    6. 'next' → logprob: -4.641489505767822
    7. ' position' → logprob: -4.766489505767822
    8. 'direction' → logprob: -5.141489505767822
    9. 'sort' → logprob: -5.641489505767822
    10. 'distance' → logprob: -5.766489505767822

Token 230: ' où' (ID: 15113)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6027824282646179
    2. ' suivante' → logprob: -1.3527824878692627
    3. 'de' → logprob: -2.7277824878692627
    4. 'final' → logprob: -3.3527824878692627
    5. 'next' → logprob: -4.102782249450684
    6. 'su' → logprob: -4.102782249450684
    7. 'sort' → logprob: -4.352782249450684
    8. '<|end|>' → logprob: -4.602782249450684
    9. ' finale' → logprob: -4.977782249450684
    10. '_next' → logprob: -5.102782249450684

Token 231: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.3946266174316406
    2. ' on' → logprob: -1.5196266174316406
    3. 'l' → logprob: -3.6446266174316406
    4. ' il' → logprob: -3.7696266174316406
    5. 'la' → logprob: -4.269626617431641
    6. 'il' → logprob: -4.394626617431641
    7. ' la' → logprob: -4.769626617431641
    8. ' l' → logprob: -5.144626617431641
    9. 'le' → logprob: -5.144626617431641
    10. ' ' → logprob: -6.019626617431641

Token 232: ' arrive' (ID: 18338)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.43007463216781616
    2. 'atter' → logprob: -2.305074691772461
    3. 'arr' → logprob: -2.805074691772461
    4. 's' → logprob: -2.930074691772461
    5. ' sortir' → logprob: -4.180074691772461
    6. 'fin' → logprob: -4.430074691772461
    7. ' arriver' → logprob: -4.430074691772461
    8. 'ser' → logprob: -4.430074691772461
    9. 'sera' → logprob: -4.555074691772461
    10. ' sort' → logprob: -4.805074691772461

Token 233: ' après' (ID: 16460)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.826468288898468
    2. ' après' → logprob: -1.9514682292938232
    3. ',' → logprob: -2.2014682292938232
    4. '   ' → logprob: -3.3264682292938232
    5. '<|end|>' → logprob: -3.4514682292938232
    6. ' ' → logprob: -3.5764682292938232
    7. 'next' → logprob: -3.5764682292938232
    8. 'au' → logprob: -4.201468467712402
    9. '       ' → logprob: -4.326468467712402
    10. '[' → logprob: -4.326468467712402

Token 234: ' une' (ID: 2463)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08311282098293304
    2. ' ' → logprob: -2.5831127166748047
    3. '2' → logprob: -5.583112716674805
    4. ' une' → logprob: -8.583112716674805
    5. ' one' → logprob: -9.958112716674805
    6. 'dou' → logprob: -10.333112716674805
    7. 'une' → logprob: -10.458112716674805
    8. '(' → logprob: -11.083112716674805
    9. 'pow' → logprob: -11.208112716674805
    10. '  ' → logprob: -11.458112716674805

Token 235: ' seule' (ID: 41983)
  Prédit: ' marche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' marche' → logprob: -0.44737708568573
    2. 'mar' → logprob: -1.19737708568573
    3. '1' → logprob: -4.1973772048950195
    4. ' mar' → logprob: -4.8223772048950195
    5. 'march' → logprob: -5.4473772048950195
    6. ' ' → logprob: -5.4473772048950195
    7. ' seule' → logprob: -5.6973772048950195
    8. ' unique' → logprob: -5.9473772048950195
    9. ' étape' → logprob: -5.9473772048950195
    10. 'pas' → logprob: -6.0723772048950195

Token 236: ' promenade' (ID: 148184)
  Prédit: 'mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mar' → logprob: -0.32868629693984985
    2. ' marche' → logprob: -1.453686237335205
    3. ' étape' → logprob: -3.578686237335205
    4. 'march' → logprob: -5.203686237335205
    5. ' mar' → logprob: -5.828686237335205
    6. 'step' → logprob: -6.078686237335205
    7. 'case' → logprob: -6.453686237335205
    8. 'walk' → logprob: -6.828686237335205
    9. 'dé' → logprob: -7.203686237335205
    10. 'ét' → logprob: -7.203686237335205

Token 237: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.259118676185608
    2. ' ,' → logprob: -2.0091185569763184
    3. '.' → logprob: -2.1341185569763184
    4. ' ' → logprob: -2.2591185569763184
    5. '       ' → logprob: -2.7591185569763184
    6. ' (' → logprob: -3.3841185569763184
    7. ' =' → logprob: -3.5091185569763184
    8. ':' → logprob: -3.6341185569763184
    9. 'def' → logprob: -3.7591185569763184
    10. ' next' → logprob: -3.8841185569763184

Token 238: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.135084629058838
    2. '       ' → logprob: -1.760084629058838
    3. '.' → logprob: -2.260084629058838
    4. ' ' → logprob: -2.635084629058838
    5. ':' → logprob: -2.760084629058838
    6. '  
' → logprob: -3.260084629058838
    7. ' 
' → logprob: -3.385084629058838
    8. '        
' → logprob: -3.635084629058838
    9. '
' → logprob: -3.760084629058838
    10. '   ' → logprob: -4.010084629058838

Token 239: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9293587803840637
    2. ':' → logprob: -1.179358720779419
    3. ',' → logprob: -2.804358720779419
    4. '.' → logprob: -3.179358720779419
    5. 'next' → logprob: -3.429358720779419
    6. '        
' → logprob: -3.679358720779419
    7. ' :' → logprob: -3.804358720779419
    8. '
' → logprob: -4.179358959197998
    9. ' next' → logprob: -4.304358959197998
    10. '_next' → logprob: -4.679358959197998

Token 240: ' Selon' (ID: 88731)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.5687986016273499
    2. 'next' → logprob: -0.9437986016273499
    3. '       ' → logprob: -3.568798542022705
    4. ' nxt' → logprob: -5.693798542022705
    5. '_next' → logprob: -6.443798542022705
    6. '#' → logprob: -6.568798542022705
    7. 'dp' → logprob: -7.193798542022705
    8. '        
' → logprob: -7.193798542022705
    9. '\n' → logprob: -7.318798542022705
    10. '[next' → logprob: -7.568798542022705

Token 241: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.18623927235603333
    2. 'la' → logprob: -2.561239242553711
    3. ' les' → logprob: -3.936239242553711
    4. ' le' → logprob: -4.186239242553711
    5. ' grid' → logprob: -4.811239242553711
    6. 'les' → logprob: -4.936239242553711
    7. ' H' → logprob: -5.186239242553711
    8. 'le' → logprob: -5.186239242553711
    9. 'l' → logprob: -5.436239242553711
    10. ' l' → logprob: -5.561239242553711

Token 242: ' règle' (ID: 115826)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.14080817997455597
    2. ' direction' → logprob: -2.51580810546875
    3. 'grid' → logprob: -4.64080810546875
    4. 'gr' → logprob: -5.14080810546875
    5. 'dire' → logprob: -5.26580810546875
    6. 'position' → logprob: -5.26580810546875
    7. 'code' → logprob: -5.51580810546875
    8. ' grid' → logprob: -6.01580810546875
    9. 'dé' → logprob: -6.01580810546875
    10. 'case' → logprob: -6.39080810546875

Token 243: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3300378620624542
    2. ':' → logprob: -2.080037832260132
    3. ' ,' → logprob: -2.455037832260132
    4. '       ' → logprob: -4.205038070678711
    5. ' :' → logprob: -4.580038070678711
    6. 's' → logprob: -5.205038070678711
    7. '   ' → logprob: -5.205038070678711
    8. '<|end|>' → logprob: -5.330038070678711
    9. '.' → logprob: -5.580038070678711
    10. ' (' → logprob: -5.705038070678711

Token 244: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10439850389957428
    2. '        ' → logprob: -2.604398488998413
    3. ' ' → logprob: -5.354398727416992
    4. '<|end|>' → logprob: -5.354398727416992
    5. ' ' → logprob: -5.854398727416992
    6. '    ' → logprob: -6.104398727416992
    7. '        
' → logprob: -6.479398727416992
    8. ' if' → logprob: -6.729398727416992
    9. ',' → logprob: -6.979398727416992
    10. '           ' → logprob: -7.104398727416992

Token 245: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8294030427932739
    2. 'for' → logprob: -1.079403042793274
    3. ' if' → logprob: -1.954403042793274
    4. 'if' → logprob: -3.3294029235839844
    5. '       ' → logprob: -3.7044029235839844
    6. 'def' → logprob: -5.079402923583984
    7. '        ' → logprob: -5.829402923583984
    8. ' next' → logprob: -6.329402923583984
    9. 'next' → logprob: -6.329402923583984
    10. ' pour' → logprob: -6.454402923583984

Token 246: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0685747861862183
    2. ' for' → logprob: -1.1935747861862183
    3. ' if' → logprob: -1.4435747861862183
    4. 'if' → logprob: -2.568574905395508
    5. '       ' → logprob: -4.068574905395508
    6. 'def' → logprob: -4.693574905395508
    7. ' next' → logprob: -5.568574905395508
    8. 'next' → logprob: -5.693574905395508
    9. ' si' → logprob: -6.693574905395508
    10. ' def' → logprob: -6.693574905395508

Token 247: ' regarde' (ID: 115760)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sort' → logprob: -1.1737381219863892
    2. 'def' → logprob: -1.6737381219863892
    3. 's' → logprob: -2.4237380027770996
    4. 'dé' → logprob: -2.9237380027770996
    5. 'avance' → logprob: -3.1737380027770996
    6. ' sort' → logprob: -3.2987380027770996
    7. ' va' → logprob: -3.2987380027770996
    8. 'n' → logprob: -4.1737380027771
    9. 'part' → logprob: -4.1737380027771
    10. ' continue' → logprob: -4.2987380027771

Token 248: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6571998000144958
    2. 'la' → logprob: -0.9071998000144958
    3. ' si' → logprob: -3.4071998596191406
    4. 'le' → logprob: -4.782199859619141
    5. 'si' → logprob: -4.907199859619141
    6. ' if' → logprob: -5.157199859619141
    7. 'if' → logprob: -5.907199859619141
    8. ' ' → logprob: -6.282199859619141
    9. 'grid' → logprob: -6.282199859619141
    10. ' vers' → logprob: -6.532199859619141

Token 249: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.9090338945388794
    2. 'case' → logprob: -1.2840338945388794
    3. 'grid' → logprob: -1.9090338945388794
    4. 'position' → logprob: -3.28403377532959
    5. ' direction' → logprob: -3.53403377532959
    6. 'current' → logprob: -3.78403377532959
    7. ' case' → logprob: -3.78403377532959
    8. ' grid' → logprob: -3.90903377532959
    9. 'cell' → logprob: -4.15903377532959
    10. 'gr' → logprob: -4.65903377532959

Token 250: ' dans' (ID: 2671)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4936972856521606
    2. 'grid' → logprob: -1.4936972856521606
    3. '[' → logprob: -1.6186972856521606
    4. ' grid' → logprob: -2.493697166442871
    5. '       ' → logprob: -3.243697166442871
    6. ' =' → logprob: -3.368697166442871
    7. ',' → logprob: -3.493697166442871
    8. '(grid' → logprob: -3.743697166442871
    9. '   ' → logprob: -3.993697166442871
    10. ' de' → logprob: -4.243697166442871

Token 251: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.03718247637152672
    2. ' grid' → logprob: -4.037182331085205
    3. 'la' → logprob: -4.162182331085205
    4. ' la' → logprob: -5.912182331085205
    5. '(grid' → logprob: -8.787182807922363
    6. 'gr' → logprob: -9.412182807922363
    7. 'le' → logprob: -9.787182807922363
    8. '   ' → logprob: -10.287182807922363
    9. 'l' → logprob: -10.287182807922363
    10. ' ' → logprob: -10.662182807922363

Token 252: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000987200066447258
    2. '[' → logprob: -7.0009870529174805
    3. '[I' → logprob: -10.12598705291748
    4. '[j' → logprob: -11.87598705291748
    5. ' [' → logprob: -12.00098705291748
    6. '       ' → logprob: -12.12598705291748
    7. '   ' → logprob: -12.12598705291748
    8. '[int' → logprob: -13.75098705291748
    9. '

' → logprob: -13.87598705291748
    10. '[row' → logprob: -14.12598705291748

Token 253: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002971518551930785
    2. ']' → logprob: -6.002971649169922
    3. '[i' → logprob: -7.752971649169922
    4. ' ][' → logprob: -10.877971649169922
    5. ']][' → logprob: -11.377971649169922
    6. '[' → logprob: -11.377971649169922
    7. '   ' → logprob: -11.877971649169922
    8. '[j' → logprob: -12.377971649169922
    9. '       ' → logprob: -12.502971649169922
    10. ' ' → logprob: -13.377971649169922

Token 254: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.596781946020201e-05
    2. ' j' → logprob: -10.000045776367188
    3. '	j' → logprob: -15.500045776367188
    4. '][' → logprob: -16.125045776367188
    5. '   ' → logprob: -16.500045776367188
    6. '[j' → logprob: -17.125045776367188
    7. ' ' → logprob: -17.125045776367188
    8. '  ' → logprob: -17.250045776367188
    9. ',j' → logprob: -17.250045776367188
    10. ']' → logprob: -18.500045776367188

Token 255: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.3395026624202728
    2. ']' → logprob: -1.3395026922225952
    3. '],' → logprob: -3.8395025730133057
    4. '],
' → logprob: -6.714502811431885
    5. ']
' → logprob: -6.964502811431885
    6. '];' → logprob: -7.339502811431885
    7. '       ' → logprob: -7.714502811431885
    8. ']:
' → logprob: -7.839502811431885
    9. ']

' → logprob: -8.589502334594727
    10. '   ' → logprob: -9.089502334594727

Token 256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02797061577439308
    2. ',' → logprob: -4.902970790863037
    3. '        
' → logprob: -5.277970790863037
    4. ':' → logprob: -5.777970790863037
    5. '<|end|>' → logprob: -5.902970790863037
    6. '.' → logprob: -6.527970790863037
    7. ' if' → logprob: -6.527970790863037
    8. '
' → logprob: -6.652970790863037
    9. ' =' → logprob: -7.402970790863037
    10. ')' → logprob: -7.402970790863037

Token 257: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07300484925508499
    2. ',' → logprob: -3.948004961013794
    3. ':' → logprob: -4.323004722595215
    4. '
' → logprob: -5.073004722595215
    5. '        
' → logprob: -5.073004722595215
    6. ' ' → logprob: -5.698004722595215
    7. '        ' → logprob: -6.073004722595215
    8. ' if' → logprob: -6.198004722595215
    9. '#' (adapté à ' #') → logprob: -6.323004722595215
    10. '.' → logprob: -6.448004722595215

Token 258: ' Si' (ID: 7832)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5443642139434814
    2. 'if' → logprob: -1.7943642139434814
    3. '       ' → logprob: -2.4193642139434814
    4. ' next' → logprob: -2.4193642139434814
    5. 'next' → logprob: -2.6693642139434814
    6. ' ' → logprob: -7.419363975524902
    7. 'If' → logprob: -7.669363975524902
    8. 'pos' → logprob: -7.669363975524902
    9. ' i' → logprob: -7.669363975524902
    10. '[next' → logprob: -8.044363975524902

Token 259: ' c' (ID: 274)
  Prédit: ' grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.1004774197936058
    2. 'grid' → logprob: -2.350477457046509
    3. ' ' → logprob: -8.97547721862793
    4. '0' → logprob: -10.35047721862793
    5. ' ' → logprob: -10.35047721862793
    6. '(grid' → logprob: -10.60047721862793
    7. '	grid' → logprob: -10.97547721862793
    8. 'gr' → logprob: -11.47547721862793
    9. '   ' → logprob: -12.35047721862793
    10. ' la' → logprob: -12.72547721862793

Token 260: ''est' (ID: 6616)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.43547406792640686
    2. ' ==' → logprob: -1.6854740381240845
    3. '[i' → logprob: -2.435474157333374
    4. '[' → logprob: -2.935474157333374
    5. 'grid' → logprob: -4.185473918914795
    6. ' grid' → logprob: -5.935473918914795
    7. '=' → logprob: -6.310473918914795
    8. '(grid' → logprob: -6.310473918914795
    9. '[j' → logprob: -7.060473918914795
    10. '   ' → logprob: -7.685473918914795

Token 261: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006324975984171033
    2. ' ' → logprob: -7.500632286071777
    3. '1' → logprob: -9.500632286071777
    4. '   ' → logprob: -13.500632286071777
    5. '=' → logprob: -13.750632286071777
    6. '==' → logprob: -13.875632286071777
    7. '  ' → logprob: -15.375632286071777
    8. 'Sud' → logprob: -16.188133239746094
    9. '```' → logprob: -16.250633239746094
    10. '_' → logprob: -16.250633239746094

Token 262: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002111694193445146
    2. '1' → logprob: -8.500210762023926
    3. ' ' → logprob: -11.875210762023926
    4. '   ' → logprob: -15.375210762023926
    5. '==' → logprob: -15.500210762023926
    6. '=' → logprob: -16.250211715698242
    7. 'Sud' → logprob: -16.625211715698242
    8. 's' → logprob: -17.625211715698242
    9. '```' → logprob: -17.625211715698242
    10. 'down' → logprob: -17.750211715698242

Token 263: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6288608312606812
    2. ',' → logprob: -0.8788608312606812
    3. ' (' → logprob: -3.0038609504699707
    4. ' ,' → logprob: -6.753860950469971
    5. ' :' → logprob: -7.878860950469971
    6. '   ' → logprob: -9.003860473632812
    7. ' ' → logprob: -9.503860473632812
    8. ')' → logprob: -10.378860473632812
    9. ' and' → logprob: -10.503860473632812
    10. '):' → logprob: -10.628860473632812

Token 264: 'Est' (ID: 9868)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.9359906315803528
    2. 'right' → logprob: -1.560990571975708
    3. 'east' → logprob: -1.685990571975708
    4. '),' → logprob: -2.810990571975708
    5. ' right' → logprob: -3.685990571975708
    6. ' east' → logprob: -3.685990571975708
    7. 'East' → logprob: -3.810990571975708
    8. ' est' → logprob: -4.310990810394287
    9. ')' → logprob: -4.435990810394287
    10. ' droite' → logprob: -4.810990810394287

Token 265: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0035518433433026075
    2. ')' → logprob: -6.003551959991455
    3. '):' → logprob: -7.128551959991455
    4. ',' → logprob: -9.253551483154297
    5. ' ),' → logprob: -9.253551483154297
    6. '):
' → logprob: -10.003551483154297
    7. ':' → logprob: -11.753551483154297
    8. '):

' → logprob: -12.378551483154297
    9. '   ' → logprob: -12.503551483154297
    10. '           ' → logprob: -13.253551483154297

Token 266: ' on' (ID: 402)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.3088953495025635
    2. ' ni' → logprob: -1.8088953495025635
    3. 'nj' → logprob: -1.9338953495025635
    4. ' on' → logprob: -2.4338953495025635
    5. ' next' → logprob: -2.5588953495025635
    6. 'ni' → logprob: -2.8088953495025635
    7. ' nj' → logprob: -3.4338953495025635
    8. 'on' → logprob: -3.8088953495025635
    9. 'nx' → logprob: -3.9338953495025635
    10. ' y' → logprob: -4.183895111083984

Token 267: ' rem' (ID: 1662)
  Prédit: 'va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'va' → logprob: -1.0717108249664307
    2. 'dé' → logprob: -1.8217108249664307
    3. 'se' → logprob: -2.1967108249664307
    4. 'move' → logprob: -2.5717108249664307
    5. 'avance' → logprob: -2.8217108249664307
    6. ' se' → logprob: -3.0717108249664307
    7. ' va' → logprob: -3.3217108249664307
    8. 'go' → logprob: -4.071710586547852
    9. 'do' → logprob: -4.196710586547852
    10. 'sort' → logprob: -4.446710586547852

Token 268: 'place' (ID: 3243)
  Prédit: 'plit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plit' → logprob: -0.2991298735141754
    2. 'place' → logprob: -1.799129843711853
    3. 'pl' → logprob: -2.5491299629211426
    4. 'p' → logprob: -4.799129962921143
    5. 'onte' → logprob: -5.424129962921143
    6. 'ple' → logprob: -6.674129962921143
    7. 'pile' → logprob: -8.549129486083984
    8. 'plet' → logprob: -9.174129486083984
    9. 'placement' → logprob: -9.424129486083984
    10. 'pla' → logprob: -9.549129486083984

Token 269: ' par' (ID: 686)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.4889701306819916
    2. ' grid' → logprob: -0.988970160484314
    3. ' la' → logprob: -5.3639702796936035
    4. '(grid' → logprob: -5.4889702796936035
    5. 'la' → logprob: -5.8639702796936035
    6. 'par' → logprob: -7.4889702796936035
    7. 'le' → logprob: -7.9889702796936035
    8. 'the' → logprob: -8.113969802856445
    9. ' par' → logprob: -8.488969802856445
    10. ' ' → logprob: -8.613969802856445

Token 270: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5737244486808777
    2. ' ' → logprob: -0.9487244486808777
    3. '1' → logprob: -3.3237245082855225
    4. ' grid' → logprob: -5.698724269866943
    5. 'grid' → logprob: -5.823724269866943
    6. '   ' → logprob: -6.323724269866943
    7. ' un' → logprob: -6.698724269866943
    8. ' (' → logprob: -6.698724269866943
    9. 'un' → logprob: -7.323724269866943
    10. '  ' → logprob: -8.136224746704102

Token 271: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0161217600107193
    2. '1' → logprob: -4.891121864318848
    3. 'grid' → logprob: -5.391121864318848
    4. '(' → logprob: -6.266121864318848
    5. '2' → logprob: -7.641121864318848
    6. '(grid' → logprob: -7.891121864318848
    7. 'i' → logprob: -8.266121864318848
    8. '(i' → logprob: -8.391121864318848
    9. ' ' → logprob: -8.391121864318848
    10. ' (' → logprob: -8.891121864318848

Token 272: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 273: 'Sud' (ID: 83804)
  Prédit: 'Sud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sud' → logprob: -0.011250833980739117
    2. 'South' → logprob: -4.636250972747803
    3. ')' → logprob: -7.136250972747803
    4. 'S' → logprob: -8.511250495910645
    5. 'Nord' → logprob: -9.261250495910645
    6. 'Down' → logprob: -9.761250495910645
    7. 'down' → logprob: -10.136250495910645
    8. ' Sud' → logprob: -10.261250495910645
    9. 'i' → logprob: -10.261250495910645
    10. '```' → logprob: -10.636250495910645

Token 274: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06419602781534195
    2. '),' → logprob: -2.8141961097717285
    3. ')
' → logprob: -7.3141961097717285
    4. ' )' → logprob: -7.3141961097717285
    5. ',' → logprob: -8.18919563293457
    6. '   ' → logprob: -9.68919563293457
    7. '       ' → logprob: -9.68919563293457
    8. '           ' → logprob: -9.93919563293457
    9. ')

' → logprob: -10.18919563293457
    10. ' ),' → logprob: -10.18919563293457

Token 275: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5156186819076538
    2. ',' → logprob: -1.1406186819076538
    3. '
' → logprob: -3.6406188011169434
    4. '        
' → logprob: -4.515618801116943
    5. '           ' → logprob: -4.640618801116943
    6. ')' → logprob: -4.640618801116943
    7. ',
' → logprob: -5.265618801116943
    8. ' ' → logprob: -5.890618801116943
    9. '   ' → logprob: -6.140618801116943
    10. '  
' → logprob: -6.390618801116943

Token 276: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -1.3640555143356323
    2. 'dé' → logprob: -1.4890555143356323
    3. 'j' → logprob: -1.8640555143356323
    4. 'i' → logprob: -2.489055633544922
    5. ' on' → logprob: -2.614055633544922
    6. ' dé' → logprob: -3.489055633544922
    7. 'avance' → logprob: -3.739055633544922
    8. 'de' → logprob: -3.989055633544922
    9. ' i' → logprob: -4.114055633544922
    10. 'move' → logprob: -4.114055633544922

Token 277: ' va' (ID: 3423)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.3604288101196289
    2. 'avance' → logprob: -1.985428810119629
    3. 'se' → logprob: -2.860428810119629
    4. 'move' → logprob: -3.485428810119629
    5. ' avance' → logprob: -4.235428810119629
    6. 'continue' → logprob: -5.110428810119629
    7. ' se' → logprob: -5.360428810119629
    8. 'position' → logprob: -5.485428810119629
    9. ' dé' → logprob: -5.485428810119629
    10. 'va' → logprob: -5.735428810119629

Token 278: ' à' (ID: 1221)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.8970544934272766
    2. 'à' → logprob: -1.1470544338226318
    3. 'i' → logprob: -1.8970544338226318
    4. ' (' → logprob: -3.272054433822632
    5. ' à' → logprob: -3.272054433822632
    6. '[i' → logprob: -4.647054672241211
    7. 'vers' → logprob: -4.772054672241211
    8. ' i' → logprob: -4.772054672241211
    9. 'j' → logprob: -4.897054672241211
    10. ' vers' → logprob: -5.522054672241211

Token 279: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.20264996588230133
    2. 'i' → logprob: -1.9526499509811401
    3. ' (' → logprob: -3.7026500701904297
    4. '[i' → logprob: -5.32765007019043
    5. 'j' → logprob: -5.45265007019043
    6. ' i' → logprob: -5.82765007019043
    7. 'la' → logprob: -6.32765007019043
    8. '(j' → logprob: -6.95265007019043
    9. 'l' → logprob: -7.32765007019043
    10. ' la' → logprob: -7.82765007019043

Token 280: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00072851701406762
    2. ' i' → logprob: -7.250728607177734
    3. '   ' → logprob: -11.625728607177734
    4. '(i' → logprob: -12.250728607177734
    5. '	i' → logprob: -13.750728607177734
    6. ',' → logprob: -14.125728607177734
    7. ')' → logprob: -14.125728607177734
    8. ')i' → logprob: -14.625728607177734
    9. ',i' → logprob: -14.750728607177734
    10. '[i' → logprob: -14.875728607177734

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016976626589894295
    2. ',j' → logprob: -4.266976833343506
    3. ',i' → logprob: -6.016976833343506
    4. ' ,' → logprob: -8.266976356506348
    5. '   ' → logprob: -9.391976356506348
    6. ' ' → logprob: -11.266976356506348
    7. 'i' → logprob: -12.266976356506348
    8. 'j' → logprob: -12.891976356506348
    9. '[i' → logprob: -13.141976356506348
    10. '[' → logprob: -13.516976356506348

Token 282: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.005267907399684191
    2. ' j' → logprob: -5.255268096923828
    3. ',j' → logprob: -11.005268096923828
    4. ',' → logprob: -11.755268096923828
    5. '   ' → logprob: -12.005268096923828
    6. ' ' → logprob: -13.255268096923828
    7. '	j' → logprob: -14.630268096923828
    8. '    ' → logprob: -14.880268096923828
    9. '  ' → logprob: -14.880268096923828
    10. ')' → logprob: -15.755268096923828

Token 283: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22568650543689728
    2. ' +' → logprob: -1.6006865501403809
    3. '   ' → logprob: -8.600686073303223
    4. ')' → logprob: -9.725686073303223
    5. ' ' → logprob: -11.475686073303223
    6. ',' → logprob: -12.225686073303223
    7. '    ' → logprob: -12.850686073303223
    8. ' plus' → logprob: -13.225686073303223
    9. '1' → logprob: -13.475686073303223
    10. '
' → logprob: -13.850686073303223

Token 284: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.85366350505501e-05
    2. ' ' → logprob: -9.75009822845459
    3. '+' → logprob: -10.25009822845459
    4. '   ' → logprob: -13.25009822845459
    5. ')' → logprob: -13.50009822845459
    6. '
' → logprob: -14.75009822845459
    7. '```' → logprob: -14.93759822845459
    8. ' +' → logprob: -15.93759822845459
    9. 'i' → logprob: -15.93759822845459
    10. '  ' → logprob: -16.000099182128906

Token 285: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022403974435292184
    2. ')
' → logprob: -8.500224113464355
    3. ' )' → logprob: -12.125224113464355
    4. '   ' → logprob: -12.250224113464355
    5. '),' → logprob: -12.750224113464355
    6. '       ' → logprob: -13.000224113464355
    7. ')

' → logprob: -13.625224113464355
    8. ').' → logprob: -14.000224113464355
    9. ')
' → logprob: -14.000224113464355
    10. ')#' → logprob: -15.000224113464355

Token 286: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04831116273999214
    2. ')' → logprob: -3.923311233520508
    3. '<|end|>' → logprob: -4.048311233520508
    4. '\n' → logprob: -5.548311233520508
    5. '
' → logprob: -6.423311233520508
    6. ',' → logprob: -6.673311233520508
    7. '   ' → logprob: -7.423311233520508
    8. '\' → logprob: -7.673311233520508
    9. '           ' → logprob: -7.798311233520508
    10. '        
' → logprob: -8.673311233520508

Token 287: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01370361540466547
    2. '
' → logprob: -4.8887038230896
    3. ')' → logprob: -6.5137038230896
    4. '\n' → logprob: -6.6387038230896
    5. ',' → logprob: -6.8887038230896
    6. '        
' → logprob: -7.7637038230896
    7. '<|end|>' → logprob: -8.138703346252441
    8. '           ' → logprob: -8.388703346252441
    9. '.' → logprob: -8.513703346252441
    10. '   ' → logprob: -8.763703346252441

Token 288: ' Si' (ID: 7832)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008036578074097633
    2. 'elif' → logprob: -5.8830366134643555
    3. 'else' → logprob: -6.2580366134643555
    4. ' else' → logprob: -6.8830366134643555
    5. ',' → logprob: -7.1330366134643555
    6. ' elif' → logprob: -7.3830366134643555
    7. '
' → logprob: -8.258036613464355
    8. '#' → logprob: -9.133036613464355
    9. '        
' → logprob: -9.758036613464355
    10. '           ' → logprob: -9.758036613464355

Token 289: ' c' (ID: 274)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0037719011306763
    2. ' grid' → logprob: -1.2537719011306763
    3. 'grid' → logprob: -1.7537719011306763
    4. ' ' → logprob: -1.7537719011306763
    5. ' c' → logprob: -7.503771781921387
    6. '(grid' → logprob: -8.128771781921387
    7. 'c' → logprob: -8.253771781921387
    8. '1' → logprob: -8.253771781921387
    9. '  ' → logprob: -9.441271781921387
    10. ' ' → logprob: -9.691271781921387

Token 290: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.06170983240008354
    2. 'est' → logprob: -3.3117098808288574
    3. ''' → logprob: -3.9367098808288574
    4. ''s' → logprob: -6.561709880828857
    5. '#' → logprob: -7.061709880828857
    6. 'c' → logprob: -8.1867094039917
    7. 'e' → logprob: -8.4367094039917
    8. '’est' → logprob: -8.8117094039917
    9. 'es' → logprob: -9.4367094039917
    10. 's' → logprob: -9.5617094039917

Token 291: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011708177626132965
    2. ' ' → logprob: -6.751170635223389
    3. '1' → logprob: -15.251171112060547
    4. '  ' → logprob: -16.563671112060547
    5. '   ' → logprob: -16.688671112060547
    6. ' ' → logprob: -16.688671112060547
    7. '```' → logprob: -17.438671112060547
    8. '۰' → logprob: -17.626171112060547
    9. '=' → logprob: -17.688671112060547
    10. '[' → logprob: -18.188671112060547

Token 292: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '1' → logprob: -16.43750762939453
    4. '۰' → logprob: -18.00000762939453
    5. '[' → logprob: -18.93750762939453
    6. ',' → logprob: -19.37500762939453
    7. '```' → logprob: -19.43750762939453
    8. '=' → logprob: -19.56250762939453
    9. '   ' → logprob: -19.56250762939453
    10. 's' → logprob: -19.68750762939453

Token 293: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0014378506457433105
    2. '(S' → logprob: -6.751437664031982
    3. '(' → logprob: -8.37643814086914
    4. ',' → logprob: -10.87643814086914
    5. ' ' → logprob: -11.50143814086914
    6. ' ' → logprob: -12.75143814086914
    7. ')' → logprob: -12.87643814086914
    8. ':' → logprob: -14.87643814086914
    9. ' (
' → logprob: -14.87643814086914
    10. '<|end|>' → logprob: -15.00143814086914

Token 294: 'Sud' (ID: 83804)
  Prédit: 'Sud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sud' → logprob: -0.00023727134976070374
    2. 'South' → logprob: -9.000237464904785
    3. 'S' → logprob: -9.250237464904785
    4. 'Sul' → logprob: -11.500237464904785
    5. ' Sud' → logprob: -12.625237464904785
    6. 'Su' → logprob: -13.750237464904785
    7. ')' → logprob: -14.125237464904785
    8. 'Sad' → logprob: -14.500237464904785
    9. 'Sou' → logprob: -14.875237464904785
    10. 'Sus' → logprob: -15.375237464904785

Token 295: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0027352094184607267
    2. ')' → logprob: -6.127735137939453
    3. ',' → logprob: -7.877735137939453
    4. ' ),' → logprob: -9.877735137939453
    5. '),
' → logprob: -9.877735137939453
    6. '):' → logprob: -10.752735137939453
    7. '   ' → logprob: -11.377735137939453
    8. '):
' → logprob: -11.502735137939453
    9. '),

' → logprob: -12.002735137939453
    10. ',),' → logprob: -12.502735137939453

Token 296: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.12667261064052582
    2. ' ' → logprob: -3.3766725063323975
    3. '       ' → logprob: -3.5016725063323975
    4. ' we' → logprob: -3.8766725063323975
    5. 'on' → logprob: -4.126672744750977
    6. 'we' → logprob: -4.501672744750977
    7. ')' → logprob: -6.876672744750977
    8. '        ' → logprob: -7.001672744750977
    9. ' grid' → logprob: -7.251672744750977
    10. ' ' → logprob: -7.751672744750977

Token 297: ' rem' (ID: 1662)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.03465353325009346
    2. ' rem' → logprob: -3.784653425216675
    3. 'replace' → logprob: -4.784653663635254
    4. 're' → logprob: -6.659653663635254
    5. 'mod' → logprob: -7.409653663635254
    6. 'change' → logprob: -8.159653663635254
    7. ' replaces' → logprob: -8.659653663635254
    8. 'ré' → logprob: -8.909653663635254
    9. 'reste' → logprob: -9.284653663635254
    10. ' replace' → logprob: -10.284653663635254

Token 298: 'place' (ID: 3243)
  Prédit: 'place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.0001382241171086207
    2. 'p' → logprob: -9.500138282775879
    3. 'placer' → logprob: -10.125138282775879
    4. 'pl' → logprob: -11.625138282775879
    5. 'pla' → logprob: -12.625138282775879
    6. 'placement' → logprob: -12.875138282775879
    7. 'lace' → logprob: -13.250138282775879
    8. 'places' → logprob: -14.000138282775879
    9. 'plac' → logprob: -14.125138282775879
    10. 'plate' → logprob: -14.250138282775879

Token 299: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.040495384484529495
    2. ' par' → logprob: -3.2904953956604004
    3. 'by' → logprob: -6.5404953956604
    4. '(' → logprob: -7.1654953956604
    5. '1' → logprob: -9.790494918823242
    6. ' by' → logprob: -10.165494918823242
    7. 'grid' → logprob: -10.540494918823242
    8. ' ' → logprob: -10.790494918823242
    9. '(grid' → logprob: -10.790494918823242
    10. '(par' → logprob: -10.915494918823242

Token 300: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010334034450352192
    2. ' ' → logprob: -6.876033306121826
    3. '   ' → logprob: -15.751033782958984
    4. ' ' → logprob: -15.751033782958984
    5. '```' → logprob: -16.126033782958984
    6. '0' → logprob: -17.126033782958984
    7. '<|end|>' → logprob: -17.376033782958984
    8. '.' → logprob: -17.501033782958984
    9. '  ' → logprob: -17.626033782958984
    10. '...' → logprob: -18.251033782958984

Token 301: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.47495681833243e-05
    2. ' ' → logprob: -10.625024795532227
    3. '(' → logprob: -16.000024795532227
    4. '   ' → logprob: -16.250024795532227
    5. '0' → logprob: -17.375024795532227
    6. '```' → logprob: -17.375024795532227
    7. 'def' → logprob: -17.375024795532227
    8. '  ' → logprob: -18.062524795532227
    9. '[' → logprob: -18.062524795532227
    10. 'import' → logprob: -18.312524795532227

Token 302: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0006987344822846353
    2. '(S' → logprob: -7.375698566436768
    3. '(s' → logprob: -10.500699043273926
    4. '<|end|>' → logprob: -10.500699043273926
    5. '(' → logprob: -11.625699043273926
    6. ' ' → logprob: -12.500699043273926
    7. ' ' → logprob: -13.000699043273926
    8. ')' → logprob: -14.500699043273926
    9. '(space' → logprob: -14.500699043273926
    10. ',' → logprob: -15.375699043273926

Token 303: 'Est' (ID: 9868)
  Prédit: 'Est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Est' → logprob: -0.10476945340633392
    2. 'East' → logprob: -2.354769468307495
    3. '(' → logprob: -6.479769229888916
    4. ' (' → logprob: -6.854769229888916
    5. 'Sud' → logprob: -7.354769229888916
    6. ''Est' → logprob: -7.979769229888916
    7. ')' → logprob: -8.104769706726074
    8. 'Es' → logprob: -8.729769706726074
    9. ' East' → logprob: -9.104769706726074
    10. '(E' → logprob: -9.479769706726074

Token 304: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015955790877342224
    2. ' )' → logprob: -9.75015926361084
    3. '),' → logprob: -10.00015926361084
    4. '   ' → logprob: -10.75015926361084
    5. ')
' → logprob: -11.62515926361084
    6. ',' → logprob: -12.25015926361084
    7. ' et' → logprob: -12.37515926361084
    8. '')' → logprob: -12.75015926361084
    9. '       ' → logprob: -13.37515926361084
    10. 'et' → logprob: -13.75015926361084

Token 305: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.38430601358413696
    2. ' et' → logprob: -1.5093059539794922
    3. '       ' → logprob: -2.509305953979492
    4. 'and' → logprob: -5.134305953979492
    5. ',' → logprob: -5.634305953979492
    6. 'et' → logprob: -5.759305953979492
    7. ')' → logprob: -7.134305953979492
    8. '           ' → logprob: -7.134305953979492
    9. '<|end|>' → logprob: -7.384305953979492
    10. '   ' → logprob: -8.009305953979492

Token 306: ' on' (ID: 402)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.206221804022789
    2. ' on' → logprob: -3.33122181892395
    3. '       ' → logprob: -3.45622181892395
    4. ' ' → logprob: -3.83122181892395
    5. 'on' → logprob: -4.081221580505371
    6. '(i' → logprob: -4.081221580505371
    7. ' ' → logprob: -4.456221580505371
    8. '     ' → logprob: -4.706221580505371
    9. '   ' → logprob: -4.831221580505371
    10. '(' → logprob: -4.831221580505371

Token 307: ' va' (ID: 3423)
  Prédit: ' va'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' va' → logprob: -0.27128368616104126
    2. 'va' → logprob: -1.5212836265563965
    3. ' (' → logprob: -5.3962836265563965
    4. 'i' → logprob: -6.6462836265563965
    5. 'go' → logprob: -6.6462836265563965
    6. 'vais' → logprob: -6.7712836265563965
    7. ' ' → logprob: -6.8962836265563965
    8. '(i' → logprob: -6.8962836265563965
    9. ' vont' → logprob: -6.8962836265563965
    10. 'goto' → logprob: -7.1462836265563965

Token 308: ' à' (ID: 1221)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.4747332036495209
    2. ' (' → logprob: -0.9747332334518433
    3. '(' → logprob: -7.349733352661133
    4. ' i' → logprob: -12.474733352661133
    5. ' ' → logprob: -13.349733352661133
    6. ' at' → logprob: -13.974733352661133
    7. ' to' → logprob: -13.974733352661133
    8. '(I' → logprob: -14.099733352661133
    9. '   ' → logprob: -14.224733352661133
    10. '[i' → logprob: -14.349733352661133

Token 309: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.006399395875632763
    2. ' (' → logprob: -5.256399631500244
    3. '(' → logprob: -6.756399631500244
    4. '((' → logprob: -14.631399154663086
    5. ' i' → logprob: -14.631399154663086
    6. '(
' → logprob: -15.256399154663086
    7. '(I' → logprob: -16.006399154663086
    8. ' ' → logprob: -16.256399154663086
    9. '```' → logprob: -17.131399154663086
    10. 'i' → logprob: -17.256399154663086

Token 310: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004063678905367851
    2. '(i' → logprob: -5.879063606262207
    3. ' i' → logprob: -6.754063606262207
    4. 'min' → logprob: -9.879063606262207
    5. ' (' → logprob: -10.754063606262207
    6. '(' → logprob: -11.754063606262207
    7. ')' → logprob: -12.379063606262207
    8. '   ' → logprob: -13.504063606262207
    9. '(min' → logprob: -13.754063606262207
    10. '```' → logprob: -13.754063606262207

Token 311: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5113443732261658
    2. ',' → logprob: -1.1363444328308105
    3. ' +' → logprob: -2.7613444328308105
    4. '   ' → logprob: -4.2613444328308105
    5. ' ,' → logprob: -7.3863444328308105
    6. ' i' → logprob: -7.6363444328308105
    7. ' plus' → logprob: -8.136343955993652
    8. 'i' → logprob: -8.386343955993652
    9. '+,' → logprob: -9.261343955993652
    10. ' ' → logprob: -9.636343955993652

Token 312: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016168560832738876
    2. ' ' → logprob: -4.141168594360352
    3. ',' → logprob: -9.016168594360352
    4. ' ,' → logprob: -11.391168594360352
    5. '```' → logprob: -14.391168594360352
    6. '   ' → logprob: -14.891168594360352
    7. ' ' → logprob: -15.391168594360352
    8. '
' → logprob: -16.26616859436035
    9. '0' → logprob: -16.51616859436035
    10. ')' → logprob: -16.51616859436035

Token 313: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.958325295476243e-05
    2. ',j' → logprob: -10.250079154968262
    3. ')' → logprob: -10.375079154968262
    4. ' ,' → logprob: -11.750079154968262
    5. '),' → logprob: -13.750079154968262
    6. ',
' → logprob: -14.000079154968262
    7. '```' → logprob: -14.500079154968262
    8. '   ' → logprob: -14.750079154968262
    9. '<|end|>' → logprob: -15.000079154968262
    10. ',i' → logprob: -15.250079154968262

Token 314: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.5759420990943909
    2. 'j' → logprob: -0.8259420990943909
    3. ' ' → logprob: -14.450942039489746
    4. '   ' → logprob: -14.575942039489746
    5. ',' → logprob: -14.825942039489746
    6. ')' → logprob: -14.825942039489746
    7. ',j' → logprob: -14.950942039489746
    8. '0' → logprob: -15.575942039489746
    9. '	j' → logprob: -15.950942039489746
    10. ' ' → logprob: -16.325942993164062

Token 315: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024203950306400657
    2. '+' → logprob: -8.500242233276367
    3. ')+' → logprob: -11.625242233276367
    4. '   ' → logprob: -11.875242233276367
    5. ' )' → logprob: -12.000242233276367
    6. ')
' → logprob: -12.125242233276367
    7. '+)' → logprob: -13.125242233276367
    8. '       ' → logprob: -14.000242233276367
    9. '),' → logprob: -14.000242233276367
    10. '`)' → logprob: -14.125242233276367

Token 316: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002441766206175089
    2. '        
' → logprob: -7.252441883087158
    3. ')' → logprob: -7.877441883087158
    4. '        ' → logprob: -7.877441883087158
    5. '<|end|>' → logprob: -8.37744140625
    6. '\' → logprob: -9.25244140625
    7. ',' → logprob: -9.37744140625
    8. '           ' → logprob: -9.37744140625
    9. '      ' → logprob: -9.50244140625
    10. '\n' → logprob: -10.00244140625

Token 317: ' #' (ID: 1069)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.30247214436531067
    2. '       ' → logprob: -1.9274721145629883
    3. '   ' → logprob: -2.6774721145629883
    4. ' next' → logprob: -3.4274721145629883
    5. 'dp' → logprob: -5.177472114562988
    6. '#' (adapté à ' #') → logprob: -6.052472114562988
    7. 'n' → logprob: -7.052472114562988
    8. 'from' → logprob: -7.177472114562988
    9. '```' → logprob: -7.302472114562988
    10. '_next' → logprob: -7.552472114562988

Token 318: ' Comme' (ID: 53252)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.29128125309944153
    2. ' next' → logprob: -2.166281223297119
    3. 'dp' → logprob: -2.291281223297119
    4. '   ' → logprob: -4.416281223297119
    5. ' dp' → logprob: -4.916281223297119
    6. 'dest' → logprob: -5.916281223297119
    7. '#' → logprob: -6.166281223297119
    8. 'out' → logprob: -6.541281223297119
    9. '       ' → logprob: -6.791281223297119
    10. ' nxt' → logprob: -6.791281223297119

Token 319: ' on' (ID: 402)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.8054136037826538
    2. ' la' → logprob: -1.8054136037826538
    3. ' H' → logprob: -2.0554137229919434
    4. ' on' → logprob: -2.9304137229919434
    5. 'sys' → logprob: -2.9304137229919434
    6. ' i' → logprob: -3.3054137229919434
    7. ' le' → logprob: -3.3054137229919434
    8. 'la' → logprob: -3.5554137229919434
    9. ' sys' → logprob: -3.5554137229919434
    10. 'i' → logprob: -3.6804137229919434

Token 320: ' change' (ID: 3343)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.717192530632019
    2. 'continue' → logprob: -1.967192530632019
    3. 'pe' → logprob: -2.7171926498413086
    4. 'va' → logprob: -2.8421926498413086
    5. 've' → logprob: -2.9671926498413086
    6. 'contin' → logprob: -3.9671926498413086
    7. 's' → logprob: -4.092192649841309
    8. 'est' → logprob: -4.092192649841309
    9. 'n' → logprob: -4.092192649841309
    10. ' continue' → logprob: -4.342192649841309

Token 321: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.46249327063560486
    2. ' ' → logprob: -2.2124931812286377
    3. '   ' → logprob: -2.7124931812286377
    4. ' grid' → logprob: -2.7124931812286377
    5. 'grid' → logprob: -3.0874931812286377
    6. ' les' → logprob: -4.337493419647217
    7. '  ' → logprob: -4.587493419647217
    8. 'le' → logprob: -4.712493419647217
    9. ' le' → logprob: -4.837493419647217
    10. ' l' → logprob: -5.087493419647217

Token 322: ' valeur' (ID: 41664)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.011254130862653255
    2. 'val' → logprob: -4.76125431060791
    3. 'case' → logprob: -7.01125431060791
    4. 'dire' → logprob: -7.01125431060791
    5. ' direction' → logprob: -8.26125431060791
    6. 'grid' → logprob: -8.63625431060791
    7. 'value' → logprob: -8.63625431060791
    8. 'dir' → logprob: -9.76125431060791
    9. 'direct' → logprob: -10.38625431060791
    10. ' valeur' → logprob: -10.51125431060791

Token 323: ' à' (ID: 1221)
  Prédit: ' grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -1.1413085460662842
    2. ' de' → logprob: -1.2663085460662842
    3. 'grid' → logprob: -1.6413085460662842
    4. 'de' → logprob: -2.516308546066284
    5. 'dans' → logprob: -3.391308546066284
    6. ' dans' → logprob: -3.516308546066284
    7. '   ' → logprob: -3.891308546066284
    8. ' ' → logprob: -4.016308784484863
    9. ' à' → logprob: -4.516308784484863
    10. '  ' → logprob: -6.516308784484863

Token 324: ' chaque' (ID: 21194)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cha' → logprob: -1.2444921731948853
    2. 'grid' → logprob: -1.2444921731948853
    3. 'each' → logprob: -1.6194921731948853
    4. '[i' → logprob: -2.6194920539855957
    5. ' chaque' → logprob: -2.8694920539855957
    6. 'la' → logprob: -3.2444920539855957
    7. '(i' → logprob: -3.7444920539855957
    8. '(grid' → logprob: -4.244492053985596
    9. 'ch' → logprob: -5.369492053985596
    10. 'visited' → logprob: -5.869492053985596

Token 325: ' passage' (ID: 26368)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.4437878429889679
    2. 'pas' → logprob: -1.1937878131866455
    3. 'pass' → logprob: -3.3187878131866455
    4. 'position' → logprob: -5.568788051605225
    5. 'appel' → logprob: -5.943788051605225
    6. 'dé' → logprob: -6.318788051605225
    7. 'fois' → logprob: -6.318788051605225
    8. 'mar' → logprob: -6.443788051605225
    9. 'vis' → logprob: -7.068788051605225
    10. 'tour' → logprob: -7.443788051605225

Token 326: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2079605907201767
    2. '       ' → logprob: -1.707960605621338
    3. '   ' → logprob: -5.582960605621338
    4. ' ,' → logprob: -7.082960605621338
    5. '           ' → logprob: -7.457960605621338
    6. ',
' → logprob: -7.582960605621338
    7. ')' → logprob: -8.83296012878418
    8. '               ' → logprob: -9.08296012878418
    9. '        ' → logprob: -9.70796012878418
    10. '    ' → logprob: -9.95796012878418

Token 327: ' la' (ID: 557)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.9487760066986084
    2. ' next' → logprob: -1.1987760066986084
    3. '       ' → logprob: -1.6987760066986084
    4. ' for' → logprob: -2.8237760066986084
    5. 'for' → logprob: -3.9487760066986084
    6. '#' → logprob: -5.0737762451171875
    7. ' grid' → logprob: -5.4487762451171875
    8. 'grid' → logprob: -5.5737762451171875
    9. 'dp' → logprob: -5.6987762451171875
    10. '   ' → logprob: -5.8237762451171875

Token 328: ' position' (ID: 4010)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.19326724112033844
    2. ' next' → logprob: -2.068267345428467
    3. 'def' → logprob: -3.818267345428467
    4. 'direction' → logprob: -5.443267345428467
    5. '#' → logprob: -5.568267345428467
    6. 'position' → logprob: -5.818267345428467
    7. 'grid' → logprob: -5.818267345428467
    8. 'pos' → logprob: -5.943267345428467
    9. 'dire' → logprob: -6.318267345428467
    10. 'for' → logprob: -7.193267345428467

Token 329: ' après' (ID: 16460)
  Prédit: ' suivante'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' suivante' → logprob: -0.8937876224517822
    2. ' =' → logprob: -1.7687876224517822
    3. 'su' → logprob: -1.8937876224517822
    4. '_next' → logprob: -2.8937876224517822
    5. 'next' → logprob: -2.8937876224517822
    6. 's' → logprob: -3.0187876224517822
    7. 'import' → logprob: -3.5187876224517822
    8. ' de' → logprob: -4.518787384033203
    9. ' next' → logprob: -5.018787384033203
    10. '=' → logprob: -5.018787384033203

Token 330: ' k' (ID: 372)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.20053763687610626
    2. 'un' → logprob: -2.82553768157959
    3. '1' → logprob: -3.32553768157959
    4. ' une' → logprob: -3.70053768157959
    5. 'la' → logprob: -3.82553768157959
    6. 'def' → logprob: -4.57553768157959
    7. 'le' → logprob: -4.95053768157959
    8. ' un' → logprob: -5.32553768157959
    9. 'one' → logprob: -5.57553768157959
    10. ' ' → logprob: -5.70053768157959

Token 331: ' fois' (ID: 14697)
  Prédit: ' passages'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' passages' → logprob: -0.6931399703025818
    2. '+' → logprob: -1.9431400299072266
    3. ' =' → logprob: -2.9431400299072266
    4. '=' → logprob: -3.3181400299072266
    5. 'pass' → logprob: -3.6931400299072266
    6. 'pas' → logprob: -3.6931400299072266
    7. ' ' → logprob: -3.6931400299072266
    8. ',' → logprob: -3.8181400299072266
    9. 'tokens' → logprob: -3.8181400299072266
    10. ' +=' → logprob: -3.8181400299072266

Token 332: ' dépend' (ID: 68660)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.4980703592300415
    2. ' de' → logprob: -1.9980703592300415
    3. ' =' → logprob: -2.373070240020752
    4. 'k' → logprob: -2.623070240020752
    5. 'def' → logprob: -2.748070240020752
    6. 'n' → logprob: -2.998070240020752
    7. 'visited' → logprob: -3.248070240020752
    8. '   ' → logprob: -3.373070240020752
    9. ' n' → logprob: -3.373070240020752
    10. '```' → logprob: -3.748070240020752

Token 333: ' de' (ID: 334)
  Prédit: ' uniquement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' uniquement' → logprob: -1.2248753309249878
    2. ' du' → logprob: -1.4748753309249878
    3. ' des' → logprob: -1.9748753309249878
    4. ' de' → logprob: -2.9748754501342773
    5. 'import' → logprob: -2.9748754501342773
    6. ' ' → logprob: -3.2248754501342773
    7. ' seulement' → logprob: -3.4748754501342773
    8. ')' → logprob: -3.9748754501342773
    9. ' d' → logprob: -4.099875450134277
    10. 'des' → logprob: -4.349875450134277

Token 334: ' la' (ID: 557)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6999616622924805
    2. 'la' → logprob: -1.3249616622924805
    3. 'le' → logprob: -2.6999616622924805
    4. ' k' → logprob: -2.6999616622924805
    5. 'les' → logprob: -3.3249616622924805
    6. 'l' → logprob: -3.3249616622924805
    7. ' la' → logprob: -4.0749616622924805
    8. 'celle' → logprob: -5.1999616622924805
    9. ' l' → logprob: -6.3249616622924805
    10. ' ' → logprob: -7.0749616622924805

Token 335: ' modification' (ID: 29847)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.13377799093723297
    2. 'val' → logprob: -2.7587780952453613
    3. 'pos' → logprob: -4.133778095245361
    4. 'k' → logprob: -4.508778095245361
    5. 'direction' → logprob: -4.633778095245361
    6. 'par' → logprob: -4.883778095245361
    7. 'case' → logprob: -5.508778095245361
    8. 'pass' → logprob: -6.508778095245361
    9. 'state' → logprob: -6.508778095245361
    10. ' position' → logprob: -6.508778095245361

Token 336: ' des' (ID: 731)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6352543830871582
    2. ' de' → logprob: -1.6352543830871582
    3. 's' → logprob: -1.7602543830871582
    4. ']' → logprob: -2.510254383087158
    5. ' suivante' → logprob: -2.510254383087158
    6. '   ' → logprob: -2.760254383087158
    7. 'de' → logprob: -3.260254383087158
    8. ' du' → logprob: -3.385254383087158
    9. 'import' → logprob: -3.885254383087158
    10. 'def' → logprob: -4.010254383087158

Token 337: ' directions' (ID: 24921)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -1.0047342777252197
    2. 'gr' → logprob: -1.1297342777252197
    3. 'cases' → logprob: -1.7547342777252197
    4. 'val' → logprob: -2.2547342777252197
    5. ' directions' → logprob: -4.379734039306641
    6. 'grid' → logprob: -4.504734039306641
    7. 'direction' → logprob: -6.379734039306641
    8. 'values' → logprob: -6.629734039306641
    9. 'cell' → logprob: -6.879734039306641
    10. 'direct' → logprob: -6.879734039306641

Token 338: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16880042850971222
    2. '   ' → logprob: -2.5438003540039062
    3. '<|end|>' → logprob: -3.4188003540039062
    4. ',' → logprob: -4.793800354003906
    5. ' ' → logprob: -4.918800354003906
    6. ']' → logprob: -5.168800354003906
    7. ')' → logprob: -5.168800354003906
    8. '        
' → logprob: -5.418800354003906
    9. '        ' → logprob: -6.293800354003906
    10. '    ' → logprob: -6.668800354003906

Token 339: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.042044561356306076
    2. ')' → logprob: -4.667044639587402
    3. '   ' → logprob: -4.917044639587402
    4. '<|end|>' → logprob: -5.167044639587402
    5. ' ' → logprob: -5.667044639587402
    6. ']' → logprob: -5.792044639587402
    7. '[' → logprob: -5.917044639587402
    8. '        ' → logprob: -6.667044639587402
    9. '        
' → logprob: -6.792044639587402
    10. ' ]' → logprob: -6.792044639587402

Token 340: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07738776504993439
    2. 'next' → logprob: -3.702387809753418
    3. '#' (adapté à ' #') → logprob: -3.827387809753418
    4. 'dp' → logprob: -5.077387809753418
    5. ' next' → logprob: -5.577387809753418
    6. '...' → logprob: -5.702387809753418
    7. '   ' → logprob: -5.827387809753418
    8. '        
' → logprob: -6.202387809753418
    9. 'import' → logprob: -6.702387809753418
    10. '<|end|>' → logprob: -6.702387809753418

Token 341: ' On' (ID: 2160)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.5232182741165161
    2. 'dp' → logprob: -1.8982182741165161
    3. ']' → logprob: -2.6482181549072266
    4. '   ' → logprob: -2.6482181549072266
    5. '#' → logprob: -3.1482181549072266
    6. ' next' → logprob: -3.3982181549072266
    7. ')' → logprob: -4.398218154907227
    8. 'def' → logprob: -5.523218154907227
    9. ' dp' → logprob: -5.773218154907227
    10. 'import' → logprob: -5.773218154907227

Token 342: ' remarque' (ID: 183406)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7273428440093994
    2. 'for' → logprob: -2.2273428440093994
    3. ' continue' → logprob: -2.3523428440093994
    4. '#' → logprob: -2.6023428440093994
    5. 'import' → logprob: -3.1023428440093994
    6. 'def' → logprob: -3.6023428440093994
    7. ' peux' → logprob: -3.7273428440093994
    8. 'contin' → logprob: -3.8523428440093994
    9. ' vais' → logprob: -3.9773428440093994
    10. '=' → logprob: -4.47734260559082

Token 343: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.1546163260936737
    2. '   ' → logprob: -2.279616355895996
    3. '       ' → logprob: -4.404616355895996
    4. ' ' → logprob: -4.529616355895996
    5. '    ' → logprob: -5.154616355895996
    6. ' that' → logprob: -5.779616355895996
    7. ',' → logprob: -5.779616355895996
    8. 'import' → logprob: -7.279616355895996
    9. '  ' → logprob: -7.404616355895996
    10. '#' → logprob: -7.654616355895996

Token 344: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8397168517112732
    2. 'le' → logprob: -1.839716911315918
    3. 'la' → logprob: -2.089716911315918
    4. ' chaque' → logprob: -2.589716911315918
    5. ' le' → logprob: -2.839716911315918
    6. 'les' → logprob: -3.214716911315918
    7. ' les' → logprob: -3.964716911315918
    8. 'for' → logprob: -4.214716911315918
    9. ' c' → logprob: -4.339716911315918
    10. 'c' → logprob: -4.964716911315918

Token 345: ''évolution' (ID: 198900)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9532543420791626
    2. 'a' → logprob: -1.8282543420791626
    3. 'def' → logprob: -1.9532543420791626
    4. 's' → logprob: -2.203254222869873
    5. 'e' → logprob: -2.578254222869873
    6. 'dire' → logprob: -3.953254222869873
    7. ' grid' → logprob: -4.328254222869873
    8. 'y' → logprob: -4.578254222869873
    9. 'grid' → logprob: -4.703254222869873
    10. 'import' → logprob: -5.078254222869873

Token 346: ' est' (ID: 893)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.9866473078727722
    2. ' de' → logprob: -1.111647367477417
    3. 'des' → logprob: -2.111647367477417
    4. 'de' → logprob: -2.986647367477417
    5. 's' → logprob: -3.611647367477417
    6. 'contin' → logprob: -3.736647367477417
    7. ' du' → logprob: -3.861647367477417
    8. '#' → logprob: -4.486647129058838
    9. ' s' → logprob: -4.861647129058838
    10. 'continue' → logprob: -5.236647129058838

Token 347: ' détermin' (ID: 62185)
  Prédit: 'cycl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycl' → logprob: -1.175484538078308
    2. 'period' → logprob: -1.425484538078308
    3. 'p' → logprob: -1.550484538078308
    4. ' péri' → logprob: -2.0504846572875977
    5. ' cycl' → logprob: -3.1754846572875977
    6. ' détermin' → logprob: -4.050484657287598
    7. 'dé' → logprob: -4.800484657287598
    8. 'une' → logprob: -5.050484657287598
    9. 'det' → logprob: -5.300484657287598
    10. 'b' → logprob: -5.550484657287598

Token 348: 'iste' (ID: 4872)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.011069283820688725
    2. 'in' → logprob: -5.261069297790527
    3. 'é' → logprob: -6.386069297790527
    4. 'iné' → logprob: -6.636069297790527
    5. 'née' → logprob: -6.761069297790527
    6. 'ined' → logprob: -7.261069297790527
    7. 'iste' → logprob: -8.011069297790527
    8. 'ante' → logprob: -9.511069297790527
    9. 'isée' → logprob: -9.511069297790527
    10. 'e' → logprob: -10.136069297790527

Token 349: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8400774002075195
    2. '.' → logprob: -1.3400774002075195
    3. '       ' → logprob: -2.0900774002075195
    4. '   ' → logprob: -2.3400774002075195
    5. ':' → logprob: -3.2150774002075195
    6. ' ' → logprob: -4.4650774002075195
    7. ')' → logprob: -5.3400774002075195
    8. '<|end|>' → logprob: -5.5900774002075195
    9. ' ,' → logprob: -5.5900774002075195
    10. 'def' → logprob: -5.7150774002075195

Token 350: ' on' (ID: 402)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.1210883855819702
    2. 'period' → logprob: -1.7460883855819702
    3. ' péri' → logprob: -1.8710883855819702
    4. 'cycl' → logprob: -3.4960885047912598
    5. 'stable' → logprob: -3.6210885047912598
    6. 'local' → logprob: -3.7460885047912598
    7. 'pe' → logprob: -3.7460885047912598
    8. 'que' → logprob: -3.8710885047912598
    9. 'ré' → logprob: -3.8710885047912598
    10. ' stable' → logprob: -4.12108850479126

Token 351: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.02507707104086876
    2. ' peut' → logprob: -3.9000771045684814
    3. 'pour' → logprob: -6.150076866149902
    4. 'a' → logprob: -7.275076866149902
    5. 'va' → logprob: -7.400076866149902
    6. 'continue' → logprob: -7.900076866149902
    7. 'p' → logprob: -8.525076866149902
    8. '#' → logprob: -8.650076866149902
    9. 'do' → logprob: -10.525076866149902
    10. 'def' → logprob: -10.525076866149902

Token 352: ' mod' (ID: 1812)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.5651301741600037
    2. 'pré' → logprob: -1.5651302337646484
    3. 'contin' → logprob: -2.1901302337646484
    4. 'sim' → logprob: -4.190130233764648
    5. ' utiliser' → logprob: -4.190130233764648
    6. ' prec' → logprob: -4.315130233764648
    7. 'coder' → logprob: -4.815130233764648
    8. ' continuer' → logprob: -4.940130233764648
    9. 'pre' → logprob: -5.065130233764648
    10. 'pr' → logprob: -5.065130233764648

Token 353: 'él' (ID: 6778)
  Prédit: 'ifié'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifié' → logprob: -0.7620922923088074
    2. 'él' → logprob: -1.7620923519134521
    3. 'é' → logprob: -2.387092351913452
    4. 'ifier' → logprob: -2.762092351913452
    5. 'if' → logprob: -2.887092351913452
    6. 'ule' → logprob: -3.887092351913452
    7. 'ified' → logprob: -4.012092113494873
    8. '```' → logprob: -4.137092113494873
    9. 'ify' → logprob: -4.512092113494873
    10. '#' → logprob: -4.512092113494873

Token 354: 'iser' (ID: 7466)
  Prédit: 'iner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iner' → logprob: -0.011714319698512554
    2. 'in' → logprob: -5.636714458465576
    3. 'iné' → logprob: -5.886714458465576
    4. 'ine' → logprob: -6.136714458465576
    5. 'er' → logprob: -6.386714458465576
    6. 'ined' → logprob: -8.511713981628418
    7. '```' → logprob: -8.886713981628418
    8. 'é' → logprob: -8.949213981628418
    9. 'ier' → logprob: -9.261713981628418
    10. 'ée' → logprob: -9.449213981628418

Token 355: ' chaque' (ID: 21194)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.9869729280471802
    2. 'la' → logprob: -1.7369729280471802
    3. ' la' → logprob: -1.7369729280471802
    4. 'le' → logprob: -1.9869729280471802
    5. 'par' → logprob: -3.3619728088378906
    6. ' le' → logprob: -3.3619728088378906
    7. 'un' → logprob: -4.611972808837891
    8. ')' → logprob: -4.861972808837891
    9. ' un' → logprob: -5.236972808837891
    10. '   ' → logprob: -5.486972808837891

Token 356: ' promenade' (ID: 148184)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.6580705046653748
    2. 'position' → logprob: -1.2830705642700195
    3. ' position' → logprob: -2.5330705642700195
    4. ' case' → logprob: -2.5330705642700195
    5. 'pos' → logprob: -4.1580705642700195
    6. 'ét' → logprob: -5.5330705642700195
    7. 'pas' → logprob: -5.5330705642700195
    8. ' état' → logprob: -5.6580705642700195
    9. 'cell' → logprob: -5.7830705642700195
    10. ' étape' → logprob: -6.2830705642700195

Token 357: ' comme' (ID: 7971)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7645878195762634
    2. '   ' → logprob: -1.8895878791809082
    3. ',' → logprob: -2.139587879180908
    4. ' ' → logprob: -3.014587879180908
    5. '[' → logprob: -3.264587879180908
    6. '_' → logprob: -3.639587879180908
    7. ' )' → logprob: -3.764587879180908
    8. 'def' → logprob: -3.889587879180908
    9. '.' → logprob: -4.139587879180908
    10. '<|end|>' → logprob: -4.389587879180908

Token 358: ' une' (ID: 2463)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.21521399915218353
    2. 'une' → logprob: -1.8402140140533447
    3. ' un' → logprob: -4.215213775634766
    4. 'su' → logprob: -4.965213775634766
    5. ' une' → logprob: -5.090213775634766
    6. 'le' → logprob: -5.965213775634766
    7. 'des' → logprob: -6.465213775634766
    8. 'dé' → logprob: -6.965213775634766
    9. 'la' → logprob: -7.340213775634766
    10. 'de' → logprob: -9.340213775634766

Token 359: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.7713024020195007
    2. 'transition' → logprob: -1.5213024616241455
    3. 'pass' → logprob: -2.7713024616241455
    4. 'gr' → logprob: -3.1463024616241455
    5. 'dé' → logprob: -3.5213024616241455
    6. ' déplacement' → logprob: -3.6463024616241455
    7. '"' → logprob: -3.7713024616241455
    8. 'pas' → logprob: -4.146302223205566
    9. 'function' → logprob: -4.271302223205566
    10. 'case' → logprob: -4.271302223205566

Token 360: ' f' (ID: 285)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3505401015281677
    2. ' )' → logprob: -2.4755401611328125
    3. ' de' → logprob: -3.4755401611328125
    4. ',' → logprob: -3.4755401611328125
    5. 'def' → logprob: -3.6005401611328125
    6. '_next' → logprob: -4.3505401611328125
    7. '<|end|>' → logprob: -4.4755401611328125
    8. '(next' → logprob: -4.8505401611328125
    9. ' suivante' → logprob: -4.9755401611328125
    10. '.' → logprob: -4.9755401611328125

Token 361: ':
' (ID: 734)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39315974712371826
    2. ',' → logprob: -2.518159866333008
    3. '   ' → logprob: -2.768159866333008
    4. ':' → logprob: -3.018159866333008
    5. '_' → logprob: -3.768159866333008
    6. '(' → logprob: -4.143159866333008
    7. ' =' → logprob: -4.143159866333008
    8. ' ' → logprob: -4.393159866333008
    9. '=' → logprob: -5.143159866333008
    10. 'def' → logprob: -5.268159866333008

Token 362: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.44877853989601135
    2. '   ' → logprob: -2.1987786293029785
    3. ' (' → logprob: -2.6987786293029785
    4. '(' → logprob: -3.0737786293029785
    5. ')' → logprob: -3.4487786293029785
    6. ' def' → logprob: -3.5737786293029785
    7. '       ' → logprob: -4.5737786293029785
    8. '[' → logprob: -4.6987786293029785
    9. ' ' → logprob: -4.6987786293029785
    10. '(
' → logprob: -4.8237786293029785

Token 363: ' #' (ID: 1069)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.0627049207687378
    2. 'def' → logprob: -1.0627049207687378
    3. ')' → logprob: -2.1877050399780273
    4. ' def' → logprob: -3.1877050399780273
    5. '(' → logprob: -3.5627050399780273
    6. '   ' → logprob: -3.9377050399780273
    7. '(i' → logprob: -3.9377050399780273
    8. '       ' → logprob: -4.062705039978027
    9. ' )' → logprob: -5.187705039978027
    10. ' ' → logprob: -5.187705039978027

Token 364: ' f' (ID: 285)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.045014191418886185
    2. ' def' → logprob: -3.7950141429901123
    3. 'from' → logprob: -5.170014381408691
    4. ')' → logprob: -5.670014381408691
    5. ' (' → logprob: -6.170014381408691
    6. 'f' → logprob: -6.670014381408691
    7. '#' → logprob: -6.795014381408691
    8. '   ' → logprob: -7.295014381408691
    9. 'import' → logprob: -7.295014381408691
    10. ' =' → logprob: -7.420014381408691

Token 365: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42383497953414917
    2. '(i' → logprob: -1.173835039138794
    3. ' :' → logprob: -4.048834800720215
    4. '((' → logprob: -4.173834800720215
    5. '(' → logprob: -6.548834800720215
    6. '[i' → logprob: -7.673834800720215
    7. ' =' → logprob: -7.673834800720215
    8. '(x' → logprob: -7.798834800720215
    9. ' (' → logprob: -8.923834800720215
    10. '=' → logprob: -9.298834800720215

Token 366: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0883948877453804
    2. '(int' → logprob: -2.8383948802948
    3. ' (' → logprob: -4.088395118713379
    4. '(' → logprob: -6.088395118713379
    5. '(H' → logprob: -6.588395118713379
    6. '(lambda' → logprob: -6.588395118713379
    7. 'int' → logprob: -6.838395118713379
    8. '[i' → logprob: -7.088395118713379
    9. '[int' → logprob: -7.338395118713379
    10. '[(' → logprob: -8.713395118713379

Token 367: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2015020251274109
    2. 'int' → logprob: -1.7015020847320557
    3. ')' → logprob: -10.326501846313477
    4. ' i' → logprob: -10.701501846313477
    5. ' int' → logprob: -11.201501846313477
    6. '(i' → logprob: -11.701501846313477
    7. '(int' → logprob: -12.701501846313477
    8. ',' → logprob: -13.576501846313477
    9. '   ' → logprob: -13.701501846313477
    10. 'tuple' → logprob: -14.201501846313477

Token 368: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3135056793689728
    2. ',j' → logprob: -1.3135056495666504
    3. ' ,' → logprob: -8.688506126403809
    4. ',i' → logprob: -10.563506126403809
    5. ')' → logprob: -11.313506126403809
    6. '[' → logprob: -11.813506126403809
    7. '   ' → logprob: -11.938506126403809
    8. 'j' → logprob: -12.688506126403809
    9. ',int' → logprob: -13.188506126403809
    10. ' ' → logprob: -13.563506126403809

Token 369: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003647826088126749
    2. ')->' → logprob: -8.000365257263184
    3. ',' → logprob: -11.750365257263184
    4. ' )' → logprob: -12.000365257263184
    5. ')
' → logprob: -12.500365257263184
    6. ')=>' → logprob: -12.625365257263184
    7. '")' → logprob: -13.500365257263184
    8. '),' → logprob: -14.000365257263184
    9. ')=' → logprob: -14.375365257263184
    10. '   ' → logprob: -14.500365257263184

Token 370: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011136604472994804
    2. ')->' → logprob: -5.011136531829834
    3. ' ->' → logprob: -5.511136531829834
    4. ')=>' → logprob: -9.011137008666992
    5. ' )' → logprob: -9.386137008666992
    6. '->' → logprob: -10.011137008666992
    7. ')=' → logprob: -10.636137008666992
    8. ',' → logprob: -10.636137008666992
    9. '),' → logprob: -10.886137008666992
    10. '):' → logprob: -11.261137008666992

Token 371: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.2794152498245239
    2. ' (' → logprob: -1.529415249824524
    3. '(next' → logprob: -3.6544151306152344
    4. ' next' → logprob: -7.654415130615234
    5. 'next' → logprob: -7.779415130615234
    6. '(' → logprob: -9.279415130615234
    7. '(n' → logprob: -9.904415130615234
    8. 'Next' → logprob: -10.654415130615234
    9. '(position' → logprob: -10.779415130615234
    10. '_next' → logprob: -11.279415130615234

Token 372: 'end' (ID: 419)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05316400155425072
    2. '(i' → logprob: -3.928164005279541
    3. 'next' → logprob: -4.053164005279541
    4. '(next' → logprob: -4.678164005279541
    5. 'new' → logprob: -6.428164005279541
    6. 'ni' → logprob: -6.428164005279541
    7. ' i' → logprob: -7.178164005279541
    8. ' (' → logprob: -7.803164005279541
    9. ' next' → logprob: -8.303163528442383
    10. ')' → logprob: -8.928163528442383

Token 373: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.007763850502669811
    2. ')' → logprob: -5.507763862609863
    3. 'i' → logprob: -7.007763862609863
    4. ',' → logprob: -7.132763862609863
    5. '_pos' → logprob: -7.132763862609863
    6. ',i' → logprob: -7.382763862609863
    7. '_position' → logprob: -8.632763862609863
    8. '_' → logprob: -9.757763862609863
    9. '_x' → logprob: -9.757763862609863
    10. '_point' → logprob: -10.257763862609863

Token 374: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05611930042505264
    2. ',end' → logprob: -3.181119203567505
    3. ',j' → logprob: -4.556119441986084
    4. ',next' → logprob: -7.306119441986084
    5. ',i' → logprob: -7.556119441986084
    6. ' ,' → logprob: -7.806119441986084
    7. ',n' → logprob: -8.306118965148926
    8. ',k' → logprob: -8.556118965148926
    9. ',f' → logprob: -8.931118965148926
    10. ')' → logprob: -9.306118965148926

Token 375: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.02542532980442047
    2. 'j' → logprob: -3.900425434112549
    3. ' end' → logprob: -5.400425434112549
    4. ' j' → logprob: -8.40042495727539
    5. '   ' → logprob: -10.90042495727539
    6. 'i' → logprob: -10.96292495727539
    7. ' ' → logprob: -11.02542495727539
    8. '  ' → logprob: -11.58792495727539
    9. ')' → logprob: -11.65042495727539
    10. '	end' → logprob: -11.83792495727539

Token 376: '_j' (ID: 12021)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0035625346936285496
    2. '_j' → logprob: -6.1285624504089355
    3. ')' → logprob: -6.8785624504089355
    4. ',' → logprob: -8.378562927246094
    5. '_,' → logprob: -10.503562927246094
    6. '_' → logprob: -10.503562927246094
    7. '_x' → logprob: -11.003562927246094
    8. '_)' → logprob: -11.753562927246094
    9. ',i' → logprob: -11.878562927246094
    10. 'i' → logprob: -12.253562927246094

Token 377: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009509922005236149
    2. '+' → logprob: -4.759510040283203
    3. ')+' → logprob: -7.509510040283203
    4. ')
' → logprob: -9.384510040283203
    5. '),' → logprob: -9.634510040283203
    6. ' +' → logprob: -9.884510040283203
    7. '+)' → logprob: -10.634510040283203
    8. '   ' → logprob: -10.634510040283203
    9. ' )' → logprob: -10.759510040283203
    10. ',' → logprob: -10.759510040283203

Token 378: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49705618619918823
    2. ')' → logprob: -1.247056245803833
    3. '   ' → logprob: -2.747056245803833
    4. '\' → logprob: -4.747056007385254
    5. '[' → logprob: -4.747056007385254
    6. ',' → logprob: -5.122056007385254
    7. '_' → logprob: -5.747056007385254
    8. ' ' → logprob: -6.497056007385254
    9. '#' → logprob: -6.997056007385254
    10. ':' → logprob: -6.997056007385254

Token 379: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33125805854797363
    2. ')' → logprob: -1.4562580585479736
    3. '   ' → logprob: -3.7062580585479736
    4. ',' → logprob: -4.8312578201293945
    5. '[' → logprob: -5.9562578201293945
    6. ' ' → logprob: -6.2062578201293945
    7. 'def' → logprob: -6.4562578201293945
    8. ')
' → logprob: -6.9562578201293945
    9. 'import' → logprob: -6.9562578201293945
    10. '
' → logprob: -7.0812578201293945

Token 380: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5290074944496155
    2. '   ' → logprob: -1.1540074348449707
    3. ')' → logprob: -3.0290074348449707
    4. '_' → logprob: -4.154007434844971
    5. '[' → logprob: -5.154007434844971
    6. ' ' → logprob: -5.279007434844971
    7. 'def' → logprob: -5.654007434844971
    8. ':' → logprob: -5.779007434844971
    9. ',' → logprob: -6.154007434844971
    10. '  
' → logprob: -6.154007434844971

Token 381: ' on' (ID: 402)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.9434173703193665
    2. 'f' → logprob: -1.3184173107147217
    3. 'def' → logprob: -2.6934173107147217
    4. '   ' → logprob: -2.9434173107147217
    5. ' on' → logprob: -3.0684173107147217
    6. '#' → logprob: -3.0684173107147217
    7. '       ' → logprob: -3.3184173107147217
    8. ' #' → logprob: -4.193417549133301
    9. ' la' → logprob: -4.443417549133301
    10. '    ' → logprob: -4.943417549133301

Token 382: ' veut' (ID: 41653)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1397713422775269
    2. '[' → logprob: -1.2647713422775269
    3. ' ' → logprob: -2.2647714614868164
    4. '#' → logprob: -3.1397714614868164
    5. '_' → logprob: -3.2647714614868164
    6. '   ' → logprob: -3.3897714614868164
    7. 'def' → logprob: -3.6397714614868164
    8. '[]' → logprob: -4.014771461486816
    9. '=' → logprob: -4.639771461486816
    10. '.' → logprob: -4.764771461486816

Token 383: ' f' (ID: 285)
  Prédit: ' sim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sim' → logprob: -1.396744966506958
    2. '   ' → logprob: -1.646744966506958
    3. ' pouvoir' → logprob: -1.896744966506958
    4. ' calcul' → logprob: -2.271744966506958
    5. '       ' → logprob: -2.521744966506958
    6. ' f' → logprob: -3.271744966506958
    7. ' construire' → logprob: -3.521744966506958
    8. '    ' → logprob: -3.521744966506958
    9. 'sim' → logprob: -3.896744966506958
    10. ' ' → logprob: -4.396744728088379

Token 384: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.017904557287693024
    2. '**' → logprob: -4.642904758453369
    3. '^(' → logprob: -5.392904758453369
    4. '^{' → logprob: -6.017904758453369
    5. ' ^' → logprob: -7.267904758453369
    6. ':' → logprob: -8.642904281616211
    7. '^^' → logprob: -8.892904281616211
    8. '\xe2\x81' → logprob: -10.392904281616211
    9. ' raised' → logprob: -10.767904281616211
    10. ' **' → logprob: -12.017904281616211

Token 385: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.13388821482658386
    2. '(N' → logprob: -2.6338882446289062
    3. '(' → logprob: -3.2588882446289062
    4. ' (' → logprob: -4.508888244628906
    5. ' N' → logprob: -6.008888244628906
    6. 'k' → logprob: -7.008888244628906
    7. '2' → logprob: -8.758888244628906
    8. '**' → logprob: -9.258888244628906
    9. ' ' → logprob: -9.633888244628906
    10. '[N' → logprob: -9.758888244628906

Token 386: '((' (ID: 2054)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5315011739730835
    2. '_' → logprob: -1.6565011739730835
    3. '(' → logprob: -3.031501293182373
    4. ',' → logprob: -3.281501293182373
    5. '   ' → logprob: -3.406501293182373
    6. ' ' → logprob: -3.781501293182373
    7. '[' → logprob: -4.031501293182373
    8. ':' → logprob: -4.781501293182373
    9. '       ' → logprob: -4.906501293182373
    10. '(
' → logprob: -5.156501293182373

Token 387: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.000925753265619278
    2. ' i' → logprob: -7.000925540924072
    3. '0' → logprob: -12.25092601776123
    4. ')' → logprob: -12.62592601776123
    5. ')i' → logprob: -12.62592601776123
    6. '   ' → logprob: -14.00092601776123
    7. ',' → logprob: -14.50092601776123
    8. '
' → logprob: -14.87592601776123
    9. '_i' → logprob: -14.87592601776123
    10. ',i' → logprob: -15.25092601776123

Token 388: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04459793493151665
    2. ',i' → logprob: -3.419597864151001
    3. ' ,' → logprob: -5.41959810256958
    4. ',j' → logprob: -6.16959810256958
    5. ')' → logprob: -6.41959810256958
    6. '),' → logprob: -6.91959810256958
    7. '   ' → logprob: -7.79459810256958
    8. '0' → logprob: -8.169597625732422
    9. '-' → logprob: -8.294597625732422
    10. ' ' → logprob: -9.294597625732422

Token 389: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07006548345088959
    2. '0' → logprob: -2.945065498352051
    3. ' ' → logprob: -4.695065498352051
    4. 'i' → logprob: -5.195065498352051
    5. ',' → logprob: -8.94506549835205
    6. ' i' → logprob: -9.44506549835205
    7. '   ' → logprob: -9.69506549835205
    8. '<|end|>' → logprob: -10.69506549835205
    9. 'H' → logprob: -11.32006549835205
    10. '  ' → logprob: -11.44506549835205

Token 390: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1620916873216629
    2. ')' → logprob: -1.9120917320251465
    3. '),' → logprob: -6.4120917320251465
    4. ')))' → logprob: -9.912091255187988
    5. ')),' → logprob: -10.162091255187988
    6. ' ))' → logprob: -10.412091255187988
    7. ' ' → logprob: -10.537091255187988
    8. ',' → logprob: -10.537091255187988
    9. '))
' → logprob: -11.912091255187988
    10. ' )' → logprob: -12.037091255187988

Token 391: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3931926190853119
    2. '   ' → logprob: -1.8931926488876343
    3. ':' → logprob: -2.2681925296783447
    4. '<|end|>' → logprob: -4.018192768096924
    5. '       ' → logprob: -4.518192768096924
    6. '):' → logprob: -4.643192768096924
    7. '
' → logprob: -4.893192768096924
    8. '[' → logprob: -5.018192768096924
    9. '(' → logprob: -5.393192768096924
    10. '()' → logprob: -5.893192768096924

Token 392: 'N' (ID: 45)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002956591488327831
    2. ' )' → logprob: -9.375295639038086
    3. '   ' → logprob: -9.625295639038086
    4. '))' → logprob: -10.000295639038086
    5. ',' → logprob: -10.625295639038086
    6. '),' → logprob: -11.125295639038086
    7. ').' → logprob: -11.375295639038086
    8. ' ' → logprob: -11.625295639038086
    9. '0' → logprob: -11.875295639038086
    10. ')
' → logprob: -12.250295639038086

Token 393: '-i' (ID: 18499)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20957906544208527
    2. ',' → logprob: -1.8345791101455688
    3. '-' → logprob: -5.084578990936279
    4. '   ' → logprob: -5.084578990936279
    5. '+' → logprob: -5.584578990936279
    6. '[' → logprob: -6.084578990936279
    7. 'import' → logprob: -6.834578990936279
    8. '<|end|>' → logprob: -6.959578990936279
    9. ',j' → logprob: -7.084578990936279
    10. ' -' → logprob: -7.084578990936279

Token 394: 'ème' (ID: 9767)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.19433632493019104
    2. ',' → logprob: -2.319336414337158
    3. '+' → logprob: -3.569336414337158
    4. ')' → logprob: -4.319336414337158
    5. ',j' → logprob: -4.819336414337158
    6. 'n' → logprob: -4.944336414337158
    7. '**' → logprob: -6.319336414337158
    8. 'f' → logprob: -6.319336414337158
    9. 'nt' → logprob: -6.444336414337158
    10. '-' → logprob: -6.444336414337158

Token 395: ' promenade' (ID: 148184)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06747571378946304
    2. 'token' → logprob: -4.19247579574585
    3. '))' → logprob: -4.31747579574585
    4. '_token' → logprob: -5.31747579574585
    5. ' )' → logprob: -5.44247579574585
    6. ')_' → logprob: -5.44247579574585
    7. 'position' → logprob: -5.56747579574585
    8. ' ' → logprob: -6.19247579574585
    9. '_' → logprob: -6.44247579574585
    10. '_step' → logprob: -6.94247579574585

Token 396: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001325241639278829
    2. '))' → logprob: -6.7513251304626465
    3. '   ' → logprob: -9.751325607299805
    4. ')))' → logprob: -10.501325607299805
    5. ' )' → logprob: -10.751325607299805
    6. ')`' → logprob: -12.126325607299805
    7. '+' → logprob: -12.251325607299805
    8. ')
' → logprob: -12.251325607299805
    9. ',' → logprob: -12.251325607299805
    10. '[' → logprob: -12.376325607299805

Token 397: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6496716141700745
    2. '   ' → logprob: -0.7746716141700745
    3. ')' → logprob: -5.77467155456543
    4. '):' → logprob: -6.14967155456543
    5. ':' → logprob: -6.27467155456543
    6. '(' → logprob: -6.39967155456543
    7. ' ' → logprob: -6.77467155456543
    8. '    
' → logprob: -6.89967155456543
    9. '  ' → logprob: -7.02467155456543
    10. '        
' → logprob: -7.27467155456543

Token 398: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012660210020840168
    2. '   ' → logprob: -4.887660026550293
    3. '        
' → logprob: -6.262660026550293
    4. '        ' → logprob: -8.137660026550293
    5. '    ' → logprob: -8.262660026550293
    6. ' 
' → logprob: -8.637660026550293
    7. 'def' → logprob: -8.637660026550293
    8. ')' → logprob: -8.762660026550293
    9. ',' → logprob: -8.762660026550293
    10. '\' → logprob: -8.887660026550293

Token 399: ' Impl' (ID: 144563)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1992746889591217
    2. '   ' → logprob: -1.9492746591567993
    3. 'next' → logprob: -4.32427453994751
    4. 'from' → logprob: -5.07427453994751
    5. 'dp' → logprob: -5.44927453994751
    6. 'def' → logprob: -5.57427453994751
    7. 'pos' → logprob: -5.82427453994751
    8. '#' → logprob: -6.57427453994751
    9. ' next' → logprob: -6.69927453994751
    10. 'import' → logprob: -6.82427453994751

Token 400: 'ément' (ID: 17645)
  Prédit: 'ément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.2562551498413086
    2. 'ement' → logprob: -1.8812551498413086
    3. 'def' → logprob: -3.0062551498413086
    4. 'import' → logprob: -4.756255149841309
    5. 'é' → logprob: -5.256255149841309
    6. 'ent' → logprob: -5.506255149841309
    7. '   ' → logprob: -6.256255149841309
    8. 'entation' → logprob: -6.381255149841309
    9. 'ements' → logprob: -7.006255149841309
    10. ')' → logprob: -7.506255149841309

Token 401: 'ation' (ID: 387)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.06337197124958038
    2. 'ment' → logprob: -3.6883718967437744
    3. 'er' → logprob: -4.4383721351623535
    4. 'enter' → logprob: -4.4383721351623535
    5. 'def' → logprob: -4.9383721351623535
    6. 'ement' → logprob: -5.9383721351623535
    7. 'import' → logprob: -7.0633721351623535
    8. 'ented' → logprob: -7.4383721351623535
    9. 'entation' → logprob: -7.4383721351623535
    10. '   ' → logprob: -7.6883721351623535

Token 402: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7305886149406433
    2. '       ' → logprob: -1.355588674545288
    3. '
' → logprob: -1.480588674545288
    4. '        
' → logprob: -4.355588436126709
    5. '    
' → logprob: -5.230588436126709
    6. ':' → logprob: -5.980588436126709
    7. 'import' → logprob: -5.980588436126709
    8. '

' → logprob: -6.105588436126709
    9. '```' → logprob: -6.230588436126709
    10. 'def' → logprob: -6.605588436126709

Token 403: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7672597765922546
    2. 'la' → logprob: -1.8922598361968994
    3. 'def' → logprob: -1.8922598361968994
    4. 'f' → logprob: -2.7672598361968994
    5. 'l' → logprob: -3.2672598361968994
    6. 'main' → logprob: -3.5172598361968994
    7. 'the' → logprob: -4.01725959777832
    8. 'le' → logprob: -4.64225959777832
    9. 'dfs' → logprob: -4.76725959777832
    10. ' main' → logprob: -5.01725959777832

Token 404: ' technique' (ID: 16410)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9263433218002319
    2. 'f' → logprob: -1.426343321800232
    3. 'next' → logprob: -2.3013434410095215
    4. 'dou' → logprob: -2.4263434410095215
    5. ' next' → logprob: -2.5513434410095215
    6. ' f' → logprob: -4.1763434410095215
    7. 'fonction' → logprob: -4.1763434410095215
    8. 'transition' → logprob: -4.6763434410095215
    9. ' transition' → logprob: -4.9263434410095215
    10. '#' → logprob: -5.0513434410095215

Token 405: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02486790530383587
    2. 'import' → logprob: -4.274868011474609
    3. ' de' → logprob: -5.399868011474609
    4. '       ' → logprob: -5.774868011474609
    5. ':' → logprob: -7.274868011474609
    6. 'def' → logprob: -7.274868011474609
    7. '    ' → logprob: -8.14986801147461
    8. 'from' → logprob: -8.64986801147461
    9. ' import' → logprob: -8.77486801147461
    10. ' d' → logprob: -8.89986801147461

Token 406: ' '' (ID: 461)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.006373925134539604
    2. '"' → logprob: -5.256373882293701
    3. ' doubling' → logprob: -7.631373882293701
    4. ' doubl' → logprob: -8.00637435913086
    5. 'double' → logprob: -9.25637435913086
    6. ' "' → logprob: -10.13137435913086
    7. 'binary' → logprob: -10.75637435913086
    8. 'dbl' → logprob: -10.75637435913086
    9. '```' → logprob: -11.00637435913086
    10. 'l' → logprob: -11.00637435913086

Token 407: 'dou' (ID: 122443)
  Prédit: 'dou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.0017014833865687251
    2. ' doubling' → logprob: -7.001701354980469
    3. 'binary' → logprob: -7.876701354980469
    4. 'double' → logprob: -8.876701354980469
    5. ' doubl' → logprob: -9.626701354980469
    6. '"' → logprob: -11.126701354980469
    7. 'd' → logprob: -11.376701354980469
    8. ' dou' → logprob: -11.376701354980469
    9. 'pow' → logprob: -11.376701354980469
    10. ' binary' → logprob: -11.376701354980469

Token 408: 'bl' (ID: 1751)
  Prédit: 'bl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.042669814079999924
    2. 'bling' → logprob: -3.5426697731018066
    3. 'bage' → logprob: -5.292669773101807
    4. 'ble' → logprob: -6.042669773101807
    5. 'b' → logprob: -6.667669773101807
    6. '   ' → logprob: -7.542669773101807
    7. '#' → logprob: -7.542669773101807
    8. '
' → logprob: -7.792669773101807
    9. 'blas' → logprob: -7.917669773101807
    10. 'bla' → logprob: -8.042670249938965

Token 409: 'age' (ID: 477)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.20206816494464874
    2. 'age' → logprob: -1.7020682096481323
    3. 'e' → logprob: -7.952068328857422
    4. 'aging' → logprob: -9.452068328857422
    5. '```' → logprob: -10.077068328857422
    6. 'bling' → logprob: -10.952068328857422
    7. 'bing' → logprob: -11.202068328857422
    8. 'a' → logprob: -11.202068328857422
    9. 'ai' → logprob: -11.577068328857422
    10. 'aj' → logprob: -11.577068328857422

Token 410: ''' (ID: 6)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2825760543346405
    2. '):' → logprob: -2.157576084136963
    3. ')' → logprob: -2.657576084136963
    4. '):
' → logprob: -3.907576084136963
    5. ' =' → logprob: -4.907576084136963
    6. ':' → logprob: -5.532576084136963
    7. '':' → logprob: -5.657576084136963
    8. ')
' → logprob: -5.782576084136963
    9. 'def' → logprob: -5.907576084136963
    10. ',' → logprob: -5.907576084136963

Token 411: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.635172963142395
    2. ':' → logprob: -0.885172963142395
    3. '       ' → logprob: -4.2601728439331055
    4. 'def' → logprob: -4.6351728439331055
    5. '
' → logprob: -4.7601728439331055
    6. ' :' → logprob: -5.3851728439331055
    7. '    
' → logprob: -5.8851728439331055
    8. ':
' → logprob: -6.2601728439331055
    9. '  
' → logprob: -6.2601728439331055
    10. ',' → logprob: -6.6351728439331055

Token 412: 'binary' (ID: 57009)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11932272464036942
    2. ' )' → logprob: -2.3693227767944336
    3. '   ' → logprob: -5.119322776794434
    4. 'def' → logprob: -5.244322776794434
    5. ' ' → logprob: -6.369322776794434
    6. '):' → logprob: -6.619322776794434
    7. 'n' → logprob: -6.744322776794434
    8. ')
' → logprob: -6.869322776794434
    9. ' )
' → logprob: -7.994322776794434
    10. 'max' → logprob: -8.244322776794434

Token 413: ' lifting' (ID: 51094)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7629491090774536
    2. '_jump' → logprob: -1.5129491090774536
    3. '_search' → logprob: -1.8879491090774536
    4. '_ex' → logprob: -2.762948989868164
    5. ')' → logprob: -4.012948989868164
    6. 'import' → logprob: -4.262948989868164
    7. '_d' → logprob: -4.512948989868164
    8. '_j' → logprob: -4.762948989868164
    9. 'search' → logprob: -4.762948989868164
    10. 'jump' → logprob: -4.887948989868164

Token 414: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8513116836547852
    2. '):' → logprob: -1.1013116836547852
    3. '   ' → logprob: -1.6013116836547852
    4. '):
' → logprob: -3.726311683654785
    5. ')
' → logprob: -4.351311683654785
    6. '       ' → logprob: -6.976311683654785
    7. ',' → logprob: -8.226311683654785
    8. 'def' → logprob: -8.851311683654785
    9. ' )' → logprob: -9.101311683654785
    10. '):

' → logprob: -9.351311683654785

Token 415: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04033510014414787
    2. '   ' → logprob: -4.415335178375244
    3. ' next' → logprob: -4.790335178375244
    4. 'dp' → logprob: -5.040335178375244
    5. 'next' → logprob: -5.290335178375244
    6. ' dp' → logprob: -5.540335178375244
    7. '        
' → logprob: -6.790335178375244
    8. 'def' → logprob: -7.165335178375244
    9. 'import' → logprob: -8.665334701538086
    10. 'from' → logprob: -8.790334701538086

Token 416: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0934627577662468
    2. ' next' → logprob: -2.9684627056121826
    3. 'next' → logprob: -4.093462944030762
    4. '   ' → logprob: -4.843462944030762
    5. 'dp' → logprob: -5.093462944030762
    6. ' dp' → logprob: -5.843462944030762
    7. ' from' → logprob: -6.468462944030762
    8. 'from' → logprob: -7.218462944030762
    9. '#' (adapté à ' #') → logprob: -8.343462944030762
    10. 'pos' → logprob: -8.593462944030762

Token 417: ' On' (ID: 2160)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.9536963701248169
    2. '   ' → logprob: -1.578696370124817
    3. ' next' → logprob: -1.828696370124817
    4. 'dp' → logprob: -2.4536962509155273
    5. 'max' → logprob: -2.8286962509155273
    6. '#' → logprob: -3.4536962509155273
    7. ' max' → logprob: -3.8286962509155273
    8. 'pos' → logprob: -3.9536962509155273
    9. ' dp' → logprob: -4.953696250915527
    10. ' nxt' → logprob: -6.078696250915527

Token 418: ' calc' (ID: 25691)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.9230789542198181
    2. 'continue' → logprob: -1.173079013824463
    3. 'contin' → logprob: -2.673079013824463
    4. ' va' → logprob: -2.673079013824463
    5. '_continue' → logprob: -3.673079013824463
    6. 'import' → logprob: -4.048079013824463
    7. 'def' → logprob: -4.173079013824463
    8. '_next' → logprob: -4.548079013824463
    9. ' continuer' → logprob: -4.798079013824463
    10. '#' → logprob: -4.923079013824463

Token 419: 'ule' (ID: 1601)
  Prédit: 'ulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulate' → logprob: -0.4598701000213623
    2. 'ul' → logprob: -2.3348701000213623
    3. 'uler' → logprob: -2.4598701000213623
    4. 'ule' → logprob: -2.5848701000213623
    5. 'er' → logprob: -3.3348701000213623
    6. 'import' → logprob: -3.5848701000213623
    7. 'def' → logprob: -4.084870338439941
    8. '=' → logprob: -4.459870338439941
    9. ' =' → logprob: -5.459870338439941
    10. 'e' → logprob: -6.459870338439941

Token 420: ' f' (ID: 285)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.0455433130264282
    2. ' next' → logprob: -1.4205433130264282
    3. '   ' → logprob: -2.0455431938171387
    4. 'dp' → logprob: -2.1705431938171387
    5. ' dp' → logprob: -3.2955431938171387
    6. 'f' → logprob: -3.5455431938171387
    7. ' f' → logprob: -3.5455431938171387
    8. ' for' → logprob: -4.170543193817139
    9. ']' → logprob: -4.295543193817139
    10. ' nxt' → logprob: -4.920543193817139

Token 421: '^' (ID: 61)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7062540650367737
    2. '_' → logprob: -1.331254005432129
    3. '[' → logprob: -1.831254005432129
    4. '_positions' → logprob: -4.081254005432129
    5. '_next' → logprob: -4.331254005432129
    6. '=' → logprob: -4.331254005432129
    7. 's' → logprob: -4.581254005432129
    8. '0' → logprob: -4.831254005432129
    9. '_k' → logprob: -4.956254005432129
    10. '1' → logprob: -6.081254005432129

Token 422: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06964004784822464
    2. '[' → logprob: -2.9446401596069336
    3. '0' → logprob: -5.194640159606934
    4. '_' → logprob: -5.819640159606934
    5. ' =' → logprob: -6.444640159606934
    6. '2' → logprob: -6.819640159606934
    7. '=' → logprob: -6.944640159606934
    8. ' ' → logprob: -7.194640159606934
    9. '(' → logprob: -7.819640159606934
    10. 'def' → logprob: -7.819640159606934

Token 423: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03971502184867859
    2. '=' → logprob: -3.289715051651001
    3. '_positions' → logprob: -7.164714813232422
    4. '_next' → logprob: -8.414714813232422
    5. '_pos' → logprob: -9.164714813232422
    6. ',' → logprob: -9.164714813232422
    7. 'positions' → logprob: -9.539714813232422
    8. 'next' → logprob: -9.539714813232422
    9. ')' → logprob: -10.039714813232422
    10. ']' → logprob: -10.164714813232422

Token 424: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.34977099299430847
    2. ' f' → logprob: -1.2247710227966309
    3. ' then' → logprob: -7.974771022796631
    4. '...' → logprob: -8.599770545959473
    5. ',' → logprob: -8.974770545959473
    6. ' puis' → logprob: -9.349770545959473
    7. ' ' → logprob: -9.474770545959473
    8. '       ' → logprob: -9.599770545959473
    9. '   ' → logprob: -9.849770545959473
    10. '#' → logprob: -10.099770545959473

Token 425: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.00022392053506337106
    2. '^{' → logprob: -9.375224113464355
    3. '²' → logprob: -10.375224113464355
    4. '^(' → logprob: -10.500224113464355
    5. '2' → logprob: -10.875224113464355
    6. ',' → logprob: -11.125224113464355
    7. 'f' → logprob: -11.375224113464355
    8. '[' → logprob: -12.250224113464355
    9. '```' → logprob: -12.375224113464355
    10. '_^' → logprob: -12.750224113464355

Token 426: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.77627644513268e-06
    2. ' ' → logprob: -12.375008583068848
    3. '0' → logprob: -12.875008583068848
    4. '1' → logprob: -13.375008583068848
    5. '(' → logprob: -16.375009536743164
    6. '```' → logprob: -16.625009536743164
    7. '[' → logprob: -16.750009536743164
    8. '{' → logprob: -17.750009536743164
    9. '  ' → logprob: -17.875009536743164
    10. '10' → logprob: -18.125009536743164

Token 427: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02924978733062744
    2. ')' → logprob: -4.654249668121338
    3. ']' → logprob: -4.654249668121338
    4. ',
' → logprob: -5.279249668121338
    5. ' ,' → logprob: -6.779249668121338
    6. '   ' → logprob: -7.904249668121338
    7. ',...' → logprob: -8.029250144958496
    8. ' =' → logprob: -8.029250144958496
    9. '),' → logprob: -8.404250144958496
    10. '[' → logprob: -8.404250144958496

Token 428: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.3506687581539154
    2. 'f' → logprob: -1.2256687879562378
    3. '...' → logprob: -6.475668907165527
    4. ',' → logprob: -7.725668907165527
    5. ' ...' → logprob: -9.600668907165527
    6. ',f' → logprob: -9.725668907165527
    7. ' ' → logprob: -10.100668907165527
    8. '...,' → logprob: -10.850668907165527
    9. ' ,' → logprob: -11.100668907165527
    10. 'def' → logprob: -12.100668907165527

Token 429: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.03546949848532677
    2. ',' → logprob: -3.7854695320129395
    3. '**' → logprob: -5.2854695320129395
    4. '[' → logprob: -5.7854695320129395
    5. '4' → logprob: -6.6604695320129395
    6. '```' → logprob: -7.1604695320129395
    7. '3' → logprob: -7.9104695320129395
    8. '...' → logprob: -8.035469055175781
    9. '^{' → logprob: -8.285469055175781
    10. '#' → logprob: -8.660469055175781

Token 430: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00023572170175611973
    2. '3' → logprob: -9.000235557556152
    3. ',' → logprob: -10.000235557556152
    4. ' ' → logprob: -11.000235557556152
    5. '0' → logprob: -11.500235557556152
    6. '(' → logprob: -11.500235557556152
    7. '1' → logprob: -11.750235557556152
    8. '_' → logprob: -11.875235557556152
    9. '2' → logprob: -12.625235557556152
    10. '=' → logprob: -13.125235557556152

Token 431: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007086641620844603
    2. ')' → logprob: -5.882086753845215
    3. ']' → logprob: -6.632086753845215
    4. '...' → logprob: -7.132086753845215
    5. ',
' → logprob: -7.507086753845215
    6. '   ' → logprob: -7.632086753845215
    7. ',...' → logprob: -7.882086753845215
    8. '[' → logprob: -8.882086753845215
    9. ' ,' → logprob: -9.257086753845215
    10. ',f' → logprob: -9.257086753845215

Token 432: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.387298047542572
    2. 'f' → logprob: -1.1372981071472168
    3. '...' → logprob: -8.012297630310059
    4. ',' → logprob: -9.762297630310059
    5. ',f' → logprob: -11.637297630310059
    6. ' ' → logprob: -12.012297630310059
    7. ' ...' → logprob: -12.262297630310059
    8. '   ' → logprob: -12.262297630310059
    9. '#' → logprob: -12.512297630310059
    10. 'def' → logprob: -13.137297630310059

Token 433: '^' (ID: 61)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7506118416786194
    2. '^' → logprob: -0.7506118416786194
    3. '...' → logprob: -3.0006117820739746
    4. ',...' → logprob: -5.500611782073975
    5. '8' → logprob: -7.250611782073975
    6. '*' → logprob: -7.750611782073975
    7. '[' → logprob: -9.125612258911133
    8. '..' → logprob: -9.500612258911133
    9. ',f' → logprob: -9.500612258911133
    10. '#' → logprob: -9.625612258911133

Token 434: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -3.643152740551159e-05
    2. '```' → logprob: -11.250036239624023
    3. '
' → logprob: -12.000036239624023
    4. '3' → logprob: -12.125036239624023
    5. '2' → logprob: -12.375036239624023
    6. '' → logprob: -13.750036239624023
    7. '...' → logprob: -13.875036239624023
    8. 'ight' → logprob: -14.000036239624023
    9. ' ' → logprob: -14.375036239624023
    10. '``' → logprob: -14.625036239624023

Token 435: ',...' (ID: 35229)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19576679170131683
    2. ']' → logprob: -2.1957666873931885
    3. ':' → logprob: -3.6957666873931885
    4. ')' → logprob: -4.570766925811768
    5. '...' → logprob: -4.570766925811768
    6. '):' → logprob: -5.320766925811768
    7. '   ' → logprob: -5.570766925811768
    8. ',...' → logprob: -5.820766925811768
    9. ']:' → logprob: -6.320766925811768
    10. '[' → logprob: -6.445766925811768

Token 436: ' jusqu' (ID: 21961)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22214190661907196
    2. '
' → logprob: -2.472141981124878
    3. '        
' → logprob: -3.347141981124878
    4. 'def' → logprob: -3.972141981124878
    5. '   ' → logprob: -4.097141742706299
    6. ',' → logprob: -4.347141742706299
    7. ')' → logprob: -5.597141742706299
    8. 'import' → logprob: -5.722141742706299
    9. '#' → logprob: -5.722141742706299
    10. ')
' → logprob: -5.972141742706299

Token 437: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.0873548611998558
    2. 'à' → logprob: -2.962354898452759
    3. '’à' → logprob: -4.08735466003418
    4. ''au' → logprob: -5.08735466003418
    5. 'au' → logprob: -5.21235466003418
    6. ' à' → logprob: -6.71235466003418
    7. '```' → logprob: -7.08735466003418
    8. '_' → logprob: -7.83735466003418
    9. 'a' → logprob: -8.21235466003418
    10. '’au' → logprob: -8.58735466003418

Token 438: ' la' (ID: 557)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2092345952987671
    2. 'N' → logprob: -2.3342347145080566
    3. '#' → logprob: -3.7092347145080566
    4. 'while' → logprob: -4.334234714508057
    5. 'max' → logprob: -4.459234714508057
    6. ' f' → logprob: -4.459234714508057
    7. 'k' → logprob: -4.834234714508057
    8. '   ' → logprob: -5.459234714508057
    9. ' N' → logprob: -5.834234714508057
    10. ' ' → logprob: -5.834234714508057

Token 439: ' plus' (ID: 2932)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.04044535383582115
    2. 'maximum' → logprob: -4.040445327758789
    3. 'while' → logprob: -4.665445327758789
    4. 'log' → logprob: -6.165445327758789
    5. 'import' → logprob: -6.665445327758789
    6. '(max' → logprob: -6.915445327758789
    7. ' max' → logprob: -7.290445327758789
    8. 'largest' → logprob: -7.415445327758789
    9. '20' → logprob: -7.665445327758789
    10. 'k' → logprob: -7.790445327758789

Token 440: ' grande' (ID: 10094)
  Prédit: ' grande'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grande' → logprob: -1.0617516040802002
    2. ' ' → logprob: -1.1867516040802002
    3. 'import' → logprob: -2.0617516040802
    4. '   ' → logprob: -2.9367516040802
    5. ' large' → logprob: -3.1867516040802
    6. 'large' → logprob: -4.061751365661621
    7. 'pro' → logprob: -4.311751365661621
    8. ' élevée' → logprob: -4.311751365661621
    9. ' proche' → logprob: -4.436751365661621
    10. ' haute' → logprob: -5.061751365661621

Token 441: ' puissance' (ID: 63494)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.6858015656471252
    2. 'power' → logprob: -1.4358015060424805
    3. ' puissance' → logprob: -2.3108015060424805
    4. ' ' → logprob: -2.5608015060424805
    5. 'pu' → logprob: -3.5608015060424805
    6. ' power' → logprob: -4.0608015060424805
    7. '   ' → logprob: -4.8108015060424805
    8. '_pow' → logprob: -5.1858015060424805
    9. '2' → logprob: -5.4358015060424805
    10. 'exp' → logprob: -5.4358015060424805

Token 442: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.1721057891845703
    2. '_' → logprob: -1.4221057891845703
    3. '_de' → logprob: -2.0471057891845703
    4. 'de' → logprob: -2.2971057891845703
    5. ' ' → logprob: -2.7971057891845703
    6. ' _' → logprob: -3.5471057891845703
    7. '   ' → logprob: -3.6721057891845703
    8. ' of' → logprob: -4.29710578918457
    9. '_of' → logprob: -4.42210578918457
    10. '[' → logprob: -4.92210578918457

Token 443: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008974744938313961
    2. ' ' → logprob: -5.008974552154541
    3. 'de' → logprob: -6.883974552154541
    4. ' two' → logprob: -7.383974552154541
    5. ' deux' → logprob: -7.758974552154541
    6. 'two' → logprob: -8.6339750289917
    7. 'N' → logprob: -12.7589750289917
    8. 'Deux' → logprob: -14.1339750289917
    9. '#' → logprob: -14.2589750289917
    10. ' N' → logprob: -14.3839750289917

Token 444: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.013578636571764946
    2. 'N' → logprob: -4.513578414916992
    3. ' ' → logprob: -6.263578414916992
    4. ' two' → logprob: -8.388578414916992
    5. ' deux' → logprob: -8.763578414916992
    6. ' N' → logprob: -8.888578414916992
    7. 'de' → logprob: -9.513578414916992
    8. 'two' → logprob: -11.138578414916992
    9. 'Deux' → logprob: -12.888578414916992
    10. 'k' → logprob: -13.263578414916992

Token 445: ' <=' (ID: 5017)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.023544430732727
    2. ')' → logprob: -1.398544430732727
    3. ']' → logprob: -1.898544430732727
    4. '_' → logprob: -2.8985443115234375
    5. '       ' → logprob: -3.1485443115234375
    6. ',' → logprob: -3.7735443115234375
    7. 'import' → logprob: -4.1485443115234375
    8. ':' → logprob: -4.6485443115234375
    9. '
' → logprob: -4.7735443115234375
    10. '_possible' → logprob: -5.0235443115234375

Token 446: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.10020925104618073
    2. ' N' → logprob: -2.3502092361450195
    3. ' ' → logprob: -13.97520923614502
    4. '	N' → logprob: -13.97520923614502
    5. ' ' → logprob: -14.35020923614502
    6. 'n' → logprob: -16.225210189819336
    7. '   ' → logprob: -16.350210189819336
    8. '>N' → logprob: -17.475210189819336
    9. '    ' → logprob: -18.600210189819336
    10. '_N' → logprob: -18.725210189819336

Token 447: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7406497001647949
    2. '       ' → logprob: -0.8656497001647949
    3. '   ' → logprob: -3.490649700164795
    4. '        
' → logprob: -3.490649700164795
    5. ')
' → logprob: -4.865649700164795
    6. '    
' → logprob: -4.990649700164795
    7. '  
' → logprob: -4.990649700164795
    8. '\n' → logprob: -5.490649700164795
    9. ' 
' → logprob: -5.740649700164795
    10. '
' → logprob: -6.115649700164795

Token 448: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07134024798870087
    2. '
' → logprob: -3.321340322494507
    3. '        
' → logprob: -3.946340322494507
    4. '   ' → logprob: -5.321340084075928
    5. ')' → logprob: -6.946340084075928
    6. ' 
' → logprob: -7.071340084075928
    7. '    
' → logprob: -7.321340084075928
    8. 'def' → logprob: -7.321340084075928
    9. ',' → logprob: -7.571340084075928
    10. '  
' → logprob: -7.571340084075928

Token 449: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04134651646018028
    2. '        
' → logprob: -4.166346549987793
    3. '
' → logprob: -4.916346549987793
    4. '   ' → logprob: -5.541346549987793
    5. '\' → logprob: -6.541346549987793
    6. '\n' → logprob: -6.666346549987793
    7. 'def' → logprob: -6.791346549987793
    8. ',' → logprob: -6.791346549987793
    9. ')' → logprob: -6.916346549987793
    10. ' 
' → logprob: -7.041346549987793

Token 450: ' Puis' (ID: 87717)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27360376715660095
    2. 'next' → logprob: -2.773603677749634
    3. 'max' → logprob: -2.898603677749634
    4. ' next' → logprob: -3.523603677749634
    5. '#' → logprob: -3.773603677749634
    6. '
' → logprob: -3.898603677749634
    7. 'dp' → logprob: -3.898603677749634
    8. ' max' → logprob: -4.648603916168213
    9. 'f' → logprob: -5.148603916168213
    10. 'from' → logprob: -6.023603916168213

Token 451: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04860111325979233
    2. '#' → logprob: -4.423601150512695
    3. ' for' → logprob: -4.548601150512695
    4. ' on' → logprob: -5.548601150512695
    5. ' #' → logprob: -5.798601150512695
    6. '
' → logprob: -5.798601150512695
    7. 'def' → logprob: -5.923601150512695
    8. 'for' → logprob: -5.923601150512695
    9. '        
' → logprob: -5.923601150512695
    10. '   ' → logprob: -6.298601150512695

Token 452: ' compose' (ID: 43360)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6117100119590759
    2. 'continue' → logprob: -1.4867100715637207
    3. '#' → logprob: -3.4867100715637207
    4. '   ' → logprob: -3.4867100715637207
    5. 'contin' → logprob: -3.6117100715637207
    6. ' combine' → logprob: -3.6117100715637207
    7. 'combine' → logprob: -4.236710071563721
    8. ' #' → logprob: -4.486710071563721
    9. 'for' → logprob: -4.861710071563721
    10. 'def' → logprob: -5.111710071563721

Token 453: ' ces' (ID: 10532)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9525424242019653
    2. '       ' → logprob: -1.7025424242019653
    3. 'tokens' → logprob: -2.327542304992676
    4. ' ' → logprob: -2.827542304992676
    5. ' f' → logprob: -3.452542304992676
    6. ')' → logprob: -3.452542304992676
    7. ']' → logprob: -3.827542304992676
    8. '    ' → logprob: -4.077542304992676
    9. ' tokens' → logprob: -4.077542304992676
    10. ' ]' → logprob: -4.202542304992676

Token 454: ' fonctions' (ID: 87283)
  Prédit: ' fonctions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fonctions' → logprob: -0.8879750370979309
    2. ' f' → logprob: -1.6379749774932861
    3. 'f' → logprob: -2.012974977493286
    4. ' déplacements' → logprob: -3.262974977493286
    5. ' étapes' → logprob: -3.512974977493286
    6. ' passages' → logprob: -3.512974977493286
    7. ' opérations' → logprob: -4.012975215911865
    8. ' puiss' → logprob: -4.137975215911865
    9. ' ' → logprob: -4.387975215911865
    10. ' appels' → logprob: -4.512975215911865

Token 455: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3231644332408905
    2. '
' → logprob: -1.448164463043213
    3. '        
' → logprob: -3.573164463043213
    4. '   ' → logprob: -5.573164463043213
    5. '    
' → logprob: -6.823164463043213
    6. 'def' → logprob: -6.948164463043213
    7. '  
' → logprob: -7.073164463043213
    8. ',' → logprob: -7.323164463043213
    9. '

' → logprob: -7.448164463043213
    10. ' 
' → logprob: -7.573164463043213

Token 456: ' obtenir' (ID: 54423)
  Prédit: 'sim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sim' → logprob: -0.5853778123855591
    2. 'ob' → logprob: -2.2103776931762695
    3. ' obtenir' → logprob: -2.9603776931762695
    4. 're' → logprob: -3.2103776931762695
    5. '   ' → logprob: -3.2103776931762695
    6. ' effectuer' → logprob: -3.5853776931762695
    7. ' sim' → logprob: -3.5853776931762695
    8. 'atte' → logprob: -3.9603776931762695
    9. '#' → logprob: -4.2103776931762695
    10. 'faire' → logprob: -4.2103776931762695

Token 457: ' f' (ID: 285)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.28358325362205505
    2. 'la' → logprob: -2.533583164215088
    3. ' le' → logprob: -2.533583164215088
    4. 'le' → logprob: -3.158583164215088
    5. ' f' → logprob: -4.033583164215088
    6. ' l' → logprob: -4.533583164215088
    7. 'l' → logprob: -5.033583164215088
    8. 'f' → logprob: -5.158583164215088
    9. '   ' → logprob: -6.158583164215088
    10. ' ' → logprob: -6.283583164215088

Token 458: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.004883857909590006
    2. '^{' → logprob: -6.129883766174316
    3. '^(' → logprob: -7.004883766174316
    4. '_^' → logprob: -7.504883766174316
    5. '**' → logprob: -7.879883766174316
    6. '_' → logprob: -8.879883766174316
    7. '_next' → logprob: -9.004883766174316
    8. '^)' → logprob: -9.254883766174316
    9. '_^(' → logprob: -9.504883766174316
    10. '```' → logprob: -9.629883766174316

Token 459: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.676292231422849e-05
    2. ' N' → logprob: -12.125017166137695
    3. '```' → logprob: -13.375017166137695
    4. '**' → logprob: -13.625017166137695
    5. '(N' → logprob: -13.750017166137695
    6. '_N' → logprob: -13.875017166137695
    7. 'n' → logprob: -14.000017166137695
    8. 'import' → logprob: -14.250017166137695
    9. '#' → logprob: -14.625017166137695
    10. '<|end|>' → logprob: -14.750017166137695

Token 460: ' en' (ID: 469)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1817760318517685
    2. '
' → logprob: -2.6817760467529297
    3. '   ' → logprob: -2.6817760467529297
    4. '        
' → logprob: -5.30677604675293
    5. 'def' → logprob: -5.80677604675293
    6. ')
' → logprob: -6.55677604675293
    7. '

' → logprob: -6.80677604675293
    8. '    
' → logprob: -6.80677604675293
    9. '#' → logprob: -6.93177604675293
    10. 'dp' → logprob: -6.93177604675293

Token 461: ' O' (ID: 532)
  Prédit: ' passant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' passant' → logprob: -2.006479024887085
    2. 'def' → logprob: -2.381479024887085
    3. ' suivant' → logprob: -2.381479024887085
    4. 'python' → logprob: -2.631479024887085
    5. ' utilisant' → logprob: -3.006479024887085
    6. 'com' → logprob: -3.006479024887085
    7. 'steps' → logprob: -3.006479024887085
    8. 'range' → logprob: -3.131479024887085
    9. 'dé' → logprob: -3.256479024887085
    10. ' steps' → logprob: -3.256479024887085

Token 462: '(log' (ID: 25116)
  Prédit: '(log'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(log' → logprob: -0.00605393573641777
    2. '(' → logprob: -5.256053924560547
    3. '(
' → logprob: -8.131053924560547
    4. 'log' → logprob: -8.881053924560547
    5. '(\' → logprob: -8.881053924560547
    6. ' (' → logprob: -9.381053924560547
    7. '(l' → logprob: -10.131053924560547
    8. '((' → logprob: -10.256053924560547
    9. '   ' → logprob: -10.506053924560547
    10. '(math' → logprob: -11.006053924560547

Token 463: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03462117165327072
    2. ')' → logprob: -3.659621238708496
    3. ' N' → logprob: -5.159621238708496
    4. ' )' → logprob: -6.159621238708496
    5. '_' → logprob: -9.409621238708496
    6. '(N' → logprob: -9.409621238708496
    7. '   ' → logprob: -9.534621238708496
    8. ' ' → logprob: -10.034621238708496
    9. '
' → logprob: -10.409621238708496
    10. ')
' → logprob: -10.534621238708496

Token 464: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024453350342810154
    2. ')
' → logprob: -6.127445220947266
    3. ')

' → logprob: -9.627445220947266
    4. ')`' → logprob: -9.627445220947266
    5. ')\' → logprob: -10.377445220947266
    6. ')
' → logprob: -11.002445220947266
    7. ' )' → logprob: -11.127445220947266
    8. '):' → logprob: -11.252445220947266
    9. '   ' → logprob: -11.252445220947266
    10. '))' → logprob: -12.252445220947266

Token 465: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19038718938827515
    2. '
' → logprob: -2.81538724899292
    3. '   ' → logprob: -2.81538724899292
    4. '        
' → logprob: -3.56538724899292
    5. '    
' → logprob: -4.69038724899292
    6. '  
' → logprob: -5.44038724899292
    7. '\n' → logprob: -6.06538724899292
    8. ' 
' → logprob: -6.19038724899292
    9. '\' → logprob: -6.94038724899292
    10. 'def' → logprob: -7.19038724899292

Token 466: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01605290174484253
    2. 'dp' → logprob: -5.266052722930908
    3. 'next' → logprob: -5.641052722930908
    4. 'max' → logprob: -6.016052722930908
    5. '
' → logprob: -7.016052722930908
    6. '#' (adapté à ' #') → logprob: -7.141052722930908
    7. '   ' → logprob: -7.516052722930908
    8. '        
' → logprob: -7.516052722930908
    9. ' next' → logprob: -7.891052722930908
    10. ' max' → logprob: -8.141053199768066

Token 467: ' Cependant' (ID: 74480)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.7230508327484131
    2. 'max' → logprob: -1.223050832748413
    3. 'dp' → logprob: -2.598050832748413
    4. '   ' → logprob: -2.848050832748413
    5. '#' → logprob: -3.473050832748413
    6. 'f' → logprob: -3.848050832748413
    7. 'pos' → logprob: -4.098051071166992
    8. 'def' → logprob: -6.348051071166992
    9. 'jump' → logprob: -6.348051071166992
    10. 'MAX' → logprob: -6.473051071166992

Token 468: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.336895614862442
    2. '       ' → logprob: -1.4618955850601196
    3. '#' → logprob: -3.961895704269409
    4. ':' → logprob: -4.58689546585083
    5. '   ' → logprob: -5.33689546585083
    6. ' ,' → logprob: -5.46189546585083
    7. 'import' → logprob: -5.71189546585083
    8. '        ' → logprob: -5.96189546585083
    9. ' ' → logprob: -5.96189546585083
    10. 'def' → logprob: -6.58689546585083

Token 469: ' il' (ID: 1793)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6332831978797913
    2. ' on' → logprob: -1.7582831382751465
    3. '       ' → logprob: -2.3832831382751465
    4. ' il' → logprob: -3.0082831382751465
    5. ' #' → logprob: -3.5082831382751465
    6. ' la' → logprob: -4.0082831382751465
    7. 'import' → logprob: -4.0082831382751465
    8. '   ' → logprob: -4.1332831382751465
    9. 'il' → logprob: -4.7582831382751465
    10. 'pass' → logprob: -5.2582831382751465

Token 470: ' faut' (ID: 17821)
  Prédit: ' manque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' manque' → logprob: -0.727489709854126
    2. ' faut' → logprob: -1.102489709854126
    3. ' reste' → logprob: -2.727489709854126
    4. 'f' → logprob: -2.852489709854126
    5. ' faudra' → logprob: -3.852489709854126
    6. ' n' → logprob: -4.102489471435547
    7. 'n' → logprob: -4.727489471435547
    8. ' faudrait' → logprob: -5.227489471435547
    9. 'man' → logprob: -6.352489471435547
    10. '#' → logprob: -6.352489471435547

Token 471: ' aussi' (ID: 9894)
  Prédit: 'penser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'penser' → logprob: -1.2781703472137451
    2. ' gérer' → logprob: -2.028170347213745
    3. 'g' → logprob: -2.528170347213745
    4. 'prendre' → logprob: -3.028170347213745
    5. 'contin' → logprob: -3.278170347213745
    6. 'modifier' → logprob: -3.403170347213745
    7. 'import' → logprob: -3.403170347213745
    8. 'adapter' → logprob: -3.528170347213745
    9. 'sim' → logprob: -3.528170347213745
    10. 'aj' → logprob: -3.653170347213745

Token 472: ' sim' (ID: 1845)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.8104296922683716
    2. ' gérer' → logprob: -1.8104296922683716
    3. 'penser' → logprob: -1.9354296922683716
    4. 'prendre' → logprob: -2.060429573059082
    5. 'tenir' → logprob: -3.810429573059082
    6. 'modifier' → logprob: -3.935429573059082
    7. 'comp' → logprob: -4.185429573059082
    8. 'com' → logprob: -4.560429573059082
    9. 'sim' → logprob: -4.685429573059082
    10. 'mettre' → logprob: -4.935429573059082

Token 473: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.05657744035124779
    2. 'plement' → logprob: -3.931577444076538
    3. 'ple' → logprob: -4.431577205657959
    4. 'import' → logprob: -5.306577205657959
    5. '#' → logprob: -5.681577205657959
    6. 'ulate' → logprob: -6.056577205657959
    7. 'pl' → logprob: -6.181577205657959
    8. 'pler' → logprob: -6.306577205657959
    9. 'p' → logprob: -6.931577205657959
    10. 'u' → logprob: -7.181577205657959

Token 474: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.903568685054779
    2. ' les' → logprob: -1.7785687446594238
    3. ' l' → logprob: -2.278568744659424
    4. 'les' → logprob: -2.903568744659424
    5. ' le' → logprob: -2.903568744659424
    6. 'le' → logprob: -2.903568744659424
    7. '<|end|>' → logprob: -3.028568744659424
    8. ' ' → logprob: -3.653568744659424
    9. 'l' → logprob: -4.028568744659424
    10. 'la' → logprob: -4.153568744659424

Token 475: ' modification' (ID: 29847)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.1445595622062683
    2. 'direction' → logprob: -3.144559621810913
    3. 'mise' → logprob: -3.644559621810913
    4. 'gr' → logprob: -4.519559383392334
    5. ' modification' → logprob: -4.644559383392334
    6. 'position' → logprob: -4.644559383392334
    7. '#' → logprob: -5.019559383392334
    8. 'def' → logprob: -5.269559383392334
    9. 'grid' → logprob: -5.269559383392334
    10. 'suite' → logprob: -6.144559383392334

Token 476: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5007965564727783
    2. '<|end|>' → logprob: -1.7507965564727783
    3. ' de' → logprob: -3.0007965564727783
    4. ' of' → logprob: -3.3757965564727783
    5. 's' → logprob: -3.6257965564727783
    6. ')' → logprob: -3.7507965564727783
    7. 'des' → logprob: -4.375796318054199
    8. '   ' → logprob: -4.375796318054199
    9. 'import' → logprob: -4.625796318054199
    10. '_' → logprob: -5.250796318054199

Token 477: ' directions' (ID: 24921)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.3816991448402405
    2. ' directions' → logprob: -1.3816990852355957
    3. 'grid' → logprob: -3.3816990852355957
    4. 'gr' → logprob: -4.006699085235596
    5. ' grid' → logprob: -4.881699085235596
    6. 'direction' → logprob: -5.506699085235596
    7. 'cases' → logprob: -7.381699085235596
    8. ' direction' → logprob: -8.381699562072754
    9. 'val' → logprob: -8.506699562072754
    10. 'dir' → logprob: -8.631699562072754

Token 478: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.60727858543396
    2. '
' → logprob: -1.48227858543396
    3. '   ' → logprob: -1.85727858543396
    4. '        
' → logprob: -3.85727858543396
    5. 'def' → logprob: -4.357278823852539
    6. ':' → logprob: -4.482278823852539
    7. '  
' → logprob: -5.607278823852539
    8. '    
' → logprob: -5.982278823852539
    9. 'import' → logprob: -5.982278823852539
    10. ')' → logprob: -6.107278823852539

Token 479: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20465759932994843
    2. '<|end|>' → logprob: -1.9546575546264648
    3. '        
' → logprob: -3.579657554626465
    4. '        ' → logprob: -4.704657554626465
    5. '<|end|>' → logprob: -5.954657554626465
    6. ' ' → logprob: -6.579657554626465
    7. '
' → logprob: -7.954657554626465
    8. '    ' → logprob: -7.954657554626465
    9. '        
        
' → logprob: -7.954657554626465
    10. ',' → logprob: -8.454657554626465

Token 480: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09914018958806992
    2. '#' (adapté à ' #') → logprob: -3.474140167236328
    3. '        ' → logprob: -3.974140167236328
    4. '        
' → logprob: -4.849140167236328
    5. ' next' → logprob: -5.099140167236328
    6. 'next' → logprob: -5.599140167236328
    7. 'dp' → logprob: -5.724140167236328
    8. ' #' → logprob: -5.974140167236328
    9. ' dp' → logprob: -5.974140167236328
    10. 'from' → logprob: -6.349140167236328

Token 481: ' On' (ID: 2160)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3669576048851013
    2. '#' → logprob: -2.616957664489746
    3. 'dp' → logprob: -3.116957664489746
    4. ' dp' → logprob: -3.491957664489746
    5. ' next' → logprob: -3.741957664489746
    6. 'dire' → logprob: -4.116957664489746
    7. 'next' → logprob: -4.241957664489746
    8. ' for' → logprob: -4.491957664489746
    9. 'direction' → logprob: -4.491957664489746
    10. ' directions' → logprob: -4.491957664489746

Token 482: ' remarque' (ID: 183406)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.453933596611023
    2. 'continue' → logprob: -1.703933596611023
    3. ' need' → logprob: -2.2039337158203125
    4. 'def' → logprob: -2.5789337158203125
    5. ' faut' → logprob: -3.0789337158203125
    6. '#' → logprob: -3.3289337158203125
    7. 'need' → logprob: -3.7039337158203125
    8. 'import' → logprob: -3.8289337158203125
    9. 'for' → logprob: -3.8289337158203125
    10. 'contin' → logprob: -3.8289337158203125

Token 483: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.05304473266005516
    2. '   ' → logprob: -3.5530447959899902
    3. '       ' → logprob: -4.42804479598999
    4. ' ' → logprob: -6.30304479598999
    5. ',' → logprob: -6.42804479598999
    6. '    ' → logprob: -6.55304479598999
    7. ' qu' → logprob: -6.67804479598999
    8. '#' → logprob: -6.92804479598999
    9. 'que' → logprob: -7.17804479598999
    10. ' that' → logprob: -7.42804479598999

Token 484: ' les' (ID: 1341)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -1.1113027334213257
    2. ' la' → logprob: -1.7363027334213257
    3. 'la' → logprob: -1.8613027334213257
    4. 'les' → logprob: -1.9863027334213257
    5. 'le' → logprob: -2.3613028526306152
    6. ' les' → logprob: -3.9863028526306152
    7. 'pour' → logprob: -4.486302852630615
    8. 'cha' → logprob: -4.486302852630615
    9. 'for' → logprob: -4.861302852630615
    10. 'l' → logprob: -4.986302852630615

Token 485: ' directions' (ID: 24921)
  Prédit: ' directions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' directions' → logprob: -0.5028058290481567
    2. 'dire' → logprob: -1.0028058290481567
    3. 'direction' → logprob: -5.252805709838867
    4. ' next' → logprob: -5.252805709838867
    5. 'def' → logprob: -5.752805709838867
    6. ' direction' → logprob: -6.127805709838867
    7. '#' → logprob: -6.377805709838867
    8. ' positions' → logprob: -6.502805709838867
    9. ' grid' → logprob: -6.502805709838867
    10. 'next' → logprob: -6.627805709838867

Token 486: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9897925853729248
    2. ' sont' → logprob: -1.7397925853729248
    3. 'import' → logprob: -2.739792585372925
    4. ' peuvent' → logprob: -3.239792585372925
    5. '#' → logprob: -3.364792585372925
    6. '   ' → logprob: -3.489792585372925
    7. ' restent' → logprob: -3.864792585372925
    8. ',' → logprob: -3.864792585372925
    9. ' vont' → logprob: -3.989792585372925
    10. '[' → logprob: -4.364792823791504

Token 487: ' chaque' (ID: 21194)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.02171713300049305
    2. ' chaque' → logprob: -4.896717071533203
    3. 'ch' → logprob: -5.521717071533203
    4. '[i' → logprob: -5.896717071533203
    5. 'part' → logprob: -6.896717071533203
    6. '(i' → logprob: -6.896717071533203
    7. 'pass' → logprob: -7.396717071533203
    8. 'un' → logprob: -7.396717071533203
    9. 'l' → logprob: -7.521717071533203
    10. 'each' → logprob: -7.521717071533203

Token 488: ' intersection' (ID: 42002)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.1935947984457016
    2. ' passage' → logprob: -2.3185946941375732
    3. 'position' → logprob: -4.318594932556152
    4. ' promenade' → logprob: -4.318594932556152
    5. 'case' → logprob: -4.443594932556152
    6. ' ' → logprob: -5.193594932556152
    7. 'prom' → logprob: -5.318594932556152
    8. 'pas' → logprob: -5.443594932556152
    9. '```' → logprob: -6.193594932556152
    10. ' case' → logprob: -6.443594932556152

Token 489: ' chang' (ID: 3612)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.219589352607727
    2. ' sont' → logprob: -1.594589352607727
    3. ']' → logprob: -1.719589352607727
    4. ',' → logprob: -2.8445892333984375
    5. '[' → logprob: -3.2195892333984375
    6. ')' → logprob: -3.7195892333984375
    7. '<|end|>' → logprob: -3.9695892333984375
    8. ' ,' → logprob: -4.0945892333984375
    9. '#' → logprob: -4.2195892333984375
    10. '[i' → logprob: -4.5945892333984375

Token 490: 'ent' (ID: 299)
  Prédit: 'ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.014703295193612576
    2. 'e' → logprob: -4.764703273773193
    3. 'aient' → logprob: -5.764703273773193
    4. 'er' → logprob: -6.889703273773193
    5. 'ont' → logprob: -7.389703273773193
    6. 'èrent' → logprob: -7.764703273773193
    7. 'ement' → logprob: -9.139703750610352
    8. 'ment' → logprob: -9.139703750610352
    9. 'é' → logprob: -9.389703750610352
    10. '```' → logprob: -9.514703750610352

Token 491: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0874959230422974
    2. '       ' → logprob: -1.4624959230422974
    3. ' de' → logprob: -2.587495803833008
    4. ',' → logprob: -2.837495803833008
    5. ' =' → logprob: -2.962495803833008
    6. 's' → logprob: -3.087495803833008
    7. ')' → logprob: -3.212495803833008
    8. '.' → logprob: -3.962495803833008
    9. ' ' → logprob: -4.337495803833008
    10. '=' → logprob: -4.337495803833008

Token 492: ' chaque' (ID: 21194)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.27850133180618286
    2. 'each' → logprob: -2.278501272201538
    3. 'ch' → logprob: -2.778501272201538
    4. ' chaque' → logprob: -2.778501272201538
    5. 'altern' → logprob: -6.028501510620117
    6. 'every' → logprob: -6.028501510620117
    7. 'cada' → logprob: -6.028501510620117
    8. 'tour' → logprob: -6.528501510620117
    9. 'part' → logprob: -6.903501510620117
    10. 'la' → logprob: -7.028501510620117

Token 493: ' fois' (ID: 14697)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.021106405183672905
    2. ' passage' → logprob: -4.146106243133545
    3. 'pas' → logprob: -5.521106243133545
    4. ' ' → logprob: -8.771106719970703
    5. ' pass' → logprob: -8.771106719970703
    6. 'entrée' → logprob: -8.896106719970703
    7. 'prom' → logprob: -8.896106719970703
    8. 'vis' → logprob: -9.771106719970703
    9. 'fois' → logprob: -9.896106719970703
    10. 'p' → logprob: -10.021106719970703

Token 494: ' que' (ID: 661)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09617796540260315
    2. '   ' → logprob: -2.9711780548095703
    3. ':' → logprob: -4.97117805480957
    4. '        
' → logprob: -4.97117805480957
    5. ')' → logprob: -5.34617805480957
    6. '
' → logprob: -5.59617805480957
    7. ',' → logprob: -5.59617805480957
    8. ' ' → logprob: -6.22117805480957
    9. '<|end|>' → logprob: -6.22117805480957
    10. '  
' → logprob: -6.59617805480957

Token 495: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.1012462377548218
    2. 'on' → logprob: -1.3512462377548218
    3. 'la' → logprob: -1.4762462377548218
    4. 'le' → logprob: -2.4762463569641113
    5. ' l' → logprob: -3.4762463569641113
    6. ' la' → logprob: -3.9762463569641113
    7. 'celle' → logprob: -4.476246356964111
    8. 'pass' → logprob: -4.601246356964111
    9. 'c' → logprob: -5.351246356964111
    10. ' on' → logprob: -6.101246356964111

Token 496: ''on' (ID: 25812)
  Prédit: ''on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''on' → logprob: -1.2444257736206055
    2. 'on' → logprob: -1.4944257736206055
    3. 'a' → logprob: -1.7444257736206055
    4. ' passage' → logprob: -2.3694257736206055
    5. ' on' → logprob: -2.6194257736206055
    6. 'e' → logprob: -3.6194257736206055
    7. 'position' → logprob: -3.9944257736206055
    8. 'u' → logprob: -4.3694257736206055
    9. 'case' → logprob: -4.7444257736206055
    10. '#' → logprob: -5.1194257736206055

Token 497: ' passe' (ID: 22210)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.7960320115089417
    2. ' passe' → logprob: -1.2960319519042969
    3. 'p' → logprob: -1.4210319519042969
    4. 'vis' → logprob: -5.421031951904297
    5. ' traverse' → logprob: -5.671031951904297
    6. 'pas' → logprob: -5.796031951904297
    7. 'passes' → logprob: -5.921031951904297
    8. 'arr' → logprob: -6.046031951904297
    9. 'avance' → logprob: -6.296031951904297
    10. 'vient' → logprob: -6.421031951904297

Token 498: ' dessus' (ID: 67454)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0560917966067791
    2. ' ' → logprob: -4.056091785430908
    3. '<|end|>' → logprob: -4.681091785430908
    4. ' )' → logprob: -5.306091785430908
    5. ',' → logprob: -5.556091785430908
    6. '\t' → logprob: -5.806091785430908
    7. '_' → logprob: -5.931091785430908
    8. '\n' → logprob: -6.181091785430908
    9. ' par' → logprob: -6.306091785430908
    10. '   ' → logprob: -6.556091785430908

Token 499: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30771347880363464
    2. '
' → logprob: -1.807713508605957
    3. '   ' → logprob: -3.182713508605957
    4. '        
' → logprob: -3.182713508605957
    5. ')' → logprob: -5.432713508605957
    6. '    
' → logprob: -5.807713508605957
    7. 'def' → logprob: -6.432713508605957
    8. '  
' → logprob: -6.557713508605957
    9. ')
' → logprob: -6.807713508605957
    10. ' 
' → logprob: -6.932713508605957

Token 500: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09318270534276962
    2. '   ' → logprob: -2.9681828022003174
    3. '        
' → logprob: -4.843182563781738
    4. ')' → logprob: -5.218182563781738
    5. ' ' → logprob: -5.593182563781738
    6. '
' → logprob: -5.718182563781738
    7. ' 
' → logprob: -6.093182563781738
    8. 'def' → logprob: -6.093182563781738
    9. '  
' → logprob: -6.593182563781738
    10. ':' → logprob: -6.593182563781738

Token 501: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16645796597003937
    2. '<|end|>' → logprob: -2.2914578914642334
    3. '        
' → logprob: -3.9164578914642334
    4. ')' → logprob: -4.1664581298828125
    5. '<|end|>' → logprob: -5.2914581298828125
    6. ',' → logprob: -5.9164581298828125
    7. '
' → logprob: -6.1664581298828125
    8. ' ' → logprob: -6.9164581298828125
    9. '        ' → logprob: -7.0414581298828125
    10. '   ' → logprob: -7.4164581298828125

Token 502: ' La' (ID: 3038)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049866437911987305
    2. '        
' → logprob: -4.049866676330566
    3. ' 
' → logprob: -4.674866676330566
    4. ' ' → logprob: -6.049866676330566
    5. '#' → logprob: -6.174866676330566
    6. '
' → logprob: -6.424866676330566
    7. 'next' → logprob: -6.674866676330566
    8. ')' → logprob: -6.674866676330566
    9. ' next' → logprob: -6.674866676330566
    10. '        ' → logprob: -6.799866676330566

Token 503: ' direction' (ID: 9262)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -1.1205779314041138
    2. '#' → logprob: -1.2455779314041138
    3. 'direction' → logprob: -2.245577812194824
    4. 'def' → logprob: -2.745577812194824
    5. ' direction' → logprob: -3.745577812194824
    6. ' directions' → logprob: -3.870577812194824
    7. 'next' → logprob: -3.870577812194824
    8. 'position' → logprob: -4.120577812194824
    9. 'dé' → logprob: -4.745577812194824
    10. 'for' → logprob: -4.870577812194824

Token 504: ' dépend' (ID: 68660)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6067590117454529
    2. ' s' → logprob: -1.2317590713500977
    3. ' =' → logprob: -2.7317590713500977
    4. ' ' → logprob: -3.7317590713500977
    5. ' à' → logprob: -4.981759071350098
    6. ' est' → logprob: -5.106759071350098
    7. 'es' → logprob: -5.106759071350098
    8. ' change' → logprob: -5.356759071350098
    9. '<|end|>' → logprob: -5.356759071350098
    10. '   ' → logprob: -5.606759071350098

Token 505: ' donc' (ID: 14206)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.2720385789871216
    2. '_' → logprob: -2.897038459777832
    3. ' uniquement' → logprob: -2.897038459777832
    4. ' ' → logprob: -3.147038459777832
    5. ' de' → logprob: -3.647038459777832
    6. ' du' → logprob: -4.397038459777832
    7. 'des' → logprob: -4.772038459777832
    8. 'sur' → logprob: -5.647038459777832
    9. 'es' → logprob: -6.022038459777832
    10. ' on' → logprob: -6.147038459777832

Token 506: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6300234198570251
    2. ' du' → logprob: -1.25502347946167
    3. ' des' → logprob: -2.00502347946167
    4. ' aussi' → logprob: -4.00502347946167
    5. ' uniquement' → logprob: -4.38002347946167
    6. 'du' → logprob: -6.38002347946167
    7. ' également' → logprob: -6.38002347946167
    8. ' ' → logprob: -6.50502347946167
    9. ' sur' → logprob: -6.75502347946167
    10. 'des' → logprob: -6.88002347946167

Token 507: ' la' (ID: 557)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.0346201658248901
    2. 'la' → logprob: -1.5346201658248901
    3. 'par' → logprob: -1.7846201658248901
    4. 'l' → logprob: -2.1596202850341797
    5. ' la' → logprob: -2.9096202850341797
    6. ' le' → logprob: -3.6596202850341797
    7. ' (' → logprob: -4.03462028503418
    8. ' l' → logprob: -4.40962028503418
    9. '(N' → logprob: -5.15962028503418
    10. ' ' → logprob: -5.28462028503418

Token 508: ' par' (ID: 686)
  Prédit: ' passage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' passage' → logprob: -0.5767573118209839
    2. 'par' → logprob: -1.5767573118209839
    3. 'pass' → logprob: -2.2017574310302734
    4. ' nombre' → logprob: -3.5767574310302734
    5. 'nombre' → logprob: -3.8267574310302734
    6. ' (' → logprob: -3.9517574310302734
    7. ' parity' → logprob: -4.576757431030273
    8. 'pas' → logprob: -4.701757431030273
    9. ' pass' → logprob: -5.201757431030273
    10. ' par' → logprob: -5.326757431030273

Token 509: 'ité' (ID: 3761)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5313441753387451
    2. 'ent' → logprob: -1.2813441753387451
    3. 'ité' → logprob: -2.781344175338745
    4. 'am' → logprob: -4.156344413757324
    5. 'ents' → logprob: -4.531344413757324
    6. 'ity' → logprob: -4.781344413757324
    7. 'cours' → logprob: -5.156344413757324
    8. 'u' → logprob: -5.406344413757324
    9. 'e' → logprob: -5.406344413757324
    10. 'i' → logprob: -5.906344413757324

Token 510: ' du' (ID: 1462)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.0387800931930542
    2. ' de' → logprob: -1.7887800931930542
    3. '_' → logprob: -2.0387802124023438
    4. ' ' → logprob: -2.0387802124023438
    5. ')' → logprob: -2.6637802124023438
    6. ' of' → logprob: -3.1637802124023438
    7. ' _' → logprob: -4.038780212402344
    8. ' )' → logprob: -4.163780212402344
    9. ',' → logprob: -4.413780212402344
    10. ' du' → logprob: -4.538780212402344

Token 511: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.08249367773532867
    2. 'pass' → logprob: -2.707493782043457
    3. ' nombre' → logprob: -5.332493782043457
    4. 'number' → logprob: -5.332493782043457
    5. ' passage' → logprob: -6.207493782043457
    6. 'passes' → logprob: -8.582493782043457
    7. 'num' → logprob: -9.082493782043457
    8. 'pas' → logprob: -9.457493782043457
    9. ' ' → logprob: -9.582493782043457
    10. 'nb' → logprob: -9.707493782043457

Token 512: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.664814829826355
    2. ' d' → logprob: -1.164814829826355
    3. ' des' → logprob: -2.0398149490356445
    4. ' ' → logprob: -3.9148149490356445
    5. '_' → logprob: -5.0398149490356445
    6. ' of' → logprob: -5.6648149490356445
    7. ')' → logprob: -5.6648149490356445
    8. '  ' → logprob: -6.7898149490356445
    9. 'de' → logprob: -6.7898149490356445
    10. 's' → logprob: -6.9148149490356445

Token 513: ' passages' (ID: 69047)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.03836563229560852
    2. 'passes' → logprob: -3.413365602493286
    3. ' passages' → logprob: -6.413365840911865
    4. 'vis' → logprob: -6.663365840911865
    5. 'fois' → logprob: -6.788365840911865
    6. 'times' → logprob: -8.038365364074707
    7. ' pass' → logprob: -9.413365364074707
    8. ' ' → logprob: -9.788365364074707
    9. 'pas' → logprob: -10.538365364074707
    10. '```' → logprob: -10.663365364074707

Token 514: ' en' (ID: 469)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29697978496551514
    2. '   ' → logprob: -1.6719797849655151
    3. '        
' → logprob: -4.046979904174805
    4. ')' → logprob: -4.421979904174805
    5. '
' → logprob: -5.421979904174805
    6. ' ' → logprob: -5.546979904174805
    7. '  
' → logprob: -5.546979904174805
    8. '    
' → logprob: -5.796979904174805
    9. ',' → logprob: -5.796979904174805
    10. ' 
' → logprob: -5.796979904174805

Token 515: ' cette' (ID: 7696)
  Prédit: 'cet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cet' → logprob: -0.6847178936004639
    2. 'that' → logprob: -2.184717893600464
    3. ' cet' → logprob: -2.184717893600464
    4. 'this' → logprob: -2.684717893600464
    5. '(i' → logprob: -2.684717893600464
    6. ' that' → logprob: -3.559717893600464
    7. 'cel' → logprob: -4.309718132019043
    8. ' this' → logprob: -4.559718132019043
    9. ' cette' → logprob: -4.934718132019043
    10. ' ' → logprob: -4.934718132019043

Token 516: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.20373950898647308
    2. 'position' → logprob: -2.4537394046783447
    3. ' case' → logprob: -2.9537394046783447
    4. 'cell' → logprob: -3.7037394046783447
    5. 'point' → logprob: -5.078739643096924
    6. ' position' → logprob: -5.453739643096924
    7. ' cell' → logprob: -6.203739643096924
    8. ' ' → logprob: -6.328739643096924
    9. 'pass' → logprob: -6.328739643096924
    10. ' cellule' → logprob: -7.453739643096924

Token 517: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3238911032676697
    2. '   ' → logprob: -2.3238911628723145
    3. '<|end|>' → logprob: -2.3238911628723145
    4. '
' → logprob: -4.0738911628723145
    5. ':' → logprob: -4.3238911628723145
    6. ')' → logprob: -4.3238911628723145
    7. '        
' → logprob: -4.5738911628723145
    8. ' ' → logprob: -5.5738911628723145
    9. '<|end|>' → logprob: -5.5738911628723145
    10. '    
' → logprob: -6.1988911628723145

Token 518: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.057423997670412064
    2. '        
' → logprob: -3.5574240684509277
    3. ' 
' → logprob: -5.557424068450928
    4. ' ' → logprob: -5.682424068450928
    5. '\' → logprob: -5.807424068450928
    6. ')' → logprob: -5.932424068450928
    7. '        ' → logprob: -6.057424068450928
    8. '   ' → logprob: -6.057424068450928
    9. '<|end|>' → logprob: -6.182424068450928
    10. ',' → logprob: -6.807424068450928

Token 519: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01734832301735878
    2. '        
' → logprob: -5.267348289489746
    3. '   ' → logprob: -5.517348289489746
    4. ')' → logprob: -6.392348289489746
    5. 'next' → logprob: -6.892348289489746
    6. 'def' → logprob: -7.017348289489746
    7. '
' → logprob: -7.517348289489746
    8. ' next' → logprob: -7.517348289489746
    9. '#' (adapté à ' #') → logprob: -7.517348289489746
    10. 'dp' → logprob: -7.767348289489746

Token 520: ' Un' (ID: 1367)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.8030718564987183
    2. 'max' → logprob: -1.4280718564987183
    3. 'dp' → logprob: -1.8030718564987183
    4. '#' → logprob: -2.803071975708008
    5. '   ' → logprob: -3.678071975708008
    6. '       ' → logprob: -3.678071975708008
    7. ' next' → logprob: -5.303071975708008
    8. 'pos' → logprob: -5.428071975708008
    9. 'n' → logprob: -5.678071975708008
    10. 'dest' → logprob: -5.803071975708008

Token 521: ' autre' (ID: 20278)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.9572573900222778
    2. ']' → logprob: -2.0822572708129883
    3. 'e' → logprob: -2.2072572708129883
    4. 'def' → logprob: -2.2072572708129883
    5. ')' → logprob: -2.4572572708129883
    6. ' =' → logprob: -2.5822572708129883
    7. 'max' → logprob: -3.2072572708129883
    8. ' max' → logprob: -3.7072572708129883
    9. ' def' → logprob: -3.9572572708129883
    10. '_' → logprob: -3.9572572708129883

Token 522: ' point' (ID: 2438)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8497816324234009
    2. 'import' → logprob: -1.0997816324234009
    3. 'def' → logprob: -2.3497815132141113
    4. '#' → logprob: -3.3497815132141113
    5. ':
' → logprob: -4.224781513214111
    6. 'aspect' → logprob: -4.474781513214111
    7. 'possible' → logprob: -4.849781513214111
    8. '=' → logprob: -4.974781513214111
    9. 'line' → logprob: -5.099781513214111
    10. 'pass' → logprob: -5.224781513214111

Token 523: ' important' (ID: 3378)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5175602436065674
    2. ' =' → logprob: -1.8925602436065674
    3. '=' → logprob: -2.1425602436065674
    4. '   ' → logprob: -2.3925602436065674
    5. 'import' → logprob: -4.267560005187988
    6. '#' → logprob: -4.892560005187988
    7. 'def' → logprob: -4.892560005187988
    8. ')' → logprob: -5.892560005187988
    9. '<|end|>' → logprob: -6.267560005187988
    10. ' :' → logprob: -6.517560005187988

Token 524: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020390404388308525
    2. ' :' → logprob: -4.395390510559082
    3. ',' → logprob: -5.645390510559082
    4. '<|end|>' → logprob: -7.145390510559082
    5. '   ' → logprob: -7.270390510559082
    6. '=' → logprob: -7.270390510559082
    7. ' ' → logprob: -7.520390510559082
    8. '#' → logprob: -8.145390510559082
    9. ' =' → logprob: -8.270390510559082
    10. ':
' → logprob: -8.395390510559082

Token 525: ' Pour' (ID: 13931)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7244470119476318
    2. 'dp' → logprob: -1.5994470119476318
    3. '       ' → logprob: -2.224447011947632
    4. 'max' → logprob: -3.349447011947632
    5. 'import' → logprob: -3.474447011947632
    6. ' #' → logprob: -4.349447250366211
    7. ' max' → logprob: -4.474447250366211
    8. 'from' → logprob: -4.599447250366211
    9. 'next' → logprob: -4.724447250366211
    10. ' dp' → logprob: -4.724447250366211

Token 526: ' un' (ID: 537)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.321638822555542
    2. 'i' → logprob: -1.446638822555542
    3. ' chaque' → logprob: -1.946638822555542
    4. ' sim' → logprob: -2.446638822555542
    5. '_' → logprob: -3.071638822555542
    6. ' _' → logprob: -3.446638822555542
    7. ' la' → logprob: -3.696638822555542
    8. ' l' → logprob: -3.946638822555542
    9. ' j' → logprob: -4.071639060974121
    10. 'l' → logprob: -4.071639060974121

Token 527: ' même' (ID: 9679)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8899645805358887
    2. ' passage' → logprob: -1.2649645805358887
    3. ' i' → logprob: -1.5149645805358887
    4. ' position' → logprob: -4.889964580535889
    5. 'pass' → logprob: -5.014964580535889
    6. ' déplacement' → logprob: -5.264964580535889
    7. 'e' → logprob: -5.264964580535889
    8. ')' → logprob: -5.389964580535889
    9. ' pass' → logprob: -5.639964580535889
    10. 'def' → logprob: -5.639964580535889

Token 528: ' point' (ID: 2438)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.6668510437011719
    2. ' passage' → logprob: -1.7918510437011719
    3. 'i' → logprob: -1.9168510437011719
    4. 'pass' → logprob: -2.791851043701172
    5. 'token' → logprob: -2.916851043701172
    6. 'position' → logprob: -3.041851043701172
    7. ')' → logprob: -3.166851043701172
    8. 'indice' → logprob: -3.166851043701172
    9. '```' → logprob: -3.541851043701172
    10. ' i' → logprob: -3.916851043701172

Token 529: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14063109457492828
    2. '_' → logprob: -3.1406311988830566
    3. ')' → logprob: -4.140631198883057
    4. ' ,' → logprob: -4.390631198883057
    5. '   ' → logprob: -4.390631198883057
    6. '[' → logprob: -4.515631198883057
    7. '(' → logprob: -5.390631198883057
    8. ' ' → logprob: -5.390631198883057
    9. ' (' → logprob: -5.390631198883057
    10. '<|end|>' → logprob: -5.390631198883057

Token 530: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.37214455008506775
    2. ',' → logprob: -1.9971445798873901
    3. ')' → logprob: -2.2471444606781006
    4. '),' → logprob: -2.8721444606781006
    5. ' ,' → logprob: -5.24714469909668
    6. ',i' → logprob: -6.12214469909668
    7. ' i' → logprob: -6.87214469909668
    8. '#' → logprob: -7.62214469909668
    9. ' ),' → logprob: -7.62214469909668
    10. ' )' → logprob: -7.74714469909668

Token 531: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3923029899597168
    2. ',j' → logprob: -1.1423029899597168
    3. ' ,' → logprob: -6.142302989959717
    4. ')' → logprob: -7.142302989959717
    5. '   ' → logprob: -7.142302989959717
    6. ',i' → logprob: -7.267302989959717
    7. '),' → logprob: -7.892302989959717
    8. '+' → logprob: -8.767303466796875
    9. ',n' → logprob: -9.642303466796875
    10. ',
' → logprob: -10.017303466796875

Token 532: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3974492847919464
    2. '),' → logprob: -1.147449254989624
    3. ',' → logprob: -4.897449493408203
    4. ')
' → logprob: -6.897449493408203
    5. '):' → logprob: -7.147449493408203
    6. '),
' → logprob: -7.772449493408203
    7. '   ' → logprob: -8.272449493408203
    8. '):
' → logprob: -8.897449493408203
    9. '       ' → logprob: -9.647449493408203
    10. ' ),' → logprob: -9.897449493408203

Token 533: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13527102768421173
    2. ' ' → logprob: -3.3852710723876953
    3. '   ' → logprob: -3.8852710723876953
    4. ',' → logprob: -4.010271072387695
    5. ' )' → logprob: -4.010271072387695
    6. '<|end|>' → logprob: -4.635271072387695
    7. '       ' → logprob: -5.510271072387695
    8. '    ' → logprob: -5.885271072387695
    9. '_' → logprob: -6.010271072387695
    10. '[' → logprob: -6.135271072387695

Token 534: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9303897619247437
    2. '#' (adapté à ' #') → logprob: -1.4303897619247437
    3. '       ' → logprob: -1.5553897619247437
    4. ',' → logprob: -3.555389881134033
    5. ' on' → logprob: -3.805389881134033
    6. ' il' → logprob: -3.805389881134033
    7. '   ' → logprob: -3.930389881134033
    8. 'il' → logprob: -4.680389881134033
    9. '           ' → logprob: -5.180389881134033
    10. '        ' → logprob: -5.180389881134033

Token 535: ' la' (ID: 557)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.4038656949996948
    2. ')' → logprob: -1.6538656949996948
    3. '       ' → logprob: -2.0288658142089844
    4. '   ' → logprob: -2.9038658142089844
    5. 'def' → logprob: -2.9038658142089844
    6. '#' → logprob: -3.1538658142089844
    7. ' ' → logprob: -3.4038658142089844
    8. 'direction' → logprob: -3.5288658142089844
    9. 'on' → logprob: -3.6538658142089844
    10. ' ' → logprob: -3.9038658142089844

Token 536: ' direction' (ID: 9262)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.5477784872055054
    2. 'next' → logprob: -1.6727784872055054
    3. 'def' → logprob: -1.9227784872055054
    4. 'dire' → logprob: -2.047778606414795
    5. '#' → logprob: -2.672778606414795
    6. 'direction' → logprob: -3.422778606414795
    7. ' directions' → logprob: -3.547778606414795
    8. ')' → logprob: -3.797778606414795
    9. ' direction' → logprob: -4.047778606414795
    10. ']' → logprob: -4.547778606414795

Token 537: ' lors' (ID: 15456)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3319826126098633
    2. ' s' → logprob: -2.2069826126098633
    3. '<|end|>' → logprob: -2.9569826126098633
    4. ' ' → logprob: -3.7069826126098633
    5. ')' → logprob: -3.8319826126098633
    6. ' suivante' → logprob: -4.331982612609863
    7. ',' → logprob: -4.956982612609863
    8. '[' → logprob: -5.081982612609863
    9. ' ,' → logprob: -5.206982612609863
    10. ' )' → logprob: -5.456982612609863

Token 538: ' du' (ID: 1462)
  Prédit: ' suivante'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' suivante' → logprob: -1.0248370170593262
    2. ')' → logprob: -1.8998370170593262
    3. '[i' → logprob: -1.8998370170593262
    4. ' suivant' → logprob: -2.774837017059326
    5. ' de' → logprob: -2.899837017059326
    6. '   ' → logprob: -3.149837017059326
    7. ' =' → logprob: -3.274837017059326
    8. ' d' → logprob: -3.524837017059326
    9. ' )' → logprob: -3.899837017059326
    10. '(i' → logprob: -4.024837017059326

Token 539: ' k' (ID: 372)
  Prédit: ' passage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' passage' → logprob: -0.3306577801704407
    2. 'k' → logprob: -2.330657720565796
    3. 'pass' → logprob: -2.955657720565796
    4. 'prem' → logprob: -3.455657720565796
    5. ' k' → logprob: -3.705657720565796
    6. ' prochain' → logprob: -4.455657958984375
    7. 'pas' → logprob: -4.455657958984375
    8. 'next' → logprob: -4.955657958984375
    9. ' next' → logprob: -5.205657958984375
    10. 'def' → logprob: -5.455657958984375

Token 540: '-i' (ID: 18499)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1826908588409424
    2. ')' → logprob: -2.3076908588409424
    3. ',' → logprob: -2.3076908588409424
    4. '   ' → logprob: -2.3076908588409424
    5. ']' → logprob: -2.5576908588409424
    6. ' ,' → logprob: -2.6826908588409424
    7. ' +' → logprob: -3.1826908588409424
    8. '  ' → logprob: -3.3076908588409424
    9. '][' → logprob: -3.3076908588409424
    10. '[' → logprob: -3.6826908588409424

Token 541: 'ème' (ID: 9767)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.543654203414917
    2. 'nd' → logprob: -1.543654203414917
    3. 'n' → logprob: -2.043654203414917
    4. 't' → logprob: -4.043654441833496
    5. 'nde' → logprob: -4.043654441833496
    6. 'ndice' → logprob: -4.668654441833496
    7. ')' → logprob: -4.793654441833496
    8. ']' → logprob: -5.168654441833496
    9. 'x' → logprob: -6.168654441833496
    10. 'dx' → logprob: -6.418654441833496

Token 542: ' promenade' (ID: 148184)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.10507364571094513
    2. ' passage' → logprob: -3.2300736904144287
    3. '_pass' → logprob: -3.3550736904144287
    4. '_' → logprob: -4.10507345199585
    5. ' pass' → logprob: -5.48007345199585
    6. ' ' → logprob: -6.48007345199585
    7. ' _' → logprob: -8.417573928833008
    8. 'def' → logprob: -8.542573928833008
    9. ')' → logprob: -8.730073928833008
    10. ' ' → logprob: -8.855073928833008

Token 543: ' peut' (ID: 9216)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20699602365493774
    2. 's' → logprob: -3.081995964050293
    3. '[' → logprob: -3.831995964050293
    4. ' )' → logprob: -3.831995964050293
    5. '   ' → logprob: -3.831995964050293
    6. ',' → logprob: -4.081995964050293
    7. ']' → logprob: -4.456995964050293
    8. '[i' → logprob: -4.956995964050293
    9. '<|end|>' → logprob: -5.706995964050293
    10. ' (' → logprob: -5.706995964050293

Token 544: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.11753422766923904
    2. ' être' → logprob: -3.2425341606140137
    3. 'd' → logprob: -3.4925341606140137
    4. ' varier' → logprob: -4.742534160614014
    5. 's' → logprob: -4.867534160614014
    6. 'changer' → logprob: -5.242534160614014
    7. ' changer' → logprob: -5.492534160614014
    8. 'dé' → logprob: -5.867534160614014
    9. ' dépend' → logprob: -5.867534160614014
    10. '```' → logprob: -5.992534160614014

Token 545: ' détermin' (ID: 62185)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8379391431808472
    2. ' (' → logprob: -1.5879391431808472
    3. ' ' → logprob: -2.4629392623901367
    4. '(' → logprob: -2.4629392623901367
    5. ' soit' → logprob: -2.7129392623901367
    6. ' either' → logprob: -3.7129392623901367
    7. 'determ' → logprob: -3.8379392623901367
    8. ' determined' → logprob: -4.087939262390137
    9. 'k' → logprob: -4.962939262390137
    10. '1' → logprob: -5.087939262390137

Token 546: 'ée' (ID: 2894)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.1637958139181137
    2. 'e' → logprob: -2.6637957096099854
    3. 'ée' → logprob: -3.5387957096099854
    4. 'u' → logprob: -3.7887957096099854
    5. '   ' → logprob: -4.5387959480285645
    6. 'er' → logprob: -5.0387959480285645
    7. ')' → logprob: -5.5387959480285645
    8. ' ' → logprob: -7.0387959480285645
    9. ' par' → logprob: -7.1637959480285645
    10. '_' → logprob: -7.1637959480285645

Token 547: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.014050556346774101
    2. 'par' → logprob: -5.014050483703613
    3. ')' → logprob: -5.889050483703613
    4. ' ' → logprob: -6.889050483703613
    5. ' by' → logprob: -7.139050483703613
    6. ' )' → logprob: -7.389050483703613
    7. '   ' → logprob: -7.389050483703613
    8. ',' → logprob: -7.764050483703613
    9. '```' → logprob: -8.514050483703613
    10. '       ' → logprob: -9.264050483703613

Token 548: ' k' (ID: 372)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -1.1028571128845215
    2. 'k' → logprob: -1.2278571128845215
    3. ' k' → logprob: -2.1028571128845215
    4. ' (' → logprob: -2.2278571128845215
    5. ' la' → logprob: -3.1028571128845215
    6. 'la' → logprob: -3.3528571128845215
    7. 'le' → logprob: -3.9778571128845215
    8. 'pass' → logprob: -4.2278571128845215
    9. ' le' → logprob: -5.3528571128845215
    10. '(par' → logprob: -5.4778571128845215

Token 549: ' mod' (ID: 1812)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1961474418640137
    2. ')' → logprob: -1.3211474418640137
    3. '       ' → logprob: -1.9461474418640137
    4. '[' → logprob: -2.8211474418640137
    5. '<|end|>' → logprob: -2.9461474418640137
    6. ',' → logprob: -3.6961474418640137
    7. 'def' → logprob: -4.071147441864014
    8. '    ' → logprob: -4.071147441864014
    9. ' ' → logprob: -4.196147441864014
    10. ':' → logprob: -4.446147441864014

Token 550: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020652047533076257
    2. ' ' → logprob: -8.50020694732666
    3. '(' → logprob: -12.75020694732666
    4. '[' → logprob: -18.125205993652344
    5. '۲' → logprob: -18.187705993652344
    6. ' (' → logprob: -18.312705993652344
    7. '=' → logprob: -18.812705993652344
    8. ' ' → logprob: -18.875205993652344
    9. '２' → logprob: -19.000205993652344
    10. '```' → logprob: -19.062705993652344

Token 551: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.822646693966817e-06
    2. ' ' → logprob: -11.875007629394531
    3. '(' → logprob: -14.000007629394531
    4. '۲' → logprob: -18.25000762939453
    5. ' (' → logprob: -18.50000762939453
    6. '   ' → logprob: -19.18750762939453
    7. '```' → logprob: -19.31250762939453
    8. '２' → logprob: -19.93750762939453
    9. '২' → logprob: -20.25000762939453
    10. '₂' → logprob: -20.56250762939453

Token 552: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49166226387023926
    2. '   ' → logprob: -1.4916622638702393
    3. ':' → logprob: -2.4916622638702393
    4. ')' → logprob: -3.9916622638702393
    5. ' 
' → logprob: -4.36666202545166
    6. '        
' → logprob: -4.86666202545166
    7. '    
' → logprob: -5.24166202545166
    8. '  
' → logprob: -5.36666202545166
    9. 'def' → logprob: -5.74166202545166
    10. '
' → logprob: -5.74166202545166

Token 553: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05423536151647568
    2. '<|end|>' → logprob: -4.429235458374023
    3. '        
' → logprob: -4.679235458374023
    4. '   ' → logprob: -4.679235458374023
    5. ')' → logprob: -4.804235458374023
    6. '\' → logprob: -6.179235458374023
    7. ',' → logprob: -6.304235458374023
    8. ':' → logprob: -6.929235458374023
    9. '        ' → logprob: -7.054235458374023
    10. ' ' → logprob: -7.054235458374023

Token 554: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02767196297645569
    2. 'next' → logprob: -5.027671813964844
    3. '        
' → logprob: -5.527671813964844
    4. 'def' → logprob: -5.652671813964844
    5. ' next' → logprob: -6.027671813964844
    6. '   ' → logprob: -6.152671813964844
    7. ')' → logprob: -6.402671813964844
    8. 'dp' → logprob: -6.777671813964844
    9. '\' → logprob: -7.277671813964844
    10. '#' (adapté à ' #') → logprob: -7.277671813964844

Token 555: ' Par' (ID: 3371)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0276859998703003
    2. '       ' → logprob: -1.5276859998703003
    3. 'next' → logprob: -1.5276859998703003
    4. ' next' → logprob: -2.52768611907959
    5. ' dp' → logprob: -2.77768611907959
    6. '#' → logprob: -4.15268611907959
    7. 'max' → logprob: -4.40268611907959
    8. 'from' → logprob: -4.65268611907959
    9. ' max' → logprob: -5.27768611907959
    10. '   ' → logprob: -5.27768611907959

Token 556: ' conséquent' (ID: 117211)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.414667010307312
    2. 't' → logprob: -1.539667010307312
    3. 'import' → logprob: -3.7896671295166016
    4. 'd' → logprob: -3.7896671295166016
    5. '#' → logprob: -4.414667129516602
    6. '   ' → logprob: -5.414667129516602
    7. '```' → logprob: -5.539667129516602
    8. 'e' → logprob: -5.789667129516602
    9. 'suite' → logprob: -5.789667129516602
    10. 'l' → logprob: -5.789667129516602

Token 557: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10501354187726974
    2. '       ' → logprob: -2.480013608932495
    3. ' ,' → logprob: -4.980013370513916
    4. ':' → logprob: -5.480013370513916
    5. 'def' → logprob: -6.355013370513916
    6. '   ' → logprob: -6.855013370513916
    7. 'import' → logprob: -7.730013370513916
    8. ' ' → logprob: -8.230013847351074
    9. '#' → logprob: -8.730013847351074
    10. ' def' → logprob: -9.105013847351074

Token 558: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8505221009254456
    2. '       ' → logprob: -1.8505220413208008
    3. 'next' → logprob: -2.100522041320801
    4. 'dp' → logprob: -2.475522041320801
    5. ' next' → logprob: -2.725522041320801
    6. 'max' → logprob: -3.850522041320801
    7. ' on' → logprob: -3.975522041320801
    8. ' #' → logprob: -3.975522041320801
    9. ' dp' → logprob: -3.975522041320801
    10. ' max' → logprob: -4.350522041320801

Token 559: ' fait' (ID: 7473)
  Prédit: ' peux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' peux' → logprob: -0.8904459476470947
    2. '#' → logprob: -1.7654459476470947
    3. '       ' → logprob: -1.7654459476470947
    4. 'vais' → logprob: -2.8904459476470947
    5. 'def' → logprob: -3.2654459476470947
    6. 'pe' → logprob: -3.5154459476470947
    7. 'continue' → logprob: -3.7654459476470947
    8. ' vais' → logprob: -4.390445709228516
    9. 'import' → logprob: -4.515445709228516
    10. 'need' → logprob: -4.515445709228516

Token 560: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8729753494262695
    2. 'def' → logprob: -1.8729753494262695
    3. 'une' → logprob: -2.8729753494262695
    4. 'un' → logprob: -3.1229753494262695
    5. ' une' → logprob: -3.1229753494262695
    6. 'import' → logprob: -3.4979753494262695
    7. ' un' → logprob: -3.4979753494262695
    8. ' deux' → logprob: -3.4979753494262695
    9. ' ' → logprob: -3.6229753494262695
    10. 'par' → logprob: -3.9979753494262695

Token 561: ' mod' (ID: 1812)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9357883930206299
    2. 'suite' → logprob: -1.3107883930206299
    3. 'next' → logprob: -2.06078839302063
    4. '#' → logprob: -2.68578839302063
    5. 'from' → logprob: -3.81078839302063
    6. 'import' → logprob: -3.93578839302063
    7. 'dp' → logprob: -4.060788154602051
    8. ' next' → logprob: -4.435788154602051
    9. 'dire' → logprob: -4.435788154602051
    10. ' suite' → logprob: -4.560788154602051

Token 562: 'él' (ID: 6778)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5859204530715942
    2. ' ' → logprob: -0.8359204530715942
    3. 'e' → logprob: -5.710920333862305
    4. '```' → logprob: -5.710920333862305
    5. 'ulo' → logprob: -7.210920333862305
    6. 'el' → logprob: -7.335920333862305
    7. ' grid' → logprob: -8.085920333862305
    8. 'ule' → logprob: -8.460920333862305
    9. '  ' → logprob: -8.710920333862305
    10. ' ' → logprob: -8.835920333862305

Token 563: 'isation' (ID: 6993)
  Prédit: 'ule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.9611638188362122
    2. 'èle' → logprob: -1.3361637592315674
    3. 'é' → logprob: -1.8361637592315674
    4. 'e' → logprob: -2.3361637592315674
    5. 'el' → logprob: -3.4611637592315674
    6. 'elif' → logprob: -3.7111637592315674
    7. 'él' → logprob: -4.0861639976501465
    8. '       ' → logprob: -5.2111639976501465
    9. 'ulo' → logprob: -5.4611639976501465
    10. 'è' → logprob: -5.5861639976501465

Token 564: ' suivante' (ID: 107439)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6991456151008606
    2. '       ' → logprob: -2.074145555496216
    3. ' de' → logprob: -2.449145555496216
    4. 'import' → logprob: -2.449145555496216
    5. ':' → logprob: -3.574145555496216
    6. 'def' → logprob: -3.574145555496216
    7. ' des' → logprob: -3.699145555496216
    8. ' suivante' → logprob: -3.824145555496216
    9. ' of' → logprob: -4.324145793914795
    10. '    ' → logprob: -4.324145793914795

Token 565: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8829652667045593
    2. '       ' → logprob: -1.132965326309204
    3. ' :' → logprob: -2.132965326309204
    4. '   ' → logprob: -3.132965326309204
    5. ',' → logprob: -4.007965087890625
    6. 'def' → logprob: -4.007965087890625
    7. '        
' → logprob: -4.382965087890625
    8. 'import' → logprob: -4.882965087890625
    9. ' 
' → logprob: -5.007965087890625
    10. ' ' → logprob: -5.132965087890625

Token 566: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.16858744621276855
    2. 'k' → logprob: -3.1685874462127686
    3. 'cha' → logprob: -3.2935874462127686
    4. ' k' → logprob: -3.6685874462127686
    5. '#' → logprob: -4.543587684631348
    6. 'each' → logprob: -4.793587684631348
    7. ' la' → logprob: -5.418587684631348
    8. ' sim' → logprob: -5.793587684631348
    9. 'la' → logprob: -5.918587684631348
    10. 'def' → logprob: -5.918587684631348

Token 567: ' intersection' (ID: 42002)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.2490314245224
    2. 'case' → logprob: -1.6240314245224
    3. 'position' → logprob: -2.2490315437316895
    4. ' (' → logprob: -2.3740315437316895
    5. ' case' → logprob: -2.4990315437316895
    6. 'i' → logprob: -2.8740315437316895
    7. ' i' → logprob: -3.2490315437316895
    8. ' position' → logprob: -3.3740315437316895
    9. 'pos' → logprob: -3.4990315437316895
    10. '(' → logprob: -3.8740315437316895

Token 568: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19507309794425964
    2. '   ' → logprob: -2.820073127746582
    3. ' :' → logprob: -2.820073127746582
    4. ',' → logprob: -4.320073127746582
    5. '       ' → logprob: -4.570073127746582
    6. 'def' → logprob: -5.320073127746582
    7. '<|end|>' → logprob: -5.445073127746582
    8. '):' → logprob: -5.695073127746582
    9. ':
' → logprob: -5.695073127746582
    10. '#' → logprob: -6.070073127746582

Token 569: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1034938246011734
    2. ' dp' → logprob: -3.4784939289093018
    3. 'def' → logprob: -3.7284939289093018
    4. 'dp' → logprob: -4.728493690490723
    5. '#' → logprob: -5.103493690490723
    6. 'from' → logprob: -5.478493690490723
    7. '        
' → logprob: -5.603493690490723
    8. ' directions' → logprob: -5.853493690490723
    9. ' from' → logprob: -5.978493690490723
    10. ' next' → logprob: -6.478493690490723

Token 570: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1100218296051025
    2. ' dp' → logprob: -1.2350218296051025
    3. 'dp' → logprob: -2.3600218296051025
    4. ' next' → logprob: -2.7350218296051025
    5. 'from' → logprob: -3.6100218296051025
    6. 'next' → logprob: -3.7350218296051025
    7. 'def' → logprob: -3.9850218296051025
    8. ' from' → logprob: -3.9850218296051025
    9. ' max' → logprob: -4.110021591186523
    10. ' directions' → logprob: -4.235021591186523

Token 571: ' direction' (ID: 9262)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.3010318279266357
    2. ' dp' → logprob: -1.8010318279266357
    3. 'next' → logprob: -2.0510318279266357
    4. '#' → logprob: -2.3010318279266357
    5. ' next' → logprob: -2.4260318279266357
    6. '       ' → logprob: -2.9260318279266357
    7. 'def' → logprob: -3.1760318279266357
    8. 'from' → logprob: -3.3010318279266357
    9. ' from' → logprob: -4.676032066345215
    10. ' f' → logprob: -4.676032066345215

Token 572: ' actuelle' (ID: 104951)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_state' → logprob: -1.301747441291809
    2. '_states' → logprob: -1.301747441291809
    3. '_par' → logprob: -1.551747441291809
    4. ' =' → logprob: -2.4267473220825195
    5. 's' → logprob: -2.9267473220825195
    6. '_mod' → logprob: -3.0517473220825195
    7. ',' → logprob: -4.1767473220825195
    8. '_toggle' → logprob: -4.3017473220825195
    9. '_' → logprob: -5.9267473220825195
    10. '_at' → logprob: -6.0517473220825195

Token 573: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0525531768798828
    2. ',' → logprob: -1.4275531768798828
    3. ' =' → logprob: -1.6775531768798828
    4. ')' → logprob: -3.052553176879883
    5. ' ,' → logprob: -3.427553176879883
    6. 'es' → logprob: -4.052553176879883
    7. '_' → logprob: -4.052553176879883
    8. '[' → logprob: -4.177553176879883
    9. '_state' → logprob: -4.302553176879883
    10. '_grid' → logprob: -4.802553176879883

Token 574: ' initial' (ID: 4871)
  Prédit: '(grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(grid' → logprob: -0.6854588985443115
    2. ' grid' → logprob: -1.6854588985443115
    3. ' (' → logprob: -1.8104588985443115
    4. 'grid' → logprob: -1.9354588985443115
    5. '(direction' → logprob: -7.310459136962891
    6. 'direction' → logprob: -7.560459136962891
    7. ' direction' → logprob: -8.18545913696289
    8. '   ' → logprob: -8.43545913696289
    9. '(d' → logprob: -8.56045913696289
    10. ' ' → logprob: -9.24795913696289

Token 575: '_direction' (ID: 64332)
  Prédit: '_grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -1.0449634790420532
    2. '_' → logprob: -1.4199634790420532
    3. ')' → logprob: -2.2949633598327637
    4. '[i' → logprob: -2.2949633598327637
    5. '[' → logprob: -2.5449633598327637
    6. '_direction' → logprob: -3.7949633598327637
    7. 'grid' → logprob: -4.169963359832764
    8. '_[' → logprob: -4.544963359832764
    9. '   ' → logprob: -4.919963359832764
    10. ',' → logprob: -5.044963359832764

Token 576: ' ^' (ID: 7602)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.496261477470398
    2. '
' → logprob: -1.746261477470398
    3. ' +' → logprob: -1.996261477470398
    4. ')' → logprob: -2.3712615966796875
    5. 'def' → logprob: -2.6212615966796875
    6. '[' → logprob: -2.7462615966796875
    7. '   ' → logprob: -3.1212615966796875
    8. ',' → logprob: -3.3712615966796875
    9. '```' → logprob: -3.7462615966796875
    10. ' ' → logprob: -3.8712615966796875

Token 577: ' (' (ID: 350)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.39319688081741333
    2. ' (' → logprob: -1.1431968212127686
    3. '(' → logprob: -5.268197059631348
    4. '(p' → logprob: -8.268197059631348
    5. '((' → logprob: -8.768197059631348
    6. ' ((' → logprob: -8.768197059631348
    7. '(N' → logprob: -9.268197059631348
    8. 'k' → logprob: -9.393197059631348
    9. '(par' → logprob: -9.643197059631348
    10. '(pass' → logprob: -9.643197059631348

Token 578: 'nombre' (ID: 28576)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.47140440344810486
    2. 'k' → logprob: -1.2214044332504272
    3. ' (' → logprob: -2.5964043140411377
    4. ' k' → logprob: -5.721404552459717
    5. '(' → logprob: -7.096404552459717
    6. 'pass' → logprob: -7.346404552459717
    7. '1' → logprob: -8.346404075622559
    8. '((' → logprob: -8.346404075622559
    9. '(pass' → logprob: -8.471404075622559
    10. 'par' → logprob: -8.596404075622559

Token 579: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.3584498167037964
    2. '_des' → logprob: -2.233449935913086
    3. ' de' → logprob: -2.483449935913086
    4. 'de' → logprob: -2.983449935913086
    5. '_pass' → logprob: -3.483449935913086
    6. 'des' → logprob: -4.608449935913086
    7. '   ' → logprob: -5.108449935913086
    8. ' des' → logprob: -5.733449935913086
    9. '_' → logprob: -5.858449935913086
    10. ' ' → logprob: -6.733449935913086

Token 580: '_pass' (ID: 36293)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.04281041398644447
    2. 'passes' → logprob: -3.2928104400634766
    3. ' passages' → logprob: -5.667810440063477
    4. ' pass' → logprob: -8.042810440063477
    5. ' ' → logprob: -8.417810440063477
    6. 'vis' → logprob: -8.792810440063477
    7. '_pass' → logprob: -9.292810440063477
    8. 'par' → logprob: -9.417810440063477
    9. 'pas' → logprob: -9.667810440063477
    10. 'times' → logprob: -9.667810440063477

Token 581: 'ages' (ID: 1461)
  Prédit: 'ages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ages' → logprob: -0.5771205425262451
    2. 'age' → logprob: -0.8271205425262451
    3. 'es' → logprob: -7.202120780944824
    4. 'sage' → logprob: -8.702120780944824
    5. '```' → logprob: -10.327120780944824
    6. 'e' → logprob: -10.577120780944824
    7. 'import' → logprob: -11.202120780944824
    8. 'passes' → logprob: -11.327120780944824
    9. 's' → logprob: -11.452120780944824
    10. 'def' → logprob: -11.577120780944824

Token 582: ' mod' (ID: 1812)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.8910431265830994
    2. ')' → logprob: -1.3910431861877441
    3. '[i' → logprob: -2.141043186187744
    4. ' %' → logprob: -2.266043186187744
    5. '_pass' → logprob: -3.266043186187744
    6. '   ' → logprob: -4.391043186187744
    7. '_par' → logprob: -4.391043186187744
    8. '[(' → logprob: -4.641043186187744
    9. ')%' → logprob: -4.766043186187744
    10. ' ' → logprob: -5.141043186187744

Token 583: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.054889049381017685
    2. ' ' → logprob: -2.929888963699341
    3. ' ' → logprob: -12.554888725280762
    4. '```' → logprob: -13.054888725280762
    5. '1' → logprob: -15.492388725280762
    6. '​' → logprob: -16.117389678955078
    7. ')' → logprob: -16.429889678955078
    8. '`' → logprob: -16.492389678955078
    9. '۲' → logprob: -16.804889678955078
    10. '``' → logprob: -16.929889678955078

Token 584: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.52919222577475e-05
    2. ' ' → logprob: -9.500075340270996
    3. '```' → logprob: -15.125075340270996
    4. '   ' → logprob: -16.87507438659668
    5. ')' → logprob: -18.12507438659668
    6. ' ' → logprob: -18.37507438659668
    7. '۲' → logprob: -18.75007438659668
    8. '２' → logprob: -19.06257438659668
    9. '  ' → logprob: -19.12507438659668
    10. '``' → logprob: -19.18757438659668

Token 585: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000509187753777951
    2. '))' → logprob: -8.125509262084961
    3. ' )' → logprob: -9.125509262084961
    4. '       ' → logprob: -10.750509262084961
    5. ')
' → logprob: -10.750509262084961
    6. ')))' → logprob: -11.125509262084961
    7. ')`' → logprob: -11.500509262084961
    8. '_)' → logprob: -11.875509262084961
    9. '   ' → logprob: -12.000509262084961
    10. '[' → logprob: -12.625509262084961

Token 586: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010651368647813797
    2. '        
' → logprob: -5.635651588439941
    3. '\' → logprob: -6.635651588439941
    4. ')' → logprob: -6.760651588439941
    5. '```' → logprob: -7.010651588439941
    6. '   ' → logprob: -7.135651588439941
    7. '<|end|>' → logprob: -7.260651588439941
    8. '\n' → logprob: -7.510651588439941
    9. '[' → logprob: -8.260651588439941
    10. '  
' → logprob: -9.010651588439941

Token 587: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21975462138652802
    2. 'dp' → logprob: -2.719754695892334
    3. 'next' → logprob: -3.219754695892334
    4. '#' (adapté à ' #') → logprob: -3.594754695892334
    5. ' next' → logprob: -3.969754695892334
    6. 'max' → logprob: -4.719754695892334
    7. ' dp' → logprob: -4.844754695892334
    8. '   ' → logprob: -4.969754695892334
    9. 'n' → logprob: -5.469754695892334
    10. 'size' → logprob: -5.719754695892334

Token 588: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.1107113361358643
    2. '       ' → logprob: -1.6107113361358643
    3. 'next' → logprob: -1.8607113361358643
    4. 'max' → logprob: -2.1107113361358643
    5. '#' → logprob: -2.4857113361358643
    6. '   ' → logprob: -3.6107113361358643
    7. ' next' → logprob: -4.110711097717285
    8. ' max' → logprob: -4.485711097717285
    9. 'size' → logprob: -4.485711097717285
    10. 'from' → logprob: -4.985711097717285

Token 589: ' peut' (ID: 9216)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.5450621843338013
    2. ' continue' → logprob: -1.5450621843338013
    3. '#' → logprob: -1.6700621843338013
    4. 'import' → logprob: -3.0450620651245117
    5. '   ' → logprob: -3.0450620651245117
    6. '       ' → logprob: -3.1700620651245117
    7. ' #' → logprob: -3.2950620651245117
    8. 'continue' → logprob: -3.4200620651245117
    9. ' =' → logprob: -4.045062065124512
    10. '_' → logprob: -4.170062065124512

Token 590: ' donc' (ID: 14206)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -0.9394988417625427
    2. 'contin' → logprob: -1.8144989013671875
    3. '   ' → logprob: -2.9394989013671875
    4. '#' → logprob: -2.9394989013671875
    5. ' stock' → logprob: -3.0644989013671875
    6. ' représ' → logprob: -3.1894989013671875
    7. '       ' → logprob: -3.3144989013671875
    8. 'stock' → logprob: -3.5644989013671875
    9. ' utiliser' → logprob: -4.1894989013671875
    10. 'def' → logprob: -4.1894989013671875

Token 591: ' représ' (ID: 31534)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -0.6245672106742859
    2. ' créer' → logprob: -2.7495672702789307
    3. 'contin' → logprob: -2.8745672702789307
    4. ' stock' → logprob: -2.8745672702789307
    5. 'def' → logprob: -2.9995672702789307
    6. '#' → logprob: -3.1245672702789307
    7. ' utiliser' → logprob: -3.6245672702789307
    8. 'pré' → logprob: -3.6245672702789307
    9. '   ' → logprob: -4.249567031860352
    10. ' représ' → logprob: -4.374567031860352

Token 592: 'enter' (ID: 3547)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.03523625060915947
    2. '=' → logprob: -3.660236358642578
    3. ' =' → logprob: -5.410236358642578
    4. '   ' → logprob: -6.910236358642578
    5. ')' → logprob: -7.160236358642578
    6. 'def' → logprob: -7.660236358642578
    7. 'érer' → logprob: -7.660236358642578
    8. ']' → logprob: -7.785236358642578
    9. 'e' → logprob: -7.910236358642578
    10. '_' → logprob: -9.535236358642578

Token 593: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6033422350883484
    2. ' chaque' → logprob: -1.9783422946929932
    3. ' les' → logprob: -2.603342294692993
    4. ' ' → logprob: -3.228342294692993
    5. 'les' → logprob: -3.478342294692993
    6. 'la' → logprob: -3.603342294692993
    7. 'f' → logprob: -3.728342294692993
    8. ' l' → logprob: -3.978342294692993
    9. 'le' → logprob: -4.353342056274414
    10. '   ' → logprob: -4.478342056274414

Token 594: ' position' (ID: 4010)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.5168113708496094
    2. 'next' → logprob: -2.0168113708496094
    3. ' transition' → logprob: -3.1418113708496094
    4. 'def' → logprob: -3.3918113708496094
    5. 'position' → logprob: -3.3918113708496094
    6. ' position' → logprob: -3.7668113708496094
    7. ' direction' → logprob: -3.8918113708496094
    8. 'state' → logprob: -4.016811370849609
    9. ' state' → logprob: -4.516811370849609
    10. 'transition' → logprob: -4.516811370849609

Token 595: ' finale' (ID: 37759)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7527209520339966
    2. ',' → logprob: -2.002720832824707
    3. '_' → logprob: -2.002720832824707
    4. ' ,' → logprob: -3.002720832824707
    5. '[' → logprob: -3.127720832824707
    6. '  ' → logprob: -3.377720832824707
    7. ' suivante' → logprob: -3.377720832824707
    8. 's' → logprob: -3.502720832824707
    9. '   ' → logprob: -4.252720832824707
    10. ')' → logprob: -4.502720832824707

Token 596: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1068832874298096
    2. '_' → logprob: -1.4818832874298096
    3. ' ' → logprob: -1.7318832874298096
    4. '   ' → logprob: -2.3568832874298096
    5. '[' → logprob: -2.8568832874298096
    6. ')' → logprob: -3.7318832874298096
    7. 's' → logprob: -4.1068830490112305
    8. ' ,' → logprob: -4.7318830490112305
    9. ' =' → logprob: -4.8568830490112305
    10. '_after' → logprob: -4.8568830490112305

Token 597: ' la' (ID: 557)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9284101128578186
    2. ' chaque' → logprob: -1.3034100532531738
    3. ' la' → logprob: -2.178410053253174
    4. '(' → logprob: -2.928410053253174
    5. 'i' → logprob: -3.678410053253174
    6. ' i' → logprob: -4.053410053253174
    7. '(i' → logprob: -4.053410053253174
    8. ' l' → logprob: -4.178410053253174
    9. ' ' → logprob: -4.178410053253174
    10. 'l' → logprob: -4.428410053253174

Token 598: ' promenade' (ID: 148184)
  Prédit: 'prom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prom' → logprob: -1.1582837104797363
    2. ' promenade' → logprob: -1.5332837104797363
    3. ' prochaine' → logprob: -2.0332837104797363
    4. 'position' → logprob: -2.5332837104797363
    5. 'pass' → logprob: -3.4082837104797363
    6. 'next' → logprob: -3.5332837104797363
    7. 'mar' → logprob: -3.6582837104797363
    8. ' marche' → logprob: -3.6582837104797363
    9. 'pas' → logprob: -4.158283710479736
    10. ' passage' → logprob: -4.408283710479736

Token 599: ' en' (ID: 469)
  Prédit: ' après'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' après' → logprob: -0.6848656535148621
    2. ',' → logprob: -2.059865713119507
    3. 's' → logprob: -2.184865713119507
    4. ' ' → logprob: -3.059865713119507
    5. ' suivante' → logprob: -3.184865713119507
    6. '   ' → logprob: -3.309865713119507
    7. ')' → logprob: -4.184865474700928
    8. '_after' → logprob: -4.309865474700928
    9. ' ,' → logprob: -4.559865474700928
    10. 'def' → logprob: -4.559865474700928

Token 600: ' termes' (ID: 72480)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.7572051882743835
    2. 'de' → logprob: -1.6322052478790283
    3. ' fonction' → logprob: -3.0072052478790283
    4. 'def' → logprob: -3.1322052478790283
    5. '2' → logprob: -3.2572052478790283
    6. '[(' → logprob: -3.3822052478790283
    7. '```' → logprob: -3.6322052478790283
    8. 'f' → logprob: -4.257205009460449
    9. '[' → logprob: -4.632205009460449
    10. 'dé' → logprob: -4.632205009460449

Token 601: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9179354310035706
    2. ' de' → logprob: -1.2929353713989258
    3. ')' → logprob: -2.292935371398926
    4. ' d' → logprob: -2.917935371398926
    5. ' des' → logprob: -2.917935371398926
    6. '[' → logprob: -3.667935371398926
    7. ' of' → logprob: -4.042935371398926
    8. '_de' → logprob: -4.292935371398926
    9. 'de' → logprob: -4.417935371398926
    10. 'def' → logprob: -5.042935371398926

Token 602: ' N' (ID: 478)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -1.3527100086212158
    2. ' la' → logprob: -1.9777100086212158
    3. 'position' → logprob: -2.102710008621216
    4. 'la' → logprob: -2.477710008621216
    5. ' (' → logprob: -3.227710008621216
    6. 'positions' → logprob: -3.352710008621216
    7. '(' → logprob: -3.852710008621216
    8. 'l' → logprob: -3.977710008621216
    9. ' parity' → logprob: -3.977710008621216
    10. 'def' → logprob: -3.977710008621216

Token 603: ' mod' (ID: 1812)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42226096987724304
    2. '   ' → logprob: -1.9222609996795654
    3. ',' → logprob: -2.1722609996795654
    4. '       ' → logprob: -3.5472609996795654
    5. ' )' → logprob: -4.922260761260986
    6. 'def' → logprob: -5.047260761260986
    7. ']' → logprob: -5.172260761260986
    8. 'import' → logprob: -5.172260761260986
    9. '):' → logprob: -5.922260761260986
    10. '[' → logprob: -6.047260761260986

Token 604: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.14273230731487274
    2. ' ' → logprob: -2.0177323818206787
    3. ' ' → logprob: -10.892732620239258
    4. '```' → logprob: -11.392732620239258
    5. ' (' → logprob: -11.767732620239258
    6. '(' → logprob: -12.017732620239258
    7. ' two' → logprob: -12.955232620239258
    8. '[' → logprob: -13.017732620239258
    9. '  ' → logprob: -14.392732620239258
    10. 'space' → logprob: -14.580232620239258

Token 605: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.87500286102295
    3. '(' → logprob: -14.50000286102295
    4. '```' → logprob: -19.000003814697266
    5. ' (' → logprob: -19.875003814697266
    6. '۲' → logprob: -20.125003814697266
    7. '[' → logprob: -20.125003814697266
    8. '   ' → logprob: -20.312503814697266
    9. '=' → logprob: -20.562503814697266
    10. '２' → logprob: -21.000003814697266

Token 606: '

' (ID: 279)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12173595279455185
    2. '   ' → logprob: -3.7467360496520996
    3. '):' → logprob: -3.9967360496520996
    4. ')' → logprob: -4.2467360496521
    5. ':
' → logprob: -4.4967360496521
    6. '
' → logprob: -4.6217360496521
    7. '       ' → logprob: -5.1217360496521
    8. ' :' → logprob: -5.2467360496521
    9. ',' → logprob: -5.3717360496521
    10. '\n' → logprob: -5.4967360496521

Token 607: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14350704848766327
    2. '        
' → logprob: -3.5185070037841797
    3. '   ' → logprob: -3.8935070037841797
    4. '
' → logprob: -4.01850700378418
    5. ':' → logprob: -4.26850700378418
    6. '\n' → logprob: -4.51850700378418
    7. ')' → logprob: -5.14350700378418
    8. '\' → logprob: -5.26850700378418
    9. ',' → logprob: -5.64350700378418
    10. '<|end|>' → logprob: -5.76850700378418

Token 608: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11642996966838837
    2. '        
' → logprob: -2.9914300441741943
    3. '
' → logprob: -3.6164300441741943
    4. '   ' → logprob: -4.491429805755615
    5. '\n' → logprob: -5.741429805755615
    6. ' 
' → logprob: -5.991429805755615
    7. '        

' → logprob: -6.491429805755615
    8. 'import' → logprob: -6.616429805755615
    9. '    
' → logprob: -6.616429805755615
    10. 'dp' → logprob: -6.741429805755615

Token 609: ' La' (ID: 3038)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6858115196228027
    2. '#' → logprob: -1.9358115196228027
    3. 'next' → logprob: -1.9358115196228027
    4. 'max' → logprob: -2.3108115196228027
    5. '       ' → logprob: -3.0608115196228027
    6. '   ' → logprob: -4.185811519622803
    7. 'from' → logprob: -4.185811519622803
    8. 'pos' → logprob: -5.060811519622803
    9. 'def' → logprob: -5.060811519622803
    10. 'size' → logprob: -5.560811519622803

Token 610: ' solution' (ID: 7578)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.194347620010376
    2. '#' → logprob: -1.444347620010376
    3. 'def' → logprob: -1.944347620010376
    4. ' directions' → logprob: -2.444347620010376
    5. 'dire' → logprob: -2.944347620010376
    6. ' direction' → logprob: -3.569347620010376
    7. 'next' → logprob: -3.819347620010376
    8. ' code' → logprob: -4.069347381591797
    9. ' positions' → logprob: -4.319347381591797
    10. ' position' → logprob: -4.444347381591797

Token 611: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8630649447441101
    2. ':' → logprob: -0.9880649447441101
    3. 'def' → logprob: -1.8630650043487549
    4. '   ' → logprob: -3.738065004348755
    5. '#' → logprob: -4.863064765930176
    6. '=' → logprob: -5.113064765930176
    7. 'import' → logprob: -5.613064765930176
    8. ' suivante' → logprob: -6.113064765930176
    9. '       ' → logprob: -6.738064765930176
    10. ':
' → logprob: -6.738064765930176

Token 612: ' donc' (ID: 14206)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.760364294052124
    2. '   ' → logprob: -0.885364294052124
    3. 'import' → logprob: -3.760364294052124
    4. '```' → logprob: -4.010364532470703
    5. '    ' → logprob: -4.260364532470703
    6. '       ' → logprob: -4.635364532470703
    7. ' suivante' → logprob: -4.635364532470703
    8. ' =' → logprob: -4.635364532470703
    9. ' de' → logprob: -5.260364532470703
    10. ' donc' → logprob: -5.385364532470703

Token 613: ':
' (ID: 734)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.517177939414978
    2. ' d' → logprob: -1.767177939414978
    3. 'def' → logprob: -2.0171780586242676
    4. 'de' → logprob: -3.3921780586242676
    5. ':' → logprob: -4.017178058624268
    6. '   ' → logprob: -4.267178058624268
    7. '```' → logprob: -4.267178058624268
    8. 'import' → logprob: -5.517178058624268
    9. 'd' → logprob: -6.017178058624268
    10. '    ' → logprob: -6.517178058624268

Token 614: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012846175581216812
    2. '   ' → logprob: -5.262845993041992
    3. 'def' → logprob: -6.387845993041992
    4. '        ' → logprob: -6.512845993041992
    5. '        
' → logprob: -7.012845993041992
    6. 'import' → logprob: -7.137845993041992
    7. '```' → logprob: -7.262845993041992
    8. '    ' → logprob: -7.387845993041992
    9. ' def' → logprob: -8.012845993041992
    10. 'from' → logprob: -8.137845993041992

Token 615: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6364573240280151
    2. '   ' → logprob: -1.0114573240280151
    3. ' dp' → logprob: -3.3864574432373047
    4. 'dp' → logprob: -4.511457443237305
    5. ' pos' → logprob: -4.636457443237305
    6. 'pos' → logprob: -5.011457443237305
    7. '```' → logprob: -5.261457443237305
    8. ' from' → logprob: -5.511457443237305
    9. 'def' → logprob: -5.511457443237305
    10. '#' (adapté à ' #') → logprob: -5.636457443237305

Token 616: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.45870688557624817
    2. '       ' → logprob: -2.708706855773926
    3. 'def' → logprob: -3.208706855773926
    4. ' #' → logprob: -3.333706855773926
    5. 'from' → logprob: -3.333706855773926
    6. 'dire' → logprob: -3.583706855773926
    7. 'dp' → logprob: -3.708706855773926
    8. '   ' → logprob: -4.083706855773926
    9. 'next' → logprob: -4.333706855773926
    10. 'pos' → logprob: -4.708706855773926

Token 617: ' Tr' (ID: 1514)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.3058245182037354
    2. '#' → logprob: -1.4308245182037354
    3. 'dp' → logprob: -1.5558245182037354
    4. 'dire' → logprob: -3.0558245182037354
    5. 'for' → logprob: -3.3058245182037354
    6. ' dp' → logprob: -3.9308245182037354
    7. 'def' → logprob: -3.9308245182037354
    8. 'Créer' → logprob: -4.055824279785156
    9. 'On' → logprob: -4.305824279785156
    10. ' from' → logprob: -4.305824279785156

Token 618: 'acer' (ID: 17263)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5637377500534058
    2. 'ans' → logprob: -1.9387377500534058
    3. 'a' → logprob: -2.4387378692626953
    4. 'ack' → logprob: -2.8137378692626953
    5. '#' → logprob: -3.3137378692626953
    6. 'av' → logprob: -4.438737869262695
    7. 'e' → logprob: -4.438737869262695
    8. 'averse' → logprob: -4.438737869262695
    9. 'ue' → logprob: -4.688737869262695
    10. 'r' → logprob: -4.938737869262695

Token 619: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8634827733039856
    2. ' la' → logprob: -0.9884827733039856
    3. ' le' → logprob: -3.738482713699341
    4. 'def' → logprob: -4.11348295211792
    5. '```' → logprob: -4.23848295211792
    6. '       ' → logprob: -4.48848295211792
    7. '#' → logprob: -4.48848295211792
    8. '    ' → logprob: -4.61348295211792
    9. 'er' → logprob: -4.61348295211792
    10. ' #' → logprob: -4.61348295211792

Token 620: ' une' (ID: 2463)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.4362231492996216
    2. 'une' → logprob: -2.061223030090332
    3. 'la' → logprob: -2.061223030090332
    4. 'les' → logprob: -2.811223030090332
    5. 'l' → logprob: -3.061223030090332
    6. '#' → logprob: -3.186223030090332
    7. 'de' → logprob: -3.311223030090332
    8. 'un' → logprob: -3.311223030090332
    9. ' deux' → logprob: -3.311223030090332
    10. '   ' → logprob: -3.436223030090332

Token 621: ' première' (ID: 23423)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.5843532085418701
    2. 'dp' → logprob: -1.5843532085418701
    3. 'direction' → logprob: -2.58435320854187
    4. '#' → logprob: -2.83435320854187
    5. ' direction' → logprob: -2.95935320854187
    6. 'gr' → logprob: -3.08435320854187
    7. 'range' → logprob: -3.20935320854187
    8. 'for' → logprob: -3.45935320854187
    9. 'large' → logprob: -3.58435320854187
    10. 'dire' → logprob: -3.95935320854187

Token 622: ' matr' (ID: 25095)
  Prédit: ' étape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' étape' → logprob: -0.7386009693145752
    2. 'part' → logprob: -1.2386009693145752
    3. ' partie' → logprob: -2.488600969314575
    4. 'ligne' → logprob: -2.988600969314575
    5. 'ét' → logprob: -3.363600969314575
    6. 'phase' → logprob: -4.738600730895996
    7. ' boucle' → logprob: -4.863600730895996
    8. 'fois' → logprob: -5.113600730895996
    9. '   ' → logprob: -5.613600730895996
    10. ' ligne' → logprob: -5.613600730895996

Token 623: 'ice' (ID: 603)
  Prédit: 'rice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rice' → logprob: -0.36182838678359985
    2. 'ice' → logprob: -1.736828327178955
    3. 'def' → logprob: -2.736828327178955
    4. 'ix' → logprob: -3.111828327178955
    5. '#' → logprob: -6.236828327178955
    6. 'ch' → logprob: -6.361828327178955
    7. 'ce' → logprob: -6.611828327178955
    8. 'x' → logprob: -6.611828327178955
    9. '   ' → logprob: -6.736828327178955
    10. 'tr' → logprob: -6.736828327178955

Token 624: ' la' (ID: 557)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.2073167562484741
    2. ' de' → logprob: -2.2073168754577637
    3. 'next' → logprob: -2.2073168754577637
    4. ' dp' → logprob: -2.3323168754577637
    5. 'dp' → logprob: -2.4573168754577637
    6. ' f' → logprob: -2.5823168754577637
    7. ' des' → logprob: -2.9573168754577637
    8. 'f' → logprob: -3.0823168754577637
    9. ' of' → logprob: -3.9573168754577637
    10. ' direction' → logprob: -4.957316875457764

Token 625: ' destination' (ID: 13330)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.20682814717292786
    2. 'pos' → logprob: -2.7068281173706055
    3. 'position' → logprob: -3.4568281173706055
    4. 'direction' → logprob: -4.2068281173706055
    5. 'f' → logprob: -4.4568281173706055
    6. 'dp' → logprob: -4.4568281173706055
    7. 'def' → logprob: -4.7068281173706055
    8. 'dire' → logprob: -4.8318281173706055
    9. ' next' → logprob: -4.9568281173706055
    10. 'su' → logprob: -5.2068281173706055

Token 626: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.934688925743103
    2. 's' → logprob: -2.6846890449523926
    3. 'next' → logprob: -3.1846890449523926
    4. '=' → logprob: -3.4346890449523926
    5. ' des' → logprob: -3.4346890449523926
    6. ',' → logprob: -3.4346890449523926
    7. '_next' → logprob: -3.6846890449523926
    8. '[next' → logprob: -3.8096890449523926
    9. ' suivante' → logprob: -3.8096890449523926
    10. ' de' → logprob: -3.9346890449523926

Token 627: ' N' (ID: 478)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -1.1443006992340088
    2. ' k' → logprob: -1.7693006992340088
    3. ' la' → logprob: -2.519300699234009
    4. '0' → logprob: -2.894300699234009
    5. ' l' → logprob: -3.019300699234009
    6. 'k' → logprob: -3.269300699234009
    7. 'l' → logprob: -3.394300699234009
    8. ' ' → logprob: -3.394300699234009
    9. ' N' → logprob: -3.519300699234009
    10. ' i' → logprob: -3.644300699234009

Token 628: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0791027545928955
    2. ' %' → logprob: -1.5791027545928955
    3. '%' → logprob: -2.2041027545928955
    4. ' ' → logprob: -2.5791027545928955
    5. ' mod' → logprob: -2.5791027545928955
    6. ' =' → logprob: -2.7041027545928955
    7. 'mod' → logprob: -3.3291027545928955
    8. '   ' → logprob: -4.204102516174316
    9. '+' → logprob: -4.579102516174316
    10. '==' → logprob: -4.954102516174316

Token 629: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014226970262825489
    2. '0' → logprob: -4.264226913452148
    3. ' ' → logprob: -9.764226913452148
    4. '2' → logprob: -12.764226913452148
    5. '=' → logprob: -14.826726913452148
    6. '[' → logprob: -14.826726913452148
    7. '10' → logprob: -15.014226913452148
    8. 's' → logprob: -15.514226913452148
    9. '(' → logprob: -15.764226913452148
    10. 'import' → logprob: -15.889226913452148

Token 630: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3878880739212036
    2. ',' → logprob: -2.012887954711914
    3. ':' → logprob: -2.012887954711914
    4. '       ' → logprob: -2.512887954711914
    5. '\n' → logprob: -2.637887954711914
    6. 'def' → logprob: -3.012887954711914
    7. '   ' → logprob: -3.262887954711914
    8. '[' → logprob: -3.887887954711914
    9. ',
' → logprob: -3.887887954711914
    10. 'for' → logprob: -4.262887954711914

Token 631: 'p' (ID: 79)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0987941175699234
    2. ' )' → logprob: -2.5987942218780518
    3. ' i' → logprob: -5.973793983459473
    4. ' ' → logprob: -6.098793983459473
    5. 'i' → logprob: -6.223793983459473
    6. '0' → logprob: -6.473793983459473
    7. '),' → logprob: -6.598793983459473
    8. ')
' → logprob: -6.723793983459473
    9. 'def' → logprob: -7.723793983459473
    10. ')`' → logprob: -7.723793983459473

Token 632: 'uis' (ID: 4560)
  Prédit: 'osition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'osition' → logprob: -1.0504785776138306
    2. 'ass' → logprob: -1.4254785776138306
    3. 'r' → logprob: -2.175478458404541
    4. ')' → logprob: -2.300478458404541
    5. 'os' → logprob: -2.300478458404541
    6. '#' → logprob: -4.800478458404541
    7. ']' → logprob: -4.925478458404541
    8. 'assage' → logprob: -4.925478458404541
    9. 'oint' → logprob: -5.050478458404541
    10. 'o' → logprob: -5.550478458404541

Token 633: 'que' (ID: 1126)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.983601987361908
    2. '=' → logprob: -2.3586020469665527
    3. '[' → logprob: -2.7336020469665527
    4. ' ' → logprob: -2.9836020469665527
    5. '0' → logprob: -3.2336020469665527
    6. ' )' → logprob: -3.2336020469665527
    7. '[]' → logprob: -3.2336020469665527
    8. ' =' → logprob: -3.3586020469665527
    9. ' N' → logprob: -3.4836020469665527
    10. ' i' → logprob: -4.233602046966553

Token 634: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.4430681467056274
    2. ' N' → logprob: -1.9430681467056274
    3. ' chaque' → logprob: -2.068068027496338
    4. ' la' → logprob: -2.443068027496338
    5. 'on' → logprob: -2.818068027496338
    6. 'le' → logprob: -3.193068027496338
    7. 'la' → logprob: -3.443068027496338
    8. ' les' → logprob: -3.568068027496338
    9. ' l' → logprob: -3.818068027496338
    10. ' le' → logprob: -3.943068027496338

Token 635: ' fait' (ID: 7473)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5241072177886963
    2. ' )' → logprob: -2.1491072177886963
    3. ' ' → logprob: -3.1491072177886963
    4. 'mod' → logprob: -3.7741072177886963
    5. ' mod' → logprob: -3.8991072177886963
    6. ' ' → logprob: -4.024106979370117
    7. 's' → logprob: -4.149106979370117
    8. '   ' → logprob: -4.149106979370117
    9. ']' → logprob: -4.524106979370117
    10. 'n' → logprob: -4.649106979370117

Token 636: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.1962952613830566
    2. ' une' → logprob: -1.4462952613830566
    3. ' ' → logprob: -2.1962952613830566
    4. 'un' → logprob: -2.3212952613830566
    5. ' un' → logprob: -2.6962952613830566
    6. 'pass' → logprob: -3.5712952613830566
    7. 'le' → logprob: -3.6962952613830566
    8. '   ' → logprob: -3.9462952613830566
    9. ' N' → logprob: -4.321295261383057
    10. ' la' → logprob: -4.696295261383057

Token 637: ' promenade' (ID: 148184)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -1.3891351222991943
    2. ' promenade' → logprob: -1.3891351222991943
    3. 'pass' → logprob: -1.8891351222991943
    4. ' ' → logprob: -2.8891351222991943
    5. 'single' → logprob: -3.2641351222991943
    6. 'se' → logprob: -3.2641351222991943
    7. ')' → logprob: -3.3891351222991943
    8. 'prom' → logprob: -3.7641351222991943
    9. 'def' → logprob: -4.139135360717773
    10. ' seule' → logprob: -4.264135360717773

Token 638: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0675065740942955
    2. ' )' → logprob: -4.067506790161133
    3. ')
' → logprob: -4.442506790161133
    4. '),' → logprob: -5.442506790161133
    5. 'def' → logprob: -5.567506790161133
    6. ' for' → logprob: -5.692506790161133
    7. ' pour' → logprob: -5.817506790161133
    8. 'for' → logprob: -6.067506790161133
    9. ',' → logprob: -6.442506790161133
    10. '1' → logprob: -6.567506790161133

Token 639: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3522022068500519
    2. '   ' → logprob: -2.6022021770477295
    3. ',' → logprob: -2.7272021770477295
    4. ':' → logprob: -3.7272021770477295
    5. '
' → logprob: -4.227202415466309
    6. ' for' → logprob: -4.227202415466309
    7. 'def' → logprob: -4.352202415466309
    8. '#' → logprob: -4.477202415466309
    9. ')' → logprob: -4.727202415466309
    10. ' ' → logprob: -4.852202415466309

Token 640: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07813122868537903
    2. '
' → logprob: -3.7031311988830566
    3. ',' → logprob: -4.453131198883057
    4. '   ' → logprob: -5.078131198883057
    5. '        
' → logprob: -5.203131198883057
    6. ')' → logprob: -5.328131198883057
    7. ',
' → logprob: -5.828131198883057
    8. 'def' → logprob: -6.078131198883057
    9. ')
' → logprob: -6.453131198883057
    10. '```' → logprob: -6.578131198883057

Token 641: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06174849718809128
    2. '
' → logprob: -4.186748504638672
    3. '#' → logprob: -4.686748504638672
    4. '        
' → logprob: -5.061748504638672
    5. 'def' → logprob: -5.436748504638672
    6. '```' → logprob: -5.811748504638672
    7. ',' → logprob: -6.061748504638672
    8. '   ' → logprob: -6.186748504638672
    9. ')' → logprob: -6.311748504638672
    10. '  
' → logprob: -6.811748504638672

Token 642: ' Constru' (ID: 98396)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.29613760113716125
    2. '       ' → logprob: -2.046137571334839
    3. ' #' → logprob: -3.046137571334839
    4. ' for' → logprob: -3.546137571334839
    5. 'for' → logprob: -3.921137571334839
    6. 'import' → logprob: -4.671137809753418
    7. 'dp' → logprob: -5.671137809753418
    8. ' next' → logprob: -6.046137809753418
    9. 'def' → logprob: -6.421137809753418
    10. ' dp' → logprob: -6.546137809753418

Token 643: 'ire' (ID: 594)
  Prédit: 'ction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ction' → logprob: -0.7267959117889404
    2. 'ire' → logprob: -1.2267959117889404
    3. 'ct' → logprob: -1.7267959117889404
    4. 'ite' → logprob: -4.2267961502075195
    5. 'ctions' → logprob: -4.7267961502075195
    6. 'ir' → logprob: -4.9767961502075195
    7. '#' → logprob: -5.6017961502075195
    8. '   ' → logprob: -5.9767961502075195
    9. 'it' → logprob: -6.6017961502075195
    10. 'cter' → logprob: -6.9767961502075195

Token 644: ' des' (ID: 731)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.1995865106582642
    2. ' la' → logprob: -1.4495865106582642
    3. ' deux' → logprob: -2.0745863914489746
    4. ' des' → logprob: -2.0745863914489746
    5. 'une' → logprob: -2.8245863914489746
    6. 'des' → logprob: -3.3245863914489746
    7. ' les' → logprob: -3.3245863914489746
    8. 'la' → logprob: -3.8245863914489746
    9. '[]' → logprob: -4.074586391448975
    10. ' ' → logprob: -4.574586391448975

Token 645: ' tables' (ID: 16584)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.1339759826660156
    2. ' matrices' → logprob: -1.8839759826660156
    3. ' tables' → logprob: -2.1339759826660156
    4. 'tables' → logprob: -2.3839759826660156
    5. 'dou' → logprob: -2.3839759826660156
    6. 'mat' → logprob: -3.0089759826660156
    7. ' dp' → logprob: -3.1339759826660156
    8. 'f' → logprob: -3.6339759826660156
    9. 'next' → logprob: -3.8839759826660156
    10. ' next' → logprob: -4.258975982666016

Token 646: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7394959926605225
    2. 'de' → logprob: -1.6144959926605225
    3. '[' → logprob: -2.7394959926605225
    4. ' for' → logprob: -3.4894959926605225
    5. 'd' → logprob: -3.6144959926605225
    6. '#' → logprob: -3.7394959926605225
    7. '[]' → logprob: -3.8644959926605225
    8. 'dp' → logprob: -3.9894959926605225
    9. '_de' → logprob: -3.9894959926605225
    10. 'for' → logprob: -4.114496231079102

Token 647: ' transition' (ID: 14463)
  Prédit: 'transition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'transition' → logprob: -1.1010569334030151
    2. ' transition' → logprob: -2.1010570526123047
    3. ' saut' → logprob: -2.4760570526123047
    4. 'p' → logprob: -2.8510570526123047
    5. 'dou' → logprob: -2.8510570526123047
    6. ' doubl' → logprob: -2.8510570526123047
    7. 'trans' → logprob: -3.1010570526123047
    8. 'pass' → logprob: -3.3510570526123047
    9. '
' → logprob: -3.4760570526123047
    10. 'multip' → logprob: -3.6010570526123047

Token 648: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.683087170124054
    2. '   ' → logprob: -1.5580871105194092
    3. '        
' → logprob: -2.308087110519409
    4. ']' → logprob: -2.683087110519409
    5. '[' → logprob: -3.808087110519409
    6. ',' → logprob: -4.558087348937988
    7. '    
' → logprob: -4.808087348937988
    8. '_' → logprob: -4.933087348937988
    9. ')' → logprob: -5.183087348937988
    10. 'import' → logprob: -5.433087348937988

Token 649: ' les' (ID: 1341)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.661071240901947
    2. ' k' → logprob: -0.786071240901947
    3. '_' → logprob: -5.036071300506592
    4. 'l' → logprob: -5.536071300506592
    5. 'd' → logprob: -5.661071300506592
    6. ' _' → logprob: -6.036071300506592
    7. ' d' → logprob: -6.161071300506592
    8. ' l' → logprob: -6.536071300506592
    9. ' ' → logprob: -6.786071300506592
    10. ' la' → logprob: -6.786071300506592

Token 650: ' puiss' (ID: 102546)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.130516529083252
    2. ' k' → logprob: -2.505516529083252
    3. ' ' → logprob: -2.630516529083252
    4. 'pow' → logprob: -2.630516529083252
    5. 'powers' → logprob: -2.755516529083252
    6. 'p' → logprob: -3.505516529083252
    7. '   ' → logprob: -3.505516529083252
    8. '2' → logprob: -3.505516529083252
    9. 'pas' → logprob: -3.630516529083252
    10. 'next' → logprob: -3.755516529083252

Token 651: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.3483518660068512
    2. 'ance' → logprob: -1.5983518362045288
    3. '**' → logprob: -4.348351955413818
    4. ')' → logprob: -4.473351955413818
    5. '^' → logprob: -4.473351955413818
    6. '```' → logprob: -4.848351955413818
    7. '=' → logprob: -5.098351955413818
    8. '2' → logprob: -5.223351955413818
    9. '   ' → logprob: -5.473351955413818
    10. 'és' → logprob: -5.723351955413818

Token 652: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.412637710571289
    2. 'de' → logprob: -1.412637710571289
    3. '_de' → logprob: -1.912637710571289
    4. '_' → logprob: -2.037637710571289
    5. ' de' → logprob: -2.787637710571289
    6. '   ' → logprob: -2.787637710571289
    7. 'def' → logprob: -4.037637710571289
    8. ')' → logprob: -4.162637710571289
    9. 'import' → logprob: -4.412637710571289
    10. '    ' → logprob: -4.537637710571289

Token 653: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000965295999776572
    2. 'de' → logprob: -7.375965118408203
    3. ' ' → logprob: -8.375965118408203
    4. 'two' → logprob: -9.625965118408203
    5. ' deux' → logprob: -10.375965118408203
    6. ' two' → logprob: -11.750965118408203
    7. '   ' → logprob: -14.500965118408203
    8. '```' → logprob: -14.500965118408203
    9. '1' → logprob: -14.875965118408203
    10. '`' → logprob: -15.375965118408203

Token 654: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005089493934065104
    2. ' ' → logprob: -7.625508785247803
    3. 'de' → logprob: -10.875509262084961
    4. 'two' → logprob: -14.000509262084961
    5. ' deux' → logprob: -14.500509262084961
    6. ' two' → logprob: -15.375509262084961
    7. '   ' → logprob: -15.500509262084961
    8. '1' → logprob: -16.12550926208496
    9. '```' → logprob: -16.37550926208496
    10. '`' → logprob: -17.25050926208496

Token 655: ' jusqu' (ID: 21961)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19913031160831451
    2. '   ' → logprob: -2.1991302967071533
    3. '        
' → logprob: -3.6991302967071533
    4. '
' → logprob: -4.074130535125732
    5. '    
' → logprob: -5.449130535125732
    6. '  
' → logprob: -5.699130535125732
    7. ':' → logprob: -5.824130535125732
    8. ' 
' → logprob: -6.199130535125732
    9. '[' → logprob: -6.324130535125732
    10. ']' → logprob: -6.449130535125732

Token 656: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.23487859964370728
    2. ' à' → logprob: -2.4848785400390625
    3. 'à' → logprob: -2.9848785400390625
    4. 'au' → logprob: -3.4848785400390625
    5. '(' → logprob: -4.1098785400390625
    6. '’à' → logprob: -4.4848785400390625
    7. ''au' → logprob: -5.1098785400390625
    8. ' ' → logprob: -6.1098785400390625
    9. 'a' → logprob: -6.8598785400390625
    10. ' au' → logprob: -6.8598785400390625

Token 657: ' la' (ID: 557)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '60' → logprob: -0.6966937184333801
    2. 'N' → logprob: -1.4466936588287354
    3. '30' → logprob: -2.0716936588287354
    4. '20' → logprob: -3.0716936588287354
    5. '31' → logprob: -3.0716936588287354
    6. ' ' → logprob: -4.1966938972473145
    7. 'max' → logprob: -4.8216938972473145
    8. '61' → logprob: -4.8216938972473145
    9. '64' → logprob: -5.1966938972473145
    10. '32' → logprob: -5.6966938972473145

Token 658: ' puissance' (ID: 63494)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '60' → logprob: -0.5971885919570923
    2. 'max' → logprob: -1.4721885919570923
    3. 'log' → logprob: -2.9721884727478027
    4. '30' → logprob: -3.2221884727478027
    5. '64' → logprob: -3.3471884727478027
    6. '61' → logprob: -3.3471884727478027
    7. '31' → logprob: -3.8471884727478027
    8. 'maximum' → logprob: -4.472188472747803
    9. '63' → logprob: -5.097188472747803
    10. '20' → logprob: -5.472188472747803

Token 659: ' maximale' (ID: 76380)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4497019946575165
    2. 'de' → logprob: -2.074702024459839
    3. 'max' → logprob: -2.199702024459839
    4. ' ' → logprob: -3.824702024459839
    5. '_max' → logprob: -3.949702024459839
    6. '   ' → logprob: -4.07470178604126
    7. ' de' → logprob: -4.19970178604126
    8. ' maximale' → logprob: -5.32470178604126
    9. '(' → logprob: -5.44970178604126
    10. '_de' → logprob: -5.69970178604126

Token 660: ' <=' (ID: 5017)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20626118779182434
    2. '
' → logprob: -2.206261157989502
    3. '   ' → logprob: -3.456261157989502
    4. '        
' → logprob: -4.081261157989502
    5. 'def' → logprob: -5.956261157989502
    6. '

' → logprob: -6.206261157989502
    7. 'import' → logprob: -6.206261157989502
    8. '    
' → logprob: -6.581261157989502
    9. '`
' → logprob: -6.581261157989502
    10. ':' → logprob: -6.581261157989502

Token 661: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.026334552094340324
    2. ' N' → logprob: -3.651334524154663
    3. '   ' → logprob: -10.651334762573242
    4. ' ' → logprob: -12.401334762573242
    5. 'n' → logprob: -13.276334762573242
    6. '```' → logprob: -14.151334762573242
    7. '	N' → logprob: -14.526334762573242
    8. '  ' → logprob: -14.526334762573242
    9. '
' → logprob: -14.651334762573242
    10. '10' → logprob: -14.776334762573242

Token 662: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20696985721588135
    2. '   ' → logprob: -2.706969738006592
    3. '
' → logprob: -2.956969738006592
    4. 'max' → logprob: -3.581969738006592
    5. 'def' → logprob: -4.456969738006592
    6. '#' → logprob: -4.956969738006592
    7. '        
' → logprob: -5.831969738006592
    8. 'import' → logprob: -5.831969738006592
    9. 'dp' → logprob: -5.831969738006592
    10. '```' → logprob: -6.581969738006592

Token 663: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03761323168873787
    2. '        
' → logprob: -5.037613391876221
    3. '   ' → logprob: -5.162613391876221
    4. '
' → logprob: -5.287613391876221
    5. 'def' → logprob: -5.787613391876221
    6. ')' → logprob: -6.287613391876221
    7. '```' → logprob: -6.537613391876221
    8. 'import' → logprob: -6.662613391876221
    9. '#' → logprob: -6.662613391876221
    10. ']' → logprob: -6.912613391876221

Token 664: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.062006447464227676
    2. '
' → logprob: -3.0620064735412598
    3. '        
' → logprob: -4.93700647354126
    4. 'next' → logprob: -6.81200647354126
    5. '#' (adapté à ' #') → logprob: -7.43700647354126
    6. '\n' → logprob: -7.68700647354126
    7. '```' → logprob: -7.68700647354126
    8. '\' → logprob: -8.062005996704102
    9. ',' → logprob: -8.312005996704102
    10. ' next' → logprob: -8.437005996704102

Token 665: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07814600318670273
    2. '
' → logprob: -2.953145980834961
    3. '        
' → logprob: -3.953145980834961
    4. 'import' → logprob: -6.953145980834961
    5. '#' → logprob: -7.078145980834961
    6. '```' → logprob: -8.328145980834961
    7. '        

' → logprob: -8.828145980834961
    8. '   ' → logprob: -8.828145980834961
    9. '       
' → logprob: -8.953145980834961
    10. '\n' → logprob: -9.078145980834961

Token 666: ' Puis' (ID: 87717)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7301447987556458
    2. 'max' → logprob: -1.605144739151001
    3. '#' → logprob: -1.980144739151001
    4. 'dp' → logprob: -2.355144739151001
    5. ' max' → logprob: -3.855144739151001
    6. '   ' → logprob: -4.10514497756958
    7. 'for' → logprob: -4.35514497756958
    8. ' for' → logprob: -5.23014497756958
    9. 'dest' → logprob: -5.23014497756958
    10. 'def' → logprob: -5.85514497756958

Token 667: ' comb' (ID: 4134)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.12525837123394012
    2. 'position' → logprob: -3.500258445739746
    3. '       ' → logprob: -3.750258445739746
    4. 'result' → logprob: -4.125258445739746
    5. 'res' → logprob: -4.500258445739746
    6. 'def' → logprob: -5.000258445739746
    7. '#' → logprob: -5.125258445739746
    8. 'cur' → logprob: -5.125258445739746
    9. ' pos' → logprob: -5.625258445739746
    10. 'current' → logprob: -5.875258445739746

Token 668: 'iner' (ID: 6010)
  Prédit: 'iner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iner' → logprob: -0.20574963092803955
    2. 'ine' → logprob: -2.08074951171875
    3. 'ose' → logprob: -3.58074951171875
    4. '```' → logprob: -3.70574951171875
    5. '``' → logprob: -6.95574951171875
    6. 'pose' → logprob: -7.08074951171875
    7. 'inez' → logprob: -7.08074951171875
    8. 'oser' → logprob: -7.20574951171875
    9. '#' → logprob: -7.33074951171875
    10. '**' → logprob: -7.83074951171875

Token 669: ' en' (ID: 469)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10980210453271866
    2. '   ' → logprob: -2.734802007675171
    3. ',' → logprob: -4.98480224609375
    4. 'import' → logprob: -5.10980224609375
    5. ')' → logprob: -5.98480224609375
    6. '        
' → logprob: -6.10980224609375
    7. ']' → logprob: -6.48480224609375
    8. 'def' → logprob: -6.48480224609375
    9. '_' → logprob: -6.60980224609375
    10. '#' → logprob: -6.60980224609375

Token 670: ' suivant' (ID: 68705)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -1.2137757539749146
    2. 'fonction' → logprob: -1.2137757539749146
    3. 'continu' → logprob: -2.713775634765625
    4. 'une' → logprob: -2.713775634765625
    5. 'suite' → logprob: -3.088775634765625
    6. 'f' → logprob: -3.088775634765625
    7. '```' → logprob: -3.588775634765625
    8. '#' → logprob: -3.713775634765625
    9. 'part' → logprob: -4.338775634765625
    10. 'fon' → logprob: -4.588775634765625

Token 671: ' l' (ID: 305)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12923277914524078
    2. '   ' → logprob: -2.254232883453369
    3. 'import' → logprob: -6.004232883453369
    4. '#' → logprob: -6.129232883453369
    5. 'def' → logprob: -6.379232883453369
    6. '```' → logprob: -6.629232883453369
    7. 'range' → logprob: -6.629232883453369
    8. '           ' → logprob: -7.254232883453369
    9. '    ' → logprob: -7.254232883453369
    10. ' (' → logprob: -7.379232883453369

Token 672: ''ex' (ID: 23472)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47607213258743286
    2. 'e' → logprob: -2.351072072982788
    3. 'range' → logprob: -2.726072072982788
    4. '   ' → logprob: -2.851072072982788
    5. ' sys' → logprob: -2.851072072982788
    6. ' while' → logprob: -3.476072072982788
    7. '```' → logprob: -4.726072311401367
    8. 'while' → logprob: -4.851072311401367
    9. '       ' → logprob: -4.976072311401367
    10. ' N' → logprob: -5.601072311401367

Token 673: 'pos' (ID: 1103)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01880646124482155
    2. 'ponent' → logprob: -4.018806457519531
    3. 'pos' → logprob: -8.768806457519531
    4. 'pression' → logprob: -8.893806457519531
    5. '^' → logprob: -10.143806457519531
    6. '**' → logprob: -10.268806457519531
    7. '```' → logprob: -10.268806457519531
    8. 'ploit' → logprob: -10.393806457519531
    9. 'po' → logprob: -10.518806457519531
    10. 'ponents' → logprob: -10.643806457519531

Token 674: 'ant' (ID: 493)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9573134779930115
    2. 'ent' → logprob: -1.5823135375976562
    3. 'ant' → logprob: -2.3323135375976562
    4. 'é' → logprob: -2.8323135375976562
    5. 'en' → logprob: -3.5823135375976562
    6. 'ents' → logprob: -3.8323135375976562
    7. 't' → logprob: -3.9573135375976562
    8. 'n' → logprob: -4.207313537597656
    9. 'on' → logprob: -4.269813537597656
    10. 'nt' → logprob: -4.457313537597656

Token 675: ' b' (ID: 287)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18896646797657013
    2. '   ' → logprob: -2.1889665126800537
    3. '        
' → logprob: -3.9389665126800537
    4. '
' → logprob: -4.063966274261475
    5. 'def' → logprob: -5.438966274261475
    6. '#' → logprob: -5.563966274261475
    7. 'max' → logprob: -5.688966274261475
    8. '    
' → logprob: -5.813966274261475
    9. 'import' → logprob: -6.813966274261475
    10. '

' → logprob: -7.188966274261475

Token 676: 'inaire' (ID: 41465)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.7232226133346558
    2. ')' → logprob: -1.8482226133346558
    3. '^' → logprob: -2.7232227325439453
    4. '**' → logprob: -2.9732227325439453
    5. 'p' → logprob: -3.7232227325439453
    6. '^)' → logprob: -4.098222732543945
    7. '2' → logprob: -4.348222732543945
    8. '_' → logprob: -4.473222732543945
    9. '^{' → logprob: -4.598222732543945
    10. '1' → logprob: -4.598222732543945

Token 677: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4016417860984802
    2. '   ' → logprob: -1.651641845703125
    3. '
' → logprob: -2.401641845703125
    4. '        
' → logprob: -3.651641845703125
    5. '    
' → logprob: -4.901641845703125
    6. 'def' → logprob: -5.651641845703125
    7. ' 
' → logprob: -6.651641845703125
    8. '#' → logprob: -6.776641845703125
    9. 'import' → logprob: -6.776641845703125
    10. '  
' → logprob: -6.901641845703125

Token 678: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.4287978708744049
    2. 'N' → logprob: -1.0537978410720825
    3. ' ' → logprob: -9.678797721862793
    4. ' ' → logprob: -10.553797721862793
    5. 'n' → logprob: -13.178797721862793
    6. '_N' → logprob: -13.553797721862793
    7. '(N' → logprob: -13.803797721862793
    8. '	N' → logprob: -13.928797721862793
    9. '`' → logprob: -14.178797721862793
    10. ''' → logprob: -14.803797721862793

Token 679: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3550780415534973
    2. '       ' → logprob: -1.3550779819488525
    3. '   ' → logprob: -3.8550779819488525
    4. '        
' → logprob: -4.855078220367432
    5. '```' → logprob: -6.230078220367432
    6. 'def' → logprob: -6.355078220367432
    7. '    
' → logprob: -6.605078220367432
    8. '

' → logprob: -6.980078220367432
    9. 'import' → logprob: -7.230078220367432
    10. '#' → logprob: -7.230078220367432

Token 680: ' trouver' (ID: 23195)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.7771022319793701
    2. 'sim' → logprob: -1.7771022319793701
    3. 'faire' → logprob: -2.15210223197937
    4. ' obtenir' → logprob: -2.77710223197937
    5. 'calcul' → logprob: -3.27710223197937
    6. ' compléter' → logprob: -3.77710223197937
    7. 'compl' → logprob: -4.152102470397949
    8. 'com' → logprob: -4.527102470397949
    9. 'atte' → logprob: -4.652102470397949
    10. ' calcul' → logprob: -4.652102470397949

Token 681: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.45204225182533264
    2. ' la' → logprob: -1.0770422220230103
    3. 'le' → logprob: -5.077042102813721
    4. 'l' → logprob: -5.327042102813721
    5. 'final' → logprob: -5.577042102813721
    6. '   ' → logprob: -6.077042102813721
    7. '(' → logprob: -6.077042102813721
    8. ' l' → logprob: -7.077042102813721
    9. ' ' → logprob: -7.327042102813721
    10. ' (' → logprob: -7.577042102813721

Token 682: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.5161451697349548
    2. 'destination' → logprob: -1.8911452293395996
    3. ' destination' → logprob: -2.5161452293395996
    4. 'final' → logprob: -2.6411452293395996
    5. ' position' → logprob: -2.6411452293395996
    6. 'result' → logprob: -4.2661452293396
    7. ' final' → logprob: -5.1411452293396
    8. 'pos' → logprob: -5.2661452293396
    9. 'dest' → logprob: -7.1411452293396
    10. ' result' → logprob: -7.6411452293396

Token 683: ' finale' (ID: 37759)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8501443862915039
    2. '   ' → logprob: -1.475144386291504
    3. '
' → logprob: -1.600144386291504
    4. 'def' → logprob: -2.600144386291504
    5. '        
' → logprob: -4.350144386291504
    6. 'import' → logprob: -4.600144386291504
    7. ':' → logprob: -5.100144386291504
    8. ')
' → logprob: -5.600144386291504
    9. '```' → logprob: -5.600144386291504
    10. '

' → logprob: -6.100144386291504

Token 684: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2900475561618805
    2. '   ' → logprob: -2.2900476455688477
    3. '
' → logprob: -3.0400476455688477
    4. '#' → logprob: -3.9150476455688477
    5. 'dp' → logprob: -4.040047645568848
    6. 'def' → logprob: -4.165047645568848
    7. 'max' → logprob: -4.165047645568848
    8. '        
' → logprob: -4.790047645568848
    9. 'import' → logprob: -5.040047645568848
    10. 'from' → logprob: -5.290047645568848

Token 685: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05368756502866745
    2. '
' → logprob: -3.803687572479248
    3. '   ' → logprob: -4.178687572479248
    4. '        
' → logprob: -4.678687572479248
    5. '    
' → logprob: -6.678687572479248
    6. '```' → logprob: -7.053687572479248
    7. '\n' → logprob: -7.803687572479248
    8. '  
' → logprob: -8.17868709564209
    9. '#' → logprob: -8.17868709564209
    10. 'def' → logprob: -8.30368709564209

Token 686: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.793819010257721
    2. 'max' → logprob: -1.0438189506530762
    3. '#' (adapté à ' #') → logprob: -2.418818950653076
    4. 'next' → logprob: -3.418818950653076
    5. 'dp' → logprob: -3.793818950653076
    6. 'from' → logprob: -4.168818950653076
    7. 'import' → logprob: -4.793818950653076
    8. '
' → logprob: -4.918818950653076
    9. '        
' → logprob: -5.043818950653076
    10. '   ' → logprob: -5.668818950653076

Token 687: ' Pour' (ID: 13931)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8905776739120483
    2. 'max' → logprob: -1.2655776739120483
    3. 'dp' → logprob: -1.7655776739120483
    4. '#' → logprob: -2.890577793121338
    5. ' max' → logprob: -3.765577793121338
    6. 'from' → logprob: -4.140577793121338
    7. 'next' → logprob: -4.765577793121338
    8. '
' → logprob: -4.890577793121338
    9. 'dest' → logprob: -5.390577793121338
    10. 'import' → logprob: -5.765577793121338

Token 688: ' cela' (ID: 17542)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13898366689682007
    2. ' _' → logprob: -3.013983726501465
    3. 'i' → logprob: -4.138983726501465
    4. '_next' → logprob: -5.013983726501465
    5. ' i' → logprob: -5.138983726501465
    6. 'k' → logprob: -5.763983726501465
    7. 'l' → logprob: -5.888983726501465
    8. ' la' → logprob: -5.888983726501465
    9. ' k' → logprob: -6.013983726501465
    10. ' continuer' → logprob: -6.138983726501465

Token 689: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6572726964950562
    2. ',' → logprob: -1.9072726964950562
    3. 'import' → logprob: -2.7822728157043457
    4. '   ' → logprob: -2.7822728157043457
    5. ':' → logprob: -3.0322728157043457
    6. 'def' → logprob: -3.0322728157043457
    7. '#' → logprob: -3.2822728157043457
    8. 'max' → logprob: -3.5322728157043457
    9. '        
' → logprob: -4.407272815704346
    10. ' max' → logprob: -4.782272815704346

Token 690: ' on' (ID: 402)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5030177235603333
    2. ' max' → logprob: -1.3780176639556885
    3. 'pos' → logprob: -2.8780176639556885
    4. '#' → logprob: -3.0030176639556885
    5. 'dp' → logprob: -4.753017902374268
    6. 'dest' → logprob: -5.753017902374268
    7. '   ' → logprob: -5.878017902374268
    8. 'next' → logprob: -5.878017902374268
    9. 'pass' → logprob: -6.003017902374268
    10. ' pos' → logprob: -6.128017902374268

Token 691: ' va' (ID: 3423)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7881745100021362
    2. ' continue' → logprob: -1.5381745100021362
    3. 'def' → logprob: -1.9131745100021362
    4. '#' → logprob: -2.538174629211426
    5. 'import' → logprob: -3.913174629211426
    6. 'contin' → logprob: -3.913174629211426
    7. '       ' → logprob: -3.913174629211426
    8. '   ' → logprob: -4.288174629211426
    9. ' #' → logprob: -5.788174629211426
    10. 'max' → logprob: -6.163174629211426

Token 692: ' considérer' (ID: 172894)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.5695264339447021
    2. ' create' → logprob: -1.9445264339447021
    3. 'dire' → logprob: -2.194526433944702
    4. '   ' → logprob: -2.444526433944702
    5. '#' → logprob: -2.694526433944702
    6. 'max' → logprob: -2.944526433944702
    7. 'create' → logprob: -3.069526433944702
    8. 'pos' → logprob: -3.194526433944702
    9. ' continuer' → logprob: -3.694526433944702
    10. 'dp' → logprob: -4.069526672363281

Token 693: ' un' (ID: 537)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9409652948379517
    2. ' la' → logprob: -1.3159652948379517
    3. ' deux' → logprob: -2.815965175628662
    4. '       ' → logprob: -3.315965175628662
    5. ' les' → logprob: -3.315965175628662
    6. 'les' → logprob: -3.565965175628662
    7. ' une' → logprob: -4.065965175628662
    8. 'le' → logprob: -4.190965175628662
    9. 'la' → logprob: -4.190965175628662
    10. 'une' → logprob: -4.190965175628662

Token 694: ' tableau' (ID: 67053)
  Prédit: ' tableau'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tableau' → logprob: -1.6888993978500366
    2. 'pos' → logprob: -2.813899517059326
    3. 'def' → logprob: -2.813899517059326
    4. 'offset' → logprob: -2.938899517059326
    5. 'max' → logprob: -3.063899517059326
    6. 'point' → logprob: -3.188899517059326
    7. 'e' → logprob: -3.313899517059326
    8. ' grid' → logprob: -3.563899517059326
    9. 'dp' → logprob: -3.688899517059326
    10. ' offset' → logprob: -3.813899517059326

Token 695: ' "' (ID: 392)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_next' → logprob: -1.1377665996551514
    2. 'dest' → logprob: -1.6377665996551514
    3. ' =' → logprob: -2.5127665996551514
    4. 'de' → logprob: -2.7627665996551514
    5. '_dest' → logprob: -2.7627665996551514
    6. 'dp' → logprob: -3.3877665996551514
    7. ' de' → logprob: -3.3877665996551514
    8. '_destination' → logprob: -3.7627665996551514
    9. 'next' → logprob: -3.8877665996551514
    10. 'des' → logprob: -4.1377668380737305

Token 696: 'next' (ID: 7311)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5852050185203552
    2. 'next' → logprob: -1.335205078125
    3. 'pos' → logprob: -2.835205078125
    4. 'max' → logprob: -3.460205078125
    5. 'dest' → logprob: -3.460205078125
    6. ' next' → logprob: -4.210205078125
    7. ' dp' → logprob: -4.210205078125
    8. 'trans' → logprob: -4.960205078125
    9. ' nxt' → logprob: -5.460205078125
    10. 'from' → logprob: -6.085205078125

Token 697: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.024420345202088356
    2. '_positions' → logprob: -3.8994202613830566
    3. '_' → logprob: -6.524420261383057
    4. '_position' → logprob: -7.274420261383057
    5. 'pos' → logprob: -8.024420738220215
    6. ' =' → logprob: -8.274420738220215
    7. '_move' → logprob: -8.524420738220215
    8. '"' → logprob: -8.774420738220215
    9. '_moves' → logprob: -8.899420738220215
    10. '_state' → logprob: -8.899420738220215

Token 698: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7482041120529175
    2. ' =' → logprob: -0.7482041120529175
    3. 's' → logprob: -3.748204231262207
    4. '   ' → logprob: -4.873204231262207
    5. '_pos' → logprob: -4.998204231262207
    6. '=' → logprob: -5.623204231262207
    7. ']' → logprob: -6.123204231262207
    8. 'es' → logprob: -6.748204231262207
    9. '"]' → logprob: -6.873204231262207
    10. '")' → logprob: -6.873204231262207

Token 699: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3162514865398407
    2. '=' → logprob: -1.316251516342163
    3. '[' → logprob: -7.066251277923584
    4. '   ' → logprob: -7.691251277923584
    5. ')' → logprob: -7.941251277923584
    6. '=[' → logprob: -8.066251754760742
    7. ']' → logprob: -8.316251754760742
    8. '[next' → logprob: -9.441251754760742
    9. ',' → logprob: -9.566251754760742
    10. '=
' → logprob: -9.691251754760742

Token 700: ' taille' (ID: 41644)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.5926035046577454
    2. '[(' → logprob: -1.9676034450531006
    3. 'H' → logprob: -2.0926034450531006
    4. '[' → logprob: -2.2176034450531006
    5. 'size' → logprob: -3.4676034450531006
    6. 'dimensions' → logprob: -3.8426034450531006
    7. 'list' → logprob: -4.21760368347168
    8. 'dimension' → logprob: -6.34260368347168
    9. ' [[[' → logprob: -6.71760368347168
    10. 'shape' → logprob: -6.96760368347168

Token 701: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.4433234930038452
    2. '(H' → logprob: -1.3183234930038452
    3. '[' → logprob: -2.8183236122131348
    4. ' (' → logprob: -4.443323612213135
    5. ' H' → logprob: -4.568323612213135
    6. '   ' → logprob: -5.818323612213135
    7. '=' → logprob: -6.318323612213135
    8. ' =' → logprob: -7.068323612213135
    9. '(' → logprob: -7.068323612213135
    10. ')' → logprob: -7.568323612213135

Token 702: ' x' (ID: 1215)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6682213544845581
    2. '][' → logprob: -1.418221354484558
    3. '   ' → logprob: -2.1682214736938477
    4. ' x' → logprob: -3.0432214736938477
    5. '       ' → logprob: -4.168221473693848
    6. ')' → logprob: -4.293221473693848
    7. '×' → logprob: -4.293221473693848
    8. '*' → logprob: -4.918221473693848
    9. '\t' → logprob: -5.293221473693848
    10. '[' → logprob: -5.543221473693848

Token 703: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.03015274368226528
    2. ' W' → logprob: -3.5301527976989746
    3. '   ' → logprob: -8.405152320861816
    4. ' ' → logprob: -9.530152320861816
    5. '  ' → logprob: -9.905152320861816
    6. '    ' → logprob: -11.280152320861816
    7. '```' → logprob: -12.030152320861816
    8. '(W' → logprob: -12.280152320861816
    9. '	W' → logprob: -12.405152320861816
    10. ' (' → logprob: -12.655152320861816

Token 704: ' qui' (ID: 2780)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3377247154712677
    2. ']' → logprob: -1.9627246856689453
    3. '=' → logprob: -2.9627246856689453
    4. ')' → logprob: -3.7127246856689453
    5. '       ' → logprob: -3.9627246856689453
    6. '[next' → logprob: -4.587724685668945
    7. ',' → logprob: -4.837724685668945
    8. '[' → logprob: -5.087724685668945
    9. '   ' → logprob: -5.337724685668945
    10. '_next' → logprob: -5.462724685668945

Token 705: ' contient' (ID: 89067)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5017279982566833
    2. ' =' → logprob: -1.1267280578613281
    3. '[' → logprob: -3.376728057861328
    4. ']' → logprob: -4.251728057861328
    5. ')' → logprob: -5.626728057861328
    6. '_next' → logprob: -5.876728057861328
    7. '[next' → logprob: -6.126728057861328
    8. '   ' → logprob: -6.251728057861328
    9. '```' → logprob: -6.626728057861328
    10. 'next' → logprob: -6.751728057861328

Token 706: ' la' (ID: 557)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6580361127853394
    2. 'la' → logprob: -1.6580361127853394
    3. ' la' → logprob: -2.283036231994629
    4. '   ' → logprob: -2.283036231994629
    5. '[(' → logprob: -2.283036231994629
    6. 'for' → logprob: -2.533036231994629
    7. 'None' → logprob: -3.158036231994629
    8. ',' → logprob: -3.783036231994629
    9. 'le' → logprob: -4.158036231994629
    10. 'les' → logprob: -4.283036231994629

Token 707: ' position' (ID: 4010)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.6688717007637024
    2. 'next' → logprob: -1.2938716411590576
    3. '[' → logprob: -2.9188716411590576
    4. 'None' → logprob: -3.1688716411590576
    5. 'position' → logprob: -4.043871879577637
    6. '[next' → logprob: -4.293871879577637
    7. ' next' → logprob: -4.418871879577637
    8. 'destination' → logprob: -4.418871879577637
    9. ']' → logprob: -4.543871879577637
    10. '[(' → logprob: -4.793871879577637

Token 708: '
' (ID: 198)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_next' → logprob: -1.1675970554351807
    2. '[' → logprob: -1.9175970554351807
    3. ',' → logprob: -2.4175970554351807
    4. ']' → logprob: -2.5425970554351807
    5. ')' → logprob: -2.5425970554351807
    6. '   ' → logprob: -2.9175970554351807
    7. '_' → logprob: -3.4175970554351807
    8. '       ' → logprob: -3.5425970554351807
    9. 's' → logprob: -3.6675970554351807
    10. 'next' → logprob: -4.042596817016602

Token 709: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8547244668006897
    2. '   ' → logprob: -1.229724407196045
    3. ',' → logprob: -2.354724407196045
    4. '       ' → logprob: -3.104724407196045
    5. '[i' → logprob: -3.604724407196045
    6. 's' → logprob: -4.229724407196045
    7. '_next' → logprob: -4.354724407196045
    8. ']' → logprob: -4.354724407196045
    9. '    ' → logprob: -4.479724407196045
    10. '_' → logprob: -4.729724407196045

Token 710: ' #' (ID: 1069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1212680339813232
    2. '[i' → logprob: -1.7462680339813232
    3. '   ' → logprob: -1.8712680339813232
    4. ' suivante' → logprob: -2.3712680339813232
    5. ',' → logprob: -2.9962680339813232
    6. '       ' → logprob: -2.9962680339813232
    7. '_next' → logprob: -3.6212680339813232
    8. 'next' → logprob: -3.9962680339813232
    9. '[next' → logprob: -4.496268272399902
    10. 's' → logprob: -4.621268272399902

Token 711: ' où' (ID: 15113)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2925199270248413
    2. '[i' → logprob: -2.167520046234131
    3. 's' → logprob: -2.417520046234131
    4. '   ' → logprob: -2.667520046234131
    5. ' suivante' → logprob: -2.792520046234131
    6. ',' → logprob: -2.917520046234131
    7. '[(' → logprob: -3.042520046234131
    8. ' (' → logprob: -3.292520046234131
    9. '(' → logprob: -3.917520046234131
    10. '_next' → logprob: -4.042520046234131

Token 712: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.603235125541687
    2. ' on' → logprob: -1.228235125541687
    3. '_on' → logprob: -2.6032352447509766
    4. '_next' → logprob: -3.4782352447509766
    5. '_' → logprob: -5.103235244750977
    6. 'next' → logprob: -5.228235244750977
    7. ''on' → logprob: -5.228235244750977
    8. ' ' → logprob: -5.353235244750977
    9. '       ' → logprob: -5.478235244750977
    10. '   ' → logprob: -6.103235244750977

Token 713: ' arrive' (ID: 18338)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.5265785455703735
    2. 'va' → logprob: -1.1515785455703735
    3. 'se' → logprob: -2.651578426361084
    4. ' va' → logprob: -5.276578426361084
    5. 'sort' → logprob: -5.776578426361084
    6. ' se' → logprob: -6.026578426361084
    7. 'vais' → logprob: -6.776578426361084
    8. 'atter' → logprob: -6.901578426361084
    9. 'atte' → logprob: -6.901578426361084
    10. '   ' → logprob: -7.151578426361084

Token 714: ' après' (ID: 16460)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5158658027648926
    2. '   ' → logprob: -1.8908658027648926
    3. ',' → logprob: -2.5158658027648926
    4. '[' → logprob: -2.8908658027648926
    5. '[i' → logprob: -3.2658658027648926
    6. ' après' → logprob: -4.015865802764893
    7. ']' → logprob: -4.515865802764893
    8. ')' → logprob: -5.140865802764893
    9. '_' → logprob: -5.265865802764893
    10. '        ' → logprob: -5.640865802764893

Token 715: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2023046314716339
    2. ' ' → logprob: -1.9523046016693115
    3. '[' → logprob: -4.452304840087891
    4. '(' → logprob: -5.452304840087891
    5. ' one' → logprob: -5.702304840087891
    6. ' (' → logprob: -5.952304840087891
    7. '   ' → logprob: -6.077304840087891
    8. ' une' → logprob: -6.077304840087891
    9. ')' → logprob: -6.452304840087891
    10. '0' → logprob: -6.577304840087891

Token 716: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018210232257843018
    2. ' ' → logprob: -5.143210411071777
    3. '(' → logprob: -5.268210411071777
    4. '[' → logprob: -6.268210411071777
    5. '0' → logprob: -6.393210411071777
    6. ' (' → logprob: -7.268210411071777
    7. 'une' → logprob: -7.643210411071777
    8. 'pass' → logprob: -7.768210411071777
    9. '[
' → logprob: -8.018210411071777
    10. 'next' → logprob: -8.393210411071777

Token 717: ' promenade' (ID: 148184)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.9729588627815247
    2. '_' → logprob: -1.5979588031768799
    3. ' ' → logprob: -2.59795880317688
    4. '_step' → logprob: -2.72295880317688
    5. ',' → logprob: -2.97295880317688
    6. '_pas' → logprob: -3.59795880317688
    7. '_pass' → logprob: -3.72295880317688
    8. '_pos' → logprob: -3.84795880317688
    9. '   ' → logprob: -3.97295880317688
    10. '_move' → logprob: -4.097959041595459

Token 718: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9370682835578918
    2. '       ' → logprob: -1.562068223953247
    3. '_next' → logprob: -1.937068223953247
    4. 'next' → logprob: -2.687068223953247
    5. '
' → logprob: -3.062068223953247
    6. '   ' → logprob: -3.312068223953247
    7. '[next' → logprob: -3.312068223953247
    8. ' next' → logprob: -4.437068462371826
    9. '        
' → logprob: -4.812068462371826
    10. ']' → logprob: -4.812068462371826

Token 719: ' part' (ID: 997)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.3434664011001587
    2. 'each' → logprob: -1.9684664011001587
    3. '[i' → logprob: -2.343466281890869
    4. ' chaque' → logprob: -3.093466281890869
    5. ' passant' → logprob: -3.468466281890869
    6. 'next' → logprob: -3.593466281890869
    7. '0' → logprob: -3.593466281890869
    8. '[' → logprob: -3.718466281890869
    9. 'pass' → logprob: -3.843466281890869
    10. ' range' → logprob: -3.843466281890869

Token 720: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.009400692768394947
    2. 'ie' → logprob: -5.509400844573975
    3. 'out' → logprob: -6.259400844573975
    4. '[' → logprob: -6.884400844573975
    5. '   ' → logprob: -7.759400844573975
    6. 'ir' → logprob: -7.884400844573975
    7. '#' → logprob: -8.634400367736816
    8. '```' → logprob: -8.884400367736816
    9. 'ition' → logprob: -9.134400367736816
    10. 'ante' → logprob: -9.134400367736816

Token 721: ' depuis' (ID: 16277)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.235823154449463
    2. '   ' → logprob: -1.735823154449463
    3. 'de' → logprob: -2.110823154449463
    4. '       ' → logprob: -2.110823154449463
    5. ' de' → logprob: -2.360823154449463
    6. '=' → logprob: -2.860823154449463
    7. '[' → logprob: -3.610823154449463
    8. ' =' → logprob: -3.610823154449463
    9. ' from' → logprob: -4.110823154449463
    10. ',' → logprob: -4.110823154449463

Token 722: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.24326841533184052
    2. ' (' → logprob: -2.2432684898376465
    3. '[i' → logprob: -2.3682684898376465
    4. ' i' → logprob: -4.6182684898376465
    5. 'i' → logprob: -5.7432684898376465
    6. '   ' → logprob: -6.7432684898376465
    7. ' [' → logprob: -7.7432684898376465
    8. ' la' → logprob: -8.368268013000488
    9. '[(' → logprob: -8.493268013000488
    10. '(' → logprob: -8.493268013000488

Token 723: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14748139679431915
    2. ' i' → logprob: -2.0224814414978027
    3. '   ' → logprob: -6.522481441497803
    4. '       ' → logprob: -6.647481441497803
    5. ')' → logprob: -7.022481441497803
    6. '    ' → logprob: -8.772480964660645
    7. ' ' → logprob: -8.897480964660645
    8. '0' → logprob: -9.147480964660645
    9. '[i' → logprob: -9.272480964660645
    10. ')i' → logprob: -9.272480964660645

Token 724: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3273027539253235
    2. '][' → logprob: -1.9523026943206787
    3. ',j' → logprob: -2.5773026943206787
    4. '       ' → logprob: -3.8273026943206787
    5. ',i' → logprob: -4.702302932739258
    6. ')' → logprob: -4.952302932739258
    7. '   ' → logprob: -5.202302932739258
    8. ' ,' → logprob: -5.202302932739258
    9. ')[' → logprob: -5.577302932739258
    10. ')][' → logprob: -6.702302932739258

Token 725: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015819786116480827
    2. '       ' → logprob: -4.890819549560547
    3. ')
' → logprob: -5.515819549560547
    4. ').' → logprob: -6.890819549560547
    5. ')]' → logprob: -6.890819549560547
    6. ']' → logprob: -7.515819549560547
    7. '   ' → logprob: -8.265819549560547
    8. '),' → logprob: -8.390819549560547
    9. '))' → logprob: -8.640819549560547
    10. '])' → logprob: -9.015819549560547

Token 726: ' en' (ID: 469)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1430755853652954
    2. '
' → logprob: -2.518075466156006
    3. '        
' → logprob: -3.893075466156006
    4. 'next' → logprob: -4.893075466156006
    5. ' next' → logprob: -5.143075466156006
    6. '_next' → logprob: -5.268075466156006
    7. '[next' → logprob: -5.643075466156006
    8. '[' → logprob: -6.643075466156006
    9. '   ' → logprob: -6.768075466156006
    10. ']' → logprob: -6.893075466156006

Token 727: ' prenant' (ID: 140375)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8363365530967712
    2. 'range' → logprob: -2.336336612701416
    3. '[' → logprob: -2.836336612701416
    4. 'def' → logprob: -3.086336612701416
    5. 'de' → logprob: -3.336336612701416
    6. ' deux' → logprob: -3.461336612701416
    7. '[[' → logprob: -3.461336612701416
    8. '[(' → logprob: -3.586336612701416
    9. 'part' → logprob: -4.086336612701416
    10. '[i' → logprob: -4.211336612701416

Token 728: ' en' (ID: 469)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.12640108168125153
    2. ' compte' → logprob: -2.25140118598938
    3. ' ' → logprob: -5.626400947570801
    4. '   ' → logprob: -5.751400947570801
    5. 'en' → logprob: -6.251400947570801
    6. '```' → logprob: -6.751400947570801
    7. ' en' → logprob: -6.876400947570801
    8. 'la' → logprob: -7.501400947570801
    9. 'account' → logprob: -7.626400947570801
    10. ' comp' → logprob: -7.626400947570801

Token 729: ' compte' (ID: 19657)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.005382810719311237
    2. ' compte' → logprob: -5.630383014678955
    3. 'account' → logprob: -6.505383014678955
    4. 'consider' → logprob: -9.630382537841797
    5. 'count' → logprob: -10.130382537841797
    6. '```' → logprob: -10.380382537841797
    7. 'charge' → logprob: -10.630382537841797
    8. '#' → logprob: -10.755382537841797
    9. 'range' → logprob: -10.755382537841797
    10. '   ' → logprob: -11.005382537841797

Token 730: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6256349086761475
    2. ' l' → logprob: -1.3756349086761475
    3. ' ' → logprob: -2.6256349086761475
    4. 'le' → logprob: -3.8756349086761475
    5. 'l' → logprob: -3.8756349086761475
    6. 'la' → logprob: -4.250635147094727
    7. ' le' → logprob: -4.625635147094727
    8. ' deux' → logprob: -4.625635147094727
    9. ')' → logprob: -4.875635147094727
    10. '_next' → logprob: -5.250635147094727

Token 731: ' direction' (ID: 9262)
  Prédit: ' direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' direction' → logprob: -0.642763078212738
    2. 'direction' → logprob: -1.8927631378173828
    3. ' space' → logprob: -2.267763137817383
    4. 'space' → logprob: -2.767763137817383
    5. 'dire' → logprob: -3.017763137817383
    6. ' passage' → logprob: -4.017763137817383
    7. ' next' → logprob: -4.267763137817383
    8. ' directions' → logprob: -4.392763137817383
    9. 'next' → logprob: -5.392763137817383
    10. ' changement' → logprob: -5.642763137817383

Token 732: ' initial' (ID: 4871)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.4790656566619873
    2. ' =' → logprob: -1.2290656566619873
    3. '_pos' → logprob: -4.229065895080566
    4. 's' → logprob: -4.229065895080566
    5. '
' → logprob: -4.354065895080566
    6. '       ' → logprob: -5.354065895080566
    7. '_' → logprob: -5.354065895080566
    8. ')' → logprob: -5.354065895080566
    9. '   ' → logprob: -5.479065895080566
    10. ']' → logprob: -5.479065895080566

Token 733: 'e' (ID: 68)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.3924112915992737
    2. '_' → logprob: -1.767411231994629
    3. '   ' → logprob: -3.767411231994629
    4. ')' → logprob: -3.892411231994629
    5. ' _' → logprob: -3.892411231994629
    6. '_next' → logprob: -4.142411231994629
    7. ')_' → logprob: -4.642411231994629
    8. ',' → logprob: -4.767411231994629
    9. '       ' → logprob: -4.892411231994629
    10. '[' → logprob: -5.017411231994629

Token 734: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3524003326892853
    2. '_next' → logprob: -1.852400302886963
    3. '
' → logprob: -2.977400302886963
    4. 'next' → logprob: -3.477400302886963
    5. '        
' → logprob: -3.852400302886963
    6. '[next' → logprob: -4.477400302886963
    7. ' next' → logprob: -5.227400302886963
    8. '   ' → logprob: -5.727400302886963
    9. '[' → logprob: -6.352400302886963
    10. '#' → logprob: -6.477400302886963

Token 735: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045685064047575
    2. 'next' → logprob: -3.795685052871704
    3. ' next' → logprob: -4.045685291290283
    4. '[next' → logprob: -7.170685291290283
    5. '```' → logprob: -7.295685291290283
    6. '        
' → logprob: -7.670685291290283
    7. '_next' → logprob: -7.795685291290283
    8. '
' → logprob: -7.920685291290283
    9. '   ' → logprob: -8.295684814453125
    10. '(next' → logprob: -8.670684814453125

Token 736: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5553960800170898
    2. 'next' → logprob: -1.5553960800170898
    3. ' next' → logprob: -1.5553960800170898
    4. '
' → logprob: -6.80539608001709
    5. '   ' → logprob: -7.68039608001709
    6. '        
' → logprob: -7.68039608001709
    7. '#' (adapté à ' #') → logprob: -7.80539608001709
    8. '[next' → logprob: -7.93039608001709
    9. '.next' → logprob: -8.93039608001709
    10. ' for' → logprob: -8.93039608001709

Token 737: ' Nous' (ID: 20193)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.09875945746898651
    2. ' next' → logprob: -2.598759412765503
    3. '       ' → logprob: -4.098759651184082
    4. '   ' → logprob: -6.973759651184082
    5. '#' → logprob: -7.348759651184082
    6. 'for' → logprob: -7.598759651184082
    7. '
' → logprob: -7.973759651184082
    8. 'def' → logprob: -9.098759651184082
    9. ' for' → logprob: -9.348759651184082
    10. '	next' → logprob: -9.473759651184082

Token 738: ' allons' (ID: 97647)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2215187549591064
    2. '       ' → logprob: -1.2215187549591064
    3. ' allons' → logprob: -1.2215187549591064
    4. 'for' → logprob: -3.8465187549591064
    5. 'continu' → logprob: -4.096518516540527
    6. 'all' → logprob: -4.221518516540527
    7. '   ' → logprob: -4.721518516540527
    8. 'contin' → logprob: -4.721518516540527
    9. 'next' → logprob: -5.346518516540527
    10. ' =' → logprob: -5.596518516540527

Token 739: ' gérer' (ID: 86786)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6692854762077332
    2. ' for' → logprob: -1.919285535812378
    3. ' next' → logprob: -2.294285535812378
    4. ' continuer' → logprob: -2.669285535812378
    5. 'next' → logprob: -3.044285535812378
    6. 'contin' → logprob: -3.294285535812378
    7. ' créer' → logprob: -3.794285535812378
    8. '#' → logprob: -3.919285535812378
    9. ' construire' → logprob: -4.044285297393799
    10. '   ' → logprob: -4.294285297393799

Token 740: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9550955295562744
    2. '   ' → logprob: -1.5800955295562744
    3. ' les' → logprob: -2.7050955295562744
    4. '       ' → logprob: -2.9550955295562744
    5. ' l' → logprob: -2.9550955295562744
    6. 'la' → logprob: -2.9550955295562744
    7. 'le' → logprob: -3.5800955295562744
    8. 'les' → logprob: -3.8300955295562744
    9. '_next' → logprob: -3.9550955295562744
    10. ' next' → logprob: -4.080095291137695

Token 741: ' matr' (ID: 25095)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'suite' → logprob: -2.007751226425171
    2. 'liste' → logprob: -2.632751226425171
    3. '#' → logprob: -2.882751226425171
    4. 'direction' → logprob: -3.007751226425171
    5. 'position' → logprob: -3.257751226425171
    6. 'def' → logprob: -3.257751226425171
    7. ' liste' → logprob: -3.257751226425171
    8. ' suite' → logprob: -3.382751226425171
    9. '   ' → logprob: -3.882751226425171
    10. 'stack' → logprob: -3.882751226425171

Token 742: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.003919887822121382
    2. 'ix' → logprob: -5.753920078277588
    3. 'rice' → logprob: -7.628920078277588
    4. 'ic' → logprob: -9.62891960144043
    5. 'ière' → logprob: -9.62891960144043
    6. 'ices' → logprob: -11.00391960144043
    7. 'iece' → logprob: -11.12891960144043
    8. 'ie' → logprob: -11.12891960144043
    9. 'ce' → logprob: -11.25391960144043
    10. 'î' → logprob: -12.00391960144043

Token 743: ' ' (ID: 220)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.9272056221961975
    2. ' of' → logprob: -1.6772055625915527
    3. ' de' → logprob: -1.9272055625915527
    4. 'next' → logprob: -2.0522055625915527
    5. ' des' → logprob: -2.9272055625915527
    6. '_next' → logprob: -3.3022055625915527
    7. '[next' → logprob: -4.302205562591553
    8. '[' → logprob: -4.677205562591553
    9. 'de' → logprob: -4.927205562591553
    10. 'of' → logprob: -5.802205562591553

Token 744: '0' (ID: 15)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.2551023960113525
    2. ' of' → logprob: -1.7551023960113525
    3. 'de' → logprob: -2.0051023960113525
    4. 'next' → logprob: -2.2551023960113525
    5. 'of' → logprob: -3.0051023960113525
    6. ' des' → logprob: -3.0051023960113525
    7. ' next' → logprob: -3.0051023960113525
    8. 'des' → logprob: -3.3801023960113525
    9. '[next' → logprob: -3.7551023960113525
    10. '[' → logprob: -3.7551023960113525

Token 745: '-based' (ID: 8235)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2581603527069092
    2. 'import' → logprob: -2.008160352706909
    3. ' ,' → logprob: -2.508160352706909
    4. '[' → logprob: -3.008160352706909
    5. '
' → logprob: -3.008160352706909
    6. '   ' → logprob: -3.008160352706909
    7. ' =' → logprob: -3.133160352706909
    8. ']' → logprob: -3.758160352706909
    9. '[][]' → logprob: -3.758160352706909
    10. 'x' → logprob: -4.008160591125488

Token 746: ' en' (ID: 469)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4892333745956421
    2. '
' → logprob: -1.489233374595642
    3. '   ' → logprob: -3.2392334938049316
    4. '_next' → logprob: -3.4892334938049316
    5. '[next' → logprob: -4.239233493804932
    6. '        
' → logprob: -4.239233493804932
    7. 'next' → logprob: -4.364233493804932
    8. ' next' → logprob: -4.864233493804932
    9. '_
' → logprob: -4.989233493804932
    10. '[' → logprob: -5.489233493804932

Token 747: ' Python' (ID: 26534)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.5888994336128235
    2. ' H' → logprob: -1.7138993740081787
    3. 'for' → logprob: -2.9638993740081787
    4. 'range' → logprob: -3.0888993740081787
    5. '#' → logprob: -3.5888993740081787
    6. 'python' → logprob: -4.213899612426758
    7. ' ' → logprob: -4.588899612426758
    8. 'i' → logprob: -4.713899612426758
    9. '0' → logprob: -4.713899612426758
    10. '```' → logprob: -4.838899612426758

Token 748: ' mais' (ID: 2899)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5466921329498291
    2. '
' → logprob: -0.9216921329498291
    3. '        
' → logprob: -4.42169189453125
    4. ',' → logprob: -6.17169189453125
    5. '

' → logprob: -6.54669189453125
    6. ':' → logprob: -6.54669189453125
    7. '
' → logprob: -6.54669189453125
    8. '   ' → logprob: -7.42169189453125
    9. '_next' → logprob: -7.79669189453125
    10. 'def' → logprob: -8.17169189453125

Token 749: ' correspond' (ID: 11095)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.2872346639633179
    2. '1' → logprob: -2.1622347831726074
    3. 'on' → logprob: -2.4122347831726074
    4. '0' → logprob: -2.5372347831726074
    5. 'la' → logprob: -2.6622347831726074
    6. 'le' → logprob: -2.7872347831726074
    7. 'l' → logprob: -3.2872347831726074
    8. 'en' → logprob: -3.2872347831726074
    9. 'nous' → logprob: -3.6622347831726074
    10. 'une' → logprob: -3.7872347831726074

Token 750: 'ante' (ID: 2116)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.10962937027215958
    2. 'ante' → logprob: -2.3596293926239014
    3. ' à' → logprob: -5.234629154205322
    4. 'ance' → logprob: -6.984629154205322
    5. '   ' → logprob: -7.609629154205322
    6. 'à' → logprob: -7.859629154205322
    7. ' aux' → logprob: -7.984629154205322
    8. ')' → logprob: -8.10962963104248
    9. ' au' → logprob: -8.23462963104248
    10. 'au' → logprob: -8.35962963104248

Token 751: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24787494540214539
    2. ' à' → logprob: -2.6228749752044678
    3. '   ' → logprob: -2.8728749752044678
    4. ',' → logprob: -3.9978749752044678
    5. 'à' → logprob: -4.122874736785889
    6. ' aux' → logprob: -4.372874736785889
    7. 'aux' → logprob: -4.372874736785889
    8. '```' → logprob: -4.497874736785889
    9. ')' → logprob: -5.747874736785889
    10. ' =' → logprob: -5.872874736785889

Token 752: ' (' (ID: 350)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5191173553466797
    2. 'la' → logprob: -1.3941173553466797
    3. 'une' → logprob: -3.0191173553466797
    4. '1' → logprob: -3.1441173553466797
    5. '0' → logprob: -3.8941173553466797
    6. 'des' → logprob: -4.14411735534668
    7. ' la' → logprob: -5.01911735534668
    8. ' l' → logprob: -5.26911735534668
    9. 'un' → logprob: -5.51911735534668
    10. ' ' → logprob: -5.89411735534668

Token 753: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.15997202694416046
    2. ' i' → logprob: -3.1599719524383545
    3. '0' → logprob: -4.034972190856934
    4. '1' → logprob: -4.284972190856934
    5. '   ' → logprob: -4.409972190856934
    6. 'l' → logprob: -4.409972190856934
    7. ' ' → logprob: -4.784972190856934
    8. 'H' → logprob: -4.784972190856934
    9. ' la' → logprob: -5.284972190856934
    10. 'les' → logprob: -5.659972190856934

Token 754: '-based' (ID: 8235)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24500761926174164
    2. ' ,' → logprob: -1.7450076341629028
    3. '-based' → logprob: -3.8700075149536133
    4. '   ' → logprob: -5.370007514953613
    5. ',
' → logprob: -5.870007514953613
    6. ')' → logprob: -5.995007514953613
    7. ' -' → logprob: -6.120007514953613
    8. ',-' → logprob: -6.245007514953613
    9. '-' → logprob: -6.370007514953613
    10. ')-' → logprob: -6.495007514953613

Token 755: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3008926212787628
    2. ' indexing' → logprob: -2.0508925914764404
    3. ' indices' → logprob: -2.8008925914764404
    4. 'index' → logprob: -3.4258925914764404
    5. 'indices' → logprob: -4.0508928298950195
    6. ' index' → logprob: -5.0508928298950195
    7. ' )' → logprob: -5.8008928298950195
    8. ',' → logprob: -5.8008928298950195
    9. ' ' → logprob: -6.8008928298950195
    10. '   ' → logprob: -6.8008928298950195

Token 756: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1776857376098633
    2. 'indices' → logprob: -1.6776857376098633
    3. '#' → logprob: -1.9276857376098633
    4. ' indices' → logprob: -2.0526857376098633
    5. '       ' → logprob: -2.5526857376098633
    6. ' indexing' → logprob: -3.0526857376098633
    7. 'index' → logprob: -3.6776857376098633
    8. 'indexes' → logprob: -4.427685737609863
    9. ')' → logprob: -4.552685737609863
    10. '
' → logprob: -4.802685737609863

Token 757: ' problème' (ID: 35630)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -1.041454553604126
    2. 'pro' → logprob: -1.291454553604126
    3. 'proble' → logprob: -1.666454553604126
    4. ' problème' → logprob: -3.166454553604126
    5. 'gr' → logprob: -3.416454553604126
    6. '#' → logprob: -3.541454553604126
    7. 'grid' → logprob: -4.291454315185547
    8. 'code' → logprob: -4.416454315185547
    9. 'input' → logprob: -4.916454315185547
    10. 'contest' → logprob: -5.416454315185547

Token 758: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1769799441099167
    2. '
' → logprob: -2.1769800186157227
    3. '        
' → logprob: -3.4269800186157227
    4. 'next' → logprob: -4.801980018615723
    5. ' next' → logprob: -5.801980018615723
    6. ',' → logprob: -7.051980018615723
    7. 'def' → logprob: -7.551980018615723
    8. '   ' → logprob: -7.676980018615723
    9. '_next' → logprob: -7.801980018615723
    10. '#' → logprob: -7.926980018615723

Token 759: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009009121917188168
    2. 'next' → logprob: -5.384008884429932
    3. '        
' → logprob: -6.259008884429932
    4. ' next' → logprob: -7.009008884429932
    5. '
' → logprob: -7.634008884429932
    6. '#' → logprob: -8.00900936126709
    7. '```' → logprob: -9.13400936126709
    8. '   ' → logprob: -9.38400936126709
    9. ',' → logprob: -9.38400936126709
    10. '[next' → logprob: -9.88400936126709

Token 760: ' #' (ID: 1069)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.7828881740570068
    2. '       ' → logprob: -1.1578881740570068
    3. ' next' → logprob: -1.5328881740570068
    4. 'max' → logprob: -4.907888412475586
    5. ' max' → logprob: -6.032888412475586
    6. '#' (adapté à ' #') → logprob: -7.032888412475586
    7. '   ' → logprob: -7.407888412475586
    8. '
' → logprob: -7.907888412475586
    9. '```' → logprob: -8.532888412475586
    10. '[next' → logprob: -8.657888412475586

Token 761: ' Construction' (ID: 31452)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.04741263389587402
    2. '   ' → logprob: -4.422412872314453
    3. ' next' → logprob: -4.422412872314453
    4. '       ' → logprob: -4.547412872314453
    5. 'max' → logprob: -4.922412872314453
    6. '#' → logprob: -5.672412872314453
    7. '
' → logprob: -7.922412872314453
    8. 'def' → logprob: -8.547412872314453
    9. ' max' → logprob: -9.922412872314453
    10. 'dp' → logprob: -10.172412872314453

Token 762: ' du' (ID: 1462)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.2088838666677475
    2. '       ' → logprob: -2.458883762359619
    3. ' next' → logprob: -3.083883762359619
    4. '   ' → logprob: -3.958883762359619
    5. 'max' → logprob: -3.958883762359619
    6. '#' → logprob: -5.083883762359619
    7. ' =' → logprob: -5.458883762359619
    8. 'for' → logprob: -6.208883762359619
    9. '=' → logprob: -6.833883762359619
    10. '
' → logprob: -7.333883762359619

Token 763: ' tableau' (ID: 67053)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.003767424263060093
    2. ' next' → logprob: -5.753767490386963
    3. '[next' → logprob: -8.628767013549805
    4. ']' → logprob: -9.503767013549805
    5. '```' → logprob: -9.878767013549805
    6. '#' → logprob: -9.878767013549805
    7. '"' → logprob: -10.003767013549805
    8. '`' → logprob: -10.503767013549805
    9. '
' → logprob: -10.878767013549805
    10. 'def' → logprob: -10.878767013549805

Token 764: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.28638404607772827
    2. 'next' → logprob: -1.536384105682373
    3. ' =' → logprob: -4.411384105682373
    4. '[next' → logprob: -4.661384105682373
    5. '       ' → logprob: -6.161384105682373
    6. ' for' → logprob: -6.286384105682373
    7. '   ' → logprob: -6.411384105682373
    8. '_next' → logprob: -6.786384105682373
    9. ' of' → logprob: -6.786384105682373
    10. 'for' → logprob: -7.161384105682373

Token 765: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.7120533811976202e-05
    2. 'pos' → logprob: -11.750017166137695
    3. '_next' → logprob: -12.250017166137695
    4. '_positions' → logprob: -12.625017166137695
    5. '_' → logprob: -15.125017166137695
    6. '   ' → logprob: -15.500017166137695
    7. '```' → logprob: -16.125017166137695
    8. 'Pos' → logprob: -16.250017166137695
    9. '       ' → logprob: -16.250017166137695
    10. '_position' → logprob: -16.500017166137695

Token 766: ':
' (ID: 734)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.6223504543304443
    2. ' next' → logprob: -0.9973504543304443
    3. '       ' → logprob: -2.7473504543304443
    4. ' =' → logprob: -4.122350692749023
    5. '   ' → logprob: -5.497350692749023
    6. '
' → logprob: -5.497350692749023
    7. '[next' → logprob: -6.497350692749023
    8. '=' → logprob: -6.872350692749023
    9. '(next' → logprob: -7.497350692749023
    10. '=
' → logprob: -7.747350692749023

Token 767: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3315710425376892
    2. ' next' → logprob: -1.581571102142334
    3. 'next' → logprob: -2.581571102142334
    4. '   ' → logprob: -7.706571102142334
    5. '```' → logprob: -8.331570625305176
    6. '
' → logprob: -10.206570625305176
    7. '[next' → logprob: -10.456570625305176
    8. '.next' → logprob: -11.081570625305176
    9. '	next' → logprob: -11.206570625305176
    10. '        
' → logprob: -11.331570625305176

Token 768: ' #' (ID: 1069)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.8125919699668884
    2. 'next' → logprob: -0.8125919699668884
    3. '       ' → logprob: -2.187592029571533
    4. '   ' → logprob: -8.437591552734375
    5. '```' → logprob: -10.062591552734375
    6. '[next' → logprob: -10.312591552734375
    7. '	next' → logprob: -10.562591552734375
    8. '.next' → logprob: -10.937591552734375
    9. '(next' → logprob: -11.687591552734375
    10. '_next' → logprob: -11.812591552734375

Token 769: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.006289233453571796
    2. ' next' → logprob: -5.131289005279541
    3. '       ' → logprob: -8.2562894821167
    4. '   ' → logprob: -10.1312894821167
    5. 'for' → logprob: -10.8812894821167
    6. '```' → logprob: -11.6312894821167
    7. '[next' → logprob: -12.1312894821167
    8. '	next' → logprob: -12.2562894821167
    9. '``' → logprob: -12.6312894821167
    10. '#' → logprob: -12.7562894821167

Token 770: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -2.696889623621246e-06
    2. '_' → logprob: -13.37500286102295
    3. 'pos' → logprob: -14.37500286102295
    4. '_positions' → logprob: -15.50000286102295
    5. '```' → logprob: -16.500001907348633
    6. '_p' → logprob: -16.500001907348633
    7. ' _' → logprob: -17.875001907348633
    8. '_idx' → logprob: -18.375001907348633
    9. '_i' → logprob: -18.375001907348633
    10. 'Pos' → logprob: -18.500001907348633

Token 771: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869022727012634
    2. '=' → logprob: -1.1369023323059082
    3. '=[' → logprob: -11.76190185546875
    4. '=
' → logprob: -12.01190185546875
    5. ' =
' → logprob: -12.38690185546875
    6. '[' → logprob: -12.76190185546875
    7. '   ' → logprob: -13.26190185546875
    8. ']' → logprob: -13.76190185546875
    9. '=[]' → logprob: -13.76190185546875
    10. ' ' → logprob: -13.76190185546875

Token 772: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01693045347929001
    2. ']' → logprob: -4.14193058013916
    3. '[i' → logprob: -8.26693058013916
    4. ',' → logprob: -8.51693058013916
    5. '   ' → logprob: -8.51693058013916
    6. ']=' → logprob: -9.76693058013916
    7. ' ][' → logprob: -10.14193058013916
    8. '][]' → logprob: -10.26693058013916
    9. ',i' → logprob: -10.51693058013916
    10. ',j' → logprob: -11.14193058013916

Token 773: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00020973898062948138
    2. ' j' → logprob: -9.00020980834961
    3. '][' → logprob: -9.87520980834961
    4. ']' → logprob: -10.87520980834961
    5. '   ' → logprob: -12.00020980834961
    6. '
' → logprob: -12.87520980834961
    7. ',j' → logprob: -13.62520980834961
    8. '           ' → logprob: -13.87520980834961
    9. '       ' → logprob: -14.00020980834961
    10. 'i' → logprob: -14.12520980834961

Token 774: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015875285491347313
    2. '][' → logprob: -4.765875339508057
    3. ']=' → logprob: -5.015875339508057
    4. '   ' → logprob: -8.390874862670898
    5. '[i' → logprob: -9.765874862670898
    6. ' ]' → logprob: -9.765874862670898
    7. '       ' → logprob: -9.765874862670898
    8. '=' → logprob: -9.765874862670898
    9. ']=(' → logprob: -10.140874862670898
    10. ' =' → logprob: -10.640874862670898

Token 775: ' ->' (ID: 2747)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12704643607139587
    2. ' =' → logprob: -2.1270463466644287
    3. '=
' → logprob: -10.377046585083008
    4. '=[' → logprob: -11.002046585083008
    5. '=[]' → logprob: -11.252046585083008
    6. ',' → logprob: -11.502046585083008
    7. '   ' → logprob: -11.752046585083008
    8. ' =
' → logprob: -11.877046585083008
    9. ']' → logprob: -12.002046585083008
    10. ']=' → logprob: -12.377046585083008

Token 776: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.0684726238250732
    2. '(' → logprob: -1.1934726238250732
    3. ' (' → logprob: -1.5684726238250732
    4. '(lambda' → logprob: -2.6934726238250732
    5. '(None' → logprob: -3.3184726238250732
    6. 'None' → logprob: -4.693472862243652
    7. '((' → logprob: -5.068472862243652
    8. '(
' → logprob: -5.443472862243652
    9. '(H' → logprob: -5.693472862243652
    10. '   ' → logprob: -5.943472862243652

Token 777: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.022893795743584633
    2. '(i' → logprob: -4.022893905639648
    3. 'ni' → logprob: -6.147893905639648
    4. ' (' → logprob: -7.022893905639648
    5. ' i' → logprob: -7.397893905639648
    6. ')' → logprob: -8.522893905639648
    7. 'next' → logprob: -8.772893905639648
    8. '(' → logprob: -9.022893905639648
    9. ')i' → logprob: -9.147893905639648
    10. '   ' → logprob: -9.647893905639648

Token 778: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11997126787900925
    2. ',j' → logprob: -2.24497127532959
    3. '+' → logprob: -6.11997127532959
    4. '][' → logprob: -6.24497127532959
    5. ' ,' → logprob: -7.11997127532959
    6. '_next' → logprob: -7.24497127532959
    7. '   ' → logprob: -7.61997127532959
    8. ',next' → logprob: -7.74497127532959
    9. ' +' → logprob: -9.24497127532959
    10. ' ' → logprob: -9.24497127532959

Token 779: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.01609795168042183
    2. ' j' → logprob: -4.1410980224609375
    3. '   ' → logprob: -10.516098022460938
    4. '    ' → logprob: -11.016098022460938
    5. '	j' → logprob: -11.516098022460938
    6. ',j' → logprob: -13.016098022460938
    7. '       ' → logprob: -13.641098022460938
    8. '     ' → logprob: -13.766098022460938
    9. ' ' → logprob: -14.016098022460938
    10. ',' → logprob: -14.016098022460938

Token 780: '')' (ID: 1542)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7407939434051514
    2. '+' → logprob: -1.4907939434051514
    3. ')' → logprob: -1.7407939434051514
    4. '],' → logprob: -3.4907939434051514
    5. '])' → logprob: -3.8657939434051514
    6. '']' → logprob: -4.7407941818237305
    7. ']+' → logprob: -4.7407941818237305
    8. '')' → logprob: -4.8657941818237305
    9. '),' → logprob: -5.1157941818237305
    10. '   ' → logprob: -5.2407941818237305

Token 781: ' où' (ID: 15113)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15099087357521057
    2. '
' → logprob: -3.0259909629821777
    3. '       ' → logprob: -3.2759909629821777
    4. '=' → logprob: -3.2759909629821777
    5. 'for' → logprob: -5.150990962982178
    6. '   ' → logprob: -5.650990962982178
    7. ' for' → logprob: -6.900990962982178
    8. ']' → logprob: -7.275990962982178
    9. ' =
' → logprob: -7.525990962982178
    10. '=
' → logprob: -7.525990962982178

Token 782: ' on' (ID: 402)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2424142360687256
    2. ' i' → logprob: -1.7424142360687256
    3. 'grid' → logprob: -2.6174142360687256
    4. '0' → logprob: -2.7424142360687256
    5. ' next' → logprob: -2.8674142360687256
    6. 'next' → logprob: -2.9924142360687256
    7. 'if' → logprob: -3.1174142360687256
    8. ' (' → logprob: -3.3674142360687256
    9. ' grid' → logprob: -3.3674142360687256
    10. '(i' → logprob: -3.4924142360687256

Token 783: ' arrive' (ID: 18338)
  Prédit: 'va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'va' → logprob: -0.4833410382270813
    2. 'arr' → logprob: -1.1083409786224365
    3. 'se' → logprob: -3.8583409786224365
    4. 'dé' → logprob: -4.608341217041016
    5. ' va' → logprob: -5.358341217041016
    6. 'continue' → logprob: -5.608341217041016
    7. 'part' → logprob: -5.733341217041016
    8. '   ' → logprob: -6.358341217041016
    9. 'go' → logprob: -6.733341217041016
    10. 'next' → logprob: -7.108341217041016

Token 784: ' après' (ID: 16460)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474782258272171
    2. '       ' → logprob: -1.8497822284698486
    3. '[i' → logprob: -2.7247822284698486
    4. '=' → logprob: -2.9747822284698486
    5. ')' → logprob: -3.8497822284698486
    6. '   ' → logprob: -4.474782466888428
    7. ']' → logprob: -4.599782466888428
    8. ' next' → logprob: -4.849782466888428
    9. 'for' → logprob: -4.849782466888428
    10. '_next' → logprob: -4.849782466888428

Token 785: ' avoir' (ID: 16595)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.2643423080444336
    2. ' i' → logprob: -1.3893423080444336
    3. 'i' → logprob: -1.7643423080444336
    4. '1' → logprob: -1.8893423080444336
    5. '[i' → logprob: -3.1393423080444336
    6. ' (' → logprob: -3.8893423080444336
    7. ' ' → logprob: -4.014342308044434
    8. ')' → logprob: -4.514342308044434
    9. 'next' → logprob: -4.889342308044434
    10. '   ' → logprob: -4.889342308044434

Token 786: ' appli' (ID: 25550)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.13586623966693878
    2. 'passed' → logprob: -3.760866165161133
    3. 'fait' → logprob: -4.260866165161133
    4. ' effectué' → logprob: -4.510866165161133
    5. ' parcour' → logprob: -4.635866165161133
    6. '[i' → logprob: -4.635866165161133
    7. 'dé' → logprob: -5.260866165161133
    8. 'mod' → logprob: -5.510866165161133
    9. ' fait' → logprob: -5.635866165161133
    10. ' déplac' → logprob: -5.635866165161133

Token 787: 'qué' (ID: 23535)
  Prédit: 'qué'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qué' → logprob: -0.010670117102563381
    2. 'iqué' → logprob: -5.010670185089111
    3. 'é' → logprob: -6.010670185089111
    4. 'qués' → logprob: -7.635670185089111
    5. 'quée' → logprob: -8.385669708251953
    6. 'qu' → logprob: -9.010669708251953
    7. '[' → logprob: -9.635669708251953
    8. 'que' → logprob: -9.760669708251953
    9. '[i' → logprob: -9.885669708251953
    10. 'u' → logprob: -9.885669708251953

Token 788: ' la' (ID: 557)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.45834824442863464
    2. ' ' → logprob: -2.208348274230957
    3. '(i' → logprob: -2.958348274230957
    4. ' (' → logprob: -3.333348274230957
    5. '[i' → logprob: -3.333348274230957
    6. ' i' → logprob: -3.583348274230957
    7. '   ' → logprob: -4.208348274230957
    8. 'i' → logprob: -4.208348274230957
    9. ' grid' → logprob: -4.458348274230957
    10. ' next' → logprob: -4.708348274230957

Token 789: ' règle' (ID: 115826)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.4752455949783325
    2. 'def' → logprob: -1.8502455949783325
    3. ' next' → logprob: -1.9752455949783325
    4. 'direction' → logprob: -2.350245475769043
    5. ' direction' → logprob: -2.475245475769043
    6. '1' → logprob: -2.475245475769043
    7. ' def' → logprob: -3.975245475769043
    8. 'pass' → logprob: -3.975245475769043
    9. 'dire' → logprob: -4.100245475769043
    10. 'grid' → logprob: -4.100245475769043

Token 790: ' du' (ID: 1462)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3564857244491577
    2. '       ' → logprob: -1.3564857244491577
    3. '=' → logprob: -4.106485843658447
    4. '   ' → logprob: -4.481485843658447
    5. '
' → logprob: -4.856485843658447
    6. ' =
' → logprob: -6.981485843658447
    7. 'next' → logprob: -6.981485843658447
    8. ']' → logprob: -7.106485843658447
    9. 'for' → logprob: -7.231485843658447
    10. '=
' → logprob: -7.481485843658447

Token 791: ' passage' (ID: 26368)
  Prédit: ' passage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' passage' → logprob: -1.3834869861602783
    2. '[i' → logprob: -1.6334869861602783
    3. 'next' → logprob: -2.1334869861602783
    4. 'i' → logprob: -2.5084869861602783
    5. ' next' → logprob: -2.5084869861602783
    6. 'def' → logprob: -3.1334869861602783
    7. ' grid' → logprob: -3.2584869861602783
    8. 'grid' → logprob: -3.6334869861602783
    9. 'pass' → logprob: -4.008486747741699
    10. '(i' → logprob: -4.133486747741699

Token 792: ' une' (ID: 2463)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11391345411539078
    2. '   ' → logprob: -3.2389135360717773
    3. '
' → logprob: -3.6139135360717773
    4. ' =' → logprob: -3.8639135360717773
    5. '[i' → logprob: -5.363913536071777
    6. '        
' → logprob: -6.113913536071777
    7. '           ' → logprob: -6.488913536071777
    8. 'for' → logprob: -6.613913536071777
    9. '_next' → logprob: -6.613913536071777
    10. '=' → logprob: -6.988913536071777

Token 793: ' fois' (ID: 14697)
  Prédit: ' passage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' passage' → logprob: -1.8222179412841797
    2. ']' → logprob: -2.3222179412841797
    3. '[i' → logprob: -2.3222179412841797
    4. ' ' → logprob: -2.3222179412841797
    5. 'pass' → logprob: -2.9472179412841797
    6. 'for' → logprob: -3.0722179412841797
    7. '[]' → logprob: -3.1972179412841797
    8. '`' → logprob: -3.4472179412841797
    9. '\n' → logprob: -3.4472179412841797
    10. '
' → logprob: -3.5722179412841797

Token 794: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37584054470062256
    2. '
' → logprob: -1.3758405447006226
    3. '   ' → logprob: -4.125840663909912
    4. ' =' → logprob: -4.375840663909912
    5. 'next' → logprob: -4.750840663909912
    6. 'for' → logprob: -5.375840663909912
    7. ' next' → logprob: -5.500840663909912
    8. '        
' → logprob: -5.500840663909912
    9. '=' → logprob: -6.625840663909912
    10. ' for' → logprob: -6.625840663909912

Token 795: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009958070702850819
    2. 'next' → logprob: -5.884958267211914
    3. 'for' → logprob: -6.134958267211914
    4. ' for' → logprob: -6.384958267211914
    5. ' next' → logprob: -6.884958267211914
    6. '   ' → logprob: -7.384958267211914
    7. '           ' → logprob: -8.134958267211914
    8. '```' → logprob: -8.259958267211914
    9. '
' → logprob: -8.634958267211914
    10. '        
' → logprob: -8.634958267211914

Token 796: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.2163536101579666
    2. '       ' → logprob: -2.21635365486145
    3. ' next' → logprob: -2.59135365486145
    4. '   ' → logprob: -5.216353416442871
    5. 'for' → logprob: -5.841353416442871
    6. ' for' → logprob: -6.966353416442871
    7. '
' → logprob: -7.716353416442871
    8. '        
' → logprob: -8.841353416442871
    9. '```' → logprob: -8.966353416442871
    10. '[next' → logprob: -9.341353416442871

Token 797: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -6.2729995988775045e-06
    2. '_' → logprob: -12.125006675720215
    3. 'pos' → logprob: -14.250006675720215
    4. '_positions' → logprob: -16.0000057220459
    5. '_position' → logprob: -17.7500057220459
    6. '_token' → logprob: -17.7500057220459
    7. 'Pos' → logprob: -18.0000057220459
    8. ' _' → logprob: -19.3750057220459
    9. '_POS' → logprob: -19.3750057220459
    10. '_val' → logprob: -19.5000057220459

Token 798: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3871055543422699
    2. '=' → logprob: -1.1371055841445923
    3. '=[' → logprob: -8.887105941772461
    4. ' =[' → logprob: -10.387105941772461
    5. '=[[' → logprob: -10.637105941772461
    6. '=[]' → logprob: -10.762105941772461
    7. '[' → logprob: -11.512105941772461
    8. '[i' → logprob: -13.137105941772461
    9. ',' → logprob: -14.137105941772461
    10. '   ' → logprob: -14.262105941772461

Token 799: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0015275981277227402
    2. '[' → logprob: -6.501527786254883
    3. ' [[' → logprob: -11.001527786254883
    4. '[(' → logprob: -12.251527786254883
    5. '[]' → logprob: -12.751527786254883
    6. '[]
' → logprob: -15.001527786254883
    7. '[['' → logprob: -15.001527786254883
    8. '[
' → logprob: -16.501527786254883
    9. '[((' → logprob: -17.001527786254883
    10. ' [[[' → logprob: -17.251527786254883

Token 800: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08530556410551071
    2. '(-' → logprob: -2.8353054523468018
    3. 'None' → logprob: -3.9603054523468018
    4. '(None' → logprob: -5.710305690765381
    5. '(H' → logprob: -7.960305690765381
    6. '0' → logprob: -8.960305213928223
    7. '(i' → logprob: -9.585305213928223
    8. '[' → logprob: -9.960305213928223
    9. ' (' → logprob: -10.835305213928223
    10. '-' → logprob: -10.835305213928223

Token 801: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. '2' → logprob: -13.500003814697266
    3. '-' → logprob: -14.625003814697266
    4. '0' → logprob: -14.625003814697266
    5. '(-' → logprob: -14.625003814697266
    6. '(' → logprob: -14.875003814697266
    7. ' -' → logprob: -15.625003814697266
    8. ',' → logprob: -15.625003814697266
    9. 'sys' → logprob: -16.000003814697266
    10. '   ' → logprob: -16.250003814697266

Token 802: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004305500478949398
    2. ',-' → logprob: -7.875430583953857
    3. ' ,' → logprob: -10.2504301071167
    4. ',next' → logprob: -12.1254301071167
    5. ',
' → logprob: -12.7504301071167
    6. ',j' → logprob: -13.5004301071167
    7. '),' → logprob: -14.1254301071167
    8. ')' → logprob: -14.3754301071167
    9. ',None' → logprob: -15.0004301071167
    10. ',n' → logprob: -15.0004301071167

Token 803: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10032129287719727
    2. '1' → logprob: -2.3503212928771973
    3. ' -' → logprob: -9.100320816040039
    4. '0' → logprob: -13.850320816040039
    5. 'j' → logprob: -14.475320816040039
    6. ')' → logprob: -14.850320816040039
    7. ' ' → logprob: -15.225320816040039
    8. '(-' → logprob: -15.350320816040039
    9. '   ' → logprob: -15.975320816040039
    10. 'i' → logprob: -16.22532081604004

Token 804: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. '2' → logprob: -13.500003814697266
    3. '-' → logprob: -13.750003814697266
    4. ' ' → logprob: -14.125003814697266
    5. ')' → logprob: -15.687503814697266
    6. '   ' → logprob: -16.125003814697266
    7. '```' → logprob: -16.562503814697266
    8. ',' → logprob: -17.125003814697266
    9. '' → logprob: -17.875003814697266
    10. ' -' → logprob: -17.875003814697266

Token 805: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003213960910215974
    2. ')]' → logprob: -5.753213882446289
    3. ' )' → logprob: -11.628213882446289
    4. '),' → logprob: -11.628213882446289
    5. ')
' → logprob: -11.878213882446289
    6. '       ' → logprob: -12.128213882446289
    7. '   ' → logprob: -12.753213882446289
    8. ']' → logprob: -13.878213882446289
    9. '           ' → logprob: -14.628213882446289
    10. '))' → logprob: -15.253213882446289

Token 806: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08956310153007507
    2. 'for' → logprob: -2.5895631313323975
    3. ')' → logprob: -4.589562892913818
    4. '           ' → logprob: -9.464563369750977
    5. '        ' → logprob: -9.964563369750977
    6. '                ' → logprob: -10.089563369750977
    7. '       ' → logprob: -10.089563369750977
    8. '            ' → logprob: -10.089563369750977
    9. '   ' → logprob: -10.214563369750977
    10. '               ' → logprob: -10.464563369750977

Token 807: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19350498914718628
    2. '_range' → logprob: -2.443505048751831
    3. '_j' → logprob: -2.693505048751831
    4. 'range' → logprob: -4.443504810333252
    5. ' range' → logprob: -4.818504810333252
    6. ' _' → logprob: -6.818504810333252
    7. '_w' → logprob: -8.06850528717041
    8. '_in' → logprob: -9.19350528717041
    9. '_W' → logprob: -9.94350528717041
    10. 'in' → logprob: -12.19350528717041

Token 808: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.632542913896032e-05
    2. ' range' → logprob: -10.000046730041504
    3. 'in' → logprob: -14.000046730041504
    4. '(range' → logprob: -17.250045776367188
    5. '	range' → logprob: -19.000045776367188
    6. '_range' → logprob: -19.750045776367188
    7. ')' → logprob: -20.000045776367188
    8. ' in' → logprob: -20.000045776367188
    9. 'row' → logprob: -20.125045776367188
    10. '   ' → logprob: -20.250045776367188

Token 809: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.15310683415737e-05
    2. ' range' → logprob: -10.750021934509277
    3. '(range' → logprob: -18.37502098083496
    4. '   ' → logprob: -18.75002098083496
    5. '	range' → logprob: -20.37502098083496
    6. ' ' → logprob: -21.50002098083496
    7. '    ' → logprob: -22.00002098083496
    8. '
' → logprob: -22.00002098083496
    9. '```' → logprob: -22.00002098083496
    10. 'rang' → logprob: -22.25002098083496

Token 810: '(W' (ID: 26031)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -1.3306015716807451e-05
    2. ' W' → logprob: -11.50001335144043
    3. '   ' → logprob: -13.12501335144043
    4. '(W' → logprob: -14.25001335144043
    5. '       ' → logprob: -15.37501335144043
    6. '	W' → logprob: -16.75001335144043
    7. '           ' → logprob: -17.12501335144043
    8. '               ' → logprob: -17.25001335144043
    9. '                   ' → logprob: -18.37501335144043
    10. '
' → logprob: -18.62501335144043

Token 811: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.7053759519476444e-05
    2. ')' → logprob: -11.125057220458984
    3. '   ' → logprob: -11.125057220458984
    4. '       ' → logprob: -11.500057220458984
    5. ')]
' → logprob: -12.125057220458984
    6. ']' → logprob: -12.125057220458984
    7. ' )' → logprob: -12.750057220458984
    8. '           ' → logprob: -13.500057220458984
    9. ' ]' → logprob: -14.875057220458984
    10. ' ' → logprob: -15.250057220458984

Token 812: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0514780692756176
    2. '       ' → logprob: -3.176478147506714
    3. '   ' → logprob: -5.551477909088135
    4. ' for' → logprob: -5.801477909088135
    5. 'for' → logprob: -7.426477909088135
    6. ' ]' → logprob: -7.676477909088135
    7. ')' → logprob: -7.926477909088135
    8. '           ' → logprob: -10.426478385925293
    9. ')]' → logprob: -10.551478385925293
    10. '        ' → logprob: -10.801478385925293

Token 813: ' _' (ID: 1175)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2519298195838928
    2. ' range' → logprob: -1.501929759979248
    3. '_range' → logprob: -14.626930236816406
    4. '_' → logprob: -15.626930236816406
    5. '(range' → logprob: -16.001930236816406
    6. '	range' → logprob: -17.001930236816406
    7. '   ' → logprob: -18.001930236816406
    8. 'Range' → logprob: -19.751930236816406
    9. ' _' → logprob: -20.001930236816406
    10. 'in' → logprob: -20.001930236816406

Token 814: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.941850526549388e-06
    2. ' range' → logprob: -11.750007629394531
    3. 'in' → logprob: -19.50000762939453
    4. '(range' → logprob: -19.75000762939453
    5. '   ' → logprob: -20.62500762939453
    6. '	range' → logprob: -21.75000762939453
    7. '    ' → logprob: -22.00000762939453
    8. ' ' → logprob: -22.37500762939453
    9. '
' → logprob: -23.12500762939453
    10. 'H' → logprob: -23.50000762939453

Token 815: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007100477814674377
    2. ' range' → logprob: -7.2507100105285645
    3. 'H' → logprob: -15.875710487365723
    4. '(range' → logprob: -17.000709533691406
    5. '(H' → logprob: -18.500709533691406
    6. '[' → logprob: -18.875709533691406
    7. '	range' → logprob: -21.000709533691406
    8. '.range' → logprob: -21.375709533691406
    9. 'Range' → logprob: -21.500709533691406
    10. '
' → logprob: -21.750709533691406

Token 816: '(H' (ID: 20904)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.06410233676433563
    2. 'range' → logprob: -2.8141024112701416
    3. ' range' → logprob: -6.3141021728515625
    4. '(H' → logprob: -8.064102172851562
    5. ' H' → logprob: -12.064102172851562
    6. '   ' → logprob: -14.314102172851562
    7. 'Range' → logprob: -15.064102172851562
    8. '(range' → logprob: -15.189102172851562
    9. ',H' → logprob: -16.564102172851562
    10. '       ' → logprob: -17.064102172851562

Token 817: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.001391423400491476
    2. '       ' → logprob: -6.751391410827637
    3. '   ' → logprob: -8.626391410827637
    4. ')' → logprob: -10.876391410827637
    5. ']' → logprob: -11.251391410827637
    6. ')]
' → logprob: -12.251391410827637
    7. '           ' → logprob: -13.001391410827637
    8. '    ' → logprob: -14.626391410827637
    9. ')])' → logprob: -14.876391410827637
    10. '     ' → logprob: -15.126391410827637

Token 818: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04396088421344757
    2. 'for' → logprob: -3.5439608097076416
    3. ' for' → logprob: -4.293961048126221
    4. '	for' → logprob: -8.668960571289062
    5. '   ' → logprob: -9.043960571289062
    6. '           ' → logprob: -9.918960571289062
    7. '	' → logprob: -10.168960571289062
    8. '        
' → logprob: -10.793960571289062
    9. '	   ' → logprob: -11.418960571289062
    10. '```' → logprob: -11.543960571289062

Token 819: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.051278091967105865
    2. '       ' → logprob: -3.0512781143188477
    3. ' for' → logprob: -5.926278114318848
    4. '	for' → logprob: -11.176278114318848
    5. '   ' → logprob: -12.926278114318848
    6. '```' → logprob: -13.676278114318848
    7. '        
' → logprob: -15.051278114318848
    8. '           ' → logprob: -15.551278114318848
    9. '
' → logprob: -16.05127716064453
    10. ' ' → logprob: -16.30127716064453

Token 820: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.251930296421051
    2. ' i' → logprob: -1.5019302368164062
    3. '	i' → logprob: -14.501930236816406
    4. '_i' → logprob: -15.126930236816406
    5. '   ' → logprob: -15.626930236816406
    6. ' ' → logprob: -15.751930236816406
    7. '  ' → logprob: -18.251930236816406
    8. 'r' → logprob: -18.376930236816406
    9. 'h' → logprob: -18.501930236816406
    10. '    ' → logprob: -18.876930236816406

Token 821: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01420041173696518
    2. 'in' → logprob: -4.264200210571289
    3. ' ' → logprob: -10.639200210571289
    4. '	in' → logprob: -11.889200210571289
    5. '   ' → logprob: -13.014200210571289
    6. '0' → logprob: -13.639200210571289
    7. ')' → logprob: -14.764200210571289
    8. '_' → logprob: -15.014200210571289
    9. '_in' → logprob: -15.139200210571289
    10. ',' → logprob: -15.389200210571289

Token 822: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31326448917388916
    2. ' range' → logprob: -1.3132644891738892
    3. '0' → logprob: -13.188264846801758
    4. ' in' → logprob: -15.063264846801758
    5. ' ' → logprob: -15.813264846801758
    6. 'in' → logprob: -16.063264846801758
    7. '(range' → logprob: -16.188264846801758
    8. '	range' → logprob: -16.188264846801758
    9. ')' → logprob: -17.188264846801758
    10. '   ' → logprob: -17.688264846801758

Token 823: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.12700968980789185
    2. 'H' → logprob: -2.127009630203247
    3. ' H' → logprob: -9.877009391784668
    4. '(' → logprob: -10.877009391784668
    5. '   ' → logprob: -12.252009391784668
    6. '	H' → logprob: -12.377009391784668
    7. '0' → logprob: -13.877009391784668
    8. ' (' → logprob: -14.252009391784668
    9. ')' → logprob: -15.127009391784668
    10. '(
' → logprob: -15.502009391784668

Token 824: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2823888659477234
    2. '):' → logprob: -1.4073889255523682
    3. '   ' → logprob: -6.907388687133789
    4. '):
' → logprob: -8.782388687133789
    5. '       ' → logprob: -10.157388687133789
    6. ')' → logprob: -10.782388687133789
    7. ':' → logprob: -11.782388687133789
    8. '):

' → logprob: -12.032388687133789
    9. ' ):
' → logprob: -13.407388687133789
    10. ' ' → logprob: -13.907388687133789

Token 825: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20174650847911835
    2. '       ' → logprob: -1.8267464637756348
    3. ' for' → logprob: -4.076746463775635
    4. '	   ' → logprob: -5.451746463775635
    5. 'for' → logprob: -8.451746940612793
    6. '	for' → logprob: -9.201746940612793
    7. '   ' → logprob: -9.701746940612793
    8. '           ' → logprob: -9.701746940612793
    9. '    ' → logprob: -10.451746940612793
    10. '	       ' → logprob: -10.951746940612793

Token 826: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10158415138721466
    2. ' for' → logprob: -2.3515841960906982
    3. '   ' → logprob: -6.601583957672119
    4. '           ' → logprob: -11.476584434509277
    5. '       ' → logprob: -12.351584434509277
    6. '	for' → logprob: -13.351584434509277
    7. ' ' → logprob: -13.476584434509277
    8. 'j' → logprob: -14.601584434509277
    9. ' j' → logprob: -16.60158348083496
    10. '    ' → logprob: -17.35158348083496

Token 827: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.16022524237632751
    2. ' j' → logprob: -1.91022527217865
    3. '	j' → logprob: -15.160224914550781
    4. '           ' → logprob: -15.410224914550781
    5. '   ' → logprob: -15.535224914550781
    6. '    ' → logprob: -16.41022491455078
    7. '_j' → logprob: -16.53522491455078
    8. '0' → logprob: -16.53522491455078
    9. ',j' → logprob: -17.16022491455078
    10. '$j' → logprob: -17.41022491455078

Token 828: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014442600309848785
    2. 'in' → logprob: -4.264442443847656
    3. ' ' → logprob: -8.889442443847656
    4. '+' → logprob: -10.139442443847656
    5. '	in' → logprob: -10.889442443847656
    6. '        ' → logprob: -11.514442443847656
    7. '            ' → logprob: -11.639442443847656
    8. ' i' → logprob: -11.889442443847656
    9. '    ' → logprob: -12.389442443847656
    10. '=' → logprob: -12.389442443847656

Token 829: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5869749188423157
    2. ' range' → logprob: -0.8369749188423157
    3. 'W' → logprob: -4.71197509765625
    4. ' W' → logprob: -6.83697509765625
    5. '(W' → logprob: -7.08697509765625
    6. '(range' → logprob: -10.08697509765625
    7. '   ' → logprob: -11.46197509765625
    8. '0' → logprob: -11.46197509765625
    9. ' ' → logprob: -12.46197509765625
    10. '       ' → logprob: -12.58697509765625

Token 830: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.023570850491523743
    2. 'W' → logprob: -3.7735707759857178
    3. 'range' → logprob: -9.148571014404297
    4. '(' → logprob: -10.023571014404297
    5. ' W' → logprob: -10.023571014404297
    6. '(H' → logprob: -10.148571014404297
    7. '       ' → logprob: -11.023571014404297
    8. '           ' → logprob: -11.023571014404297
    9. '   ' → logprob: -11.148571014404297
    10. ' range' → logprob: -11.523571014404297

Token 831: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.055132873356342316
    2. '):' → logprob: -3.1801328659057617
    3. '+' → logprob: -5.180132865905762
    4. '               ' → logprob: -5.930132865905762
    5. '           ' → logprob: -6.680132865905762
    6. '       ' → logprob: -7.055132865905762
    7. ')' → logprob: -7.680132865905762
    8. ':' → logprob: -8.055132865905762
    9. '):
' → logprob: -8.555132865905762
    10. ']:
' → logprob: -8.555132865905762

Token 832: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.038597915321588516
    2. '           ' → logprob: -3.663597822189331
    3. ' if' → logprob: -4.53859806060791
    4. 'if' → logprob: -6.91359806060791
    5. ' direction' → logprob: -8.66359806060791
    6. '   ' → logprob: -9.16359806060791
    7. '                   ' → logprob: -9.28859806060791
    8. 'direction' → logprob: -9.53859806060791
    9. '```' → logprob: -10.78859806060791
    10. '       ' → logprob: -11.16359806060791

Token 833: ' d' (ID: 272)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01248870138078928
    2. ' if' → logprob: -5.387488842010498
    3. 'direction' → logprob: -5.637488842010498
    4. 'd' (adapté à ' d') → logprob: -6.012488842010498
    5. 'di' → logprob: -6.512488842010498
    6. 'dir' → logprob: -8.51248836517334
    7. '                   ' → logprob: -10.01248836517334
    8. 'ni' → logprob: -10.26248836517334
    9. ' direction' → logprob: -11.26248836517334
    10. '               ' → logprob: -11.76248836517334

Token 834: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1798054575920105
    2. '=' → logprob: -1.8048055171966553
    3. '=int' → logprob: -10.304805755615234
    4. '=sys' → logprob: -12.304805755615234
    5. ',' → logprob: -12.554805755615234
    6. ' ' → logprob: -12.929805755615234
    7. ')' → logprob: -13.304805755615234
    8. '=
' → logprob: -13.554805755615234
    9. '                ' → logprob: -13.554805755615234
    10. ' if' → logprob: -13.679805755615234

Token 835: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.0002613358374219388
    2. ' grid' → logprob: -8.250261306762695
    3. '                   ' → logprob: -17.875261306762695
    4. '               ' → logprob: -19.125261306762695
    5. '	grid' → logprob: -19.375261306762695
    6. '(grid' → logprob: -19.500261306762695
    7. '   ' → logprob: -20.625261306762695
    8. '           ' → logprob: -21.000261306762695
    9. '_grid' → logprob: -21.250261306762695
    10. '0' → logprob: -21.375261306762695

Token 836: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00011343709047650918
    2. '][' → logprob: -9.125113487243652
    3. 'i' → logprob: -13.250113487243652
    4. ' [' → logprob: -13.750113487243652
    5. '[' → logprob: -14.625113487243652
    6. '```' → logprob: -15.500113487243652
    7. '[j' → logprob: -15.625113487243652
    8. '[I' → logprob: -15.750113487243652
    9. '           ' → logprob: -16.000112533569336
    10. '               ' → logprob: -16.000112533569336

Token 837: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.014182187616825104
    2. '[i' → logprob: -4.264182090759277
    3. ']' → logprob: -11.889182090759277
    4. '           ' → logprob: -12.889182090759277
    5. ' ][' → logprob: -13.264182090759277
    6. 'i' → logprob: -13.389182090759277
    7. '   ' → logprob: -14.014182090759277
    8. '[j' → logprob: -14.139182090759277
    9. '(i' → logprob: -14.389182090759277
    10. ')[' → logprob: -14.389182090759277

Token 838: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.842555426876061e-06
    2. ' j' → logprob: -12.625004768371582
    3. '[j' → logprob: -14.375004768371582
    4. '   ' → logprob: -15.125004768371582
    5. '	j' → logprob: -15.625004768371582
    6. '][' → logprob: -16.0000057220459
    7. '  ' → logprob: -16.6250057220459
    8. '```' → logprob: -16.6250057220459
    9. ' ' → logprob: -16.7500057220459
    10. ']' → logprob: -17.5000057220459

Token 839: ']' (ID: 60)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6826481819152832
    2. ')' → logprob: -1.8076481819152832
    3. ']
' → logprob: -1.8076481819152832
    4. ']' → logprob: -2.057648181915283
    5. ' ^' → logprob: -3.557648181915283
    6. '^' → logprob: -5.182648181915283
    7. '
' → logprob: -7.057648181915283
    8. '           ' → logprob: -7.182648181915283
    9. ')^' → logprob: -7.307648181915283
    10. '               ' → logprob: -7.432648181915283

Token 840: ' ' (ID: 220)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15493717789649963
    2. 'if' → logprob: -2.154937267303467
    3. ' if' → logprob: -3.654937267303467
    4. '
' → logprob: -6.904937267303467
    5. ',' → logprob: -7.654937267303467
    6. 'next' → logprob: -9.654936790466309
    7. '                
' → logprob: -9.904936790466309
    8. ' =' → logprob: -10.279936790466309
    9. 'If' → logprob: -10.654936790466309
    10. '                   ' → logprob: -11.154936790466309

Token 841: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8637774586677551
    2. 'if' → logprob: -0.9887774586677551
    3. ' if' → logprob: -2.2387773990631104
    4. '               ' → logprob: -2.3637773990631104
    5. '           ' → logprob: -5.7387776374816895
    6. '
' → logprob: -8.113777160644531
    7. '                
' → logprob: -8.113777160644531
    8. '                   ' → logprob: -8.238777160644531
    9. '       ' → logprob: -8.488777160644531
    10. ' 
' → logprob: -8.613777160644531

Token 842: ' initial' (ID: 4871)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.017002059146761894
    2. '0' → logprob: -4.392002105712891
    3. 'direction' → logprob: -5.767002105712891
    4. ' if' → logprob: -7.767002105712891
    5. 'dir' → logprob: -8.39200210571289
    6. '               ' → logprob: -8.64200210571289
    7. 'next' → logprob: -8.64200210571289
    8. '#' → logprob: -9.89200210571289
    9. '                   ' → logprob: -10.01700210571289
    10. 'i' → logprob: -10.01700210571289

Token 843: ' direction' (ID: 9262)
  Prédit: '_direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direction' → logprob: -0.45610105991363525
    2. '_d' → logprob: -1.9561010599136353
    3. 'direction' → logprob: -2.7061009407043457
    4. '_dir' → logprob: -2.9561009407043457
    5. 'd' → logprob: -3.7061009407043457
    6. ')' → logprob: -4.206100940704346
    7. ' =' → logprob: -4.581100940704346
    8. ' direction' → logprob: -4.706100940704346
    9. ']' → logprob: -4.831100940704346
    10. '_i' → logprob: -4.831100940704346

Token 844: ':' (ID: 25)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003979616332799196
    2. 'if' → logprob: -6.253979682922363
    3. ' if' → logprob: -6.628979682922363
    4. '                
' → logprob: -8.253979682922363
    5. ',' → logprob: -8.378979682922363
    6. '
' → logprob: -8.878979682922363
    7. '<|end|>' → logprob: -9.878979682922363
    8. '                ' → logprob: -12.003979682922363
    9. '```' → logprob: -12.753979682922363
    10. ')' → logprob: -12.753979682922363

Token 845: ' ' (ID: 220)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20095613598823547
    2. '0' → logprob: -1.825956106185913
    3. ' if' → logprob: -4.325956344604492
    4. '1' → logprob: -5.950956344604492
    5. '               ' → logprob: -5.950956344604492
    6. 'd' → logprob: -7.575956344604492
    7. ' ' → logprob: -7.825956344604492
    8. ' (' → logprob: -7.825956344604492
    9. '(' → logprob: -7.950956344604492
    10. 'i' → logprob: -8.200956344604492

Token 846: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0400225855410099
    2. '1' → logprob: -3.415022611618042
    3. '(' → logprob: -5.665022373199463
    4. 'if' → logprob: -6.165022373199463
    5. '(i' → logprob: -8.415022850036621
    6. 'd' → logprob: -8.665022850036621
    7. ' ' → logprob: -9.040022850036621
    8. 'j' → logprob: -9.415022850036621
    9. ' (' → logprob: -9.665022850036621
    10. 'i' → logprob: -9.790022850036621

Token 847: '=S' (ID: 165586)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.571589469909668
    2. ',' → logprob: -1.446589469909668
    3. 'if' → logprob: -2.071589469909668
    4. '<|end|>' → logprob: -3.946589469909668
    5. '
' → logprob: -4.321589469909668
    6. '           ' → logprob: -5.071589469909668
    7. ' ,' → logprob: -5.071589469909668
    8. ' ' → logprob: -5.196589469909668
    9. ' ==' → logprob: -5.446589469909668
    10. ' =' → logprob: -5.571589469909668

Token 848: ',' (ID: 11)
  Prédit: 'outh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outh' → logprob: -0.03723197802901268
    2. 'out' → logprob: -4.037231922149658
    3. 'down' → logprob: -5.412231922149658
    4. '   ' → logprob: -5.787231922149658
    5. ',' → logprob: -6.287231922149658
    6. '
' → logprob: -6.662231922149658
    7. 'ud' → logprob: -6.787231922149658
    8. '```' → logprob: -6.787231922149658
    9. 'd' → logprob: -7.162231922149658
    10. '#' → logprob: -7.287231922149658

Token 849: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4247209429740906
    2. ' j' → logprob: -1.4247210025787354
    3. 'j' → logprob: -2.7997210025787354
    4. ' ' → logprob: -4.049720764160156
    5. 'if' → logprob: -4.174720764160156
    6. ' if' → logprob: -5.299720764160156
    7. ')' → logprob: -6.674720764160156
    8. 'd' → logprob: -6.799720764160156
    9. ' d' → logprob: -7.049720764160156
    10. '   ' → logprob: -7.424720764160156

Token 850: '=' (ID: 28)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04522852227091789
    2. 'if' → logprob: -3.9202284812927246
    3. ' ==' → logprob: -4.295228481292725
    4. ',' → logprob: -5.670228481292725
    5. '==' → logprob: -5.670228481292725
    6. '           ' → logprob: -6.670228481292725
    7. '=' → logprob: -7.545228481292725
    8. ' =' → logprob: -7.670228481292725
    9. '	if' → logprob: -7.795228481292725
    10. '
' → logprob: -7.795228481292725

Token 851: 'E' (ID: 36)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00405215984210372
    2. ' ' → logprob: -5.87905216217041
    3. 'E' → logprob: -6.75405216217041
    4. ' E' → logprob: -10.50405216217041
    5. 'j' → logprob: -11.50405216217041
    6. ' (' → logprob: -12.62905216217041
    7. '```' → logprob: -12.62905216217041
    8. ')' → logprob: -12.75405216217041
    9. 'East' → logprob: -12.75405216217041
    10. 'east' → logprob: -12.75405216217041

Token 852: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010961038991808891
    2. '
' → logprob: -5.260961055755615
    3. ' if' → logprob: -5.885961055755615
    4. 'if' → logprob: -6.385961055755615
    5. '                
' → logprob: -7.510961055755615
    6. '<|end|>' → logprob: -8.260960578918457
    7. ',' → logprob: -8.385960578918457
    8. '
' → logprob: -10.135960578918457
    9. ')' → logprob: -10.635960578918457
    10. '                ' → logprob: -11.010960578918457

Token 853: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0208663921803236
    2. 'if' → logprob: -4.270866394042969
    3. ' if' → logprob: -5.020866394042969
    4. '```' → logprob: -10.145866394042969
    5. '                
' → logprob: -11.020866394042969
    6. 'next' → logprob: -11.770866394042969
    7. '
' → logprob: -12.395866394042969
    8. '                   ' → logprob: -12.645866394042969
    9. '           ' → logprob: -13.020866394042969
    10. ' next' → logprob: -13.645866394042969

Token 854: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005579029209911823
    2. '               ' → logprob: -5.880578994750977
    3. 'ni' → logprob: -6.380578994750977
    4. ' if' → logprob: -6.880578994750977
    5. 'next' → logprob: -10.505578994750977
    6. ' ni' → logprob: -11.255578994750977
    7. 'If' → logprob: -13.005578994750977
    8. 'new' → logprob: -14.005578994750977
    9. 'nx' → logprob: -14.130578994750977
    10. 'n' → logprob: -14.255578994750977

Token 855: ' Au' (ID: 18016)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0010694891680032015
    2. 'ni' → logprob: -6.87606954574585
    3. 'If' → logprob: -10.876069068908691
    4. 'next' → logprob: -11.626069068908691
    5. ' if' → logprob: -12.626069068908691
    6. '               ' → logprob: -13.751069068908691
    7. '#' → logprob: -13.876069068908691
    8. 'nx' → logprob: -14.126069068908691
    9. 'di' → logprob: -14.376069068908691
    10. '           ' → logprob: -14.751069068908691

Token 856: ' passage' (ID: 26368)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23326316475868225
    2. ' if' → logprob: -1.7332631349563599
    3. 'next' → logprob: -4.73326301574707
    4. ' next' → logprob: -5.10826301574707
    5. '               ' → logprob: -5.98326301574707
    6. '   ' → logprob: -6.10826301574707
    7. '       ' → logprob: -6.10826301574707
    8. 's' → logprob: -6.73326301574707
    9. '           ' → logprob: -6.98326301574707
    10. 'i' → logprob: -7.10826301574707

Token 857: ',' (ID: 11)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4934256672859192
    2. '               ' → logprob: -1.3684256076812744
    3. 'if' → logprob: -2.4934256076812744
    4. ',' → logprob: -3.3684256076812744
    5. '                   ' → logprob: -5.1184258460998535
    6. 'next' → logprob: -5.4934258460998535
    7. 'token' → logprob: -6.2434258460998535
    8. ' next' → logprob: -6.7434258460998535
    9. '_next' → logprob: -7.8684258460998535
    10. '[next' → logprob: -7.9934258460998535

Token 858: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02872590534389019
    2. ' if' → logprob: -4.278726100921631
    3. 'ni' → logprob: -4.403726100921631
    4. ' ni' → logprob: -6.653726100921631
    5. 'next' → logprob: -7.903726100921631
    6. '#' → logprob: -9.028725624084473
    7. 'di' → logprob: -9.028725624084473
    8. '               ' → logprob: -9.153725624084473
    9. '           ' → logprob: -10.278725624084473
    10. 'i' → logprob: -10.403725624084473

Token 859: ' invers' (ID: 38721)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1325017362833023
    2. ' if' → logprob: -2.2575018405914307
    3. 'next' → logprob: -4.757501602172852
    4. '#' → logprob: -5.632501602172852
    5. ' next' → logprob: -5.632501602172852
    6. ' #' → logprob: -8.007501602172852
    7. 'replace' → logprob: -8.132501602172852
    8. '_next' → logprob: -8.257501602172852
    9. 'new' → logprob: -8.382501602172852
    10. '               ' → logprob: -8.507501602172852

Token 860: 'era' (ID: 2060)
  Prédit: 'te'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.8717749714851379
    2. 'se' → logprob: -1.7467749118804932
    3. 'er' → logprob: -1.8717749118804932
    4. 'erte' → logprob: -2.746774911880493
    5. 'd' → logprob: -2.871774911880493
    6. 'ert' → logprob: -3.871774911880493
    7. 's' → logprob: -3.871774911880493
    8. 't' → logprob: -4.246775150299072
    9. 'ser' → logprob: -4.496775150299072
    10. 'ote' → logprob: -4.621775150299072

Token 861: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6234646439552307
    2. ' if' → logprob: -1.748464584350586
    3. 'if' → logprob: -2.373464584350586
    4. ' d' → logprob: -2.373464584350586
    5. 'direction' → logprob: -2.998464584350586
    6. ' direction' → logprob: -4.248464584350586
    7. 'next' → logprob: -4.498464584350586
    8. ' next' → logprob: -4.623464584350586
    9. 'the' → logprob: -5.998464584350586
    10. ' =' → logprob: -6.123464584350586

Token 862: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8730254173278809
    2. ' if' → logprob: -1.2480254173278809
    3. 'if' → logprob: -1.8730254173278809
    4. '=' → logprob: -3.123025417327881
    5. '_next' → logprob: -3.373025417327881
    6. 'd' → logprob: -3.748025417327881
    7. '               ' → logprob: -4.998025417327881
    8. 'next' → logprob: -5.123025417327881
    9. ' ' → logprob: -5.498025417327881
    10. '   ' → logprob: -5.748025417327881

Token 863: ' la' (ID: 557)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.4919668436050415
    2. '(i' → logprob: -1.9919668436050415
    3. ' next' → logprob: -2.866966724395752
    4. ' (' → logprob: -3.241966724395752
    5. ' la' → logprob: -3.366966724395752
    6. 'la' → logprob: -3.491966724395752
    7. 'the' → logprob: -3.866966724395752
    8. 'if' → logprob: -4.366966724395752
    9. 'i' → logprob: -4.741966724395752
    10. '(' → logprob: -4.991966724395752

Token 864: ' prochaine' (ID: 78876)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.4130520224571228
    2. 'direction' → logprob: -2.0380520820617676
    3. 'pro' → logprob: -3.6630520820617676
    4. 'position' → logprob: -3.6630520820617676
    5. 'destination' → logprob: -3.9130520820617676
    6. ' prochaine' → logprob: -4.038052082061768
    7. ' next' → logprob: -4.163052082061768
    8. ' direction' → logprob: -4.413052082061768
    9. 'if' → logprob: -4.663052082061768
    10. 'suite' → logprob: -4.913052082061768

Token 865: ' fois' (ID: 14697)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.9433160424232483
    2. ' if' → logprob: -1.3183159828186035
    3. 'if' → logprob: -1.9433159828186035
    4. 'pos' → logprob: -2.4433159828186035
    5. 'position' → logprob: -3.3183159828186035
    6. ' token' → logprob: -4.3183159828186035
    7. '_token' → logprob: -4.4433159828186035
    8. '_next' → logprob: -4.6933159828186035
    9. '_pos' → logprob: -4.6933159828186035
    10. 'next' → logprob: -5.3183159828186035

Token 866: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09936363250017166
    2. 'if' → logprob: -2.8493635654449463
    3. ' if' → logprob: -3.4743635654449463
    4. 'next' → logprob: -5.724363803863525
    5. '
' → logprob: -7.099363803863525
    6. '                
' → logprob: -7.224363803863525
    7. ' next' → logprob: -7.724363803863525
    8. ',' → logprob: -8.349363327026367
    9. '```' → logprob: -9.849363327026367
    10. 'token' → logprob: -11.099363327026367

Token 867: ' mais' (ID: 2899)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3638381063938141
    2. 'if' → logprob: -1.2388380765914917
    3. 'next' → logprob: -5.113838195800781
    4. ' next' → logprob: -5.363838195800781
    5. '               ' → logprob: -5.988838195800781
    6. ' ni' → logprob: -6.363838195800781
    7. ' nxt' → logprob: -9.488838195800781
    8. 'ni' → logprob: -9.738838195800781
    9. '                   ' → logprob: -10.113838195800781
    10. 'new' → logprob: -10.113838195800781

Token 868: ' là' (ID: 8052)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7554092407226562
    2. ' if' → logprob: -0.7554092407226562
    3. '               ' → logprob: -3.6304092407226562
    4. 'next' → logprob: -3.7554092407226562
    5. ' next' → logprob: -5.380409240722656
    6. ' si' → logprob: -6.130409240722656
    7. '#' → logprob: -7.005409240722656
    8. '                
' → logprob: -7.505409240722656
    9. 'pos' → logprob: -8.255409240722656
    10. '                   ' → logprob: -8.630409240722656

Token 869: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.89125657081604
    2. ' if' → logprob: -1.01625657081604
    3. '               ' → logprob: -2.14125657081604
    4. 'next' → logprob: -2.89125657081604
    5. ':' → logprob: -3.89125657081604
    6. ',' → logprob: -4.266256332397461
    7. ' next' → logprob: -4.766256332397461
    8. '                   ' → logprob: -5.641256332397461
    9. '           ' → logprob: -6.891256332397461
    10. ':
' → logprob: -7.266256332397461

Token 870: ' sim' (ID: 1845)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.2068320512771606
    2. ' continue' → logprob: -1.8318320512771606
    3. 'if' → logprob: -2.081831932067871
    4. 'next' → logprob: -2.081831932067871
    5. 'contin' → logprob: -3.081831932067871
    6. ' next' → logprob: -3.206831932067871
    7. ' if' → logprob: -3.331831932067871
    8. '#' → logprob: -3.331831932067871
    9. '_next' → logprob: -3.956831932067871
    10. 'est' → logprob: -3.956831932067871

Token 871: 'ule' (ID: 1601)
  Prédit: 'ulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ulate' → logprob: -0.18385933339595795
    2. 'ple' → logprob: -1.9338593482971191
    3. 'plate' → logprob: -5.308859348297119
    4. 'pl' → logprob: -5.683859348297119
    5. 'ply' → logprob: -5.808859348297119
    6. 'p' → logprob: -5.808859348297119
    7. 'plement' → logprob: -5.933859348297119
    8. 'continue' → logprob: -6.933859348297119
    9. 'plete' → logprob: -7.183859348297119
    10. '           ' → logprob: -7.433859348297119

Token 872: ' un' (ID: 537)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.9417021870613098
    2. '               ' → logprob: -1.191702127456665
    3. ' if' → logprob: -2.191702127456665
    4. 'if' → logprob: -2.316702127456665
    5. ' next' → logprob: -2.566702127456665
    6. '                   ' → logprob: -4.941702365875244
    7. 'token' → logprob: -6.441702365875244
    8. 'pos' → logprob: -6.691702365875244
    9. '_next' → logprob: -6.816702365875244
    10. 'the' → logprob: -6.941702365875244

Token 873: ' seul' (ID: 33041)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39824289083480835
    2. ' passage' → logprob: -3.023242950439453
    3. ' )' → logprob: -3.148242950439453
    4. 'space' → logprob: -3.523242950439453
    5. 'token' → logprob: -3.648242950439453
    6. 'pass' → logprob: -3.773242950439453
    7. ' next' → logprob: -4.148242950439453
    8. 'next' → logprob: -4.148242950439453
    9. ' ' → logprob: -4.523242950439453
    10. ' espace' → logprob: -4.523242950439453

Token 874: ' passage' (ID: 26368)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.28762882947921753
    2. 'pas' → logprob: -1.5376288890838623
    3. 'token' → logprob: -3.7876288890838623
    4. 'step' → logprob: -5.287628650665283
    5. ' passage' → logprob: -6.162628650665283
    6. 'tour' → logprob: -6.287628650665283
    7. 'move' → logprob: -7.162628650665283
    8. 'next' → logprob: -7.912628650665283
    9. ' pas' → logprob: -8.412629127502441
    10. '   ' → logprob: -8.662629127502441

Token 875: ',
' (ID: 412)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010352561250329018
    2. '                
' → logprob: -5.385352611541748
    3. 'if' → logprob: -6.135352611541748
    4. ' if' → logprob: -6.385352611541748
    5. 'next' → logprob: -7.635352611541748
    6. '
' → logprob: -7.635352611541748
    7. ',' → logprob: -8.88535213470459
    8. 'token' → logprob: -8.88535213470459
    9. '<|end|>' → logprob: -9.01035213470459
    10. '                ' → logprob: -10.01035213470459

Token 876: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015260485233739018
    2. '                ' → logprob: -7.12652587890625
    3. ' ' → logprob: -8.25152587890625
    4. '<|end|>' → logprob: -8.75152587890625
    5. '                
' → logprob: -9.50152587890625
    6. ' if' → logprob: -10.12652587890625
    7. '                   ' → logprob: -10.25152587890625
    8. ' ' → logprob: -10.50152587890625
    9. '			' → logprob: -10.62652587890625
    10. '<|end|>' → logprob: -11.00152587890625

Token 877: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010458267293870449
    2. ' if' → logprob: -5.260458469390869
    3. 'if' → logprob: -5.510458469390869
    4. '                
' → logprob: -7.760458469390869
    5. 'token' → logprob: -8.885457992553711
    6. '           ' → logprob: -9.510457992553711
    7. '                ' → logprob: -9.635457992553711
    8. '       ' → logprob: -9.885457992553711
    9. ' ' → logprob: -10.010457992553711
    10. '
' → logprob: -10.260457992553711

Token 878: ' donc' (ID: 14206)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3617103397846222
    2. ' if' → logprob: -1.3617103099822998
    3. '               ' → logprob: -3.4867103099823
    4. 'next' → logprob: -5.236710548400879
    5. ' si' → logprob: -5.611710548400879
    6. ' ni' → logprob: -5.611710548400879
    7. ' next' → logprob: -6.861710548400879
    8. 'si' → logprob: -6.986710548400879
    9. 'ni' → logprob: -7.236710548400879
    10. 'pos' → logprob: -7.611710548400879

Token 879: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.060510728508234024
    2. 'ni' → logprob: -3.6855106353759766
    3. ' if' → logprob: -4.060510635375977
    4. ' ni' → logprob: -5.185510635375977
    5. 'next' → logprob: -5.435510635375977
    6. 'si' → logprob: -5.810510635375977
    7. '               ' → logprob: -6.685510635375977
    8. '#' → logprob: -7.560510635375977
    9. ' si' → logprob: -7.560510635375977
    10. 'di' → logprob: -8.185510635375977

Token 880: ' part' (ID: 997)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5175350904464722
    2. 'next' → logprob: -1.6425350904464722
    3. 'continue' → logprob: -2.5175352096557617
    4. 'contin' → logprob: -2.8925352096557617
    5. '#' → logprob: -3.5175352096557617
    6. ' next' → logprob: -4.392535209655762
    7. ' if' → logprob: -4.517535209655762
    8. '_next' → logprob: -5.392535209655762
    9. ' continue' → logprob: -5.517535209655762
    10. 'i' → logprob: -6.392535209655762

Token 881: ' de' (ID: 334)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6990543007850647
    2. 'from' → logprob: -0.9490543007850647
    3. '                   ' → logprob: -2.82405424118042
    4. ' from' → logprob: -4.32405424118042
    5. '                ' → logprob: -5.07405424118042
    6. 'de' → logprob: -5.19905424118042
    7. 'next' → logprob: -5.19905424118042
    8. ' de' → logprob: -5.69905424118042
    9. ' des' → logprob: -6.32405424118042
    10. '_next' → logprob: -6.44905424118042

Token 882: ' d' (ID: 272)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.1786278933286667
    2. 'i' → logprob: -2.5536279678344727
    3. ' (' → logprob: -2.8036279678344727
    4. 'd' → logprob: -4.678627967834473
    5. '(' → logprob: -4.928627967834473
    6. ' i' → logprob: -5.928627967834473
    7. '(j' → logprob: -5.928627967834473
    8. 'j' → logprob: -6.928627967834473
    9. '[i' → logprob: -7.553627967834473
    10. '0' → logprob: -7.928627967834473

Token 883: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.58694326877594
    2. ' if' → logprob: -1.58694326877594
    3. ' =' → logprob: -1.83694326877594
    4. '_next' → logprob: -2.5869431495666504
    5. ',' → logprob: -2.8369431495666504
    6. 'd' → logprob: -2.9619431495666504
    7. ')' → logprob: -3.3369431495666504
    8. '=' → logprob: -3.5869431495666504
    9. '
' → logprob: -3.7119431495666504
    10. '<|end|>' → logprob: -3.8369431495666504

Token 884: ' et' (ID: 859)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.44976136088371277
    2. 'if' → logprob: -1.0747613906860352
    3. ' ni' → logprob: -4.199761390686035
    4. ' next' → logprob: -6.324761390686035
    5. 'next' → logprob: -6.699761390686035
    6. 'ni' → logprob: -6.824761390686035
    7. '               ' → logprob: -7.074761390686035
    8. '                   ' → logprob: -7.824761390686035
    9. ' si' → logprob: -8.074761390686035
    10. 'i' → logprob: -10.699761390686035

Token 885: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.036546412855386734
    2. 'ni' → logprob: -3.411546468734741
    3. ' if' → logprob: -6.661546230316162
    4. ' ni' → logprob: -7.161546230316162
    5. 'next' → logprob: -8.28654670715332
    6. '
' → logprob: -9.28654670715332
    7. '               ' → logprob: -9.66154670715332
    8. '           ' → logprob: -9.78654670715332
    9. 'si' → logprob: -9.91154670715332
    10. '```' → logprob: -10.03654670715332

Token 886: ' va' (ID: 3423)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10226817429065704
    2. 'next' → logprob: -3.2272682189941406
    3. ' if' → logprob: -4.477268218994141
    4. 'contin' → logprob: -4.602268218994141
    5. 's' → logprob: -5.102268218994141
    6. '#' → logprob: -5.102268218994141
    7. 'sim' → logprob: -5.227268218994141
    8. 'move' → logprob: -6.102268218994141
    9. 'continue' → logprob: -6.227268218994141
    10. ' next' → logprob: -6.352268218994141

Token 887: ' dans' (ID: 2671)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.07016116380691528
    2. ' (' → logprob: -2.9451611042022705
    3. 'i' → logprob: -5.44516134262085
    4. '[i' → logprob: -5.69516134262085
    5. 'down' → logprob: -6.07016134262085
    6. 'to' → logprob: -6.57016134262085
    7. '(' → logprob: -6.94516134262085
    8. ' i' → logprob: -7.57016134262085
    9. '   ' → logprob: -7.69516134262085
    10. 'next' → logprob: -8.195160865783691

Token 888: ' la' (ID: 557)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.20575477182865143
    2. ' (' → logprob: -2.2057547569274902
    3. '(' → logprob: -2.7057547569274902
    4. 'i' → logprob: -5.70575475692749
    5. '(j' → logprob: -5.70575475692749
    6. '[i' → logprob: -7.08075475692749
    7. '((' → logprob: -7.83075475692749
    8. '
' → logprob: -8.330755233764648
    9. ' i' → logprob: -8.330755233764648
    10. 'j' → logprob: -8.705755233764648

Token 889: ' direction' (ID: 9262)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.1430317759513855
    2. '(' → logprob: -2.2680318355560303
    3. ' (' → logprob: -4.268031597137451
    4. 'down' → logprob: -5.393031597137451
    5. '[i' → logprob: -5.518031597137451
    6. '(j' → logprob: -6.393031597137451
    7. 'i' → logprob: -6.768031597137451
    8. '
' → logprob: -7.268031597137451
    9. '[(' → logprob: -7.393031597137451
    10. 'next' → logprob: -7.893031597137451

Token 890: ' correspond' (ID: 11095)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.821723997592926
    2. ' =' → logprob: -1.3217239379882812
    3. ',' → logprob: -2.8217239379882812
    4. 'if' → logprob: -3.1967239379882812
    5. '               ' → logprob: -3.6967239379882812
    6. ' i' → logprob: -3.9467239379882812
    7. '[i' → logprob: -4.071723937988281
    8. 'down' → logprob: -4.321723937988281
    9. '=' → logprob: -4.446723937988281
    10. ' +' → logprob: -4.571723937988281

Token 891: 'ante' (ID: 2116)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.003949761390686
    2. ' à' → logprob: -1.753949761390686
    3. 'à' → logprob: -2.0039496421813965
    4. 'ante' → logprob: -2.2539496421813965
    5. '       ' → logprob: -2.5039496421813965
    6. '           ' → logprob: -3.0039496421813965
    7. 'ant' → logprob: -4.2539496421813965
    8. ')' → logprob: -4.2539496421813965
    9. '   ' → logprob: -4.3789496421813965
    10. 'to' → logprob: -4.5039496421813965

Token 892: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08348935097455978
    2. ' if' → logprob: -2.833489418029785
    3. 'if' → logprob: -4.208489418029785
    4. '                
' → logprob: -5.833489418029785
    5. '
' → logprob: -6.083489418029785
    6. ',' → logprob: -7.708489418029785
    7. '                ' → logprob: -8.583489418029785
    8. '                   ' → logprob: -9.083489418029785
    9. '           ' → logprob: -9.958489418029785
    10. 'next' → logprob: -10.208489418029785

Token 893: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07467793673276901
    2. ' if' → logprob: -3.0746779441833496
    3. 'if' → logprob: -3.8246779441833496
    4. 'next' → logprob: -6.57467794418335
    5. '```' → logprob: -6.57467794418335
    6. ' next' → logprob: -7.19967794418335
    7. '                
' → logprob: -8.949677467346191
    8. '<|end|>' → logprob: -10.074677467346191
    9. '``' → logprob: -10.574677467346191
    10. 'token' → logprob: -10.699677467346191

Token 894: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.36209964752197266
    2. ' if' → logprob: -1.2370996475219727
    3. '               ' → logprob: -4.362099647521973
    4. 'next' → logprob: -7.362099647521973
    5. ' next' → logprob: -8.862099647521973
    6. '```' → logprob: -11.612099647521973
    7. 'pos' → logprob: -12.237099647521973
    8. 'If' → logprob: -12.362099647521973
    9. 'x' → logprob: -13.112099647521973
    10. 'i' → logprob: -13.112099647521973

Token 895: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06224943697452545
    2. ' d' → logprob: -2.8122494220733643
    3. 'j' → logprob: -8.812249183654785
    4. 'i' → logprob: -10.562249183654785
    5. ' j' → logprob: -10.687249183654785
    6. '   ' → logprob: -10.687249183654785
    7. ' ' → logprob: -10.937249183654785
    8. '     ' → logprob: -11.937249183654785
    9. '  ' → logprob: -12.062249183654785
    10. 'grid' → logprob: -12.187249183654785

Token 896: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.632632315158844
    2. ' ==' → logprob: -0.757632315158844
    3. '[' → logprob: -11.5076322555542
    4. ']==' → logprob: -12.1326322555542
    5. ')==' → logprob: -12.2576322555542
    6. '==
' → logprob: -12.3826322555542
    7. '=' → logprob: -12.8826322555542
    8. ' ' → logprob: -13.5076322555542
    9. ' ' → logprob: -14.2576322555542
    10. '
' → logprob: -14.5076322555542

Token 897: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22598221898078918
    2. '1' → logprob: -1.6009821891784668
    3. ' ' → logprob: -7.475982189178467
    4. '   ' → logprob: -13.225982666015625
    5. 'S' → logprob: -15.288482666015625
    6. '  ' → logprob: -16.163482666015625
    7. 's' → logprob: -16.163482666015625
    8. '```' → logprob: -16.225982666015625
    9. '
' → logprob: -16.350982666015625
    10. '=' → logprob: -16.725982666015625

Token 898: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020545274019241333
    2. '1' → logprob: -3.895545244216919
    3. ' ' → logprob: -12.77054500579834
    4. 'S' → logprob: -15.64554500579834
    5. 's' → logprob: -16.895545959472656
    6. '```' → logprob: -16.958045959472656
    7. '۰' → logprob: -17.020545959472656
    8. '   ' → logprob: -17.270545959472656
    9. '=' → logprob: -18.020545959472656
    10. '[' → logprob: -18.083045959472656

Token 899: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.18533740937709808
    2. ':' → logprob: -2.0603373050689697
    3. 'and' → logprob: -3.5603373050689697
    4. ':
' → logprob: -5.185337543487549
    5. '           ' → logprob: -5.435337543487549
    6. '               ' → logprob: -6.185337543487549
    7. '                   ' → logprob: -7.435337543487549
    8. ',' → logprob: -8.06033706665039
    9. '   ' → logprob: -8.93533706665039
    10. ' ' → logprob: -9.81033706665039

Token 900: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3021635115146637
    2. ' next' → logprob: -1.5521634817123413
    3. '               ' → logprob: -3.927163600921631
    4. ' (' → logprob: -4.802163600921631
    5. 'next' → logprob: -4.927163600921631
    6. ',' → logprob: -5.177163600921631
    7. '                       ' → logprob: -5.927163600921631
    8. ' ' → logprob: -7.052163600921631
    9. '(next' → logprob: -7.052163600921631
    10. ' ' → logprob: -7.177163600921631

Token 901: ' #' (ID: 1069)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.30031898617744446
    2. 'if' → logprob: -2.175318956375122
    3. 'ni' → logprob: -2.175318956375122
    4. '                   ' → logprob: -4.550319194793701
    5. 'nj' → logprob: -4.800319194793701
    6. ' next' → logprob: -5.175319194793701
    7. ' ni' → logprob: -5.800319194793701
    8. '                       ' → logprob: -6.675319194793701
    9. 'new' → logprob: -7.175319194793701
    10. ' if' → logprob: -7.425319194793701

Token 902: ' aller' (ID: 18383)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.7380651235580444
    2. 'ni' → logprob: -1.6130651235580444
    3. 'nj' → logprob: -1.7380651235580444
    4. 'if' → logprob: -1.9880651235580444
    5. 'new' → logprob: -5.988065242767334
    6. 'i' → logprob: -6.738065242767334
    7. ' ni' → logprob: -6.738065242767334
    8. ' next' → logprob: -6.863065242767334
    9. 'pos' → logprob: -7.238065242767334
    10. ' nj' → logprob: -7.738065242767334

Token 903: ' vers' (ID: 3640)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -1.4277750253677368
    2. ' to' → logprob: -1.9277750253677368
    3. 'to' → logprob: -2.1777749061584473
    4. '(i' → logprob: -2.3027749061584473
    5. ' (' → logprob: -2.4277749061584473
    6. ' right' → logprob: -2.4277749061584473
    7. 'i' → logprob: -2.8027749061584473
    8. ' i' → logprob: -3.0527749061584473
    9. '               ' → logprob: -3.5527749061584473
    10. '[i' → logprob: -3.8027749061584473

Token 904: ' Est' (ID: 4555)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.6511335372924805
    2. 'i' → logprob: -1.2761335372924805
    3. ' (' → logprob: -1.7761335372924805
    4. ' i' → logprob: -3.5261335372924805
    5. '(' → logprob: -8.52613353729248
    6. 'j' → logprob: -8.52613353729248
    7. '                   ' → logprob: -9.02613353729248
    8. '(j' → logprob: -10.02613353729248
    9. '[i' → logprob: -10.15113353729248
    10. '   ' → logprob: -10.77613353729248

Token 905: ' ->' (ID: 2747)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6230555176734924
    2. '[i' → logprob: -1.6230554580688477
    3. ',' → logprob: -2.6230554580688477
    4. '               ' → logprob: -3.1230554580688477
    5. '(i' → logprob: -3.3730554580688477
    6. 'i' → logprob: -3.4980554580688477
    7. ' (' → logprob: -3.7480554580688477
    8. ' i' → logprob: -4.373055458068848
    9. 'next' → logprob: -4.498055458068848
    10. ' next' → logprob: -4.873055458068848

Token 906: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2657476663589478
    2. '(i' → logprob: -1.2657476663589478
    3. 'j' → logprob: -1.8907476663589478
    4. 'if' → logprob: -2.015747547149658
    5. ' (' → logprob: -2.515747547149658
    6. '(j' → logprob: -3.640747547149658
    7. ' i' → logprob: -4.265747547149658
    8. '                   ' → logprob: -4.765747547149658
    9. ' j' → logprob: -5.015747547149658
    10. ' if' → logprob: -5.140747547149658

Token 907: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00015205175441224128
    2. ' i' → logprob: -8.875151634216309
    3. '                   ' → logprob: -11.375151634216309
    4. '               ' → logprob: -15.250151634216309
    5. '                       ' → logprob: -15.625151634216309
    6. '   ' → logprob: -16.375152587890625
    7. '                           ' → logprob: -16.750152587890625
    8. ')' → logprob: -17.000152587890625
    9. '(i' → logprob: -17.000152587890625
    10. '	i' → logprob: -17.000152587890625

Token 908: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004268219694495201
    2. ',i' → logprob: -6.379268169403076
    3. '[i' → logprob: -6.504268169403076
    4. ' ,' → logprob: -7.879268169403076
    5. ',j' → logprob: -8.004268646240234
    6. '                   ' → logprob: -8.504268646240234
    7. 'i' → logprob: -10.004268646240234
    8. '[' → logprob: -10.504268646240234
    9. ',
' → logprob: -10.879268646240234
    10. '               ' → logprob: -11.254268646240234

Token 909: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.014164566993713379
    2. ' j' → logprob: -4.264164447784424
    3. '	j' → logprob: -14.389164924621582
    4. '   ' → logprob: -14.889164924621582
    5. 'i' → logprob: -16.389163970947266
    6. ' ' → logprob: -17.014163970947266
    7. '
' → logprob: -17.764163970947266
    8. ',j' → logprob: -18.014163970947266
    9. '    ' → logprob: -19.514163970947266
    10. '  ' → logprob: -19.889163970947266

Token 910: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07069522887468338
    2. ' +' → logprob: -2.695695161819458
    3. ',' → logprob: -7.695695400238037
    4. ')' → logprob: -8.695694923400879
    5. '+j' → logprob: -10.070694923400879
    6. ')+' → logprob: -10.320694923400879
    7. '                   ' → logprob: -11.320694923400879
    8. ',j' → logprob: -11.445694923400879
    9. '+i' → logprob: -11.570694923400879
    10. '),' → logprob: -12.320694923400879

Token 911: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7848862373502925e-05
    2. '+' → logprob: -11.125027656555176
    3. ' ' → logprob: -11.375027656555176
    4. ')' → logprob: -14.500027656555176
    5. '```' → logprob: -14.500027656555176
    6. '
' → logprob: -15.625027656555176
    7. '   ' → logprob: -15.625027656555176
    8. ' +' → logprob: -16.000028610229492
    9. 'j' → logprob: -16.500028610229492
    10. '`' → logprob: -17.250028610229492

Token 912: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00422085914760828
    2. ')
' → logprob: -5.504220962524414
    3. '               ' → logprob: -9.629220962524414
    4. '                   ' → logprob: -10.129220962524414
    5. ' )' → logprob: -11.504220962524414
    6. ')
' → logprob: -11.879220962524414
    7. '),' → logprob: -12.379220962524414
    8. '           ' → logprob: -13.004220962524414
    9. '                       ' → logprob: -13.379220962524414
    10. '   ' → logprob: -13.504220962524414

Token 913: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.025661231949925423
    2. '               ' → logprob: -4.150661468505859
    3. '                       ' → logprob: -5.900661468505859
    4. ')' → logprob: -6.650661468505859
    5. '           ' → logprob: -6.775661468505859
    6. ' next' → logprob: -6.775661468505859
    7. '<|end|>' → logprob: -7.650661468505859
    8. '                    
' → logprob: -7.775661468505859
    9. '[next' → logprob: -8.02566146850586
    10. '
' → logprob: -8.27566146850586

Token 914: ' if' (ID: 538)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.5830473303794861
    2. 'if' (adapté à ' if') → logprob: -0.9580473303794861
    3. '                   ' → logprob: -3.458047389984131
    4. ' next' → logprob: -4.208047389984131
    5. ' if' → logprob: -4.583047389984131
    6. '               ' → logprob: -7.583047389984131
    7. '                       ' → logprob: -8.083046913146973
    8. 'pos' → logprob: -8.833046913146973
    9. '(next' → logprob: -9.083046913146973
    10. '           ' → logprob: -9.708046913146973

Token 915: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.001707659917883575
    2. ' j' → logprob: -6.376707553863525
    3. '   ' → logprob: -12.376708030700684
    4. '(j' → logprob: -14.626708030700684
    5. '	j' → logprob: -15.001708030700684
    6. '0' → logprob: -15.126708030700684
    7. ' ' → logprob: -15.751708030700684
    8. '  ' → logprob: -17.501707077026367
    9. '    ' → logprob: -17.626707077026367
    10. '(' → logprob: -17.751707077026367

Token 916: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08761578053236008
    2. ' +' → logprob: -2.587615728378296
    3. ' <' → logprob: -5.087615966796875
    4. '<' → logprob: -6.087615966796875
    5. '<|end|>' → logprob: -10.337615966796875
    6. ' !=' → logprob: -10.587615966796875
    7. '[' → logprob: -10.962615966796875
    8. '+j' → logprob: -10.962615966796875
    9. '0' → logprob: -10.962615966796875
    10. '<size' → logprob: -11.087615966796875

Token 917: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.735893965815194e-05
    2. ' ' → logprob: -11.000017166137695
    3. '+' → logprob: -15.625017166137695
    4. '<' → logprob: -15.875017166137695
    5. '0' → logprob: -15.875017166137695
    6. ' <' → logprob: -16.250017166137695
    7. '
' → logprob: -16.875017166137695
    8. '   ' → logprob: -17.250017166137695
    9. '```' → logprob: -17.250017166137695
    10. '`' → logprob: -18.125017166137695

Token 918: ' <=' (ID: 5017)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.05589623749256134
    2. ' <' → logprob: -3.055896282196045
    3. '<W' → logprob: -4.930896282196045
    4. '<H' → logprob: -11.180895805358887
    5. '<V' → logprob: -11.930895805358887
    6. ')' → logprob: -12.055895805358887
    7. '<N' → logprob: -12.430895805358887
    8. '<size' → logprob: -12.430895805358887
    9. '<len' → logprob: -12.930895805358887
    10. '<D' → logprob: -12.930895805358887

Token 919: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0013290488859638572
    2. ' W' → logprob: -6.626328945159912
    3. '	W' → logprob: -13.50132942199707
    4. '   ' → logprob: -14.00132942199707
    5. '=W' → logprob: -15.37632942199707
    6. '(W' → logprob: -15.75132942199707
    7. '
' → logprob: -15.87632942199707
    8. ' ' → logprob: -16.00132942199707
    9. '```' → logprob: -16.50132942199707
    10. '<W' → logprob: -16.75132942199707

Token 920: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.023255497217178345
    2. ' -' → logprob: -3.7732555866241455
    3. '1' → logprob: -11.898255348205566
    4. '−' → logprob: -13.648255348205566
    5. '–' → logprob: -14.398255348205566
    6. '   ' → logprob: -14.648255348205566
    7. ' ' → logprob: -15.148255348205566
    8. '           ' → logprob: -15.648255348205566
    9. '0' → logprob: -15.773255348205566
    10. 'and' → logprob: -16.398256301879883

Token 921: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.00000286102295
    3. '2' → logprob: -15.37500286102295
    4. '   ' → logprob: -16.250001907348633
    5. '```' → logprob: -17.500001907348633
    6. '-' → logprob: -18.125001907348633
    7. '
' → logprob: -18.500001907348633
    8. '۱' → logprob: -19.187501907348633
    9. '  ' → logprob: -19.312501907348633
    10. '１' → logprob: -19.312501907348633

Token 922: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12933921813964844
    2. ':' → logprob: -2.1293392181396484
    3. '):
' → logprob: -7.129339218139648
    4. '                   ' → logprob: -7.129339218139648
    5. '                       ' → logprob: -8.004339218139648
    6. '               ' → logprob: -9.129339218139648
    7. ' and' → logprob: -9.254339218139648
    8. ',' → logprob: -10.254339218139648
    9. ' :
' → logprob: -10.254339218139648
    10. ':

' → logprob: -10.504339218139648

Token 923: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.40896177291870117
    2. ' next' → logprob: -1.6589617729187012
    3. 'next' → logprob: -2.033961772918701
    4. '                   ' → logprob: -4.658961772918701
    5. '                           ' → logprob: -5.783961772918701
    6. ',' → logprob: -7.783961772918701
    7. '[next' → logprob: -8.15896224975586
    8. ',next' → logprob: -8.40896224975586
    9. '	next' → logprob: -8.53396224975586
    10. '                               ' → logprob: -8.53396224975586

Token 924: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.010166602209210396
    2. ' next' → logprob: -4.635166645050049
    3. '                       ' → logprob: -8.38516616821289
    4. '                           ' → logprob: -9.88516616821289
    5. '                   ' → logprob: -10.01016616821289
    6. '	next' → logprob: -10.63516616821289
    7. '   ' → logprob: -10.88516616821289
    8. '(next' → logprob: -11.76016616821289
    9. '                               ' → logprob: -12.13516616821289
    10. 'i' → logprob: -12.51016616821289

Token 925: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -3.8889261304575484e-06
    2. 'pos' → logprob: -12.750003814697266
    3. 'Pos' → logprob: -15.000003814697266
    4. '[i' → logprob: -15.625003814697266
    5. '```' → logprob: -15.750003814697266
    6. '[' → logprob: -16.000003814697266
    7. '[pos' → logprob: -17.000003814697266
    8. '_next' → logprob: -17.250003814697266
    9. '_position' → logprob: -17.500003814697266
    10. '                   ' → logprob: -17.875003814697266

Token 926: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. '[I' → logprob: -14.875000953674316
    3. '[' → logprob: -15.625000953674316
    4. '[j' → logprob: -15.750000953674316
    5. ' [' → logprob: -15.875000953674316
    6. '][' → logprob: -16.250001907348633
    7. '[next' → logprob: -16.500001907348633
    8. '```' → logprob: -16.750001907348633
    9. '=' → logprob: -17.500001907348633
    10. ')[' → logprob: -17.500001907348633

Token 927: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.11609844118356705
    2. '[i' → logprob: -2.241098403930664
    3. '[j' → logprob: -5.741098403930664
    4. '[' → logprob: -11.116098403930664
    5. ']' → logprob: -11.116098403930664
    6. ' [' → logprob: -12.241098403930664
    7. ' ][' → logprob: -12.241098403930664
    8. 'i' → logprob: -12.491098403930664
    9. ')[' → logprob: -13.366098403930664
    10. '[
' → logprob: -13.366098403930664

Token 928: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.726595241460018e-05
    2. ' j' → logprob: -10.37503719329834
    3. '   ' → logprob: -12.62503719329834
    4. '[j' → logprob: -13.62503719329834
    5. '(j' → logprob: -14.37503719329834
    6. '  ' → logprob: -15.75003719329834
    7. '    ' → logprob: -15.87503719329834
    8. ' ' → logprob: -16.125038146972656
    9. '	j' → logprob: -16.250038146972656
    10. '
' → logprob: -16.500038146972656

Token 929: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.33459538221359253
    2. ']' → logprob: -2.0845954418182373
    3. ']=' → logprob: -2.3345954418182373
    4. ' =' → logprob: -2.9595954418182373
    5. ']=(' → logprob: -4.709595203399658
    6. '][' → logprob: -6.584595203399658
    7. '=(' → logprob: -7.584595203399658
    8. '=
' → logprob: -9.084595680236816
    9. '[i' → logprob: -9.709595680236816
    10. '[' → logprob: -9.709595680236816

Token 930: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00014120421838015318
    2. ' =' → logprob: -8.875141143798828
    3. '=
' → logprob: -14.500141143798828
    4. '=(' → logprob: -14.750141143798828
    5. '=j' → logprob: -15.375141143798828
    6. '=i' → logprob: -16.000141143798828
    7. '=

' → logprob: -17.250141143798828
    8. '＝' → logprob: -18.000141143798828
    9. ']=' → logprob: -18.125141143798828
    10. ')=' → logprob: -18.250141143798828

Token 931: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -9.662937372922897e-05
    2. ' (' → logprob: -9.250096321105957
    3. '(' → logprob: -14.875096321105957
    4. '(I' → logprob: -17.125097274780273
    5. '   ' → logprob: -17.500097274780273
    6. '(ii' → logprob: -20.125097274780273
    7. '                       ' → logprob: -20.250097274780273
    8. '[i' → logprob: -20.375097274780273
    9. ' ' → logprob: -20.500097274780273
    10. '                   ' → logprob: -21.750097274780273

Token 932: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001290454383706674
    2. '(i' → logprob: -9.125128746032715
    3. ' i' → logprob: -10.875128746032715
    4. '   ' → logprob: -14.000128746032715
    5. ' (' → logprob: -15.625128746032715
    6. '	i' → logprob: -16.37512969970703
    7. '[i' → logprob: -17.12512969970703
    8. '{i' → logprob: -17.12512969970703
    9. ')i' → logprob: -17.25012969970703
    10. '
' → logprob: -17.50012969970703

Token 933: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010999247431755066
    2. ',j' → logprob: -4.6359992027282715
    3. ' ,' → logprob: -6.7609992027282715
    4. '   ' → logprob: -10.51099967956543
    5. '       ' → logprob: -10.76099967956543
    6. ',next' → logprob: -11.26099967956543
    7. ' ' → logprob: -11.76099967956543
    8. 'j' → logprob: -12.26099967956543
    9. '           ' → logprob: -12.76099967956543
    10. ' j' → logprob: -13.38599967956543

Token 934: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.8889261304575484e-06
    2. ' j' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.500003814697266
    4. '	j' → logprob: -19.000003814697266
    5. '    ' → logprob: -20.000003814697266
    6. '(j' → logprob: -20.750003814697266
    7. '       ' → logprob: -21.000003814697266
    8. '  ' → logprob: -21.125003814697266
    9. '$j' → logprob: -21.750003814697266
    10. '[j' → logprob: -21.875003814697266

Token 935: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.758300438988954e-05
    2. ' +' → logprob: -9.250097274780273
    3. ']+' → logprob: -14.750097274780273
    4. '+j' → logprob: -15.000097274780273
    5. '[' → logprob: -16.000097274780273
    6. '1' → logprob: -16.125097274780273
    7. '+i' → logprob: -16.125097274780273
    8. ')+' → logprob: -16.250097274780273
    9. '+
' → logprob: -16.875097274780273
    10. '+[' → logprob: -16.875097274780273

Token 936: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.250004768371582
    3. '+' → logprob: -15.250004768371582
    4. '   ' → logprob: -17.2500057220459
    5. 'j' → logprob: -17.6250057220459
    6. 'i' → logprob: -18.0000057220459
    7. '```' → logprob: -18.1250057220459
    8. '
' → logprob: -18.6250057220459
    9. '2' → logprob: -18.8750057220459
    10. 'next' → logprob: -19.4375057220459

Token 937: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10453412681818008
    2. ')
' → logprob: -2.354534149169922
    3. '                   ' → logprob: -5.604534149169922
    4. '                       ' → logprob: -7.729534149169922
    5. '               ' → logprob: -8.729534149169922
    6. '           ' → logprob: -11.479534149169922
    7. ')
' → logprob: -11.854534149169922
    8. '                           ' → logprob: -12.604534149169922
    9. ' )' → logprob: -12.729534149169922
    10. '       ' → logprob: -12.979534149169922

Token 938: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16985061764717102
    2. 'else' → logprob: -2.4198505878448486
    3. '                   ' → logprob: -2.7948505878448486
    4. ' else' → logprob: -5.544850826263428
    5. '<|end|>' → logprob: -7.044850826263428
    6. '           ' → logprob: -7.919850826263428
    7. '	               ' → logprob: -9.04485034942627
    8. '                       ' → logprob: -9.29485034942627
    9. '		           ' → logprob: -9.29485034942627
    10. '
' → logprob: -9.29485034942627

Token 939: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.25820475816726685
    2. '               ' → logprob: -1.508204698562622
    3. ' else' → logprob: -5.133204936981201
    4. 'elif' → logprob: -8.133204460144043
    5. '                   ' → logprob: -10.633204460144043
    6. '	else' → logprob: -11.008204460144043
    7. '			' → logprob: -12.258204460144043
    8. '                ' → logprob: -12.883204460144043
    9. '           ' → logprob: -13.008204460144043
    10. '		       ' → logprob: -13.133204460144043

Token 940: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.06327182054519653
    2. ' (' → logprob: -3.3132717609405518
    3. '(' → logprob: -5.188271999359131
    4. ':' → logprob: -5.438271999359131
    5. '                   ' → logprob: -5.563271999359131
    6. '(next' → logprob: -5.688271999359131
    7. ':
' → logprob: -5.813271999359131
    8. '                           ' → logprob: -6.688271999359131
    9. '               ' → logprob: -7.188271999359131
    10. '           ' → logprob: -7.813271999359131

Token 941: '                       ' (ID: 968)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.0486104488372803
    2. '                       ' → logprob: -1.7986104488372803
    3. ' (' → logprob: -2.0486104488372803
    4. '(' → logprob: -2.5486104488372803
    5. '(next' → logprob: -2.5486104488372803
    6. 'next' → logprob: -2.6736104488372803
    7. 'break' → logprob: -2.7986104488372803
    8. ' next' → logprob: -3.4236104488372803
    9. ' break' → logprob: -4.048610687255859
    10. '(-' → logprob: -5.048610687255859

Token 942: ' #' (ID: 1069)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.04819086566567421
    2. 'break' → logprob: -3.9231908321380615
    3. '(i' → logprob: -4.548191070556641
    4. '(-' → logprob: -5.298191070556641
    5. ' next' → logprob: -5.298191070556641
    6. '(next' → logprob: -5.423191070556641
    7. ' break' → logprob: -7.798191070556641
    8. '(' → logprob: -7.798191070556641
    9. 'continue' → logprob: -7.798191070556641
    10. ' (' → logprob: -8.29819107055664

Token 943: ' on' (ID: 402)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.00198787497356534
    2. ' next' → logprob: -7.251987934112549
    3. '#' → logprob: -7.501987934112549
    4. 'break' → logprob: -7.501987934112549
    5. 'pass' → logprob: -9.50198745727539
    6. 'continue' → logprob: -10.00198745727539
    7. '(next' → logprob: -10.50198745727539
    8. '   ' → logprob: -12.75198745727539
    9. '                   ' → logprob: -12.87698745727539
    10. 'i' → logprob: -13.00198745727539

Token 944: ' est' (ID: 893)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.3280455768108368
    2. 'n' → logprob: -2.578045606613159
    3. '[next' → logprob: -3.203045606613159
    4. '_next' → logprob: -3.703045606613159
    5. 'pos' → logprob: -3.703045606613159
    6. ' next' → logprob: -3.953045606613159
    7. 'reste' → logprob: -4.07804536819458
    8. 's' → logprob: -4.32804536819458
    9. '                       ' → logprob: -4.57804536819458
    10. '```' → logprob: -4.95304536819458

Token 945: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.4880138337612152
    2. 'sur' → logprob: -2.113013744354248
    3. 'au' → logprob: -2.238013744354248
    4. 'dans' → logprob: -2.488013744354248
    5. 'arr' → logprob: -3.863013744354248
    6. 'en' → logprob: -4.113013744354248
    7. 'sort' → logprob: -4.113013744354248
    8. ' à' → logprob: -4.613013744354248
    9. 'at' → logprob: -5.613013744354248
    10. 'aux' → logprob: -7.113013744354248

Token 946: ' la' (ID: 557)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.21471621096134186
    2. 'j' → logprob: -2.7147161960601807
    3. 'i' → logprob: -2.9647161960601807
    4. '(W' → logprob: -3.7147161960601807
    5. 'W' → logprob: -4.08971643447876
    6. '(j' → logprob: -4.46471643447876
    7. 'la' → logprob: -4.46471643447876
    8. '(H' → logprob: -5.96471643447876
    9. 'next' → logprob: -6.83971643447876
    10. 'H' → logprob: -6.83971643447876

Token 947: ' toute' (ID: 16825)
  Prédit: 'bord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bord' → logprob: -0.03991503641009331
    2. 'border' → logprob: -3.414915084838867
    3. 'boundary' → logprob: -6.039915084838867
    4. 'b' → logprob: -6.414915084838867
    5. 'edge' → logprob: -7.289915084838867
    6. ' bord' → logprob: -8.164915084838867
    7. 'lim' → logprob: -8.164915084838867
    8. 'borne' → logprob: -9.039915084838867
    9. 'coin' → logprob: -9.164915084838867
    10. 'board' → logprob: -9.289915084838867

Token 948: ' est' (ID: 893)
  Prédit: 'bord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bord' → logprob: -0.3139013648033142
    2. 'fin' → logprob: -1.813901424407959
    3. 'lim' → logprob: -2.438901424407959
    4. 'b' → logprob: -4.938901424407959
    5. 'border' → logprob: -5.313901424407959
    6. 'ligne' → logprob: -6.563901424407959
    7. ' limite' → logprob: -7.188901424407959
    8. 'dro' → logprob: -7.313901424407959
    9. 'borne' → logprob: -7.313901424407959
    10. '```' → logprob: -7.438901424407959

Token 949: ' donc' (ID: 14206)
  Prédit: 'bord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bord' → logprob: -1.620718002319336
    2. '(' → logprob: -1.745718002319336
    3. '(i' → logprob: -1.995718002319336
    4. 'e' → logprob: -2.370718002319336
    5. 'r' → logprob: -2.370718002319336
    6. ' (' → logprob: -2.620718002319336
    7. '(r' → logprob: -3.495718002319336
    8. ',' → logprob: -3.870718002319336
    9. '(n' → logprob: -3.995718002319336
    10. 'n' → logprob: -4.245718002319336

Token 950: ' arrêt' (ID: 77403)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.12977150082588196
    2. 'j' → logprob: -3.1297714710235596
    3. 'i' → logprob: -4.004771709442139
    4. 'next' → logprob: -4.254771709442139
    5. '(j' → logprob: -4.754771709442139
    6. '#' → logprob: -5.129771709442139
    7. 'sort' → logprob: -5.379771709442139
    8. ' (' → logprob: -5.504771709442139
    9. '(-' → logprob: -5.629771709442139
    10. 'print' → logprob: -6.004771709442139

Token 951: ',' (ID: 11)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.14385057985782623
    2. '                           ' → logprob: -2.143850564956665
    3. '                   ' → logprob: -4.768850803375244
    4. '           ' → logprob: -6.018850803375244
    5. '(' → logprob: -6.518850803375244
    6. '                               ' → logprob: -6.768850803375244
    7. '               ' → logprob: -7.018850803375244
    8. '.' → logprob: -7.518850803375244
    9. '(next' → logprob: -8.268850326538086
    10. ' (' → logprob: -8.643850326538086

Token 952: ' ici' (ID: 27994)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.32304465770721436
    2. ' (' → logprob: -1.5730446577072144
    3. 'next' → logprob: -3.448044776916504
    4. ' next' → logprob: -3.573044776916504
    5. '(next' → logprob: -5.198044776916504
    6. '                       ' → logprob: -6.948044776916504
    7. '(-' → logprob: -7.448044776916504
    8. '(' → logprob: -7.448044776916504
    9. '                   ' → logprob: -7.823044776916504
    10. ' (-' → logprob: -8.073044776916504

Token 953: ' on' (ID: 402)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.5318007469177246
    2. ' next' → logprob: -0.9068007469177246
    3. '(next' → logprob: -5.781800746917725
    4. '                       ' → logprob: -5.906800746917725
    5. '(i' → logprob: -7.281800746917725
    6. ' (' → logprob: -7.281800746917725
    7. '                   ' → logprob: -7.906800746917725
    8. '(' → logprob: -8.281801223754883
    9. 'break' → logprob: -8.406801223754883
    10. ' break' → logprob: -8.781801223754883

Token 954: ' not' (ID: 625)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.7695256471633911
    2. 'break' → logprob: -1.0195256471633911
    3. '[next' → logprob: -2.8945255279541016
    4. 'continue' → logprob: -3.6445255279541016
    5. '=' → logprob: -4.019525527954102
    6. ' next' → logprob: -4.144525527954102
    7. '                       ' → logprob: -4.144525527954102
    8. '#' → logprob: -4.144525527954102
    9. '                   ' → logprob: -5.394525527954102
    10. '           ' → logprob: -5.894525527954102

Token 955: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00018565983918961138
    2. 'es' → logprob: -9.0001859664917
    3. '_e' → logprob: -10.7501859664917
    4. 'é' → logprob: -11.5001859664917
    5. 'er' → logprob: -11.6251859664917
    6. '```' → logprob: -12.2501859664917
    7. ''e' → logprob: -12.5001859664917
    8. 'ed' → logprob: -12.6251859664917
    9. 'ifie' → logprob: -13.5001859664917
    10. 'ec' → logprob: -13.6251859664917

Token 956: ' position' (ID: 4010)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0801730751991272
    2. '(-' → logprob: -2.7051730155944824
    3. 'next' → logprob: -5.205173015594482
    4. ' (' → logprob: -5.955173015594482
    5. ' (-' → logprob: -7.455173015594482
    6. ' next' → logprob: -7.580173015594482
    7. '(next' → logprob: -8.20517349243164
    8. '(None' → logprob: -8.58017349243164
    9. 'None' → logprob: -8.95517349243164
    10. '(' → logprob: -9.83017349243164

Token 957: ' de' (ID: 334)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.09197235852479935
    2. ' =' → logprob: -3.3419723510742188
    3. ' (' → logprob: -3.9669723510742188
    4. '(-' → logprob: -4.841972351074219
    5. '=' → logprob: -5.341972351074219
    6. '=(' → logprob: -5.466972351074219
    7. '=i' → logprob: -5.466972351074219
    8. ' (-' → logprob: -5.841972351074219
    9. 'next' → logprob: -6.216972351074219
    10. '=(-' → logprob: -6.341972351074219

Token 958: ' sortie' (ID: 52761)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.4011364281177521
    2. '(i' → logprob: -1.6511363983154297
    3. 'sort' → logprob: -2.7761363983154297
    4. '-' → logprob: -3.5261363983154297
    5. 'fin' → logprob: -3.6511363983154297
    6. 'l' → logprob: -5.02613639831543
    7. 'arr' → logprob: -5.15113639831543
    8. 'dé' → logprob: -6.27613639831543
    9. 'i' → logprob: -6.65113639831543
    10. ' sortie' → logprob: -6.90113639831543

Token 959: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.31895777583122253
    2. ' =' → logprob: -2.193957805633545
    3. '(-' → logprob: -2.943957805633545
    4. ' (' → logprob: -3.318957805633545
    5. '=' → logprob: -3.443957805633545
    6. '                       ' → logprob: -4.318957805633545
    7. ' (-' → logprob: -4.568957805633545
    8. '=(' → logprob: -5.443957805633545
    9. '=(-' → logprob: -5.443957805633545
    10. '                   ' → logprob: -5.443957805633545

Token 960: 'i' (ID: 72)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.34076473116874695
    2. '(i' → logprob: -1.5907647609710693
    3. '-' → logprob: -2.8407647609710693
    4. 'i' → logprob: -3.9657647609710693
    5. '(H' → logprob: -5.71576452255249
    6. ' -' → logprob: -6.46576452255249
    7. ' (-' → logprob: -6.84076452255249
    8. ' (' → logprob: -7.46576452255249
    9. ' i' → logprob: -8.090764999389648
    10. 'H' → logprob: -8.215764999389648

Token 961: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006067678914405406
    2. ' ,' → logprob: -8.125606536865234
    3. '+' → logprob: -8.500606536865234
    4. ' +' → logprob: -11.000606536865234
    5. '-' → logprob: -11.125606536865234
    6. ',j' → logprob: -11.125606536865234
    7. ',
' → logprob: -11.250606536865234
    8. ',n' → logprob: -11.500606536865234
    9. '       ' → logprob: -12.125606536865234
    10. ')' → logprob: -12.125606536865234

Token 962: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004063678905367851
    2. ',' → logprob: -5.629063606262207
    3. ')
' → logprob: -9.129063606262207
    4. ' )' → logprob: -9.754063606262207
    5. '))' → logprob: -10.004063606262207
    6. '               ' → logprob: -10.129063606262207
    7. '+' → logprob: -10.754063606262207
    8. '                   ' → logprob: -10.754063606262207
    9. '           ' → logprob: -10.879063606262207
    10. '                       ' → logprob: -10.879063606262207

Token 963: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4833140969276428
    2. '+' → logprob: -1.233314037322998
    3. '1' → logprob: -3.233314037322998
    4. ')
' → logprob: -3.983314037322998
    5. '-' → logprob: -4.233314037322998
    6. '0' → logprob: -5.233314037322998
    7. ')+' → logprob: -6.108314037322998
    8. 'i' → logprob: -6.358314037322998
    9. '```' → logprob: -6.483314037322998
    10. '),' → logprob: -6.983314037322998

Token 964: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003751423500943929
    2. ')
' → logprob: -8.375374794006348
    3. '+' → logprob: -10.500374794006348
    4. '               ' → logprob: -10.750374794006348
    5. ' )' → logprob: -11.000374794006348
    6. '))' → logprob: -11.250374794006348
    7. '           ' → logprob: -11.500374794006348
    8. '                   ' → logprob: -11.500374794006348
    9. '```' → logprob: -11.750374794006348
    10. ')`' → logprob: -12.125374794006348

Token 965: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -1.0933271646499634
    2. ')' → logprob: -1.3433271646499634
    3. '               ' → logprob: -1.7183271646499634
    4. '                   ' → logprob: -2.093327045440674
    5. '           ' → logprob: -3.968327045440674
    6. ',' → logprob: -4.343327045440674
    7. '(i' → logprob: -4.343327045440674
    8. '(' → logprob: -4.843327045440674
    9. '                           ' → logprob: -4.843327045440674
    10. ' =' → logprob: -4.843327045440674

Token 966: ' #' (ID: 1069)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.042025934904813766
    2. '(-' → logprob: -3.7920260429382324
    3. ' (' → logprob: -4.667026042938232
    4. '(H' → logprob: -4.792026042938232
    5. '(' → logprob: -7.542026042938232
    6. ' (-' → logprob: -8.167025566101074
    7. '(I' → logprob: -10.042025566101074
    8. '   ' → logprob: -11.417025566101074
    9. '(next' → logprob: -11.542025566101074
    10. '(None' → logprob: -12.042025566101074

Token 967: ' La' (ID: 3038)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.03365803137421608
    2. '(' → logprob: -4.408658027648926
    3. '(next' → logprob: -4.658658027648926
    4. '(-' → logprob: -5.158658027648926
    5. '#' → logprob: -6.033658027648926
    6. ' next' → logprob: -6.658658027648926
    7. '(i' → logprob: -7.658658027648926
    8. 'continue' → logprob: -7.908658027648926
    9. '                       ' → logprob: -8.158658027648926
    10. 'print' → logprob: -8.283658027648926

Token 968: ' route' (ID: 9656)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.5043911337852478
    2. 'next' → logprob: -1.8793911933898926
    3. ' code' → logprob: -2.1293911933898926
    4. '#' → logprob: -3.6293911933898926
    5. 'pos' → logprob: -4.379391193389893
    6. 'position' → logprob: -5.004391193389893
    7. ' j' → logprob: -5.129391193389893
    8. ' position' → logprob: -5.254391193389893
    9. ' #' → logprob: -5.379391193389893
    10. 'j' → logprob: -5.504391193389893

Token 969: ' la' (ID: 557)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.30701887607574463
    2. 's' → logprob: -2.307018756866455
    3. '_out' → logprob: -2.932018756866455
    4. '=' → logprob: -4.182018756866455
    5. ' =' → logprob: -4.182018756866455
    6. 'out' → logprob: -4.432018756866455
    7. '_pos' → logprob: -4.682018756866455
    8. '[' → logprob: -4.807018756866455
    9. '       ' → logprob: -5.057018756866455
    10. ' out' → logprob: -5.557018756866455

Token 970: ' plus' (ID: 2932)
  Prédit: ' suivante'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' suivante' → logprob: -1.516931414604187
    2. 'r' → logprob: -2.0169315338134766
    3. 'next' → logprob: -2.5169315338134766
    4. 'n' → logprob: -2.6419315338134766
    5. 's' → logprob: -2.8919315338134766
    6. ' next' → logprob: -3.5169315338134766
    7. '+' → logprob: -3.7669315338134766
    8. 'ction' → logprob: -4.016931533813477
    9. 'i' → logprob: -4.016931533813477
    10. 'fin' → logprob: -4.141931533813477

Token 971: ' est' (ID: 893)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.25497856736183167
    2. 'ext' → logprob: -2.504978656768799
    3. 'loin' → logprob: -3.754978656768799
    4. 'extr' → logprob: -3.879978656768799
    5. '```' → logprob: -4.254978656768799
    6. ' à' → logprob: -4.379978656768799
    7. 'ex' → logprob: -4.504978656768799
    8. 'out' → logprob: -4.629978656768799
    9. 'pro' → logprob: -4.754978656768799
    10. 'au' → logprob: -4.879978656768799

Token 972: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2750742435455322
    2. ' possible' → logprob: -2.0250742435455322
    3. '+' → logprob: -2.2750742435455322
    4. 'possible' → logprob: -2.2750742435455322
    5. ' =' → logprob: -2.6500742435455322
    6. '_out' → logprob: -3.0250742435455322
    7. '_possible' → logprob: -3.4000742435455322
    8. 'out' → logprob: -3.6500742435455322
    9. ' out' → logprob: -3.9000742435455322
    10. '[i' → logprob: -4.150074005126953

Token 973: ' la' (ID: 557)
  Prédit: '(W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.543184757232666
    2. ' (' → logprob: -2.043184757232666
    3. '(i' → logprob: -2.543184757232666
    4. 'W' → logprob: -2.793184757232666
    5. '(j' → logprob: -3.043184757232666
    6. 'j' → logprob: -3.418184757232666
    7. '(H' → logprob: -4.043184757232666
    8. '(' → logprob: -4.043184757232666
    9. ' W' → logprob: -4.543184757232666
    10. ' hors' → logprob: -4.793184757232666

Token 974: ' colonne' (ID: 148275)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.5793284773826599
    2. '(i' → logprob: -0.9543284773826599
    3. '(W' → logprob: -3.5793285369873047
    4. '(' → logprob: -4.829328536987305
    5. ' (' → logprob: -4.954328536987305
    6. 'W' → logprob: -5.704328536987305
    7. 'position' → logprob: -6.954328536987305
    8. 'out' → logprob: -7.204328536987305
    9. 'j' → logprob: -7.204328536987305
    10. 'sort' → logprob: -7.454328536987305

Token 975: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.22298504412174225
    2. '+' → logprob: -2.222985029220581
    3. '=' → logprob: -3.347985029220581
    4. ' W' → logprob: -4.09798526763916
    5. ',' → logprob: -4.72298526763916
    6. 'j' → logprob: -5.09798526763916
    7. '=W' → logprob: -5.09798526763916
    8. '[' → logprob: -5.34798526763916
    9. ' =' → logprob: -5.59798526763916
    10. ' +' → logprob: -5.97298526763916

Token 976: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2775394320487976
    2. ')' → logprob: -1.5275394916534424
    3. '<|end|>' → logprob: -4.902539253234863
    4. ' +' → logprob: -5.277539253234863
    5. ',' → logprob: -5.652539253234863
    6. ']' → logprob: -5.777539253234863
    7. ')+' → logprob: -7.402539253234863
    8. '<|end|>' → logprob: -7.402539253234863
    9. '       ' → logprob: -7.652539253234863
    10. '#' → logprob: -7.652539253234863

Token 977: ' mais' (ID: 2899)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.8444494605064392
    2. ' (' → logprob: -1.844449520111084
    3. ')' → logprob: -2.344449520111084
    4. 'i' → logprob: -2.719449520111084
    5. ' j' → logprob: -2.969449520111084
    6. '(' → logprob: -3.094449520111084
    7. '(j' → logprob: -3.094449520111084
    8. '(i' → logprob: -3.219449520111084
    9. ' i' → logprob: -4.094449520111084
    10. 'W' → logprob: -4.219449520111084

Token 978: ' les' (ID: 1341)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.12936687469482422
    2. ' j' → logprob: -2.754366874694824
    3. 'W' → logprob: -3.379366874694824
    4. '(j' → logprob: -4.629366874694824
    5. ' W' → logprob: -5.504366874694824
    6. ' (' → logprob: -5.629366874694824
    7. 'i' → logprob: -7.254366874694824
    8. '#' → logprob: -7.379366874694824
    9. '(i' → logprob: -7.379366874694824
    10. '(' → logprob: -7.754366874694824

Token 979: ' crois' (ID: 65485)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.7797276377677917
    2. 'positions' → logprob: -1.4047276973724365
    3. ' indices' → logprob: -1.9047276973724365
    4. 'cases' → logprob: -3.4047276973724365
    5. ' lignes' → logprob: -3.6547276973724365
    6. ' positions' → logprob: -3.7797276973724365
    7. ' coordonnées' → logprob: -4.279727458953857
    8. 'gr' → logprob: -5.029727458953857
    9. 'j' → logprob: -5.404727458953857
    10. 'index' → logprob: -5.654727458953857

Token 980: 'ements' (ID: 4507)
  Prédit: 'ements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ements' → logprob: -0.5765293836593628
    2. 'onnée' → logprob: -2.5765295028686523
    3. 'ments' → logprob: -2.7015295028686523
    4. 'ées' → logprob: -2.8265295028686523
    5. 's' → logprob: -3.0765295028686523
    6. '```' → logprob: -3.2015295028686523
    7. 'onnées' → logprob: -3.3265295028686523
    8. 'ée' → logprob: -3.9515295028686523
    9. 'ément' → logprob: -3.9515295028686523
    10. 'ement' → logprob: -4.451529502868652

Token 981: ' vont' (ID: 29772)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6777895092964172
    2. ')' → logprob: -1.9277894496917725
    3. '+' → logprob: -2.5527894496917725
    4. 'i' → logprob: -3.0527894496917725
    5. ' sont' → logprob: -3.3027894496917725
    6. ',' → logprob: -4.052789688110352
    7. '[' → logprob: -4.302789688110352
    8. '#' → logprob: -4.677789688110352
    9. '=' → logprob: -4.802789688110352
    10. ' are' → logprob: -4.927789688110352

Token 982: ' de' (ID: 334)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.7286844849586487
    2. 'jus' → logprob: -1.478684425354004
    3. 'j' → logprob: -2.603684425354004
    4. 'au' → logprob: -2.603684425354004
    5. 'de' → logprob: -3.228684425354004
    6. 'se' → logprob: -4.228684425354004
    7. 'b' → logprob: -4.603684425354004
    8. ' être' → logprob: -5.228684425354004
    9. 'just' → logprob: -5.353684425354004
    10. 'à' → logprob: -5.478684425354004

Token 983: ' ' (ID: 220)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.8042653203010559
    2. '0' → logprob: -1.0542652606964111
    3. 'W' → logprob: -1.6792652606964111
    4. ' j' → logprob: -5.42926549911499
    5. 'range' → logprob: -5.55426549911499
    6. 'i' → logprob: -6.05426549911499
    7. ' W' → logprob: -6.42926549911499
    8. '[' → logprob: -6.67926549911499
    9. '1' → logprob: -6.67926549911499
    10. ' ' → logprob: -6.80426549911499

Token 984: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005947286728769541
    2. 'j' → logprob: -5.505947113037109
    3. 'i' → logprob: -6.755947113037109
    4. 'W' → logprob: -8.25594711303711
    5. ' ' → logprob: -8.25594711303711
    6. 'range' → logprob: -9.75594711303711
    7. '1' → logprob: -9.88094711303711
    8. '[' → logprob: -11.25594711303711
    9. '```' → logprob: -11.38094711303711
    10. ' j' → logprob: -11.38094711303711

Token 985: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0713837593793869
    2. ' à' → logprob: -3.1963837146759033
    3. ' jusqu' → logprob: -3.9463837146759033
    4. ' ,' → logprob: -5.071383953094482
    5. ' jusque' → logprob: -6.946383953094482
    6. 'à' → logprob: -8.196383476257324
    7. ' to' → logprob: -8.446383476257324
    8. 'to' → logprob: -8.946383476257324
    9. ')' → logprob: -9.071383476257324
    10. ' until' → logprob: -9.571383476257324

Token 986: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0036044635344296694
    2. ' W' → logprob: -5.628604412078857
    3. 'j' → logprob: -13.003604888916016
    4. '1' → logprob: -14.253604888916016
    5. '0' → logprob: -15.003604888916016
    6. ' ' → logprob: -15.253604888916016
    7. '   ' → logprob: -15.378604888916016
    8. '	W' → logprob: -16.253604888916016
    9. ' ' → logprob: -16.378604888916016
    10. '(W' → logprob: -16.378604888916016

Token 987: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44238191843032837
    2. '               ' → logprob: -2.0673818588256836
    3. '           ' → logprob: -2.5673818588256836
    4. '                   ' → logprob: -2.8173818588256836
    5. '                       ' → logprob: -3.6923818588256836
    6. '+' → logprob: -4.067381858825684
    7. '       ' → logprob: -4.317381858825684
    8. ',' → logprob: -4.567381858825684
    9. ']' → logprob: -5.317381858825684
    10. '```' → logprob: -5.317381858825684

Token 988: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.787507714354433e-05
    2. '0' → logprob: -10.00004768371582
    3. '+' → logprob: -13.37504768371582
    4. '```' → logprob: -15.25004768371582
    5. ' ' → logprob: -15.50004768371582
    6. '
' → logprob: -16.12504768371582
    7. '``' → logprob: -16.62504768371582
    8. '`' → logprob: -16.62504768371582
    9. '   ' → logprob: -16.87504768371582
    10. ' ' → logprob: -18.00004768371582

Token 989: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05080753564834595
    2. '                   ' → logprob: -4.925807476043701
    3. '<|end|>' → logprob: -4.925807476043701
    4. '               ' → logprob: -5.300807476043701
    5. '       ' → logprob: -5.300807476043701
    6. ',' → logprob: -5.425807476043701
    7. '                       ' → logprob: -5.550807476043701
    8. '           ' → logprob: -5.675807476043701
    9. ')
' → logprob: -5.675807476043701
    10. ' (' → logprob: -5.800807476043701

Token 990: '                       ' (ID: 968)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.3892754018306732
    2. ' (' → logprob: -2.014275312423706
    3. '                   ' → logprob: -2.264275312423706
    4. '                       ' → logprob: -3.889275312423706
    5. '               ' → logprob: -4.139275550842285
    6. '(' → logprob: -4.764275550842285
    7. ')' → logprob: -4.889275550842285
    8. '[i' → logprob: -4.889275550842285
    9. '           ' → logprob: -5.389275550842285
    10. ',' → logprob: -5.389275550842285

Token 991: ' #' (ID: 1069)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.004835464991629124
    2. ' (' → logprob: -5.379835605621338
    3. '(' → logprob: -8.75483512878418
    4. '                       ' → logprob: -10.37983512878418
    5. '(next' → logprob: -11.37983512878418
    6. '                           ' → logprob: -12.50483512878418
    7. '                   ' → logprob: -12.75483512878418
    8. '(I' → logprob: -12.87983512878418
    9. '   ' → logprob: -13.75483512878418
    10. '(j' → logprob: -14.12983512878418

Token 992: ' Le' (ID: 2018)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.9078891277313232
    2. '(next' → logprob: -1.2828891277313232
    3. ' (' → logprob: -1.7828891277313232
    4. '(' → logprob: -2.6578891277313232
    5. 'next' → logprob: -3.1578891277313232
    6. '                       ' → logprob: -4.157889366149902
    7. ' next' → logprob: -5.157889366149902
    8. '                           ' → logprob: -5.407889366149902
    9. '                   ' → logprob: -5.782889366149902
    10. ')' → logprob: -6.532889366149902

Token 993: ' problème' (ID: 35630)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.31385090947151184
    2. 'next' → logprob: -1.8138508796691895
    3. ' code' → logprob: -4.1888508796691895
    4. 'pos' → logprob: -4.5638508796691895
    5. 'j' → logprob: -4.6888508796691895
    6. '#' → logprob: -4.8138508796691895
    7. 'else' → logprob: -5.0638508796691895
    8. ' else' → logprob: -5.4388508796691895
    9. 'exit' → logprob: -5.4388508796691895
    10. ' j' → logprob: -5.4388508796691895

Token 994: ' dit' (ID: 4758)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06415735185146332
    2. '#' → logprob: -3.564157247543335
    3. '.' → logprob: -5.064157485961914
    4. ',' → logprob: -5.314157485961914
    5. ' is' → logprob: -5.314157485961914
    6. ' est' → logprob: -6.439157485961914
    7. 'continue' → logprob: -6.564157485961914
    8. ':' → logprob: -6.689157485961914
    9. '<|end|>' → logprob: -6.689157485961914
    10. ' )' → logprob: -6.939157485961914

Token 995: ' que' (ID: 661)
  Prédit: 'qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qu' → logprob: -1.2283962965011597
    2. 'que' → logprob: -1.2283962965011597
    3. '#' → logprob: -1.4783962965011597
    4. ' que' → logprob: -1.8533962965011597
    5. ' qu' → logprob: -4.978396415710449
    6. '                       ' → logprob: -5.728396415710449
    7. ' #' → logprob: -5.853396415710449
    8. 'return' → logprob: -6.228396415710449
    9. '           ' → logprob: -6.853396415710449
    10. '   ' → logprob: -6.853396415710449

Token 996: ' les' (ID: 1341)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.6521884202957153
    2. 'j' → logprob: -1.7771884202957153
    3. ' la' → logprob: -1.7771884202957153
    4. 'on' → logprob: -2.277188301086426
    5. ' on' → logprob: -2.402188301086426
    6. 'sys' → logprob: -2.777188301086426
    7. 'le' → logprob: -3.152188301086426
    8. 'print' → logprob: -3.402188301086426
    9. 'c' → logprob: -3.527188301086426
    10. ' j' → logprob: -3.652188301086426

Token 997: ' crois' (ID: 65485)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.5769745111465454
    2. '#' → logprob: -2.826974391937256
    3. 'next' → logprob: -3.201974391937256
    4. 'pass' → logprob: -3.201974391937256
    5. 'j' → logprob: -3.326974391937256
    6. 'colon' → logprob: -3.576974391937256
    7. 'out' → logprob: -3.826974391937256
    8. 'indices' → logprob: -3.826974391937256
    9. 'pos' → logprob: -3.826974391937256
    10. 'position' → logprob: -4.576974391937256

Token 998: 'ements' (ID: 4507)
  Prédit: 'tes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tes' → logprob: -0.6104485392570496
    2. 'nts' → logprob: -1.9854485988616943
    3. 'ns' → logprob: -2.1104485988616943
    4. 'ments' → logprob: -3.3604485988616943
    5. 'ements' → logprob: -3.4854485988616943
    6. 'ons' → logprob: -3.8604485988616943
    7. 'gments' → logprob: -4.110448360443115
    8. 't' → logprob: -4.235448360443115
    9. 'sons' → logprob: -4.235448360443115
    10. 'nements' → logprob: -4.985448360443115

Token 999: ' vont' (ID: 29772)
  Prédit: ' sont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -1.0479027032852173
    2. '[i' → logprob: -1.4229027032852173
    3. 's' → logprob: -2.2979025840759277
    4. ' vont' → logprob: -2.9229025840759277
    5. '```' → logprob: -3.0479025840759277
    6. '=' → logprob: -3.4229025840759277
    7. ' peuvent' → logprob: -3.7979025840759277
    8. ' se' → logprob: -4.297902584075928
    9. 'se' → logprob: -4.422902584075928
    10. ' are' → logprob: -4.422902584075928

Token 1000: ' jusqu' (ID: 21961)
  Prédit: ' jusqu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -0.6050261855125427
    2. 'jus' → logprob: -0.9800261855125427
    3. '(i' → logprob: -4.3550262451171875
    4. ' jusque' → logprob: -4.4800262451171875
    5. 'up' → logprob: -4.6050262451171875
    6. ' up' → logprob: -5.1050262451171875
    7. 'à' → logprob: -5.1050262451171875
    8. 'de' → logprob: -5.3550262451171875
    9. 'être' → logprob: -5.3550262451171875
    10. ' au' → logprob: -5.7300262451171875

Token 1001: ''à' (ID: 33688)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6592581272125244
    2. 'à' → logprob: -1.5342581272125244
    3. ''à' → logprob: -1.5342581272125244
    4. ' à' → logprob: -3.5342581272125244
    5. '’à' → logprob: -5.034257888793945
    6. '(i' → logprob: -5.409257888793945
    7. '=i' → logprob: -5.909257888793945
    8. '```' → logprob: -5.909257888793945
    9. '   ' → logprob: -6.909257888793945
    10. ''au' → logprob: -7.284257888793945

Token 1002: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.7403627038002014
    2. 'j' → logprob: -0.7403627038002014
    3. ' W' → logprob: -3.7403626441955566
    4. ' j' → logprob: -3.8653626441955566
    5. ' (' → logprob: -7.740362644195557
    6. '   ' → logprob: -7.990362644195557
    7. '```' → logprob: -8.490363121032715
    8. ' ' → logprob: -8.990363121032715
    9. '(j' → logprob: -9.740363121032715
    10. '`' → logprob: -9.865363121032715

Token 1003: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0028386341873556376
    2. '+
' → logprob: -7.002838611602783
    3. ' +' → logprob: -7.377838611602783
    4. ')' → logprob: -7.377838611602783
    5. '```' → logprob: -7.877838611602783
    6. ',' → logprob: -9.752839088439941
    7. '   ' → logprob: -10.377839088439941
    8. 'else' → logprob: -10.752839088439941
    9. ')+' → logprob: -10.877839088439941
    10. '
' → logprob: -11.002839088439941

Token 1004: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.184812031686306e-05
    2. '+' → logprob: -9.875082015991211
    3. '2' → logprob: -10.875082015991211
    4. '0' → logprob: -12.000082015991211
    5. ' ' → logprob: -12.875082015991211
    6. '`' → logprob: -14.000082015991211
    7. '```' → logprob: -14.000082015991211
    8. '
' → logprob: -15.125082015991211
    9. '#' → logprob: -15.875082015991211
    10. ' +' → logprob: -16.12508201599121

Token 1005: ',
' (ID: 412)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21187745034694672
    2. '```' → logprob: -2.9618773460388184
    3. '<|end|>' → logprob: -3.2118773460388184
    4. '+' → logprob: -3.3368773460388184
    5. ',' → logprob: -4.086877346038818
    6. '
' → logprob: -4.086877346038818
    7. '       ' → logprob: -5.086877346038818
    8. '                       ' → logprob: -5.586877346038818
    9. ')
' → logprob: -5.836877346038818
    10. ' (' → logprob: -6.336877346038818

Token 1006: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.32652851939201355
    2. '                   ' → logprob: -2.076528549194336
    3. ')' → logprob: -2.826528549194336
    4. '                           ' → logprob: -3.451528549194336
    5. ' (' → logprob: -4.451528549194336
    6. '```' → logprob: -4.451528549194336
    7. '               ' → logprob: -4.701528549194336
    8. 'j' → logprob: -5.576528549194336
    9. '           ' → logprob: -5.701528549194336
    10. '                               ' → logprob: -5.826528549194336

Token 1007: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.2563081383705139
    2. '                   ' → logprob: -2.131308078765869
    3. ')' → logprob: -3.381308078765869
    4. 'j' → logprob: -3.631308078765869
    5. '               ' → logprob: -4.881308078765869
    6. '                           ' → logprob: -5.256308078765869
    7. '#' (adapté à ' #') → logprob: -5.256308078765869
    8. ''' → logprob: -5.381308078765869
    9. ')
' → logprob: -5.631308078765869
    10. '
' → logprob: -5.881308078765869

Token 1008: ' donc' (ID: 14206)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.6371267437934875
    2. '                   ' → logprob: -2.0121266841888428
    3. ' donc' → logprob: -2.6371266841888428
    4. '               ' → logprob: -2.8871266841888428
    5. 'ce' → logprob: -3.2621266841888428
    6. ' ce' → logprob: -3.5121266841888428
    7. '#' → logprob: -3.7621266841888428
    8. 'else' → logprob: -4.012126922607422
    9. '           ' → logprob: -4.137126922607422
    10. '```' → logprob: -4.637126922607422

Token 1009: ' on' (ID: 402)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.039832789450883865
    2. ' next' → logprob: -3.914832830429077
    3. '#' → logprob: -5.164832592010498
    4. '(next' → logprob: -5.289832592010498
    5. 'continue' → logprob: -5.789832592010498
    6. '(' → logprob: -6.789832592010498
    7. '(i' → logprob: -7.039832592010498
    8. '```' → logprob: -7.164832592010498
    9. ' (' → logprob: -8.039833068847656
    10. '                       ' → logprob: -8.289833068847656

Token 1010: ' doit' (ID: 21822)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.23557056486606598
    2. ' continue' → logprob: -2.1105706691741943
    3. 'next' → logprob: -3.1105706691741943
    4. '```' → logprob: -4.610570430755615
    5. ' next' → logprob: -4.985570430755615
    6. '           ' → logprob: -5.235570430755615
    7. 'contin' → logprob: -5.360570430755615
    8. '                       ' → logprob: -5.610570430755615
    9. '                           ' → logprob: -6.860570430755615
    10. '+' → logprob: -6.985570430755615

Token 1011: ' gérer' (ID: 86786)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sort' → logprob: -1.3431962728500366
    2. 'next' → logprob: -1.9681962728500366
    3. 'mettre' → logprob: -1.9681962728500366
    4. 'return' → logprob: -2.593196392059326
    5. 'contin' → logprob: -2.843196392059326
    6. 'stock' → logprob: -3.093196392059326
    7. 'aj' → logprob: -3.343196392059326
    8. 'assign' → logprob: -3.468196392059326
    9. 'util' → logprob: -3.593196392059326
    10. 'arr' → logprob: -4.093196392059326

Token 1012: ' la' (ID: 557)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.1107430458068848
    2. ' (' → logprob: -1.4857430458068848
    3. 'j' → logprob: -2.3607430458068848
    4. ' la' → logprob: -2.8607430458068848
    5. '```' → logprob: -2.9857430458068848
    6. 'le' → logprob: -3.2357430458068848
    7. 'next' → logprob: -3.2357430458068848
    8. 'la' → logprob: -3.2357430458068848
    9. '(' → logprob: -3.8607430458068848
    10. 'l' → logprob: -4.110743045806885

Token 1013: ' sortie' (ID: 52761)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -1.1589020490646362
    2. 'case' → logprob: -2.158902168273926
    3. 'next' → logprob: -2.283902168273926
    4. 'out' → logprob: -2.658902168273926
    5. 'bord' → logprob: -2.658902168273926
    6. '```' → logprob: -2.908902168273926
    7. ' next' → logprob: -3.533902168273926
    8. ' sortie' → logprob: -3.533902168273926
    9. 'sort' → logprob: -3.783902168273926
    10. '#' → logprob: -3.908902168273926

Token 1014: ' en' (ID: 469)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5323470830917358
    2. '                   ' → logprob: -2.0323472023010254
    3. '               ' → logprob: -2.1573472023010254
    4. ' (' → logprob: -2.5323472023010254
    5. '(' → logprob: -4.032347202301025
    6. '```' → logprob: -4.282347202301025
    7. '(i' → logprob: -4.782347202301025
    8. '           ' → logprob: -5.032347202301025
    9. ',' → logprob: -5.282347202301025
    10. ')' → logprob: -5.407347202301025

Token 1015: ' indiqu' (ID: 100773)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -1.6968612670898438
    2. 'j' → logprob: -1.6968612670898438
    3. 'sort' → logprob: -2.3218612670898438
    4. 'assign' → logprob: -2.9468612670898438
    5. '(W' → logprob: -3.0718612670898438
    6. 'range' → logprob: -3.1968612670898438
    7. '```' → logprob: -3.1968612670898438
    8. '(j' → logprob: -3.4468612670898438
    9. 'col' → logprob: -3.5718612670898438
    10. '(' → logprob: -3.5718612670898438

Token 1016: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.3239784240722656
    2. '(' → logprob: -2.4489784240722656
    3. 'que' → logprob: -3.3239784240722656
    4. ' (' → logprob: -3.5739784240722656
    5. '```' → logprob: -3.5739784240722656
    6. 'er' → logprob: -4.448978424072266
    7. 'quant' → logprob: -4.573978424072266
    8. '       ' → logprob: -4.823978424072266
    9. '(j' → logprob: -5.073978424072266
    10. '   ' → logprob: -5.073978424072266

Token 1017: ' la' (ID: 557)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00980295892804861
    2. ' (' → logprob: -4.63480281829834
    3. '(' → logprob: -10.75980281829834
    4. '(-' → logprob: -11.75980281829834
    5. 'i' → logprob: -11.88480281829834
    6. '   ' → logprob: -12.63480281829834
    7. ' i' → logprob: -12.75980281829834
    8. '[i' → logprob: -14.00980281829834
    9. '(I' → logprob: -14.25980281829834
    10. 'import' → logprob: -14.50980281829834

Token 1018: ' coord' (ID: 25819)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.02080181986093521
    2. ' (' → logprob: -4.895802021026611
    3. 'i' → logprob: -5.270802021026611
    4. 'position' → logprob: -5.395802021026611
    5. ' position' → logprob: -7.395802021026611
    6. 'next' → logprob: -7.520802021026611
    7. ' i' → logprob: -7.645802021026611
    8. ' next' → logprob: -7.645802021026611
    9. '(' → logprob: -8.270801544189453
    10. '(j' → logprob: -8.520801544189453

Token 1019: 'onnée' (ID: 91161)
  Prédit: 'onnée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onnée' → logprob: -0.3719778060913086
    2. '(' → logprob: -2.3719778060913086
    3. 'onnées' → logprob: -2.3719778060913086
    4. 'on' → logprob: -2.7469778060913086
    5. '(i' → logprob: -3.1219778060913086
    6. ' (' → logprob: -5.996977806091309
    7. 'onné' → logprob: -6.121977806091309
    8. 'onn' → logprob: -6.246977806091309
    9. '           ' → logprob: -6.496977806091309
    10. ')' → logprob: -6.496977806091309

Token 1020: ' finale' (ID: 37759)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7923083901405334
    2. '(W' → logprob: -1.7923083305358887
    3. '(j' → logprob: -2.1673083305358887
    4. ' (' → logprob: -2.1673083305358887
    5. '(i' → logprob: -2.4173083305358887
    6. 'W' → logprob: -3.9173083305358887
    7. 'j' → logprob: -4.667308330535889
    8. '`' → logprob: -5.167308330535889
    9. '```' → logprob: -5.167308330535889
    10. ' W' → logprob: -5.417308330535889

Token 1021: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5371333360671997
    2. '(' → logprob: -1.5371333360671997
    3. '                       ' → logprob: -2.03713321685791
    4. ' (' → logprob: -4.03713321685791
    5. '                   ' → logprob: -4.16213321685791
    6. '               ' → logprob: -4.78713321685791
    7. '                           ' → logprob: -4.91213321685791
    8. '```' → logprob: -5.03713321685791
    9. '           ' → logprob: -5.66213321685791
    10. ',' → logprob: -5.66213321685791

Token 1022: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01714479923248291
    2. '(i' → logprob: -4.642144680023193
    3. ' i' → logprob: -5.267144680023193
    4. ' (' → logprob: -6.642144680023193
    5. ')' → logprob: -7.642144680023193
    6. '(' → logprob: -9.142145156860352
    7. ')i' → logprob: -9.517145156860352
    8. '   ' → logprob: -9.642145156860352
    9. ')
' → logprob: -10.517145156860352
    10. 'j' → logprob: -10.642145156860352

Token 1023: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024513998068869114
    2. ' ,' → logprob: -7.002451419830322
    3. '+' → logprob: -7.252451419830322
    4. ',j' → logprob: -7.377451419830322
    5. '       ' → logprob: -10.002450942993164
    6. ' +' → logprob: -10.002450942993164
    7. ',i' → logprob: -10.627450942993164
    8. '           ' → logprob: -11.127450942993164
    9. ')' → logprob: -11.377450942993164
    10. ',n' → logprob: -11.502450942993164

Token 1024: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.762356209335849e-05
    2. ' +' → logprob: -10.37503719329834
    3. ')+' → logprob: -12.50003719329834
    4. ']+' → logprob: -14.00003719329834
    5. ')' → logprob: -14.62503719329834
    6. '```' → logprob: -14.87503719329834
    7. 'W' → logprob: -15.37503719329834
    8. '+j' → logprob: -15.50003719329834
    9. '+
' → logprob: -15.87503719329834
    10. '1' → logprob: -16.500038146972656

Token 1025: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10031676292419434
    2. '2' → logprob: -2.3503167629241943
    3. '+' → logprob: -9.975317001342773
    4. '```' → logprob: -10.600317001342773
    5. '
' → logprob: -10.850317001342773
    6. '`' → logprob: -11.350317001342773
    7. ' ' → logprob: -13.350317001342773
    8. '   ' → logprob: -13.850317001342773
    9. '``' → logprob: -13.850317001342773
    10. 'W' → logprob: -13.850317001342773

Token 1026: '?' (ID: 30)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5766875147819519
    2. '+' → logprob: -0.8266875147819519
    3. ' +' → logprob: -8.201687812805176
    4. '+)' → logprob: -8.576687812805176
    5. ')+' → logprob: -8.951687812805176
    6. ')
' → logprob: -9.826687812805176
    7. '1' → logprob: -10.951687812805176
    8. '-' → logprob: -11.201687812805176
    9. '))' → logprob: -11.451687812805176
    10. '[' → logprob: -11.701687812805176

Token 1027: ').
' (ID: 6294)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.111476831138134
    2. 'j' → logprob: -3.3614768981933594
    3. ')' → logprob: -3.9864768981933594
    4. ' j' → logprob: -4.111476898193359
    5. 'W' → logprob: -4.236476898193359
    6. ' +' → logprob: -4.611476898193359
    7. ' W' → logprob: -5.611476898193359
    8. '```' → logprob: -6.111476898193359
    9. '1' → logprob: -6.486476898193359
    10. ',j' → logprob: -7.361476898193359

Token 1028: '                       ' (ID: 968)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.242882251739502
    2. '(j' → logprob: -1.742882251739502
    3. ')' → logprob: -2.117882251739502
    4. ' j' → logprob: -2.367882251739502
    5. 'j' → logprob: -2.742882251739502
    6. '+' → logprob: -3.117882251739502
    7. '                   ' → logprob: -3.242882251739502
    8. '(' → logprob: -3.367882251739502
    9. '                       ' → logprob: -3.367882251739502
    10. '```' → logprob: -3.617882251739502

Token 1029: ' #' (ID: 1069)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.3333965837955475
    2. ' (' → logprob: -1.958396553993225
    3. '(j' → logprob: -2.3333966732025146
    4. '(' → logprob: -3.3333966732025146
    5. '                       ' → logprob: -5.3333964347839355
    6. '                           ' → logprob: -5.8333964347839355
    7. '(next' → logprob: -7.4583964347839355
    8. '                   ' → logprob: -7.9583964347839355
    9. '                               ' → logprob: -8.708396911621094
    10. 'j' → logprob: -9.208396911621094

Token 1030: ' Mais' (ID: 13880)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5162982940673828
    2. '(i' → logprob: -2.141298294067383
    3. '(' → logprob: -2.516298294067383
    4. '(j' → logprob: -2.766298294067383
    5. '                           ' → logprob: -3.141298294067383
    6. 'j' → logprob: -3.516298294067383
    7. '                       ' → logprob: -3.766298294067383
    8. 'i' → logprob: -4.391298294067383
    9. ')' → logprob: -5.141298294067383
    10. '                               ' → logprob: -5.516298294067383

Token 1031: ' on' (ID: 402)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.8501520752906799
    2. '#' → logprob: -0.9751520752906799
    3. '                   ' → logprob: -3.225152015686035
    4. 'on' → logprob: -3.850152015686035
    5. '```' → logprob: -3.850152015686035
    6. 'else' → logprob: -4.475152015686035
    7. 'next' → logprob: -4.475152015686035
    8. ' j' → logprob: -4.600152015686035
    9. '                       ' → logprob: -4.725152015686035
    10. '(j' → logprob: -4.850152015686035

Token 1032: ' ne' (ID: 453)
  Prédit: '[next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[next' → logprob: -1.2773442268371582
    2. '[i' → logprob: -1.9023442268371582
    3. '+' → logprob: -2.027344226837158
    4. '=' → logprob: -2.277344226837158
    5. '[' → logprob: -2.402344226837158
    6. '[j' → logprob: -2.777344226837158
    7. ']' → logprob: -3.777344226837158
    8. ' next' → logprob: -3.777344226837158
    9. 'next' → logprob: -3.902344226837158
    10. '#' → logprob: -3.902344226837158

Token 1033: ' peut' (ID: 9216)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.5496903657913208
    2. 'j' → logprob: -1.7996903657913208
    3. ' j' → logprob: -2.2996902465820312
    4. ']' → logprob: -2.4246902465820312
    5. '```' → logprob: -2.9246902465820312
    6. '#' → logprob: -3.0496902465820312
    7. ')' → logprob: -3.4246902465820312
    8. 'n' → logprob: -3.5496902465820312
    9. ' have' → logprob: -3.6746902465820312
    10. '[j' → logprob: -3.7996902465820312

Token 1034: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.4924786686897278
    2. ' pas' → logprob: -0.9924786686897278
    3. 'j' → logprob: -5.492478847503662
    4. '                       ' → logprob: -6.117478847503662
    5. 'plus' → logprob: -6.242478847503662
    6. '                   ' → logprob: -6.617478847503662
    7. ' j' → logprob: -6.742478847503662
    8. ' plus' → logprob: -6.992478847503662
    9. '```' → logprob: -6.992478847503662
    10. '_pas' → logprob: -7.117478847503662

Token 1035: ' sortir' (ID: 55515)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(j' → logprob: -1.4268628358840942
    2. ' j' → logprob: -1.8018628358840942
    3. 'j' → logprob: -2.3018627166748047
    4. '                       ' → logprob: -2.5518627166748047
    5. '+' → logprob: -2.8018627166748047
    6. '                   ' → logprob: -2.9268627166748047
    7. '```' → logprob: -2.9268627166748047
    8. '                           ' → logprob: -3.6768627166748047
    9. '   ' → logprob: -3.9268627166748047
    10. ' (' → logprob: -4.176862716674805

Token 1036: ' du' (ID: 1462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3241051733493805
    2. ' (' → logprob: -2.1991052627563477
    3. '(i' → logprob: -3.1991052627563477
    4. '(' → logprob: -3.6991052627563477
    5. '[i' → logprob: -3.6991052627563477
    6. '(j' → logprob: -4.074105262756348
    7. '+' → logprob: -4.574105262756348
    8. ' )' → logprob: -4.824105262756348
    9. 'j' → logprob: -5.199105262756348
    10. '[' → logprob: -5.324105262756348

Token 1037: ' tableau' (ID: 67053)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.6958675384521484
    2. 'grid' → logprob: -1.4458675384521484
    3. 'range' → logprob: -2.0708675384521484
    4. 'gr' → logprob: -2.3208675384521484
    5. ' grid' → logprob: -4.070867538452148
    6. 'board' → logprob: -5.070867538452148
    7. '[' → logprob: -5.445867538452148
    8. ' range' → logprob: -5.945867538452148
    9. ' W' → logprob: -6.195867538452148
    10. 'bord' → logprob: -6.320867538452148

Token 1038: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1114109754562378
    2. ')' → logprob: -1.3614109754562378
    3. '[' → logprob: -2.2364110946655273
    4. '[i' → logprob: -2.8614110946655273
    5. ' (' → logprob: -3.4864110946655273
    6. '```' → logprob: -3.6114110946655273
    7. ']' → logprob: -3.7364110946655273
    8. '[j' → logprob: -3.8614110946655273
    9. '{
' → logprob: -4.361411094665527
    10. ',' → logprob: -4.361411094665527

Token 1039: ' on' (ID: 402)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.35911059379577637
    2. '#' → logprob: -1.8591105937957764
    3. '                   ' → logprob: -2.6091105937957764
    4. ' donc' → logprob: -3.6091105937957764
    5. 'don' → logprob: -5.2341108322143555
    6. 'j' → logprob: -5.3591108322143555
    7. '                        ' → logprob: -5.4841108322143555
    8. 'on' → logprob: -5.6091108322143555
    9. '                           ' → logprob: -5.8591108322143555
    10. '               ' → logprob: -5.8591108322143555

Token 1040: ' se' (ID: 458)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11001784354448318
    2. '#' → logprob: -3.735017776489258
    3. ')' → logprob: -4.235017776489258
    4. 'n' → logprob: -4.985017776489258
    5. ''ll' → logprob: -5.235017776489258
    6. '           ' → logprob: -5.360017776489258
    7. 'do' → logprob: -5.360017776489258
    8. ' continue' → logprob: -5.485017776489258
    9. 'continue' → logprob: -5.735017776489258
    10. '       ' → logprob: -5.735017776489258

Token 1041: ' trouve' (ID: 30913)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.1798417568206787
    2. '_next' → logprob: -1.3048417568206787
    3. 'next' → logprob: -1.9298417568206787
    4. '_arr' → logprob: -2.9298417568206787
    5. ' next' → logprob: -3.3048417568206787
    6. '[next' → logprob: -3.3048417568206787
    7. 'arr' → logprob: -3.8048417568206787
    8. 'pos' → logprob: -4.179841995239258
    9. ']' → logprob: -4.304841995239258
    10. '```' → logprob: -4.429841995239258

Token 1042: ' sur' (ID: 1512)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9226306080818176
    2. ' à' → logprob: -1.7976305484771729
    3. 'dans' → logprob: -2.172630548477173
    4. 'à' → logprob: -2.547630548477173
    5. ' (' → logprob: -3.672630548477173
    6. ' hors' → logprob: -4.047630786895752
    7. '```' → logprob: -4.047630786895752
    8. 'au' → logprob: -4.047630786895752
    9. ' ici' → logprob: -4.172630786895752
    10. ' au' → logprob: -4.297630786895752

Token 1043: ' la' (ID: 557)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.2870602607727051
    2. ' (' → logprob: -1.662060260772705
    3. '(j' → logprob: -3.037060260772705
    4. 'j' → logprob: -6.162060260772705
    5. '(' → logprob: -6.287060260772705
    6. '                   ' → logprob: -6.412060260772705
    7. '[i' → logprob: -6.537060260772705
    8. 'i' → logprob: -6.787060260772705
    9. '                       ' → logprob: -7.787060260772705
    10. ' j' → logprob: -7.787060260772705

Token 1044: ' rue' (ID: 44838)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7846531867980957
    2. 'next' → logprob: -1.9096531867980957
    3. ' next' → logprob: -2.2846531867980957
    4. 'i' → logprob: -2.5346531867980957
    5. 'ligne' → logprob: -2.7846531867980957
    6. 'W' → logprob: -3.6596531867980957
    7. ' j' → logprob: -4.159653186798096
    8. 'line' → logprob: -4.284653186798096
    9. 'last' → logprob: -5.034653186798096
    10. '(i' → logprob: -5.034653186798096

Token 1045: ' la' (ID: 557)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5491514801979065
    2. ')' → logprob: -1.1741514205932617
    3. '[i' → logprob: -3.1741514205932617
    4. '[' → logprob: -3.9241514205932617
    5. '[j' → logprob: -4.424151420593262
    6. ']' → logprob: -4.799151420593262
    7. ' +' → logprob: -5.049151420593262
    8. '```' → logprob: -5.424151420593262
    9. ')
' → logprob: -5.799151420593262
    10. '       ' → logprob: -6.299151420593262

Token 1046: ' plus' (ID: 2932)
  Prédit: 'bord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bord' → logprob: -1.1650067567825317
    2. 'j' → logprob: -1.7900067567825317
    3. '#' → logprob: -2.165006637573242
    4. '```' → logprob: -2.415006637573242
    5. '       ' → logprob: -3.165006637573242
    6. '           ' → logprob: -3.290006637573242
    7. 'border' → logprob: -3.915006637573242
    8. '[' → logprob: -4.165006637573242
    9. '               ' → logprob: -4.665006637573242
    10. ' j' → logprob: -4.790006637573242

Token 1047: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.0214595794677734
    2. 'à' → logprob: -1.1464595794677734
    3. 'est' → logprob: -2.6464595794677734
    4. 'j' → logprob: -2.6464595794677734
    5. '```' → logprob: -3.1464595794677734
    6. 'ext' → logprob: -3.6464595794677734
    7. '+' → logprob: -4.021459579467773
    8. 'dro' → logprob: -4.271459579467773
    9. ' droite' → logprob: -4.396459579467773
    10. 'd' → logprob: -4.646459579467773

Token 1048: ' l' (ID: 305)
  Prédit: 'dro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dro' → logprob: -0.13911810517311096
    2. 'l' → logprob: -2.139118194580078
    3. 'd' → logprob: -4.764118194580078
    4. '```' → logprob: -6.264118194580078
    5. ' droite' → logprob: -6.764118194580078
    6. 'right' → logprob: -8.014118194580078
    7. 'la' → logprob: -9.639118194580078
    8. '1' → logprob: -9.889118194580078
    9. 'le' → logprob: -11.514118194580078
    10. 'j' → logprob: -11.764118194580078

Token 1049: ''est' (ID: 6616)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.436951756477356
    2. 'dro' → logprob: -1.686951756477356
    3. 'd' → logprob: -2.0619516372680664
    4. ' droite' → logprob: -2.3119516372680664
    5. '```' → logprob: -2.5619516372680664
    6. 'a' → logprob: -2.9369516372680664
    7. '+' → logprob: -3.3119516372680664
    8. '`' → logprob: -3.4369516372680664
    9. 'st' → logprob: -3.6869516372680664
    10. 'e' → logprob: -3.8119516372680664

Token 1050: '.
' (ID: 558)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2929685711860657
    2. ')' → logprob: -1.542968511581421
    3. ' +' → logprob: -4.04296875
    4. '<|end|>' → logprob: -5.29296875
    5. ' )' → logprob: -6.16796875
    6. ')
' → logprob: -6.16796875
    7. '```' → logprob: -6.29296875
    8. ',' → logprob: -6.41796875
    9. '
' → logprob: -6.54296875
    10. '                       ' → logprob: -7.16796875

Token 1051: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.1605722904205322
    2. '                       ' → logprob: -1.2855722904205322
    3. ')' → logprob: -1.9105722904205322
    4. '               ' → logprob: -2.4105722904205322
    5. ' (' → logprob: -2.9105722904205322
    6. '(' → logprob: -4.035572052001953
    7. '<|end|>' → logprob: -4.035572052001953
    8. '           ' → logprob: -4.535572052001953
    9. ' ' → logprob: -4.660572052001953
    10. '                           ' → logprob: -4.910572052001953

Token 1052: ' #' (ID: 1069)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.6297711730003357
    2. '                       ' → logprob: -1.5047712326049805
    3. ' (' → logprob: -2.3797712326049805
    4. 'next' → logprob: -3.0047712326049805
    5. '(' → logprob: -3.2547712326049805
    6. '                   ' → logprob: -4.1297712326049805
    7. ' next' → logprob: -4.3797712326049805
    8. '                           ' → logprob: -4.5047712326049805
    9. '#' (adapté à ' #') → logprob: -5.2547712326049805
    10. '               ' → logprob: -5.5047712326049805

Token 1053: ' On' (ID: 2160)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.3465509414672852
    2. '(next' → logprob: -1.3465509414672852
    3. '                       ' → logprob: -1.5965509414672852
    4. '(' → logprob: -1.8465509414672852
    5. ' (' → logprob: -3.346550941467285
    6. '                           ' → logprob: -3.596550941467285
    7. ' next' → logprob: -4.096550941467285
    8. '(i' → logprob: -4.346550941467285
    9. '                   ' → logprob: -4.846550941467285
    10. '(-' → logprob: -5.096550941467285

Token 1054: ' devons' (ID: 140218)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5487492680549622
    2. ' continue' → logprob: -1.2987492084503174
    3. 'next' → logprob: -3.6737492084503174
    4. '#' → logprob: -4.1737494468688965
    5. 'n' → logprob: -4.2987494468688965
    6. ']' → logprob: -4.5487494468688965
    7. '           ' → logprob: -4.6737494468688965
    8. '=' → logprob: -4.6737494468688965
    9. '[next' → logprob: -4.7987494468688965
    10. ' next' → logprob: -5.0487494468688965

Token 1055: ' arrêter' (ID: 163206)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sort' → logprob: -1.56337308883667
    2. 'not' → logprob: -1.68837308883667
    3. 'ind' → logprob: -2.06337308883667
    4. 'indi' → logprob: -2.56337308883667
    5. 'mar' → logprob: -2.68837308883667
    6. '       ' → logprob: -2.81337308883667
    7. 'mettre' → logprob: -3.43837308883667
    8. 'util' → logprob: -3.56337308883667
    9. 'contin' → logprob: -3.81337308883667
    10. '           ' → logprob: -3.93837308883667

Token 1056: ',' (ID: 11)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.356102854013443
    2. '(next' → logprob: -1.9811028242111206
    3. '                   ' → logprob: -2.60610294342041
    4. 'next' → logprob: -3.10610294342041
    5. '                           ' → logprob: -3.85610294342041
    6. '               ' → logprob: -4.98110294342041
    7. ' next' → logprob: -6.10610294342041
    8. ')' → logprob: -6.35610294342041
    9. '[next' → logprob: -6.48110294342041
    10. '           ' → logprob: -6.60610294342041

Token 1057: ' donc' (ID: 14206)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.16264694929122925
    2. 'continue' → logprob: -3.162647008895874
    3. '                   ' → logprob: -3.287647008895874
    4. 'next' → logprob: -3.787647008895874
    5. '                           ' → logprob: -3.912647008895874
    6. '(next' → logprob: -4.537646770477295
    7. '                               ' → logprob: -5.537646770477295
    8. ' continue' → logprob: -5.787646770477295
    9. '               ' → logprob: -5.787646770477295
    10. ' next' → logprob: -5.912646770477295

Token 1058: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.01135561428964138
    2. ' next' → logprob: -4.511355400085449
    3. '(next' → logprob: -9.26135540008545
    4. '                   ' → logprob: -9.88635540008545
    5. '       ' → logprob: -10.26135540008545
    6. '           ' → logprob: -10.38635540008545
    7. '   ' → logprob: -10.38635540008545
    8. '                       ' → logprob: -11.01135540008545
    9. '               ' → logprob: -11.13635540008545
    10. '(' → logprob: -11.38635540008545

Token 1059: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.0921942703134846e-05
    2. 'pos' → logprob: -11.87501049041748
    3. 'Pos' → logprob: -13.00001049041748
    4. '```' → logprob: -14.25001049041748
    5. '                   ' → logprob: -15.12501049041748
    6. '_position' → logprob: -16.125011444091797
    7. '_positions' → logprob: -16.500011444091797
    8. '   ' → logprob: -16.750011444091797
    9. '           ' → logprob: -17.000011444091797
    10. '_POS' → logprob: -17.125011444091797

Token 1060: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.226628895296017e-06
    2. '                   ' → logprob: -12.875007629394531
    3. '[' → logprob: -13.625007629394531
    4. '               ' → logprob: -14.625007629394531
    5. '           ' → logprob: -14.625007629394531
    6. '```' → logprob: -14.750007629394531
    7. '[I' → logprob: -14.875007629394531
    8. ' [' → logprob: -15.375007629394531
    9. '<|end|>' → logprob: -15.750007629394531
    10. '[
' → logprob: -15.875007629394531

Token 1061: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.030108090490102768
    2. '[i' → logprob: -3.5301079750061035
    3. ']' → logprob: -8.280108451843262
    4. '[j' → logprob: -10.155108451843262
    5. '           ' → logprob: -11.030108451843262
    6. ']][' → logprob: -12.030108451843262
    7. '=i' → logprob: -12.030108451843262
    8. ' ][' → logprob: -12.280108451843262
    9. '(i' → logprob: -12.530108451843262
    10. '=' → logprob: -12.655108451843262

Token 1062: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.005547966342419386
    2. 'i' → logprob: -5.255548000335693
    3. ']' → logprob: -9.005547523498535
    4. '][' → logprob: -9.880547523498535
    5. '[j' → logprob: -10.255547523498535
    6. '[i' → logprob: -10.880547523498535
    7. '```' → logprob: -11.130547523498535
    8. 'next' → logprob: -11.380547523498535
    9. ' j' → logprob: -11.380547523498535
    10. '   ' → logprob: -11.880547523498535

Token 1063: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.09105303138494492
    2. ']' → logprob: -3.091053009033203
    3. '][' → logprob: -3.841053009033203
    4. ']=' → logprob: -4.466053009033203
    5. '                   ' → logprob: -5.466053009033203
    6. '               ' → logprob: -6.216053009033203
    7. '=' → logprob: -6.966053009033203
    8. ' =' → logprob: -7.841053009033203
    9. '           ' → logprob: -7.966053009033203
    10. '                       ' → logprob: -8.966053009033203

Token 1064: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08968231827020645
    2. ' =' → logprob: -2.4646823406219482
    3. '[i' → logprob: -8.339682579040527
    4. '=i' → logprob: -8.964682579040527
    5. '=(' → logprob: -9.339682579040527
    6. ']=' → logprob: -9.464682579040527
    7. '                   ' → logprob: -9.839682579040527
    8. '=
' → logprob: -10.089682579040527
    9. ']' → logprob: -10.714682579040527
    10. '=[' → logprob: -10.964682579040527

Token 1065: ' fin' (ID: 2131)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0016713724471628666
    2. '(-' → logprob: -6.501671314239502
    3. '(' → logprob: -9.00167179107666
    4. ' (' → logprob: -10.50167179107666
    5. '   ' → logprob: -11.50167179107666
    6. '(I' → logprob: -12.62667179107666
    7. '(None' → logprob: -12.75167179107666
    8. '((' → logprob: -14.75167179107666
    9. '(ii' → logprob: -14.87667179107666
    10. '  ' → logprob: -15.25167179107666

Token 1066: ' de' (ID: 334)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.04702988639473915
    2. ' (' → logprob: -4.172029972076416
    3. '(' → logprob: -4.422029972076416
    4. '(-' → logprob: -4.797029972076416
    5. '                   ' → logprob: -5.672029972076416
    6. '(H' → logprob: -6.297029972076416
    7. '(W' → logprob: -6.547029972076416
    8. 'next' → logprob: -7.172029972076416
    9. '               ' → logprob: -7.297029972076416
    10. 'i' → logprob: -7.797029972076416

Token 1067: ' promenade' (ID: 148184)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.05048047751188278
    2. 'la' → logprob: -4.800480365753174
    3. 'route' → logprob: -5.050480365753174
    4. '(-' → logprob: -5.425480365753174
    5. '(None' → logprob: -5.550480365753174
    6. 'path' → logprob: -5.800480365753174
    7. 'ligne' → logprob: -5.925480365753174
    8. '(' → logprob: -5.925480365753174
    9. '((' → logprob: -6.050480365753174
    10. 'simulation' → logprob: -6.050480365753174

Token 1068: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.10300938785076141
    2. ' (' → logprob: -2.4780094623565674
    3. ' =' → logprob: -4.853009223937988
    4. '(' → logprob: -5.978009223937988
    5. '                   ' → logprob: -6.853009223937988
    6. '[i' → logprob: -7.728009223937988
    7. '           ' → logprob: -7.978009223937988
    8. '(next' → logprob: -7.978009223937988
    9. '=(' → logprob: -8.228009223937988
    10. '=' → logprob: -8.728009223937988

Token 1069: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.02657649852335453
    2. '(-' → logprob: -3.651576519012451
    3. ' (' → logprob: -9.026576042175293
    4. '(' → logprob: -9.401576042175293
    5. '   ' → logprob: -10.151576042175293
    6. 'i' → logprob: -11.526576042175293
    7. '(I' → logprob: -12.651576042175293
    8. ')' → logprob: -12.651576042175293
    9. '-' → logprob: -13.026576042175293
    10. ' (-' → logprob: -13.151576042175293

Token 1070: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015112892724573612
    2. ',i' → logprob: -7.001511096954346
    3. ',j' → logprob: -7.876511096954346
    4. ',
' → logprob: -9.501511573791504
    5. ' ,' → logprob: -10.376511573791504
    6. ',next' → logprob: -10.501511573791504
    7. '           ' → logprob: -10.751511573791504
    8. ',n' → logprob: -11.126511573791504
    9. '<|end|>' → logprob: -11.876511573791504
    10. '[i' → logprob: -11.876511573791504

Token 1071: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.420598219847307e-05
    2. ' i' → logprob: -9.7500638961792
    3. 'j' → logprob: -12.5000638961792
    4. '
' → logprob: -14.0000638961792
    5. '   ' → logprob: -14.8750638961792
    6. '0' → logprob: -15.2500638961792
    7. ')' → logprob: -15.6250638961792
    8. '```' → logprob: -16.000064849853516
    9. ')i' → logprob: -16.500064849853516
    10. '	i' → logprob: -16.750064849853516

Token 1072: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003146700793877244
    2. '][' → logprob: -6.878146648406982
    3. ']' → logprob: -7.128146648406982
    4. ']+' → logprob: -8.00314712524414
    5. '[j' → logprob: -8.25314712524414
    6. ')' → logprob: -8.87814712524414
    7. ',j' → logprob: -8.87814712524414
    8. ' +' → logprob: -9.12814712524414
    9. ',' → logprob: -9.25314712524414
    10. ')+' → logprob: -10.12814712524414

Token 1073: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18015287816524506
    2. 'j' → logprob: -2.1801528930664062
    3. 'W' → logprob: -3.3051528930664062
    4. '+' → logprob: -4.805152893066406
    5. 'next' → logprob: -6.180152893066406
    6. ')' → logprob: -7.305152893066406
    7. ']' → logprob: -7.430152893066406
    8. 'i' → logprob: -7.430152893066406
    9. '[' → logprob: -8.055152893066406
    10. '   ' → logprob: -8.180152893066406

Token 1074: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009166974923573434
    2. ')
' → logprob: -7.125916481018066
    3. '+' → logprob: -9.875916481018066
    4. '               ' → logprob: -11.125916481018066
    5. '                   ' → logprob: -11.250916481018066
    6. '                       ' → logprob: -11.250916481018066
    7. '           ' → logprob: -12.125916481018066
    8. '[' → logprob: -12.750916481018066
    9. ' )' → logprob: -12.875916481018066
    10. ')`' → logprob: -13.625916481018066

Token 1075: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5242823362350464
    2. '0' → logprob: -0.8992823362350464
    3. ')' → logprob: -6.899282455444336
    4. ' ' → logprob: -9.274282455444336
    5. '(' → logprob: -11.274282455444336
    6. '+' → logprob: -11.899282455444336
    7. ')
' → logprob: -12.399282455444336
    8. '2' → logprob: -12.524282455444336
    9. '
' → logprob: -12.524282455444336
    10. '```' → logprob: -12.649282455444336

Token 1076: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010282850125804543
    2. ')
' → logprob: -7.376028060913086
    3. '+' → logprob: -8.001028060913086
    4. ' )' → logprob: -11.376028060913086
    5. '                   ' → logprob: -11.876028060913086
    6. ' +' → logprob: -12.001028060913086
    7. '```' → logprob: -12.001028060913086
    8. '[' → logprob: -12.251028060913086
    9. '1' → logprob: -12.251028060913086
    10. '                       ' → logprob: -12.376028060913086

Token 1077: '                       ' (ID: 968)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1171259880065918
    2. '                       ' → logprob: -1.2421259880065918
    3. '                   ' → logprob: -1.7421259880065918
    4. '(i' → logprob: -2.867125988006592
    5. ')' → logprob: -2.992125988006592
    6. '(' → logprob: -3.492125988006592
    7. '[i' → logprob: -3.992125988006592
    8. ' +' → logprob: -4.992125988006592
    9. '[' → logprob: -5.117125988006592
    10. '               ' → logprob: -5.242125988006592

Token 1078: ' #' (ID: 1069)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.010033128783106804
    2. '(' → logprob: -5.385033130645752
    3. ' (' → logprob: -5.385033130645752
    4. '                       ' → logprob: -7.760033130645752
    5. '                           ' → logprob: -8.760032653808594
    6. '(-' → logprob: -9.385032653808594
    7. '                   ' → logprob: -9.760032653808594
    8. '(j' → logprob: -10.635032653808594
    9. '(I' → logprob: -11.135032653808594
    10. '   ' → logprob: -11.385032653808594

Token 1079: ' On' (ID: 2160)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.05534471571445465
    2. '                       ' → logprob: -3.180344820022583
    3. ' (' → logprob: -5.555344581604004
    4. '                           ' → logprob: -5.930344581604004
    5. '(' → logprob: -6.180344581604004
    6. '(j' → logprob: -6.555344581604004
    7. '(-' → logprob: -7.305344581604004
    8. '(next' → logprob: -7.555344581604004
    9. '                   ' → logprob: -7.680344581604004
    10. '                               ' → logprob: -8.930344581604004

Token 1080: ' va' (ID: 3423)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6479738354682922
    2. '=' → logprob: -2.2729737758636475
    3. '[j' → logprob: -2.3979737758636475
    4. ']' → logprob: -2.8979737758636475
    5. '[' → logprob: -3.2729737758636475
    6. ' =' → logprob: -3.6479737758636475
    7. '       ' → logprob: -3.6479737758636475
    8. '           ' → logprob: -4.022974014282227
    9. '               ' → logprob: -4.522974014282227
    10. '                   ' → logprob: -4.647974014282227

Token 1081: ' gérer' (ID: 86786)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.045477431267499924
    2. ' next' → logprob: -3.9204773902893066
    3. 'assign' → logprob: -4.670477390289307
    4. '           ' → logprob: -5.795477390289307
    5. 'set' → logprob: -5.795477390289307
    6. 'stock' → logprob: -6.545477390289307
    7. '               ' → logprob: -6.670477390289307
    8. 'continue' → logprob: -6.795477390289307
    9. '                   ' → logprob: -6.920477390289307
    10. '       ' → logprob: -7.670477390289307

Token 1082: ' plus' (ID: 2932)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.20554494857788086
    2. ' (' → logprob: -1.7055449485778809
    3. '(' → logprob: -5.955544948577881
    4. 'next' → logprob: -7.955544948577881
    5. '(next' → logprob: -8.080545425415039
    6. ' next' → logprob: -8.580545425415039
    7. '                   ' → logprob: -8.580545425415039
    8. '(j' → logprob: -9.205545425415039
    9. '                       ' → logprob: -9.455545425415039
    10. '           ' → logprob: -9.830545425415039

Token 1083: ' bas' (ID: 3222)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.38206472992897034
    2. 'i' → logprob: -2.7570648193359375
    3. '```' → logprob: -3.1320648193359375
    4. '       ' → logprob: -3.2570648193359375
    5. '[' → logprob: -3.3820648193359375
    6. '               ' → logprob: -3.6320648193359375
    7. '           ' → logprob: -3.7570648193359375
    8. '=' → logprob: -4.0070648193359375
    9. '[j' → logprob: -4.2570648193359375
    10. '[
' → logprob: -5.2570648193359375

Token 1084: ' la' (ID: 557)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5888537168502808
    2. ' (' → logprob: -0.9638537168502808
    3. '(' → logprob: -3.7138538360595703
    4. '                       ' → logprob: -4.08885383605957
    5. '                   ' → logprob: -5.46385383605957
    6. '(next' → logprob: -5.46385383605957
    7. '                           ' → logprob: -5.71385383605957
    8. '[i' → logprob: -6.58885383605957
    9. '(None' → logprob: -6.83885383605957
    10. ')' → logprob: -6.96385383605957

Token 1085: ' fin' (ID: 2131)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.3946983814239502
    2. '(j' → logprob: -2.01969838142395
    3. 'next' → logprob: -2.51969838142395
    4. '(next' → logprob: -4.019698143005371
    5. 'if' → logprob: -4.269698143005371
    6. ' next' → logprob: -4.394698143005371
    7. ' (' → logprob: -4.394698143005371
    8. 'exit' → logprob: -4.519698143005371
    9. '(' → logprob: -5.019698143005371
    10. 'break' → logprob: -5.519698143005371

Token 1086: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.285637378692627
    2. '[i' → logprob: -1.410637378692627
    3. '+' → logprob: -1.660637378692627
    4. '[' → logprob: -2.535637378692627
    5. '(i' → logprob: -3.285637378692627
    6. ']' → logprob: -3.910637378692627
    7. ' (' → logprob: -4.160637378692627
    8. ' +' → logprob: -4.160637378692627
    9. '                   ' → logprob: -4.410637378692627
    10. ')
' → logprob: -4.410637378692627

Token 1087: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7140024900436401
    2. 'prom' → logprob: -1.7140024900436401
    3. 'la' → logprob: -1.8390024900436401
    4. 'ligne' → logprob: -2.3390026092529297
    5. 'par' → logprob: -4.58900260925293
    6. 'simulation' → logprob: -4.83900260925293
    7. 'route' → logprob: -4.96400260925293
    8. 'line' → logprob: -4.96400260925293
    9. 'pos' → logprob: -5.08900260925293
    10. 'l' → logprob: -5.46400260925293

Token 1088: ' promenade' (ID: 148184)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -1.2114782333374023
    2. 'prom' → logprob: -1.3364782333374023
    3. 'range' → logprob: -2.8364782333374023
    4. 'for' → logprob: -2.9614782333374023
    5. 'j' → logprob: -3.0864782333374023
    6. 'route' → logprob: -3.2114782333374023
    7. 'while' → logprob: -3.3364782333374023
    8. 'gr' → logprob: -3.4614782333374023
    9. '```' → logprob: -3.8364782333374023
    10. 'simulation' → logprob: -4.211478233337402

Token 1089: ' (' (ID: 350)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.4020167589187622
    2. ' (' → logprob: -2.2770166397094727
    3. '                   ' → logprob: -3.0270166397094727
    4. '(' → logprob: -3.0270166397094727
    5. '               ' → logprob: -3.9020166397094727
    6. '                           ' → logprob: -3.9020166397094727
    7. '(i' → logprob: -3.9020166397094727
    8. '           ' → logprob: -4.402016639709473
    9. ')' → logprob: -4.402016639709473
    10. '<|end|>' → logprob: -4.527016639709473

Token 1090: 'qu' (ID: 351)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.28082624077796936
    2. ')' → logprob: -2.2808263301849365
    3. 'j' → logprob: -3.1558263301849365
    4. '                   ' → logprob: -3.2808263301849365
    5. '                       ' → logprob: -4.280826091766357
    6. ' i' → logprob: -4.530826091766357
    7. '),' → logprob: -5.030826091766357
    8. ')
' → logprob: -5.655826091766357
    9. '               ' → logprob: -5.780826091766357
    10. ' (' → logprob: -5.905826091766357

Token 1091: 'and' (ID: 427)
  Prédit: 'estion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'estion' → logprob: -0.5698442459106445
    2. 'u' → logprob: -2.4448442459106445
    3. '=' → logprob: -2.8198442459106445
    4. '[' → logprob: -2.8198442459106445
    5. '[i' → logprob: -2.9448442459106445
    6. 'e' → logprob: -3.4448442459106445
    7. 'i' → logprob: -3.8198442459106445
    8. ' =' → logprob: -4.0698442459106445
    9. '[j' → logprob: -4.3198442459106445
    10. ']' → logprob: -5.0698442459106445

Token 1092: ' on' (ID: 402)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.05088400840759277
    2. ' j' → logprob: -4.175884246826172
    3. '   ' → logprob: -4.925884246826172
    4. ')' → logprob: -4.925884246826172
    5. 'next' → logprob: -5.300884246826172
    6. '```' → logprob: -5.925884246826172
    7. 'W' → logprob: -6.175884246826172
    8. ' next' → logprob: -6.800884246826172
    9. '       ' → logprob: -6.925884246826172
    10. '                   ' → logprob: -7.050884246826172

Token 1093: ' est' (ID: 893)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3875044584274292
    2. '+' → logprob: -2.7625045776367188
    3. ' j' → logprob: -3.8875045776367188
    4. 'sort' → logprob: -4.012504577636719
    5. 'reach' → logprob: -4.137504577636719
    6. 'arr' → logprob: -4.137504577636719
    7. 's' → logprob: -4.262504577636719
    8. 're' → logprob: -4.387504577636719
    9. 'is' → logprob: -4.512504577636719
    10. 'i' → logprob: -4.637504577636719

Token 1094: ' sur' (ID: 1512)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.15359313786029816
    2. 'j' → logprob: -3.278593063354492
    3. '(j' → logprob: -4.153593063354492
    4. ' (' → logprob: -4.153593063354492
    5. '=i' → logprob: -4.153593063354492
    6. 'à' → logprob: -5.028593063354492
    7. 'next' → logprob: -5.153593063354492
    8. '=' → logprob: -5.403593063354492
    9. '[i' → logprob: -5.528593063354492
    10. 'out' → logprob: -5.528593063354492

Token 1095: ' limite' (ID: 48939)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0736662894487381
    2. '(i' → logprob: -3.0736663341522217
    3. ' (' → logprob: -4.698666095733643
    4. ' i' → logprob: -5.198666095733643
    5. '   ' → logprob: -5.323666095733643
    6. 'j' → logprob: -6.448666095733643
    7. '[i' → logprob: -6.573666095733643
    8. ')' → logprob: -7.323666095733643
    9. '           ' → logprob: -8.5736665725708
    10. 'W' → logprob: -8.8236665725708

Token 1096: ').
' (ID: 6294)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5609225034713745
    2. ']' → logprob: -2.685922622680664
    3. ')' → logprob: -2.810922622680664
    4. '                   ' → logprob: -3.185922622680664
    5. '[j' → logprob: -3.185922622680664
    6. '               ' → logprob: -3.310922622680664
    7. '[' → logprob: -3.310922622680664
    8. '[i' → logprob: -3.560922622680664
    9. '           ' → logprob: -3.685922622680664
    10. ' +' → logprob: -3.810922622680664

Token 1097: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.3848133087158203
    2. ' (' → logprob: -1.8848133087158203
    3. '(i' → logprob: -3.0098133087158203
    4. '                   ' → logprob: -3.3848133087158203
    5. '                           ' → logprob: -3.7598133087158203
    6. '(' → logprob: -3.7598133087158203
    7. ')' → logprob: -4.38481330871582
    8. '               ' → logprob: -5.63481330871582
    9. '           ' → logprob: -5.63481330871582
    10. '                        ' → logprob: -6.00981330871582

Token 1098: ' #' (ID: 1069)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.06700000911951065
    2. '                       ' → logprob: -3.066999912261963
    3. '                   ' → logprob: -5.316999912261963
    4. '(next' → logprob: -5.441999912261963
    5. '                           ' → logprob: -5.941999912261963
    6. '(' → logprob: -6.191999912261963
    7. ' (' → logprob: -6.441999912261963
    8. 'next' → logprob: -6.691999912261963
    9. '(j' → logprob: -7.441999912261963
    10. '(-' → logprob: -7.691999912261963

Token 1099: ' Pour' (ID: 13931)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.034617140889167786
    2. '                           ' → logprob: -4.159616947174072
    3. '                   ' → logprob: -4.534616947174072
    4. '(next' → logprob: -6.159616947174072
    5. '               ' → logprob: -6.784616947174072
    6. 'next' → logprob: -7.159616947174072
    7. '(i' → logprob: -7.159616947174072
    8. '#' → logprob: -7.784616947174072
    9. '                               ' → logprob: -8.03461742401123
    10. '                        ' → logprob: -8.03461742401123

Token 1100: ' la' (ID: 557)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.9983246922492981
    2. 'l' → logprob: -0.9983246922492981
    3. 'i' → logprob: -1.7483246326446533
    4. 'maint' → logprob: -3.7483246326446533
    5. 'now' → logprob: -4.123324871063232
    6. 'les' → logprob: -5.123324871063232
    7. '#' → logprob: -5.123324871063232
    8. '(i' → logprob: -5.123324871063232
    9. 'la' → logprob: -5.623324871063232
    10. ' j' → logprob: -5.748324871063232

Token 1101: ' simulation' (ID: 30937)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0047334432601929
    2. 'i' → logprob: -1.3797334432601929
    3. ' j' → logprob: -1.8797334432601929
    4. 'else' → logprob: -2.2547335624694824
    5. ' next' → logprob: -3.7547335624694824
    6. 'next' → logprob: -4.129733562469482
    7. ' else' → logprob: -4.504733562469482
    8. 'elif' → logprob: -4.629733562469482
    9. 'for' → logprob: -4.754733562469482
    10. ' i' → logprob: -4.879733562469482

Token 1102: ',' (ID: 11)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2577743530273438
    2. '               ' → logprob: -1.5077743530273438
    3. '                   ' → logprob: -1.7577743530273438
    4. '       ' → logprob: -2.8827743530273438
    5. '                       ' → logprob: -3.0077743530273438
    6. '           ' → logprob: -3.5077743530273438
    7. '[next' → logprob: -3.5077743530273438
    8. ',' → logprob: -3.6327743530273438
    9. ')' → logprob: -4.007774353027344
    10. ' =' → logprob: -4.132774353027344

Token 1103: ' pos' (ID: 1253)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0888318195939064
    2. ' next' → logprob: -2.838831901550293
    3. '                   ' → logprob: -4.713831901550293
    4. '                       ' → logprob: -4.713831901550293
    5. 'continue' → logprob: -5.213831901550293
    6. '               ' → logprob: -6.838831901550293
    7. '           ' → logprob: -8.213831901550293
    8. '                           ' → logprob: -8.338831901550293
    9. '[next' → logprob: -8.338831901550293
    10. ' on' → logprob: -8.463831901550293

Token 1104: ' finale' (ID: 37759)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5350039601325989
    2. '                   ' → logprob: -1.410003900527954
    3. '           ' → logprob: -3.660003900527954
    4. 'next' → logprob: -3.785003900527954
    5. '                       ' → logprob: -3.910003900527954
    6. ' =' → logprob: -3.910003900527954
    7. '=' → logprob: -3.910003900527954
    8. 'ition' → logprob: -4.285004138946533
    9. 's' → logprob: -4.410004138946533
    10. 'ion' → logprob: -5.035004138946533

Token 1105: ' hors' (ID: 26087)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4208107888698578
    2. '=' → logprob: -1.4208108186721802
    3. ')' → logprob: -2.9208106994628906
    4. '[i' → logprob: -4.045810699462891
    5. ']' → logprob: -5.295810699462891
    6. '(i' → logprob: -5.420810699462891
    7. ',' → logprob: -5.545810699462891
    8. '[' → logprob: -5.795810699462891
    9. '                   ' → logprob: -6.420810699462891
    10. '=(' → logprob: -6.420810699462891

Token 1106: ' du' (ID: 1462)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.47896480560302734
    2. 'du' → logprob: -1.6039648056030273
    3. 'de' → logprob: -2.6039648056030273
    4. 'bord' → logprob: -2.9789648056030273
    5. 'lim' → logprob: -3.9789648056030273
    6. 'grid' → logprob: -4.853964805603027
    7. 'bounds' → logprob: -5.478964805603027
    8. 'la' → logprob: -5.728964805603027
    9. 'table' → logprob: -5.853964805603027
    10. 'borne' → logprob: -5.853964805603027

Token 1107: ' tableau' (ID: 67053)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.7641004323959351
    2. 'gr' → logprob: -1.139100432395935
    3. 'W' → logprob: -1.889100432395935
    4. 'board' → logprob: -3.3891005516052246
    5. 'range' → logprob: -4.264100551605225
    6. 'bord' → logprob: -4.514100551605225
    7. 'plate' → logprob: -7.014100551605225
    8. 'table' → logprob: -7.264100551605225
    9. 'bound' → logprob: -7.264100551605225
    10. 'bounds' → logprob: -8.014100074768066

Token 1108: ':
' (ID: 734)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.28837719559669495
    2. ' (' → logprob: -2.413377285003662
    3. '                       ' → logprob: -2.413377285003662
    4. '                   ' → logprob: -3.538377285003662
    5. '(' → logprob: -4.163377285003662
    6. '[i' → logprob: -4.913377285003662
    7. '               ' → logprob: -5.038377285003662
    8. '                           ' → logprob: -5.163377285003662
    9. '           ' → logprob: -5.913377285003662
    10. '(next' → logprob: -7.038377285003662

Token 1109: '                       ' (ID: 968)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.14035305380821228
    2. ' (' → logprob: -2.140352964401245
    3. '(' → logprob: -5.015353202819824
    4. '                       ' → logprob: -6.015353202819824
    5. '                           ' → logprob: -6.265353202819824
    6. '                   ' → logprob: -6.390353202819824
    7. '(-' → logprob: -8.515353202819824
    8. '                               ' → logprob: -9.390353202819824
    9. '   ' → logprob: -9.765353202819824
    10. '               ' → logprob: -9.890353202819824

Token 1110: ' #' (ID: 1069)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.010221702046692371
    2. ' (' → logprob: -4.760221481323242
    3. '                   ' → logprob: -7.260221481323242
    4. '(' → logprob: -8.135221481323242
    5. '                       ' → logprob: -8.135221481323242
    6. '(next' → logprob: -8.760221481323242
    7. '(-' → logprob: -9.635221481323242
    8. '               ' → logprob: -10.260221481323242
    9. '   ' → logprob: -10.885221481323242
    10. '           ' → logprob: -11.260221481323242

Token 1111: ' On' (ID: 2160)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.007047582883387804
    2. ' (' → logprob: -5.507047653198242
    3. 'i' → logprob: -7.007047653198242
    4. '(H' → logprob: -7.257047653198242
    5. '                       ' → logprob: -8.007047653198242
    6. '(-' → logprob: -8.257047653198242
    7. '                   ' → logprob: -8.257047653198242
    8. '                           ' → logprob: -8.757047653198242
    9. '(' → logprob: -8.882047653198242
    10. '(next' → logprob: -9.382047653198242

Token 1112: ' peut' (ID: 9216)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.9881797432899475
    2. '[i' → logprob: -1.8631796836853027
    3. ' next' → logprob: -1.9881796836853027
    4. 'continue' → logprob: -2.3631796836853027
    5. '[next' → logprob: -2.4881796836853027
    6. '=' → logprob: -3.8631796836853027
    7. ']' → logprob: -3.9881796836853027
    8. '[' → logprob: -3.9881796836853027
    9. '_next' → logprob: -4.113179683685303
    10. ' continue' → logprob: -4.363179683685303

Token 1113: ' utiliser' (ID: 43227)
  Prédit: 'mettre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mettre' → logprob: -0.07143715023994446
    2. 'not' → logprob: -3.446437120437622
    3. 'lais' → logprob: -5.446437358856201
    4. 'next' → logprob: -5.696437358856201
    5. 'faire' → logprob: -5.696437358856201
    6. 'util' → logprob: -5.696437358856201
    7. 'assign' → logprob: -5.821437358856201
    8. 'stock' → logprob: -6.071437358856201
    9. 'contin' → logprob: -6.196437358856201
    10. 'le' → logprob: -6.196437358856201

Token 1114: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.008600151166319847
    2. '(-' → logprob: -5.383600234985352
    3. '(H' → logprob: -6.008600234985352
    4. '(' → logprob: -7.258600234985352
    5. ' (' → logprob: -7.508600234985352
    6. '   ' → logprob: -8.633600234985352
    7. '           ' → logprob: -11.383600234985352
    8. '       ' → logprob: -11.383600234985352
    9. '  ' → logprob: -11.633600234985352
    10. '(None' → logprob: -11.633600234985352

Token 1115: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00028660334646701813
    2. ' i' → logprob: -9.250287055969238
    3. '(i' → logprob: -9.500287055969238
    4. '-' → logprob: -9.500287055969238
    5. '   ' → logprob: -11.000287055969238
    6. ' -' → logprob: -12.375287055969238
    7. '
' → logprob: -12.375287055969238
    8. ' (' → logprob: -13.125287055969238
    9. ')i' → logprob: -13.250287055969238
    10. '       ' → logprob: -13.625287055969238

Token 1116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004681814927607775
    2. ',j' → logprob: -5.504681587219238
    3. ',next' → logprob: -8.254681587219238
    4. ' ,' → logprob: -9.004681587219238
    5. '           ' → logprob: -9.629681587219238
    6. ',i' → logprob: -10.004681587219238
    7. '       ' → logprob: -10.879681587219238
    8. ',
' → logprob: -10.879681587219238
    9. ',n' → logprob: -11.254681587219238
    10. ',k' → logprob: -11.879681587219238

Token 1117: ' W' (ID: 486)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06468624621629715
    2. 'W' → logprob: -2.9396862983703613
    3. ' j' → logprob: -4.939686298370361
    4. '   ' → logprob: -6.564686298370361
    5. ' W' → logprob: -7.064686298370361
    6. '       ' → logprob: -9.814685821533203
    7. '  ' → logprob: -10.189685821533203
    8. '           ' → logprob: -10.314685821533203
    9. '    ' → logprob: -10.439685821533203
    10. ' ' → logprob: -10.689685821533203

Token 1118: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2703278362751007
    2. ',' → logprob: -1.6453278064727783
    3. ')' → logprob: -3.5203278064727783
    4. ')+' → logprob: -5.020328044891357
    5. ' +' → logprob: -6.520328044891357
    6. '           ' → logprob: -6.895328044891357
    7. '```' → logprob: -7.395328044891357
    8. ']+' → logprob: -7.520328044891357
    9. ',j' → logprob: -7.520328044891357
    10. '),' → logprob: -7.770328044891357

Token 1119: ' si' (ID: 1784)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23531612753868103
    2. '               ' → logprob: -2.110316038131714
    3. '                       ' → logprob: -3.610316038131714
    4. '           ' → logprob: -3.610316038131714
    5. '                   ' → logprob: -4.110316276550293
    6. ',' → logprob: -5.235316276550293
    7. '<|end|>' → logprob: -5.485316276550293
    8. '[' → logprob: -6.360316276550293
    9. ')
' → logprob: -6.485316276550293
    10. '[i' → logprob: -6.610316276550293

Token 1120: ' ' (ID: 220)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7709155082702637
    2. 'True' → logprob: -1.1459155082702637
    3. ' j' → logprob: -2.5209155082702637
    4. ' True' → logprob: -2.6459155082702637
    5. 'False' → logprob: -3.8959155082702637
    6. 'W' → logprob: -4.395915508270264
    7. '1' → logprob: -4.770915508270264
    8. '   ' → logprob: -5.145915508270264
    9. '0' → logprob: -5.145915508270264
    10. ' W' → logprob: -6.145915508270264

Token 1121: '0' (ID: 15)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.20857098698616028
    2. 'True' → logprob: -1.958570957183838
    3. 'W' → logprob: -3.958570957183838
    4. 'd' → logprob: -4.833570957183838
    5. 'next' → logprob: -5.208570957183838
    6. '0' → logprob: -5.583570957183838
    7. '1' → logprob: -5.958570957183838
    8. 'False' → logprob: -6.083570957183838
    9. ' True' → logprob: -6.708570957183838
    10. 'i' → logprob: -6.833570957183838

Token 1122: '-based' (ID: 8235)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1445043087005615
    2. '+' → logprob: -1.5195043087005615
    3. '==' → logprob: -1.7695043087005615
    4. ',' → logprob: -2.7695043087005615
    5. ' ==' → logprob: -2.7695043087005615
    6. '=' → logprob: -3.3945043087005615
    7. '           ' → logprob: -3.8945043087005615
    8. '<=' → logprob: -4.394504547119141
    9. ']==' → logprob: -4.519504547119141
    10. '               ' → logprob: -5.019504547119141

Token 1123: ' correspond' (ID: 11095)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23679998517036438
    2. '               ' → logprob: -2.486799955368042
    3. '                       ' → logprob: -2.861799955368042
    4. '                   ' → logprob: -3.361799955368042
    5. '<|end|>' → logprob: -3.861799955368042
    6. '           ' → logprob: -5.111800193786621
    7. ',' → logprob: -6.736800193786621
    8. '[' → logprob: -6.861800193786621
    9. '                           ' → logprob: -6.986800193786621
    10. '+' → logprob: -7.361800193786621

Token 1124: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5759307146072388
    2. ',' → logprob: -1.4509307146072388
    3. '=' → logprob: -3.200930595397949
    4. ']' → logprob: -3.325930595397949
    5. ' à' → logprob: -3.450930595397949
    6. ' to' → logprob: -3.575930595397949
    7. '               ' → logprob: -4.450930595397949
    8. 'à' → logprob: -4.825930595397949
    9. 'to' → logprob: -5.200930595397949
    10. '(i' → logprob: -5.325930595397949

Token 1125: ' col' (ID: 996)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5672903656959534
    2. '(i' → logprob: -0.9422903656959534
    3. ' (' → logprob: -3.4422903060913086
    4. ' i' → logprob: -5.067290306091309
    5. 'W' → logprob: -5.942290306091309
    6. '(' → logprob: -6.817290306091309
    7. 'H' → logprob: -8.567290306091309
    8. '0' → logprob: -8.817290306091309
    9. '[i' → logprob: -9.067290306091309
    10. '
' → logprob: -9.567290306091309

Token 1126: ' W' (ID: 486)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7398725748062134
    2. 'W' → logprob: -1.1148725748062134
    3. 'umn' → logprob: -1.8648725748062134
    4. ' +' → logprob: -4.239872455596924
    5. '               ' → logprob: -5.739872455596924
    6. ',' → logprob: -5.864872455596924
    7. 'um' → logprob: -5.864872455596924
    8. '           ' → logprob: -6.114872455596924
    9. ']' → logprob: -6.614872455596924
    10. '   ' → logprob: -6.739872455596924

Token 1127: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2646903097629547
    2. '               ' → logprob: -2.264690399169922
    3. '                   ' → logprob: -2.889690399169922
    4. ',' → logprob: -3.639690399169922
    5. '                       ' → logprob: -3.889690399169922
    6. '           ' → logprob: -5.014690399169922
    7. ' (' → logprob: -5.764690399169922
    8. '(i' → logprob: -5.764690399169922
    9. '[i' → logprob: -6.139690399169922
    10. ')
' → logprob: -6.139690399169922

Token 1128: ' qui' (ID: 2780)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5566750764846802
    2. ' (' → logprob: -1.0566750764846802
    3. '                   ' → logprob: -3.8066749572753906
    4. ')' → logprob: -3.8066749572753906
    5. 'i' → logprob: -4.181674957275391
    6. '                       ' → logprob: -5.306674957275391
    7. '               ' → logprob: -5.806674957275391
    8. '                           ' → logprob: -5.931674957275391
    9. '(' → logprob: -6.181674957275391
    10. ' i' → logprob: -6.556674957275391

Token 1129: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -1.4420123100280762
    2. ' est' → logprob: -1.6920123100280762
    3. 'cor' → logprob: -2.067012310028076
    4. 's' → logprob: -2.442012310028076
    5. '```' → logprob: -2.567012310028076
    6. ' corresponds' → logprob: -2.817012310028076
    7. ' correspond' → logprob: -2.942012310028076
    8. ' is' → logprob: -3.442012310028076
    9. 'ex' → logprob: -3.942012310028076
    10. 'is' → logprob: -4.192012310028076

Token 1130: ' hors' (ID: 26087)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.40892377495765686
    2. 'i' → logprob: -1.2839237451553345
    3. ' (' → logprob: -3.158923864364624
    4. 'out' → logprob: -5.658923625946045
    5. ' hors' → logprob: -5.783923625946045
    6. ' i' → logprob: -5.908923625946045
    7. 'outside' → logprob: -6.158923625946045
    8. '(' → logprob: -6.783923625946045
    9. 'H' → logprob: -7.033923625946045
    10. 'W' → logprob: -7.533923625946045

Token 1131: ' de' (ID: 334)
  Prédit: 'bounds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bounds' → logprob: -1.1229853630065918
    2. 'range' → logprob: -1.4979853630065918
    3. 'de' → logprob: -1.9979853630065918
    4. 'grid' → logprob: -2.497985363006592
    5. 'bound' → logprob: -2.872985363006592
    6. 'du' → logprob: -3.247985363006592
    7. 'bord' → logprob: -3.622985363006592
    8. '           ' → logprob: -3.872985363006592
    9. 'gr' → logprob: -3.872985363006592
    10. 'W' → logprob: -4.497985363006592

Token 1132: ' la' (ID: 557)
  Prédit: 'bound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bound' → logprob: -0.9245334267616272
    2. 'W' → logprob: -1.4245333671569824
    3. 'bounds' → logprob: -1.9245333671569824
    4. 'bord' → logprob: -2.0495333671569824
    5. 'range' → logprob: -3.1745333671569824
    6. 'gr' → logprob: -4.174533367156982
    7. 'index' → logprob: -4.549533367156982
    8. 'grid' → logprob: -4.924533367156982
    9. 'la' → logprob: -5.299533367156982
    10. 'boundary' → logprob: -6.174533367156982

Token 1133: ' grille' (ID: 99153)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.668630063533783
    2. 'gr' → logprob: -1.2936301231384277
    3. 'board' → logprob: -2.7936301231384277
    4. 'W' → logprob: -3.0436301231384277
    5. 'bound' → logprob: -3.1686301231384277
    6. 'bord' → logprob: -3.6686301231384277
    7. 'range' → logprob: -4.043630123138428
    8. 'bounds' → logprob: -4.293630123138428
    9. 'array' → logprob: -6.418630123138428
    10. 'liste' → logprob: -6.793630123138428

Token 1134: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6102591753005981
    2. ',' → logprob: -1.7352591753005981
    3. '                   ' → logprob: -2.2352590560913086
    4. '               ' → logprob: -3.1102590560913086
    5. '[i' → logprob: -3.6102590560913086
    6. '(i' → logprob: -3.7352590560913086
    7. '                       ' → logprob: -4.110259056091309
    8. ',
' → logprob: -4.235259056091309
    9. '           ' → logprob: -4.485259056091309
    10. '[' → logprob: -4.860259056091309

Token 1135: '                       ' (ID: 968)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0587928295135498
    2. '                   ' → logprob: -1.4337928295135498
    3. '                       ' → logprob: -1.6837928295135498
    4. ')' → logprob: -1.6837928295135498
    5. '<|end|>' → logprob: -4.433793067932129
    6. ' (' → logprob: -4.933793067932129
    7. '           ' → logprob: -5.433793067932129
    8. '(i' → logprob: -5.433793067932129
    9. '(' → logprob: -5.433793067932129
    10. '                           ' → logprob: -6.058793067932129

Token 1136: ' #' (ID: 1069)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.14949433505535126
    2. ' (' → logprob: -2.1494944095611572
    3. '                   ' → logprob: -4.649494171142578
    4. '                       ' → logprob: -5.274494171142578
    5. ',' → logprob: -6.274494171142578
    6. ')' → logprob: -6.274494171142578
    7. '(' → logprob: -7.024494171142578
    8. '               ' → logprob: -7.149494171142578
    9. '                           ' → logprob: -7.274494171142578
    10. ')
' → logprob: -8.399494171142578

Token 1137: ' En' (ID: 2130)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.09963525831699371
    2. ' (' → logprob: -3.724635362625122
    3. '                       ' → logprob: -3.849635362625122
    4. 'next' → logprob: -3.974635362625122
    5. '(next' → logprob: -4.224635124206543
    6. '                           ' → logprob: -5.099635124206543
    7. '                   ' → logprob: -5.474635124206543
    8. ' next' → logprob: -5.599635124206543
    9. '               ' → logprob: -7.599635124206543
    10. '                               ' → logprob: -7.849635124206543

Token 1138: ' sortie' (ID: 52761)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.1720449924468994
    2. 'fait' → logprob: -1.4220449924468994
    3. '(' → logprob: -2.0470449924468994
    4. 'range' → logprob: -2.6720449924468994
    5. 'i' → logprob: -2.9220449924468994
    6. '#' → logprob: -3.0470449924468994
    7. ' fait' → logprob: -3.4220449924468994
    8. 'faite' → logprob: -3.7970449924468994
    9. 'W' → logprob: -3.9220449924468994
    10. '0' → logprob: -4.04704475402832

Token 1139: ' on' (ID: 402)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.120726227760315
    2. ')' → logprob: -1.370726227760315
    3. ']' → logprob: -1.620726227760315
    4. ',' → logprob: -2.6207261085510254
    5. '[' → logprob: -3.1207261085510254
    6. ':' → logprob: -4.120726108551025
    7. '           ' → logprob: -4.120726108551025
    8. '               ' → logprob: -4.120726108551025
    9. '       ' → logprob: -4.495726108551025
    10. '                   ' → logprob: -4.745726108551025

Token 1140: ' doit' (ID: 21822)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.2229652404785156
    2. 'can' → logprob: -1.5979652404785156
    3. ']' → logprob: -2.4729652404785156
    4. ' =' → logprob: -2.7229652404785156
    5. '=' → logprob: -2.9729652404785156
    6. ')' → logprob: -3.2229652404785156
    7. 'continue' → logprob: -3.5979652404785156
    8. 'return' → logprob: -3.5979652404785156
    9. 'util' → logprob: -3.8479652404785156
    10. '           ' → logprob: -3.9729652404785156

Token 1141: ' afficher' (ID: 146524)
  Prédit: 'mettre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mettre' → logprob: -1.1003361940383911
    2. 'next' → logprob: -1.3503361940383911
    3. 'util' → logprob: -1.9753361940383911
    4. 'not' → logprob: -2.9753360748291016
    5. 'sort' → logprob: -3.2253360748291016
    6. 'j' → logprob: -3.7253360748291016
    7. 'just' → logprob: -3.9753360748291016
    8. 'assign' → logprob: -4.475336074829102
    9. 'mar' → logprob: -4.475336074829102
    10. 'return' → logprob: -4.475336074829102

Token 1142: ' en' (ID: 469)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.49315574765205383
    2. 'i' → logprob: -1.1181557178497314
    3. ' (' → logprob: -2.8681557178497314
    4. ' i' → logprob: -5.7431559562683105
    5. 'H' → logprob: -6.9931559562683105
    6. '(H' → logprob: -7.6181559562683105
    7. '   ' → logprob: -8.493155479431152
    8. '(' → logprob: -8.743155479431152
    9. ''i' → logprob: -9.743155479431152
    10. 'print' → logprob: -9.743155479431152

Token 1143: ' ' (ID: 220)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.7093020081520081
    2. 'i' → logprob: -1.3343019485473633
    3. 'range' → logprob: -2.7093019485473633
    4. '0' → logprob: -3.3343019485473633
    5. ' i' → logprob: -3.7093019485473633
    6. ' (' → logprob: -3.9593019485473633
    7. '[i' → logprob: -4.209301948547363
    8. 'print' → logprob: -4.334301948547363
    9. 'next' → logprob: -4.459301948547363
    10. 'out' → logprob: -4.834301948547363

Token 1144: '1' (ID: 16)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.04262549430131912
    2. 'i' → logprob: -3.5426254272460938
    3. 'W' → logprob: -5.542625427246094
    4. '[i' → logprob: -6.167625427246094
    5. ' (' → logprob: -6.292625427246094
    6. 'next' → logprob: -7.292625427246094
    7. 'out' → logprob: -7.292625427246094
    8. '(' → logprob: -7.292625427246094
    9. '0' → logprob: -7.667625427246094
    10. 'final' → logprob: -8.042625427246094

Token 1145: '-based' (ID: 8235)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2253362089395523
    2. ']' → logprob: -2.9753363132476807
    3. 'x' → logprob: -3.4753363132476807
    4. '][' → logprob: -3.7253363132476807
    5. ' ,' → logprob: -3.8503363132476807
    6. ')' → logprob: -4.475336074829102
    7. '           ' → logprob: -4.850336074829102
    8. ',
' → logprob: -4.850336074829102
    9. '+' → logprob: -5.350336074829102
    10. '],' → logprob: -5.475336074829102

Token 1146: ',' (ID: 11)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5151348114013672
    2. ' (' → logprob: -1.0151348114013672
    3. ',' → logprob: -4.515134811401367
    4. ')' → logprob: -4.515134811401367
    5. '                   ' → logprob: -5.265134811401367
    6. '(' → logprob: -5.515134811401367
    7. '               ' → logprob: -6.390134811401367
    8. '           ' → logprob: -6.765134811401367
    9. '                       ' → logprob: -6.765134811401367
    10. '[i' → logprob: -7.140134811401367

Token 1147: ' la' (ID: 557)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.21622319519519806
    2. ' (' → logprob: -1.7162232398986816
    3. 'i' → logprob: -5.216223239898682
    4. '                   ' → logprob: -5.591223239898682
    5. ' i' → logprob: -6.716223239898682
    6. ')' → logprob: -6.841223239898682
    7. '                       ' → logprob: -7.466223239898682
    8. '               ' → logprob: -7.591223239898682
    9. 'next' → logprob: -8.091222763061523
    10. '           ' → logprob: -8.091222763061523

Token 1148: ' colonne' (ID: 148275)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06502030789852142
    2. 'next' → logprob: -4.1900200843811035
    3. ' next' → logprob: -4.3150200843811035
    4. '(i' → logprob: -4.8150200843811035
    5. ' i' → logprob: -4.9400200843811035
    6. '
' → logprob: -5.6900200843811035
    7. 'exit' → logprob: -5.6900200843811035
    8. ' (' → logprob: -6.5650200843811035
    9. 'return' → logprob: -6.6900200843811035
    10. 'H' → logprob: -6.6900200843811035

Token 1149: ' j' (ID: 441)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19168782234191895
    2. 'i' → logprob: -2.691687822341919
    3. ' i' → logprob: -3.691687822341919
    4. ' ,' → logprob: -3.816687822341919
    5. 'W' → logprob: -4.31668758392334
    6. 'j' → logprob: -4.56668758392334
    7. '+' → logprob: -5.31668758392334
    8. ' j' → logprob: -5.31668758392334
    9. '[i' → logprob: -5.44168758392334
    10. ',j' → logprob: -5.44168758392334

Token 1150: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.017289983108639717
    2. ' +' → logprob: -4.267290115356445
    3. ',' → logprob: -6.642290115356445
    4. ']' → logprob: -7.392290115356445
    5. ']+' → logprob: -7.892290115356445
    6. ')' → logprob: -8.517290115356445
    7. '           ' → logprob: -9.142290115356445
    8. '][' → logprob: -9.392290115356445
    9. '```' → logprob: -9.642290115356445
    10. '],' → logprob: -9.767290115356445

Token 1151: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.34849998354911804
    2. '1' → logprob: -1.2235000133514404
    3. '+' → logprob: -11.09850025177002
    4. '
' → logprob: -11.59850025177002
    5. ' ' → logprob: -11.72350025177002
    6. 'j' → logprob: -11.72350025177002
    7. '```' → logprob: -12.72350025177002
    8. '   ' → logprob: -12.84850025177002
    9. '`' → logprob: -13.28600025177002
    10. 'W' → logprob: -14.53600025177002

Token 1152: '.
' (ID: 558)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.3047820031642914
    2. '                       ' → logprob: -2.429781913757324
    3. '                   ' → logprob: -3.054781913757324
    4. ' (' → logprob: -3.179781913757324
    5. '(' → logprob: -3.429781913757324
    6. '                           ' → logprob: -4.179781913757324
    7. '               ' → logprob: -4.304781913757324
    8. ')' → logprob: -4.429781913757324
    9. ',' → logprob: -5.804781913757324
    10. '                               ' → logprob: -6.304781913757324

Token 1153: '                       ' (ID: 968)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.9809153079986572
    2. '                       ' → logprob: -1.4809153079986572
    3. '                   ' → logprob: -1.8559153079986572
    4. ')' → logprob: -2.6059153079986572
    5. '               ' → logprob: -2.8559153079986572
    6. ' (' → logprob: -3.1059153079986572
    7. '(' → logprob: -3.7309153079986572
    8. '                           ' → logprob: -4.105915069580078
    9. '           ' → logprob: -5.105915069580078
    10. ')
' → logprob: -5.855915069580078

Token 1154: ' next' (ID: 2613)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0904243141412735
    2. '                       ' → logprob: -3.0904242992401123
    3. '                           ' → logprob: -3.9654242992401123
    4. '                   ' → logprob: -4.965424537658691
    5. '(next' → logprob: -5.215424537658691
    6. '(' → logprob: -5.590424537658691
    7. ' (' → logprob: -6.215424537658691
    8. 'next' (adapté à ' next') → logprob: -7.090424537658691
    9. '(j' → logprob: -7.215424537658691
    10. '                               ' → logprob: -7.465424537658691

Token 1155: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.0280383548888494e-06
    2. 'pos' → logprob: -15.000000953674316
    3. '_token' → logprob: -15.125000953674316
    4. 'Pos' → logprob: -15.375000953674316
    5. '_' → logprob: -17.500001907348633
    6. '_tokens' → logprob: -17.875001907348633
    7. '_POS' → logprob: -18.500001907348633
    8. ' _' → logprob: -18.625001907348633
    9. '_positions' → logprob: -18.625001907348633
    10. '```' → logprob: -18.625001907348633

Token 1156: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.061054359131958e-06
    2. '[' → logprob: -12.250007629394531
    3. '[I' → logprob: -14.375007629394531
    4. '[j' → logprob: -14.625007629394531
    5. '[next' → logprob: -14.875007629394531
    6. '][' → logprob: -14.875007629394531
    7. ' [' → logprob: -15.125007629394531
    8. '
' → logprob: -15.125007629394531
    9. '[
' → logprob: -15.500007629394531
    10. '```' → logprob: -16.12500762939453

Token 1157: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.14274677634239197
    2. '[i' → logprob: -2.017746686935425
    3. ']' → logprob: -10.767746925354004
    4. '           ' → logprob: -12.142746925354004
    5. '[I' → logprob: -12.267746925354004
    6. '[' → logprob: -12.392746925354004
    7. '```' → logprob: -12.392746925354004
    8. 'i' → logprob: -12.517746925354004
    9. ']][' → logprob: -12.517746925354004
    10. '[j' → logprob: -12.517746925354004

Token 1158: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -8.697387966094539e-05
    2. '[j' → logprob: -10.000086784362793
    3. ' j' → logprob: -10.250086784362793
    4. 'i' → logprob: -13.000086784362793
    5. '   ' → logprob: -13.750086784362793
    6. '[' → logprob: -14.000086784362793
    7. ' ' → logprob: -14.625086784362793
    8. '  ' → logprob: -15.375086784362793
    9. '[i' → logprob: -15.625086784362793
    10. '	j' → logprob: -15.875086784362793

Token 1159: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05472361668944359
    2. ']=' → logprob: -3.4297235012054443
    3. '=' → logprob: -4.179723739624023
    4. ']=(' → logprob: -5.429723739624023
    5. ' =' → logprob: -6.804723739624023
    6. '=(' → logprob: -10.929723739624023
    7. ')' → logprob: -11.054723739624023
    8. '   ' → logprob: -11.929723739624023
    9. ' ]' → logprob: -11.929723739624023
    10. '=
' → logprob: -12.804723739624023

Token 1160: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006742492783814669
    2. ' =' → logprob: -5.006742477416992
    3. '=
' → logprob: -11.131742477416992
    4. '=(' → logprob: -11.381742477416992
    5. ' =(' → logprob: -15.756742477416992
    6. '＝' → logprob: -15.881742477416992
    7. ']=' → logprob: -15.881742477416992
    8. '=(-' → logprob: -16.006742477416992
    9. '                   ' → logprob: -16.381742477416992
    10. '=i' → logprob: -16.756742477416992

Token 1161: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.214019307051785e-05
    2. ' (' → logprob: -10.375032424926758
    3. '(' → logprob: -14.250032424926758
    4. '   ' → logprob: -15.500032424926758
    5. '(I' → logprob: -18.000032424926758
    6. ' ' → logprob: -18.750032424926758
    7. '  ' → logprob: -19.000032424926758
    8. '(ii' → logprob: -19.625032424926758
    9. '	' → logprob: -20.875032424926758
    10. '[i' → logprob: -21.250032424926758

Token 1162: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.696889623621246e-06
    2. ' i' → logprob: -13.25000286102295
    3. '(i' → logprob: -14.25000286102295
    4. '   ' → logprob: -16.000001907348633
    5. '	i' → logprob: -16.125001907348633
    6. '{i' → logprob: -18.250001907348633
    7. ')i' → logprob: -18.875001907348633
    8. '_i' → logprob: -19.125001907348633
    9. ',i' → logprob: -19.625001907348633
    10. ''i' → logprob: -20.250001907348633

Token 1163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017196849221363664
    2. ',W' → logprob: -6.7517194747924805
    3. ',j' → logprob: -8.25171947479248
    4. ' ,' → logprob: -8.62671947479248
    5. 'W' → logprob: -10.37671947479248
    6. ',
' → logprob: -10.50171947479248
    7. '           ' → logprob: -11.25171947479248
    8. ',next' → logprob: -11.37671947479248
    9. '       ' → logprob: -12.37671947479248
    10. '                   ' → logprob: -12.50171947479248

Token 1164: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0005648265941999853
    2. 'j' → logprob: -7.500565052032471
    3. ' W' → logprob: -11.625564575195312
    4. '   ' → logprob: -12.875564575195312
    5. '       ' → logprob: -16.750564575195312
    6. 'w' → logprob: -16.875564575195312
    7. '(W' → logprob: -17.000564575195312
    8. '	W' → logprob: -17.125564575195312
    9. '    ' → logprob: -17.625564575195312
    10. '  ' → logprob: -17.750564575195312

Token 1165: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021173080895096064
    2. '+' → logprob: -6.877117156982422
    3. ')
' → logprob: -7.002117156982422
    4. '       ' → logprob: -10.252117156982422
    5. '           ' → logprob: -10.752117156982422
    6. '<|end|>' → logprob: -10.877117156982422
    7. ' +' → logprob: -11.002117156982422
    8. ')}' → logprob: -11.127117156982422
    9. ' )' → logprob: -11.502117156982422
    10. ']' → logprob: -11.502117156982422

Token 1166: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07142382115125656
    2. '<|end|>' → logprob: -2.6964237689971924
    3. '<|end|>' → logprob: -7.1964240074157715
    4. ')' → logprob: -8.946423530578613
    5. '                   ' → logprob: -8.946423530578613
    6. '```' → logprob: -9.571423530578613
    7. '			' → logprob: -9.571423530578613
    8. '       ' → logprob: -9.571423530578613
    9. '                       ' → logprob: -9.821423530578613
    10. '                               ' → logprob: -10.071423530578613

Token 1167: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.054221924394369125
    2. 'else' (adapté à ' else') → logprob: -3.1792218685150146
    3. ' else' → logprob: -4.554222106933594
    4. 'elif' → logprob: -8.554222106933594
    5. '			' → logprob: -9.054222106933594
    6. '                   ' → logprob: -9.179222106933594
    7. '           ' → logprob: -10.054222106933594
    8. ' elif' → logprob: -10.179222106933594
    9. '                       ' → logprob: -10.804222106933594
    10. '	else' → logprob: -11.054222106933594

Token 1168: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.033652156591415405
    2. ':' → logprob: -3.9086520671844482
    3. '               ' → logprob: -5.533652305603027
    4. '                       ' → logprob: -5.658652305603027
    5. ':
' → logprob: -6.283652305603027
    6. ' :' → logprob: -7.033652305603027
    7. '           ' → logprob: -7.408652305603027
    8. '<|end|>' → logprob: -7.783652305603027
    9. '                    ' → logprob: -7.908652305603027
    10. '                           ' → logprob: -8.658652305603027

Token 1169: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0047674765810370445
    2. '(' → logprob: -6.004767417907715
    3. '               ' → logprob: -7.004767417907715
    4. ' (' → logprob: -7.129767417907715
    5. '(i' → logprob: -8.129767417907715
    6. '                       ' → logprob: -9.129767417907715
    7. '   ' → logprob: -10.379767417907715
    8. '           ' → logprob: -10.629767417907715
    9. '                    ' → logprob: -10.754767417907715
    10. 'i' → logprob: -11.004767417907715

Token 1170: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3107267916202545
    2. ' (' → logprob: -2.4357268810272217
    3. '(' → logprob: -2.5607268810272217
    4. '#' (adapté à ' #') → logprob: -2.9357268810272217
    5. '(i' → logprob: -4.310726642608643
    6. ' #' → logprob: -4.560726642608643
    7. 'if' → logprob: -4.560726642608643
    8. '               ' → logprob: -5.435726642608643
    9. '                       ' → logprob: -5.935726642608643
    10. ' ' → logprob: -6.935726642608643

Token 1171: ' aller' (ID: 18383)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.4265456795692444
    2. 'i' → logprob: -1.4265456199645996
    3. 'next' → logprob: -2.5515456199645996
    4. 'if' → logprob: -4.3015456199646
    5. ' (' → logprob: -4.6765456199646
    6. '                   ' → logprob: -6.5515456199646
    7. ' i' → logprob: -6.6765456199646
    8. ' next' → logprob: -6.8015456199646
    9. '(next' → logprob: -6.8015456199646
    10. '               ' → logprob: -7.6765456199646

Token 1172: ' vers' (ID: 3640)
  Prédit: 'vers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vers' → logprob: -0.5876207947731018
    2. ' vers' → logprob: -0.8376207947731018
    3. '(i' → logprob: -4.587620735168457
    4. ' (' → logprob: -6.837620735168457
    5. '                   ' → logprob: -8.837620735168457
    6. 'down' → logprob: -9.462620735168457
    7. 'tow' → logprob: -9.837620735168457
    8. '               ' → logprob: -10.837620735168457
    9. 'à' → logprob: -11.462620735168457
    10. ' towards' → logprob: -11.587620735168457

Token 1173: ' Sud' (ID: 22501)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07898959517478943
    2. '(i' → logprob: -2.5789895057678223
    3. ' i' → logprob: -9.57898998260498
    4. ' (' → logprob: -11.20398998260498
    5. '   ' → logprob: -11.57898998260498
    6. '(' → logprob: -12.20398998260498
    7. '```' → logprob: -13.70398998260498
    8. '	i' → logprob: -14.95398998260498
    9. '(
' → logprob: -15.57898998260498
    10. '1' → logprob: -15.82898998260498

Token 1174: ' ->' (ID: 2747)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.28376510739326477
    2. ' (' → logprob: -1.5337650775909424
    3. '                   ' → logprob: -3.5337650775909424
    4. ' =' → logprob: -7.0337653160095215
    5. '(' → logprob: -7.6587653160095215
    6. ',' → logprob: -8.658764839172363
    7. '=' → logprob: -9.033764839172363
    8. '```' → logprob: -9.158764839172363
    9. '               ' → logprob: -9.533764839172363
    10. '                       ' → logprob: -9.908764839172363

Token 1175: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.013285406865179539
    2. ' (' → logprob: -4.3882856369018555
    3. 'i' → logprob: -7.2632856369018555
    4. '(' → logprob: -10.013285636901855
    5. ' i' → logprob: -11.013285636901855
    6. '   ' → logprob: -11.888285636901855
    7. '(min' → logprob: -13.138285636901855
    8. 'min' → logprob: -13.263285636901855
    9. '(
' → logprob: -14.013285636901855
    10. ' ' → logprob: -15.138285636901855

Token 1176: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -8.399378566537052e-05
    2. ' i' → logprob: -10.000083923339844
    3. '(i' → logprob: -10.750083923339844
    4. 'min' → logprob: -11.500083923339844
    5. '                   ' → logprob: -12.625083923339844
    6. '   ' → logprob: -13.250083923339844
    7. '               ' → logprob: -14.625083923339844
    8. '           ' → logprob: -14.875083923339844
    9. '
' → logprob: -15.125083923339844
    10. '```' → logprob: -15.750083923339844

Token 1177: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04473746940493584
    2. ' +' → logprob: -3.1697375774383545
    3. ',' → logprob: -6.419737339019775
    4. 'i' → logprob: -10.294737815856934
    5. '                   ' → logprob: -10.794737815856934
    6. ' ,' → logprob: -11.169737815856934
    7. '+,' → logprob: -11.169737815856934
    8. ' i' → logprob: -12.169737815856934
    9. '+i' → logprob: -12.294737815856934
    10. '1' → logprob: -12.419737815856934

Token 1178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.20734242349863e-05
    2. 'i' → logprob: -10.125072479248047
    3. ' ' → logprob: -10.500072479248047
    4. '   ' → logprob: -13.625072479248047
    5. '+' → logprob: -13.750072479248047
    6. '```' → logprob: -14.125072479248047
    7. 'j' → logprob: -14.500072479248047
    8. ',' → logprob: -14.750072479248047
    9. '                   ' → logprob: -15.375072479248047
    10. '
' → logprob: -16.000072479248047

Token 1179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001290236134082079
    2. ',j' → logprob: -6.876290321350098
    3. ' ,' → logprob: -8.501290321350098
    4. ',i' → logprob: -10.626290321350098
    5. '                   ' → logprob: -11.251290321350098
    6. ',
' → logprob: -11.501290321350098
    7. '```' → logprob: -13.501290321350098
    8. ')' → logprob: -13.751290321350098
    9. '[j' → logprob: -14.376290321350098
    10. 'j' → logprob: -14.626290321350098

Token 1180: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.011083780787885189
    2. ' j' → logprob: -4.511083602905273
    3. 'i' → logprob: -10.261083602905273
    4. ' i' → logprob: -14.511083602905273
    5. '   ' → logprob: -14.886083602905273
    6. '	j' → logprob: -16.261083602905273
    7. '```' → logprob: -17.261083602905273
    8. ' ' → logprob: -17.386083602905273
    9. ',' → logprob: -17.511083602905273
    10. ',j' → logprob: -18.136083602905273

Token 1181: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03577181324362755
    2. '                   ' → logprob: -4.28577184677124
    3. '+' → logprob: -4.53577184677124
    4. ')
' → logprob: -4.91077184677124
    5. ',' → logprob: -6.16077184677124
    6. '               ' → logprob: -7.91077184677124
    7. '```' → logprob: -9.035771369934082
    8. ' +' → logprob: -9.535771369934082
    9. '):
' → logprob: -9.535771369934082
    10. 'if' → logprob: -9.660771369934082

Token 1182: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.039438750594854355
    2. 'if' → logprob: -3.4144387245178223
    3. '               ' → logprob: -5.664438724517822
    4. '```' → logprob: -6.789438724517822
    5. '                       ' → logprob: -7.039438724517822
    6. ' if' → logprob: -8.16443920135498
    7. '           ' → logprob: -11.66443920135498
    8. '   ' → logprob: -12.91443920135498
    9. '
' → logprob: -13.41443920135498
    10. ',' → logprob: -13.78943920135498

Token 1183: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0014901040121912956
    2. '                   ' → logprob: -6.751490116119385
    3. ' if' → logprob: -8.126489639282227
    4. '               ' → logprob: -11.376489639282227
    5. '```' → logprob: -11.376489639282227
    6. '                       ' → logprob: -14.876489639282227
    7. '   ' → logprob: -15.251489639282227
    8. '	if' → logprob: -15.251489639282227
    9. 'elif' → logprob: -15.626489639282227
    10. '           ' → logprob: -15.751489639282227

Token 1184: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38690757751464844
    2. ' i' → logprob: -1.1369075775146484
    3. '   ' → logprob: -10.386907577514648
    4. '	i' → logprob: -13.386907577514648
    5. ' ' → logprob: -13.886907577514648
    6. '
' → logprob: -14.011907577514648
    7. '(i' → logprob: -14.011907577514648
    8. ' ' → logprob: -14.511907577514648
    9. ' (' → logprob: -15.261907577514648
    10. '  ' → logprob: -15.636907577514648

Token 1185: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0028254427015781403
    2. ' +' → logprob: -5.8778252601623535
    3. '+i' → logprob: -11.002825736999512
    4. '<' → logprob: -13.627825736999512
    5. '1' → logprob: -13.877825736999512
    6. 'i' → logprob: -14.627825736999512
    7. ' <' → logprob: -14.752825736999512
    8. '+
' → logprob: -15.752825736999512
    9. '＋' → logprob: -16.002824783325195
    10. '0' → logprob: -16.377824783325195

Token 1186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011427151912357658
    2. ' ' → logprob: -10.000114440917969
    3. 'i' → logprob: -10.250114440917969
    4. '+' → logprob: -10.875114440917969
    5. 'j' → logprob: -12.125114440917969
    6. '(i' → logprob: -12.750114440917969
    7. '   ' → logprob: -13.500114440917969
    8. '0' → logprob: -13.750114440917969
    9. '```' → logprob: -14.250114440917969
    10. '
' → logprob: -14.375114440917969

Token 1187: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.06288648396730423
    2. '<=' → logprob: -2.8128864765167236
    3. ' <' → logprob: -7.062886714935303
    4. '<' → logprob: -10.062886238098145
    5. ')<=' → logprob: -12.687886238098145
    6. '[i' → logprob: -13.062886238098145
    7. ' ' → logprob: -13.062886238098145
    8. ')' → logprob: -13.312886238098145
    9. '[' → logprob: -13.437886238098145
    10. '```' → logprob: -13.562886238098145

Token 1188: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00014001218369230628
    2. ' H' → logprob: -8.875140190124512
    3. '	H' → logprob: -16.875139236450195
    4. '   ' → logprob: -17.000139236450195
    5. '(H' → logprob: -18.375139236450195
    6. ' ' → logprob: -19.000139236450195
    7. '<H' → logprob: -20.000139236450195
    8. '  ' → logprob: -20.250139236450195
    9. '-H' → logprob: -20.250139236450195
    10. '#' → logprob: -20.500139236450195

Token 1189: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0009694644249975681
    2. ' -' → logprob: -7.000969409942627
    3. '1' → logprob: -9.875969886779785
    4. '[' → logprob: -12.750969886779785
    5. '           ' → logprob: -14.000969886779785
    6. ' ' → logprob: -14.000969886779785
    7. '                   ' → logprob: -14.125969886779785
    8. '               ' → logprob: -14.625969886779785
    9. '-H' → logprob: -15.625969886779785
    10. '       ' → logprob: -16.00096893310547

Token 1190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.500000953674316
    3. '-' → logprob: -15.000000953674316
    4. '   ' → logprob: -15.375000953674316
    5. '       ' → logprob: -18.125001907348633
    6. '#' → logprob: -18.875001907348633
    7. '```' → logprob: -18.875001907348633
    8. '           ' → logprob: -19.125001907348633
    9. '[' → logprob: -19.375001907348633
    10. '`' → logprob: -20.125001907348633

Token 1191: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -1.1308364868164062
    2. '[next' → logprob: -1.3808364868164062
    3. ' next' → logprob: -2.3808364868164062
    4. ':
' → logprob: -2.5058364868164062
    5. '(next' → logprob: -2.6308364868164062
    6. '                   ' → logprob: -2.8808364868164062
    7. ',' → logprob: -3.5058364868164062
    8. ':' → logprob: -3.5058364868164062
    9. '               ' → logprob: -3.7558364868164062
    10. 'next' → logprob: -3.8808364868164062

Token 1192: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.08035591244697571
    2. 'next' → logprob: -2.7053558826446533
    3. '(next' → logprob: -5.455356121063232
    4. ' next' → logprob: -5.580356121063232
    5. '                   ' → logprob: -6.205356121063232
    6. '[next' → logprob: -8.830355644226074
    7. '                           ' → logprob: -9.830355644226074
    8. '```' → logprob: -9.955355644226074
    9. '               ' → logprob: -10.955355644226074
    10. ',next' → logprob: -11.830355644226074

Token 1193: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.00410380819812417
    2. '(next' → logprob: -5.629103660583496
    3. ' next' → logprob: -7.754103660583496
    4. '(i' → logprob: -10.504103660583496
    5. '                       ' → logprob: -11.004103660583496
    6. '                   ' → logprob: -11.254103660583496
    7. '(' → logprob: -11.754103660583496
    8. ' (' → logprob: -12.879103660583496
    9. '	next' → logprob: -12.879103660583496
    10. '[next' → logprob: -13.879103660583496

Token 1194: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -7.584239938296378e-06
    2. 'pos' → logprob: -11.875007629394531
    3. 'Pos' → logprob: -15.125007629394531
    4. '```' → logprob: -16.12500762939453
    5. '[pos' → logprob: -17.12500762939453
    6. '
' → logprob: -17.25000762939453
    7. '[i' → logprob: -17.37500762939453
    8. '[' → logprob: -17.37500762939453
    9. '	pos' → logprob: -17.62500762939453
    10. '_' → logprob: -18.00000762939453

Token 1195: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1637164789135568e-05
    2. '[next' → logprob: -11.750011444091797
    3. ' [' → logprob: -13.750011444091797
    4. ' =' → logprob: -14.250011444091797
    5. '=i' → logprob: -14.750011444091797
    6. '][' → logprob: -14.750011444091797
    7. '[' → logprob: -15.250011444091797
    8. '=' → logprob: -15.500011444091797
    9. '[
' → logprob: -15.875011444091797
    10. 'i' → logprob: -15.875011444091797

Token 1196: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.14324894547462463
    2. '][' → logprob: -2.018249034881592
    3. '                   ' → logprob: -8.518248558044434
    4. 'i' → logprob: -9.393248558044434
    5. '[' → logprob: -9.893248558044434
    6. ']' → logprob: -10.268248558044434
    7. '+' → logprob: -10.268248558044434
    8. '[next' → logprob: -10.518248558044434
    9. '               ' → logprob: -10.768248558044434
    10. '                       ' → logprob: -11.143248558044434

Token 1197: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00023405285901390016
    2. 'i' → logprob: -8.62523365020752
    3. '[j' → logprob: -10.50023365020752
    4. ' j' → logprob: -11.37523365020752
    5. '   ' → logprob: -12.50023365020752
    6. '[i' → logprob: -13.00023365020752
    7. '(j' → logprob: -13.62523365020752
    8. '       ' → logprob: -13.62523365020752
    9. '           ' → logprob: -13.87523365020752
    10. '
' → logprob: -13.87523365020752

Token 1198: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.24893862009048462
    2. '=' → logprob: -1.8739385604858398
    3. ']=' → logprob: -3.12393856048584
    4. ' =' → logprob: -4.12393856048584
    5. ',' → logprob: -5.62393856048584
    6. '][' → logprob: -6.62393856048584
    7. '],' → logprob: -7.37393856048584
    8. ']=(' → logprob: -8.37393856048584
    9. ')' → logprob: -8.49893856048584
    10. '                           ' → logprob: -8.87393856048584

Token 1199: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012517892755568027
    2. ' =' → logprob: -4.387517929077148
    3. '=
' → logprob: -12.762517929077148
    4. '=(' → logprob: -13.012517929077148
    5. ']=' → logprob: -13.387517929077148
    6. ']' → logprob: -15.262517929077148
    7. ')' → logprob: -15.262517929077148
    8. '                           ' → logprob: -15.512517929077148
    9. ',' → logprob: -15.637517929077148
    10. '                       ' → logprob: -15.762517929077148

Token 1200: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0009117019944824278
    2. ' (' → logprob: -7.000911712646484
    3. '(' → logprob: -15.875911712646484
    4. '   ' → logprob: -17.375911712646484
    5. '(I' → logprob: -18.125911712646484
    6. ' ' → logprob: -18.750911712646484
    7. '(ii' → logprob: -20.000911712646484
    8. '((' → logprob: -20.250911712646484
    9. '(
' → logprob: -20.500911712646484
    10. '(next' → logprob: -20.500911712646484

Token 1201: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007224413566291332
    2. '(i' → logprob: -7.250722408294678
    3. ' i' → logprob: -11.625722885131836
    4. '   ' → logprob: -12.750722885131836
    5. ' (' → logprob: -14.500722885131836
    6. '
' → logprob: -17.500722885131836
    7. '	i' → logprob: -18.000722885131836
    8. '(' → logprob: -18.125722885131836
    9. '  ' → logprob: -18.125722885131836
    10. '       ' → logprob: -18.625722885131836

Token 1202: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005544631858356297
    2. ' +' → logprob: -7.50055456161499
    3. '+i' → logprob: -14.250554084777832
    4. '1' → logprob: -15.375554084777832
    5. '+
' → logprob: -15.375554084777832
    6. ',' → logprob: -16.00055503845215
    7. '   ' → logprob: -16.50055503845215
    8. 'i' → logprob: -17.00055503845215
    9. '＋' → logprob: -17.12555503845215
    10. '+,' → logprob: -17.25055503845215

Token 1203: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5941604690160602e-05
    2. '+' → logprob: -10.625025749206543
    3. ' ' → logprob: -14.750025749206543
    4. '
' → logprob: -15.500025749206543
    5. 'i' → logprob: -15.625025749206543
    6. '   ' → logprob: -15.625025749206543
    7. '```' → logprob: -15.625025749206543
    8. 'next' → logprob: -16.31252670288086
    9. 'def' → logprob: -17.50002670288086
    10. ' +' → logprob: -17.50002670288086

Token 1204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00118677644059062
    2. ',j' → logprob: -6.751186847686768
    3. ' ,' → logprob: -11.62618637084961
    4. ',
' → logprob: -12.75118637084961
    5. '[j' → logprob: -13.62618637084961
    6. ')' → logprob: -14.12618637084961
    7. '[' → logprob: -14.50118637084961
    8. '),' → logprob: -14.62618637084961
    9. ',next' → logprob: -14.75118637084961
    10. '<|end|>' → logprob: -14.87618637084961

Token 1205: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00861456897109747
    2. ' j' → logprob: -4.758614540100098
    3. '	j' → logprob: -17.008615493774414
    4. '   ' → logprob: -18.633615493774414
    5. ',j' → logprob: -20.383615493774414
    6. '_j' → logprob: -20.383615493774414
    7. ' ' → logprob: -20.633615493774414
    8. '$j' → logprob: -20.633615493774414
    9. '                   ' → logprob: -21.258615493774414
    10. '    ' → logprob: -22.008615493774414

Token 1206: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021895181853324175
    2. ')
' → logprob: -6.127189636230469
    3. '                   ' → logprob: -13.502189636230469
    4. '                       ' → logprob: -14.252189636230469
    5. ' )' → logprob: -14.502189636230469
    6. '<|end|>' → logprob: -14.877189636230469
    7. '               ' → logprob: -15.127189636230469
    8. '       ' → logprob: -15.627189636230469
    9. '                           ' → logprob: -15.752189636230469
    10. '))' → logprob: -16.00218963623047

Token 1207: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09250164031982422
    2. 'else' → logprob: -2.592501640319824
    3. '               ' → logprob: -4.342501640319824
    4. ' else' → logprob: -8.342501640319824
    5. '```' → logprob: -8.467501640319824
    6. '                       ' → logprob: -10.342501640319824
    7. '           ' → logprob: -10.717501640319824
    8. '                  ' → logprob: -12.592501640319824
    9. '<|end|>' → logprob: -13.717501640319824
    10. '   ' → logprob: -13.967501640319824

Token 1208: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.04312992841005325
    2. '               ' → logprob: -3.2931299209594727
    3. ' else' → logprob: -5.293129920959473
    4. '                   ' → logprob: -10.293129920959473
    5. '	else' → logprob: -12.293129920959473
    6. '```' → logprob: -12.418129920959473
    7. '           ' → logprob: -13.043129920959473
    8. ':
' → logprob: -13.668129920959473
    9. '   ' → logprob: -14.543129920959473
    10. '       ' → logprob: -14.668129920959473

Token 1209: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.15068823099136353
    2. '(next' → logprob: -2.5256881713867188
    3. '                   ' → logprob: -3.1506881713867188
    4. '(' → logprob: -5.275688171386719
    5. 'next' → logprob: -5.275688171386719
    6. ' next' → logprob: -5.775688171386719
    7. '                           ' → logprob: -6.650688171386719
    8. ' (' → logprob: -7.025688171386719
    9. '   ' → logprob: -7.775688171386719
    10. '               ' → logprob: -8.025688171386719

Token 1210: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.9532328844070435
    2. '(next' → logprob: -1.2032328844070435
    3. 'next' → logprob: -1.2032328844070435
    4. ' next' → logprob: -4.578232765197754
    5. '                   ' → logprob: -6.203232765197754
    6. '(' → logprob: -6.703232765197754
    7. '	next' → logprob: -8.828232765197754
    8. '[next' → logprob: -8.953232765197754
    9. '                           ' → logprob: -9.078232765197754
    10. ' (' → logprob: -9.828232765197754

Token 1211: ' #' (ID: 1069)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.06980770081281662
    2. '(next' → logprob: -3.194807767868042
    3. 'next' → logprob: -3.694807767868042
    4. '(' → logprob: -6.819807529449463
    5. '(H' → logprob: -8.569808006286621
    6. ' next' → logprob: -9.069808006286621
    7. '(I' → logprob: -9.444808006286621
    8. ' (' → logprob: -9.819808006286621
    9. '(W' → logprob: -10.694808006286621
    10. '(-' → logprob: -10.694808006286621

Token 1212: ' On' (ID: 2160)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -3.4121114822482923e-06
    2. '(next' → logprob: -13.000003814697266
    3. ' next' → logprob: -13.750003814697266
    4. '#' → logprob: -17.375003814697266
    5. '                       ' → logprob: -18.250003814697266
    6. '                   ' → logprob: -18.250003814697266
    7. '(' → logprob: -18.750003814697266
    8. '               ' → logprob: -19.250003814697266
    9. '	next' → logprob: -19.375003814697266
    10. '       ' → logprob: -20.125003814697266

Token 1213: ' est' (ID: 893)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.01801847480237484
    2. 'next' → logprob: -4.3930182456970215
    3. '_pos' → logprob: -5.2680182456970215
    4. '=' → logprob: -9.26801872253418
    5. 'set' → logprob: -9.89301872253418
    6. ' pos' → logprob: -10.39301872253418
    7. 'prev' → logprob: -10.39301872253418
    8. 'v' → logprob: -11.14301872253418
    9. '
' → logprob: -11.14301872253418
    10. '#' → logprob: -11.26801872253418

Token 1214: ' tout' (ID: 5501)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.12954208254814148
    2. 'à' → logprob: -2.129542112350464
    3. 'at' → logprob: -6.629541873931885
    4. ' à' → logprob: -7.254541873931885
    5. '=i' → logprob: -8.629542350769043
    6. '           ' → logprob: -8.879542350769043
    7. ' at' → logprob: -9.754542350769043
    8. 'À' → logprob: -10.379542350769043
    9. '                   ' → logprob: -10.504542350769043
    10. ''à' → logprob: -10.629542350769043

Token 1215: ' en' (ID: 469)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.2800038456916809
    2. ' à' → logprob: -1.5300037860870361
    3. ' at' → logprob: -4.905004024505615
    4. 'at' → logprob: -5.030004024505615
    5. '(i' → logprob: -6.155004024505615
    6. 'i' → logprob: -6.155004024505615
    7. 'au' → logprob: -6.155004024505615
    8. '```' → logprob: -6.405004024505615
    9. ',' → logprob: -6.780004024505615
    10. ''à' → logprob: -7.030004024505615

Token 1216: ' bas' (ID: 3222)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.00195384887047112
    2. ' bas' → logprob: -6.751954078674316
    3. 'bottom' → logprob: -8.001954078674316
    4. 'baseline' → logprob: -9.001954078674316
    5. 'bord' → logprob: -9.376954078674316
    6. 'b' → logprob: -9.376954078674316
    7. 'fin' → logprob: -9.876954078674316
    8. 'H' → logprob: -10.126954078674316
    9. '```' → logprob: -10.251954078674316
    10. '_bas' → logprob: -11.876954078674316

Token 1217: ' ->' (ID: 2747)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.1781516671180725
    2. '(' → logprob: -3.0531516075134277
    3. '                       ' → logprob: -3.4281516075134277
    4. '(next' → logprob: -3.5531516075134277
    5. ',' → logprob: -3.6781516075134277
    6. ' (' → logprob: -3.9281516075134277
    7. '           ' → logprob: -5.928151607513428
    8. '=' → logprob: -6.428151607513428
    9. '                   ' → logprob: -6.928151607513428
    10. 'next' → logprob: -7.053151607513428

Token 1218: ' même' (ID: 9679)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00182548095472157
    2. '(H' → logprob: -6.626825332641602
    3. ' (' → logprob: -8.126825332641602
    4. '(next' → logprob: -9.001825332641602
    5. 'next' → logprob: -9.876825332641602
    6. '(I' → logprob: -11.251825332641602
    7. '(' → logprob: -11.501825332641602
    8. '(W' → logprob: -12.876825332641602
    9. ' next' → logprob: -13.501825332641602
    10. '(j' → logprob: -13.876825332641602

Token 1219: ' rais' (ID: 8690)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0032585193403065205
    2. 'i' → logprob: -5.75325870513916
    3. ' (' → logprob: -10.25325870513916
    4. 'pos' → logprob: -11.12825870513916
    5. 'position' → logprob: -11.50325870513916
    6. 'ligne' → logprob: -11.75325870513916
    7. ' i' → logprob: -12.87825870513916
    8. '[i' → logprob: -13.12825870513916
    9. '   ' → logprob: -13.62825870513916
    10. 'rang' → logprob: -14.37825870513916

Token 1220: 'onnement' (ID: 52552)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.5589799284934998
    2. 'son' → logprob: -0.9339799284934998
    3. 'ons' → logprob: -3.4339799880981445
    4. 'onnement' → logprob: -6.6839799880981445
    5. 'zon' → logprob: -8.308979988098145
    6. 'sons' → logprob: -8.433979988098145
    7. 'ont' → logprob: -8.683979988098145
    8. '#' → logprob: -8.683979988098145
    9. 'ison' → logprob: -8.933979988098145
    10. 'e' → logprob: -9.058979988098145

Token 1221: ' que' (ID: 661)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.6328814029693604
    2. '(next' → logprob: -0.8828814029693604
    3. ' next' → logprob: -3.1328814029693604
    4. '                       ' → logprob: -4.507881164550781
    5. '[next' → logprob: -8.257881164550781
    6. ' (' → logprob: -8.882881164550781
    7. '           ' → logprob: -9.507881164550781
    8. '                   ' → logprob: -9.632881164550781
    9. ',next' → logprob: -10.007881164550781
    10. '               ' → logprob: -10.007881164550781

Token 1222: ' ci' (ID: 7405)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00197395752184093
    2. '(j' → logprob: -6.876974105834961
    3. 'i' → logprob: -7.751974105834961
    4. 'j' → logprob: -7.751974105834961
    5. ' (' → logprob: -10.501974105834961
    6. 'for' → logprob: -11.126974105834961
    7. '(' → logprob: -11.251974105834961
    8. 'l' → logprob: -11.626974105834961
    9. 'next' → logprob: -12.001974105834961
    10. '[i' → logprob: -13.626974105834961

Token 1223: '-dessus' (ID: 74812)
  Prédit: '-dessous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-dessous' → logprob: -1.0964608192443848
    2. '-dessus' → logprob: -1.5964608192443848
    3. 'j' → logprob: -1.7214608192443848
    4. '-j' → logprob: -2.2214608192443848
    5. '(j' → logprob: -2.5964608192443848
    6. 'dess' → logprob: -3.5964608192443848
    7. '           ' → logprob: -3.9714608192443848
    8. '+' → logprob: -4.596460819244385
    9. '[j' → logprob: -5.221460819244385
    10. '               ' → logprob: -5.221460819244385

Token 1224: '
' (ID: 198)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.16920766234397888
    2. '                       ' → logprob: -2.5442075729370117
    3. ' next' → logprob: -2.7942075729370117
    4. '(next' → logprob: -4.169207572937012
    5. ',next' → logprob: -9.044207572937012
    6. '                           ' → logprob: -9.419207572937012
    7. '[next' → logprob: -9.419207572937012
    8. '               ' → logprob: -9.919207572937012
    9. '                   ' → logprob: -9.919207572937012
    10. '           ' → logprob: -10.169207572937012

Token 1225: '                       ' (ID: 968)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.3683333396911621
    2. '                       ' → logprob: -1.368333339691162
    3. 'next' → logprob: -2.993333339691162
    4. '(' → logprob: -5.993333339691162
    5. ' next' → logprob: -7.868333339691162
    6. '(i' → logprob: -8.49333381652832
    7. '                           ' → logprob: -9.36833381652832
    8. '                   ' → logprob: -9.49333381652832
    9. ' (' → logprob: -9.61833381652832
    10. '               ' → logprob: -9.99333381652832

Token 1226: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.07336094230413437
    2. '(next' → logprob: -2.8233609199523926
    3. '(' → logprob: -5.073360919952393
    4. ' next' → logprob: -6.198360919952393
    5. '(i' → logprob: -6.573360919952393
    6. '                       ' → logprob: -7.198360919952393
    7. '(H' → logprob: -8.32336139678955
    8. '                   ' → logprob: -8.57336139678955
    9. '(W' → logprob: -8.57336139678955
    10. ' (' → logprob: -9.44836139678955

Token 1227: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -2.696889623621246e-06
    2. 'pos' → logprob: -12.87500286102295
    3. 'Pos' → logprob: -16.875001907348633
    4. '
' → logprob: -21.125001907348633
    5. '```' → logprob: -21.125001907348633
    6. '	pos' → logprob: -21.250001907348633
    7. 'else' → logprob: -21.375001907348633
    8. '_' → logprob: -22.500001907348633
    9. '   ' → logprob: -22.750001907348633
    10. '#' → logprob: -22.750001907348633

Token 1228: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7432603272027336e-06
    2. ' [' → logprob: -14.000001907348633
    3. '[' → logprob: -15.000001907348633
    4. 'i' → logprob: -15.750001907348633
    5. '=' → logprob: -16.125001907348633
    6. '[
' → logprob: -16.125001907348633
    7. '
' → logprob: -17.125001907348633
    8. '[next' → logprob: -17.500001907348633
    9. '   ' → logprob: -17.750001907348633
    10. ' =' → logprob: -18.000001907348633

Token 1229: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.020752668380737305
    2. '[i' → logprob: -3.8957526683807373
    3. '[j' → logprob: -9.770752906799316
    4. '[' → logprob: -10.020752906799316
    5. ')[' → logprob: -10.270752906799316
    6. ']' → logprob: -10.520752906799316
    7. '[next' → logprob: -11.895752906799316
    8. '+' → logprob: -12.145752906799316
    9. ']][' → logprob: -12.770752906799316
    10. ',' → logprob: -12.770752906799316

Token 1230: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.22627468407154083
    2. 'i' → logprob: -1.6012747287750244
    3. 'H' → logprob: -7.226274490356445
    4. '[i' → logprob: -9.976274490356445
    5. '[j' → logprob: -10.851274490356445
    6. '[' → logprob: -11.351274490356445
    7. '(H' → logprob: -11.726274490356445
    8. '(i' → logprob: -11.851274490356445
    9. '   ' → logprob: -12.226274490356445
    10. ' i' → logprob: -12.226274490356445

Token 1231: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0070092324167490005
    2. ' =' → logprob: -5.007009029388428
    3. ']' → logprob: -8.632009506225586
    4. ']=' → logprob: -9.132009506225586
    5. ')' → logprob: -12.507009506225586
    6. '=(' → logprob: -13.382009506225586
    7. ']=(' → logprob: -14.257009506225586
    8. ')=' → logprob: -14.507009506225586
    9. '=
' → logprob: -15.132009506225586
    10. '=j' → logprob: -15.632009506225586

Token 1232: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0028073713183403015
    2. ' =' → logprob: -5.877807140350342
    3. '=(' → logprob: -13.2528076171875
    4. '=
' → logprob: -14.7528076171875
    5. ')' → logprob: -16.1278076171875
    6. '=i' → logprob: -16.1278076171875
    7. ')=' → logprob: -17.7528076171875
    8. ' =(' → logprob: -17.8778076171875
    9. ']=' → logprob: -18.0028076171875
    10. '=(-' → logprob: -18.3778076171875

Token 1233: ' (' (ID: 350)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -5.796184723294573e-06
    2. ' (' → logprob: -12.375005722045898
    3. '(' → logprob: -13.875005722045898
    4. '   ' → logprob: -15.625005722045898
    5. '(i' → logprob: -15.750005722045898
    6. '((' → logprob: -15.875005722045898
    7. '(I' → logprob: -16.7500057220459
    8. '(W' → logprob: -17.2500057220459
    9. '(
' → logprob: -17.8750057220459
    10. 'H' → logprob: -18.0000057220459

Token 1234: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.004083385691046715
    2. '(H' → logprob: -5.504083156585693
    3. ' H' → logprob: -12.379083633422852
    4. '   ' → logprob: -15.379083633422852
    5. '(' → logprob: -15.504083633422852
    6. ' (' → logprob: -15.629083633422852
    7. '	H' → logprob: -16.25408363342285
    8. ')' → logprob: -17.62908363342285
    9. '_H' → logprob: -17.62908363342285
    10. ',H' → logprob: -17.75408363342285

Token 1235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001405232702381909
    2. ',j' → logprob: -6.626405239105225
    3. ',i' → logprob: -11.001404762268066
    4. ' ,' → logprob: -11.126404762268066
    5. '   ' → logprob: -11.501404762268066
    6. ',
' → logprob: -11.626404762268066
    7. '-' → logprob: -12.001404762268066
    8. ')' → logprob: -12.001404762268066
    9. '[j' → logprob: -13.001404762268066
    10. '[i' → logprob: -13.126404762268066

Token 1236: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.600714161526412e-05
    2. ' j' → logprob: -9.500076293945312
    3. '   ' → logprob: -14.125076293945312
    4. '	j' → logprob: -15.375076293945312
    5. '(j' → logprob: -16.875076293945312
    6. '_j' → logprob: -17.250076293945312
    7. '       ' → logprob: -17.375076293945312
    8. ',j' → logprob: -17.375076293945312
    9. '$j' → logprob: -18.125076293945312
    10. '           ' → logprob: -18.125076293945312

Token 1237: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.5120287066092715e-05
    2. ')
' → logprob: -10.750035285949707
    3. '<|end|>' → logprob: -12.000035285949707
    4. ' )' → logprob: -12.625035285949707
    5. '       ' → logprob: -13.250035285949707
    6. ')return' → logprob: -13.875035285949707
    7. ')}' → logprob: -15.125035285949707
    8. '               ' → logprob: -15.500035285949707
    9. '))' → logprob: -15.875035285949707
    10. '           ' → logprob: -16.25003433227539

Token 1238: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1239: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2631206512451172
    2. '#' (adapté à ' #') → logprob: -1.7631206512451172
    3. 'dp' → logprob: -3.513120651245117
    4. 'next' → logprob: -4.763120651245117
    5. ')' → logprob: -5.638120651245117
    6. 'import' → logprob: -6.138120651245117
    7. '        
' → logprob: -6.263120651245117
    8. 'max' → logprob: -6.388120651245117
    9. 'def' → logprob: -6.388120651245117
    10. '.' → logprob: -6.638120651245117

Token 1240: ' Maintenant' (ID: 163349)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8778249025344849
    2. 'max' → logprob: -1.5028249025344849
    3. '#' → logprob: -1.7528249025344849
    4. '       ' → logprob: -2.2528247833251953
    5. 'from' → logprob: -3.7528247833251953
    6. 'import' → logprob: -4.377824783325195
    7. 'pow' → logprob: -4.752824783325195
    8. 'k' → logprob: -5.002824783325195
    9. 'log' → logprob: -5.127824783325195
    10. 'K' → logprob: -5.377824783325195

Token 1241: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4064979553222656
    2. '#' → logprob: -1.5314979553222656
    3. ',' → logprob: -3.1564979553222656
    4. '        
' → logprob: -4.406497955322266
    5. 'def' → logprob: -4.656497955322266
    6. 'import' → logprob: -5.031497955322266
    7. '
' → logprob: -5.031497955322266
    8. ')' → logprob: -5.281497955322266
    9. ']' → logprob: -5.281497955322266
    10. '<|end|>' → logprob: -5.406497955322266

Token 1242: ' construit' (ID: 119882)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.15140317380428314
    2. 'continue' → logprob: -2.2764031887054443
    3. '       ' → logprob: -4.401402950286865
    4. ' continue' → logprob: -4.651402950286865
    5. ' #' → logprob: -5.276402950286865
    6. 'def' → logprob: -5.526402950286865
    7. 'import' → logprob: -6.151402950286865
    8. 'contin' → logprob: -7.401402950286865
    9. 'vais' → logprob: -7.526402950286865
    10. ' vais' → logprob: -8.026403427124023

Token 1243: ' la' (ID: 557)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3880521059036255
    2. 'max' → logprob: -1.3880521059036255
    3. 'log' → logprob: -4.013051986694336
    4. '#' → logprob: -4.638051986694336
    5. 'next' → logprob: -4.888051986694336
    6. ' dp' → logprob: -5.138051986694336
    7. 'K' → logprob: -5.888051986694336
    8. ' max' → logprob: -5.888051986694336
    9. 'MAX' → logprob: -6.263051986694336
    10. 'up' → logprob: -6.263051986694336

Token 1244: ' table' (ID: 3293)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.47510582208633423
    2. 'max' → logprob: -2.1001057624816895
    3. 'next' → logprob: -2.1001057624816895
    4. '#' → logprob: -2.9751057624816895
    5. 'table' → logprob: -4.2251057624816895
    6. 'def' → logprob: -4.6001057624816895
    7. 'pos' → logprob: -4.7251057624816895
    8. 'transition' → logprob: -4.9751057624816895
    9. 'trans' → logprob: -5.2251057624816895
    10. 'log' → logprob: -5.4751057624816895

Token 1245: ' de' (ID: 334)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.25455546379089355
    2. '       ' → logprob: -1.8795554637908936
    3. 'dp' → logprob: -4.254555702209473
    4. ' max' → logprob: -4.379555702209473
    5. 'MAX' → logprob: -4.879555702209473
    6. ' =' → logprob: -5.004555702209473
    7. 'size' → logprob: -5.004555702209473
    8. 'K' → logprob: -5.504555702209473
    9. '=' → logprob: -5.879555702209473
    10. 'log' → logprob: -6.379555702209473

Token 1246: ' saut' (ID: 111480)
  Prédit: 'transition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'transition' → logprob: -0.11369547992944717
    2. ' transition' → logprob: -3.2386953830718994
    3. 'dou' → logprob: -3.6136953830718994
    4. 'trans' → logprob: -3.7386953830718994
    5. 'next' → logprob: -4.4886956214904785
    6. 'double' → logprob: -6.2386956214904785
    7. ' doubl' → logprob: -6.3636956214904785
    8. ' next' → logprob: -7.3636956214904785
    9. ' transitions' → logprob: -7.8636956214904785
    10. 'dbl' → logprob: -8.11369514465332

Token 1247: ' b' (ID: 287)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3468222916126251
    2. 'max' → logprob: -1.7218222618103027
    3. ' max' → logprob: -3.4718222618103027
    4. ',' → logprob: -3.8468222618103027
    5. ' =' → logprob: -3.9718222618103027
    6. '
' → logprob: -4.846822261810303
    7. '        
' → logprob: -4.846822261810303
    8. '=' → logprob: -5.971822261810303
    9. '#' → logprob: -6.096822261810303
    10. ':' → logprob: -6.346822261810303

Token 1248: 'inaire' (ID: 41465)
  Prédit: 'lock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lock' → logprob: -1.1543755531311035
    2. 'locks' → logprob: -1.4043755531311035
    3. 'inary' → logprob: -1.6543755531311035
    4. 'y' → logprob: -1.9043755531311035
    5. 'l' → logprob: -3.6543755531311035
    6. '=' → logprob: -3.9043755531311035
    7. ' =' → logprob: -4.1543755531311035
    8. 'ase' → logprob: -4.4043755531311035
    9. 'in' → logprob: -5.1543755531311035
    10. 'ack' → logprob: -5.7793755531311035

Token 1249: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016838706796988845
    2. 'dp' → logprob: -7.251683712005615
    3. 'max' → logprob: -7.376683712005615
    4. '        
' → logprob: -8.626684188842773
    5. 'next' → logprob: -10.876684188842773
    6. ',' → logprob: -11.126684188842773
    7. 'K' → logprob: -11.251684188842773
    8. 'jump' → logprob: -11.251684188842773
    9. 'log' → logprob: -11.501684188842773
    10. ' max' → logprob: -11.501684188842773

Token 1250: 'binary' (ID: 57009)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.16248056292533875
    2. 'log' → logprob: -3.037480592727661
    3. 'MAX' → logprob: -3.287480592727661
    4. ')' → logprob: -3.787480592727661
    5. 'LOG' → logprob: -4.412480354309082
    6. ']' → logprob: -5.037480354309082
    7. 'K' → logprob: -5.662480354309082
    8. 'next' → logprob: -5.787480354309082
    9. '#' → logprob: -5.912480354309082
    10. 'dp' → logprob: -6.162480354309082

Token 1251: ' lifting' (ID: 51094)
  Prédit: '_l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.07306225597858429
    2. '_' → logprob: -2.6980621814727783
    3. ')' → logprob: -6.823062419891357
    4. '_jump' → logprob: -7.323062419891357
    5. '_next' → logprob: -8.1980619430542
    6. '_s' → logprob: -8.6980619430542
    7. ')_' → logprob: -8.8230619430542
    8. '_j' → logprob: -8.9480619430542
    9. ' _' → logprob: -9.1980619430542
    10. 'lifting' → logprob: -9.5730619430542

Token 1252: ').
' (ID: 6294)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0535780191421509
    2. '       ' → logprob: -1.1785780191421509
    3. ')' → logprob: -1.4285780191421509
    4. '   ' → logprob: -3.9285778999328613
    5. ':' → logprob: -4.178577899932861
    6. '):' → logprob: -4.303577899932861
    7. ')
' → logprob: -4.428577899932861
    8. ']' → logprob: -4.428577899932861
    9. '):
' → logprob: -4.553577899932861
    10. ' ,' → logprob: -6.053577899932861

Token 1253: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05350779369473457
    2. 'dp' → logprob: -3.3035078048706055
    3. 'max' → logprob: -4.4285078048706055
    4. '        
' → logprob: -7.3035078048706055
    5. 'K' → logprob: -7.6785078048706055
    6. 'log' → logprob: -8.053507804870605
    7. 'LOG' → logprob: -8.428507804870605
    8. 'k' → logprob: -8.553507804870605
    9. 'jump' → logprob: -8.678507804870605
    10. '
' → logprob: -8.803507804870605

Token 1254: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45388102531433105
    2. 'max' → logprob: -1.078881025314331
    3. 'dp' → logprob: -4.82888126373291
    4. 'LOG' → logprob: -4.95388126373291
    5. 'MAX' → logprob: -5.20388126373291
    6. 'K' → logprob: -6.57888126373291
    7. 'log' → logprob: -6.82888126373291
    8. 'jump' → logprob: -7.07888126373291
    9. 'import' → logprob: -8.45388126373291
    10. '#' (adapté à ' #') → logprob: -8.57888126373291

Token 1255: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.15473459661006927
    2. '       ' → logprob: -2.4047346115112305
    3. 'MAX' → logprob: -3.5297346115112305
    4. 'LOG' → logprob: -4.4047346115112305
    5. 'K' → logprob: -5.2797346115112305
    6. 'dp' → logprob: -5.5297346115112305
    7. '#' → logprob: -7.4047346115112305
    8. 'log' → logprob: -7.4047346115112305
    9. 'jump' → logprob: -7.5297346115112305
    10. 'L' → logprob: -8.40473461151123

Token 1256: '_power' (ID: 51623)
  Prédit: '_pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pow' → logprob: -0.23324619233608246
    2. '_power' → logprob: -1.7332462072372437
    3. '_log' → logprob: -3.733246088027954
    4. '_k' → logprob: -5.608246326446533
    5. 'pow' → logprob: -5.858246326446533
    6. '_exp' → logprob: -8.733245849609375
    7. 'K' → logprob: -8.858245849609375
    8. '_level' → logprob: -9.233245849609375
    9. '_jump' → logprob: -9.358245849609375
    10. '_bit' → logprob: -9.358245849609375

Token 1257: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020543988794088364
    2. '=' → logprob: -3.8955440521240234
    3. '_' → logprob: -14.770544052124023
    4. '=max' → logprob: -15.270544052124023
    5. '=int' → logprob: -15.395544052124023
    6. ' =
' → logprob: -15.520544052124023
    7. '_power' → logprob: -15.770544052124023
    8. '_pow' → logprob: -16.020544052124023
    9. '_=' → logprob: -16.145544052124023
    10. 's' → logprob: -16.270544052124023

Token 1258: ' max' (ID: 2999)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.45797497034072876
    2. '60' → logprob: -1.082974910736084
    3. '61' → logprob: -3.957974910736084
    4. '64' → logprob: -5.707974910736084
    5. 'max' → logprob: -6.957974910736084
    6. '1' → logprob: -6.957974910736084
    7. '62' → logprob: -6.957974910736084
    8. '40' → logprob: -7.082974910736084
    9. '0' → logprob: -7.332974910736084
    10. '31' → logprob: -7.457974910736084

Token 1259: ' puissance' (ID: 63494)
  Prédit: '_power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_power' → logprob: -0.20547087490558624
    2. '_pow' → logprob: -1.7054709196090698
    3. 'pow' → logprob: -5.705471038818359
    4. '_log' → logprob: -7.955471038818359
    5. 'power' → logprob: -9.20547103881836
    6. '_p' → logprob: -9.20547103881836
    7. 'Pow' → logprob: -10.20547103881836
    8. 'N' → logprob: -10.33047103881836
    9. '_ex' → logprob: -10.83047103881836
    10. '_N' → logprob: -10.95547103881836

Token 1260: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1636408567428589
    2. '=' → logprob: -2.2886409759521484
    3. '2' → logprob: -3.1636409759521484
    4. '_' → logprob: -5.663640975952148
    5. '_of' → logprob: -6.663640975952148
    6. 'de' → logprob: -7.038640975952148
    7. 'of' → logprob: -7.663640975952148
    8. '_pow' → logprob: -8.288640975952148
    9. '_de' → logprob: -8.913640975952148
    10. ' ' → logprob: -9.038640975952148

Token 1261: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01442885771393776
    2. ' ' → logprob: -4.264429092407227
    3. '   ' → logprob: -10.389429092407227
    4. '1' → logprob: -10.389429092407227
    5. 't' → logprob: -10.514429092407227
    6. '  ' → logprob: -10.514429092407227
    7. ' two' → logprob: -10.889429092407227
    8. '=' → logprob: -11.139429092407227
    9. 'while' → logprob: -11.264429092407227
    10. 'N' → logprob: -11.389429092407227

Token 1262: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0018931758822873235
    2. ' ' → logprob: -7.001893043518066
    3. 'N' → logprob: -7.501893043518066
    4. '1' → logprob: -8.001893043518066
    5. '10' → logprob: -11.126893043518066
    6. 'import' → logprob: -11.126893043518066
    7. '0' → logprob: -11.501893043518066
    8. '(' → logprob: -11.876893043518066
    9. '
' → logprob: -12.001893043518066
    10. '   ' → logprob: -12.251893043518066

Token 1263: ' <=' (ID: 5017)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03379599750041962
    2. ' =' → logprob: -3.4087960720062256
    3. '=max' → logprob: -10.533796310424805
    4. '_pow' → logprob: -10.783796310424805
    5. '_power' → logprob: -10.783796310424805
    6. '   ' → logprob: -11.033796310424805
    7. '_possible' → logprob: -11.283796310424805
    8. '_' → logprob: -11.658796310424805
    9. '_=' → logprob: -11.908796310424805
    10. '_to' → logprob: -12.908796310424805

Token 1264: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.8624639324116288e-06
    2. ' N' → logprob: -13.625001907348633
    3. '10' → logprob: -14.500001907348633
    4. '   ' → logprob: -16.625001907348633
    5. 'max' → logprob: -17.750001907348633
    6. '100' → logprob: -18.125001907348633
    7. '	N' → logprob: -18.500001907348633
    8. '       ' → logprob: -18.875001907348633
    9. ' ' → logprob: -19.500001907348633
    10. 'n' → logprob: -19.625001907348633

Token 1265: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31955158710479736
    2. ' =' → logprob: -1.9445515871047974
    3. '       ' → logprob: -2.819551467895508
    4. 'max' → logprob: -3.069551467895508
    5. '
' → logprob: -3.944551467895508
    6. '0' → logprob: -6.819551467895508
    7. '   ' → logprob: -7.194551467895508
    8. '=
' → logprob: -7.319551467895508
    9. '=max' → logprob: -7.444551467895508
    10. ' max' → logprob: -8.194551467895508

Token 1266: '       ' (ID: 309)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3888501226902008
    2. '       ' → logprob: -1.7638500928878784
    3. ' max' → logprob: -2.013850212097168
    4. '
' → logprob: -4.638850212097168
    5. '0' → logprob: -6.763850212097168
    6. '```' → logprob: -6.763850212097168
    7. '1' → logprob: -7.138850212097168
    8. '(max' → logprob: -7.513850212097168
    9. 'pow' → logprob: -7.763850212097168
    10. '   ' → logprob: -7.888850212097168

Token 1267: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.30589231848716736
    2. '       ' → logprob: -1.4308923482894897
    3. ' max' → logprob: -3.8058922290802
    4. '
' → logprob: -7.680892467498779
    5. 'import' → logprob: -8.055891990661621
    6. '   ' → logprob: -8.180891990661621
    7. '20' → logprob: -8.430891990661621
    8. '(max' → logprob: -9.180891990661621
    9. '10' → logprob: -9.305891990661621
    10. '0' → logprob: -9.680891990661621

Token 1268: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -0.001566045917570591
    2. '_pow' → logprob: -6.501565933227539
    3. '_p' → logprob: -10.501565933227539
    4. 'pow' → logprob: -11.001565933227539
    5. '_' → logprob: -11.501565933227539
    6. 'power' → logprob: -12.376565933227539
    7. '_POWER' → logprob: -13.626565933227539
    8. '=' → logprob: -14.126565933227539
    9. '_N' → logprob: -14.251565933227539
    10. '_val' → logprob: -14.626565933227539

Token 1269: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007609586231410503
    2. '=' → logprob: -4.8826093673706055
    3. ' ' → logprob: -13.382609367370605
    4. '=int' → logprob: -14.257609367370605
    5. ',' → logprob: -15.257609367370605
    6. '_' → logprob: -15.632609367370605
    7. ' =[' → logprob: -15.632609367370605
    8. ' ' → logprob: -15.882609367370605
    9. ' =(' → logprob: -16.382610321044922
    10. '	' → logprob: -16.382610321044922

Token 1270: ' ' (ID: 220)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0009203928639180958
    2. '1' → logprob: -7.000920295715332
    3. '31' → logprob: -12.750920295715332
    4. '64' → logprob: -13.250920295715332
    5. '60' → logprob: -13.875920295715332
    6. '32' → logprob: -14.125920295715332
    7. '0' → logprob: -14.250920295715332
    8. 'max' → logprob: -14.500920295715332
    9. ' N' → logprob: -14.625920295715332
    10. '30' → logprob: -15.250920295715332

Token 1271: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00527478801086545
    2. '1' → logprob: -5.255274772644043
    3. '(' → logprob: -11.755274772644043
    4. '0' → logprob: -11.755274772644043
    5. '31' → logprob: -11.880274772644043
    6. '64' → logprob: -12.255274772644043
    7. '(N' → logprob: -12.630274772644043
    8. '60' → logprob: -12.755274772644043
    9. 'max' → logprob: -12.755274772644043
    10. ' N' → logprob: -13.505274772644043

Token 1272: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2142338901758194
    2. ' while' → logprob: -1.9642338752746582
    3. '
' → logprob: -3.964233875274658
    4. '<<' → logprob: -4.214233875274658
    5. ' <<=' → logprob: -4.589233875274658
    6. '	while' → logprob: -5.339233875274658
    7. '<|end|>' → logprob: -5.964233875274658
    8. ' 
' → logprob: -8.964234352111816
    9. ' <<' → logprob: -8.964234352111816
    10. ',' → logprob: -9.089234352111816

Token 1273: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8799211978912354
    2. '<<' → logprob: -1.7549211978912354
    3. ' <<=' → logprob: -2.1299211978912354
    4. '
' → logprob: -2.1299211978912354
    5. ' while' → logprob: -2.2549211978912354
    6. ' 
' → logprob: -3.0049211978912354
    7. ' <<' → logprob: -4.504920959472656
    8. '	while' → logprob: -6.629920959472656
    9. '1' → logprob: -7.254920959472656
    10. '       ' → logprob: -7.379920959472656

Token 1274: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.00782155990600586
    2. ' while' → logprob: -5.007821559906006
    3. '       ' → logprob: -7.257821559906006
    4. '
' → logprob: -8.132822036743164
    5. '	while' → logprob: -9.257822036743164
    6. '<<' → logprob: -12.257822036743164
    7. 'While' → logprob: -13.132822036743164
    8. '	' → logprob: -13.632822036743164
    9. '        
' → logprob: -13.882822036743164
    10. ' 
' → logprob: -14.632822036743164

Token 1275: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0011705794604495168
    2. ' max' → logprob: -6.751170635223389
    3. '(max' → logprob: -15.00117015838623
    4. '	max' → logprob: -19.876171112060547
    5. '   ' → logprob: -20.376171112060547
    6. '_max' → logprob: -20.751171112060547
    7. '[max' → logprob: -22.126171112060547
    8. '2' → logprob: -23.501171112060547
    9. ' ' → logprob: -23.751171112060547
    10. ',max' → logprob: -23.751171112060547

Token 1276: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -0.0006573928403668106
    2. 'pow' → logprob: -8.500657081604004
    3. '_pow' → logprob: -9.000657081604004
    4. '<=' → logprob: -9.250657081604004
    5. 'power' → logprob: -10.000657081604004
    6. '<N' → logprob: -10.250657081604004
    7. ' <=' → logprob: -10.500657081604004
    8. '_pos' → logprob: -10.500657081604004
    9. '<<' → logprob: -10.875657081604004
    10. '<' → logprob: -10.875657081604004

Token 1277: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.049878232181072235
    2. ' <=' → logprob: -3.0498781204223633
    3. '<<' → logprob: -6.924878120422363
    4. ' <<=' → logprob: -8.299878120422363
    5. '<' → logprob: -9.799878120422363
    6. '*' → logprob: -13.174878120422363
    7. ' <<' → logprob: -15.424878120422363
    8. ' <' → logprob: -15.549878120422363
    9. '   ' → logprob: -15.674878120422363
    10. ')<=' → logprob: -15.799878120422363

Token 1278: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.8624639324116288e-06
    2. '10' → logprob: -13.500001907348633
    3. ' N' → logprob: -15.125001907348633
    4. '100' → logprob: -17.375001907348633
    5. '   ' → logprob: -17.875001907348633
    6. 'max' → logprob: -18.625001907348633
    7. '	N' → logprob: -19.750001907348633
    8. ' ' → logprob: -20.500001907348633
    9. 'Ｎ' → logprob: -21.750001907348633
    10. 'sys' → logprob: -22.000001907348633

Token 1279: ':
' (ID: 734)
  Prédit: ' <<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <<=' → logprob: -0.016897398978471756
    2. '<<' → logprob: -4.641897201538086
    3. ' <<' → logprob: -5.516897201538086
    4. ' max' → logprob: -6.641897201538086
    5. 'max' → logprob: -7.391897201538086
    6. '   ' → logprob: -7.766897201538086
    7. ' *' → logprob: -8.516897201538086
    8. ' *=' → logprob: -9.016897201538086
    9. '*' → logprob: -9.391897201538086
    10. ' ' → logprob: -9.516897201538086

Token 1280: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6330345273017883
    2. 'max' → logprob: -1.0080344676971436
    3. ' max' → logprob: -2.8830344676971436
    4. '   ' → logprob: -3.1330344676971436
    5. '	max' → logprob: -6.633034706115723
    6. '	       ' → logprob: -7.008034706115723
    7. '[max' → logprob: -7.383034706115723
    8. '       ' → logprob: -7.508034706115723
    9. '	   ' → logprob: -7.883034706115723
    10. '(max' → logprob: -8.258034706115723

Token 1281: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.0032206105533987284
    2. ' max' → logprob: -5.753220558166504
    3. '   ' → logprob: -10.503220558166504
    4. '           ' → logprob: -11.253220558166504
    5. '	max' → logprob: -13.128220558166504
    6. '[max' → logprob: -16.37822151184082
    7. '               ' → logprob: -16.37822151184082
    8. ',max' → logprob: -16.62822151184082
    9. '(max' → logprob: -16.75322151184082
    10. ':max' → logprob: -16.75322151184082

Token 1282: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -2.339278580620885e-06
    2. '_' → logprob: -14.250001907348633
    3. '_pow' → logprob: -14.500001907348633
    4. '_p' → logprob: -14.875001907348633
    5. 'power' → logprob: -15.375001907348633
    6. '_POWER' → logprob: -15.750001907348633
    7. '   ' → logprob: -16.625001907348633
    8. '_max' → logprob: -16.750001907348633
    9. '```' → logprob: -17.250001907348633
    10. '\' → logprob: -17.500001907348633

Token 1283: ' <<=' (ID: 134025)
  Prédit: ' <<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<=' → logprob: -0.2550184726715088
    2. '<<' → logprob: -1.5050184726715088
    3. '*=' → logprob: -5.88001823425293
    4. ' *=' → logprob: -8.75501823425293
    5. '<' → logprob: -9.25501823425293
    6. '=' → logprob: -10.38001823425293
    7. ' <<' → logprob: -13.25501823425293
    8. ' ' → logprob: -13.63001823425293
    9. '<=' → logprob: -13.88001823425293
    10. '   ' → logprob: -14.63001823425293

Token 1284: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '１' → logprob: -20.875
    4. '```' → logprob: -20.875
    5. '   ' → logprob: -21.125
    6. '
' → logprob: -21.5
    7. '۱' → logprob: -21.5
    8. '0' → logprob: -21.625
    9. '१' → logprob: -22.625
    10. '=' → logprob: -22.625

Token 1285: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8150578737258911
    2. '
' → logprob: -1.0650578737258911
    3. '[' → logprob: -2.4400577545166016
    4. '<|end|>' → logprob: -2.9400577545166016
    5. ')' → logprob: -4.190057754516602
    6. '1' → logprob: -4.940057754516602
    7. '<|end|>' → logprob: -5.065057754516602
    8. '#' → logprob: -5.190057754516602
    9. '[next' → logprob: -5.315057754516602
    10. '-' → logprob: -5.565057754516602

Token 1286: '       ' (ID: 309)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.26906096935272217
    2. '       ' → logprob: -2.1440610885620117
    3. '
' → logprob: -2.3940610885620117
    4. 'next' → logprob: -4.894061088562012
    5. ' max' → logprob: -5.519061088562012
    6. '#' → logprob: -5.519061088562012
    7. ')' → logprob: -6.519061088562012
    8. '   ' → logprob: -6.644061088562012
    9. '[max' → logprob: -6.644061088562012
    10. '        
' → logprob: -6.644061088562012

Token 1287: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.004156987648457289
    2. ' max' → logprob: -5.879157066345215
    3. '[max' → logprob: -7.254157066345215
    4. '       ' → logprob: -8.004157066345215
    5. '(max' → logprob: -8.504157066345215
    6. 'next' → logprob: -10.504157066345215
    7. '```' → logprob: -11.004157066345215
    8. '#' → logprob: -11.254157066345215
    9. '
' → logprob: -11.379157066345215
    10. ',max' → logprob: -12.379157066345215

Token 1288: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -0.00017159747949335724
    2. 'power' → logprob: -8.875171661376953
    3. '_pow' → logprob: -11.000171661376953
    4. '_POWER' → logprob: -12.875171661376953
    5. 'pow' → logprob: -12.875171661376953
    6. '_p' → logprob: -13.000171661376953
    7. '=' → logprob: -13.125171661376953
    8. '_' → logprob: -13.250171661376953
    9. '   ' → logprob: -14.125171661376953
    10. '-=' → logprob: -14.375171661376953

Token 1289: ' >>=' (ID: 81952)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.3271907866001129
    2. ' >>=' → logprob: -1.3271907567977905
    3. '//=' → logprob: -4.32719087600708
    4. '=' → logprob: -7.95219087600708
    5. '#' → logprob: -9.202190399169922
    6. ' <<=' → logprob: -9.327190399169922
    7. '//' → logprob: -10.327190399169922
    8. '/=' → logprob: -11.577190399169922
    9. '≫' → logprob: -11.827190399169922
    10. '<<' → logprob: -12.202190399169922

Token 1290: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.5
    3. '   ' → logprob: -20.75
    4. '2' → logprob: -20.75
    5. '
' → logprob: -20.875
    6. '0' → logprob: -22.5
    7. '01' → logprob: -22.625
    8. '=' → logprob: -22.625
    9. '１' → logprob: -23.0
    10. '```' → logprob: -23.625

Token 1291: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15527884662151337
    2. 'dp' → logprob: -2.2802789211273193
    3. '        
' → logprob: -5.03027868270874
    4. '#' → logprob: -5.15527868270874
    5. '
' → logprob: -5.90527868270874
    6. 'next' → logprob: -5.90527868270874
    7. ' dp' → logprob: -6.03027868270874
    8. 'jump' → logprob: -6.15527868270874
    9. 'steps' → logprob: -6.53027868270874
    10. 'log' → logprob: -6.53027868270874

Token 1292: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6258872151374817
    2. '       ' → logprob: -0.8758872151374817
    3. 'log' → logprob: -4.875887393951416
    4. 'k' → logprob: -4.875887393951416
    5. '#' → logprob: -5.375887393951416
    6. 'binary' → logprob: -5.500887393951416
    7. '
' → logprob: -5.750887393951416
    8. 'max' → logprob: -5.875887393951416
    9. 'pow' → logprob: -5.875887393951416
    10. 'steps' → logprob: -5.875887393951416

Token 1293: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.19019648432731628
    2. 'log' → logprob: -3.0651965141296387
    3. 'LOG' → logprob: -3.3151965141296387
    4. 'jump' → logprob: -3.3151965141296387
    5. '#' (adapté à ' #') → logprob: -4.440196514129639
    6. 'k' → logprob: -4.815196514129639
    7. 'max' → logprob: -4.940196514129639
    8. 'binary' → logprob: -4.940196514129639
    9. 'lift' → logprob: -5.815196514129639
    10. '       ' → logprob: -5.815196514129639

Token 1294: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.30394861102104187
    2. 'log' → logprob: -2.4289486408233643
    3. 'LOG' → logprob: -2.4289486408233643
    4. 'jump' → logprob: -3.6789486408233643
    5. '#' → logprob: -4.053948402404785
    6. 'max' → logprob: -4.303948402404785
    7. 'k' → logprob: -4.678948402404785
    8. 'binary' → logprob: -5.178948402404785
    9. 'lift' → logprob: -5.303948402404785
    10. 'K' → logprob: -6.178948402404785

Token 1295: ' stock' (ID: 6546)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' va' → logprob: -1.1894867420196533
    2. ' vais' → logprob: -1.1894867420196533
    3. ' continue' → logprob: -2.4394867420196533
    4. '#' → logprob: -2.5644867420196533
    5. ' crée' → logprob: -3.1894867420196533
    6. ' créer' → logprob: -3.6894867420196533
    7. 'def' → logprob: -4.064486503601074
    8. ' create' → logprob: -4.064486503601074
    9. ' allons' → logprob: -4.189486503601074
    10. 'continue' → logprob: -4.314486503601074

Token 1296: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6880289912223816
    2. 'er' → logprob: -1.1880290508270264
    3. 'é' → logprob: -2.4380290508270264
    4. 'age' → logprob: -3.0630290508270264
    5. 'ée' → logprob: -3.3130290508270264
    6. 'ons' → logprob: -4.813028812408447
    7. 'ed' → logprob: -5.313028812408447
    8. '       ' → logprob: -5.688028812408447
    9. 'ées' → logprob: -6.188028812408447
    10. 'és' → logprob: -6.938028812408447

Token 1297: ' les' (ID: 1341)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4141444265842438
    2. ' dp' → logprob: -1.9141443967819214
    3. '[]' → logprob: -3.414144515991211
    4. ' tables' → logprob: -4.039144515991211
    5. 'tables' → logprob: -4.164144515991211
    6. 'pos' → logprob: -4.289144515991211
    7. 'next' → logprob: -4.539144515991211
    8. 'positions' → logprob: -4.539144515991211
    9. '[' → logprob: -4.789144515991211
    10. ' next' → logprob: -4.789144515991211

Token 1298: ' transitions' (ID: 59824)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.1885414123535156
    2. 'tables' → logprob: -1.1885414123535156
    3. 'next' → logprob: -1.5635414123535156
    4. 'positions' → logprob: -2.4385414123535156
    5. '#' → logprob: -3.4385414123535156
    6. 'trans' → logprob: -3.9385414123535156
    7. 'pos' → logprob: -4.688541412353516
    8. 'steps' → logprob: -5.188541412353516
    9. 'jump' → logprob: -5.188541412353516
    10. ']' → logprob: -5.688541412353516

Token 1299: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06018270552158356
    2. '=' → logprob: -2.935182809829712
    3. 'dp' → logprob: -5.810182571411133
    4. '=[' → logprob: -7.310182571411133
    5. ':' → logprob: -8.560182571411133
    6. '=[]' → logprob: -8.560182571411133
    7. 'from' → logprob: -9.060182571411133
    8. '[]' → logprob: -9.185182571411133
    9. '   ' → logprob: -9.185182571411133
    10. '#' → logprob: -9.310182571411133

Token 1300: ' ' (ID: 220)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.4509800672531128
    2. '0' → logprob: -1.7009800672531128
    3. 'p' → logprob: -1.7009800672531128
    4. 'max' → logprob: -1.9509800672531128
    5. 'pow' → logprob: -2.4509801864624023
    6. '_' → logprob: -3.3259801864624023
    7. '[' → logprob: -3.3259801864624023
    8. 'power' → logprob: -3.7009801864624023
    9. 'log' → logprob: -4.075980186462402
    10. 'powers' → logprob: -4.450980186462402

Token 1301: '2' (ID: 17)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8555008172988892
    2. '0' → logprob: -1.6055008172988892
    3. '[' → logprob: -2.3555006980895996
    4. 'k' → logprob: -2.7305006980895996
    5. 'pow' → logprob: -2.7305006980895996
    6. 'log' → logprob: -3.2305006980895996
    7. 'p' → logprob: -3.4805006980895996
    8. '1' → logprob: -4.2305006980896
    9. 'power' → logprob: -4.6055006980896
    10. '[max' → logprob: -4.8555006980896

Token 1302: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.31724950671195984
    2. '][' → logprob: -1.9422495365142822
    3. ']' → logprob: -3.0672495365142822
    4. '^' → logprob: -3.3172495365142822
    5. '][]' → logprob: -4.192249298095703
    6. 'max' → logprob: -5.192249298095703
    7. '
' → logprob: -5.317249298095703
    8. '0' → logprob: -5.817249298095703
    9. ' **' → logprob: -5.817249298095703
    10. '[max' → logprob: -6.192249298095703

Token 1303: 'k' (ID: 74)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15297788381576538
    2. '20' → logprob: -2.02797794342041
    3. '[' → logprob: -5.52797794342041
    4. ' ' → logprob: -6.52797794342041
    5. 'max' → logprob: -7.02797794342041
    6. '
' → logprob: -7.15297794342041
    7. '10' → logprob: -7.90297794342041
    8. '17' → logprob: -8.02797794342041
    9. '_' → logprob: -8.15297794342041
    10. 'k' → logprob: -8.40297794342041

Token 1304: ' promen' (ID: 87203)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7795509696006775
    2. '_positions' → logprob: -1.5295510292053223
    3. '_steps' → logprob: -1.7795510292053223
    4. '_trans' → logprob: -2.9045510292053223
    5. '_pos' → logprob: -3.9045510292053223
    6. '=' → logprob: -4.029551029205322
    7. '_levels' → logprob: -4.154551029205322
    8. '   ' → logprob: -4.904551029205322
    9. ']' → logprob: -4.904551029205322
    10. '_moves' → logprob: -5.654551029205322

Token 1305: 'ades' (ID: 4250)
  Prédit: 'ées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.2128661423921585
    2. 'es' → logprob: -1.712866187095642
    3. 'ees' → logprob: -4.587866306304932
    4. 'nées' → logprob: -7.712866306304932
    5. 'ises' → logprob: -7.962866306304932
    6. 'és' → logprob: -9.337865829467773
    7. 'nees' → logprob: -9.712865829467773
    8. 's' → logprob: -9.962865829467773
    9. '[' → logprob: -10.712865829467773
    10. 'eses' → logprob: -10.712865829467773

Token 1306: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10478299111127853
    2. ' =' → logprob: -3.354783058166504
    3. ',' → logprob: -3.979783058166504
    4. 'dp' → logprob: -4.604783058166504
    5. '   ' → logprob: -5.104783058166504
    6. '[]' → logprob: -5.229783058166504
    7. '=' → logprob: -5.729783058166504
    8. 'positions' → logprob: -5.854783058166504
    9. 'next' → logprob: -6.229783058166504
    10. ' next' → logprob: -6.229783058166504

Token 1307: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014291849918663502
    2. 'dp' → logprob: -4.389291763305664
    3. 'trans' → logprob: -7.264291763305664
    4. ' dp' → logprob: -7.639291763305664
    5. 'steps' → logprob: -8.889291763305664
    6. 'transition' → logprob: -9.764291763305664
    7. 'next' → logprob: -9.889291763305664
    8. 'tp' → logprob: -10.139291763305664
    9. 'jump' → logprob: -10.264291763305664
    10. '   ' → logprob: -10.514291763305664

Token 1308: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11080022156238556
    2. 'jump' → logprob: -2.485800266265869
    3. 'j' → logprob: -5.860800266265869
    4. 'binary' → logprob: -5.860800266265869
    5. '       ' → logprob: -6.110800266265869
    6. 'dou' → logprob: -6.235800266265869
    7. 'lift' → logprob: -6.235800266265869
    8. 'next' → logprob: -6.610800266265869
    9. 'trans' → logprob: -7.110800266265869
    10. 'jmp' → logprob: -7.110800266265869

Token 1309: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.16649217903614044
    2. '       ' → logprob: -2.291492223739624
    3. 'jump' → logprob: -3.291492223739624
    4. '#' → logprob: -5.541491985321045
    5. 'j' → logprob: -6.041491985321045
    6. 'max' → logprob: -6.291491985321045
    7. 'trans' → logprob: -6.291491985321045
    8. 'binary' → logprob: -7.041491985321045
    9. 'lift' → logprob: -7.291491985321045
    10. 'dou' → logprob: -7.666491985321045

Token 1310: '[k' (ID: 14298)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023321064189076424
    2. ' =' → logprob: -3.7733211517333984
    3. '=[' → logprob: -9.648321151733398
    4. '=[]' → logprob: -12.023321151733398
    5. '[' → logprob: -12.898321151733398
    6. '=[[' → logprob: -14.398321151733398
    7. '=[]
' → logprob: -14.773321151733398
    8. ' =[' → logprob: -14.898321151733398
    9. ']' → logprob: -15.148321151733398
    10. ' ' → logprob: -15.523321151733398

Token 1311: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.43218275904655457
    2. '][' → logprob: -1.057182788848877
    3. ']=' → logprob: -6.557182788848877
    4. '][]' → logprob: -7.182182788848877
    5. ' =' → logprob: -7.682182788848877
    6. ')' → logprob: -9.057182312011719
    7. ']][' → logprob: -9.182182312011719
    8. '=' → logprob: -9.432182312011719
    9. '[k' → logprob: -9.807182312011719
    10. '[i' → logprob: -9.807182312011719

Token 1312: 'i' (ID: 72)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.21269440650939941
    2. 'i' → logprob: -1.7126944065093994
    3. '][' → logprob: -5.08769416809082
    4. '0' → logprob: -6.33769416809082
    5. ']' → logprob: -6.83769416809082
    6. 'k' → logprob: -7.58769416809082
    7. ' H' → logprob: -8.08769416809082
    8. '...' → logprob: -8.21269416809082
    9. '   ' → logprob: -8.96269416809082
    10. ':' → logprob: -8.96269416809082

Token 1313: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006104285828769207
    2. ']' → logprob: -5.131104469299316
    3. '][]' → logprob: -8.881104469299316
    4. 'd' → logprob: -11.881104469299316
    5. ' ][' → logprob: -12.381104469299316
    6. '[' → logprob: -13.006104469299316
    7. '       ' → logprob: -13.006104469299316
    8. 'dx' → logprob: -13.256104469299316
    9. '   ' → logprob: -13.381104469299316
    10. ']=' → logprob: -13.506104469299316

Token 1314: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.306760805164231e-05
    2. ' j' → logprob: -11.25001335144043
    3. '	j' → logprob: -16.87501335144043
    4. '][' → logprob: -17.00001335144043
    5. '   ' → logprob: -17.12501335144043
    6. ']' → logprob: -17.12501335144043
    7. '_j' → logprob: -18.25001335144043
    8. '
' → logprob: -18.50001335144043
    9. '$j' → logprob: -19.25001335144043
    10. ',j' → logprob: -19.50001335144043

Token 1315: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009984850883483887
    2. ']=' → logprob: -5.384984970092773
    3. '][' → logprob: -5.634984970092773
    4. '=' → logprob: -6.634984970092773
    5. ' =' → logprob: -7.884984970092773
    6. ' ]' → logprob: -10.259984970092773
    7. ')' → logprob: -10.884984970092773
    8. '][]' → logprob: -11.759984970092773
    9. '[' → logprob: -12.259984970092773
    10. ']=(' → logprob: -12.384984970092773

Token 1316: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5233020186424255
    2. ' =' → logprob: -0.8983020186424255
    3. '=[]' → logprob: -9.64830207824707
    4. ']' → logprob: -9.89830207824707
    5. '=[' → logprob: -10.02330207824707
    6. ']=' → logprob: -11.89830207824707
    7. '=[[' → logprob: -12.52330207824707
    8. ' =[' → logprob: -12.52330207824707
    9. ',' → logprob: -13.14830207824707
    10. '=[]
' → logprob: -14.02330207824707

Token 1317: ' position' (ID: 4010)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.010492943227291107
    2. ' next' → logprob: -5.38549280166626
    3. '(-' → logprob: -5.38549280166626
    4. 'None' → logprob: -7.88549280166626
    5. '(next' → logprob: -7.88549280166626
    6. '(' → logprob: -8.885493278503418
    7. '[' → logprob: -9.010493278503418
    8. '[[' → logprob: -9.510493278503418
    9. '[-' → logprob: -9.635493278503418
    10. '[next' → logprob: -9.885493278503418

Token 1318: ' finale' (ID: 37759)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02478952892124653
    2. ' =' → logprob: -4.024789333343506
    3. '0' → logprob: -5.899789333343506
    4. '=k' → logprob: -7.024789333343506
    5. '[k' → logprob: -7.149789333343506
    6. '[' → logprob: -7.274789333343506
    7. 'for' → logprob: -7.899789333343506
    8. '=
' → logprob: -8.024789810180664
    9. '=[' → logprob: -8.524789810180664
    10. ']' → logprob: -9.024789810180664

Token 1319: ' après' (ID: 16460)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10793475061655045
    2. ' =' → logprob: -2.3579347133636475
    3. '=[' → logprob: -5.857934951782227
    4. ']' → logprob: -6.357934951782227
    5. '[' → logprob: -6.982934951782227
    6. 'for' → logprob: -7.107934951782227
    7. ' for' → logprob: -8.232934951782227
    8. ')' → logprob: -8.482934951782227
    9. '=[[' → logprob: -8.857934951782227
    10. '[k' → logprob: -9.232934951782227

Token 1320: ' ' (ID: 220)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5951364040374756
    2. '2' → logprob: -0.8451364040374756
    3. '(' → logprob: -4.595136642456055
    4. '1' → logprob: -5.845136642456055
    5. '[k' → logprob: -6.345136642456055
    6. ' k' → logprob: -6.720136642456055
    7. '[' → logprob: -6.970136642456055
    8. ' ' → logprob: -7.345136642456055
    9. '(k' → logprob: -7.470136642456055
    10. ' (' → logprob: -8.095136642456055

Token 1321: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.30203405022621155
    2. '(' → logprob: -1.9270340204238892
    3. 'k' → logprob: -2.3020341396331787
    4. '1' → logprob: -4.4270339012146
    5. '(k' → logprob: -6.6770339012146
    6. '[' → logprob: -7.4270339012146
    7. '[k' → logprob: -7.6770339012146
    8. 'pow' → logprob: -8.177034378051758
    9. ' (' → logprob: -8.802034378051758
    10. '(i' → logprob: -9.677034378051758

Token 1322: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.6346029043197632
    2. '**' → logprob: -0.7596029043197632
    3. '[k' → logprob: -7.384603023529053
    4. '][' → logprob: -7.509603023529053
    5. '_k' → logprob: -7.759603023529053
    6. 'k' → logprob: -9.259602546691895
    7. '
' → logprob: -9.384602546691895
    8. '^[' → logprob: -9.884602546691895
    9. ']' → logprob: -10.009602546691895
    10. '```' → logprob: -10.134602546691895

Token 1323: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -4.429896944202483e-05
    2. '_k' → logprob: -10.375043869018555
    3. '
' → logprob: -12.000043869018555
    4. ' k' → logprob: -12.500043869018555
    5. '[k' → logprob: -13.375043869018555
    6. '(k' → logprob: -14.375043869018555
    7. '```' → logprob: -15.125043869018555
    8. '{k' → logprob: -15.500043869018555
    9. '	k' → logprob: -15.750043869018555
    10. 'к' → logprob: -16.625043869018555

Token 1324: ' promen' (ID: 87203)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1178796291351318
    2. '[' → logprob: -1.2428796291351318
    3. '][' → logprob: -2.117879629135132
    4. '[k' → logprob: -2.367879629135132
    5. '=' → logprob: -2.617879629135132
    6. ' =' → logprob: -3.242879629135132
    7. '_' → logprob: -4.742879867553711
    8. '[
' → logprob: -4.992879867553711
    9. '=[' → logprob: -5.117879867553711
    10. '```' → logprob: -5.367879867553711

Token 1325: 'ades' (ID: 4250)
  Prédit: 'ées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.05157839134335518
    2. 'ades' → logprob: -3.4265782833099365
    3. 'es' → logprob: -4.426578521728516
    4. 'ees' → logprob: -5.801578521728516
    5. 'ée' → logprob: -6.301578521728516
    6. 'ade' → logprob: -7.926578521728516
    7. 'e' → logprob: -8.801578521728516
    8. 'ances' → logprob: -9.051578521728516
    9. 'nées' → logprob: -9.551578521728516
    10. 'és' → logprob: -9.801578521728516

Token 1326: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16185465455055237
    2. '=' → logprob: -1.91185462474823
    3. ']' → logprob: -7.1618547439575195
    4. '=[' → logprob: -8.03685474395752
    5. '       ' → logprob: -8.66185474395752
    6. 'dp' → logprob: -9.16185474395752
    7. '   ' → logprob: -10.28685474395752
    8. '[' → logprob: -10.53685474395752
    9. ' =
' → logprob: -10.53685474395752
    10. '=[]
' → logprob: -10.53685474395752

Token 1327: ' part' (ID: 997)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2454792708158493
    2. '[i' → logprob: -2.7454793453216553
    3. ' range' → logprob: -2.9954793453216553
    4. '[
' → logprob: -3.1204793453216553
    5. '[' → logprob: -3.9954793453216553
    6. '[[' → logprob: -3.9954793453216553
    7. ']' → logprob: -5.370479106903076
    8. 'i' → logprob: -6.245479106903076
    9. 'dp' → logprob: -6.245479106903076
    10. '           ' → logprob: -6.620479106903076

Token 1328: 'ant' (ID: 493)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8916482329368591
    2. '       ' → logprob: -1.266648292541504
    3. 'of' → logprob: -2.516648292541504
    4. '[' → logprob: -3.516648292541504
    5. '           ' → logprob: -3.516648292541504
    6. '   ' → logprob: -3.516648292541504
    7. '][' → logprob: -3.766648292541504
    8. '```' → logprob: -4.016648292541504
    9. '               ' → logprob: -4.516648292541504
    10. '[i' → logprob: -4.516648292541504

Token 1329: ' de' (ID: 334)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.05030841752886772
    2. 'de' → logprob: -4.4253082275390625
    3. '[' → logprob: -5.0503082275390625
    4. ' from' → logprob: -5.0503082275390625
    5. '_from' → logprob: -5.1753082275390625
    6. '```' → logprob: -5.5503082275390625
    7. '       ' → logprob: -5.6753082275390625
    8. '           ' → logprob: -5.6753082275390625
    9. '               ' → logprob: -5.8003082275390625
    10. '[k' → logprob: -7.0503082275390625

Token 1330: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.03854401409626007
    2. ' (' → logprob: -3.413543939590454
    3. 'i' → logprob: -5.788544178009033
    4. '[i' → logprob: -6.913544178009033
    5. ' i' → logprob: -7.913544178009033
    6. '   ' → logprob: -8.413543701171875
    7. '(' → logprob: -9.288543701171875
    8. '           ' → logprob: -10.288543701171875
    9. ' ' → logprob: -10.538543701171875
    10. '       ' → logprob: -10.788543701171875

Token 1331: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006207481492310762
    2. 'k' → logprob: -5.131207466125488
    3. ' i' → logprob: -8.631207466125488
    4. '           ' → logprob: -9.881207466125488
    5. ')' → logprob: -11.131207466125488
    6. '               ' → logprob: -11.631207466125488
    7. ' k' → logprob: -12.131207466125488
    8. '][' → logprob: -12.381207466125488
    9. '   ' → logprob: -12.881207466125488
    10. '0' → logprob: -13.006207466125488

Token 1332: ',j' (ID: 22712)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.05214047431945801
    2. ')][' → logprob: -3.802140474319458
    3. ',' → logprob: -4.427140235900879
    4. ')[' → logprob: -5.052140235900879
    5. ',j' → logprob: -5.427140235900879
    6. ')' → logprob: -6.052140235900879
    7. '       ' → logprob: -6.677140235900879
    8. '           ' → logprob: -7.802140235900879
    9. '[j' → logprob: -7.927140235900879
    10. ']' → logprob: -7.927140235900879

Token 1333: ')

' (ID: 1029)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04931953176856041
    2. '][' → logprob: -3.2993195056915283
    3. '])' → logprob: -4.924319744110107
    4. ')' → logprob: -6.424319744110107
    5. ')]' → logprob: -7.049319744110107
    6. '       ' → logprob: -7.424319744110107
    7. ']
' → logprob: -7.924319744110107
    8. '][]' → logprob: -9.54931926727295
    9. ')][' → logprob: -9.67431926727295
    10. ' ]' → logprob: -10.04931926727295

Token 1334: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8702027797698975
    2. 'dp' → logprob: -1.3702027797698975
    3. '
' → logprob: -1.9952027797698975
    4. ' dp' → logprob: -2.2452027797698975
    5. '   ' → logprob: -2.9952027797698975
    6. ' =' → logprob: -4.370203018188477
    7. '        
' → logprob: -4.495203018188477
    8. '    
' → logprob: -5.995203018188477
    9. ' 
' → logprob: -6.745203018188477
    10. '	dp' → logprob: -6.870203018188477

Token 1335: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00100113230291754
    2. '       ' → logprob: -7.001001358032227
    3. 'from' → logprob: -9.626001358032227
    4. ' dp' → logprob: -11.126001358032227
    5. 'import' → logprob: -11.876001358032227
    6. '   ' → logprob: -13.751001358032227
    7. 'max' → logprob: -15.126001358032227
    8. '	dp' → logprob: -15.376001358032227
    9. ' from' → logprob: -16.501001358032227
    10. 'size' → logprob: -17.251001358032227

Token 1336: ' Par' (ID: 3371)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00912442710250616
    2. '       ' → logprob: -4.759124279022217
    3. 'from' → logprob: -8.259124755859375
    4. 'k' → logprob: -9.884124755859375
    5. '   ' → logprob: -9.884124755859375
    6. 'max' → logprob: -10.009124755859375
    7. 'import' → logprob: -10.384124755859375
    8. ' dp' → logprob: -10.759124755859375
    9. '
' → logprob: -11.009124755859375
    10. 'K' → logprob: -11.384124755859375

Token 1337: ' souci' (ID: 126951)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.04170571640133858
    2. 'ts' → logprob: -3.79170560836792
    3. 'dp' → logprob: -4.29170560836792
    4. 'import' → logprob: -7.16670560836792
    5. 'd' → logprob: -7.29170560836792
    6. 'def' → logprob: -7.54170560836792
    7. 'm' → logprob: -7.91670560836792
    8. 'am' → logprob: -8.041706085205078
    9. 'se' → logprob: -8.041706085205078
    10. 'e' → logprob: -8.791706085205078

Token 1338: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.0963232517242432
    2. '=' → logprob: -1.2213232517242432
    3. 'd' → logprob: -1.7213232517242432
    4. 'of' → logprob: -3.471323251724243
    5. '       ' → logprob: -3.596323251724243
    6. 'dp' → logprob: -3.596323251724243
    7. ':' → logprob: -3.971323251724243
    8. '#' → logprob: -4.221323013305664
    9. '=[]' → logprob: -4.471323013305664
    10. '_' → logprob: -4.471323013305664

Token 1339: ' mémoire' (ID: 79071)
  Prédit: 'indent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indent' → logprob: -0.8217718005180359
    2. 'memory' → logprob: -0.9467718005180359
    3. 'performance' → logprob: -2.4467718601226807
    4. 'import' → logprob: -4.071771621704102
    5. 'optim' → logprob: -4.571771621704102
    6. 'mem' → logprob: -4.571771621704102
    7. 'mé' → logprob: -4.946771621704102
    8. '```' → logprob: -5.196771621704102
    9. 'len' → logprob: -5.446771621704102
    10. '
' → logprob: -5.571771621704102

Token 1340: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.2080239057540894
    2. ',' → logprob: -1.7080239057540894
    3. 'dp' → logprob: -1.9580239057540894
    4. '[' → logprob: -2.083024024963379
    5. '=' → logprob: -2.833024024963379
    6. '[]' → logprob: -2.958024024963379
    7. 'import' → logprob: -3.083024024963379
    8. '   ' → logprob: -3.458024024963379
    9. '[
' → logprob: -3.958024024963379
    10. '.' → logprob: -4.958024024963379

Token 1341: ' on' (ID: 402)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.5275366902351379
    2. 'dp' → logprob: -0.9025366902351379
    3. 'import' → logprob: -6.902536869049072
    4. ' import' → logprob: -7.277536869049072
    5. '       ' → logprob: -7.277536869049072
    6. ' k' → logprob: -7.652536869049072
    7. ' max' → logprob: -7.902536869049072
    8. 'k' → logprob: -8.777536392211914
    9. ']' → logprob: -8.777536392211914
    10. ' continue' → logprob: -9.027536392211914

Token 1342: ' ne' (ID: 453)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6905462741851807
    2. 'contin' → logprob: -1.8155462741851807
    3. 'import' → logprob: -2.4405462741851807
    4. '#' → logprob: -2.8155462741851807
    5. 'vais' → logprob: -3.1905462741851807
    6. 'continu' → logprob: -3.9405462741851807
    7. 'n' → logprob: -4.065546035766602
    8. 'dp' → logprob: -4.190546035766602
    9. 'stock' → logprob: -4.440546035766602
    10. 'initial' → logprob: -4.815546035766602

Token 1343: ' peut' (ID: 9216)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.5190255641937256
    2. 'stock' → logprob: -1.8940255641937256
    3. 'pas' → logprob: -2.6440255641937256
    4. 'import' → logprob: -2.8940255641937256
    5. 'store' → logprob: -2.8940255641937256
    6. 'vais' → logprob: -3.1440255641937256
    7. 'def' → logprob: -3.2690255641937256
    8. '
' → logprob: -3.3940255641937256
    9. 'initialize' → logprob: -3.5190255641937256
    10. 'continue' → logprob: -3.7690255641937256

Token 1344: ' pas' (ID: 2173)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.5857008695602417
    2. '[
' → logprob: -1.5857008695602417
    3. ' =' → logprob: -2.3357009887695312
    4. '[' → logprob: -2.4607009887695312
    5. 'pas' → logprob: -2.5857009887695312
    6. ' pas' → logprob: -2.7107009887695312
    7. 'import' → logprob: -2.7107009887695312
    8. '       ' → logprob: -2.8357009887695312
    9. ']' → logprob: -3.2107009887695312
    10. '=
' → logprob: -3.7107009887695312

Token 1345: ' stock' (ID: 6546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08535941690206528
    2. 'import' → logprob: -3.3353593349456787
    3. ' dp' → logprob: -3.7103593349456787
    4. '[' → logprob: -4.710359573364258
    5. '[]' → logprob: -5.835359573364258
    6. '   ' → logprob: -6.085359573364258
    7. ']' → logprob: -6.210359573364258
    8. '[
' → logprob: -6.585359573364258
    9. ' import' → logprob: -6.835359573364258
    10. '[]
' → logprob: -7.960359573364258

Token 1346: 'er' (ID: 259)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7984718680381775
    2. 'er' → logprob: -1.2984719276428223
    3. '=' → logprob: -2.0484719276428223
    4. '[]
' → logprob: -3.4234719276428223
    5. ']' → logprob: -3.7984719276428223
    6. '[
' → logprob: -3.9234719276428223
    7. '       ' → logprob: -3.9234719276428223
    8. '[' → logprob: -4.548471927642822
    9. '[][]' → logprob: -5.048471927642822
    10. '   ' → logprob: -5.173471927642822

Token 1347: ' dp' (ID: 21546)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.48485472798347473
    2. '[]' → logprob: -1.6098546981811523
    3. 'dp' → logprob: -2.6098546981811523
    4. ')' → logprob: -3.3598546981811523
    5. '[' → logprob: -3.8598546981811523
    6. '[
' → logprob: -3.8598546981811523
    7. '   ' → logprob: -5.234854698181152
    8. 'import' → logprob: -5.484854698181152
    9. ' ' → logprob: -5.734854698181152
    10. '.' → logprob: -6.109854698181152

Token 1348: ' pour' (ID: 1930)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04966476559638977
    2. '[]' → logprob: -4.0496649742126465
    3. '[k' → logprob: -4.2996649742126465
    4. ')' → logprob: -5.4246649742126465
    5. '[
' → logprob: -5.7996649742126465
    6. '=' → logprob: -5.9246649742126465
    7. '\[' → logprob: -6.7996649742126465
    8. '<|end|>' → logprob: -6.7996649742126465
    9. ']' → logprob: -7.0496649742126465
    10. '.' → logprob: -7.7996649742126465

Token 1349: ' tous' (ID: 10688)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.3917839527130127
    2. ']' → logprob: -1.6417839527130127
    3. '0' → logprob: -1.8917839527130127
    4. 'k' → logprob: -2.0167839527130127
    5. '1' → logprob: -2.3917839527130127
    6. ' k' → logprob: -2.8917839527130127
    7. 'range' → logprob: -3.0167839527130127
    8. ' max' → logprob: -3.5167839527130127
    9. ' range' → logprob: -4.141783714294434
    10. ' ' → logprob: -5.016783714294434

Token 1350: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.008269394747912884
    2. ' k' → logprob: -5.758269309997559
    3. '_k' → logprob: -6.383269309997559
    4. 'max' → logprob: -6.883269309997559
    5. 'N' → logprob: -7.758269309997559
    6. 'levels' → logprob: -8.508269309997559
    7. ' niveaux' → logprob: -8.758269309997559
    8. 'H' → logprob: -8.883269309997559
    9. '0' → logprob: -9.008269309997559
    10. '   ' → logprob: -9.258269309997559

Token 1351: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1352: ' i' (ID: 575)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8548164963722229
    2. ' ' → logprob: -1.7298164367675781
    3. '       ' → logprob: -2.479816436767578
    4. '#' → logprob: -2.729816436767578
    5. '[' → logprob: -2.979816436767578
    6. ']' → logprob: -3.479816436767578
    7. '<|end|>' → logprob: -3.479816436767578
    8. ' ]' → logprob: -3.854816436767578
    9. '        ' → logprob: -4.104816436767578
    10. ' 
' → logprob: -4.229816436767578

Token 1353: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07580902427434921
    2. ',j' → logprob: -3.7008090019226074
    3. '=' → logprob: -4.200809001922607
    4. 'n' → logprob: -4.575809001922607
    5. ']' → logprob: -5.075809001922607
    6. ',
' → logprob: -5.450809001922607
    7. '][' → logprob: -5.825809001922607
    8. 'nd' → logprob: -6.200809001922607
    9. '   ' → logprob: -6.325809001922607
    10. '[' → logprob: -6.450809001922607

Token 1354: ' car' (ID: 1669)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1355: ' H' (ID: 487)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.1490448713302612
    2. 'H' → logprob: -1.6490448713302612
    3. ' H' → logprob: -1.7740448713302612
    4. '#' → logprob: -2.524044990539551
    5. 'max' → logprob: -2.524044990539551
    6. ' k' → logprob: -3.774044990539551
    7. ')' → logprob: -4.524044990539551
    8. ' #' → logprob: -4.524044990539551
    9. ' memory' → logprob: -4.524044990539551
    10. '[]' → logprob: -4.649044990539551

Token 1356: ',W' (ID: 117252)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7087661623954773
    2. '=' → logprob: -1.083766222000122
    3. ')' → logprob: -3.583766222000122
    4. '[' → logprob: -3.708766222000122
    5. '#' → logprob: -3.958766222000122
    6. '<=' → logprob: -3.958766222000122
    7. ']' → logprob: -4.333765983581543
    8. '][' → logprob: -4.833765983581543
    9. '*' → logprob: -4.958765983581543
    10. ' =' → logprob: -5.208765983581543

Token 1357: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2584059238433838
    2. '<|end|>' → logprob: -3.258405923843384
    3. ']' → logprob: -3.508405923843384
    4. ')' → logprob: -3.758405923843384
    5. '==' → logprob: -3.758405923843384
    6. ',' → logprob: -3.758405923843384
    7. '>=' → logprob: -4.008405685424805
    8. ' =' → logprob: -4.383405685424805
    9. '#' → logprob: -4.633405685424805
    10. '<|end|>' → logprob: -4.633405685424805

Token 1358: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.36663591861724854
    2. '100' → logprob: -1.3666359186172485
    3. ' ' → logprob: -4.241635799407959
    4. '0' → logprob: -4.741635799407959
    5. '
' → logprob: -5.366635799407959
    6. 'max' → logprob: -5.616635799407959
    7. '[]' → logprob: -5.741635799407959
    8. '   ' → logprob: -5.866635799407959
    9. '500' → logprob: -6.366635799407959
    10. 'None' → logprob: -6.616635799407959

Token 1359: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31344035267829895
    2. ']' → logprob: -2.0634403228759766
    3. '[
' → logprob: -2.9384403228759766
    4. '][' → logprob: -4.313440322875977
    5. '[]' → logprob: -4.688440322875977
    6. ',' → logprob: -4.688440322875977
    7. 'import' → logprob: -5.063440322875977
    8. '<|end|>' → logprob: -5.313440322875977
    9. '       ' → logprob: -5.438440322875977
    10. '.' → logprob: -5.563440322875977

Token 1360: ' ->' (ID: 2747)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3772799074649811
    2. ']' → logprob: -2.7522799968719482
    3. '[]' → logprob: -3.0022799968719482
    4. '[
' → logprob: -3.2522799968719482
    5. ')' → logprob: -3.5022799968719482
    6. '   ' → logprob: -3.6272799968719482
    7. '<|end|>' → logprob: -3.6272799968719482
    8. '       ' → logprob: -4.752279758453369
    9. '
' → logprob: -4.877279758453369
    10. ':' → logprob: -5.002279758453369

Token 1361: ' ' (ID: 220)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.7593115568161011
    2. 'import' → logprob: -1.634311556816101
    3. '100' → logprob: -2.3843116760253906
    4. 'Memory' → logprob: -2.6343116760253906
    5. 'max' → logprob: -3.7593116760253906
    6. '10' → logprob: -4.009311676025391
    7. ' None' → logprob: -4.259311676025391
    8. '
' → logprob: -4.384311676025391
    9. '#' → logprob: -4.509311676025391
    10. ' memory' → logprob: -4.509311676025391

Token 1362: '1' (ID: 16)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4420449137687683
    2. '10' → logprob: -2.567044973373413
    3. 'None' → logprob: -2.942044973373413
    4. 'Memory' → logprob: -3.442044973373413
    5. '100' → logprob: -3.692044973373413
    6. '2' → logprob: -3.942044973373413
    7. 'dp' → logprob: -4.067044734954834
    8. '256' → logprob: -4.192044734954834
    9. '102' → logprob: -4.317044734954834
    10. '...' → logprob: -4.317044734954834

Token 1363: 'M' (ID: 44)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.4442967176437378
    2. '0' → logprob: -1.1942967176437378
    3. '00' → logprob: -3.1942968368530273
    4. ',' → logprob: -5.444296836853027
    5. '[' → logprob: -6.319296836853027
    6. '       ' → logprob: -7.319296836853027
    7. '6' → logprob: -7.319296836853027
    8. '_' → logprob: -7.319296836853027
    9. '   ' → logprob: -7.444296836853027
    10. '2' → logprob: -7.444296836853027

Token 1364: ' elements' (ID: 8632)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0541945695877075
    2. '<|end|>' → logprob: -1.6791945695877075
    3. '
' → logprob: -2.304194450378418
    4. 'import' → logprob: -2.679194450378418
    5. '[]' → logprob: -2.804194450378418
    6. ',' → logprob: -3.179194450378418
    7. ')' → logprob: -3.179194450378418
    8. ']' → logprob: -3.429194450378418
    9. '[
' → logprob: -3.679194450378418
    10. '#' → logprob: -4.054194450378418

Token 1365: ',' (ID: 11)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.1214022636413574
    2. '
' → logprob: -1.2464022636413574
    3. '       ' → logprob: -1.9964022636413574
    4. ',' → logprob: -3.1214022636413574
    5. '   ' → logprob: -3.3714022636413574
    6. '[' → logprob: -3.3714022636413574
    7. '```' → logprob: -3.6214022636413574
    8. ',
' → logprob: -4.121402263641357
    9. 'import' → logprob: -4.246402263641357
    10. '[
' → logprob: -4.621402263641357

Token 1366: ' k' (ID: 372)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4178484678268433
    2. 'max' → logprob: -2.167848587036133
    3. '       ' → logprob: -2.292848587036133
    4. 'dp' → logprob: -2.542848587036133
    5. '   ' → logprob: -2.667848587036133
    6. '#' → logprob: -2.792848587036133
    7. '[' → logprob: -2.917848587036133
    8. 'import' → logprob: -3.042848587036133
    9. ']' → logprob: -3.417848587036133
    10. '[]' → logprob: -3.917848587036133

Token 1367: ' peut' (ID: 9216)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08502332866191864
    2. ' =' → logprob: -2.9600234031677246
    3. 'import' → logprob: -5.210023403167725
    4. ']' → logprob: -5.335023403167725
    5. '[' → logprob: -5.335023403167725
    6. '=[' → logprob: -6.335023403167725
    7. '   ' → logprob: -6.335023403167725
    8. ')' → logprob: -6.585023403167725
    9. 's' → logprob: -6.710023403167725
    10. ',' → logprob: -6.835023403167725

Token 1368: ' être' (ID: 9104)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19165702164173126
    2. ' be' → logprob: -2.191657066345215
    3. 'be' → logprob: -2.816657066345215
    4. ' =' → logprob: -7.191657066345215
    5. '>' → logprob: -7.816657066345215
    6. 'range' → logprob: -8.441657066345215
    7. '>=' → logprob: -8.816657066345215
    8. 't' → logprob: -8.941657066345215
    9. 'go' → logprob: -9.441657066345215
    10. 'not' → logprob: -9.441657066345215

Token 1369: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9112308621406555
    2. '0' → logprob: -1.4112308025360107
    3. '2' → logprob: -1.6612308025360107
    4. '[]' → logprob: -3.1612308025360107
    5. '16' → logprob: -4.16123104095459
    6. ']' → logprob: -4.28623104095459
    7. '10' → logprob: -4.53623104095459
    8. '3' → logprob: -4.66123104095459
    9. '4' → logprob: -4.78623104095459
    10. '[' → logprob: -4.78623104095459

Token 1370: '24' (ID: 1494)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.652186393737793
    2. '20' → logprob: -1.027186393737793
    3. '30' → logprob: -3.402186393737793
    4. '21' → logprob: -3.777186393737793
    5. '17' → logprob: -4.277186393737793
    6. '31' → logprob: -4.402186393737793
    7. 'log' → logprob: -4.902186393737793
    8. 'large' → logprob: -5.277186393737793
    9. '40' → logprob: -5.527186393737793
    10. '25' → logprob: -5.652186393737793

Token 1371: ' ~' (ID: 6574)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9278109073638916
    2. 'import' → logprob: -1.8028109073638916
    3. '       ' → logprob: -1.9278109073638916
    4. ']' → logprob: -2.5528109073638916
    5. '   ' → logprob: -3.3028109073638916
    6. '#' → logprob: -3.3028109073638916
    7. ' dp' → logprob: -3.5528109073638916
    8. 'from' → logprob: -3.9278109073638916
    9. ')' → logprob: -4.3028106689453125
    10. '
' → logprob: -4.4278106689453125

Token 1372: ' log' (ID: 2142)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6483998894691467
    2. ' dp' → logprob: -1.773399829864502
    3. ']' → logprob: -2.648399829864502
    4. 'import' → logprob: -3.023399829864502
    5. '[]' → logprob: -3.273399829864502
    6. 'None' → logprob: -3.898399829864502
    7. '#' → logprob: -3.898399829864502
    8. '   ' → logprob: -4.148399829864502
    9. ')' → logprob: -4.273399829864502
    10. ' None' → logprob: -4.523399829864502

Token 1373: '2' (ID: 17)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5713539719581604
    2. '[]' → logprob: -2.4463539123535156
    3. '2' → logprob: -2.6963539123535156
    4. '[' → logprob: -2.6963539123535156
    5. ' =' → logprob: -3.4463539123535156
    6. '#' → logprob: -3.9463539123535156
    7. 'k' → logprob: -4.071353912353516
    8. '0' → logprob: -4.321353912353516
    9. ' ' → logprob: -4.446353912353516
    10. '   ' → logprob: -4.571353912353516

Token 1374: '(' (ID: 7)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3044664263725281
    2. '[]' → logprob: -2.429466485977173
    3. '[' → logprob: -3.304466485977173
    4. ')' → logprob: -4.179466247558594
    5. '1' → logprob: -4.554466247558594
    6. '0' → logprob: -4.679466247558594
    7. ' =' → logprob: -4.679466247558594
    8. ' ' → logprob: -4.679466247558594
    9. '[
' → logprob: -4.679466247558594
    10. '   ' → logprob: -4.804466247558594

Token 1375: '10' (ID: 702)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.007155772764235735
    2. '100' → logprob: -5.507155895233154
    3. '10' → logprob: -6.507155895233154
    4. ')' → logprob: -7.132155895233154
    5. ' N' → logprob: -8.257155418395996
    6. '   ' → logprob: -9.007155418395996
    7. 'max' → logprob: -9.382155418395996
    8. '`' → logprob: -10.132155418395996
    9. '```' → logprob: -10.132155418395996
    10. '1' → logprob: -10.132155418395996

Token 1376: '^' (ID: 61)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.5738354921340942
    2. '7' → logprob: -1.8238354921340942
    3. ')' → logprob: -2.0738353729248047
    4. '+' → logprob: -2.1988353729248047
    5. '24' → logprob: -4.948835372924805
    6. '2' → logprob: -5.198835372924805
    7. ')+' → logprob: -5.823835372924805
    8. '3' → logprob: -5.823835372924805
    9. '4' → logprob: -6.073835372924805
    10. ' ' → logprob: -6.198835372924805

Token 1377: '7' (ID: 22)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.7161816954612732
    2. '7' → logprob: -0.7161816954612732
    3. '3' → logprob: -4.716181755065918
    4. '+' → logprob: -4.841181755065918
    5. ' ' → logprob: -6.841181755065918
    6. '2' → logprob: -7.091181755065918
    7. '```' → logprob: -7.216181755065918
    8. '4' → logprob: -7.341181755065918
    9. '0' → logprob: -7.591181755065918
    10. '5' → logprob: -7.716181755065918

Token 1378: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19672411680221558
    2. ']' → logprob: -1.8217241764068604
    3. ')
' → logprob: -5.321723937988281
    4. '       ' → logprob: -6.321723937988281
    5. '   ' → logprob: -6.446723937988281
    6. '])' → logprob: -6.446723937988281
    7. '[' → logprob: -6.821723937988281
    8. '
' → logprob: -6.946723937988281
    9. '```' → logprob: -7.071723937988281
    10. '1' → logprob: -7.696723937988281

Token 1379: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.33282312750816345
    2. '       ' → logprob: -1.4578231573104858
    3. ' dp' → logprob: -3.0828230381011963
    4. '   ' → logprob: -6.707823276519775
    5. 'import' → logprob: -7.207823276519775
    6. '	dp' → logprob: -7.332823276519775
    7. '[' → logprob: -8.082822799682617
    8. '[
' → logprob: -8.332822799682617
    9. '(dp' → logprob: -8.582822799682617
    10. ']' → logprob: -8.582822799682617

Token 1380: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.069679856300354
    2. '       ' → logprob: -3.0696797370910645
    3. 'import' → logprob: -4.3196797370910645
    4. ' dp' → logprob: -5.9446797370910645
    5. 'from' → logprob: -6.3196797370910645
    6. '#' (adapté à ' #') → logprob: -6.4446797370910645
    7. ')' → logprob: -7.8196797370910645
    8. ']' → logprob: -8.194680213928223
    9. 'k' → logprob: -9.194680213928223
    10. '```' → logprob: -9.194680213928223

Token 1381: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05718096345663071
    2. 'import' → logprob: -3.307180881500244
    3. 'from' → logprob: -4.182180881500244
    4. '#' → logprob: -5.807180881500244
    5. '       ' → logprob: -7.932180881500244
    6. ' dp' → logprob: -10.057181358337402
    7. '
' → logprob: -10.182181358337402
    8. 'INF' → logprob: -10.182181358337402
    9. 'LOG' → logprob: -10.682181358337402
    10. 'k' → logprob: -10.682181358337402

Token 1382: ' va' (ID: 3423)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8039783835411072
    2. '#' → logprob: -1.678978443145752
    3. ' #' → logprob: -2.303978443145752
    4. 'def' → logprob: -2.553978443145752
    5. ' va' → logprob: -2.553978443145752
    6. 'vais' → logprob: -3.928978443145752
    7. 'continue' → logprob: -4.428978443145752
    8. ' continue' → logprob: -4.928978443145752
    9. ' vais' → logprob: -4.928978443145752
    10. 'contin' → logprob: -5.303978443145752

Token 1383: ' représ' (ID: 31534)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.8312852382659912
    2. 'faire' → logprob: -1.7062852382659912
    3. 'stock' → logprob: -2.331285238265991
    4. 'import' → logprob: -2.581285238265991
    5. 'impl' → logprob: -3.581285238265991
    6. 'st' → logprob: -4.08128547668457
    7. 'optim' → logprob: -4.20628547668457
    8. 'contin' → logprob: -4.20628547668457
    9. 'con' → logprob: -4.20628547668457
    10. 'initial' → logprob: -4.45628547668457

Token 1384: 'enter' (ID: 3547)
  Prédit: 'enter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enter' → logprob: -5.526570384972729e-05
    2. 'n' → logprob: -10.500055313110352
    3. 'ent' → logprob: -11.125055313110352
    4. 'ter' → logprob: -13.000055313110352
    5. 'anter' → logprob: -13.375055313110352
    6. 'inter' → logprob: -13.750055313110352
    7. '#' → logprob: -13.750055313110352
    8. 'er' → logprob: -13.875055313110352
    9. 'u' → logprob: -14.250055313110352
    10. '               ' → logprob: -14.625055313110352

Token 1385: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.012634200043976307
    2. ' dp' → logprob: -4.51263427734375
    3. '   ' → logprob: -7.76263427734375
    4. '[]' → logprob: -8.26263427734375
    5. 'next' → logprob: -8.76263427734375
    6. '       ' → logprob: -9.38763427734375
    7. 'les' → logprob: -9.76263427734375
    8. ' ' → logprob: -9.88763427734375
    9. '	dp' → logprob: -9.88763427734375
    10. '[
' → logprob: -9.88763427734375

Token 1386: ' par' (ID: 686)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20645681023597717
    2. ' =' → logprob: -1.8314567804336548
    3. '=[]' → logprob: -4.206456661224365
    4. '=[' → logprob: -5.206456661224365
    5. '[' → logprob: -6.081456661224365
    6. '[k' → logprob: -6.331456661224365
    7. '=[]
' → logprob: -7.331456661224365
    8. '[]' → logprob: -8.331457138061523
    9. 'k' → logprob: -8.706457138061523
    10. ']' → logprob: -9.206457138061523

Token 1387: ' une' (ID: 2463)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3976212739944458
    2. '[next' → logprob: -2.1476211547851562
    3. '[' → logprob: -2.3976211547851562
    4. 'next' → logprob: -3.3976211547851562
    5. 'list' → logprob: -3.6476211547851562
    6. 'dp' → logprob: -4.397621154785156
    7. 'dict' → logprob: -4.522621154785156
    8. '[]
' → logprob: -4.647621154785156
    9. '[
' → logprob: -5.022621154785156
    10. 'a' → logprob: -5.772621154785156

Token 1388: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.16535437107086182
    2. 'dict' → logprob: -1.9153543710708618
    3. 'def' → logprob: -6.165354251861572
    4. ' list' → logprob: -6.665354251861572
    5. 'dictionary' → logprob: -7.665354251861572
    6. 'liste' → logprob: -7.915354251861572
    7. ' dict' → logprob: -8.54035472869873
    8. 'List' → logprob: -9.16535472869873
    9. '3' → logprob: -9.29035472869873
    10. 'deque' → logprob: -9.41535472869873

Token 1389: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6275536417961121
    2. '=' → logprob: -2.002553701400757
    3. '=[]' → logprob: -2.002553701400757
    4. '[]' → logprob: -2.252553701400757
    5. 'dp' → logprob: -3.627553701400757
    6. 'of' → logprob: -3.752553701400757
    7. '_of' → logprob: -4.627553462982178
    8. '=[]
' → logprob: -4.877553462982178
    9. '_dp' → logprob: -4.877553462982178
    10. '[' → logprob: -5.252553462982178

Token 1390: ' matrices' (ID: 75935)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.09025899320840836
    2. 'd' → logprob: -2.965259075164795
    3. 'list' → logprob: -3.965259075164795
    4. '2' → logprob: -5.090259075164795
    5. 'lists' → logprob: -5.840259075164795
    6. 'mat' → logprob: -5.840259075164795
    7. 'next' → logprob: -7.215259075164795
    8. 'None' → logprob: -7.590259075164795
    9. 'tu' → logprob: -7.965259075164795
    10. '[' → logprob: -7.965259075164795

Token 1391: '.' (ID: 13)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06310317665338516
    2. ' =' → logprob: -3.438103199005127
    3. '=' → logprob: -4.188103199005127
    4. ']' → logprob: -5.688103199005127
    5. '[]' → logprob: -6.063103199005127
    6. '=[]
' → logprob: -6.313103199005127
    7. '[]
' → logprob: -6.563103199005127
    8. '=[]' → logprob: -6.688103199005127
    9. '[' → logprob: -7.063103199005127
    10. '=
' → logprob: -7.688103199005127

Token 1392: ' Stock' (ID: 16382)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0073505667969584465
    2. ' dp' → logprob: -5.257350444793701
    3. '[]' → logprob: -6.882350444793701
    4. '[]
' → logprob: -7.382350444793701
    5. '[
' → logprob: -8.88235092163086
    6. '[' → logprob: -9.25735092163086
    7. '       ' → logprob: -9.75735092163086
    8. 'import' → logprob: -10.63235092163086
    9. ']' → logprob: -10.63235092163086
    10. '```' → logprob: -10.75735092163086

Token 1393: 'er' (ID: 259)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ée' → logprob: -1.6800763607025146
    2. '=' → logprob: -1.9300763607025146
    3. 'age' → logprob: -1.9300763607025146
    4. 'é' → logprob: -2.3050763607025146
    5. '[' → logprob: -2.4300763607025146
    6. 'ées' → logprob: -2.4300763607025146
    7. '[next' → logprob: -3.3050763607025146
    8. '[
' → logprob: -3.4300763607025146
    9. '[]' → logprob: -3.5550763607025146
    10. 'dp' → logprob: -3.6800763607025146

Token 1394: ' environ' (ID: 18585)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.844174861907959
    2. 'dp' → logprob: -1.094174861907959
    3. ' =' → logprob: -2.844174861907959
    4. '[' → logprob: -2.969174861907959
    5. '[next' → logprob: -3.344174861907959
    6. ' dp' → logprob: -4.719174861907959
    7. '=' → logprob: -4.844174861907959
    8. '[
' → logprob: -4.844174861907959
    9. 'next' → logprob: -4.844174861907959
    10. '[(' → logprob: -5.219174861907959

Token 1395: ' ' (ID: 220)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -1.3690037727355957
    2. '[' → logprob: -1.6190037727355957
    3. '2' → logprob: -1.9940037727355957
    4. '25' → logprob: -2.3690037727355957
    5. '[]' → logprob: -2.4940037727355957
    6. 'max' → logprob: -3.1190037727355957
    7. '24' → logprob: -3.2440037727355957
    8. '10' → logprob: -3.7440037727355957
    9. '[max' → logprob: -3.7440037727355957
    10. '[]
' → logprob: -3.8690037727355957

Token 1396: '25' (ID: 1161)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.0693738460540771
    2. '[' → logprob: -1.5693738460540771
    3. '10' → logprob: -2.194373846054077
    4. '[[' → logprob: -2.319373846054077
    5. '[
' → logprob: -2.694373846054077
    6. '2' → logprob: -3.069373846054077
    7. '100' → logprob: -4.069374084472656
    8. '1' → logprob: -4.069374084472656
    9. '[]
' → logprob: -4.444374084472656
    10. '[{' → logprob: -4.694374084472656

Token 1397: ' matrices' (ID: 75935)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.885832667350769
    2. '[' → logprob: -2.2608327865600586
    3. '_dp' → logprob: -2.2608327865600586
    4. '[
' → logprob: -2.5108327865600586
    5. '.append' → logprob: -2.6358327865600586
    6. '[]' → logprob: -2.7608327865600586
    7. '=' → logprob: -3.1358327865600586
    8. ']' → logprob: -3.6358327865600586
    9. '[[' → logprob: -4.385832786560059
    10. ' =' → logprob: -4.635832786560059

Token 1398: ' de' (ID: 334)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03335300460457802
    2. '       ' → logprob: -4.658352851867676
    3. ' dp' → logprob: -5.033352851867676
    4. '[]
' → logprob: -5.533352851867676
    5. ' =' → logprob: -6.033352851867676
    6. '
' → logprob: -6.283352851867676
    7. '[]' → logprob: -6.658352851867676
    8. '[' → logprob: -6.908352851867676
    9. '   ' → logprob: -6.908352851867676
    10. '[
' → logprob: -7.408352851867676

Token 1399: ' ' (ID: 220)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.665834367275238
    2. 'size' → logprob: -1.2908344268798828
    3. 'H' → logprob: -2.165834426879883
    4. '[(' → logprob: -3.790834426879883
    5. 'tu' → logprob: -4.165834426879883
    6. 'next' → logprob: -4.540834426879883
    7. '[' → logprob: -4.790834426879883
    8. '[[' → logprob: -4.915834426879883
    9. '100' → logprob: -5.165834426879883
    10. 'positions' → logprob: -5.915834426879883

Token 1400: '100' (ID: 1353)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.5852333307266235
    2. 'H' → logprob: -1.2102333307266235
    3. 'size' → logprob: -3.085233211517334
    4. '[[' → logprob: -3.335233211517334
    5. '[' → logprob: -3.710233211517334
    6. '[(' → logprob: -3.835233211517334
    7. '2' → logprob: -6.335233211517334
    8. 'next' → logprob: -6.335233211517334
    9. 'tuple' → logprob: -6.335233211517334
    10. 'tu' → logprob: -6.585233211517334

Token 1401: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.034592388459714e-06
    2. '000' → logprob: -12.500005722045898
    3. '00' → logprob: -13.625005722045898
    4. '
' → logprob: -15.375005722045898
    5. '```' → logprob: -15.375005722045898
    6. '   ' → logprob: -16.0000057220459
    7. '#' → logprob: -16.6250057220459
    8. 'x' → logprob: -17.0625057220459
    9. '       ' → logprob: -17.0625057220459
    10. ' ' → logprob: -17.1875057220459

Token 1402: 'x' (ID: 87)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008124561980366707
    2. '*' → logprob: -5.258124351501465
    3. 'x' → logprob: -6.133124351501465
    4. '```' → logprob: -8.133124351501465
    5. '
' → logprob: -8.633124351501465
    6. '000' → logprob: -10.008124351501465
    7. '×' → logprob: -10.258124351501465
    8. ' x' → logprob: -10.758124351501465
    9. '00' → logprob: -10.758124351501465
    10. ' ' → logprob: -11.008124351501465

Token 1403: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.023567475378513336
    2. 'W' → logprob: -3.7735674381256104
    3. '
' → logprob: -8.648567199707031
    4. ' ' → logprob: -10.148567199707031
    5. '```' → logprob: -10.273567199707031
    6. '   ' → logprob: -10.398567199707031
    7. ' W' → logprob: -11.523567199707031
    8. '`' → logprob: -12.273567199707031
    9. 'H' → logprob: -12.773567199707031
    10. '150' → logprob: -12.898567199707031

Token 1404: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.531315314830863e-06
    2. '       ' → logprob: -13.875003814697266
    3. '```' → logprob: -14.000003814697266
    4. '[' → logprob: -14.875003814697266
    5. '#' → logprob: -15.000003814697266
    6. '00' → logprob: -15.750003814697266
    7. '{
' → logprob: -15.875003814697266
    8. ']' → logprob: -15.875003814697266
    9. '000' → logprob: -16.250003814697266
    10. '][' → logprob: -16.625003814697266

Token 1405: ' est' (ID: 893)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5967349410057068
    2. '       ' → logprob: -1.0967350006103516
    3. '   ' → logprob: -3.8467350006103516
    4. ' dp' → logprob: -3.9717350006103516
    5. '[' → logprob: -4.596735000610352
    6. '
' → logprob: -4.596735000610352
    7. ']' → logprob: -4.721735000610352
    8. ',' → logprob: -4.846735000610352
    9. '[]' → logprob: -5.346735000610352
    10. ')' → logprob: -5.596735000610352

Token 1406: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.4371335804462433
    2. 'import' → logprob: -2.062133550643921
    3. 'im' → logprob: -2.562133550643921
    4. 'd' → logprob: -3.062133550643921
    5. '```' → logprob: -3.562133550643921
    6. 'in' → logprob: -4.5621337890625
    7. 'pas' → logprob: -4.9371337890625
    8. '
' → logprob: -5.1871337890625
    9. ' possible' → logprob: -5.4371337890625
    10. 'fe' → logprob: -5.4371337890625

Token 1407: ' en' (ID: 469)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11932822316884995
    2. '       ' → logprob: -2.994328260421753
    3. ' dp' → logprob: -3.744328260421753
    4. '
' → logprob: -4.244328022003174
    5. ',' → logprob: -4.994328022003174
    6. ',
' → logprob: -5.619328022003174
    7. ' =' → logprob: -6.119328022003174
    8. '   ' → logprob: -6.119328022003174
    9. '=' → logprob: -6.619328022003174
    10. '[]
' → logprob: -6.869328022003174

Token 1408: ' mémoire' (ID: 79071)
  Prédit: 'mé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mé' → logprob: -0.0739700123667717
    2. 'memo' → logprob: -3.323970079421997
    3. 'mem' → logprob: -3.698970079421997
    4. '```' → logprob: -5.573969841003418
    5. 'ram' → logprob: -6.073969841003418
    6. ' mémoire' → logprob: -6.198969841003418
    7. 'memory' → logprob: -7.198969841003418
    8. 'raison' → logprob: -7.323969841003418
    9. 'python' → logprob: -7.698969841003418
    10. 'm' → logprob: -8.823969841003418

Token 1409: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7839144468307495
    2. 'dp' → logprob: -0.7839144468307495
    3. ' dp' → logprob: -3.408914566040039
    4. '
' → logprob: -3.408914566040039
    5. 'import' → logprob: -5.033914566040039
    6. ',' → logprob: -5.533914566040039
    7. '   ' → logprob: -5.783914566040039
    8. '        
' → logprob: -6.783914566040039
    9. '(dp' → logprob: -6.908914566040039
    10. '	dp' → logprob: -7.408914566040039

Token 1410: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22826413810253143
    2. 'dp' → logprob: -1.6032640933990479
    3. ' dp' → logprob: -6.728264331817627
    4. '   ' → logprob: -7.728264331817627
    5. '	dp' → logprob: -7.978264331817627
    6. '        
' → logprob: -8.228263854980469
    7. 'import' → logprob: -8.603263854980469
    8. '(dp' → logprob: -9.853263854980469
    9. '[' → logprob: -9.978263854980469
    10. '```' → logprob: -9.978263854980469

Token 1411: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.03718707710504532
    2. '       ' → logprob: -3.412187099456787
    3. 'import' → logprob: -6.037187099456787
    4. ' dp' → logprob: -7.162187099456787
    5. 'from' → logprob: -8.162186622619629
    6. '   ' → logprob: -10.412186622619629
    7. '
' → logprob: -11.287186622619629
    8. 'max' → logprob: -12.287186622619629
    9. 'k' → logprob: -12.412186622619629
    10. '```' → logprob: -12.537186622619629

Token 1412: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5237343311309814
    2. '=' → logprob: -0.8987343311309814
    3. '=[' → logprob: -7.773734092712402
    4. '=[]' → logprob: -8.898734092712402
    5. ' =[' → logprob: -10.898734092712402
    6. '[' → logprob: -11.023734092712402
    7. '=[]
' → logprob: -12.273734092712402
    8. '=[[' → logprob: -12.648734092712402
    9. '_' → logprob: -13.148734092712402
    10. '0' → logprob: -13.523734092712402

Token 1413: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08300969004631042
    2. '[next' → logprob: -2.583009719848633
    3. '[max' → logprob: -6.208009719848633
    4. '[n' → logprob: -7.583009719848633
    5. '[num' → logprob: -7.708009719848633
    6. '[new' → logprob: -9.083009719848633
    7. '[now' → logprob: -9.208009719848633
    8. '[array' → logprob: -9.333009719848633
    9. '[m' → logprob: -9.458009719848633
    10. '[number' → logprob: -9.833009719848633

Token 1414: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.00012582694762386382
    2. '[next' → logprob: -9.000125885009766
    3. ' next' → logprob: -13.500125885009766
    4. '[' → logprob: -14.000125885009766
    5. '(next' → logprob: -15.750125885009766
    6. '[[' → logprob: -16.125125885009766
    7. '	next' → logprob: -18.250125885009766
    8. 'None' → logprob: -19.500125885009766
    9. '   ' → logprob: -20.000125885009766
    10. 'Next' → logprob: -20.125125885009766

Token 1415: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -6.704273118884885e-07
    2. ' _' → logprob: -15.625000953674316
    3. '_token' → logprob: -16.125
    4. '```' → logprob: -16.125
    5. '_val' → logprob: -17.0
    6. ''_' → logprob: -17.25
    7. ']_' → logprob: -17.5
    8. 'Pos' → logprob: -17.625
    9. 'pos' → logprob: -18.125
    10. '._' → logprob: -18.5

Token 1416: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00023238400171976537
    2. ' ]' → logprob: -9.000232696533203
    3. ']
' → logprob: -9.375232696533203
    4. ')' → logprob: -11.750232696533203
    5. '   ' → logprob: -12.250232696533203
    6. '       ' → logprob: -12.875232696533203
    7. ')]' → logprob: -13.250232696533203
    8. '[]' → logprob: -13.625232696533203
    9. ']

' → logprob: -13.750232696533203
    10. ',' → logprob: -14.125232696533203

Token 1417: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1418: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4666559398174286
    2. 'for' → logprob: -1.716655969619751
    3. '<|end|>' → logprob: -2.591655969619751
    4. 'while' → logprob: -3.341655969619751
    5. ' for' → logprob: -3.466655969619751
    6. ')' → logprob: -3.841655969619751
    7. '<|end|>' → logprob: -4.966655731201172
    8. 'max' → logprob: -4.966655731201172
    9. ']' → logprob: -6.091655731201172
    10. ',' → logprob: -6.216655731201172

Token 1419: ' dp' (ID: 21546)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.974026620388031
    2. 'for' → logprob: -1.3490266799926758
    3. '
' → logprob: -2.349026679992676
    4. 'while' → logprob: -2.599026679992676
    5. ')' → logprob: -2.974026679992676
    6. ']' → logprob: -3.599026679992676
    7. ' for' → logprob: -3.849026679992676
    8. '#' → logprob: -4.224026679992676
    9. 'import' → logprob: -4.349026679992676
    10. '<|end|>' → logprob: -4.849026679992676

Token 1420: '[' (ID: 58)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.5369942784309387
    2. '[' → logprob: -1.036994218826294
    3. '0' → logprob: -4.161994457244873
    4. ' =' → logprob: -4.286994457244873
    5. '=' → logprob: -4.411994457244873
    6. '[-' → logprob: -5.411994457244873
    7. '_k' → logprob: -5.661994457244873
    8. '=[' → logprob: -6.036994457244873
    9. '_append' → logprob: -6.286994457244873
    10. 'append' → logprob: -6.411994457244873

Token 1421: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.371605948312208e-05
    2. '[' → logprob: -11.000053405761719
    3. ' ' → logprob: -11.625053405761719
    4. ']' → logprob: -12.000053405761719
    5. '1' → logprob: -12.125053405761719
    6. '```' → logprob: -13.000053405761719
    7. '=' → logprob: -13.125053405761719
    8. '
' → logprob: -13.125053405761719
    9. '#' → logprob: -13.250053405761719
    10. '][' → logprob: -13.750053405761719

Token 1422: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003797703655436635
    2. '])' → logprob: -5.87879753112793
    3. ')' → logprob: -7.87879753112793
    4. ' ]' → logprob: -8.87879753112793
    5. '][' → logprob: -9.25379753112793
    6. ')]' → logprob: -9.50379753112793
    7. '=' → logprob: -9.75379753112793
    8. ']
' → logprob: -9.87879753112793
    9. ']=' → logprob: -9.87879753112793
    10. '])]' → logprob: -10.37879753112793

Token 1423: ' correspond' (ID: 11095)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2669997215270996
    2. ']' → logprob: -1.5169997215270996
    3. ' =' → logprob: -1.6419997215270996
    4. '<|end|>' → logprob: -1.6419997215270996
    5. '=' → logprob: -2.3919997215270996
    6. '<|end|>' → logprob: -4.8919997215271
    7. '
' → logprob: -6.6419997215271
    8. '.' → logprob: -7.1419997215271
    9. '.append' → logprob: -7.1419997215271
    10. ',' → logprob: -7.1419997215271

Token 1424: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00323867448605597
    2. 'to' → logprob: -6.253238677978516
    3. ' =' → logprob: -7.378238677978516
    4. ' to' → logprob: -7.628238677978516
    5. '_to' → logprob: -9.003238677978516
    6. '=
' → logprob: -11.503238677978516
    7. '[next' → logprob: -11.753238677978516
    8. '_next' → logprob: -11.878238677978516
    9. 'next' → logprob: -11.878238677978516
    10. ']' → logprob: -12.128238677978516

Token 1425: ' ' (ID: 220)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.011989162303507328
    2. ' next' → logprob: -4.761989116668701
    3. 'dp' → logprob: -6.261989116668701
    4. 'la' → logprob: -6.886989116668701
    5. '[next' → logprob: -8.88698959350586
    6. 'the' → logprob: -9.38698959350586
    7. 'le' → logprob: -9.63698959350586
    8. ' la' → logprob: -10.01198959350586
    9. 'l' → logprob: -10.26198959350586
    10. '(next' → logprob: -10.76198959350586

Token 1426: '1' (ID: 16)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.000597712118178606
    2. ' next' → logprob: -7.6255974769592285
    3. 'dp' → logprob: -9.750597953796387
    4. '[next' → logprob: -10.250597953796387
    5. 'la' → logprob: -12.000597953796387
    6. '(next' → logprob: -12.125597953796387
    7. 'l' → logprob: -13.750597953796387
    8. 'the' → logprob: -14.125597953796387
    9. 'first' → logprob: -14.875597953796387
    10. 'le' → logprob: -15.000597953796387

Token 1427: ' promenade' (ID: 148184)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8086614608764648
    2. ')' → logprob: -1.3086614608764648
    3. '_prom' → logprob: -1.5586614608764648
    4. 'prom' → logprob: -4.058661460876465
    5. '_pos' → logprob: -4.433661460876465
    6. ' promenade' → logprob: -5.308661460876465
    7. '])' → logprob: -5.308661460876465
    8. ' ' → logprob: -5.433661460876465
    9. '_pow' → logprob: -5.558661460876465
    10. '```' → logprob: -5.558661460876465

Token 1428: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.021191483363509178
    2. '<|end|>' → logprob: -4.896191596984863
    3. ')' → logprob: -5.021191596984863
    4. '  
' → logprob: -6.396191596984863
    5. ' 
' → logprob: -6.896191596984863
    6. 'for' → logprob: -7.271191596984863
    7. '<|end|>' → logprob: -7.396191596984863
    8. ')
' → logprob: -7.771191596984863
    9. '       ' → logprob: -8.021191596984863
    10. 'while' → logprob: -8.021191596984863

Token 1429: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2687494158744812
    2. 'while' → logprob: -2.518749475479126
    3. ' for' → logprob: -2.893749475479126
    4. 'max' → logprob: -3.393749475479126
    5. '
' → logprob: -3.393749475479126
    6. '```' → logprob: -4.643749237060547
    7. '       ' → logprob: -5.143749237060547
    8. 'dp' → logprob: -6.143749237060547
    9. '   ' → logprob: -6.268749237060547
    10. ' while' → logprob: -6.268749237060547

Token 1430: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4305969774723053
    2. 'k' → logprob: -1.305596947669983
    3. 'while' → logprob: -2.6805970668792725
    4. ' for' → logprob: -4.930596828460693
    5. 'max' → logprob: -6.555596828460693
    6. ' k' → logprob: -8.055597305297852
    7. '       ' → logprob: -8.055597305297852
    8. 'from' → logprob: -8.180597305297852
    9. 'import' → logprob: -8.305597305297852
    10. '```' → logprob: -8.680597305297852

Token 1431: ' Construction' (ID: 31452)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13894040882587433
    2. 'k' → logprob: -2.6389403343200684
    3. 'while' → logprob: -2.8889403343200684
    4. ' for' → logprob: -6.513940334320068
    5. 'max' → logprob: -7.888940334320068
    6. '1' → logprob: -8.388940811157227
    7. '       ' → logprob: -8.888940811157227
    8. '
' → logprob: -9.263940811157227
    9. ' while' → logprob: -10.013940811157227
    10. '```' → logprob: -10.138940811157227

Token 1432: ' dp' (ID: 21546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10209338366985321
    2. ' for' → logprob: -2.477093458175659
    3. '       ' → logprob: -4.47709321975708
    4. '
' → logprob: -7.97709321975708
    5. 'k' → logprob: -8.227093696594238
    6. '[' → logprob: -8.477093696594238
    7. 'while' → logprob: -8.602093696594238
    8. 'dp' → logprob: -8.977093696594238
    9. '        
' → logprob: -9.602093696594238
    10. ']' → logprob: -9.852093696594238

Token 1433: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08357126265764236
    2. ' for' → logprob: -2.958571195602417
    3. '
' → logprob: -4.458571434020996
    4. '       ' → logprob: -4.958571434020996
    5. 'while' → logprob: -5.958571434020996
    6. 'dp' → logprob: -6.333571434020996
    7. '[' → logprob: -6.708571434020996
    8. 'k' → logprob: -6.833571434020996
    9. '   ' → logprob: -7.583571434020996
    10. '        
' → logprob: -7.958571434020996

Token 1434: ' les' (ID: 1341)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7762078642845154
    2. 'range' → logprob: -1.2762079238891602
    3. '1' → logprob: -1.5262079238891602
    4. ' k' → logprob: -4.27620792388916
    5. 'max' → logprob: -4.65120792388916
    6. ' range' → logprob: -4.90120792388916
    7. '_range' → logprob: -6.02620792388916
    8. '_k' → logprob: -6.15120792388916
    9. ' ' → logprob: -6.52620792388916
    10. 'pow' → logprob: -6.65120792388916

Token 1435: ' puiss' (ID: 102546)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23084263503551483
    2. 'k' → logprob: -1.6058425903320312
    3. ' k' → logprob: -5.355842590332031
    4. ' ' → logprob: -8.105842590332031
    5. 'range' → logprob: -8.230842590332031
    6. '_' → logprob: -10.355842590332031
    7. ' range' → logprob: -10.605842590332031
    8. 'len' → logprob: -10.855842590332031
    9. '_k' → logprob: -11.105842590332031
    10. '
' → logprob: -11.355842590332031

Token 1436: 'ances' (ID: 3528)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.87874835729599
    2. '=' → logprob: -1.8787484169006348
    3. '[' → logprob: -1.8787484169006348
    4. '               ' → logprob: -2.3787484169006348
    5. '0' → logprob: -2.7537484169006348
    6. '           ' → logprob: -4.003748416900635
    7. '   ' → logprob: -4.128748416900635
    8. 'er' → logprob: -4.378748416900635
    9. '][' → logprob: -4.628748416900635
    10. 'et' → logprob: -4.753748416900635

Token 1437: ' sup' (ID: 1982)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.2947484254837036
    2. ' =' → logprob: -1.5447484254837036
    3. '=' → logprob: -1.6697484254837036
    4. '       ' → logprob: -1.9197484254837036
    5. 'k' → logprob: -2.544748306274414
    6. '[' → logprob: -3.544748306274414
    7. '[-' → logprob: -4.044748306274414
    8. '[k' → logprob: -4.544748306274414
    9. '           ' → logprob: -4.669748306274414
    10. '_k' → logprob: -4.669748306274414

Token 1438: 'érieures' (ID: 108978)
  Prédit: 'érieures'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieures' → logprob: -0.18233585357666016
    2. '[' → logprob: -2.43233585357666
    3. 'érieure' → logprob: -3.55733585357666
    4. 'érieurs' → logprob: -3.55733585357666
    5. 'érie' → logprob: -5.05733585357666
    6. ']' → logprob: -5.30733585357666
    7. 'érieur' → logprob: -5.80733585357666
    8. '       ' → logprob: -6.93233585357666
    9. '][' → logprob: -7.05733585357666
    10. '#' → logprob: -7.30733585357666

Token 1439: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.81521075963974
    2. ' for' → logprob: -1.4402108192443848
    3. '       ' → logprob: -1.5652108192443848
    4. ',' → logprob: -3.1902108192443848
    5. '[' → logprob: -4.190210819244385
    6. '   ' → logprob: -4.315210819244385
    7. 'k' → logprob: -4.440210819244385
    8. 'while' → logprob: -5.440210819244385
    9. ' k' → logprob: -5.690210819244385
    10. '=' → logprob: -5.690210819244385

Token 1440: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011473464779555798
    2. '   ' → logprob: -6.011473655700684
    3. 'for' → logprob: -6.136473655700684
    4. '        
' → logprob: -6.386473655700684
    5. ' for' → logprob: -6.636473655700684
    6. ',' → logprob: -7.011473655700684
    7. '           ' → logprob: -7.136473655700684
    8. '
' → logprob: -7.636473655700684
    9. '[' → logprob: -8.011473655700684
    10. ' k' → logprob: -8.511473655700684

Token 1441: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06984250247478485
    2. ' for' → logprob: -3.194842576980591
    3. 'k' → logprob: -4.319842338562012
    4. '       ' → logprob: -4.694842338562012
    5. 'while' → logprob: -6.319842338562012
    6. ' k' → logprob: -6.944842338562012
    7. '           ' → logprob: -7.569842338562012
    8. '   ' → logprob: -8.444842338562012
    9. '```' → logprob: -8.569842338562012
    10. '
' → logprob: -8.694842338562012

Token 1442: ' dp' (ID: 21546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34835389256477356
    2. 'k' → logprob: -1.3483538627624512
    3. ' for' → logprob: -3.723353862762451
    4. 'while' → logprob: -5.223353862762451
    5. ' k' → logprob: -5.598353862762451
    6. '       ' → logprob: -7.098353862762451
    7. 'pow' → logprob: -8.47335433959961
    8. ' while' → logprob: -9.97335433959961
    9. 'power' → logprob: -10.09835433959961
    10. '```' → logprob: -10.84835433959961

Token 1443: '[k' (ID: 14298)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.2786719501018524
    2. '_k' → logprob: -1.7786719799041748
    3. 'k' → logprob: -3.403671979904175
    4. '_last' → logprob: -5.028671741485596
    5. '_prev' → logprob: -5.153671741485596
    6. '0' → logprob: -5.778671741485596
    7. '_current' → logprob: -5.903671741485596
    8. 'for' → logprob: -5.903671741485596
    9. '_len' → logprob: -6.403671741485596
    10. '_level' → logprob: -6.528671741485596

Token 1444: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7378402948379517
    2. '=' → logprob: -0.8628402948379517
    3. ']' → logprob: -3.112840175628662
    4. 'k' → logprob: -4.362840175628662
    5. '.append' → logprob: -4.362840175628662
    6. ']=' → logprob: -4.987840175628662
    7. '_prev' → logprob: -5.612840175628662
    8. '=[]' → logprob: -5.737840175628662
    9. '=k' → logprob: -5.862840175628662
    10. '=[' → logprob: -6.237840175628662

Token 1445: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18547506630420685
    2. ' =' → logprob: -1.8104751110076904
    3. '=[]' → logprob: -5.810474872589111
    4. '.append' → logprob: -6.560474872589111
    5. '=[]
' → logprob: -8.18547534942627
    6. '=[' → logprob: -8.31047534942627
    7. '_prev' → logprob: -8.56047534942627
    8. '=
' → logprob: -9.43547534942627
    9. '_last' → logprob: -9.68547534942627
    10. 'dp' → logprob: -9.81047534942627

Token 1446: ' dp' (ID: 21546)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0012220130302011967
    2. '[]
' → logprob: -7.251222133636475
    3. '[' → logprob: -8.001221656799316
    4. '[]' → logprob: -9.251221656799316
    5. ' [[' → logprob: -9.501221656799316
    6. '[
' → logprob: -12.251221656799316
    7. '[['' → logprob: -14.126221656799316
    8. '[]

' → logprob: -15.001221656799316
    9. ' [' → logprob: -16.751222610473633
    10. '[][]' → logprob: -16.876222610473633

Token 1447: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.7313917279243469
    2. '[-' → logprob: -0.7313917279243469
    3. '.append' → logprob: -3.981391668319702
    4. '+' → logprob: -5.231391906738281
    5. 'dp' → logprob: -5.856391906738281
    6. 'k' → logprob: -5.981391906738281
    7. '[' → logprob: -6.606391906738281
    8. '=' → logprob: -6.981391906738281
    9. '[
' → logprob: -6.981391906738281
    10. 'append' → logprob: -7.106391906738281

Token 1448: '-' (ID: 12)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.25473567843437195
    2. '[k' → logprob: -1.8797357082366943
    3. '-' → logprob: -2.7547357082366943
    4. '.append' → logprob: -6.254735469818115
    5. 'k' → logprob: -6.879735469818115
    6. 'dp' → logprob: -7.129735469818115
    7. '=' → logprob: -7.129735469818115
    8. 'def' → logprob: -7.379735469818115
    9. '=k' → logprob: -7.629735469818115
    10. '[' → logprob: -7.754735469818115

Token 1449: '1' (ID: 16)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04534165561199188
    2. '-' → logprob: -3.545341730117798
    3. '1' → logprob: -4.295341491699219
    4. '.append' → logprob: -7.670341491699219
    5. ']' → logprob: -8.295341491699219
    6. 'dp' → logprob: -8.295341491699219
    7. 'append' → logprob: -8.670341491699219
    8. '-k' → logprob: -8.795341491699219
    9. '].' → logprob: -9.170341491699219
    10. ' -' → logprob: -9.295341491699219

Token 1450: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0620858669281006
    2. '=' → logprob: -1.8120858669281006
    3. ']' → logprob: -1.8120858669281006
    4. 'dp' → logprob: -2.6870858669281006
    5. '_next' → logprob: -2.8120858669281006
    6. 'next' → logprob: -3.5620858669281006
    7. 'def' → logprob: -3.6870858669281006
    8. '][' → logprob: -3.9370858669281006
    9. '[next' → logprob: -3.9370858669281006
    10. '
' → logprob: -4.06208610534668

Token 1451: ' o' (ID: 293)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.076488733291626
    2. 'dp' → logprob: -1.951488733291626
    3. '[next' → logprob: -2.201488733291626
    4. '[' → logprob: -2.451488733291626
    5. ' =' → logprob: -2.701488733291626
    6. 'def' → logprob: -3.076488733291626
    7. ']' → logprob: -3.701488733291626
    8. '[-' → logprob: -3.826488733291626
    9. 'next' → logprob: -3.826488733291626
    10. '#' → logprob: -4.076488494873047

Token 1452: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.003676917403936386
    2. ' dp' → logprob: -5.628676891326904
    3. '(dp' → logprob: -10.378677368164062
    4. '[' → logprob: -11.378677368164062
    5. '	dp' → logprob: -12.003677368164062
    6. 'd' → logprob: -12.253677368164062
    7. '
' → logprob: -12.378677368164062
    8. '   ' → logprob: -12.503677368164062
    9. '_dp' → logprob: -12.503677368164062
    10. 'def' → logprob: -13.128677368164062

Token 1453: '[k' (ID: 14298)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.4358811676502228
    2. '[k' → logprob: -1.0608811378479004
    3. '[' → logprob: -5.3108811378479
    4. '.append' → logprob: -7.9358811378479
    5. '
' → logprob: -8.185881614685059
    6. 'def' → logprob: -8.185881614685059
    7. '=[' → logprob: -8.560881614685059
    8. 'k' → logprob: -8.560881614685059
    9. '   ' → logprob: -9.185881614685059
    10. '```' → logprob: -9.185881614685059

Token 1454: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02356817200779915
    2. '[-' → logprob: -3.8985681533813477
    3. '[k' → logprob: -5.898568153381348
    4. 'def' → logprob: -9.523568153381348
    5. '[' → logprob: -10.023568153381348
    6. '```' → logprob: -10.398568153381348
    7. 'minus' → logprob: -10.648568153381348
    8. ' -' → logprob: -11.023568153381348
    9. 'k' → logprob: -11.148568153381348
    10. '−' → logprob: -11.523568153381348

Token 1455: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '-' → logprob: -15.000000953674316
    3. ' ' → logprob: -15.750000953674316
    4. 'k' → logprob: -16.25
    5. '
' → logprob: -16.625
    6. '   ' → logprob: -16.875
    7. '<|end|>' → logprob: -17.25
    8. '```' → logprob: -17.75
    9. ']' → logprob: -18.25
    10. '2' → logprob: -19.5

Token 1456: ']
' (ID: 1592)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.6234584450721741
    2. ']' → logprob: -1.3734583854675293
    3. '[-' → logprob: -1.7484583854675293
    4. '[' → logprob: -3.9984583854675293
    5. '][' → logprob: -4.748458385467529
    6. '][-' → logprob: -5.748458385467529
    7. ']
' → logprob: -6.498458385467529
    8. 'def' → logprob: -6.998458385467529
    9. '[len' → logprob: -7.748458385467529
    10. '       ' → logprob: -7.748458385467529

Token 1457: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04114597290754318
    2. ' =' → logprob: -4.2911458015441895
    3. 'for' → logprob: -4.5411458015441895
    4. '   ' → logprob: -4.9161458015441895
    5. ' for' → logprob: -5.7911458015441895
    6. '=' → logprob: -6.5411458015441895
    7. '[k' → logprob: -6.9161458015441895
    8. '
' → logprob: -7.2911458015441895
    9. ' k' → logprob: -7.6661458015441895
    10. ' ' → logprob: -7.9161458015441895

Token 1458: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049514465034008026
    2. 'for' → logprob: -3.5495145320892334
    3. ' for' → logprob: -4.799514293670654
    4. '
' → logprob: -5.549514293670654
    5. '   ' → logprob: -6.174514293670654
    6. 'k' → logprob: -6.549514293670654
    7. ' k' → logprob: -6.799514293670654
    8. '        
' → logprob: -7.049514293670654
    9. '           ' → logprob: -7.299514293670654
    10. '```' → logprob: -7.799514293670654

Token 1459: ' où' (ID: 15113)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05392750725150108
    2. ' for' → logprob: -3.428927421569824
    3. 'k' → logprob: -4.053927421569824
    4. '       ' → logprob: -6.428927421569824
    5. 'while' → logprob: -7.803927421569824
    6. 'dp' → logprob: -7.928927421569824
    7. ' k' → logprob: -8.178927421569824
    8. '   ' → logprob: -11.178927421569824
    9. '
' → logprob: -11.428927421569824
    10. '        
' → logprob: -11.803927421569824

Token 1460: ' o' (ID: 293)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0495833158493042
    2. 'prev' → logprob: -3.6745834350585938
    3. 'for' → logprob: -4.299583435058594
    4. ' k' → logprob: -5.424583435058594
    5. 'def' → logprob: -6.049583435058594
    6. ' prev' → logprob: -6.924583435058594
    7. ' for' → logprob: -7.049583435058594
    8. '_prev' → logprob: -8.549583435058594
    9. 'dp' → logprob: -8.924583435058594
    10. 'previous' → logprob: -9.424583435058594

Token 1461: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11788654327392578
    2. 'dp' → logprob: -3.117886543273926
    3. 'f' → logprob: -3.367886543273926
    4. '(' → logprob: -4.742886543273926
    5. '(dp' → logprob: -4.992886543273926
    6. 'p' → logprob: -5.617886543273926
    7. ' =' → logprob: -5.867886543273926
    8. '[' → logprob: -5.992886543273926
    9. ' dp' → logprob: -6.367886543273926
    10. 'def' → logprob: -6.617886543273926

Token 1462: ' la' (ID: 557)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.5968330502510071
    2. '[' → logprob: -1.5968329906463623
    3. '[[' → logprob: -1.8468329906463623
    4. '(lambda' → logprob: -2.8468329906463623
    5. ' lambda' → logprob: -4.221833229064941
    6. '[
' → logprob: -4.596833229064941
    7. ' [' → logprob: -6.096833229064941
    8. '[(' → logprob: -6.471833229064941
    9. ' [[' → logprob: -6.971833229064941
    10. 'dp' → logprob: -7.221833229064941

Token 1463: ' composition' (ID: 27524)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.18516407907009125
    2. 'def' → logprob: -2.185163974761963
    3. '(lambda' → logprob: -3.435163974761963
    4. ' lambda' → logprob: -4.185163974761963
    5. '=lambda' → logprob: -5.310163974761963
    6. 'list' → logprob: -6.185163974761963
    7. '[[' → logprob: -7.435163974761963
    8. '_lambda' → logprob: -7.560163974761963
    9. '[' → logprob: -8.435164451599121
    10. '[
' → logprob: -8.560164451599121

Token 1464: ' fonction' (ID: 17610)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.6755186319351196
    2. '[k' → logprob: -1.0505186319351196
    3. '       ' → logprob: -3.67551851272583
    4. ' =' → logprob: -3.80051851272583
    5. 'def' → logprob: -3.80051851272583
    6. 'dp' → logprob: -4.17551851272583
    7. '[' → logprob: -4.67551851272583
    8. '.append' → logprob: -4.67551851272583
    9. '           ' → logprob: -5.30051851272583
    10. '=' → logprob: -5.30051851272583

Token 1465: 'nelle' (ID: 30805)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.1881297528743744
    2. '=' → logprob: -3.3131296634674072
    3. 'def' → logprob: -3.4381296634674072
    4. ' =' → logprob: -3.5631296634674072
    5. ']' → logprob: -4.563129901885986
    6. 'for' → logprob: -4.688129901885986
    7. '       ' → logprob: -4.688129901885986
    8. '           ' → logprob: -4.938129901885986
    9. 's' → logprob: -5.563129901885986
    10. '   ' → logprob: -5.813129901885986

Token 1466: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.041466474533081
    2. '       ' → logprob: -1.291466474533081
    3. ' for' → logprob: -1.416466474533081
    4. 'k' → logprob: -3.416466474533081
    5. '[k' → logprob: -3.916466474533081
    6. 'dp' → logprob: -3.916466474533081
    7. ' =' → logprob: -4.41646671295166
    8. ' k' → logprob: -4.66646671295166
    9. '
' → logprob: -5.16646671295166
    10. '   ' → logprob: -5.54146671295166

Token 1467: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.059168536216020584
    2. 'for' → logprob: -2.934168577194214
    3. ' for' → logprob: -5.684168338775635
    4. '   ' → logprob: -7.934168338775635
    5. '
' → logprob: -8.559168815612793
    6. '        
' → logprob: -9.434168815612793
    7. 'k' → logprob: -9.684168815612793
    8. '           ' → logprob: -9.809168815612793
    9. ' k' → logprob: -10.059168815612793
    10. '```' → logprob: -10.934168815612793

Token 1468: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45275211334228516
    2. ' for' → logprob: -1.0777521133422852
    3. '       ' → logprob: -4.077752113342285
    4. 'k' → logprob: -5.577752113342285
    5. ' k' → logprob: -6.077752113342285
    6. 'dp' → logprob: -8.077752113342285
    7. '```' → logprob: -8.827752113342285
    8. '
' → logprob: -8.952752113342285
    9. '   ' → logprob: -9.827752113342285
    10. '        
' → logprob: -10.577752113342285

Token 1469: ' But' (ID: 3072)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20679228007793427
    2. ' for' → logprob: -1.7067922353744507
    3. 'k' → logprob: -5.70679235458374
    4. ' k' → logprob: -6.45679235458374
    5. '       ' → logprob: -7.70679235458374
    6. '
' → logprob: -12.456791877746582
    7. '   ' → logprob: -12.456791877746582
    8. '```' → logprob: -12.456791877746582
    9. '        
' → logprob: -12.581791877746582
    10. '_k' → logprob: -13.581791877746582

Token 1470: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0568004846572876
    2. ' for' → logprob: -1.5568004846572876
    3. ' k' → logprob: -1.5568004846572876
    4. 'for' → logprob: -1.9318004846572876
    5. 'k' → logprob: -2.806800365447998
    6. '
' → logprob: -4.556800365447998
    7. '```' → logprob: -5.056800365447998
    8. '        
' → logprob: -6.556800365447998
    9. '   ' → logprob: -6.681800365447998
    10. '[k' → logprob: -7.181800365447998

Token 1471: ' dp' (ID: 21546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27870506048202515
    2. ' for' → logprob: -1.90370512008667
    3. 'k' → logprob: -2.52870512008667
    4. ' k' → logprob: -4.27870512008667
    5. '       ' → logprob: -7.77870512008667
    6. 'max' → logprob: -9.528704643249512
    7. '   ' → logprob: -10.278704643249512
    8. 'while' → logprob: -10.528704643249512
    9. ' max' → logprob: -12.028704643249512
    10. 'prev' → logprob: -12.028704643249512

Token 1472: '[k' (ID: 14298)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.2501903474330902
    2. '.append' → logprob: -1.8751903772354126
    3. 'k' → logprob: -3.500190258026123
    4. ' =' → logprob: -4.250190258026123
    5. '_next' → logprob: -5.000190258026123
    6. '_prev' → logprob: -5.875190258026123
    7. '_' → logprob: -6.000190258026123
    8. '_len' → logprob: -6.125190258026123
    9. '[k' → logprob: -6.500190258026123
    10. '[-' → logprob: -6.875190258026123

Token 1473: '][' (ID: 2696)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.29266980290412903
    2. '=' → logprob: -2.9176697731018066
    3. ']' → logprob: -3.2926697731018066
    4. '.append' → logprob: -3.5426697731018066
    5. '[k' → logprob: -3.6676697731018066
    6. ' =' → logprob: -3.7926697731018066
    7. '][-' → logprob: -3.7926697731018066
    8. '-' → logprob: -3.9176697731018066
    9. '].' → logprob: -4.667669773101807
    10. '][' → logprob: -4.792669773101807

Token 1474: 'i' (ID: 72)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8121230602264404
    2. 'k' → logprob: -1.4371230602264404
    3. '0' → logprob: -1.8121230602264404
    4. 'i' → logprob: -2.3121230602264404
    5. ' -' → logprob: -3.5621230602264404
    6. ']' → logprob: -5.5621232986450195
    7. '
' → logprob: -5.6871232986450195
    8. '-k' → logprob: -5.6871232986450195
    9. '-i' → logprob: -6.0621232986450195
    10. '[-' → logprob: -6.3121232986450195

Token 1475: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3310226500034332
    2. ']' → logprob: -1.3310226202011108
    3. ']=' → logprob: -4.2060227394104
    4. '-' → logprob: -7.2060227394104
    5. '           ' → logprob: -8.081022262573242
    6. '+' → logprob: -8.456022262573242
    7. '       ' → logprob: -8.456022262573242
    8. '=' → logprob: -8.581022262573242
    9. ']
' → logprob: -8.706022262573242
    10. '][]' → logprob: -8.956022262573242

Token 1476: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.004607776179909706
    2. '][' → logprob: -5.629607677459717
    3. 'i' → logprob: -7.129607677459717
    4. ']' → logprob: -9.754608154296875
    5. '
' → logprob: -9.879608154296875
    6. '0' → logprob: -10.129608154296875
    7. '   ' → logprob: -10.879608154296875
    8. ' j' → logprob: -11.379608154296875
    9. ' ][' → logprob: -12.379608154296875
    10. ',j' → logprob: -12.504608154296875

Token 1477: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018682096153497696
    2. ']=' → logprob: -4.39368200302124
    3. '=' → logprob: -5.39368200302124
    4. ' =' → logprob: -7.26868200302124
    5. '][' → logprob: -7.26868200302124
    6. ' ]' → logprob: -10.018682479858398
    7. '   ' → logprob: -10.268682479858398
    8. '           ' → logprob: -10.643682479858398
    9. '       ' → logprob: -10.768682479858398
    10. ']
' → logprob: -11.143682479858398

Token 1478: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35064077377319336
    2. '=' → logprob: -1.2256407737731934
    3. ']' → logprob: -6.350640773773193
    4. ']=' → logprob: -8.475641250610352
    5. '][' → logprob: -10.100641250610352
    6. ' =
' → logprob: -10.600641250610352
    7. '=[' → logprob: -10.725641250610352
    8. '=
' → logprob: -10.725641250610352
    9. '[' → logprob: -10.850641250610352
    10. ')' → logprob: -11.225641250610352

Token 1479: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.003723826725035906
    2. ' dp' → logprob: -5.878723621368408
    3. '(' → logprob: -7.753723621368408
    4. '(dp' → logprob: -8.128724098205566
    5. '(
' → logprob: -9.378724098205566
    6. ' (' → logprob: -10.753724098205566
    7. 'tuple' → logprob: -10.878724098205566
    8. '(-' → logprob: -11.128724098205566
    9. '   ' → logprob: -11.128724098205566
    10. '
' → logprob: -11.253724098205566

Token 1480: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -4.5014188799541444e-05
    2. '[-' → logprob: -10.625044822692871
    3. '
' → logprob: -11.625044822692871
    4. '[' → logprob: -12.375044822692871
    5. 'k' → logprob: -12.500044822692871
    6. '[
' → logprob: -14.125044822692871
    7. ' [' → logprob: -14.375044822692871
    8. '   ' → logprob: -14.500044822692871
    9. '```' → logprob: -14.875044822692871
    10. '][' → logprob: -15.125044822692871

Token 1481: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.45848218582978e-06
    2. ' -' → logprob: -13.12500286102295
    3. '[k' → logprob: -15.50000286102295
    4. '[-' → logprob: -15.75000286102295
    5. '   ' → logprob: -16.875001907348633
    6. '```' → logprob: -17.750001907348633
    7. '-
' → logprob: -17.875001907348633
    8. '
' → logprob: -18.125001907348633
    9. '[' → logprob: -18.250001907348633
    10. '][' → logprob: -18.375001907348633

Token 1482: '1' (ID: 16)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.20276014506816864
    2. '1' → logprob: -1.827760100364685
    3. '-' → logprob: -3.8277602195739746
    4. ' -' → logprob: -8.577759742736816
    5. ' k' → logprob: -8.702759742736816
    6. '[k' → logprob: -9.077759742736816
    7. '(k' → logprob: -9.202759742736816
    8. '
' → logprob: -9.452759742736816
    9. '-k' → logprob: -9.577759742736816
    10. ' ' → logprob: -9.827759742736816

Token 1483: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4314185082912445
    2. '-' → logprob: -1.056418538093567
    3. ' -' → logprob: -6.306418418884277
    4. '[i' → logprob: -8.556418418884277
    5. '   ' → logprob: -8.681418418884277
    6. ' ][' → logprob: -9.556418418884277
    7. '[' → logprob: -9.681418418884277
    8. '[k' → logprob: -9.806418418884277
    9. '       ' → logprob: -9.806418418884277
    10. '//' → logprob: -9.931418418884277

Token 1484: 'dp' (ID: 19037)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.511655330657959
    2. 'dp' → logprob: -1.011655330657959
    3. '][' → logprob: -3.386655330657959
    4. '
' → logprob: -7.136655330657959
    5. ']' → logprob: -7.636655330657959
    6. ' ][' → logprob: -8.386655807495117
    7. '0' → logprob: -8.636655807495117
    8. ' dp' → logprob: -8.636655807495117
    9. '[i' → logprob: -8.761655807495117
    10. '[' → logprob: -9.011655807495117

Token 1485: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.06354504823684692
    2. '-' → logprob: -3.063544988632202
    3. '[-' → logprob: -4.438545227050781
    4. 'k' → logprob: -6.188545227050781
    5. '```' → logprob: -8.813545227050781
    6. '[' → logprob: -8.938545227050781
    7. '           ' → logprob: -9.313545227050781
    8. '-k' → logprob: -9.313545227050781
    9. '][' → logprob: -9.438545227050781
    10. '(k' → logprob: -10.063545227050781

Token 1486: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.024332741275429726
    2. '[k' → logprob: -3.8993327617645264
    3. '[-' → logprob: -5.774332523345947
    4. 'k' → logprob: -8.774333000183105
    5. '           ' → logprob: -8.899333000183105
    6. '][' → logprob: -9.649333000183105
    7. '[' → logprob: -9.774333000183105
    8. '       ' → logprob: -10.149333000183105
    9. '_k' → logprob: -10.274333000183105
    10. ' -' → logprob: -10.524333000183105

Token 1487: '1' (ID: 16)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.42320516705513
    2. '-' → logprob: -1.5482051372528076
    3. '1' → logprob: -2.0482051372528076
    4. '][' → logprob: -6.548205375671387
    5. '[k' → logprob: -7.048205375671387
    6. '```' → logprob: -7.798205375671387
    7. 'i' → logprob: -8.423205375671387
    8. '0' → logprob: -9.298205375671387
    9. '[i' → logprob: -9.923205375671387
    10. ']' → logprob: -9.923205375671387

Token 1488: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.023421334102749825
    2. '][' → logprob: -3.773421287536621
    3. '[' → logprob: -9.398421287536621
    4. '(i' → logprob: -11.023421287536621
    5. 'i' → logprob: -11.523421287536621
    6. '   ' → logprob: -11.648421287536621
    7. '[j' → logprob: -11.773421287536621
    8. '[k' → logprob: -11.773421287536621
    9. '[d' → logprob: -12.148421287536621
    10. 'dp' → logprob: -12.273421287536621

Token 1489: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01064983382821083
    2. '0' → logprob: -5.635649681091309
    3. 'dp' → logprob: -5.760649681091309
    4. '[i' → logprob: -6.135649681091309
    5. '
' → logprob: -7.760649681091309
    6. '[' → logprob: -8.010649681091309
    7. 'k' → logprob: -8.260649681091309
    8. '   ' → logprob: -8.885649681091309
    9. '][' → logprob: -9.010649681091309
    10. ' i' → logprob: -9.510649681091309

Token 1490: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005917300470173359
    2. '[i' → logprob: -5.380917072296143
    3. ']][' → logprob: -7.380917072296143
    4. '[j' → logprob: -8.5059175491333
    5. ']' → logprob: -9.0059175491333
    6. '[k' → logprob: -9.5059175491333
    7. '```' → logprob: -9.7559175491333
    8. '[' → logprob: -9.7559175491333
    9. 'i' → logprob: -10.6309175491333
    10. '           ' → logprob: -10.8809175491333

Token 1491: 'j' (ID: 73)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004577174549922347
    2. 'j' → logprob: -8.000457763671875
    3. '0' → logprob: -9.500457763671875
    4. '
' → logprob: -11.125457763671875
    5. 'dp' → logprob: -11.250457763671875
    6. '   ' → logprob: -12.375457763671875
    7. 'ij' → logprob: -12.625457763671875
    8. ' i' → logprob: -13.375457763671875
    9. '[i' → logprob: -13.500457763671875
    10. '][' → logprob: -13.625457763671875

Token 1492: ']]

' (ID: 84024)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003998142667114735
    2. '][' → logprob: -5.878998279571533
    3. '[i' → logprob: -7.503998279571533
    4. ']]' → logprob: -7.878998279571533
    5. ']][' → logprob: -9.503997802734375
    6. '[k' → logprob: -9.753997802734375
    7. ']' → logprob: -10.378997802734375
    8. ']]
' → logprob: -10.503997802734375
    9. '[j' → logprob: -11.378997802734375
    10. '```' → logprob: -11.753997802734375

Token 1493: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030072962399572134
    2. 'for' → logprob: -7.003007411956787
    3. '           ' → logprob: -7.128007411956787
    4. '               ' → logprob: -7.503007411956787
    5. '
' → logprob: -8.253006935119629
    6. ' for' → logprob: -8.878006935119629
    7. '   ' → logprob: -9.378006935119629
    8. '        
' → logprob: -9.628006935119629
    9. '```' → logprob: -9.753006935119629
    10. '                   ' → logprob: -10.628006935119629

Token 1494: ' k' (ID: 372)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2700759768486023
    2. ' for' → logprob: -1.895076036453247
    3. '       ' → logprob: -2.645076036453247
    4. 'k' (adapté à ' k') → logprob: -4.770075798034668
    5. '
' → logprob: -5.520075798034668
    6. ' k' → logprob: -6.645075798034668
    7. '   ' → logprob: -7.645075798034668
    8. '        
' → logprob: -8.145075798034668
    9. '```' → logprob: -8.145075798034668
    10. 'while' → logprob: -9.145075798034668

Token 1495: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38689881563186646
    2. '=' → logprob: -1.1368987560272217
    3. ' ' → logprob: -10.6368989944458
    4. ' +=' → logprob: -13.8868989944458
    5. ' =
' → logprob: -14.1368989944458
    6. ',' → logprob: -14.6368989944458
    7. ' ' → logprob: -14.7618989944458
    8. '_' → logprob: -15.0118989944458
    9. ')' → logprob: -15.8868989944458
    10. 's' → logprob: -16.261898040771484

Token 1496: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011098873801529408
    2. '0' → logprob: -4.511098861694336
    3. ' ' → logprob: -9.886098861694336
    4. '   ' → logprob: -16.636098861694336
    5. 'len' → logprob: -16.886098861694336
    6. '  ' → logprob: -17.386098861694336
    7. '01' → logprob: -18.511098861694336
    8. '=' → logprob: -18.761098861694336
    9. '[' → logprob: -19.323598861694336
    10. '2' → logprob: -19.511098861694336

Token 1497: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17975258827209473
    2. '0' → logprob: -1.8047525882720947
    3. ' ' → logprob: -11.804752349853516
    4. 'len' → logprob: -14.929752349853516
    5. '   ' → logprob: -16.679752349853516
    6. '01' → logprob: -18.054752349853516
    7. '=' → logprob: -18.304752349853516
    8. '```' → logprob: -18.304752349853516
    9. '-' → logprob: -18.492252349853516
    10. '  ' → logprob: -18.617252349853516

Token 1498: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013119526207447052
    2. 'while' → logprob: -5.013119697570801
    3. 'dp' → logprob: -5.513119697570801
    4. '
' → logprob: -7.013119697570801
    5. '+' → logprob: -8.1381196975708
    6. ' while' → logprob: -8.2631196975708
    7. 'next' → logprob: -8.5131196975708
    8. '       ' → logprob: -9.0131196975708
    9. ' 
' → logprob: -9.2631196975708
    10. '   ' → logprob: -10.0131196975708

Token 1499: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2900616526603699
    2. 'while' → logprob: -1.5400617122650146
    3. ' while' → logprob: -4.0400614738464355
    4. '       ' → logprob: -5.4150614738464355
    5. '   ' → logprob: -5.4150614738464355
    6. '+' → logprob: -6.2900614738464355
    7. '
' → logprob: -6.4150614738464355
    8. ' 
' → logprob: -6.7900614738464355
    9. 'dp' → logprob: -6.7900614738464355
    10. ' =' → logprob: -6.9150614738464355

Token 1500: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0071493834257125854
    2. ' while' → logprob: -5.3821492195129395
    3. 'k' → logprob: -6.1321492195129395
    4. '
' → logprob: -8.132149696350098
    5. ' k' → logprob: -11.382149696350098
    6. 'max' → logprob: -11.382149696350098
    7. '       ' → logprob: -11.507149696350098
    8. '	while' → logprob: -11.507149696350098
    9. '```' → logprob: -12.132149696350098
    10. 'for' → logprob: -12.507149696350098

Token 1501: ' (' (ID: 350)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.3918403387069702
    2. 'max' → logprob: -1.3918403387069702
    3. ' k' → logprob: -3.1418404579162598
    4. 'k' → logprob: -3.5168404579162598
    5. ' True' → logprob: -7.14184045791626
    6. '(max' → logprob: -7.14184045791626
    7. ' (' → logprob: -7.51684045791626
    8. '(k' → logprob: -8.391839981079102
    9. 'True' → logprob: -8.641839981079102
    10. ' dp' → logprob: -10.641839981079102

Token 1502: '1' (ID: 16)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.16300280392169952
    2. 'k' → logprob: -2.9130027294158936
    3. '(max' → logprob: -3.5380027294158936
    4. '(k' → logprob: -3.6630027294158936
    5. '(' → logprob: -3.9130027294158936
    6. ' max' → logprob: -4.538002967834473
    7. '1' → logprob: -5.538002967834473
    8. ' (' → logprob: -5.663002967834473
    9. 'dp' → logprob: -6.538002967834473
    10. ' k' → logprob: -7.163002967834473

Token 1503: ' <<' (ID: 2256)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.218231201171875
    2. '<' → logprob: -1.718231201171875
    3. 'k' → logprob: -5.093231201171875
    4. ')' → logprob: -5.593231201171875
    5. ')<' → logprob: -6.343231201171875
    6. '<<' → logprob: -6.843231201171875
    7. ' <=' → logprob: -6.968231201171875
    8. ' <<' → logprob: -7.093231201171875
    9. ' k' → logprob: -7.968231201171875
    10. '   ' → logprob: -8.218231201171875

Token 1504: ' (' (ID: 350)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.03081059269607067
    2. 'k' → logprob: -3.530810594558716
    3. ' (' → logprob: -7.405810356140137
    4. '(' → logprob: -7.780810356140137
    5. '1' → logprob: -10.405810356140137
    6. ' k' → logprob: -13.030810356140137
    7. '
' → logprob: -14.405810356140137
    8. '   ' → logprob: -14.405810356140137
    9. '(
' → logprob: -15.780810356140137
    10. ')' → logprob: -15.780810356140137

Token 1505: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0005595852271653712
    2. '(k' → logprob: -7.5005598068237305
    3. ' k' → logprob: -12.25055980682373
    4. '1' → logprob: -13.62555980682373
    5. ' (' → logprob: -14.75055980682373
    6. '(' → logprob: -15.75055980682373
    7. '   ' → logprob: -16.625558853149414
    8. '{k' → logprob: -17.125558853149414
    9. '	k' → logprob: -18.125558853149414
    10. ')' → logprob: -19.125558853149414

Token 1506: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005578556098043919
    2. ')<' → logprob: -5.255578517913818
    3. '+' → logprob: -8.880578994750977
    4. ' )' → logprob: -9.630578994750977
    5. ')<=' → logprob: -9.630578994750977
    6. ')+' → logprob: -11.005578994750977
    7. '<' → logprob: -11.130578994750977
    8. ')!=' → logprob: -11.380578994750977
    9. '))' → logprob: -11.505578994750977
    10. '1' → logprob: -12.130578994750977

Token 1507: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '
' → logprob: -17.625
    4. '   ' → logprob: -17.875
    5. '```' → logprob: -18.5
    6. '0' → logprob: -19.0
    7. ')' → logprob: -19.375
    8. 'k' → logprob: -19.5
    9. '2' → logprob: -20.3125
    10. 'def' → logprob: -20.5

Token 1508: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015046248445287347
    2. ' )' → logprob: -7.126504421234131
    3. ')<' → logprob: -7.501504421234131
    4. ')<=' → logprob: -9.376504898071289
    5. '))' → logprob: -10.001504898071289
    6. '])' → logprob: -11.751504898071289
    7. ')]' → logprob: -12.376504898071289
    8. '）' → logprob: -13.126504898071289
    9. '<' → logprob: -14.001504898071289
    10. ')!=' → logprob: -14.126504898071289

Token 1509: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.015077115036547184
    2. '<' → logprob: -4.265077114105225
    3. ' <=' → logprob: -7.265077114105225
    4. ')' → logprob: -9.140077590942383
    5. '<len' → logprob: -10.140077590942383
    6. '<n' → logprob: -10.765077590942383
    7. '<=' → logprob: -11.140077590942383
    8. ')<' → logprob: -11.640077590942383
    9. '<size' → logprob: -12.640077590942383
    10. ' ' → logprob: -12.640077590942383

Token 1510: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -9.138441237155348e-05
    2. ' N' → logprob: -10.000091552734375
    3. 'max' → logprob: -10.000091552734375
    4. '   ' → logprob: -15.250091552734375
    5. ' max' → logprob: -15.375091552734375
    6. ' ' → logprob: -17.125091552734375
    7. '	N' → logprob: -17.500091552734375
    8. '10' → logprob: -18.500091552734375
    9. '  ' → logprob: -18.875091552734375
    10. 'n' → logprob: -19.125091552734375

Token 1511: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.18357810378074646
    2. ':' → logprob: -1.8085781335830688
    3. '):
' → logprob: -6.058578014373779
    4. '   ' → logprob: -7.058578014373779
    5. '           ' → logprob: -8.683578491210938
    6. ' and' → logprob: -9.058578491210938
    7. ',' → logprob: -9.933578491210938
    8. '       ' → logprob: -9.933578491210938
    9. ':
' → logprob: -10.058578491210938
    10. ' :
' → logprob: -10.058578491210938

Token 1512: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0593988336622715
    2. '   ' → logprob: -2.934398889541626
    3. '
' → logprob: -6.809398651123047
    4. 'dp' → logprob: -7.184398651123047
    5. '       ' → logprob: -7.434398651123047
    6. '```' → logprob: -7.559398651123047
    7. ' k' → logprob: -7.934398651123047
    8. ' dp' → logprob: -8.559398651123047
    9. ',' → logprob: -9.059398651123047
    10. '):
' → logprob: -9.059398651123047

Token 1513: ' prev' (ID: 10258)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1829213798046112
    2. 'next' → logprob: -2.1829214096069336
    3. '           ' → logprob: -3.3079214096069336
    4. ' dp' → logprob: -5.057921409606934
    5. 'new' → logprob: -5.557921409606934
    6. ' next' → logprob: -5.682921409606934
    7. '               ' → logprob: -6.432921409606934
    8. 'nd' → logprob: -6.807921409606934
    9. 'n' → logprob: -7.932921409606934
    10. 'tmp' → logprob: -8.307921409606934

Token 1514: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35450801253318787
    2. ' =' → logprob: -1.3545080423355103
    3. '_dp' → logprob: -3.6045079231262207
    4. '_pos' → logprob: -4.354507923126221
    5. '_positions' → logprob: -8.729508399963379
    6. 'dp' → logprob: -8.979508399963379
    7. '_mat' → logprob: -10.729508399963379
    8. '_layer' → logprob: -11.104508399963379
    9. '_' → logprob: -11.729508399963379
    10. '_=' → logprob: -12.354508399963379

Token 1515: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0018404675647616386
    2. '[[' → logprob: -6.376840591430664
    3. '[]' → logprob: -9.376840591430664
    4. '[' → logprob: -10.376840591430664
    5. '[]
' → logprob: -11.251840591430664
    6. ' dp' → logprob: -12.126840591430664
    7. '[][]' → logprob: -13.501840591430664
    8. ' [[' → logprob: -14.126840591430664
    9. '[
' → logprob: -14.126840591430664
    10. '[]

' → logprob: -15.501840591430664

Token 1516: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.16023783385753632
    2. '[-' → logprob: -1.9102377891540527
    3. '[' → logprob: -12.035238265991211
    4. 'k' → logprob: -12.035238265991211
    5. '[
' → logprob: -14.785238265991211
    6. '```' → logprob: -14.910238265991211
    7. '   ' → logprob: -15.160238265991211
    8. '.append' → logprob: -15.285238265991211
    9. '           ' → logprob: -16.16023826599121
    10. ' [-' → logprob: -16.91023826599121

Token 1517: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.23584875464439392
    2. ']' → logprob: -2.1108486652374268
    3. '           ' → logprob: -2.9858486652374268
    4. '][' → logprob: -3.4858486652374268
    5. ')
' → logprob: -5.860848903656006
    6. '[' → logprob: -6.610848903656006
    7. ')' → logprob: -6.610848903656006
    8. '[next' → logprob: -7.235848903656006
    9. '
' → logprob: -8.235848426818848
    10. '               ' → logprob: -8.735848426818848

Token 1518: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003576304006855935
    2. 'next' → logprob: -8.500357627868652
    3. 'new' → logprob: -9.625357627868652
    4. 'dp' → logprob: -9.750357627868652
    5. 'n' → logprob: -11.875357627868652
    6. 'curr' → logprob: -12.125357627868652
    7. '               ' → logprob: -12.500357627868652
    8. ' next' → logprob: -12.500357627868652
    9. 'current' → logprob: -12.625357627868652
    10. 'nd' → logprob: -14.000357627868652

Token 1519: ' curr' (ID: 10495)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.226340413093567
    2. 'curr' (adapté à ' curr') → logprob: -1.226340413093567
    3. 'cur' → logprob: -1.976340413093567
    4. 'next' → logprob: -2.1013402938842773
    5. 'new' → logprob: -2.3513402938842773
    6. 'current' → logprob: -2.9763402938842773
    7. 'nd' → logprob: -5.351340293884277
    8. 'n' → logprob: -7.476340293884277
    9. 'dp' → logprob: -8.226340293884277
    10. '               ' → logprob: -9.101340293884277

Token 1520: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132636249065399
    2. ' =' → logprob: -1.3132636547088623
    3. '=[[' → logprob: -13.438263893127441
    4. '=[]' → logprob: -16.063262939453125
    5. '   ' → logprob: -16.188262939453125
    6. '=[' → logprob: -16.313262939453125
    7. '=
' → logprob: -16.563262939453125
    8. ' ' → logprob: -17.188262939453125
    9. '           ' → logprob: -17.313262939453125
    10. '=[]
' → logprob: -17.563262939453125

Token 1521: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.00035727277281694114
    2. '[' → logprob: -8.000357627868652
    3. ' [[' → logprob: -10.750357627868652
    4. '[
' → logprob: -15.625357627868652
    5. '[['' → logprob: -15.750357627868652
    6. '[]
' → logprob: -16.500356674194336
    7. '   ' → logprob: -17.500356674194336
    8. '       ' → logprob: -19.000356674194336
    9. '           ' → logprob: -21.000356674194336
    10. '[]' → logprob: -21.375356674194336

Token 1522: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.027240626513957977
    2. 'prev' → logprob: -3.777240514755249
    3. '-' → logprob: -5.902240753173828
    4. '(' → logprob: -7.277240753173828
    5. 'None' → logprob: -8.152240753173828
    6. '(prev' → logprob: -9.402240753173828
    7. ' prev' → logprob: -9.652240753173828
    8. ' (-' → logprob: -9.652240753173828
    9. '   ' → logprob: -11.402240753173828
    10. 'next' → logprob: -11.652240753173828

Token 1523: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.500000953674316
    3. '-' → logprob: -15.812500953674316
    4. ' -' → logprob: -16.125001907348633
    5. ',' → logprob: -16.437501907348633
    6. '   ' → logprob: -16.750001907348633
    7. '
' → logprob: -16.812501907348633
    8. 'prev' → logprob: -17.437501907348633
    9. '0' → logprob: -17.500001907348633
    10. '```' → logprob: -17.625001907348633

Token 1524: ',-' (ID: 8202)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002930276095867157
    2. ' ,' → logprob: -6.002930164337158
    3. ')' → logprob: -9.377930641174316
    4. ',k' → logprob: -9.502930641174316
    5. ',j' → logprob: -10.002930641174316
    6. ',i' → logprob: -10.002930641174316
    7. ',next' → logprob: -10.377930641174316
    8. '           ' → logprob: -10.627930641174316
    9. ',len' → logprob: -11.002930641174316
    10. '               ' → logprob: -11.002930641174316

Token 1525: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '-' → logprob: -16.375
    3. ' ' → logprob: -16.625
    4. ' -' → logprob: -17.5
    5. '```' → logprob: -18.75
    6. '
' → logprob: -19.25
    7. ',' → logprob: -19.3125
    8. '   ' → logprob: -19.875
    9. '१' → logprob: -20.0625
    10. '۱' → logprob: -20.3125

Token 1526: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.232493564719334e-05
    2. 'for' → logprob: -9.875082015991211
    3. ' )' → logprob: -11.125082015991211
    4. ')
' → logprob: -12.125082015991211
    5. ')]' → logprob: -12.125082015991211
    6. ' for' → logprob: -13.000082015991211
    7. '               ' → logprob: -14.000082015991211
    8. '                   ' → logprob: -14.500082015991211
    9. '           ' → logprob: -14.625082015991211
    10. ']' → logprob: -15.500082015991211

Token 1527: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6349689960479736
    2. ' for' → logprob: -0.7599689960479736
    3. '               ' → logprob: -7.3849687576293945
    4. '                   ' → logprob: -7.3849687576293945
    5. '                ' → logprob: -8.134968757629395
    6. '           ' → logprob: -8.384968757629395
    7. '            ' → logprob: -8.759968757629395
    8. '                    ' → logprob: -9.009968757629395
    9. '                     ' → logprob: -9.884968757629395
    10. '                 ' → logprob: -10.009968757629395

Token 1528: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0011060406686738133
    2. ' _' → logprob: -7.126106262207031
    3. '_range' → logprob: -8.626106262207031
    4. '_j' → logprob: -9.126106262207031
    5. '_r' → logprob: -12.626106262207031
    6. ' range' → logprob: -12.626106262207031
    7. 'range' → logprob: -13.251106262207031
    8. ' in' → logprob: -13.501106262207031
    9. '_in' → logprob: -13.876106262207031
    10. '__' → logprob: -14.126106262207031

Token 1529: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007106438861228526
    2. ' range' → logprob: -7.250710487365723
    3. '_' → logprob: -14.750710487365723
    4. '(range' → logprob: -16.12571144104004
    5. 'in' → logprob: -16.87571144104004
    6. '_range' → logprob: -17.62571144104004
    7. ' in' → logprob: -17.87571144104004
    8. '	range' → logprob: -18.12571144104004
    9. '   ' → logprob: -20.25071144104004
    10. '
' → logprob: -20.87571144104004

Token 1530: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00015860427811276168
    2. ' range' → logprob: -8.750158309936523
    3. '(range' → logprob: -16.625158309936523
    4. '   ' → logprob: -17.750158309936523
    5. '	range' → logprob: -18.375158309936523
    6. 'r' → logprob: -19.000158309936523
    7. '
' → logprob: -19.125158309936523
    8. '```' → logprob: -20.000158309936523
    9. '_range' → logprob: -20.125158309936523
    10. ' ' → logprob: -20.375158309936523

Token 1531: '(W' (ID: 26031)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.042359065264463425
    2. '(W' → logprob: -3.7923591136932373
    3. 'range' → logprob: -4.042358875274658
    4. ' range' → logprob: -6.917358875274658
    5. '           ' → logprob: -8.417359352111816
    6. ' W' → logprob: -9.667359352111816
    7. '               ' → logprob: -10.292359352111816
    8. '       ' → logprob: -10.542359352111816
    9. '   ' → logprob: -11.292359352111816
    10. 'Range' → logprob: -11.417359352111816

Token 1532: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.07908938825130463
    2. ']' → logprob: -2.579089403152466
    3. ')' → logprob: -8.704089164733887
    4. '           ' → logprob: -11.704089164733887
    5. ']]' → logprob: -11.954089164733887
    6. '       ' → logprob: -12.079089164733887
    7. '}]' → logprob: -12.204089164733887
    8. '               ' → logprob: -12.579089164733887
    9. '   ' → logprob: -13.329089164733887
    10. ' ]' → logprob: -13.829089164733887

Token 1533: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3881851136684418
    2. 'for' → logprob: -1.1381851434707642
    3. '               ' → logprob: -7.638185024261475
    4. '                ' → logprob: -8.138185501098633
    5. '            ' → logprob: -8.138185501098633
    6. '                   ' → logprob: -9.263185501098633
    7. '           ' → logprob: -9.888185501098633
    8. '                    ' → logprob: -9.888185501098633
    9. '                     ' → logprob: -11.263185501098633
    10. '                        ' → logprob: -12.013185501098633

Token 1534: ' _' (ID: 1175)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04863426089286804
    2. ' range' → logprob: -3.0486342906951904
    3. '_range' → logprob: -10.17363452911377
    4. '_' → logprob: -12.54863452911377
    5. '(range' → logprob: -12.92363452911377
    6. ' in' → logprob: -13.42363452911377
    7. 'in' → logprob: -13.67363452911377
    8. '	range' → logprob: -17.173633575439453
    9. '   ' → logprob: -17.673633575439453
    10. 'Range' → logprob: -18.798633575439453

Token 1535: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007121934904716909
    2. ' range' → logprob: -7.2507123947143555
    3. '(range' → logprob: -13.000712394714355
    4. '	range' → logprob: -17.75071144104004
    5. '   ' → logprob: -18.87571144104004
    6. '
' → logprob: -18.87571144104004
    7. 'in' → logprob: -20.62571144104004
    8. '.range' → logprob: -21.00071144104004
    9. '```' → logprob: -21.12571144104004
    10. 'for' → logprob: -21.37571144104004

Token 1536: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019318510312587023
    2. ' range' → logprob: -6.251931667327881
    3. '(range' → logprob: -12.876932144165039
    4. '(H' → logprob: -14.376932144165039
    5. 'H' → logprob: -18.25193214416504
    6. '	range' → logprob: -18.25193214416504
    7. '
' → logprob: -18.37693214416504
    8. 'for' → logprob: -18.62693214416504
    9. '[' → logprob: -18.87693214416504
    10. 'Range' → logprob: -19.00193214416504

Token 1537: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.0003357006062287837
    2. 'H' → logprob: -8.000335693359375
    3. ' (' → logprob: -16.250335693359375
    4. 'range' → logprob: -16.500335693359375
    5. '           ' → logprob: -17.000335693359375
    6. '(W' → logprob: -17.875335693359375
    7. '   ' → logprob: -18.625335693359375
    8. 'for' → logprob: -18.625335693359375
    9. ' H' → logprob: -19.250335693359375
    10. '
' → logprob: -19.250335693359375

Token 1538: ')]
' (ID: 11587)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.45391809940338135
    2. ']' → logprob: -1.7039180994033813
    3. '           ' → logprob: -1.7039180994033813
    4. '               ' → logprob: -7.203917980194092
    5. ']
' → logprob: -9.20391845703125
    6. '       ' → logprob: -10.20391845703125
    7. ']

' → logprob: -11.07891845703125
    8. '                   ' → logprob: -11.45391845703125
    9. 'for' → logprob: -12.32891845703125
    10. '   ' → logprob: -12.70391845703125

Token 1539: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.881560041918419e-05
    2. '		' → logprob: -11.375039100646973
    3. 'for' → logprob: -11.750039100646973
    4. '	       ' → logprob: -11.750039100646973
    5. ' for' → logprob: -11.875039100646973
    6. '               ' → logprob: -13.250039100646973
    7. '       ' → logprob: -13.875039100646973
    8. '                   ' → logprob: -14.375039100646973
    9. '   ' → logprob: -14.625039100646973
    10. '	   ' → logprob: -15.250039100646973

Token 1540: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12761037051677704
    2. 'for' (adapté à ' for') → logprob: -2.127610445022583
    3. ' for' → logprob: -7.377610206604004
    4. '   ' → logprob: -10.002610206604004
    5. '       ' → logprob: -11.627610206604004
    6. '               ' → logprob: -14.002610206604004
    7. ' ' → logprob: -14.877610206604004
    8. '          ' → logprob: -15.252610206604004
    9. '         ' → logprob: -15.252610206604004
    10. '	for' → logprob: -15.377610206604004

Token 1541: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009126556105911732
    2. ' i' → logprob: -7.000912666320801
    3. '_i' → logprob: -14.0009126663208
    4. 'x' → logprob: -15.2509126663208
    5. '	i' → logprob: -16.250911712646484
    6. 'a' → logprob: -18.250911712646484
    7. '   ' → logprob: -18.750911712646484
    8. 'r' → logprob: -18.875911712646484
    9. 'I' → logprob: -19.000911712646484
    10. '0' → logprob: -19.250911712646484

Token 1542: '_' (ID: 62)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06252606958150864
    2. 'in' → logprob: -2.812525987625122
    3. '	in' → logprob: -8.687525749206543
    4. '=' → logprob: -9.312525749206543
    5. ' ' → logprob: -9.687525749206543
    6. '0' → logprob: -9.812525749206543
    7. '<|end|>' → logprob: -10.312525749206543
    8. '   ' → logprob: -10.812525749206543
    9. ' =' → logprob: -11.062525749206543
    10. 'In' → logprob: -11.187525749206543

Token 1543: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10040517896413803
    2. 'in' → logprob: -2.350405216217041
    3. 'range' → logprob: -9.475404739379883
    4. ' ' → logprob: -10.225404739379883
    5. '0' → logprob: -10.600404739379883
    6. ' range' → logprob: -11.100404739379883
    7. '	in' → logprob: -11.100404739379883
    8. 'n' → logprob: -11.475404739379883
    9. ' i' → logprob: -12.850404739379883
    10. '	' → logprob: -12.975404739379883

Token 1544: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011050531640648842
    2. ' range' → logprob: -4.511050701141357
    3. 'in' → logprob: -13.7610502243042
    4. '0' → logprob: -14.3860502243042
    5. '   ' → logprob: -14.8860502243042
    6. ' in' → logprob: -14.8860502243042
    7. ' ' → logprob: -15.6360502243042
    8. '(range' → logprob: -16.511051177978516
    9. '	range' → logprob: -16.886051177978516
    10. 'r' → logprob: -17.511051177978516

Token 1545: '(H' (ID: 20904)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.5780644416809082
    2. '(H' → logprob: -0.8280644416809082
    3. '0' → logprob: -6.328064441680908
    4. '           ' → logprob: -8.32806396484375
    5. 'range' → logprob: -10.07806396484375
    6. '               ' → logprob: -10.82806396484375
    7. '   ' → logprob: -11.57806396484375
    8. '                   ' → logprob: -12.32806396484375
    9. '       ' → logprob: -12.45306396484375
    10. '(' → logprob: -12.70306396484375

Token 1546: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04093671590089798
    2. '               ' → logprob: -3.2909367084503174
    3. '           ' → logprob: -6.5409369468688965
    4. '):' → logprob: -7.5409369468688965
    5. ':
' → logprob: -8.165936470031738
    6. ')' → logprob: -8.665936470031738
    7. '                   ' → logprob: -9.040936470031738
    8. '       ' → logprob: -9.165936470031738
    9. ':' → logprob: -10.040936470031738
    10. ',' → logprob: -10.040936470031738

Token 1547: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18162314593791962
    2. '	           ' → logprob: -2.9316232204437256
    3. '       ' → logprob: -3.0566232204437256
    4. '	       ' → logprob: -3.4316232204437256
    5. '		       ' → logprob: -4.1816229820251465
    6. '	' → logprob: -5.4316229820251465
    7. '           ' → logprob: -5.8066229820251465
    8. ' for' → logprob: -6.1816229820251465
    9. '		           ' → logprob: -6.3066229820251465
    10. '	   ' → logprob: -6.9316229820251465

Token 1548: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6982303857803345
    2. 'for' (adapté à ' for') → logprob: -0.9482303857803345
    3. '	for' → logprob: -2.823230266571045
    4. '   ' → logprob: -3.073230266571045
    5. '	   ' → logprob: -5.073230266571045
    6. '       ' → logprob: -6.573230266571045
    7. '           ' → logprob: -7.823230266571045
    8. '	       ' → logprob: -7.948230266571045
    9. '	           ' → logprob: -8.573230743408203
    10. '                   ' → logprob: -8.698230743408203

Token 1549: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.008615515194833279
    2. ' j' → logprob: -4.758615493774414
    3. '0' → logprob: -13.883615493774414
    4. '_j' → logprob: -17.383615493774414
    5. ' ' → logprob: -18.258615493774414
    6. '	j' → logprob: -19.133615493774414
    7. '   ' → logprob: -19.258615493774414
    8. '$j' → logprob: -19.383615493774414
    9. 'k' → logprob: -20.508615493774414
    10. ':j' → logprob: -20.633615493774414

Token 1550: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0012828527251258492
    2. '_]' → logprob: -7.751282691955566
    3. ' in' → logprob: -7.876282691955566
    4. '+' → logprob: -8.126282691955566
    5. '_=' → logprob: -9.501282691955566
    6. ' _' → logprob: -11.001282691955566
    7. '_
' → logprob: -11.251282691955566
    8. ']_' → logprob: -11.501282691955566
    9. '_)' → logprob: -11.626282691955566
    10. 'in' → logprob: -11.876282691955566

Token 1551: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2812800109386444
    2. 'in' → logprob: -1.4062800407409668
    3. '_' → logprob: -9.531279563903809
    4. '0' → logprob: -11.406279563903809
    5. '	in' → logprob: -11.406279563903809
    6. '_in' → logprob: -12.156279563903809
    7. ' ' → logprob: -12.281279563903809
    8. ')' → logprob: -12.406279563903809
    9. ',' → logprob: -12.781279563903809
    10. 'for' → logprob: -12.781279563903809

Token 1552: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.7610454708337784e-05
    2. ' range' → logprob: -10.500027656555176
    3. '(range' → logprob: -21.12502670288086
    4. '   ' → logprob: -21.50002670288086
    5. '0' → logprob: -22.25002670288086
    6. '
' → logprob: -22.62502670288086
    7. ' ' → logprob: -22.87502670288086
    8. '	range' → logprob: -23.00002670288086
    9. '[' → logprob: -23.87502670288086
    10. '    ' → logprob: -23.87502670288086

Token 1553: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.0019473218126222491
    2. 'W' → logprob: -6.251947402954102
    3. 'range' → logprob: -11.251947402954102
    4. '0' → logprob: -12.501947402954102
    5. '(' → logprob: -13.751947402954102
    6. ' (' → logprob: -15.126947402954102
    7. '(H' → logprob: -15.876947402954102
    8. '           ' → logprob: -16.0019474029541
    9. '   ' → logprob: -16.1269474029541
    10. '       ' → logprob: -16.7519474029541

Token 1554: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.010945353657007217
    2. '                   ' → logprob: -5.2609453201293945
    3. '               ' → logprob: -5.6359453201293945
    4. '):' → logprob: -6.5109453201293945
    5. '                       ' → logprob: -8.885945320129395
    6. ':
' → logprob: -9.010945320129395
    7. ')' → logprob: -9.135945320129395
    8. ']:
' → logprob: -9.385945320129395
    9. ':' → logprob: -9.760945320129395
    10. '           ' → logprob: -10.260945320129395

Token 1555: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.000964223057962954
    2. '                       ' → logprob: -8.375964164733887
    3. 'next' → logprob: -8.375964164733887
    4. 'token' → logprob: -8.500964164733887
    5. '                           ' → logprob: -9.625964164733887
    6. ' next' → logprob: -9.625964164733887
    7. '```' → logprob: -9.875964164733887
    8. 'pos' → logprob: -10.375964164733887
    9. 'prev' → logprob: -10.500964164733887
    10. ' token' → logprob: -11.625964164733887

Token 1556: ' pos' (ID: 1253)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0444220304489136
    2. 'next' → logprob: -1.2944220304489136
    3. 'ni' → logprob: -1.4194220304489136
    4. 'pi' → logprob: -2.794422149658203
    5. '                   ' → logprob: -4.044422149658203
    6. 'i' → logprob: -4.544422149658203
    7. '               ' → logprob: -4.919422149658203
    8. 'r' → logprob: -4.919422149658203
    9. 'nx' → logprob: -5.169422149658203
    10. 'pos' (adapté à ' pos') → logprob: -5.294422149658203

Token 1557: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10030414164066315
    2. ' =' → logprob: -2.350304126739502
    3. ',' → logprob: -10.35030460357666
    4. 'x' → logprob: -11.10030460357666
    5. '_prev' → logprob: -11.47530460357666
    6. 'prev' → logprob: -11.60030460357666
    7. '=
' → logprob: -12.60030460357666
    8. 'i' → logprob: -12.60030460357666
    9. '                   ' → logprob: -12.97530460357666
    10. '0' → logprob: -13.10030460357666

Token 1558: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005624665878713131
    2. ' =' → logprob: -5.255624771118164
    3. ',' → logprob: -7.880624771118164
    4. ',pos' → logprob: -11.630624771118164
    5. 'pos' → logprob: -14.005624771118164
    6. ']=' → logprob: -14.255624771118164
    7. '=
' → logprob: -14.380624771118164
    8. ')=' → logprob: -15.255624771118164
    9. '   ' → logprob: -15.505624771118164
    10. ')' → logprob: -15.505624771118164

Token 1559: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -7.541112427134067e-05
    2. ' prev' → logprob: -9.500075340270996
    3. '                   ' → logprob: -14.750075340270996
    4. '           ' → logprob: -16.750076293945312
    5. '(prev' → logprob: -17.125076293945312
    6. '                       ' → logprob: -18.125076293945312
    7. '	prev' → logprob: -18.250076293945312
    8. '               ' → logprob: -18.750076293945312
    9. 'dp' → logprob: -19.000076293945312
    10. '_prev' → logprob: -19.750076293945312

Token 1560: '[i' (ID: 1768)
  Prédit: '[pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.003626439021900296
    2. 'pos' → logprob: -5.878626346588135
    3. '=' → logprob: -8.253626823425293
    4. '[' → logprob: -8.378626823425293
    5. '[i' → logprob: -8.628626823425293
    6. ' =' → logprob: -9.628626823425293
    7. '_pos' → logprob: -10.503626823425293
    8. 'dp' → logprob: -11.503626823425293
    9. '[position' → logprob: -11.753626823425293
    10. '
' → logprob: -12.128626823425293

Token 1561: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0232830997556448
    2. '_]' → logprob: -3.773283004760742
    3. '_[' → logprob: -10.648283004760742
    4. '_
' → logprob: -12.148283004760742
    5. '][' → logprob: -13.023283004760742
    6. '_
' → logprob: -13.273283004760742
    7. '_i' → logprob: -14.273283004760742
    8. '__' → logprob: -14.273283004760742
    9. '_,' → logprob: -14.273283004760742
    10. '][_' → logprob: -14.648283004760742

Token 1562: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -1.3544423381972592e-05
    2. ']' → logprob: -11.87501335144043
    3. ' ][' → logprob: -12.50001335144043
    4. '[j' → logprob: -14.00001335144043
    5. '][_' → logprob: -14.37501335144043
    6. '   ' → logprob: -15.12501335144043
    7. 's' → logprob: -15.37501335144043
    8. '"][' → logprob: -16.00001335144043
    9. ''][' → logprob: -16.37501335144043
    10. ']][' → logprob: -16.37501335144043

Token 1563: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -9.13388703338569e-06
    2. ' j' → logprob: -11.625009536743164
    3. '                   ' → logprob: -16.625009536743164
    4. '$j' → logprob: -17.625009536743164
    5. ',j' → logprob: -17.625009536743164
    6. '0' → logprob: -17.750009536743164
    7. '	j' → logprob: -17.875009536743164
    8. '   ' → logprob: -18.250009536743164
    9. '           ' → logprob: -18.250009536743164
    10. '
' → logprob: -18.625009536743164

Token 1564: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6961387991905212
    2. '][' → logprob: -0.8211387991905212
    3. '_]' → logprob: -2.946138858795166
    4. ']' → logprob: -4.946138858795166
    5. '][_' → logprob: -6.821138858795166
    6. '()][' → logprob: -8.821138381958008
    7. ']][' → logprob: -9.321138381958008
    8. '[j' → logprob: -9.446138381958008
    9. ''][' → logprob: -9.821138381958008
    10. '_[' → logprob: -9.821138381958008

Token 1565: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7689864039421082
    2. '][' → logprob: -0.7689864039421082
    3. ']
' → logprob: -3.393986463546753
    4. '[' → logprob: -3.393986463546753
    5. '                   ' → logprob: -5.768986225128174
    6. '0' → logprob: -6.768986225128174
    7. '               ' → logprob: -7.518986225128174
    8. '1' → logprob: -8.143986701965332
    9. '   ' → logprob: -8.518986701965332
    10. '           ' → logprob: -8.768986701965332

Token 1566: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7134438753128052
    2. 'pos' → logprob: -0.7134438753128052
    3. ' =' → logprob: -4.963443756103516
    4. 'if' → logprob: -4.963443756103516
    5. '=' → logprob: -5.963443756103516
    6. ' if' → logprob: -6.713443756103516
    7. 'next' → logprob: -7.713443756103516
    8. 'prev' → logprob: -7.838443756103516
    9. '```' → logprob: -8.088443756103516
    10. '[pos' → logprob: -8.713443756103516

Token 1567: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.831488847732544
    2. 'pos' → logprob: -1.206488847732544
    3. 'dp' → logprob: -1.956488847732544
    4. '                   ' → logprob: -2.706488847732544
    5. 'x' → logprob: -3.456488847732544
    6. 'next' → logprob: -5.331488609313965
    7. 'prev' → logprob: -5.456488609313965
    8. 'curr' → logprob: -6.081488609313965
    9. 'a' → logprob: -6.206488609313965
    10. 'pi' → logprob: -6.206488609313965

Token 1568: ' pos' (ID: 1253)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11610957980155945
    2. 'pos' → logprob: -2.616109609603882
    3. 'x' → logprob: -4.491109371185303
    4. 'i' → logprob: -4.491109371185303
    5. '                   ' → logprob: -5.366109371185303
    6. '(i' → logprob: -6.116109371185303
    7. 'ni' → logprob: -6.741109371185303
    8. 'pi' → logprob: -6.741109371185303
    9. 'curr' → logprob: -6.991109371185303
    10. 'dp' → logprob: -7.116109371185303

Token 1569: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7131671905517578
    2. 'if' → logprob: -1.8381671905517578
    3. '2' → logprob: -2.213167190551758
    4. '=' → logprob: -2.588167190551758
    5. '1' → logprob: -2.838167190551758
    6. ' =' → logprob: -3.088167190551758
    7. '_i' → logprob: -3.588167190551758
    8. 'x' → logprob: -4.088167190551758
    9. 'r' → logprob: -4.838167190551758
    10. '_x' → logprob: -6.088167190551758

Token 1570: ' peut' (ID: 9216)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07500112801790237
    2. ' =' → logprob: -3.2000012397766113
    3. 'i' → logprob: -4.325001239776611
    4. 'if' → logprob: -4.575001239776611
    5. '_i' → logprob: -5.950001239776611
    6. 'x' → logprob: -6.325001239776611
    7. '[' → logprob: -7.325001239776611
    8. '0' → logprob: -7.450001239776611
    9. 'pos' → logprob: -7.950001239776611
    10. 'y' → logprob: -8.200000762939453

Token 1571: ' être' (ID: 9104)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14185072481632233
    2. 'pos' → logprob: -3.016850709915161
    3. '==' → logprob: -3.391850709915161
    4. '0' → logprob: -4.01685094833374
    5. ' ==' → logprob: -4.14185094833374
    6. '(' → logprob: -5.26685094833374
    7. '==(' → logprob: -5.89185094833374
    8. 'if' → logprob: -6.14185094833374
    9. '(pos' → logprob: -6.26685094833374
    10. '[pos' → logprob: -7.01685094833374

Token 1572: ' hors' (ID: 26087)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.014358236454427242
    2. '(H' → logprob: -4.764358043670654
    3. 'pos' → logprob: -5.514358043670654
    4. '(' → logprob: -7.389358043670654
    5. '(pos' → logprob: -7.639358043670654
    6. '(i' → logprob: -8.514358520507812
    7. ' (-' → logprob: -8.889358520507812
    8. '-' → logprob: -9.014358520507812
    9. 'H' → logprob: -10.264358520507812
    10. '((-' → logprob: -10.639358520507812

Token 1573: ' du' (ID: 1462)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.9893906712532043
    2. 'bounds' → logprob: -1.2393906116485596
    3. '0' → logprob: -1.9893906116485596
    4. 'de' → logprob: -2.1143906116485596
    5. ' des' → logprob: -4.239390850067139
    6. 'la' → logprob: -4.489390850067139
    7. 'pos' → logprob: -4.864390850067139
    8. '(i' → logprob: -5.114390850067139
    9. 'bound' → logprob: -5.239390850067139
    10. ' de' → logprob: -5.364390850067139

Token 1574: ' tableau' (ID: 67053)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.5512762665748596
    2. 'bounds' → logprob: -2.301276206970215
    3. 'i' → logprob: -2.551276206970215
    4. 'bound' → logprob: -2.926276206970215
    5. '(i' → logprob: -2.926276206970215
    6. 'board' → logprob: -3.176276206970215
    7. 'W' → logprob: -4.301276206970215
    8. 'H' → logprob: -4.301276206970215
    9. 'table' → logprob: -4.551276206970215
    10. 'pos' → logprob: -4.801276206970215

Token 1575: ' ==>' (ID: 79067)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004432728048413992
    2. 'if' → logprob: -5.629432678222656
    3. ' if' → logprob: -7.504432678222656
    4. ',' → logprob: -9.379432678222656
    5. '                    
' → logprob: -10.129432678222656
    6. '```' → logprob: -10.379432678222656
    7. ' (' → logprob: -10.754432678222656
    8. 'x' → logprob: -10.754432678222656
    9. '(i' → logprob: -10.754432678222656
    10. '                       ' → logprob: -11.504432678222656

Token 1576: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.43931299448013306
    2. 'curr' → logprob: -1.0643129348754883
    3. 'pos' → logprob: -5.064312934875488
    4. '(-' → logprob: -6.564312934875488
    5. '(i' → logprob: -6.689312934875488
    6. ' if' → logprob: -7.064312934875488
    7. '(curr' → logprob: -8.189312934875488
    8. '                   ' → logprob: -8.814312934875488
    9. ' curr' → logprob: -9.064312934875488
    10. 'i' → logprob: -9.814312934875488

Token 1577: ' stock' (ID: 6546)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02313016913831234
    2. ' if' → logprob: -3.898130178451538
    3. '                   ' → logprob: -6.398129940032959
    4. '```' → logprob: -8.898130416870117
    5. '[' → logprob: -9.273130416870117
    6. ':' → logprob: -9.273130416870117
    7. '                       ' → logprob: -9.648130416870117
    8. 'i' → logprob: -9.773130416870117
    9. '#' → logprob: -9.898130416870117
    10. 'for' → logprob: -10.398130416870117

Token 1578: 'e' (ID: 68)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1509113311767578
    2. '                   ' → logprob: -1.1509113311767578
    3. 'pos' → logprob: -1.2759113311767578
    4. ' if' → logprob: -3.400911331176758
    5. '(pos' → logprob: -4.525911331176758
    6. '[pos' → logprob: -4.525911331176758
    7. ' pos' → logprob: -5.150911331176758
    8. 'er' → logprob: -5.400911331176758
    9. '=' → logprob: -5.900911331176758
    10. '                       ' → logprob: -6.150911331176758

Token 1579: ' position' (ID: 4010)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.002836015075445175
    2. ' pos' → logprob: -6.002836227416992
    3. '(pos' → logprob: -8.252836227416992
    4. '(' → logprob: -10.252836227416992
    5. '                   ' → logprob: -10.377836227416992
    6. ' (' → logprob: -10.752836227416992
    7. '(-' → logprob: -13.127836227416992
    8. '```' → logprob: -13.377836227416992
    9. 'if' → logprob: -13.627836227416992
    10. '(
' → logprob: -13.877836227416992

Token 1580: ' finale' (ID: 37759)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01763753965497017
    2. '                       ' → logprob: -5.392637729644775
    3. ',' → logprob: -5.892637729644775
    4. '```' → logprob: -6.517637729644775
    5. '                    
' → logprob: -6.767637729644775
    6. ' =' → logprob: -6.892637729644775
    7. '[' → logprob: -7.267637729644775
    8. '               ' → logprob: -7.517637729644775
    9. ':' → logprob: -7.517637729644775
    10. ' if' → logprob: -7.642637729644775

Token 1581: ' *' (ID: 425)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008449680171906948
    2. 'if' → logprob: -5.258449554443359
    3. ' if' → logprob: -5.883449554443359
    4. '```' → logprob: -8.13344955444336
    5. '           ' → logprob: -10.50844955444336
    6. '               ' → logprob: -10.75844955444336
    7. ' =' → logprob: -11.38344955444336
    8. '                       ' → logprob: -11.38344955444336
    9. '				' → logprob: -11.38344955444336
    10. ',' → logprob: -11.88344955444336

Token 1582: 'comme' (ID: 126724)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03402208164334297
    2. ' if' → logprob: -4.909021854400635
    3. 'if' → logprob: -5.034021854400635
    4. '                       ' → logprob: -5.159021854400635
    5. ',' → logprob: -5.659021854400635
    6. '```' → logprob: -5.659021854400635
    7. '
' → logprob: -6.784021854400635
    8. '(pos' → logprob: -6.784021854400635
    9. '               ' → logprob: -7.034021854400635
    10. '           ' → logprob: -7.534021854400635

Token 1583: ' cela' (ID: 17542)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.182193785905838
    2. 'is' → logprob: -1.8071937561035156
    3. '(pos' → logprob: -6.557193756103516
    4. ' pos' → logprob: -7.932193756103516
    5. ' is' → logprob: -8.307193756103516
    6. 'tuple' → logprob: -8.932193756103516
    7. 'it' → logprob: -9.057193756103516
    8. 'est' → logprob: -9.307193756103516
    9. '```' → logprob: -11.182193756103516
    10. 'cela' → logprob: -11.307193756103516

Token 1584: '*
' (ID: 6658)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005654894281178713
    2. ' if' → logprob: -6.255654811859131
    3. '
' → logprob: -6.380654811859131
    4. 'if' → logprob: -7.130654811859131
    5. '                       ' → logprob: -8.130655288696289
    6. '```' → logprob: -8.380655288696289
    7. ',' → logprob: -8.755655288696289
    8. '               ' → logprob: -9.005655288696289
    9. '                    
' → logprob: -9.630655288696289
    10. '           ' → logprob: -9.755655288696289

Token 1585: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00014716439181938767
    2. 'if' → logprob: -9.750146865844727
    3. '```' → logprob: -10.125146865844727
    4. '				' → logprob: -10.500146865844727
    5. ' if' → logprob: -11.625146865844727
    6. '           ' → logprob: -13.125146865844727
    7. ',' → logprob: -13.250146865844727
    8. '
' → logprob: -13.500146865844727
    9. '		           ' → logprob: -13.750146865844727
    10. '               ' → logprob: -13.875146865844727

Token 1586: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31358602643013
    2. '                   ' → logprob: -1.3135859966278076
    3. ' if' → logprob: -8.313586235046387
    4. 'x' → logprob: -9.688586235046387
    5. 'i' → logprob: -12.063586235046387
    6. '```' → logprob: -13.188586235046387
    7. 'next' → logprob: -13.188586235046387
    8. '				' → logprob: -13.563586235046387
    9. '   ' → logprob: -13.813586235046387
    10. 'pos' → logprob: -14.063586235046387

Token 1587: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31372782588005066
    2. '                   ' → logprob: -1.313727855682373
    3. ' if' → logprob: -7.688727855682373
    4. '```' → logprob: -12.938727378845215
    5. '           ' → logprob: -13.563727378845215
    6. 'i' → logprob: -13.688727378845215
    7. 'x' → logprob: -13.938727378845215
    8. '				' → logprob: -14.188727378845215
    9. '   ' → logprob: -14.563727378845215
    10. '               ' → logprob: -15.438727378845215

Token 1588: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.007720675319433212
    2. ' pos' → logprob: -4.882720470428467
    3. '0' → logprob: -9.132720947265625
    4. '(pos' → logprob: -12.257720947265625
    5. '   ' → logprob: -14.132720947265625
    6. ' ' → logprob: -14.632720947265625
    7. '	pos' → logprob: -16.007720947265625
    8. '(' → logprob: -16.382720947265625
    9. '-pos' → logprob: -16.882720947265625
    10. '_pos' → logprob: -17.007720947265625

Token 1589: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0029892323072999716
    2. 's' → logprob: -6.877989292144775
    3. 'osition' → logprob: -6.877989292144775
    4. 'ition' → logprob: -7.877989292144775
    5. 'os' → logprob: -8.002988815307617
    6. '=' → logprob: -10.252988815307617
    7. 'osi' → logprob: -10.627988815307617
    8. 'ion' → logprob: -10.627988815307617
    9. '0' → logprob: -11.002988815307617
    10. '[' → logprob: -11.377988815307617

Token 1590: ' est' (ID: 893)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6024471521377563
    2. '==' → logprob: -0.8524471521377563
    3. ' ==' → logprob: -3.852447032928467
    4. '==(' → logprob: -5.602447032928467
    5. '```' → logprob: -7.227447032928467
    6. '=' → logprob: -8.852447509765625
    7. '==
' → logprob: -9.352447509765625
    8. 'not' → logprob: -9.602447509765625
    9. '!=' → logprob: -10.102447509765625
    10. '
' → logprob: -10.477447509765625

Token 1591: ' hors' (ID: 26087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6046315431594849
    2. '(-' → logprob: -0.9796315431594849
    3. 'pos' → logprob: -2.7296314239501953
    4. '(H' → logprob: -5.854631423950195
    5. '(pos' → logprob: -5.854631423950195
    6. '0' → logprob: -6.604631423950195
    7. '-' → logprob: -6.604631423950195
    8. '(i' → logprob: -7.229631423950195
    9. ' (' → logprob: -7.354631423950195
    10. 'out' → logprob: -7.354631423950195

Token 1592: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9235542416572571
    2. '0' → logprob: -1.0485541820526123
    3. ' (' → logprob: -2.2985541820526123
    4. '[' → logprob: -2.9235541820526123
    5. 'pos' → logprob: -3.1735541820526123
    6. '(i' → logprob: -3.6735541820526123
    7. '                   ' → logprob: -4.923554420471191
    8. 'of' → logprob: -5.423554420471191
    9. 'not' → logprob: -5.673554420471191
    10. '(pos' → logprob: -5.798554420471191

Token 1593: ' la' (ID: 557)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.3620797395706177
    2. '(H' → logprob: -2.362079620361328
    3. '(' → logprob: -2.487079620361328
    4. 'H' → logprob: -3.237079620361328
    5. '(i' → logprob: -3.487079620361328
    6. 'range' → logprob: -3.487079620361328
    7. 'grid' → logprob: -5.237079620361328
    8. 'i' → logprob: -5.237079620361328
    9. 'bounds' → logprob: -5.862079620361328
    10. '((-' → logprob: -5.987079620361328

Token 1594: ' grille' (ID: 99153)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.19520550966262817
    2. 'H' → logprob: -2.5702054500579834
    3. '(H' → logprob: -3.3202054500579834
    4. '0' → logprob: -3.5702054500579834
    5. 'grid' → logprob: -4.3202056884765625
    6. ')' → logprob: -5.6952056884765625
    7. 'gr' → logprob: -6.3202056884765625
    8. 'W' → logprob: -6.4452056884765625
    9. '-H' → logprob: -6.4452056884765625
    10. '(i' → logprob: -6.5702056884765625

Token 1595: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5954239964485168
    2. '                   ' → logprob: -0.9704239964485168
    3. ':
' → logprob: -3.595423936843872
    4. '                       ' → logprob: -4.220424175262451
    5. 'if' → logprob: -5.345424175262451
    6. ' ==' → logprob: -5.595424175262451
    7. '==' → logprob: -5.595424175262451
    8. '[i' → logprob: -5.595424175262451
    9. ':' → logprob: -5.845424175262451
    10. ' and' → logprob: -6.345424175262451

Token 1596: 'i' (ID: 72)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.011110661551356316
    2. '0' → logprob: -4.511110782623291
    3. '                   ' → logprob: -10.511110305786133
    4. ' pos' → logprob: -10.886110305786133
    5. 'not' → logprob: -12.386110305786133
    6. '(pos' → logprob: -12.636110305786133
    7. '                       ' → logprob: -12.886110305786133
    8. 'if' → logprob: -13.136110305786133
    9. '
' → logprob: -13.636110305786133
    10. '                           ' → logprob: -14.386110305786133

Token 1597: '>=' (ID: 20974)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.018540743738412857
    2. '1' → logprob: -4.518540859222412
    3. '_,' → logprob: -6.143540859222412
    4. '_pos' → logprob: -6.393540859222412
    5. '_)' → logprob: -6.643540859222412
    6. '_]' → logprob: -6.893540859222412
    7. 'pos' → logprob: -8.143540382385254
    8. '_
' → logprob: -8.393540382385254
    9. '>=' → logprob: -8.768540382385254
    10. ')' → logprob: -9.268540382385254

Token 1598: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00013679367839358747
    2. '0' → logprob: -9.000136375427246
    3. ' H' → logprob: -12.250136375427246
    4. 'pos' → logprob: -12.500136375427246
    5. 'len' → logprob: -13.375136375427246
    6. ')' → logprob: -13.750136375427246
    7. 'next' → logprob: -13.750136375427246
    8. '
' → logprob: -14.875136375427246
    9. '-H' → logprob: -15.750136375427246
    10. '#' → logprob: -16.375137329101562

Token 1599: ' ou' (ID: 2031)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.12329461425542831
    2. 'or' → logprob: -2.4982945919036865
    3. ' ou' → logprob: -3.4982945919036865
    4. ')' → logprob: -5.998294830322266
    5. 'ou' → logprob: -7.498294830322266
    6. '                   ' → logprob: -9.123294830322266
    7. '           ' → logprob: -9.248294830322266
    8. '```' → logprob: -9.623294830322266
    9. ' или' → logprob: -10.248294830322266
    10. '
' → logprob: -10.623294830322266

Token 1600: ' j' (ID: 441)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.06352255493402481
    2. 'j' → logprob: -2.8135225772857666
    3. ' pos' → logprob: -6.9385223388671875
    4. '0' → logprob: -7.9385223388671875
    5. ' j' → logprob: -8.813522338867188
    6. '(pos' → logprob: -9.688522338867188
    7. '   ' → logprob: -12.063522338867188
    8. '                   ' → logprob: -13.188522338867188
    9. '
' → logprob: -13.563522338867188
    10. 'i' → logprob: -13.938522338867188

Token 1601: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.292315810918808
    2. '_' → logprob: -1.7923158407211304
    3. ' >=' → logprob: -2.917315721511841
    4. '>' → logprob: -4.29231595993042
    5. ']>=' → logprob: -5.16731595993042
    6. '```' → logprob: -5.66731595993042
    7. '[i' → logprob: -6.16731595993042
    8. ')' → logprob: -6.29231595993042
    9. ')>=' → logprob: -6.54231595993042
    10. '[' → logprob: -7.04231595993042

Token 1602: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -5.383526149671525e-05
    2. ' W' → logprob: -9.875053405761719
    3. '0' → logprob: -14.375053405761719
    4. '   ' → logprob: -14.500053405761719
    5. ')' → logprob: -14.875053405761719
    6. '=W' → logprob: -16.00005340576172
    7. '[' → logprob: -16.50005340576172
    8. '1' → logprob: -16.75005340576172
    9. '(W' → logprob: -16.75005340576172
    10. 'next' → logprob: -16.87505340576172

Token 1603: '),' (ID: 936)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0728706493973732
    2. ')' → logprob: -3.1978707313537598
    3. '):
' → logprob: -4.19787073135376
    4. 'or' → logprob: -5.07287073135376
    5. '                   ' → logprob: -5.57287073135376
    6. '                       ' → logprob: -6.44787073135376
    7. '),' → logprob: -6.57287073135376
    8. '```' → logprob: -7.44787073135376
    9. '):' → logprob: -7.94787073135376
    10. ':
' → logprob: -8.947870254516602

Token 1604: ' dp' (ID: 21546)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.80159991979599
    2. 'if' → logprob: -1.5515999794006348
    3. 'curr' → logprob: -1.5515999794006348
    4. ' if' → logprob: -2.6765999794006348
    5. '                   ' → logprob: -3.3015999794006348
    6. ' curr' → logprob: -4.801599979400635
    7. '                           ' → logprob: -5.176599979400635
    8. '                               ' → logprob: -5.676599979400635
    9. 'pos' → logprob: -6.426599979400635
    10. '```' → logprob: -6.801599979400635

Token 1605: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.006108435802161694
    2. '.append' → logprob: -5.381108283996582
    3. '=k' → logprob: -8.381108283996582
    4. '=' → logprob: -8.631108283996582
    5. 'k' → logprob: -8.631108283996582
    6. ' =' → logprob: -9.131108283996582
    7. '[pos' → logprob: -9.256108283996582
    8. 'pos' → logprob: -9.506108283996582
    9. '[' → logprob: -9.631108283996582
    10. '[i' → logprob: -9.756108283996582

Token 1606: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01952158845961094
    2. '[k' → logprob: -5.019521713256836
    3. '+' → logprob: -5.269521713256836
    4. ']' → logprob: -5.519521713256836
    5. '           ' → logprob: -6.894521713256836
    6. '               ' → logprob: -7.644521713256836
    7. '                   ' → logprob: -7.894521713256836
    8. '+k' → logprob: -8.394521713256836
    9. ']][' → logprob: -8.519521713256836
    10. ')[' → logprob: -8.769521713256836

Token 1607: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14716997742652893
    2. 'pos' → logprob: -2.022170066833496
    3. 'j' → logprob: -6.522170066833496
    4. '0' → logprob: -6.772170066833496
    5. '1' → logprob: -7.522170066833496
    6. '
' → logprob: -8.772170066833496
    7. '   ' → logprob: -8.834670066833496
    8. ']' → logprob: -9.209670066833496
    9. ' i' → logprob: -9.272170066833496
    10. '][' → logprob: -9.647170066833496

Token 1608: '][' (ID: 2696)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.023192130029201508
    2. '_]' → logprob: -4.023191928863525
    3. '][' → logprob: -5.648191928863525
    4. '_[' → logprob: -7.648191928863525
    5. '1' → logprob: -7.773191928863525
    6. '[' → logprob: -9.523192405700684
    7. ']' → logprob: -9.648192405700684
    8. ''][' → logprob: -9.773192405700684
    9. '_i' → logprob: -10.023192405700684
    10. '
' → logprob: -10.148192405700684

Token 1609: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.020092273131012917
    2. '0' → logprob: -4.270092487335205
    3. '1' → logprob: -6.145092487335205
    4. ']' → logprob: -6.520092487335205
    5. 'pos' → logprob: -7.145092487335205
    6. '_' → logprob: -8.020092010498047
    7. '_j' → logprob: -8.020092010498047
    8. '_]' → logprob: -8.020092010498047
    9. '
' → logprob: -8.645092010498047
    10. '][' → logprob: -9.270092010498047

Token 1610: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11690595746040344
    2. ']=' → logprob: -3.741905927658081
    3. '[' → logprob: -3.866905927658081
    4. '][' → logprob: -4.11690616607666
    5. '==' → logprob: -4.49190616607666
    6. ']==' → logprob: -4.61690616607666
    7. '=' → logprob: -4.86690616607666
    8. ' =' → logprob: -5.11690616607666
    9. '                   ' → logprob: -5.74190616607666
    10. ' ==' → logprob: -6.11690616607666

Token 1611: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7041741609573364
    2. ' =' → logprob: -1.0791741609573364
    3. ']=' → logprob: -2.329174041748047
    4. ']' → logprob: -3.579174041748047
    5. '                   ' → logprob: -3.579174041748047
    6. '[i' → logprob: -5.454174041748047
    7. '[pos' → logprob: -6.704174041748047
    8. '=i' → logprob: -6.829174041748047
    9. '=
' → logprob: -6.954174041748047
    10. '               ' → logprob: -7.204174041748047

Token 1612: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -2.463036435074173e-05
    2. ' pos' → logprob: -11.125024795532227
    3. '(pos' → logprob: -11.750024795532227
    4. '   ' → logprob: -14.250024795532227
    5. '                   ' → logprob: -14.375024795532227
    6. '(' → logprob: -14.500024795532227
    7. '           ' → logprob: -16.375024795532227
    8. '               ' → logprob: -17.125024795532227
    9. '       ' → logprob: -18.625024795532227
    10. ' (' → logprob: -18.625024795532227

Token 1613: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016432604752480984
    2. 'ition' → logprob: -9.250164031982422
    3. 's' → logprob: -10.000164031982422
    4. 'sible' → logprob: -12.250164031982422
    5. '```' → logprob: -12.500164031982422
    6. ']' → logprob: -12.750164031982422
    7. ')' → logprob: -12.750164031982422
    8. '[' → logprob: -13.500164031982422
    9. 'icion' → logprob: -13.875164031982422
    10. '
' → logprob: -14.250164031982422

Token 1614: ' (' (ID: 350)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0003610872954595834
    2. '```' → logprob: -8.500361442565918
    3. ',' → logprob: -10.500361442565918
    4. '				' → logprob: -10.625361442565918
    5. '           ' → logprob: -11.125361442565918
    6. '               ' → logprob: -11.125361442565918
    7. '
' → logprob: -11.250361442565918
    8. ' if' → logprob: -11.750361442565918
    9. 'if' → logprob: -11.750361442565918
    10. '		           ' → logprob: -11.875361442565918

Token 1615: 'pas' (ID: 21122)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.19253894686698914
    2. '                       ' → logprob: -2.4425389766693115
    3. ')' → logprob: -3.0675389766693115
    4. '):
' → logprob: -3.9425389766693115
    5. '               ' → logprob: -4.942538738250732
    6. ')
' → logprob: -5.692538738250732
    7. '
' → logprob: -5.942538738250732
    8. '           ' → logprob: -6.567538738250732
    9. '                           ' → logprob: -6.817538738250732
    10. 'continue' → logprob: -6.817538738250732

Token 1616: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.5026006698608398
    2. 'à' → logprob: -1.8776006698608398
    3. ')' → logprob: -2.12760066986084
    4. '[]' → logprob: -2.12760066986084
    5. 'mod' → logprob: -2.75260066986084
    6. '```' → logprob: -3.25260066986084
    7. '   ' → logprob: -3.50260066986084
    8. ']' → logprob: -4.00260066986084
    9. '...' → logprob: -4.37760066986084
    10. '.' → logprob: -4.37760066986084

Token 1617: ' changement' (ID: 61912)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.2718851566314697
    2. ' changement' → logprob: -1.2718851566314697
    3. 'change' → logprob: -2.6468851566314697
    4. 'ch' → logprob: -2.6468851566314697
    5. 'return' → logprob: -3.1468851566314697
    6. 'suite' → logprob: -3.2718851566314697
    7. 'break' → logprob: -4.021884918212891
    8. ' modification' → logprob: -4.146884918212891
    9. ' déplacement' → logprob: -4.271884918212891
    10. '(' → logprob: -4.521884918212891

Token 1618: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8902016878128052
    2. '                   ' → logprob: -1.0152016878128052
    3. ')
' → logprob: -1.6402016878128052
    4. '):
' → logprob: -4.015201568603516
    5. '                       ' → logprob: -4.640201568603516
    6. '
' → logprob: -6.390201568603516
    7. '               ' → logprob: -7.015201568603516
    8. '),' → logprob: -7.515201568603516
    9. ' or' → logprob: -8.390201568603516
    10. '```' → logprob: -8.390201568603516

Token 1619: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01198586542159319
    2. '                       ' → logprob: -5.136985778808594
    3. '```' → logprob: -5.261985778808594
    4. '               ' → logprob: -8.261985778808594
    5. '``' → logprob: -9.136985778808594
    6. '`' → logprob: -9.386985778808594
    7. '                           ' → logprob: -9.386985778808594
    8. '           ' → logprob: -9.761985778808594
    9. '
' → logprob: -10.011985778808594
    10. '                    ' → logprob: -10.261985778808594

Token 1620: ' i' (ID: 575)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2527935206890106
    2. 'if' → logprob: -1.502793550491333
    3. ' if' → logprob: -7.127793312072754
    4. '				' → logprob: -10.627793312072754
    5. '           ' → logprob: -11.627793312072754
    6. '   ' → logprob: -11.752793312072754
    7. '               ' → logprob: -12.002793312072754
    8. '	if' → logprob: -12.502793312072754
    9. '                    
' → logprob: -13.002793312072754
    10. '       ' → logprob: -13.127793312072754

Token 1621: '2' (ID: 17)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0517459399998188
    2. '_,' → logprob: -4.301745891571045
    3. 'pos' → logprob: -4.426745891571045
    4. ',' → logprob: -4.926745891571045
    5. '_pos' → logprob: -5.176745891571045
    6. ',pos' → logprob: -5.551745891571045
    7. 'n' → logprob: -6.301745891571045
    8. 'if' → logprob: -6.426745891571045
    9. '_' → logprob: -6.426745891571045
    10. '1' → logprob: -6.801745891571045

Token 1622: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18045470118522644
    2. ',pos' → logprob: -2.180454730987549
    3. ',j' → logprob: -3.305454730987549
    4. '=' → logprob: -4.680454730987549
    5. ' =' → logprob: -5.180454730987549
    6. 'pos' → logprob: -8.55545425415039
    7. ' ,' → logprob: -8.93045425415039
    8. '                   ' → logprob: -10.68045425415039
    9. '=j' → logprob: -10.93045425415039
    10. '           ' → logprob: -11.05545425415039

Token 1623: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.4121114822482923e-06
    2. ' j' → logprob: -12.625003814697266
    3. '   ' → logprob: -17.500003814697266
    4. 'pos' → logprob: -18.625003814697266
    5. '	j' → logprob: -19.750003814697266
    6. ' ' → logprob: -20.625003814697266
    7. '```' → logprob: -20.875003814697266
    8. '=' → logprob: -21.000003814697266
    9. '$j' → logprob: -21.000003814697266
    10. '_j' → logprob: -21.125003814697266

Token 1624: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005726903327740729
    2. '=' → logprob: -8.37557315826416
    3. '_' → logprob: -9.00057315826416
    4. ',' → logprob: -9.62557315826416
    5. ' =' → logprob: -10.12557315826416
    6. '_next' → logprob: -10.62557315826416
    7. '```' → logprob: -10.62557315826416
    8. '_pos' → logprob: -10.75057315826416
    9. '1' → logprob: -11.00057315826416
    10. ']' → logprob: -12.00057315826416

Token 1625: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031777136027812958
    2. ' =' → logprob: -5.753177642822266
    3. '=
' → logprob: -17.753177642822266
    4. ',' → logprob: -19.003177642822266
    5. ')=' → logprob: -19.128177642822266
    6. ')' → logprob: -19.503177642822266
    7. '＝' → logprob: -20.003177642822266
    8. '   ' → logprob: -20.378177642822266
    9. '=}' → logprob: -20.628177642822266
    10. 'pos' → logprob: -20.753177642822266

Token 1626: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -2.935296834039036e-06
    2. ' pos' → logprob: -12.75000286102295
    3. '   ' → logprob: -18.250003814697266
    4. '	pos' → logprob: -19.500003814697266
    5. 'position' → logprob: -21.625003814697266
    6. '(pos' → logprob: -21.625003814697266
    7. '           ' → logprob: -22.000003814697266
    8. 'prev' → logprob: -22.375003814697266
    9. '0' → logprob: -22.375003814697266
    10. '    ' → logprob: -22.625003814697266

Token 1627: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.65707261255011e-06
    2. '_pos' → logprob: -12.750008583068848
    3. 'os' → logprob: -13.000008583068848
    4. 'osition' → logprob: -13.125008583068848
    5. 'pos' → logprob: -14.000008583068848
    6. '(pos' → logprob: -14.750008583068848
    7. '[pos' → logprob: -16.125009536743164
    8. 'osit' → logprob: -17.875009536743164
    9. 'Pos' → logprob: -18.000009536743164
    10. 'osi' → logprob: -18.250009536743164

Token 1628: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.40886303782463074
    2. ' =' → logprob: -1.2838630676269531
    3. '=' → logprob: -3.033863067626953
    4. ' if' → logprob: -6.408863067626953
    5. ',' → logprob: -6.783863067626953
    6. '
' → logprob: -6.908863067626953
    7. '               ' → logprob: -6.908863067626953
    8. 'if' → logprob: -7.158863067626953
    9. '           ' → logprob: -7.283863067626953
    10. '                    
' → logprob: -7.658863067626953

Token 1629: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00014764121442567557
    2. '           ' → logprob: -10.375147819519043
    3. '		           ' → logprob: -10.625147819519043
    4. '```' → logprob: -10.750147819519043
    5. '				' → logprob: -11.000147819519043
    6. '               ' → logprob: -11.000147819519043
    7. 'if' → logprob: -11.375147819519043
    8. '
' → logprob: -12.250147819519043
    9. '	               ' → logprob: -12.250147819519043
    10. '			       ' → logprob: -12.500147819519043

Token 1630: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16044895350933075
    2. '                   ' → logprob: -1.9104489088058472
    3. ' if' → logprob: -8.660449028015137
    4. '           ' → logprob: -10.785449028015137
    5. '               ' → logprob: -11.160449028015137
    6. '	if' → logprob: -12.410449028015137
    7. '   ' → logprob: -12.660449028015137
    8. '```' → logprob: -12.785449028015137
    9. '                       ' → logprob: -13.035449028015137
    10. '				' → logprob: -13.285449028015137

Token 1631: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.030927330255508423
    2. ' i' → logprob: -3.5309274196624756
    3. '0' → logprob: -6.7809271812438965
    4. '   ' → logprob: -10.780927658081055
    5. ' ' → logprob: -11.655927658081055
    6. '                   ' → logprob: -12.030927658081055
    7. '(i' → logprob: -13.280927658081055
    8. '                       ' → logprob: -14.530927658081055
    9. ' not' → logprob: -14.530927658081055
    10. ' (' → logprob: -14.655927658081055

Token 1632: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008061755215749145
    2. '>=' → logprob: -8.000805854797363
    3. ' >=' → logprob: -9.000805854797363
    4. '```' → logprob: -9.250805854797363
    5. '_' → logprob: -9.375805854797363
    6. ' <' → logprob: -9.625805854797363
    7. '<' → logprob: -10.000805854797363
    8. '   ' → logprob: -11.750805854797363
    9. '>' → logprob: -12.063305854797363
    10. '``' → logprob: -12.188305854797363

Token 1633: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.3904799818992615
    2. ' >=' → logprob: -1.2654800415039062
    3. ' <' → logprob: -3.7654800415039062
    4. '<' → logprob: -4.140480041503906
    5. '==' → logprob: -6.515480041503906
    6. ' ==' → logprob: -7.765480041503906
    7. '   ' → logprob: -10.265480041503906
    8. '<i' → logprob: -10.515480041503906
    9. ']>=' → logprob: -10.765480041503906
    10. '>' → logprob: -11.265480041503906

Token 1634: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.1041145626222715e-05
    2. '0' → logprob: -11.500011444091797
    3. ' H' → logprob: -14.000011444091797
    4. '   ' → logprob: -18.750011444091797
    5. ' ' → logprob: -19.875011444091797
    6. '	H' → logprob: -20.375011444091797
    7. '           ' → logprob: -20.750011444091797
    8. '
' → logprob: -21.000011444091797
    9. '-H' → logprob: -21.125011444091797
    10. '                   ' → logprob: -21.375011444091797

Token 1635: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.17994847893714905
    2. 'or' → logprob: -1.8049484491348267
    3. '	or' → logprob: -8.804948806762695
    4. '                   ' → logprob: -11.429948806762695
    5. ' and' → logprob: -11.679948806762695
    6. '           ' → logprob: -11.679948806762695
    7. 'and' → logprob: -11.929948806762695
    8. '               ' → logprob: -12.679948806762695
    9. '                       ' → logprob: -13.429948806762695
    10. '                           ' → logprob: -13.554948806762695

Token 1636: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.8624639324116288e-06
    2. ' j' → logprob: -13.250001907348633
    3. '   ' → logprob: -17.875001907348633
    4. '	j' → logprob: -20.500001907348633
    5. '  ' → logprob: -21.250001907348633
    6. '0' → logprob: -21.375001907348633
    7. '           ' → logprob: -22.125001907348633
    8. '    ' → logprob: -22.250001907348633
    9. '$j' → logprob: -22.250001907348633
    10. '       ' → logprob: -22.375001907348633

Token 1637: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.2378600735682994e-05
    2. '```' → logprob: -11.125032424926758
    3. '<|end|>' → logprob: -12.375032424926758
    4. '_' → logprob: -12.875032424926758
    5. '>=' → logprob: -13.125032424926758
    6. '[' → logprob: -13.375032424926758
    7. '<|end|>' → logprob: -13.750032424926758
    8. '₂' → logprob: -14.250032424926758
    9. ' ' → logprob: -14.375032424926758
    10. '#' → logprob: -14.625032424926758

Token 1638: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.0700506940484047
    2. ' >=' → logprob: -2.6950507164001465
    3. ']>=' → logprob: -9.695050239562988
    4. ')>=' → logprob: -10.195050239562988
    5. '≥' → logprob: -11.820050239562988
    6. '<|end|>' → logprob: -13.195050239562988
    7. '```' → logprob: -13.195050239562988
    8. '[' → logprob: -13.445050239562988
    9. ')' → logprob: -13.945050239562988
    10. '>' → logprob: -14.195050239562988

Token 1639: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -8.494741632603109e-05
    2. ' W' → logprob: -9.37508487701416
    3. '   ' → logprob: -16.250085830688477
    4. ' ' → logprob: -17.375085830688477
    5. '	W' → logprob: -17.375085830688477
    6. '  ' → logprob: -18.375085830688477
    7. '=W' → logprob: -18.750085830688477
    8. '<W' → logprob: -18.875085830688477
    9. '```' → logprob: -19.500085830688477
    10. '(W' → logprob: -20.125085830688477

Token 1640: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7965167760848999
    2. '                       ' → logprob: -1.0465167760849
    3. ':' → logprob: -1.6715167760849
    4. '                   ' → logprob: -4.9215168952941895
    5. '):
' → logprob: -6.7965168952941895
    6. ' or' → logprob: -6.7965168952941895
    7. '                           ' → logprob: -8.421516418457031
    8. '               ' → logprob: -9.546516418457031
    9. '                               ' → logprob: -10.046516418457031
    10. ':return' → logprob: -11.296516418457031

Token 1641: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.002896286314353347
    2. '                           ' → logprob: -6.127896308898926
    3. '                               ' → logprob: -8.002896308898926
    4. '                   ' → logprob: -9.252896308898926
    5. '                        
' → logprob: -9.252896308898926
    6. '                        ' → logprob: -9.877896308898926
    7. ':' → logprob: -10.627896308898926
    8. '```' → logprob: -11.002896308898926
    9. '               ' → logprob: -11.502896308898926
    10. '                      ' → logprob: -11.502896308898926

Token 1642: ' #' (ID: 1069)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.009082136675715446
    2. '                   ' → logprob: -5.259082317352295
    3. ' curr' → logprob: -5.759082317352295
    4. '                       ' → logprob: -7.509082317352295
    5. '                           ' → logprob: -9.509081840515137
    6. '[curr' → logprob: -10.384081840515137
    7. '(curr' → logprob: -11.509081840515137
    8. '                               ' → logprob: -12.134081840515137
    9. '```' → logprob: -12.384081840515137
    10. '	curr' → logprob: -12.509081840515137

Token 1643: ' termina' (ID: 86892)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.0006083175539970398
    2. 'for' → logprob: -8.000608444213867
    3. ' curr' → logprob: -8.500608444213867
    4. '                   ' → logprob: -9.750608444213867
    5. '                           ' → logprob: -13.000608444213867
    6. '(curr' → logprob: -13.000608444213867
    7. '                       ' → logprob: -13.000608444213867
    8. '[curr' → logprob: -13.375608444213867
    9. ' for' → logprob: -14.000608444213867
    10. '```' → logprob: -14.125608444213867

Token 1644: 'ison' (ID: 5072)
  Prédit: 'te'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.2409197837114334
    2. '                       ' → logprob: -2.990919828414917
    3. '                   ' → logprob: -2.990919828414917
    4. 'n' → logprob: -3.615919828414917
    5. '           ' → logprob: -3.990919828414917
    6. 'l' → logprob: -4.240919589996338
    7. 'tion' → logprob: -4.740919589996338
    8. 't' → logprob: -5.115919589996338
    9. 'ted' → logprob: -5.115919589996338
    10. '               ' → logprob: -5.240919589996338

Token 1645: ',' (ID: 11)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.6675543785095215
    2. '                   ' → logprob: -0.7925543785095215
    3. '                           ' → logprob: -4.1675543785095215
    4. '               ' → logprob: -5.4175543785095215
    5. ':
' → logprob: -5.7925543785095215
    6. '                               ' → logprob: -5.9175543785095215
    7. '[curr' → logprob: -5.9175543785095215
    8. 'curr' → logprob: -6.4175543785095215
    9. '):
' → logprob: -6.9175543785095215
    10. ':' → logprob: -7.2925543785095215

Token 1646: ' on' (ID: 402)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.0042746346443891525
    2. ' curr' → logprob: -5.504274845123291
    3. '                   ' → logprob: -8.629274368286133
    4. '                       ' → logprob: -12.004274368286133
    5. 'for' → logprob: -12.254274368286133
    6. '                           ' → logprob: -12.254274368286133
    7. '[curr' → logprob: -14.879274368286133
    8. ' for' → logprob: -15.004274368286133
    9. '(curr' → logprob: -15.004274368286133
    10. '                               ' → logprob: -15.129274368286133

Token 1647: ' reste' (ID: 26769)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.1141471415758133
    2. '[curr' → logprob: -2.489147186279297
    3. '                   ' → logprob: -4.739147186279297
    4. ' curr' → logprob: -5.114147186279297
    5. 'continue' → logprob: -5.489147186279297
    6. '                           ' → logprob: -6.489147186279297
    7. 'for' → logprob: -6.739147186279297
    8. '                       ' → logprob: -6.989147186279297
    9. '(curr' → logprob: -7.739147186279297
    10. '           ' → logprob: -7.989147186279297

Token 1648: ' sur' (ID: 1512)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.10818854719400406
    2. '(pos' → logprob: -2.6081886291503906
    3. '(i' → logprob: -3.9831886291503906
    4. '                   ' → logprob: -5.108188629150391
    5. '(' → logprob: -6.108188629150391
    6. '[pos' → logprob: -7.108188629150391
    7. '                       ' → logprob: -8.48318862915039
    8. ' (' → logprob: -8.60818862915039
    9. ' pos' → logprob: -8.73318862915039
    10. '[i' → logprob: -8.73318862915039

Token 1649: ' cette' (ID: 7696)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.025162406265735626
    2. '(i' → logprob: -3.7751624584198
    3. '(pos' → logprob: -6.275162220001221
    4. ' pos' → logprob: -10.525162696838379
    5. '   ' → logprob: -12.775162696838379
    6. ' (' → logprob: -13.275162696838379
    7. 'i' → logprob: -13.900162696838379
    8. '	pos' → logprob: -16.150161743164062
    9. 'position' → logprob: -16.275161743164062
    10. '(' → logprob: -17.650161743164062

Token 1650: ' position' (ID: 4010)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.23119160532951355
    2. 'position' → logprob: -1.981191635131836
    3. '(i' → logprob: -2.731191635131836
    4. '(pos' → logprob: -6.106191635131836
    5. ' position' → logprob: -7.606191635131836
    6. ' (' → logprob: -8.231191635131836
    7. ' pos' → logprob: -8.731191635131836
    8. '(position' → logprob: -10.231191635131836
    9. 'i' → logprob: -10.481191635131836
    10. 'token' → logprob: -10.606191635131836

Token 1651: ' finale' (ID: 37759)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11830443143844604
    2. '                       ' → logprob: -2.243304491043091
    3. '                           ' → logprob: -5.993304252624512
    4. '               ' → logprob: -7.118304252624512
    5. ')' → logprob: -8.118304252624512
    6. '):
' → logprob: -8.368304252624512
    7. '				' → logprob: -8.493304252624512
    8. ':
' → logprob: -8.493304252624512
    9. '                               ' → logprob: -8.493304252624512
    10. '           ' → logprob: -8.618304252624512

Token 1652: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.11333226412534714
    2. '                   ' → logprob: -2.2383322715759277
    3. '                           ' → logprob: -8.48833179473877
    4. '
' → logprob: -9.23833179473877
    5. ':
' → logprob: -9.98833179473877
    6. '               ' → logprob: -10.23833179473877
    7. ',' → logprob: -10.36333179473877
    8. '           ' → logprob: -10.48833179473877
    9. '					' → logprob: -10.61333179473877
    10. ':' → logprob: -11.98833179473877

Token 1653: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0444556400179863
    2. '                           ' → logprob: -3.1694555282592773
    3. '                               ' → logprob: -7.419455528259277
    4. '                   ' → logprob: -8.044455528259277
    5. '```' → logprob: -8.669455528259277
    6. '           ' → logprob: -8.919455528259277
    7. '                        ' → logprob: -9.794455528259277
    8. '               ' → logprob: -9.919455528259277
    9. '                        
' → logprob: -9.919455528259277
    10. 'continue' → logprob: -11.544455528259277

Token 1654: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' (adapté à ' curr') → logprob: -0.003091558814048767
    2. '                       ' → logprob: -6.878091335296631
    3. '                   ' → logprob: -7.128091335296631
    4. '                           ' → logprob: -7.503091335296631
    5. ' curr' → logprob: -7.628091335296631
    6. '                               ' → logprob: -9.003091812133789
    7. '```' → logprob: -10.378091812133789
    8. '	curr' → logprob: -11.128091812133789
    9. '               ' → logprob: -11.253091812133789
    10. '[curr' → logprob: -11.878091812133789

Token 1655: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.054500666621607e-06
    2. '[pos' → logprob: -14.00000286102295
    3. '[k' → logprob: -14.00000286102295
    4. 'i' → logprob: -14.62500286102295
    5. '=' → logprob: -15.50000286102295
    6. '[' → logprob: -15.87500286102295
    7. '```' → logprob: -16.500003814697266
    8. '[j' → logprob: -16.625003814697266
    9. '                   ' → logprob: -17.000003814697266
    10. '=i' → logprob: -17.125003814697266

Token 1656: '_' (ID: 62)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002067588793579489
    2. '_' → logprob: -8.50020694732666
    3. '_]' → logprob: -13.62520694732666
    4. '₂' → logprob: -14.50020694732666
    5. '_
' → logprob: -14.62520694732666
    6. '_,' → logprob: -14.87520694732666
    7. '```' → logprob: -15.12520694732666
    8. '_[' → logprob: -16.250205993652344
    9. '[' → logprob: -16.750205993652344
    10. '][' → logprob: -17.000205993652344

Token 1657: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005504222586750984
    2. '[i' → logprob: -5.255504131317139
    3. ']' → logprob: -9.005504608154297
    4. 'i' → logprob: -9.380504608154297
    5. '[' → logprob: -11.505504608154297
    6. '           ' → logprob: -12.130504608154297
    7. '_' → logprob: -12.255504608154297
    8. ' ][' → logprob: -12.255504608154297
    9. '(i' → logprob: -12.380504608154297
    10. '   ' → logprob: -12.505504608154297

Token 1658: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.7432603272027336e-06
    2. '   ' → logprob: -14.125001907348633
    3. ' j' → logprob: -14.375001907348633
    4. '           ' → logprob: -16.625001907348633
    5. '```' → logprob: -16.625001907348633
    6. '$j' → logprob: -16.750001907348633
    7. '[j' → logprob: -17.000001907348633
    8. 'i' → logprob: -17.125001907348633
    9. ' ' → logprob: -17.500001907348633
    10. '	j' → logprob: -17.500001907348633

Token 1659: '_]' (ID: 163385)
  Prédit: '_]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_]' → logprob: -0.06006472930312157
    2. ']' → logprob: -3.4350647926330566
    3. '_' → logprob: -3.6850647926330566
    4. ']=' → logprob: -7.560064792633057
    5. '][' → logprob: -8.560064315795898
    6. '_=' → logprob: -9.185064315795898
    7. 'i' → logprob: -10.685064315795898
    8. '_
' → logprob: -10.935064315795898
    9. ']=(' → logprob: -11.060064315795898
    10. '[i' → logprob: -11.185064315795898

Token 1660: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06208879500627518
    2. ' =' → logprob: -2.81208872795105
    3. '=i' → logprob: -9.062088966369629
    4. '[i' → logprob: -12.812088966369629
    5. '=j' → logprob: -14.687088966369629
    6. '=k' → logprob: -14.687088966369629
    7. '=
' → logprob: -14.812088966369629
    8. '[' → logprob: -14.937088966369629
    9. '＝' → logprob: -15.562088966369629
    10. '=[' → logprob: -15.812088966369629

Token 1661: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.12797671556472778
    2. '(i' → logprob: -2.127976655960083
    3. '(pos' → logprob: -6.877976894378662
    4. ' pos' → logprob: -11.752976417541504
    5. 'i' → logprob: -11.877976417541504
    6. ' (' → logprob: -13.252976417541504
    7. '   ' → logprob: -14.752976417541504
    8. '(I' → logprob: -15.627976417541504
    9. '	pos' → logprob: -15.877976417541504
    10. '[i' → logprob: -16.12797737121582

Token 1662: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. 'os' → logprob: -11.75001049041748
    3. 'osition' → logprob: -13.12501049041748
    4. 'pos' → logprob: -15.00001049041748
    5. '```' → logprob: -17.250009536743164
    6. 'osi' → logprob: -18.125009536743164
    7. 'osit' → logprob: -18.125009536743164
    8. 's' → logprob: -18.250009536743164
    9. '2' → logprob: -18.375009536743164
    10. 'on' → logprob: -18.750009536743164

Token 1663: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01058011781424284
    2. '                       ' → logprob: -5.260580062866211
    3. 'else' → logprob: -5.760580062866211
    4. '               ' → logprob: -7.135580062866211
    5. '                           ' → logprob: -7.635580062866211
    6. ' else' → logprob: -8.010580062866211
    7. '           ' → logprob: -8.635580062866211
    8. 'continue' → logprob: -9.135580062866211
    9. '<|end|>' → logprob: -9.260580062866211
    10. '				' → logprob: -9.510580062866211

Token 1664: '                   ' (ID: 699)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5273873805999756
    2. '                   ' → logprob: -0.9023873805999756
    3. 'else' → logprob: -5.652387619018555
    4. '```' → logprob: -8.027387619018555
    5. '                           ' → logprob: -9.527387619018555
    6. '					' → logprob: -9.527387619018555
    7. '				' → logprob: -9.652387619018555
    8. '               ' → logprob: -10.277387619018555
    9. ' else' → logprob: -10.277387619018555
    10. '	                   ' → logprob: -10.652387619018555

Token 1665: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4354098439216614
    2. '                   ' → logprob: -1.1854097843170166
    3. ' else' → logprob: -3.0604097843170166
    4. '               ' → logprob: -8.185409545898438
    5. '   ' → logprob: -9.435409545898438
    6. '```' → logprob: -10.310409545898438
    7. '           ' → logprob: -10.810409545898438
    8. '                       ' → logprob: -10.935409545898438
    9. '
' → logprob: -11.185409545898438
    10. '	else' → logprob: -11.435409545898438

Token 1666: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.13035398721694946
    2. '                       ' → logprob: -2.5053539276123047
    3. ':' → logprob: -3.3803539276123047
    4. '                   ' → logprob: -5.130353927612305
    5. '{
' → logprob: -8.380353927612305
    6. '):
' → logprob: -8.755353927612305
    7. ' :
' → logprob: -9.755353927612305
    8. '                           ' → logprob: -10.255353927612305
    9. '{' → logprob: -10.880353927612305
    10. '                    ' → logprob: -11.005353927612305

Token 1667: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.013380328193306923
    2. 'pos' → logprob: -4.763380527496338
    3. 'curr' → logprob: -5.888380527496338
    4. '                   ' → logprob: -6.888380527496338
    5. 'prev' → logprob: -7.388380527496338
    6. ' curr' → logprob: -9.13838005065918
    7. '```' → logprob: -10.01338005065918
    8. ' pos' → logprob: -10.13838005065918
    9. '                           ' → logprob: -10.38838005065918
    10. 'next' → logprob: -10.51338005065918

Token 1668: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' (adapté à ' curr') → logprob: -0.0019167414866387844
    2. 'pos' → logprob: -6.376916885375977
    3. '                   ' → logprob: -9.501916885375977
    4. 'prev' → logprob: -9.876916885375977
    5. ' curr' → logprob: -10.001916885375977
    6. 'dp' → logprob: -10.626916885375977
    7. '                       ' → logprob: -11.876916885375977
    8. 'next' → logprob: -12.001916885375977
    9. '                           ' → logprob: -14.001916885375977
    10. 'tmp' → logprob: -14.251916885375977

Token 1669: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.42888715863227844
    2. '[' → logprob: -1.553887128829956
    3. '=' → logprob: -3.053887128829956
    4. '[pos' → logprob: -3.803887128829956
    5. 'pos' → logprob: -3.928887128829956
    6. 'dp' → logprob: -4.303887367248535
    7. '[k' → logprob: -5.053887367248535
    8. 'prev' → logprob: -5.553887367248535
    9. ' =' → logprob: -5.553887367248535
    10. '][' → logprob: -5.553887367248535

Token 1670: '_' (ID: 62)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05592948943376541
    2. '_' → logprob: -3.05592942237854
    3. '][' → logprob: -6.055929660797119
    4. '[' → logprob: -6.555929660797119
    5. '[i' → logprob: -6.805929660797119
    6. '```' → logprob: -7.680929660797119
    7. '_,' → logprob: -7.930929660797119
    8. ',' → logprob: -8.305929183959961
    9. 'i' → logprob: -8.555929183959961
    10. '                   ' → logprob: -9.180929183959961

Token 1671: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0627492293715477
    2. '[i' → logprob: -3.937749147415161
    3. 'pos' → logprob: -4.06274938583374
    4. '2' → logprob: -4.56274938583374
    5. 'i' → logprob: -5.56274938583374
    6. '
' → logprob: -5.93774938583374
    7. '[' → logprob: -6.31274938583374
    8. '   ' → logprob: -6.81274938583374
    9. '=' → logprob: -7.18774938583374
    10. ']' → logprob: -7.43774938583374

Token 1672: 'j' (ID: 73)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3935522735118866
    2. 'j' → logprob: -1.768552303314209
    3. 'prev' → logprob: -2.393552303314209
    4. 'pos' → logprob: -3.393552303314209
    5. 'k' → logprob: -4.268552303314209
    6. 'i' → logprob: -4.518552303314209
    7. '][' → logprob: -6.768552303314209
    8. '[' → logprob: -6.893552303314209
    9. 'curr' → logprob: -7.893552303314209
    10. '   ' → logprob: -7.893552303314209

Token 1673: '_]' (ID: 163385)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3535747230052948
    2. '_]' → logprob: -1.2285747528076172
    3. '][' → logprob: -5.978574752807617
    4. ']' → logprob: -7.228574752807617
    5. '2' → logprob: -7.353574752807617
    6. '+' → logprob: -7.603574752807617
    7. '_[' → logprob: -8.853574752807617
    8. '_,' → logprob: -9.353574752807617
    9. '   ' → logprob: -9.978574752807617
    10. '[j' → logprob: -10.103574752807617

Token 1674: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0052398028783500195
    2. ' =' → logprob: -5.255239963531494
    3. ']=' → logprob: -12.880239486694336
    4. '=
' → logprob: -13.130239486694336
    5. ']' → logprob: -13.505239486694336
    6. ')=' → logprob: -17.255239486694336
    7. '[' → logprob: -17.255239486694336
    8. '=

' → logprob: -17.380239486694336
    9. ')' → logprob: -17.505239486694336
    10. '.=' → logprob: -17.880239486694336

Token 1675: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.023270051926374435
    2. 'dp' → logprob: -3.7732701301574707
    3. ' prev' → logprob: -10.648269653320312
    4. ' dp' → logprob: -15.148269653320312
    5. '(prev' → logprob: -15.273269653320312
    6. '   ' → logprob: -16.148269653320312
    7. '	prev' → logprob: -16.648269653320312
    8. 'pre' → logprob: -17.523269653320312
    9. ' ' → logprob: -18.773269653320312
    10. '(dp' → logprob: -18.898269653320312

Token 1676: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000730781932361424
    2. '[pos' → logprob: -7.250730991363525
    3. '[' → logprob: -11.500730514526367
    4. 'i' → logprob: -12.500730514526367
    5. 'pos' → logprob: -12.750730514526367
    6. '
' → logprob: -13.500730514526367
    7. '```' → logprob: -13.875730514526367
    8. '[j' → logprob: -14.375730514526367
    9. '[
' → logprob: -14.500730514526367
    10. '][' → logprob: -15.375730514526367

Token 1677: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.43242567777633667
    2. '_' → logprob: -1.0574257373809814
    3. '_[' → logprob: -6.307425498962402
    4. '_]' → logprob: -6.682425498962402
    5. '][' → logprob: -8.682425498962402
    6. '[i' → logprob: -9.057425498962402
    7. '[' → logprob: -9.182425498962402
    8. '+' → logprob: -9.807425498962402
    9. '_
' → logprob: -10.557425498962402
    10. 'i' → logprob: -10.557425498962402

Token 1678: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00013011827832087874
    2. ']' → logprob: -9.250129699707031
    3. '[j' → logprob: -11.875129699707031
    4. ' ][' → logprob: -12.125129699707031
    5. '                   ' → logprob: -12.375129699707031
    6. '   ' → logprob: -13.000129699707031
    7. '           ' → logprob: -13.000129699707031
    8. '[i' → logprob: -13.250129699707031
    9. '                           ' → logprob: -13.250129699707031
    10. '                       ' → logprob: -13.375129699707031

Token 1679: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.4736459888808895e-05
    2. ' j' → logprob: -11.250014305114746
    3. '   ' → logprob: -14.375014305114746
    4. '[j' → logprob: -15.250014305114746
    5. '	j' → logprob: -15.875014305114746
    6. '           ' → logprob: -16.250015258789062
    7. '       ' → logprob: -16.250015258789062
    8. '                   ' → logprob: -16.375015258789062
    9. '
' → logprob: -16.625015258789062
    10. '     ' → logprob: -17.250015258789062

Token 1680: '2' (ID: 17)
  Prédit: '_]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_]' → logprob: -0.15047617256641388
    2. '_' → logprob: -2.0254762172698975
    3. '2' → logprob: -4.900475978851318
    4. ']' → logprob: -9.275476455688477
    5. '_[' → logprob: -9.525476455688477
    6. '_
' → logprob: -10.150476455688477
    7. '][' → logprob: -10.525476455688477
    8. '[j' → logprob: -10.900476455688477
    9. '[' → logprob: -11.275476455688477
    10. '   ' → logprob: -11.650476455688477

Token 1681: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2698613107204437
    2. '<|end|>' → logprob: -1.6448613405227661
    3. ')' → logprob: -3.5198612213134766
    4. '                   ' → logprob: -4.769861221313477
    5. '               ' → logprob: -6.394861221313477
    6. '<|end|>' → logprob: -6.644861221313477
    7. '           ' → logprob: -7.394861221313477
    8. '                       ' → logprob: -7.769861221313477
    9. '       ' → logprob: -8.269861221313477
    10. '}' → logprob: -8.394861221313477

Token 1682: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018635177984833717
    2. '                   ' → logprob: -4.143635272979736
    3. '		' → logprob: -6.768635272979736
    4. '                           ' → logprob: -7.518635272979736
    5. '               ' → logprob: -8.393634796142578
    6. '```' → logprob: -8.643634796142578
    7. '				' → logprob: -9.268634796142578
    8. '                       ' → logprob: -9.268634796142578
    9. '       ' → logprob: -9.518634796142578
    10. '						' → logprob: -10.643634796142578

Token 1683: ' dp' (ID: 21546)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011641718447208405
    2. 'k' → logprob: -9.750116348266602
    3. '		' → logprob: -10.750116348266602
    4. '                   ' → logprob: -11.000116348266602
    5. '
' → logprob: -12.875116348266602
    6. '```' → logprob: -12.875116348266602
    7. '       ' → logprob: -13.375116348266602
    8. '   ' → logprob: -13.500116348266602
    9. '[' → logprob: -13.500116348266602
    10. '               ' → logprob: -13.625116348266602

Token 1684: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007148159202188253
    2. '.' → logprob: -7.6257147789001465
    3. 'append' → logprob: -9.625715255737305
    4. '_append' → logprob: -9.875715255737305
    5. 'Append' → logprob: -10.000715255737305
    6. '.app' → logprob: -10.500715255737305
    7. '.extend' → logprob: -11.500715255737305
    8. '[k' → logprob: -12.000715255737305
    9. '.Append' → logprob: -12.250715255737305
    10. '```' → logprob: -12.500715255737305

Token 1685: '(curr' (ID: 49739)
  Prédit: '(curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(curr' → logprob: -1.759734732331708e-05
    2. 'curr' → logprob: -11.125017166137695
    3. '[curr' → logprob: -13.625017166137695
    4. '(cur' → logprob: -14.000017166137695
    5. '(' → logprob: -15.000017166137695
    6. ' curr' → logprob: -15.375017166137695
    7. '(dp' → logprob: -16.000017166137695
    8. '(c' → logprob: -16.375017166137695
    9. ' (' → logprob: -17.000017166137695
    10. '(prev' → logprob: -18.125017166137695

Token 1686: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4329889714717865
    2. ')' → logprob: -1.1829890012741089
    3. '<|end|>' → logprob: -3.3079888820648193
    4. '<|end|>' → logprob: -5.057989120483398
    5. ']' → logprob: -7.807989120483398
    6. ')
' → logprob: -7.807989120483398
    7. '   ' → logprob: -8.307989120483398
    8. '       ' → logprob: -8.307989120483398
    9. '		' → logprob: -8.307989120483398
    10. '
' → logprob: -8.682989120483398

Token 1687: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3077699840068817
    2. '
' → logprob: -1.557770013809204
    3. '        
' → logprob: -4.182769775390625
    4. '   ' → logprob: -4.307769775390625
    5. '    
' → logprob: -4.557769775390625
    6. '```' → logprob: -4.682769775390625
    7. '<|end|>' → logprob: -6.807769775390625
    8. 'n' → logprob: -6.807769775390625
    9. 'k' → logprob: -7.057769775390625
    10. '           ' → logprob: -7.182769775390625

Token 1688: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.0034803354647010565
    2. '           ' → logprob: -5.753480434417725
    3. '   ' → logprob: -8.253479957580566
    4. ' k' → logprob: -10.128479957580566
    5. '       ' → logprob: -13.753479957580566
    6. '	k' → logprob: -14.003479957580566
    7. '
' → logprob: -15.628479957580566
    8. ' ' → logprob: -15.753479957580566
    9. '```' → logprob: -16.253480911254883
    10. '{k' → logprob: -18.003480911254883

Token 1689: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0009144435753114522
    2. ' +=' → logprob: -7.000914573669434
    3. '+' → logprob: -13.875914573669434
    4. '=' → logprob: -13.875914573669434
    5. ']+=' → logprob: -13.875914573669434
    6. '+='' → logprob: -16.250913619995117
    7. '+="' → logprob: -18.375913619995117
    8. '+=(' → logprob: -18.500913619995117
    9. '   ' → logprob: -19.125913619995117
    10. '```' → logprob: -20.375913619995117

Token 1690: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '```' → logprob: -19.5
    4. '   ' → logprob: -21.5
    5. '
' → logprob: -22.125
    6. '+' → logprob: -23.125
    7. '=' → logprob: -23.375
    8. '１' → logprob: -23.5
    9. '۱' → logprob: -23.875
    10. 'k' → logprob: -24.0

Token 1691: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.5
    3. '```' → logprob: -22.625
    4. '１' → logprob: -23.125
    5. '۱' → logprob: -23.25
    6. '१' → logprob: -24.5
    7. '১' → logprob: -25.125
    8. '0' → logprob: -25.125
    9. 'k' → logprob: -25.25
    10. '+' → logprob: -25.625

Token 1692: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007619052659720182
    2. '   ' → logprob: -5.5076189041137695
    3. '<|end|>' → logprob: -6.3826189041137695
    4. '        
' → logprob: -7.1326189041137695
    5. '           ' → logprob: -8.75761890411377
    6. '
' → logprob: -9.00761890411377
    7. '    
' → logprob: -9.13261890411377
    8. ')' → logprob: -9.25761890411377
    9. 'next' → logprob: -9.63261890411377
    10. '(n' → logprob: -10.00761890411377

Token 1693: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15542815625667572
    2. 'pos' → logprob: -2.155428171157837
    3. '   ' → logprob: -4.155427932739258
    4. '```' → logprob: -5.780427932739258
    5. 'next' → logprob: -6.155427932739258
    6. 'position' → logprob: -6.280427932739258
    7. '
' → logprob: -6.530427932739258
    8. ' pos' → logprob: -7.030427932739258
    9. 'n' → logprob: -7.530427932739258
    10. 'result' → logprob: -7.655427932739258

Token 1694: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05190451815724373
    2. 'pos' → logprob: -3.4269044399261475
    3. '#' (adapté à ' #') → logprob: -5.051904678344727
    4. '
' → logprob: -5.051904678344727
    5. '```' → logprob: -5.801904678344727
    6. 'position' → logprob: -7.301904678344727
    7. '   ' → logprob: -7.426904678344727
    8. 'result' → logprob: -7.676904678344727
    9. '        
' → logprob: -8.426904678344727
    10. 'start' → logprob: -8.926904678344727

Token 1695: ' maintenant' (ID: 35735)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015489177778363228
    2. 'pos' → logprob: -4.265489101409912
    3. '#' → logprob: -7.265489101409912
    4. '   ' → logprob: -8.39048957824707
    5. 'position' → logprob: -9.01548957824707
    6. 'result' → logprob: -9.26548957824707
    7. 'start' → logprob: -9.76548957824707
    8. '```' → logprob: -9.89048957824707
    9. 'final' → logprob: -10.89048957824707
    10. '        
' → logprob: -11.26548957824707

Token 1696: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2638353705406189
    2. 'pos' → logprob: -1.5138354301452637
    3. ' pos' → logprob: -5.138835430145264
    4. '#' → logprob: -5.888835430145264
    5. '```' → logprob: -6.763835430145264
    6. 'position' → logprob: -6.888835430145264
    7. '   ' → logprob: -7.638835430145264
    8. ' position' → logprob: -9.513834953308105
    9. '
' → logprob: -9.638834953308105
    10. '_pos' → logprob: -9.763834953308105

Token 1697: ' applique' (ID: 180579)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41912537813186646
    2. 'pos' → logprob: -1.6691253185272217
    3. '#' → logprob: -3.1691253185272217
    4. 'position' → logprob: -3.4191253185272217
    5. 'final' → logprob: -3.6691253185272217
    6. 'result' → logprob: -4.044125556945801
    7. '_pos' → logprob: -4.169125556945801
    8. ' #' → logprob: -5.544125556945801
    9. '_position' → logprob: -5.794125556945801
    10. 'def' → logprob: -6.169125556945801

Token 1698: ' la' (ID: 557)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.17585784196853638
    2. '       ' → logprob: -1.9258577823638916
    3. ' pos' → logprob: -4.675858020782471
    4. 'cur' → logprob: -6.550858020782471
    5. '   ' → logprob: -6.675858020782471
    6. 'position' → logprob: -6.800858020782471
    7. '```' → logprob: -6.925858020782471
    8. '#' → logprob: -8.425857543945312
    9. 'result' → logprob: -8.925857543945312
    10. 'current' → logprob: -9.050857543945312

Token 1699: ' marche' (ID: 58191)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.004723583813756704
    2. 'position' → logprob: -5.75472354888916
    3. '#' → logprob: -7.37972354888916
    4. 'cur' → logprob: -7.50472354888916
    5. 'result' → logprob: -9.50472354888916
    6. 'curr' → logprob: -9.50472354888916
    7. 'res' → logprob: -9.75472354888916
    8. '   ' → logprob: -9.87972354888916
    9. 'current' → logprob: -10.12972354888916
    10. '```' → logprob: -11.37972354888916

Token 1700: ' N' (ID: 478)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16564200818538666
    2. 'pos' → logprob: -1.9156420230865479
    3. '```' → logprob: -6.290641784667969
    4. ' pos' → logprob: -6.915641784667969
    5. 'position' → logprob: -7.290641784667969
    6. '   ' → logprob: -7.290641784667969
    7. '        
' → logprob: -8.040641784667969
    8. '
' → logprob: -8.040641784667969
    9. 'start' → logprob: -8.665641784667969
    10. 'current' → logprob: -9.415641784667969

Token 1701: ' fois' (ID: 14697)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09147357195615768
    2. 'pos' → logprob: -2.7164735794067383
    3. '   ' → logprob: -3.9664735794067383
    4. ' pos' → logprob: -7.216473579406738
    5. '	pos' → logprob: -7.966473579406738
    6. '```' → logprob: -8.341473579406738
    7. 'position' → logprob: -8.466473579406738
    8. '        
' → logprob: -8.841473579406738
    9. 'cur' → logprob: -8.841473579406738
    10. '(pos' → logprob: -9.341473579406738

Token 1702: ' en' (ID: 469)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02478080242872238
    2. '   ' → logprob: -4.274780750274658
    3. 'pos' → logprob: -4.649780750274658
    4. '
' → logprob: -8.149781227111816
    5. ' pos' → logprob: -8.524781227111816
    6. '	pos' → logprob: -8.649781227111816
    7. '```' → logprob: -9.274781227111816
    8. '        
' → logprob: -9.399781227111816
    9. 'position' → logprob: -9.899781227111816
    10. '    
' → logprob: -9.899781227111816

Token 1703: ' combin' (ID: 25307)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.1079305410385132
    2. '       ' → logprob: -1.3579305410385132
    3. 'position' → logprob: -2.9829306602478027
    4. 'range' → logprob: -3.1079306602478027
    5. '[(' → logprob: -3.2329306602478027
    6. '(' → logprob: -3.4829306602478027
    7. '   ' → logprob: -3.4829306602478027
    8. '[' → logprob: -3.6079306602478027
    9. 'part' → logprob: -3.6079306602478027
    10. 'starting' → logprob: -4.107930660247803

Token 1704: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.01872106082737446
    2. 'nant' → logprob: -4.018721103668213
    3. '#' → logprob: -9.018720626831055
    4. 'n' → logprob: -9.393720626831055
    5. 'pos' → logprob: -9.518720626831055
    6. '   ' → logprob: -9.893720626831055
    7. 'ing' → logprob: -10.018720626831055
    8. 'e' → logprob: -10.268720626831055
    9. 'ent' → logprob: -10.643720626831055
    10. '```' → logprob: -10.893720626831055

Token 1705: ' les' (ID: 1341)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.15315915644168854
    2. '       ' → logprob: -2.0281591415405273
    3. 'cur' → logprob: -5.653159141540527
    4. 'position' → logprob: -5.778159141540527
    5. '   ' → logprob: -6.528159141540527
    6. ' pos' → logprob: -7.028159141540527
    7. '```' → logprob: -7.403159141540527
    8. 'current' → logprob: -7.903159141540527
    9. '(pos' → logprob: -9.153159141540527
    10. 'x' → logprob: -9.278159141540527

Token 1706: ' puiss' (ID: 102546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.29723238945007324
    2. ' dp' → logprob: -2.7972323894500732
    3. 'k' → logprob: -3.1722323894500732
    4. 'powers' → logprob: -3.2972323894500732
    5. 'pow' → logprob: -3.4222323894500732
    6. '[k' → logprob: -3.9222323894500732
    7. '[' → logprob: -4.422232627868652
    8. 'bits' → logprob: -4.922232627868652
    9. ' k' → logprob: -5.297232627868652
    10. ' powers' → logprob: -5.422232627868652

Token 1707: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -6.635164754698053e-05
    2. 'a' → logprob: -10.500066757202148
    3. 'ance' → logprob: -10.750066757202148
    4. 'dp' → logprob: -12.125066757202148
    5. '```' → logprob: -13.000066757202148
    6. 'ANCES' → logprob: -13.375066757202148
    7. '   ' → logprob: -13.500066757202148
    8. 'anc' → logprob: -13.875066757202148
    9. '_' → logprob: -14.375066757202148
    10. '=' → logprob: -14.500066757202148

Token 1708: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0080583356320858
    2. 'pos' → logprob: -5.508058547973633
    3. '_pos' → logprob: -7.258058547973633
    4. '        
' → logprob: -7.383058547973633
    5. 'position' → logprob: -7.383058547973633
    6. '(pos' → logprob: -8.008058547973633
    7. '   ' → logprob: -8.008058547973633
    8. '```' → logprob: -8.008058547973633
    9. '
' → logprob: -9.133058547973633
    10. 'current' → logprob: -9.383058547973633

Token 1709: ' deux' (ID: 10301)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0019463682547211647
    2. 'de' → logprob: -6.251946449279785
    3. 'two' → logprob: -11.501946449279785
    4. ' ' → logprob: -12.126946449279785
    5. '```' → logprob: -13.501946449279785
    6. ' deux' → logprob: -14.251946449279785
    7. 'Deux' → logprob: -16.12694549560547
    8. ' two' → logprob: -16.25194549560547
    9. '   ' → logprob: -17.00194549560547
    10. '1' → logprob: -17.12694549560547

Token 1710: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3280217945575714
    2. 'pos' → logprob: -1.328021764755249
    3. ' pos' → logprob: -5.703022003173828
    4. 'position' → logprob: -5.953022003173828
    5. '```' → logprob: -6.078022003173828
    6. '
' → logprob: -6.203022003173828
    7. '   ' → logprob: -6.203022003173828
    8. 'current' → logprob: -7.453022003173828
    9. '        
' → logprob: -7.703022003173828
    10. '_pos' → logprob: -8.578022003173828

Token 1711: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007567941676825285
    2. 'pos' → logprob: -5.257567882537842
    3. '```' → logprob: -6.632567882537842
    4. '   ' → logprob: -7.257567882537842
    5. ' pos' → logprob: -9.007568359375
    6. '        
' → logprob: -9.507568359375
    7. '``' → logprob: -10.382568359375
    8. '
' → logprob: -10.757568359375
    9. 'position' → logprob: -11.007568359375
    10. '           ' → logprob: -11.632568359375

Token 1712: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1074804738163948
    2. 'pos' → logprob: -2.357480525970459
    3. '   ' → logprob: -5.107480525970459
    4. '```' → logprob: -7.732480525970459
    5. 'i' → logprob: -8.2324800491333
    6. 'cur' → logprob: -8.6074800491333
    7. ' pos' → logprob: -8.9824800491333
    8. 'position' → logprob: -9.2324800491333
    9. 'current' → logprob: -10.7324800491333
    10. 'x' → logprob: -10.8574800491333

Token 1713: ' position' (ID: 4010)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22975637018680573
    2. 'pos' → logprob: -1.6047563552856445
    3. '```' → logprob: -6.1047563552856445
    4. '   ' → logprob: -7.2297563552856445
    5. ' pos' → logprob: -7.4797563552856445
    6. 'position' → logprob: -7.6047563552856445
    7. '``' → logprob: -9.354756355285645
    8. 'cur' → logprob: -9.604756355285645
    9. '	pos' → logprob: -10.354756355285645
    10. 'current' → logprob: -10.479756355285645

Token 1714: ' initial' (ID: 4871)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.843169629573822
    2. ' =' → logprob: -1.8431696891784668
    3. 'i' → logprob: -2.218169689178467
    4. '(' → logprob: -2.218169689178467
    5. '(i' → logprob: -2.343169689178467
    6. '=' → logprob: -3.593169689178467
    7. ' (' → logprob: -3.718169689178467
    8. 'x' → logprob: -4.468169689178467
    9. '=(' → logprob: -4.718169689178467
    10. 'cur' → logprob: -4.718169689178467

Token 1715: 'e' (ID: 68)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18043796718120575
    2. '=' → logprob: -1.8054379224777222
    3. '=(' → logprob: -7.555438041687012
    4. 'pos' → logprob: -10.555438041687012
    5. '=[' → logprob: -10.680438041687012
    6. '   ' → logprob: -10.930438041687012
    7. '(' → logprob: -10.930438041687012
    8. '0' → logprob: -11.305438041687012
    9. '       ' → logprob: -11.305438041687012
    10. ',' → logprob: -11.430438041687012

Token 1716: ' =' (ID: 314)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.8825321197509766
    2. 'i' → logprob: -1.1325321197509766
    3. ' =' → logprob: -1.8825321197509766
    4. '=' → logprob: -3.0075321197509766
    5. '(i' → logprob: -3.8825321197509766
    6. ' pos' → logprob: -4.007532119750977
    7. 'cur' → logprob: -5.007532119750977
    8. ' i' → logprob: -5.007532119750977
    9. '   ' → logprob: -6.257532119750977
    10. '(' → logprob: -6.257532119750977

Token 1717: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.274932143744081e-05
    2. ' (' → logprob: -10.375042915344238
    3. '0' → logprob: -11.375042915344238
    4. 'pos' → logprob: -17.000041961669922
    5. '   ' → logprob: -17.875041961669922
    6. '(-' → logprob: -17.875041961669922
    7. '       ' → logprob: -18.125041961669922
    8. 'next' → logprob: -18.375041961669922
    9. '(next' → logprob: -18.375041961669922
    10. '```' → logprob: -18.625041961669922

Token 1718: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2961512513575144e-05
    2. ' ' → logprob: -10.875022888183594
    3. '(' → logprob: -12.500022888183594
    4. '1' → logprob: -16.375022888183594
    5. '   ' → logprob: -16.625022888183594
    6. ')' → logprob: -16.750022888183594
    7. '```' → logprob: -17.625022888183594
    8. '00' → logprob: -18.000022888183594
    9. '
' → logprob: -18.125022888183594
    10. ' ' → logprob: -18.250022888183594

Token 1719: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011645073536783457
    2. '0' → logprob: -7.376164436340332
    3. ' ,' → logprob: -7.626164436340332
    4. ',
' → logprob: -10.376164436340332
    5. '),' → logprob: -12.001164436340332
    6. '
' → logprob: -12.876164436340332
    7. '   ' → logprob: -13.001164436340332
    8. '```' → logprob: -13.126164436340332
    9. ')' → logprob: -13.501164436340332
    10. ' ' → logprob: -14.126164436340332

Token 1720: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. ')' → logprob: -18.87500762939453
    4. '   ' → logprob: -18.87500762939453
    5. '       ' → logprob: -19.12500762939453
    6. '۰' → logprob: -19.62500762939453
    7. '1' → logprob: -19.87500762939453
    8. '           ' → logprob: -20.75000762939453
    9. '<|end|>' → logprob: -21.50000762939453
    10. '
' → logprob: -21.62500762939453

Token 1721: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07899641990661621
    2. ')
' → logprob: -2.578996419906616
    3. '       ' → logprob: -9.953996658325195
    4. ')

' → logprob: -10.703996658325195
    5. '),' → logprob: -11.578996658325195
    6. ')
' → logprob: -11.703996658325195
    7. '   ' → logprob: -12.453996658325195
    8. ',' → logprob: -12.703996658325195
    9. ')`' → logprob: -13.203996658325195
    10. ' )' → logprob: -13.453996658325195

Token 1722: ' en' (ID: 469)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.017186392098665237
    2. '       ' → logprob: -4.517186164855957
    3. 'current' → logprob: -6.017186164855957
    4. ' pos' → logprob: -6.517186164855957
    5. 'position' → logprob: -6.767186164855957
    6. 'cur' → logprob: -8.017186164855957
    7. '
' → logprob: -8.392186164855957
    8. '   ' → logprob: -8.517186164855957
    9. '	pos' → logprob: -9.392186164855957
    10. 'i' → logprob: -10.142186164855957

Token 1723: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4387182295322418
    2. ')' → logprob: -1.6887181997299194
    3. '#' → logprob: -2.063718318939209
    4. '(' → logprob: -3.813718318939209
    5. '
' → logprob: -5.063718318939209
    6. ' ' → logprob: -6.063718318939209
    7. ' (' → logprob: -6.563718318939209
    8. '[' → logprob: -6.688718318939209
    9. '```' → logprob: -6.688718318939209
    10. ' )' → logprob: -6.813718318939209

Token 1724: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23145247995853424
    2. ')' → logprob: -2.356452465057373
    3. '#' → logprob: -2.731452465057373
    4. '```' → logprob: -3.981452465057373
    5. 'i' → logprob: -4.606452465057373
    6. '
' → logprob: -5.481452465057373
    7. '(' → logprob: -6.106452465057373
    8. 'for' → logprob: -6.481452465057373
    9. '``' → logprob: -6.856452465057373
    10. '[' → logprob: -6.856452465057373

Token 1725: '-based' (ID: 8235)
  Prédit: 'based'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'based' → logprob: -0.5854323506355286
    2. ',' → logprob: -0.9604323506355286
    3. '-based' → logprob: -2.835432291030884
    4. '```' → logprob: -7.835432529449463
    5. ' ,' → logprob: -7.960432529449463
    6. ')' → logprob: -8.210432052612305
    7. '_based' → logprob: -8.710432052612305
    8. '
' → logprob: -8.835432052612305
    9. '0' → logprob: -9.585432052612305
    10. ',
' → logprob: -9.710432052612305

Token 1726: '
' (ID: 198)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.014795145951211452
    2. ' pos' → logprob: -4.639795303344727
    3. 'position' → logprob: -6.764795303344727
    4. '
' → logprob: -6.889795303344727
    5. 'current' → logprob: -7.014795303344727
    6. '       ' → logprob: -7.014795303344727
    7. '   ' → logprob: -7.889795303344727
    8. '```' → logprob: -8.139795303344727
    9. ',' → logprob: -9.014795303344727
    10. 'cur' → logprob: -9.264795303344727

Token 1727: '       ' (ID: 309)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.28917190432548523
    2. '       ' → logprob: -1.4141719341278076
    3. ' pos' → logprob: -5.5391716957092285
    4. '```' → logprob: -6.2891716957092285
    5. 'position' → logprob: -7.1641716957092285
    6. '   ' → logprob: -7.2891716957092285
    7. 'current' → logprob: -7.5391716957092285
    8. '	pos' → logprob: -9.289172172546387
    9. '``' → logprob: -10.164172172546387
    10. 'cur' → logprob: -10.164172172546387

Token 1728: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.0805969089269638
    2. '       ' → logprob: -2.580596923828125
    3. 'position' → logprob: -7.080596923828125
    4. ' pos' → logprob: -7.455596923828125
    5. '   ' → logprob: -9.330596923828125
    6. '```' → logprob: -9.455596923828125
    7. 'current' → logprob: -9.955596923828125
    8. 'cur' → logprob: -10.080596923828125
    9. '	pos' → logprob: -11.330596923828125
    10. 'i' → logprob: -12.455596923828125

Token 1729: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029777687042951584
    2. '=' → logprob: -3.529777765274048
    3. '=[' → logprob: -11.279777526855469
    4. ',' → logprob: -12.654777526855469
    5. ' =[' → logprob: -12.779777526855469
    6. '[' → logprob: -13.279777526855469
    7. '<|end|>' → logprob: -14.029777526855469
    8. '=
' → logprob: -14.029777526855469
    9. ' =(' → logprob: -14.154777526855469
    10. '=(' → logprob: -14.154777526855469

Token 1730: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.5491004129871726e-05
    2. ' (' → logprob: -10.000045776367188
    3. '0' → logprob: -19.625045776367188
    4. '[' → logprob: -20.750045776367188
    5. '   ' → logprob: -21.500045776367188
    6. ' ' → logprob: -22.875045776367188
    7. '（' → logprob: -24.000045776367188
    8. '       ' → logprob: -24.750045776367188
    9. '  ' → logprob: -24.875045776367188
    10. '((' → logprob: -25.250045776367188

Token 1731: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.750000953674316
    3. '(' → logprob: -15.125000953674316
    4. '   ' → logprob: -17.5
    5. '```' → logprob: -20.0
    6. '00' → logprob: -20.25
    7. '[' → logprob: -20.5
    8. ')' → logprob: -20.75
    9. '۰' → logprob: -20.875
    10. '
' → logprob: -21.0

Token 1732: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011629798245849088
    2. ',
' → logprob: -9.750116348266602
    3. '0' → logprob: -10.250116348266602
    4. ' ,' → logprob: -10.875116348266602
    5. '   ' → logprob: -14.125116348266602
    6. '<|end|>' → logprob: -14.125116348266602
    7. '       ' → logprob: -15.000116348266602
    8. '),' → logprob: -15.250116348266602
    9. '‌,' → logprob: -15.500116348266602
    10. ')' → logprob: -15.500116348266602

Token 1733: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.500001907348633
    4. '۰' → logprob: -21.000001907348633
    5. '       ' → logprob: -21.125001907348633
    6. ')' → logprob: -21.375001907348633
    7. '  ' → logprob: -21.750001907348633
    8. '    ' → logprob: -22.000001907348633
    9. '     ' → logprob: -22.750001907348633
    10. '	' → logprob: -22.750001907348633

Token 1734: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03813076764345169
    2. ')
' → logprob: -3.288130760192871
    3. '       ' → logprob: -9.538130760192871
    4. '   ' → logprob: -11.663130760192871
    5. ')

' → logprob: -12.038130760192871
    6. ')
' → logprob: -13.538130760192871
    7. ')#' → logprob: -14.663130760192871
    8. ' )' → logprob: -15.038130760192871
    9. ')
/' → logprob: -15.663130760192871
    10. '),' → logprob: -16.163131713867188

Token 1735: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5598054528236389
    2. 'for' → logprob: -1.5598053932189941
    3. ' for' → logprob: -1.6848053932189941
    4. '
' → logprob: -4.684805393218994
    5. '```' → logprob: -4.684805393218994
    6. '   ' → logprob: -5.059805393218994
    7. '        
' → logprob: -6.434805393218994
    8. '    
' → logprob: -6.684805393218994
    9. ' 
' → logprob: -6.934805393218994
    10. '  
' → logprob: -7.059805393218994

Token 1736: ' length' (ID: 5517)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15552949905395508
    2. '       ' → logprob: -2.530529499053955
    3. ' for' → logprob: -2.905529499053955
    4. 'bits' → logprob: -5.530529499053955
    5. '```' → logprob: -6.280529499053955
    6. 'i' → logprob: -6.905529499053955
    7. 'while' → logprob: -7.655529499053955
    8. '   ' → logprob: -7.655529499053955
    9. 'n' → logprob: -8.280529022216797
    10. 'bit' → logprob: -8.530529022216797

Token 1737: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3883773982524872
    2. ' =' → logprob: -1.1383774280548096
    3. ',' → logprob: -7.5133771896362305
    4. '       ' → logprob: -8.01337718963623
    5. '_' → logprob: -8.13837718963623
    6. ')' → logprob: -9.26337718963623
    7. '        ' → logprob: -9.51337718963623
    8. '   ' → logprob: -10.01337718963623
    9. '    ' → logprob: -10.51337718963623
    10. ' ' → logprob: -11.01337718963623

Token 1738: ' len' (ID: 4631)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.006916888058185577
    2. ' N' → logprob: -5.0069169998168945
    3. '0' → logprob: -8.631916999816895
    4. '1' → logprob: -12.131916999816895
    5. ' ' → logprob: -12.256916999816895
    6. '   ' → logprob: -12.756916999816895
    7. 'len' → logprob: -13.131916999816895
    8. 'W' → logprob: -13.506916999816895
    9. '	N' → logprob: -13.506916999816895
    10. 'int' → logprob: -14.006916999816895

Token 1739: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0009137284359894693
    2. 'dp' → logprob: -7.000913619995117
    3. 'pos' → logprob: -13.750913619995117
    4. ' dp' → logprob: -15.125913619995117
    5. '(pos' → logprob: -15.125913619995117
    6. '(' → logprob: -15.250913619995117
    7. '	dp' → logprob: -15.500913619995117
    8. '_dp' → logprob: -16.625913619995117
    9. '(
' → logprob: -17.875913619995117
    10. '```' → logprob: -17.875913619995117

Token 1740: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1621781438589096
    2. ')
' → logprob: -1.9121781587600708
    3. '       ' → logprob: -6.787178039550781
    4. ')-' → logprob: -8.537178039550781
    5. '-' → logprob: -8.787178039550781
    6. '[' → logprob: -9.037178039550781
    7. ' -' → logprob: -9.162178039550781
    8. '
' → logprob: -9.787178039550781
    9. '```' → logprob: -10.162178039550781
    10. '   ' → logprob: -10.412178039550781

Token 1741: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3165683150291443
    2. '       ' → logprob: -1.316568374633789
    3. ' for' → logprob: -5.816568374633789
    4. '```' → logprob: -8.191568374633789
    5. '
' → logprob: -10.816568374633789
    6. '	for' → logprob: -11.941568374633789
    7. '   ' → logprob: -11.941568374633789
    8. '        
' → logprob: -12.816568374633789
    9. '``' → logprob: -12.816568374633789
    10. 'For' → logprob: -13.316568374633789

Token 1742: ' current' (ID: 2208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030352702364325523
    2. ' for' → logprob: -3.5303525924682617
    3. '       ' → logprob: -8.155352592468262
    4. '```' → logprob: -8.655352592468262
    5. 'i' → logprob: -9.030352592468262
    6. ' i' → logprob: -12.655352592468262
    7. '``' → logprob: -12.780352592468262
    8. '
' → logprob: -12.780352592468262
    9. '   ' → logprob: -13.155352592468262
    10. '	for' → logprob: -13.155352592468262

Token 1743: '_power' (ID: 51623)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.09633994102478027
    2. '=' → logprob: -3.7213399410247803
    3. '_power' → logprob: -3.9713399410247803
    4. 'pos' → logprob: -4.346340179443359
    5. '_bit' → logprob: -4.846340179443359
    6. '_k' → logprob: -5.096340179443359
    7. '_pow' → logprob: -5.346340179443359
    8. 'for' → logprob: -5.596340179443359
    9. ' =' → logprob: -6.096340179443359
    10. '_idx' → logprob: -6.096340179443359

Token 1744: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932995319366455
    2. ' =' → logprob: -0.6932995319366455
    3. ',' → logprob: -10.443299293518066
    4. ' ' → logprob: -10.568299293518066
    5. ')' → logprob: -10.693299293518066
    6. '[' → logprob: -10.693299293518066
    7. '<|end|>' → logprob: -11.318299293518066
    8. ' +=' → logprob: -11.693299293518066
    9. '_' → logprob: -12.568299293518066
    10. '_tokens' → logprob: -13.068299293518066

Token 1745: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10153643041849136
    2. 'N' → logprob: -2.351536512374878
    3. ' ' → logprob: -6.976536273956299
    4. '1' → logprob: -8.101536750793457
    5. ' N' → logprob: -10.101536750793457
    6. 'length' → logprob: -11.476536750793457
    7. '[' → logprob: -11.726536750793457
    8. 'max' → logprob: -12.101536750793457
    9. '[N' → logprob: -12.101536750793457
    10. 'len' → logprob: -12.726536750793457

Token 1746: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.027641931548714638
    2. 'N' → logprob: -3.652642011642456
    3. 'k' → logprob: -7.527641773223877
    4. 'length' → logprob: -7.527641773223877
    5. 'max' → logprob: -8.777642250061035
    6. '1' → logprob: -9.902642250061035
    7. 'len' → logprob: -11.277642250061035
    8. 'dp' → logprob: -11.652642250061035
    9. ' ' → logprob: -11.902642250061035
    10. 'int' → logprob: -12.402642250061035

Token 1747: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8461647033691406
    2. 'while' → logprob: -1.8461647033691406
    3. ' 
' → logprob: -2.3461647033691406
    4. '       ' → logprob: -2.3461647033691406
    5. '   ' → logprob: -3.3461647033691406
    6. ' while' → logprob: -3.3461647033691406
    7. 'for' → logprob: -3.5961647033691406
    8. ' for' → logprob: -3.8461647033691406
    9. '  
' → logprob: -3.8461647033691406
    10. '	while' → logprob: -4.221164703369141

Token 1748: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12436998635530472
    2. '   ' → logprob: -2.6243700981140137
    3. 'while' → logprob: -3.9993700981140137
    4. ':' → logprob: -5.249370098114014
    5. ' while' → logprob: -5.624370098114014
    6. ':
' → logprob: -5.749370098114014
    7. '
' → logprob: -5.999370098114014
    8. '	while' → logprob: -6.249370098114014
    9. '```' → logprob: -6.749370098114014
    10. '           ' → logprob: -6.874370098114014

Token 1749: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.11156757175922394
    2. '       ' → logprob: -2.736567497253418
    3. 'for' → logprob: -3.486567497253418
    4. ' while' → logprob: -5.111567497253418
    5. '   ' → logprob: -5.861567497253418
    6. ' for' → logprob: -7.361567497253418
    7. '```' → logprob: -8.361567497253418
    8. '
' → logprob: -8.486567497253418
    9. '	while' → logprob: -8.861567497253418
    10. '        
' → logprob: -11.361567497253418

Token 1750: ' il' (ID: 1793)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.005113272462040186
    2. 'for' → logprob: -5.380113124847412
    3. ' while' → logprob: -7.755113124847412
    4. '       ' → logprob: -10.50511360168457
    5. '```' → logprob: -10.50511360168457
    6. ' for' → logprob: -12.25511360168457
    7. '   ' → logprob: -13.50511360168457
    8. 'While' → logprob: -13.63011360168457
    9. '	while' → logprob: -14.00511360168457
    10. '
' → logprob: -14.38011360168457

Token 1751: ' faut' (ID: 17821)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0964852124452591
    2. ' =' → logprob: -2.971485137939453
    3. '   ' → logprob: -4.471485137939453
    4. 'while' → logprob: -4.596485137939453
    5. 's' → logprob: -5.096485137939453
    6. '<' → logprob: -6.096485137939453
    7. 'for' → logprob: -6.471485137939453
    8. '+=' → logprob: -6.721485137939453
    9. ' <<=' → logprob: -6.971485137939453
    10. ' ' → logprob: -7.096485137939453

Token 1752: ' dé' (ID: 2393)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.21117287874221802
    2. ' while' → logprob: -1.9611728191375732
    3. ' current' → logprob: -4.461173057556152
    4. 'for' → logprob: -4.711173057556152
    5. 'current' → logprob: -4.836173057556152
    6. 'N' → logprob: -5.086173057556152
    7. ' N' → logprob: -5.336173057556152
    8. '   ' → logprob: -6.211173057556152
    9. ' for' → logprob: -6.211173057556152
    10. '       ' → logprob: -6.461173057556152

Token 1753: 'composer' (ID: 165799)
  Prédit: 'composer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'composer' → logprob: -0.13318279385566711
    2. 'caler' → logprob: -2.6331827640533447
    3. 'placer' → logprob: -3.8831827640533447
    4. 'com' → logprob: -4.133183002471924
    5. 'coder' → logprob: -5.258183002471924
    6. 'comp' → logprob: -5.508183002471924
    7. '   ' → logprob: -6.383183002471924
    8. 'c' → logprob: -6.508183002471924
    9. 'cal' → logprob: -7.008183002471924
    10. '```' → logprob: -7.133183002471924

Token 1754: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.05821719020605087
    2. ' N' → logprob: -3.0582172870635986
    3. 'n' → logprob: -5.9332170486450195
    4. ' (' → logprob: -6.5582170486450195
    5. 'for' → logprob: -7.3082170486450195
    6. ' for' → logprob: -7.4332170486450195
    7. ' n' → logprob: -7.5582170486450195
    8. ' in' → logprob: -7.5582170486450195
    9. 'while' → logprob: -7.5582170486450195
    10. 'pos' → logprob: -7.9332170486450195

Token 1755: ' en' (ID: 469)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6288578510284424
    2. '=' → logprob: -2.6288578510284424
    3. 'for' → logprob: -2.6288578510284424
    4. ' in' → logprob: -2.8788578510284424
    5. 'if' → logprob: -3.2538578510284424
    6. ' 
' → logprob: -3.7538578510284424
    7. ' for' → logprob: -3.7538578510284424
    8. ':
' → logprob: -4.003857612609863
    9. '       ' → logprob: -4.003857612609863
    10. ' ' → logprob: -4.128857612609863

Token 1756: ' b' (ID: 287)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.68602055311203
    2. '1' → logprob: -1.3110206127166748
    3. 'bits' → logprob: -2.561020612716675
    4. ' bin' → logprob: -2.811020612716675
    5. 'b' → logprob: -3.311020612716675
    6. 'N' → logprob: -3.811020612716675
    7. 'binary' → logprob: -4.686020374298096
    8. ' bits' → logprob: -5.311020374298096
    9. '[' → logprob: -5.561020374298096
    10. ' N' → logprob: -5.686020374298096

Token 1757: 'inaire' (ID: 41465)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.08397328108549118
    2. 'i' → logprob: -3.2089731693267822
    3. 'inary' → logprob: -4.083973407745361
    4. '```' → logprob: -4.458973407745361
    5. 'its' → logprob: -5.458973407745361
    6. 'inaire' → logprob: -6.583973407745361
    7. '`' → logprob: -6.833973407745361
    8. 'ina' → logprob: -7.208973407745361
    9. '   ' → logprob: -7.208973407745361
    10. 'y' → logprob: -7.583973407745361

Token 1758: ' et' (ID: 859)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.1131353378295898
    2. 'if' → logprob: -1.4881353378295898
    3. '
' → logprob: -1.9881353378295898
    4. ' if' → logprob: -2.23813533782959
    5. ' for' → logprob: -3.36313533782959
    6. '       ' → logprob: -3.61313533782959
    7. ':' → logprob: -3.61313533782959
    8. ':
' → logprob: -3.86313533782959
    9. 'for' → logprob: -3.98813533782959
    10. '  
' → logprob: -3.98813533782959

Token 1759: ' appliquer' (ID: 172872)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.09166131913661957
    2. ' while' → logprob: -2.966661214828491
    3. 'for' → logprob: -3.466661214828491
    4. ' for' → logprob: -5.34166145324707
    5. '
' → logprob: -10.21666145324707
    6. '```' → logprob: -10.21666145324707
    7. '	while' → logprob: -11.71666145324707
    8. '    ' → logprob: -12.84166145324707
    9. '   ' → logprob: -13.21666145324707
    10. '       ' → logprob: -13.34166145324707

Token 1760: ' la' (ID: 557)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6807945370674133
    2. 'if' → logprob: -0.8057945370674133
    3. 'for' → logprob: -4.055794715881348
    4. ' for' → logprob: -4.180794715881348
    5. ' (' → logprob: -5.430794715881348
    6. 'while' → logprob: -5.805794715881348
    7. ' while' → logprob: -6.680794715881348
    8. '(
' → logprob: -7.180794715881348
    9. '(' → logprob: -7.305794715881348
    10. '```' → logprob: -7.430794715881348

Token 1761: ' composition' (ID: 27524)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7275209426879883
    2. 'if' → logprob: -0.8525209426879883
    3. '1' → logprob: -2.7275209426879883
    4. ' next' → logprob: -4.977520942687988
    5. '```' → logprob: -5.727520942687988
    6. 'next' → logprob: -5.852520942687988
    7. ' (' → logprob: -5.852520942687988
    8. 'dp' → logprob: -6.102520942687988
    9. ' ' → logprob: -6.602520942687988
    10. '<<' → logprob: -6.727520942687988

Token 1762: ' des' (ID: 731)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25697675347328186
    2. '
' → logprob: -2.506976842880249
    3. ' if' → logprob: -3.256976842880249
    4. 'if' → logprob: -3.756976842880249
    5. ' for' → logprob: -3.881976842880249
    6. '        
' → logprob: -4.63197660446167
    7. 'for' → logprob: -4.63197660446167
    8. ':
' → logprob: -4.75697660446167
    9. ' 
' → logprob: -5.13197660446167
    10. '   ' → logprob: -5.13197660446167

Token 1763: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.031088778749108315
    2. 'if' → logprob: -4.031088829040527
    3. ' dp' → logprob: -4.906088829040527
    4. ' if' → logprob: -6.656088829040527
    5. 'powers' → logprob: -6.906088829040527
    6. 'pow' → logprob: -7.156088829040527
    7. '[' → logprob: -7.906088829040527
    8. '1' → logprob: -7.906088829040527
    9. 'positions' → logprob: -8.031088829040527
    10. '(dp' → logprob: -8.656088829040527

Token 1764: ' correspond' (ID: 11095)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0963737964630127
    2. ' for' → logprob: -1.2213737964630127
    3. ':' → logprob: -2.7213737964630127
    4. '
' → logprob: -3.0963737964630127
    5. ':
' → logprob: -3.2213737964630127
    6. 'if' → logprob: -3.2213737964630127
    7. ' 
' → logprob: -3.5963737964630127
    8. '   ' → logprob: -3.7213737964630127
    9. ' if' → logprob: -3.7213737964630127
    10. '       ' → logprob: -3.9713737964630127

Token 1765: 'ants' (ID: 2027)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2054435014724731
    2. '   ' → logprob: -1.8304435014724731
    3. 'ent' → logprob: -2.0804433822631836
    4. 'u' → logprob: -2.0804433822631836
    5. '               ' → logprob: -2.4554433822631836
    6. '           ' → logprob: -2.5804433822631836
    7. 'ents' → logprob: -3.8304433822631836
    8. 'ente' → logprob: -4.080443382263184
    9. '    ' → logprob: -4.705443382263184
    10. '        ' → logprob: -4.705443382263184

Token 1766: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30272698402404785
    2. '
' → logprob: -1.9277269840240479
    3. '        
' → logprob: -3.677726984024048
    4. ' 
' → logprob: -4.052726745605469
    5. '   ' → logprob: -4.552726745605469
    6. ' for' → logprob: -4.552726745605469
    7. '    
' → logprob: -4.802726745605469
    8. ':' → logprob: -4.802726745605469
    9. '  
' → logprob: -4.927726745605469
    10. 'for' → logprob: -5.427726745605469

Token 1767: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7192903757095337
    2. '   ' → logprob: -1.7192903757095337
    3. 'while' → logprob: -1.9692903757095337
    4. ' for' → logprob: -2.594290256500244
    5. 'for' → logprob: -2.844290256500244
    6. ' while' → logprob: -2.969290256500244
    7. '```' → logprob: -5.594290256500244
    8. '    
' → logprob: -6.594290256500244
    9. '
' → logprob: -6.594290256500244
    10. '	while' → logprob: -6.719290256500244

Token 1768: ' exp' (ID: 2794)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7954279184341431
    2. '       ' → logprob: -1.670427918434143
    3. 'while' → logprob: -1.795427918434143
    4. ' for' → logprob: -1.795427918434143
    5. ' while' → logprob: -3.7954277992248535
    6. '   ' → logprob: -5.7954277992248535
    7. '
' → logprob: -6.7954277992248535
    8. '```' → logprob: -7.0454277992248535
    9. ' 
' → logprob: -8.795428276062012
    10. 'n' → logprob: -9.045428276062012

Token 1769: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20094822347164154
    2. '=' → logprob: -2.0759482383728027
    3. 'ected' → logprob: -3.7009482383728027
    4. 'l' → logprob: -4.450948238372803
    5. 'ect' → logprob: -5.700948238372803
    6. 'o' → logprob: -6.075948238372803
    7. 'onent' → logprob: -6.575948238372803
    8. '_' → logprob: -6.575948238372803
    9. 'N' → logprob: -6.700948238372803
    10. '_bits' → logprob: -6.825948238372803

Token 1770: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004079112783074379
    2. ' N' → logprob: -5.504079341888428
    3. '[N' → logprob: -14.75407886505127
    4. '	N' → logprob: -15.50407886505127
    5. '   ' → logprob: -16.754079818725586
    6. '[' → logprob: -18.254079818725586
    7. '       ' → logprob: -18.254079818725586
    8. '(N' → logprob: -18.254079818725586
    9. '```' → logprob: -18.254079818725586
    10. 'int' → logprob: -18.379079818725586

Token 1771: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33428189158439636
    2. '       ' → logprob: -1.7092819213867188
    3. '-' → logprob: -4.459281921386719
    4. '=' → logprob: -4.709281921386719
    5. ')' → logprob: -4.834281921386719
    6. ':
' → logprob: -4.834281921386719
    7. ':' → logprob: -5.084281921386719
    8. '>' → logprob: -5.084281921386719
    9. '   ' → logprob: -5.209281921386719
    10. '           ' → logprob: -5.459281921386719

Token 1772: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6378600001335144
    2. ':' → logprob: -1.3878600597381592
    3. ':
' → logprob: -2.262860059738159
    4. '
' → logprob: -3.637860059738159
    5. '   ' → logprob: -4.01285982131958
    6. ' 
' → logprob: -4.38785982131958
    7. ' :' → logprob: -4.51285982131958
    8. '        
' → logprob: -5.01285982131958
    9. ',' → logprob: -5.26285982131958
    10. '        ' → logprob: -5.38785982131958

Token 1773: ' for' (ID: 395)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.5084850192070007
    2. '       ' → logprob: -2.3834850788116455
    3. 'while' → logprob: -2.3834850788116455
    4. ' while' → logprob: -2.5084850788116455
    5. '
' → logprob: -2.8834850788116455
    6. '        
' → logprob: -4.508484840393066
    7. '  
' → logprob: -4.508484840393066
    8. ' for' → logprob: -4.758484840393066
    9. 'for' (adapté à ' for') → logprob: -4.758484840393066
    10. ' ' → logprob: -4.883484840393066

Token 1774: ' bit' (ID: 3546)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.22100374102592468
    2. ' k' → logprob: -2.721003770828247
    3. 'b' → logprob: -3.471003770828247
    4. 'bit' → logprob: -3.721003770828247
    5. 'current' → logprob: -3.971003770828247
    6. ' b' → logprob: -3.971003770828247
    7. ' current' → logprob: -4.221003532409668
    8. '_' → logprob: -5.596003532409668
    9. 'p' → logprob: -5.846003532409668
    10. 'i' → logprob: -5.846003532409668

Token 1775: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012545911595225334
    2. 'in' → logprob: -4.387546062469482
    3. 'if' → logprob: -11.387545585632324
    4. ' ' → logprob: -12.012545585632324
    5. '   ' → logprob: -12.262545585632324
    6. ' if' → logprob: -12.887545585632324
    7. '       ' → logprob: -13.512545585632324
    8. ',' → logprob: -13.637545585632324
    9. ' range' → logprob: -13.637545585632324
    10. '           ' → logprob: -13.887545585632324

Token 1776: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0014978413237258792
    2. ' range' → logprob: -6.626497745513916
    3. 'bin' → logprob: -8.876498222351074
    4. 're' → logprob: -10.501498222351074
    5. ' ' → logprob: -13.126498222351074
    6. '   ' → logprob: -13.501498222351074
    7. '(range' → logprob: -14.626498222351074
    8. ' bin' → logprob: -15.251498222351074
    9. 'reverse' → logprob: -16.001497268676758
    10. '	range' → logprob: -16.001497268676758

Token 1777: '(length' (ID: 47037)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0679364874958992
    2. '(length' → logprob: -3.567936420440674
    3. 'len' → logprob: -4.817936420440674
    4. '25' → logprob: -5.317936420440674
    5. ' length' → logprob: -5.567936420440674
    6. '32' → logprob: -5.567936420440674
    7. '(' → logprob: -5.942936420440674
    8. '31' → logprob: -5.942936420440674
    9. 'max' → logprob: -6.317936420440674
    10. '0' → logprob: -6.317936420440674

Token 1778: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7618021965026855
    2. '           ' → logprob: -1.0118021965026855
    3. ' if' → logprob: -2.3868021965026855
    4. ':
' → logprob: -3.7618021965026855
    5. 'if' → logprob: -4.1368021965026855
    6. '       ' → logprob: -4.6368021965026855
    7. '		' → logprob: -4.8868021965026855
    8. ',' → logprob: -5.6368021965026855
    9. '	       ' → logprob: -5.7618021965026855
    10. '               ' → logprob: -6.1368021965026855

Token 1779: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00893115159124136
    2. '	       ' → logprob: -5.5089311599731445
    3. '       ' → logprob: -5.8839311599731445
    4. '   ' → logprob: -7.5089311599731445
    5. 'if' → logprob: -7.6339311599731445
    6. ' if' → logprob: -8.008931159973145
    7. '<|end|>' → logprob: -9.133931159973145
    8. '	   ' → logprob: -9.383931159973145
    9. '        ' → logprob: -9.758931159973145
    10. '		' → logprob: -10.008931159973145

Token 1780: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6075031757354736
    2. '       ' → logprob: -1.2325031757354736
    3. '           ' → logprob: -2.3575031757354736
    4. ' if' → logprob: -2.8575031757354736
    5. '   ' → logprob: -4.8575029373168945
    6. '	       ' → logprob: -6.1075029373168945
    7. '	if' → logprob: -7.9825029373168945
    8. '<|end|>' → logprob: -8.107502937316895
    9. '               ' → logprob: -8.232502937316895
    10. '<|end|>' → logprob: -8.607502937316895

Token 1781: ' exp' (ID: 2794)
  Prédit: '(exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(exp' → logprob: -0.20358945429325104
    2. ' (' → logprob: -1.7035894393920898
    3. 'exp' → logprob: -6.20358943939209
    4. ' exp' → logprob: -9.07858943939209
    5. '   ' → logprob: -10.95358943939209
    6. '(' → logprob: -11.57858943939209
    7. '((' → logprob: -12.07858943939209
    8. '(ex' → logprob: -13.07858943939209
    9. ' ((' → logprob: -14.07858943939209
    10. '	exp' → logprob: -14.32858943939209

Token 1782: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.5759590864181519
    2. ' &' → logprob: -0.8259590864181519
    3. '&
' → logprob: -11.825959205627441
    4. '   ' → logprob: -12.325959205627441
    5. ' ' → logprob: -13.450959205627441
    6. '&amp' → logprob: -13.825959205627441
    7. ' ' → logprob: -13.950959205627441
    8. ' &
' → logprob: -13.950959205627441
    9. '[' → logprob: -14.450959205627441
    10. '           ' → logprob: -14.825959205627441

Token 1783: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002488737925887108
    2. ' (' → logprob: -6.002488613128662
    3. '1' → logprob: -11.25248908996582
    4. '   ' → logprob: -17.00248908996582
    5. '[' → logprob: -17.62748908996582
    6. '((' → logprob: -19.25248908996582
    7. ' ' → logprob: -19.37748908996582
    8. '
' → logprob: -20.50248908996582
    9. '(bit' → logprob: -20.50248908996582
    10. '```' → logprob: -21.00248908996582

Token 1784: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1272212117910385
    2. '(' → logprob: -2.12722110748291
    3. ' (' → logprob: -8.50222110748291
    4. ' ' → logprob: -9.37722110748291
    5. '   ' → logprob: -12.62722110748291
    6. '               ' → logprob: -14.37722110748291
    7. '           ' → logprob: -14.50222110748291
    8. '[' → logprob: -14.50222110748291
    9. '                   ' → logprob: -15.00222110748291
    10. '{' → logprob: -16.502222061157227

Token 1785: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.006537384819239378
    2. ' <<' → logprob: -5.131537437438965
    3. '1' → logprob: -7.506537437438965
    4. ')' → logprob: -10.506537437438965
    5. '(' → logprob: -11.631537437438965
    6. ')<<' → logprob: -11.881537437438965
    7. '<<(' → logprob: -12.506537437438965
    8. '<' → logprob: -12.631537437438965
    9. '   ' → logprob: -13.131537437438965
    10. '```' → logprob: -13.381537437438965

Token 1786: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -2.15310683415737e-05
    2. ' bit' → logprob: -10.750021934509277
    3. '(bit' → logprob: -19.75002098083496
    4. '   ' → logprob: -19.87502098083496
    5. 'b' → logprob: -20.62502098083496
    6. 'bits' → logprob: -21.75002098083496
    7. 'bitr' → logprob: -22.25002098083496
    8. '_bit' → logprob: -22.37502098083496
    9. ' ' → logprob: -22.75002098083496
    10. 'Bit' → logprob: -22.87502098083496

Token 1787: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.017874224111437798
    2. ')' → logprob: -4.267874240875244
    3. '):' → logprob: -5.767874240875244
    4. ')!=' → logprob: -7.642874240875244
    5. ':
' → logprob: -9.892873764038086
    6. ':' → logprob: -11.142873764038086
    7. ')>' → logprob: -11.267873764038086
    8. ' ):
' → logprob: -12.392873764038086
    9. '):
' → logprob: -12.642873764038086
    10. '           ' → logprob: -12.892873764038086

Token 1788: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00030972150852903724
    2. ',' → logprob: -9.625309944152832
    3. '```' → logprob: -10.125309944152832
    4. '	           ' → logprob: -10.250309944152832
    5. '<|end|>' → logprob: -10.500309944152832
    6. '           ' → logprob: -10.750309944152832
    7. ':
' → logprob: -11.000309944152832
    8. '<|end|>' → logprob: -11.125309944152832
    9. '                   ' → logprob: -11.625309944152832
    10. '[' → logprob: -11.625309944152832

Token 1789: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.052739791572093964
    2. 'pos' → logprob: -3.0527398586273193
    3. '               ' → logprob: -6.55273962020874
    4. '                   ' → logprob: -6.67773962020874
    5. ' pos' → logprob: -7.67773962020874
    6. ' i' → logprob: -7.80273962020874
    7. '   ' → logprob: -8.052740097045898
    8. '           ' → logprob: -8.677740097045898
    9. 'p' → logprob: -10.427740097045898
    10. '(i' → logprob: -10.927740097045898

Token 1790: '_,' (ID: 14152)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2535131871700287
    2. ',j' → logprob: -1.503513216972351
    3. ',pos' → logprob: -7.128513336181641
    4. 'pos' → logprob: -7.753513336181641
    5. '_,' → logprob: -8.62851333618164
    6. ' ,' → logprob: -9.37851333618164
    7. 'j' → logprob: -10.75351333618164
    8. 'p' → logprob: -10.75351333618164
    9. '2' → logprob: -11.00351333618164
    10. ',p' → logprob: -11.25351333618164

Token 1791: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0001238004770129919
    2. ' j' → logprob: -9.000123977661133
    3. 'pos' → logprob: -15.375123977661133
    4. '   ' → logprob: -17.000123977661133
    5. '                   ' → logprob: -17.375123977661133
    6. '               ' → logprob: -18.000123977661133
    7. '_j' → logprob: -18.125123977661133
    8. ',j' → logprob: -18.500123977661133
    9. '	j' → logprob: -19.000123977661133
    10. '           ' → logprob: -19.625123977661133

Token 1792: '_' (ID: 62)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5390308499336243
    2. ',' → logprob: -0.9140308499336243
    3. ' =' → logprob: -4.414031028747559
    4. '_,' → logprob: -6.039031028747559
    5. '_' → logprob: -8.164031028747559
    6. ',_' → logprob: -8.539031028747559
    7. ',pos' → logprob: -8.539031028747559
    8. ')' → logprob: -8.664031028747559
    9. ' ,' → logprob: -8.789031028747559
    10. ',j' → logprob: -9.539031028747559

Token 1793: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001054007327184081
    2. ' =' → logprob: -7.001053810119629
    3. ',' → logprob: -8.876053810119629
    4. ',pos' → logprob: -13.126053810119629
    5. '=
' → logprob: -14.626053810119629
    6. '=i' → logprob: -16.126054763793945
    7. ')' → logprob: -17.001054763793945
    8. '=user' → logprob: -17.501054763793945
    9. '=

' → logprob: -17.501054763793945
    10. ',j' → logprob: -17.751054763793945

Token 1794: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.004097158554941416
    2. 'dp' → logprob: -5.754096984863281
    3. ' pos' → logprob: -7.004096984863281
    4. ' dp' → logprob: -11.504096984863281
    5. '   ' → logprob: -14.379096984863281
    6. '	pos' → logprob: -16.62909698486328
    7. '           ' → logprob: -17.37909698486328
    8. '       ' → logprob: -17.75409698486328
    9. '(pos' → logprob: -17.75409698486328
    10. '    ' → logprob: -18.25409698486328

Token 1795: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7402582168579102
    2. ' =' → logprob: -0.8652582168579102
    3. '               ' → logprob: -2.49025821685791
    4. 'dp' → logprob: -5.11525821685791
    5. ')' → logprob: -5.74025821685791
    6. '                   ' → logprob: -6.24025821685791
    7. 'pos' → logprob: -6.49025821685791
    8. 'next' → logprob: -6.86525821685791
    9. ',' → logprob: -7.11525821685791
    10. ']' → logprob: -7.49025821685791

Token 1796: '               ' (ID: 506)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.43072953820228577
    2. '               ' → logprob: -1.0557295083999634
    3. ' pos' → logprob: -6.555729389190674
    4. ',pos' → logprob: -8.180729866027832
    5. 'token' → logprob: -8.680729866027832
    6. 'next' → logprob: -9.930729866027832
    7. '(pos' → logprob: -10.055729866027832
    8. ',' → logprob: -10.555729866027832
    9. '[pos' → logprob: -11.805729866027832
    10. '	pos' → logprob: -12.305729866027832

Token 1797: ' if' (ID: 538)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.00014239625306800008
    2. '               ' → logprob: -9.375142097473145
    3. '(pos' → logprob: -10.625142097473145
    4. 'if' (adapté à ' if') → logprob: -11.250142097473145
    5. 'next' → logprob: -11.875142097473145
    6. '                   ' → logprob: -12.000142097473145
    7. ' pos' → logprob: -12.500142097473145
    8. 'i' → logprob: -13.875142097473145
    9. 'tmp' → logprob: -14.500142097473145
    10. 'new' → logprob: -14.625142097473145

Token 1798: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0861036479473114
    2. 'j' → logprob: -2.961103677749634
    3. 'dp' → logprob: -3.586103677749634
    4. '0' → logprob: -6.211103439331055
    5. ' i' → logprob: -7.711103439331055
    6. 'not' → logprob: -8.711103439331055
    7. '   ' → logprob: -9.336103439331055
    8. 'bit' → logprob: -9.461103439331055
    9. 'pos' → logprob: -9.711103439331055
    10. ' j' → logprob: -10.086103439331055

Token 1799: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1691005676984787
    2. '_,' → logprob: -1.9191005229949951
    3. '2' → logprob: -5.044100761413574
    4. '_<' → logprob: -7.294100761413574
    5. '_
' → logprob: -7.669100761413574
    6. '<' → logprob: -8.169100761413574
    7. '_[' → logprob: -8.794100761413574
    8. ',' → logprob: -9.169100761413574
    9. '_,
' → logprob: -9.294100761413574
    10. ' <' → logprob: -9.419100761413574

Token 1800: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.11066478490829468
    2. '<' → logprob: -2.4856648445129395
    3. ' >=' → logprob: -3.9856648445129395
    4. ' <' → logprob: -6.6106648445129395
    5. '==' → logprob: -7.6106648445129395
    6. '2' → logprob: -7.6106648445129395
    7. '_' → logprob: -9.235664367675781
    8. 'i' → logprob: -9.485664367675781
    9. '>' → logprob: -9.735664367675781
    10. ',' → logprob: -9.985664367675781

Token 1801: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.00010485442908247933
    2. '0' → logprob: -9.625104904174805
    3. ' H' → logprob: -10.500104904174805
    4. 'len' → logprob: -11.625104904174805
    5. '               ' → logprob: -14.125104904174805
    6. '                   ' → logprob: -14.250104904174805
    7. '   ' → logprob: -15.625104904174805
    8. '                       ' → logprob: -15.750104904174805
    9. ' len' → logprob: -16.125104904174805
    10. '           ' → logprob: -16.125104904174805

Token 1802: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.016481449827551842
    2. 'or' → logprob: -4.141481399536133
    3. ' and' → logprob: -8.266481399536133
    4. 'and' → logprob: -9.641481399536133
    5. '               ' → logprob: -9.766481399536133
    6. '                   ' → logprob: -9.891481399536133
    7. '                ' → logprob: -12.141481399536133
    8. '                       ' → logprob: -12.516481399536133
    9. '	or' → logprob: -12.516481399536133
    10. '```' → logprob: -13.891481399536133

Token 1803: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0025019366294145584
    2. ' j' → logprob: -6.002501964569092
    3. '                   ' → logprob: -11.252501487731934
    4. '               ' → logprob: -11.377501487731934
    5. '                ' → logprob: -14.127501487731934
    6. '                  ' → logprob: -15.127501487731934
    7. '              ' → logprob: -15.627501487731934
    8. '                 ' → logprob: -15.877501487731934
    9. '                    ' → logprob: -16.00250244140625
    10. '   ' → logprob: -16.50250244140625

Token 1804: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0004521222144830972
    2. '_,' → logprob: -8.500452041625977
    3. '_[' → logprob: -9.000452041625977
    4. '_]' → logprob: -10.125452041625977
    5. '_
' → logprob: -10.500452041625977
    6. '_<' → logprob: -10.625452041625977
    7. '+' → logprob: -12.500452041625977
    8. '[' → logprob: -12.625452041625977
    9. '```' → logprob: -12.750452041625977
    10. '               ' → logprob: -12.750452041625977

Token 1805: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.2789323031902313
    2. '_' → logprob: -1.9039323329925537
    3. ' >=' → logprob: -2.5289323329925537
    4. '[' → logprob: -4.653932094573975
    5. '[j' → logprob: -6.778932094573975
    6. '[i' → logprob: -6.903932094573975
    7. ']>=' → logprob: -6.903932094573975
    8. '_[' → logprob: -7.653932094573975
    9. '<' → logprob: -7.778932094573975
    10. ')>=' → logprob: -8.278932571411133

Token 1806: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.00015860427811276168
    2. ' W' → logprob: -8.750158309936523
    3. '   ' → logprob: -17.125158309936523
    4. '	W' → logprob: -18.625158309936523
    5. '<W' → logprob: -19.125158309936523
    6. ' ' → logprob: -19.250158309936523
    7. '0' → logprob: -19.500158309936523
    8. '  ' → logprob: -19.625158309936523
    9. '                   ' → logprob: -19.750158309936523
    10. '               ' → logprob: -19.750158309936523

Token 1807: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05370689556002617
    2. ':
' → logprob: -3.1787068843841553
    3. ':' → logprob: -4.678707122802734
    4. '               ' → logprob: -6.928707122802734
    5. '                       ' → logprob: -8.678707122802734
    6. '):
' → logprob: -9.428707122802734
    7. '                  ' → logprob: -10.178707122802734
    8. ',' → logprob: -10.928707122802734
    9. '                 ' → logprob: -11.428707122802734
    10. '                    ' → logprob: -11.678707122802734

Token 1808: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -5.5861724831629544e-05
    2. ':
' → logprob: -11.000056266784668
    3. '               ' → logprob: -11.500056266784668
    4. '                  ' → logprob: -11.875056266784668
    5. '                       ' → logprob: -12.000056266784668
    6. '                 ' → logprob: -12.250056266784668
    7. '
' → logprob: -12.875056266784668
    8. '                    ' → logprob: -13.625056266784668
    9. '```' → logprob: -13.625056266784668
    10. ',' → logprob: -13.875056266784668

Token 1809: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.4870985746383667
    2. '                   ' → logprob: -0.9870985746383667
    3. '                       ' → logprob: -4.362098693847656
    4. 'continue' → logprob: -9.737098693847656
    5. ' break' → logprob: -9.987098693847656
    6. '```' → logprob: -10.737098693847656
    7. '#' (adapté à ' #') → logprob: -10.862098693847656
    8. 'pos' → logprob: -11.612098693847656
    9. '	break' → logprob: -11.737098693847656
    10. '				' → logprob: -11.987098693847656

Token 1810: ' déjà' (ID: 21229)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.06220485270023346
    2. '                   ' → logprob: -2.8122048377990723
    3. 'continue' → logprob: -8.81220531463623
    4. ' break' → logprob: -10.31220531463623
    5. '                       ' → logprob: -11.31220531463623
    6. '	break' → logprob: -11.43720531463623
    7. '				' → logprob: -11.68720531463623
    8. '               ' → logprob: -11.81220531463623
    9. '#' → logprob: -12.18720531463623
    10. 'pos' → logprob: -12.18720531463623

Token 1811: ' en' (ID: 469)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.8934230208396912
    2. '                   ' → logprob: -1.143423080444336
    3. 'pos' → logprob: -1.518423080444336
    4. '               ' → logprob: -4.143423080444336
    5. 'st' → logprob: -4.893423080444336
    6. 'broken' → logprob: -5.018423080444336
    7. 'position' → logprob: -5.393423080444336
    8. '                       ' → logprob: -5.518423080444336
    9. 'finished' → logprob: -5.893423080444336
    10. ' break' → logprob: -6.643423080444336

Token 1812: ' position' (ID: 4010)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.058663249015808105
    2. 'position' → logprob: -3.6836633682250977
    3. 'fin' → logprob: -4.058663368225098
    4. 'sort' → logprob: -5.183663368225098
    5. 'arr' → logprob: -6.058663368225098
    6. 'termination' → logprob: -6.683663368225098
    7. 'final' → logprob: -6.808663368225098
    8. 'termin' → logprob: -7.183663368225098
    9. '(pos' → logprob: -7.183663368225098
    10. '(i' → logprob: -7.308663368225098

Token 1813: ' finale' (ID: 37759)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.6426057815551758
    2. 'pos' → logprob: -0.7676057815551758
    3. ' finale' → logprob: -5.017605781555176
    4. '(pos' → logprob: -6.517605781555176
    5. ' pos' → logprob: -7.767605781555176
    6. ' final' → logprob: -8.017605781555176
    7. 'fin' → logprob: -8.517605781555176
    8. '_final' → logprob: -8.517605781555176
    9. '(final' → logprob: -8.767605781555176
    10. 'out' → logprob: -9.517605781555176

Token 1814: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006048485636711121
    2. '                       ' → logprob: -5.506048679351807
    3. 'break' → logprob: -6.381048679351807
    4. '				' → logprob: -9.881048202514648
    5. ':
' → logprob: -10.006048202514648
    6. '               ' → logprob: -10.131048202514648
    7. '
' → logprob: -10.256048202514648
    8. ' break' → logprob: -10.631048202514648
    9. 'continue' → logprob: -10.756048202514648
    10. ':' → logprob: -11.006048202514648

Token 1815: '                   ' (ID: 699)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.20781128108501434
    2. '                   ' → logprob: -1.7078112363815308
    3. ':
' → logprob: -5.45781135559082
    4. '```' → logprob: -7.20781135559082
    5. ':' → logprob: -7.33281135559082
    6. 'continue' → logprob: -8.33281135559082
    7. ' continue' → logprob: -9.20781135559082
    8. 'break' → logprob: -9.83281135559082
    9. '                    ' → logprob: -9.95781135559082
    10. '                     ' → logprob: -9.95781135559082

Token 1816: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.03912367299199104
    2. '                   ' → logprob: -3.289123773574829
    3. '                       ' → logprob: -7.53912353515625
    4. 'continue' → logprob: -7.66412353515625
    5. ' break' → logprob: -10.53912353515625
    6. '	break' → logprob: -10.91412353515625
    7. '				' → logprob: -11.41412353515625
    8. '```' → logprob: -11.66412353515625
    9. '               ' → logprob: -11.91412353515625
    10. 'pass' → logprob: -12.91412353515625

Token 1817: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004192330234218389
    2. '
' → logprob: -8.125419616699219
    3. 'pos' → logprob: -10.000419616699219
    4. '                
' → logprob: -10.875419616699219
    5. 'else' → logprob: -11.125419616699219
    6. '                   ' → logprob: -11.250419616699219
    7. '```' → logprob: -12.125419616699219
    8. '{
' → logprob: -12.250419616699219
    9. '           ' → logprob: -12.500419616699219
    10. 'token' → logprob: -12.625419616699219

Token 1818: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016936669126152992
    2. 'pos' → logprob: -4.141936779022217
    3. '
' → logprob: -7.516936779022217
    4. '```' → logprob: -9.016936302185059
    5. 'token' → logprob: -9.516936302185059
    6. 'else' → logprob: -9.641936302185059
    7. ' pos' → logprob: -10.141936302185059
    8. 'current' → logprob: -11.641936302185059
    9. '                   ' → logprob: -11.766936302185059
    10. '                
' → logprob: -11.891936302185059

Token 1819: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.059296611696481705
    2. '               ' → logprob: -3.4342966079711914
    3. ' pos' → logprob: -3.6842966079711914
    4. 'next' → logprob: -8.934296607971191
    5. 'new' → logprob: -10.684296607971191
    6. ',pos' → logprob: -11.684296607971191
    7. '                   ' → logprob: -11.934296607971191
    8. '   ' → logprob: -11.934296607971191
    9. ' next' → logprob: -12.059296607971191
    10. '	pos' → logprob: -12.434296607971191

Token 1820: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11285532265901566
    2. ' =' → logprob: -2.2378554344177246
    3. '=
' → logprob: -10.487854957580566
    4. '=

' → logprob: -13.112854957580566
    5. ',' → logprob: -14.237854957580566
    6. '_=' → logprob: -14.237854957580566
    7. ' =
' → logprob: -15.112854957580566
    8. 's' → logprob: -15.362854957580566
    9. '=}' → logprob: -15.487854957580566
    10. '＝' → logprob: -15.612854957580566

Token 1821: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -3.547789674485102e-05
    2. ' dp' → logprob: -10.250035285949707
    3. '(dp' → logprob: -19.500036239624023
    4. '	dp' → logprob: -20.375036239624023
    5. '           ' → logprob: -20.500036239624023
    6. '   ' → logprob: -20.750036239624023
    7. '                   ' → logprob: -21.625036239624023
    8. '               ' → logprob: -22.000036239624023
    9. '       ' → logprob: -22.875036239624023
    10. ' ' → logprob: -23.000036239624023

Token 1822: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00020628207130357623
    2. 'bit' → logprob: -8.500205993652344
    3. '(bit' → logprob: -13.625205993652344
    4. '```' → logprob: -14.375205993652344
    5. '[
' → logprob: -15.125205993652344
    6. ' bit' → logprob: -15.875205993652344
    7. '0' → logprob: -16.625205993652344
    8. '1' → logprob: -16.875205993652344
    9. '
' → logprob: -17.000205993652344
    10. '[len' → logprob: -17.250205993652344

Token 1823: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -2.7729658540920354e-05
    2. ' bit' → logprob: -10.500027656555176
    3. '(bit' → logprob: -15.875027656555176
    4. 'bitr' → logprob: -18.375028610229492
    5. '.bit' → logprob: -18.500028610229492
    6. '[' → logprob: -19.000028610229492
    7. '_bit' → logprob: -19.375028610229492
    8. '```' → logprob: -20.125028610229492
    9. ' бит' → logprob: -20.250028610229492
    10. 'bits' → logprob: -20.375028610229492

Token 1824: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.014317459426820278
    2. '[i' → logprob: -4.264317512512207
    3. ' ][' → logprob: -9.389317512512207
    4. '[pos' → logprob: -10.764317512512207
    5. ']' → logprob: -11.514317512512207
    6. '[' → logprob: -11.764317512512207
    7. '   ' → logprob: -11.764317512512207
    8. 'i' → logprob: -12.639317512512207
    9. '
' → logprob: -12.639317512512207
    10. ' [' → logprob: -13.014317512512207

Token 1825: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009624350932426751
    2. 'pos' → logprob: -7.000962257385254
    3. '
' → logprob: -11.000962257385254
    4. '           ' → logprob: -12.000962257385254
    5. '   ' → logprob: -12.250962257385254
    6. '```' → logprob: -12.250962257385254
    7. ' i' → logprob: -12.375962257385254
    8. '0' → logprob: -12.500962257385254
    9. '               ' → logprob: -13.250962257385254
    10. '       ' → logprob: -13.250962257385254

Token 1826: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0010019666515290737
    2. '_]' → logprob: -7.376001834869385
    3. '_[' → logprob: -8.251002311706543
    4. '_i' → logprob: -10.376002311706543
    5. '_,' → logprob: -10.501002311706543
    6. '_
' → logprob: -10.626002311706543
    7. '][' → logprob: -11.251002311706543
    8. 'i' → logprob: -12.001002311706543
    9. '_
' → logprob: -12.251002311706543
    10. '_,
' → logprob: -14.251002311706543

Token 1827: '][' (ID: 2696)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0008147508488036692
    2. '][' → logprob: -7.125814914703369
    3. ' j' → logprob: -11.875814437866211
    4. '```' → logprob: -14.125814437866211
    5. '[j' → logprob: -14.375814437866211
    6. '	j' → logprob: -14.500814437866211
    7. '_j' → logprob: -15.000814437866211
    8. '   ' → logprob: -15.125814437866211
    9. ']' → logprob: -15.375814437866211
    10. '           ' → logprob: -15.375814437866211

Token 1828: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.6240566083070007e-06
    2. ' j' → logprob: -13.500001907348633
    3. '   ' → logprob: -16.125001907348633
    4. '  ' → logprob: -17.125001907348633
    5. '
' → logprob: -17.500001907348633
    6. '```' → logprob: -17.750001907348633
    7. '           ' → logprob: -17.875001907348633
    8. ' ' → logprob: -18.375001907348633
    9. '    ' → logprob: -18.500001907348633
    10. '     ' → logprob: -18.625001907348633

Token 1829: '_' (ID: 62)
  Prédit: '_]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_]' → logprob: -0.004161737859249115
    2. '_' → logprob: -5.504161834716797
    3. ']' → logprob: -9.504161834716797
    4. ']_' → logprob: -12.504161834716797
    5. '_[' → logprob: -14.129161834716797
    6. '_
' → logprob: -14.379161834716797
    7. '_)' → logprob: -14.504161834716797
    8. '_-' → logprob: -15.129161834716797
    9. '`]' → logprob: -15.129161834716797
    10. 'i' → logprob: -15.254161834716797

Token 1830: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00013119110371917486
    2. ']
' → logprob: -9.625131607055664
    3. ' ]' → logprob: -11.125131607055664
    4. '[' → logprob: -11.250131607055664
    5. '][' → logprob: -11.875131607055664
    6. '               ' → logprob: -12.000131607055664
    7. '[j' → logprob: -12.250131607055664
    8. '           ' → logprob: -12.500131607055664
    9. '       ' → logprob: -12.625131607055664
    10. '_]' → logprob: -13.000131607055664

Token 1831: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3786810040473938
    2. '<|end|>' → logprob: -1.878680944442749
    3. '
' → logprob: -2.753680944442749
    4. '```' → logprob: -2.878680944442749
    5. '   ' → logprob: -4.253681182861328
    6. 'if' → logprob: -4.378681182861328
    7. 'return' → logprob: -5.128681182861328
    8. ' if' → logprob: -5.753681182861328
    9. '#' → logprob: -6.878681182861328
    10. ')' → logprob: -7.003681182861328

Token 1832: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16382494568824768
    2. '   ' → logprob: -2.913825035095215
    3. '```' → logprob: -3.288825035095215
    4. '       ' → logprob: -3.788825035095215
    5. '#' (adapté à ' #') → logprob: -4.413825035095215
    6. 'return' → logprob: -4.538825035095215
    7. 'print' → logprob: -4.913825035095215
    8. '    
' → logprob: -6.163825035095215
    9. '        
' → logprob: -6.788825035095215
    10. '  
' → logprob: -7.163825035095215

Token 1833: ' pos' (ID: 1253)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06451929360628128
    2. 'i' → logprob: -3.3145194053649902
    3. '#' → logprob: -4.06451940536499
    4. 'return' → logprob: -5.68951940536499
    5. 'if' → logprob: -5.93951940536499
    6. '       ' → logprob: -6.68951940536499
    7. 'pos' → logprob: -7.93951940536499
    8. 'r' → logprob: -8.064518928527832
    9. '```' → logprob: -8.189518928527832
    10. 'row' → logprob: -8.439518928527832

Token 1834: ' peut' (ID: 9216)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1847561597824097
    2. '#' → logprob: -1.8097561597824097
    3. '<|end|>' → logprob: -1.9347561597824097
    4. 'i' → logprob: -2.059756278991699
    5. 'print' → logprob: -2.059756278991699
    6. '_i' → logprob: -3.309756278991699
    7. '```' → logprob: -3.934756278991699
    8. '<|end|>' → logprob: -4.309756278991699
    9. '[' → logprob: -5.184756278991699
    10. '(i' → logprob: -5.184756278991699

Token 1835: ' être' (ID: 9104)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06689053028821945
    2. '[' → logprob: -3.8168904781341553
    3. '>=' → logprob: -4.191890716552734
    4. '==' → logprob: -4.441890716552734
    5. ' =' → logprob: -5.066890716552734
    6. '#' → logprob: -5.566890716552734
    7. ')' → logprob: -6.316890716552734
    8. '[i' → logprob: -8.066890716552734
    9. 'être' → logprob: -8.316890716552734
    10. '
' → logprob: -8.316890716552734

Token 1836: ' hors' (ID: 26087)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0135049968957901
    2. 'pos' → logprob: -5.638504981994629
    3. '(pos' → logprob: -6.013504981994629
    4. 'final' → logprob: -6.013504981994629
    5. 'i' → logprob: -6.138504981994629
    6. '(H' → logprob: -6.888504981994629
    7. 'out' → logprob: -7.388504981994629
    8. '(' → logprob: -8.388504981994629
    9. 'outside' → logprob: -8.638504981994629
    10. '[i' → logprob: -9.138504981994629

Token 1837: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.04456315562129021
    2. 'of' → logprob: -3.294563055038452
    3. 'du' → logprob: -5.794563293457031
    4. '(i' → logprob: -7.294563293457031
    5. ' de' → logprob: -7.544563293457031
    6. '```' → logprob: -7.544563293457031
    7. '_of' → logprob: -8.044563293457031
    8. 'pos' → logprob: -8.169563293457031
    9. '       ' → logprob: -8.794563293457031
    10. 'def' → logprob: -8.919563293457031

Token 1838: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.4222477376461029
    2. '(H' → logprob: -2.1722476482391357
    3. 'H' → logprob: -2.7972476482391357
    4. 'gr' → logprob: -2.9222476482391357
    5. 'the' → logprob: -3.6722476482391357
    6. 'pos' → logprob: -3.6722476482391357
    7. 'grid' → logprob: -3.7972476482391357
    8. '(' → logprob: -4.547247886657715
    9. 'range' → logprob: -4.547247886657715
    10. '```' → logprob: -5.047247886657715

Token 1839: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.33720776438713074
    2. 'grid' → logprob: -2.212207794189453
    3. 'H' → logprob: -2.337207794189453
    4. 'table' → logprob: -2.712207794189453
    5. 'W' → logprob: -5.212207794189453
    6. '#' → logprob: -5.212207794189453
    7. '(H' → logprob: -7.212207794189453
    8. 'tuple' → logprob: -7.587207794189453
    9. '```' → logprob: -8.087207794189453
    10. '(' → logprob: -8.962207794189453

Token 1840: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.14011640846729279
    2. 'i' → logprob: -2.8901164531707764
    3. 'if' → logprob: -3.0151164531707764
    4. '#' → logprob: -4.015116214752197
    5. '
' → logprob: -6.015116214752197
    6. '```' → logprob: -6.640116214752197
    7. '       ' → logprob: -6.765116214752197
    8. '(i' → logprob: -7.265116214752197
    9. '#print' → logprob: -7.515116214752197
    10. '   ' → logprob: -7.640116214752197

Token 1841: ' on' (ID: 402)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.102159023284912
    2. '#' → logprob: -1.602159023284912
    3. 'print' → logprob: -1.602159023284912
    4. '       ' → logprob: -3.102159023284912
    5. ' if' → logprob: -3.102159023284912
    6. ' (' → logprob: -3.227159023284912
    7. ' i' → logprob: -3.477159023284912
    8. ' print' → logprob: -3.727159023284912
    9. 'if' → logprob: -3.977159023284912
    10. 'i' → logprob: -4.352159023284912

Token 1842: ' doit' (ID: 21822)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4290548861026764
    2. 'print' → logprob: -1.429054856300354
    3. 'if' → logprob: -2.4290549755096436
    4. '```' → logprob: -5.1790547370910645
    5. '       ' → logprob: -5.4290547370910645
    6. '   ' → logprob: -6.1790547370910645
    7. 'i' → logprob: -6.5540547370910645
    8. '
' → logprob: -6.6790547370910645
    9. ' #' → logprob: -6.6790547370910645
    10. ' if' → logprob: -7.1790547370910645

Token 1843: ' afficher' (ID: 146524)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03445592150092125
    2. '#' → logprob: -3.6594560146331787
    3. '```' → logprob: -5.6594557762146
    4. 'i' → logprob: -6.2844557762146
    5. ' i' → logprob: -7.7844557762146
    6. 'output' → logprob: -7.9094557762146
    7. '
' → logprob: -7.9094557762146
    8. ' print' → logprob: -7.9094557762146
    9. '#print' → logprob: -8.159456253051758
    10. '   ' → logprob: -8.409456253051758

Token 1844: ' ' (ID: 220)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.1143060028553009
    2. '(pos' → logprob: -2.3643059730529785
    3. 'print' → logprob: -4.7393059730529785
    4. ' pos' → logprob: -5.8643059730529785
    5. '(i' → logprob: -7.3643059730529785
    6. ' (' → logprob: -7.4893059730529785
    7. 'f' → logprob: -7.6143059730529785
    8. '(f' → logprob: -8.614306449890137
    9. '   ' → logprob: -8.864306449890137
    10. '```' → logprob: -9.239306449890137

Token 1845: '1' (ID: 16)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.038355644792318344
    2. '(pos' → logprob: -3.288355588912964
    3. 'f' → logprob: -8.913355827331543
    4. '(i' → logprob: -9.538355827331543
    5. 'str' → logprob: -9.663355827331543
    6. '(f' → logprob: -11.413355827331543
    7. 'i' → logprob: -11.538355827331543
    8. ' pos' → logprob: -11.538355827331543
    9. '(str' → logprob: -12.038355827331543
    10. '   ' → logprob: -13.288355827331543

Token 1846: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.06026475504040718
    2. '-' → logprob: -3.185264825820923
    3. ' -' → logprob: -4.935264587402344
    4. ',' → logprob: -5.310264587402344
    5. 'based' → logprob: -5.435264587402344
    6. '-base' → logprob: -8.435264587402344
    7. '_based' → logprob: -9.060264587402344
    8. ')' → logprob: -9.685264587402344
    9. ' based' → logprob: -9.810264587402344
    10. '+' → logprob: -10.185264587402344

Token 1847: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004242395516484976
    2. 'i' → logprob: -8.1254243850708
    3. '   ' → logprob: -10.0004243850708
    4. '```' → logprob: -10.7504243850708
    5. '       ' → logprob: -11.2504243850708
    6. 'if' → logprob: -11.5004243850708
    7. 'x' → logprob: -11.7504243850708
    8. ' print' → logprob: -11.8754243850708
    9. '
' → logprob: -12.2504243850708
    10. 'pi' → logprob: -12.5004243850708

Token 1848: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0013786869822070003
    2. '```' → logprob: -7.001378536224365
    3. '       ' → logprob: -8.376379013061523
    4. '``' → logprob: -9.376379013061523
    5. '   ' → logprob: -9.751379013061523
    6. ' print' → logprob: -10.001379013061523
    7. 'i' → logprob: -10.126379013061523
    8. 'if' → logprob: -13.251379013061523
    9. '`' → logprob: -13.501379013061523
    10. 'return' → logprob: -13.626379013061523

Token 1849: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003461905289441347
    2. '       ' → logprob: -9.125346183776855
    3. '   ' → logprob: -9.250346183776855
    4. '```' → logprob: -9.625346183776855
    5. 'i' → logprob: -10.125346183776855
    6. ' print' → logprob: -10.750346183776855
    7. '``' → logprob: -12.125346183776855
    8. 'if' → logprob: -12.375346183776855
    9. 'x' → logprob: -13.625346183776855
    10. 'r' → logprob: -13.750346183776855

Token 1850: ' La' (ID: 3038)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00011200665176147595
    2. '       ' → logprob: -10.12511157989502
    3. '   ' → logprob: -10.50011157989502
    4. 'i' → logprob: -10.50011157989502
    5. 'if' → logprob: -11.75011157989502
    6. ' print' → logprob: -13.00011157989502
    7. 'r' → logprob: -13.25011157989502
    8. 'x' → logprob: -13.37511157989502
    9. '```' → logprob: -13.62511157989502
    10. 'row' → logprob: -14.50011157989502

Token 1851: ' sortie' (ID: 52761)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1171431615948677
    2. 'i' → logprob: -2.367143154144287
    3. ' print' → logprob: -4.867143154144287
    4. 'if' → logprob: -5.367143154144287
    5. '#' → logprob: -6.242143154144287
    6. ' i' → logprob: -7.367143154144287
    7. '```' → logprob: -7.617143154144287
    8. '
' → logprob: -7.742143154144287
    9. 'pos' → logprob: -8.367143630981445
    10. '``' → logprob: -8.492143630981445

Token 1852: ' indique' (ID: 97324)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5645756125450134
    2. 'i' → logprob: -1.4395756721496582
    3. ' =' → logprob: -1.9395756721496582
    4. '=' → logprob: -3.564575672149658
    5. '```' → logprob: -5.064575672149658
    6. '
' → logprob: -5.439575672149658
    7. '_i' → logprob: -5.814575672149658
    8. '#' → logprob: -6.564575672149658
    9. '``' → logprob: -6.939575672149658
    10. '   ' → logprob: -7.064575672149658

Token 1853: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09923972189426422
    2. 'pos' → logprob: -2.4742398262023926
    3. 'f' → logprob: -5.099239826202393
    4. '   ' → logprob: -6.099239826202393
    5. ' print' → logprob: -7.724239826202393
    6. '(f' → logprob: -8.099239349365234
    7. '(pos' → logprob: -8.099239349365234
    8. 'return' → logprob: -8.474239349365234
    9. '```' → logprob: -8.974239349365234
    10. ' pos' → logprob: -8.974239349365234

Token 1854: ' cro' (ID: 11270)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.019458461552858353
    2. ' print' → logprob: -4.894458293914795
    3. 'position' → logprob: -5.144458293914795
    4. 'ligne' → logprob: -6.394458293914795
    5. 'i' → logprob: -6.769458293914795
    6. 'final' → logprob: -7.144458293914795
    7. ' position' → logprob: -7.769458293914795
    8. '   ' → logprob: -7.894458293914795
    9. '#' → logprob: -7.894458293914795
    10. ' ligne' → logprob: -8.394458770751953

Token 1855: 'isement' (ID: 27060)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5500221848487854
    2. 'nn' → logprob: -1.9250221252441406
    3. 'n' → logprob: -2.5500221252441406
    4. 'rd' → logprob: -3.1750221252441406
    5. 'te' → logprob: -3.8000221252441406
    6. 'ord' → logprob: -3.9250221252441406
    7. 'nte' → logprob: -4.300022125244141
    8. '(' → logprob: -4.300022125244141
    9. 'nt' → logprob: -4.675022125244141
    10. 'lon' → logprob: -4.800022125244141

Token 1856: ' finale' (ID: 37759)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0117792384698987
    2. '
' → logprob: -5.011779308319092
    3. ',' → logprob: -6.261779308319092
    4. ' print' → logprob: -7.261779308319092
    5. '   ' → logprob: -7.636779308319092
    6. '(i' → logprob: -7.761779308319092
    7. '```' → logprob: -7.886779308319092
    8. 'i' → logprob: -8.011778831481934
    9. '#' → logprob: -8.886778831481934
    10. '(' → logprob: -9.386778831481934

Token 1857: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014370576478540897
    2. '   ' → logprob: -4.764370441436768
    3. '       ' → logprob: -5.889370441436768
    4. 'i' → logprob: -6.389370441436768
    5. ' print' → logprob: -7.514370441436768
    6. ',' → logprob: -8.139370918273926
    7. '```' → logprob: -8.639370918273926
    8. ' i' → logprob: -9.264370918273926
    9. '
' → logprob: -9.389370918273926
    10. '``' → logprob: -10.639370918273926

Token 1858: 'i' (ID: 72)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0198313370347023
    2. '(pos' → logprob: -4.14483118057251
    3. 'f' → logprob: -7.01983118057251
    4. ' pos' → logprob: -7.14483118057251
    5. ')' → logprob: -7.64483118057251
    6. '   ' → logprob: -7.89483118057251
    7. ' (' → logprob: -8.269831657409668
    8. 'print' → logprob: -8.394831657409668
    9. '(' → logprob: -8.769831657409668
    10. 'i' → logprob: -8.769831657409668

Token 1859: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5120546817779541
    2. '+' → logprob: -1.012054681777954
    3. 'pos' → logprob: -4.762054443359375
    4. ' +' → logprob: -5.387054443359375
    5. ')' → logprob: -5.512054443359375
    6. '```' → logprob: -5.512054443359375
    7. '[' → logprob: -5.637054443359375
    8. '   ' → logprob: -6.012054443359375
    9. '
' → logprob: -6.012054443359375
    10. '=' → logprob: -7.137054443359375

Token 1860: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1391633301973343
    2. ')
' → logprob: -2.7641632556915283
    3. ')+' → logprob: -3.1391632556915283
    4. '       ' → logprob: -5.014163494110107
    5. '+' → logprob: -5.139163494110107
    6. '),' → logprob: -6.139163494110107
    7. '```' → logprob: -6.389163494110107
    8. ']' → logprob: -6.514163494110107
    9. ']+' → logprob: -6.889163494110107
    10. ',' → logprob: -7.014163494110107

Token 1861: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0035908028949052095
    2. '
' → logprob: -6.6285905838012695
    3. '```' → logprob: -6.6285905838012695
    4. 'i' → logprob: -8.00359058380127
    5. '       ' → logprob: -8.87859058380127
    6. ',' → logprob: -9.25359058380127
    7. '   ' → logprob: -9.50359058380127
    8. '``' → logprob: -9.62859058380127
    9. 'if' → logprob: -9.75359058380127
    10. '#' → logprob: -9.75359058380127

Token 1862: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1900256723165512
    2. ')
' → logprob: -1.8150256872177124
    3. '       ' → logprob: -5.190025806427002
    4. '```' → logprob: -6.190025806427002
    5. 'print' → logprob: -7.065025806427002
    6. '+' → logprob: -7.440025806427002
    7. '   ' → logprob: -7.690025806427002
    8. '``' → logprob: -8.690025329589844
    9. '
' → logprob: -9.565025329589844
    10. '):
' → logprob: -9.690025329589844

Token 1863: '-based' (ID: 8235)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6447052955627441
    2. '+' → logprob: -0.7697052955627441
    3. '+,' → logprob: -5.519705295562744
    4. ')' → logprob: -6.394705295562744
    5. ',
' → logprob: -6.644705295562744
    6. ' +' → logprob: -7.144705295562744
    7. '+
' → logprob: -7.269705295562744
    8. ' ,' → logprob: -7.644705295562744
    9. '
' → logprob: -8.019704818725586
    10. '   ' → logprob: -8.019704818725586

Token 1864: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6849731206893921
    2. ')
' → logprob: -0.8099731206893921
    3. 'print' → logprob: -3.1849732398986816
    4. '```' → logprob: -5.434973239898682
    5. '``' → logprob: -7.059973239898682
    6. '
' → logprob: -7.059973239898682
    7. ',' → logprob: -7.184973239898682
    8. '       ' → logprob: -7.434973239898682
    9. '[' → logprob: -7.684973239898682
    10. '   ' → logprob: -7.684973239898682

Token 1865: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007488669361919165
    2. '       ' → logprob: -5.00748872756958
    3. '   ' → logprob: -7.63248872756958
    4. '```' → logprob: -8.757488250732422
    5. ' print' → logprob: -9.507488250732422
    6. 'i' → logprob: -11.007488250732422
    7. '
' → logprob: -11.007488250732422
    8. '``' → logprob: -11.757488250732422
    9. '#' → logprob: -12.632488250732422
    10. 'return' → logprob: -12.632488250732422

Token 1866: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06081599369645119
    2. '   ' → logprob: -3.3108160495758057
    3. '       ' → logprob: -3.8108160495758057
    4. '```' → logprob: -7.935815811157227
    5. ' print' → logprob: -10.685815811157227
    6. '``' → logprob: -13.435815811157227
    7. '
' → logprob: -13.560815811157227
    8. '	print' → logprob: -13.685815811157227
    9. 'sys' → logprob: -14.310815811157227
    10. '        
' → logprob: -14.310815811157227

Token 1867: ' Dans' (ID: 22082)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00040528984391130507
    2. '       ' → logprob: -8.500405311584473
    3. '```' → logprob: -8.875405311584473
    4. '   ' → logprob: -10.750405311584473
    5. ' print' → logprob: -10.875405311584473
    6. 'i' → logprob: -11.250405311584473
    7. '``' → logprob: -12.500405311584473
    8. '
' → logprob: -12.500405311584473
    9. 'return' → logprob: -15.000405311584473
    10. '#print' → logprob: -15.250405311584473

Token 1868: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.010263709351420403
    2. 'pos' → logprob: -5.385263919830322
    3. '#' → logprob: -6.010263919830322
    4. 'i' → logprob: -6.760263919830322
    5. '   ' → logprob: -6.760263919830322
    6. 'range' → logprob: -8.135263442993164
    7. ' print' → logprob: -8.760263442993164
    8. 'if' → logprob: -9.135263442993164
    9. '(i' → logprob: -9.510263442993164
    10. '```' → logprob: -9.885263442993164

Token 1869: ' cas' (ID: 2108)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.0271483659744263
    2. 'print' → logprob: -1.0271483659744263
    3. 'if' → logprob: -2.6521482467651367
    4. '#' → logprob: -2.7771482467651367
    5. 'code' → logprob: -2.7771482467651367
    6. '```' → logprob: -3.1521482467651367
    7. '   ' → logprob: -4.402148246765137
    8. '
' → logprob: -4.402148246765137
    9. 'else' → logprob: -5.777148246765137
    10. 'return' → logprob: -6.027148246765137

Token 1870: ' de' (ID: 334)
  Prédit: 'où'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'où' → logprob: -0.07767955213785172
    2. 'pos' → logprob: -3.0776796340942383
    3. ' où' → logprob: -4.202679634094238
    4. 'i' → logprob: -5.452679634094238
    5. 'where' → logprob: -5.577679634094238
    6. '(pos' → logprob: -6.202679634094238
    7. '(i' → logprob: -7.077679634094238
    8. ' where' → logprob: -7.327679634094238
    9. '```' → logprob: -7.452679634094238
    10. 'd' → logprob: -7.952679634094238

Token 1871: ' sortie' (ID: 52761)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.15195004642009735
    2. 'la' → logprob: -2.2769501209259033
    3. 'i' → logprob: -4.526949882507324
    4. 'sort' → logprob: -4.526949882507324
    5. 'l' → logprob: -5.276949882507324
    6. 'le' → logprob: -6.026949882507324
    7. ' la' → logprob: -6.151949882507324
    8. '#' → logprob: -6.401949882507324
    9. '```' → logprob: -7.026949882507324
    10. 'H' → logprob: -7.651949882507324

Token 1872: ' hors' (ID: 26087)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0443452596664429
    2. ':
' → logprob: -1.0443452596664429
    3. '       ' → logprob: -1.9193452596664429
    4. '[' → logprob: -2.5443453788757324
    5. '           ' → logprob: -3.7943453788757324
    6. ',' → logprob: -4.669345378875732
    7. '[i' → logprob: -4.794345378875732
    8. '=' → logprob: -5.044345378875732
    9. '   ' → logprob: -5.419345378875732
    10. ')' → logprob: -6.044345378875732

Token 1873: ' limite' (ID: 48939)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5166448950767517
    2. 'gr' → logprob: -1.5166449546813965
    3. 'du' → logprob: -1.7666449546813965
    4. 'grid' → logprob: -5.3916449546813965
    5. 'des' → logprob: -6.1416449546813965
    6. '```' → logprob: -6.5166449546813965
    7. 'table' → logprob: -6.7666449546813965
    8. '   ' → logprob: -7.5166449546813965
    9. '=' → logprob: -7.5166449546813965
    10. 'la' → logprob: -7.7666449546813965

Token 1874: ' à' (ID: 1221)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8092367649078369
    2. ':' → logprob: -1.184236764907837
    3. '       ' → logprob: -2.184236764907837
    4. ',' → logprob: -2.434236764907837
    5. '=' → logprob: -4.684236526489258
    6. '(i' → logprob: -4.809236526489258
    7. 'if' → logprob: -5.184236526489258
    8. '           ' → logprob: -5.309236526489258
    9. '   ' → logprob: -5.434236526489258
    10. ' (' → logprob: -5.934236526489258

Token 1875: ' droite' (ID: 61428)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.0342211723327637
    2. 'la' → logprob: -1.7842211723327637
    3. '(H' → logprob: -2.2842211723327637
    4. '(i' → logprob: -2.4092211723327637
    5. '#' → logprob: -2.5342211723327637
    6. 'le' → logprob: -2.7842211723327637
    7. 'the' → logprob: -3.5342211723327637
    8. '0' → logprob: -3.6592211723327637
    9. 'i' → logprob: -4.034221172332764
    10. '```' → logprob: -4.159221172332764

Token 1876: ' ou' (ID: 2031)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7820044159889221
    2. ',' → logprob: -1.7820043563842773
    3. ':
' → logprob: -1.7820043563842773
    4. ' or' → logprob: -2.4070043563842773
    5. ':' → logprob: -2.5320043563842773
    6. '           ' → logprob: -4.657004356384277
    7. '```' → logprob: -4.657004356384277
    8. 'or' → logprob: -4.907004356384277
    9. '   ' → logprob: -6.032004356384277
    10. '               ' → logprob: -6.157004356384277

Token 1877: ' en' (ID: 469)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.3014911711215973
    2. 'bottom' → logprob: -1.926491141319275
    3. 'down' → logprob: -2.9264912605285645
    4. 'en' → logprob: -3.0514912605285645
    5. 'below' → logprob: -5.4264912605285645
    6. '```' → logprob: -5.5514912605285645
    7. 'la' → logprob: -5.8014912605285645
    8. 'le' → logprob: -7.3014912605285645
    9. 'dro' → logprob: -7.5514912605285645
    10. 'au' → logprob: -7.6764912605285645

Token 1878: ' bas' (ID: 3222)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.0007361313910223544
    2. 'b' → logprob: -7.875736236572266
    3. '```' → logprob: -8.750736236572266
    4. 'bottom' → logprob: -9.000736236572266
    5. 'down' → logprob: -10.250736236572266
    6. ' bas' → logprob: -11.625736236572266
    7. 'bord' → logprob: -12.125736236572266
    8. 'dess' → logprob: -12.500736236572266
    9. '_bas' → logprob: -12.625736236572266
    10. 'haut' → logprob: -12.750736236572266

Token 1879: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007502748165279627
    2. ',' → logprob: -5.757502555847168
    3. 'print' → logprob: -6.507502555847168
    4. 'if' → logprob: -6.757502555847168
    5. ':
' → logprob: -7.007502555847168
    6. ':' → logprob: -8.382502555847168
    7. ',
' → logprob: -9.257502555847168
    8. '```' → logprob: -9.257502555847168
    9. '):
' → logprob: -9.257502555847168
    10. 'i' → logprob: -9.882502555847168

Token 1880: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.013120577670633793
    2. ' print' → logprob: -4.388120651245117
    3. '       ' → logprob: -7.638120651245117
    4. '   ' → logprob: -10.013120651245117
    5. '```' → logprob: -10.388120651245117
    6. '           ' → logprob: -10.763120651245117
    7. 'i' → logprob: -11.388120651245117
    8. ' i' → logprob: -11.763120651245117
    9. 'if' → logprob: -12.263120651245117
    10. 'output' → logprob: -13.013120651245117

Token 1881: ' doit' (ID: 21822)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.027166610583662987
    2. '```' → logprob: -4.277166843414307
    3. '#' → logprob: -4.652166843414307
    4. '#print' → logprob: -7.152166843414307
    5. '``' → logprob: -8.027166366577148
    6. '+=' → logprob: -8.027166366577148
    7. '=' → logprob: -8.277166366577148
    8. '+' → logprob: -8.402166366577148
    9. ' print' → logprob: -8.527166366577148
    10. '
' → logprob: -8.527166366577148

Token 1882: ' donner' (ID: 32394)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0026606738101691008
    2. ' print' → logprob: -6.252660751342773
    3. '#' → logprob: -7.752660751342773
    4. '```' → logprob: -9.127660751342773
    5. 'aff' → logprob: -9.627660751342773
    6. '_print' → logprob: -10.752660751342773
    7. 'output' → logprob: -11.127660751342773
    8. '#print' → logprob: -11.252660751342773
    9. '+' → logprob: -11.752660751342773
    10. 'printf' → logprob: -11.877660751342773

Token 1883: ' la' (ID: 557)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.05272802338004112
    2. 'print' → logprob: -3.0527279376983643
    3. '(pos' → logprob: -6.427728176116943
    4. 'i' → logprob: -6.927728176116943
    5. 'str' → logprob: -7.302728176116943
    6. ' pos' → logprob: -8.052727699279785
    7. '(i' → logprob: -8.427727699279785
    8. '   ' → logprob: -8.802727699279785
    9. 'f' → logprob: -9.302727699279785
    10. '```' → logprob: -10.552727699279785

Token 1884: ' position' (ID: 4010)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0026351111009716988
    2. 'pos' → logprob: -6.7526350021362305
    3. ' print' → logprob: -7.5026350021362305
    4. 'final' → logprob: -7.6276350021362305
    5. 'i' → logprob: -8.12763500213623
    6. 'position' → logprob: -10.00263500213623
    7. '```' → logprob: -11.12763500213623
    8. '#' → logprob: -11.25263500213623
    9. '
' → logprob: -11.37763500213623
    10. '`' → logprob: -11.75263500213623

Token 1885: ' finale' (ID: 37759)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.029228489845991135
    2. 'i' → logprob: -4.779228687286377
    3. ' =' → logprob: -4.904228687286377
    4. '=' → logprob: -5.404228687286377
    5. 'final' → logprob: -5.654228687286377
    6. ' print' → logprob: -7.029228687286377
    7. '_i' → logprob: -7.029228687286377
    8. 'pos' → logprob: -7.529228687286377
    9. 'x' → logprob: -7.779228687286377
    10. '
' → logprob: -8.154228210449219

Token 1886: ' d' (ID: 272)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06906836479902267
    2. '
' → logprob: -3.444068431854248
    3. 'i' → logprob: -3.819068431854248
    4. '       ' → logprob: -5.819068431854248
    5. ' =' → logprob: -6.569068431854248
    6. '   ' → logprob: -6.569068431854248
    7. 'if' → logprob: -6.819068431854248
    8. '```' → logprob: -6.944068431854248
    9. '#' → logprob: -7.069068431854248
    10. ',' → logprob: -7.444068431854248

Token 1887: ''arrêt' (ID: 186362)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.04009039327502251
    2. 'u' → logprob: -3.915090322494507
    3. ''arrivée' → logprob: -4.665090560913086
    4. 'é' → logprob: -6.165090560913086
    5. ''arrêt' → logprob: -6.290090560913086
    6. 'ans' → logprob: -6.540090560913086
    7. ''arr' → logprob: -7.165090560913086
    8. ''un' → logprob: -7.790090560913086
    9. ''é' → logprob: -7.915090560913086
    10. 'i' → logprob: -8.290090560913086

Token 1888: '.

' (ID: 364)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01733964867889881
    2. '
' → logprob: -4.892339706420898
    3. '       ' → logprob: -5.142339706420898
    4. '   ' → logprob: -6.017339706420898
    5. '```' → logprob: -7.267339706420898
    6. 'i' → logprob: -7.767339706420898
    7. '``' → logprob: -9.267339706420898
    8. ' print' → logprob: -9.392339706420898
    9. '#' → logprob: -10.267339706420898
    10. '    
' → logprob: -11.267339706420898

Token 1889: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006646687630563974
    2. '       ' → logprob: -5.256646633148193
    3. '```' → logprob: -7.006646633148193
    4. '   ' → logprob: -7.756646633148193
    5. ' print' → logprob: -10.131647109985352
    6. '``' → logprob: -10.881647109985352
    7. '
' → logprob: -11.381647109985352
    8. 'i' → logprob: -13.006647109985352
    9. '	print' → logprob: -13.131647109985352
    10. '`' → logprob: -14.256647109985352

Token 1890: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003159895772114396
    2. '   ' → logprob: -6.003159999847412
    3. '       ' → logprob: -7.503159999847412
    4. '```' → logprob: -9.003159523010254
    5. ' print' → logprob: -11.878159523010254
    6. '
' → logprob: -13.878159523010254
    7. '``' → logprob: -13.878159523010254
    8. '	print' → logprob: -15.503159523010254
    9. 'i' → logprob: -16.12816047668457
    10. 'sys' → logprob: -16.37816047668457

Token 1891: ' rappel' (ID: 86346)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002658297074958682
    2. '       ' → logprob: -6.627658367156982
    3. 'i' → logprob: -6.752658367156982
    4. '```' → logprob: -9.877657890319824
    5. '   ' → logprob: -10.002657890319824
    6. '#' → logprob: -10.752657890319824
    7. ' print' → logprob: -11.752657890319824
    8. 'if' → logprob: -11.752657890319824
    9. 'sys' → logprob: -12.002657890319824
    10. '
' → logprob: -12.127657890319824

Token 1892: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8226377367973328
    2. 'if' → logprob: -0.8226377367973328
    3. 'print' → logprob: -3.3226377964019775
    4. '(i' → logprob: -3.5726377964019775
    5. '#' → logprob: -4.072637557983398
    6. ' if' → logprob: -4.447637557983398
    7. 'i' → logprob: -4.822637557983398
    8. '   ' → logprob: -5.072637557983398
    9. ' =' → logprob: -6.447637557983398
    10. ':' → logprob: -6.572637557983398

Token 1893: ' crois' (ID: 65485)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007797269499860704
    2. 'i' → logprob: -7.500779628753662
    3. '```' → logprob: -9.12578010559082
    4. ' print' → logprob: -9.87578010559082
    5. 'if' → logprob: -10.62578010559082
    6. '       ' → logprob: -11.00078010559082
    7. 'pi' → logprob: -12.12578010559082
    8. 'x' → logprob: -12.62578010559082
    9. '``' → logprob: -12.75078010559082
    10. 'row' → logprob: -12.75078010559082

Token 1894: 'ements' (ID: 4507)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.9181793928146362
    2. 'on' → logprob: -2.293179512023926
    3. 'ons' → logprob: -2.293179512023926
    4. '(' → logprob: -2.418179512023926
    5. 'ements' → logprob: -2.918179512023926
    6. '(pos' → logprob: -3.168179512023926
    7. 'ément' → logprob: -3.293179512023926
    8. '```' → logprob: -3.418179512023926
    9. 'nements' → logprob: -3.543179512023926
    10. 'son' → logprob: -3.668179512023926

Token 1895: ' sont' (ID: 5242)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7453614473342896
    2. ' =' → logprob: -0.8703614473342896
    3. 'final' → logprob: -3.495361328125
    4. '```' → logprob: -3.870361328125
    5. 'i' → logprob: -3.995361328125
    6. '_i' → logprob: -4.620361328125
    7. '_final' → logprob: -4.995361328125
    8. '[' → logprob: -5.870361328125
    9. '   ' → logprob: -6.120361328125
    10. 'pos' → logprob: -6.120361328125

Token 1896: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.44907042384147644
    2. '(i' → logprob: -2.074070453643799
    3. 'num' → logprob: -2.449070453643799
    4. '(num' → logprob: -2.574070453643799
    5. '1' → logprob: -4.074070453643799
    6. ' (' → logprob: -4.449070453643799
    7. '(index' → logprob: -4.949070453643799
    8. 'situ' → logprob: -5.324070453643799
    9. 'dans' → logprob: -5.449070453643799
    10. 'index' → logprob: -6.199070453643799

Token 1897: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09172190725803375
    2. '1' → logprob: -2.716722011566162
    3. ' (' → logprob: -4.466722011566162
    4. 'i' → logprob: -5.216722011566162
    5. '(i' → logprob: -5.841722011566162
    6. '(
' → logprob: -7.341722011566162
    7. ' ' → logprob: -8.091721534729004
    8. '   ' → logprob: -8.716721534729004
    9. '#' → logprob: -8.966721534729004
    10. '```' → logprob: -9.341721534729004

Token 1898: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6663987040519714
    2. '1' → logprob: -0.7913987040519714
    3. '```' → logprob: -4.291398525238037
    4. '0' → logprob: -5.541398525238037
    5. '``' → logprob: -6.166398525238037
    6. '#' → logprob: -6.166398525238037
    7. 'i' → logprob: -6.416398525238037
    8. '(i' → logprob: -6.541398525238037
    9. 'indices' → logprob: -6.666398525238037
    10. 'range' → logprob: -6.916398525238037

Token 1899: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6172325015068054
    2. '       ' → logprob: -1.8672325611114502
    3. 'pos' → logprob: -2.61723256111145
    4. '   ' → logprob: -2.86723256111145
    5. '           ' → logprob: -3.74223256111145
    6. '```' → logprob: -3.74223256111145
    7. '_pos' → logprob: -4.117232322692871
    8. 'i' → logprob: -4.367232322692871
    9. ' ,' → logprob: -4.492232322692871
    10. 'based' → logprob: -4.492232322692871

Token 1900: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.06808383017778397
    2. ',' → logprob: -3.1930837631225586
    3. ',H' → logprob: -5.443083763122559
    4. '```' → logprob: -5.443083763122559
    5. '       ' → logprob: -5.568083763122559
    6. '1' → logprob: -6.068083763122559
    7. 'for' → logprob: -6.568083763122559
    8. '   ' → logprob: -6.693083763122559
    9. ')' → logprob: -6.818083763122559
    10. '
' → logprob: -6.943083763122559

Token 1901: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49139419198036194
    2. 'print' → logprob: -1.4913941621780396
    3. ',' → logprob: -2.116394281387329
    4. '   ' → logprob: -3.366394281387329
    5. 'i' → logprob: -5.99139404296875
    6. ' =' → logprob: -6.61639404296875
    7. '           ' → logprob: -6.99139404296875
    8. '#' → logprob: -7.61639404296875
    9. '
' → logprob: -7.86639404296875
    10. ' i' → logprob: -8.49139404296875

Token 1902: ' ligne' (ID: 19583)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.019246358424425125
    2. 'l' → logprob: -4.144246578216553
    3. 'rows' → logprob: -6.644246578216553
    4. 'les' → logprob: -7.269246578216553
    5. 'la' → logprob: -8.019246101379395
    6. ' i' → logprob: -8.144246101379395
    7. 'le' → logprob: -8.894246101379395
    8. 'lines' → logprob: -9.019246101379395
    9. 'ligne' → logprob: -9.519246101379395
    10. 'row' → logprob: -10.019246101379395

Token 1903: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30972763895988464
    2. '       ' → logprob: -1.434727668762207
    3. 'print' → logprob: -3.934727668762207
    4. ',
' → logprob: -6.184727668762207
    5. '   ' → logprob: -6.434727668762207
    6. ',j' → logprob: -6.434727668762207
    7. '#' → logprob: -6.684727668762207
    8. ' ,' → logprob: -7.309727668762207
    9. '           ' → logprob: -8.309727668762207
    10. '```' → logprob: -8.434727668762207

Token 1904: ' ' (ID: 220)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -1.3853594064712524
    2. ' j' → logprob: -1.7603594064712524
    3. ' W' → logprob: -1.8853594064712524
    4. 'j' → logprob: -2.385359287261963
    5. ''' → logprob: -2.635359287261963
    6. '       ' → logprob: -3.135359287261963
    7. '   ' → logprob: -3.385359287261963
    8. '           ' → logprob: -3.885359287261963
    9. '',' → logprob: -4.010359287261963
    10. ' '' → logprob: -4.135359287261963

Token 1905: '1' (ID: 16)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.13164497911930084
    2. 'j' → logprob: -2.3816449642181396
    3. ' W' → logprob: -4.756645202636719
    4. '   ' → logprob: -5.006645202636719
    5. '1' → logprob: -5.881645202636719
    6. '       ' → logprob: -5.881645202636719
    7. ' j' → logprob: -6.506645202636719
    8. 'col' → logprob: -7.006645202636719
    9. '    ' → logprob: -7.131645202636719
    10. 'range' → logprob: -7.256645202636719

Token 1906: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03902633115649223
    2. 'for' → logprob: -4.039026260375977
    3. '       ' → logprob: -5.289026260375977
    4. ' jusqu' → logprob: -5.664026260375977
    5. 'to' → logprob: -6.164026260375977
    6. '           ' → logprob: -6.289026260375977
    7. ',W' → logprob: -6.914026260375977
    8. ' for' → logprob: -7.039026260375977
    9. '...' → logprob: -7.164026260375977
    10. ' ,' → logprob: -7.164026260375977

Token 1907: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.016368059441447258
    2. '(W' → logprob: -4.1413679122924805
    3. ' W' → logprob: -8.89136791229248
    4. '   ' → logprob: -9.14136791229248
    5. ' (' → logprob: -10.51636791229248
    6. '(' → logprob: -11.01636791229248
    7. '`' → logprob: -11.26636791229248
    8. '
' → logprob: -11.39136791229248
    9. '```' → logprob: -12.89136791229248
    10. ' ' → logprob: -13.01636791229248

Token 1908: ' pour' (ID: 1930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02129499800503254
    2. '       ' → logprob: -5.271295070648193
    3. '```' → logprob: -5.771295070648193
    4. 'i' → logprob: -5.896295070648193
    5. ' print' → logprob: -6.021295070648193
    6. ',' → logprob: -6.021295070648193
    7. 'if' → logprob: -6.271295070648193
    8. '   ' → logprob: -6.896295070648193
    9. '``' → logprob: -7.396295070648193
    10. '#' → logprob: -7.396295070648193

Token 1909: ' colonne' (ID: 148275)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.0245971716940403
    2. 'colon' → logprob: -3.77459716796875
    3. 'column' → logprob: -7.52459716796875
    4. 'cro' → logprob: -8.52459716796875
    5. ' colonne' → logprob: -8.89959716796875
    6. 'j' → logprob: -9.14959716796875
    7. 'cols' → logprob: -9.39959716796875
    8. 'ligne' → logprob: -9.52459716796875
    9. '   ' → logprob: -9.64959716796875
    10. '```' → logprob: -9.64959716796875

Token 1910: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.049126725643873215
    2. '   ' → logprob: -3.174126625061035
    3. '       ' → logprob: -5.674126625061035
    4. '
' → logprob: -6.424126625061035
    5. '```' → logprob: -7.799126625061035
    6. ' print' → logprob: -7.924126625061035
    7. 'i' → logprob: -8.799126625061035
    8. '``' → logprob: -10.424126625061035
    9. 'if' → logprob: -10.549126625061035
    10. '    
' → logprob: -11.049126625061035

Token 1911: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004413978196680546
    2. 'i' → logprob: -6.254414081573486
    3. '       ' → logprob: -6.254414081573486
    4. '```' → logprob: -8.254413604736328
    5. '   ' → logprob: -9.004413604736328
    6. ' print' → logprob: -10.504413604736328
    7. 'final' → logprob: -10.504413604736328
    8. '
' → logprob: -10.754413604736328
    9. '``' → logprob: -10.879413604736328
    10. 'return' → logprob: -11.129413604736328

Token 1912: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004385371692478657
    2. '       ' → logprob: -5.754385471343994
    3. '   ' → logprob: -7.504385471343994
    4. 'i' → logprob: -7.879385471343994
    5. '```' → logprob: -8.504384994506836
    6. ' print' → logprob: -10.254384994506836
    7. '``' → logprob: -11.254384994506836
    8. 'if' → logprob: -11.379384994506836
    9. '
' → logprob: -12.129384994506836
    10. 'row' → logprob: -12.379384994506836

Token 1913: ' La' (ID: 3038)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.625866030342877e-05
    2. '       ' → logprob: -10.750085830688477
    3. 'i' → logprob: -11.000085830688477
    4. '```' → logprob: -11.000085830688477
    5. '   ' → logprob: -11.250085830688477
    6. ' print' → logprob: -11.375085830688477
    7. '``' → logprob: -12.875085830688477
    8. '
' → logprob: -13.750085830688477
    9. 'if' → logprob: -13.875085830688477
    10. 'return' → logprob: -14.875085830688477

Token 1914: ' position' (ID: 4010)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03900260478258133
    2. 'i' → logprob: -3.7890026569366455
    3. '```' → logprob: -5.289002418518066
    4. ' print' → logprob: -5.539002418518066
    5. '
' → logprob: -5.664002418518066
    6. '#' → logprob: -6.664002418518066
    7. '``' → logprob: -7.789002418518066
    8. ' i' → logprob: -8.164002418518066
    9. 'final' → logprob: -8.539002418518066
    10. 'if' → logprob: -8.539002418518066

Token 1915: ' finale' (ID: 37759)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.2264215648174286
    2. 'print' → logprob: -2.101421594619751
    3. '=' → logprob: -3.601421594619751
    4. ' =' → logprob: -3.601421594619751
    5. 'i' → logprob: -4.476421356201172
    6. '_final' → logprob: -5.476421356201172
    7. '_i' → logprob: -6.101421356201172
    8. '1' → logprob: -6.476421356201172
    9. ' finale' → logprob: -7.351421356201172
    10. '   ' → logprob: -7.476421356201172

Token 1916: ' pos' (ID: 1253)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.7533931732177734
    2. 'print' → logprob: -1.0033931732177734
    3. ' =' → logprob: -2.6283931732177734
    4. '=' → logprob: -3.2533931732177734
    5. 'i' → logprob: -3.6283931732177734
    6. '_i' → logprob: -4.878393173217773
    7. '```' → logprob: -5.378393173217773
    8. '_final' → logprob: -5.503393173217773
    9. '
' → logprob: -7.003393173217773
    10. '#' → logprob: -7.128393173217773

Token 1917: ' =' (ID: 314)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -1.3260266780853271
    2. '=' → logprob: -1.7010266780853271
    3. ' =' → logprob: -1.7010266780853271
    4. '_i' → logprob: -1.9510266780853271
    5. 'i' → logprob: -2.076026678085327
    6. 'print' → logprob: -3.201026678085327
    7. '_final' → logprob: -3.951026678085327
    8. '[' → logprob: -4.326026916503906
    9. '```' → logprob: -4.701026916503906
    10. '_row' → logprob: -6.201026916503906

Token 1918: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.1083645224571228
    2. '(pos' → logprob: -2.3583645820617676
    3. 'pos' → logprob: -4.858364582061768
    4. ' (' → logprob: -8.35836410522461
    5. '(
' → logprob: -9.73336410522461
    6. 'i' → logprob: -10.60836410522461
    7. '   ' → logprob: -11.35836410522461
    8. '(' → logprob: -11.35836410522461
    9. '((' → logprob: -12.48336410522461
    10. ' pos' → logprob: -12.60836410522461

Token 1919: 'i' (ID: 72)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -4.453737710718997e-05
    2. '(pos' → logprob: -10.375044822692871
    3. ' pos' → logprob: -11.375044822692871
    4. '   ' → logprob: -13.875044822692871
    5. 'i' → logprob: -15.000044822692871
    6. '
' → logprob: -15.250044822692871
    7. '0' → logprob: -16.125043869018555
    8. '	pos' → logprob: -16.500043869018555
    9. '(i' → logprob: -17.250043869018555
    10. ' (' → logprob: -17.500043869018555

Token 1920: ',j' (ID: 22712)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.26602640748023987
    2. ',' → logprob: -1.5160263776779175
    3. '+' → logprob: -4.766026496887207
    4. ')' → logprob: -6.016026496887207
    5. '```' → logprob: -6.891026496887207
    6. '
' → logprob: -7.641026496887207
    7. 'pos' → logprob: -8.141026496887207
    8. ')+' → logprob: -8.516026496887207
    9. ',j' → logprob: -8.641026496887207
    10. ' +' → logprob: -9.016026496887207

Token 1921: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49685049057006836
    2. ')
' → logprob: -0.9968504905700684
    3. '[' → logprob: -4.496850490570068
    4. '       ' → logprob: -5.621850490570068
    5. '   ' → logprob: -6.621850490570068
    6. '+' → logprob: -6.621850490570068
    7. ']' → logprob: -6.746850490570068
    8. '```' → logprob: -7.246850490570068
    9. ')[' → logprob: -7.371850490570068
    10. '           ' → logprob: -7.746850490570068

Token 1922: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1191733255982399
    2. '
' → logprob: -2.244173288345337
    3. '       ' → logprob: -5.869173526763916
    4. 'i' → logprob: -7.494173526763916
    5. '#' → logprob: -7.619173526763916
    6. '   ' → logprob: -7.744173526763916
    7. '```' → logprob: -7.744173526763916
    8. ',' → logprob: -7.869173526763916
    9. 'if' → logprob: -8.369173049926758
    10. ')
' → logprob: -8.619173049926758

Token 1923: '0' (ID: 15)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5369049906730652
    2. 'print' → logprob: -0.9119049906730652
    3. 'i' → logprob: -6.036904811859131
    4. '[' → logprob: -6.036904811859131
    5. '       ' → logprob: -6.411904811859131
    6. 'if' → logprob: -6.536904811859131
    7. '#' → logprob: -6.786904811859131
    8. '```' → logprob: -7.161904811859131
    9. ')
' → logprob: -7.286904811859131
    10. '[i' → logprob: -7.786904811859131

Token 1924: '-based' (ID: 8235)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0084339380264282
    2. '+' → logprob: -1.5084339380264282
    3. 'based' → logprob: -1.5084339380264282
    4. '-based' → logprob: -1.7584339380264282
    5. '_based' → logprob: -4.758433818817139
    6. ')' → logprob: -5.508433818817139
    7. ',
' → logprob: -6.508433818817139
    8. ']' → logprob: -6.633433818817139
    9. 'Based' → logprob: -6.883433818817139
    10. '   ' → logprob: -7.008433818817139

Token 1925: ' correspond' (ID: 11095)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3267214298248291
    2. '
' → logprob: -1.326721429824829
    3. ')
' → logprob: -5.20172119140625
    4. '```' → logprob: -6.07672119140625
    5. '       ' → logprob: -6.20172119140625
    6. ')' → logprob: -7.57672119140625
    7. 'i' → logprob: -7.57672119140625
    8. '#' → logprob: -7.70172119140625
    9. '#print' → logprob: -8.07672119140625
    10. '``' → logprob: -8.20172119140625

Token 1926: ' à' (ID: 1221)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0167652368545532
    2. '       ' → logprob: -1.6417652368545532
    3. '           ' → logprob: -2.2667651176452637
    4. 'à' → logprob: -2.7667651176452637
    5. ' à' → logprob: -3.0167651176452637
    6. 'to' → logprob: -3.1417651176452637
    7. '=' → logprob: -3.2667651176452637
    8. '   ' → logprob: -3.7667651176452637
    9. '               ' → logprob: -3.8917651176452637
    10. ' to' → logprob: -4.016765117645264

Token 1927: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0017195657128468156
    2. ' (' → logprob: -7.1267194747924805
    3. '(f' → logprob: -7.1267194747924805
    4. 'f' → logprob: -9.87671947479248
    5. '(pos' → logprob: -10.50171947479248
    6. '(str' → logprob: -11.12671947479248
    7. 'i' → logprob: -12.37671947479248
    8. '`' → logprob: -12.75171947479248
    9. '(' → logprob: -12.87671947479248
    10. 'pos' → logprob: -13.00171947479248

Token 1928: 'i' (ID: 72)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.018449582159519196
    2. 'i' → logprob: -4.018449783325195
    3. ' pos' → logprob: -8.393449783325195
    4. '(pos' → logprob: -10.518449783325195
    5. '(i' → logprob: -10.518449783325195
    6. ' i' → logprob: -11.518449783325195
    7. '   ' → logprob: -11.768449783325195
    8. '
' → logprob: -14.893449783325195
    9. '```' → logprob: -15.018449783325195
    10. ' (' → logprob: -15.143449783325195

Token 1929: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03822658583521843
    2. ' +' → logprob: -3.28822660446167
    3. '```' → logprob: -9.413226127624512
    4. ')+' → logprob: -10.538226127624512
    5. '   ' → logprob: -10.663226127624512
    6. ')' → logprob: -10.788226127624512
    7. '[' → logprob: -11.413226127624512
    8. '
' → logprob: -12.038226127624512
    9. '+j' → logprob: -12.788226127624512
    10. ']+' → logprob: -12.913226127624512

Token 1930: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.215330409351736e-05
    2. ' ' → logprob: -10.125041961669922
    3. '   ' → logprob: -13.500041961669922
    4. '+' → logprob: -15.000041961669922
    5. '
' → logprob: -15.375041961669922
    6. '```' → logprob: -15.375041961669922
    7. ' +' → logprob: -17.000041961669922
    8. ' ' → logprob: -17.500041961669922
    9. '``' → logprob: -18.500041961669922
    10. '`' → logprob: -18.625041961669922

Token 1931: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021028775721788406
    2. ',j' → logprob: -3.896028757095337
    3. ' ,' → logprob: -8.771028518676758
    4. ')' → logprob: -8.896028518676758
    5. '+' → logprob: -9.396028518676758
    6. '```' → logprob: -9.896028518676758
    7. ')+' → logprob: -11.146028518676758
    8. ',+' → logprob: -11.271028518676758
    9. ',
' → logprob: -11.896028518676758
    10. ',i' → logprob: -12.146028518676758

Token 1932: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.704065213445574e-05
    2. ')+' → logprob: -10.625046730041504
    3. ' +' → logprob: -10.750046730041504
    4. ']+' → logprob: -14.750046730041504
    5. ')' → logprob: -14.875046730041504
    6. '+j' → logprob: -15.750046730041504
    7. '+
' → logprob: -16.50004768371582
    8. '+)' → logprob: -16.50004768371582
    9. '()+' → logprob: -16.75004768371582
    10. '```' → logprob: -16.75004768371582

Token 1933: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.771655115589965e-05
    2. '+' → logprob: -11.000018119812012
    3. '```' → logprob: -14.250018119812012
    4. ' ' → logprob: -16.500017166137695
    5. '
' → logprob: -17.125017166137695
    6. ' +' → logprob: -17.250017166137695
    7. '`' → logprob: -18.000017166137695
    8. ')' → logprob: -18.250017166137695
    9. '   ' → logprob: -19.875017166137695
    10. '...' → logprob: -20.000017166137695

Token 1934: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001846889965236187
    2. ')
' → logprob: -6.376846790313721
    3. '+' → logprob: -9.626847267150879
    4. ')+' → logprob: -9.876847267150879
    5. ')`' → logprob: -12.001847267150879
    6. '```' → logprob: -12.251847267150879
    7. '))' → logprob: -12.501847267150879
    8. '   ' → logprob: -12.626847267150879
    9. '       ' → logprob: -12.751847267150879
    10. ')
' → logprob: -13.001847267150879

Token 1935: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005277038086205721
    2. '   ' → logprob: -5.755277156829834
    3. '       ' → logprob: -6.630277156829834
    4. '```' → logprob: -7.505277156829834
    5. '
' → logprob: -8.505276679992676
    6. '``' → logprob: -11.630276679992676
    7. ' print' → logprob: -11.755276679992676
    8. 'if' → logprob: -12.380276679992676
    9. 'return' → logprob: -13.380276679992676
    10. '    
' → logprob: -14.755276679992676

Token 1936: '1' (ID: 16)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0014964108122512698
    2. '
' → logprob: -7.501496315002441
    3. '   ' → logprob: -7.751496315002441
    4. '       ' → logprob: -8.126496315002441
    5. '```' → logprob: -8.751496315002441
    6. 'return' → logprob: -10.876496315002441
    7. 'if' → logprob: -10.876496315002441
    8. ' print' → logprob: -11.376496315002441
    9. '``' → logprob: -12.126496315002441
    10. ',' → logprob: -13.876496315002441

Token 1937: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.16151906549930573
    2. 'based' → logprob: -2.6615190505981445
    3. ')' → logprob: -2.9115190505981445
    4. '+' → logprob: -4.1615190505981445
    5. '_based' → logprob: -5.1615190505981445
    6. ')
' → logprob: -7.1615190505981445
    7. ']' → logprob: -7.2865190505981445
    8. '+
' → logprob: -7.9115190505981445
    9. ')-' → logprob: -8.036519050598145
    10. ',' → logprob: -8.161519050598145

Token 1938: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0019483910873532295
    2. '   ' → logprob: -6.876948356628418
    3. '```' → logprob: -8.001948356628418
    4. '       ' → logprob: -8.126948356628418
    5. '
' → logprob: -8.376948356628418
    6. ' print' → logprob: -10.751948356628418
    7. '``' → logprob: -11.001948356628418
    8. 'if' → logprob: -11.376948356628418
    9. ',' → logprob: -13.251948356628418
    10. '    
' → logprob: -14.251948356628418

Token 1939: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005869539920240641
    2. '   ' → logprob: -5.505869388580322
    3. '       ' → logprob: -6.880869388580322
    4. '```' → logprob: -7.255869388580322
    5. '
' → logprob: -10.38086986541748
    6. ' print' → logprob: -11.25586986541748
    7. '``' → logprob: -11.63086986541748
    8. 'return' → logprob: -14.38086986541748
    9. 'if' → logprob: -14.38086986541748
    10. '	print' → logprob: -14.75586986541748

Token 1940: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0014853432076051831
    2. '   ' → logprob: -7.251485347747803
    3. '       ' → logprob: -7.251485347747803
    4. '```' → logprob: -10.001484870910645
    5. '
' → logprob: -11.501484870910645
    6. ' print' → logprob: -12.001484870910645
    7. '``' → logprob: -13.126484870910645
    8. 'if' → logprob: -13.376484870910645
    9. 'sys' → logprob: -15.626484870910645
    10. 'i' → logprob: -15.751484870910645

Token 1941: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00017433916218578815
    2. '   ' → logprob: -9.250174522399902
    3. '       ' → logprob: -9.500174522399902
    4. 'if' → logprob: -13.250174522399902
    5. 'i' → logprob: -14.250174522399902
    6. ' print' → logprob: -14.750174522399902
    7. '```' → logprob: -14.875174522399902
    8. '
' → logprob: -16.250173568725586
    9. '    
' → logprob: -17.750173568725586
    10. '	print' → logprob: -18.500173568725586

Token 1942: ' i' (ID: 575)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.00246745184995234
    2. 'i' → logprob: -6.252467632293701
    3. ' pos' → logprob: -7.627467632293701
    4. '0' → logprob: -10.752467155456543
    5. '(pos' → logprob: -11.127467155456543
    6. ' i' → logprob: -12.252467155456543
    7. 'j' → logprob: -12.377467155456543
    8. '(' → logprob: -13.002467155456543
    9. '   ' → logprob: -13.252467155456543
    10. '(i' → logprob: -13.502467155456543

Token 1943: ' ==' (ID: 951)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.3311067223548889
    2. ' >=' → logprob: -1.5811066627502441
    3. '<' → logprob: -3.831106662750244
    4. '==' → logprob: -3.956106662750244
    5. '+' → logprob: -4.581106662750244
    6. ' <' → logprob: -4.706106662750244
    7. 'pos' → logprob: -4.956106662750244
    8. ' ==' → logprob: -5.206106662750244
    9. '   ' → logprob: -6.956106662750244
    10. '>' → logprob: -7.956106662750244

Token 1944: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -2.696889623621246e-06
    2. ' H' → logprob: -13.50000286102295
    3. '   ' → logprob: -13.62500286102295
    4. '
' → logprob: -17.000001907348633
    5. '       ' → logprob: -17.625001907348633
    6. '=' → logprob: -17.875001907348633
    7. '	H' → logprob: -18.125001907348633
    8. ' ' → logprob: -18.750001907348633
    9. ''H' → logprob: -18.875001907348633
    10. '  ' → logprob: -19.000001907348633

Token 1945: ' (' (ID: 350)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.766200840473175
    2. '==' → logprob: -1.1412007808685303
    3. ':' → logprob: -2.0162007808685303
    4. ' ==' → logprob: -3.5162007808685303
    5. ':
' → logprob: -4.266201019287109
    6. 'or' → logprob: -4.641201019287109
    7. '+' → logprob: -4.766201019287109
    8. '           ' → logprob: -5.141201019287109
    9. ',' → logprob: -5.141201019287109
    10. '       ' → logprob: -6.016201019287109

Token 1946: 'hors' (ID: 70144)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -1.306501865386963
    2. 'pos' → logprob: -2.056501865386963
    3. ' or' → logprob: -2.056501865386963
    4. ',' → logprob: -2.306501865386963
    5. ')' → logprob: -2.431501865386963
    6. 'W' → logprob: -2.806501865386963
    7. 'j' → logprob: -2.806501865386963
    8. '):
' → logprob: -2.806501865386963
    9. '),' → logprob: -3.431501865386963
    10. '0' → logprob: -4.056501865386963

Token 1947: ' indice' (ID: 90848)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -1.2428950071334839
    2. 'de' → logprob: -1.4928950071334839
    3. 'bounds' → logprob: -1.9928950071334839
    4. 'grid' → logprob: -2.6178951263427734
    5. 'lim' → logprob: -2.8678951263427734
    6. 'bord' → logprob: -2.9928951263427734
    7. '```' → logprob: -3.4928951263427734
    8. 'du' → logprob: -3.4928951263427734
    9. 'des' → logprob: -3.7428951263427734
    10. 'limits' → logprob: -3.8678951263427734

Token 1948: '),' (ID: 936)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.09423885494470596
    2. ')' → logprob: -3.469238758087158
    3. 'or' → logprob: -3.719238758087158
    4. '           ' → logprob: -3.844238758087158
    5. ':' → logprob: -5.844238758087158
    6. ':
' → logprob: -5.969238758087158
    7. '               ' → logprob: -6.094238758087158
    8. '):
' → logprob: -6.469238758087158
    9. '       ' → logprob: -6.844238758087158
    10. ',' → logprob: -7.469238758087158

Token 1949: ' cela' (ID: 17542)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.330724835395813
    2. '           ' → logprob: -2.2057247161865234
    3. '       ' → logprob: -2.4557247161865234
    4. 'j' → logprob: -3.0807247161865234
    5. '   ' → logprob: -4.830724716186523
    6. ' print' → logprob: -5.080724716186523
    7. 'col' → logprob: -5.205724716186523
    8. '```' → logprob: -5.330724716186523
    9. ' or' → logprob: -6.080724716186523
    10. 'if' → logprob: -6.205724716186523

Token 1950: ' correspond' (ID: 11095)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5362221002578735
    2. ' ==' → logprob: -1.6612221002578735
    3. '>=' → logprob: -2.286221981048584
    4. '+' → logprob: -3.161221981048584
    5. '+=' → logprob: -3.661221981048584
    6. ' >=' → logprob: -4.036221981048584
    7. ' +=' → logprob: -4.411221981048584
    8. 'print' → logprob: -4.911221981048584
    9. '       ' → logprob: -5.536221981048584
    10. '>' → logprob: -5.661221981048584

Token 1951: ' à' (ID: 1221)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0552382469177246
    2. 'to' → logprob: -1.1802382469177246
    3. ' à' → logprob: -2.1802382469177246
    4. ' to' → logprob: -2.4302382469177246
    5. 'à' → logprob: -2.5552382469177246
    6. '       ' → logprob: -4.305238246917725
    7. '=' → logprob: -4.555238246917725
    8. ',' → logprob: -4.680238246917725
    9. '_to' → logprob: -4.680238246917725
    10. '               ' → logprob: -4.930238246917725

Token 1952: ' la' (ID: 557)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.019234782084822655
    2. 'i' → logprob: -4.019234657287598
    3. ' H' → logprob: -7.644234657287598
    4. 'str' → logprob: -8.894234657287598
    5. ' i' → logprob: -9.144234657287598
    6. '(H' → logprob: -9.144234657287598
    7. '`' → logprob: -9.269234657287598
    8. '(i' → logprob: -10.894234657287598
    9. '"H' → logprob: -10.894234657287598
    10. ''H' → logprob: -11.019234657287598

Token 1953: ' route' (ID: 9656)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.24895691871643066
    2. 'sort' → logprob: -2.9989569187164307
    3. 'dern' → logprob: -3.1239569187164307
    4. 'position' → logprob: -3.1239569187164307
    5. 'cro' → logprob: -3.7489569187164307
    6. 'H' → logprob: -3.9989569187164307
    7. 'fin' → logprob: -4.123956680297852
    8. 'der' → logprob: -4.998956680297852
    9. ' sortie' → logprob: -5.623956680297852
    10. 'intersection' → logprob: -6.123956680297852

Token 1954: ' la' (ID: 557)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9318506717681885
    2. '       ' → logprob: -1.1818506717681885
    3. ',' → logprob: -2.4318506717681885
    4. '           ' → logprob: -2.8068506717681885
    5. ' if' → logprob: -3.4318506717681885
    6. '   ' → logprob: -3.8068506717681885
    7. '=' → logprob: -3.9318506717681885
    8. ' =' → logprob: -4.431850433349609
    9. '```' → logprob: -4.556850433349609
    10. '==' → logprob: -4.681850433349609

Token 1955: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.36772891879081726
    2. ' plus' → logprob: -1.8677289485931396
    3. '```' → logprob: -3.1177289485931396
    4. 'fin' → logprob: -3.2427289485931396
    5. ' fin' → logprob: -5.2427287101745605
    6. ' ' → logprob: -5.2427287101745605
    7. 'more' → logprob: -5.3677287101745605
    8. ' sortie' → logprob: -5.6177287101745605
    9. 'stop' → logprob: -5.6177287101745605
    10. ' ' → logprob: -5.7427287101745605

Token 1956: ' au' (ID: 2791)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.0156855471432209
    2. 'b' → logprob: -4.640685558319092
    3. 's' → logprob: -5.640685558319092
    4. '```' → logprob: -6.390685558319092
    5. 'base' → logprob: -8.265685081481934
    6. ' ' → logprob: -9.390685081481934
    7. ' ' → logprob: -10.140685081481934
    8. 'south' → logprob: -10.390685081481934
    9. 'bottom' → logprob: -10.640685081481934
    10. 'au' → logprob: -10.765685081481934

Token 1957: ' sud' (ID: 10332)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.6561158895492554
    2. 's' → logprob: -0.7811158895492554
    3. '```' → logprob: -4.656116008758545
    4. 'est' → logprob: -5.656116008758545
    5. 'south' → logprob: -5.656116008758545
    6. 'd' → logprob: -6.031116008758545
    7. 'Sud' → logprob: -6.156116008758545
    8. 'bottom' → logprob: -7.156116008758545
    9. 'dro' → logprob: -7.906116008758545
    10. 'dess' → logprob: -8.406115531921387

Token 1958: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3587639629840851
    2. '       ' → logprob: -1.2337639331817627
    3. 'if' → logprob: -4.983764171600342
    4. '
' → logprob: -5.983764171600342
    5. '```' → logprob: -8.483763694763184
    6. ')
' → logprob: -8.733763694763184
    7. '   ' → logprob: -8.983763694763184
    8. ' print' → logprob: -8.983763694763184
    9. ' if' → logprob: -9.233763694763184
    10. '           ' → logprob: -9.983763694763184

Token 1959: ' donc' (ID: 14206)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3160969913005829
    2. '       ' → logprob: -1.5660970211029053
    3. 'if' → logprob: -3.0660970211029053
    4. ' print' → logprob: -5.066096782684326
    5. '           ' → logprob: -5.316096782684326
    6. '   ' → logprob: -6.316096782684326
    7. ' if' → logprob: -6.816096782684326
    8. 'j' → logprob: -8.191097259521484
    9. 'elif' → logprob: -8.191097259521484
    10. '```' → logprob: -8.316097259521484

Token 1960: ' i' (ID: 575)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0031346979085355997
    2. 'j' → logprob: -6.503134727478027
    3. 'final' → logprob: -8.003134727478027
    4. '```' → logprob: -8.003134727478027
    5. ' print' → logprob: -8.128134727478027
    6. 'i' → logprob: -8.253134727478027
    7. '   ' → logprob: -9.128134727478027
    8. 'col' → logprob: -9.128134727478027
    9. 'W' → logprob: -9.503134727478027
    10. 'ligne' → logprob: -10.878134727478027

Token 1961: '+' (ID: 10)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3118748962879181
    2. '+=' → logprob: -2.0618748664855957
    3. '==' → logprob: -2.6868748664855957
    4. '+' → logprob: -2.8118748664855957
    5. ' =' → logprob: -5.061874866485596
    6. '```' → logprob: -5.936874866485596
    7. ' +=' → logprob: -6.811874866485596
    8. ' ==' → logprob: -7.061874866485596
    9. '=
' → logprob: -7.561874866485596
    10. '_output' → logprob: -8.561875343322754

Token 1962: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000639169302303344
    2. '2' → logprob: -7.375638961791992
    3. '```' → logprob: -11.625638961791992
    4. ' ' → logprob: -13.625638961791992
    5. '0' → logprob: -13.875638961791992
    6. '``' → logprob: -14.250638961791992
    7. '
' → logprob: -14.375638961791992
    8. '`' → logprob: -15.875638961791992
    9. '   ' → logprob: -16.375638961791992
    10. '=' → logprob: -17.250638961791992

Token 1963: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08653656393289566
    2. 'print' → logprob: -2.5865366458892822
    3. '   ' → logprob: -4.961536407470703
    4. '
' → logprob: -7.836536407470703
    5. '```' → logprob: -8.711536407470703
    6. 'if' → logprob: -10.836536407470703
    7. '           ' → logprob: -11.336536407470703
    8. ' print' → logprob: -11.461536407470703
    9. '        
' → logprob: -12.211536407470703
    10. '``' → logprob: -12.586536407470703

Token 1964: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0001302374730585143
    2. 'i' → logprob: -9.625130653381348
    3. ' H' → logprob: -9.750130653381348
    4. '   ' → logprob: -12.250130653381348
    5. '`' → logprob: -14.500130653381348
    6. '```' → logprob: -15.125130653381348
    7. '(H' → logprob: -16.12512969970703
    8. ' i' → logprob: -16.37512969970703
    9. '	H' → logprob: -17.37512969970703
    10. ' ' → logprob: -17.75012969970703

Token 1965: '+' (ID: 10)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5273798704147339
    2. '       ' → logprob: -1.1523798704147339
    3. 'if' → logprob: -3.2773799896240234
    4. '+' → logprob: -3.6523799896240234
    5. '   ' → logprob: -4.527379989624023
    6. '
' → logprob: -5.152379989624023
    7. ' +' → logprob: -5.402379989624023
    8. '```' → logprob: -5.652379989624023
    9. ' if' → logprob: -6.152379989624023
    10. '           ' → logprob: -6.777379989624023

Token 1966: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. '```' → logprob: -13.000004768371582
    3. '
' → logprob: -13.625004768371582
    4. '2' → logprob: -14.000004768371582
    5. '   ' → logprob: -14.500004768371582
    6. '``' → logprob: -15.625004768371582
    7. ' ' → logprob: -15.875004768371582
    8. '`' → logprob: -17.0000057220459
    9. '+' → logprob: -17.2500057220459
    10. '       ' → logprob: -18.2500057220459

Token 1967: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4836273491382599
    2. '       ' → logprob: -0.9836273193359375
    3. '   ' → logprob: -4.7336273193359375
    4. '```' → logprob: -7.3586273193359375
    5. ' print' → logprob: -10.733627319335938
    6. 'if' → logprob: -10.733627319335938
    7. '
' → logprob: -11.483627319335938
    8. '``' → logprob: -12.358627319335938
    9. '           ' → logprob: -12.733627319335938
    10. '        
' → logprob: -12.983627319335938

Token 1968: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012046047486364841
    2. '```' → logprob: -5.262045860290527
    3. 'if' → logprob: -5.887045860290527
    4. 'print' → logprob: -5.887045860290527
    5. ' if' → logprob: -7.387045860290527
    6. '``' → logprob: -8.387045860290527
    7. '           ' → logprob: -8.512045860290527
    8. 'j' → logprob: -9.762045860290527
    9. '   ' → logprob: -9.762045860290527
    10. '`' → logprob: -10.637045860290527

Token 1969: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9420354962348938
    2. 'if' → logprob: -1.067035436630249
    3. 'print' → logprob: -1.817035436630249
    4. 'j' → logprob: -2.692035436630249
    5. '```' → logprob: -3.442035436630249
    6. '``' → logprob: -6.692035675048828
    7. ' if' → logprob: -7.567035675048828
    8. '   ' → logprob: -7.567035675048828
    9. 'col' → logprob: -7.942035675048828
    10. 'final' → logprob: -8.192035675048828

Token 1970: ' Id' (ID: 8210)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18977288901805878
    2. '       ' → logprob: -1.8147728443145752
    3. 'if' → logprob: -4.939773082733154
    4. '```' → logprob: -6.689773082733154
    5. 'j' → logprob: -6.939773082733154
    6. '   ' → logprob: -7.814773082733154
    7. '           ' → logprob: -9.939772605895996
    8. ' print' → logprob: -10.064772605895996
    9. '``' → logprob: -10.314772605895996
    10. ' if' → logprob: -11.064772605895996

Token 1971: 'em' (ID: 347)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.010832984931766987
    2. '=' → logprob: -5.260832786560059
    3. 'éal' → logprob: -6.885832786560059
    4. 'éf' → logprob: -7.260832786560059
    5. '           ' → logprob: -7.385832786560059
    6. 'ée' → logprob: -7.510832786560059
    7. '       ' → logprob: -7.635832786560059
    8. 'if' → logprob: -7.760832786560059
    9. 'é' → logprob: -8.260832786560059
    10. '#' → logprob: -8.260832786560059

Token 1972: ' pour' (ID: 1930)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21421828866004944
    2. '       ' → logprob: -2.4642183780670166
    3. 'for' → logprob: -3.2142183780670166
    4. ' if' → logprob: -3.3392183780670166
    5. '           ' → logprob: -3.8392183780670166
    6. ',' → logprob: -5.4642181396484375
    7. '```' → logprob: -6.0892181396484375
    8. ' for' → logprob: -6.9642181396484375
    9. ',j' → logprob: -7.3392181396484375
    10. '               ' → logprob: -7.4642181396484375

Token 1973: ' colonne' (ID: 148275)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.110668618930504e-05
    2. ' j' → logprob: -9.87506103515625
    3. '   ' → logprob: -12.12506103515625
    4. '```' → logprob: -13.12506103515625
    5. 'pos' → logprob: -14.00006103515625
    6. '
' → logprob: -14.00006103515625
    7. '       ' → logprob: -15.50006103515625
    8. '	j' → logprob: -16.25006103515625
    9. '    ' → logprob: -16.37506103515625
    10. '  ' → logprob: -17.12506103515625

Token 1974: ' j' (ID: 441)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1167026236653328
    2. '   ' → logprob: -2.8667025566101074
    3. '       ' → logprob: -3.4917025566101074
    4. '
' → logprob: -4.741702556610107
    5. 'if' → logprob: -4.991702556610107
    6. 'i' → logprob: -5.741702556610107
    7. '```' → logprob: -5.741702556610107
    8. ' print' → logprob: -8.366703033447266
    9. '``' → logprob: -8.366703033447266
    10. ' if' → logprob: -8.866703033447266

Token 1975: ' ==' (ID: 951)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5110924243927002
    2. '+' → logprob: -1.7610924243927002
    3. '```' → logprob: -2.6360924243927
    4. '       ' → logprob: -3.1360924243927
    5. 'if' → logprob: -3.2610924243927
    6. '   ' → logprob: -3.7610924243927
    7. '
' → logprob: -4.011092185974121
    8. ' =' → logprob: -5.011092185974121
    9. '=' → logprob: -5.011092185974121
    10. ',' → logprob: -5.386092185974121

Token 1976: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -2.165027217415627e-05
    2. ' W' → logprob: -11.000021934509277
    3. '   ' → logprob: -12.375021934509277
    4. ' ' → logprob: -16.37502098083496
    5. '	W' → logprob: -16.50002098083496
    6. '=W' → logprob: -16.50002098083496
    7. '```' → logprob: -16.75002098083496
    8. '
' → logprob: -16.75002098083496
    9. '  ' → logprob: -16.87502098083496
    10. '       ' → logprob: -17.37502098083496

Token 1977: ' =>' (ID: 871)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.017518535256385803
    2. '       ' → logprob: -4.517518520355225
    3. '   ' → logprob: -5.267518520355225
    4. '```' → logprob: -6.892518520355225
    5. '
' → logprob: -8.767518997192383
    6. ' print' → logprob: -9.267518997192383
    7. '``' → logprob: -11.267518997192383
    8. '        
' → logprob: -12.517518997192383
    9. ',' → logprob: -12.892518997192383
    10. '#' → logprob: -13.142518997192383

Token 1978: ' j' (ID: 441)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.011300092563033104
    2. 'j' → logprob: -4.511300086975098
    3. 'print' → logprob: -9.136300086975098
    4. ' W' → logprob: -9.636300086975098
    5. '   ' → logprob: -9.886300086975098
    6. '```' → logprob: -11.636300086975098
    7. 'return' → logprob: -12.011300086975098
    8. '`' → logprob: -12.136300086975098
    9. 'w' → logprob: -13.386300086975098
    10. '(W' → logprob: -13.511300086975098

Token 1979: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006738319061696529
    2. '==' → logprob: -7.875673770904541
    3. ' +' → logprob: -8.8756742477417
    4. '+=' → logprob: -9.1256742477417
    5. '=' → logprob: -11.1256742477417
    6. ' ==' → logprob: -11.2506742477417
    7. '```' → logprob: -12.1256742477417
    8. '+j' → logprob: -12.5006742477417
    9. '++' → logprob: -12.6256742477417
    10. '+
' → logprob: -13.3756742477417

Token 1980: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.822646693966817e-06
    2. '2' → logprob: -12.125007629394531
    3. '+' → logprob: -13.125007629394531
    4. '```' → logprob: -15.250007629394531
    5. ' ' → logprob: -16.25000762939453
    6. '
' → logprob: -17.00000762939453
    7. '=' → logprob: -18.75000762939453
    8. '   ' → logprob: -18.75000762939453
    9. '+
' → logprob: -18.75000762939453
    10. '``' → logprob: -19.25000762939453

Token 1981: ' =' (ID: 314)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05831436067819595
    2. '       ' → logprob: -3.058314323425293
    3. '   ' → logprob: -4.808314323425293
    4. '```' → logprob: -7.183314323425293
    5. '
' → logprob: -7.308314323425293
    6. ' print' → logprob: -10.058314323425293
    7. '``' → logprob: -11.058314323425293
    8. 'if' → logprob: -11.433314323425293
    9. '#' → logprob: -12.433314323425293
    10. 'i' → logprob: -13.058314323425293

Token 1982: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -9.686778503237292e-05
    2. ' W' → logprob: -9.250097274780273
    3. '   ' → logprob: -14.375097274780273
    4. '=W' → logprob: -16.500097274780273
    5. '`' → logprob: -17.750097274780273
    6. '```' → logprob: -18.250097274780273
    7. '	W' → logprob: -18.750097274780273
    8. '(W' → logprob: -19.000097274780273
    9. ' ' → logprob: -19.500097274780273
    10. ' ' → logprob: -19.625097274780273

Token 1983: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03316435590386391
    2. '       ' → logprob: -4.2831645011901855
    3. ' +' → logprob: -5.1581645011901855
    4. '+
' → logprob: -5.1581645011901855
    5. 'print' → logprob: -5.5331645011901855
    6. '```' → logprob: -6.9081645011901855
    7. '
' → logprob: -7.2831645011901855
    8. '   ' → logprob: -7.4081645011901855
    9. ')
' → logprob: -8.283164024353027
    10. ',' → logprob: -8.533164024353027

Token 1984: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. '+' → logprob: -11.875007629394531
    3. '```' → logprob: -16.37500762939453
    4. '
' → logprob: -16.87500762939453
    5. ' +' → logprob: -17.75000762939453
    6. ' ' → logprob: -18.25000762939453
    7. '2' → logprob: -18.37500762939453
    8. '`' → logprob: -18.50000762939453
    9. '   ' → logprob: -18.75000762939453
    10. '``' → logprob: -20.00000762939453

Token 1985: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003621808486059308
    2. '   ' → logprob: -5.753621578216553
    3. '       ' → logprob: -7.753621578216553
    4. '
' → logprob: -12.003622055053711
    5. ' print' → logprob: -12.253622055053711
    6. '```' → logprob: -12.878622055053711
    7. 'if' → logprob: -14.503622055053711
    8. '	print' → logprob: -14.753622055053711
    9. 'sys' → logprob: -15.378622055053711
    10. '    
' → logprob: -17.00362205505371

Token 1986: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4798876941204071
    2. 'print' → logprob: -0.9798877239227295
    3. '   ' → logprob: -5.22988748550415
    4. '```' → logprob: -8.104887962341309
    5. '
' → logprob: -9.229887962341309
    6. '        
' → logprob: -11.104887962341309
    7. ' print' → logprob: -11.104887962341309
    8. '    
' → logprob: -12.354887962341309
    9. '``' → logprob: -12.979887962341309
    10. '           ' → logprob: -13.854887962341309

Token 1987: ' i' (ID: 575)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009893421083688736
    2. '   ' → logprob: -7.5009894371032715
    3. '       ' → logprob: -8.000988960266113
    4. '```' → logprob: -9.250988960266113
    5. '
' → logprob: -12.875988960266113
    6. ' print' → logprob: -13.500988960266113
    7. 'sys' → logprob: -14.375988960266113
    8. '``' → logprob: -14.500988960266113
    9. '    
' → logprob: -16.87598991394043
    10. '        
' → logprob: -16.87598991394043

Token 1988: '_final' (ID: 46468)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029516490176320076
    2. '=' → logprob: -4.029516696929932
    3. '+' → logprob: -4.904516696929932
    4. ' =' → logprob: -6.404516696929932
    5. '+=' → logprob: -7.779516696929932
    6. ',j' → logprob: -7.904516696929932
    7. ',i' → logprob: -8.154516220092773
    8. ' +' → logprob: -8.404516220092773
    9. ',pos' → logprob: -8.404516220092773
    10. ' +=' → logprob: -8.779516220092773

Token 1989: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16087216138839722
    2. '=' → logprob: -2.160872220993042
    3. ' =' → logprob: -3.785872220993042
    4. '+' → logprob: -5.410871982574463
    5. '=i' → logprob: -5.660871982574463
    6. ',i' → logprob: -6.410871982574463
    7. ' +' → logprob: -7.910871982574463
    8. 'i' → logprob: -8.785872459411621
    9. '```' → logprob: -8.910872459411621
    10. ',j' → logprob: -8.910872459411621

Token 1990: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0031777136027812958
    2. ' pos' → logprob: -5.753177642822266
    3. '(pos' → logprob: -18.253177642822266
    4. '	pos' → logprob: -18.378177642822266
    5. '   ' → logprob: -19.253177642822266
    6. 'position' → logprob: -19.253177642822266
    7. '_pos' → logprob: -19.628177642822266
    8. 'i' → logprob: -19.878177642822266
    9. '0' → logprob: -20.253177642822266
    10. 'Pos' → logprob: -21.128177642822266

Token 1991: '[' (ID: 58)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.39856332540512085
    2. ' +' → logprob: -1.3985633850097656
    3. '[' → logprob: -2.7735633850097656
    4. '```' → logprob: -4.273563385009766
    5. ',' → logprob: -6.648563385009766
    6. '[i' → logprob: -7.023563385009766
    7. 'i' → logprob: -7.023563385009766
    8. ')' → logprob: -7.773563385009766
    9. 'if' → logprob: -8.023563385009766
    10. '   ' → logprob: -8.148563385009766

Token 1992: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. '```' → logprob: -13.75000286102295
    3. ' ' → logprob: -14.75000286102295
    4. 'i' → logprob: -14.75000286102295
    5. '   ' → logprob: -15.81250286102295
    6. '
' → logprob: -16.000001907348633
    7. ']' → logprob: -16.812501907348633
    8. '[' → logprob: -16.875001907348633
    9. '<|end|>' → logprob: -17.062501907348633
    10. '۰' → logprob: -17.125001907348633

Token 1993: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8505709767341614
    2. ']+' → logprob: -1.4755709171295166
    3. ']' → logprob: -1.6005709171295166
    4. ')' → logprob: -3.1005709171295166
    5. ')+' → logprob: -3.2255709171295166
    6. ' +' → logprob: -3.8505709171295166
    7. 'if' → logprob: -4.225571155548096
    8. ',' → logprob: -4.475571155548096
    9. ' if' → logprob: -5.600571155548096
    10. '   ' → logprob: -6.225571155548096

Token 1994: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5692528486251831
    2. '+' → logprob: -1.194252848625183
    3. '       ' → logprob: -3.3192529678344727
    4. ' +' → logprob: -3.5692529678344727
    5. 'i' → logprob: -3.6942529678344727
    6. 'if' → logprob: -4.069252967834473
    7. '<|end|>' → logprob: -5.194252967834473
    8. '   ' → logprob: -5.319252967834473
    9. '```' → logprob: -5.819252967834473
    10. ' if' → logprob: -5.819252967834473

Token 1995: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '```' → logprob: -18.875
    4. '   ' → logprob: -22.125
    5. '`' → logprob: -23.125
    6. '``' → logprob: -24.0
    7. '
' → logprob: -25.125
    8. '۱' → logprob: -25.5
    9. '0' → logprob: -26.375
    10. '<|end|>' → logprob: -26.375

Token 1996: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.25
    3. '```' → logprob: -19.625
    4. '   ' → logprob: -22.25
    5. '`' → logprob: -24.5
    6. '
' → logprob: -24.75
    7. '``' → logprob: -25.125
    8. '=' → logprob: -26.25
    9. '１' → logprob: -26.375
    10. '۱' → logprob: -27.0

Token 1997: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.053738515824079514
    2. ',j' → logprob: -3.053738594055176
    3. 'j' → logprob: -5.928738594055176
    4. ',
' → logprob: -6.428738594055176
    5. '```' → logprob: -8.053738594055176
    6. ' j' → logprob: -8.303738594055176
    7. ' ,' → logprob: -8.928738594055176
    8. '   ' → logprob: -10.178738594055176
    9. '       ' → logprob: -10.303738594055176
    10. '`,' → logprob: -10.678738594055176

Token 1998: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7929781079292297
    2. 'j' → logprob: -0.7929781079292297
    3. ',j' → logprob: -2.542978048324585
    4. '```' → logprob: -4.292978286743164
    5. ' j' → logprob: -6.292978286743164
    6. '       ' → logprob: -8.417978286743164
    7. ',
' → logprob: -8.792978286743164
    8. '_,' → logprob: -9.167978286743164
    9. ' ,' → logprob: -9.667978286743164
    10. '``' → logprob: -9.667978286743164

Token 1999: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -4.7755875129951164e-05
    2. '```' → logprob: -10.00004768371582
    3. ' j' → logprob: -13.62504768371582
    4. '   ' → logprob: -14.25004768371582
    5. '       ' → logprob: -15.50004768371582
    6. '	j' → logprob: -16.12504768371582
    7. '``' → logprob: -17.00004768371582
    8. '_j' → logprob: -18.00004768371582
    9. ',j' → logprob: -18.12504768371582
    10. '           ' → logprob: -18.37504768371582

Token 2000: '_final' (ID: 46468)
  Prédit: '_final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_final' → logprob: -0.002424886915832758
    2. 'final' → logprob: -6.377424716949463
    3. '+' → logprob: -8.377425193786621
    4. '_FINAL' → logprob: -8.877425193786621
    5. 'Final' → logprob: -9.002425193786621
    6. ',' → logprob: -9.627425193786621
    7. '_' → logprob: -9.752425193786621
    8. '_Final' → logprob: -10.002425193786621
    9. ' final' → logprob: -11.127425193786621
    10. '_finalize' → logprob: -11.377425193786621

Token 2001: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02630389854311943
    2. ' =' → logprob: -4.151303768157959
    3. '+' → logprob: -4.776303768157959
    4. '+=' → logprob: -6.901303768157959
    5. ' +=' → logprob: -7.651303768157959
    6. ' +' → logprob: -9.276304244995117
    7. ',' → logprob: -9.651304244995117
    8. '<|end|>' → logprob: -10.151304244995117
    9. '   ' → logprob: -10.526304244995117
    10. ')' → logprob: -10.526304244995117

Token 2002: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0007100477814674377
    2. ' pos' → logprob: -7.2507100105285645
    3. '(pos' → logprob: -16.625709533691406
    4. '[pos' → logprob: -18.375709533691406
    5. '	pos' → logprob: -19.625709533691406
    6. '_pos' → logprob: -21.500709533691406
    7. '   ' → logprob: -22.500709533691406
    8. '.pos' → logprob: -22.625709533691406
    9. 'post' → logprob: -23.375709533691406
    10. 'str' → logprob: -23.500709533691406

Token 2003: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.127333340875339e-06
    2. 'pos' → logprob: -12.750003814697266
    3. '+' → logprob: -14.750003814697266
    4. '```' → logprob: -15.250003814697266
    5. '[pos' → logprob: -16.875003814697266
    6. '][' → logprob: -17.125003814697266
    7. '0' → logprob: -17.500003814697266
    8. ']' → logprob: -17.625003814697266
    9. '
' → logprob: -17.750003814697266
    10. ')' → logprob: -17.750003814697266

Token 2004: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043102685594931245
    2. '0' → logprob: -7.750431060791016
    3. '[' → logprob: -15.250431060791016
    4. '```' → logprob: -16.000431060791016
    5. 'pos' → logprob: -16.875431060791016
    6. ' ' → logprob: -18.000431060791016
    7. 'user' → logprob: -18.375431060791016
    8. '-' → logprob: -18.750431060791016
    9. '   ' → logprob: -19.375431060791016
    10. '۱' → logprob: -19.750431060791016

Token 2005: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1757558286190033
    2. '+' → logprob: -2.425755739212036
    3. ']+' → logprob: -2.800755739212036
    4. ' +' → logprob: -4.800755977630615
    5. ')' → logprob: -5.925755977630615
    6. ')+' → logprob: -7.175755977630615
    7. '[' → logprob: -9.050755500793457
    8. ' ]' → logprob: -9.675755500793457
    9. ']+=' → logprob: -9.925755500793457
    10. '   ' → logprob: -10.800755500793457

Token 2006: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01648062840104103
    2. ' +' → logprob: -4.391480445861816
    3. '=' → logprob: -6.641480445861816
    4. '<|end|>' → logprob: -6.891480445861816
    5. '+
' → logprob: -7.766480445861816
    6. '```' → logprob: -7.891480445861816
    7. ')' → logprob: -8.391480445861816
    8. '+=' → logprob: -8.516480445861816
    9. '   ' → logprob: -9.766480445861816
    10. '       ' → logprob: -9.766480445861816

Token 2007: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -19.125003814697266
    4. '   ' → logprob: -20.875003814697266
    5. '0' → logprob: -21.125003814697266
    6. '۱' → logprob: -21.375003814697266
    7. 'pos' → logprob: -21.500003814697266
    8. 'user' → logprob: -21.875003814697266
    9. '１' → logprob: -22.000003814697266
    10. '
' → logprob: -22.250003814697266

Token 2008: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '```' → logprob: -18.125
    4. '   ' → logprob: -18.875
    5. '+' → logprob: -21.25
    6. '0' → logprob: -21.375
    7. '
' → logprob: -21.375
    8. '۱' → logprob: -21.875
    9. '`' → logprob: -22.0
    10. '１' → logprob: -22.0

Token 2009: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02376411110162735
    2. '       ' → logprob: -3.773764133453369
    3. '   ' → logprob: -8.023763656616211
    4. ' print' → logprob: -9.273763656616211
    5. '```' → logprob: -9.523763656616211
    6. '
' → logprob: -11.023763656616211
    7. '        
' → logprob: -12.898763656616211
    8. '	print' → logprob: -13.273763656616211
    9. '``' → logprob: -14.648763656616211
    10. '    
' → logprob: -14.648763656616211

Token 2010: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01933722384274006
    2. '       ' → logprob: -4.394337177276611
    3. '```' → logprob: -5.394337177276611
    4. '   ' → logprob: -6.144337177276611
    5. ' print' → logprob: -9.76933765411377
    6. '
' → logprob: -10.51933765411377
    7. '        
' → logprob: -11.51933765411377
    8. '	print' → logprob: -12.14433765411377
    9. '``' → logprob: -12.14433765411377
    10. '<|end|>' → logprob: -12.89433765411377

Token 2011: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0006170084234327078
    2. '       ' → logprob: -7.500617027282715
    3. '```' → logprob: -9.750617027282715
    4. ' print' → logprob: -12.875617027282715
    5. '   ' → logprob: -12.875617027282715
    6. 'sys' → logprob: -14.500617027282715
    7. '
' → logprob: -16.8756160736084
    8. '	print' → logprob: -16.8756160736084
    9. '``' → logprob: -17.2506160736084
    10. '#print' → logprob: -18.5006160736084

Token 2012: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.004080420359969139
    2. '(f' → logprob: -5.504080295562744
    3. '(' → logprob: -13.754080772399902
    4. '((' → logprob: -14.754080772399902
    5. 'f' → logprob: -15.004080772399902
    6. 'i' → logprob: -15.879080772399902
    7. '(j' → logprob: -17.004079818725586
    8. ' (' → logprob: -18.129079818725586
    9. '   ' → logprob: -18.129079818725586
    10. '("{}' → logprob: -19.379079818725586

Token 2013: '_final' (ID: 46468)
  Prédit: '_final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_final' → logprob: -4.870950215263292e-05
    2. 'final' → logprob: -10.750048637390137
    3. 'Final' → logprob: -11.375048637390137
    4. ')_' → logprob: -12.125048637390137
    5. ')' → logprob: -12.500048637390137
    6. '_FINAL' → logprob: -12.625048637390137
    7. ',' → logprob: -13.750048637390137
    8. '_Final' → logprob: -14.125048637390137
    9. ' final' → logprob: -14.375048637390137
    10. '_finalize' → logprob: -15.000048637390137

Token 2014: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007243485888466239
    2. ',j' → logprob: -7.2507243156433105
    3. ' ,' → logprob: -12.250724792480469
    4. ',
' → logprob: -12.625724792480469
    5. ',end' → logprob: -13.250724792480469
    6. '   ' → logprob: -13.875724792480469
    7. ')' → logprob: -14.375724792480469
    8. ',b' → logprob: -14.500724792480469
    9. ',p' → logprob: -14.500724792480469
    10. ',f' → logprob: -14.625724792480469

Token 2015: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.128163257315464e-07
    2. ' j' → logprob: -15.125
    3. '   ' → logprob: -18.625
    4. '       ' → logprob: -19.625
    5. '           ' → logprob: -19.875
    6. '          ' → logprob: -21.375
    7. '	j' → logprob: -21.375
    8. '$j' → logprob: -21.5
    9. '     ' → logprob: -21.625
    10. '```' → logprob: -21.625

Token 2016: '_final' (ID: 46468)
  Prédit: '_final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_final' → logprob: -0.0005357555346563458
    2. 'final' → logprob: -7.62553596496582
    3. 'Final' → logprob: -10.50053596496582
    4. 'inal' → logprob: -11.12553596496582
    5. 'al' → logprob: -13.50053596496582
    6. '_FINAL' → logprob: -13.50053596496582
    7. '_Final' → logprob: -13.62553596496582
    8. ' final' → logprob: -14.62553596496582
    9. '_f' → logprob: -15.12553596496582
    10. '```' → logprob: -15.62553596496582

Token 2017: ')

' (ID: 1029)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2018: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2019: ' __' (ID: 2516)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.12010448426008224
    2. ' __' → logprob: -2.3701045513153076
    3. '__' → logprob: -4.2451043128967285
    4. 'main' → logprob: -5.7451043128967285
    5. '()' → logprob: -7.4951043128967285
    6. '```' → logprob: -7.4951043128967285
    7. '_main' → logprob: -7.7451043128967285
    8. '_' → logprob: -8.245104789733887
    9. ' ' → logprob: -8.870104789733887
    10. '(main' → logprob: -9.745104789733887

Token 2020: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0009710140293464065
    2. '==' → logprob: -7.375970840454102
    3. ' ==' → logprob: -8.500970840454102
    4. 'name' → logprob: -9.375970840454102
    5. '=="' → logprob: -10.250970840454102
    6. ' __' → logprob: -12.000970840454102
    7. '```' → logprob: -12.375970840454102
    8. '=='' → logprob: -12.875970840454102
    9. '___' → logprob: -13.250970840454102
    10. 'if' → logprob: -13.375970840454102

Token 2021: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00010819212911883369
    2. '```' → logprob: -10.250107765197754
    3. '__.__' → logprob: -10.500107765197754
    4. '==' → logprob: -11.250107765197754
    5. '=="' → logprob: -11.375107765197754
    6. '___' → logprob: -11.750107765197754
    7. '__
' → logprob: -12.875107765197754
    8. '__["' → logprob: -13.125107765197754
    9. '__":
' → logprob: -13.125107765197754
    10. '_' → logprob: -13.875107765197754

Token 2022: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.008796916343271732
    2. '==' → logprob: -5.133796691894531
    3. '=="' → logprob: -6.008796691894531
    4. '__.__' → logprob: -8.758796691894531
    5. '=='' → logprob: -8.883796691894531
    6. ' ==' → logprob: -10.008796691894531
    7. '__["' → logprob: -11.133796691894531
    8. '```' → logprob: -11.383796691894531
    9. '__":
' → logprob: -11.883796691894531
    10. '__('' → logprob: -12.008796691894531

Token 2023: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12695950269699097
    2. ''' → logprob: -2.1269595623016357
    3. '__' → logprob: -10.376959800720215
    4. ' "__' → logprob: -15.751959800720215
    5. '   ' → logprob: -17.8769588470459
    6. ''"' → logprob: -17.8769588470459
    7. '"name' → logprob: -18.0019588470459
    8. ' '__' → logprob: -18.0019588470459
    9. '"'' → logprob: -18.3769588470459
    10. '"<?' → logprob: -18.6269588470459

Token 2024: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6044051051139832
    2. 'main' → logprob: -0.8544051051139832
    3. '"' → logprob: -3.604405164718628
    4. ''' → logprob: -7.104404926300049
    5. '__":
' → logprob: -11.229405403137207
    6. 'name' → logprob: -12.104405403137207
    7. 'built' → logprob: -12.604405403137207
    8. '```' → logprob: -13.104405403137207
    9. '"name' → logprob: -13.354405403137207
    10. ' "__' → logprob: -13.729405403137207

Token 2025: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.28272855281829834
    2. '__' → logprob: -1.7827285528182983
    3. '():
' → logprob: -3.032728672027588
    4. '()' → logprob: -4.782728672027588
    5. '__':
' → logprob: -4.907728672027588
    6. '```' → logprob: -5.782728672027588
    7. '().__' → logprob: -6.282728672027588
    8. '_' → logprob: -6.532728672027588
    9. '__()
' → logprob: -6.782728672027588
    10. '   ' → logprob: -7.407728672027588

Token 2026: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00878060981631279
    2. '   ' → logprob: -5.258780479431152
    3. '	main' → logprob: -5.758780479431152
    4. ' main' → logprob: -7.883780479431152
    5. '_main' → logprob: -11.883780479431152
    6. '```' → logprob: -13.758780479431152
    7. '(main' → logprob: -15.008780479431152
    8. 'Main' → logprob: -15.633780479431152
    9. ' ' → logprob: -16.50878143310547
    10. '.main' → logprob: -17.13378143310547

Token 2027: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -4.320199877838604e-07
    2. ' main' → logprob: -14.75
    3. '	main' → logprob: -17.0
    4. '   ' → logprob: -19.125
    5. '_main' → logprob: -21.5
    6. '(main' → logprob: -21.625
    7. '```' → logprob: -21.875
    8. '.main' → logprob: -22.375
    9. 'import' → logprob: -23.75
    10. 'Main' → logprob: -25.375

Token 2028: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 2026
Tokens correctement prédits (1ère position, stricte): 525
Tokens correctement prédits (1ère position, avec adaptation): 556
Tokens correctement prédits (top 10): 1172
Précision stricte (1ère position): 25.91%
Précision adaptée (1ère position): 27.44%
Précision (top 10): 57.85%
================================================================================
