================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:59:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    a,b=map(int,input().split())
    if a==0 and b==0:
        break
    n=int(input())
    blocked=set(tuple(map(int,input().split())) for _ in range(n))
    dp=[[0]*(b+1) for _ in range(a+1)]
    dp[1][1]=0 if (1,1) in blocked else 1
    for i in range(1,a+1):
        for j in range(1,b+1):
            if i==1 and j==1:
                continue
            if (i,j) in blocked:
                dp[i][j]=0
            else:
                dp[i][j]=dp[i-1][j]+dp[i][j-1]
    print(dp[a][b])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2796720266342163
    2. ' ' → logprob: -2.279672145843506
    3. '    ' → logprob: -3.404672145843506
    4. '```' → logprob: -3.529672145843506
    5. '\' → logprob: -3.779672145843506
    6. '    
' → logprob: -4.529672145843506
    7. '\n' → logprob: -4.654672145843506
    8. '<|end|>' → logprob: -5.154672145843506
    9. ':' → logprob: -5.779672145843506
    10. ''' → logprob: -5.779672145843506

Token 4: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24820508062839508
    2. '    ' → logprob: -1.8732050657272339
    3. '```' → logprob: -3.9982051849365234
    4. ' ' → logprob: -4.123205184936523
    5. '       ' → logprob: -4.123205184936523
    6. '    
' → logprob: -5.998205184936523
    7. '  ' → logprob: -6.373205184936523
    8. '\' → logprob: -6.498205184936523
    9. '\t' → logprob: -6.748205184936523
    10. '\n' → logprob: -6.748205184936523

Token 5: ',b' (ID: 17568)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16376696527004242
    2. '=' → logprob: -2.413766860961914
    3. '   ' → logprob: -4.163766860961914
    4. '+' → logprob: -4.163766860961914
    5. '  ' → logprob: -5.038766860961914
    6. ' =' → logprob: -5.288766860961914
    7. '    ' → logprob: -5.413766860961914
    8. ' +=' → logprob: -5.913766860961914
    9. 'a' → logprob: -6.163766860961914
    10. 'r' → logprob: -6.538766860961914

Token 6: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5414045453071594
    2. '=' → logprob: -1.0414044857025146
    3. ',' → logprob: -2.7914044857025146
    4. ' ,' → logprob: -5.791404724121094
    5. ')' → logprob: -7.791404724121094
    6. ' ' → logprob: -9.291404724121094
    7. '<|end|>' → logprob: -9.791404724121094
    8. '```' → logprob: -10.416404724121094
    9. '[' → logprob: -10.666404724121094
    10. ' =
' → logprob: -10.916404724121094

Token 7: 'map' (ID: 3726)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1609353870153427
    2. ' input' → logprob: -2.535935401916504
    3. 'map' → logprob: -3.035935401916504
    4. ' map' → logprob: -3.910935401916504
    5. '0' → logprob: -7.410935401916504
    6. ' ' → logprob: -8.160935401916504
    7. 'b' → logprob: -8.660935401916504
    8. '1' → logprob: -9.285935401916504
    9. ' b' → logprob: -9.910935401916504
    10. '(input' → logprob: -10.410935401916504

Token 8: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8650095462799072
    2. '(int' → logprob: -0.9900095462799072
    3. '(str' → logprob: -1.6150095462799072
    4. '(lambda' → logprob: -5.115009307861328
    5. '(list' → logprob: -8.115009307861328
    6. '```' → logprob: -8.115009307861328
    7. 'str' → logprob: -8.240009307861328
    8. '(input' → logprob: -8.240009307861328
    9. 'int' → logprob: -8.240009307861328
    10. '()' → logprob: -8.615009307861328

Token 9: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.12846924364566803
    2. ')' → logprob: -3.003469228744507
    3. 'input' → logprob: -3.003469228744507
    4. ',input' → logprob: -4.253469467163086
    5. ' input' → logprob: -5.378469467163086
    6. '(' → logprob: -6.753469467163086
    7. ',' → logprob: -7.128469467163086
    8. '=input' → logprob: -8.128469467163086
    9. '[input' → logprob: -9.753469467163086
    10. '<input' → logprob: -10.128469467163086

Token 10: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.30491313338279724
    2. '()' → logprob: -1.4299131631851196
    3. '(' → logprob: -4.67991304397583
    4. '('' → logprob: -5.67991304397583
    5. ')' → logprob: -5.80491304397583
    6. '());' → logprob: -5.92991304397583
    7. '(()' → logprob: -6.67991304397583
    8. '().' → logprob: -6.80491304397583
    9. '();)' → logprob: -7.80491304397583
    10. '()))' → logprob: -8.054913520812988

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0087516784551553e-05
    2. 'strip' → logprob: -11.75001049041748
    3. ' split' → logprob: -13.87501049041748
    4. 'rstrip' → logprob: -14.12501049041748
    5. '(split' → logprob: -14.75001049041748
    6. 'spl' → logprob: -17.375009536743164
    7. ')' → logprob: -18.250009536743164
    8. 'replace' → logprob: -19.750009536743164
    9. 's' → logprob: -20.250009536743164
    10. '```' → logprob: -20.375009536743164

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3993585705757141
    2. '())' → logprob: -1.2743585109710693
    3. '))' → logprob: -3.1493585109710693
    4. '()' → logprob: -5.774358749389648
    5. '()))' → logprob: -6.024358749389648
    6. '(' → logprob: -7.399358749389648
    7. '('' → logprob: -8.024358749389648
    8. '')' → logprob: -8.899358749389648
    9. '`)' → logprob: -10.149358749389648
    10. ')")' → logprob: -10.774358749389648

Token 13: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 14: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6663919687271118
    2. ' if' → logprob: -1.0413919687271118
    3. '```' → logprob: -3.4163918495178223
    4. 'if' (adapté à ' if') → logprob: -3.7913918495178223
    5. '\n' → logprob: -3.9163918495178223
    6. ' ' → logprob: -4.291391849517822
    7. ',' → logprob: -4.416391849517822
    8. '<|end|>' → logprob: -5.041391849517822
    9. ':' → logprob: -5.416391849517822
    10. ')' → logprob: -5.416391849517822

Token 15: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.0588320717215538
    2. 'a' → logprob: -3.4338321685791016
    3. ' not' → logprob: -3.8088321685791016
    4. ' b' → logprob: -6.808832168579102
    5. ' ' → logprob: -6.808832168579102
    6. 'not' → logprob: -8.308832168579102
    7. ' ' → logprob: -8.933832168579102
    8. 'b' → logprob: -9.808832168579102
    9. '(a' → logprob: -10.808832168579102
    10. '_a' → logprob: -11.433832168579102

Token 16: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07882732897996902
    2. '==' → logprob: -3.203827381134033
    3. ' <' → logprob: -3.828827381134033
    4. ' <=' → logprob: -5.203827381134033
    5. ' ' → logprob: -5.828827381134033
    6. '<' → logprob: -5.953827381134033
    7. ' >' → logprob: -7.078827381134033
    8. ' >=' → logprob: -7.703827381134033
    9. ' !=' → logprob: -8.578826904296875
    10. '  ' → logprob: -8.578826904296875

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02072838321328163
    2. ' ' → logprob: -4.145728588104248
    3. 'b' → logprob: -5.395728588104248
    4. ' b' → logprob: -9.27072811126709
    5. '-' → logprob: -10.02072811126709
    6. ' -' → logprob: -12.77072811126709
    7. '1' → logprob: -13.27072811126709
    8. '```' → logprob: -14.52072811126709
    9. '  ' → logprob: -14.77072811126709
    10. '   ' → logprob: -15.39572811126709

Token 18: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.010343000292778015
    2. 'and' → logprob: -4.760343074798584
    3. ':' → logprob: -6.635343074798584
    4. ' ' → logprob: -8.260342597961426
    5. ' or' → logprob: -8.885342597961426
    6. '   ' → logprob: -11.885342597961426
    7. '  ' → logprob: -13.135342597961426
    8. ' :' → logprob: -13.135342597961426
    9. ' ' → logprob: -13.260342597961426
    10. ' &' → logprob: -13.885342597961426

Token 19: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.12693031132221222
    2. ' b' → logprob: -2.1269302368164062
    3. ' ' → logprob: -13.126930236816406
    4. '   ' → logprob: -16.126930236816406
    5. '	b' → logprob: -16.376930236816406
    6. '  ' → logprob: -17.501930236816406
    7. '    ' → logprob: -17.626930236816406
    8. ' ' → logprob: -19.626930236816406
    9. '<|end|>' → logprob: -19.751930236816406
    10. '```' → logprob: -20.251930236816406

Token 20: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1041795164346695
    2. ' ==' → logprob: -2.354179620742798
    3. '=' → logprob: -5.979179382324219
    4. '<|end|>' → logprob: -7.479179382324219
    5. ' ' → logprob: -8.104179382324219
    6. ')==' → logprob: -8.854179382324219
    7. ']==' → logprob: -9.479179382324219
    8. '<|end|>' → logprob: -9.604179382324219
    9. '()==' → logprob: -9.979179382324219
    10. ' ' → logprob: -10.104179382324219

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011705794604495168
    2. ' ' → logprob: -6.751170635223389
    3. '  ' → logprob: -16.188671112060547
    4. '1' → logprob: -16.438671112060547
    5. '```' → logprob: -17.001171112060547
    6. '   ' → logprob: -17.251171112060547
    7. '۰' → logprob: -17.688671112060547
    8. '<|end|>' → logprob: -17.938671112060547
    9. ' ' → logprob: -18.313671112060547
    10. '`' → logprob: -19.001171112060547

Token 22: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001098895794712007
    2. ':
' → logprob: -7.501099109649658
    3. '       ' → logprob: -7.876099109649658
    4. '   ' → logprob: -8.8760986328125
    5. ' :' → logprob: -10.8760986328125
    6. '):' → logprob: -13.2510986328125
    7. '    ' → logprob: -13.5010986328125
    8. ':return' → logprob: -14.1260986328125
    9. ':\' → logprob: -14.2510986328125
    10. '	' → logprob: -15.0010986328125

Token 23: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009296870557591319
    2. '   ' → logprob: -7.250929832458496
    3. '<|end|>' → logprob: -9.625929832458496
    4. ' break' → logprob: -10.500929832458496
    5. '	break' → logprob: -10.500929832458496
    6. '\n' → logprob: -10.625929832458496
    7. ':' → logprob: -10.875929832458496
    8. '	' → logprob: -11.750929832458496
    9. '<|end|>' → logprob: -12.000929832458496
    10. '\t' → logprob: -12.000929832458496

Token 24: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.5575453042984009
    2. '       ' → logprob: -0.9325453042984009
    3. 'break' (adapté à ' break') → logprob: -3.4325451850891113
    4. '   ' → logprob: -7.057545185089111
    5. '	break' → logprob: -7.557545185089111
    6. '           ' → logprob: -9.43254566192627
    7. '_break' → logprob: -11.05754566192627
    8. ' ' → logprob: -11.43254566192627
    9. '```' → logprob: -11.68254566192627
    10. '\n' → logprob: -12.30754566192627

Token 25: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04400937259197235
    2. '    
' → logprob: -3.9190094470977783
    3. '\n' → logprob: -4.294009208679199
    4. '<|end|>' → logprob: -6.044009208679199
    5. ')' → logprob: -6.294009208679199
    6. '
' → logprob: -6.919009208679199
    7. 'print' → logprob: -7.044009208679199
    8. ':' → logprob: -7.294009208679199
    9. '       ' → logprob: -7.669009208679199
    10. '```' → logprob: -7.794009208679199

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02889581024646759
    2. '    
' → logprob: -3.653895854949951
    3. '\n' → logprob: -6.528895854949951
    4. '
' → logprob: -8.528895378112793
    5. 'print' → logprob: -8.528895378112793
    6. '```' → logprob: -8.778895378112793
    7. '<|end|>' → logprob: -9.028895378112793
    8. '       ' → logprob: -9.153895378112793
    9. '  
' → logprob: -9.403895378112793
    10. '        
' → logprob: -9.778895378112793

Token 27: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04168913885951042
    2. 'print' → logprob: -4.166688919067383
    3. ' print' → logprob: -4.666688919067383
    4. '\n' → logprob: -5.041688919067383
    5. '    
' → logprob: -5.666688919067383
    6. '    ' → logprob: -6.666688919067383
    7. ' ' → logprob: -6.791688919067383
    8. '       ' → logprob: -7.791688919067383
    9. ' if' → logprob: -7.916688919067383
    10. 'n' (adapté à ' n') → logprob: -8.041688919067383

Token 28: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7275079488754272
    2. ' =' → logprob: -1.1025079488754272
    3. ' ' → logprob: -3.227508068084717
    4. '-' → logprob: -3.477508068084717
    5. 'um' → logprob: -3.477508068084717
    6. 'umber' → logprob: -4.477508068084717
    7. 'o' → logprob: -4.477508068084717
    8. ',' → logprob: -4.602508068084717
    9. '=int' → logprob: -4.852508068084717
    10. '**' → logprob: -4.977508068084717

Token 29: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04894091933965683
    2. '(' → logprob: -3.048940896987915
    3. 'input' → logprob: -8.798940658569336
    4. '(a' → logprob: -9.173940658569336
    5. '()' → logprob: -10.298940658569336
    6. '('' → logprob: -11.548940658569336
    7. ' (' → logprob: -11.798940658569336
    8. '((' → logprob: -11.923940658569336
    9. ' ' → logprob: -12.048940658569336
    10. ')' → logprob: -12.298940658569336

Token 30: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.10913781821727753
    2. '()' → logprob: -2.359137773513794
    3. ')' → logprob: -4.734138011932373
    4. '(' → logprob: -9.859137535095215
    5. ' ())' → logprob: -10.734137535095215
    6. '().' → logprob: -11.859137535095215
    7. '();)' → logprob: -12.109137535095215
    8. '`)' → logprob: -12.609137535095215
    9. '())
' → logprob: -12.859137535095215
    10. '()
' → logprob: -12.859137535095215

Token 31: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 32: ' blocked' (ID: 35275)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0524754524230957
    2. '   ' → logprob: -2.0524754524230957
    3. ')' → logprob: -2.1774754524230957
    4. 's' → logprob: -2.5524754524230957
    5. '[' → logprob: -3.1774754524230957
    6. '    ' → logprob: -3.3024754524230957
    7. 'if' → logprob: -3.4274754524230957
    8. ' if' → logprob: -3.5524754524230957
    9. '<|end|>' → logprob: -3.6774754524230957
    10. 'result' → logprob: -4.052475452423096

Token 33: '=set' (ID: 166509)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3591460585594177
    2. ' =' → logprob: -1.6091461181640625
    3. '_positions' → logprob: -3.2341461181640625
    4. '=set' → logprob: -3.9841461181640625
    5. '_cells' → logprob: -4.4841461181640625
    6. '_spaces' → logprob: -4.8591461181640625
    7. '=[]' → logprob: -4.9841461181640625
    8. '_' → logprob: -5.4841461181640625
    9. '_rooms' → logprob: -5.8591461181640625
    10. '_points' → logprob: -6.3591461181640625

Token 34: '(tuple' (ID: 133029)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0023268868681043386
    2. '()' → logprob: -6.252326965332031
    3. '((' → logprob: -8.627326965332031
    4. '([(' → logprob: -9.377326965332031
    5. '([' → logprob: -9.877326965332031
    6. '("("' → logprob: -11.127326965332031
    7. ' (' → logprob: -11.252326965332031
    8. '(()' → logprob: -11.502326965332031
    9. '([]' → logprob: -12.252326965332031
    10. '('' → logprob: -12.377326965332031

Token 35: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.20520605146884918
    2. '(input' → logprob: -1.705206036567688
    3. '(' → logprob: -6.330205917358398
    4. '(int' → logprob: -7.205205917358398
    5. '())' → logprob: -7.705205917358398
    6. '(sorted' → logprob: -8.080205917358398
    7. ')' → logprob: -8.580205917358398
    8. '(
' → logprob: -9.330205917358398
    9. '()' → logprob: -9.830205917358398
    10. 'map' → logprob: -10.205205917358398

Token 36: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00027111053350381553
    2. '(' → logprob: -9.00027084350586
    3. ',int' → logprob: -9.75027084350586
    4. '(lambda' → logprob: -10.00027084350586
    5. '<int' → logprob: -11.25027084350586
    6. '=int' → logprob: -11.50027084350586
    7. ')' → logprob: -11.50027084350586
    8. '[int' → logprob: -13.25027084350586
    9. ']int' → logprob: -13.25027084350586
    10. 'int' → logprob: -13.75027084350586

Token 37: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.01672637276351452
    2. '(input' → logprob: -4.516726493835449
    3. ',' → logprob: -5.266726493835449
    4. '(),' → logprob: -7.891726493835449
    5. ' ,' → logprob: -10.51672649383545
    6. ',(' → logprob: -11.01672649383545
    7. ',int' → logprob: -11.14172649383545
    8. '(' → logprob: -11.26672649383545
    9. ',x' → logprob: -11.89172649383545
    10. 'input' → logprob: -12.14172649383545

Token 38: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001561009994475171
    2. '()' → logprob: -9.00015640258789
    3. ' ().' → logprob: -11.00015640258789
    4. '.' → logprob: -11.75015640258789
    5. '()))' → logprob: -12.50015640258789
    6. '(' → logprob: -12.87515640258789
    7. '   ' → logprob: -14.50015640258789
    8. ' ' → logprob: -14.87515640258789
    9. ' .' → logprob: -15.62515640258789
    10. '()
' → logprob: -15.75015640258789

Token 39: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.4121114822482923e-06
    2. ' split' → logprob: -12.875003814697266
    3. 'strip' → logprob: -14.375003814697266
    4. '(split' → logprob: -16.250003814697266
    5. 'rstrip' → logprob: -17.375003814697266
    6. '```' → logprob: -18.000003814697266
    7. '.split' → logprob: -18.000003814697266
    8. ' ' → logprob: -18.250003814697266
    9. '   ' → logprob: -18.375003814697266
    10. 'spl' → logprob: -18.625003814697266

Token 40: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.03372730314731598
    2. '()' → logprob: -4.283727169036865
    3. '())))' → logprob: -4.533727169036865
    4. '())' → logprob: -4.908727169036865
    5. '))' → logprob: -7.408727169036865
    6. '(' → logprob: -7.908727169036865
    7. '())))
' → logprob: -9.283727645874023
    8. ')))' → logprob: -9.658727645874023
    9. '()))
' → logprob: -10.033727645874023
    10. '('' → logprob: -11.158727645874023

Token 41: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007028638850897551
    2. '))' → logprob: -6.757028579711914
    3. ',' → logprob: -6.882028579711914
    4. ')
' → logprob: -7.132028579711914
    5. '   ' → logprob: -7.257028579711914
    6. ' for' → logprob: -7.257028579711914
    7. 'for' → logprob: -7.257028579711914
    8. '`)' → logprob: -8.007028579711914
    9. '),' → logprob: -8.132028579711914
    10. '()' → logprob: -8.382028579711914

Token 42: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3870859742164612
    2. ' _' → logprob: -1.1370859146118164
    3. ' range' → logprob: -8.762085914611816
    4. '_range' → logprob: -10.012085914611816
    5. ' ' → logprob: -11.637085914611816
    6. '_i' → logprob: -13.637085914611816
    7. ' i' → logprob: -13.637085914611816
    8. 'range' → logprob: -14.137085914611816
    9. ' ' → logprob: -14.887085914611816
    10. ' xrange' → logprob: -15.512085914611816

Token 43: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016863523051142693
    2. '_' → logprob: -4.3918633460998535
    3. 'in' → logprob: -5.7668633460998535
    4. ' _' → logprob: -7.6418633460998535
    5. 'range' → logprob: -7.6418633460998535
    6. ' range' → logprob: -9.016863822937012
    7. ' ' → logprob: -9.766863822937012
    8. 'i' → logprob: -10.516863822937012
    9. '<|end|>' → logprob: -11.766863822937012
    10. '_range' → logprob: -12.016863822937012

Token 44: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007145775598473847
    2. ' range' → logprob: -7.2507147789001465
    3. ' ' → logprob: -14.125714302062988
    4. '  ' → logprob: -14.250714302062988
    5. ')' → logprob: -14.375714302062988
    6. '(range' → logprob: -14.625714302062988
    7. '	range' → logprob: -14.625714302062988
    8. '   ' → logprob: -14.750714302062988
    9. 'rang' → logprob: -14.750714302062988
    10. 'ange' → logprob: -15.000714302062988

Token 45: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009230116847902536
    2. 'n' → logprob: -7.000923156738281
    3. '(' → logprob: -11.500923156738281
    4. ' n' → logprob: -14.000923156738281
    5. ')n' → logprob: -15.000923156738281
    6. ')' → logprob: -16.12592315673828
    7. ' (' → logprob: -16.37592315673828
    8. '	n' → logprob: -18.62592315673828
    9. '(
' → logprob: -19.00092315673828
    10. '<n' → logprob: -19.12592315673828

Token 46: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3132993280887604
    2. '))' → logprob: -1.313299298286438
    3. ')))' → logprob: -10.813299179077148
    4. ' )' → logprob: -12.063299179077148
    5. ' ))' → logprob: -12.688299179077148
    6. ')
' → logprob: -13.063299179077148
    7. ')}' → logprob: -13.563299179077148
    8. '))
' → logprob: -13.688299179077148
    9. '),' → logprob: -14.188299179077148
    10. '   ' → logprob: -14.438299179077148

Token 47: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: ' dp' (ID: 21546)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: '=[[' (ID: 112637)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14694759249687195
    2. '=' → logprob: -2.0219476222991943
    3. '[' → logprob: -5.896947383880615
    4. '=[' → logprob: -6.896947383880615
    5. '=[]' → logprob: -8.771947860717773
    6. ' =[' → logprob: -9.271947860717773
    7. '={}' → logprob: -9.521947860717773
    8. ' ' → logprob: -9.521947860717773
    9. '=[[' → logprob: -10.021947860717773
    10. '={' → logprob: -12.146947860717773

Token 50: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.039775166660547256
    2. 'False' → logprob: -3.2897751331329346
    3. 'float' → logprob: -6.914775371551514
    4. '-' → logprob: -7.789775371551514
    5. '[' → logprob: -8.914774894714355
    6. '1' → logprob: -9.539774894714355
    7. ' ' → logprob: -10.664774894714355
    8. '(' → logprob: -10.914774894714355
    9. '-f' → logprob: -11.164774894714355
    10. 'True' → logprob: -11.164774894714355

Token 51: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.3287295401096344
    2. ']*' → logprob: -1.828729510307312
    3. ']' → logprob: -2.3287296295166016
    4. ' for' → logprob: -4.078729629516602
    5. 'for' → logprob: -5.453729629516602
    6. ' ]' → logprob: -7.328729629516602
    7. ']+' → logprob: -8.328729629516602
    8. '][' → logprob: -12.953729629516602
    9. ',' → logprob: -12.953729629516602
    10. '	for' → logprob: -13.078729629516602

Token 52: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005252491682767868
    2. 'a' → logprob: -6.005252361297607
    3. ' b' → logprob: -6.255252361297607
    4. '101' → logprob: -7.880252361297607
    5. '100' → logprob: -8.880252838134766
    6. 'max' → logprob: -9.880252838134766
    7. '501' → logprob: -10.130252838134766
    8. '10' → logprob: -10.255252838134766
    9. '   ' → logprob: -10.380252838134766
    10. ' a' → logprob: -10.880252838134766

Token 53: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00044092073221690953
    2. ' +' → logprob: -7.750441074371338
    3. ')' → logprob: -12.50044059753418
    4. '+)' → logprob: -12.75044059753418
    5. '+a' → logprob: -12.75044059753418
    6. '+b' → logprob: -15.50044059753418
    7. ' )' → logprob: -15.75044059753418
    8. '＋' → logprob: -16.37544059753418
    9. '+
' → logprob: -16.62544059753418
    10. '+c' → logprob: -17.37544059753418

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -12.250008583068848
    3. '2' → logprob: -13.000008583068848
    4. 'a' → logprob: -14.125008583068848
    5. ')' → logprob: -15.375008583068848
    6. '+' → logprob: -16.62500762939453
    7. '   ' → logprob: -17.50000762939453
    8. ' a' → logprob: -17.87500762939453
    9. '```' → logprob: -17.87500762939453
    10. '１' → logprob: -18.87500762939453

Token 55: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005309910629875958
    2. ' )' → logprob: -7.625531196594238
    3. ' for' → logprob: -10.875531196594238
    4. 'for' → logprob: -11.125531196594238
    5. ')]' → logprob: -11.875531196594238
    6. ']' → logprob: -14.125531196594238
    7. '   ' → logprob: -14.375531196594238
    8. '```' → logprob: -15.500531196594238
    9. '))' → logprob: -15.875531196594238
    10. ')
' → logprob: -16.125530242919922

Token 56: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.043734073638916016
    2. 'for' → logprob: -3.168734073638916
    3. '	for' → logprob: -7.918734073638916
    4. ')' → logprob: -8.168733596801758
    5. '<|end|>' → logprob: -10.418733596801758
    6. ' ' → logprob: -11.043733596801758
    7. ']' → logprob: -11.418733596801758
    8. ' )' → logprob: -11.793733596801758
    9. '   ' → logprob: -11.918733596801758
    10. ' ]' → logprob: -12.793733596801758

Token 57: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.07644996792078018
    2. '<|end|>' → logprob: -3.5764498710632324
    3. '_' → logprob: -3.8264498710632324
    4. ' range' → logprob: -4.076449871063232
    5. ' i' → logprob: -5.326449871063232
    6. ' ' → logprob: -6.576449871063232
    7. ' in' → logprob: -8.70145034790039
    8. '<|end|>' → logprob: -8.82645034790039
    9. 'range' → logprob: -8.95145034790039
    10. ' xrange' → logprob: -9.82645034790039

Token 58: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4180295765399933
    2. ' range' → logprob: -1.168029546737671
    3. ' in' → logprob: -3.668029546737671
    4. 'in' → logprob: -5.29302978515625
    5. '_' → logprob: -10.04302978515625
    6. ' ' → logprob: -10.54302978515625
    7. 'i' → logprob: -11.29302978515625
    8. '(range' → logprob: -11.54302978515625
    9. '	range' → logprob: -11.79302978515625
    10. ' xrange' → logprob: -11.79302978515625

Token 59: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008617646060883999
    2. ' range' → logprob: -4.758617877960205
    3. '(range' → logprob: -12.758617401123047
    4. '	range' → logprob: -15.508617401123047
    5. '[' → logprob: -17.508617401123047
    6. ' ' → logprob: -18.008617401123047
    7. 'r' → logprob: -18.258617401123047
    8. '   ' → logprob: -18.508617401123047
    9. '  ' → logprob: -19.383617401123047
    10. 'a' → logprob: -19.508617401123047

Token 60: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0002736138121690601
    2. '(' → logprob: -9.250273704528809
    3. '(range' → logprob: -9.375273704528809
    4. ' (' → logprob: -10.250273704528809
    5. 'range' → logprob: -10.500273704528809
    6. '   ' → logprob: -10.875273704528809
    7. 'a' → logprob: -11.875273704528809
    8. ' range' → logprob: -13.000273704528809
    9. '((' → logprob: -14.625273704528809
    10. ')' → logprob: -15.625273704528809

Token 61: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.320199877838604e-07
    2. ' +' → logprob: -15.25
    3. '+)' → logprob: -17.0
    4. '1' → logprob: -17.625
    5. '＋' → logprob: -18.125
    6. '+
' → logprob: -18.5
    7. ')]' → logprob: -19.625
    8. '+b' → logprob: -19.75
    9. '+

' → logprob: -19.875
    10. '()+' → logprob: -20.0

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.2500057220459
    4. '2' → logprob: -17.6250057220459
    5. '0' → logprob: -18.3750057220459
    6. '１' → logprob: -18.3750057220459
    7. ')' → logprob: -18.3750057220459
    8. '```' → logprob: -19.2500057220459
    9. '۱' → logprob: -19.3750057220459
    10. '  ' → logprob: -19.8750057220459

Token 63: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0040862360037863255
    2. ')' → logprob: -5.504086017608643
    3. ']' → logprob: -12.0040864944458
    4. ' )' → logprob: -14.6290864944458
    5. ')]
' → logprob: -15.1290864944458
    6. ')])' → logprob: -15.1290864944458
    7. '))' → logprob: -15.2540864944458
    8. ')][' → logprob: -16.129085540771484
    9. ')}' → logprob: -16.254085540771484
    10. ')
' → logprob: -16.504085540771484

Token 64: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09884098917245865
    2. '   ' → logprob: -2.5988409519195557
    3. 'dp' → logprob: -4.723841190338135
    4. '    
' → logprob: -5.223841190338135
    5. '<|end|>' → logprob: -6.723841190338135
    6. '[' → logprob: -6.973841190338135
    7. '  
' → logprob: -7.473841190338135
    8. ' 
' → logprob: -7.473841190338135
    9. '   
' → logprob: -8.223840713500977
    10. ' for' → logprob: -8.348840713500977

Token 65: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.009002624079585075
    2. 'for' → logprob: -5.509002685546875
    3. '
' → logprob: -6.009002685546875
    4. ' for' → logprob: -7.009002685546875
    5. '	dp' → logprob: -7.509002685546875
    6. ' dp' → logprob: -7.634002685546875
    7. '   ' → logprob: -8.384002685546875
    8. '    
' → logprob: -9.384002685546875
    9. '[' → logprob: -9.634002685546875
    10. ' 
' → logprob: -10.009002685546875

Token 66: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.2729995988775045e-06
    2. '\[' → logprob: -13.000006675720215
    3. '[a' → logprob: -13.625006675720215
    4. '][' → logprob: -14.125006675720215
    5. 'a' → logprob: -14.500006675720215
    6. '[
' → logprob: -14.750006675720215
    7. '```' → logprob: -15.250006675720215
    8. '}[' → logprob: -15.500006675720215
    9. '>[' → logprob: -15.500006675720215
    10. '<|end|>' → logprob: -16.1250057220459

Token 67: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.376848902320489e-05
    2. '1' → logprob: -9.375093460083008
    3. '[' → logprob: -12.875093460083008
    4. ' ' → logprob: -13.000093460083008
    5. '-' → logprob: -13.250093460083008
    6. '   ' → logprob: -14.375093460083008
    7. '][' → logprob: -14.562593460083008
    8. '```' → logprob: -14.812593460083008
    9. 'a' → logprob: -15.875093460083008
    10. '
' → logprob: -16.437593460083008

Token 68: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.000586991140153259
    2. ' ][' → logprob: -7.500586986541748
    3. ']' → logprob: -10.500587463378906
    4. '[' → logprob: -12.750587463378906
    5. '1' → logprob: -12.875587463378906
    6. ')][' → logprob: -15.250587463378906
    7. ' ]' → logprob: -15.750587463378906
    8. ' ' → logprob: -15.875587463378906
    9. '"][' → logprob: -16.000587463378906
    10. ',' → logprob: -16.375587463378906

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010410251561552286
    2. '0' → logprob: -6.876040935516357
    3. ' ' → logprob: -11.876041412353516
    4. '   ' → logprob: -14.876041412353516
    5. '2' → logprob: -15.001041412353516
    6. '  ' → logprob: -16.063541412353516
    7. '	' → logprob: -16.563541412353516
    8. '-' → logprob: -16.813541412353516
    9. '```' → logprob: -17.001041412353516
    10. '１' → logprob: -17.376041412353516

Token 70: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.31419411301612854
    2. ']=' → logprob: -1.3141940832138062
    3. '=' → logprob: -7.189194202423096
    4. ' ]' → logprob: -9.064193725585938
    5. ']+=' → logprob: -9.814193725585938
    6. ' =' → logprob: -12.689193725585938
    7. '']=' → logprob: -13.814193725585938
    8. ')=' → logprob: -14.314193725585938
    9. ']==' → logprob: -14.689193725585938
    10. '"]=' → logprob: -14.939193725585938

Token 71: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002942287246696651
    2. ' ' → logprob: -8.37529468536377
    3. '0' → logprob: -9.87529468536377
    4. '   ' → logprob: -11.87529468536377
    5. '	' → logprob: -13.50029468536377
    6. ' ' → logprob: -14.12529468536377
    7. '2' → logprob: -14.56279468536377
    8. '  ' → logprob: -14.56279468536377
    9. 'dp' → logprob: -15.50029468536377
    10. '-' → logprob: -15.87529468536377

Token 72: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9308834671974182
    2. ' for' → logprob: -1.3058834075927734
    3. '<|end|>' → logprob: -1.3058834075927734
    4. 'for' → logprob: -3.6808834075927734
    5. '\n' → logprob: -4.555883407592773
    6. '
' → logprob: -4.555883407592773
    7. ' ' → logprob: -5.805883407592773
    8. '    
' → logprob: -6.055883407592773
    9. '	for' → logprob: -6.305883407592773
    10. '.' → logprob: -6.430883407592773

Token 73: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013344056205824018
    2. ' (' → logprob: -6.751334190368652
    3. '(a' → logprob: -9.001334190368652
    4. '((' → logprob: -11.001334190368652
    5. '   ' → logprob: -11.876334190368652
    6. ' ' → logprob: -11.876334190368652
    7. '(not' → logprob: -12.626334190368652
    8. 'not' → logprob: -13.001334190368652
    9. '  ' → logprob: -13.501334190368652
    10. ' not' → logprob: -14.251334190368652

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002016331272898242
    2. ' ' → logprob: -9.125201225280762
    3. '(' → logprob: -9.750201225280762
    4. '   ' → logprob: -10.625201225280762
    5. ' (' → logprob: -12.375201225280762
    6. '  ' → logprob: -12.875201225280762
    7. '0' → logprob: -13.750201225280762
    8. '    ' → logprob: -14.000201225280762
    9. '
' → logprob: -15.312701225280762
    10. ')' → logprob: -15.562701225280762

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005029928870499134
    2. ' ,' → logprob: -7.875503063201904
    3. '<|end|>' → logprob: -9.875502586364746
    4. ')' → logprob: -10.500502586364746
    5. ',

' → logprob: -12.000502586364746
    6. '1' → logprob: -12.000502586364746
    7. ',)' → logprob: -12.250502586364746
    8. ',None' → logprob: -12.500502586364746
    9. ',int' → logprob: -12.750502586364746
    10. ',Integer' → logprob: -13.125502586364746

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3199920178740285e-05
    2. ' ' → logprob: -10.750022888183594
    3. ')' → logprob: -14.500022888183594
    4. ',' → logprob: -14.625022888183594
    5. '<|end|>' → logprob: -15.375022888183594
    6. '   ' → logprob: -15.875022888183594
    7. '```' → logprob: -16.000022888183594
    8. '

' → logprob: -16.000022888183594
    9. '    ' → logprob: -16.875022888183594
    10. '  ' → logprob: -16.937522888183594

Token 77: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008562089875340462
    2. ' in' → logprob: -5.508562088012695
    3. ' )' → logprob: -5.633562088012695
    4. ' not' → logprob: -7.758562088012695
    5. 'in' → logprob: -7.758562088012695
    6. 'not' → logprob: -10.258562088012695
    7. ' ' → logprob: -13.133562088012695
    8. '<|end|>' → logprob: -14.258562088012695
    9. ']' → logprob: -14.571062088012695
    10. '）' → logprob: -14.633562088012695

Token 78: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28128451108932495
    2. 'in' → logprob: -1.5312845706939697
    3. ' not' → logprob: -3.6562845706939697
    4. 'not' → logprob: -5.781284332275391
    5. ')' → logprob: -12.28128433227539
    6. ' ' → logprob: -12.78128433227539
    7. '	in' → logprob: -13.40628433227539
    8. '<|end|>' → logprob: -13.40628433227539
    9. ' i' → logprob: -14.15628433227539
    10. '	not' → logprob: -14.28128433227539

Token 79: ' blocked' (ID: 35275)
  Prédit: 'blocked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocked' → logprob: -0.06199267506599426
    2. ' blocked' → logprob: -2.811992645263672
    3. 'block' → logprob: -10.936992645263672
    4. ' block' → logprob: -12.061992645263672
    5. '	block' → logprob: -13.936992645263672
    6. '<|end|>' → logprob: -15.436992645263672
    7. 'blocking' → logprob: -16.686992645263672
    8. '(block' → logprob: -16.686992645263672
    9. 'Blocked' → logprob: -16.811992645263672
    10. ' blockers' → logprob: -17.811992645263672

Token 80: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.06204733997583389
    2. 'else' → logprob: -2.812047243118286
    3. '   ' → logprob: -9.937047004699707
    4. '	else' → logprob: -10.562047004699707
    5. '    ' → logprob: -13.312047004699707
    6. '       ' → logprob: -13.562047004699707
    7. ' ' → logprob: -13.687047004699707
    8. '```' → logprob: -15.062047004699707
    9. '     ' → logprob: -15.187047004699707
    10. '  ' → logprob: -15.562047004699707

Token 81: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003503626212477684
    2. ' ' → logprob: -8.000349998474121
    3. '0' → logprob: -12.125349998474121
    4. '-' → logprob: -12.750349998474121
    5. '   ' → logprob: -12.750349998474121
    6. 'dp' → logprob: -13.125349998474121
    7. '2' → logprob: -14.812849998474121
    8. '  ' → logprob: -15.187849998474121
    9. ' -' → logprob: -15.437849998474121
    10. '(' → logprob: -16.000350952148438

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.771655115589965e-05
    2. ' ' → logprob: -11.250018119812012
    3. 'dp' → logprob: -12.875018119812012
    4. '0' → logprob: -14.000018119812012
    5. '-' → logprob: -14.500018119812012
    6. '   ' → logprob: -15.375018119812012
    7. 'a' → logprob: -16.250017166137695
    8. '2' → logprob: -16.312517166137695
    9. 'int' → logprob: -17.187517166137695
    10. '  ' → logprob: -17.312517166137695

Token 83: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7010893821716309
    2. '
' → logprob: -1.0760893821716309
    3. 'for' → logprob: -3.201089382171631
    4. '\n' → logprob: -3.451089382171631
    5. '<|end|>' → logprob: -3.576089382171631
    6. ' 
' → logprob: -3.826089382171631
    7. '   ' → logprob: -4.451089382171631
    8. '    
' → logprob: -4.701089382171631
    9. '' → logprob: -5.201089382171631
    10. '```' → logprob: -5.951089382171631

Token 84: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0175281763076782
    2. '
' → logprob: -1.3925281763076782
    3. ' for' → logprob: -1.8925281763076782
    4. ' 
' → logprob: -2.5175280570983887
    5. '    
' → logprob: -3.2675280570983887
    6. '   ' → logprob: -3.2675280570983887
    7. '  
' → logprob: -4.017528057098389
    8. '' → logprob: -4.267528057098389
    9. 'for' → logprob: -4.392528057098389
    10. '\' → logprob: -4.392528057098389

Token 85: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.006949322298169136
    2. ' for' → logprob: -5.006949424743652
    3. '   ' → logprob: -8.381949424743652
    4. '	for' → logprob: -12.256949424743652
    5. '```' → logprob: -16.256948471069336
    6. 'from' → logprob: -16.506948471069336
    7. ' ' → logprob: -18.631948471069336
    8. '  ' → logprob: -19.256948471069336
    9. '<|end|>' → logprob: -19.506948471069336
    10. 'import' → logprob: -19.881948471069336

Token 86: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0005200279993005097
    2. 'i' → logprob: -8.000519752502441
    3. ' ' → logprob: -8.750519752502441
    4. ' _' → logprob: -10.750519752502441
    5. ' ' → logprob: -13.625519752502441
    6. '   ' → logprob: -13.875519752502441
    7. '	i' → logprob: -14.000519752502441
    8. '_' → logprob: -14.500519752502441
    9. '  ' → logprob: -14.750519752502441
    10. ' x' → logprob: -15.250519752502441

Token 87: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020657390356063843
    2. 'in' → logprob: -3.8956573009490967
    3. ' ' → logprob: -9.895657539367676
    4. '	in' → logprob: -10.520657539367676
    5. '   ' → logprob: -11.145657539367676
    6. '1' → logprob: -11.520657539367676
    7. '    ' → logprob: -12.520657539367676
    8. '  ' → logprob: -13.145657539367676
    9. 'range' → logprob: -13.270657539367676
    10. '```' → logprob: -13.895657539367676

Token 88: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3869020342826843
    2. 'range' → logprob: -1.136902093887329
    3. '1' → logprob: -10.63690185546875
    4. ' ' → logprob: -12.76190185546875
    5. '	range' → logprob: -13.38690185546875
    6. '   ' → logprob: -14.01190185546875
    7. '(range' → logprob: -14.26190185546875
    8. ' xrange' → logprob: -14.51190185546875
    9. '```' → logprob: -15.63690185546875
    10. '2' → logprob: -16.13690185546875

Token 89: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017060093814507127
    2. '1' → logprob: -6.626706123352051
    3. ' (' → logprob: -8.50170612335205
    4. ' ' → logprob: -9.25170612335205
    5. '   ' → logprob: -10.00170612335205
    6. '2' → logprob: -10.37670612335205
    7. '(
' → logprob: -13.25170612335205
    8. '    ' → logprob: -14.00170612335205
    9. '	' → logprob: -14.00170612335205
    10. '```' → logprob: -15.00170612335205

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.908022285439074e-05
    2. '2' → logprob: -9.875059127807617
    3. ' ' → logprob: -12.125059127807617
    4. 'a' → logprob: -13.750059127807617
    5. '   ' → logprob: -14.000059127807617
    6. '0' → logprob: -16.500059127807617
    7. '(' → logprob: -17.250059127807617
    8. '```' → logprob: -17.375059127807617
    9. '
' → logprob: -18.000059127807617
    10. ')' → logprob: -19.250059127807617

Token 91: ',a' (ID: 26776)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20395410060882568
    2. ' ,' → logprob: -1.9539541006088257
    3. ',a' → logprob: -3.3289542198181152
    4. ',b' → logprob: -5.078954219818115
    5. '   ' → logprob: -8.453953742980957
    6. ',i' → logprob: -8.703953742980957
    7. ' ' → logprob: -8.703953742980957
    8. ',len' → logprob: -9.953953742980957
    9. ',(' → logprob: -10.703953742980957
    10. '+' → logprob: -10.953953742980957

Token 92: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003675133048091084
    2. ' +' → logprob: -8.000367164611816
    3. '+
' → logprob: -10.750367164611816
    4. '1' → logprob: -12.000367164611816
    5. '+)' → logprob: -13.000367164611816
    6. ')+' → logprob: -14.250367164611816
    7. '+</' → logprob: -15.000367164611816
    8. ' +
' → logprob: -15.500367164611816
    9. '<|end|>' → logprob: -15.625367164611816
    10. '＋' → logprob: -15.875367164611816

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8087270038668066e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -15.125027656555176
    4. ')' → logprob: -16.375028610229492
    5. '2' → logprob: -17.000028610229492
    6. '```' → logprob: -17.375028610229492
    7. '-' → logprob: -17.812528610229492
    8. '  ' → logprob: -17.875028610229492
    9. '۱' → logprob: -18.312528610229492
    10. '+' → logprob: -18.437528610229492

Token 94: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011418669484555721
    2. '):
' → logprob: -4.51141881942749
    3. ':' → logprob: -8.261418342590332
    4. ')' → logprob: -9.511418342590332
    5. '   ' → logprob: -10.886418342590332
    6. '):
' → logprob: -12.011418342590332
    7. ' ):' → logprob: -12.136418342590332
    8. '):

' → logprob: -13.261418342590332
    9. ',' → logprob: -13.386418342590332
    10. '+' → logprob: -13.636418342590332

Token 95: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16335397958755493
    2. '   ' → logprob: -2.16335391998291
    3. '<|end|>' → logprob: -3.91335391998291
    4. ' for' → logprob: -4.66335391998291
    5. '    ' → logprob: -5.91335391998291
    6. ' ' → logprob: -6.16335391998291
    7. '<|end|>' → logprob: -8.41335391998291
    8. ':' → logprob: -8.41335391998291
    9. '        
' → logprob: -9.03835391998291
    10. '        ' → logprob: -9.03835391998291

Token 96: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.033813633024692535
    2. '       ' → logprob: -3.908813714981079
    3. '   ' → logprob: -4.4088134765625
    4. 'for' (adapté à ' for') → logprob: -7.6588134765625
    5. ' ' → logprob: -8.0338134765625
    6. '    ' → logprob: -8.9088134765625
    7. '	for' → logprob: -9.9088134765625
    8. ' 
' → logprob: -12.0338134765625
    9. '<|end|>' → logprob: -12.1588134765625
    10. '  ' → logprob: -12.2838134765625

Token 97: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6931542754173279
    2. ' j' → logprob: -0.6931542754173279
    3. '   ' → logprob: -12.443154335021973
    4. '    ' → logprob: -13.193154335021973
    5. ' range' → logprob: -14.693154335021973
    6. '	j' → logprob: -14.943154335021973
    7. 'range' → logprob: -15.568154335021973
    8. ' ' → logprob: -15.693154335021973
    9. '```' → logprob: -17.318153381347656
    10. '$j' → logprob: -17.443153381347656

Token 98: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009782060980796814
    2. 'in' → logprob: -4.634781837463379
    3. ' ' → logprob: -11.509781837463379
    4. '	in' → logprob: -11.884781837463379
    5. '   ' → logprob: -12.634781837463379
    6. '    ' → logprob: -12.759781837463379
    7. '1' → logprob: -13.509781837463379
    8. '<|end|>' → logprob: -14.634781837463379
    9. '  ' → logprob: -15.259781837463379
    10. '```' → logprob: -15.634781837463379

Token 99: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3132757246494293
    2. ' range' → logprob: -1.313275694847107
    3. '(' → logprob: -11.688275337219238
    4. '(range' → logprob: -12.688275337219238
    5. ' ' → logprob: -13.813275337219238
    6. '1' → logprob: -13.813275337219238
    7. '   ' → logprob: -15.563275337219238
    8. ' (' → logprob: -15.938275337219238
    9. '	range' → logprob: -16.563276290893555
    10. ' in' → logprob: -17.188276290893555

Token 100: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00038384052459150553
    2. '1' → logprob: -7.8753838539123535
    3. '   ' → logprob: -13.500383377075195
    4. ' (' → logprob: -13.500383377075195
    5. ' ' → logprob: -14.125383377075195
    6. '2' → logprob: -16.500383377075195
    7. 'range' → logprob: -16.875383377075195
    8. '(
' → logprob: -17.500383377075195
    9. '       ' → logprob: -17.625383377075195
    10. '((' → logprob: -17.750383377075195

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.580929347255733e-05
    2. ' ' → logprob: -11.750016212463379
    3. '   ' → logprob: -12.000016212463379
    4. 'b' → logprob: -13.750016212463379
    5. '2' → logprob: -15.750016212463379
    6. '       ' → logprob: -16.125015258789062
    7. '0' → logprob: -16.125015258789062
    8. '(' → logprob: -16.375015258789062
    9. 'range' → logprob: -16.875015258789062
    10. '    ' → logprob: -17.125015258789062

Token 102: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.0057958317920565605
    2. ',' → logprob: -5.380795955657959
    3. ',j' → logprob: -6.880795955657959
    4. ' ,' → logprob: -9.8807954788208
    5. 'b' → logprob: -10.2557954788208
    6. '   ' → logprob: -10.6307954788208
    7. ',(' → logprob: -11.2557954788208
    8. '(b' → logprob: -11.8807954788208
    9. '       ' → logprob: -12.1307954788208
    10. '1' → logprob: -12.2557954788208

Token 103: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00040993880247697234
    2. '1' → logprob: -8.000410079956055
    3. ' +' → logprob: -9.875410079956055
    4. '   ' → logprob: -11.750410079956055
    5. '```' → logprob: -12.125410079956055
    6. ',' → logprob: -13.000410079956055
    7. ')+' → logprob: -13.000410079956055
    8. '+
' → logprob: -14.125410079956055
    9. ')' → logprob: -14.125410079956055
    10. ' ' → logprob: -14.250410079956055

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9743012671824545e-05
    2. ' ' → logprob: -11.750020027160645
    3. '   ' → logprob: -11.875020027160645
    4. '+' → logprob: -13.000020027160645
    5. 'j' → logprob: -13.875020027160645
    6. '```' → logprob: -14.750020027160645
    7. '       ' → logprob: -15.000020027160645
    8. '           ' → logprob: -15.000020027160645
    9. '     ' → logprob: -15.937520027160645
    10. '2' → logprob: -16.500019073486328

Token 105: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.14178483188152313
    2. '):' → logprob: -2.141784906387329
    3. ':' → logprob: -4.51678466796875
    4. '           ' → logprob: -6.01678466796875
    5. ':
' → logprob: -7.26678466796875
    6. '       ' → logprob: -7.89178466796875
    7. '):
' → logprob: -9.26678466796875
    8. ')' → logprob: -9.39178466796875
    9. '):

' → logprob: -9.89178466796875
    10. '               ' → logprob: -10.76678466796875

Token 106: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011482786387205124
    2. ' if' → logprob: -5.0114827156066895
    3. '           ' → logprob: -6.3864827156066895
    4. '        ' → logprob: -7.0114827156066895
    5. '<|end|>' → logprob: -7.6364827156066895
    6. ',' → logprob: -7.7614827156066895
    7. '    ' → logprob: -8.136483192443848
    8. '   ' → logprob: -8.386483192443848
    9. ':' → logprob: -8.386483192443848
    10. 'if' → logprob: -8.761483192443848

Token 107: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0484376884996891
    2. '           ' → logprob: -3.9234375953674316
    3. 'if' (adapté à ' if') → logprob: -4.173437595367432
    4. '               ' → logprob: -5.048437595367432
    5. '            ' → logprob: -5.298437595367432
    6. ' continue' → logprob: -7.923437595367432
    7. '                ' → logprob: -9.04843807220459
    8. ' ' → logprob: -9.42343807220459
    9. '       ' → logprob: -10.79843807220459
    10. 'continue' → logprob: -11.17343807220459

Token 108: ' i' (ID: 575)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.09042169898748398
    2. ' (' → logprob: -2.465421676635742
    3. '(j' → logprob: -7.340421676635742
    4. '(' → logprob: -7.590421676635742
    5. '   ' → logprob: -8.340421676635742
    6. ' ' → logprob: -10.215421676635742
    7. '(not' → logprob: -10.590421676635742
    8. ' not' → logprob: -10.965421676635742
    9. 'not' → logprob: -12.965421676635742
    10. ' i' → logprob: -13.090421676635742

Token 109: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7902207374572754
    2. '!=' → logprob: -1.1652207374572754
    3. ' !=' → logprob: -2.1652207374572754
    4. ' ==' → logprob: -2.2902207374572754
    5. '>' → logprob: -4.165220737457275
    6. ' >' → logprob: -6.165220737457275
    7. ' not' → logprob: -8.415220260620117
    8. ' and' → logprob: -8.790220260620117
    9. '   ' → logprob: -9.165220260620117
    10. 'and' → logprob: -9.665220260620117

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.572941179503687e-05
    2. ' ' → logprob: -10.000045776367188
    3. 'j' → logprob: -16.000045776367188
    4. '   ' → logprob: -16.375045776367188
    5. '  ' → logprob: -17.125045776367188
    6. '0' → logprob: -17.375045776367188
    7. '    ' → logprob: -18.750045776367188
    8. '```' → logprob: -19.125045776367188
    9. '           ' → logprob: -19.812545776367188
    10. '`' → logprob: -19.812545776367188

Token 111: ' and' (ID: 326)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.28749576210975647
    2. ' and' → logprob: -1.412495732307434
    3. 'and' → logprob: -5.4124956130981445
    4. 'or' → logprob: -6.6624956130981445
    5. '           ' → logprob: -7.6624956130981445
    6. ' ' → logprob: -9.537495613098145
    7. '               ' → logprob: -11.287495613098145
    8. ':' → logprob: -11.287495613098145
    9. '   ' → logprob: -11.787495613098145
    10. '	or' → logprob: -12.412495613098145

Token 112: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.011048528365790844
    2. ' j' → logprob: -4.511048316955566
    3. '	j' → logprob: -15.386048316955566
    4. ' ' → logprob: -15.386048316955566
    5. '   ' → logprob: -15.511048316955566
    6. '    ' → logprob: -17.886049270629883
    7. '  ' → logprob: -18.261049270629883
    8. '           ' → logprob: -18.386049270629883
    9. ',j' → logprob: -19.261049270629883
    10. 'and' → logprob: -19.386049270629883

Token 113: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.004628888331353664
    2. ' ==' → logprob: -5.379628658294678
    3. '1' → logprob: -12.629629135131836
    4. '==
' → logprob: -13.254629135131836
    5. '()==' → logprob: -14.129629135131836
    6. '=' → logprob: -14.504629135131836
    7. ']==' → logprob: -14.629629135131836
    8. ' ' → logprob: -14.754629135131836
    9. '>' → logprob: -15.004629135131836
    10. ')==' → logprob: -15.379629135131836

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.656383680412546e-05
    2. ' ' → logprob: -10.000046730041504
    3. '<|end|>' → logprob: -15.125046730041504
    4. '0' → logprob: -15.750046730041504
    5. '۱' → logprob: -16.312545776367188
    6. '```' → logprob: -16.375045776367188
    7. '<|end|>' → logprob: -16.500045776367188
    8. '१' → logprob: -17.000045776367188
    9. '`' → logprob: -17.000045776367188
    10. '১' → logprob: -17.000045776367188

Token 115: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5234096050262451
    2. '               ' → logprob: -1.1484096050262451
    3. '           ' → logprob: -2.523409605026245
    4. ':
' → logprob: -4.773409843444824
    5. ' continue' → logprob: -7.023409843444824
    6. '       ' → logprob: -7.648409843444824
    7. 'continue' → logprob: -9.148409843444824
    8. '	       ' → logprob: -10.273409843444824
    9. '                   ' → logprob: -10.523409843444824
    10. '              ' → logprob: -10.773409843444824

Token 116: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005546659231185913
    2. ':' → logprob: -5.880546569824219
    3. ' continue' → logprob: -6.380546569824219
    4. 'continue' → logprob: -7.255546569824219
    5. '           ' → logprob: -8.255546569824219
    6. '       ' → logprob: -10.505546569824219
    7. '	continue' → logprob: -12.005546569824219
    8. ' continues' → logprob: -12.130546569824219
    9. '              ' → logprob: -12.255546569824219
    10. '                   ' → logprob: -12.380546569824219

Token 117: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.2864181697368622
    2. '               ' → logprob: -1.5364181995391846
    3. ' continue' → logprob: -3.4114181995391846
    4. '	continue' → logprob: -7.9114179611206055
    5. '                   ' → logprob: -8.411417961120605
    6. '           ' → logprob: -8.411417961120605
    7. '	           ' → logprob: -10.411417961120605
    8. '_continue' → logprob: -10.536417961120605
    9. 'continu' → logprob: -11.911417961120605
    10. '   ' → logprob: -12.036417961120605

Token 118: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005474337958730757
    2. '            
' → logprob: -8.625547409057617
    3. '<|end|>' → logprob: -9.125547409057617
    4. 'elif' → logprob: -9.375547409057617
    5. '       ' → logprob: -10.125547409057617
    6. '
' → logprob: -10.125547409057617
    7. ' elif' → logprob: -10.250547409057617
    8. '          ' → logprob: -11.875547409057617
    9. '               ' → logprob: -11.875547409057617
    10. ' else' → logprob: -12.125547409057617

Token 119: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026555589865893126
    2. '       ' → logprob: -6.502655506134033
    3. '            
' → logprob: -7.752655506134033
    4. ' elif' → logprob: -8.752655982971191
    5. 'elif' → logprob: -9.002655982971191
    6. ' if' → logprob: -9.252655982971191
    7. '
' → logprob: -9.252655982971191
    8. '<|end|>' → logprob: -9.752655982971191
    9. '```' → logprob: -10.127655982971191
    10. 'if' → logprob: -10.502655982971191

Token 120: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.759712815284729
    2. 'if' (adapté à ' if') → logprob: -0.759712815284729
    3. ' if' → logprob: -2.8847126960754395
    4. '       ' → logprob: -5.3847126960754395
    5. 'dp' → logprob: -5.6347126960754395
    6. '   ' → logprob: -8.384713172912598
    7. ' dp' → logprob: -10.384713172912598
    8. 'elif' → logprob: -10.884713172912598
    9. '          ' → logprob: -11.134713172912598
    10. '    ' → logprob: -11.259713172912598

Token 121: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.014326033182442188
    2. ' (' → logprob: -4.264326095581055
    3. '(j' → logprob: -8.889326095581055
    4. '   ' → logprob: -11.139326095581055
    5. '(' → logprob: -12.139326095581055
    6. ' ' → logprob: -13.139326095581055
    7. '(not' → logprob: -13.389326095581055
    8. '(ii' → logprob: -14.639326095581055
    9. ' not' → logprob: -14.764326095581055
    10. '  ' → logprob: -15.639326095581055

Token 122: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.3306015716807451e-05
    2. ' i' → logprob: -11.37501335144043
    3. '   ' → logprob: -13.75001335144043
    4. '
' → logprob: -15.62501335144043
    5. '(i' → logprob: -16.12501335144043
    6. ')' → logprob: -16.12501335144043
    7. '<|end|>' → logprob: -16.25001335144043
    8. ' ' → logprob: -16.37501335144043
    9. ')i' → logprob: -17.00001335144043
    10. '[i' → logprob: -17.37501335144043

Token 123: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00606969790533185
    2. ',j' → logprob: -5.131069660186768
    3. ' ,' → logprob: -9.381070137023926
    4. ' not' → logprob: -10.756070137023926
    5. ',i' → logprob: -11.006070137023926
    6. ',
' → logprob: -12.506070137023926
    7. ',(' → logprob: -13.006070137023926
    8. ' in' → logprob: -13.381070137023926
    9. 'not' → logprob: -13.631070137023926
    10. '),(' → logprob: -13.756070137023926

Token 124: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03782709315419197
    2. ' not' → logprob: -4.037827014923096
    3. ' in' → logprob: -4.662827014923096
    4. ' )' → logprob: -5.037827014923096
    5. 'in' → logprob: -6.162827014923096
    6. 'not' → logprob: -6.537827014923096
    7. 'Not' → logprob: -14.412827491760254
    8. '   ' → logprob: -14.662827491760254
    9. ']' → logprob: -14.787827491760254
    10. ' ' → logprob: -15.412827491760254

Token 125: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7225064635276794
    2. ' not' → logprob: -1.0975065231323242
    3. 'in' → logprob: -2.097506523132324
    4. 'not' → logprob: -2.847506523132324
    5. ')' → logprob: -11.847506523132324
    6. ' ' → logprob: -12.597506523132324
    7. '	not' → logprob: -14.222506523132324
    8. ' ' → logprob: -14.972506523132324
    9. 'n' → logprob: -15.222506523132324
    10. '   ' → logprob: -15.472506523132324

Token 126: ' blocked' (ID: 35275)
  Prédit: 'blocked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocked' → logprob: -0.25195086002349854
    2. ' blocked' → logprob: -1.5019508600234985
    3. 'block' → logprob: -10.876951217651367
    4. ' block' → logprob: -13.501951217651367
    5. 'Blocked' → logprob: -14.376951217651367
    6. '   ' → logprob: -15.376951217651367
    7. 'blocking' → logprob: -16.376951217651367
    8. '```' → logprob: -16.376951217651367
    9. '	block' → logprob: -16.501951217651367
    10. ' blocking' → logprob: -16.501951217651367

Token 127: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0358976386487484
    2. ':
' → logprob: -3.410897731781006
    3. '           ' → logprob: -6.910897731781006
    4. ' or' → logprob: -7.285897731781006
    5. '       ' → logprob: -8.035897254943848
    6. '               ' → logprob: -8.910897254943848
    7. 'continue' → logprob: -10.285897254943848
    8. ' continue' → logprob: -10.785897254943848
    9. '==' → logprob: -11.285897254943848
    10. '=' → logprob: -11.535897254943848

Token 128: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5522336363792419
    2. ':' → logprob: -0.9272336363792419
    3. ':
' → logprob: -3.9272336959838867
    4. '           ' → logprob: -4.802233695983887
    5. ' or' → logprob: -8.677233695983887
    6. ',' → logprob: -9.177233695983887
    7. ' continue' → logprob: -9.302233695983887
    8. '):
' → logprob: -9.302233695983887
    9. '):' → logprob: -10.052233695983887
    10. 'continue' → logprob: -10.052233695983887

Token 129: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0452306866645813
    2. ' dp' → logprob: -3.1702306270599365
    3. '               ' → logprob: -7.045230865478516
    4. 'continue' → logprob: -7.045230865478516
    5. '           ' → logprob: -8.045230865478516
    6. ' continue' → logprob: -9.170230865478516
    7. '	dp' → logprob: -10.170230865478516
    8. '   ' → logprob: -11.295230865478516
    9. '                   ' → logprob: -12.420230865478516
    10. ' ' → logprob: -13.295230865478516

Token 130: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.45848218582978e-06
    2. '][' → logprob: -13.87500286102295
    3. '[I' → logprob: -14.87500286102295
    4. '[' → logprob: -15.25000286102295
    5. '```' → logprob: -15.37500286102295
    6. '[j' → logprob: -15.37500286102295
    7. ' [' → logprob: -16.500001907348633
    8. '\[' → logprob: -16.750001907348633
    9. 'i' → logprob: -17.125001907348633
    10. '[int' → logprob: -18.000001907348633

Token 131: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005119257839396596
    2. '[i' → logprob: -7.62551212310791
    3. ']' → logprob: -11.25051212310791
    4. ' ][' → logprob: -11.62551212310791
    5. '   ' → logprob: -13.75051212310791
    6. '"][' → logprob: -15.25051212310791
    7. '[j' → logprob: -16.000511169433594
    8. '```' → logprob: -16.375511169433594
    9. ''][' → logprob: -16.500511169433594
    10. ']][' → logprob: -16.875511169433594

Token 132: 'j' (ID: 73)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002646735229063779
    2. 'j' → logprob: -8.250265121459961
    3. ' ' → logprob: -12.750265121459961
    4. ']' → logprob: -15.125265121459961
    5. '   ' → logprob: -17.12526512145996
    6. '=' → logprob: -17.62526512145996
    7. ')' → logprob: -18.12526512145996
    8. '[j' → logprob: -18.12526512145996
    9. ']=' → logprob: -18.50026512145996
    10. ' j' → logprob: -18.62526512145996

Token 133: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.03990587219595909
    2. ']' → logprob: -3.2899057865142822
    3. '=' → logprob: -6.289906024932861
    4. ')=' → logprob: -13.539905548095703
    5. ']+=' → logprob: -13.539905548095703
    6. ']=-' → logprob: -13.539905548095703
    7. ' ]' → logprob: -13.914905548095703
    8. '']=' → logprob: -14.164905548095703
    9. ']==' → logprob: -14.414905548095703
    10. ']=(' → logprob: -14.789905548095703

Token 134: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. '   ' → logprob: -16.12500762939453
    4. '-' → logprob: -18.00000762939453
    5. '  ' → logprob: -18.50000762939453
    6. '000' → logprob: -19.12500762939453
    7. ' -' → logprob: -19.50000762939453
    8. '00' → logprob: -19.50000762939453
    9. '    ' → logprob: -20.62500762939453
    10. 'max' → logprob: -20.75000762939453

Token 135: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005445729475468397
    2. 'else' → logprob: -8.000544548034668
    3. 'elif' → logprob: -8.875544548034668
    4. ' else' → logprob: -10.375544548034668
    5. '               ' → logprob: -10.375544548034668
    6. ' elif' → logprob: -12.375544548034668
    7. '	       ' → logprob: -14.000544548034668
    8. '		' → logprob: -14.500544548034668
    9. '```' → logprob: -14.875544548034668
    10. '       ' → logprob: -15.250544548034668

Token 136: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018739051884040236
    2. 'else' → logprob: -6.501873970031738
    3. 'elif' → logprob: -8.251873970031738
    4. ' else' → logprob: -9.626873970031738
    5. '               ' → logprob: -10.376873970031738
    6. ' elif' → logprob: -11.626873970031738
    7. '```' → logprob: -13.001873970031738
    8. 'continue' → logprob: -14.501873970031738
    9. '	       ' → logprob: -14.751873970031738
    10. '       ' → logprob: -14.876873970031738

Token 137: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5950726270675659
    2. '           ' → logprob: -0.8450726270675659
    3. ' else' → logprob: -4.0950727462768555
    4. 'elif' → logprob: -6.0950727462768555
    5. ' elif' → logprob: -10.220072746276855
    6. '       ' → logprob: -12.970072746276855
    7. '               ' → logprob: -13.470072746276855
    8. '   ' → logprob: -14.220072746276855
    9. '          ' → logprob: -14.345072746276855
    10. '	else' → logprob: -14.470072746276855

Token 138: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10250458121299744
    2. ':
' → logprob: -2.8525044918060303
    3. ':' → logprob: -3.4775044918060303
    4. '           ' → logprob: -5.477504730224609
    5. ' dp' → logprob: -5.977504730224609
    6. 'dp' → logprob: -7.477504730224609
    7. '                   ' → logprob: -7.852504730224609
    8. '                       ' → logprob: -8.22750473022461
    9. '                ' → logprob: -8.85250473022461
    10. ' if' → logprob: -9.35250473022461

Token 139: '               ' (ID: 506)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.30685585737228394
    2. '               ' → logprob: -1.8068559169769287
    3. 'dp' → logprob: -2.3068559169769287
    4. '           ' → logprob: -8.306856155395508
    5. '   ' → logprob: -9.681856155395508
    6. '	dp' → logprob: -9.681856155395508
    7. '                   ' → logprob: -10.306856155395508
    8. '(dp' → logprob: -10.681856155395508
    9. '                ' → logprob: -10.931856155395508
    10. '                       ' → logprob: -11.431856155395508

Token 140: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.03804229199886322
    2. ' dp' → logprob: -3.2880423069000244
    3. '                   ' → logprob: -14.788042068481445
    4. '
' → logprob: -15.538042068481445
    5. '               ' → logprob: -15.788042068481445
    6. '(dp' → logprob: -16.538042068481445
    7. '	dp' → logprob: -17.038042068481445
    8. '   ' → logprob: -17.288042068481445
    9. '_dp' → logprob: -19.538042068481445
    10. ' ' → logprob: -19.663042068481445

Token 141: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[I' → logprob: -15.125
    3. '[' → logprob: -17.5
    4. '\[' → logprob: -17.75
    5. '```' → logprob: -18.125
    6. '[j' → logprob: -18.125
    7. '][' → logprob: -18.125
    8. ' [' → logprob: -19.0
    9. 'i' → logprob: -19.125
    10. '   ' → logprob: -19.875

Token 142: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006851650308817625
    2. '[i' → logprob: -5.006851673126221
    3. '-' → logprob: -9.131851196289062
    4. ' ][' → logprob: -11.631851196289062
    5. '"][' → logprob: -12.006851196289062
    6. '[' → logprob: -12.881851196289062
    7. ''][' → logprob: -13.131851196289062
    8. '[j' → logprob: -13.131851196289062
    9. ']' → logprob: -13.631851196289062
    10. '   ' → logprob: -13.756851196289062

Token 143: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -9.968312951968983e-06
    2. '[j' → logprob: -12.750009536743164
    3. ' j' → logprob: -12.875009536743164
    4. '1' → logprob: -13.625009536743164
    5. 'i' → logprob: -13.625009536743164
    6. '-' → logprob: -14.125009536743164
    7. '   ' → logprob: -14.250009536743164
    8. '(j' → logprob: -15.125009536743164
    9. '][' → logprob: -16.250009536743164
    10. ']' → logprob: -16.750009536743164

Token 144: ']=' (ID: 9539)
  Prédit: ']+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.4564119279384613
    2. ']=' → logprob: -1.2064119577407837
    3. ']' → logprob: -2.706411838531494
    4. ']=(' → logprob: -7.956411838531494
    5. ']+' → logprob: -9.956412315368652
    6. ']={' → logprob: -13.831412315368652
    7. ' ]' → logprob: -14.706412315368652
    8. '=' → logprob: -14.706412315368652
    9. '"]=' → logprob: -14.706412315368652
    10. ']="' → logprob: -14.831412315368652

Token 145: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0017024369444698095
    2. '(dp' → logprob: -6.626702308654785
    3. ' dp' → logprob: -8.376702308654785
    4. 'max' → logprob: -9.001702308654785
    5. '(' → logprob: -11.251702308654785
    6. ' (' → logprob: -12.626702308654785
    7. '	dp' → logprob: -13.626702308654785
    8. '   ' → logprob: -13.751702308654785
    9. '0' → logprob: -14.126702308654785
    10. '(max' → logprob: -14.251702308654785

Token 146: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.896309739408025e-07
    2. 'i' → logprob: -15.000000953674316
    3. '```' → logprob: -15.250000953674316
    4. '[I' → logprob: -16.0
    5. '\[' → logprob: -18.875
    6. ' [' → logprob: -19.25
    7. '(i' → logprob: -19.5
    8. '][' → logprob: -19.625
    9. '
' → logprob: -19.75
    10. '   ' → logprob: -19.75

Token 147: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.034308839589357376
    2. '][' → logprob: -3.534308910369873
    3. ' -' → logprob: -5.534308910369873
    4. '[i' → logprob: -8.409308433532715
    5. '[j' → logprob: -8.534308433532715
    6. ' [' → logprob: -9.909308433532715
    7. '```' → logprob: -9.909308433532715
    8. '   ' → logprob: -10.659308433532715
    9. '[' → logprob: -10.659308433532715
    10. ' ][' → logprob: -12.159308433532715

Token 148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.125006675720215
    3. '][' → logprob: -14.875006675720215
    4. 'j' → logprob: -15.375006675720215
    5. '[j' → logprob: -16.0000057220459
    6. '   ' → logprob: -16.7500057220459
    7. '```' → logprob: -17.0000057220459
    8. ',j' → logprob: -17.7500057220459
    9. '0' → logprob: -17.8750057220459
    10. '       ' → logprob: -18.5000057220459

Token 149: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -4.1557283111615106e-05
    2. '[j' → logprob: -10.250041961669922
    3. '"][' → logprob: -12.750041961669922
    4. ' ][' → logprob: -13.875041961669922
    5. ']' → logprob: -14.500041961669922
    6. '   ' → logprob: -14.625041961669922
    7. '```' → logprob: -14.625041961669922
    8. ''][' → logprob: -15.000041961669922
    9. '[' → logprob: -15.875041961669922
    10. '}[' → logprob: -16.250041961669922

Token 150: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00035453110467642546
    2. '[j' → logprob: -8.000354766845703
    3. '][' → logprob: -11.250354766845703
    4. ' j' → logprob: -12.250354766845703
    5. '	j' → logprob: -14.250354766845703
    6. ',j' → logprob: -15.250354766845703
    7. '   ' → logprob: -15.750354766845703
    8. '```' → logprob: -16.375354766845703
    9. ']' → logprob: -17.500354766845703
    10. '       ' → logprob: -17.500354766845703

Token 151: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.04046858847141266
    2. ']' → logprob: -3.290468692779541
    3. '+' → logprob: -6.040468692779541
    4. ' +' → logprob: -10.665468215942383
    5. ' ]' → logprob: -11.040468215942383
    6. ']+=' → logprob: -13.165468215942383
    7. '}+' → logprob: -13.665468215942383
    8. ')+' → logprob: -14.290468215942383
    9. '+]' → logprob: -15.040468215942383
    10. ']
' → logprob: -16.290468215942383

Token 152: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.001170225441455841
    2. ' dp' → logprob: -6.7511701583862305
    3. '	dp' → logprob: -19.126171112060547
    4. '(dp' → logprob: -19.876171112060547
    5. '_dp' → logprob: -20.626171112060547
    6. '           ' → logprob: -20.626171112060547
    7. 'd' → logprob: -21.126171112060547
    8. '               ' → logprob: -21.251171112060547
    9. '
' → logprob: -21.251171112060547
    10. ' ' → logprob: -21.376171112060547

Token 153: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -15.500000953674316
    3. ' [' → logprob: -16.375
    4. '[' → logprob: -16.75
    5. 'i' → logprob: -17.25
    6. '[I' → logprob: -17.625
    7. '`' → logprob: -17.75
    8. '][' → logprob: -18.375
    9. '   ' → logprob: -19.125
    10. '``' → logprob: -19.625

Token 154: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.030356058850884438
    2. '-' → logprob: -3.5303561687469482
    3. '[j' → logprob: -8.030356407165527
    4. '[i' → logprob: -8.530356407165527
    5. ' ][' → logprob: -10.780356407165527
    6. '"][' → logprob: -11.155356407165527
    7. '[' → logprob: -11.405356407165527
    8. ''][' → logprob: -11.905356407165527
    9. ' -' → logprob: -12.030356407165527
    10. '1' → logprob: -12.030356407165527

Token 155: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.896309739408025e-07
    2. ' j' → logprob: -14.125000953674316
    3. '[j' → logprob: -17.375
    4. '   ' → logprob: -18.125
    5. '```' → logprob: -19.5
    6. '	j' → logprob: -20.625
    7. ' ' → logprob: -21.5
    8. '-' → logprob: -21.5
    9. '$j' → logprob: -21.5
    10. '  ' → logprob: -22.125

Token 156: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.128163257315464e-07
    2. ' -' → logprob: -15.25
    3. '1' → logprob: -20.5
    4. '```' → logprob: -20.875
    5. ']-' → logprob: -21.25
    6. '[' → logprob: -22.125
    7. '-
' → logprob: -22.5
    8. '   ' → logprob: -22.75
    9. ''-' → logprob: -23.0
    10. '−' → logprob: -23.125

Token 157: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '-' → logprob: -16.625
    4. '   ' → logprob: -17.75
    5. '```' → logprob: -17.875
    6. '<|end|>' → logprob: -19.5
    7. '۱' → logprob: -19.75
    8. ']' → logprob: -19.875
    9. '১' → logprob: -20.375
    10. '  ' → logprob: -20.6875

Token 158: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6191491484642029
    2. ')' → logprob: -1.3691492080688477
    3. '<|end|>' → logprob: -1.6191492080688477
    4. '}' → logprob: -4.869149208068848
    5. '<|end|>' → logprob: -6.994149208068848
    6. '```' → logprob: -8.244149208068848
    7. ')]' → logprob: -9.119149208068848
    8. '   ' → logprob: -10.369149208068848
    9. '']' → logprob: -10.494149208068848
    10. ']
' → logprob: -10.744149208068848

Token 159: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25307002663612366
    2. 'print' → logprob: -1.5030699968338013
    3. '
' → logprob: -6.878069877624512
    4. ' print' → logprob: -10.128069877624512
    5. '    
' → logprob: -10.128069877624512
    6. '```' → logprob: -11.003069877624512
    7. '       ' → logprob: -12.628069877624512
    8. '<|end|>' → logprob: -12.878069877624512
    9. '	print' → logprob: -13.003069877624512
    10. '  
' → logprob: -13.378069877624512

Token 160: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.011637861840426922
    2. '   ' → logprob: -4.5116376876831055
    3. ' print' → logprob: -7.5116376876831055
    4. '
' → logprob: -10.386637687683105
    5. '```' → logprob: -11.511637687683105
    6. '    
' → logprob: -14.386637687683105
    7. '#print' → logprob: -14.636637687683105
    8. '	print' → logprob: -14.886637687683105
    9. 'if' → logprob: -15.886637687683105
    10. ' ' → logprob: -16.136638641357422

Token 161: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.00037311585037969053
    2. '(' → logprob: -8.000372886657715
    3. 'dp' → logprob: -10.875372886657715
    4. ' (' → logprob: -11.000372886657715
    5. ' dp' → logprob: -14.500372886657715
    6. '(
' → logprob: -14.625372886657715
    7. '((' → logprob: -15.000372886657715
    8. '(max' → logprob: -15.375372886657715
    9. '()' → logprob: -15.500372886657715
    10. '(df' → logprob: -16.12537384033203

Token 162: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.9361264946837764e-07
    2. '[-' → logprob: -16.25
    3. '[A' → logprob: -17.375
    4. 'a' → logprob: -17.75
    5. '[b' → logprob: -18.0
    6. '[' → logprob: -18.25
    7. '[i' → logprob: -18.75
    8. ')[' → logprob: -19.0
    9. '   ' → logprob: -19.0
    10. '[
' → logprob: -20.25

Token 163: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -1.4736459888808895e-05
    2. ' ][' → logprob: -12.125014305114746
    3. ']' → logprob: -12.250014305114746
    4. '[' → logprob: -12.875014305114746
    5. '"][' → logprob: -14.750014305114746
    6. '   ' → logprob: -15.000014305114746
    7. ''][' → logprob: -15.250014305114746
    8. '-' → logprob: -15.625014305114746
    9. '[a' → logprob: -15.875014305114746
    10. ']
' → logprob: -16.125015258789062

Token 164: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.704273118884885e-07
    2. ' b' → logprob: -14.375000953674316
    3. '   ' → logprob: -19.5
    4. ' ' → logprob: -20.625
    5. '	b' → logprob: -21.0
    6. '  ' → logprob: -21.25
    7. '1' → logprob: -22.125
    8. ')b' → logprob: -23.5
    9. '    ' → logprob: -23.75
    10. 'a' → logprob: -23.875

Token 165: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.515961285913363e-05
    2. '])' → logprob: -10.250064849853516
    3. '})' → logprob: -11.000064849853516
    4. '))' → logprob: -11.500064849853516
    5. '`)' → logprob: -14.250064849853516
    6. ')
' → logprob: -14.500064849853516
    7. ' )' → logprob: -14.500064849853516
    8. '())' → logprob: -14.750064849853516
    9. '）' → logprob: -15.250064849853516
    10. ')`' → logprob: -15.375064849853516


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 163
Tokens correctement prédits (1ère position, stricte): 93
Tokens correctement prédits (1ère position, avec adaptation): 100
Tokens correctement prédits (top 10): 152
Précision stricte (1ère position): 57.06%
Précision adaptée (1ère position): 61.35%
Précision (top 10): 93.25%
================================================================================
