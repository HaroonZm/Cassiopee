================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

def read_ints():
    return list(map(int, sys.stdin.readline().split()))

def dist_point_point(a, b):
    # distance between two points a,b each a tuple (x,y)
    return math.hypot(a[0]-b[0], a[1]-b[1])

def dist_point_segment(px, py, ax, ay, bx, by):
    # Distance from point p=(px,py) to segment ab=((ax,ay),(bx,by))
    # Compute projection t of p on ab, clamp between 0 and 1
    dx, dy = bx - ax, by - ay
    if dx == 0 and dy == 0:
        return dist_point_point((px,py), (ax,ay))
    t = ((px - ax)*dx + (py - ay)*dy) / (dx*dx + dy*dy)
    t = max(0, min(1, t))
    projx = ax + t*dx
    projy = ay + t*dy
    return dist_point_point((px,py), (projx, projy))

def dist_segment_segment(a1, a2, b1, b2):
    # distance between two 2D segments a1a2 and b1b2
    # check endpoints to other segment distances, plus segments intersecting consider 0
    if segments_intersect_2d(a1,a2,b1,b2):
        return 0.0
    d1 = dist_point_segment(a1[0],a1[1], b1[0],b1[1], b2[0],b2[1])
    d2 = dist_point_segment(a2[0],a2[1], b1[0],b1[1], b2[0],b2[1])
    d3 = dist_point_segment(b1[0],b1[1], a1[0],a1[1], a2[0],a2[1])
    d4 = dist_point_segment(b2[0],b2[1], a1[0],a1[1], a2[0],a2[1])
    return min(d1, d2, d3, d4)

def segments_intersect_2d(p1, p2, q1, q2):
    # Checks if 2 segments (p1-p2) and (q1-q2) intersect in 2D
    def ccw(a,b,c):
        return (c[1]-a[1])*(b[0]-a[0]) > (b[1]-a[1])*(c[0]-a[0])
    A,B,C,D = p1,p2,q1,q2
    return (ccw(A,C,D) != ccw(B,C,D)) and (ccw(A,B,C) != ccw(A,B,D))

def point_in_rect(x,y, rx1, ry1, rx2, ry2):
    return rx1 <= x <= rx2 and ry1 <= y <= ry2

def line_segment_intersects_rect(ax, ay, bx, by, rx1, ry1, rx2, ry2):
    # Check if line segment ab intersects rectangle defined by corners rx1,ry1 and rx2,ry2
    # Check if either segment endpoint inside rect
    if point_in_rect(ax, ay, rx1, ry1, rx2, ry2) or point_in_rect(bx, by, rx1, ry1, rx2, ry2):
        return True
    # Rect edges
    rect_edges = [
        ((rx1, ry1), (rx2, ry1)),
        ((rx2, ry1), (rx2, ry2)),
        ((rx2, ry2), (rx1, ry2)),
        ((rx1, ry2), (rx1, ry1))
    ]
    for (ex1, ey1), (ex2, ey2) in rect_edges:
        if segments_intersect_2d((ax,ay), (bx,by), (ex1,ey1), (ex2,ey2)):
            return True
    return False

def vertical_distance_block(ball_x, ball_y, r, block):
    # Calculate the vertical clearance needed to roll the ball without collision with this block
    # The ball is a sphere radius r with bottom point on course line at (ball_x, ball_y)
    # Check 3D minimal distance between ball surface and block
    # Block bottom rectangle: (minx,miny), (maxx,maxy) and height h
    
    # Since both ball and block fixed on ground plane, 
    # minimal distance between ball center and block is horizontal distance to block + vertical part
    
    minx, miny, maxx, maxy, h = block
    
    # Clamp ball center x,y to block bottom rectangle for nearest horizontal point
    cx = ball_x
    cy = ball_y
    
    # Horizontal distance from ball center to block volume in xy projection:
    dx = 0
    if cx < minx:
        dx = minx - cx
    elif cx > maxx:
        dx = cx - maxx
    dy = 0
    if cy < miny:
        dy = miny - cy
    elif cy > maxy:
        dy = cy - maxy
    
    horizontal_dist = math.hypot(dx, dy)
    # Ball center is at (ball_x, ball_y, r) (since bottom at plane z=0)
    # Block from z=0 to z=h
    # Vertical distance between ball center and block vertical faces:
    # If horizontal_dist >= r, ball cannot touch block horizontally
    # Otherwise vertical distance must be > vertical overlap
    
    # If horizontal_dist >= r, minimal distance on z-axis is zero (ball does not horizontally overlap block)
    # Else ball horizontally overlaps, ball top point at height r+r=2r at max, ball bottom at 0
    # Block bottom at 0 top at h
    # For collision, sphere surface cannot intersect block volume:
    # Minimal vertical distance between ball center and block top is r - h if ball overlaps horizontally
    
    # Actually, the minimal distance between ball surface and block is minimal distance between sphere surface and block volume.
    # We want radius r such that:
    # sqrt(horizontal_dist^2 + vertical_dist^2) >= r
    # vertical_dist = max(0, h - r)
    # Because ball center at height r, block height h
    
    # So if horizontal_dist >= r: no horizontal overlap, vertical safe
    # If horizontal_dist < r: vertical space must satisfy (r - h) <= 0 -> r <= h
    
    # So the minimal radius r must satisfy:
    # horizontal_dist^2 + max(0,h - r)^2 >= r^2
    
    # We'll check feasibility in main function rather than here
    
    return horizontal_dist, h

def course_line_intersects_block(sx, sy, ex, ey, block):
    # Check if bottom sphere point trajectory line segment intersects block bottom rectangle (projection)
    minx, miny, maxx, maxy, h = block
    return line_segment_intersects_rect(sx, sy, ex, ey, minx, miny, maxx, maxy)

def max_radius_feasible(r, sx, sy, ex, ey, blocks):
    # For given radius r, check if ball can roll from start to end
    # without collision
    
    # The ball center path is offset r above bottom point on plane z=0,
    # but bottom point moves along straight line (sx,sy)-(ex,ey)
    
    # The ball bottom never leaves the course line segment.
    # Check the ball does not collide with any block
    
    # The ball center is at height r, its horizontal position is on the line from start to end
    
    # For continuous collision checking on path, since ball moves on straight line,
    # we can check the minimal distance between ball center path segment and block volume
    
    # Approach:
    # For each block, compute minimal horizontal distance from line segment (sx,sy)-(ex,ey)
    # to block bottom rectangle
    # Let this minimal horizontal distance be d_h
    # Let block height be h
    
    # The vertical distance between ball center and block top is r - h (ball center at height r)
    # The ball surface can not intersect the block, so:
    # minimal distance between ball center and block >= r
    # minimal distance^2 = d_h^2 + max(0, h - r)^2 >= r^2
    
    # Rearranged: d_h^2 >= r^2 - max(0,h - r)^2
    
    # Note max(0,h-r) = height distance if h > r, else 0
    
    # We must check this for all blocks
    
    ax, ay = sx, sy
    bx, by = ex, ey
    
    for block in blocks:
        minx, miny, maxx, maxy, h = block
        d_h = dist_segment_rectangle_2d((ax,ay),(bx,by), (minx,miny,maxx,maxy))
        
        # Compute vertical part
        vert_gap = max(0, h - r)
        lhs = d_h*d_h
        rhs = r*r - vert_gap*vert_gap
        # For feasibility rhs must be <= lhs
        # If rhs <= 0, automatically feasible (ball radius smaller than block height)
        # But if rhs > lhs -> no feasibility
        if rhs > lhs + 1e-14:
            return False
    return True

def dist_point_rectangle(px, py, rx1, ry1, rx2, ry2):
    # distance from point to rectangle
    dx = 0
    if px < rx1:
        dx = rx1 - px
    elif px > rx2:
        dx = px - rx2
    dy = 0
    if py < ry1:
        dy = ry1 - py
    elif py > ry2:
        dy = py - ry2
    return math.hypot(dx, dy)

def dist_segment_rectangle_2d(seg_a, seg_b, rect):
    # segment points: seg_a = (x1,y1), seg_b = (x2,y2)
    # rectangle: (minx, miny, maxx, maxy)
    minx, miny, maxx, maxy = rect
    
    x1,y1 = seg_a
    x2,y2 = seg_b
    
    # If segment intersects rectangle, dist=0
    if line_segment_intersects_rect(x1,y1,x2,y2,minx,miny,maxx,maxy):
        return 0.0
    
    # Else dist = minimal distance between segment and rectangle edges or vertices
    
    # 1) Check all segment points to rectangle:
    d1 = dist_point_rectangle(x1,y1,minx,miny,maxx,maxy)
    d2 = dist_point_rectangle(x2,y2,minx,miny,maxx,maxy)
    
    # 2) Check rectangle corners to segment
    corners = [(minx,miny), (maxx,miny), (maxx,maxy), (minx,maxy)]
    d3 = min(dist_point_segment(cx, cy, x1, y1, x2, y2) for cx,cy in corners)
    
    return min(d1,d2,d3)

def solve_dataset():
    while True:
        N_line = sys.stdin.readline()
        if not N_line:
            break
        N_line = N_line.strip()
        if N_line == '0':
            break
        N = int(N_line)
        sx, sy, ex, ey = read_ints()
        blocks = []
        for _ in range(N):
            minx, miny, maxx, maxy, h = read_ints()
            blocks.append((minx, miny, maxx, maxy, h))
        
        # First check if course line intersects any block's bottom surface
        # if yes, largest radius = 0
        intersects_line = False
        for block in blocks:
            if course_line_intersects_block(sx, sy, ex, ey, block):
                intersects_line = True
                break
        
        if intersects_line:
            print(0)
            continue
        
        # Binary search largest radius r in [0,1000]
        low = 0.0
        high = 1000.0
        
        for _ in range(100):
            mid = (low + high)/2
            if max_radius_feasible(mid, sx, sy, ex, ey, blocks):
                low = mid
            else:
                high = mid
        
        print(low)

if __name__ == '__main__':
    solve_dataset()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.433769166469574
    2. '.' → logprob: -1.1837692260742188
    3. 'import' → logprob: -4.183769226074219
    4. '\' → logprob: -4.433769226074219
    5. 'newline' → logprob: -5.183769226074219
    6. '<|end|>' → logprob: -5.558769226074219
    7. '
' → logprob: -5.933769226074219
    8. '```' → logprob: -6.558769226074219
    9. '' → logprob: -7.058769226074219
    10. '<|end|>' → logprob: -7.308769226074219

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0006273718317970634
    2. 'os' → logprob: -7.375627517700195
    3. ' re' → logprob: -15.375627517700195
    4. ' math' → logprob: -15.500627517700195
    5. '_os' → logprob: -15.750627517700195
    6. '"os' → logprob: -15.875627517700195
    7. ' json' → logprob: -16.250627517700195
    8. '	os' → logprob: -17.250627517700195
    9. ' ' → logprob: -18.125627517700195
    10. ' argparse' → logprob: -18.125627517700195

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.33956411480903625
    2. '\n' → logprob: -2.339564085006714
    3. 'import' → logprob: -2.714564085006714
    4. '
' → logprob: -3.089564085006714
    5. '\' → logprob: -3.214564085006714
    6. '```' → logprob: -4.339564323425293
    7. '

' → logprob: -4.589564323425293
    8. '' → logprob: -5.714564323425293
    9. '<|end|>' → logprob: -5.839564323425293
    10. ',' → logprob: -5.839564323425293

Token 6: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.054233431816101
    2. '\' → logprob: -1.429233431816101
    3. 'import' → logprob: -2.1792335510253906
    4. '\n' → logprob: -2.1792335510253906
    5. '```' → logprob: -2.4292335510253906
    6. 'def' → logprob: -3.4292335510253906
    7. '
' → logprob: -4.179233551025391
    8. ',' → logprob: -4.679233551025391
    9. '`' → logprob: -4.929233551025391
    10. '*' → logprob: -4.929233551025391

Token 7: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02089628390967846
    2. ' calculate' → logprob: -4.5208964347839355
    3. '_' → logprob: -5.2708964347839355
    4. ' space' → logprob: -6.3958964347839355
    5. ' factorial' → logprob: -6.6458964347839355
    6. ' compute' → logprob: -8.145895957946777
    7. ' my' → logprob: -8.770895957946777
    8. ' math' → logprob: -9.020895957946777
    9. ' e' → logprob: -9.270895957946777
    10. ' add' → logprob: -9.395895957946777

Token 8: '_int' (ID: 12285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.31732502579689026
    2. '(' → logprob: -1.3173249959945679
    3. '_line' → logprob: -5.942325115203857
    4. ' (' → logprob: -7.817325115203857
    5. '_data' → logprob: -8.3173246383667
    6. '_input' → logprob: -8.6923246383667
    7. '_space' → logprob: -9.0673246383667
    8. ':' → logprob: -10.0673246383667
    9. '```' → logprob: -10.0673246383667
    10. '_token' → logprob: -10.3173246383667

Token 9: 's' (ID: 82)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028591416776180267
    2. '():' → logprob: -3.9035913944244385
    3. 's' → logprob: -5.653591632843018
    4. '):' → logprob: -6.403591632843018
    5. '_' → logprob: -7.278591632843018
    6. ':' → logprob: -7.403591632843018
    7. '(":' → logprob: -7.903591632843018
    8. '(:' → logprob: -8.40359115600586
    9. ' (' → logprob: -8.77859115600586
    10. '(s' → logprob: -8.90359115600586

Token 10: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008667988586239517
    2. '():' → logprob: -7.500866889953613
    3. '("("' → logprob: -9.000866889953613
    4. ' (' → logprob: -9.500866889953613
    5. '()' → logprob: -10.375866889953613
    6. '```' → logprob: -11.000866889953613
    7. '<|end|>' → logprob: -11.000866889953613
    8. '('' → logprob: -12.125866889953613
    9. '(prompt' → logprob: -12.625866889953613
    10. '(
' → logprob: -12.750866889953613

Token 11: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0036626679357141256
    2. '(' → logprob: -6.753662586212158
    3. ' ():' → logprob: -7.003662586212158
    4. ':' → logprob: -7.628662586212158
    5. '):' → logprob: -7.878662586212158
    6. '()' → logprob: -8.878663063049316
    7. '   ' → logprob: -9.128663063049316
    8. '():
' → logprob: -9.503663063049316
    9. ':return' → logprob: -9.628663063049316
    10. '[:]' → logprob: -9.628663063049316

Token 12: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7106940150260925
    2. ' return' → logprob: -0.9606940150260925
    3. '   ' → logprob: -2.0856940746307373
    4. ' ' → logprob: -7.460693836212158
    5. '	return' → logprob: -7.585693836212158
    6. '    ' → logprob: -8.710694313049316
    7. '[' → logprob: -8.710694313049316
    8. '[]' → logprob: -9.335694313049316
    9. '(' → logprob: -9.960694313049316
    10. ' []' → logprob: -10.210694313049316

Token 13: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.007946106605231762
    2. 'list' → logprob: -5.132946014404297
    3. ' map' → logprob: -6.257946014404297
    4. '[' → logprob: -10.382946014404297
    5. ' [' → logprob: -10.632946014404297
    6. 'map' → logprob: -10.882946014404297
    7. ' ' → logprob: -10.882946014404297
    8. '[list' → logprob: -12.382946014404297
    9. ' []' → logprob: -13.882946014404297
    10. ' sys' → logprob: -14.382946014404297

Token 14: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.014233083464205265
    2. '(' → logprob: -4.264233112335205
    3. '(int' → logprob: -9.639232635498047
    4. '(sys' → logprob: -13.014232635498047
    5. ' map' → logprob: -14.764232635498047
    6. '(eval' → logprob: -14.889232635498047
    7. '(
' → logprob: -15.264232635498047
    8. '(

' → logprob: -15.514232635498047
    9. '(range' → logprob: -15.639232635498047
    10. '(input' → logprob: -15.764232635498047

Token 15: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0002625278721097857
    2. 'int' → logprob: -8.875262260437012
    3. '(' → logprob: -9.375262260437012
    4. '<int' → logprob: -10.375262260437012
    5. '=int' → logprob: -13.000262260437012
    6. ',int' → logprob: -13.375262260437012
    7. ' int' → logprob: -13.875262260437012
    8. '```' → logprob: -14.250262260437012
    9. '[int' → logprob: -14.625262260437012
    10. '	int' → logprob: -15.250262260437012

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6455799341201782
    2. '(sys' → logprob: -0.7705799341201782
    3. ',input' → logprob: -4.645579814910889
    4. '(input' → logprob: -6.770579814910889
    5. '(' → logprob: -7.145579814910889
    6. 'sys' → logprob: -7.645579814910889
    7. ' ,' → logprob: -8.270580291748047
    8. '=sys' → logprob: -8.520580291748047
    9. ' sys' → logprob: -9.645580291748047
    10. 'input' → logprob: -9.770580291748047

Token 17: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.4428640305995941
    2. ' sys' → logprob: -1.0678640604019165
    3. 'input' → logprob: -4.567863941192627
    4. ' input' → logprob: -5.692863941192627
    5. '(sys' → logprob: -8.692864418029785
    6. '=sys' → logprob: -9.317864418029785
    7. '	sys' → logprob: -10.192864418029785
    8. ')' → logprob: -12.442864418029785
    9. '```' → logprob: -12.817864418029785
    10. 'stdin' → logprob: -13.317864418029785

Token 18: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.014605913311243057
    2. '.' → logprob: -4.38960599899292
    3. '.argv' → logprob: -6.26460599899292
    4. '.stdout' → logprob: -9.014605522155762
    5. '.readline' → logprob: -10.139605522155762
    6. '.std' → logprob: -11.014605522155762
    7. ' .' → logprob: -11.639605522155762
    8. '.input' → logprob: -13.764605522155762
    9. ' stdin' → logprob: -14.014605522155762
    10. '.stderr' → logprob: -14.264605522155762

Token 19: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0027438888791948557
    2. '.read' → logprob: -6.002743721008301
    3. '.' → logprob: -8.2527437210083
    4. '.readlines' → logprob: -12.0027437210083
    5. '.buffer' → logprob: -14.5027437210083
    6. '.stdin' → logprob: -14.8777437210083
    7. ' .' → logprob: -15.6277437210083
    8. ').' → logprob: -15.7527437210083
    9. '.write' → logprob: -16.377744674682617
    10. '.)' → logprob: -16.502744674682617

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.09117338806390762
    2. '()))' → logprob: -2.4661734104156494
    3. '())' → logprob: -6.71617317199707
    4. '()' → logprob: -6.96617317199707
    5. '())))' → logprob: -10.34117317199707
    6. '))' → logprob: -10.71617317199707
    7. '()));' → logprob: -11.71617317199707
    8. ' ().' → logprob: -12.84117317199707
    9. '()[' → logprob: -13.59117317199707
    10. '()>' → logprob: -13.84117317199707

Token 21: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.004189994651824236
    2. 'rstrip' → logprob: -5.504189968109131
    3. 'split' → logprob: -9.379190444946289
    4. ' strip' → logprob: -10.754190444946289
    5. 'read' → logprob: -12.254190444946289
    6. ')' → logprob: -14.254190444946289
    7. '-strip' → logprob: -16.25419044494629
    8. '_strip' → logprob: -16.37919044494629
    9. '(strip' → logprob: -17.00419044494629
    10. '.strip' → logprob: -17.62919044494629

Token 22: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.1660337597131729
    2. '()' → logprob: -3.0410337448120117
    3. '))' → logprob: -3.0410337448120117
    4. ')))' → logprob: -3.2910337448120117
    5. '())))' → logprob: -4.041033744812012
    6. '())' → logprob: -6.416033744812012
    7. '(' → logprob: -7.291033744812012
    8. ')' → logprob: -8.541033744812012
    9. '()));' → logprob: -10.916033744812012
    10. '())))
' → logprob: -11.291033744812012

Token 23: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001502598519437015
    2. '
' → logprob: -7.501502513885498
    3. '\' → logprob: -8.126502990722656
    4. '\n' → logprob: -9.001502990722656
    5. '```' → logprob: -9.126502990722656
    6. 'n' → logprob: -9.126502990722656
    7. 'class' → logprob: -9.251502990722656
    8. 'd' → logprob: -9.501502990722656
    9. '

' → logprob: -9.876502990722656
    10. '    
' → logprob: -10.501502990722656

Token 24: ' dist' (ID: 3601)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2543695867061615
    2. ' calculate' → logprob: -2.5043694972991943
    3. ' math' → logprob: -3.2543694972991943
    4. ' compute' → logprob: -3.7543694972991943
    5. ' factorial' → logprob: -3.7543694972991943
    6. ' solve' → logprob: -4.254369735717773
    7. ' square' → logprob: -4.254369735717773
    8. ' read' → logprob: -4.629369735717773
    9. ' write' → logprob: -4.879369735717773
    10. ' is' → logprob: -5.629369735717773

Token 25: '_point' (ID: 15466)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0739598274230957
    2. '(a' → logprob: -3.3239598274230957
    3. '(x' → logprob: -3.6989598274230957
    4. '_' → logprob: -5.448959827423096
    5. 'ance' → logprob: -6.448959827423096
    6. ' (' → logprob: -7.198959827423096
    7. 'ence' → logprob: -7.823959827423096
    8. '_squared' → logprob: -7.823959827423096
    9. '("("' → logprob: -8.198959350585938
    10. 'anced' → logprob: -8.323959350585938

Token 26: '_point' (ID: 15466)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.858479380607605
    2. '_to' → logprob: -1.233479380607605
    3. '(' → logprob: -1.483479380607605
    4. '_between' → logprob: -4.4834794998168945
    5. 's' → logprob: -4.7334794998168945
    6. '(p' → logprob: -5.2334794998168945
    7. '(Point' → logprob: -5.4834794998168945
    8. '(a' → logprob: -5.6084794998168945
    9. '(x' → logprob: -5.7334794998168945
    10. '(point' → logprob: -5.9834794998168945

Token 27: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0029900595545768738
    2. '(p' → logprob: -6.502990245819092
    3. '(x' → logprob: -7.502990245819092
    4. '(a' → logprob: -7.877990245819092
    5. ' (' → logprob: -8.002989768981934
    6. '(Point' → logprob: -9.627989768981934
    7. '(point' → logprob: -10.627989768981934
    8. '(user' → logprob: -10.877989768981934
    9. '(parent' → logprob: -11.127989768981934
    10. '()' → logprob: -11.502989768981934

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011514016427099705
    2. ' ,' → logprob: -4.511514186859131
    3. ',b' → logprob: -8.386513710021973
    4. ',a' → logprob: -8.511513710021973
    5. ')' → logprob: -11.636513710021973
    6. ',p' → logprob: -12.136513710021973
    7. '[' → logprob: -12.261513710021973
    8. ',)' → logprob: -12.386513710021973
    9. '_,' → logprob: -12.886513710021973
    10. ' ' → logprob: -13.511513710021973

Token 29: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10026458650827408
    2. ' b' → logprob: -2.350264549255371
    3. ')' → logprob: -11.100264549255371
    4. ',' → logprob: -11.225264549255371
    5. ' )' → logprob: -11.475264549255371
    6. ',b' → logprob: -11.850264549255371
    7. ' ,' → logprob: -12.475264549255371
    8. ')b' → logprob: -12.725264549255371
    9. ' ' → logprob: -12.975264549255371
    10. '<|end|>' → logprob: -14.350264549255371

Token 30: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00308811292052269
    2. ')' → logprob: -5.878087997436523
    3. ' ):' → logprob: -8.753087997436523
    4. '):
' → logprob: -9.503087997436523
    5. ')):' → logprob: -10.378087997436523
    6. ',' → logprob: -11.253087997436523
    7. ' ' → logprob: -13.878087997436523
    8. '):
' → logprob: -14.128087997436523
    9. '):

' → logprob: -14.253087997436523
    10. ' )' → logprob: -14.503087997436523

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8007912039756775
    2. ' return' → logprob: -1.8007912635803223
    3. '):' → logprob: -2.1757912635803223
    4. '(' → logprob: -2.8007912635803223
    5. '.' → logprob: -3.0507912635803223
    6. ')' → logprob: -3.1757912635803223
    7. 'return' → logprob: -3.3007912635803223
    8. ':' → logprob: -3.4257912635803223
    9. ' (' → logprob: -4.175791263580322
    10. ' math' → logprob: -4.550791263580322

Token 32: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3540574014186859
    2. ' math' → logprob: -1.9790574312210083
    3. '   ' → logprob: -2.3540573120117188
    4. 'return' → logprob: -2.8540573120117188
    5. 'math' → logprob: -5.104057312011719
    6. '(math' → logprob: -6.854057312011719
    7. ' (' → logprob: -9.229057312011719
    8. 'import' → logprob: -9.979057312011719
    9. '(' → logprob: -10.729057312011719
    10. '    ' → logprob: -10.854057312011719

Token 33: ' distance' (ID: 9324)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3047654926776886
    2. ' ' → logprob: -2.679765462875366
    3. ' import' → logprob: -2.679765462875366
    4. ' math' → logprob: -3.179765462875366
    5. '    ' → logprob: -3.429765462875366
    6. 'import' → logprob: -4.304765701293945
    7. '   ' → logprob: -4.554765701293945
    8. 'return' → logprob: -4.804765701293945
    9. ' """' → logprob: -5.429765701293945
    10. ' sqrt' → logprob: -5.679765701293945

Token 34: ' between' (ID: 2870)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0524120107293129
    2. '(a' → logprob: -3.8024120330810547
    3. '=' → logprob: -4.427412033081055
    4. ' =' → logprob: -4.802412033081055
    5. ')' → logprob: -6.052412033081055
    6. ' (' → logprob: -6.302412033081055
    7. '   ' → logprob: -6.427412033081055
    8. ' between' → logprob: -6.927412033081055
    9. ',' → logprob: -7.802412033081055
    10. ':' → logprob: -8.552412033081055

Token 35: ' two' (ID: 1920)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18186448514461517
    2. ' a' → logprob: -1.8068645000457764
    3. ' points' → logprob: -6.556864261627197
    4. ' two' → logprob: -8.556864738464355
    5. 'points' → logprob: -8.806864738464355
    6. '(a' → logprob: -8.931864738464355
    7. '(' → logprob: -9.306864738464355
    8. ' (' → logprob: -10.181864738464355
    9. '   ' → logprob: -10.181864738464355
    10. ' ' → logprob: -10.306864738464355

Token 36: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.015790803357958794
    2. ' (' → logprob: -5.140790939331055
    3. '_points' → logprob: -5.515790939331055
    4. 'points' → logprob: -6.140790939331055
    5. ' ' → logprob: -6.265790939331055
    6. '(a' → logprob: -7.265790939331055
    7. ' )' → logprob: -8.140790939331055
    8. ' a' → logprob: -8.390790939331055
    9. ' point' → logprob: -8.640790939331055
    10. '(points' → logprob: -9.765790939331055

Token 37: ' a' (ID: 261)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.517876923084259
    2. '(a' → logprob: -1.0178768634796143
    3. '   ' → logprob: -4.142877101898193
    4. '(
' → logprob: -5.142877101898193
    5. ' (' → logprob: -5.642877101898193
    6. 'return' → logprob: -5.892877101898193
    7. ' =' → logprob: -6.017877101898193
    8. ':' → logprob: -6.017877101898193
    9. 'a' → logprob: -6.517877101898193
    10. ' return' → logprob: -6.517877101898193

Token 38: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23357278108596802
    2. '[' → logprob: -2.4835727214813232
    3. ' and' → logprob: -2.6085727214813232
    4. '   ' → logprob: -3.8585727214813232
    5. ')' → logprob: -3.9835727214813232
    6. ' ,' → logprob: -4.858572959899902
    7. '  ' → logprob: -7.483572959899902
    8. '.' → logprob: -7.608572959899902
    9. ' -' → logprob: -7.983572959899902
    10. ' ' → logprob: -8.108572959899902

Token 39: ' each' (ID: 2454)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.220327615737915
    2. ' =' → logprob: -1.470327615737915
    3. '):' → logprob: -1.845327615737915
    4. '[' → logprob: -2.220327615737915
    5. ')' → logprob: -2.595327615737915
    6. ':' → logprob: -2.845327615737915
    7. ',' → logprob: -4.095327377319336
    8. '=' → logprob: -4.720327377319336
    9. '**' → logprob: -4.845327377319336
    10. ' (' → logprob: -5.345327377319336

Token 40: ' a' (ID: 261)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0599749088287354
    2. ' is' → logprob: -1.1849749088287354
    3. ')' → logprob: -2.3099749088287354
    4. ' as' → logprob: -3.1849749088287354
    5. ' =' → logprob: -3.3099749088287354
    6. ' )' → logprob: -3.8099749088287354
    7. ' (' → logprob: -3.9349749088287354
    8. '[]' → logprob: -4.184974670410156
    9. ' and' → logprob: -4.309974670410156
    10. ',' → logprob: -4.434974670410156

Token 41: ' tuple' (ID: 31311)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.35395389795303345
    2. ',' → logprob: -1.6039538383483887
    3. ')' → logprob: -2.9789538383483887
    4. ' and' → logprob: -4.103953838348389
    5. ':' → logprob: -4.478953838348389
    6. ' ,' → logprob: -4.853953838348389
    7. ' ' → logprob: -5.978953838348389
    8. ' )' → logprob: -6.478953838348389
    9. '   ' → logprob: -6.603953838348389
    10. '[:]' → logprob: -6.853953838348389

Token 42: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5863286852836609
    2. ',' → logprob: -2.3363287448883057
    3. ')' → logprob: -2.4613287448883057
    4. '<|end|>' → logprob: -2.4613287448883057
    5. ' (' → logprob: -2.8363287448883057
    6. '(' → logprob: -2.9613287448883057
    7. '[' → logprob: -3.5863287448883057
    8. '('' → logprob: -4.711328506469727
    9. '<|end|>' → logprob: -5.336328506469727
    10. '.' → logprob: -5.461328506469727

Token 43: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.003866704646497965
    2. ',' → logprob: -6.878866672515869
    3. ')' → logprob: -7.003866672515869
    4. ' x' → logprob: -7.753866672515869
    5. 'float' → logprob: -8.003867149353027
    6. 'int' → logprob: -8.253867149353027
    7. ',float' → logprob: -8.378867149353027
    8. ',x' → logprob: -8.503867149353027
    9. ' ,' → logprob: -8.878867149353027
    10. '  ' → logprob: -9.628867149353027

Token 44: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021349379792809486
    2. ',y' → logprob: -4.0213494300842285
    3. '1' → logprob: -6.3963494300842285
    4. ' ,' → logprob: -6.6463494300842285
    5. '0' → logprob: -9.77134895324707
    6. 'a' → logprob: -9.89634895324707
    7. ')' → logprob: -10.27134895324707
    8. 'y' → logprob: -10.64634895324707
    9. ',a' → logprob: -10.89634895324707
    10. '[' → logprob: -11.39634895324707

Token 45: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019763342570513487
    2. '):' → logprob: -6.251976490020752
    3. '),' → logprob: -10.626976013183594
    4. ' )' → logprob: -11.876976013183594
    5. ',' → logprob: -12.001976013183594
    6. '   ' → logprob: -12.626976013183594
    7. ')
' → logprob: -13.751976013183594
    8. '):
' → logprob: -14.126976013183594
    9. ')=' → logprob: -14.501976013183594
    10. ')return' → logprob: -14.626976013183594

Token 46: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.40931588411331177
    2. '   ' → logprob: -1.409315824508667
    3. '):' → logprob: -2.534315824508667
    4. ')' → logprob: -5.909316062927246
    5. ':return' → logprob: -6.159316062927246
    6. ' return' → logprob: -6.409316062927246
    7. 'return' → logprob: -6.784316062927246
    8. '<|end|>' → logprob: -6.909316062927246
    9. '.' → logprob: -7.034316062927246
    10. '():' → logprob: -7.284316062927246

Token 47: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.8456171154975891
    2. 'math' → logprob: -1.5956170558929443
    3. ' return' → logprob: -1.9706170558929443
    4. ' math' → logprob: -2.2206170558929443
    5. '   ' → logprob: -2.8456170558929443
    6. '(math' → logprob: -3.5956170558929443
    7. ')' → logprob: -3.8456170558929443
    8. ' (' → logprob: -5.345617294311523
    9. '(' → logprob: -5.595617294311523
    10. 'import' → logprob: -5.845617294311523

Token 48: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.002081143669784069
    2. 'math' → logprob: -6.877080917358398
    3. '(math' → logprob: -7.127080917358398
    4. ' ((' → logprob: -8.627080917358398
    5. ' (' → logprob: -9.752080917358398
    6. ' ' → logprob: -12.627080917358398
    7. ' int' → logprob: -13.502080917358398
    8. '((' → logprob: -14.002080917358398
    9. '(' → logprob: -14.252080917358398
    10. '.math' → logprob: -14.627080917358398

Token 49: '.h' (ID: 1508)
  Prédit: '.sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.10067426413297653
    2. '.' → logprob: -2.3506741523742676
    3. '.dist' → logprob: -8.600674629211426
    4. '.h' → logprob: -8.600674629211426
    5. '.s' → logprob: -9.350674629211426
    6. '.Sqrt' → logprob: -12.225674629211426
    7. '.atan' → logprob: -12.475674629211426
    8. '.pow' → logprob: -13.600674629211426
    9. '.pi' → logprob: -14.350674629211426
    10. '.f' → logprob: -14.600674629211426

Token 50: 'yp' (ID: 1785)
  Prédit: 'yp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yp' → logprob: -1.318681188422488e-05
    2. 'hyp' → logprob: -12.25001335144043
    3. 'a' → logprob: -12.37501335144043
    4. 'sqrt' → logprob: -13.25001335144043
    5. 'y' → logprob: -13.62501335144043
    6. 'av' → logprob: -14.37501335144043
    7. 'at' → logprob: -15.87501335144043
    8. 'ype' → logprob: -16.50001335144043
    9. 'ath' → logprob: -16.50001335144043
    10. 'ypy' → logprob: -16.87501335144043

Token 51: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -5.490809417096898e-05
    2. 'ots' → logprob: -10.375055313110352
    3. 'o' → logprob: -11.500055313110352
    4. 'otate' → logprob: -12.375055313110352
    5. 't' → logprob: -13.125055313110352
    6. 'от' → logprob: -13.375055313110352
    7. 'otl' → logprob: -13.375055313110352
    8. '```' → logprob: -14.375055313110352
    9. 'otp' → logprob: -14.875055313110352
    10. 'otas' → logprob: -15.000055313110352

Token 52: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03435375168919563
    2. '(a' → logprob: -3.409353733062744
    3. '((' → logprob: -7.409353733062744
    4. '(
' → logprob: -9.534354209899902
    5. '('' → logprob: -11.534354209899902
    6. '(

' → logprob: -12.034354209899902
    7. '(abs' → logprob: -12.909354209899902
    8. '<|end|>' → logprob: -13.034354209899902
    9. ' (' → logprob: -13.159354209899902
    10. '(x' → logprob: -13.409354209899902

Token 53: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '0' → logprob: -17.625
    3. '[
' → logprob: -19.25
    4. 'x' → logprob: -20.875
    5. ' [' → logprob: -20.875
    6. '1' → logprob: -21.0
    7. '   ' → logprob: -21.0
    8. '-' → logprob: -21.125
    9. ',' → logprob: -21.75
    10. 'a' → logprob: -22.0

Token 54: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. '1' → logprob: -14.125000953674316
    3. '[' → logprob: -18.625
    4. ' ' → logprob: -18.75
    5. '
' → logprob: -19.375
    6. '   ' → logprob: -19.5
    7. '

' → logprob: -19.9375
    8. '۰' → logprob: -20.125
    9. '０' → logprob: -20.375
    10. '```' → logprob: -20.375

Token 55: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08905310183763504
    2. ' -' → logprob: -2.464053153991699
    3. ']' → logprob: -9.8390531539917
    4. ']-' → logprob: -10.8390531539917
    5. '[' → logprob: -11.0890531539917
    6. ' ' → logprob: -11.0890531539917
    7. '   ' → logprob: -13.0890531539917
    8. '-b' → logprob: -13.3390531539917
    9. ',' → logprob: -13.4640531539917
    10. '-,' → logprob: -14.5890531539917

Token 56: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0004306692280806601
    2. ' b' → logprob: -7.750430583953857
    3. '1' → logprob: -19.000431060791016
    4. ' ' → logprob: -19.250431060791016
    5. ')b' → logprob: -19.375431060791016
    6. '	b' → logprob: -20.250431060791016
    7. ' б' → logprob: -21.250431060791016
    8. '  ' → logprob: -21.250431060791016
    9. '<|end|>' → logprob: -21.250431060791016
    10. ')' → logprob: -21.750431060791016

Token 57: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.723352049040841e-06
    2. '0' → logprob: -12.375004768371582
    3. '1' → logprob: -15.625004768371582
    4. '[
' → logprob: -16.500003814697266
    5. '][' → logprob: -16.875003814697266
    6. ' [' → logprob: -17.625003814697266
    7. '2' → logprob: -18.375003814697266
    8. '```' → logprob: -18.562503814697266
    9. 'x' → logprob: -18.750003814697266
    10. '(' → logprob: -18.875003814697266

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. '1' → logprob: -15.625000953674316
    4. '۰' → logprob: -17.875
    5. '[' → logprob: -18.375
    6. '```' → logprob: -19.375
    7. '<|end|>' → logprob: -19.625
    8. '   ' → logprob: -19.6875
    9. ']' → logprob: -19.875
    10. ')' → logprob: -20.0625

Token 59: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027480217977426946
    2. ' ,' → logprob: -8.875274658203125
    3. '),' → logprob: -9.750274658203125
    4. ',a' → logprob: -10.250274658203125
    5. ')' → logprob: -10.625274658203125
    6. '],' → logprob: -11.500274658203125
    7. ',
' → logprob: -12.750274658203125
    8. '   ' → logprob: -14.000274658203125
    9. ',

' → logprob: -14.125274658203125
    10. ',)' → logprob: -14.250274658203125

Token 60: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.16058823466300964
    2. 'a' → logprob: -1.910588264465332
    3. ' b' → logprob: -8.660588264465332
    4. 'b' → logprob: -9.160588264465332
    5. ' ' → logprob: -10.910588264465332
    6. ' ' → logprob: -10.910588264465332
    7. '<|end|>' → logprob: -10.910588264465332
    8. ')' → logprob: -12.035588264465332
    9. '0' → logprob: -12.160588264465332
    10. '    ' → logprob: -12.285588264465332

Token 61: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '1' → logprob: -14.875
    3. '.' → logprob: -18.625
    4. '[
' → logprob: -18.625
    5. ' [' → logprob: -18.75
    6. '0' → logprob: -19.0
    7. ')' → logprob: -19.25
    8. '2' → logprob: -19.25
    9. '```' → logprob: -19.75
    10. '][' → logprob: -20.125

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.625
    3. '[' → logprob: -16.875
    4. '0' → logprob: -18.0
    5. '   ' → logprob: -18.75
    6. '
' → logprob: -19.25
    7. '```' → logprob: -20.0625
    8. ']' → logprob: -20.1875
    9. '{' → logprob: -20.3125
    10. '１' → logprob: -20.375

Token 63: ']-' (ID: 27107)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.2865293323993683
    2. ']' → logprob: -1.786529302597046
    3. '-' → logprob: -3.286529302597046
    4. '[' → logprob: -3.411529302597046
    5. ']-' → logprob: -4.786529541015625
    6. '][' → logprob: -6.161529541015625
    7. ')' → logprob: -8.536529541015625
    8. '1' → logprob: -8.911529541015625
    9. '0' → logprob: -9.536529541015625
    10. '],' → logprob: -9.911529541015625

Token 64: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0006559623870998621
    2. 'a' → logprob: -7.3756561279296875
    3. ' b' → logprob: -10.500656127929688
    4. '1' → logprob: -13.250656127929688
    5. ' a' → logprob: -16.500656127929688
    6. ')' → logprob: -17.750656127929688
    7. ')b' → logprob: -18.000656127929688
    8. ' ' → logprob: -18.125656127929688
    9. '   ' → logprob: -18.250656127929688
    10. '```' → logprob: -18.625656127929688

Token 65: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000712074339389801
    2. '1' → logprob: -7.625711917877197
    3. '])' → logprob: -8.500712394714355
    4. '-' → logprob: -11.375712394714355
    5. ']' → logprob: -12.375712394714355
    6. '][' → logprob: -13.625712394714355
    7. '.' → logprob: -14.625712394714355
    8. '0' → logprob: -15.000712394714355
    9. ')])' → logprob: -15.000712394714355
    10. ']))' → logprob: -15.125712394714355

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001242772996192798
    2. '0' → logprob: -9.000123977661133
    3. '])' → logprob: -14.500123977661133
    4. ' ' → logprob: -15.500123977661133
    5. ']' → logprob: -17.125123977661133
    6. '[' → logprob: -17.375123977661133
    7. '   ' → logprob: -18.125123977661133
    8. '１' → logprob: -18.562623977661133
    9. '```' → logprob: -19.062623977661133
    10. ')' → logprob: -19.187623977661133

Token 67: '])

' (ID: 21045)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.018393052741885185
    2. ')' → logprob: -4.018393039703369
    3. '])' → logprob: -8.643393516540527
    4. ')))' → logprob: -9.893393516540527
    5. ']))' → logprob: -11.518393516540527
    6. ')])' → logprob: -12.893393516540527
    7. ')]' → logprob: -13.393393516540527
    8. ' ))' → logprob: -14.393393516540527
    9. '})' → logprob: -14.518393516540527
    10. '))
' → logprob: -15.268393516540527

Token 68: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5385311841964722
    2. '
' → logprob: -0.9135311841964722
    3. '

' → logprob: -4.288531303405762
    4. '```' → logprob: -7.538531303405762
    5. '\' → logprob: -8.288531303405762
    6. '<|end|>' → logprob: -8.788531303405762
    7. '\n' → logprob: -9.038531303405762
    8. '
' → logprob: -9.163531303405762
    9. ' 
' → logprob: -9.788531303405762
    10. ' 

' → logprob: -10.038531303405762

Token 69: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.0007219645194709301
    2. 'dist' → logprob: -9.12572193145752
    3. ' find' → logprob: -9.75072193145752
    4. '_' → logprob: -9.75072193145752
    5. ' area' → logprob: -10.00072193145752
    6. ' calc' → logprob: -10.12572193145752
    7. ' convex' → logprob: -10.12572193145752
    8. ' read' → logprob: -10.25072193145752
    9. '_dist' → logprob: -10.62572193145752
    10. ' line' → logprob: -10.62572193145752

Token 70: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.001647326396778226
    2. '_line' → logprob: -7.001647472381592
    3. '_points' → logprob: -8.126646995544434
    4. '_polygon' → logprob: -9.501646995544434
    5. '_triangle' → logprob: -9.751646995544434
    6. '_' → logprob: -9.876646995544434
    7. '_Point' → logprob: -10.126646995544434
    8. '_segment' → logprob: -10.501646995544434
    9. '_p' → logprob: -10.876646995544434
    10. '_plane' → logprob: -11.126646995544434

Token 71: '_segment' (ID: 71041)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.1458132416009903
    2. '_segment' → logprob: -2.395813226699829
    3. '_point' → logprob: -3.270813226699829
    4. '_edge' → logprob: -5.770813465118408
    5. '_plane' → logprob: -6.270813465118408
    6. '_polygon' → logprob: -7.395813465118408
    7. '_seg' → logprob: -8.77081298828125
    8. '_' → logprob: -8.77081298828125
    9. '_segments' → logprob: -8.89581298828125
    10. '_poly' → logprob: -8.89581298828125

Token 72: '(px' (ID: 195026)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00024477019906044006
    2. '(' → logprob: -8.625245094299316
    3. '(p' → logprob: -9.750245094299316
    4. '(point' → logprob: -12.875245094299316
    5. '(A' → logprob: -13.250245094299316
    6. '(segment' → logprob: -13.250245094299316
    7. ' (' → logprob: -14.500245094299316
    8. '(Point' → logprob: -16.125244140625
    9. '(seg' → logprob: -16.500244140625
    10. '(s' → logprob: -16.875244140625

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002258277963846922
    2. ' ,' → logprob: -8.500226020812988
    3. ',p' → logprob: -11.125226020812988
    4. ',a' → logprob: -12.125226020812988
    5. ',s' → logprob: -14.125226020812988
    6. '_,' → logprob: -14.875226020812988
    7. ',array' → logprob: -16.000225067138672
    8. ')' → logprob: -16.250225067138672
    9. ' ' → logprob: -16.250225067138672
    10. ',pos' → logprob: -16.500225067138672

Token 74: ' py' (ID: 13104)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.4734560549259186
    2. 'x' → logprob: -1.8484560251235962
    3. 'py' → logprob: -1.8484560251235962
    4. 'sx' → logprob: -3.5984561443328857
    5. 'a' → logprob: -4.098455905914307
    6. ' py' → logprob: -4.973455905914307
    7. 'p' → logprob: -5.348455905914307
    8. ' ax' → logprob: -6.098455905914307
    9. 'qx' → logprob: -6.848455905914307
    10. ' x' → logprob: -7.223455905914307

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.506661833962426e-05
    2. ' ,' → logprob: -9.37508487701416
    3. ',
' → logprob: -16.250085830688477
    4. ',p' → logprob: -17.625085830688477
    5. ',a' → logprob: -17.750085830688477
    6. '):' → logprob: -17.875085830688477
    7. ',

' → logprob: -17.875085830688477
    8. '   ' → logprob: -18.250085830688477
    9. '‌,' → logprob: -18.250085830688477
    10. ',
' → logprob: -18.625085830688477

Token 76: ' ax' (ID: 6807)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.19904464483261108
    2. ' x' → logprob: -1.8240447044372559
    3. 'ax' → logprob: -4.449044704437256
    4. ' ax' → logprob: -4.949044704437256
    5. ' ' → logprob: -8.574044227600098
    6. '	ax' → logprob: -10.074044227600098
    7. '	x' → logprob: -10.324044227600098
    8. 'a' → logprob: -11.449044227600098
    9. '```' → logprob: -11.574044227600098
    10. ' a' → logprob: -11.699044227600098

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.652451464906335e-05
    2. ' ,' → logprob: -11.125016212463379
    3. ',y' → logprob: -14.375016212463379
    4. ',a' → logprob: -14.500016212463379
    5. '),' → logprob: -16.125017166137695
    6. '‌,' → logprob: -16.250017166137695
    7. 'a' → logprob: -16.750017166137695
    8. ',
' → logprob: -16.875017166137695
    9. ')' → logprob: -16.875017166137695
    10. ',b' → logprob: -17.000017166137695

Token 78: ' ay' (ID: 4199)
  Prédit: 'ay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ay' → logprob: -0.38688212633132935
    2. ' ay' → logprob: -1.1368820667266846
    3. '   ' → logprob: -12.636881828308105
    4. ' ' → logprob: -13.386881828308105
    5. ',' → logprob: -13.761881828308105
    6. 'aye' → logprob: -14.011881828308105
    7. 'Ay' → logprob: -14.511881828308105
    8. '-ay' → logprob: -14.636881828308105
    9. 'py' → logprob: -14.886881828308105
    10. ' ' → logprob: -15.011881828308105

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.107425062713446e-06
    2. ' ,' → logprob: -12.125006675720215
    3. '):' → logprob: -13.375006675720215
    4. '   ' → logprob: -17.12500762939453
    5. ')' → logprob: -17.12500762939453
    6. ',
' → logprob: -17.25000762939453
    7. '),' → logprob: -18.37500762939453
    8. '_,' → logprob: -18.75000762939453
    9. ',

' → logprob: -18.75000762939453
    10. '‌,' → logprob: -18.75000762939453

Token 80: ' bx' (ID: 93853)
  Prédit: 'bx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bx' → logprob: -0.20143496990203857
    2. ' bx' → logprob: -1.7014349699020386
    3. ' ' → logprob: -11.076435089111328
    4. 'Bx' → logprob: -13.201435089111328
    5. '   ' → logprob: -13.701435089111328
    6. 'qx' → logprob: -13.826435089111328
    7. '```' → logprob: -13.951435089111328
    8. '	b' → logprob: -14.826435089111328
    9. '  ' → logprob: -15.576435089111328
    10. 'tx' → logprob: -15.701435089111328

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021867557370569557
    2. ')' → logprob: -9.000218391418457
    3. '):' → logprob: -9.375218391418457
    4. ' ,' → logprob: -12.500218391418457
    5. ',y' → logprob: -13.125218391418457
    6. '),' → logprob: -13.625218391418457
    7. ',)' → logprob: -13.625218391418457
    8. ',b' → logprob: -14.375218391418457
    9. '_,' → logprob: -14.500218391418457
    10. '):
' → logprob: -15.125218391418457

Token 82: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.08924032002687454
    2. ' by' → logprob: -2.464240312576294
    3. 'b' → logprob: -9.339240074157715
    4. ' bx' → logprob: -9.964240074157715
    5. ' b' → logprob: -10.214240074157715
    6. 'bx' → logprob: -10.339240074157715
    7. 'ay' → logprob: -10.714240074157715
    8. ' y' → logprob: -11.089240074157715
    9. '_by' → logprob: -11.214240074157715
    10. ' ' → logprob: -11.339240074157715

Token 83: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -9.341087570646778e-05
    2. ' ):' → logprob: -10.000093460083008
    3. '):
' → logprob: -10.250093460083008
    4. ')' → logprob: -11.375093460083008
    5. '   ' → logprob: -14.375093460083008
    6. ',' → logprob: -15.875093460083008
    7. ' ' → logprob: -16.125093460083008
    8. ':' → logprob: -16.125093460083008
    9. '):
' → logprob: -16.125093460083008
    10. '):

' → logprob: -18.000093460083008

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01506725512444973
    2. '    ' → logprob: -5.265067100524902
    3. ' 
' → logprob: -5.515067100524902
    4. '    
' → logprob: -5.765067100524902
    5. '     
' → logprob: -7.140067100524902
    6. ' ' → logprob: -7.390067100524902
    7. '
' → logprob: -7.640067100524902
    8. '   
' → logprob: -8.640067100524902
    9. ' #' → logprob: -8.765067100524902
    10. '  ' → logprob: -9.265067100524902

Token 85: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44816723465919495
    2. ' dx' → logprob: -1.0731672048568726
    3. 'dx' → logprob: -4.698167324066162
    4. ' px' → logprob: -5.698167324066162
    5. ' #' → logprob: -5.948167324066162
    6. '    ' → logprob: -6.823167324066162
    7. ' ' → logprob: -7.073167324066162
    8. ' AP' → logprob: -8.198166847229004
    9. ' ab' → logprob: -8.198166847229004
    10. '```' → logprob: -8.323166847229004

Token 86: ' Distance' (ID: 53583)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.08165248483419418
    2. '#' → logprob: -3.4566524028778076
    3. 'ap' → logprob: -4.331652641296387
    4. 'px' → logprob: -4.706652641296387
    5. '"""' → logprob: -5.081652641296387
    6. 'Ap' → logprob: -5.206652641296387
    7. 'AP' → logprob: -5.206652641296387
    8. ' dx' → logprob: -6.206652641296387
    9. '```' → logprob: -6.956652641296387
    10. 'lx' → logprob: -7.081652641296387

Token 87: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5687286257743835
    2. ' from' → logprob: -2.0687286853790283
    3. '=' → logprob: -2.1937286853790283
    4. '   ' → logprob: -2.3187286853790283
    5. '    ' → logprob: -3.5687286853790283
    6. ' ' → logprob: -3.6937286853790283
    7. 'from' → logprob: -3.8187286853790283
    8. ' between' → logprob: -4.943728446960449
    9. ':' → logprob: -5.943728446960449
    10. ' (' → logprob: -5.943728446960449

Token 88: ' point' (ID: 2438)
  Prédit: '(px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(px' → logprob: -0.23495805263519287
    2. ' point' → logprob: -2.4849581718444824
    3. ' px' → logprob: -2.4849581718444824
    4. 'point' → logprob: -3.8599581718444824
    5. 'px' → logprob: -3.8599581718444824
    6. ' (' → logprob: -8.359957695007324
    7. ' a' → logprob: -8.484957695007324
    8. ' the' → logprob: -10.359957695007324
    9. 'Point' → logprob: -10.484957695007324
    10. 'the' → logprob: -10.484957695007324

Token 89: ' p' (ID: 275)
  Prédit: '(px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(px' → logprob: -0.3270787000656128
    2. ' (' → logprob: -1.7020787000656128
    3. ' to' → logprob: -2.4520788192749023
    4. ' px' → logprob: -4.577078819274902
    5. 'to' → logprob: -8.577078819274902
    6. ' ' → logprob: -10.077078819274902
    7. 'px' → logprob: -10.952078819274902
    8. '(' → logprob: -11.952078819274902
    9. '(py' → logprob: -12.327078819274902
    10. '(p' → logprob: -12.827078819274902

Token 90: '=(' (ID: 9893)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.10156466066837311
    2. 'to' → logprob: -2.351564645767212
    3. ' (' → logprob: -7.851564884185791
    4. 't' → logprob: -7.976564884185791
    5. 'x' → logprob: -8.726564407348633
    6. ' ' → logprob: -8.851564407348633
    7. '(px' → logprob: -9.351564407348633
    8. 'oint' → logprob: -9.976564407348633
    9. '(' → logprob: -9.976564407348633
    10. ' =' → logprob: -10.351564407348633

Token 91: 'px' (ID: 3207)
  Prédit: 'px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.0010453128488734365
    2. ' px' → logprob: -6.876045227050781
    3. '(px' → logprob: -11.376045227050781
    4. 'x' → logprob: -15.376045227050781
    5. '   ' → logprob: -15.626045227050781
    6. 'py' → logprob: -15.876045227050781
    7. '_px' → logprob: -15.876045227050781
    8. ' ' → logprob: -16.37604522705078
    9. ')' → logprob: -16.37604522705078
    10. '
' → logprob: -16.75104522705078

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019877557642757893
    2. ' ,' → logprob: -6.251987934112549
    3. '-' → logprob: -11.12698745727539
    4. '-,' → logprob: -11.50198745727539
    5. ')' → logprob: -12.00198745727539
    6. ' ' → logprob: -12.12698745727539
    7. 'x' → logprob: -12.25198745727539
    8. '‌,' → logprob: -12.37698745727539
    9. '_py' → logprob: -12.87698745727539
    10. '_,' → logprob: -13.12698745727539

Token 93: 'py' (ID: 5823)
  Prédit: ' py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' py' → logprob: -0.3869089186191559
    2. 'py' → logprob: -1.1369088888168335
    3. '_py' → logprob: -10.886908531188965
    4. '(py' → logprob: -11.011908531188965
    5. '.py' → logprob: -13.136908531188965
    6. 'p' → logprob: -15.136908531188965
    7. 'y' → logprob: -15.511908531188965
    8. 'Py' → logprob: -16.13690948486328
    9. ' Py' → logprob: -17.13690948486328
    10. ',' → logprob: -17.38690948486328

Token 94: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007881867350079119
    2. ' )' → logprob: -7.62578821182251
    3. ',' → logprob: -8.375787734985352
    4. ' to' → logprob: -9.625787734985352
    5. '),' → logprob: -13.625787734985352
    6. 'to' → logprob: -13.750787734985352
    7. ' ' → logprob: -14.375787734985352
    8. ' ,' → logprob: -14.750787734985352
    9. ')
' → logprob: -15.500787734985352
    10. ',)' → logprob: -16.00078773498535

Token 95: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.24003329873085022
    2. '   ' → logprob: -1.7400332689285278
    3. ' ' → logprob: -3.4900333881378174
    4. '  ' → logprob: -5.990033149719238
    5. '    ' → logprob: -6.490033149719238
    6. ',' → logprob: -6.615033149719238
    7. 'to' → logprob: -7.865033149719238
    8. ' )' → logprob: -7.990033149719238
    9. ' ,' → logprob: -7.990033149719238
    10. ')' → logprob: -8.740033149719238

Token 96: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.14163325726985931
    2. 'segment' → logprob: -2.3916332721710205
    3. ' line' → logprob: -3.5166332721710205
    4. ' the' → logprob: -5.141633033752441
    5. 'line' → logprob: -5.891633033752441
    6. ' a' → logprob: -6.516633033752441
    7. 'the' → logprob: -8.016633033752441
    8. 'a' → logprob: -8.141633033752441
    9. 'seg' → logprob: -9.891633033752441
    10. ' seg' → logprob: -10.016633033752441

Token 97: ' ab' (ID: 692)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3188929557800293
    2. '(px' → logprob: -1.4438929557800293
    3. '(ax' → logprob: -3.5688929557800293
    4. '<|end|>' → logprob: -5.818892955780029
    5. ' ' → logprob: -6.318892955780029
    6. ' px' → logprob: -6.943892955780029
    7. ' line' → logprob: -7.318892955780029
    8. '(' → logprob: -7.818892955780029
    9. '(a' → logprob: -8.068893432617188
    10. ' =' → logprob: -8.193893432617188

Token 98: '=((' (ID: 150348)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7259145379066467
    2. '   ' → logprob: -0.7259145379066467
    3. '):' → logprob: -4.475914478302002
    4. ')' → logprob: -4.475914478302002
    5. ' :' → logprob: -5.350914478302002
    6. ' ' → logprob: -6.100914478302002
    7. ',' → logprob: -7.725914478302002
    8. ':
' → logprob: -8.10091495513916
    9. '<|end|>' → logprob: -8.10091495513916
    10. '  ' → logprob: -8.35091495513916

Token 99: 'ax' (ID: 1362)
  Prédit: 'ax'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -5.7530574849806726e-05
    2. 'bx' → logprob: -10.625057220458984
    3. ' ax' → logprob: -11.625057220458984
    4. ' ' → logprob: -12.000057220458984
    5. '   ' → logprob: -12.000057220458984
    6. 'axb' → logprob: -12.250057220458984
    7. 'a' → logprob: -12.875057220458984
    8. '(ax' → logprob: -13.500057220458984
    9. ')' → logprob: -13.750057220458984
    10. '	ax' → logprob: -14.375057220458984

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17140407860279083
    2. '),' → logprob: -1.9214041233062744
    3. '),(' → logprob: -5.046403884887695
    4. '-' → logprob: -6.046403884887695
    5. ' ,' → logprob: -7.421403884887695
    6. ')' → logprob: -7.921403884887695
    7. '-ay' → logprob: -8.046403884887695
    8. ' -' → logprob: -8.171403884887695
    9. ' ),' → logprob: -8.296403884887695
    10. ' ' → logprob: -9.171403884887695

Token 101: 'ay' (ID: 356)
  Prédit: 'ay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ay' → logprob: -0.00013727048644796014
    2. ' ay' → logprob: -9.000137329101562
    3. ',' → logprob: -12.000137329101562
    4. ')' → logprob: -12.625137329101562
    5. 'ax' → logprob: -13.000137329101562
    6. '),' → logprob: -13.875137329101562
    7. ' ' → logprob: -15.125137329101562
    8. '```' → logprob: -15.125137329101562
    9. '-ay' → logprob: -15.500137329101562
    10. '0' → logprob: -15.875137329101562

Token 102: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.20271986722946167
    2. '),(' → logprob: -1.7027199268341064
    3. ',' → logprob: -7.077719688415527
    4. ' ),' → logprob: -8.202719688415527
    5. ')' → logprob: -8.827719688415527
    6. '   ' → logprob: -11.577719688415527
    7. '),
' → logprob: -11.827719688415527
    8. '))' → logprob: -11.952719688415527
    9. ' ' → logprob: -11.952719688415527
    10. 'px' → logprob: -12.952719688415527

Token 103: 'bx' (ID: 34802)
  Prédit: 'bx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bx' → logprob: -9.686778503237292e-05
    2. ' bx' → logprob: -9.250097274780273
    3. 'ax' → logprob: -14.500097274780273
    4. ',' → logprob: -17.375097274780273
    5. '```' → logprob: -17.875097274780273
    6. ' ' → logprob: -18.125097274780273
    7. 'Bx' → logprob: -18.125097274780273
    8. '
' → logprob: -18.250097274780273
    9. 'cx' → logprob: -19.000097274780273
    10. '   ' → logprob: -19.250097274780273

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003585818223655224
    2. ',b' → logprob: -5.8785858154296875
    3. '),' → logprob: -7.2535858154296875
    4. ' ,' → logprob: -10.503585815429688
    5. '-,' → logprob: -11.628585815429688
    6. '_,' → logprob: -12.128585815429688
    7. '),(' → logprob: -12.253585815429688
    8. 'bx' → logprob: -12.253585815429688
    9. ',
' → logprob: -12.378585815429688
    10. ')' → logprob: -12.378585815429688

Token 105: 'by' (ID: 2345)
  Prédit: 'by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.0015066476771607995
    2. ' by' → logprob: -6.501506805419922
    3. ' ' → logprob: -12.876506805419922
    4. '```' → logprob: -13.876506805419922
    5. 'b' → logprob: -15.251506805419922
    6. 'bx' → logprob: -15.626506805419922
    7. ' 
' → logprob: -16.626506805419922
    8. '-by' → logprob: -16.876506805419922
    9. 'By' → logprob: -17.001506805419922
    10. 'bys' → logprob: -17.001506805419922

Token 106: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28809428215026855
    2. '))' → logprob: -1.4130942821502686
    3. ')):' → logprob: -5.163094520568848
    4. '):' → logprob: -7.163094520568848
    5. ')):
' → logprob: -9.163094520568848
    6. ' ))' → logprob: -9.288094520568848
    7. '),' → logprob: -9.413094520568848
    8. ' ' → logprob: -9.788094520568848
    9. ')
' → logprob: -10.288094520568848
    10. ' )' → logprob: -10.788094520568848

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09708622843027115
    2. ':' → logprob: -3.222086191177368
    3. ')' → logprob: -3.347086191177368
    4. '):' → logprob: -4.847086429595947
    5. '
' → logprob: -5.472086429595947
    6. ' ' → logprob: -6.472086429595947
    7. '):
' → logprob: -6.722086429595947
    8. ':
' → logprob: -7.847086429595947
    9. '    
' → logprob: -8.097085952758789
    10. ' )' → logprob: -8.222085952758789

Token 108: ' #' (ID: 1069)
  Prédit: ' dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.3668617010116577
    2. '   ' → logprob: -1.3668617010116577
    3. 'dx' → logprob: -2.9918618202209473
    4. ' ab' → logprob: -7.741861820220947
    5. ' px' → logprob: -8.491861343383789
    6. ' vx' → logprob: -8.741861343383789
    7. ' ' → logprob: -9.116861343383789
    8. 'px' → logprob: -9.116861343383789
    9. ' #' → logprob: -9.116861343383789
    10. ' ap' → logprob: -9.366861343383789

Token 109: ' Compute' (ID: 45438)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.05604242533445358
    2. ' dx' → logprob: -3.056042432785034
    3. '   ' → logprob: -5.056042194366455
    4. 'd' → logprob: -7.931042194366455
    5. 'vx' → logprob: -8.431042671203613
    6. '#' → logprob: -9.056042671203613
    7. 'x' → logprob: -9.806042671203613
    8. 'AB' → logprob: -10.181042671203613
    9. ' ' → logprob: -10.306042671203613
    10. ' ab' → logprob: -10.556042671203613

Token 110: ' projection' (ID: 41244)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.24149750173091888
    2. 'ap' → logprob: -2.24149751663208
    3. ' ap' → logprob: -3.61649751663208
    4. ' dx' → logprob: -3.74149751663208
    5. ' ' → logprob: -3.86649751663208
    6. '   ' → logprob: -4.24149751663208
    7. 'px' → logprob: -5.11649751663208
    8. '```' → logprob: -5.11649751663208
    9. 'vx' → logprob: -5.74149751663208
    10. 'AP' → logprob: -6.74149751663208

Token 111: ' t' (ID: 260)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6110838055610657
    2. ' ' → logprob: -1.486083745956421
    3. ' of' → logprob: -1.986083745956421
    4. ')' → logprob: -3.736083745956421
    5. '  ' → logprob: -4.611083984375
    6. '    ' → logprob: -5.111083984375
    7. ' vector' → logprob: -5.236083984375
    8. '.' → logprob: -5.236083984375
    9. ' t' → logprob: -5.611083984375
    10. ' (' → logprob: -5.611083984375

Token 112: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16333240270614624
    2. ' ' → logprob: -3.038332462310791
    3. ' )' → logprob: -3.038332462310791
    4. ')' → logprob: -3.413332462310791
    5. '=' → logprob: -3.913332462310791
    6. '  ' → logprob: -7.038332462310791
    7. ' ,' → logprob: -8.038331985473633
    8. '<|end|>' → logprob: -8.163331985473633
    9. '_' → logprob: -9.163331985473633
    10. ',' → logprob: -9.163331985473633

Token 113: ' p' (ID: 275)
  Prédit: '(px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(px' → logprob: -0.11426880210638046
    2. '((' → logprob: -2.6142687797546387
    3. 'px' → logprob: -3.9892687797546387
    4. ' px' → logprob: -4.989268779754639
    5. ' (' → logprob: -5.489268779754639
    6. ' ((' → logprob: -5.614268779754639
    7. '(p' → logprob: -7.114268779754639
    8. 'p' → logprob: -7.614268779754639
    9. '(' → logprob: -8.614269256591797
    10. ' point' → logprob: -10.239269256591797

Token 114: ' on' (ID: 402)
  Prédit: ' onto'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' onto' → logprob: -0.12916982173919678
    2. ' on' → logprob: -2.7541699409484863
    3. ' ' → logprob: -3.3791699409484863
    4. ' -' → logprob: -4.754169940948486
    5. ' =' → logprob: -5.629169940948486
    6. 'onto' → logprob: -5.754169940948486
    7. ')' → logprob: -5.879169940948486
    8. '=' → logprob: -6.629169940948486
    9. '<|end|>' → logprob: -6.879169940948486
    10. '  ' → logprob: -7.129169940948486

Token 115: ' ab' (ID: 692)
  Prédit: ' segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.09186849743127823
    2. ' ab' → logprob: -3.4668684005737305
    3. ' the' → logprob: -3.7168684005737305
    4. 'ab' → logprob: -4.0918684005737305
    5. 'segment' → logprob: -4.4668684005737305
    6. 'the' → logprob: -5.8418684005737305
    7. ' line' → logprob: -6.9668684005737305
    8. ' AB' → logprob: -9.59186840057373
    9. ' seg' → logprob: -9.96686840057373
    10. ' vector' → logprob: -10.59186840057373

Token 116: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07541422545909882
    2. ':' → logprob: -3.4504141807556152
    3. ' ' → logprob: -4.575414180755615
    4. ')' → logprob: -4.575414180755615
    5. '    ' → logprob: -4.950414180755615
    6. ',' → logprob: -5.825414180755615
    7. ' )' → logprob: -6.200414180755615
    8. '  ' → logprob: -6.200414180755615
    9. ' :' → logprob: -7.075414180755615
    10. '):' → logprob: -7.325414180755615

Token 117: ' clamp' (ID: 76503)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.5252437591552734
    2. '   ' → logprob: -1.5252437591552734
    3. ' dx' → logprob: -2.0252437591552734
    4. ' px' → logprob: -3.7752437591552734
    5. ' d' → logprob: -4.900243759155273
    6. 'dx' → logprob: -4.900243759155273
    7. ')' → logprob: -5.650243759155273
    8. 't' → logprob: -5.775243759155273
    9. ' ' → logprob: -5.775243759155273
    10. 'd' → logprob: -6.775243759155273

Token 118: ' between' (ID: 2870)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.523661732673645
    2. 't' → logprob: -1.273661732673645
    3. ' to' → logprob: -3.1486616134643555
    4. '(t' → logprob: -3.2736616134643555
    5. '(' → logprob: -3.8986616134643555
    6. ' between' → logprob: -4.3986616134643555
    7. ' ' → logprob: -5.1486616134643555
    8. 'd' → logprob: -5.3986616134643555
    9. '   ' → logprob: -6.7736616134643555
    10. '0' → logprob: -6.8986616134643555

Token 119: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009115827269852161
    2. ' ' → logprob: -7.000911712646484
    3. '```' → logprob: -16.875911712646484
    4. '   ' → logprob: -17.375911712646484
    5. '[' → logprob: -17.875911712646484
    6. '`' → logprob: -19.375911712646484
    7. ' ' → logprob: -19.375911712646484
    8. '  ' → logprob: -19.875911712646484
    9. '1' → logprob: -20.875911712646484
    10. ' [' → logprob: -21.000911712646484

Token 120: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '```' → logprob: -18.875
    4. '[' → logprob: -21.0
    5. '۰' → logprob: -21.75
    6. '`' → logprob: -22.0
    7. '01' → logprob: -22.375
    8. '   ' → logprob: -22.75
    9. '1' → logprob: -22.875
    10. '
' → logprob: -23.0

Token 121: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.32370030879974365
    2. 'and' → logprob: -1.3237003087997437
    3. ',' → logprob: -4.698700428009033
    4. '.' → logprob: -6.823700428009033
    5. ' ' → logprob: -9.198699951171875
    6. '0' → logprob: -10.073699951171875
    7. ' ,' → logprob: -10.448699951171875
    8. '   ' → logprob: -11.823699951171875
    9. '	and' → logprob: -13.073699951171875
    10. ' и' → logprob: -13.323699951171875

Token 122: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00317783304490149
    2. ' ' → logprob: -5.753177642822266
    3. '```' → logprob: -16.503177642822266
    4. '   ' → logprob: -18.253177642822266
    5. '<|end|>' → logprob: -18.628177642822266
    6. ' ' → logprob: -18.753177642822266
    7. '  ' → logprob: -19.128177642822266
    8. '0' → logprob: -19.378177642822266
    9. '
' → logprob: -19.940677642822266
    10. ' one' → logprob: -20.253177642822266

Token 123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -17.125
    4. '`' → logprob: -20.875
    5. '   ' → logprob: -21.0
    6. '
' → logprob: -21.25
    7. '...' → logprob: -21.6875
    8. '

' → logprob: -22.0
    9. '۱' → logprob: -22.1875
    10. '0' → logprob: -22.25

Token 124: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08313848823308945
    2. ',' → logprob: -3.7081384658813477
    3. ')' → logprob: -3.9581384658813477
    4. ':' → logprob: -4.583138465881348
    5. '
' → logprob: -5.083138465881348
    6. ' ' → logprob: -5.583138465881348
    7. '    
' → logprob: -5.708138465881348
    8. ' 
' → logprob: -6.208138465881348
    9. '\t' → logprob: -6.458138465881348
    10. 't' → logprob: -6.708138465881348

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009440370835363865
    2. ')' → logprob: -5.8844404220581055
    3. ' 
' → logprob: -6.5094404220581055
    4. ' t' → logprob: -6.8844404220581055
    5. ' ' → logprob: -7.1344404220581055
    6. 't' → logprob: -7.6344404220581055
    7. ',' → logprob: -7.6344404220581055
    8. '\t' → logprob: -7.8844404220581055
    9. '    ' → logprob: -8.009440422058105
    10. '    
' → logprob: -8.009440422058105

Token 126: ' dx' (ID: 29472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0694512128829956
    2. ' t' → logprob: -1.3194512128829956
    3. ' ' → logprob: -1.4444512128829956
    4. ' 
' → logprob: -2.444451332092285
    5. 't' → logprob: -3.444451332092285
    6. '    ' → logprob: -4.819451332092285
    7. '  ' → logprob: -4.819451332092285
    8. ')' → logprob: -5.444451332092285
    9. ' )' → logprob: -5.694451332092285
    10. ' p' → logprob: -6.569451332092285

Token 127: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3137515187263489
    2. '=' → logprob: -1.313751459121704
    3. ',' → logprob: -8.438751220703125
    4. '=ax' → logprob: -8.438751220703125
    5. '=b' → logprob: -10.063751220703125
    6. ' =(' → logprob: -12.813751220703125
    7. ' ' → logprob: -13.313751220703125
    8. '=df' → logprob: -13.688751220703125
    9. '=(' → logprob: -13.688751220703125
    10. '=int' → logprob: -14.188751220703125

Token 128: ' dy' (ID: 11996)
  Prédit: ' dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.22606199979782104
    2. 'dy' → logprob: -1.6010620594024658
    3. ' =' → logprob: -7.976061820983887
    4. ' ' → logprob: -9.601061820983887
    5. 'by' → logprob: -9.601061820983887
    6. '=' → logprob: -10.101061820983887
    7. '<|end|>' → logprob: -10.101061820983887
    8. ' bx' → logprob: -10.351061820983887
    9. ' by' → logprob: -11.351061820983887
    10. 'b' → logprob: -11.601061820983887

Token 129: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519630193710327
    2. ' =' → logprob: -1.5019630193710327
    3. '=ax' → logprob: -10.501962661743164
    4. '=b' → logprob: -12.876962661743164
    5. ',' → logprob: -13.251962661743164
    6. ')' → logprob: -14.751962661743164
    7. ')=' → logprob: -15.501962661743164
    8. '=x' → logprob: -16.001962661743164
    9. '=df' → logprob: -16.126962661743164
    10. '=int' → logprob: -16.126962661743164

Token 130: ' bx' (ID: 93853)
  Prédit: ' bx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bx' → logprob: -0.0026936016511172056
    2. 'bx' → logprob: -6.0026936531066895
    3. '(b' → logprob: -9.127693176269531
    4. ' (' → logprob: -9.377693176269531
    5. ' ' → logprob: -10.877693176269531
    6. '	b' → logprob: -12.877693176269531
    7. '   ' → logprob: -14.002693176269531
    8. 'b' → logprob: -14.127693176269531
    9. '(' → logprob: -14.127693176269531
    10. ' xb' → logprob: -15.502693176269531

Token 131: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0789022371172905
    2. '-' → logprob: -2.578902244567871
    3. '-ay' → logprob: -11.328902244567871
    4. ' ' → logprob: -15.203902244567871
    5. '-ai' → logprob: -16.328901290893555
    6. ' -
' → logprob: -17.453901290893555
    7. '=ax' → logprob: -17.578901290893555
    8. '-aj' → logprob: -17.828901290893555
    9. ',' → logprob: -18.578901290893555
    10. '-ak' → logprob: -18.828901290893555

Token 132: ' ax' (ID: 6807)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.0059433747082948685
    2. ' ax' → logprob: -5.130943298339844
    3. '	ax' → logprob: -11.880943298339844
    4. '(ax' → logprob: -12.755943298339844
    5. '=ax' → logprob: -13.130943298339844
    6. '_ax' → logprob: -13.630943298339844
    7. ' ' → logprob: -13.755943298339844
    8. 'ay' → logprob: -15.630943298339844
    9. '.ax' → logprob: -16.630943298339844
    10. 'axb' → logprob: -16.755943298339844

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018009616760537028
    2. ' ,' → logprob: -6.376801013946533
    3. ',
' → logprob: -9.251800537109375
    4. ',y' → logprob: -14.001800537109375
    5. ' ,
' → logprob: -14.251800537109375
    6. ',d' → logprob: -15.001800537109375
    7. ' ' → logprob: -15.001800537109375
    8. '
' → logprob: -15.626800537109375
    9. ',b' → logprob: -16.126800537109375
    10. '<|end|>' → logprob: -16.251800537109375

Token 134: ' by' (ID: 656)
  Prédit: ' ay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ay' → logprob: -0.02500104159116745
    2. ' ' → logprob: -4.025001049041748
    3. '<|end|>' → logprob: -5.775001049041748
    4. ' ' → logprob: -6.400001049041748
    5. 'ay' → logprob: -7.275001049041748
    6. ' oy' → logprob: -7.650001049041748
    7. ' by' → logprob: -8.15000057220459
    8. 'by' → logprob: -9.27500057220459
    9. ' iy' → logprob: -9.40000057220459
    10. ' y' → logprob: -9.65000057220459

Token 135: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.005236598663032055
    2. '-' → logprob: -5.255236625671387
    3. '-ay' → logprob: -13.880236625671387
    4. '<|end|>' → logprob: -13.880236625671387
    5. ' ' → logprob: -14.255236625671387
    6. ' -
' → logprob: -16.00523567199707
    7. ' ay' → logprob: -16.50523567199707
    8. 'ay' → logprob: -17.38023567199707
    9. ' ' → logprob: -17.38023567199707
    10. ',' → logprob: -18.13023567199707

Token 136: ' ay' (ID: 4199)
  Prédit: 'ay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ay' → logprob: -0.00038086410495452583
    2. ' ay' → logprob: -7.875380992889404
    3. ' ' → logprob: -15.000380516052246
    4. '0' → logprob: -16.375381469726562
    5. '-ay' → logprob: -16.375381469726562
    6. 'ax' → logprob: -17.250381469726562
    7. '<|end|>' → logprob: -17.375381469726562
    8. 'aye' → logprob: -17.375381469726562
    9. 'apy' → logprob: -18.125381469726562
    10. '1' → logprob: -18.125381469726562

Token 137: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8281791806221008
    2. '   ' → logprob: -1.828179121017456
    3. ' 
' → logprob: -2.203179121017456
    4. '<|end|>' → logprob: -2.203179121017456
    5. '  
' → logprob: -2.828179121017456
    6. ',' → logprob: -3.203179121017456
    7. ' ' → logprob: -3.453179121017456
    8. '    
' → logprob: -3.703179121017456
    9. '<|end|>' → logprob: -5.078179359436035
    10. '    ' → logprob: -6.078179359436035

Token 138: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.569337248802185
    2. '   ' → logprob: -1.569337248802185
    3. '
' → logprob: -1.819337248802185
    4. ' 
' → logprob: -1.944337248802185
    5. ' t' → logprob: -2.6943373680114746
    6. '<|end|>' → logprob: -2.8193373680114746
    7. '  
' → logprob: -3.0693373680114746
    8. ' if' → logprob: -3.0693373680114746
    9. '    
' → logprob: -4.694337368011475
    10. '  ' → logprob: -5.069337368011475

Token 139: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.428702712059021
    2. ' length' → logprob: -1.928702712059021
    3. ' denom' → logprob: -1.928702712059021
    4. 'px' → logprob: -2.1787028312683105
    5. ' px' → logprob: -2.5537028312683105
    6. ' t' → logprob: -3.1787028312683105
    7. 'if' (adapté à ' if') → logprob: -3.5537028312683105
    8. 'length' → logprob: -3.5537028312683105
    9. ' d' → logprob: -3.5537028312683105
    10. 'd' → logprob: -3.6787028312683105

Token 140: ' dx' (ID: 29472)
  Prédit: ' dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.3507150709629059
    2. 'dx' → logprob: -1.2257150411605835
    3. '(dx' → logprob: -6.225715160369873
    4. '	d' → logprob: -9.225714683532715
    5. ' ' → logprob: -9.725714683532715
    6. ' (' → logprob: -9.975714683532715
    7. '_dx' → logprob: -10.600714683532715
    8. '(' → logprob: -10.725714683532715
    9. 'd' → logprob: -11.350714683532715
    10. '   ' → logprob: -11.725714683532715

Token 141: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.38805466890335083
    2. ' ==' → logprob: -1.138054609298706
    3. '**' → logprob: -6.763054847717285
    4. '*' → logprob: -11.638054847717285
    5. '=' → logprob: -11.763054847717285
    6. ' ' → logprob: -12.638054847717285
    7. ' **' → logprob: -12.638054847717285
    8. '()==' → logprob: -14.013054847717285
    9. '```' → logprob: -14.388054847717285
    10. ')==' → logprob: -14.388054847717285

Token 142: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03397127240896225
    2. ' ' → logprob: -3.4089713096618652
    3. 'dy' → logprob: -8.158970832824707
    4. ' dy' → logprob: -10.158970832824707
    5. 'ay' → logprob: -16.283971786499023
    6. '   ' → logprob: -16.408971786499023
    7. 'and' → logprob: -16.408971786499023
    8. '=' → logprob: -16.658971786499023
    9. 'py' → logprob: -16.908971786499023
    10. '  ' → logprob: -17.408971786499023

Token 143: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00046200878568924963
    2. ' ' → logprob: -8.37546157836914
    3. 'dy' → logprob: -8.37546157836914
    4. ' dy' → logprob: -14.00046157836914
    5. 'ay' → logprob: -16.37546157836914
    6. 'and' → logprob: -17.62546157836914
    7. '۰' → logprob: -17.87546157836914
    8. '00' → logprob: -18.12546157836914
    9. '```' → logprob: -18.87546157836914
    10. '<|end|>' → logprob: -19.00046157836914

Token 144: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05501768738031387
    2. 'and' → logprob: -2.9300177097320557
    3. ' ' → logprob: -8.930017471313477
    4. '	and' → logprob: -13.930017471313477
    5. '<|end|>' → logprob: -14.055017471313477
    6. '   ' → logprob: -14.305017471313477
    7. '  ' → logprob: -15.305017471313477
    8. '0' → logprob: -15.805017471313477
    9. ':' → logprob: -16.555017471313477
    10. 'a' → logprob: -16.680017471313477

Token 145: ' dy' (ID: 11996)
  Prédit: ' dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.16022545099258423
    2. 'dy' → logprob: -1.9102253913879395
    3. '.dy' → logprob: -13.785225868225098
    4. ' ' → logprob: -16.16022491455078
    5. '	d' → logprob: -17.03522491455078
    6. '   ' → logprob: -17.28522491455078
    7. '
' → logprob: -17.66022491455078
    8. '0' → logprob: -18.66022491455078
    9. ' dyd' → logprob: -18.66022491455078
    10. 'Dy' → logprob: -18.91022491455078

Token 146: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5762395858764648
    2. ' ==' → logprob: -0.8262395858764648
    3. '<|end|>' → logprob: -8.326239585876465
    4. ' ' → logprob: -10.701239585876465
    5. ')==' → logprob: -11.576239585876465
    6. ' ' → logprob: -11.951239585876465
    7. '=' → logprob: -12.201239585876465
    8. '<|end|>' → logprob: -12.326239585876465
    9. ']==' → logprob: -12.576239585876465
    10. '()==' → logprob: -12.826239585876465

Token 147: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17974631488323212
    2. ' ' → logprob: -1.8047462701797485
    3. '<|end|>' → logprob: -13.429746627807617
    4. '   ' → logprob: -16.867246627807617
    5. '  ' → logprob: -16.929746627807617
    6. ' ' → logprob: -17.429746627807617
    7. '۰' → logprob: -17.679746627807617
    8. '<|end|>' → logprob: -17.867246627807617
    9. 's' → logprob: -18.117246627807617
    10. '```' → logprob: -18.554746627807617

Token 148: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011703446507453918
    2. ' ' → logprob: -6.7511701583862305
    3. '<|end|>' → logprob: -16.251171112060547
    4. '۰' → logprob: -18.126171112060547
    5. '  ' → logprob: -18.813671112060547
    6. '   ' → logprob: -19.126171112060547
    7. '```' → logprob: -19.751171112060547
    8. ' ' → logprob: -19.876171112060547
    9. '<|end|>' → logprob: -20.251171112060547
    10. ')' → logprob: -20.501171112060547

Token 149: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006841945927590132
    2. ' :' → logprob: -5.131842136383057
    3. ':return' → logprob: -7.506842136383057
    4. ':
' → logprob: -8.131841659545898
    5. '   ' → logprob: -10.881841659545898
    6. ' :
' → logprob: -11.006841659545898
    7. '<|end|>' → logprob: -11.506841659545898
    8. '):' → logprob: -11.506841659545898
    9. ' ' → logprob: -12.256841659545898
    10. ',' → logprob: -12.506841659545898

Token 150: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6515560150146484
    2. '   ' → logprob: -0.7765560150146484
    3. ' return' → logprob: -4.276556015014648
    4. ':' → logprob: -6.151556015014648
    5. '    ' → logprob: -7.276556015014648
    6. 'return' → logprob: -8.026556015014648
    7. ':return' → logprob: -8.026556015014648
    8. ' ' → logprob: -8.151556015014648
    9. '
' → logprob: -8.276556015014648
    10. '    
' → logprob: -8.776556015014648

Token 151: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4235382676124573
    2. ' 
' → logprob: -2.0485382080078125
    3. ' ' → logprob: -2.2985382080078125
    4. '   ' → logprob: -2.6735382080078125
    5. '       ' → logprob: -4.1735382080078125
    6. 'return' (adapté à ' return') → logprob: -4.1735382080078125
    7. '
' → logprob: -4.9235382080078125
    8. '    ' → logprob: -5.7985382080078125
    9. '<|end|>' → logprob: -6.6735382080078125
    10. '    
' → logprob: -6.7985382080078125

Token 152: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5816404223442078
    2. 'math' → logprob: -0.8316404223442078
    3. ' math' → logprob: -5.331640243530273
    4. ' dist' → logprob: -7.081640243530273
    5. 'Math' → logprob: -12.956640243530273
    6. '(math' → logprob: -13.831640243530273
    7. 'dis' → logprob: -14.644140243530273
    8. 'd' → logprob: -14.769140243530273
    9. 'float' → logprob: -14.769140243530273
    10. 'mat' → logprob: -14.956640243530273

Token 153: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -4.842555426876061e-06
    2. '_' → logprob: -12.375004768371582
    3. '_Point' → logprob: -15.125004768371582
    4. ' _' → logprob: -16.2500057220459
    5. '_p' → logprob: -17.3750057220459
    6. '_points' → logprob: -17.6250057220459
    7. '_POINT' → logprob: -17.7500057220459
    8. '_line' → logprob: -18.5000057220459
    9. '<Point' → logprob: -19.0000057220459
    10. 'Point' → logprob: -19.1250057220459

Token 154: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.00026181264547631145
    2. '_segment' → logprob: -8.375262260437012
    3. '-point' → logprob: -10.500262260437012
    4. '_p' → logprob: -14.000262260437012
    5. '-' → logprob: -14.375262260437012
    6. '_' → logprob: -14.625262260437012
    7. 'point' → logprob: -14.625262260437012
    8. '(point' → logprob: -15.375262260437012
    9. '_Point' → logprob: -15.375262260437012
    10. '_POINT' → logprob: -15.750262260437012

Token 155: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -4.620622712536715e-05
    2. '(' → logprob: -10.125045776367188
    3. '(ax' → logprob: -12.375045776367188
    4. '(px' → logprob: -14.000045776367188
    5. '(a' → logprob: -14.875045776367188
    6. ' ((' → logprob: -15.250045776367188
    7. '(((' → logprob: -15.625045776367188
    8. '(
' → logprob: -15.875045776367188
    9. ' ' → logprob: -17.500045776367188
    10. '```' → logprob: -17.875045776367188

Token 156: 'px' (ID: 3207)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.1610356569290161
    2. 'px' → logprob: -1.9110356569290161
    3. ' px' → logprob: -7.661035537719727
    4. ' ax' → logprob: -8.536035537719727
    5. '(px' → logprob: -9.286035537719727
    6. '(ax' → logprob: -9.911035537719727
    7. '	ax' → logprob: -14.036035537719727
    8. '   ' → logprob: -15.536035537719727
    9. ' (' → logprob: -15.786035537719727
    10. '=ax' → logprob: -16.161035537719727

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020294437126722187
    2. ' ,' → logprob: -8.750203132629395
    3. '[' → logprob: -10.625203132629395
    4. ',
' → logprob: -12.125203132629395
    5. '),' → logprob: -12.375203132629395
    6. ',p' → logprob: -12.500203132629395
    7. '),(' → logprob: -13.000203132629395
    8. ',[' → logprob: -14.000203132629395
    9. 'py' → logprob: -14.125203132629395
    10. ',

' → logprob: -14.125203132629395

Token 158: 'py' (ID: 5823)
  Prédit: 'py'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.00015908108616713434
    2. ' py' → logprob: -8.75015926361084
    3. '(py' → logprob: -14.87515926361084
    4. '_py' → logprob: -15.62515926361084
    5. 'ply' → logprob: -17.250158309936523
    6. '.py' → logprob: -18.125158309936523
    7. 'px' → logprob: -18.625158309936523
    8. 'Py' → logprob: -18.875158309936523
    9. '
' → logprob: -19.000158309936523
    10. ' ' → logprob: -19.125158309936523

Token 159: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19852624833583832
    2. '),' → logprob: -1.8235262632369995
    3. '),(' → logprob: -4.073526382446289
    4. ',(' → logprob: -6.823526382446289
    5. ' ,' → logprob: -8.323526382446289
    6. '(ax' → logprob: -8.823526382446289
    7. ' ),' → logprob: -9.573526382446289
    8. ',a' → logprob: -11.323526382446289
    9. ',),' → logprob: -11.448526382446289
    10. ')' → logprob: -11.823526382446289

Token 160: ' (' (ID: 350)
  Prédit: '(ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ax' → logprob: -0.07153626531362534
    2. ' (' → logprob: -2.8215363025665283
    3. '(' → logprob: -5.321536064147949
    4. '(a' → logprob: -5.446536064147949
    5. '(ai' → logprob: -8.19653606414795
    6. '(ab' → logprob: -11.07153606414795
    7. '   ' → logprob: -11.19653606414795
    8. '(px' → logprob: -11.94653606414795
    9. '(py' → logprob: -12.94653606414795
    10. '(ans' → logprob: -13.32153606414795

Token 161: 'ax' (ID: 1362)
  Prédit: 'ax'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -4.68022444692906e-05
    2. '(ax' → logprob: -10.000046730041504
    3. ' ax' → logprob: -13.625046730041504
    4. 'a' → logprob: -17.50004768371582
    5. '	ax' → logprob: -17.62504768371582
    6. '=ax' → logprob: -18.12504768371582
    7. '_ax' → logprob: -19.25004768371582
    8. ' (' → logprob: -20.12504768371582
    9. '   ' → logprob: -20.87504768371582
    10. '.ax' → logprob: -20.87504768371582

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4987974029500037e-05
    2. ' ,' → logprob: -10.625024795532227
    3. 'ay' → logprob: -14.875024795532227
    4. ',
' → logprob: -15.250024795532227
    5. '‌,' → logprob: -17.250024795532227
    6. ',\
' → logprob: -17.625024795532227
    7. ' ' → logprob: -17.875024795532227
    8. ' ay' → logprob: -18.750024795532227
    9. '```' → logprob: -19.375024795532227
    10. ',y' → logprob: -19.625024795532227

Token 163: 'ay' (ID: 356)
  Prédit: 'ay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ay' → logprob: -7.107425062713446e-06
    2. ' ay' → logprob: -11.875006675720215
    3. 'uy' → logprob: -18.37500762939453
    4. '-ay' → logprob: -18.87500762939453
    5. ' ' → logprob: -19.87500762939453
    6. 'aye' → logprob: -20.12500762939453
    7. 'iy' → logprob: -20.87500762939453
    8. 'ayi' → logprob: -20.87500762939453
    9. 'aya' → logprob: -21.25000762939453
    10. '   ' → logprob: -21.37500762939453

Token 164: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. '))' → logprob: -15.125000953674316
    3. ')
' → logprob: -15.250000953674316
    4. ' )' → logprob: -15.250000953674316
    5. '   ' → logprob: -17.0
    6. ')return' → logprob: -19.0
    7. ')

' → logprob: -19.375
    8. '}' → logprob: -19.875
    9. '),' → logprob: -19.875
    10. ')`' → logprob: -20.0

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32325130701065063
    2. '    
' → logprob: -1.4482512474060059
    3. '
' → logprob: -4.198251247406006
    4. '   
' → logprob: -4.323251247406006
    5. ' 
' → logprob: -4.823251247406006
    6. '  
' → logprob: -5.948251247406006
    7. '     
' → logprob: -7.573251247406006
    8. '	
' → logprob: -7.698251247406006
    9. '  ' → logprob: -7.948251247406006
    10. '    ' → logprob: -8.573251724243164

Token 166: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.5670573711395264
    2. '   ' → logprob: -1.3170573711395264
    3. 't' (adapté à ' t') → logprob: -1.8170573711395264
    4. '    
' → logprob: -6.5670576095581055
    5. '
' → logprob: -7.8170576095581055
    6. '```' → logprob: -9.067057609558105
    7. ' 
' → logprob: -9.442057609558105
    8. '  ' → logprob: -9.817057609558105
    9. '    ' → logprob: -10.192057609558105
    10. '  
' → logprob: -10.317057609558105

Token 167: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815205067396164
    2. '=' → logprob: -4.018152236938477
    3. ' =(' → logprob: -13.518152236938477
    4. ' ' → logprob: -14.518152236938477
    5. ' =
' → logprob: -15.518152236938477
    6. '	' → logprob: -17.768152236938477
    7. ' ' → logprob: -17.893152236938477
    8. '=int' → logprob: -18.143152236938477
    9. '.' → logprob: -18.143152236938477
    10. '=float' → logprob: -18.268152236938477

Token 168: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.08496825397014618
    2. ' ((' → logprob: -2.584968328475952
    3. 'max' → logprob: -5.584968090057373
    4. ' max' → logprob: -6.084968090057373
    5. '(max' → logprob: -10.834968566894531
    6. ' ' → logprob: -12.209968566894531
    7. '(((' → logprob: -13.209968566894531
    8. '(' → logprob: -13.209968566894531
    9. '   ' → logprob: -14.959968566894531
    10. ' (' → logprob: -15.209968566894531

Token 169: 'px' (ID: 3207)
  Prédit: 'px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.0019639628008008003
    2. '(px' → logprob: -6.251964092254639
    3. ' px' → logprob: -10.25196361541748
    4. '_px' → logprob: -17.251964569091797
    5. 'Px' → logprob: -18.251964569091797
    6. ':px' → logprob: -19.251964569091797
    7. '   ' → logprob: -19.376964569091797
    8. '(' → logprob: -19.876964569091797
    9. 'py' → logprob: -19.876964569091797
    10. ' (' → logprob: -20.001964569091797

Token 170: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.001502598519437015
    2. '-' → logprob: -6.501502513885498
    3. ' ' → logprob: -15.251502990722656
    4. ' -
' → logprob: -17.626502990722656
    5. ' ' → logprob: -18.376502990722656
    6. ')' → logprob: -19.751502990722656
    7. ',' → logprob: -19.876502990722656
    8. '	' → logprob: -20.376502990722656
    9. '-A' → logprob: -20.376502990722656
    10. ' ax' → logprob: -20.376502990722656

Token 171: ' ax' (ID: 6807)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.0013377433642745018
    2. ' ax' → logprob: -6.62633752822876
    3. '	ax' → logprob: -12.251338005065918
    4. '(ax' → logprob: -13.251338005065918
    5. 'x' → logprob: -13.626338005065918
    6. ' ' → logprob: -13.876338005065918
    7. '=ax' → logprob: -14.001338005065918
    8. 'ay' → logprob: -14.126338005065918
    9. 'axb' → logprob: -14.751338005065918
    10. '_ax' → logprob: -15.001338005065918

Token 172: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038068462163209915
    2. ')*' → logprob: -3.2880685329437256
    3. ' )' → logprob: -10.663068771362305
    4. ')*(' → logprob: -12.913068771362305
    5. '*)' → logprob: -14.413068771362305
    6. '*' → logprob: -14.913068771362305
    7. '   ' → logprob: -16.038068771362305
    8. ')
' → logprob: -16.538068771362305
    9. '）' → logprob: -17.663068771362305
    10. '	' → logprob: -18.913068771362305

Token 173: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -3.5597102396423e-05
    2. ' dx' → logprob: -10.250035285949707
    3. '_dx' → logprob: -16.125036239624023
    4. '(dx' → logprob: -17.125036239624023
    5. '.dx' → logprob: -18.375036239624023
    6. 'DX' → logprob: -20.375036239624023
    7. 'Dx' → logprob: -20.500036239624023
    8. '   ' → logprob: -21.000036239624023
    9. '	d' → logprob: -21.125036239624023
    10. 'd' → logprob: -21.500036239624023

Token 174: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04858953505754471
    2. '+' → logprob: -3.0485894680023193
    3. ' +
' → logprob: -13.798589706420898
    4. '+
' → logprob: -14.298589706420898
    5. '+(' → logprob: -15.423589706420898
    6. '+)' → logprob: -16.1735897064209
    7. ' ' → logprob: -16.1735897064209
    8. ' +(' → logprob: -16.2985897064209
    9. ')' → logprob: -17.0485897064209
    10. ' plus' → logprob: -18.7985897064209

Token 175: ' (' (ID: 350)
  Prédit: '(py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(py' → logprob: -0.5132180452346802
    2. ' (' → logprob: -1.0132180452346802
    3. '(px' → logprob: -3.2632179260253906
    4. '(' → logprob: -9.51321792602539
    5. '(Py' → logprob: -11.01321792602539
    6. '(p' → logprob: -11.01321792602539
    7. '(pb' → logprob: -11.76321792602539
    8. ' ' → logprob: -13.26321792602539
    9. '   ' → logprob: -13.38821792602539
    10. '  ' → logprob: -14.51321792602539

Token 176: 'py' (ID: 5823)
  Prédit: '(py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(py' → logprob: -0.023537082597613335
    2. 'py' → logprob: -3.7735371589660645
    3. ' py' → logprob: -8.648536682128906
    4. '(px' → logprob: -9.148536682128906
    5. ' (' → logprob: -12.273536682128906
    6. '_py' → logprob: -12.773536682128906
    7. '(Py' → logprob: -14.023536682128906
    8. 'px' → logprob: -14.023536682128906
    9. '(' → logprob: -15.148536682128906
    10. '.py' → logprob: -15.898536682128906

Token 177: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008857302367687225
    2. '-' → logprob: -4.758857250213623
    3. ' ' → logprob: -8.758857727050781
    4. '<|end|>' → logprob: -9.383857727050781
    5. ')' → logprob: -14.133857727050781
    6. ' -
' → logprob: -15.133857727050781
    7. ',' → logprob: -15.383857727050781
    8. '<|end|>' → logprob: -15.633857727050781
    9. '  ' → logprob: -16.63385772705078
    10. ' ' → logprob: -17.38385772705078

Token 178: ' ay' (ID: 4199)
  Prédit: 'ay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ay' → logprob: -0.31328123807907104
    2. ' ay' → logprob: -1.3132812976837158
    3. ' ' → logprob: -11.563281059265137
    4. 'py' → logprob: -12.813281059265137
    5. '<|end|>' → logprob: -13.313281059265137
    6. '-ay' → logprob: -13.438281059265137
    7. '0' → logprob: -14.313281059265137
    8. '1' → logprob: -15.188281059265137
    9. 'apy' → logprob: -15.313281059265137
    10. 'ays' → logprob: -15.563281059265137

Token 179: ')*' (ID: 11043)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.01784026250243187
    2. ')' → logprob: -4.642840385437012
    3. ')*' → logprob: -4.892840385437012
    4. ' *' → logprob: -7.767840385437012
    5. '*)' → logprob: -9.017840385437012
    6. ' )' → logprob: -12.267840385437012
    7. '   ' → logprob: -14.392840385437012
    8. ' ' → logprob: -14.392840385437012
    9. '*
' → logprob: -14.517840385437012
    10. '*y' → logprob: -15.017840385437012

Token 180: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0013261953135952353
    2. ' dy' → logprob: -6.626326084136963
    3. 'd' → logprob: -16.376325607299805
    4. '.dy' → logprob: -16.501325607299805
    5. ')' → logprob: -17.626325607299805
    6. 'dx' → logprob: -18.001325607299805
    7. '	d' → logprob: -18.001325607299805
    8. 'Dy' → logprob: -18.001325607299805
    9. '
' → logprob: -18.251325607299805
    10. 'dym' → logprob: -18.376325607299805

Token 181: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020044150296598673
    2. ' )' → logprob: -6.252004623413086
    3. ')/' → logprob: -10.127004623413086
    4. ')/(' → logprob: -10.252004623413086
    5. '   ' → logprob: -15.002004623413086
    6. ')
' → logprob: -15.752004623413086
    7. ' )
' → logprob: -18.377004623413086
    8. ' ' → logprob: -18.627004623413086
    9. '    ' → logprob: -18.752004623413086
    10. '')' → logprob: -19.002004623413086

Token 182: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.349895179271698
    2. '/' → logprob: -1.2248952388763428
    3. ')' → logprob: -6.724895000457764
    4. '/(' → logprob: -8.849895477294922
    5. ' /
' → logprob: -10.724895477294922
    6. ')/(' → logprob: -10.974895477294922
    7. '/
' → logprob: -10.974895477294922
    8. '/d' → logprob: -11.099895477294922
    9. ' /(' → logprob: -11.474895477294922
    10. ')/' → logprob: -11.474895477294922

Token 183: ' (' (ID: 350)
  Prédit: '(dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dx' → logprob: -0.03129987791180611
    2. ' (' → logprob: -3.5312998294830322
    3. '(' → logprob: -7.031300067901611
    4. '(math' → logprob: -8.156299591064453
    5. '(float' → logprob: -9.281299591064453
    6. '(max' → logprob: -9.906299591064453
    7. '(ax' → logprob: -10.906299591064453
    8. '(d' → logprob: -10.906299591064453
    9. '(dl' → logprob: -10.906299591064453
    10. '(px' → logprob: -11.031299591064453

Token 184: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0791153833270073
    2. '(dx' → logprob: -2.704115390777588
    3. ' dx' → logprob: -4.829115390777588
    4. ' (' → logprob: -6.829115390777588
    5. ' ' → logprob: -10.70411491394043
    6. '   ' → logprob: -11.32911491394043
    7. '_dx' → logprob: -11.32911491394043
    8. ')' → logprob: -12.20411491394043
    9. '(' → logprob: -12.82911491394043
    10. '```' → logprob: -13.20411491394043

Token 185: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0031011851970106363
    2. '**' → logprob: -6.003101348876953
    3. ' *' → logprob: -7.378101348876953
    4. ' **' → logprob: -15.503101348876953
    5. ' ' → logprob: -16.503101348876953
    6. '2' → logprob: -16.628101348876953
    7. 'dx' → logprob: -17.003101348876953
    8. '*d' → logprob: -17.503101348876953
    9. '*x' → logprob: -17.878101348876953
    10. '```' → logprob: -17.878101348876953

Token 186: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -3.666993507067673e-05
    2. ' dx' → logprob: -10.250036239624023
    3. '2' → logprob: -14.250036239624023
    4. '(dx' → logprob: -15.375036239624023
    5. 'd' → logprob: -15.750036239624023
    6. '
' → logprob: -16.000036239624023
    7. '_dx' → logprob: -16.000036239624023
    8. '```' → logprob: -16.750036239624023
    9. '.dx' → logprob: -18.500036239624023
    10. ' ' → logprob: -19.250036239624023

Token 187: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04858827963471413
    2. '+' → logprob: -3.048588275909424
    3. ')' → logprob: -14.923588752746582
    4. ' +
' → logprob: -14.923588752746582
    5. '+
' → logprob: -16.048587799072266
    6. '+y' → logprob: -16.923587799072266
    7. ' ' → logprob: -17.423587799072266
    8. '+)' → logprob: -18.048587799072266
    9. '＋' → logprob: -18.173587799072266
    10. ' plus' → logprob: -19.048587799072266

Token 188: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.1002165898680687
    2. ' dy' → logprob: -2.3502166271209717
    3. '.dy' → logprob: -12.72521686553955
    4. '<|end|>' → logprob: -12.97521686553955
    5. 'ddy' → logprob: -13.47521686553955
    6. ' ' → logprob: -13.97521686553955
    7. 'dym' → logprob: -14.10021686553955
    8. '   ' → logprob: -14.22521686553955
    9. '  ' → logprob: -15.47521686553955
    10. ' dyd' → logprob: -15.97521686553955

Token 189: '*' (ID: 9)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4853106737136841
    2. '*' → logprob: -0.9853106737136841
    3. 'dy' → logprob: -4.7353105545043945
    4. '<|end|>' → logprob: -6.8603105545043945
    5. '*)' → logprob: -7.3603105545043945
    6. '.dy' → logprob: -8.485310554504395
    7. ' dy' → logprob: -8.985310554504395
    8. '),' → logprob: -9.610310554504395
    9. ');' → logprob: -9.860310554504395
    10. ' *' → logprob: -9.860310554504395

Token 190: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0002314303710591048
    2. ' dy' → logprob: -8.375231742858887
    3. '.dy' → logprob: -15.000231742858887
    4. 'Dy' → logprob: -16.00023078918457
    5. '1' → logprob: -16.75023078918457
    6. ' ' → logprob: -16.87523078918457
    7. 'ddy' → logprob: -16.87523078918457
    8. '   ' → logprob: -17.00023078918457
    9. 'd' → logprob: -17.50023078918457
    10. 'dym' → logprob: -17.75023078918457

Token 191: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005072805215604603
    2. ')
' → logprob: -7.625507354736328
    3. ' )' → logprob: -11.000507354736328
    4. ')

' → logprob: -14.000507354736328
    5. '   ' → logprob: -14.875507354736328
    6. ' ' → logprob: -15.125507354736328
    7. ')t' → logprob: -15.500507354736328
    8. ')
' → logprob: -15.625507354736328
    9. ')return' → logprob: -15.625507354736328
    10. ' )
' → logprob: -16.125507354736328

Token 192: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5144901275634766
    2. ' t' → logprob: -1.7644901275634766
    3. 't' → logprob: -2.3894901275634766
    4. '   ' → logprob: -2.5144901275634766
    5. '
' → logprob: -3.2644901275634766
    6. 'if' → logprob: -4.014490127563477
    7. ' ' → logprob: -7.014490127563477
    8. ',' → logprob: -8.264490127563477
    9. ' 
' → logprob: -8.514490127563477
    10. '<|end|>' → logprob: -9.264490127563477

Token 193: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.617715060710907
    2. 't' (adapté à ' t') → logprob: -0.867715060710907
    3. ' if' → logprob: -3.7427151203155518
    4. '   ' → logprob: -4.242714881896973
    5. 'if' → logprob: -5.867714881896973
    6. '
' → logprob: -10.867714881896973
    7. '	t' → logprob: -13.367714881896973
    8. '    
' → logprob: -13.492714881896973
    9. ' ' → logprob: -13.867714881896973
    10. ' 
' → logprob: -13.992714881896973

Token 194: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47409588098526
    2. '=' → logprob: -0.97409588098526
    3. ' if' → logprob: -11.974096298217773
    4. 'if' → logprob: -12.099096298217773
    5. '=max' → logprob: -12.349096298217773
    6. '   ' → logprob: -13.724096298217773
    7. 'max' → logprob: -14.349096298217773
    8. ' ' → logprob: -14.724096298217773
    9. '=min' → logprob: -16.224096298217773
    10. ',' → logprob: -16.474096298217773

Token 195: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.05224921181797981
    2. 'max' → logprob: -3.3022491931915283
    3. ' min' → logprob: -4.302249431610107
    4. 'min' → logprob: -7.552249431610107
    5. '0' → logprob: -10.67724895477295
    6. ' ' → logprob: -10.80224895477295
    7. '1' → logprob: -14.05224895477295
    8. '	max' → logprob: -16.552249908447266
    9. ' m' → logprob: -17.052249908447266
    10. 'm' → logprob: -18.052249908447266

Token 196: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0280383548888494e-06
    2. '0' → logprob: -14.250000953674316
    3. ' (' → logprob: -15.000000953674316
    4. '(
' → logprob: -17.125001907348633
    5. '(t' → logprob: -18.875001907348633
    6. '(

' → logprob: -19.625001907348633
    7. 't' → logprob: -20.750001907348633
    8. '(min' → logprob: -20.875001907348633
    9. '()' → logprob: -21.750001907348633
    10. '```' → logprob: -21.875001907348633

Token 197: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018041854491457343
    2. ' ' → logprob: -8.6251802444458
    3. 'min' → logprob: -15.2501802444458
    4. '   ' → logprob: -15.3751802444458
    5. ')' → logprob: -15.5001802444458
    6. '  ' → logprob: -16.750181198120117
    7. '
' → logprob: -16.875181198120117
    8. '```' → logprob: -17.625181198120117
    9. 't' → logprob: -17.750181198120117
    10. ',' → logprob: -17.750181198120117

Token 198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3557529857498594e-05
    2. ',min' → logprob: -11.37502384185791
    3. ',t' → logprob: -12.00002384185791
    4. ' ,' → logprob: -12.12502384185791
    5. 't' → logprob: -15.50002384185791
    6. 'min' → logprob: -16.000022888183594
    7. ',float' → logprob: -16.500022888183594
    8. '.' → logprob: -17.875022888183594
    9. ' t' → logprob: -18.500022888183594
    10. ')' → logprob: -18.500022888183594

Token 199: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.31362226605415344
    2. ' min' → logprob: -1.313622236251831
    3. 't' → logprob: -8.43862247467041
    4. ' t' → logprob: -8.93862247467041
    5. ')' → logprob: -11.93862247467041
    6. '	min' → logprob: -13.06362247467041
    7. ' ' → logprob: -14.18862247467041
    8. '   ' → logprob: -14.31362247467041
    9. ',min' → logprob: -14.31362247467041
    10. '(min' → logprob: -14.93862247467041

Token 200: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05037597194314003
    2. '1' → logprob: -3.0503759384155273
    3. '(t' → logprob: -6.425375938415527
    4. ' (' → logprob: -9.800375938415527
    5. 't' → logprob: -10.050375938415527
    6. ' t' → logprob: -10.175375938415527
    7. '(
' → logprob: -11.550375938415527
    8. ' ' → logprob: -11.675375938415527
    9. ')' → logprob: -12.050375938415527
    10. ',' → logprob: -12.675375938415527

Token 201: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022894255816936493
    2. 't' → logprob: -6.127289295196533
    3. ' ' → logprob: -9.627289772033691
    4. ' t' → logprob: -10.252289772033691
    5. '   ' → logprob: -13.002289772033691
    6. ')' → logprob: -14.877289772033691
    7. ')t' → logprob: -15.377289772033691
    8. ',' → logprob: -17.002288818359375
    9. '(t' → logprob: -17.002288818359375
    10. '`t' → logprob: -17.252288818359375

Token 202: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.005728390067815781
    2. ',' → logprob: -5.380728244781494
    3. ')' → logprob: -7.005728244781494
    4. ' ))' → logprob: -8.880728721618652
    5. ',t' → logprob: -10.630728721618652
    6. '),' → logprob: -11.505728721618652
    7. '))
' → logprob: -11.880728721618652
    8. ')t' → logprob: -12.005728721618652
    9. ' ,' → logprob: -12.630728721618652
    10. 't' → logprob: -12.630728721618652

Token 203: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3868728280067444
    2. ' t' → logprob: -1.1368727684020996
    3. '	t' → logprob: -14.136873245239258
    4. ')t' → logprob: -14.261873245239258
    5. '`t' → logprob: -15.761873245239258
    6. ')' → logprob: -15.886873245239258
    7. '   ' → logprob: -16.511873245239258
    8. ' ' → logprob: -17.261873245239258
    9. '(t' → logprob: -18.511873245239258
    10. '_t' → logprob: -19.011873245239258

Token 204: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019305046589579433
    2. ')
' → logprob: -8.625192642211914
    3. ' )' → logprob: -11.250192642211914
    4. '))' → logprob: -15.500192642211914
    5. ')

' → logprob: -15.750192642211914
    6. '   ' → logprob: -16.125192642211914
    7. ')
' → logprob: -17.250192642211914
    8. ')`' → logprob: -17.750192642211914
    9. ' )
' → logprob: -17.875192642211914
    10. ')return' → logprob: -18.125192642211914

Token 205: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01678217388689518
    2. ' px' → logprob: -4.516782283782959
    3. '    
' → logprob: -5.891782283782959
    4. 'px' → logprob: -7.266782283782959
    5. '
' → logprob: -7.516782283782959
    6. '  
' → logprob: -7.641782283782959
    7. ' closest' → logprob: -8.2667818069458
    8. ' proj' → logprob: -8.3917818069458
    9. ' x' → logprob: -9.3917818069458
    10. 'proj' → logprob: -9.5167818069458

Token 206: ' proj' (ID: 16022)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' → logprob: -0.6269458532333374
    2. 'proj' (adapté à ' proj') → logprob: -1.1269458532333374
    3. 'qx' → logprob: -2.251945972442627
    4. 'closest' → logprob: -3.751945972442627
    5. '   ' → logprob: -5.626945972442627
    6. 'x' → logprob: -5.751945972442627
    7. 'px' → logprob: -6.001945972442627
    8. 'nx' → logprob: -6.251945972442627
    9. 'nearest' → logprob: -7.626945972442627
    10. 'jx' → logprob: -7.751945972442627

Token 207: 'x' (ID: 87)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.257427841424942
    2. 'x' → logprob: -2.007427930831909
    3. '=' → logprob: -3.382427930831909
    4. 'ected' → logprob: -3.632427930831909
    5. 'ect' → logprob: -3.882427930831909
    6. ' =' → logprob: -4.50742769241333
    7. '_' → logprob: -8.132428169250488
    8. 'ection' → logprob: -9.507428169250488
    9. '_point' → logprob: -10.132428169250488
    10. 'ects' → logprob: -10.257428169250488

Token 208: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018158841878175735
    2. ' =' → logprob: -4.018158912658691
    3. ',' → logprob: -11.893158912658691
    4. '=ax' → logprob: -13.143158912658691
    5. '=
' → logprob: -16.518157958984375
    6. '=

' → logprob: -17.518157958984375
    7. ' =
' → logprob: -18.268157958984375
    8. '=}' → logprob: -18.643157958984375
    9. '=int' → logprob: -18.893157958984375
    10. ' ' → logprob: -19.018157958984375

Token 209: ' ax' (ID: 6807)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.10023178905248642
    2. ' ax' → logprob: -2.350231885910034
    3. '(ax' → logprob: -11.225232124328613
    4. '   ' → logprob: -12.225232124328613
    5. '	ax' → logprob: -12.600232124328613
    6. '=ax' → logprob: -13.225232124328613
    7. '_ax' → logprob: -14.600232124328613
    8. ' ' → logprob: -14.725232124328613
    9. '
' → logprob: -16.100231170654297
    10. 'axon' → logprob: -16.225231170654297

Token 210: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931740641593933
    2. ' +' → logprob: -0.6931740641593933
    3. '+t' → logprob: -10.568174362182617
    4. '+x' → logprob: -14.943174362182617
    5. ' plus' → logprob: -15.693174362182617
    6. ' ' → logprob: -16.193174362182617
    7. '<|end|>' → logprob: -16.193174362182617
    8. '＋' → logprob: -16.318174362182617
    9. ' +
' → logprob: -16.568174362182617
    10. '+p' → logprob: -17.068174362182617

Token 211: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5770339965820312
    2. ' t' → logprob: -0.8270339965820312
    3. 'dx' → logprob: -7.452033996582031
    4. ' dx' → logprob: -7.577033996582031
    5. 'tx' → logprob: -14.577033996582031
    6. 'int' → logprob: -14.952033996582031
    7. ' ' → logprob: -15.327033996582031
    8. ' int' → logprob: -15.702033996582031
    9. '	t' → logprob: -15.827033996582031
    10. '   ' → logprob: -15.827033996582031

Token 212: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.011047814972698689
    2. ' *' → logprob: -4.511047840118408
    3. '*object' → logprob: -18.26104736328125
    4. ' ' → logprob: -18.88604736328125
    5. '**' → logprob: -19.38604736328125
    6. '```' → logprob: -19.88604736328125
    7. '   ' → logprob: -20.01104736328125
    8. '*
' → logprob: -20.38604736328125
    9. 'dx' → logprob: -20.38604736328125
    10. '＊' → logprob: -20.51104736328125

Token 213: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.004078639671206474
    2. ' dx' → logprob: -5.5040788650512695
    3. '_dx' → logprob: -15.12907886505127
    4. '.dx' → logprob: -17.629077911376953
    5. '(dx' → logprob: -17.629077911376953
    6. 'd' → logprob: -19.129077911376953
    7. 'DX' → logprob: -19.379077911376953
    8. 'Dx' → logprob: -19.629077911376953
    9. '<|end|>' → logprob: -20.879077911376953
    10. ' ' → logprob: -22.379077911376953

Token 214: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009563061408698559
    2. 'proj' → logprob: -4.884562969207764
    3. '    
' → logprob: -6.884562969207764
    4. ' 
' → logprob: -8.509563446044922
    5. '<|end|>' → logprob: -8.509563446044922
    6. '   ' → logprob: -8.759563446044922
    7. ' proj' → logprob: -9.134563446044922
    8. '  
' → logprob: -9.759563446044922
    9. '
' → logprob: -9.759563446044922
    10. ',' → logprob: -10.009563446044922

Token 215: '   ' (ID: 271)
  Prédit: ' proj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' proj' → logprob: -0.5935536026954651
    2. 'proj' → logprob: -0.8435536026954651
    3. ',' → logprob: -4.34355354309082
    4. ' 
' → logprob: -6.59355354309082
    5. '_proj' → logprob: -7.21855354309082
    6. '   ' → logprob: -7.71855354309082
    7. ' ,' → logprob: -8.09355354309082
    8. '    
' → logprob: -8.46855354309082
    9. ' proje' → logprob: -8.46855354309082
    10. '
' → logprob: -8.59355354309082

Token 216: ' proj' (ID: 16022)
  Prédit: 'proj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'proj' (adapté à ' proj') → logprob: -0.07032785564661026
    2. ' proj' → logprob: -2.6953277587890625
    3. 'pro' → logprob: -7.9453277587890625
    4. 'prox' → logprob: -11.445327758789062
    5. ',' → logprob: -11.820327758789062
    6. ' proje' → logprob: -12.445327758789062
    7. ' 
' → logprob: -12.945327758789062
    8. 'py' → logprob: -12.945327758789062
    9. 'prow' → logprob: -13.570327758789062
    10. 'prof' → logprob: -13.695327758789062

Token 217: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0017195657128468156
    2. 'x' → logprob: -6.3767194747924805
    3. ' y' → logprob: -11.87671947479248
    4. '```' → logprob: -13.25171947479248
    5. '_y' → logprob: -13.37671947479248
    6. '	y' → logprob: -13.75171947479248
    7. '<|end|>' → logprob: -14.37671947479248
    8. ''y' → logprob: -14.50171947479248
    9. ' ' → logprob: -14.50171947479248
    10. '   ' → logprob: -14.50171947479248

Token 218: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2262241244316101
    2. ' =' → logprob: -1.8512241840362549
    3. ' +' → logprob: -3.726224184036255
    4. '+' → logprob: -3.851224184036255
    5. ' +=' → logprob: -10.601223945617676
    6. ' ' → logprob: -11.476223945617676
    7. '+=' → logprob: -11.601223945617676
    8. '<|end|>' → logprob: -11.601223945617676
    9. ',' → logprob: -11.726223945617676
    10. '
' → logprob: -11.976223945617676

Token 219: ' ay' (ID: 4199)
  Prédit: 'ay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ay' → logprob: -0.0380416102707386
    2. ' ay' → logprob: -3.288041591644287
    3. '   ' → logprob: -15.913042068481445
    4. ' ' → logprob: -17.413042068481445
    5. '
' → logprob: -17.538042068481445
    6. 'aya' → logprob: -19.038042068481445
    7. '  ' → logprob: -19.163042068481445
    8. '    ' → logprob: -19.788042068481445
    9. '(' → logprob: -19.788042068481445
    10. ' oy' → logprob: -20.413042068481445

Token 220: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1602250337600708
    2. ' +' → logprob: -1.9102250337600708
    3. '+
' → logprob: -15.285224914550781
    4. '+y' → logprob: -15.285224914550781
    5. '<|end|>' → logprob: -15.660224914550781
    6. '+t' → logprob: -16.16022491455078
    7. ' +
' → logprob: -16.78522491455078
    8. '＋' → logprob: -16.91022491455078
    9. '+b' → logprob: -17.78522491455078
    10. ' ' → logprob: -18.53522491455078

Token 221: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2519293427467346
    2. ' t' → logprob: -1.5019292831420898
    3. '	t' → logprob: -16.501930236816406
    4. ' ' → logprob: -16.626930236816406
    5. '   ' → logprob: -16.876930236816406
    6. '`t' → logprob: -17.751930236816406
    7. 'y' → logprob: -17.876930236816406
    8. '(t' → logprob: -18.126930236816406
    9. 'tdy' → logprob: -18.126930236816406
    10. ')t' → logprob: -18.376930236816406

Token 222: '*' (ID: 9)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12723129987716675
    2. ' +' → logprob: -2.1272313594818115
    3. '*' → logprob: -8.12723159790039
    4. '+y' → logprob: -11.87723159790039
    5. '+t' → logprob: -15.12723159790039
    6. '+
' → logprob: -15.25223159790039
    7. ' *' → logprob: -15.87723159790039
    8. '*y' → logprob: -17.25223159790039
    9. '+b' → logprob: -17.25223159790039
    10. ' +
' → logprob: -17.87723159790039

Token 223: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.00026503115077503026
    2. ' dy' → logprob: -8.250265121459961
    3. 't' → logprob: -12.500265121459961
    4. ' t' → logprob: -17.37526512145996
    5. 'd' → logprob: -17.50026512145996
    6. 'Dy' → logprob: -18.37526512145996
    7. 'tdy' → logprob: -18.62526512145996
    8. '.dy' → logprob: -19.12526512145996
    9. 'dym' → logprob: -19.37526512145996
    10. 'ty' → logprob: -19.87526512145996

Token 224: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014888284727931023
    2. ' return' → logprob: -4.889888286590576
    3. '
' → logprob: -5.389888286590576
    4. '    
' → logprob: -6.764888286590576
    5. 'return' → logprob: -7.264888286590576
    6. '	return' → logprob: -7.889888286590576
    7. '  
' → logprob: -8.764887809753418
    8. '<|end|>' → logprob: -8.889887809753418
    9. ' 
' → logprob: -9.514887809753418
    10. '   
' → logprob: -10.389887809753418

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027598219458013773
    2. ' return' → logprob: -6.12775993347168
    3. 'return' → logprob: -7.50275993347168
    4. '
' → logprob: -11.12775993347168
    5. '    
' → logprob: -12.25275993347168
    6. '	return' → logprob: -13.50275993347168
    7. '   ' → logprob: -14.62775993347168
    8. '```' → logprob: -14.87775993347168
    9. ',' → logprob: -15.25275993347168
    10. '<|end|>' → logprob: -15.25275993347168

Token 226: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16051556169986725
    2. 'return' (adapté à ' return') → logprob: -2.160515546798706
    3. ' return' → logprob: -3.410515546798706
    4. '	return' → logprob: -12.910515785217285
    5. '
' → logprob: -13.285515785217285
    6. '   ' → logprob: -14.535515785217285
    7. ' ' → logprob: -15.785515785217285
    8. '    
' → logprob: -15.785515785217285
    9. '  ' → logprob: -15.910515785217285
    10. '```' → logprob: -16.53551483154297

Token 227: ' dist' (ID: 3601)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.31961679458618164
    2. 'math' → logprob: -1.3196167945861816
    3. ' dist' → logprob: -5.694616794586182
    4. 'dist' → logprob: -5.819616794586182
    5. '(math' → logprob: -14.069616317749023
    6. '   ' → logprob: -14.194616317749023
    7. 'Math' → logprob: -14.944616317749023
    8. ' ' → logprob: -16.069616317749023
    9. 'abs' → logprob: -16.694616317749023
    10. 'distance' → logprob: -17.069616317749023

Token 228: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -7.822646693966817e-06
    2. '_' → logprob: -12.125007629394531
    3. '_Point' → logprob: -14.000007629394531
    4. '_project' → logprob: -14.875007629394531
    5. '_points' → logprob: -15.250007629394531
    6. '(_' → logprob: -15.500007629394531
    7. '_p' → logprob: -15.500007629394531
    8. ' _' → logprob: -15.875007629394531
    9. '_POINT' → logprob: -16.12500762939453
    10. '(Point' → logprob: -16.25000762939453

Token 229: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.00021093101531732827
    2. '_segment' → logprob: -8.625210762023926
    3. '_' → logprob: -11.125210762023926
    4. '_p' → logprob: -12.000210762023926
    5. ' _' → logprob: -13.000210762023926
    6. '_project' → logprob: -13.250210762023926
    7. '_Point' → logprob: -13.625210762023926
    8. '_line' → logprob: -14.250210762023926
    9. '_points' → logprob: -14.500210762023926
    10. '_pro' → logprob: -14.625210762023926

Token 230: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.030055351555347443
    2. '(pro' → logprob: -3.530055284500122
    3. '(px' → logprob: -8.280055046081543
    4. '(' → logprob: -10.155055046081543
    5. '(project' → logprob: -12.280055046081543
    6. '(p' → logprob: -13.155055046081543
    7. '(py' → logprob: -13.155055046081543
    8. ' (' → logprob: -13.405055046081543
    9. '   ' → logprob: -14.530055046081543
    10. ' ((' → logprob: -14.780055046081543

Token 231: 'px' (ID: 3207)
  Prédit: 'px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.1613609343767166
    2. '(px' → logprob: -1.9113609790802002
    3. ' px' → logprob: -7.161360740661621
    4. 'proj' → logprob: -8.036360740661621
    5. ' (' → logprob: -11.161360740661621
    6. '   ' → logprob: -12.036360740661621
    7. ':px' → logprob: -12.661360740661621
    8. '(pro' → logprob: -12.786360740661621
    9. 'p' → logprob: -13.536360740661621
    10. 'py' → logprob: -13.786360740661621

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005817461642436683
    2. 'py' → logprob: -8.500581741333008
    3. 'proj' → logprob: -8.875581741333008
    4. 'pro' → logprob: -9.250581741333008
    5. '(pro' → logprob: -10.000581741333008
    6. ',p' → logprob: -10.000581741333008
    7. ' ,' → logprob: -10.250581741333008
    8. ',
' → logprob: -11.625581741333008
    9. ',y' → logprob: -13.125581741333008
    10. 'px' → logprob: -13.250581741333008

Token 233: 'py' (ID: 5823)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.008314206264913082
    2. 'py' → logprob: -4.88331413269043
    3. 'proj' → logprob: -7.38331413269043
    4. ' proj' → logprob: -9.75831413269043
    5. ' py' → logprob: -11.75831413269043
    6. ' pro' → logprob: -12.50831413269043
    7. 'px' → logprob: -12.75831413269043
    8. 'p' → logprob: -12.75831413269043
    9. ' ' → logprob: -13.25831413269043
    10. '(pro' → logprob: -13.38331413269043

Token 234: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0030607767403125763
    2. ',' → logprob: -5.878060817718506
    3. '),(' → logprob: -8.378060340881348
    4. '   ' → logprob: -11.128060340881348
    5. ' ),' → logprob: -12.378060340881348
    6. '(' → logprob: -12.628060340881348
    7. '(pro' → logprob: -13.878060340881348
    8. ' ,' → logprob: -14.003060340881348
    9. ',),' → logprob: -14.128060340881348
    10. ',(' → logprob: -15.253060340881348

Token 235: ' (' (ID: 350)
  Prédit: '(pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pro' → logprob: -0.00043591417488642037
    2. ' (' → logprob: -7.750435829162598
    3. '(project' → logprob: -13.000435829162598
    4. '   ' → logprob: -13.250435829162598
    5. '(' → logprob: -14.125435829162598
    6. ' ' → logprob: -15.875435829162598
    7. '  ' → logprob: -16.125436782836914
    8. '(pr' → logprob: -16.500436782836914
    9. '(prob' → logprob: -17.250436782836914
    10. '(pre' → logprob: -17.500436782836914

Token 236: 'proj' (ID: 75737)
  Prédit: '(pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pro' → logprob: -0.012009307742118835
    2. 'proj' → logprob: -4.512009143829346
    3. ' (' → logprob: -7.512009143829346
    4. 'pro' → logprob: -8.387009620666504
    5. '   ' → logprob: -9.637009620666504
    6. ' proj' → logprob: -9.762009620666504
    7. '(project' → logprob: -10.262009620666504
    8. 'project' → logprob: -12.012009620666504
    9. '  ' → logprob: -12.387009620666504
    10. ')' → logprob: -12.762009620666504

Token 237: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: 0.0
    2. '```' → logprob: -17.5
    3. ' x' → logprob: -18.375
    4. '(x' → logprob: -18.375
    5. '
' → logprob: -18.5
    6. ')' → logprob: -19.0
    7. 'j' → logprob: -19.0
    8. '   ' → logprob: -19.0
    9. 'y' → logprob: -19.375
    10. '_x' → logprob: -19.625

Token 238: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.0484450437361374e-05
    2. ' ,' → logprob: -10.750040054321289
    3. ',p' → logprob: -11.250040054321289
    4. ',
' → logprob: -12.375040054321289
    5. ',pos' → logprob: -14.500040054321289
    6. 'pro' → logprob: -15.125040054321289
    7. ',y' → logprob: -15.250040054321289
    8. '(pro' → logprob: -16.25004005432129
    9. ',t' → logprob: -16.25004005432129
    10. '
' → logprob: -16.62504005432129

Token 239: ' proj' (ID: 16022)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.00023226479243021458
    2. 'proj' → logprob: -8.750232696533203
    3. ' proj' → logprob: -10.000232696533203
    4. ' pro' → logprob: -11.875232696533203
    5. '	pro' → logprob: -12.000232696533203
    6. ' ' → logprob: -12.125232696533203
    7. 'proxy' → logprob: -12.500232696533203
    8. ' proje' → logprob: -13.500232696533203
    9. '```' → logprob: -13.750232696533203
    10. '
' → logprob: -14.125232696533203

Token 240: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0012540421448647976
    2. 'py' → logprob: -7.126254081726074
    3. 'iy' → logprob: -8.126254081726074
    4. 'ey' → logprob: -9.876254081726074
    5. 'jy' → logprob: -10.876254081726074
    6. ')' → logprob: -11.376254081726074
    7. 'yj' → logprob: -11.376254081726074
    8. 'ypy' → logprob: -12.376254081726074
    9. 'qy' → logprob: -12.376254081726074
    10. 'proj' → logprob: -12.376254081726074

Token 241: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3868870735168457
    2. ')' → logprob: -1.1368870735168457
    3. ')
' → logprob: -11.761886596679688
    4. '))
' → logprob: -12.136886596679688
    5. ')))' → logprob: -13.136886596679688
    6. ' )' → logprob: -15.261886596679688
    7. ' ))' → logprob: -15.636886596679688
    8. '   ' → logprob: -16.261886596679688
    9. ')return' → logprob: -16.261886596679688
    10. ')}' → logprob: -16.511886596679688

Token 242: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015613613650202751
    2. '
' → logprob: -4.265613555908203
    3. '

' → logprob: -6.765613555908203
    4. '```' → logprob: -8.765613555908203
    5. 'class' → logprob: -10.515613555908203
    6. '  
' → logprob: -10.640613555908203
    7. '\' → logprob: -10.765613555908203
    8. '    
' → logprob: -11.015613555908203
    9. '
' → logprob: -11.265613555908203
    10. ' 
' → logprob: -11.390613555908203

Token 243: ' dist' (ID: 3601)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3641320765018463
    2. ' solve' → logprob: -3.3641321659088135
    3. ' polygon' → logprob: -3.6141321659088135
    4. ' is' → logprob: -3.6141321659088135
    5. 'main' → logprob: -3.6141321659088135
    6. ' point' → logprob: -3.7391321659088135
    7. ' dist' → logprob: -3.8641321659088135
    8. ' perimeter' → logprob: -3.9891321659088135
    9. ' line' → logprob: -4.114131927490234
    10. ' find' → logprob: -4.489131927490234

Token 244: '_segment' (ID: 71041)
  Prédit: '_point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.03923165425658226
    2. '_polygon' → logprob: -4.289231777191162
    3. '_segment' → logprob: -4.414231777191162
    4. '_line' → logprob: -5.289231777191162
    5. '_poly' → logprob: -5.914231777191162
    6. '_circle' → logprob: -6.039231777191162
    7. '_triangle' → logprob: -7.539231777191162
    8. '_' → logprob: -8.664231300354004
    9. '_path' → logprob: -8.664231300354004
    10. '_rectangle' → logprob: -8.789231300354004

Token 245: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.012938909232616425
    2. '_point' → logprob: -4.387938976287842
    3. '_line' → logprob: -8.637938499450684
    4. '_segments' → logprob: -9.387938499450684
    5. '_points' → logprob: -10.137938499450684
    6. '_' → logprob: -10.637938499450684
    7. 'a' → logprob: -10.887938499450684
    8. '(a' → logprob: -11.012938499450684
    9. '_polygon' → logprob: -11.637938499450684
    10. '_endpoint' → logprob: -11.762938499450684

Token 246: '(a' (ID: 6271)
  Prédit: '(ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ax' → logprob: -6.2729995988775045e-06
    2. '(a' → logprob: -12.625006675720215
    3. '((' → logprob: -14.000006675720215
    4. '(' → logprob: -14.375006675720215
    5. '(x' → logprob: -14.375006675720215
    6. '(px' → logprob: -14.750006675720215
    7. '(
' → logprob: -15.500006675720215
    8. '```' → logprob: -16.1250057220459
    9. ' (' → logprob: -17.1250057220459
    10. '(s' → logprob: -17.8750057220459

Token 247: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1323280781507492
    2. ',' → logprob: -2.1323280334472656
    3. 'a' → logprob: -5.882328033447266
    4. '0' → logprob: -7.257328033447266
    5. '[' → logprob: -7.507328033447266
    6. '_x' → logprob: -7.882328033447266
    7. ' ,' → logprob: -8.132328033447266
    8. '(ax' → logprob: -8.257328033447266
    9. ',a' → logprob: -8.882328033447266
    10. '(a' → logprob: -9.757328033447266

Token 248: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4207788407802582
    2. '[' → logprob: -1.7957788705825806
    3. 'x' → logprob: -1.7957788705825806
    4. 'a' → logprob: -5.295778751373291
    5. ' ,' → logprob: -6.295778751373291
    6. ',a' → logprob: -6.420778751373291
    7. '_x' → logprob: -6.670778751373291
    8. '0' → logprob: -8.04577922821045
    9. ' ' → logprob: -8.17077922821045
    10. ',
' → logprob: -8.29577922821045

Token 249: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00151081255171448
    2. ' a' → logprob: -6.5015106201171875
    3. 'b' → logprob: -12.251510620117188
    4. '(a' → logprob: -12.876510620117188
    5. 'ay' → logprob: -14.376510620117188
    6. ' ' → logprob: -16.001510620117188
    7. 'ax' → logprob: -16.376510620117188
    8. ' ay' → logprob: -16.626510620117188
    9. '	a' → logprob: -16.751510620117188
    10. '#a' → logprob: -16.751510620117188

Token 250: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.017371637746691704
    2. 'x' → logprob: -4.267371654510498
    3. '2' → logprob: -6.017371654510498
    4. '1' → logprob: -7.892371654510498
    5. '[' → logprob: -8.14237117767334
    6. ',' → logprob: -9.39237117767334
    7. '(' → logprob: -11.26737117767334
    8. '_x' → logprob: -13.64237117767334
    9. 'a' → logprob: -13.76737117767334
    10. '```' → logprob: -13.89237117767334

Token 251: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018885416211560369
    2. 'a' → logprob: -7.126888751983643
    3. ',a' → logprob: -7.126888751983643
    4. ' ,' → logprob: -9.501888275146484
    5. '):' → logprob: -9.876888275146484
    6. '_,' → logprob: -10.376888275146484
    7. ',
' → logprob: -10.751888275146484
    8. ',b' → logprob: -10.876888275146484
    9. '[' → logprob: -11.001888275146484
    10. '),' → logprob: -11.001888275146484

Token 252: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.012515183538198471
    2. ' b' → logprob: -4.387515068054199
    3. 'a' → logprob: -12.7625150680542
    4. 'def' → logprob: -13.6375150680542
    5. '   ' → logprob: -14.6375150680542
    6. '):
' → logprob: -14.6375150680542
    7. ')' → logprob: -15.6375150680542
    8. '<|end|>' → logprob: -15.8875150680542
    9. ')b' → logprob: -16.012516021728516
    10. '(b' → logprob: -16.262516021728516

Token 253: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010223194840364158
    2. '0' → logprob: -9.875102043151855
    3. ',' → logprob: -10.625102043151855
    4. '_' → logprob: -11.500102043151855
    5. '[' → logprob: -11.750102043151855
    6. ')' → logprob: -11.875102043151855
    7. '):' → logprob: -15.500102043151855
    8. 'a' → logprob: -15.625102043151855
    9. 'def' → logprob: -15.625102043151855
    10. '_start' → logprob: -15.750102043151855

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012046386254951358
    2. '):' → logprob: -7.001204490661621
    3. '):
' → logprob: -8.251204490661621
    4. ' ,' → logprob: -10.751204490661621
    5. ',b' → logprob: -12.501204490661621
    6. ',
' → logprob: -12.876204490661621
    7. ',a' → logprob: -13.626204490661621
    8. '   ' → logprob: -14.126204490661621
    9. '):

' → logprob: -14.251204490661621
    10. ')' → logprob: -14.251204490661621

Token 255: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005233763717114925
    2. ' b' → logprob: -5.2552337646484375
    3. ')b' → logprob: -18.880233764648438
    4. ' ' → logprob: -19.255233764648438
    5. '<|end|>' → logprob: -19.380233764648438
    6. ')' → logprob: -20.005233764648438
    7. '_b' → logprob: -20.505233764648438
    8. '...' → logprob: -21.380233764648438
    9. '	b' → logprob: -21.630233764648438
    10. ',b' → logprob: -21.630233764648438

Token 256: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. '1' → logprob: -15.5
    3. ' ' → logprob: -18.5
    4. '₂' → logprob: -19.25
    5. '_' → logprob: -19.625
    6. ')' → logprob: -19.625
    7. '۲' → logprob: -19.75
    8. '```' → logprob: -20.5
    9. '２' → logprob: -20.625
    10. 'b' → logprob: -21.25

Token 257: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009374279179610312
    2. '):
' → logprob: -7.000937461853027
    3. ' ):' → logprob: -10.875937461853027
    4. ')' → logprob: -12.375937461853027
    5. ',' → logprob: -13.500937461853027
    6. '):
' → logprob: -14.250937461853027
    7. ':' → logprob: -15.000937461853027
    8. '   ' → logprob: -15.250937461853027
    9. '):

' → logprob: -16.12593650817871
    10. ' ' → logprob: -17.25093650817871

Token 258: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002101133344694972
    2. '#' → logprob: -6.502100944519043
    3. 'min' → logprob: -8.502100944519043
    4. 'd' → logprob: -9.377100944519043
    5. 'ax' → logprob: -9.377100944519043
    6. 'import' → logprob: -10.127100944519043
    7. 'p' → logprob: -10.502100944519043
    8. 'a' → logprob: -10.502100944519043
    9. 's' → logprob: -10.752100944519043
    10. '
' → logprob: -10.752100944519043

Token 259: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3188193738460541
    2. 'res' → logprob: -2.318819284439087
    3. 'min' → logprob: -2.443819284439087
    4. '   ' → logprob: -3.318819284439087
    5. 'inf' → logprob: -3.943819284439087
    6. 'dist' → logprob: -4.568819522857666
    7. '#' (adapté à ' #') → logprob: -4.943819522857666
    8. 'best' → logprob: -5.943819522857666
    9. 'INF' → logprob: -6.068819522857666
    10. 'ans' → logprob: -6.568819522857666

Token 260: ' distance' (ID: 9324)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.40606689453125
    2. 'd' → logprob: -1.40606689453125
    3. 'return' → logprob: -2.53106689453125
    4. 'res' → logprob: -5.40606689453125
    5. 'dist' → logprob: -5.78106689453125
    6. ' min' → logprob: -8.53106689453125
    7. 'p' → logprob: -8.90606689453125
    8. '   ' → logprob: -9.03106689453125
    9. 'mind' → logprob: -9.15606689453125
    10. 'da' → logprob: -9.15606689453125

Token 261: ' between' (ID: 2870)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2563697397708893
    2. ' between' → logprob: -2.1313698291778564
    3. 'def' → logprob: -3.5063698291778564
    4. ' =' → logprob: -4.006369590759277
    5. 'a' → logprob: -4.506369590759277
    6. '(a' → logprob: -4.506369590759277
    7. '_a' → logprob: -4.881369590759277
    8. ' a' → logprob: -5.131369590759277
    9. 'between' → logprob: -5.256369590759277
    10. '=' → logprob: -5.506369590759277

Token 262: ' two' (ID: 1920)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0014060672838240862
    2. ' a' → logprob: -6.626406192779541
    3. '(a' → logprob: -9.876405715942383
    4. '(' → logprob: -10.751405715942383
    5. ' (' → logprob: -12.626405715942383
    6. 'def' → logprob: -13.126405715942383
    7. 'dist' → logprob: -15.126405715942383
    8. 'Segment' → logprob: -15.501405715942383
    9. 'segment' → logprob: -15.501405715942383
    10. '(
' → logprob: -15.626405715942383

Token 263: ' ' (ID: 220)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.13870549201965332
    2. 'points' → logprob: -2.7637054920196533
    3. 'line' → logprob: -3.3887054920196533
    4. ' segments' → logprob: -4.263705253601074
    5. 'point' → logprob: -5.013705253601074
    6. ' line' → logprob: -5.638705253601074
    7. 'a' → logprob: -5.638705253601074
    8. ' points' → logprob: -6.263705253601074
    9. 'segment' → logprob: -7.263705253601074
    10. 'lines' → logprob: -7.388705253601074

Token 264: '2' (ID: 17)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1974177360534668
    2. 'points' → logprob: -1.9474177360534668
    3. '(' → logprob: -4.572417736053467
    4. 'segments' → logprob: -5.197417736053467
    5. 'point' → logprob: -5.322417736053467
    6. '(a' → logprob: -5.572417736053467
    7. 'tu' → logprob: -5.822417736053467
    8. 'tuple' → logprob: -6.197417736053467
    9. ' tuples' → logprob: -6.197417736053467
    10. ' points' → logprob: -6.572417736053467

Token 265: 'D' (ID: 35)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.6162764430046082
    2. 'def' → logprob: -1.616276502609253
    3. ' tuples' → logprob: -2.366276502609253
    4. 'segments' → logprob: -2.741276502609253
    5. ' points' → logprob: -3.366276502609253
    6. 'a' → logprob: -3.616276502609253
    7. ' segments' → logprob: -4.866276264190674
    8. 'tu' → logprob: -5.491276264190674
    9. '_points' → logprob: -5.616276264190674
    10. '_point' → logprob: -5.741276264190674

Token 266: ' segments' (ID: 33749)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.2265814244747162
    2. ' points' → logprob: -2.101581335067749
    3. 'segments' → logprob: -2.601581335067749
    4. ' segments' → logprob: -6.101581573486328
    5. 'def' → logprob: -6.476581573486328
    6. 'point' → logprob: -7.226581573486328
    7. 'a' → logprob: -7.476581573486328
    8. ' tuples' → logprob: -7.726581573486328
    9. '(a' → logprob: -7.851581573486328
    10. '(points' → logprob: -8.726581573486328

Token 267: ' a' (ID: 261)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8120869398117065
    2. 'min' → logprob: -1.5620869398117065
    3. '   ' → logprob: -2.562087059020996
    4. ' =' → logprob: -2.562087059020996
    5. 'a' → logprob: -3.062087059020996
    6. 'd' → logprob: -3.187087059020996
    7. '(a' → logprob: -3.937087059020996
    8. '=' → logprob: -4.062087059020996
    9. '(ax' → logprob: -4.562087059020996
    10. 'if' → logprob: -4.687087059020996

Token 268: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23669961094856262
    2. '2' → logprob: -1.6116995811462402
    3. ',' → logprob: -5.86169958114624
    4. 'a' → logprob: -5.98669958114624
    5. '_' → logprob: -6.36169958114624
    6. '((' → logprob: -7.23669958114624
    7. '(a' → logprob: -7.23669958114624
    8. 'def' → logprob: -7.36169958114624
    9. ' =' → logprob: -7.73669958114624
    10. ')' → logprob: -8.486700057983398

Token 269: 'a' (ID: 64)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01050792820751667
    2. ',a' → logprob: -4.760508060455322
    3. 'a' → logprob: -6.635508060455322
    4. ' ,' → logprob: -8.010507583618164
    5. ',
' → logprob: -9.760507583618164
    6. '[' → logprob: -10.010507583618164
    7. '(a' → logprob: -10.385507583618164
    8. ' a' → logprob: -10.510507583618164
    9. '<|end|>' → logprob: -10.510507583618164
    10. ')' → logprob: -11.385507583618164

Token 270: '2' (ID: 17)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5644795894622803
    2. 'b' → logprob: -1.1894795894622803
    3. ',' → logprob: -2.8144795894622803
    4. ' a' → logprob: -3.1894795894622803
    5. ' b' → logprob: -4.064479827880859
    6. '2' → logprob: -5.314479827880859
    7. '1' → logprob: -6.314479827880859
    8. ',a' → logprob: -7.064479827880859
    9. ',b' → logprob: -7.814479827880859
    10. ' ' → logprob: -8.18947982788086

Token 271: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07495490461587906
    2. '):' → logprob: -2.9499549865722656
    3. ':' → logprob: -4.699954986572266
    4. '(a' → logprob: -5.074954986572266
    5. '(' → logprob: -6.699954986572266
    6. '):
' → logprob: -7.324954986572266
    7. 'a' → logprob: -7.324954986572266
    8. ' (' → logprob: -7.699954986572266
    9. ',a' → logprob: -7.699954986572266
    10. ' ,' → logprob: -7.824954986572266

Token 272: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0052386182360351086
    2. ' b' → logprob: -5.2552385330200195
    3. '(b' → logprob: -12.88023853302002
    4. '(' → logprob: -13.25523853302002
    5. ' (' → logprob: -15.13023853302002
    6. ' ' → logprob: -16.130239486694336
    7. ',b' → logprob: -18.130239486694336
    8. ')b' → logprob: -18.130239486694336
    9. '  ' → logprob: -18.630239486694336
    10. '   ' → logprob: -19.005239486694336

Token 273: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '3' → logprob: -15.625000953674316
    3. 'b' → logprob: -15.875000953674316
    4. ' ' → logprob: -15.875000953674316
    5. '
' → logprob: -16.125
    6. '(' → logprob: -16.625
    7. '```' → logprob: -16.875
    8. ')' → logprob: -17.875
    9. '[' → logprob: -18.125
    10. '...' → logprob: -18.25

Token 274: 'b' (ID: 65)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0054343887604773045
    2. ',b' → logprob: -5.880434513092041
    3. 'b' → logprob: -6.005434513092041
    4. ' b' → logprob: -9.255434036254883
    5. ' ,' → logprob: -10.505434036254883
    6. 'a' → logprob: -11.505434036254883
    7. ',
' → logprob: -11.880434036254883
    8. ')' → logprob: -12.380434036254883
    9. ' ' → logprob: -13.005434036254883
    10. 'def' → logprob: -13.130434036254883

Token 275: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0011874916963279247
    2. '1' → logprob: -6.751187324523926
    3. '_' → logprob: -11.501187324523926
    4. '(' → logprob: -12.876187324523926
    5. '```' → logprob: -13.501187324523926
    6. ' ' → logprob: -13.626187324523926
    7. '23' → logprob: -14.126187324523926
    8. 'a' → logprob: -15.376187324523926
    9. '3' → logprob: -15.501187324523926
    10. ')' → logprob: -15.501187324523926

Token 276: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048673778772354126
    2. ':' → logprob: -3.6736738681793213
    3. 'def' → logprob: -4.423673629760742
    4. ':
' → logprob: -6.048673629760742
    5. ',' → logprob: -6.298673629760742
    6. '(a' → logprob: -6.423673629760742
    7. '):
' → logprob: -7.423673629760742
    8. 'a' → logprob: -7.423673629760742
    9. '=' → logprob: -7.673673629760742
    10. ' =' → logprob: -7.673673629760742

Token 277: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02670164220035076
    2. 'd' → logprob: -4.5267014503479
    3. 'min' → logprob: -4.6517014503479
    4. 'a' → logprob: -6.4017014503479
    5. 'def' → logprob: -6.5267014503479
    6. 'p' → logprob: -7.1517014503479
    7. 'm' → logprob: -8.401701927185059
    8. 'points' → logprob: -8.401701927185059
    9. 'dist' → logprob: -8.651701927185059
    10. ' min' → logprob: -9.151701927185059

Token 278: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3960514962673187
    2. 'return' → logprob: -1.1460515260696411
    3. 'res' → logprob: -5.021051406860352
    4. 'c' → logprob: -6.896051406860352
    5. 'dist' → logprob: -7.021051406860352
    6. 'da' → logprob: -8.646051406860352
    7. 'ds' → logprob: -8.896051406860352
    8. 'ans' → logprob: -9.021051406860352
    9. 'min' → logprob: -9.521051406860352
    10. '   ' → logprob: -9.896051406860352

Token 279: ' check' (ID: 2371)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1978575736284256
    2. 'return' → logprob: -1.8228576183319092
    3. 'res' → logprob: -4.32285737991333
    4. 'c' → logprob: -6.44785737991333
    5. 'da' → logprob: -7.44785737991333
    6. ' return' → logprob: -7.44785737991333
    7. 'ds' → logprob: -7.44785737991333
    8. 'dist' → logprob: -7.44785737991333
    9. ' d' → logprob: -8.322857856750488
    10. '   ' → logprob: -8.822857856750488

Token 280: ' endpoints' (ID: 76454)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6981203556060791
    2. 'min' → logprob: -1.073120355606079
    3. ' min' → logprob: -1.948120355606079
    4. ' dist' → logprob: -4.4481201171875
    5. '(dist' → logprob: -5.6981201171875
    6. 'a' → logprob: -6.5731201171875
    7. '(min' → logprob: -7.6981201171875
    8. 'd' → logprob: -7.9481201171875
    9. 'max' → logprob: -8.4481201171875
    10. '   ' → logprob: -9.1981201171875

Token 281: ' to' (ID: 316)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3800760805606842
    2. 'd' → logprob: -1.7550760507583618
    3. ' d' → logprob: -3.0050761699676514
    4. ' dist' → logprob: -3.5050761699676514
    5. ' =' → logprob: -3.7550761699676514
    6. '   ' → logprob: -4.005075931549072
    7. ' distances' → logprob: -4.880075931549072
    8. '_dist' → logprob: -5.630075931549072
    9. '=' → logprob: -6.130075931549072
    10. 'a' → logprob: -6.255075931549072

Token 282: ' other' (ID: 1273)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05365152284502983
    2. 'b' → logprob: -3.1786515712738037
    3. 'dist' → logprob: -5.303651332855225
    4. ' a' → logprob: -6.428651332855225
    5. 'def' → logprob: -6.928651332855225
    6. 'min' → logprob: -6.928651332855225
    7. 'return' → logprob: -7.928651332855225
    8. ' b' → logprob: -8.678651809692383
    9. '0' → logprob: -9.178651809692383
    10. '#' → logprob: -9.178651809692383

Token 283: ' segment' (ID: 14806)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5004501938819885
    2. ' segments' → logprob: -1.7504501342773438
    3. 'segments' → logprob: -3.1254501342773438
    4. ':' → logprob: -3.5004501342773438
    5. 'line' → logprob: -4.125450134277344
    6. '=' → logprob: -4.250450134277344
    7. '.' → logprob: -4.375450134277344
    8. '[' → logprob: -4.500450134277344
    9. 'segment' → logprob: -4.500450134277344
    10. ' line' → logprob: -4.500450134277344

Token 284: ' distances' (ID: 48294)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3803027272224426
    2. '   ' → logprob: -1.6303026676177979
    3. 'dist' → logprob: -2.880302667617798
    4. 'a' → logprob: -3.380302667617798
    5. 'return' → logprob: -3.880302667617798
    6. 'da' → logprob: -6.130302906036377
    7. 'min' → logprob: -6.380302906036377
    8. 'def' → logprob: -6.880302906036377
    9. ' d' → logprob: -6.880302906036377
    10. 'points' → logprob: -7.505302906036377

Token 285: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3306882679462433
    2. 'd' → logprob: -2.455688238143921
    3. '
' → logprob: -2.580688238143921
    4. 'dist' → logprob: -2.705688238143921
    5. 'a' → logprob: -3.580688238143921
    6. ',' → logprob: -5.2056884765625
    7. 'return' → logprob: -5.2056884765625
    8. '```' → logprob: -6.2056884765625
    9. '    
' → logprob: -6.3306884765625
    10. ' dist' → logprob: -6.8306884765625

Token 286: ' plus' (ID: 2932)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8854467272758484
    2. ' min' → logprob: -1.3854467868804932
    3. 'min' → logprob: -1.8854467868804932
    4. ' d' → logprob: -2.010446786880493
    5. 'return' → logprob: -3.760446786880493
    6. ' return' → logprob: -4.760446548461914
    7. 'dist' → logprob: -5.010446548461914
    8. ' res' → logprob: -5.635446548461914
    9. '   ' → logprob: -5.760446548461914
    10. ' dist' → logprob: -6.135446548461914

Token 287: ' segments' (ID: 33749)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.03220871090888977
    2. ' dist' → logprob: -3.5322086811065674
    3. 'min' → logprob: -6.1572089195251465
    4. ' min' → logprob: -8.782208442687988
    5. 'max' → logprob: -9.032208442687988
    6. '   ' → logprob: -10.657208442687988
    7. 'abs' → logprob: -11.657208442687988
    8. ' max' → logprob: -11.782208442687988
    9. '	dist' → logprob: -12.407208442687988
    10. '(dist' → logprob: -12.532208442687988

Token 288: ' intersect' (ID: 64353)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.619417130947113
    2. 'dist' → logprob: -1.8694171905517578
    3. 'def' → logprob: -2.244417190551758
    4. '_points' → logprob: -3.494417190551758
    5. ' endpoints' → logprob: -3.869417190551758
    6. '_a' → logprob: -3.869417190551758
    7. 'import' → logprob: -4.119417190551758
    8. '   ' → logprob: -4.244417190551758
    9. '_cross' → logprob: -4.494417190551758
    10. ' =' → logprob: -4.619417190551758

Token 289: 'ing' (ID: 289)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17144134640693665
    2. ' if' → logprob: -2.9214413166046143
    3. 'def' → logprob: -3.1714413166046143
    4. 'import' → logprob: -4.046441555023193
    5. 'ion' → logprob: -4.296441555023193
    6. 'if' → logprob: -4.421441555023193
    7. ' (' → logprob: -5.546441555023193
    8. '(a' → logprob: -5.671441555023193
    9. ',' → logprob: -6.296441555023193
    10. '    
' → logprob: -6.796441555023193

Token 290: ' consider' (ID: 3331)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0521873235702515
    2. 'def' → logprob: -1.6771873235702515
    3. '   ' → logprob: -2.177187442779541
    4. 'from' → logprob: -2.302187442779541
    5. 'import' → logprob: -2.677187442779541
    6. '(ax' → logprob: -3.302187442779541
    7. ' if' → logprob: -3.427187442779541
    8. '(a' → logprob: -3.427187442779541
    9. 'a' → logprob: -3.677187442779541
    10. ' (' → logprob: -3.927187442779541

Token 291: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3685364723205566
    2. 'import' → logprob: -1.4935364723205566
    3. ' a' → logprob: -2.1185364723205566
    4. 'def' → logprob: -2.6185364723205566
    5. 'if' → logprob: -2.7435364723205566
    6. 'inter' → logprob: -3.3685364723205566
    7. '(a' → logprob: -3.6185364723205566
    8. '#' → logprob: -3.7435364723205566
    9. ' segments' → logprob: -3.7435364723205566
    10. ' if' → logprob: -3.9935364723205566

Token 292: '0' (ID: 15)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.621536374092102
    2. 'import' → logprob: -2.1215362548828125
    3. '0' → logprob: -2.2465362548828125
    4. 'segments' → logprob: -2.9965362548828125
    5. 'if' → logprob: -3.4965362548828125
    6. 'lambda' → logprob: -3.9965362548828125
    7. ' ' → logprob: -4.1215362548828125
    8. 'the' → logprob: -4.2465362548828125
    9. 'segment' → logprob: -4.3715362548828125
    10. 'cross' → logprob: -4.7465362548828125

Token 293: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11506769806146622
    2. ' if' → logprob: -3.615067720413208
    3. 'if' → logprob: -3.615067720413208
    4. 'import' → logprob: -3.740067720413208
    5. 'a' → logprob: -4.365067481994629
    6. 'def' → logprob: -5.115067481994629
    7. '
' → logprob: -6.365067481994629
    8. ':
' → logprob: -6.365067481994629
    9. '(ax' → logprob: -6.615067481994629
    10. 'from' → logprob: -6.740067481994629

Token 294: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004629838280379772
    2. 'a' → logprob: -6.754629611968994
    3. 'import' → logprob: -7.129629611968994
    4. 'if' → logprob: -7.254629611968994
    5. '
' → logprob: -7.754629611968994
    6. 'from' → logprob: -7.879629611968994
    7. 'def' → logprob: -8.004630088806152
    8. '    
' → logprob: -8.129630088806152
    9. ' if' → logprob: -8.754630088806152
    10. ' a' → logprob: -9.629630088806152

Token 295: ' if' (ID: 538)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18632474541664124
    2. 'ax' → logprob: -2.8113248348236084
    3. 'if' (adapté à ' if') → logprob: -3.3113248348236084
    4. 'x' → logprob: -4.061324596405029
    5. '   ' → logprob: -4.311324596405029
    6. '#' → logprob: -4.686324596405029
    7. 'dx' → logprob: -4.811324596405029
    8. 'Ax' → logprob: -4.811324596405029
    9. 'a' → logprob: -5.061324596405029
    10. 'A' → logprob: -5.686324596405029

Token 296: ' segments' (ID: 33749)
  Prédit: ' segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.3696139454841614
    2. 'segments' → logprob: -1.8696138858795166
    3. ' (' → logprob: -3.6196138858795166
    4. 'do' → logprob: -3.7446138858795166
    5. ' intersect' → logprob: -3.8696138858795166
    6. 'inter' → logprob: -3.9946138858795166
    7. '(' → logprob: -4.119614124298096
    8. 'dist' → logprob: -4.119614124298096
    9. ' lines' → logprob: -5.369614124298096
    10. ' dist' → logprob: -5.369614124298096

Token 297: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -3.666993507067673e-05
    2. 'inter' → logprob: -10.375036239624023
    3. '_overlap' → logprob: -12.875036239624023
    4. '_' → logprob: -13.500036239624023
    5. '_have' → logprob: -14.375036239624023
    6. 'Intersect' → logprob: -15.500036239624023
    7. '_do' → logprob: -15.625036239624023
    8. '_cross' → logprob: -15.750036239624023
    9. '_are' → logprob: -16.250036239624023
    10. '_touch' → logprob: -16.375036239624023

Token 298: 'sect' (ID: 16910)
  Prédit: 'sect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sect' → logprob: -0.000474521511932835
    2. 'sects' → logprob: -7.750474452972412
    3. 's' → logprob: -10.87547492980957
    4. 'se' → logprob: -11.87547492980957
    5. '```' → logprob: -12.12547492980957
    6. 'section' → logprob: -12.37547492980957
    7. '``' → logprob: -13.50047492980957
    8. '
' → logprob: -14.00047492980957
    9. 'set' → logprob: -14.37547492980957
    10. 'ct' → logprob: -14.37547492980957

Token 299: '_' (ID: 62)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0002925598528236151
    2. '((' → logprob: -9.000292778015137
    3. ' (' → logprob: -9.250292778015137
    4. '(' → logprob: -9.625292778015137
    5. '(
' → logprob: -13.250292778015137
    6. '=(' → logprob: -13.250292778015137
    7. 'def' → logprob: -14.250292778015137
    8. 'a' → logprob: -14.500292778015137
    9. '(A' → logprob: -14.750292778015137
    10. '
' → logprob: -15.000292778015137

Token 300: '2' (ID: 17)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0010673471260815859
    2. 'a' → logprob: -7.001067161560059
    3. 'segment' → logprob: -9.126067161560059
    4. 'seg' → logprob: -11.126067161560059
    5. 'def' → logprob: -11.501067161560059
    6. 'segments' → logprob: -11.876067161560059
    7. '((' → logprob: -12.126067161560059
    8. '2' → logprob: -12.626067161560059
    9. '_segment' → logprob: -14.001067161560059
    10. 'p' → logprob: -14.251067161560059

Token 301: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1534222960472107
    2. '(a' → logprob: -2.0284223556518555
    3. 'D' → logprob: -4.9034223556518555
    4. 'points' → logprob: -6.7784223556518555
    5. 'a' → logprob: -7.4034223556518555
    6. 'def' → logprob: -7.5284223556518555
    7. '_points' → logprob: -7.6534223556518555
    8. 'segments' → logprob: -9.028422355651855
    9. 'Points' → logprob: -9.528422355651855
    10. 'point' → logprob: -9.778422355651855

Token 302: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0008743013604544103
    2. ' (' → logprob: -7.8758745193481445
    3. '((' → logprob: -7.8758745193481445
    4. '(' → logprob: -9.125874519348145
    5. '(
' → logprob: -12.500874519348145
    6. '(*' → logprob: -15.000874519348145
    7. 'def' → logprob: -15.125874519348145
    8. ' ' → logprob: -15.625874519348145
    9. 'a' → logprob: -15.875874519348145
    10. '?' → logprob: -16.125873565673828

Token 303: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. '2' → logprob: -12.25001049041748
    3. ',' → logprob: -13.50001049041748
    4. '
' → logprob: -13.75001049041748
    5. '(' → logprob: -14.37501049041748
    6. '_' → logprob: -14.50001049041748
    7. ')' → logprob: -14.62501049041748
    8. 'def' → logprob: -15.37501049041748
    9. '```' → logprob: -15.37501049041748
    10. 'a' → logprob: -15.62501049041748

Token 304: ',a' (ID: 26776)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01930658333003521
    2. ',a' → logprob: -4.019306659698486
    3. 'a' → logprob: -7.519306659698486
    4. ' ,' → logprob: -7.644306659698486
    5. '[' → logprob: -9.894306182861328
    6. ',
' → logprob: -10.019306182861328
    7. '1' → logprob: -11.644306182861328
    8. ' a' → logprob: -12.144306182861328
    9. ',b' → logprob: -12.519306182861328
    10. ')' → logprob: -12.644306182861328

Token 305: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.893480243277736e-05
    2. '1' → logprob: -11.125039100646973
    3. ' ' → logprob: -12.125039100646973
    4. '_' → logprob: -12.625039100646973
    5. ',' → logprob: -12.937539100646973
    6. '20' → logprob: -13.000039100646973
    7. '[' → logprob: -13.125039100646973
    8. '22' → logprob: -13.250039100646973
    9. '21' → logprob: -13.625039100646973
    10. '27' → logprob: -13.875039100646973

Token 306: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003983296919614077
    2. ',b' → logprob: -6.128983497619629
    3. ',a' → logprob: -6.378983497619629
    4. ' ,' → logprob: -9.253983497619629
    5. ',
' → logprob: -13.003983497619629
    6. 'a' → logprob: -14.128983497619629
    7. ',d' → logprob: -15.628983497619629
    8. ',c' → logprob: -15.753983497619629
    9. ')' → logprob: -15.753983497619629
    10. 'b' → logprob: -15.878983497619629

Token 307: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '
' → logprob: -15.750000953674316
    3. '2' → logprob: -15.875000953674316
    4. '```' → logprob: -16.375
    5. ',b' → logprob: -16.75
    6. ')' → logprob: -17.25
    7. '' → logprob: -17.625
    8. ',' → logprob: -17.9375
    9. 'b' → logprob: -18.375
    10. '5' → logprob: -18.6875

Token 308: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.023357750847935677
    2. ',' → logprob: -3.77335786819458
    3. ',a' → logprob: -9.148357391357422
    4. ' ,' → logprob: -12.523357391357422
    5. ',
' → logprob: -14.273357391357422
    6. 'b' → logprob: -14.398357391357422
    7. ')' → logprob: -15.148357391357422
    8. ',B' → logprob: -16.023357391357422
    9. ',d' → logprob: -16.148357391357422
    10. '   ' → logprob: -16.398357391357422

Token 309: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.313314952421933e-05
    2. '1' → logprob: -10.250062942504883
    3. ')' → logprob: -11.750062942504883
    4. '22' → logprob: -11.875062942504883
    5. '21' → logprob: -11.875062942504883
    6. '):' → logprob: -14.000062942504883
    7. '<|end|>' → logprob: -14.375062942504883
    8. ' ' → logprob: -14.500062942504883
    9. '23' → logprob: -14.500062942504883
    10. '```' → logprob: -14.625062942504883

Token 310: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004754188470542431
    2. '):
' → logprob: -5.379754066467285
    3. ')' → logprob: -9.504754066467285
    4. ' ):' → logprob: -10.504754066467285
    5. '   ' → logprob: -11.129754066467285
    6. ':' → logprob: -11.129754066467285
    7. '):
' → logprob: -14.004754066467285
    8. ')==' → logprob: -14.504754066467285
    9. ' ' → logprob: -14.879754066467285
    10. ',' → logprob: -15.504754066467285

Token 311: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017164701130241156
    2. '   ' → logprob: -6.376716613769531
    3. 'return' → logprob: -11.376716613769531
    4. ' return' → logprob: -13.376716613769531
    5. '
' → logprob: -14.626716613769531
    6. '	   ' → logprob: -15.751716613769531
    7. '	return' → logprob: -16.12671661376953
    8. '```' → logprob: -16.25171661376953
    9. '           ' → logprob: -16.50171661376953
    10. '	' → logprob: -16.62671661376953

Token 312: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.003155261278152466
    2. '0' → logprob: -6.50315523147583
    3. ' return' → logprob: -7.00315523147583
    4. '   ' → logprob: -7.25315523147583
    5. '	return' → logprob: -10.378155708312988
    6. '       ' → logprob: -12.878155708312988
    7. '
' → logprob: -14.628155708312988
    8. ' ' → logprob: -14.753155708312988
    9. '{return' → logprob: -16.003154754638672
    10. ':return' → logprob: -17.003154754638672

Token 313: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '   ' → logprob: -19.375431060791016
    4. ' ' → logprob: -22.125431060791016
    5. '00' → logprob: -22.625431060791016
    6. '
' → logprob: -23.625431060791016
    7. '  ' → logprob: -23.875431060791016
    8. '000' → logprob: -24.250431060791016
    9. '۰' → logprob: -24.250431060791016
    10. ' 
' → logprob: -24.375431060791016

Token 314: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -20.000003814697266
    4. '۰' → logprob: -23.625003814697266
    5. '  ' → logprob: -23.875003814697266
    6. ' ' → logprob: -24.375003814697266
    7. '
' → logprob: -24.375003814697266
    8. '00' → logprob: -24.750003814697266
    9. '０' → logprob: -25.125003814697266
    10. '000' → logprob: -25.500003814697266

Token 315: '.' (ID: 13)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48538777232170105
    2. '   ' → logprob: -1.4853878021240234
    3. '.' → logprob: -2.2353878021240234
    4. '    
' → logprob: -3.1103878021240234
    5. '   
' → logprob: -5.985387802124023
    6. '  
' → logprob: -6.735387802124023
    7. ' 
' → logprob: -7.610387802124023
    8. ')' → logprob: -7.610387802124023
    9. '\n' → logprob: -7.735387802124023
    10. 'def' → logprob: -8.110387802124023

Token 316: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. '5' → logprob: -10.875021934509277
    3. '1' → logprob: -13.125021934509277
    4. ' ' → logprob: -15.875021934509277
    5. 'return' → logprob: -16.00002098083496
    6. '   ' → logprob: -16.87502098083496
    7. '```' → logprob: -16.87502098083496
    8. '  ' → logprob: -17.37502098083496
    9. '000' → logprob: -17.50002098083496
    10. 'def' → logprob: -17.50002098083496

Token 317: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15014979243278503
    2. '    
' → logprob: -2.4001498222351074
    3. '
' → logprob: -3.0251498222351074
    4. '   
' → logprob: -9.90014934539795
    5. '  
' → logprob: -9.90014934539795
    6. '        
' → logprob: -10.90014934539795
    7. ' 
' → logprob: -10.90014934539795
    8. '    
' → logprob: -11.77514934539795
    9. '
' → logprob: -12.40014934539795
    10. '	
' → logprob: -12.65014934539795

Token 318: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009284949628636241
    2. '    
' → logprob: -7.3759284019470215
    3. '
' → logprob: -8.25092887878418
    4. 'return' → logprob: -10.50092887878418
    5. ' return' → logprob: -11.75092887878418
    6. '  
' → logprob: -13.50092887878418
    7. '        
' → logprob: -13.62592887878418
    8. '   
' → logprob: -14.50092887878418
    9. 'd' → logprob: -14.62592887878418
    10. 'import' → logprob: -15.00092887878418

Token 319: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.29768311977386475
    2. 'return' → logprob: -1.4226831197738647
    3. '   ' → logprob: -4.922683238983154
    4. 'dist' → logprob: -4.922683238983154
    5. 'c' → logprob: -6.922683238983154
    6. 'res' → logprob: -7.797683238983154
    7. ' return' → logprob: -8.672682762145996
    8. 'da' → logprob: -9.547682762145996
    9. ' d' → logprob: -9.797682762145996
    10. 'a' → logprob: -9.797682762145996

Token 320: '1' (ID: 16)
  Prédit: 'ists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ists' → logprob: -0.6292691230773926
    2. ' =' → logprob: -1.3792691230773926
    3. '=' → logprob: -2.2542691230773926
    4. '1' → logprob: -2.5042691230773926
    5. '_candidates' → logprob: -4.504269123077393
    6. 'ist' → logprob: -5.254269123077393
    7. 's' → logprob: -6.004269123077393
    8. 'min' → logprob: -6.254269123077393
    9. 'ef' → logprob: -6.379269123077393
    10. 'return' → logprob: -7.004269123077393

Token 321: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692853808403015
    2. '=' → logprob: -2.1269285678863525
    3. '1' → logprob: -15.626928329467773
    4. ',' → logprob: -16.626928329467773
    5. ' ' → logprob: -16.626928329467773
    6. ' =
' → logprob: -16.751928329467773
    7. 'dist' → logprob: -17.376928329467773
    8. '=
' → logprob: -18.001928329467773
    9. '.' → logprob: -18.626928329467773
    10. 's' → logprob: -18.876928329467773

Token 322: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0015040287980809808
    2. ' dist' → logprob: -6.501503944396973
    3. 'min' → logprob: -13.376503944396973
    4. '   ' → logprob: -16.25150489807129
    5. '	dist' → logprob: -17.37650489807129
    6. ' min' → logprob: -18.25150489807129
    7. 'max' → logprob: -18.37650489807129
    8. ' ' → logprob: -18.87650489807129
    9. '  ' → logprob: -19.25150489807129
    10. 'distance' → logprob: -20.25150489807129

Token 323: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.0619712732732296
    2. '_segment' → logprob: -2.8119711875915527
    3. 'segment' → logprob: -12.811971664428711
    4. 'point' → logprob: -14.311971664428711
    5. '_line' → logprob: -16.43697166442871
    6. '_' → logprob: -17.43697166442871
    7. '```' → logprob: -17.93697166442871
    8. '_part' → logprob: -18.68697166442871
    9. 'Segment' → logprob: -18.93697166442871
    10. '   ' → logprob: -18.93697166442871

Token 324: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.03804688900709152
    2. '_point' → logprob: -3.2880468368530273
    3. 'segment' → logprob: -12.288046836853027
    4. '_' → logprob: -15.038046836853027
    5. '_segments' → logprob: -15.538046836853027
    6. '```' → logprob: -16.788047790527344
    7. '_section' → logprob: -16.913047790527344
    8. '_seg' → logprob: -16.913047790527344
    9. ' _' → logprob: -17.288047790527344
    10. '_line' → logprob: -17.538047790527344

Token 325: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0015099779702723026
    2. '(*' → logprob: -6.501510143280029
    3. '(' → logprob: -12.626509666442871
    4. 'a' → logprob: -12.876509666442871
    5. '(b' → logprob: -14.001509666442871
    6. '(*(' → logprob: -15.001509666442871
    7. '(
' → logprob: -15.251509666442871
    8. '((*' → logprob: -15.251509666442871
    9. '((' → logprob: -16.501510620117188
    10. '*a' → logprob: -18.751510620117188

Token 326: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02879018895328045
    2. '2' → logprob: -3.653790235519409
    3. '(a' → logprob: -6.40378999710083
    4. 'a' → logprob: -7.27878999710083
    5. '=a' → logprob: -10.403790473937988
    6. '(*' → logprob: -10.778790473937988
    7. '(' → logprob: -10.903790473937988
    8. ' a' → logprob: -11.278790473937988
    9. '*a' → logprob: -11.403790473937988
    10. '[a' → logprob: -11.903790473937988

Token 327: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07539963722229004
    2. '(a' → logprob: -2.70039963722229
    3. '(' → logprob: -5.450399398803711
    4. 'a' → logprob: -7.075399398803711
    5. '(*' → logprob: -8.825399398803711
    6. '[a' → logprob: -10.200399398803711
    7. '()[' → logprob: -10.575399398803711
    8. '=a' → logprob: -10.700399398803711
    9. '(
' → logprob: -10.950399398803711
    10. ' (' → logprob: -11.075399398803711

Token 328: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.41866585687967e-06
    2. ' ' → logprob: -12.000008583068848
    3. '   ' → logprob: -14.125008583068848
    4. '
' → logprob: -14.500008583068848
    5. '1' → logprob: -14.750008583068848
    6. '[' → logprob: -15.250008583068848
    7. '```' → logprob: -16.12500762939453
    8. '۰' → logprob: -17.06250762939453
    9. '``' → logprob: -17.31250762939453
    10. ',' → logprob: -18.18750762939453

Token 329: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00471207220107317
    2. ' ,' → logprob: -5.504712104797363
    3. ',a' → logprob: -7.504712104797363
    4. '[' → logprob: -9.754712104797363
    5. '],' → logprob: -12.129712104797363
    6. ',
' → logprob: -12.504712104797363
    7. 'a' → logprob: -12.629712104797363
    8. '   ' → logprob: -13.129712104797363
    9. ' ' → logprob: -13.254712104797363
    10. '1' → logprob: -13.254712104797363

Token 330: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0001234428636962548
    2. ' a' → logprob: -9.000123023986816
    3. '   ' → logprob: -19.375123977661133
    4. ' ' → logprob: -19.750123977661133
    5. '	a' → logprob: -19.875123977661133
    6. '  ' → logprob: -20.250123977661133
    7. '
' → logprob: -21.250123977661133
    8. '<|end|>' → logprob: -21.375123977661133
    9. '_a' → logprob: -22.125123977661133
    10. '#a' → logprob: -22.125123977661133

Token 331: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005382588133215904
    2. '[' → logprob: -7.875538349151611
    3. '0' → logprob: -9.000537872314453
    4. 'a' → logprob: -11.250537872314453
    5. ' ' → logprob: -11.625537872314453
    6. '```' → logprob: -12.500537872314453
    7. '   ' → logprob: -12.500537872314453
    8. '-' → logprob: -13.500537872314453
    9. '
' → logprob: -14.500537872314453
    10. '#' → logprob: -14.625537872314453

Token 332: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026307733729481697
    2. '[' → logprob: -3.6513078212738037
    3. ' ' → logprob: -12.651308059692383
    4. '   ' → logprob: -13.151308059692383
    5. '```' → logprob: -14.151308059692383
    6. '
' → logprob: -14.776308059692383
    7. '#' → logprob: -15.526308059692383
    8. '0' → logprob: -15.526308059692383
    9. '-' → logprob: -15.526308059692383
    10. 'def' → logprob: -16.026308059692383

Token 333: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '0' → logprob: -15.125000953674316
    3. '
' → logprob: -15.625000953674316
    4. '```' → logprob: -16.875
    5. ' ' → logprob: -17.125
    6. '   ' → logprob: -17.25
    7. '[' → logprob: -18.5625
    8. '-' → logprob: -18.875
    9. '

' → logprob: -19.25
    10. '``' → logprob: -19.4375

Token 334: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09631405770778656
    2. ',a' → logprob: -2.721313953399658
    3. ',b' → logprob: -3.721313953399658
    4. ' ,' → logprob: -6.346313953399658
    5. '   ' → logprob: -10.221314430236816
    6. 'a' → logprob: -11.221314430236816
    7. ',d' → logprob: -11.221314430236816
    8. '),' → logprob: -12.721314430236816
    9. ' ' → logprob: -13.596314430236816
    10. 'b' → logprob: -13.846314430236816

Token 335: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.2233183042553719e-05
    2. ' b' → logprob: -11.375012397766113
    3. '   ' → logprob: -14.250012397766113
    4. 'a' → logprob: -17.000011444091797
    5. '  ' → logprob: -18.750011444091797
    6. '	b' → logprob: -19.375011444091797
    7. ' ' → logprob: -20.375011444091797
    8. '*b' → logprob: -20.500011444091797
    9. '    ' → logprob: -21.750011444091797
    10. '(b' → logprob: -22.000011444091797

Token 336: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.229872087715194e-05
    2. '0' → logprob: -9.750061988830566
    3. '[' → logprob: -13.125061988830566
    4. ' ' → logprob: -14.375061988830566
    5. '2' → logprob: -14.750061988830566
    6. '```' → logprob: -14.875061988830566
    7. '
' → logprob: -15.500061988830566
    8. '   ' → logprob: -15.500061988830566
    9. '``' → logprob: -16.562562942504883
    10. 'b' → logprob: -17.750062942504883

Token 337: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0013270224444568157
    2. '0' → logprob: -6.626327037811279
    3. '
' → logprob: -15.126326560974121
    4. '[
' → logprob: -15.126326560974121
    5. ' ' → logprob: -15.876326560974121
    6. 'def' → logprob: -16.376327514648438
    7. ' [' → logprob: -16.876327514648438
    8. '   ' → logprob: -16.876327514648438
    9. '(' → logprob: -17.126327514648438
    10. '#' → logprob: -17.126327514648438

Token 338: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7729658540920354e-05
    2. '[' → logprob: -10.500027656555176
    3. ' ' → logprob: -16.250028610229492
    4. '
' → logprob: -18.250028610229492
    5. '   ' → logprob: -18.875028610229492
    6. '00' → logprob: -19.750028610229492
    7. '```' → logprob: -19.875028610229492
    8. '#' → logprob: -20.125028610229492
    9. '][' → logprob: -20.500028610229492
    10. '۰' → logprob: -20.625028610229492

Token 339: '],' (ID: 2155)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02170266956090927
    2. ',' → logprob: -4.021702766418457
    3. '0' → logprob: -5.646702766418457
    4. '][' → logprob: -12.646702766418457
    5. ' ' → logprob: -12.896702766418457
    6. ' ,' → logprob: -13.146702766418457
    7. '),' → logprob: -13.271702766418457
    8. '   ' → logprob: -13.271702766418457
    9. ')' → logprob: -13.646702766418457
    10. 'b' → logprob: -13.771702766418457

Token 340: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -4.320199877838604e-07
    2. ' b' → logprob: -15.125
    3. '<|end|>' → logprob: -17.0
    4. ' ' → logprob: -19.0
    5. '   ' → logprob: -19.625
    6. '  ' → logprob: -20.125
    7. '	b' → logprob: -20.375
    8. ')b' → logprob: -20.5
    9. '<|end|>' → logprob: -20.5
    10. '```' → logprob: -21.125

Token 341: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014644917973782867
    2. '0' → logprob: -8.875146865844727
    3. '[' → logprob: -12.625146865844727
    4. 'b' → logprob: -13.875146865844727
    5. ' ' → logprob: -14.000146865844727
    6. '
' → logprob: -15.000146865844727
    7. '```' → logprob: -15.125146865844727
    8. '<|end|>' → logprob: -15.687646865844727
    9. '-' → logprob: -15.812646865844727
    10. '<|end|>' → logprob: -15.875146865844727

Token 342: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012094934470951557
    2. '[' → logprob: -4.512094974517822
    3. '0' → logprob: -6.887094974517822
    4. ',' → logprob: -12.012094497680664
    5. ' ' → logprob: -12.137094497680664
    6. '   ' → logprob: -12.512094497680664
    7. '```' → logprob: -12.512094497680664
    8. '-' → logprob: -12.887094497680664
    9. '
' → logprob: -13.887094497680664
    10. '<|end|>' → logprob: -14.137094497680664

Token 343: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026350582018494606
    2. '0' → logprob: -3.651350498199463
    3. ' ' → logprob: -10.651350975036621
    4. 'b' → logprob: -10.776350975036621
    5. '   ' → logprob: -13.026350975036621
    6. '
' → logprob: -13.526350975036621
    7. '[' → logprob: -14.026350975036621
    8. '-' → logprob: -15.026350975036621
    9. '```' → logprob: -15.151350975036621
    10. ',' → logprob: -15.526350975036621

Token 344: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6942717432975769
    2. '],' → logprob: -0.6942717432975769
    3. ',b' → logprob: -7.694271564483643
    4. '),' → logprob: -7.944271564483643
    5. 'b' → logprob: -8.3192720413208
    6. ' ,' → logprob: -10.3192720413208
    7. ' b' → logprob: -10.5692720413208
    8. '[' → logprob: -12.4442720413208
    9. '   ' → logprob: -13.1942720413208
    10. ' ],' → logprob: -13.5692720413208

Token 345: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.018150178715586662
    2. ' b' → logprob: -4.018150329589844
    3. '   ' → logprob: -15.393150329589844
    4. '    ' → logprob: -18.268150329589844
    5. ' ' → logprob: -18.268150329589844
    6. '	b' → logprob: -18.393150329589844
    7. '  ' → logprob: -18.893150329589844
    8. '_b' → logprob: -20.768150329589844
    9. ')b' → logprob: -21.143150329589844
    10. ' б' → logprob: -21.768150329589844

Token 346: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5979213714599609
    2. '2' → logprob: -0.8479213714599609
    3. '0' → logprob: -3.847921371459961
    4. 'b' → logprob: -8.472921371459961
    5. '[' → logprob: -8.847921371459961
    6. '```' → logprob: -10.847921371459961
    7. '
' → logprob: -11.347921371459961
    8. '   ' → logprob: -12.222921371459961
    9. '``' → logprob: -12.410421371459961
    10. '4' → logprob: -12.535421371459961

Token 347: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00038134094211272895
    2. '0' → logprob: -7.8753814697265625
    3. ' ' → logprob: -14.625381469726562
    4. '   ' → logprob: -14.750381469726562
    5. ' [' → logprob: -15.875381469726562
    6. 'def' → logprob: -16.750381469726562
    7. '][' → logprob: -17.250381469726562
    8. '```' → logprob: -17.625381469726562
    9. '[
' → logprob: -17.625381469726562
    10. ',' → logprob: -18.250381469726562

Token 348: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.500001907348633
    3. '
' → logprob: -15.875001907348633
    4. '[' → logprob: -16.250001907348633
    5. '   ' → logprob: -16.250001907348633
    6. '1' → logprob: -16.625001907348633
    7. '۰' → logprob: -17.250001907348633
    8. ']' → logprob: -18.375001907348633
    9. '```' → logprob: -18.750001907348633
    10. '  ' → logprob: -19.125001907348633

Token 349: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7495626211166382
    2. '[' → logprob: -0.7495626211166382
    3. '],' → logprob: -3.1245627403259277
    4. '),' → logprob: -4.749562740325928
    5. ')' → logprob: -6.874562740325928
    6. ',b' → logprob: -7.374562740325928
    7. '])' → logprob: -8.74956226348877
    8. '],[' → logprob: -9.12456226348877
    9. ']' → logprob: -9.24956226348877
    10. 'b' → logprob: -9.74956226348877

Token 350: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0280383548888494e-06
    2. ' b' → logprob: -13.875000953674316
    3. '	b' → logprob: -19.125001907348633
    4. '1' → logprob: -20.125001907348633
    5. ' ' → logprob: -20.500001907348633
    6. '   ' → logprob: -20.750001907348633
    7. '```' → logprob: -21.250001907348633
    8. '$b' → logprob: -21.250001907348633
    9. ')b' → logprob: -21.875001907348633
    10. '  ' → logprob: -22.125001907348633

Token 351: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1798408329486847
    2. '2' → logprob: -1.8048408031463623
    3. '[' → logprob: -9.304841041564941
    4. '
' → logprob: -13.429841041564941
    5. '```' → logprob: -13.679841041564941
    6. '-' → logprob: -14.054841041564941
    7. '   ' → logprob: -14.179841041564941
    8. ' ' → logprob: -14.929841041564941
    9. 'b' → logprob: -16.242340087890625
    10. '0' → logprob: -16.242340087890625

Token 352: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00866775307804346
    2. '[' → logprob: -4.758667945861816
    3. '])' → logprob: -11.008667945861816
    4. '```' → logprob: -11.258667945861816
    5. ']' → logprob: -12.133667945861816
    6. '-' → logprob: -12.133667945861816
    7. ')' → logprob: -12.633667945861816
    8. ' ' → logprob: -12.883667945861816
    9. '],' → logprob: -13.883667945861816
    10. '   ' → logprob: -14.258667945861816

Token 353: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. '```' → logprob: -15.000001907348633
    3. ' ' → logprob: -15.125001907348633
    4. '   ' → logprob: -15.125001907348633
    5. ']' → logprob: -15.375001907348633
    6. '
' → logprob: -16.000001907348633
    7. '[' → logprob: -17.187501907348633
    8. '2' → logprob: -17.250001907348633
    9. '-' → logprob: -17.625001907348633
    10. '۱' → logprob: -17.875001907348633

Token 354: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011865380220115185
    2. ')
' → logprob: -6.751186370849609
    3. ' )' → logprob: -11.62618637084961
    4. '   ' → logprob: -12.25118637084961
    5. ')
' → logprob: -13.25118637084961
    6. ' ' → logprob: -15.50118637084961
    7. '))' → logprob: -15.75118637084961
    8. ' )
' → logprob: -16.00118637084961
    9. ')

' → logprob: -16.50118637084961
    10. ')return' → logprob: -17.25118637084961

Token 355: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39138108491897583
    2. 'd' → logprob: -1.141381025314331
    3. ' d' → logprob: -5.51638126373291
    4. '
' → logprob: -7.76638126373291
    5. '    
' → logprob: -10.76638126373291
    6. '	d' → logprob: -10.76638126373291
    7. ' ' → logprob: -12.39138126373291
    8. ',' → logprob: -12.76638126373291
    9. ',d' → logprob: -13.01638126373291
    10. '```' → logprob: -13.89138126373291

Token 356: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.3523663878440857
    2. ' d' → logprob: -1.6023664474487305
    3. '   ' → logprob: -2.3523664474487305
    4. '
' → logprob: -7.9773664474487305
    5. '	d' → logprob: -9.97736644744873
    6. ' ' → logprob: -11.47736644744873
    7. '    
' → logprob: -11.85236644744873
    8. '_d' → logprob: -13.22736644744873
    9. ' 
' → logprob: -13.60236644744873
    10. '  ' → logprob: -13.60236644744873

Token 357: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.981667537620524e-06
    2. '1' → logprob: -13.625001907348633
    3. ' ' → logprob: -14.625001907348633
    4. '
' → logprob: -15.250001907348633
    5. '=' → logprob: -17.000001907348633
    6. '3' → logprob: -17.625001907348633
    7. '_' → logprob: -18.000001907348633
    8. ' =' → logprob: -18.000001907348633
    9. '   ' → logprob: -18.250001907348633
    10. '4' → logprob: -18.500001907348633

Token 358: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014163628220558167
    2. '=' → logprob: -4.264163494110107
    3. ' ' → logprob: -16.389163970947266
    4. ' =
' → logprob: -17.889163970947266
    5. '   ' → logprob: -18.639163970947266
    6. ' ' → logprob: -19.639163970947266
    7. ',' → logprob: -20.264163970947266
    8. ' =)' → logprob: -20.514163970947266
    9. '  ' → logprob: -20.764163970947266
    10. ')' → logprob: -21.014163970947266

Token 359: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.16022492945194244
    2. ' dist' → logprob: -1.9102249145507812
    3. '(dist' → logprob: -15.160224914550781
    4. '	dist' → logprob: -15.285224914550781
    5. '_dist' → logprob: -16.78522491455078
    6. '.dist' → logprob: -16.78522491455078
    7. ' ' → logprob: -17.16022491455078
    8. '   ' → logprob: -17.28522491455078
    9. '
' → logprob: -17.91022491455078
    10. 'Dist' → logprob: -18.41022491455078

Token 360: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: 0.0
    2. '_segment' → logprob: -17.0
    3. '_Point' → logprob: -18.75
    4. 'point' → logprob: -18.875
    5. '_POINT' → logprob: -19.625
    6. 'Point' → logprob: -19.875
    7. '_' → logprob: -20.875
    8. '_part' → logprob: -21.125
    9. '_points' → logprob: -21.125
    10. '_piece' → logprob: -21.5

Token 361: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.0006475062109529972
    2. '_point' → logprob: -7.37564754486084
    3. 'segment' → logprob: -10.87564754486084
    4. 'a' → logprob: -13.50064754486084
    5. 'Segment' → logprob: -15.25064754486084
    6. '(a' → logprob: -16.000646591186523
    7. 'point' → logprob: -16.625646591186523
    8. '_segments' → logprob: -16.750646591186523
    9. '(segment' → logprob: -17.125646591186523
    10. '(' → logprob: -17.500646591186523

Token 362: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -9.088346359931165e-07
    2. 'a' → logprob: -14.250000953674316
    3. '(' → logprob: -15.375000953674316
    4. '(
' → logprob: -16.875
    5. '((' → logprob: -18.25
    6. '(b' → logprob: -18.25
    7. ' (' → logprob: -20.125
    8. '   ' → logprob: -20.5
    9. 'b' → logprob: -20.875
    10. '(A' → logprob: -21.25

Token 363: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001136050675995648
    2. '0' → logprob: -7.62613582611084
    3. '[' → logprob: -7.87613582611084
    4. '1' → logprob: -8.25113582611084
    5. '
' → logprob: -12.75113582611084
    6. '20' → logprob: -13.93863582611084
    7. '(' → logprob: -14.43863582611084
    8. '```' → logprob: -14.81363582611084
    9. ' ' → logprob: -15.00113582611084
    10. '   ' → logprob: -15.25113582611084

Token 364: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.843177233240567e-05
    2. '(' → logprob: -11.000018119812012
    3. ' [' → logprob: -14.625018119812012
    4. '0' → logprob: -15.000018119812012
    5. '   ' → logprob: -16.000019073486328
    6. ' ' → logprob: -16.125019073486328
    7. '()[' → logprob: -16.125019073486328
    8. ' (' → logprob: -16.375019073486328
    9. ',' → logprob: -16.625019073486328
    10. 'def' → logprob: -16.750019073486328

Token 365: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015051016816869378
    2. '[' → logprob: -6.501504898071289
    3. ' ' → logprob: -13.376504898071289
    4. '   ' → logprob: -14.376504898071289
    5. '1' → logprob: -14.876504898071289
    6. '][' → logprob: -17.12650489807129
    7. '```' → logprob: -17.25150489807129
    8. 'def' → logprob: -17.25150489807129
    9. '(' → logprob: -17.50150489807129
    10. ' [' → logprob: -18.25150489807129

Token 366: '],' (ID: 2155)
  Prédit: ',a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',a' → logprob: -0.014186188578605652
    2. ',' → logprob: -4.264186382293701
    3. 'a' → logprob: -11.764185905456543
    4. ' ,' → logprob: -11.889185905456543
    5. ',d' → logprob: -12.389185905456543
    6. '   ' → logprob: -13.389185905456543
    7. '[' → logprob: -14.139185905456543
    8. ')a' → logprob: -15.139185905456543
    9. 'def' → logprob: -15.389185905456543
    10. ',A' → logprob: -15.389185905456543

Token 367: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -9.088346359931165e-07
    2. ' a' → logprob: -14.000000953674316
    3. '<|end|>' → logprob: -17.5
    4. '2' → logprob: -19.0
    5. ',' → logprob: -19.125
    6. ',a' → logprob: -19.625
    7. ''a' → logprob: -19.875
    8. '```' → logprob: -20.125
    9. '   ' → logprob: -20.375
    10. ' ' → logprob: -20.375

Token 368: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3485114276409149
    2. '1' → logprob: -1.2235114574432373
    3. '[' → logprob: -9.973511695861816
    4. 'a' → logprob: -11.723511695861816
    5. '0' → logprob: -12.723511695861816
    6. ' ' → logprob: -12.848511695861816
    7. '```' → logprob: -13.411011695861816
    8. '   ' → logprob: -13.661011695861816
    9. '
' → logprob: -13.723511695861816
    10. '-' → logprob: -14.598511695861816

Token 369: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07012482732534409
    2. '1' → logprob: -2.695124864578247
    3. ',' → logprob: -8.820124626159668
    4. '2' → logprob: -10.445124626159668
    5. '```' → logprob: -12.820124626159668
    6. 'def' → logprob: -13.320124626159668
    7. 'a' → logprob: -13.445124626159668
    8. '   ' → logprob: -13.445124626159668
    9. ' ' → logprob: -13.445124626159668
    10. '-' → logprob: -13.570124626159668

Token 370: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. '
' → logprob: -14.125001907348633
    3. '2' → logprob: -15.625001907348633
    4. '   ' → logprob: -16.187501907348633
    5. '```' → logprob: -16.187501907348633
    6. '0' → logprob: -16.312501907348633
    7. '[' → logprob: -16.375001907348633
    8. ' ' → logprob: -16.687501907348633
    9. '-' → logprob: -16.875001907348633
    10. '
' → logprob: -17.625001907348633

Token 371: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0113417012616992
    2. ',b' → logprob: -4.511341571807861
    3. ' ,' → logprob: -8.38634204864502
    4. '),' → logprob: -10.01134204864502
    5. '],' → logprob: -12.26134204864502
    6. 'b' → logprob: -12.38634204864502
    7. ',d' → logprob: -12.51134204864502
    8. '   ' → logprob: -12.63634204864502
    9. ',a' → logprob: -13.63634204864502
    10. '‌,' → logprob: -13.76134204864502

Token 372: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3132629096508026
    2. ' b' → logprob: -1.313262939453125
    3. '(b' → logprob: -13.938262939453125
    4. '   ' → logprob: -15.688262939453125
    5. '	b' → logprob: -16.063262939453125
    6. ' ' → logprob: -17.188262939453125
    7. '(' → logprob: -17.438262939453125
    8. ')b' → logprob: -17.813262939453125
    9. '_b' → logprob: -18.688262939453125
    10. ' б' → logprob: -18.938262939453125

Token 373: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -13.875000953674316
    3. ' ' → logprob: -18.312501907348633
    4. '```' → logprob: -18.312501907348633
    5. '
' → logprob: -19.125001907348633
    6. 'b' → logprob: -19.250001907348633
    7. '2' → logprob: -20.000001907348633
    8. '   ' → logprob: -20.187501907348633
    9. '[
' → logprob: -20.437501907348633
    10. '_' → logprob: -20.500001907348633

Token 374: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. '0' → logprob: -13.875000953674316
    3. '   ' → logprob: -16.250001907348633
    4. ',' → logprob: -17.000001907348633
    5. 'def' → logprob: -17.500001907348633
    6. '<|end|>' → logprob: -18.250001907348633
    7. '[
' → logprob: -18.375001907348633
    8. ' [' → logprob: -18.375001907348633
    9. '][' → logprob: -18.625001907348633
    10. '```' → logprob: -18.625001907348633

Token 375: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4987974029500037e-05
    2. '[' → logprob: -10.625024795532227
    3. ' ' → logprob: -14.500024795532227
    4. '#' → logprob: -17.250024795532227
    5. '   ' → logprob: -18.000024795532227
    6. '<|end|>' → logprob: -18.000024795532227
    7. '۰' → logprob: -18.000024795532227
    8. ',' → logprob: -18.125024795532227
    9. '<|end|>' → logprob: -18.375024795532227
    10. '```' → logprob: -18.375024795532227

Token 376: '],' (ID: 2155)
  Prédit: ',b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.3714800179004669
    2. ',' → logprob: -1.6214799880981445
    3. '],' → logprob: -2.2464799880981445
    4. '[' → logprob: -5.2464799880981445
    5. 'b' → logprob: -7.1214799880981445
    6. '),' → logprob: -7.8714799880981445
    7. '],[' → logprob: -9.121479988098145
    8. ' ,' → logprob: -9.371479988098145
    9. '][' → logprob: -9.621479988098145
    10. '   ' → logprob: -10.371479988098145

Token 377: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004639572463929653
    2. '1' → logprob: -5.379639625549316
    3. '[' → logprob: -11.129639625549316
    4. ' b' → logprob: -12.879639625549316
    5. ' ' → logprob: -14.629639625549316
    6. '```' → logprob: -15.004639625549316
    7. ',' → logprob: -15.379639625549316
    8. ')' → logprob: -15.504639625549316
    9. '   ' → logprob: -15.629639625549316
    10. '...' → logprob: -15.879639625549316

Token 378: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.371605948312208e-05
    2. '[' → logprob: -10.000053405761719
    3. 'b' → logprob: -12.250053405761719
    4. '<|end|>' → logprob: -13.625053405761719
    5. '2' → logprob: -14.625053405761719
    6. '```' → logprob: -14.750053405761719
    7. ',' → logprob: -14.875053405761719
    8. '<|end|>' → logprob: -15.687553405761719
    9. ' ' → logprob: -15.750053405761719
    10. '-' → logprob: -15.750053405761719

Token 379: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07890774309635162
    2. '[' → logprob: -2.5789077281951904
    3. '   ' → logprob: -11.95390796661377
    4. ',' → logprob: -12.32890796661377
    5. '-' → logprob: -12.82890796661377
    6. ']' → logprob: -13.57890796661377
    7. '```' → logprob: -13.57890796661377
    8. 'b' → logprob: -14.32890796661377
    9. ' ' → logprob: -14.95390796661377
    10. '
' → logprob: -15.45390796661377

Token 380: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.822646693966817e-06
    2. ' ' → logprob: -13.187507629394531
    3. '<|end|>' → logprob: -13.375007629394531
    4. 'b' → logprob: -13.562507629394531
    5. '[' → logprob: -14.562507629394531
    6. '-' → logprob: -15.250007629394531
    7. ']' → logprob: -15.375007629394531
    8. '```' → logprob: -15.437507629394531
    9. '   ' → logprob: -15.562507629394531
    10. '<|end|>' → logprob: -15.812507629394531

Token 381: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019726738333702087
    2. '],' → logprob: -4.144726753234863
    3. '),' → logprob: -6.144726753234863
    4. ',b' → logprob: -6.519726753234863
    5. 'b' → logprob: -10.019726753234863
    6. ' ,' → logprob: -11.269726753234863
    7. ' b' → logprob: -12.769726753234863
    8. '>,' → logprob: -13.644726753234863
    9. ',),' → logprob: -13.769726753234863
    10. '(),' → logprob: -14.019726753234863

Token 382: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3868710398674011
    2. ' b' → logprob: -1.136871099472046
    3. '   ' → logprob: -17.011871337890625
    4. '	b' → logprob: -18.261871337890625
    5. ' ' → logprob: -18.761871337890625
    6. '  ' → logprob: -20.761871337890625
    7. ' б' → logprob: -21.136871337890625
    8. '(b' → logprob: -21.386871337890625
    9. ')b' → logprob: -21.636871337890625
    10. '_b' → logprob: -21.886871337890625

Token 383: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003874166286550462
    2. '1' → logprob: -7.875387191772461
    3. '[' → logprob: -13.125387191772461
    4. '0' → logprob: -13.250387191772461
    5. '
' → logprob: -13.375387191772461
    6. 'b' → logprob: -14.000387191772461
    7. ' ' → logprob: -14.875387191772461
    8. '```' → logprob: -15.125387191772461
    9. '-' → logprob: -15.875387191772461
    10. '   ' → logprob: -16.00038719177246

Token 384: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. '0' → logprob: -14.500000953674316
    3. '   ' → logprob: -16.375
    4. '2' → logprob: -17.75
    5. '```' → logprob: -18.125
    6. ' [' → logprob: -18.375
    7. '[
' → logprob: -18.375
    8. '
' → logprob: -18.5
    9. ' ' → logprob: -18.875
    10. '1' → logprob: -19.5

Token 385: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6329865455627441
    2. '1' → logprob: -0.7579865455627441
    3. '[' → logprob: -7.882986545562744
    4. ' ' → logprob: -12.757986068725586
    5. '   ' → logprob: -13.132986068725586
    6. '
' → logprob: -13.382986068725586
    7. '-' → logprob: -13.382986068725586
    8. '```' → logprob: -14.507986068725586
    9. ']' → logprob: -15.632986068725586
    10. '(' → logprob: -15.757986068725586

Token 386: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014177266508340836
    2. '],' → logprob: -4.764177322387695
    3. '[' → logprob: -5.389177322387695
    4. '),' → logprob: -7.264177322387695
    5. ',b' → logprob: -8.639177322387695
    6. ' ,' → logprob: -10.514177322387695
    7. '<|end|>' → logprob: -10.514177322387695
    8. ')' → logprob: -11.264177322387695
    9. '],[' → logprob: -11.639177322387695
    10. ']' → logprob: -11.764177322387695

Token 387: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0280383548888494e-06
    2. ' b' → logprob: -14.000000953674316
    3. '1' → logprob: -16.250001907348633
    4. '```' → logprob: -18.375001907348633
    5. '	b' → logprob: -19.000001907348633
    6. ' ' → logprob: -19.125001907348633
    7. '   ' → logprob: -19.625001907348633
    8. '0' → logprob: -20.125001907348633
    9. ')b' → logprob: -20.875001907348633
    10. '<|end|>' → logprob: -20.875001907348633

Token 388: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009458675980567932
    2. '1' → logprob: -4.759458541870117
    3. '[' → logprob: -7.384458541870117
    4. '0' → logprob: -8.509458541870117
    5. '```' → logprob: -11.884458541870117
    6. ' ' → logprob: -12.009458541870117
    7. '   ' → logprob: -13.384458541870117
    8. ']' → logprob: -13.384458541870117
    9. '
' → logprob: -13.384458541870117
    10. '-' → logprob: -13.634458541870117

Token 389: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009118211455643177
    2. '1' → logprob: -7.000911712646484
    3. '2' → logprob: -15.375911712646484
    4. '```' → logprob: -16.250911712646484
    5. '
' → logprob: -17.000911712646484
    6. ',' → logprob: -17.875911712646484
    7. '[
' → logprob: -18.125911712646484
    8. '-' → logprob: -18.375911712646484
    9. '0' → logprob: -18.625911712646484
    10. '   ' → logprob: -18.625911712646484

Token 390: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. '[' → logprob: -12.125008583068848
    3. '
' → logprob: -13.750008583068848
    4. ' ' → logprob: -14.250008583068848
    5. '```' → logprob: -14.250008583068848
    6. '   ' → logprob: -15.250008583068848
    7. '0' → logprob: -15.312508583068848
    8. ']' → logprob: -16.187509536743164
    9. '-' → logprob: -16.562509536743164
    10. '１' → logprob: -16.812509536743164

Token 391: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00034058792516589165
    2. ')
' → logprob: -8.125340461730957
    3. '   ' → logprob: -10.125340461730957
    4. ' )' → logprob: -12.875340461730957
    5. '])' → logprob: -14.125340461730957
    6. ' ' → logprob: -14.375340461730957
    7. '))' → logprob: -15.875340461730957
    8. '  ' → logprob: -16.250341415405273
    9. ')

' → logprob: -16.375341415405273
    10. ')
' → logprob: -16.750341415405273

Token 392: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011892804875969887
    2. 'd' → logprob: -4.511892795562744
    3. ' d' → logprob: -7.136892795562744
    4. '
' → logprob: -10.636893272399902
    5. '```' → logprob: -11.511893272399902
    6. '	d' → logprob: -11.761893272399902
    7. '    
' → logprob: -12.636893272399902
    8. ' ' → logprob: -13.261893272399902
    9. ',' → logprob: -14.136893272399902
    10. ',d' → logprob: -14.261893272399902

Token 393: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.30050429701805115
    2. '   ' → logprob: -1.5505043268203735
    3. ' d' → logprob: -3.050504207611084
    4. '```' → logprob: -10.300504684448242
    5. '
' → logprob: -10.800504684448242
    6. ' ' → logprob: -11.550504684448242
    7. '	d' → logprob: -12.175504684448242
    8. '_d' → logprob: -12.925504684448242
    9. '  ' → logprob: -13.050504684448242
    10. '    
' → logprob: -13.550504684448242

Token 394: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -8.542423165636137e-05
    2. '1' → logprob: -9.375085830688477
    3. ' ' → logprob: -15.250085830688477
    4. '
' → logprob: -16.125085830688477
    5. '=' → logprob: -17.000085830688477
    6. '   ' → logprob: -17.375085830688477
    7. ' =' → logprob: -17.437585830688477
    8. '```' → logprob: -18.312585830688477
    9. '_' → logprob: -18.437585830688477
    10. '

' → logprob: -18.500085830688477

Token 395: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759395360946655
    2. '=' → logprob: -0.8259395360946655
    3. '=d' → logprob: -17.325939178466797
    4. ' ' → logprob: -17.325939178466797
    5. '=
' → logprob: -17.950939178466797
    6. ' =
' → logprob: -18.575939178466797
    7. 'd' → logprob: -19.325939178466797
    8. ')' → logprob: -20.200939178466797
    9. 'dist' → logprob: -20.200939178466797
    10. '
' → logprob: -20.700939178466797

Token 396: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00317783304490149
    2. ' dist' → logprob: -5.753177642822266
    3. '(dist' → logprob: -16.753177642822266
    4. '	dist' → logprob: -17.503177642822266
    5. '_dist' → logprob: -18.378177642822266
    6. '   ' → logprob: -18.753177642822266
    7. '.dist' → logprob: -19.128177642822266
    8. 'def' → logprob: -19.253177642822266
    9. ' ' → logprob: -20.503177642822266
    10. 'd' → logprob: -21.003177642822266

Token 397: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -4.320199877838604e-07
    2. '_segment' → logprob: -14.875
    3. 'point' → logprob: -18.5
    4. '_Point' → logprob: -19.25
    5. 'Point' → logprob: -20.625
    6. '_POINT' → logprob: -20.875
    7. '_points' → logprob: -21.375
    8. '_' → logprob: -22.0
    9. '_piece' → logprob: -22.125
    10. '-point' → logprob: -22.25

Token 398: '_segment' (ID: 71041)
  Prédit: '_point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.07891226559877396
    2. '_segment' → logprob: -2.5789122581481934
    3. 'segment' → logprob: -11.203912734985352
    4. 'point' → logprob: -11.828912734985352
    5. 'Point' → logprob: -13.953912734985352
    6. '```' → logprob: -15.453912734985352
    7. 'Segment' → logprob: -15.953912734985352
    8. '(segment' → logprob: -17.20391273498535
    9. '_seg' → logprob: -17.45391273498535
    10. '-point' → logprob: -17.57891273498535

Token 399: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.875
    3. '((' → logprob: -16.625
    4. 'b' → logprob: -16.75
    5. '   ' → logprob: -17.25
    6. ' (' → logprob: -17.75
    7. '(
' → logprob: -18.125
    8. '(a' → logprob: -20.75
    9. ' ' → logprob: -21.0
    10. '```' → logprob: -21.875

Token 400: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07713927328586578
    2. '0' → logprob: -2.827139377593994
    3. '[' → logprob: -4.202139377593994
    4. '2' → logprob: -11.327138900756836
    5. '```' → logprob: -11.452138900756836
    6. '(' → logprob: -11.639638900756836
    7. '3' → logprob: -11.889638900756836
    8. '10' → logprob: -12.077138900756836
    9. '[
' → logprob: -12.077138900756836
    10. ' ' → logprob: -12.764638900756836

Token 401: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -14.000000953674316
    3. '0' → logprob: -15.500000953674316
    4. '[
' → logprob: -18.000001907348633
    5. ' [' → logprob: -18.875001907348633
    6. ' ' → logprob: -19.375001907348633
    7. ',' → logprob: -19.625001907348633
    8. '()[' → logprob: -19.750001907348633
    9. '```' → logprob: -20.000001907348633
    10. '   ' → logprob: -20.125001907348633

Token 402: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004081128165125847
    2. '[' → logprob: -5.5040812492370605
    3. ' ' → logprob: -12.879080772399902
    4. '(' → logprob: -18.00408172607422
    5. '1' → logprob: -18.12908172607422
    6. ',' → logprob: -18.12908172607422
    7. '   ' → logprob: -18.25408172607422
    8. '#' → logprob: -18.37908172607422
    9. '```' → logprob: -18.37908172607422
    10. '][' → logprob: -18.62908172607422

Token 403: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22806952893733978
    2. ',b' → logprob: -1.603069543838501
    3. '[' → logprob: -6.103069305419922
    4. '),' → logprob: -9.228069305419922
    5. ' ,' → logprob: -9.228069305419922
    6. 'b' → logprob: -9.478069305419922
    7. ',d' → logprob: -9.603069305419922
    8. '<|end|>' → logprob: -10.478069305419922
    9. '],' → logprob: -11.353069305419922
    10. ')' → logprob: -11.603069305419922

Token 404: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.759734732331708e-05
    2. '<|end|>' → logprob: -11.000017166137695
    3. '[' → logprob: -15.000017166137695
    4. ',' → logprob: -16.125017166137695
    5. ' b' → logprob: -16.125017166137695
    6. '0' → logprob: -16.250017166137695
    7. '<|end|>' → logprob: -16.375017166137695
    8. ' ' → logprob: -16.375017166137695
    9. '```' → logprob: -17.875017166137695
    10. '1' → logprob: -18.000017166137695

Token 405: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005282730795443058
    2. '[' → logprob: -5.255282878875732
    3. '0' → logprob: -10.255282402038574
    4. '<|end|>' → logprob: -12.755282402038574
    5. '```' → logprob: -12.880282402038574
    6. ' ' → logprob: -13.005282402038574
    7. 'b' → logprob: -13.130282402038574
    8. '<|end|>' → logprob: -13.630282402038574
    9. ',' → logprob: -14.005282402038574
    10. '   ' → logprob: -15.130282402038574

Token 406: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.015129253268241882
    2. '1' → logprob: -4.265129089355469
    3. ',' → logprob: -7.015129089355469
    4. '<|end|>' → logprob: -9.890129089355469
    5. '0' → logprob: -12.265129089355469
    6. '#' → logprob: -12.765129089355469
    7. ' ' → logprob: -12.765129089355469
    8. '```' → logprob: -13.140129089355469
    9. '<|end|>' → logprob: -14.140129089355469
    10. '[
' → logprob: -14.140129089355469

Token 407: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.191489642835222e-05
    2. '0' → logprob: -10.500041961669922
    3. 'b' → logprob: -11.500041961669922
    4. '[' → logprob: -12.625041961669922
    5. ' ' → logprob: -14.500041961669922
    6. '```' → logprob: -15.625041961669922
    7. '<|end|>' → logprob: -16.375041961669922
    8. '<|end|>' → logprob: -16.875041961669922
    9. '#' → logprob: -17.250041961669922
    10. '
' → logprob: -17.250041961669922

Token 408: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0793246328830719
    2. ',b' → logprob: -2.579324722290039
    3. '),' → logprob: -9.204324722290039
    4. '   ' → logprob: -9.579324722290039
    5. ',a' → logprob: -9.579324722290039
    6. ',d' → logprob: -9.579324722290039
    7. '],' → logprob: -9.704324722290039
    8. ' ,' → logprob: -10.454324722290039
    9. 'b' → logprob: -10.579324722290039
    10. 'def' → logprob: -12.579324722290039

Token 409: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10021539777517319
    2. ' a' → logprob: -2.350215435028076
    3. '(a' → logprob: -12.100214958190918
    4. '   ' → logprob: -13.725214958190918
    5. '(' → logprob: -13.850214958190918
    6. '	a' → logprob: -15.350214958190918
    7. ' (' → logprob: -15.725214958190918
    8. ',' → logprob: -15.725214958190918
    9. ')' → logprob: -15.850214958190918
    10. ')a' → logprob: -15.850214958190918

Token 410: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.75
    3. '```' → logprob: -16.9375
    4. '۱' → logprob: -17.875
    5. '<|end|>' → logprob: -17.9375
    6. '11' → logprob: -18.125
    7. '
' → logprob: -18.4375
    8. '10' → logprob: -18.6875
    9. ' ' → logprob: -18.8125
    10. '१' → logprob: -19.0625

Token 411: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001930420519784093
    2. '0' → logprob: -6.251930236816406
    3. 'def' → logprob: -14.501930236816406
    4. '#' → logprob: -15.001930236816406
    5. '<|end|>' → logprob: -15.376930236816406
    6. '(' → logprob: -15.501930236816406
    7. ',' → logprob: -16.376930236816406
    8. '   ' → logprob: -16.626930236816406
    9. '...' → logprob: -16.876930236816406
    10. ' ' → logprob: -16.876930236816406

Token 412: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.375
    3. ' ' → logprob: -17.5
    4. '   ' → logprob: -19.5
    5. '
' → logprob: -20.375
    6. 'def' → logprob: -20.5
    7. '۰' → logprob: -20.5
    8. '#' → logprob: -21.3125
    9. '1' → logprob: -21.5625
    10. '```' → logprob: -22.0

Token 413: '],' (ID: 2155)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.28397640585899353
    2. ',' → logprob: -1.408976435661316
    3. '0' → logprob: -6.6589765548706055
    4. '][' → logprob: -7.0339765548706055
    5. '],' → logprob: -7.7839765548706055
    6. '<|end|>' → logprob: -9.033976554870605
    7. ']' → logprob: -10.533976554870605
    8. 'def' → logprob: -10.783976554870605
    9. ' ,' → logprob: -11.158976554870605
    10. ' ' → logprob: -11.408976554870605

Token 414: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2664456789934775e-06
    2. ' a' → logprob: -14.250000953674316
    3. '0' → logprob: -14.625000953674316
    4. '<|end|>' → logprob: -17.375001907348633
    5. '1' → logprob: -17.875001907348633
    6. '[' → logprob: -18.375001907348633
    7. ' ' → logprob: -18.625001907348633
    8. '   ' → logprob: -19.375001907348633
    9. '
' → logprob: -19.875001907348633
    10. '#a' → logprob: -20.875001907348633

Token 415: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008620012551546097
    2. '0' → logprob: -4.758619785308838
    3. '[' → logprob: -12.883620262145996
    4. ' ' → logprob: -13.758620262145996
    5. '```' → logprob: -13.883620262145996
    6. '<|end|>' → logprob: -14.383620262145996
    7. '<|end|>' → logprob: -15.008620262145996
    8. '   ' → logprob: -16.38361930847168
    9. ',' → logprob: -18.63361930847168
    10. 'def' → logprob: -18.63361930847168

Token 416: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25601065158843994
    2. '[' → logprob: -1.50601065158844
    3. '1' → logprob: -5.50601053237915
    4. ' ' → logprob: -11.881011009216309
    5. '   ' → logprob: -13.381011009216309
    6. '<|end|>' → logprob: -13.881011009216309
    7. 'def' → logprob: -14.381011009216309
    8. '```' → logprob: -15.506011009216309
    9. ',' → logprob: -15.756011009216309
    10. '<|end|>' → logprob: -15.756011009216309

Token 417: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.054886344820261
    2. '1' → logprob: -2.9298863410949707
    3. '[' → logprob: -13.054886817932129
    4. ' ' → logprob: -13.804886817932129
    5. '
' → logprob: -14.929886817932129
    6. '```' → logprob: -15.554886817932129
    7. '   ' → logprob: -15.929886817932129
    8. '<|end|>' → logprob: -16.429885864257812
    9. ']' → logprob: -17.304885864257812
    10. '<|end|>' → logprob: -17.429885864257812

Token 418: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007295898394659162
    2. '],' → logprob: -8.12572956085205
    3. '),' → logprob: -8.75072956085205
    4. ' ,' → logprob: -8.87572956085205
    5. ',b' → logprob: -9.00072956085205
    6. ',a' → logprob: -12.62572956085205
    7. '   ' → logprob: -13.00072956085205
    8. 'def' → logprob: -13.75072956085205
    9. '0' → logprob: -14.25072956085205
    10. '>,' → logprob: -14.50072956085205

Token 419: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.693148672580719
    2. ' a' → logprob: -0.693148672580719
    3. '   ' → logprob: -14.193148612976074
    4. ' ' → logprob: -14.818148612976074
    5. '	a' → logprob: -15.318148612976074
    6. '    ' → logprob: -17.56814956665039
    7. '  ' → logprob: -18.06814956665039
    8. ')' → logprob: -18.31814956665039
    9. ')a' → logprob: -18.31814956665039
    10. ',' → logprob: -18.56814956665039

Token 420: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.9153885558771435e-06
    2. '
' → logprob: -12.625005722045898
    3. '1' → logprob: -13.250005722045898
    4. '```' → logprob: -15.437505722045898
    5. '[' → logprob: -15.750005722045898
    6. '0' → logprob: -16.0000057220459
    7. '``' → logprob: -16.2500057220459
    8. '   ' → logprob: -16.8750057220459
    9. ' ' → logprob: -17.0625057220459
    10. '20' → logprob: -17.2500057220459

Token 421: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.165027217415627e-05
    2. '0' → logprob: -10.750021934509277
    3. '<|end|>' → logprob: -17.00002098083496
    4. 'def' → logprob: -17.50002098083496
    5. '[
' → logprob: -17.50002098083496
    6. '```' → logprob: -18.00002098083496
    7. ' [' → logprob: -18.25002098083496
    8. ' ' → logprob: -18.62502098083496
    9. '][' → logprob: -18.87502098083496
    10. '...' → logprob: -19.12502098083496

Token 422: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.080963092041202e-06
    2. '[' → logprob: -12.500004768371582
    3. ' ' → logprob: -13.750004768371582
    4. '   ' → logprob: -15.750004768371582
    5. '
' → logprob: -17.0000057220459
    6. '```' → logprob: -17.1250057220459
    7. '۰' → logprob: -17.4375057220459
    8. '1' → logprob: -18.0000057220459
    9. '  ' → logprob: -18.3125057220459
    10. '	' → logprob: -18.5000057220459

Token 423: '],' (ID: 2155)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6696211695671082
    2. '],' → logprob: -0.7946211695671082
    3. ',' → logprob: -3.669621229171753
    4. '][' → logprob: -4.794620990753174
    5. ',b' → logprob: -7.044620990753174
    6. ']' → logprob: -7.294620990753174
    7. '),' → logprob: -7.419620990753174
    8. '],[' → logprob: -8.669621467590332
    9. '},' → logprob: -10.044621467590332
    10. 'def' → logprob: -10.419621467590332

Token 424: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -6.704273118884885e-07
    2. ' a' → logprob: -14.250000953674316
    3. '1' → logprob: -19.125
    4. '<|end|>' → logprob: -19.5
    5. '
' → logprob: -19.625
    6. '   ' → logprob: -19.75
    7. ' ' → logprob: -20.625
    8. '	a' → logprob: -21.125
    9. '```' → logprob: -21.25
    10. '  ' → logprob: -22.0

Token 425: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -3.3213025744771585e-05
    2. '0' → logprob: -10.625033378601074
    3. '[' → logprob: -12.250033378601074
    4. ' ' → logprob: -13.125033378601074
    5. '```' → logprob: -13.750033378601074
    6. '
' → logprob: -14.625033378601074
    7. '<|end|>' → logprob: -15.375033378601074
    8. '<|end|>' → logprob: -15.500033378601074
    9. '   ' → logprob: -16.125032424926758
    10. '-' → logprob: -17.250032424926758

Token 426: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06994020938873291
    2. '1' → logprob: -2.6949400901794434
    3. ',' → logprob: -13.944940567016602
    4. '```' → logprob: -13.944940567016602
    5. '[
' → logprob: -14.694940567016602
    6. '   ' → logprob: -14.944940567016602
    7. '
' → logprob: -14.944940567016602
    8. 'def' → logprob: -15.069940567016602
    9. ' ' → logprob: -15.319940567016602
    10. '][' → logprob: -15.944940567016602

Token 427: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '
' → logprob: -15.000000953674316
    3. '[' → logprob: -15.125000953674316
    4. ' ' → logprob: -15.375000953674316
    5. '0' → logprob: -15.500000953674316
    6. '```' → logprob: -17.125001907348633
    7. '<|end|>' → logprob: -17.500001907348633
    8. '<|end|>' → logprob: -17.625001907348633
    9. '   ' → logprob: -18.000001907348633
    10. ']' → logprob: -18.562501907348633

Token 428: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04502580314874649
    2. '])' → logprob: -3.1700258255004883
    3. ')
' → logprob: -6.920025825500488
    4. '[' → logprob: -7.170025825500488
    5. '])
' → logprob: -8.920025825500488
    6. '   ' → logprob: -9.670025825500488
    7. ']' → logprob: -10.920025825500488
    8. ')])' → logprob: -11.295025825500488
    9. ' )' → logprob: -11.795025825500488
    10. ',' → logprob: -11.795025825500488

Token 429: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017766838893294334
    2. ' d' → logprob: -4.392766952514648
    3. 'd' → logprob: -5.267766952514648
    4. '    
' → logprob: -10.642766952514648
    5. '	d' → logprob: -11.267766952514648
    6. ',' → logprob: -11.392766952514648
    7. '
' → logprob: -11.767766952514648
    8. ' ' → logprob: -12.017766952514648
    9. ',d' → logprob: -12.017766952514648
    10. '  ' → logprob: -12.392766952514648

Token 430: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6709542870521545
    2. 'd' (adapté à ' d') → logprob: -0.7959542870521545
    3. ' d' → logprob: -3.2959542274475098
    4. ' ' → logprob: -8.295954704284668
    5. '
' → logprob: -8.420954704284668
    6. '  ' → logprob: -9.795954704284668
    7. '	d' → logprob: -10.670954704284668
    8. '    
' → logprob: -11.045954704284668
    9. '    ' → logprob: -11.295954704284668
    10. ' 
' → logprob: -12.795954704284668

Token 431: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.320199877838604e-07
    2. '3' → logprob: -15.5
    3. '=' → logprob: -16.125
    4. ' ' → logprob: -16.625
    5. '
' → logprob: -17.0
    6. '' → logprob: -18.0
    7. '_' → logprob: -18.875
    8. ' =' → logprob: -18.875
    9. '۴' → logprob: -19.0
    10. '４' → logprob: -19.25

Token 432: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326186656951904
    2. '=' → logprob: -1.313261866569519
    3. ' ' → logprob: -16.688261032104492
    4. ',' → logprob: -17.813261032104492
    5. ')' → logprob: -18.188261032104492
    6. '=d' → logprob: -18.563261032104492
    7. ' =
' → logprob: -18.563261032104492
    8. '   ' → logprob: -19.063261032104492
    9. 'd' → logprob: -19.438261032104492
    10. '＝' → logprob: -20.188261032104492

Token 433: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.38687872886657715
    2. ' dist' → logprob: -1.1368787288665771
    3. '   ' → logprob: -12.261878967285156
    4. '	dist' → logprob: -13.636878967285156
    5. '(dist' → logprob: -13.886878967285156
    6. ' ' → logprob: -15.386878967285156
    7. '_dist' → logprob: -15.386878967285156
    8. '.dist' → logprob: -15.886878967285156
    9. '  ' → logprob: -16.386878967285156
    10. 'def' → logprob: -16.386878967285156

Token 434: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -2.069664333248511e-05
    2. '_segment' → logprob: -10.875020980834961
    3. 'point' → logprob: -14.250020980834961
    4. 'Point' → logprob: -14.250020980834961
    5. '(b' → logprob: -15.125020980834961
    6. 'b' → logprob: -16.50002098083496
    7. '_Point' → logprob: -17.37502098083496
    8. '_POINT' → logprob: -17.75002098083496
    9. 'a' → logprob: -18.12502098083496
    10. '(' → logprob: -18.75002098083496

Token 435: '_segment' (ID: 71041)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.01713682897388935
    2. '_segment' → logprob: -4.142137050628662
    3. '_point' → logprob: -7.767137050628662
    4. 'segment' → logprob: -8.017136573791504
    5. 'Segment' → logprob: -8.142136573791504
    6. '[b' → logprob: -10.642136573791504
    7. '(' → logprob: -11.517136573791504
    8. 'Point' → logprob: -11.892136573791504
    9. 'point' → logprob: -12.517136573791504
    10. 'b' → logprob: -12.767136573791504

Token 436: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -7.896309739408025e-07
    2. 'b' → logprob: -14.125000953674316
    3. '(
' → logprob: -19.0
    4. '(' → logprob: -19.0
    5. ' (' → logprob: -21.5
    6. '=b' → logprob: -21.625
    7. '   ' → logprob: -21.875
    8. '((' → logprob: -22.0
    9. '	b' → logprob: -22.125
    10. '[b' → logprob: -22.875

Token 437: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00036799011286348104
    2. '[' → logprob: -8.500368118286133
    3. '2' → logprob: -8.750368118286133
    4. '3' → logprob: -13.375368118286133
    5. '0' → logprob: -13.500368118286133
    6. '
' → logprob: -13.875368118286133
    7. '4' → logprob: -14.000368118286133
    8. '```' → logprob: -14.250368118286133
    9. '(' → logprob: -16.000368118286133
    10. '[
' → logprob: -16.312868118286133

Token 438: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -15.875
    3. '[
' → logprob: -16.375
    4. ' [' → logprob: -16.375
    5. '0' → logprob: -16.75
    6. 'def' → logprob: -18.0
    7. '<|end|>' → logprob: -18.625
    8. ')[' → logprob: -18.875
    9. '...' → logprob: -19.0
    10. '
' → logprob: -19.25

Token 439: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2519347369670868
    2. '0' → logprob: -1.5019347667694092
    3. ' ' → logprob: -12.876935005187988
    4. '```' → logprob: -13.876935005187988
    5. ' [' → logprob: -15.001935005187988
    6. '][' → logprob: -15.001935005187988
    7. '[
' → logprob: -15.251935005187988
    8. 'b' → logprob: -15.501935005187988
    9. '1' → logprob: -15.876935005187988
    10. '#' → logprob: -16.501934051513672

Token 440: '],' (ID: 2155)
  Prédit: ',b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.017041794955730438
    2. '[' → logprob: -4.5170416831970215
    3. ',' → logprob: -5.1420416831970215
    4. 'b' → logprob: -10.26704216003418
    5. ' ,' → logprob: -10.51704216003418
    6. ')b' → logprob: -10.76704216003418
    7. '][' → logprob: -11.14204216003418
    8. ')' → logprob: -12.26704216003418
    9. '],' → logprob: -12.26704216003418
    10. '),' → logprob: -12.64204216003418

Token 441: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: 0.0
    2. ' b' → logprob: -16.875
    3. '```' → logprob: -19.75
    4. '	b' → logprob: -19.875
    5. '0' → logprob: -20.625
    6. '<|end|>' → logprob: -21.0
    7. ')b' → logprob: -21.0
    8. '...' → logprob: -21.25
    9. '[' → logprob: -21.25
    10. '$b' → logprob: -21.375

Token 442: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28223758935928345
    2. '2' → logprob: -1.5322375297546387
    3. '[' → logprob: -3.5322375297546387
    4. '```' → logprob: -7.907237529754639
    5. '0' → logprob: -8.657238006591797
    6. 'b' → logprob: -10.157238006591797
    7. ' ' → logprob: -11.282238006591797
    8. '...' → logprob: -12.157238006591797
    9. '4' → logprob: -12.907238006591797
    10. '   ' → logprob: -13.282238006591797

Token 443: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008635134436190128
    2. ',' → logprob: -4.7586350440979
    3. ',[' → logprob: -11.758635520935059
    4. ',b' → logprob: -12.133635520935059
    5. 'b' → logprob: -12.508635520935059
    6. ',
' → logprob: -13.883635520935059
    7. '][' → logprob: -14.133635520935059
    8. '1' → logprob: -14.383635520935059
    9. 'def' → logprob: -14.883635520935059
    10. ' ,' → logprob: -16.008634567260742

Token 444: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.610702363715973e-06
    2. '[' → logprob: -11.625009536743164
    3. '0' → logprob: -15.625009536743164
    4. ' ' → logprob: -15.625009536743164
    5. '```' → logprob: -16.000009536743164
    6. '
' → logprob: -16.500009536743164
    7. '...' → logprob: -17.625009536743164
    8. 'b' → logprob: -18.062509536743164
    9. '   ' → logprob: -18.625009536743164
    10. '-' → logprob: -18.875009536743164

Token 445: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00664597237482667
    2. '),' → logprob: -5.631646156311035
    3. ',b' → logprob: -6.506646156311035
    4. ' ,' → logprob: -7.131646156311035
    5. '],' → logprob: -7.381646156311035
    6. ',a' → logprob: -9.631646156311035
    7. ')' → logprob: -11.006646156311035
    8. ',d' → logprob: -11.256646156311035
    9. 'b' → logprob: -11.756646156311035
    10. '   ' → logprob: -11.881646156311035

Token 446: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5759400129318237
    2. ' a' → logprob: -0.8259400129318237
    3. '	a' → logprob: -15.325940132141113
    4. '   ' → logprob: -15.950940132141113
    5. '(a' → logprob: -16.450939178466797
    6. ' ' → logprob: -16.700939178466797
    7. '[a' → logprob: -17.575939178466797
    8. 'def' → logprob: -17.700939178466797
    9. '#a' → logprob: -18.200939178466797
    10. ')a' → logprob: -18.200939178466797

Token 447: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.375
    3. '0' → logprob: -17.375
    4. ' ' → logprob: -18.125
    5. '
' → logprob: -18.8125
    6. '```' → logprob: -19.1875
    7. '2' → logprob: -20.125
    8. '...' → logprob: -20.1875
    9. '१' → logprob: -20.375
    10. '۱' → logprob: -20.4375

Token 448: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.702754474943504e-05
    2. '0' → logprob: -10.25003719329834
    3. 'def' → logprob: -14.25003719329834
    4. ' [' → logprob: -15.62503719329834
    5. '<|end|>' → logprob: -15.62503719329834
    6. ',' → logprob: -16.000036239624023
    7. '][' → logprob: -16.125036239624023
    8. '(' → logprob: -16.250036239624023
    9. '[
' → logprob: -16.250036239624023
    10. '#' → logprob: -16.750036239624023

Token 449: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020401719666551799
    2. '[' → logprob: -8.500204086303711
    3. ' ' → logprob: -14.750204086303711
    4. '   ' → logprob: -17.25020408630371
    5. 'def' → logprob: -17.87520408630371
    6. '<|end|>' → logprob: -18.25020408630371
    7. '(' → logprob: -18.62520408630371
    8. '۰' → logprob: -19.12520408630371
    9. '#' → logprob: -20.00020408630371
    10. '][' → logprob: -20.37520408630371

Token 450: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01021438930183649
    2. '[' → logprob: -4.635214328765869
    3. '],' → logprob: -8.260214805603027
    4. ' ,' → logprob: -9.510214805603027
    5. '),' → logprob: -10.010214805603027
    6. 'def' → logprob: -11.135214805603027
    7. '<|end|>' → logprob: -11.135214805603027
    8. ',a' → logprob: -11.385214805603027
    9. '   ' → logprob: -11.885214805603027
    10. '0' → logprob: -12.010214805603027

Token 451: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0028236585203558207
    2. '0' → logprob: -5.877823829650879
    3. ' a' → logprob: -11.252823829650879
    4. '[' → logprob: -12.502823829650879
    5. ' ' → logprob: -13.377823829650879
    6. '1' → logprob: -15.377823829650879
    7. '<|end|>' → logprob: -16.002822875976562
    8. '```' → logprob: -16.627822875976562
    9. '   ' → logprob: -16.752822875976562
    10. '
' → logprob: -17.252822875976562

Token 452: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012508237268775702
    2. '0' → logprob: -7.001250743865967
    3. '[' → logprob: -8.001251220703125
    4. '<|end|>' → logprob: -13.001251220703125
    5. ' ' → logprob: -14.126251220703125
    6. '   ' → logprob: -15.251251220703125
    7. '-' → logprob: -15.376251220703125
    8. '```' → logprob: -15.751251220703125
    9. ',' → logprob: -15.876251220703125
    10. '<|end|>' → logprob: -16.501251220703125

Token 453: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00030614540446549654
    2. ',' → logprob: -8.375306129455566
    3. '0' → logprob: -10.250306129455566
    4. 'def' → logprob: -11.125306129455566
    5. '   ' → logprob: -11.125306129455566
    6. '1' → logprob: -11.875306129455566
    7. '][' → logprob: -14.000306129455566
    8. '```' → logprob: -14.125306129455566
    9. '	' → logprob: -14.375306129455566
    10. '-' → logprob: -15.375306129455566

Token 454: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. '[' → logprob: -12.750004768371582
    3. '0' → logprob: -14.625004768371582
    4. ' ' → logprob: -14.875004768371582
    5. '<|end|>' → logprob: -15.125004768371582
    6. '   ' → logprob: -15.625004768371582
    7. '```' → logprob: -16.375003814697266
    8. 'def' → logprob: -17.375003814697266
    9. '
' → logprob: -17.562503814697266
    10. ']' → logprob: -17.750003814697266

Token 455: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010219813324511051
    2. '),' → logprob: -4.885220050811768
    3. '],' → logprob: -6.010220050811768
    4. ' ,' → logprob: -9.13521957397461
    5. '(),' → logprob: -11.01021957397461
    6. 'a' → logprob: -12.13521957397461
    7. '>,' → logprob: -12.38521957397461
    8. 'def' → logprob: -12.38521957397461
    9. '`,' → logprob: -12.38521957397461
    10. ')' → logprob: -12.88521957397461

Token 456: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3868825435638428
    2. ' a' → logprob: -1.1368825435638428
    3. '   ' → logprob: -11.511882781982422
    4. ' ' → logprob: -13.636882781982422
    5. '	a' → logprob: -15.636882781982422
    6. '    ' → logprob: -17.011882781982422
    7. '  ' → logprob: -17.136882781982422
    8. '_a' → logprob: -18.386882781982422
    9. 'def' → logprob: -19.261882781982422
    10. ',a' → logprob: -19.511882781982422

Token 457: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.019345976412296295
    2. '1' → logprob: -4.144345760345459
    3. '0' → logprob: -6.144345760345459
    4. '[' → logprob: -6.769345760345459
    5. '```' → logprob: -11.894346237182617
    6. '
' → logprob: -14.081846237182617
    7. ' ' → logprob: -14.269346237182617
    8. 'def' → logprob: -14.269346237182617
    9. '``' → logprob: -14.769346237182617
    10. '-' → logprob: -14.894346237182617

Token 458: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.935296834039036e-06
    2. '0' → logprob: -13.00000286102295
    3. 'def' → logprob: -15.12500286102295
    4. '```' → logprob: -15.50000286102295
    5. '   ' → logprob: -16.000003814697266
    6. ' [' → logprob: -17.625003814697266
    7. '[
' → logprob: -17.875003814697266
    8. '][' → logprob: -18.500003814697266
    9. '(' → logprob: -18.750003814697266
    10. ',' → logprob: -19.125003814697266

Token 459: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.668304245569743e-05
    2. '[' → logprob: -10.000046730041504
    3. ' ' → logprob: -14.625046730041504
    4. '1' → logprob: -15.500046730041504
    5. '   ' → logprob: -15.750046730041504
    6. '```' → logprob: -15.750046730041504
    7. '۰' → logprob: -16.750045776367188
    8. '
' → logprob: -16.937545776367188
    9. '<|end|>' → logprob: -17.625045776367188
    10. '...' → logprob: -17.750045776367188

Token 460: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05017327517271042
    2. '[' → logprob: -3.675173282623291
    3. '],' → logprob: -3.800173282623291
    4. ']' → logprob: -7.675173282623291
    5. '),' → logprob: -7.925173282623291
    6. '][' → logprob: -8.675172805786133
    7. ' ,' → logprob: -9.550172805786133
    8. ',a' → logprob: -9.925172805786133
    9. ')' → logprob: -10.675172805786133
    10. '},' → logprob: -11.175172805786133

Token 461: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0206720617134124e-05
    2. ' a' → logprob: -11.50001049041748
    3. '	a' → logprob: -19.125009536743164
    4. '
' → logprob: -20.000009536743164
    5. ' ' → logprob: -20.250009536743164
    6. '[' → logprob: -20.625009536743164
    7. '```' → logprob: -20.750009536743164
    8. '   ' → logprob: -20.875009536743164
    9. '2' → logprob: -21.250009536743164
    10. '0' → logprob: -22.250009536743164

Token 462: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015097891446202993
    2. '[' → logprob: -9.250150680541992
    3. '2' → logprob: -9.875150680541992
    4. ' ' → logprob: -13.250150680541992
    5. '```' → logprob: -14.500150680541992
    6. '   ' → logprob: -14.875150680541992
    7. '
' → logprob: -15.500150680541992
    8. '-' → logprob: -15.625150680541992
    9. 'a' → logprob: -16.312650680541992
    10. '0' → logprob: -16.687650680541992

Token 463: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0052808308973908424
    2. '1' → logprob: -5.2552809715271
    3. ',' → logprob: -10.005280494689941
    4. '-' → logprob: -14.880280494689941
    5. ']' → logprob: -14.880280494689941
    6. '][' → logprob: -15.130280494689941
    7. '2' → logprob: -15.255280494689941
    8. ')' → logprob: -15.505280494689941
    9. '```' → logprob: -15.755280494689941
    10. '],' → logprob: -16.130281448364258

Token 464: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -14.375001907348633
    3. '[' → logprob: -14.625001907348633
    4. '```' → logprob: -15.375001907348633
    5. '
' → logprob: -16.375001907348633
    6. '   ' → logprob: -16.375001907348633
    7. '１' → logprob: -17.375001907348633
    8. ']' → logprob: -17.812501907348633
    9. '<|end|>' → logprob: -17.937501907348633
    10. '' → logprob: -18.000001907348633

Token 465: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001398333697579801
    2. '])' → logprob: -6.62639856338501
    3. ')
' → logprob: -10.001398086547852
    4. '))' → logprob: -11.376398086547852
    5. ' )' → logprob: -12.501398086547852
    6. '})' → logprob: -12.751398086547852
    7. '>)' → logprob: -13.126398086547852
    8. ')])' → logprob: -13.251398086547852
    9. '   ' → logprob: -13.376398086547852
    10. '`)' → logprob: -14.001398086547852

Token 466: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002570187207311392
    2. 'return' → logprob: -6.002570152282715
    3. '    
' → logprob: -10.127570152282715
    4. ' return' → logprob: -10.252570152282715
    5. '
' → logprob: -11.627570152282715
    6. '```' → logprob: -12.377570152282715
    7. 'd' → logprob: -13.002570152282715
    8. '	return' → logprob: -13.252570152282715
    9. ')' → logprob: -14.252570152282715
    10. 'min' → logprob: -14.502570152282715

Token 467: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5808525681495667
    2. 'return' (adapté à ' return') → logprob: -0.8308525681495667
    3. ' return' → logprob: -5.580852508544922
    4. 'd' → logprob: -7.830852508544922
    5. 'min' → logprob: -8.080852508544922
    6. 'm' → logprob: -8.580852508544922
    7. '
' → logprob: -9.330852508544922
    8. 'dist' → logprob: -9.955852508544922
    9. '    
' → logprob: -9.955852508544922
    10. '```' → logprob: -10.955852508544922

Token 468: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.1269282102584839
    2. 'min' → logprob: -2.1269283294677734
    3. '	min' → logprob: -15.876928329467773
    4. '   ' → logprob: -17.126928329467773
    5. '(min' → logprob: -18.126928329467773
    6. ' minimum' → logprob: -19.001928329467773
    7. ' max' → logprob: -19.126928329467773
    8. '_min' → logprob: -19.251928329467773
    9. 'max' → logprob: -19.376928329467773
    10. ' ' → logprob: -19.501928329467773

Token 469: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -3.173704271830502e-06
    2. '(' → logprob: -12.75000286102295
    3. '(min' → logprob: -15.75000286102295
    4. '([' → logprob: -16.875003814697266
    5. '(
' → logprob: -17.750003814697266
    6. '((' → logprob: -18.625003814697266
    7. 'd' → logprob: -19.875003814697266
    8. '(distance' → logprob: -20.125003814697266
    9. ' (' → logprob: -20.375003814697266
    10. '(dist' → logprob: -20.625003814697266

Token 470: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '_' → logprob: -17.75
    3. '
' → logprob: -17.75
    4. '(
' → logprob: -17.875
    5. '(d' → logprob: -18.125
    6. '(' → logprob: -18.625
    7. '4' → logprob: -18.875
    8. '１' → logprob: -19.125
    9. '```' → logprob: -19.375
    10. 'd' → logprob: -19.6875

Token 471: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038142696022987366
    2. ',d' → logprob: -3.288142681121826
    3. ' ,' → logprob: -9.413143157958984
    4. ',
' → logprob: -11.163143157958984
    5. 'd' → logprob: -12.913143157958984
    6. '(d' → logprob: -13.163143157958984
    7. ',min' → logprob: -14.788143157958984
    8. '(' → logprob: -15.288143157958984
    9. ',

' → logprob: -16.913143157958984
    10. '   ' → logprob: -17.163143157958984

Token 472: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0019287518225610256
    2. ' d' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.126928329467773
    4. '	d' → logprob: -18.126928329467773
    5. ' ' → logprob: -18.251928329467773
    6. '  ' → logprob: -19.501928329467773
    7. '
' → logprob: -19.751928329467773
    8. 'min' → logprob: -20.251928329467773
    9. '    ' → logprob: -20.501928329467773
    10. '    
' → logprob: -20.501928329467773

Token 473: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01437645684927702
    2. '3' → logprob: -5.014376640319824
    3. '1' → logprob: -5.264376640319824
    4. '4' → logprob: -6.014376640319824
    5. 'd' → logprob: -13.201876640319824
    6. '```' → logprob: -13.326876640319824
    7. ',' → logprob: -13.514376640319824
    8. ')' → logprob: -13.701876640319824
    9. '   ' → logprob: -13.889376640319824
    10. 'min' → logprob: -14.014376640319824

Token 474: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008508439059369266
    2. ',d' → logprob: -7.250850677490234
    3. ' ,' → logprob: -8.875850677490234
    4. 'd' → logprob: -14.250850677490234
    5. ',
' → logprob: -14.500850677490234
    6. ' d' → logprob: -18.000850677490234
    7. '   ' → logprob: -18.125850677490234
    8. '_,' → logprob: -19.500850677490234
    9. '`,' → logprob: -19.750850677490234
    10. '4' → logprob: -20.000850677490234

Token 475: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.12692810595035553
    2. 'd' → logprob: -2.1269280910491943
    3. ' ' → logprob: -17.001928329467773
    4. '   ' → logprob: -17.126928329467773
    5. '	d' → logprob: -17.251928329467773
    6. '_d' → logprob: -18.876928329467773
    7. ' ' → logprob: -18.876928329467773
    8. ' 
' → logprob: -19.001928329467773
    9. ',' → logprob: -19.251928329467773
    10. ')' → logprob: -19.376928329467773

Token 476: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. '4' → logprob: -17.25
    3. '[' → logprob: -18.25
    4. '1' → logprob: -18.625
    5. ' ' → logprob: -19.25
    6. '
' → logprob: -20.5
    7. '```' → logprob: -20.75
    8. ',' → logprob: -20.875
    9. '   ' → logprob: -21.125
    10. '_' → logprob: -21.25

Token 477: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000548387470189482
    2. ',d' → logprob: -7.625548362731934
    3. ' ,' → logprob: -9.750548362731934
    4. ',
' → logprob: -13.500548362731934
    5. 'd' → logprob: -14.125548362731934
    6. '   ' → logprob: -17.12554931640625
    7. '),' → logprob: -18.12554931640625
    8. ')' → logprob: -18.25054931640625
    9. '(),' → logprob: -18.50054931640625
    10. ' d' → logprob: -18.50054931640625

Token 478: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.014165159314870834
    2. ' d' → logprob: -4.264164924621582
    3. '   ' → logprob: -13.389164924621582
    4. '	d' → logprob: -16.5141658782959
    5. ' ' → logprob: -17.0141658782959
    6. '  ' → logprob: -17.7641658782959
    7. '4' → logprob: -19.1391658782959
    8. '    ' → logprob: -19.2641658782959
    9. '       ' → logprob: -20.0141658782959
    10. ')d' → logprob: -20.5141658782959

Token 479: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.04858794063329697
    2. '3' → logprob: -3.0485880374908447
    3. '[' → logprob: -14.298587799072266
    4. ' ' → logprob: -17.048587799072266
    5. '
' → logprob: -17.798587799072266
    6. ')' → logprob: -18.548587799072266
    7. '0' → logprob: -18.923587799072266
    8. '(' → logprob: -19.298587799072266
    9. '```' → logprob: -19.298587799072266
    10. '   ' → logprob: -19.736087799072266

Token 480: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -15.000000953674316
    3. ' )' → logprob: -16.125
    4. '   ' → logprob: -17.125
    5. '))' → logprob: -17.5
    6. ')}' → logprob: -18.25
    7. ')`' → logprob: -19.125
    8. '}' → logprob: -19.5
    9. ')return' → logprob: -19.75
    10. '()' → logprob: -21.125

Token 481: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.822646693966817e-06
    2. '
' → logprob: -12.250007629394531
    3. 'd' → logprob: -12.750007629394531
    4. 'de' → logprob: -17.00000762939453
    5. ' def' → logprob: -17.25000762939453
    6. '```' → logprob: -18.12500762939453
    7. 'ndef' → logprob: -18.25000762939453
    8. ':def' → logprob: -18.75000762939453
    9. '\' → logprob: -19.25000762939453
    10. 'import' → logprob: -19.62500762939453

Token 482: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.1797112673521042
    2. ' segments' → logprob: -2.17971134185791
    3. ' orientation' → logprob: -4.05471134185791
    4. 'cc' → logprob: -4.17971134185791
    5. 'orientation' → logprob: -4.30471134185791
    6. ' cc' → logprob: -5.55471134185791
    7. 'cross' → logprob: -7.55471134185791
    8. ' cross' → logprob: -8.05471134185791
    9. 'orient' → logprob: -8.30471134185791
    10. '_segments' → logprob: -9.80471134185791

Token 483: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -5.512236498361744e-07
    2. '_interrupt' → logprob: -15.625000953674316
    3. '_' → logprob: -15.750000953674316
    4. '_import' → logprob: -16.875
    5. '_in' → logprob: -17.25
    6. '_overlap' → logprob: -17.375
    7. '_integr' → logprob: -18.25
    8. '_continue' → logprob: -18.25
    9. '_are' → logprob: -18.375
    10. '_segment' → logprob: -18.625

Token 484: 'sect' (ID: 16910)
  Prédit: 'sect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sect' → logprob: -8.180258191714529e-06
    2. 's' → logprob: -12.750008583068848
    3. '_' → logprob: -13.000008583068848
    4. '```' → logprob: -13.625008583068848
    5. 'ect' → logprob: -14.625008583068848
    6. 'sects' → logprob: -15.125008583068848
    7. 'section' → logprob: -15.500008583068848
    8. '_se' → logprob: -15.750008583068848
    9. '``' → logprob: -15.875008583068848
    10. 'def' → logprob: -16.25000762939453

Token 485: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.320199877838604e-07
    2. '(a' → logprob: -14.875
    3. '2' → logprob: -17.0
    4. '(' → logprob: -17.0
    5. 'def' → logprob: -18.0
    6. '_
' → logprob: -18.375
    7. 'a' → logprob: -18.75
    8. '```' → logprob: -19.25
    9. '(_' → logprob: -19.625
    10. ' _' → logprob: -20.75

Token 486: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0076425946317613125
    2. '_' → logprob: -4.88264274597168
    3. '(a' → logprob: -10.25764274597168
    4. 'def' → logprob: -14.38264274597168
    5. 'a' → logprob: -14.88264274597168
    6. ' ' → logprob: -15.88264274597168
    7. 'segments' → logprob: -16.13264274597168
    8. 'segment' → logprob: -16.88264274597168
    9. '```' → logprob: -17.13264274597168
    10. '(x' → logprob: -17.50764274597168

Token 487: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.000916935910936445
    2. 'def' → logprob: -7.000916957855225
    3. '_d' → logprob: -12.625916481018066
    4. '2' → logprob: -13.250916481018066
    5. '(d' → logprob: -16.000917434692383
    6. '(a' → logprob: -16.125917434692383
    7. '(points' → logprob: -17.375917434692383
    8. '_' → logprob: -17.875917434692383
    9. '(' → logprob: -18.125917434692383
    10. 'points' → logprob: -18.250917434692383

Token 488: '(p' (ID: 2407)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -5.383526149671525e-05
    2. '(p' → logprob: -9.875053405761719
    3. '((' → logprob: -13.250053405761719
    4. '(' → logprob: -14.500053405761719
    5. 'def' → logprob: -17.12505340576172
    6. '(pa' → logprob: -17.62505340576172
    7. '(A' → logprob: -18.00005340576172
    8. ' (' → logprob: -18.37505340576172
    9. '(ax' → logprob: -19.12505340576172
    10. '(
' → logprob: -20.25005340576172

Token 489: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023727556690573692
    2. 'a' → logprob: -3.7737276554107666
    3. '(a' → logprob: -8.773727416992188
    4. ',' → logprob: -8.898727416992188
    5. '):
' → logprob: -9.898727416992188
    6. ',a' → logprob: -10.148727416992188
    7. '):' → logprob: -10.523727416992188
    8. 'def' → logprob: -10.523727416992188
    9. '_a' → logprob: -11.398727416992188
    10. ')' → logprob: -11.523727416992188

Token 490: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001221178681589663
    2. ',p' → logprob: -6.751221179962158
    3. 'a' → logprob: -10.876220703125
    4. ',a' → logprob: -11.376220703125
    5. ' ,' → logprob: -12.001220703125
    6. 'p' → logprob: -12.126220703125
    7. '1' → logprob: -12.251220703125
    8. ',
' → logprob: -13.001220703125
    9. '(p' → logprob: -14.001220703125
    10. '):' → logprob: -15.126220703125

Token 491: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -7.941850526549388e-06
    2. ' p' → logprob: -11.875007629394531
    3. 'q' → logprob: -14.000007629394531
    4. '<|end|>' → logprob: -18.87500762939453
    5. 'def' → logprob: -19.87500762939453
    6. '   ' → logprob: -20.25000762939453
    7. '	p' → logprob: -21.25000762939453
    8. '  ' → logprob: -22.00000762939453
    9. '<|end|>' → logprob: -22.25000762939453
    10. ' ' → logprob: -22.50000762939453

Token 492: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2420397698879242
    2. '1' → logprob: -1.6170397996902466
    3. 'p' → logprob: -4.242039680480957
    4. '0' → logprob: -6.617039680480957
    5. 'q' → logprob: -7.492039680480957
    6. ',' → logprob: -8.867039680480957
    7. ',q' → logprob: -11.117039680480957
    8. 'oint' → logprob: -11.367039680480957
    9. 'a' → logprob: -11.492039680480957
    10. 'r' → logprob: -12.367039680480957

Token 493: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.0629870858974755e-05
    2. ',p' → logprob: -9.75006103515625
    3. ' ,' → logprob: -14.12506103515625
    4. '):' → logprob: -14.50006103515625
    5. ',
' → logprob: -14.87506103515625
    6. ',a' → logprob: -14.87506103515625
    7. '):
' → logprob: -16.00006103515625
    8. 'p' → logprob: -16.62506103515625
    9. '(p' → logprob: -17.00006103515625
    10. '   ' → logprob: -17.50006103515625

Token 494: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.47420522570610046
    2. 'p' → logprob: -0.9742052555084229
    3. ' q' → logprob: -9.349205017089844
    4. ' p' → logprob: -10.099205017089844
    5. '	q' → logprob: -17.099205017089844
    6. 'def' → logprob: -17.849205017089844
    7. '   ' → logprob: -18.099205017089844
    8. ' ' → logprob: -18.474205017089844
    9. '
' → logprob: -19.349205017089844
    10. '  ' → logprob: -19.724205017089844

Token 495: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ',' → logprob: -16.5
    3. '<|end|>' → logprob: -20.5
    4. '3' → logprob: -21.125
    5. ')' → logprob: -21.5
    6. '১' → logprob: -21.75
    7. ' ' → logprob: -22.125
    8. '<|end|>' → logprob: -22.25
    9. '१' → logprob: -22.375
    10. '۱' → logprob: -22.625

Token 496: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001249925117008388
    2. ',q' → logprob: -9.00012493133545
    3. ' ,' → logprob: -13.50012493133545
    4. ',
' → logprob: -15.62512493133545
    5. ',p' → logprob: -16.625125885009766
    6. '):' → logprob: -18.625125885009766
    7. '):
' → logprob: -19.250125885009766
    8. ',Q' → logprob: -19.625125885009766
    9. 'q' → logprob: -20.125125885009766
    10. '<|end|>' → logprob: -20.250125885009766

Token 497: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00010902655776590109
    2. ' q' → logprob: -9.12510871887207
    3. '	q' → logprob: -16.50010871887207
    4. 'p' → logprob: -17.12510871887207
    5. ' ' → logprob: -17.12510871887207
    6. '   ' → logprob: -18.12510871887207
    7. '
' → logprob: -19.37510871887207
    8. ')' → logprob: -19.37510871887207
    9. '  ' → logprob: -20.00010871887207
    10. ',q' → logprob: -20.37510871887207

Token 498: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.18470680713653564
    2. '1' → logprob: -1.8097068071365356
    3. '3' → logprob: -5.309706687927246
    4. '```' → logprob: -12.559706687927246
    5. '_' → logprob: -14.309706687927246
    6. ')' → logprob: -14.434706687927246
    7. '7' → logprob: -14.809706687927246
    8. '4' → logprob: -14.934706687927246
    9. 's' → logprob: -15.684706687927246
    10. 'p' → logprob: -15.934706687927246

Token 499: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0024764856789261103
    2. '):
' → logprob: -6.002476692199707
    3. '):
' → logprob: -15.127476692199707
    4. ':' → logprob: -15.252476692199707
    5. ')' → logprob: -16.12747573852539
    6. '):

' → logprob: -16.37747573852539
    7. ' ):' → logprob: -16.37747573852539
    8. '}:' → logprob: -18.50247573852539
    9. '   ' → logprob: -19.12747573852539
    10. ']:' → logprob: -20.50247573852539

Token 500: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013512765988707542
    2. 'def' → logprob: -4.38851261138916
    3. ' def' → logprob: -7.76351261138916
    4. ':' → logprob: -8.38851261138916
    5. '    
' → logprob: -9.13851261138916
    6. '
' → logprob: -9.38851261138916
    7. ':
' → logprob: -9.38851261138916
    8. '```' → logprob: -9.88851261138916
    9. 'dx' → logprob: -12.38851261138916
    10. '#' → logprob: -12.51351261138916

Token 501: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007989631965756416
    2. ' def' → logprob: -5.007989406585693
    3. '   ' → logprob: -6.757989406585693
    4. '#' (adapté à ' #') → logprob: -10.007989883422852
    5. 'dx' → logprob: -10.507989883422852
    6. 'd' → logprob: -10.632989883422852
    7. '
' → logprob: -11.757989883422852
    8. ' ' → logprob: -12.382989883422852
    9. '    
' → logprob: -13.382989883422852
    10. '  ' → logprob: -15.007989883422852

Token 502: ' Checks' (ID: 51655)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.17420256882906e-05
    2. ' def' → logprob: -9.375091552734375
    3. '#' → logprob: -13.000091552734375
    4. 'd' → logprob: -13.250091552734375
    5. 'dx' → logprob: -13.250091552734375
    6. '   ' → logprob: -14.125091552734375
    7. '
' → logprob: -15.125091552734375
    8. '"""' → logprob: -16.500091552734375
    9. ' ' → logprob: -17.625091552734375
    10. 'A' → logprob: -18.375091552734375

Token 503: ' if' (ID: 538)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09766438603401184
    2. ' def' → logprob: -2.4726643562316895
    3. '   ' → logprob: -4.8476643562316895
    4. ' orientation' → logprob: -8.222664833068848
    5. ' ' → logprob: -8.472664833068848
    6. 'p' → logprob: -9.097664833068848
    7. ' p' → logprob: -9.097664833068848
    8. 'd' → logprob: -10.097664833068848
    9. '
' → logprob: -11.097664833068848
    10. '    
' → logprob: -11.222664833068848

Token 504: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03156060352921486
    2. '(p' → logprob: -3.6565606594085693
    3. ' def' → logprob: -6.15656042098999
    4. 'p' → logprob: -7.15656042098999
    5. 'cc' → logprob: -7.40656042098999
    6. 'the' → logprob: -7.90656042098999
    7. ' (' → logprob: -8.781560897827148
    8. '(' → logprob: -8.781560897827148
    9. 'max' → logprob: -9.031560897827148
    10. '((' → logprob: -9.031560897827148

Token 505: '2' (ID: 17)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.40053823590278625
    2. 'def' → logprob: -1.9005382061004639
    3. 'two' → logprob: -2.400538206100464
    4. 'the' → logprob: -3.525538206100464
    5. 'p' → logprob: -3.650538206100464
    6. ' two' → logprob: -4.150538444519043
    7. 'segments' → logprob: -5.150538444519043
    8. 'cc' → logprob: -5.525538444519043
    9. '((' → logprob: -6.400538444519043
    10. 'max' → logprob: -6.525538444519043

Token 506: ' segments' (ID: 33749)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2514890134334564
    2. ' def' → logprob: -1.6264890432357788
    3. ' segments' → logprob: -4.376489162445068
    4. ' lines' → logprob: -4.751489162445068
    5. ' line' → logprob: -6.126489162445068
    6. 'segments' → logprob: -7.001489162445068
    7. ' p' → logprob: -7.376489162445068
    8. ' vectors' → logprob: -7.501489162445068
    9. 'lines' → logprob: -9.37648868560791
    10. 'p' → logprob: -10.37648868560791

Token 507: ' (' (ID: 350)
  Prédit: ' intersect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intersect' → logprob: -0.2805054485797882
    2. '(p' → logprob: -1.9055054187774658
    3. 'inter' → logprob: -2.905505418777466
    4. 'def' → logprob: -4.655505657196045
    5. ' are' → logprob: -4.905505657196045
    6. '(a' → logprob: -5.155505657196045
    7. ' p' → logprob: -5.655505657196045
    8. 'p' → logprob: -5.905505657196045
    9. '   ' → logprob: -6.030505657196045
    10. ' (' → logprob: -6.280505657196045

Token 508: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00021998681768309325
    2. '(p' → logprob: -8.75022029876709
    3. ' p' → logprob: -10.75022029876709
    4. 'def' → logprob: -10.87522029876709
    5. ')' → logprob: -11.25022029876709
    6. ' (' → logprob: -13.50022029876709
    7. '
' → logprob: -13.50022029876709
    8. '   ' → logprob: -13.62522029876709
    9. ')p' → logprob: -13.62522029876709
    10. ')
' → logprob: -14.00022029876709

Token 509: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015053745359182358
    2. ',' → logprob: -5.140053749084473
    3. 'def' → logprob: -5.140053749084473
    4. '[' → logprob: -6.390053749084473
    5. '   ' → logprob: -7.015053749084473
    6. ')' → logprob: -7.890053749084473
    7. '_' → logprob: -9.265053749084473
    8. '0' → logprob: -10.515053749084473
    9. '<|end|>' → logprob: -10.640053749084473
    10. '2' → logprob: -10.765053749084473

Token 510: '-p' (ID: 3161)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.048556599766016006
    2. '[' → logprob: -3.1735565662384033
    3. ' ,' → logprob: -5.798556804656982
    4. ',p' → logprob: -7.048556804656982
    5. ')' → logprob: -7.548556804656982
    6. ',
' → logprob: -8.548556327819824
    7. '1' → logprob: -8.673556327819824
    8. 'p' → logprob: -8.798556327819824
    9. ' and' → logprob: -8.798556327819824
    10. '),' → logprob: -9.048556327819824

Token 511: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8219583075260743e-05
    2. ')' → logprob: -11.000038146972656
    3. ',' → logprob: -11.250038146972656
    4. ' ' → logprob: -13.500038146972656
    5. '2' → logprob: -13.625038146972656
    6. 'oints' → logprob: -13.750038146972656
    7. '```' → logprob: -13.875038146972656
    8. 'def' → logprob: -13.875038146972656
    9. '3' → logprob: -14.250038146972656
    10. '[' → logprob: -14.500038146972656

Token 512: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22845643758773804
    2. ')' → logprob: -1.6034564971923828
    3. '):' → logprob: -6.728456497192383
    4. '),' → logprob: -7.478456497192383
    5. ' ,' → logprob: -7.603456497192383
    6. '):
' → logprob: -8.103456497192383
    7. '   ' → logprob: -8.853456497192383
    8. ')
' → logprob: -9.603456497192383
    9. ',p' → logprob: -9.603456497192383
    10. ',
' → logprob: -10.353456497192383

Token 513: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6935485005378723
    2. ',' → logprob: -1.0685484409332275
    3. ')' → logprob: -2.8185484409332275
    4. 'def' → logprob: -3.4435484409332275
    5. ' def' → logprob: -3.8185484409332275
    6. ' are' → logprob: -4.068548679351807
    7. '   ' → logprob: -4.318548679351807
    8. 'and' → logprob: -5.318548679351807
    9. '):
' → logprob: -5.943548679351807
    10. 'are' → logprob: -6.818548679351807

Token 514: ' (' (ID: 350)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.15249061584472656
    2. '(q' → logprob: -2.6524906158447266
    3. ' q' → logprob: -2.6524906158447266
    4. ' (' → logprob: -7.652490615844727
    5. '(' → logprob: -12.027490615844727
    6. '	q' → logprob: -14.527490615844727
    7. ' ' → logprob: -15.277490615844727
    8. '
' → logprob: -15.777490615844727
    9. ',q' → logprob: -15.777490615844727
    10. '[q' → logprob: -16.027490615844727

Token 515: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.15310683415737e-05
    2. ' q' → logprob: -10.750021934509277
    3. 'p' → logprob: -17.50002098083496
    4. '   ' → logprob: -17.75002098083496
    5. '	q' → logprob: -17.75002098083496
    6. '
' → logprob: -18.25002098083496
    7. ')' → logprob: -19.00002098083496
    8. '(q' → logprob: -19.25002098083496
    9. ' ' → logprob: -20.37502098083496
    10. '```' → logprob: -20.50002098083496

Token 516: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ',' → logprob: -14.750000953674316
    3. 'def' → logprob: -14.875000953674316
    4. ')' → logprob: -16.625001907348633
    5. '[' → logprob: -16.875001907348633
    6. '   ' → logprob: -17.125001907348633
    7. '```' → logprob: -17.250001907348633
    8. '_' → logprob: -17.250001907348633
    9. ' ' → logprob: -17.500001907348633
    10. '3' → logprob: -18.250001907348633

Token 517: '-q' (ID: 62760)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007237671874463558
    2. '[' → logprob: -5.757237434387207
    3. ',q' → logprob: -6.132237434387207
    4. ' ,' → logprob: -7.382237434387207
    5. ')' → logprob: -7.757237434387207
    6. '   ' → logprob: -8.257237434387207
    7. ',p' → logprob: -8.382237434387207
    8. '1' → logprob: -8.507237434387207
    9. ',
' → logprob: -9.757237434387207
    10. 'p' → logprob: -10.257237434387207

Token 518: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04300729185342789
    2. '1' → logprob: -3.1680073738098145
    3. '3' → logprob: -11.918006896972656
    4. '4' → logprob: -14.793006896972656
    5. '```' → logprob: -14.918006896972656
    6. ')' → logprob: -15.543006896972656
    7. '7' → logprob: -15.793006896972656
    8. 'q' → logprob: -16.293006896972656
    9. '5' → logprob: -16.418006896972656
    10. '9' → logprob: -16.543006896972656

Token 519: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013830134645104408
    2. '):
' → logprob: -4.638830184936523
    3. '):' → logprob: -5.513830184936523
    4. '   ' → logprob: -11.138830184936523
    5. '):

' → logprob: -11.638830184936523
    6. ')
' → logprob: -12.138830184936523
    7. ' )' → logprob: -13.138830184936523
    8. 'def' → logprob: -13.388830184936523
    9. '):
' → logprob: -13.638830184936523
    10. ' are' → logprob: -15.263830184936523

Token 520: ' intersect' (ID: 64353)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6545841097831726
    2. ':
' → logprob: -1.5295841693878174
    3. 'def' → logprob: -2.0295841693878174
    4. ' def' → logprob: -2.6545841693878174
    5. ':' → logprob: -3.0295841693878174
    6. ' are' → logprob: -4.904583930969238
    7. '):
' → logprob: -6.029583930969238
    8. ',' → logprob: -6.904583930969238
    9. 'are' → logprob: -7.404583930969238
    10. ' have' → logprob: -7.904583930969238

Token 521: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1394672989845276
    2. ':
' → logprob: -2.639467239379883
    3. ':' → logprob: -2.889467239379883
    4. 'def' → logprob: -6.639467239379883
    5. '():
' → logprob: -7.514467239379883
    6. '
' → logprob: -8.014467239379883
    7. '    
' → logprob: -8.014467239379883
    8. '(' → logprob: -8.639467239379883
    9. '):
' → logprob: -8.889467239379883
    10. '():' → logprob: -9.139467239379883

Token 522: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20437787473201752
    2. 'def' → logprob: -1.7043778896331787
    3. ' def' → logprob: -7.2043776512146
    4. 'the' → logprob: -7.2043776512146
    5. ' ' → logprob: -7.3293776512146
    6. ' the' → logprob: -8.454378128051758
    7. '"""
' → logprob: -9.704378128051758
    8. '):
' → logprob: -9.704378128051758
    9. 'p' → logprob: -10.079378128051758
    10. '#' → logprob: -10.079378128051758

Token 523: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07405447959899902
    2. 'def' → logprob: -2.699054479598999
    3. 'the' → logprob: -6.199054718017578
    4. 'plane' → logprob: -7.074054718017578
    5. 'any' → logprob: -7.574054718017578
    6. ' def' → logprob: -9.199054718017578
    7. ' ' → logprob: -9.324054718017578
    8. '
' → logprob: -9.699054718017578
    9. ' plane' → logprob: -9.824054718017578
    10. '1' → logprob: -10.074054718017578

Token 524: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.5518736243247986
    2. 'd' → logprob: -1.1768736839294434
    3. 'def' → logprob: -3.5518736839294434
    4. ' 
' → logprob: -3.6768736839294434
    5. '   ' → logprob: -4.176873683929443
    6. ' def' → logprob: -4.176873683929443
    7. ' dimensions' → logprob: -4.301873683929443
    8. ' space' → logprob: -4.926873683929443
    9. ' d' → logprob: -6.051873683929443
    10. ' D' → logprob: -6.676873683929443

Token 525: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7349005937576294
    2. ':' → logprob: -1.1099005937576294
    3. ':
' → logprob: -1.7349005937576294
    4. 'def' → logprob: -5.35990047454834
    5. '():
' → logprob: -5.73490047454834
    6. '):
' → logprob: -5.98490047454834
    7. '():' → logprob: -6.60990047454834
    8. '(' → logprob: -7.10990047454834
    9. '):' → logprob: -7.23490047454834
    10. ':def' → logprob: -8.60990047454834

Token 526: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039568014442920685
    2. ':' → logprob: -4.039567947387695
    3. ':
' → logprob: -4.039567947387695
    4. '
' → logprob: -6.039567947387695
    5. 'def' → logprob: -7.164567947387695
    6. '    
' → logprob: -8.289567947387695
    7. '):
' → logprob: -9.664567947387695
    8. '```' → logprob: -10.039567947387695
    9. ':def' → logprob: -11.289567947387695
    10. '  
' → logprob: -11.539567947387695

Token 527: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.008280392736196518
    2. '   ' → logprob: -5.383280277252197
    3. ' def' → logprob: -5.758280277252197
    4. 'dx' → logprob: -7.758280277252197
    5. 'd' → logprob: -10.883280754089355
    6. '
' → logprob: -11.008280754089355
    7. '    
' → logprob: -11.508280754089355
    8. 'x' → logprob: -12.008280754089355
    9. 'px' → logprob: -12.008280754089355
    10. '#' → logprob: -12.258280754089355

Token 528: ' cc' (ID: 22988)
  Prédit: 'orientation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orientation' → logprob: -0.3563236892223358
    2. 'orient' → logprob: -2.106323719024658
    3. 'cross' → logprob: -2.356323719024658
    4. 'cc' → logprob: -2.606323719024658
    5. ' orientation' → logprob: -4.856323719024658
    6. ' cross' → logprob: -6.606323719024658
    7. ' cc' → logprob: -8.7313232421875
    8. ' orient' → logprob: -9.7313232421875
    9. 'vec' → logprob: -9.9813232421875
    10. '_orientation' → logprob: -10.1063232421875

Token 529: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -3.292907877039397e-06
    2. 'c' → logprob: -13.62500286102295
    3. 'd' → logprob: -14.50000286102295
    4. '
' → logprob: -15.00000286102295
    5. 'wend' → logprob: -15.12500286102295
    6. 'k' → logprob: -16.000003814697266
    7. '_w' → logprob: -16.500003814697266
    8. 't' → logprob: -16.625003814697266
    9. '

' → logprob: -16.625003814697266
    10. 'wrap' → logprob: -16.625003814697266

Token 530: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.01821034960448742
    2. '(A' → logprob: -4.018210411071777
    3. '(p' → logprob: -9.768210411071777
    4. '(' → logprob: -13.143210411071777
    5. '(
' → logprob: -14.893210411071777
    6. '(x' → logprob: -14.893210411071777
    7. '(ax' → logprob: -15.143210411071777
    8. '(u' → logprob: -15.518210411071777
    9. '(P' → logprob: -16.89320945739746
    10. '((' → logprob: -17.76820945739746

Token 531: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005235767923295498
    2. '(a' → logprob: -6.25523567199707
    3. '(p' → logprob: -6.50523567199707
    4. ' ,' → logprob: -8.00523567199707
    5. '):' → logprob: -8.13023567199707
    6. ',b' → logprob: -8.25523567199707
    7. ',p' → logprob: -8.75523567199707
    8. '(' → logprob: -8.75523567199707
    9. '(x' → logprob: -8.88023567199707
    10. '):
' → logprob: -9.25523567199707

Token 532: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.100409597158432
    2. ',c' → logprob: -2.350409507751465
    3. ' ,' → logprob: -8.600409507751465
    4. 'c' → logprob: -12.225409507751465
    5. '):
' → logprob: -12.475409507751465
    6. ',
' → logprob: -12.725409507751465
    7. ',b' → logprob: -12.850409507751465
    8. '(c' → logprob: -14.100409507751465
    9. ',C' → logprob: -14.100409507751465
    10. ',p' → logprob: -14.225409507751465

Token 533: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2519620656967163
    2. '):
' → logprob: -1.5019620656967163
    3. '):
' → logprob: -11.376961708068848
    4. ')' → logprob: -11.626961708068848
    5. '):

' → logprob: -11.751961708068848
    6. '(a' → logprob: -13.376961708068848
    7. '):(' → logprob: -13.876961708068848
    8. ' ):' → logprob: -14.376961708068848
    9. ',' → logprob: -14.876961708068848
    10. '(' → logprob: -15.001961708068848

Token 534: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05448748171329498
    2. ' return' → logprob: -3.429487466812134
    3. '(' → logprob: -4.804487705230713
    4. '   ' → logprob: -5.179487705230713
    5. 'return' → logprob: -6.179487705230713
    6. ' (' → logprob: -6.554487705230713
    7. '(a' → logprob: -7.179487705230713
    8. '    ' → logprob: -7.679487705230713
    9. ':' → logprob: -7.679487705230713
    10. '<|end|>' → logprob: -8.179487228393555

Token 535: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6402098536491394
    2. ' return' → logprob: -1.1402099132537842
    3. '   ' → logprob: -1.8902099132537842
    4. '       ' → logprob: -6.390209674835205
    5. '	return' → logprob: -8.015210151672363
    6. ' ' → logprob: -11.265210151672363
    7. ':return' → logprob: -13.390210151672363
    8. '    ' → logprob: -13.765210151672363
    9. '  ' → logprob: -14.515210151672363
    10. '(return' → logprob: -14.890210151672363

Token 536: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0280635803937912
    2. ' (' → logprob: -4.528063774108887
    3. '(a' → logprob: -4.778063774108887
    4. '(b' → logprob: -4.778063774108887
    5. ' ' → logprob: -10.778063774108887
    6. '(cc' → logprob: -11.153063774108887
    7. '   ' → logprob: -12.278063774108887
    8. '(' → logprob: -12.903063774108887
    9. '((' → logprob: -13.528063774108887
    10. '  ' → logprob: -14.653063774108887

Token 537: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -5.44312788406387e-05
    2. 'b' → logprob: -9.875054359436035
    3. '(c' → logprob: -12.875054359436035
    4. ')c' → logprob: -15.625054359436035
    5. ' c' → logprob: -16.37505531311035
    6. '
' → logprob: -18.25005531311035
    7. '(b' → logprob: -18.62505531311035
    8. '	c' → logprob: -19.12505531311035
    9. 'cc' → logprob: -19.87505531311035
    10. '(' → logprob: -20.25005531311035

Token 538: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6405310816480778e-05
    2. 'y' → logprob: -11.375016212463379
    3. 'x' → logprob: -12.250016212463379
    4. '[
' → logprob: -16.875017166137695
    5. '.y' → logprob: -17.750017166137695
    6. '0' → logprob: -17.875017166137695
    7. 'b' → logprob: -18.125017166137695
    8. '-' → logprob: -18.250017166137695
    9. '```' → logprob: -18.625017166137695
    10. 'a' → logprob: -18.750017166137695

Token 539: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1269393414258957
    2. '0' → logprob: -2.126939296722412
    3. '
' → logprob: -11.50193977355957
    4. '

' → logprob: -15.25193977355957
    5. '```' → logprob: -15.25193977355957
    6. '[' → logprob: -15.37693977355957
    7. '2' → logprob: -15.75193977355957
    8. '   ' → logprob: -16.37693977355957
    9. ' ' → logprob: -16.37693977355957
    10. '4' → logprob: -16.93943977355957

Token 540: ']-' (ID: 27107)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.47482743859291077
    2. '-' → logprob: -0.9748274087905884
    3. '-b' → logprob: -7.349827289581299
    4. ']-' → logprob: -9.849827766418457
    5. '-a' → logprob: -10.099827766418457
    6. '[' → logprob: -11.724827766418457
    7. 'a' → logprob: -13.349827766418457
    8. '-p' → logprob: -14.099827766418457
    9. 'b' → logprob: -14.349827766418457
    10. ']' → logprob: -14.474827766418457

Token 541: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.4418171455617994e-05
    2. 'b' → logprob: -10.250044822692871
    3. ' a' → logprob: -11.625044822692871
    4. '	a' → logprob: -17.000043869018555
    5. ')' → logprob: -18.625043869018555
    6. '<|end|>' → logprob: -18.625043869018555
    7. ')a' → logprob: -18.750043869018555
    8. ' ' → logprob: -19.375043869018555
    9. '   ' → logprob: -19.375043869018555
    10. ' b' → logprob: -19.750043869018555

Token 542: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016043636947870255
    2. '[' → logprob: -4.141043663024902
    3. ' ' → logprob: -12.266043663024902
    4. '
' → logprob: -12.891043663024902
    5. '[
' → logprob: -13.641043663024902
    6. '```' → logprob: -15.266043663024902
    7. ' [' → logprob: -15.766043663024902
    8. '   ' → logprob: -16.266042709350586
    9. '<|end|>' → logprob: -16.891042709350586
    10. ')' → logprob: -17.141042709350586

Token 543: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '
' → logprob: -15.000000953674316
    3. ' ' → logprob: -16.625
    4. '0' → logprob: -16.875
    5. '   ' → logprob: -18.0
    6. 'y' → logprob: -18.875
    7. '' → logprob: -19.0
    8. '	' → logprob: -19.0
    9. '3' → logprob: -19.625
    10. '

' → logprob: -20.0625

Token 544: '])' (ID: 4636)
  Prédit: ')*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')*(' → logprob: -0.08077395707368851
    2. ')' → logprob: -2.5807740688323975
    3. ')*' → logprob: -6.330773830413818
    4. ' )' → logprob: -9.330774307250977
    5. '*(' → logprob: -11.580774307250977
    6. '*)' → logprob: -13.705774307250977
    7. ']*(' → logprob: -13.830774307250977
    8. ')**' → logprob: -14.705774307250977
    9. '")' → logprob: -15.455774307250977
    10. ')
' → logprob: -15.830774307250977

Token 545: '*(' (ID: 14793)
  Prédit: ')*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*(' → logprob: -0.2033420205116272
    2. ')' → logprob: -2.4533419609069824
    3. ')*' → logprob: -2.5783419609069824
    4. '*(' → logprob: -4.078341960906982
    5. ' *' → logprob: -5.703341960906982
    6. '*' → logprob: -6.328341960906982
    7. ']*(' → logprob: -11.45334243774414
    8. ' )' → logprob: -11.82834243774414
    9. '```' → logprob: -12.07834243774414
    10. '*((' → logprob: -12.20334243774414

Token 546: 'b' (ID: 65)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.061990320682525635
    2. 'b' → logprob: -2.811990261077881
    3. ' (' → logprob: -10.811990737915039
    4. '	b' → logprob: -13.561990737915039
    5. ' b' → logprob: -13.936990737915039
    6. '   ' → logprob: -15.686990737915039
    7. ')b' → logprob: -17.68699073791504
    8. '[b' → logprob: -18.06199073791504
    9. ',b' → logprob: -18.18699073791504
    10. '_b' → logprob: -18.81199073791504

Token 547: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. '0' → logprob: -14.250000953674316
    3. '[
' → logprob: -16.5
    4. 'def' → logprob: -19.625
    5. 'x' → logprob: -20.375
    6. ' [' → logprob: -20.375
    7. '```' → logprob: -20.625
    8. '1' → logprob: -20.625
    9. 'import' → logprob: -20.75
    10. '
' → logprob: -21.25

Token 548: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -14.500000953674316
    3. ' ' → logprob: -18.375
    4. '
' → logprob: -18.625
    5. '۰' → logprob: -18.625
    6. '```' → logprob: -19.125
    7. '   ' → logprob: -21.0
    8. '(' → logprob: -21.5625
    9. 'x' → logprob: -21.6875
    10. '2' → logprob: -21.8125

Token 549: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6680123209953308
    2. ' -' → logprob: -0.7930123209953308
    3. '-a' → logprob: -3.4180123805999756
    4. '[' → logprob: -6.4180121421813965
    5. '-A' → logprob: -9.293012619018555
    6. ']-' → logprob: -9.543012619018555
    7. '()-' → logprob: -10.043012619018555
    8. '-
' → logprob: -10.293012619018555
    9. '-c' → logprob: -10.543012619018555
    10. '-ai' → logprob: -10.668012619018555

Token 550: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -6.988221684878226e-06
    2. ' a' → logprob: -11.875006675720215
    3. '	a' → logprob: -17.50000762939453
    4. ')a' → logprob: -20.87500762939453
    5. 'c' → logprob: -21.25000762939453
    6. '   ' → logprob: -22.00000762939453
    7. ''a' → logprob: -22.62500762939453
    8. '#a' → logprob: -22.87500762939453
    9. '(a' → logprob: -23.37500762939453
    10. '  ' → logprob: -23.37500762939453

Token 551: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25193002820014954
    2. '[' → logprob: -1.5019299983978271
    3. '[
' → logprob: -14.876930236816406
    4. ' ' → logprob: -15.626930236816406
    5. '
' → logprob: -16.001930236816406
    6. '(' → logprob: -16.001930236816406
    7. ' [' → logprob: -16.626930236816406
    8. '```' → logprob: -16.876930236816406
    9. '][' → logprob: -17.126930236816406
    10. '   ' → logprob: -17.501930236816406

Token 552: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0683535037969705e-05
    2. '[' → logprob: -11.50001049041748
    3. '
' → logprob: -14.62501049041748
    4. ' ' → logprob: -17.750011444091797
    5. '   ' → logprob: -18.625011444091797
    6. '۰' → logprob: -18.625011444091797
    7. '```' → logprob: -20.250011444091797
    8. '{' → logprob: -20.250011444091797
    9. '

' → logprob: -20.750011444091797
    10. '	' → logprob: -20.875011444091797

Token 553: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020468863658607006
    2. ')-(' → logprob: -6.752047061920166
    3. ' )' → logprob: -7.627047061920166
    4. ')-' → logprob: -7.877047061920166
    5. ')
' → logprob: -12.127046585083008
    6. '')' → logprob: -14.377046585083008
    7. '[' → logprob: -14.752046585083008
    8. '   ' → logprob: -14.752046585083008
    9. ')<' → logprob: -14.877046585083008
    10. ' ' → logprob: -15.377046585083008

Token 554: ' >' (ID: 1424)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.030156094580888748
    2. '-' → logprob: -3.530156135559082
    3. ' <' → logprob: -8.280156135559082
    4. ' >' → logprob: -9.655156135559082
    5. '<' → logprob: -10.030156135559082
    6. '>' → logprob: -11.780156135559082
    7. ' ' → logprob: -11.905156135559082
    8. ')' → logprob: -12.030156135559082
    9. '<|end|>' → logprob: -12.030156135559082
    10. '   ' → logprob: -13.030156135559082

Token 555: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.029783355072140694
    2. '(c' → logprob: -3.529783248901367
    3. '(b' → logprob: -11.029783248901367
    4. '(' → logprob: -11.154783248901367
    5. ' ' → logprob: -13.654783248901367
    6. '(a' → logprob: -15.029783248901367
    7. '(s' → logprob: -16.529783248901367
    8. '(p' → logprob: -16.529783248901367
    9. '(n' → logprob: -16.529783248901367
    10. '
' → logprob: -16.529783248901367

Token 556: 'b' (ID: 65)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.023620450869202614
    2. ' (' → logprob: -3.773620367050171
    3. '(b' → logprob: -7.89862060546875
    4. 'c' → logprob: -12.77362060546875
    5. '   ' → logprob: -15.27362060546875
    6. ' ' → logprob: -15.77362060546875
    7. '
' → logprob: -16.39862060546875
    8. '(d' → logprob: -16.89862060546875
    9. '(
' → logprob: -16.89862060546875
    10. '(a' → logprob: -17.27362060546875

Token 557: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.4192871175473556e-05
    2. '0' → logprob: -10.000054359436035
    3. '1' → logprob: -11.875054359436035
    4. '[
' → logprob: -14.375054359436035
    5. '
' → logprob: -15.000054359436035
    6. '(' → logprob: -15.750054359436035
    7. '2' → logprob: -16.12505340576172
    8. '.' → logprob: -16.25005340576172
    9. '<|end|>' → logprob: -16.37505340576172
    10. '```' → logprob: -16.50005340576172

Token 558: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004257427528500557
    2. '1' → logprob: -5.5042572021484375
    3. '[' → logprob: -8.629257202148438
    4. '
' → logprob: -15.754257202148438
    5. '(' → logprob: -17.629257202148438
    6. ' ' → logprob: -18.254257202148438
    7. '2' → logprob: -19.504257202148438
    8. '   ' → logprob: -19.504257202148438
    9. '	' → logprob: -19.816757202148438
    10. '```' → logprob: -19.816757202148438

Token 559: ']-' (ID: 27107)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001216186792589724
    2. '1' → logprob: -7.626216411590576
    3. '-' → logprob: -7.876216411590576
    4. '0' → logprob: -8.126215934753418
    5. '][' → logprob: -10.126215934753418
    6. ' -' → logprob: -12.751215934753418
    7. ']-' → logprob: -13.251215934753418
    8. ')[' → logprob: -13.376215934753418
    9. '```' → logprob: -13.501215934753418
    10. '<|end|>' → logprob: -14.001215934753418

Token 560: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.759734732331708e-05
    2. 'c' → logprob: -11.500017166137695
    3. ' a' → logprob: -11.875017166137695
    4. '
' → logprob: -15.375017166137695
    5. '#a' → logprob: -16.875017166137695
    6. '   ' → logprob: -17.250017166137695
    7. ' ' → logprob: -17.500017166137695
    8. '	a' → logprob: -17.500017166137695
    9. '```' → logprob: -17.500017166137695
    10. '(a' → logprob: -17.875017166137695

Token 561: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4300227463245392
    2. '0' → logprob: -1.0550227165222168
    3. '1' → logprob: -6.680022716522217
    4. '   ' → logprob: -10.805023193359375
    5. ' ' → logprob: -11.430023193359375
    6. '```' → logprob: -11.555023193359375
    7. '-' → logprob: -12.680023193359375
    8. '(' → logprob: -12.805023193359375
    9. '
' → logprob: -12.930023193359375
    10. '2' → logprob: -13.055023193359375

Token 562: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.625001907348633
    3. 'a' → logprob: -14.375001907348633
    4. '
' → logprob: -15.250001907348633
    5. '1' → logprob: -17.000001907348633
    6. ' ' → logprob: -17.125001907348633
    7. '   ' → logprob: -17.625001907348633
    8. '```' → logprob: -17.625001907348633
    9. 'b' → logprob: -18.250001907348633
    10. '(' → logprob: -18.500001907348633

Token 563: '])' (ID: 4636)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9783190488815308
    2. ')-' → logprob: -1.2283190488815308
    3. '[' → logprob: -2.1033191680908203
    4. ' -' → logprob: -2.3533191680908203
    5. ']-' → logprob: -2.9783191680908203
    6. ')' → logprob: -3.8533191680908203
    7. ')-(' → logprob: -4.22831916809082
    8. 'a' → logprob: -4.72831916809082
    9. '0' → logprob: -4.85331916809082
    10. 'c' → logprob: -5.47831916809082

Token 564: '*(' (ID: 14793)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.34351566433906555
    2. ' (' → logprob: -1.7185156345367432
    3. '*(' → logprob: -2.218515634536743
    4. '(' → logprob: -6.343515872955322
    5. ' *' → logprob: -7.718515872955322
    6. ')*(' → logprob: -8.718515396118164
    7. '*' → logprob: -9.218515396118164
    8. ' -' → logprob: -10.593515396118164
    9. '[c' → logprob: -10.718515396118164
    10. '*c' → logprob: -10.718515396118164

Token 565: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.001178916310891509
    2. '(c' → logprob: -6.751178741455078
    3. ' c' → logprob: -11.876178741455078
    4. ')c' → logprob: -13.751178741455078
    5. '	c' → logprob: -15.501178741455078
    6. '   ' → logprob: -15.501178741455078
    7. '
' → logprob: -16.751178741455078
    8. ' (' → logprob: -17.376178741455078
    9. '[c' → logprob: -17.376178741455078
    10. '(' → logprob: -17.626178741455078

Token 566: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.339278580620885e-06
    2. '0' → logprob: -13.000001907348633
    3. '[
' → logprob: -17.125001907348633
    4. '(' → logprob: -18.500001907348633
    5. '```' → logprob: -19.875001907348633
    6. '1' → logprob: -20.250001907348633
    7. 'import' → logprob: -20.375001907348633
    8. 'x' → logprob: -20.750001907348633
    9. 'c' → logprob: -20.875001907348633
    10. ' [' → logprob: -21.000001907348633

Token 567: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017970333283301443
    2. '[' → logprob: -8.625179290771484
    3. '
' → logprob: -15.750179290771484
    4. '   ' → logprob: -17.875179290771484
    5. '```' → logprob: -18.125179290771484
    6. ' ' → logprob: -18.375179290771484
    7. '2' → logprob: -18.750179290771484
    8. '{' → logprob: -18.875179290771484
    9. 'x' → logprob: -19.625179290771484
    10. '(' → logprob: -19.625179290771484

Token 568: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01956227421760559
    2. '[' → logprob: -4.644562244415283
    3. ' -' → logprob: -4.644562244415283
    4. '-c' → logprob: -9.144562721252441
    5. '-q' → logprob: -11.769562721252441
    6. '0' → logprob: -12.394562721252441
    7. '-[' → logprob: -12.519562721252441
    8. ' ' → logprob: -12.519562721252441
    9. '()-' → logprob: -13.019562721252441
    10. '-p' → logprob: -13.269562721252441

Token 569: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -6.704273118884885e-07
    2. ' a' → logprob: -14.375000953674316
    3. 'c' → logprob: -19.5
    4. '	a' → logprob: -19.625
    5. '#a' → logprob: -21.375
    6. '<a' → logprob: -21.875
    7. ' ' → logprob: -22.25
    8. '>a' → logprob: -22.5
    9. ')a' → logprob: -22.625
    10. '_a' → logprob: -22.625

Token 570: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029756510630249977
    2. '[' → logprob: -3.529756546020508
    3. '-' → logprob: -13.029756546020508
    4. ' ' → logprob: -13.529756546020508
    5. '   ' → logprob: -14.404756546020508
    6. '(' → logprob: -14.529756546020508
    7. '```' → logprob: -14.779756546020508
    8. '
' → logprob: -15.654756546020508
    9. ',' → logprob: -15.654756546020508
    10. '{' → logprob: -16.029756546020508

Token 571: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -14.875000953674316
    3. '
' → logprob: -15.625000953674316
    4. ' ' → logprob: -17.5
    5. '```' → logprob: -18.75
    6. 'c' → logprob: -19.0
    7. '   ' → logprob: -19.0
    8. '۰' → logprob: -19.75
    9. '{' → logprob: -19.875
    10. '1' → logprob: -20.0

Token 572: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013909504050388932
    2. '])' → logprob: -7.0013909339904785
    3. ' )' → logprob: -7.8763909339904785
    4. '))' → logprob: -10.126391410827637
    5. ')
' → logprob: -11.376391410827637
    6. ')])' → logprob: -11.626391410827637
    7. '})' → logprob: -12.126391410827637
    8. ' ' → logprob: -12.251391410827637
    9. '   ' → logprob: -12.251391410827637
    10. 'def' → logprob: -13.001391410827637

Token 573: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07323254644870758
    2. '
' → logprob: -3.573232650756836
    3. '```' → logprob: -4.448232650756836
    4. '    
' → logprob: -4.573232650756836
    5. '\n' → logprob: -5.198232650756836
    6. '<|end|>' → logprob: -5.698232650756836
    7. ')
' → logprob: -6.323232650756836
    8. '  
' → logprob: -6.323232650756836
    9. ')' → logprob: -6.323232650756836
    10. '``' → logprob: -7.198232650756836

Token 574: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001843485952122137
    2. '
' → logprob: -9.875184059143066
    3. ' return' → logprob: -9.875184059143066
    4. '    
' → logprob: -9.875184059143066
    5. '```' → logprob: -11.875184059143066
    6. 'return' → logprob: -12.000184059143066
    7. ' if' → logprob: -12.000184059143066
    8. ' 
' → logprob: -12.250184059143066
    9. '  
' → logprob: -13.375184059143066
    10. '       ' → logprob: -13.750184059143066

Token 575: ',B' (ID: 19853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.595024824142456
    2. '[' → logprob: -1.345024824142456
    3. '1' → logprob: -1.845024824142456
    4. ' ,' → logprob: -4.720025062561035
    5. ')' → logprob: -5.095025062561035
    6. 'def' → logprob: -5.345025062561035
    7. 'B' → logprob: -5.720025062561035
    8. '=' → logprob: -6.470025062561035
    9. ',B' → logprob: -7.220025062561035
    10. ' =' → logprob: -7.345025062561035

Token 576: ',C' (ID: 26924)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16888350248336792
    2. '=' → logprob: -2.0438835620880127
    3. ',' → logprob: -4.168883323669434
    4. ',C' → logprob: -5.293883323669434
    5. '=C' → logprob: -5.418883323669434
    6. ')' → logprob: -7.543883323669434
    7. ' ,' → logprob: -8.293883323669434
    8. 'C' → logprob: -9.918883323669434
    9. ')=' → logprob: -10.418883323669434
    10. '),' → logprob: -10.543883323669434

Token 577: ',D' (ID: 61507)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5769156813621521
    2. '=' → logprob: -0.8269156813621521
    3. ',' → logprob: -7.701915740966797
    4. ')' → logprob: -8.326915740966797
    5. '=D' → logprob: -8.701915740966797
    6. ')=' → logprob: -9.951915740966797
    7. '=p' → logprob: -10.326915740966797
    8. ',D' → logprob: -10.826915740966797
    9. '=A' → logprob: -12.076915740966797
    10. '=a' → logprob: -13.076915740966797

Token 578: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474147230386734
    2. '=' → logprob: -0.9741472005844116
    3. ')' → logprob: -9.974146842956543
    4. ',' → logprob: -10.974146842956543
    5. ')=' → logprob: -12.849146842956543
    6. '=p' → logprob: -14.349146842956543
    7. '=True' → logprob: -14.599146842956543
    8. ' )' → logprob: -14.974146842956543
    9. ' ' → logprob: -14.974146842956543
    10. '   ' → logprob: -15.349146842956543

Token 579: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0017591944197192788
    2. ' p' → logprob: -6.376759052276611
    3. '(p' → logprob: -10.00175952911377
    4. '   ' → logprob: -11.50175952911377
    5. '[p' → logprob: -14.37675952911377
    6. ' (' → logprob: -14.87675952911377
    7. '	p' → logprob: -15.50175952911377
    8. '  ' → logprob: -16.001758575439453
    9. ' ' → logprob: -16.126758575439453
    10. '(' → logprob: -16.251758575439453

Token 580: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.333223139634356e-05
    2. '[' → logprob: -10.500033378601074
    3. '(' → logprob: -12.125033378601074
    4. '(p' → logprob: -16.625032424926758
    5. '[
' → logprob: -17.375032424926758
    6. '2' → logprob: -17.375032424926758
    7. '
' → logprob: -17.562532424926758
    8. 'def' → logprob: -17.687532424926758
    9. '[](' → logprob: -17.937532424926758
    10. '[(' → logprob: -18.062532424926758

Token 581: ',p' (ID: 14835)
  Prédit: ',p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.10028969496488571
    2. ',' → logprob: -2.3502895832061768
    3. ' ,' → logprob: -9.975289344787598
    4. ',q' → logprob: -10.225289344787598
    5. 'p' → logprob: -15.600289344787598
    6. ',b' → logprob: -17.475290298461914
    7. ',
' → logprob: -17.975290298461914
    8. ',d' → logprob: -18.350290298461914
    9. ',c' → logprob: -18.475290298461914
    10. ' p' → logprob: -18.600290298461914

Token 582: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '۲' → logprob: -19.0
    3. '₂' → logprob: -19.125
    4. ' ' → logprob: -19.75
    5. '[' → logprob: -20.0
    6. '```' → logprob: -20.625
    7. '２' → logprob: -20.8125
    8. '२' → logprob: -21.0625
    9. 's' → logprob: -21.25
    10. '<|end|>' → logprob: -21.3125

Token 583: ',q' (ID: 86188)
  Prédit: ',q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',q' → logprob: -0.001503790495917201
    2. ',' → logprob: -6.501503944396973
    3. ' ,' → logprob: -13.876503944396973
    4. 'q' → logprob: -15.126503944396973
    5. ',Q' → logprob: -15.751503944396973
    6. ',
' → logprob: -16.126502990722656
    7. ',p' → logprob: -20.251502990722656
    8. ' q' → logprob: -20.501502990722656
    9. ',c' → logprob: -20.626502990722656
    10. ',g' → logprob: -20.626502990722656

Token 584: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '2' → logprob: -17.5
    3. '[' → logprob: -17.875
    4. '```' → logprob: -19.5625
    5. '' → logprob: -19.875
    6. '9' → logprob: -20.0
    7. '
' → logprob: -20.0625
    8. '۱' → logprob: -20.4375
    9. '4' → logprob: -20.5
    10. '১' → logprob: -20.5625

Token 585: ',q' (ID: 86188)
  Prédit: ',q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',q' → logprob: -0.002478273818269372
    2. ',' → logprob: -6.002478122711182
    3. ',Q' → logprob: -13.62747859954834
    4. ' ,' → logprob: -13.62747859954834
    5. 'q' → logprob: -16.502477645874023
    6. ',C' → logprob: -17.252477645874023
    7. ',p' → logprob: -17.627477645874023
    8. ',
' → logprob: -18.377477645874023
    9. ',D' → logprob: -18.627477645874023
    10. ',c' → logprob: -18.752477645874023

Token 586: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '1' → logprob: -17.5
    3. '292' → logprob: -18.875
    4. '۲' → logprob: -19.0
    5. '```' → logprob: -19.0
    6. '[' → logprob: -19.375
    7. '２' → logprob: -19.5
    8. '₂' → logprob: -19.625
    9. '
' → logprob: -20.125
    10. '' → logprob: -20.25

Token 587: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04923272132873535
    2. '
' → logprob: -3.1742327213287354
    3. '    
' → logprob: -5.174232482910156
    4. '  
' → logprob: -8.549232482910156
    5. 'return' → logprob: -9.049232482910156
    6. '	
' → logprob: -9.924232482910156
    7. ' return' → logprob: -10.174232482910156
    8. ',
' → logprob: -10.299232482910156
    9. '<|end|>' → logprob: -11.174232482910156
    10. ',' → logprob: -11.174232482910156

Token 588: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.816591434879228e-05
    2. '    
' → logprob: -10.25008773803711
    3. ' return' → logprob: -10.50008773803711
    4. 'return' → logprob: -11.12508773803711
    5. '
' → logprob: -11.75008773803711
    6. '	return' → logprob: -13.25008773803711
    7. '  
' → logprob: -15.62508773803711
    8. '	
' → logprob: -16.12508773803711
    9. '       ' → logprob: -16.62508773803711
    10. '```' → logprob: -16.75008773803711

Token 589: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8123770356178284
    2. 'return' (adapté à ' return') → logprob: -0.8123770356178284
    3. '   ' → logprob: -2.1873769760131836
    4. ' ' → logprob: -8.937376976013184
    5. '
' → logprob: -10.812376976013184
    6. '       ' → logprob: -12.312376976013184
    7. '	return' → logprob: -12.437376976013184
    8. '    
' → logprob: -12.437376976013184
    9. 'cc' → logprob: -12.687376976013184
    10. 'r' → logprob: -13.187376976013184

Token 590: ' (' (ID: 350)
  Prédit: '(cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cc' → logprob: -0.07928576320409775
    2. 'cc' → logprob: -3.0792858600616455
    3. ' cc' → logprob: -4.079285621643066
    4. ' (' → logprob: -4.329285621643066
    5. '(' → logprob: -8.954285621643066
    6. ' ' → logprob: -13.454285621643066
    7. '	cc' → logprob: -13.454285621643066
    8. '   ' → logprob: -13.704285621643066
    9. '_cc' → logprob: -14.454285621643066
    10. '((' → logprob: -14.829285621643066

Token 591: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.0020870929583907127
    2. ' cc' → logprob: -6.252087116241455
    3. '(cc' → logprob: -8.752086639404297
    4. '(' → logprob: -16.502086639404297
    5. '	cc' → logprob: -16.502086639404297
    6. ' (' → logprob: -16.877086639404297
    7. '   ' → logprob: -17.627086639404297
    8. '_cc' → logprob: -18.377086639404297
    9. '
' → logprob: -19.752086639404297
    10. ' ' → logprob: -20.252086639404297

Token 592: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -4.320199877838604e-07
    2. 'W' → logprob: -15.5
    3. 'cw' → logprob: -16.875
    4. '_w' → logprob: -18.75
    5. '(w' → logprob: -18.75
    6. 'wp' → logprob: -19.25
    7. '(A' → logprob: -19.5
    8. 'v' → logprob: -19.625
    9. 'ww' → logprob: -20.0
    10. 'ws' → logprob: -20.125

Token 593: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.6166903151315637e-05
    2. 'A' → logprob: -11.125016212463379
    3. ')(' → logprob: -14.750016212463379
    4. ')' → logprob: -14.750016212463379
    5. '(' → logprob: -15.375016212463379
    6. '
' → logprob: -16.125015258789062
    7. ' A' → logprob: -16.250015258789062
    8. '(
' → logprob: -16.500015258789062
    9. ' (' → logprob: -16.875015258789062
    10. '(B' → logprob: -17.375015258789062

Token 594: ',C' (ID: 26924)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12008313834667206
    2. ',A' → logprob: -3.2450830936431885
    3. ',C' → logprob: -3.3700830936431885
    4. ',B' → logprob: -3.3700830936431885
    5. ' ,' → logprob: -5.245083332061768
    6. '(A' → logprob: -9.74508285522461
    7. ',D' → logprob: -10.37008285522461
    8. 'A' → logprob: -11.12008285522461
    9. 'C' → logprob: -11.74508285522461
    10. '(C' → logprob: -11.87008285522461

Token 595: ',D' (ID: 61507)
  Prédit: ',D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',D' → logprob: -0.030308065935969353
    2. ',' → logprob: -3.5303080081939697
    3. 'D' → logprob: -7.530308246612549
    4. ',B' → logprob: -10.90530776977539
    5. ',d' → logprob: -13.53030776977539
    6. ' ,' → logprob: -14.28030776977539
    7. ',
' → logprob: -15.15530776977539
    8. ' D' → logprob: -16.03030776977539
    9. ',A' → logprob: -16.90530776977539
    10. 'B' → logprob: -17.90530776977539

Token 596: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004213786742184311
    2. ')!=' → logprob: -8.000421524047852
    3. ' )' → logprob: -9.500421524047852
    4. '))' → logprob: -12.000421524047852
    5. '!=' → logprob: -13.250421524047852
    6. ')
' → logprob: -13.500421524047852
    7. ' !=' → logprob: -14.250421524047852
    8. ',' → logprob: -14.375421524047852
    9. ')!' → logprob: -15.750421524047852
    10. ',)' → logprob: -15.875421524047852

Token 597: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.18589000403881073
    2. ' !=' → logprob: -2.060889959335327
    3. ')' → logprob: -3.560889959335327
    4. ')!=' → logprob: -4.310890197753906
    5. '!=(' → logprob: -7.810890197753906
    6. ',' → logprob: -10.560890197753906
    7. ' )' → logprob: -11.560890197753906
    8. ']!=' → logprob: -11.810890197753906
    9. '()!=' → logprob: -12.185890197753906
    10. '!' → logprob: -13.435890197753906

Token 598: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.0007100477814674377
    2. ' cc' → logprob: -7.2507100105285645
    3. '(cc' → logprob: -16.875709533691406
    4. '	cc' → logprob: -17.000709533691406
    5. '_cc' → logprob: -19.750709533691406
    6. ' ' → logprob: -21.500709533691406
    7. '   ' → logprob: -21.625709533691406
    8. 'ccc' → logprob: -22.125709533691406
    9. '
' → logprob: -22.250709533691406
    10. 'Cc' → logprob: -23.000709533691406

Token 599: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -6.704273118884885e-07
    2. 'W' → logprob: -14.250000953674316
    3. 'cw' → logprob: -17.125
    4. 'ww' → logprob: -17.75
    5. 'wc' → logprob: -18.5
    6. '
' → logprob: -18.75
    7. '```' → logprob: -19.25
    8. 'wv' → logprob: -20.0
    9. 'ｗ' → logprob: -20.25
    10. ' w' → logprob: -20.625

Token 600: '(B' (ID: 8409)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.004311668686568737
    2. '(B' → logprob: -5.629311561584473
    3. 'A' → logprob: -7.254311561584473
    4. 'B' → logprob: -12.754311561584473
    5. '(C' → logprob: -14.254311561584473
    6. '(' → logprob: -15.254311561584473
    7. ' A' → logprob: -15.629311561584473
    8. ' (' → logprob: -16.50431251525879
    9. '(
' → logprob: -16.50431251525879
    10. ')' → logprob: -16.50431251525879

Token 601: ',C' (ID: 26924)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.003510391339659691
    2. '(' → logprob: -6.628510475158691
    3. ',C' → logprob: -6.878510475158691
    4. '(A' → logprob: -7.253510475158691
    5. 'C' → logprob: -8.128510475158691
    6. ',' → logprob: -9.128510475158691
    7. ')' → logprob: -11.128510475158691
    8. '(
' → logprob: -11.628510475158691
    9. '<|end|>' → logprob: -12.128510475158691
    10. '),' → logprob: -12.503510475158691

Token 602: ',D' (ID: 61507)
  Prédit: ',D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',D' → logprob: -0.10086654126644135
    2. 'D' → logprob: -2.3508665561676025
    3. ',' → logprob: -7.350866317749023
    4. '(D' → logprob: -11.225866317749023
    5. ',
' → logprob: -13.725866317749023
    6. ',d' → logprob: -14.100866317749023
    7. ' D' → logprob: -14.350866317749023
    8. ' ,' → logprob: -14.850866317749023
    9. '<D' → logprob: -14.975866317749023
    10. '	D' → logprob: -14.975866317749023

Token 603: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008348815608769655
    2. ' )' → logprob: -7.250834941864014
    3. '))' → logprob: -9.000834465026855
    4. ')
' → logprob: -14.625834465026855
    5. ' and' → logprob: -14.625834465026855
    6. ' ))' → logprob: -15.625834465026855
    7. '),' → logprob: -16.375835418701172
    8. '])' → logprob: -16.500835418701172
    9. ')&&' → logprob: -16.625835418701172
    10. ',' → logprob: -16.750835418701172

Token 604: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0040874239057302475
    2. 'and' → logprob: -5.504087448120117
    3. ' ' → logprob: -12.254087448120117
    4. ')' → logprob: -12.504087448120117
    5. '	and' → logprob: -15.754087448120117
    6. ' ' → logprob: -15.879087448120117
    7. '   ' → logprob: -16.004087448120117
    8. '    ' → logprob: -16.254087448120117
    9. '<|end|>' → logprob: -17.004087448120117
    10. ' (' → logprob: -17.004087448120117

Token 605: ' (' (ID: 350)
  Prédit: '(cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cc' → logprob: -0.10020720958709717
    2. ' (' → logprob: -2.3502073287963867
    3. '(' → logprob: -15.100207328796387
    4. ' ' → logprob: -15.975207328796387
    5. '(c' → logprob: -16.47520637512207
    6. ' cc' → logprob: -17.10020637512207
    7. '   ' → logprob: -17.22520637512207
    8. '(CC' → logprob: -17.60020637512207
    9. '(pc' → logprob: -17.97520637512207
    10. '(ct' → logprob: -18.10020637512207

Token 606: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.005567532032728195
    2. ' cc' → logprob: -5.25556755065918
    3. '(cc' → logprob: -8.00556755065918
    4. '	cc' → logprob: -17.00556755065918
    5. '_cc' → logprob: -18.88056755065918
    6. 'ccc' → logprob: -19.13056755065918
    7. ' (' → logprob: -20.88056755065918
    8. ' ' → logprob: -21.75556755065918
    9. '   ' → logprob: -22.13056755065918
    10. '
' → logprob: -22.88056755065918

Token 607: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.2664456789934775e-06
    2. 'W' → logprob: -13.750000953674316
    3. 'cw' → logprob: -16.000001907348633
    4. '_w' → logprob: -18.375001907348633
    5. 'wc' → logprob: -18.500001907348633
    6. '(w' → logprob: -19.125001907348633
    7. '(A' → logprob: -19.875001907348633
    8. 'ow' → logprob: -20.000001907348633
    9. 'wv' → logprob: -20.375001907348633
    10. '```' → logprob: -20.500001907348633

Token 608: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -3.292907877039397e-06
    2. 'A' → logprob: -13.25000286102295
    3. '(' → logprob: -14.25000286102295
    4. ' (' → logprob: -15.37500286102295
    5. '<|end|>' → logprob: -15.37500286102295
    6. '(B' → logprob: -15.50000286102295
    7. '(
' → logprob: -15.87500286102295
    8. '(C' → logprob: -17.250003814697266
    9. ')' → logprob: -17.875003814697266
    10. ' A' → logprob: -18.000003814697266

Token 609: ',B' (ID: 19853)
  Prédit: ',B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',B' → logprob: -0.01207797136157751
    2. 'B' → logprob: -4.512077808380127
    3. ',' → logprob: -6.887077808380127
    4. ',C' → logprob: -12.137078285217285
    5. ',
' → logprob: -13.762078285217285
    6. ' ,' → logprob: -13.887078285217285
    7. ',b' → logprob: -14.387078285217285
    8. '(B' → logprob: -14.637078285217285
    9. ' B' → logprob: -15.512078285217285
    10. 'C' → logprob: -16.76207733154297

Token 610: ',C' (ID: 26924)
  Prédit: ',C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',C' → logprob: -0.0032635112293064594
    2. 'C' → logprob: -5.753263473510742
    3. ',' → logprob: -9.378263473510742
    4. ',
' → logprob: -14.878263473510742
    5. ' ,' → logprob: -15.128263473510742
    6. ',Q' → logprob: -15.378263473510742
    7. ' C' → logprob: -15.753263473510742
    8. ',c' → logprob: -16.003263473510742
    9. '<|end|>' → logprob: -16.878263473510742
    10. '(C' → logprob: -17.128263473510742

Token 611: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001055795350112021
    2. ',' → logprob: -7.001055717468262
    3. ' )' → logprob: -9.126055717468262
    4. ')!=' → logprob: -11.001055717468262
    5. ',)' → logprob: -11.126055717468262
    6. ')
' → logprob: -13.126055717468262
    7. ' ,' → logprob: -13.876055717468262
    8. '),' → logprob: -15.001055717468262
    9. '))' → logprob: -15.251055717468262
    10. ',q' → logprob: -16.001056671142578

Token 612: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.023557573556900024
    2. '!=' → logprob: -3.898557662963867
    3. ')' → logprob: -6.148557662963867
    4. ')!=' → logprob: -7.648557662963867
    5. ',' → logprob: -7.898557662963867
    6. '!=(' → logprob: -11.398557662963867
    7. '()!=' → logprob: -12.398557662963867
    8. ' ,' → logprob: -12.398557662963867
    9. ' )' → logprob: -12.648557662963867
    10. ']!=' → logprob: -13.898557662963867

Token 613: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.03804252669215202
    2. ' cc' → logprob: -3.2880425453186035
    3. '(cc' → logprob: -13.788042068481445
    4. '
' → logprob: -17.288042068481445
    5. '	cc' → logprob: -17.288042068481445
    6. ' ' → logprob: -19.788042068481445
    7. '_cc' → logprob: -20.413042068481445
    8. '   ' → logprob: -20.913042068481445
    9. 'Cc' → logprob: -21.413042068481445
    10. 'ccc' → logprob: -22.413042068481445

Token 614: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.9361264946837764e-07
    2. 'cw' → logprob: -15.875
    3. 'ow' → logprob: -17.75
    4. '(' → logprob: -18.375
    5. '(w' → logprob: -18.625
    6. 'W' → logprob: -19.5
    7. '<|end|>' → logprob: -19.625
    8. 'c' → logprob: -19.875
    9. 'q' → logprob: -20.125
    10. 'wc' → logprob: -20.125

Token 615: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.07889407873153687
    2. '(B' → logprob: -2.5788941383361816
    3. 'A' → logprob: -12.953893661499023
    4. '(' → logprob: -13.453893661499023
    5. '(C' → logprob: -15.578893661499023
    6. ')' → logprob: -16.328893661499023
    7. 'B' → logprob: -16.453893661499023
    8. '(D' → logprob: -16.703893661499023
    9. '(
' → logprob: -16.828893661499023
    10. ' (' → logprob: -17.578893661499023

Token 616: ',B' (ID: 19853)
  Prédit: ',B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',B' → logprob: -0.0006003346061334014
    2. 'B' → logprob: -8.12559986114502
    3. ',C' → logprob: -8.75059986114502
    4. ',' → logprob: -8.87559986114502
    5. ',Q' → logprob: -13.12559986114502
    6. ' ,' → logprob: -13.62559986114502
    7. ',
' → logprob: -14.00059986114502
    8. ',b' → logprob: -14.62559986114502
    9. '<|end|>' → logprob: -14.62559986114502
    10. ',D' → logprob: -15.25059986114502

Token 617: ',D' (ID: 61507)
  Prédit: ',D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',D' → logprob: -0.04864595830440521
    2. 'D' → logprob: -3.0486459732055664
    3. ',' → logprob: -9.798645973205566
    4. '(D' → logprob: -14.048645973205566
    5. ' D' → logprob: -14.298645973205566
    6. ',d' → logprob: -14.548645973205566
    7. '	D' → logprob: -15.048645973205566
    8. ',
' → logprob: -15.548645973205566
    9. '
' → logprob: -15.673645973205566
    10. '<D' → logprob: -16.04864501953125

Token 618: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04861041530966759
    2. '))' → logprob: -3.0486104488372803
    3. ')
' → logprob: -11.42361068725586
    4. ')))' → logprob: -11.67361068725586
    5. ' )' → logprob: -13.54861068725586
    6. '))
' → logprob: -14.17361068725586
    7. ')}' → logprob: -14.67361068725586
    8. '<|end|>' → logprob: -15.17361068725586
    9. '})' → logprob: -15.79861068725586
    10. '())' → logprob: -16.29861068725586

Token 619: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0012245126999914646
    2. '<|end|>' → logprob: -6.876224517822266
    3. 'import' → logprob: -8.876224517822266
    4. '<|end|>' → logprob: -10.876224517822266
    5. '```' → logprob: -11.501224517822266
    6. 'class' → logprob: -11.876224517822266
    7. '
' → logprob: -12.001224517822266
    8. '#' → logprob: -12.501224517822266
    9. 'for' → logprob: -12.876224517822266
    10. 'from' → logprob: -14.376224517822266

Token 620: ' point' (ID: 2438)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.47428950667381287
    2. 'main' → logprob: -1.3492895364761353
    3. ' dist' → logprob: -3.8492894172668457
    4. 'dist' → logprob: -4.099289417266846
    5. 'solve' → logprob: -4.599289417266846
    6. ' min' → logprob: -4.974289417266846
    7. ' solve' → logprob: -5.224289417266846
    8. 'point' → logprob: -5.349289417266846
    9. ' point' → logprob: -5.349289417266846
    10. ' polygon' → logprob: -5.474289417266846

Token 621: '_in' (ID: 2267)
  Prédit: '_inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inside' → logprob: -0.9208675622940063
    2. '_to' → logprob: -1.1708675622940063
    3. '_segment' → logprob: -2.295867443084717
    4. '_line' → logprob: -2.670867443084717
    5. '_in' → logprob: -2.670867443084717
    6. '_on' → logprob: -3.920867443084717
    7. '_distance' → logprob: -4.795867443084717
    8. '_circle' → logprob: -5.170867443084717
    9. '_side' → logprob: -5.295867443084717
    10. 's' → logprob: -5.545867443084717

Token 622: '_rect' (ID: 39269)
  Prédit: '_polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_polygon' → logprob: -0.05055755004286766
    2. 'polygon' → logprob: -3.0505576133728027
    3. '_poly' → logprob: -6.800557613372803
    4. '_triangle' → logprob: -8.050557136535645
    5. '_rectangle' → logprob: -8.425557136535645
    6. '_rect' → logprob: -9.300557136535645
    7. '_circle' → logprob: -9.550557136535645
    8. 'poly' → logprob: -9.925557136535645
    9. '_segment' → logprob: -10.300557136535645
    10. 'Polygon' → logprob: -11.175557136535645

Token 623: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.0245646238327026
    2. '(px' → logprob: -1.0245646238327026
    3. '(p' → logprob: -1.7745646238327026
    4. '(point' → logprob: -2.399564743041992
    5. '(pt' → logprob: -4.774564743041992
    6. '(rect' → logprob: -5.274564743041992
    7. '(' → logprob: -5.399564743041992
    8. 'angle' → logprob: -6.274564743041992
    9. '((' → logprob: -7.274564743041992
    10. '(poly' → logprob: -8.149564743041992

Token 624: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032074193004518747
    2. ',y' → logprob: -5.753207206726074
    3. ' ,' → logprob: -10.503207206726074
    4. 'y' → logprob: -13.628207206726074
    5. ',
' → logprob: -14.253207206726074
    6. '_,' → logprob: -15.753207206726074
    7. ',Y' → logprob: -16.50320816040039
    8. '‌,' → logprob: -16.87820816040039
    9. '<|end|>' → logprob: -17.00320816040039
    10. ',x' → logprob: -17.25320816040039

Token 625: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001955537445610389
    2. ',x' → logprob: -9.250195503234863
    3. ' ,' → logprob: -9.375195503234863
    4. ',a' → logprob: -11.500195503234863
    5. ',p' → logprob: -12.750195503234863
    6. ',
' → logprob: -14.125195503234863
    7. '):' → logprob: -16.12519645690918
    8. '   ' → logprob: -16.25019645690918
    9. ',r' → logprob: -16.37519645690918
    10. ',left' → logprob: -16.62519645690918

Token 626: ' rx' (ID: 37623)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.7148481607437134
    2. 'rx' → logprob: -1.0898481607437134
    3. 'xmin' → logprob: -2.464848041534424
    4. 'x' → logprob: -2.589848041534424
    5. ' rect' → logprob: -5.214848041534424
    6. ' rx' → logprob: -5.339848041534424
    7. 'lx' → logprob: -6.839848041534424
    8. 'xr' → logprob: -7.089848041534424
    9. ' xmin' → logprob: -7.714848041534424
    10. 'r' → logprob: -8.089848518371582

Token 627: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01285793911665678
    2. '1' → logprob: -4.637857913970947
    3. '0' → logprob: -6.387857913970947
    4. ',y' → logprob: -7.012857913970947
    5. ' ,' → logprob: -8.012858390808105
    6. ',min' → logprob: -10.137858390808105
    7. ',x' → logprob: -10.637858390808105
    8. '[' → logprob: -10.637858390808105
    9. ',r' → logprob: -10.637858390808105
    10. ',int' → logprob: -11.012858390808105

Token 628: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036953974631614983
    2. ' ,' → logprob: -8.75036907196045
    3. ',r' → logprob: -9.25036907196045
    4. ',x' → logprob: -9.62536907196045
    5. ',y' → logprob: -10.25036907196045
    6. ',
' → logprob: -12.25036907196045
    7. ',q' → logprob: -13.62536907196045
    8. ',p' → logprob: -13.75036907196045
    9. ',int' → logprob: -14.00036907196045
    10. '<|end|>' → logprob: -14.50036907196045

Token 629: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.008994588628411293
    2. ' ry' → logprob: -4.7589945793151855
    3. 'y' → logprob: -8.258995056152344
    4. 'ryl' → logprob: -10.258995056152344
    5. 'rx' → logprob: -11.008995056152344
    6. 'rym' → logprob: -11.383995056152344
    7. '<|end|>' → logprob: -11.633995056152344
    8. 'ryf' → logprob: -11.633995056152344
    9. 'ray' → logprob: -11.883995056152344
    10. 'ryw' → logprob: -11.883995056152344

Token 630: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003812217037193477
    2. ',' → logprob: -7.875380992889404
    3. ',x' → logprob: -15.000381469726562
    4. '
' → logprob: -16.375381469726562
    5. ' ,' → logprob: -16.500381469726562
    6. ' ' → logprob: -16.500381469726562
    7. ')' → logprob: -16.625381469726562
    8. '),' → logprob: -16.625381469726562
    9. '<|end|>' → logprob: -16.750381469726562
    10. ',r' → logprob: -16.875381469726562

Token 631: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7252845029579476e-05
    2. ' ,' → logprob: -10.875027656555176
    3. ',r' → logprob: -12.500027656555176
    4. ',
' → logprob: -12.625027656555176
    5. ',x' → logprob: -13.750027656555176
    6. ',q' → logprob: -16.87502670288086
    7. '‌,' → logprob: -17.62502670288086
    8. '),' → logprob: -18.00002670288086
    9. ',\
' → logprob: -18.00002670288086
    10. ',

' → logprob: -18.37502670288086

Token 632: ' rx' (ID: 37623)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.6933045983314514
    2. ' rx' → logprob: -0.6933045983314514
    3. '_rx' → logprob: -9.568305015563965
    4. '(rx' → logprob: -10.318305015563965
    5. 'tx' → logprob: -11.193305015563965
    6. '   ' → logprob: -11.568305015563965
    7. '.rx' → logprob: -11.818305015563965
    8. 'Rx' → logprob: -11.943305015563965
    9. ' tx' → logprob: -12.693305015563965
    10. ' ' → logprob: -12.693305015563965

Token 633: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.756989700486884e-05
    2. '1' → logprob: -9.37508773803711
    3. '0' → logprob: -14.50008773803711
    4. ',' → logprob: -14.62508773803711
    5. '<|end|>' → logprob: -14.62508773803711
    6. '```' → logprob: -14.87508773803711
    7. '<|end|>' → logprob: -14.87508773803711
    8. 'x' → logprob: -15.62508773803711
    9. '3' → logprob: -17.25008773803711
    10. 'min' → logprob: -17.50008773803711

Token 634: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.093505099765025e-05
    2. ' ,' → logprob: -11.625020980834961
    3. ',y' → logprob: -11.875020980834961
    4. ',x' → logprob: -12.875020980834961
    5. ',
' → logprob: -13.500020980834961
    6. ',r' → logprob: -14.750020980834961
    7. ',user' → logprob: -16.00002098083496
    8. ',int' → logprob: -16.00002098083496
    9. ',q' → logprob: -16.87502098083496
    10. '_,' → logprob: -17.12502098083496

Token 635: ' ry' (ID: 23218)
  Prédit: ' ry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ry' → logprob: -0.2258593589067459
    2. 'ry' → logprob: -1.7258594036102295
    3. ' rx' → logprob: -3.9758594036102295
    4. 'rx' → logprob: -5.22585916519165
    5. '_rx' → logprob: -12.850859642028809
    6. ' Ry' → logprob: -12.975859642028809
    7. 'Ry' → logprob: -13.100859642028809
    8. '(rx' → logprob: -13.725859642028809
    9. '.rx' → logprob: -14.850859642028809
    10. ' rye' → logprob: -15.100859642028809

Token 636: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00038479414070025086
    2. '1' → logprob: -7.87538480758667
    3. '```' → logprob: -12.875384330749512
    4. ',' → logprob: -13.750384330749512
    5. ' ' → logprob: -14.250384330749512
    6. '   ' → logprob: -15.875384330749512
    7. '``' → logprob: -16.375385284423828
    8. '
' → logprob: -17.375385284423828
    9. 'x' → logprob: -17.750385284423828
    10. '<|end|>' → logprob: -18.625385284423828

Token 637: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014170442707836628
    2. '):
' → logprob: -4.2641706466674805
    3. ' ):' → logprob: -13.13917064666748
    4. '   ' → logprob: -13.13917064666748
    5. ')' → logprob: -13.38917064666748
    6. '):
' → logprob: -13.76417064666748
    7. '):

' → logprob: -15.51417064666748
    8. ':' → logprob: -15.51417064666748
    9. ',' → logprob: -17.139169692993164
    10. ' ' → logprob: -17.639169692993164

Token 638: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.621933451038785e-05
    2. '<|end|>' → logprob: -10.500056266784668
    3. ' return' → logprob: -10.750056266784668
    4. 'return' → logprob: -12.875056266784668
    5. '	return' → logprob: -13.500056266784668
    6. '    
' → logprob: -14.250056266784668
    7. '    ' → logprob: -14.750056266784668
    8. '
' → logprob: -15.000056266784668
    9. ',' → logprob: -15.125056266784668
    10. '<|end|>' → logprob: -15.250056266784668

Token 639: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5046058297157288
    2. ' return' → logprob: -1.004605770111084
    3. 'return' (adapté à ' return') → logprob: -3.504605770111084
    4. '    ' → logprob: -12.254606246948242
    5. '	return' → logprob: -12.879606246948242
    6. ' x' → logprob: -14.629606246948242
    7. '   ' → logprob: -15.254606246948242
    8. 'x' → logprob: -15.629606246948242
    9. ':return' → logprob: -15.879606246948242
    10. ' ' → logprob: -16.004606246948242

Token 640: ' rx' (ID: 37623)
  Prédit: ' rx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rx' → logprob: -0.20282457768917084
    2. '(rx' → logprob: -1.952824592590332
    3. 'rx' → logprob: -3.202824592590332
    4. ' (' → logprob: -7.077824592590332
    5. ' min' → logprob: -9.327824592590332
    6. '(' → logprob: -9.452824592590332
    7. 'min' → logprob: -10.827824592590332
    8. '(min' → logprob: -11.827824592590332
    9. '(x' → logprob: -12.327824592590332
    10. '_rx' → logprob: -12.827824592590332

Token 641: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. '2' → logprob: -12.375006675720215
    3. '<=' → logprob: -14.125006675720215
    4. '```' → logprob: -15.125006675720215
    5. '[' → logprob: -15.375006675720215
    6. '>=' → logprob: -15.500006675720215
    7. ' <=' → logprob: -15.937506675720215
    8. 'min' → logprob: -16.0625057220459
    9. '=' → logprob: -16.5625057220459
    10. '_min' → logprob: -16.7500057220459

Token 642: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.02325328253209591
    2. ' <=' → logprob: -3.7732532024383545
    3. ')<=' → logprob: -12.148253440856934
    4. ']<=' → logprob: -13.023253440856934
    5. '≤' → logprob: -15.648253440856934
    6. '[' → logprob: -16.773252487182617
    7. '<|end|>' → logprob: -17.148252487182617
    8. '```' → logprob: -17.273252487182617
    9. '0' → logprob: -17.523252487182617
    10. ')' → logprob: -17.898252487182617

Token 643: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.842555426876061e-06
    2. ' x' → logprob: -12.250004768371582
    3. '	x' → logprob: -23.5000057220459
    4. '_x' → logprob: -24.2500057220459
    5. ')x' → logprob: -24.2500057220459
    6. '"x' → logprob: -25.6250057220459
    7. ' ' → logprob: -25.8750057220459
    8. 'xref' → logprob: -26.0000057220459
    9. '0' → logprob: -26.5000057220459
    10. '   ' → logprob: -26.7500057220459

Token 644: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.10174728184938431
    2. 'and' → logprob: -2.9767472743988037
    3. ' <=' → logprob: -3.2267472743988037
    4. ' and' → logprob: -5.101747512817383
    5. '≤' → logprob: -13.101747512817383
    6. 'x' → logprob: -13.351747512817383
    7. '<|end|>' → logprob: -13.601747512817383
    8. ' ' → logprob: -13.726747512817383
    9. ')<=' → logprob: -13.851747512817383
    10. '0' → logprob: -13.976747512817383

Token 645: ' rx' (ID: 37623)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -9.65101717156358e-05
    2. ' rx' → logprob: -9.250096321105957
    3. '(rx' → logprob: -16.125097274780273
    4. 'ry' → logprob: -16.500097274780273
    5. 'tx' → logprob: -16.500097274780273
    6. '_rx' → logprob: -17.500097274780273
    7. '.rx' → logprob: -18.250097274780273
    8. '
' → logprob: -18.500097274780273
    9. ' ' → logprob: -18.750097274780273
    10. 'Rx' → logprob: -19.000097274780273

Token 646: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '   ' → logprob: -18.625
    4. '```' → logprob: -18.625
    5. '۲' → logprob: -20.75
    6. '
' → logprob: -20.75
    7. '  ' → logprob: -21.125
    8. '<|end|>' → logprob: -21.875
    9. '２' → logprob: -22.1875
    10. '₂' → logprob: -22.3125

Token 647: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.038043100386857986
    2. 'and' → logprob: -3.2880430221557617
    3. '   ' → logprob: -14.288043022155762
    4. ' ' → logprob: -14.413043022155762
    5. '	and' → logprob: -15.163043022155762
    6. ' or' → logprob: -15.538043022155762
    7. 'andr' → logprob: -17.038043975830078
    8. '<|end|>' → logprob: -17.038043975830078
    9. '  ' → logprob: -17.413043975830078
    10. ',' → logprob: -18.038043975830078

Token 648: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.0004306692280806601
    2. ' ry' → logprob: -7.750430583953857
    3. '
' → logprob: -17.875431060791016
    4. ' ' → logprob: -18.250431060791016
    5. '   ' → logprob: -18.625431060791016
    6. 'rys' → logprob: -19.250431060791016
    7. 'rey' → logprob: -19.250431060791016
    8. 'ray' → logprob: -19.625431060791016
    9. 'Ry' → logprob: -19.875431060791016
    10. 'y' → logprob: -20.250431060791016

Token 649: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '2' → logprob: -18.5
    3. '<|end|>' → logprob: -18.625
    4. '   ' → logprob: -18.875
    5. ' ' → logprob: -19.0
    6. '<|end|>' → logprob: -19.75
    7. '```' → logprob: -19.875
    8. '=' → logprob: -21.8125
    9. 'y' → logprob: -21.875
    10. '<=' → logprob: -22.0

Token 650: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5759617686271667
    2. '<=' → logprob: -0.8259617686271667
    3. '<|end|>' → logprob: -11.45096206665039
    4. ')<=' → logprob: -11.82596206665039
    5. ']<=' → logprob: -13.07596206665039
    6. '≤' → logprob: -14.20096206665039
    7. ' ≤' → logprob: -14.45096206665039
    8. '   ' → logprob: -14.82596206665039
    9. ' <=",' → logprob: -15.45096206665039
    10. '1' → logprob: -15.45096206665039

Token 651: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01416350994259119
    2. ' y' → logprob: -4.264163494110107
    3. '	y' → logprob: -19.264163970947266
    4. '   ' → logprob: -19.639163970947266
    5. ' ' → logprob: -19.764163970947266
    6. 'Y' → logprob: -22.389163970947266
    7. ''y' → logprob: -22.514163970947266
    8. '
' → logprob: -22.514163970947266
    9. '(y' → logprob: -22.639163970947266
    10. '  ' → logprob: -22.889163970947266

Token 652: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.07934092730283737
    2. ' <=' → logprob: -2.579340934753418
    3. 'y' → logprob: -7.829340934753418
    4. ' y' → logprob: -9.954340934753418
    5. '<|end|>' → logprob: -13.079340934753418
    6. '<' → logprob: -13.829340934753418
    7. ']<=' → logprob: -14.329340934753418
    8. '≤' → logprob: -14.579340934753418
    9. 'x' → logprob: -14.829340934753418
    10. ' ' → logprob: -14.829340934753418

Token 653: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.030127644538879395
    2. 'y' → logprob: -3.53012752532959
    3. ' ry' → logprob: -7.90512752532959
    4. ' y' → logprob: -12.28012752532959
    5. 'yr' → logprob: -13.53012752532959
    6. '
' → logprob: -14.28012752532959
    7. 'ey' → logprob: -14.28012752532959
    8. 'ys' → logprob: -15.40512752532959
    9. 'rey' → logprob: -16.405128479003906
    10. 'ay' → logprob: -16.405128479003906

Token 654: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.650518920039758e-06
    2. '1' → logprob: -12.750003814697266
    3. ' ' → logprob: -14.250003814697266
    4. '```' → logprob: -17.125003814697266
    5. '   ' → logprob: -17.500003814697266
    6. '3' → logprob: -18.500003814697266
    7. '۲' → logprob: -18.625003814697266
    8. '<|end|>' → logprob: -19.062503814697266
    9. '22' → logprob: -19.500003814697266
    10. '292' → logprob: -19.625003814697266

Token 655: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 656: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004095973912626505
    2. '<|end|>' → logprob: -5.754096031188965
    3. 'class' → logprob: -7.254096031188965
    4. '#' → logprob: -9.504096031188965
    5. '
' → logprob: -9.754096031188965
    6. 'import' → logprob: -9.879096031188965
    7. '```' → logprob: -10.879096031188965
    8. '<|end|>' → logprob: -12.129096031188965
    9. ' def' → logprob: -14.504096031188965
    10. 'Explain' → logprob: -15.129096031188965

Token 657: ' line' (ID: 2543)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.393483966588974
    2. 'point' → logprob: -2.018483877182007
    3. 'main' → logprob: -3.393483877182007
    4. 'line' → logprob: -3.768483877182007
    5. ' rect' → logprob: -4.143484115600586
    6. 'segment' → logprob: -4.143484115600586
    7. 'read' → logprob: -4.143484115600586
    8. 'dist' → logprob: -4.268484115600586
    9. 'rectangle' → logprob: -4.268484115600586
    10. 'parse' → logprob: -4.643484115600586

Token 658: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.25592151284217834
    2. '_inter' → logprob: -1.755921483039856
    3. '_point' → logprob: -3.7559216022491455
    4. '_rectangle' → logprob: -4.880921363830566
    5. '_line' → logprob: -5.005921363830566
    6. '_distance' → logprob: -5.130921363830566
    7. '_segments' → logprob: -6.005921363830566
    8. '_length' → logprob: -6.005921363830566
    9. '_rect' → logprob: -6.630921363830566
    10. '_strip' → logprob: -6.630921363830566

Token 659: '_inter' (ID: 16818)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.7997537851333618
    2. '_inter' → logprob: -1.0497537851333618
    3. '_point' → logprob: -1.9247537851333618
    4. '_distance' → logprob: -3.7997536659240723
    5. '_segment' → logprob: -5.049753665924072
    6. '(x' → logprob: -5.299753665924072
    7. '_line' → logprob: -5.674753665924072
    8. '(a' → logprob: -5.924753665924072
    9. '_points' → logprob: -5.924753665924072
    10. '(p' → logprob: -6.674753665924072

Token 660: 'sects' (ID: 105681)
  Prédit: 'sect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sect' → logprob: -0.21971412003040314
    2. 'sects' → logprob: -1.7197141647338867
    3. 'section' → logprob: -4.094714164733887
    4. 's' → logprob: -7.344714164733887
    5. 'act' → logprob: -8.469714164733887
    6. 'polate' → logprob: -8.844714164733887
    7. 'ects' → logprob: -9.094714164733887
    8. 'sections' → logprob: -9.469714164733887
    9. '```' → logprob: -9.719714164733887
    10. 'acts' → logprob: -9.844714164733887

Token 661: '_rect' (ID: 39269)
  Prédit: '_rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -0.07149974256753922
    2. '_rectangle' → logprob: -3.071499824523926
    3. '_' → logprob: -4.196499824523926
    4. '_line' → logprob: -5.071499824523926
    5. 'rect' → logprob: -7.696499824523926
    6. '_box' → logprob: -8.571499824523926
    7. '(x' → logprob: -8.571499824523926
    8. '(rect' → logprob: -9.446499824523926
    9. '_axis' → logprob: -9.946499824523926
    10. '_ray' → logprob: -10.321499824523926

Token 662: '(ax' (ID: 102653)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4004569947719574
    2. '(p' → logprob: -1.5254570245742798
    3. '(px' → logprob: -2.2754569053649902
    4. '(segment' → logprob: -6.27545690536499
    5. '(s' → logprob: -6.52545690536499
    6. '(ax' → logprob: -6.65045690536499
    7. '(seg' → logprob: -6.77545690536499
    8. '(' → logprob: -7.15045690536499
    9. '((' → logprob: -7.27545690536499
    10. '(a' → logprob: -7.40045690536499

Token 663: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.925185440806672e-05
    2. ' ,' → logprob: -9.875099182128906
    3. '_,' → logprob: -10.375099182128906
    4. ',y' → logprob: -11.750099182128906
    5. ',
' → logprob: -12.250099182128906
    6. '1' → logprob: -13.375099182128906
    7. 'ay' → logprob: -13.750099182128906
    8. 'y' → logprob: -15.500099182128906
    9. ',b' → logprob: -15.750099182128906
    10. 'x' → logprob: -16.250099182128906

Token 664: ' ay' (ID: 4199)
  Prédit: 'ay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ay' → logprob: -0.0001584850688232109
    2. ' ay' → logprob: -8.750158309936523
    3. 'aybe' → logprob: -19.625158309936523
    4. 'ays' → logprob: -20.000158309936523
    5. 'aye' → logprob: -20.375158309936523
    6. '-ay' → logprob: -20.375158309936523
    7. '   ' → logprob: -20.625158309936523
    8. 'uy' → logprob: -20.750158309936523
    9. 'aya' → logprob: -20.875158309936523
    10. 'ayy' → logprob: -21.250158309936523

Token 665: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.5120287066092715e-05
    2. ' ,' → logprob: -10.375035285949707
    3. ',
' → logprob: -12.750035285949707
    4. ',b' → logprob: -14.250035285949707
    5. '   ' → logprob: -16.25003433227539
    6. '_,' → logprob: -16.37503433227539
    7. ',
' → logprob: -17.37503433227539
    8. ' bx' → logprob: -17.62503433227539
    9. '‌,' → logprob: -18.50003433227539
    10. ',x' → logprob: -18.75003433227539

Token 666: ' bx' (ID: 93853)
  Prédit: 'bx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bx' → logprob: -0.0019834754057228565
    2. ' bx' → logprob: -6.251983642578125
    3. 'rx' → logprob: -9.876983642578125
    4. 'x' → logprob: -13.376983642578125
    5. 'cx' → logprob: -13.376983642578125
    6. 'px' → logprob: -15.626983642578125
    7. '```' → logprob: -16.126983642578125
    8. 'Bx' → logprob: -16.751983642578125
    9. 'xb' → logprob: -17.126983642578125
    10. 'qx' → logprob: -17.501983642578125

Token 667: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.2729995988775045e-06
    2. ' ,' → logprob: -12.250006675720215
    3. ',
' → logprob: -13.625006675720215
    4. '_,' → logprob: -15.875006675720215
    5. 'ay' → logprob: -16.8750057220459
    6. ',y' → logprob: -17.1250057220459
    7. ',b' → logprob: -17.1250057220459
    8. 'y' → logprob: -18.2500057220459
    9. '),' → logprob: -18.7500057220459
    10. ',

' → logprob: -18.7500057220459

Token 668: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.004081128165125847
    2. ' by' → logprob: -5.5040812492370605
    3. 'ay' → logprob: -13.254080772399902
    4. 'bx' → logprob: -14.629080772399902
    5. 'ry' → logprob: -15.754080772399902
    6. '_by' → logprob: -16.37908172607422
    7. ' ay' → logprob: -16.62908172607422
    8. 'By' → logprob: -16.75408172607422
    9. '```' → logprob: -16.87908172607422
    10. 'b' → logprob: -17.25408172607422

Token 669: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4868770196917467e-05
    2. ' ,' → logprob: -10.625024795532227
    3. ',
' → logprob: -14.750024795532227
    4. ',r' → logprob: -17.125024795532227
    5. '_,' → logprob: -17.125024795532227
    6. '   ' → logprob: -18.750024795532227
    7. ',x' → logprob: -18.875024795532227
    8. ',

' → logprob: -20.875024795532227
    9. ',
' → logprob: -20.875024795532227
    10. ',\
' → logprob: -20.875024795532227

Token 670: ' rx' (ID: 37623)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.004107492510229349
    2. ' rx' → logprob: -5.504107475280762
    3. '   ' → logprob: -11.254107475280762
    4. '
' → logprob: -12.379107475280762
    5. ' ' → logprob: -12.504107475280762
    6. 'rect' → logprob: -13.004107475280762
    7. '(rx' → logprob: -13.004107475280762
    8. '```' → logprob: -13.879107475280762
    9. 'x' → logprob: -14.879107475280762
    10. '  ' → logprob: -15.004107475280762

Token 671: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. ',' → logprob: -12.500003814697266
    3. ' ' → logprob: -16.000003814697266
    4. '```' → logprob: -16.625003814697266
    5. ')' → logprob: -17.750003814697266
    6. '
' → logprob: -17.875003814697266
    7. '   ' → logprob: -18.125003814697266
    8. '<|end|>' → logprob: -18.250003814697266
    9. 'min' → logprob: -18.500003814697266
    10. 'def' → logprob: -18.750003814697266

Token 672: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5570885807392187e-05
    2. ' ,' → logprob: -11.125015258789062
    3. ',
' → logprob: -14.625015258789062
    4. '‌,' → logprob: -16.000015258789062
    5. ',r' → logprob: -16.500015258789062
    6. '<|end|>' → logprob: -17.250015258789062
    7. ',\
' → logprob: -17.875015258789062
    8. ',y' → logprob: -17.875015258789062
    9. ')' → logprob: -18.625015258789062
    10. '_,' → logprob: -18.875015258789062

Token 673: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.4741051197052002
    2. ' ry' → logprob: -0.9741051197052002
    3. 'ryl' → logprob: -11.974104881286621
    4. 'ryw' → logprob: -12.349104881286621
    5. '<|end|>' → logprob: -12.599104881286621
    6. ' rya' → logprob: -12.849104881286621
    7. 'ryd' → logprob: -13.099104881286621
    8. ' rye' → logprob: -13.224104881286621
    9. 'ryf' → logprob: -13.724104881286621
    10. 'rym' → logprob: -13.849104881286621

Token 674: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ',' → logprob: -11.875006675720215
    3. ' ' → logprob: -17.00000762939453
    4. '<|end|>' → logprob: -17.37500762939453
    5. '=' → logprob: -18.37500762939453
    6. '2' → logprob: -18.37500762939453
    7. '<|end|>' → logprob: -19.00000762939453
    8. '```' → logprob: -19.37500762939453
    9. ',
' → logprob: -19.62500762939453
    10. '   ' → logprob: -19.75000762939453

Token 675: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9266199160483666e-05
    2. ' ,' → logprob: -11.500019073486328
    3. ',
' → logprob: -11.750019073486328
    4. ',r' → logprob: -13.875019073486328
    5. '‌,' → logprob: -16.625019073486328
    6. ',\
' → logprob: -16.750019073486328
    7. '_,' → logprob: -17.750019073486328
    8. ',

' → logprob: -17.875019073486328
    9. ')' → logprob: -18.125019073486328
    10. ',
' → logprob: -18.375019073486328

Token 676: ' rx' (ID: 37623)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.0007129086880013347
    2. ' rx' → logprob: -7.250712871551514
    3. 'ry' → logprob: -13.125713348388672
    4. '(rx' → logprob: -14.875713348388672
    5. '_rx' → logprob: -15.125713348388672
    6. '.rx' → logprob: -15.875713348388672
    7. 'rr' → logprob: -17.125713348388672
    8. 'Rx' → logprob: -17.500713348388672
    9. ' ry' → logprob: -17.500713348388672
    10. '
' → logprob: -17.750713348388672

Token 677: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.084206375409849e-05
    2. '1' → logprob: -10.125041007995605
    3. ',' → logprob: -15.125041007995605
    4. ' ' → logprob: -15.250041007995605
    5. '<|end|>' → logprob: -16.37504005432129
    6. '```' → logprob: -16.75004005432129
    7. '<|end|>' → logprob: -17.12504005432129
    8. '   ' → logprob: -18.00004005432129
    9. '۲' → logprob: -18.00004005432129
    10. '{-#' → logprob: -18.31254005432129

Token 678: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.700132997939363e-05
    2. ' ,' → logprob: -11.125017166137695
    3. ',
' → logprob: -13.125017166137695
    4. '‌,' → logprob: -16.375017166137695
    5. '<|end|>' → logprob: -16.500017166137695
    6. ',\
' → logprob: -17.625017166137695
    7. '_,' → logprob: -17.750017166137695
    8. ',r' → logprob: -17.750017166137695
    9. ',y' → logprob: -18.125017166137695
    10. '1' → logprob: -19.250017166137695

Token 679: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.25192990899086
    2. ' ry' → logprob: -1.5019298791885376
    3. 'rx' → logprob: -15.501930236816406
    4. ' rye' → logprob: -15.501930236816406
    5. 'ryl' → logprob: -16.126930236816406
    6. 'Ry' → logprob: -16.501930236816406
    7. ' Ry' → logprob: -16.501930236816406
    8. ' rx' → logprob: -17.251930236816406
    9. '
' → logprob: -17.251930236816406
    10. 'ryd' → logprob: -17.376930236816406

Token 680: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '1' → logprob: -17.125
    3. ' ' → logprob: -17.75
    4. '```' → logprob: -18.25
    5. ')' → logprob: -19.25
    6. '   ' → logprob: -19.75
    7. '२' → logprob: -19.875
    8. '۲' → logprob: -20.125
    9. '２' → logprob: -20.125
    10. '₂' → logprob: -21.1875

Token 681: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023251067847013474
    2. '):
' → logprob: -3.7732510566711426
    3. ')' → logprob: -13.3982515335083
    4. '   ' → logprob: -13.5232515335083
    5. '):
' → logprob: -13.7732515335083
    6. ' ):' → logprob: -13.8982515335083
    7. ':' → logprob: -14.7732515335083
    8. '):

' → logprob: -15.1482515335083
    9. ' ):
' → logprob: -17.773250579833984
    10. ' ' → logprob: -18.273250579833984

Token 682: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010890735575230792
    2. '
' → logprob: -10.37510871887207
    3. ' for' → logprob: -10.62510871887207
    4. '```' → logprob: -11.25010871887207
    5. ' if' → logprob: -11.37510871887207
    6. 'def' → logprob: -11.75010871887207
    7. '    
' → logprob: -12.12510871887207
    8. ' #' → logprob: -12.75010871887207
    9. ' lines' → logprob: -12.87510871887207
    10. '    ' → logprob: -13.12510871887207

Token 683: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.03961636498570442
    2. '   ' → logprob: -3.664616346359253
    3. 'segments' → logprob: -5.289616584777832
    4. 'def' → logprob: -5.414616584777832
    5. 'if' → logprob: -6.164616584777832
    6. 'lines' → logprob: -6.914616584777832
    7. 'for' → logprob: -8.039616584777832
    8. 'points' → logprob: -9.289616584777832
    9. 'edges' → logprob: -9.914616584777832
    10. ' #' → logprob: -9.914616584777832

Token 684: ' Check' (ID: 6208)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.10515101253986359
    2. 'if' → logprob: -2.6051509380340576
    3. 'def' → logprob: -4.105151176452637
    4. 'for' → logprob: -5.480151176452637
    5. 'segments' → logprob: -5.730151176452637
    6. 'lines' → logprob: -7.105151176452637
    7. 'rect' → logprob: -7.355151176452637
    8. 'edges' → logprob: -8.730151176452637
    9. 'return' → logprob: -8.855151176452637
    10. '   ' → logprob: -9.855151176452637

Token 685: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.024632051587104797
    2. 'if' → logprob: -3.899631977081299
    3. '#' → logprob: -6.774631977081299
    4. '   ' → logprob: -7.024631977081299
    5. ' #' → logprob: -7.274631977081299
    6. ' for' → logprob: -7.649631977081299
    7. 'segments' → logprob: -8.024632453918457
    8. ' line' → logprob: -8.524632453918457
    9. ' segments' → logprob: -8.899632453918457
    10. 'for' → logprob: -9.649632453918457

Token 686: ' line' (ID: 2543)
  Prédit: '(ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ax' → logprob: -0.2672751247882843
    2. 'segments' → logprob: -1.642275094985962
    3. ' segments' → logprob: -4.517275333404541
    4. 'point' → logprob: -4.892275333404541
    5. 'ax' → logprob: -5.017275333404541
    6. 'line' → logprob: -5.017275333404541
    7. '(px' → logprob: -5.767275333404541
    8. '(' → logprob: -6.267275333404541
    9. ' (' → logprob: -6.767275333404541
    10. '(line' → logprob: -7.517275333404541

Token 687: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.05219490826129913
    2. ' segment' → logprob: -3.802194833755493
    3. 'segments' → logprob: -4.552195072174072
    4. 'ax' → logprob: -5.052195072174072
    5. ' segments' → logprob: -5.177195072174072
    6. '_segment' → logprob: -5.302195072174072
    7. '_segments' → logprob: -7.552195072174072
    8. '(ax' → logprob: -8.677194595336914
    9. ' intersects' → logprob: -9.802194595336914
    10. ' ax' → logprob: -9.927194595336914

Token 688: ' ab' (ID: 692)
  Prédit: '(ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ax' → logprob: -0.07640644907951355
    2. 'inter' → logprob: -3.076406478881836
    3. ' intersects' → logprob: -3.701406478881836
    4. 'ax' → logprob: -6.201406478881836
    5. '(px' → logprob: -8.576406478881836
    6. '(' → logprob: -9.076406478881836
    7. 'segments' → logprob: -9.451406478881836
    8. '   ' → logprob: -9.576406478881836
    9. 'segment' → logprob: -9.951406478881836
    10. ' (' → logprob: -10.451406478881836

Token 689: ' intersects' (ID: 198484)
  Prédit: ' intersects'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intersects' → logprob: -0.25692883133888245
    2. 'inter' → logprob: -1.50692880153656
    3. '   ' → logprob: -5.63192892074585
    4. ' and' → logprob: -7.25692892074585
    5. ' crosses' → logprob: -8.756928443908691
    6. '_inter' → logprob: -8.756928443908691
    7. ' ' → logprob: -9.131928443908691
    8. ' intersect' → logprob: -10.131928443908691
    9. '```' → logprob: -10.381928443908691
    10. 'and' → logprob: -10.506928443908691

Token 690: ' rectangle' (ID: 45808)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.09174332767724991
    2. 'any' → logprob: -2.966743230819702
    3. ' with' → logprob: -4.216743469238281
    4. ' rectangle' → logprob: -4.591743469238281
    5. ' the' → logprob: -4.966743469238281
    6. 'rectangle' → logprob: -6.591743469238281
    7. 'with' → logprob: -7.091743469238281
    8. ' either' → logprob: -7.091743469238281
    9. 'rect' → logprob: -7.841743469238281
    10. ' or' → logprob: -8.216743469238281

Token 691: ' defined' (ID: 9113)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03956561163067818
    2. ' (' → logprob: -3.9145655632019043
    3. '(ax' → logprob: -5.289565563201904
    4. ' or' → logprob: -5.539565563201904
    5. ' return' → logprob: -5.914565563201904
    6. ' if' → logprob: -6.539565563201904
    7. '
' → logprob: -6.539565563201904
    8. '    ' → logprob: -6.914565563201904
    9. '(rx' → logprob: -7.539565563201904
    10. '(' → logprob: -7.539565563201904

Token 692: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.10127189010381699
    2. ' by' → logprob: -2.351271867752075
    3. '   ' → logprob: -7.351272106170654
    4. '(rx' → logprob: -7.976272106170654
    5. ',' → logprob: -10.976271629333496
    6. '=' → logprob: -11.601271629333496
    7. '(ax' → logprob: -11.601271629333496
    8. 'rx' → logprob: -11.726271629333496
    9. '(' → logprob: -12.101271629333496
    10. ')' → logprob: -12.476271629333496

Token 693: ' corners' (ID: 39479)
  Prédit: '(rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(rx' → logprob: -0.5763919949531555
    2. 'rx' → logprob: -0.8263919949531555
    3. ' rx' → logprob: -7.82639217376709
    4. 'min' → logprob: -10.20139217376709
    5. '(min' → logprob: -11.57639217376709
    6. '(' → logprob: -12.70139217376709
    7. ' (' → logprob: -12.82639217376709
    8. 'xmin' → logprob: -15.32639217376709
    9. '(r' → logprob: -15.45139217376709
    10. '_rx' → logprob: -15.70139217376709

Token 694: ' rx' (ID: 37623)
  Prédit: '(rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rx' → logprob: -0.02529074065387249
    2. ' (' → logprob: -4.0252909660339355
    3. 'rx' → logprob: -5.0252909660339355
    4. ' rx' → logprob: -7.6502909660339355
    5. '(' → logprob: -10.400290489196777
    6. '
' → logprob: -11.025290489196777
    7. '   ' → logprob: -11.900290489196777
    8. '_rx' → logprob: -12.650290489196777
    9. '(ax' → logprob: -13.400290489196777
    10. '(
' → logprob: -13.400290489196777

Token 695: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ',' → logprob: -12.375004768371582
    3. '<|end|>' → logprob: -16.125003814697266
    4. ' ' → logprob: -18.375003814697266
    5. '[' → logprob: -18.750003814697266
    6. '```' → logprob: -18.875003814697266
    7. 'x' → logprob: -19.125003814697266
    8. '<|end|>' → logprob: -19.375003814697266
    9. '=' → logprob: -19.500003814697266
    10. 'r' → logprob: -19.875003814697266

Token 696: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001005630983854644
    2. ' ,' → logprob: -9.875100135803223
    3. '<|end|>' → logprob: -10.750100135803223
    4. ',
' → logprob: -11.375100135803223
    5. ',y' → logprob: -11.875100135803223
    6. ',r' → logprob: -12.875100135803223
    7. '```' → logprob: -13.000100135803223
    8. '‌,' → logprob: -14.000100135803223
    9. '<|end|>' → logprob: -14.500100135803223
    10. '1' → logprob: -14.875100135803223

Token 697: 'ry' (ID: 1102)
  Prédit: 'ry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.1602250337600708
    2. ' ry' → logprob: -1.9102250337600708
    3. 'ray' → logprob: -15.535224914550781
    4. 'ryl' → logprob: -16.28522491455078
    5. ' Ry' → logprob: -16.28522491455078
    6. 'ay' → logprob: -16.53522491455078
    7. 'Ry' → logprob: -16.53522491455078
    8. 'rx' → logprob: -16.91022491455078
    9. 'rys' → logprob: -17.03522491455078
    10. 'ryw' → logprob: -17.16022491455078

Token 698: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. ',' → logprob: -13.37500286102295
    3. '```' → logprob: -14.12500286102295
    4. ' ' → logprob: -14.37500286102295
    5. '   ' → logprob: -15.25000286102295
    6. '<|end|>' → logprob: -17.250003814697266
    7. '``' → logprob: -18.000003814697266
    8. '
' → logprob: -18.250003814697266
    9. '<|end|>' → logprob: -18.250003814697266
    10. '﻿' → logprob: -19.250003814697266

Token 699: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011336666066199541
    2. ',
' → logprob: -6.876133441925049
    3. 'and' → logprob: -9.876133918762207
    4. ' and' → logprob: -11.001133918762207
    5. '   ' → logprob: -11.126133918762207
    6. ' ,' → logprob: -12.001133918762207
    7. ',\
' → logprob: -12.751133918762207
    8. ',r' → logprob: -13.001133918762207
    9. '(rx' → logprob: -13.126133918762207
    10. ',#' → logprob: -14.001133918762207

Token 700: ' rx' (ID: 37623)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.005241106729954481
    2. ' rx' → logprob: -5.2552409172058105
    3. '(rx' → logprob: -12.505241394042969
    4. '_rx' → logprob: -13.505241394042969
    5. 'tx' → logprob: -13.755241394042969
    6. '.rx' → logprob: -14.630241394042969
    7. '   ' → logprob: -15.005241394042969
    8. '
' → logprob: -15.880241394042969
    9. 'qx' → logprob: -16.88024139404297
    10. ' ' → logprob: -17.13024139404297

Token 701: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002096197713399306
    2. '1' → logprob: -8.50020980834961
    3. '```' → logprob: -12.25020980834961
    4. ' ' → logprob: -15.12520980834961
    5. '``' → logprob: -15.50020980834961
    6. '' → logprob: -15.75020980834961
    7. '<|end|>' → logprob: -15.75020980834961
    8. '   ' → logprob: -16.06270980834961
    9. '₂' → logprob: -16.56270980834961
    10. '' → logprob: -16.81270980834961

Token 702: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.945094355614856e-05
    2. ',
' → logprob: -9.875069618225098
    3. ' ,' → logprob: -11.875069618225098
    4. ',r' → logprob: -12.125069618225098
    5. ',\
' → logprob: -13.500069618225098
    6. '```' → logprob: -13.625069618225098
    7. '<|end|>' → logprob: -14.125069618225098
    8. '   ' → logprob: -14.875069618225098
    9. '_,' → logprob: -15.000069618225098
    10. '(rx' → logprob: -15.500069618225098

Token 703: 'ry' (ID: 1102)
  Prédit: ' ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ry' → logprob: -0.10089359432458878
    2. 'ry' → logprob: -2.350893497467041
    3. ' rx' → logprob: -7.600893497467041
    4. 'rx' → logprob: -8.6008939743042
    5. '```' → logprob: -14.2258939743042
    6. '(rx' → logprob: -15.1008939743042
    7. ' rya' → logprob: -15.6008939743042
    8. ' Ry' → logprob: -15.7258939743042
    9. '_rx' → logprob: -15.7258939743042
    10. ' rye' → logprob: -15.8508939743042

Token 704: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.255023956531659e-05
    2. '1' → logprob: -9.875072479248047
    3. '```' → logprob: -11.250072479248047
    4. '3' → logprob: -12.875072479248047
    5. ' ' → logprob: -13.250072479248047
    6. '   ' → logprob: -13.250072479248047
    7. ',' → logprob: -14.000072479248047
    8. '``' → logprob: -14.375072479248047
    9. '7' → logprob: -15.500072479248047
    10. '5' → logprob: -15.750072479248047

Token 705: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08818622678518295
    2. ':' → logprob: -2.588186264038086
    3. ':
' → logprob: -4.963186264038086
    4. '
' → logprob: -6.838186264038086
    5. '    
' → logprob: -7.963186264038086
    6. '```' → logprob: -8.838186264038086
    7. '):' → logprob: -9.338186264038086
    8. '):
' → logprob: -9.338186264038086
    9. ')' → logprob: -9.463186264038086
    10. ',' → logprob: -9.588186264038086

Token 706: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001863549230620265
    2. '```' → logprob: -7.376863479614258
    3. '
' → logprob: -7.501863479614258
    4. ' corners' → logprob: -8.126863479614258
    5. '    
' → logprob: -9.751863479614258
    6. 'def' → logprob: -10.251863479614258
    7. '#' → logprob: -10.251863479614258
    8. ' lines' → logprob: -10.376863479614258
    9. 'corn' → logprob: -10.501863479614258
    10. ' for' → logprob: -10.501863479614258

Token 707: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.4118685722351074
    2. 'if' → logprob: -1.6618685722351074
    3. 'rect' → logprob: -2.1618685722351074
    4. 'corn' → logprob: -4.161868572235107
    5. 'for' → logprob: -5.161868572235107
    6. 'segments' → logprob: -5.411868572235107
    7. 'edges' → logprob: -5.786868572235107
    8. 'lines' → logprob: -6.286868572235107
    9. '   ' → logprob: -7.286868572235107
    10. 'def' → logprob: -7.411868572235107

Token 708: ' Check' (ID: 6208)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1434740126132965
    2. 'if' → logprob: -2.6434741020202637
    3. 'rect' → logprob: -3.7684741020202637
    4. 'for' → logprob: -4.268474102020264
    5. 'corn' → logprob: -4.768474102020264
    6. 'edges' → logprob: -4.893474102020264
    7. '   ' → logprob: -5.768474102020264
    8. 'segments' → logprob: -6.393474102020264
    9. 'rx' → logprob: -6.518474102020264
    10. 'lines' → logprob: -6.518474102020264

Token 709: ' if' (ID: 538)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.115465521812439
    2. 'segments' → logprob: -1.115465521812439
    3. 'if' → logprob: -1.490465521812439
    4. 'line' → logprob: -3.4904656410217285
    5. ' if' → logprob: -3.8654656410217285
    6. 'point' → logprob: -3.9904656410217285
    7. 'points' → logprob: -3.9904656410217285
    8. ' segments' → logprob: -4.4904656410217285
    9. 'for' → logprob: -5.4904656410217285
    10. '(
' → logprob: -5.7404656410217285

Token 710: ' either' (ID: 4784)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.03795173764228821
    2. 'ax' → logprob: -3.412951707839966
    3. '(ax' → logprob: -6.037951946258545
    4. 'px' → logprob: -6.662951946258545
    5. '(point' → logprob: -8.537951469421387
    6. ' point' → logprob: -8.787951469421387
    7. '(' → logprob: -9.412951469421387
    8. '(px' → logprob: -9.662951469421387
    9. 'p' → logprob: -10.287951469421387
    10. '(rx' → logprob: -10.912951469421387

Token 711: ' segment' (ID: 14806)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.08803842961788177
    2. 'point' → logprob: -3.088038444519043
    3. '(ax' → logprob: -3.338038444519043
    4. ' ax' → logprob: -5.963038444519043
    5. ' point' → logprob: -8.588038444519043
    6. 'px' → logprob: -9.088038444519043
    7. '   ' → logprob: -9.338038444519043
    8. ' (' → logprob: -9.588038444519043
    9. '(px' → logprob: -10.213038444519043
    10. '(' → logprob: -10.463038444519043

Token 712: ' endpoint' (ID: 29703)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.14467757940292358
    2. 'end' → logprob: -3.0196776390075684
    3. 'start' → logprob: -3.7696776390075684
    4. 'ax' → logprob: -3.8946776390075684
    5. 'point' → logprob: -4.019677639007568
    6. 'points' → logprob: -4.894677639007568
    7. ' endpoint' → logprob: -5.519677639007568
    8. 'ent' → logprob: -5.769677639007568
    9. '(ax' → logprob: -6.144677639007568
    10. 'inter' → logprob: -6.519677639007568

Token 713: ' inside' (ID: 6772)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.507298469543457
    2. 'is' → logprob: -1.007298469543457
    3. 'inside' → logprob: -3.757298469543457
    4. ' inside' → logprob: -5.132298469543457
    5. 'in' → logprob: -6.632298469543457
    6. 's' → logprob: -6.882298469543457
    7. ' lies' → logprob: -7.757298469543457
    8. ' in' → logprob: -8.382298469543457
    9. '_inside' → logprob: -9.757298469543457
    10. '```' → logprob: -9.757298469543457

Token 714: ' rect' (ID: 13107)
  Prédit: '(ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ax' → logprob: -0.1566808521747589
    2. ' (' → logprob: -3.0316808223724365
    3. 'ax' → logprob: -3.6566808223724365
    4. ' the' → logprob: -3.6566808223724365
    5. ' ax' → logprob: -4.531681060791016
    6. 'the' → logprob: -4.781681060791016
    7. '(rx' → logprob: -4.906681060791016
    8. ' line' → logprob: -5.406681060791016
    9. 'point' → logprob: -6.281681060791016
    10. 'line' → logprob: -6.281681060791016

Token 715: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004563868977129459
    2. ' if' → logprob: -6.004563808441162
    3. ' or' → logprob: -6.254563808441162
    4. 'if' → logprob: -9.25456428527832
    5. ' and' → logprob: -10.37956428527832
    6. ',' → logprob: -10.62956428527832
    7. 'and' → logprob: -12.37956428527832
    8. 'or' → logprob: -13.00456428527832
    9. '
' → logprob: -13.00456428527832
    10. ':' → logprob: -13.87956428527832

Token 716: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.574251918005757e-05
    2. '```' → logprob: -10.000055313110352
    3. ' if' → logprob: -13.125055313110352
    4. '    
' → logprob: -13.125055313110352
    5. '``' → logprob: -13.375055313110352
    6. '
' → logprob: -13.500055313110352
    7. '<|end|>' → logprob: -13.750055313110352
    8. 'if' → logprob: -14.375055313110352
    9. '   ' → logprob: -15.125055313110352
    10. ':' → logprob: -15.250055313110352

Token 717: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05864221975207329
    2. '   ' → logprob: -3.5586421489715576
    3. ' if' → logprob: -3.5586421489715576
    4. '	if' → logprob: -14.058642387390137
    5. ' ' → logprob: -16.55864143371582
    6. '```' → logprob: -16.80864143371582
    7. '
' → logprob: -17.05864143371582
    8. 'If' → logprob: -17.05864143371582
    9. '  ' → logprob: -17.80864143371582
    10. '    ' → logprob: -18.18364143371582

Token 718: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.048591118305921555
    2. ' point' → logprob: -3.048591136932373
    3. '(point' → logprob: -12.673590660095215
    4. '   ' → logprob: -14.923590660095215
    5. '	point' → logprob: -15.798590660095215
    6. 'Point' → logprob: -16.92359161376953
    7. '_point' → logprob: -17.54859161376953
    8. ' ' → logprob: -17.67359161376953
    9. 'person' → logprob: -17.92359161376953
    10. '  ' → logprob: -18.17359161376953

Token 719: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -5.908022285439074e-05
    2. 'in' → logprob: -10.125059127807617
    3. '_' → logprob: -12.000059127807617
    4. 's' → logprob: -13.000059127807617
    5. ' in' → logprob: -13.375059127807617
    6. ' _' → logprob: -13.375059127807617
    7. '(' → logprob: -13.375059127807617
    8. '(_' → logprob: -13.375059127807617
    9. 'In' → logprob: -13.875059127807617
    10. ')' → logprob: -14.125059127807617

Token 720: '_rect' (ID: 39269)
  Prédit: '(ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ax' → logprob: -0.034636370837688446
    2. '_rect' → logprob: -4.034636497497559
    3. 'rect' → logprob: -4.659636497497559
    4. 'ax' → logprob: -5.409636497497559
    5. '=ax' → logprob: -6.159636497497559
    6. '_segment' → logprob: -9.784636497497559
    7. 'Rect' → logprob: -9.909636497497559
    8. 'segment' → logprob: -10.284636497497559
    9. '(x' → logprob: -10.534636497497559
    10. '
' → logprob: -10.784636497497559

Token 721: '(ax' (ID: 102653)
  Prédit: '(ax'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ax' → logprob: -2.5776860184123507e-06
    2. '(' → logprob: -13.62500286102295
    3. '(b' → logprob: -14.37500286102295
    4. '=ax' → logprob: -14.50000286102295
    5. '(
' → logprob: -16.750001907348633
    6. ' (' → logprob: -17.375001907348633
    7. 'ax' → logprob: -17.625001907348633
    8. '(ab' → logprob: -17.750001907348633
    9. '(abs' → logprob: -18.000001907348633
    10. '((' → logprob: -18.250001907348633

Token 722: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031828247010707855
    2. ' ,' → logprob: -5.753182888031006
    3. ',
' → logprob: -12.503182411193848
    4. ',y' → logprob: -14.503182411193848
    5. '   ' → logprob: -15.003182411193848
    6. 'ay' → logprob: -15.753182411193848
    7. '‌,' → logprob: -16.128183364868164
    8. ',x' → logprob: -16.253183364868164
    9. ' ,
' → logprob: -16.753183364868164
    10. ',a' → logprob: -17.128183364868164

Token 723: ' ay' (ID: 4199)
  Prédit: 'ay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ay' → logprob: -0.0004306692280806601
    2. ' ay' → logprob: -7.750430583953857
    3. 'aye' → logprob: -19.000431060791016
    4. ' ' → logprob: -19.875431060791016
    5. 'aw' → logprob: -20.125431060791016
    6. '
' → logprob: -20.250431060791016
    7. ' ' → logprob: -20.500431060791016
    8. 'aya' → logprob: -20.500431060791016
    9. 'ays' → logprob: -21.000431060791016
    10. 'ayi' → logprob: -21.375431060791016

Token 724: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01423379685729742
    2. ' ,' → logprob: -4.264233589172363
    3. ',
' → logprob: -11.014233589172363
    4. ')' → logprob: -11.014233589172363
    5. '   ' → logprob: -11.264233589172363
    6. ',,' → logprob: -12.014233589172363
    7. ',r' → logprob: -12.139233589172363
    8. ',x' → logprob: -12.389233589172363
    9. '),' → logprob: -13.764233589172363
    10. ',,,' → logprob: -13.889233589172363

Token 725: ' rx' (ID: 37623)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.0024774393532425165
    2. ' rx' → logprob: -6.002477645874023
    3. '(rx' → logprob: -13.752477645874023
    4. 'min' → logprob: -15.002477645874023
    5. 'tx' → logprob: -15.627477645874023
    6. 'ry' → logprob: -16.502477645874023
    7. '_rx' → logprob: -16.752477645874023
    8. 'Rx' → logprob: -17.252477645874023
    9. '.rx' → logprob: -17.877477645874023
    10. 'rv' → logprob: -18.002477645874023

Token 726: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ',' → logprob: -13.625000953674316
    3. '<|end|>' → logprob: -16.875001907348633
    4. ' ' → logprob: -18.500001907348633
    5. '```' → logprob: -19.250001907348633
    6. '   ' → logprob: -19.375001907348633
    7. '[' → logprob: -20.437501907348633
    8. '<|end|>' → logprob: -20.562501907348633
    9. 'x' → logprob: -20.812501907348633
    10. '...' → logprob: -20.875001907348633

Token 727: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002334568416699767
    2. ' ,' → logprob: -8.37523365020752
    3. ',
' → logprob: -12.87523365020752
    4. '   ' → logprob: -16.375232696533203
    5. '```' → logprob: -16.750232696533203
    6. '‌,' → logprob: -17.250232696533203
    7. '<|end|>' → logprob: -17.750232696533203
    8. '_,' → logprob: -18.000232696533203
    9. ',y' → logprob: -18.000232696533203
    10. ',\
' → logprob: -18.125232696533203

Token 728: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.0031813981477171183
    2. ' ry' → logprob: -5.753181457519531
    3. 'Ry' → logprob: -14.253181457519531
    4. '
' → logprob: -14.503181457519531
    5. 'ray' → logprob: -14.628181457519531
    6. 'ryl' → logprob: -15.003181457519531
    7. 'ryw' → logprob: -15.253181457519531
    8. ' ' → logprob: -15.378181457519531
    9. 'rx' → logprob: -15.378181457519531
    10. 'rey' → logprob: -15.878181457519531

Token 729: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '2' → logprob: -13.750000953674316
    3. ',' → logprob: -16.250001907348633
    4. 'ry' → logprob: -16.875001907348633
    5. ' ' → logprob: -17.375001907348633
    6. '   ' → logprob: -17.625001907348633
    7. ' ry' → logprob: -17.750001907348633
    8. '```' → logprob: -17.875001907348633
    9. '' → logprob: -18.750001907348633
    10. 'rn' → logprob: -19.062501907348633

Token 730: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003365350130479783
    2. ' ,' → logprob: -8.000336647033691
    3. ',
' → logprob: -14.250336647033691
    4. ',r' → logprob: -15.500336647033691
    5. ',x' → logprob: -15.625336647033691
    6. '   ' → logprob: -17.125335693359375
    7. '),' → logprob: -17.375335693359375
    8. '‌,' → logprob: -17.500335693359375
    9. ')' → logprob: -17.875335693359375
    10. ',\
' → logprob: -18.750335693359375

Token 731: ' rx' (ID: 37623)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.0002625278721097857
    2. ' rx' → logprob: -8.250262260437012
    3. 'tx' → logprob: -14.375262260437012
    4. '(rx' → logprob: -14.375262260437012
    5. '.rx' → logprob: -17.125263214111328
    6. '_rx' → logprob: -17.500263214111328
    7. 'Rx' → logprob: -17.500263214111328
    8. 'ax' → logprob: -17.750263214111328
    9. '
' → logprob: -18.250263214111328
    10. 'px' → logprob: -18.750263214111328

Token 732: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04859509319067001
    2. '1' → logprob: -3.0485951900482178
    3. 'x' → logprob: -11.923595428466797
    4. ',' → logprob: -14.923595428466797
    5. '   ' → logprob: -16.048595428466797
    6. '```' → logprob: -16.048595428466797
    7. '<|end|>' → logprob: -16.486095428466797
    8. '<|end|>' → logprob: -16.673595428466797
    9. ' ' → logprob: -16.923595428466797
    10. 'ax' → logprob: -16.986095428466797

Token 733: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.266944157890975e-05
    2. ' ,' → logprob: -9.625072479248047
    3. ',
' → logprob: -12.250072479248047
    4. '   ' → logprob: -14.125072479248047
    5. '```' → logprob: -14.625072479248047
    6. '‌,' → logprob: -16.000072479248047
    7. '<|end|>' → logprob: -16.000072479248047
    8. ',y' → logprob: -17.125072479248047
    9. ')' → logprob: -17.250072479248047
    10. ',\
' → logprob: -17.375072479248047

Token 734: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.0067154900170862675
    2. ' ry' → logprob: -5.006715297698975
    3. 'rx' → logprob: -16.631715774536133
    4. 'Ry' → logprob: -16.881715774536133
    5. 'rys' → logprob: -17.881715774536133
    6. 'rey' → logprob: -17.881715774536133
    7. 'ray' → logprob: -18.006715774536133
    8. ' Ry' → logprob: -18.131715774536133
    9. '
' → logprob: -18.381715774536133
    10. 'ryl' → logprob: -18.756715774536133

Token 735: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. '1' → logprob: -14.500000953674316
    3. ' ' → logprob: -15.625000953674316
    4. '```' → logprob: -16.5
    5. '۲' → logprob: -18.6875
    6. '
' → logprob: -18.8125
    7. '   ' → logprob: -19.0
    8. ')' → logprob: -19.0
    9. '২' → logprob: -19.1875
    10. '२' → logprob: -19.375

Token 736: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005606057588011026
    2. '):' → logprob: -5.255606174468994
    3. '):
' → logprob: -8.005605697631836
    4. '   ' → logprob: -10.880605697631836
    5. ' )' → logprob: -11.130605697631836
    6. ' or' → logprob: -13.380605697631836
    7. ')return' → logprob: -14.005605697631836
    8. ')
' → logprob: -14.630605697631836
    9. 'or' → logprob: -14.630605697631836
    10. ' ):' → logprob: -14.880605697631836

Token 737: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.5338243246078491
    2. ':' → logprob: -1.9088243246078491
    3. '       ' → logprob: -2.1588244438171387
    4. '   ' → logprob: -2.1588244438171387
    5. ':
' → logprob: -3.5338244438171387
    6. ':return' → logprob: -5.408824443817139
    7. 'or' → logprob: -7.408824443817139
    8. '	or' → logprob: -10.03382396697998
    9. '  ' → logprob: -10.78382396697998
    10. '      ' → logprob: -10.78382396697998

Token 738: ' point' (ID: 2438)
  Prédit: ' point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.38698452711105347
    2. 'point' → logprob: -1.1369845867156982
    3. '   ' → logprob: -9.136984825134277
    4. '    ' → logprob: -12.761984825134277
    5. '	point' → logprob: -13.261984825134277
    6. ' ' → logprob: -14.511984825134277
    7. '(point' → logprob: -14.636984825134277
    8. '  ' → logprob: -15.261984825134277
    9. '_point' → logprob: -16.63698387145996
    10. '       ' → logprob: -17.01198387145996

Token 739: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -9.491498531133402e-06
    2. 'in' → logprob: -11.875009536743164
    3. 'In' → logprob: -13.125009536743164
    4. '_IN' → logprob: -15.750009536743164
    5. '_' → logprob: -16.000009536743164
    6. '_b' → logprob: -16.250009536743164
    7. ' in' → logprob: -18.000009536743164
    8. '_inter' → logprob: -18.125009536743164
    9. 'inx' → logprob: -18.250009536743164
    10. 'b' → logprob: -18.250009536743164

Token 740: '_rect' (ID: 39269)
  Prédit: '_rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -0.576336681842804
    2. 'rect' → logprob: -0.826336681842804
    3. 'bx' → logprob: -8.076336860656738
    4. '(b' → logprob: -10.576336860656738
    5. ' rect' → logprob: -10.701336860656738
    6. '(' → logprob: -11.201336860656738
    7. '(rect' → logprob: -11.826336860656738
    8. 'point' → logprob: -11.951336860656738
    9. '(x' → logprob: -12.826336860656738
    10. 'Rect' → logprob: -12.951336860656738

Token 741: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.37500286102295
    3. 'bx' → logprob: -15.00000286102295
    4. ' (' → logprob: -15.12500286102295
    5. ' bx' → logprob: -15.62500286102295
    6. '(bb' → logprob: -17.375001907348633
    7. '(B' → logprob: -18.125001907348633
    8. '(px' → logprob: -19.125001907348633
    9. '(cx' → logprob: -19.250001907348633
    10. '(
' → logprob: -19.250001907348633

Token 742: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.320199877838604e-07
    2. ',' → logprob: -14.75
    3. 'bx' → logprob: -17.0
    4. ' bx' → logprob: -19.0
    5. '```' → logprob: -19.0
    6. 'ox' → logprob: -19.125
    7. '
' → logprob: -20.0
    8. ',
' → logprob: -21.125
    9. 'ex' → logprob: -21.125
    10. ' x' → logprob: -21.625

Token 743: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0087516784551553e-05
    2. ' ,' → logprob: -11.62501049041748
    3. ',
' → logprob: -14.62501049041748
    4. '‌,' → logprob: -15.75001049041748
    5. '<|end|>' → logprob: -16.250009536743164
    6. ',b' → logprob: -16.500009536743164
    7. '`,' → logprob: -17.250009536743164
    8. '1' → logprob: -17.625009536743164
    9. '_,' → logprob: -17.750009536743164
    10. ' ' → logprob: -17.750009536743164

Token 744: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.03804505243897438
    2. ' by' → logprob: -3.2880451679229736
    3. 'ay' → logprob: -13.538044929504395
    4. 'bx' → logprob: -13.913044929504395
    5. 'b' → logprob: -14.913044929504395
    6. 'By' → logprob: -15.663044929504395
    7. ' ' → logprob: -15.788044929504395
    8. '```' → logprob: -16.16304588317871
    9. '(by' → logprob: -16.53804588317871
    10. '_by' → logprob: -16.78804588317871

Token 745: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.607391408877447e-05
    2. ' ,' → logprob: -10.250036239624023
    3. ',
' → logprob: -15.250036239624023
    4. '(rx' → logprob: -15.875036239624023
    5. ')' → logprob: -16.500036239624023
    6. '_,' → logprob: -17.375036239624023
    7. '...,' → logprob: -17.375036239624023
    8. '),' → logprob: -17.375036239624023
    9. '<|end|>' → logprob: -17.500036239624023
    10. '‌,' → logprob: -17.625036239624023

Token 746: ' rx' (ID: 37623)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.00020902375399600714
    2. ' rx' → logprob: -8.500208854675293
    3. '(rx' → logprob: -12.500208854675293
    4. '_rx' → logprob: -13.750208854675293
    5. 'tx' → logprob: -15.000208854675293
    6. '.rx' → logprob: -15.125208854675293
    7. 'Rx' → logprob: -15.625208854675293
    8. 'ry' → logprob: -17.25020980834961
    9. 'x' → logprob: -18.37520980834961
    10. 'RX' → logprob: -18.50020980834961

Token 747: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. 'x' → logprob: -12.500007629394531
    3. '2' → logprob: -12.750007629394531
    4. '```' → logprob: -16.25000762939453
    5. '<|end|>' → logprob: -16.81250762939453
    6. ',' → logprob: -17.31250762939453
    7. '[' → logprob: -17.43750762939453
    8. '১' → logprob: -17.68750762939453
    9. '_' → logprob: -17.93750762939453
    10. '<|end|>' → logprob: -18.00000762939453

Token 748: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.796184723294573e-06
    2. ' ,' → logprob: -12.250005722045898
    3. ',
' → logprob: -14.250005722045898
    4. '‌,' → logprob: -15.875005722045898
    5. '<|end|>' → logprob: -16.1250057220459
    6. '_,' → logprob: -17.2500057220459
    7. ',y' → logprob: -17.5000057220459
    8. '```' → logprob: -17.6250057220459
    9. ',\
' → logprob: -17.7500057220459
    10. '‍,' → logprob: -18.3750057220459

Token 749: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.014165511354804039
    2. ' ry' → logprob: -4.26416540145874
    3. 'ryw' → logprob: -14.889165878295898
    4. '
' → logprob: -15.139165878295898
    5. 'rys' → logprob: -15.514165878295898
    6. 'ryl' → logprob: -15.764165878295898
    7. 'rey' → logprob: -16.0141658782959
    8. ' ' → logprob: -16.0141658782959
    9. 'rying' → logprob: -16.5141658782959
    10. 'ery' → logprob: -16.6391658782959

Token 750: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. 'ay' → logprob: -11.875017166137695
    3. 'ry' → logprob: -12.500017166137695
    4. '2' → logprob: -13.500017166137695
    5. ',' → logprob: -13.625017166137695
    6. ' ry' → logprob: -13.625017166137695
    7. '```' → logprob: -15.187517166137695
    8. '
' → logprob: -15.250017166137695
    9. '<|end|>' → logprob: -15.250017166137695
    10. '   ' → logprob: -15.750017166137695

Token 751: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1875571544806007e-05
    2. ' ,' → logprob: -11.375011444091797
    3. ',
' → logprob: -15.750011444091797
    4. ',r' → logprob: -16.125011444091797
    5. ',x' → logprob: -17.750011444091797
    6. '‌,' → logprob: -18.125011444091797
    7. '```' → logprob: -18.125011444091797
    8. '<|end|>' → logprob: -18.375011444091797
    9. ',\
' → logprob: -18.625011444091797
    10. '`,' → logprob: -18.625011444091797

Token 752: ' rx' (ID: 37623)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.0040793512016534805
    2. ' rx' → logprob: -5.504079341888428
    3. '(rx' → logprob: -14.629079818725586
    4. '.rx' → logprob: -15.754079818725586
    5. 'tx' → logprob: -16.504079818725586
    6. '_rx' → logprob: -16.504079818725586
    7. 'ry' → logprob: -17.004079818725586
    8. '
' → logprob: -17.629079818725586
    9. 'Rx' → logprob: -19.379079818725586
    10. ' ' → logprob: -19.504079818725586

Token 753: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. 'x' → logprob: -15.75
    3. '```' → logprob: -16.875
    4. '₂' → logprob: -17.125
    5. '۲' → logprob: -17.625
    6. ' ' → logprob: -18.5
    7. ',' → logprob: -18.625
    8. '   ' → logprob: -19.125
    9. '२' → logprob: -19.1875
    10. '২' → logprob: -19.1875

Token 754: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.531315314830863e-06
    2. ' ,' → logprob: -13.000003814697266
    3. ',
' → logprob: -13.750003814697266
    4. '<|end|>' → logprob: -17.375003814697266
    5. '```' → logprob: -17.750003814697266
    6. '2' → logprob: -17.875003814697266
    7. ',y' → logprob: -18.125003814697266
    8. '[' → logprob: -18.250003814697266
    9. '‌,' → logprob: -18.500003814697266
    10. ',\
' → logprob: -18.500003814697266

Token 755: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.0011723674833774567
    2. ' ry' → logprob: -6.7511725425720215
    3. 'rx' → logprob: -13.376172065734863
    4. 'ryw' → logprob: -15.876172065734863
    5. '   ' → logprob: -16.37617301940918
    6. '
' → logprob: -16.75117301940918
    7. 'rys' → logprob: -16.87617301940918
    8. 'ray' → logprob: -17.25117301940918
    9. 'ryk' → logprob: -17.25117301940918
    10. 'Ry' → logprob: -17.37617301940918

Token 756: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. 'ry' → logprob: -15.125
    3. '```' → logprob: -17.125
    4. '۲' → logprob: -17.625
    5. 'y' → logprob: -17.625
    6. ' ' → logprob: -17.75
    7. 'rey' → logprob: -18.0
    8. '   ' → logprob: -18.25
    9. '₂' → logprob: -18.5
    10. 'ree' → logprob: -18.625

Token 757: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01726607419550419
    2. '):
' → logprob: -4.142266273498535
    3. ')' → logprob: -6.767266273498535
    4. '   ' → logprob: -10.142266273498535
    5. ':' → logprob: -10.767266273498535
    6. ' ):' → logprob: -11.017266273498535
    7. '):
' → logprob: -13.267266273498535
    8. ' ):
' → logprob: -15.017266273498535
    9. '):

' → logprob: -15.392266273498535
    10. ''):' → logprob: -15.642266273498535

Token 758: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010067274561151862
    2. '   ' → logprob: -7.001006603240967
    3. '
' → logprob: -9.626007080078125
    4. '	return' → logprob: -12.251007080078125
    5. ':
' → logprob: -12.251007080078125
    6. 'return' → logprob: -12.376007080078125
    7. ' return' → logprob: -12.376007080078125
    8. ':' → logprob: -12.876007080078125
    9. '	' → logprob: -13.001007080078125
    10. '	   ' → logprob: -13.626007080078125

Token 759: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09952908009290695
    2. 'return' (adapté à ' return') → logprob: -2.9745290279388428
    3. ' return' → logprob: -3.4745290279388428
    4. '   ' → logprob: -4.474529266357422
    5. '
' → logprob: -7.224529266357422
    6. '	return' → logprob: -7.599529266357422
    7. ':return' → logprob: -10.349529266357422
    8. '	   ' → logprob: -12.349529266357422
    9. '    ' → logprob: -12.474529266357422
    10. '
' → logprob: -12.849529266357422

Token 760: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0485873706638813
    2. ' True' → logprob: -3.0485873222351074
    3. '(True' → logprob: -19.423587799072266
    4. '   ' → logprob: -21.423587799072266
    5. '=True' → logprob: -22.173587799072266
    6. 'False' → logprob: -22.173587799072266
    7. '1' → logprob: -22.423587799072266
    8. '
' → logprob: -23.173587799072266
    9. 'true' → logprob: -23.298587799072266
    10. 'TRUE' → logprob: -24.298587799072266

Token 761: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01227746345102787
    2. '    
' → logprob: -4.887277603149414
    3. '
' → logprob: -5.387277603149414
    4. '  
' → logprob: -10.262277603149414
    5. '   
' → logprob: -11.012277603149414
    6. '        
' → logprob: -11.387277603149414
    7. 'import' → logprob: -11.637277603149414
    8. ',' → logprob: -13.012277603149414
    9. '```' → logprob: -13.012277603149414
    10. 'def' → logprob: -13.887277603149414

Token 762: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013364320620894432
    2. '
' → logprob: -7.126336574554443
    3. '    
' → logprob: -7.626336574554443
    4. '```' → logprob: -10.376336097717285
    5. '  
' → logprob: -12.376336097717285
    6. 'import' → logprob: -12.751336097717285
    7. '   
' → logprob: -13.126336097717285
    8. '        
' → logprob: -14.001336097717285
    9. ',' → logprob: -14.001336097717285
    10. 'def' → logprob: -15.001336097717285

Token 763: ' #' (ID: 1069)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.3148745596408844
    2. 'corn' → logprob: -2.1898746490478516
    3. '#' (adapté à ' #') → logprob: -2.4398746490478516
    4. 'edges' → logprob: -2.8148746490478516
    5. 'if' → logprob: -5.689874649047852
    6. 'for' → logprob: -6.189874649047852
    7. 'def' → logprob: -6.439874649047852
    8. 'rectangle' → logprob: -6.439874649047852
    9. 'rx' → logprob: -6.689874649047852
    10. 'r' → logprob: -8.064874649047852

Token 764: ' Rect' (ID: 22765)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.7768305540084839
    2. '#' → logprob: -0.9018305540084839
    3. 'edges' → logprob: -2.1518306732177734
    4. 'corn' → logprob: -5.026830673217773
    5. 'for' → logprob: -5.401830673217773
    6. 'if' → logprob: -5.651830673217773
    7. 'rectangle' → logprob: -6.901830673217773
    8. 'lines' → logprob: -7.276830673217773
    9. 'segments' → logprob: -7.276830673217773
    10. 'def' → logprob: -7.776830673217773

Token 765: ' edges' (ID: 22569)
  Prédit: '_lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.7406700253486633
    2. '_edges' → logprob: -1.1156699657440186
    3. 'corn' → logprob: -2.2406699657440186
    4. '_c' → logprob: -3.7406699657440186
    5. 's' → logprob: -4.115670204162598
    6. 'edges' → logprob: -4.615670204162598
    7. '_s' → logprob: -4.865670204162598
    8. '_segments' → logprob: -4.990670204162598
    9. '#' → logprob: -5.240670204162598
    10. 'lines' → logprob: -5.740670204162598

Token 766: '
' (ID: 198)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.6341485977172852
    2. 'edges' → logprob: -1.6341485977172852
    3. '   ' → logprob: -2.009148597717285
    4. ' lines' → logprob: -2.634148597717285
    5. ' corners' → logprob: -3.259148597717285
    6. ' for' → logprob: -5.009148597717285
    7. ' rx' → logprob: -5.259148597717285
    8. ' =' → logprob: -5.509148597717285
    9. 'lines' → logprob: -6.509148597717285
    10. 'rx' → logprob: -6.759148597717285

Token 767: '   ' (ID: 271)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.17968147993087769
    2. 'if' → logprob: -2.5546815395355225
    3. 'rect' → logprob: -3.1796815395355225
    4. '   ' → logprob: -3.6796815395355225
    5. 'for' → logprob: -4.679681301116943
    6. '#' → logprob: -5.929681301116943
    7. 'return' → logprob: -5.929681301116943
    8. ' edges' → logprob: -6.679681301116943
    9. 'rx' → logprob: -6.804681301116943
    10. 'r' → logprob: -6.804681301116943

Token 768: ' rect' (ID: 13107)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.5257098078727722
    2. 'if' → logprob: -1.025709867477417
    3. 'rect' (adapté à ' rect') → logprob: -3.025709867477417
    4. '#' → logprob: -7.150709629058838
    5. 'return' → logprob: -8.150710105895996
    6. 'for' → logprob: -8.525710105895996
    7. 'left' → logprob: -9.275710105895996
    8. 'rx' → logprob: -9.400710105895996
    9. 'r' → logprob: -9.650710105895996
    10. 'segments' → logprob: -9.650710105895996

Token 769: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.2440769374370575
    2. 'edges' → logprob: -1.7440769672393799
    3. 's' → logprob: -3.36907696723938
    4. '_lines' → logprob: -5.494076728820801
    5. '_segments' → logprob: -6.744076728820801
    6. '_points' → logprob: -7.369076728820801
    7. 'lines' → logprob: -7.494076728820801
    8. 'segments' → logprob: -8.4940767288208
    9. ' =' → logprob: -8.8690767288208
    10. '_pts' → logprob: -8.8690767288208

Token 770: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023173928260803
    2. '=' → logprob: -1.9102317094802856
    3. '=[' → logprob: -12.035231590270996
    4. '=[
' → logprob: -13.660231590270996
    5. ' =[' → logprob: -15.035231590270996
    6. 's' → logprob: -16.910232543945312
    7. '   ' → logprob: -17.035232543945312
    8. '=
' → logprob: -17.410232543945312
    9. '=((' → logprob: -17.410232543945312
    10. '=[[' → logprob: -18.035232543945312

Token 771: ' [
' (ID: 4240)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.5466171503067017
    2. '[((' → logprob: -1.0466171503067017
    3. '[(' → logprob: -3.046617031097412
    4. '[' → logprob: -3.796617031097412
    5. ' [' → logprob: -12.17161750793457
    6. ' [
' → logprob: -14.92161750793457
    7. '   ' → logprob: -16.54661750793457
    8. '[\' → logprob: -17.29661750793457
    9. '[[' → logprob: -17.54661750793457
    10. '((' → logprob: -17.92161750793457

Token 772: '       ' (ID: 309)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.7790926098823547
    2. '[(' → logprob: -0.7790926098823547
    3. '   ' → logprob: -2.52909255027771
    4. ' ((' → logprob: -6.279092788696289
    5. ' [(' → logprob: -8.154092788696289
    6. '(' → logprob: -8.654092788696289
    7. ' (' → logprob: -8.779092788696289
    8. '(rx' → logprob: -9.654092788696289
    9. '       ' → logprob: -10.529092788696289
    10. '(x' → logprob: -10.654092788696289

Token 773: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' (adapté à ' ((') → logprob: -0.047590311616659164
    2. '[(' → logprob: -3.5475902557373047
    3. '(rx' → logprob: -4.047590255737305
    4. ' ((' → logprob: -8.797590255737305
    5. '(r' → logprob: -10.922590255737305
    6. ' (' → logprob: -11.172590255737305
    7. '(x' → logprob: -11.672590255737305
    8. '(' → logprob: -11.797590255737305
    9. '   ' → logprob: -12.047590255737305
    10. '(rc' → logprob: -12.422590255737305

Token 774: 'rx' (ID: 26910)
  Prédit: 'rx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.0015030752401798964
    2. '(rx' → logprob: -6.501502990722656
    3. ' rx' → logprob: -14.251502990722656
    4. '_rx' → logprob: -17.126502990722656
    5. '.rx' → logprob: -17.126502990722656
    6. '(' → logprob: -17.751502990722656
    7. 'ry' → logprob: -18.126502990722656
    8. '   ' → logprob: -18.376502990722656
    9. '(r' → logprob: -19.376502990722656
    10. '
' → logprob: -19.376502990722656

Token 775: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.25
    3. '2' → logprob: -16.5
    4. ',' → logprob: -17.625
    5. '```' → logprob: -18.0
    6. ' ' → logprob: -18.625
    7. '
' → logprob: -18.9375
    8. '#' → logprob: -19.1875
    9. '[
' → logprob: -19.3125
    10. '   ' → logprob: -19.375

Token 776: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3306015716807451e-05
    2. ' ,' → logprob: -11.25001335144043
    3. ',
' → logprob: -15.37501335144043
    4. '   ' → logprob: -17.75001335144043
    5. ',y' → logprob: -17.75001335144043
    6. '[' → logprob: -18.87501335144043
    7. '‌,' → logprob: -19.12501335144043
    8. ',\
' → logprob: -19.50001335144043
    9. '),' → logprob: -19.75001335144043
    10. '1' → logprob: -20.00001335144043

Token 777: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.0015056940028443933
    2. ' ry' → logprob: -6.5015058517456055
    3. '   ' → logprob: -13.501505851745605
    4. ' ' → logprob: -14.001505851745605
    5. 'ryw' → logprob: -15.751505851745605
    6. '
' → logprob: -15.751505851745605
    7. 'rys' → logprob: -16.12650489807129
    8. 'ray' → logprob: -16.50150489807129
    9. '  ' → logprob: -16.62650489807129
    10. 'ryl' → logprob: -16.75150489807129

Token 778: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. '2' → logprob: -11.750007629394531
    3. '   ' → logprob: -16.62500762939453
    4. ' ry' → logprob: -17.00000762939453
    5. 'ry' → logprob: -17.00000762939453
    6. '[' → logprob: -17.12500762939453
    7. ' ' → logprob: -18.00000762939453
    8. '```' → logprob: -18.00000762939453
    9. '``' → logprob: -19.68750762939453
    10. '    ' → logprob: -19.81250762939453

Token 779: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0033951562363654375
    2. ',' → logprob: -5.753395080566406
    3. '),(' → logprob: -9.003395080566406
    4. ' ),' → logprob: -9.378395080566406
    5. '   ' → logprob: -12.003395080566406
    6. ',),' → logprob: -13.128395080566406
    7. '),
' → logprob: -13.878395080566406
    8. ' ,' → logprob: -14.753395080566406
    9. ')' → logprob: -15.878395080566406
    10. '},' → logprob: -16.628395080566406

Token 780: ' (' (ID: 350)
  Prédit: '(rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rx' → logprob: -0.0010921158827841282
    2. ' (' → logprob: -6.876091957092285
    3. '(rv' → logprob: -10.126091957092285
    4. '   ' → logprob: -12.001091957092285
    5. '       ' → logprob: -12.251091957092285
    6. '(rs' → logprob: -12.501091957092285
    7. '(rc' → logprob: -13.376091957092285
    8. '(rb' → logprob: -13.876091957092285
    9. '(ray' → logprob: -14.501091957092285
    10. '(rr' → logprob: -14.626091957092285

Token 781: 'rx' (ID: 26910)
  Prédit: '(rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(rx' → logprob: -0.0007282786536961794
    2. ' (' → logprob: -7.250728130340576
    3. '(rv' → logprob: -11.250728607177734
    4. '   ' → logprob: -13.500728607177734
    5. '(wx' → logprob: -14.125728607177734
    6. '(ray' → logprob: -14.375728607177734
    7. '(' → logprob: -15.125728607177734
    8. '  ' → logprob: -15.250728607177734
    9. '(rs' → logprob: -15.250728607177734
    10. ' ' → logprob: -15.375728607177734

Token 782: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07889331132173538
    2. '2' → logprob: -2.5788934230804443
    3. '```' → logprob: -13.328893661499023
    4. '``' → logprob: -14.703893661499023
    5. '[' → logprob: -14.828893661499023
    6. '
' → logprob: -14.953893661499023
    7. '   ' → logprob: -16.203893661499023
    8. '{' → logprob: -16.641393661499023
    9. 'min' → logprob: -17.391393661499023
    10. ' ' → logprob: -17.453893661499023

Token 783: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.11996734328568e-05
    2. ' ,' → logprob: -10.125041007995605
    3. '<|end|>' → logprob: -14.375041007995605
    4. ',
' → logprob: -14.625041007995605
    5. '‌,' → logprob: -16.750041961669922
    6. ' ' → logprob: -18.125041961669922
    7. '<|end|>' → logprob: -18.625041961669922
    8. ',y' → logprob: -18.625041961669922
    9. '1' → logprob: -18.750041961669922
    10. '0' → logprob: -19.000041961669922

Token 784: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.0011720098555088043
    2. ' ry' → logprob: -6.751172065734863
    3. ' ' → logprob: -15.251172065734863
    4. 'Ry' → logprob: -15.501172065734863
    5. 'ryd' → logprob: -15.626172065734863
    6. 'rx' → logprob: -15.751172065734863
    7. 'ryw' → logprob: -15.751172065734863
    8. 'ray' → logprob: -15.876172065734863
    9. '   ' → logprob: -16.001171112060547
    10. 'ryl' → logprob: -16.001171112060547

Token 785: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007607458624988794
    2. '1' → logprob: -4.882607460021973
    3. '```' → logprob: -14.507607460021973
    4. '[' → logprob: -15.007607460021973
    5. '   ' → logprob: -15.695107460021973
    6. ' ' → logprob: -15.882607460021973
    7. '``' → logprob: -17.507606506347656
    8. '۲' → logprob: -17.507606506347656
    9. '
' → logprob: -17.945106506347656
    10. '₂' → logprob: -18.195106506347656

Token 786: ')),
' (ID: 13846)
  Prédit: '),
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.04884033277630806
    2. '),' → logprob: -3.048840284347534
    3. ')' → logprob: -9.423840522766113
    4. '),
' → logprob: -9.798840522766113
    5. '),

' → logprob: -10.298840522766113
    6. ')),
' → logprob: -10.423840522766113
    7. ' ),
' → logprob: -10.673840522766113
    8. '   ' → logprob: -10.798840522766113
    9. ' ' → logprob: -12.173840522766113
    10. ')),' → logprob: -13.173840522766113

Token 787: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001073419232852757
    2. '((' → logprob: -7.376073360443115
    3. ' ((' → logprob: -8.251073837280273
    4. '   ' → logprob: -8.751073837280273
    5. '	' → logprob: -10.626073837280273
    6. '(' → logprob: -14.126073837280273
    7. '      ' → logprob: -14.501073837280273
    8. '    ' → logprob: -14.626073837280273
    9. ' (' → logprob: -14.751073837280273
    10. ' ' → logprob: -15.251073837280273

Token 788: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' (adapté à ' ((') → logprob: -0.0624639168381691
    2. ' ((' → logprob: -2.8124639987945557
    3. '       ' → logprob: -7.812463760375977
    4. '   ' → logprob: -9.312463760375977
    5. ' ' → logprob: -14.812463760375977
    6. '[(' → logprob: -15.937463760375977
    7. '      ' → logprob: -16.062463760375977
    8. '    ' → logprob: -16.312463760375977
    9. '(rx' → logprob: -16.437463760375977
    10. '  ' → logprob: -16.687463760375977

Token 789: 'rx' (ID: 26910)
  Prédit: 'rx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.20151694118976593
    2. '(rx' → logprob: -1.7015169858932495
    3. ' rx' → logprob: -9.326517105102539
    4. ' (' → logprob: -12.076517105102539
    5. '.rx' → logprob: -12.576517105102539
    6. 'Rx' → logprob: -13.701517105102539
    7. '_rx' → logprob: -13.826517105102539
    8. '   ' → logprob: -13.951517105102539
    9. 'ry' → logprob: -14.201517105102539
    10. 'rxjs' → logprob: -14.826517105102539

Token 790: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0067156096920371056
    2. '2' → logprob: -5.006715774536133
    3. '```' → logprob: -16.631715774536133
    4. 'x' → logprob: -17.131715774536133
    5. ',' → logprob: -17.194215774536133
    6. '[' → logprob: -17.506715774536133
    7. '१' → logprob: -18.756715774536133
    8. '   ' → logprob: -18.819215774536133
    9. '``' → logprob: -18.944215774536133
    10. '১' → logprob: -19.069215774536133

Token 791: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.607391408877447e-05
    2. ' ,' → logprob: -10.250036239624023
    3. ',
' → logprob: -14.875036239624023
    4. '<|end|>' → logprob: -15.375036239624023
    5. '‌,' → logprob: -17.750036239624023
    6. '1' → logprob: -17.875036239624023
    7. '[' → logprob: -18.250036239624023
    8. '0' → logprob: -18.250036239624023
    9. 'The' → logprob: -18.375036239624023
    10. '<|end|>' → logprob: -19.000036239624023

Token 792: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.5231320261955261
    2. ' ry' → logprob: -0.8981320261955261
    3. ' ' → logprob: -12.27313232421875
    4. ' Ry' → logprob: -14.14813232421875
    5. 'Ry' → logprob: -14.27313232421875
    6. ' rye' → logprob: -15.14813232421875
    7. '   ' → logprob: -15.27313232421875
    8. '
' → logprob: -15.27313232421875
    9. 'rx' → logprob: -15.39813232421875
    10. ',' → logprob: -15.52313232421875

Token 793: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10020806640386581
    2. '1' → logprob: -2.350208044052124
    3. ',' → logprob: -14.225208282470703
    4. '   ' → logprob: -14.725208282470703
    5. ' ' → logprob: -16.350208282470703
    6. '```' → logprob: -16.475208282470703
    7. '[' → logprob: -17.475208282470703
    8. '0' → logprob: -17.600208282470703
    9. '12' → logprob: -17.912708282470703
    10. 'ry' → logprob: -17.975208282470703

Token 794: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.10029260814189911
    2. ',' → logprob: -2.350292682647705
    3. '),(' → logprob: -10.225292205810547
    4. ' ),' → logprob: -10.975292205810547
    5. ',),' → logprob: -11.100292205810547
    6. ' ,' → logprob: -11.725292205810547
    7. '   ' → logprob: -12.100292205810547
    8. '),
' → logprob: -13.475292205810547
    9. ')' → logprob: -13.475292205810547
    10. '>,' → logprob: -14.975292205810547

Token 795: ' (' (ID: 350)
  Prédit: '(rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rx' → logprob: -0.2519437372684479
    2. ' (' → logprob: -1.5019437074661255
    3. '(rv' → logprob: -11.876943588256836
    4. '(' → logprob: -12.501943588256836
    5. '(ray' → logprob: -13.876943588256836
    6. '(rb' → logprob: -13.876943588256836
    7. '   ' → logprob: -14.126943588256836
    8. '       ' → logprob: -15.001943588256836
    9. ' ' → logprob: -15.751943588256836
    10. '(wx' → logprob: -15.876943588256836

Token 796: 'rx' (ID: 26910)
  Prédit: '(rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rx' → logprob: -0.011174321174621582
    2. ' (' → logprob: -4.511174201965332
    3. 'rx' → logprob: -9.511174201965332
    4. ' rx' → logprob: -10.261174201965332
    5. '   ' → logprob: -11.636174201965332
    6. '(rv' → logprob: -12.761174201965332
    7. '.rx' → logprob: -13.511174201965332
    8. '(' → logprob: -14.136174201965332
    9. '       ' → logprob: -14.261174201965332
    10. ' ' → logprob: -14.636174201965332

Token 797: '2' (ID: 17)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.5804877877235413
    2. '2' → logprob: -0.8304877877235413
    3. '(rx' → logprob: -6.0804877281188965
    4. ' rx' → logprob: -7.0804877281188965
    5. ',' → logprob: -7.3304877281188965
    6. 'x' → logprob: -7.8304877281188965
    7. '   ' → logprob: -9.080488204956055
    8. 'tx' → logprob: -9.080488204956055
    9. '_rx' → logprob: -10.080488204956055
    10. '.rx' → logprob: -11.080488204956055

Token 798: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.176947600673884e-05
    2. ' ,' → logprob: -10.750021934509277
    3. ',
' → logprob: -15.250021934509277
    4. '‌,' → logprob: -18.25002098083496
    5. '0' → logprob: -19.00002098083496
    6. '_,' → logprob: -19.50002098083496
    7. '`,' → logprob: -19.50002098083496
    8. '[' → logprob: -19.62502098083496
    9. ',\
' → logprob: -19.75002098083496
    10. '',' → logprob: -19.87502098083496

Token 799: ' ry' (ID: 23218)
  Prédit: ' ry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ry' → logprob: -0.16022787988185883
    2. 'ry' → logprob: -1.91022789478302
    3. ' ' → logprob: -13.16022777557373
    4. ' Ry' → logprob: -14.78522777557373
    5. 'Ry' → logprob: -15.16022777557373
    6. '
' → logprob: -15.53522777557373
    7. ' rye' → logprob: -15.78522777557373
    8. '   ' → logprob: -15.91022777557373
    9. 'ryd' → logprob: -15.91022777557373
    10. 'rx' → logprob: -16.285228729248047

Token 800: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ',' → logprob: -14.875000953674316
    3. ' ' → logprob: -15.750000953674316
    4. '₂' → logprob: -16.375
    5. '   ' → logprob: -17.0
    6. '۲' → logprob: -17.375
    7. '```' → logprob: -17.5
    8. 'y' → logprob: -18.0
    9. 'ry' → logprob: -18.25
    10. '[' → logprob: -18.375

Token 801: ')),
' (ID: 13846)
  Prédit: ')),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),
' → logprob: -0.2344067394733429
    2. ')),' → logprob: -1.6094067096710205
    3. '),' → logprob: -5.4844069480896
    4. ')' → logprob: -6.2344069480896
    5. '))' → logprob: -6.3594069480896
    6. '),
' → logprob: -7.1094069480896
    7. '   ' → logprob: -8.984406471252441
    8. ')),
' → logprob: -9.109406471252441
    9. ' )),
' → logprob: -11.109406471252441
    10. '       ' → logprob: -11.609406471252441

Token 802: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.129266067640856e-05
    2. '((' → logprob: -11.000020980834961
    3. '   ' → logprob: -12.500020980834961
    4. ' ((' → logprob: -14.250020980834961
    5. '(' → logprob: -16.50002098083496
    6. '	' → logprob: -17.00002098083496
    7. '      ' → logprob: -17.12502098083496
    8. '[(' → logprob: -17.75002098083496
    9. '           ' → logprob: -18.00002098083496
    10. '     ' → logprob: -18.12502098083496

Token 803: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' (adapté à ' ((') → logprob: -0.0031918513122946024
    2. ' ((' → logprob: -6.003191947937012
    3. '       ' → logprob: -7.253191947937012
    4. '   ' → logprob: -11.753191947937012
    5. ' ' → logprob: -16.878190994262695
    6. '[(' → logprob: -17.628190994262695
    7. '((-' → logprob: -17.878190994262695
    8. '      ' → logprob: -18.253190994262695
    9. '     ' → logprob: -18.378190994262695
    10. '```' → logprob: -18.503190994262695

Token 804: 'rx' (ID: 26910)
  Prédit: '(rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rx' → logprob: -2.7968066206085496e-05
    2. ' (' → logprob: -10.625027656555176
    3. '(rv' → logprob: -13.500027656555176
    4. 'rx' → logprob: -13.625027656555176
    5. '(ray' → logprob: -15.250027656555176
    6. '(wx' → logprob: -16.000028610229492
    7. '(rs' → logprob: -16.250028610229492
    8. '(' → logprob: -16.375028610229492
    9. '(rb' → logprob: -16.750028610229492
    10. '(rgb' → logprob: -16.750028610229492

Token 805: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023246292024850845
    2. '2' → logprob: -3.7732462882995605
    3. '```' → logprob: -14.773246765136719
    4. '``' → logprob: -16.46074676513672
    5. '
' → logprob: -16.58574676513672
    6. '#' → logprob: -17.14824676513672
    7. '[' → logprob: -17.21074676513672
    8. '   ' → logprob: -17.46074676513672
    9. ',' → logprob: -17.71074676513672
    10. 'x' → logprob: -18.08574676513672

Token 806: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.558399319241289e-05
    2. ' ,' → logprob: -10.625025749206543
    3. ',
' → logprob: -14.750025749206543
    4. '<|end|>' → logprob: -14.750025749206543
    5. '[' → logprob: -15.750025749206543
    6. '   ' → logprob: -16.500024795532227
    7. '<|end|>' → logprob: -16.750024795532227
    8. '‌,' → logprob: -16.875024795532227
    9. 'The' → logprob: -17.250024795532227
    10. 'def' → logprob: -17.750024795532227

Token 807: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.42871981859207153
    2. ' ry' → logprob: -1.0537197589874268
    3. 'rx' → logprob: -11.803719520568848
    4. ' ' → logprob: -12.428719520568848
    5. '
' → logprob: -13.678719520568848
    6. 'Ry' → logprob: -13.928719520568848
    7. ' rx' → logprob: -14.178719520568848
    8. '   ' → logprob: -14.178719520568848
    9. ' Ry' → logprob: -14.303719520568848
    10. 'ray' → logprob: -15.053719520568848

Token 808: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03368927165865898
    2. '2' → logprob: -3.408689260482788
    3. '   ' → logprob: -10.408689498901367
    4. ',' → logprob: -12.033689498901367
    5. '```' → logprob: -12.908689498901367
    6. 'ry' → logprob: -13.533689498901367
    7. '    ' → logprob: -13.908689498901367
    8. ' ' → logprob: -14.283689498901367
    9. '       ' → logprob: -15.408689498901367
    10. '[' → logprob: -15.408689498901367

Token 809: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02634407766163349
    2. '),' → logprob: -3.651344060897827
    3. ' ,' → logprob: -10.651344299316406
    4. '),(' → logprob: -11.276344299316406
    5. '(' → logprob: -13.651344299316406
    6. ')' → logprob: -13.651344299316406
    7. ',(' → logprob: -13.651344299316406
    8. '>,' → logprob: -14.151344299316406
    9. '(),' → logprob: -14.526344299316406
    10. '),
' → logprob: -14.651344299316406

Token 810: ' (' (ID: 350)
  Prédit: '(rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rx' → logprob: -0.47409355640411377
    2. ' (' → logprob: -0.9740935564041138
    3. '(rv' → logprob: -11.599093437194824
    4. '(ray' → logprob: -12.974093437194824
    5. '       ' → logprob: -13.099093437194824
    6. '(rb' → logprob: -14.349093437194824
    7. '   ' → logprob: -14.474093437194824
    8. '(rs' → logprob: -14.849093437194824
    9. '(rc' → logprob: -15.474093437194824
    10. '(' → logprob: -15.599093437194824

Token 811: 'rx' (ID: 26910)
  Prédit: '(rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rx' → logprob: -0.00033427379094064236
    2. ' (' → logprob: -8.250334739685059
    3. 'rx' → logprob: -9.625334739685059
    4. ' rx' → logprob: -12.375334739685059
    5. '.rx' → logprob: -13.875334739685059
    6. '(rv' → logprob: -14.375334739685059
    7. '   ' → logprob: -15.000334739685059
    8. '(wx' → logprob: -16.000333786010742
    9. '       ' → logprob: -16.125333786010742
    10. '(ray' → logprob: -16.250333786010742

Token 812: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002807725453749299
    2. '2' → logprob: -5.8778076171875
    3. '
' → logprob: -14.1278076171875
    4. 'rx' → logprob: -14.3778076171875
    5. '[' → logprob: -14.6278076171875
    6. '4' → logprob: -14.8778076171875
    7. ' ry' → logprob: -16.0028076171875
    8. 'ry' → logprob: -16.2528076171875
    9. '```' → logprob: -16.5028076171875
    10. '5' → logprob: -16.8778076171875

Token 813: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.088346359931165e-07
    2. ',
' → logprob: -14.750000953674316
    3. ' ,' → logprob: -15.250000953674316
    4. '<|end|>' → logprob: -15.625000953674316
    5. '‌,' → logprob: -17.5
    6. ',\
' → logprob: -19.375
    7. '[' → logprob: -20.0
    8. '‍,' → logprob: -20.25
    9. 'The' → logprob: -20.375
    10. '```' → logprob: -20.5

Token 814: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.02976333536207676
    2. ' ry' → logprob: -3.5297632217407227
    3. '
' → logprob: -13.529763221740723
    4. 'ryw' → logprob: -13.904763221740723
    5. 'ryd' → logprob: -13.904763221740723
    6. 'ryl' → logprob: -14.029763221740723
    7. 'Ry' → logprob: -14.029763221740723
    8. 'rys' → logprob: -14.029763221740723
    9. 'rx' → logprob: -14.279763221740723
    10. 'ryk' → logprob: -14.279763221740723

Token 815: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.584239938296378e-06
    2. '1' → logprob: -11.875007629394531
    3. '```' → logprob: -15.812507629394531
    4. '२' → logprob: -16.37500762939453
    5. '২' → logprob: -16.62500762939453
    6. '۲' → logprob: -16.68750762939453
    7. '   ' → logprob: -17.06250762939453
    8. '₂' → logprob: -17.25000762939453
    9. ' ' → logprob: -17.43750762939453
    10. '２' → logprob: -17.81250762939453

Token 816: ')),
' (ID: 13846)
  Prédit: ')),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),
' → logprob: -0.5830802321434021
    2. ')),' → logprob: -0.8330802321434021
    3. '))' → logprob: -5.458080291748047
    4. '),' → logprob: -6.708080291748047
    5. '       ' → logprob: -7.708080291748047
    6. ')' → logprob: -7.833080291748047
    7. '   ' → logprob: -8.208080291748047
    8. '),
' → logprob: -8.208080291748047
    9. ')),
' → logprob: -8.458080291748047
    10. '))
' → logprob: -11.833080291748047

Token 817: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.5120287066092715e-05
    2. '((' → logprob: -10.375035285949707
    3. '   ' → logprob: -12.750035285949707
    4. ' ((' → logprob: -14.625035285949707
    5. '      ' → logprob: -15.125035285949707
    6. '(' → logprob: -15.875035285949707
    7. '     ' → logprob: -16.25003433227539
    8. '        ' → logprob: -17.12503433227539
    9. '           ' → logprob: -17.12503433227539
    10. '	' → logprob: -17.75003433227539

Token 818: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' (adapté à ' ((') → logprob: -0.0031813981477171183
    2. ' ((' → logprob: -5.753181457519531
    3. '       ' → logprob: -12.628181457519531
    4. '   ' → logprob: -14.753181457519531
    5. ' ' → logprob: -18.12818145751953
    6. ')((' → logprob: -19.62818145751953
    7. '[(' → logprob: -19.87818145751953
    8. '```' → logprob: -20.37818145751953
    9. '((-' → logprob: -20.62818145751953
    10. '     ' → logprob: -20.75318145751953

Token 819: 'rx' (ID: 26910)
  Prédit: 'rx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.07896964997053146
    2. '(rx' → logprob: -2.578969717025757
    3. ' rx' → logprob: -9.953969955444336
    4. '(' → logprob: -10.703969955444336
    5. '_rx' → logprob: -12.203969955444336
    6. ' (' → logprob: -13.328969955444336
    7. '.rx' → logprob: -13.578969955444336
    8. 'Rx' → logprob: -14.328969955444336
    9. '(r' → logprob: -14.703969955444336
    10. '(
' → logprob: -14.953969955444336

Token 820: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. '2' → logprob: -13.125001907348633
    3. ',' → logprob: -16.625001907348633
    4. '[' → logprob: -17.312501907348633
    5. ' ' → logprob: -18.187501907348633
    6. '<|end|>' → logprob: -18.500001907348633
    7. '   ' → logprob: -18.687501907348633
    8. 'x' → logprob: -18.687501907348633
    9. '```' → logprob: -18.687501907348633
    10. '১' → logprob: -18.750001907348633

Token 821: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.842555426876061e-06
    2. ' ,' → logprob: -12.625004768371582
    3. ',
' → logprob: -14.000004768371582
    4. '<|end|>' → logprob: -14.500004768371582
    5. '‌,' → logprob: -17.6250057220459
    6. '[' → logprob: -17.6250057220459
    7. 'def' → logprob: -18.0000057220459
    8. '```' → logprob: -18.1250057220459
    9. '<|end|>' → logprob: -18.2500057220459
    10. 'The' → logprob: -18.5000057220459

Token 822: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.12692978978157043
    2. ' ry' → logprob: -2.126929759979248
    3. 'Ry' → logprob: -14.626930236816406
    4. 'rys' → logprob: -15.626930236816406
    5. 'rx' → logprob: -15.876930236816406
    6. 'ryd' → logprob: -16.001930236816406
    7. ' ' → logprob: -16.251930236816406
    8. ' rye' → logprob: -16.376930236816406
    9. ' Ry' → logprob: -16.501930236816406
    10. '
' → logprob: -16.501930236816406

Token 823: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '```' → logprob: -18.25
    3. '<|end|>' → logprob: -19.4375
    4. '   ' → logprob: -19.4375
    5. ' ' → logprob: -19.5625
    6. '[' → logprob: -19.6875
    7. '১' → logprob: -19.6875
    8. '१' → logprob: -19.875
    9. 'ry' → logprob: -20.0
    10. '2' → logprob: -20.375

Token 824: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10033121705055237
    2. '),' → logprob: -2.3503313064575195
    3. ' ,' → logprob: -9.60033130645752
    4. '),(' → logprob: -10.10033130645752
    5. '(),' → logprob: -12.47533130645752
    6. ' ),' → logprob: -12.60033130645752
    7. ')' → logprob: -12.60033130645752
    8. '),
' → logprob: -13.60033130645752
    9. ',(' → logprob: -14.22533130645752
    10. ',),' → logprob: -14.22533130645752

Token 825: ' (' (ID: 350)
  Prédit: '(rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rx' → logprob: -0.4741326868534088
    2. ' (' → logprob: -0.9741326570510864
    3. '(rv' → logprob: -10.099132537841797
    4. '(ray' → logprob: -12.474132537841797
    5. '(rb' → logprob: -13.099132537841797
    6. '(rc' → logprob: -13.474132537841797
    7. '(rt' → logprob: -13.599132537841797
    8. '(rs' → logprob: -13.599132537841797
    9. '   ' → logprob: -13.724132537841797
    10. '(wx' → logprob: -14.474132537841797

Token 826: 'rx' (ID: 26910)
  Prédit: 'rx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.0019721693824976683
    2. '(rx' → logprob: -6.251972198486328
    3. ' rx' → logprob: -10.126972198486328
    4. '_rx' → logprob: -13.126972198486328
    5. '.rx' → logprob: -14.501972198486328
    6. '(' → logprob: -14.501972198486328
    7. 'Rx' → logprob: -15.626972198486328
    8. '   ' → logprob: -15.751972198486328
    9. '       ' → logprob: -16.626972198486328
    10. 'rxjs' → logprob: -16.751972198486328

Token 827: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '[' → logprob: -18.25
    3. '2' → logprob: -18.5
    4. '```' → logprob: -19.5
    5. ' ' → logprob: -19.875
    6. 'ry' → logprob: -20.3125
    7. ' ry' → logprob: -20.375
    8. '
' → logprob: -20.375
    9. '১' → logprob: -20.5
    10. '   ' → logprob: -20.5

Token 828: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002727793762460351
    2. ' ry' → logprob: -8.625272750854492
    3. 'ry' → logprob: -9.750272750854492
    4. '1' → logprob: -10.500272750854492
    5. ' ,' → logprob: -12.375272750854492
    6. 'rx' → logprob: -13.875272750854492
    7. 'Ry' → logprob: -14.000272750854492
    8. '   ' → logprob: -14.375272750854492
    9. '[' → logprob: -15.875272750854492
    10. ' ' → logprob: -16.125272750854492

Token 829: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.002479700604453683
    2. ' ry' → logprob: -6.002479553222656
    3. 'rx' → logprob: -12.877479553222656
    4. 'Ry' → logprob: -13.877479553222656
    5. ' ' → logprob: -15.377479553222656
    6. '
' → logprob: -15.877479553222656
    7. 'ryl' → logprob: -17.002479553222656
    8. 'RY' → logprob: -17.127479553222656
    9. 'ray' → logprob: -17.252479553222656
    10. '   ' → logprob: -17.377479553222656

Token 830: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. 'ry' → logprob: -19.1875
    3. '১' → logprob: -19.3125
    4. '१' → logprob: -19.375
    5. '۱' → logprob: -19.375
    6. '１' → logprob: -20.0
    7. '[' → logprob: -20.0625
    8. '```' → logprob: -20.1875
    9. 'Ry' → logprob: -20.3125
    10. 'y' → logprob: -20.4375

Token 831: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6784371137619019
    2. ')])' → logprob: -1.8034371137619019
    3. '))' → logprob: -1.9284371137619019
    4. ')]' → logprob: -2.6784372329711914
    5. ')
' → logprob: -3.0534372329711914
    6. '   ' → logprob: -3.3034372329711914
    7. '))
' → logprob: -4.553437232971191
    8. ')]
' → logprob: -4.928437232971191
    9. ')],' → logprob: -5.553437232971191
    10. '),
' → logprob: -6.178437232971191

Token 832: '   ' (ID: 271)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.25357377529144287
    2. '   ' → logprob: -1.5035737752914429
    3. ']
' → logprob: -6.628573894500732
    4. ')' → logprob: -8.253573417663574
    5. ',' → logprob: -10.878573417663574
    6. '])' → logprob: -11.253573417663574
    7. ' ]' → logprob: -11.503573417663574
    8. ')]' → logprob: -11.753573417663574
    9. ',
' → logprob: -12.753573417663574
    10. '<|end|>' → logprob: -13.378573417663574

Token 833: ' ]
' (ID: 10213)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6334009170532227
    2. ']' → logprob: -0.7584009170532227
    3. ']
' (adapté à ' ]
') → logprob: -7.633400917053223
    4. ')' → logprob: -8.508400917053223
    5. ' ]' → logprob: -10.633400917053223
    6. 'for' → logprob: -10.758400917053223
    7. ' for' → logprob: -11.008400917053223
    8. '<|end|>' → logprob: -11.008400917053223
    9. ',' → logprob: -11.633400917053223
    10. 'def' → logprob: -12.258400917053223

Token 834: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4746505320072174
    2. '   ' → logprob: -0.974650502204895
    3. ' for' → logprob: -7.4746503829956055
    4. '```' → logprob: -12.849650382995605
    5. '
' → logprob: -12.974650382995605
    6. '	for' → logprob: -14.349650382995605
    7. '    
' → logprob: -15.224650382995605
    8. ' ' → logprob: -16.349651336669922
    9. '  ' → logprob: -16.474651336669922
    10. 'def' → logprob: -17.849651336669922

Token 835: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.018695203587412834
    2. '   ' → logprob: -4.01869535446167
    3. ' for' → logprob: -7.51869535446167
    4. '
' → logprob: -13.518694877624512
    5. '	for' → logprob: -14.018694877624512
    6. '```' → logprob: -16.893695831298828
    7. '    
' → logprob: -17.268695831298828
    8. ' ' → logprob: -17.893695831298828
    9. '  ' → logprob: -18.768695831298828
    10. '`' → logprob: -20.893695831298828

Token 836: ' (' (ID: 350)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.5147908329963684
    2. '(edge' → logprob: -1.0147907733917236
    3. '(e' → logprob: -4.264791011810303
    4. '(p' → logprob: -4.514791011810303
    5. 'p' → logprob: -5.264791011810303
    6. 'e' → logprob: -5.514791011810303
    7. ' edge' → logprob: -5.514791011810303
    8. ' (' → logprob: -7.139791011810303
    9. '(' → logprob: -7.764791011810303
    10. '(u' → logprob: -9.139790534973145

Token 837: 'ex' (ID: 490)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1770143061876297
    2. 'e' → logprob: -2.4270143508911133
    3. '(p' → logprob: -3.4270143508911133
    4. 'edge' → logprob: -3.4270143508911133
    5. '(e' → logprob: -4.927014350891113
    6. '(edge' → logprob: -7.052014350891113
    7. 'start' → logprob: -7.927014350891113
    8. '(x' → logprob: -8.552014350891113
    9. '(u' → logprob: -9.177014350891113
    10. '(a' → logprob: -10.177014350891113

Token 838: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14435258507728577
    2. ',' → logprob: -2.019352674484253
    3. '[' → logprob: -7.769352436065674
    4. 'a' → logprob: -7.769352436065674
    5. '_,' → logprob: -8.144352912902832
    6. 'x' → logprob: -8.644352912902832
    7. '0' → logprob: -9.144352912902832
    8. ',
' → logprob: -10.269352912902832
    9. '(' → logprob: -10.394352912902832
    10. ')' → logprob: -10.519352912902832

Token 839: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.5716304410016164e-05
    2. ' ,' → logprob: -10.375035285949707
    3. ',
' → logprob: -12.625035285949707
    4. '‌,' → logprob: -15.625035285949707
    5. '),' → logprob: -15.750035285949707
    6. 'ex' → logprob: -16.000036239624023
    7. ',e' → logprob: -16.250036239624023
    8. '(ex' → logprob: -16.375036239624023
    9. '<|end|>' → logprob: -16.500036239624023
    10. ',exports' → logprob: -16.625036239624023

Token 840: ' ey' (ID: 17600)
  Prédit: 'ey'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ey' → logprob: -9.531813702778891e-05
    2. 'ex' → logprob: -9.62509536743164
    3. ' ey' → logprob: -10.50009536743164
    4. 'e' → logprob: -14.25009536743164
    5. 'eyey' → logprob: -14.37509536743164
    6. '(' → logprob: -15.37509536743164
    7. 'eys' → logprob: -17.12509536743164
    8. 'ee' → logprob: -17.37509536743164
    9. '   ' → logprob: -17.62509536743164
    10. '
' → logprob: -17.75009536743164

Token 841: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12283799797296524
    2. '),' → logprob: -2.372838020324707
    3. ',' → logprob: -3.872838020324707
    4. '),(' → logprob: -6.497838020324707
    5. 'ex' → logprob: -9.872838020324707
    6. '
' → logprob: -12.122838020324707
    7. ')' → logprob: -12.372838020324707
    8. '```' → logprob: -12.872838020324707
    9. '},' → logprob: -13.122838020324707
    10. '(ex' → logprob: -13.372838020324707

Token 842: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.004032452590763569
    2. '),(' → logprob: -5.629032611846924
    3. ',' → logprob: -7.754032611846924
    4. ' ),' → logprob: -13.629032135009766
    5. '(ex' → logprob: -14.629032135009766
    6. '
' → logprob: -15.004032135009766
    7. '},' → logprob: -15.004032135009766
    8. ')' → logprob: -15.254032135009766
    9. ',),' → logprob: -15.254032135009766
    10. '   ' → logprob: -16.004032135009766

Token 843: ' (' (ID: 350)
  Prédit: '(ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ex' → logprob: -0.00015991552209015936
    2. ' (' → logprob: -8.750160217285156
    3. '(' → logprob: -14.250160217285156
    4. '(exc' → logprob: -14.625160217285156
    5. '(e' → logprob: -15.500160217285156
    6. '(exp' → logprob: -16.875160217285156
    7. '   ' → logprob: -17.375160217285156
    8. '(ext' → logprob: -17.625160217285156
    9. '(ed' → logprob: -18.250160217285156
    10. '(ec' → logprob: -18.250160217285156

Token 844: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -6.704273118884885e-07
    2. ' ex' → logprob: -14.500000953674316
    3. '(ex' → logprob: -16.5
    4. '	ex' → logprob: -19.25
    5. ''ex' → logprob: -21.25
    6. 'e' → logprob: -21.875
    7. 'ey' → logprob: -21.875
    8. '   ' → logprob: -22.375
    9. '
' → logprob: -22.5
    10. 'exa' → logprob: -22.75

Token 845: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001495484757469967
    2. 'x' → logprob: -9.500149726867676
    3. '1' → logprob: -9.875149726867676
    4. 'ex' → logprob: -11.750149726867676
    5. '0' → logprob: -11.875149726867676
    6. ',' → logprob: -11.875149726867676
    7. '```' → logprob: -14.000149726867676
    8. '3' → logprob: -16.62514877319336
    9. ' ' → logprob: -16.62514877319336
    10. '
' → logprob: -16.62514877319336

Token 846: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.704273118884885e-07
    2. ' ,' → logprob: -14.500000953674316
    3. '<|end|>' → logprob: -16.625
    4. ',
' → logprob: -17.875
    5. 'ex' → logprob: -18.875
    6. '‌,' → logprob: -19.125
    7. '[' → logprob: -20.25
    8. '_,' → logprob: -20.5
    9. '<|end|>' → logprob: -21.125
    10. '```' → logprob: -21.5

Token 847: ' ey' (ID: 17600)
  Prédit: 'ey'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ey' → logprob: -0.008834258653223515
    2. ' ey' → logprob: -5.258834362030029
    3. 'ex' → logprob: -5.633834362030029
    4. ' ex' → logprob: -11.008833885192871
    5. 'eyey' → logprob: -14.008833885192871
    6. 'ew' → logprob: -14.508833885192871
    7. 'e' → logprob: -15.383833885192871
    8. 'eyo' → logprob: -15.383833885192871
    9. 'ery' → logprob: -15.883833885192871
    10. 'eyd' → logprob: -16.133834838867188

Token 848: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '1' → logprob: -17.5
    3. '```' → logprob: -19.5
    4. ',' → logprob: -20.875
    5. '
' → logprob: -21.375
    6. ' ' → logprob: -21.375
    7. ')' → logprob: -21.375
    8. 'ey' → logprob: -21.625
    9. '۲' → logprob: -21.625
    10. '₂' → logprob: -22.125

Token 849: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1637164789135568e-05
    2. ' )' → logprob: -12.000011444091797
    3. 'in' → logprob: -12.500011444091797
    4. ' in' → logprob: -14.500011444091797
    5. ')
' → logprob: -14.875011444091797
    6. '   ' → logprob: -14.875011444091797
    7. '):
' → logprob: -16.000011444091797
    8. '),' → logprob: -16.375011444091797
    9. '):' → logprob: -16.625011444091797
    10. ' ' → logprob: -17.625011444091797

Token 850: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08917315304279327
    2. 'in' → logprob: -2.4641730785369873
    3. '   ' → logprob: -9.464173316955566
    4. ':' → logprob: -9.714173316955566
    5. ',' → logprob: -9.839173316955566
    6. '       ' → logprob: -11.089173316955566
    7. ':
' → logprob: -11.714173316955566
    8. '	in' → logprob: -12.214173316955566
    9. '<|end|>' → logprob: -12.714173316955566
    10. ' ' → logprob: -13.089173316955566

Token 851: ' rect' (ID: 13107)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -6.2729995988775045e-06
    2. ' rect' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.0000057220459
    4. '(rect' → logprob: -20.0000057220459
    5. '
' → logprob: -20.2500057220459
    6. '	rect' → logprob: -21.1250057220459
    7. ' ' → logprob: -21.2500057220459
    8. 'rec' → logprob: -22.5000057220459
    9. 'rest' → logprob: -22.6250057220459
    10. '[' → logprob: -22.8750057220459

Token 852: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -1.3856492842023727e-06
    2. 'edges' → logprob: -13.750000953674316
    3. 'ed' → logprob: -16.750001907348633
    4. 'ect' → logprob: -17.125001907348633
    5. '_angles' → logprob: -17.750001907348633
    6. '
' → logprob: -17.875001907348633
    7. '_ed' → logprob: -17.875001907348633
    8. '_' → logprob: -18.750001907348633
    9. '_
' → logprob: -18.875001907348633
    10. '```' → logprob: -19.000001907348633

Token 853: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12938760221004486
    2. ':
' → logprob: -2.129387617111206
    3. '       ' → logprob: -6.379387378692627
    4. '   ' → logprob: -7.754387378692627
    5. '):
' → logprob: -8.629387855529785
    6. '<|end|>' → logprob: -10.004387855529785
    7. ' :
' → logprob: -10.629387855529785
    8. '<|end|>' → logprob: -10.629387855529785
    9. ':

' → logprob: -11.379387855529785
    10. '):' → logprob: -11.504387855529785

Token 854: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00020938136731274426
    2. ' if' → logprob: -8.75020980834961
    3. '   ' → logprob: -10.12520980834961
    4. 'if' → logprob: -12.12520980834961
    5. '     ' → logprob: -14.00020980834961
    6. '        
' → logprob: -14.12520980834961
    7. '<|end|>' → logprob: -14.25020980834961
    8. '
' → logprob: -14.37520980834961
    9. '           ' → logprob: -14.62520980834961
    10. '```' → logprob: -14.75020980834961

Token 855: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.11427656561136246
    2. '       ' → logprob: -2.614276647567749
    3. ' if' → logprob: -3.364276647567749
    4. '   ' → logprob: -9.114276885986328
    5. '	if' → logprob: -9.614276885986328
    6. '
' → logprob: -13.739276885986328
    7. '    ' → logprob: -13.739276885986328
    8. '	   ' → logprob: -14.364276885986328
    9. '	' → logprob: -14.489276885986328
    10. '     ' → logprob: -15.239276885986328

Token 856: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.023246292024850845
    2. ' segments' → logprob: -3.7732462882995605
    3. 'segment' → logprob: -15.398246765136719
    4. '   ' → logprob: -15.523246765136719
    5. '_segments' → logprob: -15.648246765136719
    6. 'seg' → logprob: -16.27324676513672
    7. 'Segments' → logprob: -16.64824676513672
    8. 'lines' → logprob: -17.14824676513672
    9. 'line' → logprob: -17.27324676513672
    10. 's' → logprob: -17.39824676513672

Token 857: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -2.1008713702030946e-06
    2. 'inter' → logprob: -13.125001907348633
    3. '_in' → logprob: -18.000001907348633
    4. 's' → logprob: -18.125001907348633
    5. '_have' → logprob: -18.375001907348633
    6. '_are' → logprob: -18.875001907348633
    7. '_' → logprob: -19.000001907348633
    8. '_integr' → logprob: -19.250001907348633
    9. '_interrupt' → logprob: -19.375001907348633
    10. '_INTER' → logprob: -19.625001907348633

Token 858: 'sect' (ID: 16910)
  Prédit: 'sect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sect' → logprob: -0.055181048810482025
    2. 'ect' → logprob: -2.9301810264587402
    3. 'ct' → logprob: -8.680181503295898
    4. 'act' → logprob: -9.305181503295898
    5. '```' → logprob: -10.930181503295898
    6. 'uct' → logprob: -12.430181503295898
    7. 'es' → logprob: -13.305181503295898
    8. 'ict' → logprob: -13.430181503295898
    9. 'est' → logprob: -13.555181503295898
    10. 's' → logprob: -13.680181503295898

Token 859: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0007668639300391078
    2. '2' → logprob: -7.375766754150391
    3. '((' → logprob: -9.25076675415039
    4. '(p' → logprob: -10.87576675415039
    5. '(a' → logprob: -11.87576675415039
    6. '(ax' → logprob: -11.87576675415039
    7. '(' → logprob: -12.75076675415039
    8. '1' → logprob: -13.37576675415039
    9. '(x' → logprob: -14.12576675415039
    10. '```' → logprob: -14.25076675415039

Token 860: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003888470819219947
    2. '_' → logprob: -7.8753886222839355
    3. '((' → logprob: -12.375389099121094
    4. 'segment' → logprob: -14.250389099121094
    5. '(p' → logprob: -14.500389099121094
    6. '(x' → logprob: -14.625389099121094
    7. '1' → logprob: -15.062889099121094
    8. '(' → logprob: -15.125389099121094
    9. '(a' → logprob: -15.125389099121094
    10. '```' → logprob: -15.312889099121094

Token 861: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0020742444321513176
    2. '2' → logprob: -6.877074241638184
    3. '((' → logprob: -6.877074241638184
    4. '_d' → logprob: -12.502074241638184
    5. 'def' → logprob: -13.627074241638184
    6. 'D' → logprob: -13.877074241638184
    7. '(((' → logprob: -14.127074241638184
    8. 'д' → logprob: -14.502074241638184
    9. '(' → logprob: -14.502074241638184
    10. 'e' → logprob: -14.627074241638184

Token 862: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0001732663222355768
    2. '(ax' → logprob: -9.000173568725586
    3. '(' → logprob: -10.000173568725586
    4. '   ' → logprob: -12.750173568725586
    5. ' ((' → logprob: -14.250173568725586
    6. ' (' → logprob: -14.875173568725586
    7. ' ' → logprob: -15.250173568725586
    8. '  ' → logprob: -16.125173568725586
    9. '(
' → logprob: -16.250173568725586
    10. '[(' → logprob: -17.625173568725586

Token 863: 'ax' (ID: 1362)
  Prédit: 'ax'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.0019295861711725593
    2. '(ax' → logprob: -6.251929759979248
    3. ' ax' → logprob: -14.25192928314209
    4. '=ax' → logprob: -16.626930236816406
    5. '	ax' → logprob: -17.001930236816406
    6. 'a' → logprob: -17.001930236816406
    7. ' (' → logprob: -17.626930236816406
    8. '   ' → logprob: -17.876930236816406
    9. 'axs' → logprob: -17.876930236816406
    10. 'axon' → logprob: -17.876930236816406

Token 864: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010537689086049795
    2. 'ay' → logprob: -6.876053810119629
    3. ' ,' → logprob: -10.876053810119629
    4. ' ay' → logprob: -14.001053810119629
    5. ',
' → logprob: -14.376053810119629
    6. '[' → logprob: -15.001053810119629
    7. 'ey' → logprob: -16.126052856445312
    8. 'ax' → logprob: -16.626052856445312
    9. '(' → logprob: -17.126052856445312
    10. '),' → logprob: -17.251052856445312

Token 865: 'ay' (ID: 356)
  Prédit: 'ay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ay' → logprob: -1.0206720617134124e-05
    2. ' ay' → logprob: -11.50001049041748
    3. '
' → logprob: -20.500009536743164
    4. 'aye' → logprob: -21.375009536743164
    5. '(' → logprob: -21.625009536743164
    6. 'ays' → logprob: -21.625009536743164
    7. 'aybe' → logprob: -21.625009536743164
    8. '   ' → logprob: -21.750009536743164
    9. '-ay' → logprob: -21.750009536743164
    10. 'uy' → logprob: -22.000009536743164

Token 866: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.21834398806095123
    2. ',' → logprob: -1.71834397315979
    3. '),(' → logprob: -4.093344211578369
    4. ' ,' → logprob: -10.218343734741211
    5. ',(' → logprob: -10.468343734741211
    6. ' ),' → logprob: -10.843343734741211
    7. '),
' → logprob: -11.843343734741211
    8. ',),' → logprob: -12.343343734741211
    9. '       ' → logprob: -12.593343734741211
    10. '>,' → logprob: -13.218343734741211

Token 867: ' (' (ID: 350)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.00012570773833431304
    2. ' (' → logprob: -9.000125885009766
    3. '   ' → logprob: -14.250125885009766
    4. '(bb' → logprob: -14.750125885009766
    5. '(bt' → logprob: -15.375125885009766
    6. '(bs' → logprob: -16.250125885009766
    7. '(' → logprob: -16.250125885009766
    8. '  ' → logprob: -16.500125885009766
    9. '(bp' → logprob: -16.750125885009766
    10. ' ' → logprob: -16.875125885009766

Token 868: 'bx' (ID: 34802)
  Prédit: 'bx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bx' → logprob: -7.97024549683556e-05
    2. ' bx' → logprob: -9.500080108642578
    3. 'ex' → logprob: -12.375080108642578
    4. '(b' → logprob: -16.000080108642578
    5. '(' → logprob: -16.250080108642578
    6. '
' → logprob: -16.250080108642578
    7. '```' → logprob: -16.500080108642578
    8. '   ' → logprob: -17.000080108642578
    9. ' (' → logprob: -17.125080108642578
    10. ' ' → logprob: -17.625080108642578

Token 869: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002473516622558236
    2. '),(' → logprob: -6.6274733543396
    3. ',(' → logprob: -7.2524733543396
    4. '(' → logprob: -8.252473831176758
    5. '),' → logprob: -8.752473831176758
    6. '```' → logprob: -11.752473831176758
    7. ' ,' → logprob: -13.252473831176758
    8. ' (' → logprob: -13.377473831176758
    9. ',
' → logprob: -13.627473831176758
    10. 'by' → logprob: -13.752473831176758

Token 870: 'by' (ID: 2345)
  Prédit: 'by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.0014217838179320097
    2. '(by' → logprob: -7.001421928405762
    3. '(' → logprob: -7.626421928405762
    4. ' (' → logprob: -11.001421928405762
    5. ' by' → logprob: -13.126421928405762
    6. '(b' → logprob: -13.376421928405762
    7. '```' → logprob: -13.751421928405762
    8. 'bx' → logprob: -14.876421928405762
    9. 'ay' → logprob: -15.376421928405762
    10. 'By' → logprob: -15.501421928405762

Token 871: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10149648040533066
    2. '),' → logprob: -2.351496458053589
    3. ' ,' → logprob: -7.226496696472168
    4. '),(' → logprob: -7.976496696472168
    5. ',(' → logprob: -8.601496696472168
    6. ' ),' → logprob: -11.601496696472168
    7. ',
' → logprob: -12.101496696472168
    8. '(' → logprob: -12.351496696472168
    9. '   ' → logprob: -12.601496696472168
    10. '),
' → logprob: -12.851496696472168

Token 872: ' (' (ID: 350)
  Prédit: '(ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ex' → logprob: -0.0010033934377133846
    2. ' (' → logprob: -7.126003265380859
    3. '(' → logprob: -8.62600326538086
    4. '(e' → logprob: -12.25100326538086
    5. '(exc' → logprob: -12.62600326538086
    6. '   ' → logprob: -12.87600326538086
    7. '(ec' → logprob: -13.62600326538086
    8. '(exp' → logprob: -13.75100326538086
    9. '(en' → logprob: -14.00100326538086
    10. '(ed' → logprob: -14.00100326538086

Token 873: 'ex' (ID: 490)
  Prédit: '(ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ex' → logprob: -0.001521049183793366
    2. 'ex' → logprob: -6.501521110534668
    3. ' (' → logprob: -11.126521110534668
    4. '/ex' → logprob: -13.876521110534668
    5. '   ' → logprob: -14.001521110534668
    6. ''ex' → logprob: -14.501521110534668
    7. '(exc' → logprob: -15.251521110534668
    8. '	ex' → logprob: -15.376521110534668
    9. ' ex' → logprob: -15.751521110534668
    10. '  ' → logprob: -15.876521110534668

Token 874: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. 'ex' → logprob: -14.250000953674316
    3. 'x' → logprob: -17.875
    4. '(' → logprob: -18.875
    5. ',' → logprob: -19.0
    6. '```' → logprob: -19.5
    7. '[' → logprob: -20.0
    8. 'e' → logprob: -20.125
    9. '2' → logprob: -20.125
    10. '(ex' → logprob: -20.5

Token 875: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.8889261304575484e-06
    2. ' ,' → logprob: -12.750003814697266
    3. ',
' → logprob: -14.375003814697266
    4. '<|end|>' → logprob: -15.875003814697266
    5. 'ey' → logprob: -16.250003814697266
    6. '‌,' → logprob: -16.875003814697266
    7. '```' → logprob: -18.625003814697266
    8. '),' → logprob: -19.250003814697266
    9. ',y' → logprob: -19.375003814697266
    10. '<|end|>' → logprob: -19.500003814697266

Token 876: 'ey' (ID: 806)
  Prédit: 'ey'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ey' → logprob: -9.088346359931165e-07
    2. ' ey' → logprob: -14.000000953674316
    3. 'ay' → logprob: -18.25
    4. 'eyey' → logprob: -18.75
    5. 'eye' → logprob: -20.5
    6. 'Ey' → logprob: -20.625
    7. 'ery' → logprob: -20.625
    8. 'ew' → logprob: -20.875
    9. 'iy' → logprob: -21.125
    10. 'uy' → logprob: -21.25

Token 877: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '```' → logprob: -19.375
    3. ',' → logprob: -19.75
    4. 'ey' → logprob: -20.375
    5. 'ry' → logprob: -20.75
    6. 'ex' → logprob: -21.75
    7. '[' → logprob: -22.0
    8. 'y' → logprob: -22.25
    9. ')' → logprob: -22.25
    10. '``' → logprob: -22.375

Token 878: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0009231308358721435
    2. ',' → logprob: -7.000923156738281
    3. '),(' → logprob: -11.500923156738281
    4. ' ),' → logprob: -14.250923156738281
    5. ')' → logprob: -14.625923156738281
    6. ',),' → logprob: -15.750923156738281
    7. '),
' → logprob: -16.00092315673828
    8. ' ,' → logprob: -16.37592315673828
    9. '},' → logprob: -17.12592315673828
    10. '   ' → logprob: -17.50092315673828

Token 879: ' (' (ID: 350)
  Prédit: '(ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ex' → logprob: -0.0009120595059357584
    2. ' (' → logprob: -7.000912189483643
    3. '(' → logprob: -15.375911712646484
    4. '   ' → logprob: -16.500911712646484
    5. '(exc' → logprob: -16.625911712646484
    6. '(EX' → logprob: -16.875911712646484
    7. '(exchange' → logprob: -17.750911712646484
    8. '(em' → logprob: -18.500911712646484
    9. '(exp' → logprob: -18.625911712646484
    10. '/ex' → logprob: -18.750911712646484

Token 880: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -1.2233183042553719e-05
    2. '(ex' → logprob: -11.500012397766113
    3. ' ex' → logprob: -13.375012397766113
    4. 'ey' → logprob: -14.875012397766113
    5. '(' → logprob: -15.875012397766113
    6. '	ex' → logprob: -17.750011444091797
    7. '   ' → logprob: -18.250011444091797
    8. ''ex' → logprob: -18.375011444091797
    9. '```' → logprob: -18.875011444091797
    10. ')' → logprob: -19.000011444091797

Token 881: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004353181866463274
    2. 'ex' → logprob: -7.7504353523254395
    3. 'x' → logprob: -12.500434875488281
    4. 'ey' → logprob: -14.500434875488281
    5. 'e' → logprob: -15.125434875488281
    6. '```' → logprob: -17.12543487548828
    7. '
' → logprob: -17.50043487548828
    8. ' ex' → logprob: -17.75043487548828
    9. '₂' → logprob: -18.00043487548828
    10. '(ex' → logprob: -18.25043487548828

Token 882: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.8889261304575484e-06
    2. 'ey' → logprob: -12.875003814697266
    3. ' ,' → logprob: -14.375003814697266
    4. ',
' → logprob: -14.500003814697266
    5. '```' → logprob: -16.125003814697266
    6. 'ex' → logprob: -16.625003814697266
    7. '
' → logprob: -18.250003814697266
    8. '1' → logprob: -18.250003814697266
    9. ' ey' → logprob: -18.875003814697266
    10. ',\
' → logprob: -19.500003814697266

Token 883: 'ey' (ID: 806)
  Prédit: 'ey'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ey' → logprob: -4.36574100604048e-06
    2. ' ey' → logprob: -12.500004768371582
    3. 'ex' → logprob: -14.250004768371582
    4. 'eyey' → logprob: -18.375003814697266
    5. '
' → logprob: -18.750003814697266
    6. 'ew' → logprob: -20.000003814697266
    7. 'eye' → logprob: -20.000003814697266
    8. '```' → logprob: -20.875003814697266
    9. 'e' → logprob: -21.000003814697266
    10. '   ' → logprob: -21.125003814697266

Token 884: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.372294698550832e-06
    2. '1' → logprob: -12.000009536743164
    3. 'ey' → logprob: -13.250009536743164
    4. ' ey' → logprob: -14.125009536743164
    5. 'y' → logprob: -16.125009536743164
    6. ')' → logprob: -16.125009536743164
    7. '
' → logprob: -16.500009536743164
    8. 'ry' → logprob: -16.625009536743164
    9. '(' → logprob: -16.750009536743164
    10. '```' → logprob: -17.000009536743164

Token 885: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5845012068748474
    2. '):' → logprob: -1.0845012664794922
    3. ')):
' → logprob: -2.584501266479492
    4. ')):' → logprob: -3.584501266479492
    5. ')' → logprob: -7.334501266479492
    6. '))' → logprob: -8.334501266479492
    7. '       ' → logprob: -8.459501266479492
    8. '):
' → logprob: -8.834501266479492
    9. ')):
' → logprob: -9.459501266479492
    10. '   ' → logprob: -10.834501266479492

Token 886: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010580805974313989
    2. '       ' → logprob: -9.875105857849121
    3. 'return' → logprob: -10.125105857849121
    4. ' return' → logprob: -12.250105857849121
    5. '               ' → logprob: -12.375105857849121
    6. '	       ' → logprob: -13.500105857849121
    7. '          ' → logprob: -13.500105857849121
    8. '		' → logprob: -14.125105857849121
    9. '
' → logprob: -14.125105857849121
    10. '```' → logprob: -15.500105857849121

Token 887: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2590274214744568
    2. '       ' → logprob: -2.0090274810791016
    3. '           ' → logprob: -2.7590274810791016
    4. ' return' → logprob: -3.5090274810791016
    5. '               ' → logprob: -7.634027481079102
    6. '   ' → logprob: -8.759027481079102
    7. '	return' → logprob: -8.884027481079102
    8. '
' → logprob: -12.134027481079102
    9. '	       ' → logprob: -12.634027481079102
    10. ':return' → logprob: -12.634027481079102

Token 888: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.5048530030981055e-06
    2. ' True' → logprob: -13.500001907348633
    3. '(True' → logprob: -23.625001907348633
    4. 'False' → logprob: -24.125001907348633
    5. '=True' → logprob: -24.750001907348633
    6. 'true' → logprob: -25.250001907348633
    7. '
' → logprob: -25.875001907348633
    8. 'Tr' → logprob: -26.375001907348633
    9. '   ' → logprob: -26.875001907348633
    10. 'Yes' → logprob: -27.500001907348633

Token 889: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011796683247666806
    2. 'return' → logprob: -9.375118255615234
    3. '
' → logprob: -10.750118255615234
    4. ' return' → logprob: -12.000118255615234
    5. '	return' → logprob: -12.500118255615234
    6. '    
' → logprob: -13.625118255615234
    7. '```' → logprob: -15.250118255615234
    8. '       ' → logprob: -16.375118255615234
    9. '   ' → logprob: -17.250118255615234
    10. ':return' → logprob: -17.625118255615234

Token 890: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004995359340682626
    2. 'return' → logprob: -7.625499725341797
    3. ' return' → logprob: -12.375499725341797
    4. '	return' → logprob: -12.625499725341797
    5. '```' → logprob: -12.750499725341797
    6. '
' → logprob: -14.000499725341797
    7. '       ' → logprob: -16.125499725341797
    8. 'Return' → logprob: -17.000499725341797
    9. '    
' → logprob: -17.250499725341797
    10. '   ' → logprob: -17.375499725341797

Token 891: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5772231817245483
    2. '   ' → logprob: -0.8272231817245483
    3. ' return' → logprob: -7.202223300933838
    4. '	return' → logprob: -8.45222282409668
    5. '```' → logprob: -8.82722282409668
    6. 'False' → logprob: -8.95222282409668
    7. '
' → logprob: -10.95222282409668
    8. ' ' → logprob: -11.45222282409668
    9. 'Return' → logprob: -12.20222282409668
    10. 'None' → logprob: -12.32722282409668

Token 892: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.011047814972698689
    2. ' False' → logprob: -4.511047840118408
    3. '(False' → logprob: -21.13604736328125
    4. 'false' → logprob: -22.38604736328125
    5. '_false' → logprob: -23.38604736328125
    6. '=False' → logprob: -25.01104736328125
    7. '.False' → logprob: -25.01104736328125
    8. 'True' → logprob: -25.51104736328125
    9. ' false' → logprob: -25.76104736328125
    10. 'FALSE' → logprob: -26.51104736328125

Token 893: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003943304473068565
    2. '
' → logprob: -9.000393867492676
    3. 'class' → logprob: -9.000393867492676
    4. 'import' → logprob: -9.750393867492676
    5. '<|end|>' → logprob: -9.750393867492676
    6. '```' → logprob: -10.875393867492676
    7. '#' → logprob: -12.125393867492676
    8. '\' → logprob: -13.875393867492676
    9. 'from' → logprob: -14.000393867492676
    10. '<|end|>' → logprob: -14.500393867492676

Token 894: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00013214473437983543
    2. 'class' → logprob: -9.00013256072998
    3. 'import' → logprob: -12.12513256072998
    4. '
' → logprob: -13.25013256072998
    5. '```' → logprob: -13.50013256072998
    6. '#' → logprob: -17.000131607055664
    7. '

' → logprob: -17.875131607055664
    8. '  
' → logprob: -18.125131607055664
    9. ' def' → logprob: -18.250131607055664
    10. 'from' → logprob: -18.250131607055664

Token 895: ' vertical' (ID: 17679)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.0798625946044922
    2. 'main' → logprob: -2.329862594604492
    3. 'circle' → logprob: -2.954862594604492
    4. ' min' → logprob: -3.204862594604492
    5. ' find' → logprob: -3.329862594604492
    6. ' minimal' → logprob: -3.454862594604492
    7. 'min' → logprob: -3.454862594604492
    8. ' shortest' → logprob: -3.704862594604492
    9. ' circle' → logprob: -3.829862594604492
    10. 'closest' → logprob: -3.829862594604492

Token 896: '_distance' (ID: 45537)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.008105755783617496
    2. '_segment' → logprob: -5.008105754852295
    3. '_distance' → logprob: -7.633105754852295
    4. '_inter' → logprob: -8.133106231689453
    5. '_dist' → logprob: -9.133106231689453
    6. '_cut' → logprob: -9.383106231689453
    7. '_lines' → logprob: -9.758106231689453
    8. '_overlap' → logprob: -9.758106231689453
    9. '_def' → logprob: -9.883106231689453
    10. '_split' → logprob: -10.133106231689453

Token 897: '_block' (ID: 15644)
  Prédit: '(ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ax' → logprob: -0.034889791160821915
    2. '(x' → logprob: -3.9098896980285645
    3. '(' → logprob: -4.9098896980285645
    4. '(px' → logprob: -5.5348896980285645
    5. '_between' → logprob: -7.0348896980285645
    6. '_to' → logprob: -7.2848896980285645
    7. '(a' → logprob: -7.9098896980285645
    8. ' (' → logprob: -8.409890174865723
    9. '(line' → logprob: -8.409890174865723
    10. '((' → logprob: -9.034890174865723

Token 898: '(ball' (ID: 170062)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -1.1930160522460938
    2. '(rx' → logprob: -1.1930160522460938
    3. '(ax' → logprob: -1.5680160522460938
    4. '(x' → logprob: -2.0680160522460938
    5. '(block' → logprob: -4.568016052246094
    6. '(' → logprob: -4.693016052246094
    7. 'ade' → logprob: -4.818016052246094
    8. 'ing' → logprob: -4.943016052246094
    9. '(rect' → logprob: -5.068016052246094
    10. 'er' → logprob: -5.193016052246094

Token 899: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.6514878273010254
    2. ',' → logprob: -1.1514878273010254
    3. 'x' → logprob: -1.9014878273010254
    4. '_y' → logprob: -5.901487827301025
    5. '_center' → logprob: -6.026487827301025
    6. '):' → logprob: -6.151487827301025
    7. '(x' → logprob: -6.151487827301025
    8. '_pos' → logprob: -7.151487827301025
    9. 'ed' → logprob: -7.276487827301025
    10. ',x' → logprob: -7.526487827301025

Token 900: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017863049288280308
    2. ',
' → logprob: -9.875178337097168
    3. ',b' → logprob: -10.000178337097168
    4. ' ,' → logprob: -10.375178337097168
    5. '_,' → logprob: -10.625178337097168
    6. '   ' → logprob: -12.500178337097168
    7. 'def' → logprob: -12.625178337097168
    8. '_ball' → logprob: -12.875178337097168
    9. '(ball' → logprob: -13.000178337097168
    10. '):
' → logprob: -13.250178337097168

Token 901: ' ball' (ID: 7880)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.00035250463406555355
    2. ' ball' → logprob: -8.12535285949707
    3. 'block' → logprob: -9.87535285949707
    4. '   ' → logprob: -13.87535285949707
    5. 'wall' → logprob: -14.00035285949707
    6. '(ball' → logprob: -14.12535285949707
    7. '```' → logprob: -14.62535285949707
    8. 'bal' → logprob: -15.00035285949707
    9. '_ball' → logprob: -15.12535285949707
    10. 'y' → logprob: -15.37535285949707

Token 902: '_y' (ID: 9410)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3257685899734497
    2. '_y' → logprob: -1.8257685899734497
    3. 'y' → logprob: -2.20076847076416
    4. ',y' → logprob: -5.70076847076416
    5. 'x' → logprob: -7.07576847076416
    6. 'ball' → logprob: -7.57576847076416
    7. '_x' → logprob: -7.70076847076416
    8. '```' → logprob: -8.32576847076416
    9. ' ,' → logprob: -8.57576847076416
    10. 'Y' → logprob: -9.32576847076416

Token 903: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007612687186338007
    2. ' ,' → logprob: -7.750761032104492
    3. ',
' → logprob: -8.375761032104492
    4. '   ' → logprob: -10.250761032104492
    5. ',b' → logprob: -10.875761032104492
    6. '):
' → logprob: -11.375761032104492
    7. '):' → logprob: -12.125761032104492
    8. 'def' → logprob: -12.500761032104492
    9. ',line' → logprob: -13.125761032104492
    10. ',p' → logprob: -13.375761032104492

Token 904: ' r' (ID: 428)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.38696014881134033
    2. 'rect' → logprob: -1.6369601488113403
    3. 'ball' → logprob: -2.761960029602051
    4. 'p' → logprob: -4.511960029602051
    5. 'ob' → logprob: -4.636960029602051
    6. 'rx' → logprob: -5.511960029602051
    7. 'wall' → logprob: -5.511960029602051
    8. 'platform' → logprob: -6.011960029602051
    9. 'x' → logprob: -6.136960029602051
    10. 'goal' → logprob: -6.136960029602051

Token 905: ',' (ID: 11)
  Prédit: 'ect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.565406858921051
    2. 'x' → logprob: -1.3154067993164062
    3. 'adius' → logprob: -2.3154067993164062
    4. ',' → logprob: -2.9404067993164062
    5. 'ight' → logprob: -6.190406799316406
    6. 'ec' → logprob: -6.440406799316406
    7. 'ad' → logprob: -6.565406799316406
    8. 'ef' → logprob: -6.815406799316406
    9. 'ects' → logprob: -6.940406799316406
    10. '1' → logprob: -7.315406799316406

Token 906: ' block' (ID: 4355)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.48758113384246826
    2. 'block' → logprob: -1.6125811338424683
    3. 'rx' → logprob: -2.987581253051758
    4. 'ob' → logprob: -3.987581253051758
    5. 'bx' → logprob: -4.112581253051758
    6. 'obs' → logprob: -4.237581253051758
    7. 'x' → logprob: -4.612581253051758
    8. 'plat' → logprob: -4.862581253051758
    9. 'platform' → logprob: -4.987581253051758
    10. 'wall' → logprob: -5.112581253051758

Token 907: '):
' (ID: 1883)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.1272178739309311
    2. 'x' → logprob: -2.1272177696228027
    3. '):
' → logprob: -9.127218246459961
    4. '_rx' → logprob: -9.502218246459961
    5. '_rect' → logprob: -10.627218246459961
    6. '):' → logprob: -11.002218246459961
    7. ')' → logprob: -11.627218246459961
    8. ',' → logprob: -11.752218246459961
    9. '_blocks' → logprob: -11.877218246459961
    10. '_tx' → logprob: -12.127218246459961

Token 908: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000104616025055293
    2. '(ax' → logprob: -10.250104904174805
    3. '(' → logprob: -10.625104904174805
    4. '(block' → logprob: -11.500104904174805
    5. '```' → logprob: -11.500104904174805
    6. ':' → logprob: -11.875104904174805
    7. '(x' → logprob: -12.250104904174805
    8. 'bx' → logprob: -12.875104904174805
    9. 'ax' → logprob: -12.875104904174805
    10. 'x' → logprob: -13.125104904174805

Token 909: ' #' (ID: 1069)
  Prédit: 'bx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bx' → logprob: -0.10033563524484634
    2. '   ' → logprob: -2.4753355979919434
    3. 'rx' → logprob: -5.725335597991943
    4. 'block' → logprob: -5.975335597991943
    5. ' bx' → logprob: -6.225335597991943
    6. 'ax' → logprob: -7.100335597991943
    7. '(rx' → logprob: -7.475335597991943
    8. 'x' → logprob: -7.475335597991943
    9. 'ball' → logprob: -7.600335597991943
    10. '(x' → logprob: -7.725335597991943

Token 910: ' Calculate' (ID: 38942)
  Prédit: 'bx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bx' → logprob: -0.07941382378339767
    2. 'block' → logprob: -4.329413890838623
    3. 'x' → logprob: -4.454413890838623
    4. '(x' → logprob: -4.454413890838623
    5. 'ax' → logprob: -4.454413890838623
    6. 'rx' → logprob: -4.579413890838623
    7. '   ' → logprob: -5.454413890838623
    8. '#' → logprob: -5.454413890838623
    9. '(block' → logprob: -6.204413890838623
    10. 'ball' → logprob: -6.204413890838623

Token 911: ' the' (ID: 290)
  Prédit: 'bx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bx' → logprob: -0.28380292654037476
    2. 'block' → logprob: -1.9088029861450195
    3. 'ball' → logprob: -3.1588029861450195
    4. 'min' → logprob: -3.5338029861450195
    5. 'ax' → logprob: -5.2838029861450195
    6. '#' → logprob: -5.5338029861450195
    7. 'x' → logprob: -5.5338029861450195
    8. 'inf' → logprob: -5.9088029861450195
    9. 'vx' → logprob: -6.1588029861450195
    10. '   ' → logprob: -6.5338029861450195

Token 912: ' vertical' (ID: 17679)
  Prédit: 'bx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bx' → logprob: -0.20845572650432587
    2. '#' → logprob: -3.083455801010132
    3. 'x' → logprob: -3.333455801010132
    4. 'block' → logprob: -3.583455801010132
    5. 'min' → logprob: -3.833455801010132
    6. 'rx' → logprob: -3.833455801010132
    7. 'ball' → logprob: -4.708455562591553
    8. 'ax' → logprob: -4.958455562591553
    9. 'vx' → logprob: -5.708455562591553
    10. 'dx' → logprob: -5.833455562591553

Token 913: ' clearance' (ID: 55271)
  Prédit: 'bx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bx' → logprob: -0.753985583782196
    2. 'distance' → logprob: -1.8789856433868408
    3. 'dist' → logprob: -2.003985643386841
    4. 'x' → logprob: -2.753985643386841
    5. 'ax' → logprob: -2.753985643386841
    6. 'dx' → logprob: -3.753985643386841
    7. '(ax' → logprob: -4.128985404968262
    8. 'ball' → logprob: -4.253985404968262
    9. 'block' → logprob: -4.503985404968262
    10. '(x' → logprob: -4.628985404968262

Token 914: ' needed' (ID: 6118)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2089923620224
    2. '(ball' → logprob: -1.4589923620224
    3. 'bx' → logprob: -1.9589923620224
    4. '(' → logprob: -2.3339924812316895
    5. 'ball' → logprob: -3.2089924812316895
    6. 'between' → logprob: -3.5839924812316895
    7. '(x' → logprob: -3.8339924812316895
    8. '(px' → logprob: -3.9589924812316895
    9. '(ax' → logprob: -4.0839924812316895
    10. '=' → logprob: -4.0839924812316895

Token 915: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45670658349990845
    2. 'bx' → logprob: -1.5817065238952637
    3. ' to' → logprob: -3.5817065238952637
    4. 'to' → logprob: -3.8317065238952637
    5. '(ball' → logprob: -4.456706523895264
    6. 'for' → logprob: -4.581706523895264
    7. '(ax' → logprob: -4.581706523895264
    8. 'ax' → logprob: -4.581706523895264
    9. 'between' → logprob: -4.831706523895264
    10. 'def' → logprob: -4.831706523895264

Token 916: ' roll' (ID: 8465)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -1.0115078687667847
    2. 'clear' → logprob: -1.1365078687667847
    3. 'avoid' → logprob: -1.7615078687667847
    4. 'raise' → logprob: -3.386507987976074
    5. 'lift' → logprob: -3.636507987976074
    6. 'reach' → logprob: -4.261507987976074
    7. 'jump' → logprob: -4.386507987976074
    8. 'ball' → logprob: -4.511507987976074
    9. 'place' → logprob: -4.761507987976074
    10. 'move' → logprob: -4.886507987976074

Token 917: ' the' (ID: 290)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.88168865442276
    2. 'over' → logprob: -1.8816885948181152
    3. 'the' → logprob: -2.0066885948181152
    4. 'past' → logprob: -2.0066885948181152
    5. 'up' → logprob: -3.0066885948181152
    6. '(ball' → logprob: -3.5066885948181152
    7. 'from' → logprob: -4.006688594818115
    8. 'through' → logprob: -4.256688594818115
    9. 'above' → logprob: -4.256688594818115
    10. 'around' → logprob: -4.506688594818115

Token 918: ' ball' (ID: 7880)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.0003743078850675374
    2. ' ball' → logprob: -9.000373840332031
    3. 'block' → logprob: -9.125373840332031
    4. 'r' → logprob: -9.875373840332031
    5. 'center' → logprob: -10.625373840332031
    6. '(ball' → logprob: -11.625373840332031
    7. 'circle' → logprob: -11.750373840332031
    8. 'x' → logprob: -11.750373840332031
    9. 'import' → logprob: -11.875373840332031
    10. 'radius' → logprob: -12.125373840332031

Token 919: ' without' (ID: 2935)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.228251576423645
    2. '   ' → logprob: -2.2282514572143555
    3. '(ball' → logprob: -2.6032514572143555
    4. 'bx' → logprob: -2.7282514572143555
    5. '(px' → logprob: -2.8532514572143555
    6. '(block' → logprob: -2.9782514572143555
    7. '#' → logprob: -3.1032514572143555
    8. '(ax' → logprob: -3.2282514572143555
    9. 'ball' → logprob: -3.6032514572143555
    10. '(cx' → logprob: -3.7282514572143555

Token 920: ' collision' (ID: 34967)
  Prédit: 'coll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coll' → logprob: -0.37240347266197205
    2. 'h' → logprob: -2.122403383255005
    3. 'inter' → logprob: -2.122403383255005
    4. 'touch' → logprob: -2.997403383255005
    5. 'collision' → logprob: -4.122403621673584
    6. 'ob' → logprob: -6.872403621673584
    7. 'penetr' → logprob: -7.247403621673584
    8. ' coll' → logprob: -7.247403621673584
    9. ' intersect' → logprob: -7.747403621673584
    10. 'passing' → logprob: -8.122403144836426

Token 921: ' with' (ID: 483)
  Prédit: 'bx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bx' → logprob: -0.45500099658966064
    2. '   ' → logprob: -1.4550009965896606
    3. 'ax' → logprob: -2.705000877380371
    4. '(ax' → logprob: -3.080000877380371
    5. '(x' → logprob: -5.455000877380371
    6. 'block' → logprob: -5.580000877380371
    7. '(block' → logprob: -5.830000877380371
    8. 'x' → logprob: -6.705000877380371
    9. 'def' → logprob: -7.080000877380371
    10. '(rx' → logprob: -7.080000877380371

Token 922: ' this' (ID: 495)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.21024750173091888
    2. 'the' → logprob: -1.71024751663208
    3. '(block' → logprob: -4.96024751663208
    4. ' block' → logprob: -7.33524751663208
    5. 'any' → logprob: -7.71024751663208
    6. ' the' → logprob: -7.83524751663208
    7. 'a' → logprob: -9.710247039794922
    8. 'rect' → logprob: -9.960247039794922
    9. 'blocks' → logprob: -10.210247039794922
    10. 'r' → logprob: -10.835247039794922

Token 923: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.8249280452728271
    2. 'bx' → logprob: -0.9499280452728271
    3. '(x' → logprob: -2.574928045272827
    4. 'x' → logprob: -3.574928045272827
    5. '(block' → logprob: -3.574928045272827
    6. 'rect' → logprob: -4.574928283691406
    7. '(rx' → logprob: -4.949928283691406
    8. '(rect' → logprob: -5.574928283691406
    9. 'rx' → logprob: -5.699928283691406
    10. '(b' → logprob: -5.699928283691406

Token 924: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006967916619032621
    2. 'bx' → logprob: -5.131968021392822
    3. 'block' → logprob: -7.881968021392822
    4. 'ax' → logprob: -8.881967544555664
    5. ' bx' → logprob: -9.006967544555664
    6. 'def' → logprob: -9.131967544555664
    7. '(block' → logprob: -9.756967544555664
    8. 'x' → logprob: -9.756967544555664
    9. ',' → logprob: -10.131967544555664
    10. '
' → logprob: -10.506967544555664

Token 925: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016057939501479268
    2. 'bx' → logprob: -6.626605987548828
    3. 'ax' → logprob: -9.376605987548828
    4. 'block' → logprob: -9.626605987548828
    5. 'x' → logprob: -9.751605987548828
    6. ' bx' → logprob: -10.376605987548828
    7. 'def' → logprob: -11.376605987548828
    8. '```' → logprob: -11.501605987548828
    9. '(ax' → logprob: -12.626605987548828
    10. '(block' → logprob: -13.376605987548828

Token 926: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7346941828727722
    2. 'bx' → logprob: -0.7346941828727722
    3. ' bx' → logprob: -3.984694242477417
    4. 'block' → logprob: -4.234694004058838
    5. 'x' → logprob: -5.609694004058838
    6. 'ax' → logprob: -6.859694004058838
    7. 'ball' → logprob: -7.109694004058838
    8. 'min' → logprob: -7.484694004058838
    9. 'vx' → logprob: -7.859694004058838
    10. ' block' → logprob: -7.984694004058838

Token 927: ' The' (ID: 623)
  Prédit: 'bx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bx' → logprob: -0.0722188651561737
    2. 'block' → logprob: -3.572218894958496
    3. 'rx' → logprob: -4.572218894958496
    4. 'x' → logprob: -4.822218894958496
    5. '   ' → logprob: -4.822218894958496
    6. '#' → logprob: -5.072218894958496
    7. 'rect' → logprob: -6.197218894958496
    8. 'ax' → logprob: -6.447218894958496
    9. '(x' → logprob: -6.447218894958496
    10. '(block' → logprob: -6.697218894958496

Token 928: ' ball' (ID: 7880)
  Prédit: 'bx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bx' → logprob: -0.25716978311538696
    2. 'block' → logprob: -2.132169723510742
    3. '#' → logprob: -3.382169723510742
    4. 'x' → logprob: -3.632169723510742
    5. 'rx' → logprob: -4.007169723510742
    6. ' bx' → logprob: -4.882169723510742
    7. 'def' → logprob: -5.382169723510742
    8. ' block' → logprob: -6.007169723510742
    9. 'r' → logprob: -6.132169723510742
    10. 'ball' → logprob: -6.382169723510742

Token 929: ' is' (ID: 382)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6183510422706604
    2. '_x' → logprob: -1.6183509826660156
    3. 'radius' → logprob: -2.2433509826660156
    4. 'cx' → logprob: -2.9933509826660156
    5. 'r' → logprob: -3.2433509826660156
    6. '_radius' → logprob: -3.3683509826660156
    7. 'center' → logprob: -4.493350982666016
    8. '_center' → logprob: -4.743350982666016
    9. '#' → logprob: -5.868350982666016
    10. 'is' → logprob: -6.368350982666016

Token 930: ' a' (ID: 261)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.4321552813053131
    2. ' at' → logprob: -2.0571553707122803
    3. 'r' → logprob: -2.3071553707122803
    4. 'center' → logprob: -2.9321553707122803
    5. 'ball' → logprob: -4.807155132293701
    6. 'represented' → logprob: -4.807155132293701
    7. 'ass' → logprob: -4.932155132293701
    8. 'a' → logprob: -4.932155132293701
    9. 'currently' → logprob: -4.932155132293701
    10. 'below' → logprob: -5.432155132293701

Token 931: ' sphere' (ID: 51811)
  Prédit: 'circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'circle' → logprob: -0.008066379465162754
    2. 'point' → logprob: -5.508066177368164
    3. 'c' → logprob: -6.883066177368164
    4. 'sphere' → logprob: -6.883066177368164
    5. ' circle' → logprob: -7.133066177368164
    6. 'ball' → logprob: -8.383066177368164
    7. 'def' → logprob: -8.383066177368164
    8. 'vertical' → logprob: -9.508066177368164
    9. 'line' → logprob: -9.883066177368164
    10. 'disk' → logprob: -10.008066177368164

Token 932: ' radius' (ID: 21090)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.593459963798523
    2. ' with' → logprob: -1.593459963798523
    3. 'def' → logprob: -2.3434600830078125
    4. 'center' → logprob: -2.4684600830078125
    5. 'with' → logprob: -2.4684600830078125
    6. ' and' → logprob: -2.5934600830078125
    7. 'and' → logprob: -2.7184600830078125
    8. '   ' → logprob: -2.9684600830078125
    9. '#' → logprob: -3.3434600830078125
    10. ' at' → logprob: -3.7184600830078125

Token 933: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.016224168241024017
    2. ' r' → logprob: -4.141224384307861
    3. '=r' → logprob: -9.766223907470703
    4. '=' → logprob: -9.891223907470703
    5. ' =' → logprob: -10.641223907470703
    6. '
' → logprob: -11.391223907470703
    7. ',' → logprob: -11.516223907470703
    8. ' at' → logprob: -11.516223907470703
    9. '   ' → logprob: -11.891223907470703
    10. ' of' → logprob: -12.641223907470703

Token 934: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007348678074777126
    2. ',' → logprob: -6.007348537445068
    3. 'def' → logprob: -6.007348537445068
    4. '
' → logprob: -6.382348537445068
    5. '    
' → logprob: -8.757349014282227
    6. 'x' → logprob: -9.007349014282227
    7. ' and' → logprob: -9.632349014282227
    8. 'block' → logprob: -9.757349014282227
    9. '(block' → logprob: -10.632349014282227
    10. ' (' → logprob: -10.757349014282227

Token 935: ' bottom' (ID: 8725)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.039138004183769226
    2. ' center' → logprob: -3.539138078689575
    3. 'its' → logprob: -5.414137840270996
    4. 'bottom' → logprob: -5.789137840270996
    5. '(center' → logprob: -7.664137840270996
    6. 'horizontal' → logprob: -8.289137840270996
    7. 'vertical' → logprob: -8.789137840270996
    8. ' its' → logprob: -8.789137840270996
    9. 'position' → logprob: -8.914137840270996
    10. '2' → logprob: -9.289137840270996

Token 936: ' point' (ID: 2438)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.1391669660806656
    2. 'center' → logprob: -2.639167070388794
    3. 'y' → logprob: -4.264166831970215
    4. '=r' → logprob: -4.389166831970215
    5. 'r' → logprob: -4.639166831970215
    6. '=' → logprob: -5.514166831970215
    7. 'point' → logprob: -5.889166831970215
    8. ' at' → logprob: -6.139166831970215
    9. 'face' → logprob: -6.139166831970215
    10. 'z' → logprob: -6.264166831970215

Token 937: ' on' (ID: 402)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.15034930408000946
    2. ' at' → logprob: -2.1503493785858154
    3. '=' → logprob: -4.900349140167236
    4. ' =' → logprob: -5.400349140167236
    5. '(ball' → logprob: -5.900349140167236
    6. '   ' → logprob: -6.150349140167236
    7. '=(' → logprob: -6.525349140167236
    8. 'ball' → logprob: -6.775349140167236
    9. 'y' → logprob: -7.150349140167236
    10. 'on' → logprob: -7.275349140167236

Token 938: ' course' (ID: 4165)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.2937130331993103
    2. 'the' → logprob: -2.543713092803955
    3. '(ball' → logprob: -2.668713092803955
    4. 'block' → logprob: -3.043713092803955
    5. ' ball' → logprob: -3.168713092803955
    6. '(block' → logprob: -4.668713092803955
    7. ' the' → logprob: -5.918713092803955
    8. ' block' → logprob: -6.043713092803955
    9. 'y' → logprob: -6.793713092803955
    10. 'ground' → logprob: -7.668713092803955

Token 939: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05107184872031212
    2. '
' → logprob: -4.301071643829346
    3. ',' → logprob: -4.426071643829346
    4. 'def' → logprob: -4.801071643829346
    5. ' at' → logprob: -5.051071643829346
    6. ' and' → logprob: -6.176071643829346
    7. ' (' → logprob: -6.301071643829346
    8. ' =' → logprob: -6.926071643829346
    9. 'x' → logprob: -7.676071643829346
    10. 'block' → logprob: -7.801071643829346

Token 940: ' at' (ID: 540)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014424959663301706
    2. '
' → logprob: -7.6264424324035645
    3. 'def' → logprob: -7.7514424324035645
    4. ',' → logprob: -7.8764424324035645
    5. '    
' → logprob: -10.251442909240723
    6. 'block' → logprob: -10.501442909240723
    7. 'x' → logprob: -11.001442909240723
    8. '(block' → logprob: -11.126442909240723
    9. ' and' → logprob: -12.001442909240723
    10. ' block' → logprob: -12.001442909240723

Token 941: ' (' (ID: 350)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.1275281012058258
    2. 'block' → logprob: -2.127528190612793
    3. ' ball' → logprob: -8.377528190612793
    4. ' block' → logprob: -9.002528190612793
    5. 'r' → logprob: -9.377528190612793
    6. '(ball' → logprob: -9.627528190612793
    7. 'y' → logprob: -10.377528190612793
    8. '(block' → logprob: -10.752528190612793
    9. '   ' → logprob: -11.127528190612793
    10. '0' → logprob: -11.627528190612793

Token 942: 'ball' (ID: 5052)
  Prédit: 'ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.00037466554204002023
    2. ' ball' → logprob: -8.125374794006348
    3. 'block' → logprob: -9.625374794006348
    4. '   ' → logprob: -11.875374794006348
    5. '(ball' → logprob: -13.500374794006348
    6. '
' → logprob: -13.625374794006348
    7. ' ' → logprob: -14.000374794006348
    8. 'b' → logprob: -14.750374794006348
    9. ')' → logprob: -14.875374794006348
    10. '  ' → logprob: -15.125374794006348

Token 943: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.00019710339256562293
    2. '[' → logprob: -8.875197410583496
    3. 'x' → logprob: -10.000197410583496
    4. '_' → logprob: -12.375197410583496
    5. '   ' → logprob: -13.000197410583496
    6. '[
' → logprob: -14.375197410583496
    7. '_y' → logprob: -14.375197410583496
    8. ' _' → logprob: -14.625197410583496
    9. '['_' → logprob: -14.625197410583496
    10. '```' → logprob: -14.625197410583496

Token 944: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23043230175971985
    2. ',r' → logprob: -2.2304322719573975
    3. '+r' → logprob: -3.2304322719573975
    4. '-r' → logprob: -3.7304322719573975
    5. ' -' → logprob: -4.605432510375977
    6. '-' → logprob: -4.980432510375977
    7. '),' → logprob: -5.230432510375977
    8. ')' → logprob: -5.355432510375977
    9. '+' → logprob: -5.730432510375977
    10. ' +' → logprob: -6.730432510375977

Token 945: ' ball' (ID: 7880)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.08978290110826492
    2. ' ball' → logprob: -2.464782953262329
    3. 'block' → logprob: -7.58978271484375
    4. ' block' → logprob: -9.58978271484375
    5. '(ball' → logprob: -9.96478271484375
    6. ',' → logprob: -10.21478271484375
    7. ' ' → logprob: -10.21478271484375
    8. '
' → logprob: -10.46478271484375
    9. '0' → logprob: -10.71478271484375
    10. ')' → logprob: -10.71478271484375

Token 946: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.000599976978264749
    2. '_x' → logprob: -8.12559986114502
    3. 'y' → logprob: -8.62559986114502
    4. '[' → logprob: -9.50059986114502
    5. '_r' → logprob: -11.37559986114502
    6. ')' → logprob: -11.50059986114502
    7. '),' → logprob: -12.12559986114502
    8. 'r' → logprob: -12.12559986114502
    9. '_' → logprob: -13.00059986114502
    10. 'def' → logprob: -13.12559986114502

Token 947: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11121212691068649
    2. '):' → logprob: -2.6112120151519775
    3. '):
' → logprob: -4.236212253570557
    4. '   ' → logprob: -5.361212253570557
    5. ')
' → logprob: -5.486212253570557
    6. '),' → logprob: -5.611212253570557
    7. ').' → logprob: -5.611212253570557
    8. '):

' → logprob: -7.611212253570557
    9. ',' → logprob: -8.236211776733398
    10. 'def' → logprob: -8.861211776733398

Token 948: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.280175097752362e-05
    2. '    
' → logprob: -10.625082969665527
    3. 'block' → logprob: -10.875082969665527
    4. '
' → logprob: -11.250082969665527
    5. 'def' → logprob: -11.375082969665527
    6. ' block' → logprob: -12.500082969665527
    7. 'x' → logprob: -12.625082969665527
    8. ',' → logprob: -13.250082969665527
    9. '<|end|>' → logprob: -13.625082969665527
    10. '(block' → logprob: -14.000082969665527

Token 949: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7059287428855896
    2. 'bx' → logprob: -0.7059287428855896
    3. ' bx' → logprob: -4.955928802490234
    4. 'block' → logprob: -6.205928802490234
    5. 'x' → logprob: -6.705928802490234
    6. 'ax' → logprob: -6.830928802490234
    7. '(block' → logprob: -8.080928802490234
    8. 'rx' → logprob: -8.580928802490234
    9. '#' (adapté à ' #') → logprob: -8.830928802490234
    10. 'def' → logprob: -9.205928802490234

Token 950: ' Check' (ID: 6208)
  Prédit: 'bx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bx' → logprob: -0.09054267406463623
    2. 'rx' → logprob: -2.715542793273926
    3. '   ' → logprob: -5.090542793273926
    4. '(rx' → logprob: -5.090542793273926
    5. 'block' → logprob: -5.965542793273926
    6. '(x' → logprob: -6.715542793273926
    7. '(block' → logprob: -7.215542793273926
    8. 'x' → logprob: -7.215542793273926
    9. '#' → logprob: -7.590542793273926
    10. 'ax' → logprob: -7.715542793273926

Token 951: ' ' (ID: 220)
  Prédit: 'bx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bx' → logprob: -0.0869021862745285
    2. 'block' → logprob: -3.086902141571045
    3. ' bx' → logprob: -4.711902141571045
    4. 'if' → logprob: -4.961902141571045
    5. 'min' → logprob: -5.211902141571045
    6. 'x' → logprob: -5.336902141571045
    7. '   ' → logprob: -5.586902141571045
    8. 'for' → logprob: -6.211902141571045
    9. 'ball' → logprob: -6.836902141571045
    10. 'ax' → logprob: -7.461902141571045

Token 952: '3' (ID: 18)
  Prédit: 'bx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bx' → logprob: -0.48907727003097534
    2. 'block' → logprob: -1.1140773296356201
    3. 'if' → logprob: -3.36407732963562
    4. 'for' → logprob: -4.614077091217041
    5. 'min' → logprob: -6.114077091217041
    6. 'x' → logprob: -6.114077091217041
    7. '#' → logprob: -6.239077091217041
    8. 'ball' → logprob: -6.489077091217041
    9. '(block' → logprob: -6.489077091217041
    10. '   ' → logprob: -7.364077091217041

Token 953: 'D' (ID: 35)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.1172573566436768
    2. 'block' → logprob: -1.7422573566436768
    3. 'x' → logprob: -2.3672573566436768
    4. 'points' → logprob: -2.3672573566436768
    5. 'min' → logprob: -3.1172573566436768
    6. '   ' → logprob: -3.2422573566436768
    7. 'segments' → logprob: -3.2422573566436768
    8. 'def' → logprob: -3.3672573566436768
    9. 'if' → logprob: -3.4922573566436768
    10. 'bx' → logprob: -4.242257118225098

Token 954: ' minimal' (ID: 19957)
  Prédit: ' bx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bx' → logprob: -0.5513225793838501
    2. 'bx' → logprob: -1.17632257938385
    3. ' block' → logprob: -3.4263224601745605
    4. ' if' → logprob: -4.1763224601745605
    5. 'block' → logprob: -4.1763224601745605
    6. ' x' → logprob: -4.4263224601745605
    7. '#' → logprob: -4.6763224601745605
    8. 'x' → logprob: -4.9263224601745605
    9. 'def' → logprob: -5.1763224601745605
    10. '   ' → logprob: -5.8013224601745605

Token 955: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.3675946295261383
    2. 'dist' → logprob: -1.367594599723816
    3. ' distance' → logprob: -4.1175947189331055
    4. 'def' → logprob: -4.2425947189331055
    5. 'dx' → logprob: -4.8675947189331055
    6. '_distance' → logprob: -5.1175947189331055
    7. 'd' → logprob: -5.4925947189331055
    8. 'x' → logprob: -6.8675947189331055
    9. ' clearance' → logprob: -7.4925947189331055
    10. ' dist' → logprob: -7.8675947189331055

Token 956: ' between' (ID: 2870)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13173411786556244
    2. 'def' → logprob: -3.3817341327667236
    3. 'from' → logprob: -3.6317341327667236
    4. ' between' → logprob: -4.3817338943481445
    5. '(block' → logprob: -4.6317338943481445
    6. ' (' → logprob: -5.1317338943481445
    7. ' from' → logprob: -5.2567338943481445
    8. '(' → logprob: -5.5067338943481445
    9. ',' → logprob: -5.6317338943481445
    10. 'block' → logprob: -5.7567338943481445

Token 957: ' ball' (ID: 7880)
  Prédit: '(ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ball' → logprob: -0.3463805317878723
    2. '(block' → logprob: -1.7213804721832275
    3. 'ball' → logprob: -3.0963804721832275
    4. '(' → logprob: -3.4713804721832275
    5. 'the' → logprob: -4.346380710601807
    6. '(r' → logprob: -4.971380710601807
    7. 'block' → logprob: -4.971380710601807
    8. '#' → logprob: -5.846380710601807
    9. '(b' → logprob: -5.846380710601807
    10. '((' → logprob: -6.596380710601807

Token 958: ' surface' (ID: 9753)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.14137011766433716
    2. '(center' → logprob: -3.0163700580596924
    3. 'and' → logprob: -3.1413700580596924
    4. ' center' → logprob: -3.6413700580596924
    5. '(x' → logprob: -6.0163702964782715
    6. ' and' → logprob: -6.1413702964782715
    7. '_center' → logprob: -6.1413702964782715
    8. 'bottom' → logprob: -6.2663702964782715
    9. '(' → logprob: -7.2663702964782715
    10. 'x' → logprob: -7.3913702964782715

Token 959: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4387902021408081
    2. 'and' → logprob: -1.313790202140808
    3. '   ' → logprob: -2.5637903213500977
    4. 'def' → logprob: -4.938790321350098
    5. 'import' → logprob: -8.188790321350098
    6. 'bx' → logprob: -8.438790321350098
    7. '
' → logprob: -8.563790321350098
    8. 'block' → logprob: -9.063790321350098
    9. '(cx' → logprob: -9.063790321350098
    10. 'x' → logprob: -9.313790321350098

Token 960: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.02160024642944336
    2. 'the' → logprob: -4.646600246429443
    3. ' block' → logprob: -5.146600246429443
    4. '(block' → logprob: -5.271600246429443
    5. '((' → logprob: -8.021600723266602
    6. ' the' → logprob: -8.146600723266602
    7. '#' → logprob: -9.396600723266602
    8. ' (' → logprob: -10.896600723266602
    9. 'segment' → logprob: -11.271600723266602
    10. 'edges' → logprob: -11.646600723266602

Token 961: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003596621798351407
    2. 'def' → logprob: -6.128596782684326
    3. '
' → logprob: -7.628596782684326
    4. '(block' → logprob: -8.503596305847168
    5. ',' → logprob: -8.878596305847168
    6. '    
' → logprob: -9.003596305847168
    7. '<|end|>' → logprob: -9.128596305847168
    8. 'block' → logprob: -9.378596305847168
    9. ':' → logprob: -9.753596305847168
    10. 'import' → logprob: -10.378596305847168

Token 962: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00013393278641160578
    2. '    
' → logprob: -9.875133514404297
    3. '
' → logprob: -10.375133514404297
    4. 'def' → logprob: -10.750133514404297
    5. ',' → logprob: -11.625133514404297
    6. '<|end|>' → logprob: -11.625133514404297
    7. 'block' → logprob: -12.875133514404297
    8. '(block' → logprob: -13.500133514404297
    9. ' block' → logprob: -13.625133514404297
    10. 'import' → logprob: -14.125133514404297

Token 963: ' #' (ID: 1069)
  Prédit: 'bx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bx' → logprob: -0.6992263793945312
    2. '   ' → logprob: -0.8242263793945312
    3. ' bx' → logprob: -3.0742263793945312
    4. 'block' → logprob: -4.449226379394531
    5. 'min' → logprob: -6.449226379394531
    6. ' block' → logprob: -6.699226379394531
    7. 'ball' → logprob: -6.824226379394531
    8. 'x' → logprob: -7.449226379394531
    9. ' min' → logprob: -8.074226379394531
    10. '#' (adapté à ' #') → logprob: -8.074226379394531

Token 964: ' Block' (ID: 13063)
  Prédit: 'bx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bx' → logprob: -0.08697431534528732
    2. '   ' → logprob: -3.0869743824005127
    3. ' bx' → logprob: -4.211974143981934
    4. 'block' → logprob: -4.586974143981934
    5. 'x' → logprob: -5.211974143981934
    6. '#' → logprob: -6.211974143981934
    7. 'min' → logprob: -6.336974143981934
    8. 'rx' → logprob: -7.461974143981934
    9. 'ball' → logprob: -7.586974143981934
    10. 'ax' → logprob: -7.836974143981934

Token 965: ' bottom' (ID: 8725)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6727151870727539
    2. '_x' → logprob: -1.797715187072754
    3. 'min' → logprob: -2.422715187072754
    4. '_points' → logprob: -3.047715187072754
    5. 'points' → logprob: -3.672715187072754
    6. '_c' → logprob: -3.672715187072754
    7. '_min' → logprob: -3.672715187072754
    8. '=' → logprob: -4.297715187072754
    9. '_coords' → logprob: -4.422715187072754
    10. '_pts' → logprob: -4.422715187072754

Token 966: ' rectangle' (ID: 45808)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7951496839523315
    2. '=' → logprob: -1.9201496839523315
    3. '_points' → logprob: -2.420149803161621
    4. '_x' → logprob: -2.670149803161621
    5. 'x' → logprob: -2.795149803161621
    6. ',' → logprob: -3.295149803161621
    7. '_vertices' → logprob: -3.420149803161621
    8. '_pts' → logprob: -3.420149803161621
    9. '_coords' → logprob: -3.920149803161621
    10. '   ' → logprob: -4.545149803161621

Token 967: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30638474225997925
    2. '   ' → logprob: -2.056384801864624
    3. '=' → logprob: -2.431384801864624
    4. 'x' → logprob: -3.681384801864624
    5. ',' → logprob: -4.806384563446045
    6. 'min' → logprob: -6.056384563446045
    7. '_points' → logprob: -6.306384563446045
    8. '_coords' → logprob: -6.306384563446045
    9. 'points' → logprob: -6.681384563446045
    10. '_x' → logprob: -6.806384563446045

Token 968: ' (' (ID: 350)
  Prédit: 'bx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bx' → logprob: -0.18233844637870789
    2. '(x' → logprob: -2.8073384761810303
    3. ' bx' → logprob: -3.4323384761810303
    4. '(rx' → logprob: -3.6823384761810303
    5. '   ' → logprob: -3.8073384761810303
    6. 'x' → logprob: -4.557338237762451
    7. '(b' → logprob: -5.432338237762451
    8. 'rx' → logprob: -5.432338237762451
    9. ' (' → logprob: -6.557338237762451
    10. 'block' → logprob: -7.057338237762451

Token 969: 'min' (ID: 1493)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'block' → logprob: -7.85104202805087e-05
    2. '(block' → logprob: -10.125078201293945
    3. 'bx' → logprob: -10.375078201293945
    4. '   ' → logprob: -13.750078201293945
    5. ' block' → logprob: -13.750078201293945
    6. 'x' → logprob: -13.875078201293945
    7. ')' → logprob: -13.875078201293945
    8. 'b' → logprob: -14.000078201293945
    9. '
' → logprob: -14.125078201293945
    10. 'bloc' → logprob: -15.500078201293945

Token 970: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8376578092575073
    2. '_x' → logprob: -0.9626578092575073
    3. '(block' → logprob: -1.7126578092575073
    4. 'X' → logprob: -6.087657928466797
    5. 'block' → logprob: -6.712657928466797
    6. '[' → logprob: -7.337657928466797
    7. '_block' → logprob: -7.962657928466797
    8. 'bx' → logprob: -9.087657928466797
    9. '(' → logprob: -9.462657928466797
    10. '(
' → logprob: -9.962657928466797

Token 971: ',min' (ID: 129117)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10412397235631943
    2. 'x' → logprob: -2.854124069213867
    3. '_x' → logprob: -4.229124069213867
    4. '[' → logprob: -4.854124069213867
    5. ' =' → logprob: -4.979124069213867
    6. 'block' → logprob: -5.479124069213867
    7. '),' → logprob: -5.979124069213867
    8. '(block' → logprob: -6.229124069213867
    9. '=' → logprob: -7.354124069213867
    10. '_block' → logprob: -7.854124069213867

Token 972: 'y' (ID: 88)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03235310688614845
    2. 'z' → logprob: -3.907353162765503
    3. 'y' → logprob: -4.657352924346924
    4. '_x' → logprob: -6.532352924346924
    5. '(block' → logprob: -8.032353401184082
    6. '_y' → logprob: -8.657353401184082
    7. 'block' → logprob: -9.282353401184082
    8. '_z' → logprob: -9.532353401184082
    9. '[' → logprob: -10.157353401184082
    10. '_block' → logprob: -10.407353401184082

Token 973: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00447878148406744
    2. ',min' → logprob: -5.879478931427002
    3. '),' → logprob: -6.879478931427002
    4. ' ,' → logprob: -8.129478454589844
    5. ',max' → logprob: -9.879478454589844
    6. ',
' → logprob: -10.004478454589844
    7. '   ' → logprob: -10.004478454589844
    8. '
' → logprob: -10.129478454589844
    9. 'def' → logprob: -10.504478454589844
    10. 'block' → logprob: -10.504478454589844

Token 974: ' (' (ID: 350)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.5466985702514648
    2. '(max' → logprob: -1.4216985702514648
    3. 'min' → logprob: -2.421698570251465
    4. 'max' → logprob: -2.671698570251465
    5. ' (' → logprob: -4.171698570251465
    6. ' max' → logprob: -6.296698570251465
    7. '   ' → logprob: -6.671698570251465
    8. ' min' → logprob: -7.046698570251465
    9. 'block' → logprob: -7.171698570251465
    10. '
' → logprob: -7.796698570251465

Token 975: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.016377322375774384
    2. 'min' → logprob: -4.1413774490356445
    3. ' max' → logprob: -8.016377449035645
    4. ' min' → logprob: -12.391377449035645
    5. 'block' → logprob: -12.391377449035645
    6. '
' → logprob: -13.766377449035645
    7. '(max' → logprob: -14.141377449035645
    8. '   ' → logprob: -14.266377449035645
    9. '	max' → logprob: -14.266377449035645
    10. '_max' → logprob: -15.141377449035645

Token 976: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00019054718723054975
    2. 'block' → logprob: -9.000190734863281
    3. '(block' → logprob: -10.000190734863281
    4. '_x' → logprob: -11.000190734863281
    5. '_block' → logprob: -13.000190734863281
    6. 'z' → logprob: -13.500190734863281
    7. '(x' → logprob: -15.625190734863281
    8. ' block' → logprob: -16.12519073486328
    9. '```' → logprob: -16.12519073486328
    10. '
' → logprob: -16.37519073486328

Token 977: ',max' (ID: 81466)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.033490654081106186
    2. 'block' → logprob: -4.4084906578063965
    3. ',min' → logprob: -4.5334906578063965
    4. 'x' → logprob: -5.4084906578063965
    5. ',max' → logprob: -5.4084906578063965
    6. '_block' → logprob: -7.7834906578063965
    7. '),' → logprob: -9.283490180969238
    8. ',b' → logprob: -9.533490180969238
    9. ',x' → logprob: -9.658490180969238
    10. '),(' → logprob: -9.783490180969238

Token 978: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.009474859572947025
    2. ',' → logprob: -4.759474754333496
    3. 'max' → logprob: -8.009474754333496
    4. '),' → logprob: -8.384474754333496
    5. ',max' → logprob: -9.384474754333496
    6. 'z' → logprob: -9.884474754333496
    7. ',y' → logprob: -10.134474754333496
    8. 'block' → logprob: -10.509474754333496
    9. ',
' → logprob: -11.134474754333496
    10. '1' → logprob: -11.509474754333496

Token 979: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41181108355522156
    2. ',' → logprob: -1.661811113357544
    3. '),' → logprob: -2.036811113357544
    4. ')=' → logprob: -4.536810874938965
    5. ')
' → logprob: -5.786810874938965
    6. ' =' → logprob: -7.036810874938965
    7. '   ' → logprob: -7.286810874938965
    8. ',min' → logprob: -8.036810874938965
    9. 'min' → logprob: -8.161810874938965
    10. 'def' → logprob: -8.286810874938965

Token 980: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06798315048217773
    2. ',' → logprob: -3.3179831504821777
    3. '
' → logprob: -3.5679831504821777
    4. '    
' → logprob: -8.317983627319336
    5. ' =' → logprob: -8.442983627319336
    6. 'def' → logprob: -8.692983627319336
    7. 'min' → logprob: -8.817983627319336
    8. 'block' → logprob: -8.942983627319336
    9. ',
' → logprob: -9.817983627319336
    10. ')' → logprob: -10.067983627319336

Token 981: ' height' (ID: 4679)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.5728846788406372
    2. 'height' → logprob: -1.3228846788406372
    3. ' block' → logprob: -2.9478845596313477
    4. 'min' → logprob: -3.1978845596313477
    5. 'z' → logprob: -3.6978845596313477
    6. '(block' → logprob: -4.072884559631348
    7. ' height' → logprob: -4.447884559631348
    8. 'h' → logprob: -5.322884559631348
    9. '(min' → logprob: -6.197884559631348
    10. 'r' → logprob: -6.197884559631348

Token 982: ' h' (ID: 312)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06783647835254669
    2. '=' → logprob: -2.9428365230560303
    3. '   ' → logprob: -4.692836284637451
    4. 'min' → logprob: -5.942836284637451
    5. ',' → logprob: -7.317836284637451
    6. '_min' → logprob: -8.56783676147461
    7. '=min' → logprob: -9.44283676147461
    8. 'x' → logprob: -10.06783676147461
    9. 'r' → logprob: -11.06783676147461
    10. 'block' → logprob: -11.06783676147461

Token 983: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007462396286427975
    2. '
' → logprob: -5.132462501525879
    3. 'def' → logprob: -7.632462501525879
    4. 'min' → logprob: -7.882462501525879
    5. '    
' → logprob: -8.257462501525879
    6. ',' → logprob: -8.257462501525879
    7. 'block' → logprob: -10.257462501525879
    8. ' block' → logprob: -11.007462501525879
    9. '<|end|>' → logprob: -11.132462501525879
    10. ':' → logprob: -11.257462501525879

Token 984: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010854477295652032
    2. 'min' → logprob: -6.87608528137207
    3. ' min' → logprob: -11.12608528137207
    4. '
' → logprob: -11.25108528137207
    5. '    
' → logprob: -11.50108528137207
    6. 'block' → logprob: -12.00108528137207
    7. 'def' → logprob: -12.00108528137207
    8. '	min' → logprob: -14.75108528137207
    9. 'import' → logprob: -15.00108528137207
    10. '    ' → logprob: -15.25108528137207

Token 985: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0030474625527858734
    2. '(min' → logprob: -6.253047466278076
    3. '   ' → logprob: -7.503047466278076
    4. 'block' → logprob: -8.128046989440918
    5. 'bx' → logprob: -9.003046989440918
    6. ' min' → logprob: -9.378046989440918
    7. 'ball' → logprob: -10.503046989440918
    8. '#' (adapté à ' #') → logprob: -11.128046989440918
    9. '(block' → logprob: -12.003046989440918
    10. 'r' → logprob: -12.878046989440918

Token 986: ' Since' (ID: 12265)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.01275060698390007
    2. '(min' → logprob: -4.512750625610352
    3. '#' → logprob: -7.137750625610352
    4. 'block' → logprob: -7.887750625610352
    5. 'bx' → logprob: -8.262750625610352
    6. '(block' → logprob: -9.637750625610352
    7. 'ball' → logprob: -10.262750625610352
    8. 'import' → logprob: -10.387750625610352
    9. 'rx' → logprob: -10.762750625610352
    10. ' min' → logprob: -11.012750625610352

Token 987: ' both' (ID: 2973)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.7901195287704468
    2. 'the' → logprob: -1.2901195287704468
    3. ' block' → logprob: -2.2901196479797363
    4. 'ball' → logprob: -2.4151196479797363
    5. ' the' → logprob: -2.9151196479797363
    6. ' ball' → logprob: -4.040119647979736
    7. '#' → logprob: -5.915119647979736
    8. 'r' → logprob: -6.790119647979736
    9. 'we' → logprob: -6.790119647979736
    10. 'def' → logprob: -6.790119647979736

Token 988: ' ball' (ID: 7880)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.467227578163147
    2. 'the' → logprob: -1.967227578163147
    3. 'block' → logprob: -2.0922274589538574
    4. 'are' → logprob: -2.4672274589538574
    5. ' are' → logprob: -4.717227458953857
    6. 'blocks' → logprob: -5.092227458953857
    7. ' ball' → logprob: -5.592227458953857
    8. 'r' → logprob: -6.342227458953857
    9. ' the' → logprob: -6.467227458953857
    10. 'def' → logprob: -7.092227458953857

Token 989: ' and' (ID: 326)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0763297975063324
    2. '_z' → logprob: -2.8263297080993652
    3. 'and' → logprob: -5.076329708099365
    4. 'x' → logprob: -5.576329708099365
    5. ' and' → logprob: -6.701329708099365
    6. 'center' → logprob: -7.201329708099365
    7. '   ' → logprob: -7.326329708099365
    8. 'z' → logprob: -7.576329708099365
    9. '_center' → logprob: -7.826329708099365
    10. '
' → logprob: -8.576330184936523

Token 990: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.00020795092859771103
    2. ' block' → logprob: -9.000207901000977
    3. 'ball' → logprob: -10.125207901000977
    4. 'blocks' → logprob: -11.250207901000977
    5. 'the' → logprob: -11.625207901000977
    6. '#' → logprob: -12.000207901000977
    7. 'def' → logprob: -12.250207901000977
    8. 'sphere' → logprob: -13.250207901000977
    9. 'box' → logprob: -13.875207901000977
    10. 'cube' → logprob: -14.000207901000977

Token 991: ' fixed' (ID: 13213)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.08145008981227875
    2. ' are' → logprob: -3.5814499855041504
    3. 'have' → logprob: -4.58144998550415
    4. 'bases' → logprob: -4.95644998550415
    5. ' lie' → logprob: -5.08144998550415
    6. 'bottom' → logprob: -5.33144998550415
    7. 'base' → logprob: -5.33144998550415
    8. '#' → logprob: -5.45644998550415
    9. 'exist' → logprob: -6.33144998550415
    10. 'occup' → logprob: -6.45644998550415

Token 992: ' on' (ID: 402)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.5184553265571594
    2. 'z' → logprob: -2.1434552669525146
    3. 'at' → logprob: -2.7684552669525146
    4. ',' → logprob: -2.8934552669525146
    5. ' in' → logprob: -3.0184552669525146
    6. 'in' → logprob: -3.8934552669525146
    7. ' on' → logprob: -4.018455505371094
    8. 'he' → logprob: -4.268455505371094
    9. 'height' → logprob: -4.393455505371094
    10. 'on' → logprob: -4.643455505371094

Token 993: ' ground' (ID: 7740)
  Prédit: 'xy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xy' → logprob: -1.2937695980072021
    2. '2' → logprob: -1.4187695980072021
    3. 'the' → logprob: -2.043769598007202
    4. 'ground' → logprob: -2.293769598007202
    5. 'plane' → logprob: -2.293769598007202
    6. 'z' → logprob: -2.543769598007202
    7. 'x' → logprob: -2.918769598007202
    8. 'XY' → logprob: -5.043769836425781
    9. 'a' → logprob: -6.168769836425781
    10. 'horizontal' → logprob: -6.168769836425781

Token 994: ' plane' (ID: 16499)
  Prédit: 'plane'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plane' → logprob: -1.0554592609405518
    2. 'level' → logprob: -1.3054592609405518
    3. ',' → logprob: -2.1804592609405518
    4. '   ' → logprob: -2.5554592609405518
    5. 'z' → logprob: -2.9304592609405518
    6. ' plane' → logprob: -2.9304592609405518
    7. ' level' → logprob: -3.8054592609405518
    8. ' (' → logprob: -3.9304592609405518
    9. '(level' → logprob: -4.430459022521973
    10. '#' → logprob: -5.055459022521973

Token 995: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05047855153679848
    2. '   ' → logprob: -3.175478458404541
    3. ' and' → logprob: -5.925478458404541
    4. ' (' → logprob: -6.050478458404541
    5. 'and' → logprob: -6.925478458404541
    6. ',
' → logprob: -7.300478458404541
    7. '#' → logprob: -7.925478458404541
    8. ' ,' → logprob: -9.0504789352417
    9. ' with' → logprob: -9.9254789352417
    10. '(' → logprob: -10.0504789352417

Token 996: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13187400996685028
    2. '#' → logprob: -3.0068740844726562
    3. ' bx' → logprob: -3.3818740844726562
    4. 'bx' → logprob: -3.6318740844726562
    5. '
' → logprob: -6.506874084472656
    6. 'block' → logprob: -6.506874084472656
    7. ' px' → logprob: -6.756874084472656
    8. 'ball' → logprob: -6.756874084472656
    9. ' #' → logprob: -6.756874084472656
    10. 'if' → logprob: -6.881874084472656

Token 997: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00977556686848402
    2. '#' → logprob: -4.884775638580322
    3. 'ball' → logprob: -7.134775638580322
    4. 'block' → logprob: -7.634775638580322
    5. ' block' → logprob: -8.509775161743164
    6. 'min' → logprob: -8.759775161743164
    7. 'bx' → logprob: -9.009775161743164
    8. ' bx' → logprob: -9.009775161743164
    9. ' #' → logprob: -9.634775161743164
    10. ' ball' → logprob: -9.759775161743164

Token 998: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.3970465660095215
    2. 'ball' → logprob: -1.3970465660095215
    3. 'bx' → logprob: -2.0220465660095215
    4. 'block' → logprob: -2.1470465660095215
    5. 'min' → logprob: -2.8970465660095215
    6. ' bx' → logprob: -2.8970465660095215
    7. '   ' → logprob: -3.1470465660095215
    8. ' min' → logprob: -3.2720465660095215
    9. ' block' → logprob: -3.3970465660095215
    10. ' ball' → logprob: -4.1470465660095215

Token 999: ' minimal' (ID: 19957)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3163214325904846
    2. 'bx' → logprob: -2.06632137298584
    3. '#' → logprob: -3.19132137298584
    4. 'block' → logprob: -3.31632137298584
    5. 'ball' → logprob: -3.56632137298584
    6. '(min' → logprob: -4.19132137298584
    7. 'px' → logprob: -5.19132137298584
    8. '   ' → logprob: -5.56632137298584
    9. 'dx' → logprob: -6.19132137298584
    10. ' min' → logprob: -6.31632137298584

Token 1000: ' distance' (ID: 9324)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.6139435172080994
    2. 'dist' → logprob: -1.3639435768127441
    3. 'dx' → logprob: -2.113943576812744
    4. 'h' → logprob: -3.238943576812744
    5. 'distance' → logprob: -4.113943576812744
    6. 'd' → logprob: -4.863943576812744
    7. 'xy' → logprob: -4.863943576812744
    8. '_horizontal' → logprob: -5.988943576812744
    9. 'clear' → logprob: -6.113943576812744
    10. 'x' → logprob: -6.613943576812744

Token 1001: ' between' (ID: 2870)
  Prédit: '_xy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_xy' → logprob: -0.6821430325508118
    2. 'xy' → logprob: -0.9321430325508118
    3. '=' → logprob: -3.557142972946167
    4. 'in' → logprob: -3.682142972946167
    5. 'horizontal' → logprob: -4.307143211364746
    6. '2' → logprob: -4.432143211364746
    7. ' =' → logprob: -4.932143211364746
    8. '   ' → logprob: -5.807143211364746
    9. 'xz' → logprob: -6.307143211364746
    10. '_x' → logprob: -6.307143211364746

Token 1002: ' ball' (ID: 7880)
  Prédit: '(ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ball' → logprob: -0.059701524674892426
    2. '(block' → logprob: -3.934701442718506
    3. 'ball' → logprob: -4.309701442718506
    4. ' (' → logprob: -4.434701442718506
    5. 'r' → logprob: -6.309701442718506
    6. '(' → logprob: -6.309701442718506
    7. '(b' → logprob: -6.434701442718506
    8. 'import' → logprob: -6.434701442718506
    9. '(r' → logprob: -6.559701442718506
    10. '(px' → logprob: -6.559701442718506

Token 1003: ' center' (ID: 6170)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.04845745116472244
    2. 'and' → logprob: -3.923457384109497
    3. '_center' → logprob: -5.048457622528076
    4. '_xy' → logprob: -5.548457622528076
    5. '(center' → logprob: -5.798457622528076
    6. '_x' → logprob: -5.923457622528076
    7. 'bottom' → logprob: -5.923457622528076
    8. 'x' → logprob: -6.048457622528076
    9. ' center' → logprob: -6.423457622528076
    10. 'surface' → logprob: -6.548457622528076

Token 1004: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.032881323248147964
    2. ' and' → logprob: -3.782881259918213
    3. 'xy' → logprob: -5.782881259918213
    4. '_xy' → logprob: -6.032881259918213
    5. '   ' → logprob: -7.032881259918213
    6. 'in' → logprob: -7.032881259918213
    7. 'center' → logprob: -7.407881259918213
    8. 'to' → logprob: -7.782881259918213
    9. 'x' → logprob: -8.032881736755371
    10. 'xz' → logprob: -8.532881736755371

Token 1005: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.7309147715568542
    2. '(block' → logprob: -0.7309147715568542
    3. '(min' → logprob: -3.980914831161499
    4. ' (' → logprob: -5.60591459274292
    5. 'the' → logprob: -5.85591459274292
    6. ' block' → logprob: -6.10591459274292
    7. '#' → logprob: -6.10591459274292
    8. '(ball' → logprob: -6.48091459274292
    9. '
' → logprob: -6.73091459274292
    10. '(max' → logprob: -7.10591459274292

Token 1006: ' is' (ID: 382)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.0930296182632446
    2. 'rect' → logprob: -1.7180296182632446
    3. 'x' → logprob: -2.093029499053955
    4. 'foot' → logprob: -2.593029499053955
    5. 'xy' → logprob: -2.843029499053955
    6. 'rectangle' → logprob: -2.843029499053955
    7. 'xmin' → logprob: -3.718029499053955
    8. 'base' → logprob: -4.093029499053955
    9. 'horizontal' → logprob: -4.093029499053955
    10. 'bottom' → logprob: -4.218029499053955

Token 1007: ' horizontal' (ID: 25511)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4066702425479889
    2. '0' → logprob: -1.1566702127456665
    3. ' max' → logprob: -5.156670093536377
    4. 'dist' → logprob: -5.156670093536377
    5. 'horizontal' → logprob: -6.031670093536377
    6. '   ' → logprob: -6.656670093536377
    7. 'min' → logprob: -6.781670093536377
    8. 'math' → logprob: -7.156670093536377
    9. 'block' → logprob: -7.281670093536377
    10. ' ' → logprob: -7.406670093536377

Token 1008: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.266879141330719
    2. 'min' → logprob: -2.141879081726074
    3. 'dist' → logprob: -2.516879081726074
    4. 'dx' → logprob: -4.266879081726074
    5. '(min' → logprob: -5.266879081726074
    6. 'xy' → logprob: -5.641879081726074
    7. '   ' → logprob: -6.016879081726074
    8. '(dx' → logprob: -6.391879081726074
    9. 'plane' → logprob: -6.641879081726074
    10. 'clear' → logprob: -7.016879081726074

Token 1009: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04392199590802193
    2. 'min' → logprob: -4.918921947479248
    3. ' =' → logprob: -5.043921947479248
    4. '(min' → logprob: -6.043921947479248
    5. 'block' → logprob: -6.043921947479248
    6. 'xy' → logprob: -6.168921947479248
    7. '=' → logprob: -6.293921947479248
    8. 'horizontal' → logprob: -6.293921947479248
    9. 'if' → logprob: -6.543921947479248
    10. '(' → logprob: -6.793921947479248

Token 1010: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.40760600566864014
    2. '(block' → logprob: -1.7826060056686401
    3. '(' → logprob: -2.6576061248779297
    4. ' (' → logprob: -3.5326061248779297
    5. '(min' → logprob: -3.7826061248779297
    6. '((' → logprob: -4.28260612487793
    7. ' block' → logprob: -4.28260612487793
    8. 'the' → logprob: -5.40760612487793
    9. 'min' → logprob: -6.03260612487793
    10. '(max' → logprob: -6.28260612487793

Token 1011: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003924399148672819
    2. 'min' → logprob: -6.503924369812012
    3. '
' → logprob: -7.003924369812012
    4. '    
' → logprob: -8.128924369812012
    5. 'if' → logprob: -8.253924369812012
    6. 'def' → logprob: -8.378924369812012
    7. 'x' → logprob: -8.628924369812012
    8. '#' → logprob: -9.503924369812012
    9. 'from' → logprob: -9.628924369812012
    10. ',' → logprob: -9.628924369812012

Token 1012: ' vertical' (ID: 17679)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.4219541549682617
    2. 'max' → logprob: -1.7969541549682617
    3. 'block' → logprob: -2.0469541549682617
    4. 'r' → logprob: -2.2969541549682617
    5. ' block' → logprob: -2.2969541549682617
    6. 'vertical' → logprob: -2.2969541549682617
    7. ' vertical' → logprob: -2.4219541549682617
    8. 'the' → logprob: -3.7969541549682617
    9. ' the' → logprob: -4.046954154968262
    10. ' r' → logprob: -4.171954154968262

Token 1013: ' part' (ID: 997)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.013992488384246826
    2. ' distance' → logprob: -5.0139923095703125
    3. 'height' → logprob: -5.5139923095703125
    4. 'clear' → logprob: -6.5139923095703125
    5. 'difference' → logprob: -7.5139923095703125
    6. 'offset' → logprob: -8.138992309570312
    7. '_distance' → logprob: -8.638992309570312
    8. '
' → logprob: -8.763992309570312
    9. ' clearance' → logprob: -8.888992309570312
    10. '_clear' → logprob: -9.388992309570312

Token 1014: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04406275227665901
    2. '
' → logprob: -3.419062852859497
    3. '    
' → logprob: -5.044062614440918
    4. 'def' → logprob: -6.669062614440918
    5. 'min' → logprob: -6.794062614440918
    6. '#' → logprob: -8.169062614440918
    7. ',' → logprob: -8.169062614440918
    8. 'from' → logprob: -8.794062614440918
    9. 'import' → logprob: -9.169062614440918
    10. ' (' → logprob: -9.794062614440918

Token 1015: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005126188509166241
    2. '
' → logprob: -6.005125999450684
    3. '    
' → logprob: -6.005125999450684
    4. 'def' → logprob: -10.255125999450684
    5. '<|end|>' → logprob: -10.380125999450684
    6. ',' → logprob: -10.755125999450684
    7. '```' → logprob: -11.505125999450684
    8. '   
' → logprob: -11.880125999450684
    9. '<|end|>' → logprob: -11.880125999450684
    10. 'from' → logprob: -12.005125999450684

Token 1016: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.18009763956069946
    2. '   ' → logprob: -1.9300975799560547
    3. 'bx' → logprob: -4.430097579956055
    4. 'ball' → logprob: -5.305097579956055
    5. 'block' → logprob: -6.555097579956055
    6. ' min' → logprob: -7.930097579956055
    7. '#' → logprob: -8.055097579956055
    8. 'px' → logprob: -8.555097579956055
    9. 'import' → logprob: -9.180097579956055
    10. '(min' → logprob: -9.180097579956055

Token 1017: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01438455656170845
    2. '_x' → logprob: -4.264384746551514
    3. '_block' → logprob: -9.514384269714355
    4. 'dist' → logprob: -9.639384269714355
    5. '_dist' → logprob: -10.139384269714355
    6. 'block' → logprob: -11.264384269714355
    7. '(' → logprob: -12.389384269714355
    8. '(block' → logprob: -12.514384269714355
    9. '(x' → logprob: -12.764384269714355
    10. '_horizontal' → logprob: -12.764384269714355

Token 1018: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04659386724233627
    2. '=' → logprob: -3.6715939044952393
    3. ' =' → logprob: -3.9215939044952393
    4. '   ' → logprob: -9.17159366607666
    5. ',min' → logprob: -9.54659366607666
    6. ' ,' → logprob: -9.79659366607666
    7. ',b' → logprob: -11.04659366607666
    8. 'block' → logprob: -12.17159366607666
    9. '=min' → logprob: -12.17159366607666
    10. ',r' → logprob: -12.92159366607666

Token 1019: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.008919807150959969
    2. 'max' → logprob: -5.508919715881348
    3. 'block' → logprob: -5.508919715881348
    4. ' min' → logprob: -7.383919715881348
    5. '   ' → logprob: -10.133919715881348
    6. ' block' → logprob: -10.258919715881348
    7. 'r' → logprob: -11.508919715881348
    8. 'float' → logprob: -11.883919715881348
    9. '0' → logprob: -12.008919715881348
    10. 'm' → logprob: -12.008919715881348

Token 1020: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.4849443838757e-06
    2. 'x' → logprob: -12.375004768371582
    3. '_y' → logprob: -15.750004768371582
    4. 'min' → logprob: -17.125003814697266
    5. '	y' → logprob: -18.625003814697266
    6. 'max' → logprob: -19.000003814697266
    7. ' y' → logprob: -19.375003814697266
    8. 'ly' → logprob: -19.375003814697266
    9. '<|end|>' → logprob: -19.500003814697266
    10. ',y' → logprob: -19.625003814697266

Token 1021: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00673218397423625
    2. '=' → logprob: -5.006731986999512
    3. ' =' → logprob: -11.631731986999512
    4. ',min' → logprob: -12.006731986999512
    5. '=min' → logprob: -14.381731986999512
    6. ' ,' → logprob: -14.881731986999512
    7. ',max' → logprob: -15.131731986999512
    8. ',b' → logprob: -15.506731986999512
    9. ',
' → logprob: -15.756731986999512
    10. 'min' → logprob: -16.506732940673828

Token 1022: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.015186312608420849
    2. ' max' → logprob: -4.390186309814453
    3. 'block' → logprob: -6.390186309814453
    4. '   ' → logprob: -7.640186309814453
    5. ' block' → logprob: -8.015186309814453
    6. 'min' → logprob: -8.765186309814453
    7. '    ' → logprob: -11.390186309814453
    8. ' ' → logprob: -13.015186309814453
    9. '
' → logprob: -13.390186309814453
    10. '_max' → logprob: -13.515186309814453

Token 1023: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.704273118884885e-07
    2. '_x' → logprob: -14.375000953674316
    3. ' x' → logprob: -19.375
    4. '_block' → logprob: -20.625
    5. 'block' → logprob: -20.875
    6. ')x' → logprob: -20.875
    7. ',' → logprob: -21.375
    8. '=' → logprob: -22.25
    9. ',x' → logprob: -23.375
    10. 'X' → logprob: -23.5

Token 1024: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.054500666621607e-06
    2. ' ,' → logprob: -13.75000286102295
    3. '=' → logprob: -14.00000286102295
    4. ',min' → logprob: -14.25000286102295
    5. ',max' → logprob: -14.87500286102295
    6. ',
' → logprob: -16.875003814697266
    7. '_,' → logprob: -17.125003814697266
    8. ' =' → logprob: -17.625003814697266
    9. '‌,' → logprob: -18.000003814697266
    10. ',b' → logprob: -18.250003814697266

Token 1025: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.04743856191635132
    2. 'min' → logprob: -3.172438621520996
    3. ' max' → logprob: -5.922438621520996
    4. 'block' → logprob: -6.422438621520996
    5. ' block' → logprob: -9.547438621520996
    6. ' min' → logprob: -10.047438621520996
    7. 'm' → logprob: -12.922438621520996
    8. '   ' → logprob: -13.297438621520996
    9. '_max' → logprob: -13.297438621520996
    10. ' ' → logprob: -14.297438621520996

Token 1026: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -8.2994620242971e-06
    2. 'x' → logprob: -11.875008583068848
    3. ',' → logprob: -14.750008583068848
    4. 'max' → logprob: -14.875008583068848
    5. 'ysize' → logprob: -16.75000762939453
    6. 'yleft' → logprob: -16.87500762939453
    7. '	y' → logprob: -17.00000762939453
    8. '
' → logprob: -17.37500762939453
    9. ',y' → logprob: -17.87500762939453
    10. 'ypy' → logprob: -17.93750762939453

Token 1027: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05552190542221069
    2. ',' → logprob: -3.3055219650268555
    3. ' =' → logprob: -4.0555219650268555
    4. '   ' → logprob: -14.180521965026855
    5. '=
' → logprob: -14.680521965026855
    6. ' ,' → logprob: -15.305521965026855
    7. ',height' → logprob: -16.30552101135254
    8. '=r' → logprob: -16.43052101135254
    9. ')=' → logprob: -17.05552101135254
    10. ',b' → logprob: -17.05552101135254

Token 1028: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.09013818204402924
    2. 'height' → logprob: -2.5901381969451904
    3. ' h' → logprob: -5.215137958526611
    4. 'max' → logprob: -5.840137958526611
    5. ' height' → logprob: -6.965137958526611
    6. ' =' → logprob: -7.465137958526611
    7. 'block' → logprob: -7.715137958526611
    8. 'min' → logprob: -7.965137958526611
    9. '=' → logprob: -8.46513843536377
    10. 'z' → logprob: -8.96513843536377

Token 1029: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132847845554352
    2. ' =' → logprob: -1.3132847547531128
    3. '   ' → logprob: -11.063284873962402
    4. ',' → logprob: -12.063284873962402
    5. ' ' → logprob: -13.938284873962402
    6. '=
' → logprob: -15.688284873962402
    7. '    ' → logprob: -15.813284873962402
    8. '	' → logprob: -16.563283920288086
    9. '  ' → logprob: -16.813283920288086
    10. ')=' → logprob: -16.813283920288086

Token 1030: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.0024758970830589533
    2. ' block' → logprob: -6.002475738525391
    3. '   ' → logprob: -15.37747573852539
    4. ' ' → logprob: -18.12747573852539
    5. 'bloc' → logprob: -18.87747573852539
    6. '	block' → logprob: -19.25247573852539
    7. '  ' → logprob: -19.25247573852539
    8. 'b' → logprob: -20.87747573852539
    9. 'blok' → logprob: -21.37747573852539
    10. '(block' → logprob: -21.37747573852539

Token 1031: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2537408173084259
    2. ' =' → logprob: -2.0037407875061035
    3. '   ' → logprob: -3.2537407875061035
    4. '<|end|>' → logprob: -4.2537407875061035
    5. ',' → logprob: -4.5037407875061035
    6. '    
' → logprob: -4.6287407875061035
    7. '=' → logprob: -4.8787407875061035
    8. '
' → logprob: -6.2537407875061035
    9. '<|end|>' → logprob: -6.6287407875061035
    10. '[' → logprob: -7.0037407875061035

Token 1032: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011740362970158458
    2. '
' → logprob: -7.001173973083496
    3. '    
' → logprob: -8.376173973083496
    4. 'if' → logprob: -10.626173973083496
    5. 'horizontal' → logprob: -12.251173973083496
    6. 'dx' → logprob: -14.626173973083496
    7. 'import' → logprob: -14.751173973083496
    8. 'px' → logprob: -14.751173973083496
    9. '   
' → logprob: -15.376173973083496
    10. '#' → logprob: -15.376173973083496

Token 1033: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.37307125329971313
    2. '#' (adapté à ' #') → logprob: -2.2480711936950684
    3. 'dx' → logprob: -2.2480711936950684
    4. 'horizontal' → logprob: -2.4980711936950684
    5. 'cx' → logprob: -4.998071193695068
    6. '   ' → logprob: -6.248071193695068
    7. 'closest' → logprob: -6.373071193695068
    8. 'h' → logprob: -6.498071193695068
    9. 'inside' → logprob: -6.498071193695068
    10. 'px' → logprob: -6.623071193695068

Token 1034: ' Clamp' (ID: 191815)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.673481285572052
    2. '#' → logprob: -1.1734812259674072
    3. 'dx' → logprob: -2.6734812259674072
    4. 'horizontal' → logprob: -2.6734812259674072
    5. 'cx' → logprob: -4.173481464385986
    6. 'px' → logprob: -4.798481464385986
    7. 'h' → logprob: -5.298481464385986
    8. 'hor' → logprob: -5.923481464385986
    9. '   ' → logprob: -6.048481464385986
    10. 'hx' → logprob: -6.173481464385986

Token 1035: ' ball' (ID: 7880)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' → logprob: -0.5072436928749084
    2. ' cx' → logprob: -1.6322436332702637
    3. 'bx' → logprob: -2.8822436332702637
    4. 'closest' → logprob: -3.2572436332702637
    5. 'ball' → logprob: -3.5072436332702637
    6. '   ' → logprob: -3.6322436332702637
    7. ' bx' → logprob: -4.507243633270264
    8. ' ball' → logprob: -4.632243633270264
    9. 'px' → logprob: -5.257243633270264
    10. 'cl' → logprob: -5.257243633270264

Token 1036: ' center' (ID: 6170)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.012144507840275764
    2. 'x' → logprob: -4.637144565582275
    3. '_c' → logprob: -6.637144565582275
    4. '   ' → logprob: -8.012144088745117
    5. '_horizontal' → logprob: -8.762144088745117
    6. '_dx' → logprob: -8.887144088745117
    7. 'cx' → logprob: -9.262144088745117
    8. '_px' → logprob: -9.512144088745117
    9. '_center' → logprob: -9.762144088745117
    10. '_h' → logprob: -9.762144088745117

Token 1037: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16191326081752777
    2. '_x' → logprob: -1.911913275718689
    3. '   ' → logprob: -7.0369133949279785
    4. ' x' → logprob: -8.16191291809082
    5. 'to' → logprob: -9.16191291809082
    6. ' to' → logprob: -9.41191291809082
    7. '[' → logprob: -9.78691291809082
    8. '_ball' → logprob: -10.16191291809082
    9. 'cx' → logprob: -10.28691291809082
    10. ' horizontally' → logprob: -10.41191291809082

Token 1038: ',y' (ID: 16103)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28037649393081665
    2. ' =' → logprob: -1.9053764343261719
    3. '_cl' → logprob: -3.030376434326172
    4. 'cl' → logprob: -3.530376434326172
    5. 'to' → logprob: -4.780376434326172
    6. ' to' → logprob: -5.530376434326172
    7. 'x' → logprob: -6.655376434326172
    8. '_c' → logprob: -6.905376434326172
    9. '_x' → logprob: -7.905376434326172
    10. '   ' → logprob: -8.030376434326172

Token 1039: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0472404956817627
    2. '=' → logprob: -1.7972404956817627
    3. 'cl' → logprob: -1.7972404956817627
    4. 'to' → logprob: -2.1722404956817627
    5. ' to' → logprob: -2.4222404956817627
    6. '   ' → logprob: -2.4222404956817627
    7. '_cl' → logprob: -4.047240257263184
    8. 'x' → logprob: -5.422240257263184
    9. 'ball' → logprob: -7.297240257263184
    10. 'in' → logprob: -7.297240257263184

Token 1040: ' block' (ID: 4355)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.22862406075000763
    2. '(min' → logprob: -1.9786241054534912
    3. 'max' → logprob: -2.978624105453491
    4. ' min' → logprob: -5.103623867034912
    5. '[min' → logprob: -5.228623867034912
    6. '(max' → logprob: -5.853623867034912
    7. ' max' → logprob: -7.103623867034912
    8. '[max' → logprob: -9.72862434387207
    9. ' (' → logprob: -10.85362434387207
    10. 'closest' → logprob: -11.35362434387207

Token 1041: ' bottom' (ID: 8725)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.0540355443954468
    2. '[' → logprob: -1.8040355443954468
    3. 'x' → logprob: -1.9290355443954468
    4. '   ' → logprob: -2.3040356636047363
    5. 'min' → logprob: -2.5540356636047363
    6. ' horizontally' → logprob: -3.6790356636047363
    7. ' coordinates' → logprob: -3.9290356636047363
    8. ''s' → logprob: -4.054035663604736
    9. '[min' → logprob: -4.304035663604736
    10. 'horizontal' → logprob: -4.679035663604736

Token 1042: ' rectangle' (ID: 45808)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.171105980873108
    2. 'cl' → logprob: -1.171105980873108
    3. '_x' → logprob: -1.421105980873108
    4. '_cl' → logprob: -2.7961058616638184
    5. 'cx' → logprob: -3.2961058616638184
    6. '   ' → logprob: -4.671105861663818
    7. '
' → logprob: -4.671105861663818
    8. 'px' → logprob: -5.046105861663818
    9. '_px' → logprob: -6.046105861663818
    10. '_c' → logprob: -6.171105861663818

Token 1043: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14784586429595947
    2. 'cl' → logprob: -2.02284574508667
    3. '
' → logprob: -5.77284574508667
    4. 'cx' → logprob: -6.89784574508667
    5. '    
' → logprob: -8.022846221923828
    6. 'px' → logprob: -9.147846221923828
    7. 'closest' → logprob: -9.147846221923828
    8. ' cl' → logprob: -9.397846221923828
    9. 'bx' → logprob: -9.397846221923828
    10. 'x' → logprob: -9.522846221923828

Token 1044: ' nearest' (ID: 35210)
  Prédit: 'closest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'closest' → logprob: -0.4191133677959442
    2. 'horizontal' → logprob: -1.9191133975982666
    3. 'x' → logprob: -2.5441133975982666
    4. ' closest' → logprob: -3.4191133975982666
    5. ' horizontal' → logprob: -3.5441133975982666
    6. 'calcul' → logprob: -4.1691131591796875
    7. ' calculating' → logprob: -4.7941131591796875
    8. ' px' → logprob: -5.2941131591796875
    9. 'px' → logprob: -5.5441131591796875
    10. 'min' → logprob: -5.6691131591796875

Token 1045: ' horizontal' (ID: 25511)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.13766516745090485
    2. ' px' → logprob: -3.012665271759033
    3. 'cx' → logprob: -3.387665271759033
    4. 'x' → logprob: -3.762665271759033
    5. 'qx' → logprob: -4.762665271759033
    6. 'point' → logprob: -5.887665271759033
    7. 'bx' → logprob: -5.887665271759033
    8. 'cl' → logprob: -6.012665271759033
    9. ' cx' → logprob: -6.512665271759033
    10. 'pt' → logprob: -7.262665271759033

Token 1046: ' point' (ID: 2438)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.11627981066703796
    2. 'point' → logprob: -2.7412798404693604
    3. 'x' → logprob: -3.7412798404693604
    4. 'cx' → logprob: -5.366279602050781
    5. ' px' → logprob: -5.491279602050781
    6. 'qx' → logprob: -5.616279602050781
    7. 'pt' → logprob: -6.491279602050781
    8. 'closest' → logprob: -6.741279602050781
    9. '_px' → logprob: -6.866279602050781
    10. 'cl' → logprob: -6.866279602050781

Token 1047: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18448638916015625
    2. 'cl' → logprob: -1.8094863891601562
    3. '
' → logprob: -5.809486389160156
    4. '    
' → logprob: -7.559486389160156
    5. 'px' → logprob: -8.059486389160156
    6. 'closest' → logprob: -8.059486389160156
    7. 'cx' → logprob: -8.809486389160156
    8. 'nx' → logprob: -9.059486389160156
    9. 'nearest' → logprob: -9.559486389160156
    10. ' cl' → logprob: -10.309486389160156

Token 1048: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043638113886117935
    2. 'cl' → logprob: -3.168638229370117
    3. '
' → logprob: -9.043638229370117
    4. 'closest' → logprob: -9.043638229370117
    5. '    
' → logprob: -9.168638229370117
    6. 'px' → logprob: -9.293638229370117
    7. 'nearest' → logprob: -9.793638229370117
    8. 'cx' → logprob: -10.293638229370117
    9. 'x' → logprob: -10.418638229370117
    10. 'nx' → logprob: -10.918638229370117

Token 1049: ' cx' (ID: 44448)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.370980441570282
    2. 'closest' → logprob: -1.4959805011749268
    3. '   ' → logprob: -2.8709805011749268
    4. 'nearest' → logprob: -3.9959805011749268
    5. 'cx' (adapté à ' cx') → logprob: -4.870980262756348
    6. 'nx' → logprob: -6.245980262756348
    7. 'px' → logprob: -8.620980262756348
    8. 'bx' → logprob: -8.620980262756348
    9. '    
' → logprob: -8.995980262756348
    10. '
' → logprob: -8.995980262756348

Token 1050: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01604774221777916
    2. ' =' → logprob: -4.141047954559326
    3. ',' → logprob: -11.516047477722168
    4. '   ' → logprob: -13.141047477722168
    5. 'x' → logprob: -14.266047477722168
    6. '=
' → logprob: -14.641047477722168
    7. '=max' → logprob: -15.891047477722168
    8. '=min' → logprob: -17.016048431396484
    9. 'cl' → logprob: -17.016048431396484
    10. 'if' → logprob: -17.266048431396484

Token 1051: ' ball' (ID: 7880)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.38695305585861206
    2. 'max' → logprob: -1.1369531154632568
    3. ' min' → logprob: -9.886953353881836
    4. ' max' → logprob: -10.386953353881836
    5. '   ' → logprob: -15.511953353881836
    6. 'ball' → logprob: -15.761953353881836
    7. '	min' → logprob: -18.761953353881836
    8. '	max' → logprob: -19.761953353881836
    9. '(min' → logprob: -20.136953353881836
    10. '[min' → logprob: -21.011953353881836

Token 1052: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -6.921253225300461e-05
    2. 'x' → logprob: -9.625069618225098
    3. '[' → logprob: -13.375069618225098
    4. '<|end|>' → logprob: -15.500069618225098
    5. 'import' → logprob: -15.750069618225098
    6. 'max' → logprob: -15.750069618225098
    7. '#' → logprob: -15.750069618225098
    8. '_xlim' → logprob: -15.875069618225098
    9. '   ' → logprob: -16.12506866455078
    10. '<|end|>' → logprob: -16.50006866455078

Token 1053: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7775655388832092
    2. 'if' → logprob: -1.0275654792785645
    3. '
' → logprob: -1.7775654792785645
    4. '   ' → logprob: -4.5275654792785645
    5. 'cl' → logprob: -6.9025654792785645
    6. 'min' → logprob: -7.2775654792785645
    7. 'max' → logprob: -7.9025654792785645
    8. ' =' → logprob: -8.277565956115723
    9. ',' → logprob: -8.402565956115723
    10. '=' → logprob: -9.527565956115723

Token 1054: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08111147582530975
    2. '
' → logprob: -2.956111431121826
    3. 'cx' → logprob: -4.456111431121826
    4. 'if' → logprob: -5.581111431121826
    5. '    
' → logprob: -5.831111431121826
    6. ' =' → logprob: -5.956111431121826
    7. 'cy' → logprob: -6.206111431121826
    8. 'cl' → logprob: -6.706111431121826
    9. ' if' → logprob: -6.831111431121826
    10. '=' → logprob: -8.331111907958984

Token 1055: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' (adapté à ' cy') → logprob: -0.1640818566083908
    2. 'if' → logprob: -1.9140818119049072
    3. 'cx' → logprob: -5.664082050323486
    4. '   ' → logprob: -7.914082050323486
    5. ' if' → logprob: -11.914081573486328
    6. '```' → logprob: -13.289081573486328
    7. '
' → logprob: -13.664081573486328
    8. 'cl' → logprob: -13.789081573486328
    9. '    
' → logprob: -13.789081573486328
    10. 'cz' → logprob: -14.039081573486328

Token 1056: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12789489328861237
    2. ' =' → logprob: -2.127894878387451
    3. '<|end|>' → logprob: -7.627894878387451
    4. ',' → logprob: -8.50289535522461
    5. '   ' → logprob: -8.75289535522461
    6. ' ' → logprob: -10.75289535522461
    7. 'c' → logprob: -11.00289535522461
    8. '=max' → logprob: -11.37789535522461
    9. '
' → logprob: -11.87789535522461
    10. '=
' → logprob: -12.00289535522461

Token 1057: ' ball' (ID: 7880)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8119620084762573
    2. 'min' → logprob: -1.0619620084762573
    3. 'ball' → logprob: -1.5619620084762573
    4. ' max' → logprob: -8.061962127685547
    5. ' min' → logprob: -9.186962127685547
    6. ' ball' → logprob: -9.686962127685547
    7. '   ' → logprob: -11.311962127685547
    8. 'block' → logprob: -11.436962127685547
    9. 'math' → logprob: -13.186962127685547
    10. ' ' → logprob: -13.436962127685547

Token 1058: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.004819918889552355
    2. 'y' → logprob: -5.379819869995117
    3. 'min' → logprob: -9.379819869995117
    4. 'block' → logprob: -10.004819869995117
    5. '   ' → logprob: -10.754819869995117
    6. ' block' → logprob: -11.254819869995117
    7. 'max' → logprob: -11.379819869995117
    8. '_x' → logprob: -11.754819869995117
    9. 'if' → logprob: -12.254819869995117
    10. '_min' → logprob: -12.629819869995117

Token 1059: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22965054214000702
    2. '
' → logprob: -1.6046504974365234
    3. 'if' → logprob: -5.604650497436523
    4. ' if' → logprob: -8.104650497436523
    5. '    
' → logprob: -9.104650497436523
    6. '
' → logprob: -9.979650497436523
    7. 'cx' → logprob: -9.979650497436523
    8. '  
' → logprob: -11.354650497436523
    9. 'cl' → logprob: -11.604650497436523
    10. ',' → logprob: -12.104650497436523

Token 1060: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025469141080975533
    2. 'cx' → logprob: -4.1504693031311035
    3. 'if' → logprob: -4.9004693031311035
    4. ' if' → logprob: -6.4004693031311035
    5. ' cx' → logprob: -8.400468826293945
    6. 'cl' → logprob: -10.900468826293945
    7. '(cx' → logprob: -11.150468826293945
    8. '
' → logprob: -11.400468826293945
    9. '```' → logprob: -12.275468826293945
    10. 'x' → logprob: -12.525468826293945

Token 1061: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11615999788045883
    2. 'cx' → logprob: -2.3661599159240723
    3. 'cl' → logprob: -4.616159915924072
    4. '   ' → logprob: -6.241159915924072
    5. 'nearest' → logprob: -6.741159915924072
    6. 'nx' → logprob: -6.991159915924072
    7. 'hx' → logprob: -7.616159915924072
    8. 'closest' → logprob: -7.616159915924072
    9. 'px' → logprob: -8.11616039276123
    10. '#' (adapté à ' #') → logprob: -8.24116039276123

Token 1062: ' Horizontal' (ID: 75428)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5259188413619995
    2. 'cl' → logprob: -1.6509188413619995
    3. 'cx' → logprob: -2.400918960571289
    4. 'closest' → logprob: -2.900918960571289
    5. 'nearest' → logprob: -3.025918960571289
    6. '#' → logprob: -5.025918960571289
    7. 'nx' → logprob: -5.025918960571289
    8. 'px' → logprob: -5.275918960571289
    9. 'hx' → logprob: -5.775918960571289
    10. 'dx' → logprob: -7.650918960571289

Token 1063: ' distance' (ID: 9324)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2237468659877777
    2. 'dist' → logprob: -2.2237467765808105
    3. 'dx' → logprob: -3.2237467765808105
    4. 'distance' → logprob: -3.4737467765808105
    5. 'cl' → logprob: -4.7237467765808105
    6. 'px' → logprob: -5.4737467765808105
    7. '#' → logprob: -6.0987467765808105
    8. 'closest' → logprob: -6.4737467765808105
    9. 'nearest' → logprob: -6.7237467765808105
    10. ' if' → logprob: -6.9737467765808105

Token 1064: ' from' (ID: 591)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.24568070471286774
    2. '   ' → logprob: -1.6206806898117065
    3. 'dx' → logprob: -4.370680809020996
    4. 'hx' → logprob: -5.995680809020996
    5. '=' → logprob: -6.245680809020996
    6. 'ch' → logprob: -7.495680809020996
    7. ' if' → logprob: -7.745680809020996
    8. 'dh' → logprob: -7.995680809020996
    9. 'h' → logprob: -8.120680809020996
    10. 'dist' → logprob: -8.245680809020996

Token 1065: ' ball' (ID: 7880)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cx' → logprob: -0.13664382696151733
    2. '(cx' → logprob: -2.886643886566162
    3. '0' → logprob: -3.136643886566162
    4. 'ball' → logprob: -4.011643886566162
    5. 'max' → logprob: -5.636643886566162
    6. 'min' → logprob: -5.761643886566162
    7. ' cx' → logprob: -6.386643886566162
    8. '(min' → logprob: -8.136643409729004
    9. '(
' → logprob: -8.261643409729004
    10. '(' → logprob: -8.261643409729004

Token 1066: ' center' (ID: 6170)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.037568099796772
    2. ' to' → logprob: -4.037568092346191
    3. 'if' → logprob: -4.412568092346191
    4. 'cx' → logprob: -5.037568092346191
    5. 'center' → logprob: -8.537568092346191
    6. '   ' → logprob: -9.037568092346191
    7. ' if' → logprob: -9.412568092346191
    8. 'x' → logprob: -9.412568092346191
    9. 'point' → logprob: -10.287568092346191
    10. 'px' → logprob: -10.412568092346191

Token 1067: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.2700916528701782
    2. 'if' → logprob: -1.5200916528701782
    3. 'dx' → logprob: -5.020091533660889
    4. ' to' → logprob: -5.395091533660889
    5. '   ' → logprob: -6.145091533660889
    6. ' if' → logprob: -6.270091533660889
    7. '=' → logprob: -6.395091533660889
    8. 'cx' → logprob: -7.145091533660889
    9. 'hx' → logprob: -9.270092010498047
    10. 'x' → logprob: -9.770092010498047

Token 1068: ' block' (ID: 4355)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.9977315664291382
    2. '0' → logprob: -1.1227315664291382
    3. 'max' → logprob: -1.6227315664291382
    4. '(min' → logprob: -3.1227316856384277
    5. 'cl' → logprob: -4.122731685638428
    6. 'block' → logprob: -4.122731685638428
    7. '(max' → logprob: -4.747731685638428
    8. 'cx' → logprob: -5.122731685638428
    9. 'closest' → logprob: -5.372731685638428
    10. '[min' → logprob: -6.247731685638428

Token 1069: ' volume' (ID: 10945)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017474720254540443
    2. 'if' → logprob: -4.14247465133667
    3. ' if' → logprob: -6.76747465133667
    4. 'dx' → logprob: -8.642475128173828
    5. '
' → logprob: -10.017475128173828
    6. 'hx' → logprob: -11.392475128173828
    7. ' =' → logprob: -11.892475128173828
    8. 'horizontal' → logprob: -12.267475128173828
    9. 'hor' → logprob: -12.392475128173828
    10. 'x' → logprob: -12.392475128173828

Token 1070: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010318344458937645
    2. 'if' → logprob: -4.760318279266357
    3. ' if' → logprob: -7.010318279266357
    4. '
' → logprob: -8.010318756103516
    5. 'dx' → logprob: -8.135318756103516
    6. 'h' → logprob: -10.135318756103516
    7. 'hx' → logprob: -10.260318756103516
    8. '    
' → logprob: -11.260318756103516
    9. 'horizontal' → logprob: -11.385318756103516
    10. 'hor' → logprob: -11.385318756103516

Token 1071: ' xy' (ID: 53634)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0596959590911865
    2. 'horizontal' → logprob: -1.1846959590911865
    3. '2' → logprob: -1.4346959590911865
    4. '0' → logprob: -2.8096959590911865
    5. 'the' → logprob: -3.9346959590911865
    6. 'xy' → logprob: -4.934696197509766
    7. '   ' → logprob: -5.559696197509766
    8. 'min' → logprob: -5.809696197509766
    9. '3' → logprob: -5.809696197509766
    10. 'max' → logprob: -6.059696197509766

Token 1072: ' projection' (ID: 41244)
  Prédit: 'plane'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plane' → logprob: -0.013270692899823189
    2. ' plane' → logprob: -4.638270854949951
    3. 'if' → logprob: -7.013270854949951
    4. '-plane' → logprob: -7.013270854949951
    5. 'min' → logprob: -7.638270854949951
    6. '
' → logprob: -7.763270854949951
    7. '   ' → logprob: -7.888270854949951
    8. ' if' → logprob: -8.763270378112793
    9. ':' → logprob: -9.263270378112793
    10. 'projection' → logprob: -10.638270378112793

Token 1073: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01373348943889141
    2. '
' → logprob: -4.638733386993408
    3. 'if' → logprob: -5.638733386993408
    4. '    
' → logprob: -8.888733863830566
    5. ' if' → logprob: -9.013733863830566
    6. 'dx' → logprob: -9.763733863830566
    7. 'x' → logprob: -11.263733863830566
    8. 'horizontal' → logprob: -11.388733863830566
    9. 'distance' → logprob: -11.513733863830566
    10. '```' → logprob: -11.513733863830566

Token 1074: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008472027257084846
    2. 'if' → logprob: -5.383471965789795
    3. 'dx' → logprob: -5.633471965789795
    4. ' if' → logprob: -9.508472442626953
    5. ' dx' → logprob: -10.258472442626953
    6. 'horizontal' → logprob: -10.258472442626953
    7. 'h' → logprob: -10.508472442626953
    8. 'hor' → logprob: -10.508472442626953
    9. 'hx' → logprob: -11.008472442626953
    10. '```' → logprob: -11.258472442626953

Token 1075: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' (adapté à ' dx') → logprob: -0.24231158196926117
    2. 'if' → logprob: -1.7423115968704224
    3. 'hx' → logprob: -4.117311477661133
    4. '   ' → logprob: -4.367311477661133
    5. 'h' → logprob: -5.867311477661133
    6. 'horizontal' → logprob: -5.992311477661133
    7. 'hor' → logprob: -5.992311477661133
    8. 'cl' → logprob: -6.992311477661133
    9. 'dh' → logprob: -7.742311477661133
    10. '```' → logprob: -7.992311477661133

Token 1076: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007157695363275707
    2. ' =' → logprob: -7.250715732574463
    3. '=
' → logprob: -12.125716209411621
    4. '=

' → logprob: -16.000715255737305
    5. '=max' → logprob: -16.625715255737305
    6. 'if' → logprob: -17.000715255737305
    7. '=}' → logprob: -18.125715255737305
    8. ',' → logprob: -18.375715255737305
    9. '   ' → logprob: -18.625715255737305
    10. '=min' → logprob: -18.875715255737305

Token 1077: ' ' (ID: 220)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.25197598338127136
    2. '0' → logprob: -1.5019760131835938
    3. 'min' → logprob: -10.501976013183594
    4. ' max' → logprob: -10.876976013183594
    5. '
' → logprob: -15.751976013183594
    6. ' ' → logprob: -16.001976013183594
    7. '(max' → logprob: -16.126976013183594
    8. '   ' → logprob: -17.126976013183594
    9. '	max' → logprob: -17.376976013183594
    10. '[max' → logprob: -17.376976013183594

Token 1078: '0' (ID: 15)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.25205761194229126
    2. '0' → logprob: -1.5020575523376465
    3. 'min' → logprob: -9.127058029174805
    4. ' max' → logprob: -10.877058029174805
    5. '
' → logprob: -15.002058029174805
    6. '(max' → logprob: -15.252058029174805
    7. ' ' → logprob: -16.252058029174805
    8. '[max' → logprob: -16.752058029174805
    9. '	max' → logprob: -17.377058029174805
    10. '   ' → logprob: -17.377058029174805

Token 1079: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39327678084373474
    2. 'if' → logprob: -1.1432768106460571
    3. ' if' → logprob: -5.768276691436768
    4. '   ' → logprob: -5.768276691436768
    5. '    
' → logprob: -9.893277168273926
    6. '.' → logprob: -10.268277168273926
    7. '
' → logprob: -10.768277168273926
    8. '0' → logprob: -11.643277168273926
    9. '	if' → logprob: -11.768277168273926
    10. 'If' → logprob: -13.143277168273926

Token 1080: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22995691001415253
    2. 'if' → logprob: -1.604956865310669
    3. ' if' → logprob: -5.604957103729248
    4. '   ' → logprob: -7.104957103729248
    5. '    
' → logprob: -11.85495662689209
    6. '
' → logprob: -12.22995662689209
    7. '	if' → logprob: -12.35495662689209
    8. '<|end|>' → logprob: -12.35495662689209
    9. ';if' → logprob: -12.85495662689209
    10. '0' → logprob: -12.85495662689209

Token 1081: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0005426656571216881
    2. ' if' → logprob: -7.875542640686035
    3. '   ' → logprob: -8.875542640686035
    4. 'dy' → logprob: -10.750542640686035
    5. '
' → logprob: -13.625542640686035
    6. 'dx' → logprob: -17.50054359436035
    7. '	if' → logprob: -17.75054359436035
    8. '```' → logprob: -18.12554359436035
    9. 'elif' → logprob: -18.25054359436035
    10. 'If' → logprob: -18.50054359436035

Token 1082: ' cx' (ID: 44448)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' → logprob: -0.06929507106542587
    2. 'ball' → logprob: -2.9442951679229736
    3. ' cx' → logprob: -4.3192949295043945
    4. ' ball' → logprob: -7.0692949295043945
    5. '(cx' → logprob: -9.444294929504395
    6. 'bx' → logprob: -10.444294929504395
    7. '   ' → logprob: -10.944294929504395
    8. '  ' → logprob: -12.069294929504395
    9. ' ' → logprob: -12.944294929504395
    10. 'cy' → logprob: -13.319294929504395

Token 1083: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.28131160140037537
    2. ' <' → logprob: -1.4063116312026978
    3. '>' → logprob: -9.531311988830566
    4. ' >' → logprob: -10.656311988830566
    5. '<x' → logprob: -11.031311988830566
    6. '<class' → logprob: -11.781311988830566
    7. ' ' → logprob: -12.281311988830566
    8. '[' → logprob: -12.281311988830566
    9. '<float' → logprob: -12.781311988830566
    10. '   ' → logprob: -13.031311988830566

Token 1084: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.9361264946837764e-07
    2. ' min' → logprob: -16.125
    3. '[min' → logprob: -20.25
    4. '	min' → logprob: -20.375
    5. '=min' → logprob: -20.375
    6. '   ' → logprob: -21.0
    7. '(min' → logprob: -21.625
    8. 'xmin' → logprob: -21.875
    9. '_min' → logprob: -22.25
    10. 'max' → logprob: -22.875

Token 1085: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: 0.0
    2. ' x' → logprob: -17.5
    3. 'xmin' → logprob: -19.125
    4. '```' → logprob: -19.125
    5. '[' → logprob: -20.0
    6. '   ' → logprob: -20.125
    7. '_x' → logprob: -20.1875
    8. '(x' → logprob: -20.3125
    9. 'y' → logprob: -20.875
    10. 'min' → logprob: -21.0

Token 1086: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.17986631393432617
    2. ':' → logprob: -1.8048663139343262
    3. '   ' → logprob: -10.179866790771484
    4. 'dx' → logprob: -10.304866790771484
    5. 'else' → logprob: -10.429866790771484
    6. ':
' → logprob: -12.304866790771484
    7. ':

' → logprob: -12.679866790771484
    8. '):
' → logprob: -12.804866790771484
    9. '       ' → logprob: -12.929866790771484
    10. ' else' → logprob: -12.929866790771484

Token 1087: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6391977071762085
    2. '       ' → logprob: -1.8891977071762085
    3. ' dx' → logprob: -2.014197826385498
    4. 'dx' → logprob: -2.139197826385498
    5. ':' → logprob: -3.264197826385498
    6. '_dx' → logprob: -4.514197826385498
    7. '=' → logprob: -5.264197826385498
    8. '(dx' → logprob: -5.514197826385498
    9. ' =' → logprob: -6.139197826385498
    10. ':
' → logprob: -6.139197826385498

Token 1088: ' dx' (ID: 29472)
  Prédit: ' dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.5763260126113892
    2. 'dx' (adapté à ' dx') → logprob: -0.8263260126113892
    3. ' min' → logprob: -8.826326370239258
    4. '       ' → logprob: -9.076326370239258
    5. 'min' → logprob: -9.826326370239258
    6. '   ' → logprob: -10.451326370239258
    7. '           ' → logprob: -10.826326370239258
    8. '(dx' → logprob: -11.826326370239258
    9. '_dx' → logprob: -12.326326370239258
    10. '
' → logprob: -12.951326370239258

Token 1089: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07888989895582199
    2. ' =' → logprob: -2.578889846801758
    3. '=min' → logprob: -16.328889846801758
    4. '=
' → logprob: -16.953889846801758
    5. '.=' → logprob: -18.078889846801758
    6. '=

' → logprob: -19.078889846801758
    7. '＝' → logprob: -19.578889846801758
    8. '+=' → logprob: -20.203889846801758
    9. '=}' → logprob: -20.578889846801758
    10. ' ' → logprob: -20.828889846801758

Token 1090: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -3.070975071750581e-05
    2. ' min' → logprob: -10.500030517578125
    3. '(min' → logprob: -12.750030517578125
    4. '   ' → logprob: -16.375030517578125
    5. '	min' → logprob: -16.750030517578125
    6. '[min' → logprob: -17.375030517578125
    7. 'mini' → logprob: -19.625030517578125
    8. '_min' → logprob: -20.000030517578125
    9. 'minimum' → logprob: -20.625030517578125
    10. '=min' → logprob: -20.625030517578125

Token 1091: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.3458322731312364e-06
    2. '(min' → logprob: -11.875007629394531
    3. '(abs' → logprob: -16.00000762939453
    4. '(' → logprob: -16.75000762939453
    5. '```' → logprob: -16.87500762939453
    6. 'min' → logprob: -17.12500762939453
    7. ' min' → logprob: -18.00000762939453
    8. '(x' → logprob: -18.12500762939453
    9. 'abs' → logprob: -18.12500762939453
    10. '(cx' → logprob: -18.37500762939453

Token 1092: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.000627014203928411
    2. '-' → logprob: -7.375627040863037
    3. '-c' → logprob: -14.750626564025879
    4. ' ' → logprob: -18.125627517700195
    5. ' -
' → logprob: -19.125627517700195
    6. '(cx' → logprob: -19.125627517700195
    7. '-x' → logprob: -19.875627517700195
    8. '   ' → logprob: -20.000627517700195
    9. ' ' → logprob: -20.375627517700195
    10. 'x' → logprob: -20.625627517700195

Token 1093: ' cx' (ID: 44448)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' → logprob: -2.7729658540920354e-05
    2. ' cx' → logprob: -10.500027656555176
    3. '(cx' → logprob: -16.500028610229492
    4. '.cx' → logprob: -17.875028610229492
    5. 'cy' → logprob: -21.500028610229492
    6. 'c' → logprob: -21.750028610229492
    7. 'cc' → logprob: -22.375028610229492
    8. 'ct' → logprob: -22.625028610229492
    9. 'ctx' → logprob: -23.000028610229492
    10. 'Cx' → logprob: -23.125028610229492

Token 1094: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030219130218029022
    2. 'elif' → logprob: -3.530219078063965
    3. ' elif' → logprob: -8.780219078063965
    4. '<|end|>' → logprob: -8.905219078063965
    5. '
' → logprob: -9.030219078063965
    6. '    
' → logprob: -11.030219078063965
    7. '	elif' → logprob: -11.030219078063965
    8. '<|end|>' → logprob: -11.655219078063965
    9. ',' → logprob: -12.655219078063965
    10. '  ' → logprob: -12.780219078063965

Token 1095: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008658776991069317
    2. 'elif' → logprob: -4.7586588859558105
    3. ' elif' → logprob: -10.258658409118652
    4. '<|end|>' → logprob: -12.633658409118652
    5. '    
' → logprob: -13.633658409118652
    6. '
' → logprob: -13.633658409118652
    7. '	elif' → logprob: -14.133658409118652
    8. '  ' → logprob: -14.258658409118652
    9. '```' → logprob: -14.258658409118652
    10. '       ' → logprob: -14.633658409118652

Token 1096: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.04197391867637634
    2. ' elif' → logprob: -3.291973829269409
    3. '   ' → logprob: -5.541974067687988
    4. 'el' → logprob: -12.291974067687988
    5. '	elif' → logprob: -13.916974067687988
    6. 'else' → logprob: -16.041973114013672
    7. 'if' → logprob: -16.041973114013672
    8. ' ' → logprob: -16.916973114013672
    9. ' el' → logprob: -17.541973114013672
    10. '  ' → logprob: -17.541973114013672

Token 1097: ' cx' (ID: 44448)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' → logprob: -0.018164223060011864
    2. ' cx' → logprob: -4.018164157867432
    3. '(cx' → logprob: -11.89316463470459
    4. 'max' → logprob: -12.01816463470459
    5. '.cx' → logprob: -14.14316463470459
    6. ' max' → logprob: -15.14316463470459
    7. 'cy' → logprob: -15.64316463470459
    8. ' ' → logprob: -16.268163681030273
    9. '   ' → logprob: -16.268163681030273
    10. 'c' → logprob: -17.268163681030273

Token 1098: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.012510828673839569
    2. '>' → logprob: -4.387510776519775
    3. ' ' → logprob: -14.387511253356934
    4. ' >
' → logprob: -15.512511253356934
    5. '   ' → logprob: -16.012510299682617
    6. ' ' → logprob: -16.137510299682617
    7. ':' → logprob: -16.762510299682617
    8. ' <' → logprob: -17.137510299682617
    9. '[' → logprob: -17.387510299682617
    10. '<|end|>' → logprob: -17.387510299682617

Token 1099: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0005530327325686812
    2. ' max' → logprob: -7.500553131103516
    3. '[max' → logprob: -20.500553131103516
    4. 'x' → logprob: -21.375553131103516
    5. 'mx' → logprob: -21.875553131103516
    6. 'Max' → logprob: -21.875553131103516
    7. '(max' → logprob: -21.875553131103516
    8. '   ' → logprob: -22.375553131103516
    9. '_max' → logprob: -22.375553131103516
    10. '=max' → logprob: -22.375553131103516

Token 1100: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.5048530030981055e-06
    2. 'y' → logprob: -13.625001907348633
    3. 'max' → logprob: -15.250001907348633
    4. '
' → logprob: -17.875001907348633
    5. '#' → logprob: -17.937501907348633
    6. '```' → logprob: -18.000001907348633
    7. '   ' → logprob: -18.312501907348633
    8. ' x' → logprob: -18.875001907348633
    9. '[' → logprob: -19.062501907348633
    10. ' ' → logprob: -19.250001907348633

Token 1101: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.303913414478302
    2. ':' → logprob: -1.4289133548736572
    3. '       ' → logprob: -3.8039133548736572
    4. '   ' → logprob: -9.803913116455078
    5. ' :
' → logprob: -10.053913116455078
    6. '):
' → logprob: -10.303913116455078
    7. '<|end|>' → logprob: -10.803913116455078
    8. ':

' → logprob: -11.553913116455078
    9. ',' → logprob: -11.803913116455078
    10. '1' → logprob: -11.928913116455078

Token 1102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10734010487794876
    2. 'dx' → logprob: -2.482340097427368
    3. 'cx' → logprob: -4.732340335845947
    4. ' dx' → logprob: -4.857340335845947
    5. ' cx' → logprob: -6.982340335845947
    6. '   ' → logprob: -7.607340335845947
    7. '(cx' → logprob: -9.857339859008789
    8. '```' → logprob: -9.982339859008789
    9. '_dx' → logprob: -10.107339859008789
    10. '(dx' → logprob: -10.357339859008789

Token 1103: ' dx' (ID: 29472)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' → logprob: -0.048688650131225586
    2. ' cx' → logprob: -3.0486886501312256
    3. '(cx' → logprob: -9.298688888549805
    4. 'dx' (adapté à ' dx') → logprob: -11.798688888549805
    5. '.cx' → logprob: -13.298688888549805
    6. ' dx' → logprob: -14.673688888549805
    7. '   ' → logprob: -16.548688888549805
    8. 'Cx' → logprob: -17.423688888549805
    9. 'xc' → logprob: -18.048688888549805
    10. '       ' → logprob: -18.673688888549805

Token 1104: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163628220558167
    2. ' =' → logprob: -4.264163494110107
    3. '=
' → logprob: -16.264163970947266
    4. '   ' → logprob: -18.139163970947266
    5. '       ' → logprob: -18.764163970947266
    6. '=

' → logprob: -20.514163970947266
    7. '.=' → logprob: -20.639163970947266
    8. '＝' → logprob: -20.889163970947266
    9. ' =
' → logprob: -20.889163970947266
    10. ' ' → logprob: -21.014163970947266

Token 1105: ' cx' (ID: 44448)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' → logprob: -0.01815626211464405
    2. ' cx' → logprob: -4.018156051635742
    3. '(cx' → logprob: -12.018156051635742
    4. '.cx' → logprob: -15.018156051635742
    5. 'xc' → logprob: -18.518156051635742
    6. 'cy' → logprob: -18.768156051635742
    7. 'dx' → logprob: -18.768156051635742
    8. 'px' → logprob: -19.393156051635742
    9. 'Cx' → logprob: -19.393156051635742
    10. 'x' → logprob: -19.518156051635742

Token 1106: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0019287518225610256
    2. '-' → logprob: -6.251928806304932
    3. ' ' → logprob: -16.251928329467773
    4. ' -
' → logprob: -17.376928329467773
    5. ' ' → logprob: -19.626928329467773
    6. '-min' → logprob: -20.126928329467773
    7. '-
' → logprob: -20.876928329467773
    8. ' −' → logprob: -21.001928329467773
    9. '<|end|>' → logprob: -21.001928329467773
    10. '```' → logprob: -21.751928329467773

Token 1107: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.4855663721391466e-05
    2. ' max' → logprob: -11.125015258789062
    3. 'x' → logprob: -17.375015258789062
    4. '[max' → logprob: -17.875015258789062
    5. '(max' → logprob: -18.000015258789062
    6. 'Max' → logprob: -18.750015258789062
    7. '   ' → logprob: -18.875015258789062
    8. '<|end|>' → logprob: -19.000015258789062
    9. 'maxlength' → logprob: -19.000015258789062
    10. '_max' → logprob: -19.125015258789062

Token 1108: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2352385965641588e-05
    2. 'y' → logprob: -11.750012397766113
    3. 'max' → logprob: -12.375012397766113
    4. '   ' → logprob: -16.500011444091797
    5. ' x' → logprob: -16.500011444091797
    6. '1' → logprob: -17.625011444091797
    7. '```' → logprob: -17.875011444091797
    8. 'ox' → logprob: -18.125011444091797
    9. ' max' → logprob: -18.500011444091797
    10. ' ' → logprob: -19.000011444091797

Token 1109: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017181389266625047
    2. '
' → logprob: -6.626718044281006
    3. '    
' → logprob: -7.876718044281006
    4. 'elif' → logprob: -12.251718521118164
    5. '  
' → logprob: -13.001718521118164
    6. '        
' → logprob: -13.251718521118164
    7. 'else' → logprob: -14.251718521118164
    8. '<|end|>' → logprob: -14.251718521118164
    9. '```' → logprob: -14.251718521118164
    10. ',' → logprob: -14.501718521118164

Token 1110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013884804211556911
    2. 'dy' → logprob: -4.888885021209717
    3. '
' → logprob: -5.388885021209717
    4. ' dy' → logprob: -7.263885021209717
    5. '    
' → logprob: -7.388885021209717
    6. '```' → logprob: -8.763884544372559
    7. 'elif' → logprob: -8.888884544372559
    8. '  
' → logprob: -10.638884544372559
    9. 'else' → logprob: -11.388884544372559
    10. ' elif' → logprob: -11.888884544372559

Token 1111: ' dy' (ID: 11996)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024304118007421494
    2. 'dy' (adapté à ' dy') → logprob: -3.774304151535034
    3. ' dy' → logprob: -7.149303913116455
    4. '
' → logprob: -9.149304389953613
    5. 'elif' → logprob: -9.399304389953613
    6. '    
' → logprob: -10.274304389953613
    7. 'else' → logprob: -10.649304389953613
    8. ' elif' → logprob: -12.024304389953613
    9. '```' → logprob: -12.274304389953613
    10. ' else' → logprob: -12.399304389953613

Token 1112: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192990899086
    2. ' =' → logprob: -1.5019298791885376
    3. '   ' → logprob: -14.876930236816406
    4. ' ' → logprob: -15.751930236816406
    5. '=
' → logprob: -16.001930236816406
    6. '=None' → logprob: -16.501930236816406
    7. ':' → logprob: -17.376930236816406
    8. '<|end|>' → logprob: -17.501930236816406
    9. ',' → logprob: -17.626930236816406
    10. '```' → logprob: -18.001930236816406

Token 1113: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -11.25001335144043
    3. 'min' → logprob: -15.62501335144043
    4. '   ' → logprob: -16.25001335144043
    5. ' min' → logprob: -19.00001335144043
    6. 'max' → logprob: -19.62501335144043
    7. 'y' → logprob: -19.62501335144043
    8. '    ' → logprob: -20.12501335144043
    9. '  ' → logprob: -20.25001335144043
    10. '       ' → logprob: -21.00001335144043

Token 1114: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.375001907348633
    3. 'min' → logprob: -15.000001907348633
    4. 'max' → logprob: -17.250001907348633
    5. '   ' → logprob: -18.125001907348633
    6. ' min' → logprob: -20.250001907348633
    7. 'y' → logprob: -20.500001907348633
    8. 'py' → logprob: -20.750001907348633
    9. 'dy' → logprob: -21.125001907348633
    10. 'if' → logprob: -21.375001907348633

Token 1115: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06544625759124756
    2. ' =' → logprob: -3.440446376800537
    3. '=' → logprob: -3.565446376800537
    4. '
' → logprob: -6.690446376800537
    5. ' if' → logprob: -6.940446376800537
    6. '<|end|>' → logprob: -7.815446376800537
    7. 'if' → logprob: -9.315445899963379
    8. '    
' → logprob: -9.815445899963379
    9. '  ' → logprob: -10.065445899963379
    10. ' ' → logprob: -10.065445899963379

Token 1116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0045037041418254375
    2. ' if' → logprob: -6.2545037269592285
    3. ' =' → logprob: -6.6295037269592285
    4. '=' → logprob: -7.6295037269592285
    5. '<|end|>' → logprob: -8.25450325012207
    6. '```' → logprob: -8.62950325012207
    7. 'if' → logprob: -9.62950325012207
    8. '    ' → logprob: -9.75450325012207
    9. 'If' → logprob: -9.87950325012207
    10. '
' → logprob: -10.37950325012207

Token 1117: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24808305501937866
    2. 'if' (adapté à ' if') → logprob: -1.7480831146240234
    3. ' if' → logprob: -3.1230831146240234
    4. 'elif' → logprob: -6.748083114624023
    5. 'If' → logprob: -8.873083114624023
    6. '=' → logprob: -9.373083114624023
    7. '```' → logprob: -9.373083114624023
    8. ' =' → logprob: -10.123083114624023
    9. ' elif' → logprob: -11.498083114624023
    10. '    ' → logprob: -11.873083114624023

Token 1118: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -9.13388703338569e-06
    2. ' cy' → logprob: -11.625009536743164
    3. '   ' → logprob: -15.625009536743164
    4. '.cy' → logprob: -17.625009536743164
    5. 'ball' → logprob: -18.875009536743164
    6. 'cycl' → logprob: -18.875009536743164
    7. 'cyj' → logprob: -19.375009536743164
    8. 'cx' → logprob: -20.250009536743164
    9. '
' → logprob: -20.500009536743164
    10. 'cyan' → logprob: -20.500009536743164

Token 1119: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.020548781380057335
    2. '<' → logprob: -3.8955488204956055
    3. ' >' → logprob: -12.020548820495605
    4. ' ' → logprob: -15.645548820495605
    5. '>' → logprob: -16.02054786682129
    6. '<|end|>' → logprob: -16.02054786682129
    7. '   ' → logprob: -16.14554786682129
    8. '[' → logprob: -17.14554786682129
    9. '<class' → logprob: -17.14554786682129
    10. '```' → logprob: -17.64554786682129

Token 1120: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -7.896309739408025e-07
    2. ' min' → logprob: -14.500000953674316
    3. 'max' → logprob: -15.625000953674316
    4. '	min' → logprob: -17.0
    5. '
' → logprob: -19.125
    6. 'minimum' → logprob: -19.25
    7. '(min' → logprob: -19.625
    8. '[min' → logprob: -19.625
    9. '_min' → logprob: -20.0
    10. 'm' → logprob: -20.5

Token 1121: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.522638169466518e-05
    2. 'min' → logprob: -10.625024795532227
    3. 'x' → logprob: -14.625024795532227
    4. 'max' → logprob: -16.000024795532227
    5. 'ey' → logprob: -16.625024795532227
    6. '   ' → logprob: -17.250024795532227
    7. '1' → logprob: -17.500024795532227
    8. 'iy' → logprob: -17.750024795532227
    9. '
' → logprob: -17.875024795532227
    10. '_y' → logprob: -18.125024795532227

Token 1122: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9449939727783203
    2. ':
' → logprob: -1.0699939727783203
    3. ':' → logprob: -1.3199939727783203
    4. '   ' → logprob: -6.81999397277832
    5. ',' → logprob: -10.81999397277832
    6. ':

' → logprob: -11.31999397277832
    7. '-' → logprob: -11.56999397277832
    8. '):
' → logprob: -11.94499397277832
    9. ' :
' → logprob: -12.44499397277832
    10. '      ' → logprob: -12.69499397277832

Token 1123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004716941155493259
    2. 'dy' → logprob: -6.004716873168945
    3. '   ' → logprob: -6.629716873168945
    4. ' dy' → logprob: -7.129716873168945
    5. 'cy' → logprob: -9.754716873168945
    6. '      ' → logprob: -11.004716873168945
    7. 'min' → logprob: -11.504716873168945
    8. 'y' → logprob: -12.254716873168945
    9. '     ' → logprob: -12.379716873168945
    10. '        ' → logprob: -12.504716873168945

Token 1124: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' (adapté à ' dy') → logprob: -0.10514725744724274
    2. 'min' → logprob: -2.355147361755371
    3. ' dy' → logprob: -5.730147361755371
    4. ' min' → logprob: -6.605147361755371
    5. 'cy' → logprob: -8.605147361755371
    6. '   ' → logprob: -8.855147361755371
    7. '    
' → logprob: -14.605147361755371
    8. '```' → logprob: -14.605147361755371
    9. 'dym' → logprob: -14.855147361755371
    10. '	min' → logprob: -15.605147361755371

Token 1125: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141363143920898
    2. ' =' → logprob: -1.701413631439209
    3. '=
' → logprob: -16.076414108276367
    4. '       ' → logprob: -16.201414108276367
    5. '   ' → logprob: -16.576414108276367
    6. ' ' → logprob: -17.701414108276367
    7. 'dy' → logprob: -18.076414108276367
    8. '<|end|>' → logprob: -18.326414108276367
    9. ' dy' → logprob: -19.076414108276367
    10. ' =
' → logprob: -19.076414108276367

Token 1126: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -5.848420551046729e-05
    2. ' min' → logprob: -9.7500581741333
    3. '	min' → logprob: -16.875059127807617
    4. '(min' → logprob: -17.000059127807617
    5. '   ' → logprob: -18.625059127807617
    6. '_min' → logprob: -19.250059127807617
    7. 'm' → logprob: -19.250059127807617
    8. 'ming' → logprob: -19.750059127807617
    9. '[min' → logprob: -19.750059127807617
    10. ' ' → logprob: -20.375059127807617

Token 1127: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.36574100604048e-06
    2. 'min' → logprob: -12.625004768371582
    3. '1' → logprob: -14.375004768371582
    4. '   ' → logprob: -16.625003814697266
    5. '
' → logprob: -16.750003814697266
    6. ' y' → logprob: -17.125003814697266
    7. '```' → logprob: -17.375003814697266
    8. '_y' → logprob: -17.625003814697266
    9. 'i' → logprob: -17.750003814697266
    10. '(min' → logprob: -17.875003814697266

Token 1128: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0067154900170862675
    2. '-' → logprob: -5.006715297698975
    3. ' -
' → logprob: -17.131715774536133
    4. '   ' → logprob: -17.381715774536133
    5. ' ' → logprob: -17.881715774536133
    6. '-c' → logprob: -18.506715774536133
    7. '-
' → logprob: -20.256715774536133
    8. '       ' → logprob: -20.381715774536133
    9. ' ' → logprob: -20.381715774536133
    10. '
' → logprob: -21.256715774536133

Token 1129: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -1.688212614681106e-05
    2. ' cy' → logprob: -11.000017166137695
    3. 'cyj' → logprob: -16.750017166137695
    4. 'py' → logprob: -17.250017166137695
    5. 'dy' → logprob: -17.875017166137695
    6. 'cycl' → logprob: -18.500017166137695
    7. '.cy' → logprob: -18.625017166137695
    8. '   ' → logprob: -19.250017166137695
    9. 'ca' → logprob: -19.375017166137695
    10. '
' → logprob: -19.375017166137695

Token 1130: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.491498531133402e-06
    2. '
' → logprob: -12.250009536743164
    3. 'elif' → logprob: -13.125009536743164
    4. 'else' → logprob: -13.500009536743164
    5. '<|end|>' → logprob: -14.875009536743164
    6. '    
' → logprob: -15.000009536743164
    7. '```' → logprob: -16.000009536743164
    8. ' else' → logprob: -16.125009536743164
    9. '       ' → logprob: -16.375009536743164
    10. ' elif' → logprob: -16.625009536743164

Token 1131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.226628895296017e-06
    2. 'elif' → logprob: -12.125007629394531
    3. '```' → logprob: -13.750007629394531
    4. '
' → logprob: -15.375007629394531
    5. 'else' → logprob: -15.875007629394531
    6. ' elif' → logprob: -16.00000762939453
    7. '<|end|>' → logprob: -16.37500762939453
    8. '       ' → logprob: -18.00000762939453
    9. '<|end|>' → logprob: -18.75000762939453
    10. '   ' → logprob: -18.75000762939453

Token 1132: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00025526012177579105
    2. 'elif' (adapté à ' elif') → logprob: -8.375255584716797
    3. 'else' → logprob: -11.750255584716797
    4. ' elif' → logprob: -11.875255584716797
    5. '
' → logprob: -12.000255584716797
    6. '```' → logprob: -13.125255584716797
    7. '  ' → logprob: -14.875255584716797
    8. '    
' → logprob: -14.875255584716797
    9. 'dy' → logprob: -15.250255584716797
    10. ' else' → logprob: -15.500255584716797

Token 1133: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.0009114635176956654
    2. ' cy' → logprob: -7.000911235809326
    3. '   ' → logprob: -17.875911712646484
    4. '.cy' → logprob: -18.250911712646484
    5. 'cyj' → logprob: -18.875911712646484
    6. '
' → logprob: -19.375911712646484
    7. 'cycled' → logprob: -19.500911712646484
    8. 'cycles' → logprob: -19.875911712646484
    9. ' ' → logprob: -20.125911712646484
    10. 'dy' → logprob: -20.625911712646484

Token 1134: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.10020796209573746
    2. '>' → logprob: -2.350208044052124
    3. ' ' → logprob: -14.475208282470703
    4. 'y' → logprob: -14.975208282470703
    5. '   ' → logprob: -15.350208282470703
    6. '[' → logprob: -15.975208282470703
    7. 'cy' → logprob: -15.975208282470703
    8. '>
' → logprob: -18.100208282470703
    9. ' >
' → logprob: -18.225208282470703
    10. '()>' → logprob: -18.225208282470703

Token 1135: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0052690957672894
    2. ' max' → logprob: -5.2552690505981445
    3. 'cy' → logprob: -10.255269050598145
    4. '[max' → logprob: -17.63027000427246
    5. '	max' → logprob: -17.88027000427246
    6. '   ' → logprob: -17.88027000427246
    7. '(max' → logprob: -18.25527000427246
    8. '_max' → logprob: -18.25527000427246
    9. 'my' → logprob: -18.38027000427246
    10. ' cy' → logprob: -18.88027000427246

Token 1136: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.014218038879334927
    2. 'max' → logprob: -4.264217853546143
    3. 'x' → logprob: -10.8892183303833
    4. '_max' → logprob: -11.3892183303833
    5. 'ax' → logprob: -11.5142183303833
    6. 'ay' → logprob: -12.6392183303833
    7. ' ymax' → logprob: -12.8892183303833
    8. ' max' → logprob: -13.2642183303833
    9. '=max' → logprob: -13.3892183303833
    10. '(max' → logprob: -13.8892183303833

Token 1137: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05626827850937843
    2. ':' → logprob: -3.0562682151794434
    3. ':
' → logprob: -4.931268215179443
    4. '>' → logprob: -8.681268692016602
    5. '=' → logprob: -9.306268692016602
    6. '   ' → logprob: -9.431268692016602
    7. ' >' → logprob: -10.806268692016602
    8. '0' → logprob: -10.806268692016602
    9. ' =' → logprob: -11.681268692016602
    10. '      ' → logprob: -11.806268692016602

Token 1138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010676169040380046
    2. 'cy' → logprob: -10.000106811523438
    3. '   ' → logprob: -11.000106811523438
    4. 'dy' → logprob: -11.000106811523438
    5. '0' → logprob: -11.375106811523438
    6. ' dy' → logprob: -12.250106811523438
    7. '```' → logprob: -12.750106811523438
    8. '      ' → logprob: -13.125106811523438
    9. ' cy' → logprob: -13.375106811523438
    10. '1' → logprob: -13.750106811523438

Token 1139: ' dy' (ID: 11996)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -1.981667537620524e-06
    2. ' cy' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.000001907348633
    4. 'dy' (adapté à ' dy') → logprob: -18.125001907348633
    5. 'cyj' → logprob: -20.000001907348633
    6. '.cy' → logprob: -20.125001907348633
    7. '0' → logprob: -20.500001907348633
    8. ' ' → logprob: -20.750001907348633
    9. '       ' → logprob: -21.250001907348633
    10. 'cycles' → logprob: -21.250001907348633

Token 1140: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519586384296417
    2. ' =' → logprob: -1.5019586086273193
    3. '>' → logprob: -10.751958847045898
    4. ' >' → logprob: -11.876958847045898
    5. '       ' → logprob: -14.126958847045898
    6. ' ' → logprob: -15.126958847045898
    7. '   ' → logprob: -16.2519588470459
    8. '=
' → logprob: -17.3769588470459
    9. '           ' → logprob: -18.0019588470459
    10. 'dy' → logprob: -18.1269588470459

Token 1141: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.0003374886582605541
    2. ' cy' → logprob: -8.000337600708008
    3. '0' → logprob: -14.250337600708008
    4. '   ' → logprob: -14.250337600708008
    5. ' ' → logprob: -14.875337600708008
    6. 'max' → logprob: -15.125337600708008
    7. ' max' → logprob: -17.250337600708008
    8. '
' → logprob: -17.625337600708008
    9. 'c' → logprob: -18.000337600708008
    10. 'cyj' → logprob: -18.250337600708008

Token 1142: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01815006136894226
    2. '-' → logprob: -4.0181498527526855
    3. ' ' → logprob: -16.018150329589844
    4. '-max' → logprob: -18.768150329589844
    5. '<|end|>' → logprob: -18.893150329589844
    6. '   ' → logprob: -18.893150329589844
    7. '       ' → logprob: -19.643150329589844
    8. '—' → logprob: -19.643150329589844
    9. '−' → logprob: -19.643150329589844
    10. '>' → logprob: -19.893150329589844

Token 1143: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -2.5776860184123507e-06
    2. ' max' → logprob: -13.25000286102295
    3. 'cy' → logprob: -14.37500286102295
    4. 'my' → logprob: -16.875001907348633
    5. '_max' → logprob: -17.125001907348633
    6. 'may' → logprob: -18.250001907348633
    7. '	max' → logprob: -18.500001907348633
    8. '[max' → logprob: -18.750001907348633
    9. '(max' → logprob: -19.000001907348633
    10. 'min' → logprob: -19.875001907348633

Token 1144: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.006761667784303427
    2. 'max' → logprob: -5.00676155090332
    3. 'x' → logprob: -10.25676155090332
    4. '1' → logprob: -12.75676155090332
    5. '2' → logprob: -13.00676155090332
    6. 'ay' → logprob: -13.75676155090332
    7. 'ey' → logprob: -14.00676155090332
    8. ' max' → logprob: -14.13176155090332
    9. '_max' → logprob: -15.00676155090332
    10. ' ymax' → logprob: -15.00676155090332

Token 1145: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07135823369026184
    2. '
' → logprob: -2.8213582038879395
    3. '    
' → logprob: -4.9463582038879395
    4. '  
' → logprob: -7.1963582038879395
    5. 'distance' → logprob: -7.9463582038879395
    6. ',' → logprob: -8.196358680725098
    7. '   
' → logprob: -8.446358680725098
    8. '```' → logprob: -9.196358680725098
    9. '<|end|>' → logprob: -9.321358680725098
    10. 'import' → logprob: -9.571358680725098

Token 1146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.402970552444458
    2. 'dist' → logprob: -1.902970552444458
    3. ' dist' → logprob: -2.902970552444458
    4. '```' → logprob: -3.152970552444458
    5. ' horizontal' → logprob: -3.402970552444458
    6. ' horiz' → logprob: -3.652970552444458
    7. 'horizontal' → logprob: -4.902970314025879
    8. 'distance' → logprob: -5.152970314025879
    9. '
' → logprob: -5.527970314025879
    10. 'd' → logprob: -6.527970314025879

Token 1147: ' horizontal' (ID: 25511)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'horizontal' (adapté à ' horizontal') → logprob: -0.2081194669008255
    2. '   ' → logprob: -2.7081193923950195
    3. 'import' → logprob: -2.8331193923950195
    4. 'dist' → logprob: -3.3331193923950195
    5. 'h' → logprob: -4.0831193923950195
    6. 'hor' → logprob: -5.0831193923950195
    7. ' horiz' → logprob: -6.7081193923950195
    8. 'distance' → logprob: -6.9581193923950195
    9. ' horizontal' → logprob: -7.4581193923950195
    10. 'd' → logprob: -7.5831193923950195

Token 1148: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.5031939148902893
    2. 'dist' → logprob: -1.0031938552856445
    3. '_distance' → logprob: -3.7531938552856445
    4. 'distance' → logprob: -5.2531938552856445
    5. ' =' → logprob: -11.628193855285645
    6. 'Dist' → logprob: -12.253193855285645
    7. 'd' → logprob: -12.378193855285645
    8. '=' → logprob: -12.878193855285645
    9. ' dist' → logprob: -13.878193855285645
    10. '_d' → logprob: -14.753193855285645

Token 1149: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196970492601395
    2. ' =' → logprob: -2.811969757080078
    3. '=s' → logprob: -13.561969757080078
    4. '   ' → logprob: -14.811969757080078
    5. '=
' → logprob: -15.811969757080078
    6. '_squared' → logprob: -15.936969757080078
    7. 'import' → logprob: -16.436969757080078
    8. 's' → logprob: -17.061969757080078
    9. ' ' → logprob: -17.061969757080078
    10. '=float' → logprob: -17.561969757080078

Token 1150: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.00014036978245712817
    2. '(math' → logprob: -9.000140190124512
    3. ' math' → logprob: -11.000140190124512
    4. 'dx' → logprob: -15.250140190124512
    5. '(dx' → logprob: -17.500141143798828
    6. '   ' → logprob: -17.625141143798828
    7. 'Math' → logprob: -19.375141143798828
    8. 'max' → logprob: -19.875141143798828
    9. '(' → logprob: -20.125141143798828
    10. '.math' → logprob: -21.000141143798828

Token 1151: '.h' (ID: 1508)
  Prédit: '.h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.h' → logprob: -0.6935116648674011
    2. '.sqrt' → logprob: -0.6935116648674011
    3. 'hyp' → logprob: -8.193511962890625
    4. '.' → logprob: -10.068511962890625
    5. 'sqrt' → logprob: -10.443511962890625
    6. '```' → logprob: -11.443511962890625
    7. '.dist' → logprob: -12.693511962890625
    8. ' hypot' → logprob: -13.568511962890625
    9. '``' → logprob: -14.318511962890625
    10. 'dist' → logprob: -15.068511962890625

Token 1152: 'yp' (ID: 1785)
  Prédit: 'yp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yp' → logprob: -0.0009523137705400586
    2. 'sqrt' → logprob: -7.500952243804932
    3. 'hyp' → logprob: -7.875952243804932
    4. '.sqrt' → logprob: -12.12595272064209
    5. ' hypot' → logprob: -12.37595272064209
    6. '
' → logprob: -12.75095272064209
    7. '   ' → logprob: -13.12595272064209
    8. 'y' → logprob: -14.12595272064209
    9. '```' → logprob: -14.12595272064209
    10. 'math' → logprob: -14.50095272064209

Token 1153: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -2.570319702499546e-05
    2. 'otp' → logprob: -12.375025749206543
    3. 'sqrt' → logprob: -12.375025749206543
    4. 'op' → logprob: -12.625025749206543
    5. 'ots' → logprob: -12.875025749206543
    6. 'at' → logprob: -13.375025749206543
    7. 'o' → logprob: -13.750025749206543
    8. '0' → logprob: -13.750025749206543
    9. 'ort' → logprob: -14.000025749206543
    10. 'hyp' → logprob: -14.125025749206543

Token 1154: '(dx' (ID: 124932)
  Prédit: '(dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dx' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -15.000000953674316
    3. 'dx' → logprob: -15.375000953674316
    4. '(d' → logprob: -18.5
    5. '(cx' → logprob: -18.5
    6. '_dx' → logprob: -18.875
    7. ' (' → logprob: -19.875
    8. '```' → logprob: -20.0
    9. '(
' → logprob: -20.375
    10. '
' → logprob: -20.375

Token 1155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5094070477061905e-05
    2. ' ,' → logprob: -11.250015258789062
    3. ',
' → logprob: -13.250015258789062
    4. '‌,' → logprob: -16.250015258789062
    5. ',d' → logprob: -16.500015258789062
    6. ',

' → logprob: -17.375015258789062
    7. ',\
' → logprob: -18.125015258789062
    8. '```' → logprob: -18.125015258789062
    9. '[' → logprob: -18.625015258789062
    10. '
' → logprob: -18.750015258789062

Token 1156: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -1.5048530030981055e-06
    2. ' dy' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.375001907348633
    4. '
' → logprob: -19.875001907348633
    5. '    
' → logprob: -20.000001907348633
    6. '.dy' → logprob: -21.250001907348633
    7. 'Dy' → logprob: -21.750001907348633
    8. 'd' → logprob: -22.125001907348633
    9. 'dym' → logprob: -22.125001907348633
    10. '0' → logprob: -23.250001907348633

Token 1157: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015681622608099133
    2. ')
' → logprob: -9.50015640258789
    3. '   ' → logprob: -9.62515640258789
    4. '-' → logprob: -12.25015640258789
    5. ' )' → logprob: -12.25015640258789
    6. ' -' → logprob: -12.50015640258789
    7. ',' → logprob: -14.50015640258789
    8. '-)' → logprob: -14.87515640258789
    9. '),' → logprob: -15.37515640258789
    10. ')**' → logprob: -15.37515640258789

Token 1158: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7036494612693787
    2. '   ' → logprob: -0.7036494612693787
    3. 'vertical' → logprob: -4.953649520874023
    4. '    
' → logprob: -5.953649520874023
    5. ' vertical' → logprob: -7.328649520874023
    6. '```' → logprob: -9.828649520874023
    7. 'vert' → logprob: -11.453649520874023
    8. 'if' → logprob: -11.578649520874023
    9. ' if' → logprob: -11.578649520874023
    10. '  
' → logprob: -11.703649520874023

Token 1159: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6976646780967712
    2. 'vertical' → logprob: -0.6976646780967712
    3. 'vert' → logprob: -6.447664737701416
    4. '#' (adapté à ' #') → logprob: -6.572664737701416
    5. 'needed' → logprob: -7.822664737701416
    6. '   ' → logprob: -7.822664737701416
    7. 'required' → logprob: -8.322664260864258
    8. 'ball' → logprob: -8.447664260864258
    9. 'horizontal' → logprob: -9.197664260864258
    10. 'min' → logprob: -10.322664260864258

Token 1160: ' Ball' (ID: 17943)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.4830608069896698
    2. 'if' → logprob: -0.9830608367919922
    3. 'vert' → logprob: -4.983060836791992
    4. '#' → logprob: -7.108060836791992
    5. 'needed' → logprob: -8.108060836791992
    6. 'required' → logprob: -8.858060836791992
    7. 'ball' → logprob: -8.858060836791992
    8. 'z' → logprob: -8.858060836791992
    9. 'horizontal' → logprob: -8.858060836791992
    10. 'min' → logprob: -9.858060836791992

Token 1161: ' center' (ID: 6170)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'center' → logprob: -1.074149250984192
    2. '_center' → logprob: -1.324149250984192
    3. '_z' → logprob: -1.699149250984192
    4. 'z' → logprob: -2.4491491317749023
    5. 'vertical' → logprob: -2.6991491317749023
    6. '_vertical' → logprob: -4.074149131774902
    7. '_radius' → logprob: -4.949149131774902
    8. '_bottom' → logprob: -4.949149131774902
    9. 'radius' → logprob: -5.074149131774902
    10. 'surface' → logprob: -5.199149131774902

Token 1162: ' is' (ID: 382)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.10816919058561325
    2. '_z' → logprob: -2.6081690788269043
    3. 'height' → logprob: -3.7331690788269043
    4. '_height' → logprob: -6.108169078826904
    5. 'vertical' → logprob: -6.108169078826904
    6. 'to' → logprob: -9.233169555664062
    7. '_vertical' → logprob: -9.608169555664062
    8. 'e' → logprob: -9.983169555664062
    9. 'center' → logprob: -10.108169555664062
    10. 'h' → logprob: -10.108169555664062

Token 1163: ' at' (ID: 540)
  Prédit: 'below'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'below' → logprob: -0.6826984286308289
    2. 'r' → logprob: -1.6826984882354736
    3. 'at' → logprob: -1.6826984882354736
    4. ' at' → logprob: -2.9326984882354736
    5. 'under' → logprob: -3.8076984882354736
    6. 'above' → logprob: -3.9326984882354736
    7. ' below' → logprob: -4.5576982498168945
    8. 'inside' → logprob: -5.0576982498168945
    9. '   ' → logprob: -5.3076982498168945
    10. 'max' → logprob: -7.1826982498168945

Token 1164: ' (' (ID: 350)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.02286641299724579
    2. 'ball' → logprob: -3.8978664875030518
    3. '0' → logprob: -6.522866249084473
    4. ' r' → logprob: -7.647866249084473
    5. 'h' → logprob: -9.897866249084473
    6. ' ball' → logprob: -9.897866249084473
    7. '(ball' → logprob: -10.022866249084473
    8. '=' → logprob: -10.397866249084473
    9. 'z' → logprob: -10.647866249084473
    10. 'horizontal' → logprob: -10.772866249084473

Token 1165: 'ball' (ID: 5052)
  Prédit: 'ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.043140776455402374
    2. 'cx' → logprob: -3.1681408882141113
    3. 'bx' → logprob: -9.918140411376953
    4. '0' → logprob: -10.543140411376953
    5. '(cx' → logprob: -10.918140411376953
    6. ' ball' → logprob: -11.668140411376953
    7. '(ball' → logprob: -11.918140411376953
    8. '   ' → logprob: -11.918140411376953
    9. ' cx' → logprob: -12.168140411376953
    10. 'px' → logprob: -12.418140411376953

Token 1166: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -2.7133641196996905e-05
    2. '_y' → logprob: -10.75002670288086
    3. 'x' → logprob: -12.87502670288086
    4. ' _' → logprob: -13.50002670288086
    5. '_' → logprob: -14.87502670288086
    6. ')_' → logprob: -15.50002670288086
    7. '
' → logprob: -15.50002670288086
    8. '_z' → logprob: -15.75002670288086
    9. '   ' → logprob: -15.87502670288086
    10. ',' → logprob: -16.12502670288086

Token 1167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004915529862046242
    2. ' ,' → logprob: -8.00049114227295
    3. ',
' → logprob: -9.00049114227295
    4. '),' → logprob: -11.87549114227295
    5. ')' → logprob: -11.87549114227295
    6. ' ' → logprob: -13.00049114227295
    7. '
' → logprob: -13.12549114227295
    8. '   ' → logprob: -13.25049114227295
    9. ',float' → logprob: -13.37549114227295
    10. ',

' → logprob: -13.62549114227295

Token 1168: ' ball' (ID: 7880)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.0037950887344777584
    2. ' ball' → logprob: -5.628795146942139
    3. 'r' → logprob: -8.87879467010498
    4. '   ' → logprob: -11.50379467010498
    5. ' r' → logprob: -11.62879467010498
    6. '
' → logprob: -11.87879467010498
    7. '0' → logprob: -12.00379467010498
    8. '(ball' → logprob: -12.00379467010498
    9. ' ' → logprob: -12.62879467010498
    10. '-ball' → logprob: -12.87879467010498

Token 1169: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -2.141186450899113e-05
    2. 'y' → logprob: -11.375020980834961
    3. '_x' → logprob: -11.875020980834961
    4. '_z' → logprob: -13.375020980834961
    5. '[' → logprob: -14.125020980834961
    6. ',' → logprob: -15.750020980834961
    7. '
' → logprob: -16.12502098083496
    8. '_
' → logprob: -16.37502098083496
    9. '```' → logprob: -16.50002098083496
    10. '_r' → logprob: -16.62502098083496

Token 1170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001025895617203787
    2. ' ,' → logprob: -10.250102996826172
    3. ')' → logprob: -10.500102996826172
    4. '),' → logprob: -10.625102996826172
    5. ',
' → logprob: -12.000102996826172
    6. ',r' → logprob: -12.625102996826172
    7. '0' → logprob: -13.375102996826172
    8. ',float' → logprob: -14.125102996826172
    9. '   ' → logprob: -14.250102996826172
    10. '
' → logprob: -14.625102996826172

Token 1171: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -3.166338137816638e-05
    2. ' r' → logprob: -10.500031471252441
    3. '0' → logprob: -12.500031471252441
    4. 'ball' → logprob: -15.625031471252441
    5. '
' → logprob: -16.000032424926758
    6. ')' → logprob: -17.250032424926758
    7. '2' → logprob: -17.375032424926758
    8. '   ' → logprob: -17.500032424926758
    9. '    
' → logprob: -17.500032424926758
    10. ' ' → logprob: -17.750032424926758

Token 1172: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02184450998902321
    2. ')
' → logprob: -4.146844387054443
    3. '   ' → logprob: -5.896844387054443
    4. ' -' → logprob: -6.521844387054443
    5. '-' → logprob: -7.521844387054443
    6. '+' → logprob: -7.771844387054443
    7. '),' → logprob: -8.021844863891602
    8. ' +' → logprob: -9.021844863891602
    9. ' )' → logprob: -10.271844863891602
    10. ',' → logprob: -10.271844863891602

Token 1173: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13992874324321747
    2. '   ' → logprob: -2.1399288177490234
    3. '    
' → logprob: -5.389928817749023
    4. 'vertical' → logprob: -5.389928817749023
    5. ' vertical' → logprob: -6.639928817749023
    6. '
' → logprob: -7.139928817749023
    7. '\n' → logprob: -8.264928817749023
    8. 'z' → logprob: -8.389928817749023
    9. ' vertically' → logprob: -8.389928817749023
    10. '  
' → logprob: -8.514928817749023

Token 1174: 'since' (ID: 21910)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03638802468776703
    2. ')
' → logprob: -3.9113879203796387
    3. '   ' → logprob: -5.036387920379639
    4. '
' → logprob: -5.536387920379639
    5. '),' → logprob: -6.536387920379639
    6. ',' → logprob: -7.036387920379639
    7. ' vertically' → logprob: -7.161387920379639
    8. '    
' → logprob: -7.911387920379639
    9. ' )' → logprob: -8.536388397216797
    10. '<|end|>' → logprob: -8.536388397216797

Token 1175: ' bottom' (ID: 8725)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.4775349199771881
    2. 'z' → logprob: -1.3525348901748657
    3. 'ball' → logprob: -2.6025350093841553
    4. 'vertical' → logprob: -4.102534770965576
    5. 'r' → logprob: -4.227534770965576
    6. 'ground' → logprob: -5.602534770965576
    7. 'bottom' → logprob: -5.727534770965576
    8. 'center' → logprob: -6.227534770965576
    9. ' the' → logprob: -6.602534770965576
    10. ' z' → logprob: -6.727534770965576

Token 1176: ' at' (ID: 540)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.5217401385307312
    2. 'z' → logprob: -1.646740198135376
    3. '_z' → logprob: -2.021740198135376
    4. '+' → logprob: -3.396740198135376
    5. '_point' → logprob: -4.396739959716797
    6. ' point' → logprob: -5.021739959716797
    7. 'center' → logprob: -5.146739959716797
    8. ' z' → logprob: -5.646739959716797
    9. ' +' → logprob: -5.771739959716797
    10. 'of' → logprob: -5.896739959716797

Token 1177: ' plane' (ID: 16499)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.05271739512681961
    2. ' ball' → logprob: -3.927717447280884
    3. '0' → logprob: -4.052717208862305
    4. '(ball' → logprob: -4.302717208862305
    5. 'r' → logprob: -8.802717208862305
    6. 'ground' → logprob: -8.927717208862305
    7. ' ' → logprob: -9.177717208862305
    8. '(' → logprob: -9.302717208862305
    9. '   ' → logprob: -9.427717208862305
    10. ' (' → logprob: -9.552717208862305

Token 1178: ' z' (ID: 579)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37624290585517883
    2. 'z' → logprob: -2.0012428760528564
    3. ')' → logprob: -2.8762428760528564
    4. ' z' → logprob: -3.0012428760528564
    5. 'and' → logprob: -4.2512431144714355
    6. ' and' → logprob: -4.2512431144714355
    7. '0' → logprob: -4.6262431144714355
    8. ' +' → logprob: -4.8762431144714355
    9. ' ,' → logprob: -5.1262431144714355
    10. '+' → logprob: -5.5012431144714355

Token 1179: '=' (ID: 28)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4930211305618286
    2. '+' → logprob: -1.2430211305618286
    3. '=' → logprob: -2.993021011352539
    4. '0' → logprob: -3.743021011352539
    5. ',' → logprob: -4.118021011352539
    6. ')' → logprob: -4.993021011352539
    7. ' =' → logprob: -6.493021011352539
    8. '),' → logprob: -6.993021011352539
    9. ' is' → logprob: -8.493021011352539
    10. ' and' → logprob: -8.618021011352539

Token 1180: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.747814349073451e-05
    2. ' ' → logprob: -11.125017166137695
    3. 'r' → logprob: -12.875017166137695
    4. '=' → logprob: -16.875017166137695
    5. ')' → logprob: -17.750017166137695
    6. 'zero' → logprob: -18.000017166137695
    7. ' r' → logprob: -18.125017166137695
    8. ',' → logprob: -18.125017166137695
    9. '
' → logprob: -19.250017166137695
    10. ' 
' → logprob: -19.500017166137695

Token 1181: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018748078495264053
    2. ')
' → logprob: -4.3937482833862305
    3. ',' → logprob: -6.0187482833862305
    4. '   ' → logprob: -6.2687482833862305
    5. '),' → logprob: -7.1437482833862305
    6. ' -' → logprob: -7.6437482833862305
    7. ' )' → logprob: -8.14374828338623
    8. '+' → logprob: -9.01874828338623
    9. ' +' → logprob: -9.39374828338623
    10. ')

' → logprob: -10.64374828338623

Token 1182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02568654902279377
    2. '
' → logprob: -4.650686740875244
    3. 'vertical' → logprob: -4.650686740875244
    4. ' vertical' → logprob: -5.150686740875244
    5. 'z' → logprob: -9.025686264038086
    6. ' if' → logprob: -9.150686264038086
    7. ' z' → logprob: -9.900686264038086
    8. 'if' → logprob: -10.525686264038086
    9. 'vert' → logprob: -10.650686264038086
    10. '    
' → logprob: -10.650686264038086

Token 1183: ' #' (ID: 1069)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.0335250124335289
    2. 'if' → logprob: -4.533524990081787
    3. 'vert' → logprob: -4.658524990081787
    4. '   ' → logprob: -5.033524990081787
    5. ' vertical' → logprob: -6.408524990081787
    6. 'z' → logprob: -6.658524990081787
    7. 'v' → logprob: -6.908524990081787
    8. '
' → logprob: -7.158524990081787
    9. 'ball' → logprob: -7.408524990081787
    10. '#' (adapté à ' #') → logprob: -8.408525466918945

Token 1184: ' Block' (ID: 13063)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.09819240868091583
    2. 'if' → logprob: -2.7231924533843994
    3. 'vert' → logprob: -3.7231924533843994
    4. 'dz' → logprob: -6.47319221496582
    5. '   ' → logprob: -7.22319221496582
    6. 'z' → logprob: -7.72319221496582
    7. 'vz' → logprob: -8.09819221496582
    8. 'v' → logprob: -8.34819221496582
    9. '#' → logprob: -9.34819221496582
    10. 'horizontal' → logprob: -9.59819221496582

Token 1185: ' from' (ID: 591)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.03429581597447395
    2. 'z' → logprob: -4.409296035766602
    3. 'bottom' → logprob: -5.034296035766602
    4. '_top' → logprob: -5.034296035766602
    5. 'vertical' → logprob: -5.409296035766602
    6. 'height' → logprob: -6.909296035766602
    7. '#' → logprob: -7.159296035766602
    8. ' top' → logprob: -7.534296035766602
    9. 'is' → logprob: -8.159296035766602
    10. 'base' → logprob: -8.159296035766602

Token 1186: ' z' (ID: 579)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03399097919464111
    2. 'z' → logprob: -3.4089908599853516
    3. ' ' → logprob: -8.533990859985352
    4. 'ground' → logprob: -9.783990859985352
    5. 'min' → logprob: -10.658990859985352
    6. ' z' → logprob: -10.908990859985352
    7. 'plane' → logprob: -10.908990859985352
    8. '   ' → logprob: -11.158990859985352
    9. '
' → logprob: -12.908990859985352
    10. '```' → logprob: -13.033990859985352

Token 1187: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009643423254601657
    2. '0' → logprob: -7.000964164733887
    3. ' =' → logprob: -9.875964164733887
    4. '=
' → logprob: -14.875964164733887
    5. '=min' → logprob: -15.250964164733887
    6. 'bottom' → logprob: -15.375964164733887
    7. 'min' → logprob: -15.875964164733887
    8. '_bottom' → logprob: -16.500965118408203
    9. ' bottom' → logprob: -16.500965118408203
    10. ' ' → logprob: -16.625965118408203

Token 1188: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.750000953674316
    3. '=' → logprob: -16.0
    4. '
' → logprob: -19.125
    5. '```' → logprob: -19.125
    6. '`' → logprob: -19.625
    7. 's' → logprob: -19.75
    8. '   ' → logprob: -20.0
    9. '۰' → logprob: -20.0
    10. '``' → logprob: -21.125

Token 1189: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3004350960254669
    2. '   ' → logprob: -1.4254350662231445
    3. 'to' → logprob: -4.1754350662231445
    4. '
' → logprob: -5.9254350662231445
    5. ',' → logprob: -7.3004350662231445
    6. ' up' → logprob: -9.425435066223145
    7. '    
' → logprob: -9.925435066223145
    8. '#' → logprob: -10.175435066223145
    9. 'def' → logprob: -10.300435066223145
    10. '```' → logprob: -10.300435066223145

Token 1190: ' z' (ID: 579)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.000556843588128686
    2. ' h' → logprob: -7.500556945800781
    3. '   ' → logprob: -13.375556945800781
    4. 'z' → logprob: -13.500556945800781
    5. '
' → logprob: -14.875556945800781
    6. 'height' → logprob: -15.875556945800781
    7. '=' → logprob: -16.25055694580078
    8. '```' → logprob: -16.25055694580078
    9. '=h' → logprob: -16.50055694580078
    10. ' ' → logprob: -16.75055694580078

Token 1191: '=h' (ID: 126422)
  Prédit: '=h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=h' → logprob: -0.4743436872959137
    2. '=' → logprob: -0.9743436574935913
    3. 'h' → logprob: -9.224343299865723
    4. ' =' → logprob: -9.724343299865723
    5. '+h' → logprob: -9.724343299865723
    6. '=r' → logprob: -10.349343299865723
    7. '+=' → logprob: -12.474343299865723
    8. '+' → logprob: -12.599343299865723
    9. '=max' → logprob: -12.599343299865723
    10. ' h' → logprob: -13.849343299865723

Token 1192: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05615727975964546
    2. '   ' → logprob: -2.931157350540161
    3. '    
' → logprob: -6.931157112121582
    4. '
' → logprob: -8.431157112121582
    5. '  
' → logprob: -10.931157112121582
    6. 'vertical' → logprob: -11.181157112121582
    7. '

' → logprob: -11.306157112121582
    8. 'distance' → logprob: -12.181157112121582
    9. '   
' → logprob: -12.306157112121582
    10. '```' → logprob: -12.306157112121582

Token 1193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0990222916007042
    2. '
' → logprob: -3.224022388458252
    3. 'vertical' → logprob: -3.224022388458252
    4. ' vertical' → logprob: -4.724022388458252
    5. ' if' → logprob: -5.599022388458252
    6. 'if' → logprob: -6.724022388458252
    7. 'vert' → logprob: -8.349021911621094
    8. '```' → logprob: -8.474021911621094
    9. 'horizontal' → logprob: -9.099021911621094
    10. 'v' → logprob: -9.849021911621094

Token 1194: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1367950141429901
    2. 'if' → logprob: -2.7617950439453125
    3. 'vertical' → logprob: -3.0117950439453125
    4. ' if' → logprob: -4.8867950439453125
    5. '
' → logprob: -5.2617950439453125
    6. ' vertical' → logprob: -6.2617950439453125
    7. 'vert' → logprob: -8.011795043945312
    8. 'v' → logprob: -8.386795043945312
    9. '```' → logprob: -9.636795043945312
    10. '#' (adapté à ' #') → logprob: -10.011795043945312

Token 1195: ' Vertical' (ID: 58623)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12936760485172272
    2. 'vertical' → logprob: -2.2543675899505615
    3. 'vert' → logprob: -4.254367828369141
    4. 'dz' → logprob: -6.754367828369141
    5. '#' → logprob: -8.50436782836914
    6. 'vz' → logprob: -8.62936782836914
    7. '   ' → logprob: -8.75436782836914
    8. 'z' → logprob: -8.87936782836914
    9. 'v' → logprob: -9.37936782836914
    10. 'horizontal' → logprob: -10.12936782836914

Token 1196: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.9318380951881409
    2. 'clear' → logprob: -1.056838035583496
    3. 'if' → logprob: -1.681838035583496
    4. '_dist' → logprob: -3.306838035583496
    5. '_clear' → logprob: -3.806838035583496
    6. 'gap' → logprob: -5.056838035583496
    7. 'distance' → logprob: -5.556838035583496
    8. '_gap' → logprob: -7.306838035583496
    9. ' clearance' → logprob: -7.431838035583496
    10. '_distance' → logprob: -7.931838035583496

Token 1197: ' between' (ID: 2870)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5364313721656799
    2. ' =' → logprob: -1.0364313125610352
    3. '_ab' → logprob: -3.286431312561035
    4. '_b' → logprob: -4.536431312561035
    5. '_vert' → logprob: -6.036431312561035
    6. '   ' → logprob: -6.161431312561035
    7. '_vertical' → logprob: -6.411431312561035
    8. '_to' → logprob: -6.661431312561035
    9. 'vertical' → logprob: -7.161431312561035
    10. 'above' → logprob: -7.536431312561035

Token 1198: ' ball' (ID: 7880)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.20170286297798157
    2. 'ball' → logprob: -1.9517028331756592
    3. 'block' → logprob: -3.326702833175659
    4. '(r' → logprob: -6.326703071594238
    5. '(ball' → logprob: -6.326703071594238
    6. '(block' → logprob: -7.951703071594238
    7. 'h' → logprob: -8.201703071594238
    8. '(h' → logprob: -9.201703071594238
    9. 'max' → logprob: -9.201703071594238
    10. '#' → logprob: -10.326703071594238

Token 1199: ' center' (ID: 6170)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.0013732073130086064
    2. ' center' → logprob: -7.251373291015625
    3. '_center' → logprob: -7.501373291015625
    4. 'z' → logprob: -10.251373291015625
    5. '
' → logprob: -10.251373291015625
    6. 'surface' → logprob: -11.501373291015625
    7. 'top' → logprob: -11.876373291015625
    8. 'centre' → logprob: -11.876373291015625
    9. '   ' → logprob: -12.751373291015625
    10. 'bottom' → logprob: -12.751373291015625

Token 1200: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.20368671417236328
    2. 'to' → logprob: -2.2036867141723633
    3. '=' → logprob: -3.5786867141723633
    4. ' and' → logprob: -4.328686714172363
    5. '   ' → logprob: -4.828686714172363
    6. '-' → logprob: -4.828686714172363
    7. ' =' → logprob: -5.453686714172363
    8. '_to' → logprob: -5.453686714172363
    9. ' to' → logprob: -5.703686714172363
    10. 'z' → logprob: -6.078686714172363

Token 1201: ' block' (ID: 4355)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.021711299195885658
    2. '0' → logprob: -4.271711349487305
    3. 'block' → logprob: -5.521711349487305
    4. 'max' → logprob: -6.646711349487305
    5. 'top' → logprob: -7.271711349487305
    6. 'r' → logprob: -7.771711349487305
    7. ' h' → logprob: -8.271711349487305
    8. 'bottom' → logprob: -8.521711349487305
    9. 'ball' → logprob: -8.771711349487305
    10. 'the' → logprob: -9.396711349487305

Token 1202: ' vertical' (ID: 17679)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5052379369735718
    2. 'z' → logprob: -2.1302380561828613
    3. ' =' → logprob: -2.7552380561828613
    4. 'if' → logprob: -2.7552380561828613
    5. '   ' → logprob: -3.0052380561828613
    6. 'dist' → logprob: -3.7552380561828613
    7. 'below' → logprob: -3.8802380561828613
    8. 'above' → logprob: -4.755238056182861
    9. 'vert' → logprob: -5.130238056182861
    10. 'diff' → logprob: -5.130238056182861

Token 1203: ' faces' (ID: 22060)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.3941030502319336
    2. 'gap' → logprob: -2.0191030502319336
    3. 'face' → logprob: -3.0191030502319336
    4. 'surface' → logprob: -3.1441030502319336
    5. 'extent' → logprob: -4.019103050231934
    6. 'position' → logprob: -4.519103050231934
    7. 'difference' → logprob: -4.769103050231934
    8. 'side' → logprob: -4.894103050231934
    9. 'diff' → logprob: -5.144103050231934
    10. 'component' → logprob: -5.269103050231934

Token 1204: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09165533632040024
    2. '
' → logprob: -3.5916552543640137
    3. 'if' → logprob: -3.9666552543640137
    4. ' =' → logprob: -4.716655254364014
    5. ' if' → logprob: -4.841655254364014
    6. 'vertical' → logprob: -4.966655254364014
    7. 'vert' → logprob: -5.091655254364014
    8. 'v' → logprob: -5.341655254364014
    9. 'z' → logprob: -6.716655254364014
    10. 'dist' → logprob: -7.091655254364014

Token 1205: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9324619770050049
    2. '   ' → logprob: -1.1824619770050049
    3. 'if' → logprob: -2.432461977005005
    4. ' vertical' → logprob: -2.682461977005005
    5. ' vert' → logprob: -3.057461977005005
    6. 'vertical' → logprob: -3.307461977005005
    7. '```' → logprob: -4.182461738586426
    8. 'v' → logprob: -4.432461738586426
    9. '
' → logprob: -4.682461738586426
    10. 'vert' → logprob: -4.807461738586426

Token 1206: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10392147302627563
    2. 'vertical' → logprob: -3.353921413421631
    3. 'vert' → logprob: -3.478921413421631
    4. 'vz' → logprob: -3.603921413421631
    5. 'v' → logprob: -5.853921413421631
    6. 'dz' → logprob: -6.353921413421631
    7. '```' → logprob: -8.478921890258789
    8. 'vd' → logprob: -8.603921890258789
    9. 'z' → logprob: -8.978921890258789
    10. '#' (adapté à ' #') → logprob: -9.353921890258789

Token 1207: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.014426149427890778
    2. 'vz' → logprob: -5.014426231384277
    3. 'vertical' → logprob: -5.639426231384277
    4. 'vert' → logprob: -6.014426231384277
    5. 'v' → logprob: -7.389426231384277
    6. '   ' → logprob: -7.514426231384277
    7. 'dz' → logprob: -8.764426231384277
    8. '#' → logprob: -9.014426231384277
    9. ' if' → logprob: -9.639426231384277
    10. 'dist' → logprob: -10.514426231384277

Token 1208: ' horizontal' (ID: 25511)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.11577901244163513
    2. 'h' → logprob: -2.615778923034668
    3. 'horizontal' → logprob: -3.365778923034668
    4. 'ball' → logprob: -7.240778923034668
    5. '0' → logprob: -7.365778923034668
    6. 'vertical' → logprob: -8.490778923034668
    7. ' r' → logprob: -9.990778923034668
    8. ' horizontal' → logprob: -11.365778923034668
    9. 'min' → logprob: -11.490778923034668
    10. '(h' → logprob: -11.865778923034668

Token 1209: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.03734315559267998
    2. 'dist' → logprob: -3.7873432636260986
    3. 'distance' → logprob: -4.2873430252075195
    4. 'horizontal' → logprob: -8.41234302520752
    5. '_distance' → logprob: -10.28734302520752
    6. '
' → logprob: -14.66234302520752
    7. 'Dist' → logprob: -15.41234302520752
    8. '_horizontal' → logprob: -15.66234302520752
    9. ' distance' → logprob: -15.78734302520752
    10. '(horizontal' → logprob: -16.287343978881836

Token 1210: ' >=' (ID: 5064)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.17307226359844208
    2. ' <=' → logprob: -2.048072338104248
    3. '>' → logprob: -3.798072338104248
    4. ' >' → logprob: -5.423072338104248
    5. '<' → logprob: -6.673072338104248
    6. '>=' → logprob: -7.048072338104248
    7. ' <' → logprob: -7.173072338104248
    8. '==' → logprob: -9.29807186126709
    9. ' >=' → logprob: -9.79807186126709
    10. '```' → logprob: -10.04807186126709

Token 1211: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.8206473871250637e-05
    2. '0' → logprob: -10.625028610229492
    3. ' r' → logprob: -12.750028610229492
    4. '
' → logprob: -14.375028610229492
    5. '(r' → logprob: -15.750028610229492
    6. '=r' → logprob: -16.750028610229492
    7. '1' → logprob: -17.250028610229492
    8. 'max' → logprob: -17.250028610229492
    9. '	r' → logprob: -17.750028610229492
    10. '_r' → logprob: -17.875028610229492

Token 1212: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5373843312263489
    2. ':
' → logprob: -0.9123843312263489
    3. '   ' → logprob: -4.537384510040283
    4. ' and' → logprob: -6.162384510040283
    5. ' or' → logprob: -7.537384510040283
    6. ':return' → logprob: -7.662384510040283
    7. ',' → logprob: -8.787384033203125
    8. '       ' → logprob: -9.787384033203125
    9. 'and' → logprob: -10.037384033203125
    10. '):
' → logprob: -10.412384033203125

Token 1213: ' ball' (ID: 7880)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11959268897771835
    2. '       ' → logprob: -2.6195926666259766
    3. ' return' → logprob: -3.7445926666259766
    4. 'return' → logprob: -4.369592666625977
    5. ' if' → logprob: -5.994592666625977
    6. 'if' → logprob: -7.369592666625977
    7. '    ' → logprob: -8.119592666625977
    8. 'vertical' → logprob: -9.494592666625977
    9. ' vertical' → logprob: -10.119592666625977
    10. '     ' → logprob: -11.244592666625977

Token 1214: ' cannot' (ID: 6284)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'center' → logprob: -1.296892523765564
    2. '_z' → logprob: -1.546892523765564
    3. 'z' → logprob: -1.671892523765564
    4. 'is' → logprob: -1.671892523765564
    5. ' is' → logprob: -3.0468926429748535
    6. '_center' → logprob: -3.4218926429748535
    7. ' center' → logprob: -3.7968926429748535
    8. 'cannot' → logprob: -5.2968926429748535
    9. ' z' → logprob: -5.4218926429748535
    10. '
' → logprob: -5.9218926429748535

Token 1215: ' touch' (ID: 7381)
  Prédit: 'coll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coll' → logprob: -0.3636723756790161
    2. 'touch' → logprob: -1.8636723756790161
    3. 'penetr' → logprob: -2.6136722564697266
    4. 'inter' → logprob: -3.3636722564697266
    5. 'be' → logprob: -3.7386722564697266
    6. 'hit' → logprob: -4.863672256469727
    7. 'contact' → logprob: -5.488672256469727
    8. ' collide' → logprob: -5.863672256469727
    9. 'reach' → logprob: -7.488672256469727
    10. 'collision' → logprob: -7.988672256469727

Token 1216: ' block' (ID: 4355)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.40032050013542175
    2. 'block' → logprob: -1.2753205299377441
    3. ' the' → logprob: -3.650320529937744
    4. ' block' → logprob: -3.900320529937744
    5. 'horizontal' → logprob: -5.900320529937744
    6. 'h' → logprob: -7.525320529937744
    7. '
' → logprob: -8.150320053100586
    8. 'vertical' → logprob: -8.275320053100586
    9. '   ' → logprob: -8.525320053100586
    10. '(block' → logprob: -9.025320053100586

Token 1217: ' horizontally' (ID: 113653)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013730427250266075
    2. '    
' → logprob: -5.263730525970459
    3. ':' → logprob: -5.638730525970459
    4. '
' → logprob: -6.388730525970459
    5. ',' → logprob: -6.763730525970459
    6. ':
' → logprob: -7.388730525970459
    7. ' and' → logprob: -7.763730525970459
    8. '       ' → logprob: -8.6387300491333
    9. ' or' → logprob: -8.6387300491333
    10. '.' → logprob: -9.0137300491333

Token 1218: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007538960315287113
    2. '    
' → logprob: -6.007538795471191
    3. ':' → logprob: -6.632538795471191
    4. '
' → logprob: -6.882538795471191
    5. ' if' → logprob: -7.132538795471191
    6. ',' → logprob: -7.507538795471191
    7. ':
' → logprob: -7.757538795471191
    8. '       ' → logprob: -8.632538795471191
    9. 'if' → logprob: -8.757538795471191
    10. ' and' → logprob: -9.257538795471191

Token 1219: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007227142807096243
    2. ' if' → logprob: -5.757226943969727
    3. 'if' → logprob: -6.132226943969727
    4. '
' → logprob: -6.882226943969727
    5. '    
' → logprob: -7.882226943969727
    6. '       ' → logprob: -8.882226943969727
    7. 'return' → logprob: -9.632226943969727
    8. 'elif' → logprob: -9.882226943969727
    9. 'vertical' → logprob: -10.382226943969727
    10. 'else' → logprob: -10.882226943969727

Token 1220: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16899223625659943
    2. '   ' → logprob: -2.043992280960083
    3. ' if' → logprob: -3.668992280960083
    4. 'else' → logprob: -8.793992042541504
    5. 'elif' → logprob: -8.918992042541504
    6. 'vertical' → logprob: -9.793992042541504
    7. '
' → logprob: -9.793992042541504
    8. '```' → logprob: -9.918992042541504
    9. 'return' → logprob: -11.668992042541504
    10. '    
' → logprob: -13.168992042541504

Token 1221: ' Otherwise' (ID: 33987)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05608954280614853
    2. ' if' → logprob: -3.3060896396636963
    3. '   ' → logprob: -4.056089401245117
    4. 'vertical' → logprob: -7.806089401245117
    5. '```' → logprob: -9.431089401245117
    6. 'elif' → logprob: -10.306089401245117
    7. 'If' → logprob: -11.306089401245117
    8. '
' → logprob: -11.556089401245117
    9. ' vertical' → logprob: -11.681089401245117
    10. 'return' → logprob: -12.431089401245117

Token 1222: ' vertical' (ID: 17679)
  Prédit: ' vertical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vertical' → logprob: -0.1884727030992508
    2. ' if' → logprob: -2.6884727478027344
    3. 'vertical' → logprob: -3.0634727478027344
    4. ' vert' → logprob: -3.3134727478027344
    5. 'vert' → logprob: -5.188472747802734
    6. '   ' → logprob: -5.188472747802734
    7. 'if' → logprob: -5.438472747802734
    8. ' return' → logprob: -6.313472747802734
    9. ' v' → logprob: -7.063472747802734
    10. ' z' → logprob: -7.688472747802734

Token 1223: ' distance' (ID: 9324)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.2597697079181671
    2. '_clear' → logprob: -2.3847696781158447
    3. 'dist' → logprob: -2.3847696781158447
    4. 'clear' → logprob: -3.5097696781158447
    5. 'if' → logprob: -5.134769916534424
    6. '_distance' → logprob: -5.384769916534424
    7. ' clearance' → logprob: -6.634769916534424
    8. 'distance' → logprob: -6.759769916534424
    9. '_gap' → logprob: -7.134769916534424
    10. '
' → logprob: -8.634769439697266

Token 1224: ' must' (ID: 2804)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2418888956308365
    2. ' =' → logprob: -1.6168888807296753
    3. 'if' → logprob: -5.366888999938965
    4. '   ' → logprob: -6.116888999938965
    5. '_needed' → logprob: -6.491888999938965
    6. '_ab' → logprob: -6.741888999938965
    7. '_vert' → logprob: -6.866888999938965
    8. 'needed' → logprob: -6.991888999938965
    9. '_vertical' → logprob: -6.991888999938965
    10. '_to' → logprob: -7.116888999938965

Token 1225: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.013728788122534752
    2. 'be' → logprob: -4.388728618621826
    3. '>=' → logprob: -8.013729095458984
    4. '>' → logprob: -8.513729095458984
    5. ' at' → logprob: -8.513729095458984
    6. ' exceed' → logprob: -8.763729095458984
    7. '=' → logprob: -8.888729095458984
    8. 'max' → logprob: -10.013729095458984
    9. 'ex' → logprob: -10.263729095458984
    10. ' cover' → logprob: -10.763729095458984

Token 1226: ' >' (ID: 1424)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.20834395289421082
    2. 'h' → logprob: -2.083343982696533
    3. '0' → logprob: -3.083343982696533
    4. ' max' → logprob: -4.708343982696533
    5. 'r' → logprob: -5.208343982696533
    6. 'min' → logprob: -6.458343982696533
    7. ' h' → logprob: -6.958343982696533
    8. '(h' → logprob: -8.458343505859375
    9. '(max' → logprob: -8.958343505859375
    10. '(' → logprob: -9.458343505859375

Token 1227: ' vertical' (ID: 17679)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.015928667038679123
    2. 'r' → logprob: -4.515928745269775
    3. '0' → logprob: -6.640928745269775
    4. ' h' → logprob: -6.640928745269775
    5. '(h' → logprob: -6.765928745269775
    6. '(r' → logprob: -7.015928745269775
    7. ' (' → logprob: -9.265928268432617
    8. '(' → logprob: -9.515928268432617
    9. ' r' → logprob: -11.015928268432617
    10. ' ' → logprob: -12.265928268432617

Token 1228: ' overlap' (ID: 56631)
  Prédit: '_clear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_clear' → logprob: -1.2535240650177002
    2. '_gap' → logprob: -1.6285240650177002
    3. 'distance' → logprob: -2.0035240650177
    4. 'clear' → logprob: -2.6285240650177
    5. '_distance' → logprob: -2.6285240650177
    6. 'gap' → logprob: -2.8785240650177
    7. 'r' → logprob: -3.0035240650177
    8. '_dist' → logprob: -3.2535240650177
    9. ' clearance' → logprob: -4.003523826599121
    10. ' gap' → logprob: -4.378523826599121

Token 1229: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03849514201283455
    2. '
' → logprob: -3.6634950637817383
    3. ' if' → logprob: -5.163495063781738
    4. 'if' → logprob: -5.288495063781738
    5. '    
' → logprob: -6.788495063781738
    6. 'vertical' → logprob: -8.788495063781738
    7. '```' → logprob: -10.913495063781738
    8. ' vertical' → logprob: -12.038495063781738
    9. '
' → logprob: -12.163495063781738
    10. '   
' → logprob: -12.413495063781738

Token 1230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5522817969322205
    2. ' if' → logprob: -1.0522818565368652
    3. 'if' → logprob: -2.9272818565368652
    4. '
' → logprob: -4.427281856536865
    5. 'vertical' → logprob: -5.302281856536865
    6. ' vertical' → logprob: -5.552281856536865
    7. '```' → logprob: -8.677281379699707
    8. 'v' → logprob: -8.677281379699707
    9. 'vert' → logprob: -9.052281379699707
    10. ' return' → logprob: -9.427281379699707

Token 1231: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.001115808030590415
    2. 'vertical' → logprob: -7.751115798950195
    3. '   ' → logprob: -8.001115798950195
    4. ' if' → logprob: -8.251115798950195
    5. 'vert' → logprob: -10.126115798950195
    6. 'v' → logprob: -11.251115798950195
    7. 'horizontal' → logprob: -11.251115798950195
    8. '#' (adapté à ' #') → logprob: -11.751115798950195
    9. '```' → logprob: -12.751115798950195
    10. 'vh' → logprob: -13.001115798950195

Token 1232: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00703125074505806
    2. '   ' → logprob: -5.007031440734863
    3. '```' → logprob: -8.632031440734863
    4. 'vertical' → logprob: -9.257031440734863
    5. ' if' → logprob: -10.507031440734863
    6. '``' → logprob: -11.382031440734863
    7. 'vert' → logprob: -14.007031440734863
    8. '
' → logprob: -14.257031440734863
    9. 'return' → logprob: -14.757031440734863
    10. 'If' → logprob: -15.007031440734863

Token 1233: ' horizontal' (ID: 25511)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.0002153378736693412
    2. ' horizontal' → logprob: -8.500215530395508
    3. 'vertical' → logprob: -11.375215530395508
    4. '(horizontal' → logprob: -15.250215530395508
    5. 'ball' → logprob: -17.375215530395508
    6. 'hor' → logprob: -18.000215530395508
    7. 'min' → logprob: -18.125215530395508
    8. 'h' → logprob: -18.250215530395508
    9. '   ' → logprob: -18.250215530395508
    10. '0' → logprob: -18.625215530395508

Token 1234: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.02327156811952591
    2. 'dist' → logprob: -3.7732715606689453
    3. 'distance' → logprob: -10.773271560668945
    4. '_distance' → logprob: -12.398271560668945
    5. '
' → logprob: -14.398271560668945
    6. '	dist' → logprob: -16.148271560668945
    7. 'Dist' → logprob: -16.273271560668945
    8. '```' → logprob: -17.273271560668945
    9. 'd' → logprob: -17.398271560668945
    10. '_' → logprob: -17.398271560668945

Token 1235: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.8280694484710693
    2. ' >=' → logprob: -1.2030694484710693
    3. ' <' → logprob: -1.8280694484710693
    4. '<' → logprob: -3.0780694484710693
    5. ' >' → logprob: -4.328069686889648
    6. '<=' → logprob: -4.453069686889648
    7. '>' → logprob: -4.453069686889648
    8. '   ' → logprob: -4.578069686889648
    9. ' <=' → logprob: -4.703069686889648
    10. ' ' → logprob: -9.453069686889648

Token 1236: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.011048762127757072
    2. ' r' → logprob: -4.511048793792725
    3. '   ' → logprob: -14.011048316955566
    4. '	r' → logprob: -16.761049270629883
    5. ' ' → logprob: -17.136049270629883
    6. '
' → logprob: -17.511049270629883
    7. '_r' → logprob: -18.011049270629883
    8. 'radius' → logprob: -18.136049270629883
    9. '    ' → logprob: -18.511049270629883
    10. '       ' → logprob: -19.261049270629883

Token 1237: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6802696585655212
    2. '       ' → logprob: -1.430269718170166
    3. ':' → logprob: -1.555269718170166
    4. ':
' → logprob: -3.180269718170166
    5. ':return' → logprob: -6.805269718170166
    6. ' or' → logprob: -8.555269241333008
    7. ' and' → logprob: -9.055269241333008
    8. 'and' → logprob: -10.055269241333008
    9. ',' → logprob: -10.680269241333008
    10. 'return' → logprob: -10.805269241333008

Token 1238: ' minimal' (ID: 19957)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039905983954668045
    2. 'return' → logprob: -3.2899060249328613
    3. ' return' → logprob: -6.414906024932861
    4. '       ' → logprob: -8.414905548095703
    5. '    ' → logprob: -14.164905548095703
    6. '  ' → logprob: -14.164905548095703
    7. ' ' → logprob: -14.164905548095703
    8. '	return' → logprob: -14.289905548095703
    9. '
' → logprob: -14.414905548095703
    10. 'if' → logprob: -14.664905548095703

Token 1239: ' distance' (ID: 9324)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.03970837965607643
    2. ' vertical' → logprob: -4.039708614349365
    3. 'distance' → logprob: -4.289708614349365
    4. '_vertical' → logprob: -5.289708614349365
    5. 'clear' → logprob: -7.289708614349365
    6. '_distance' → logprob: -7.664708614349365
    7. 'dist' → logprob: -7.664708614349365
    8. '_clear' → logprob: -8.539708137512207
    9. 'height' → logprob: -8.664708137512207
    10. 'vert' → logprob: -8.789708137512207

Token 1240: ' on' (ID: 402)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2576744258403778
    2. 'is' → logprob: -1.8826744556427002
    3. ' =' → logprob: -3.2576744556427
    4. '   ' → logprob: -4.257674217224121
    5. ' is' → logprob: -4.382674217224121
    6. 'return' → logprob: -4.882674217224121
    7. '>=' → logprob: -7.507674217224121
    8. '```' → logprob: -8.257674217224121
    9. '==' → logprob: -8.882674217224121
    10. ' return' → logprob: -9.007674217224121

Token 1241: ' z' (ID: 579)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.6161462068557739
    2. 'xy' → logprob: -1.991146206855774
    3. 'plane' → logprob: -2.2411460876464844
    4. 'ground' → logprob: -2.2411460876464844
    5. 'vertical' → logprob: -3.2411460876464844
    6. 'z' → logprob: -3.3661460876464844
    7. 'surface' → logprob: -4.616146087646484
    8. 'the' → logprob: -4.741146087646484
    9. 'block' → logprob: -5.116146087646484
    10. 'floor' → logprob: -5.366146087646484

Token 1242: '-axis' (ID: 75385)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -1.1857072114944458
    2. '>=' → logprob: -1.6857072114944458
    3. 'is' → logprob: -2.0607070922851562
    4. ' is' → logprob: -2.4357070922851562
    5. '-axis' → logprob: -3.3107070922851562
    6. ' component' → logprob: -3.3107070922851562
    7. '=' → logprob: -3.5607070922851562
    8. 'axis' → logprob: -3.5607070922851562
    9. 'distance' → logprob: -4.060707092285156
    10. 'face' → logprob: -4.435707092285156

Token 1243: ' is' (ID: 382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1570318043231964
    2. '       ' → logprob: -3.032031774520874
    3. '=' → logprob: -3.407031774520874
    4. ':' → logprob: -3.532031774520874
    5. ' =' → logprob: -4.157032012939453
    6. ' is' → logprob: -5.032032012939453
    7. ' return' → logprob: -5.282032012939453
    8. 'return' → logprob: -5.657032012939453
    9. ':
' → logprob: -6.657032012939453
    10. ':return' → logprob: -7.032032012939453

Token 1244: ' zero' (ID: 12421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.054880592972040176
    2. 'r' → logprob: -3.9298806190490723
    3. 'max' → logprob: -4.304880619049072
    4. 'h' → logprob: -4.804880619049072
    5. 'abs' → logprob: -4.929880619049072
    6. 'vertical' → logprob: -6.929880619049072
    7. 'math' → logprob: -7.054880619049072
    8. 'horizontal' → logprob: -7.054880619049072
    9. 'min' → logprob: -7.304880619049072
    10. ' ' → logprob: -8.179880142211914

Token 1245: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003941263537853956
    2. '    
' → logprob: -5.753941059112549
    3. '
' → logprob: -7.378941059112549
    4. '.' → logprob: -10.003941535949707
    5. ',' → logprob: -10.128941535949707
    6. ':' → logprob: -11.378941535949707
    7. '       ' → logprob: -12.003941535949707
    8. '   
' → logprob: -12.503941535949707
    9. '\n' → logprob: -12.628941535949707
    10. ' and' → logprob: -12.628941535949707

Token 1246: 'ball' (ID: 5052)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22377851605415344
    2. ' return' → logprob: -2.598778486251831
    3. 'return' → logprob: -2.723778486251831
    4. '   ' → logprob: -3.848778486251831
    5. ' )' → logprob: -4.59877872467041
    6. '),' → logprob: -4.97377872467041
    7. ')return' → logprob: -5.22377872467041
    8. ' continue' → logprob: -5.59877872467041
    9. ')
' → logprob: -5.72377872467041
    10. 'continue' → logprob: -5.84877872467041

Token 1247: ' does' (ID: 2226)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.2071294784545898
    2. '-' → logprob: -1.4571294784545898
    3. ' center' → logprob: -1.9571294784545898
    4. 'center' → logprob: -2.20712947845459
    5. ')' → logprob: -3.08212947845459
    6. ''s' → logprob: -3.83212947845459
    7. ' is' → logprob: -3.95712947845459
    8. '_z' → logprob: -4.08212947845459
    9. 'z' → logprob: -4.33212947845459
    10. '_center' → logprob: -4.33212947845459

Token 1248: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0007170771714299917
    2. ' not' → logprob: -7.2507171630859375
    3. 'n't' → logprob: -12.500717163085938
    4. 'continue' → logprob: -13.625717163085938
    5. ')' → logprob: -14.625717163085938
    6. 'return' → logprob: -14.750717163085938
    7. '   ' → logprob: -14.875717163085938
    8. '_not' → logprob: -15.250717163085938
    9. '```' → logprob: -15.250717163085938
    10. '0' → logprob: -15.375717163085938

Token 1249: ' horizontally' (ID: 113653)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.09047897905111313
    2. 'penetr' → logprob: -3.0904788970947266
    3. 'coll' → logprob: -4.340478897094727
    4. 'over' → logprob: -4.465478897094727
    5. 'inter' → logprob: -5.090478897094727
    6. 'contact' → logprob: -5.215478897094727
    7. 'get' → logprob: -7.340478897094727
    8. 'reach' → logprob: -7.465478897094727
    9. 'need' → logprob: -7.465478897094727
    10. '
' → logprob: -7.465478897094727

Token 1250: ' overlap' (ID: 56631)
  Prédit: 'penetr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'penetr' → logprob: -0.38660019636154175
    2. 'touch' → logprob: -1.3866002559661865
    3. 'over' → logprob: -3.3866002559661865
    4. 'reach' → logprob: -4.386600017547607
    5. 'inter' → logprob: -5.136600017547607
    6. ' overlap' → logprob: -5.511600017547607
    7. 'appro' → logprob: -5.886600017547607
    8. ' touch' → logprob: -6.261600017547607
    9. 'need' → logprob: -6.636600017547607
    10. 'contact' → logprob: -6.761600017547607

Token 1251: ' block' (ID: 4355)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12922032177448273
    2. ')
' → logprob: -2.5042202472686768
    3. ' with' → logprob: -3.8792202472686768
    4. 'with' → logprob: -4.629220485687256
    5. '),' → logprob: -5.379220485687256
    6. '   ' → logprob: -6.879220485687256
    7. ' or' → logprob: -7.129220485687256
    8. ' and' → logprob: -7.629220485687256
    9. ' )' → logprob: -7.629220485687256
    10. ',' → logprob: -7.629220485687256

Token 1252: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6018483638763428
    2. ')
' → logprob: -0.9768483638763428
    3. '   ' → logprob: -2.7268483638763428
    4. '),' → logprob: -5.101848602294922
    5. ')

' → logprob: -7.226848602294922
    6. ' or' → logprob: -7.226848602294922
    7. ')
' → logprob: -7.726848602294922
    8. ',' → logprob: -7.851848602294922
    9. ').' → logprob: -7.976848602294922
    10. ' and' → logprob: -8.101848602294922

Token 1253: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005972352810204029
    2. '    
' → logprob: -7.87559700012207
    3. 'else' → logprob: -9.87559700012207
    4. '       ' → logprob: -10.37559700012207
    5. 'return' → logprob: -10.62559700012207
    6. ' if' → logprob: -11.00059700012207
    7. '
' → logprob: -11.00059700012207
    8. ')' → logprob: -11.50059700012207
    9. 'if' → logprob: -11.50059700012207
    10. ' else' → logprob: -11.62559700012207

Token 1254: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4539406895637512
    2. '   ' → logprob: -1.0789406299591064
    3. ' if' → logprob: -3.7039406299591064
    4. '
' → logprob: -9.078940391540527
    5. 'vertical' → logprob: -9.328940391540527
    6. 'return' → logprob: -10.453940391540527
    7. 'else' → logprob: -10.828940391540527
    8. 'elif' → logprob: -11.328940391540527
    9. '    
' → logprob: -11.453940391540527
    10. '```' → logprob: -11.703940391540527

Token 1255: ' Else' (ID: 42978)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.22996780276298523
    2. '   ' → logprob: -1.6049678325653076
    3. ' if' → logprob: -5.4799675941467285
    4. 'vertical' → logprob: -8.604968070983887
    5. 'return' → logprob: -9.229968070983887
    6. '
' → logprob: -10.354968070983887
    7. '```' → logprob: -10.479968070983887
    8. 'If' → logprob: -11.604968070983887
    9. 'else' → logprob: -11.729968070983887
    10. 'elif' → logprob: -11.854968070983887

Token 1256: ' ball' (ID: 7880)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11080896854400635
    2. ' if' → logprob: -2.485808849334717
    3. ' vertical' → logprob: -4.235808849334717
    4. 'if' → logprob: -5.360808849334717
    5. 'vertical' → logprob: -6.235808849334717
    6. ' return' → logprob: -8.860809326171875
    7. '    ' → logprob: -9.235809326171875
    8. '
' → logprob: -9.485809326171875
    9. '```' → logprob: -10.360809326171875
    10. '       ' → logprob: -10.610809326171875

Token 1257: ' horizontally' (ID: 113653)
  Prédit: '_z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_z' → logprob: -0.727302610874176
    2. 'center' → logprob: -1.7273025512695312
    3. 'z' → logprob: -1.9773025512695312
    4. 'vertical' → logprob: -3.7273025512695312
    5. '_center' → logprob: -3.8523025512695312
    6. 'vert' → logprob: -3.8523025512695312
    7. '   ' → logprob: -3.9773025512695312
    8. ' center' → logprob: -3.9773025512695312
    9. '_vertical' → logprob: -4.102302551269531
    10. 'needs' → logprob: -4.227302551269531

Token 1258: ' overlaps' (ID: 173439)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.009285654872655869
    2. ' overlaps' → logprob: -5.0092854499816895
    3. '_over' → logprob: -6.1342854499816895
    4. '-over' → logprob: -9.009285926818848
    5. '_overlap' → logprob: -9.509285926818848
    6. ' over' → logprob: -9.884285926818848
    7. 'distance' → logprob: -10.634285926818848
    8. '-' → logprob: -10.884285926818848
    9. '   ' → logprob: -10.884285926818848
    10. 'penetr' → logprob: -11.009285926818848

Token 1259: ',' (ID: 11)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.789402961730957
    2. 'the' → logprob: -1.539402961730957
    3. ' block' → logprob: -1.789402961730957
    4. '   ' → logprob: -2.914402961730957
    5. 'with' → logprob: -3.039402961730957
    6. ' the' → logprob: -3.164402961730957
    7. ' with' → logprob: -4.289402961730957
    8. 'vertical' → logprob: -6.289402961730957
    9. '(block' → logprob: -6.789402961730957
    10. ',' → logprob: -7.164402961730957

Token 1260: ' ball' (ID: 7880)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9597175717353821
    2. ' vertical' → logprob: -1.3347175121307373
    3. ' return' → logprob: -1.8347175121307373
    4. ' if' → logprob: -2.3347175121307373
    5. 'vertical' → logprob: -2.8347175121307373
    6. 'return' → logprob: -4.209717750549316
    7. ' vert' → logprob: -4.709717750549316
    8. 'if' → logprob: -4.834717750549316
    9. 'vert' → logprob: -5.959717750549316
    10. ' vz' → logprob: -7.334717750549316

Token 1261: ' top' (ID: 2344)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'center' → logprob: -1.3348630666732788
    2. '_z' → logprob: -1.5848630666732788
    3. 'top' → logprob: -2.2098631858825684
    4. '_bottom' → logprob: -2.3348631858825684
    5. 'bottom' → logprob: -2.3348631858825684
    6. 'z' → logprob: -2.5848631858825684
    7. '_top' → logprob: -2.8348631858825684
    8. '_center' → logprob: -3.2098631858825684
    9. 'surface' → logprob: -4.209863185882568
    10. 'needs' → logprob: -4.709863185882568

Token 1262: ' point' (ID: 2438)
  Prédit: '_z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_z' → logprob: -0.8601800799369812
    2. 'z' → logprob: -0.9851800799369812
    3. ' is' → logprob: -3.235180139541626
    4. 'height' → logprob: -3.485180139541626
    5. 'center' → logprob: -3.735180139541626
    6. 'is' → logprob: -3.860180139541626
    7. ' -' → logprob: -4.110179901123047
    8. '   ' → logprob: -4.735179901123047
    9. ' z' → logprob: -4.735179901123047
    10. ' at' → logprob: -4.985179901123047

Token 1263: ' at' (ID: 540)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.8544855117797852
    2. ' -' → logprob: -1.8544855117797852
    3. 'z' → logprob: -2.104485511779785
    4. 'is' → logprob: -2.229485511779785
    5. ' at' → logprob: -3.104485511779785
    6. '_z' → logprob: -3.229485511779785
    7. '=' → logprob: -3.604485511779785
    8. ' =' → logprob: -3.604485511779785
    9. 'height' → logprob: -4.479485511779785
    10. '-' → logprob: -4.479485511779785

Token 1264: ' height' (ID: 4679)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.18218515813350677
    2. 'ball' → logprob: -2.057185173034668
    3. ' r' → logprob: -3.557185173034668
    4. ' ball' → logprob: -4.807185173034668
    5. '(ball' → logprob: -7.557185173034668
    6. '   ' → logprob: -7.682185173034668
    7. '(r' → logprob: -7.932185173034668
    8. '```' → logprob: -8.432185173034668
    9. '`' → logprob: -9.057185173034668
    10. 'z' → logprob: -9.432185173034668

Token 1265: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7188659906387329
    2. '=' → logprob: -0.9688659906387329
    3. ' =' → logprob: -2.7188658714294434
    4. ' r' → logprob: -3.4688658714294434
    5. ' +' → logprob: -4.093865871429443
    6. '+' → logprob: -5.093865871429443
    7. '   ' → logprob: -5.218865871429443
    8. '=r' → logprob: -5.468865871429443
    9. '+r' → logprob: -6.218865871429443
    10. ' ' → logprob: -7.968865871429443

Token 1266: '+r' (ID: 133712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03853483870625496
    2. ',' → logprob: -4.038534641265869
    3. '
' → logprob: -4.788534641265869
    4. ' and' → logprob: -4.913534641265869
    5. ' if' → logprob: -6.288534641265869
    6. ')' → logprob: -7.538534641265869
    7. '    
' → logprob: -7.663534641265869
    8. ' is' → logprob: -8.663535118103027
    9. 'and' → logprob: -8.913535118103027
    10. ':' → logprob: -9.038535118103027

Token 1267: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38550472259521484
    2. '   ' → logprob: -2.385504722595215
    3. '
' → logprob: -2.635504722595215
    4. '+' → logprob: -3.010504722595215
    5. ' +' → logprob: -3.635504722595215
    6. ' and' → logprob: -3.760504722595215
    7. ',
' → logprob: -4.635504722595215
    8. ')' → logprob: -5.135504722595215
    9. 'r' → logprob: -5.260504722595215
    10. '<|end|>' → logprob: -5.385504722595215

Token 1268: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04290658235549927
    2. 'r' → logprob: -3.6679065227508545
    3. ' ' → logprob: -4.167906761169434
    4. ' r' → logprob: -7.167906761169434
    5. '   ' → logprob: -8.667906761169434
    6. '0' → logprob: -11.042906761169434
    7. '
' → logprob: -12.667906761169434
    8. '```' → logprob: -12.667906761169434
    9. '`' → logprob: -12.792906761169434
    10. '  ' → logprob: -13.042906761169434

Token 1269: 'r' (ID: 81)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1028448343276978
    2. ')' → logprob: -1.3528448343276978
    3. ' -' → logprob: -2.227844715118408
    4. 'r' → logprob: -2.727844715118408
    5. ' and' → logprob: -2.977844715118408
    6. '   ' → logprob: -3.102844715118408
    7. ' ' → logprob: -3.227844715118408
    8. ',' → logprob: -3.602844715118408
    9. ' +' → logprob: -4.102844715118408
    10. ')
' → logprob: -4.602844715118408

Token 1270: ' at' (ID: 540)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11001069098711014
    2. ' if' → logprob: -2.9850106239318848
    3. '
' → logprob: -3.2350106239318848
    4. ' and' → logprob: -5.485010623931885
    5. ',' → logprob: -5.610010623931885
    6. '    
' → logprob: -5.860010623931885
    7. 'if' → logprob: -7.110010623931885
    8. '<|end|>' → logprob: -8.485011100769043
    9. ' is' → logprob: -8.610011100769043
    10. ')' → logprob: -8.735011100769043

Token 1271: ' max' (ID: 2999)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7262373566627502
    2. 'z' → logprob: -0.8512373566627502
    3. 'ball' → logprob: -3.1012372970581055
    4. 'block' → logprob: -3.6012372970581055
    5. 'the' → logprob: -5.2262372970581055
    6. 'height' → logprob: -5.7262372970581055
    7. '0' → logprob: -5.7262372970581055
    8. 'radius' → logprob: -7.1012372970581055
    9. 'least' → logprob: -7.2262372970581055
    10. 'vertical' → logprob: -7.7262372970581055

Token 1272: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6864235997200012
    2. '
' → logprob: -1.3114235401153564
    3. ' if' → logprob: -1.8114235401153564
    4. ' and' → logprob: -3.4364235401153564
    5. ',' → logprob: -4.4364237785339355
    6. '<|end|>' → logprob: -5.1864237785339355
    7. '    
' → logprob: -5.5614237785339355
    8. 'if' → logprob: -5.9364237785339355
    9. 'and' → logprob: -7.3114237785339355
    10. ' ' → logprob: -7.3114237785339355

Token 1273: ' ball' (ID: 7880)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7204833626747131
    2. ' vertical' → logprob: -1.5954833030700684
    3. ' if' → logprob: -2.2204833030700684
    4. ' return' → logprob: -3.4704833030700684
    5. 'vertical' → logprob: -3.4704833030700684
    6. ' block' → logprob: -3.4704833030700684
    7. '
' → logprob: -3.7204833030700684
    8. '#' → logprob: -4.220483303070068
    9. ' ball' → logprob: -4.345483303070068
    10. ' z' → logprob: -4.470483303070068

Token 1274: ' bottom' (ID: 8725)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.5492379069328308
    2. '_center' → logprob: -1.5492379665374756
    3. '_z' → logprob: -2.5492379665374756
    4. 'z' → logprob: -3.4242379665374756
    5. 'bottom' → logprob: -3.5492379665374756
    6. 'top' → logprob: -3.6742379665374756
    7. '_bottom' → logprob: -3.7992379665374756
    8. '_top' → logprob: -4.5492377281188965
    9. ' center' → logprob: -5.1742377281188965
    10. '
' → logprob: -6.4242377281188965

Token 1275: ' at' (ID: 540)
  Prédit: '_z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_z' → logprob: -0.9660170674324036
    2. '=' → logprob: -1.2160170078277588
    3. ' at' → logprob: -1.5910170078277588
    4. 'z' → logprob: -2.841017007827759
    5. 'at' → logprob: -3.841017007827759
    6. ' =' → logprob: -4.091017246246338
    7. '   ' → logprob: -5.091017246246338
    8. '_height' → logprob: -5.841017246246338
    9. 'height' → logprob: -6.091017246246338
    10. '_at' → logprob: -6.591017246246338

Token 1276: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003585102967917919
    2. 'z' → logprob: -5.753585338592529
    3. ' ' → logprob: -7.878585338592529
    4. 'plane' → logprob: -11.003584861755371
    5. ' z' → logprob: -11.878584861755371
    6. 'height' → logprob: -13.628584861755371
    7. '   ' → logprob: -14.503584861755371
    8. 'zero' → logprob: -14.628584861755371
    9. ' plane' → logprob: -14.753584861755371
    10. 'r' → logprob: -14.878584861755371

Token 1277: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004794295411556959
    2. 'z' → logprob: -5.379794120788574
    3. 'ball' → logprob: -9.504794120788574
    4. 'r' → logprob: -10.004794120788574
    5. 'height' → logprob: -10.629794120788574
    6. ' ' → logprob: -11.379794120788574
    7. '
' → logprob: -11.754794120788574
    8. 'plane' → logprob: -12.754794120788574
    9. 'radius' → logprob: -13.754794120788574
    10. '```' → logprob: -13.879794120788574

Token 1278: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04218902066349983
    2. '
' → logprob: -3.417189121246338
    3. '    
' → logprob: -5.167189121246338
    4. ' if' → logprob: -7.042189121246338
    5. ',' → logprob: -7.417189121246338
    6. '<|end|>' → logprob: -8.16718864440918
    7. ' and' → logprob: -8.54218864440918
    8. '  
' → logprob: -9.41718864440918
    9. 'if' → logprob: -9.54218864440918
    10. '#' → logprob: -9.66718864440918

Token 1279: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19682899117469788
    2. ' if' → logprob: -1.8218289613723755
    3. 'if' → logprob: -4.946828842163086
    4. '```' → logprob: -5.821828842163086
    5. '
' → logprob: -5.946828842163086
    6. ' and' → logprob: -6.946828842163086
    7. 'vertical' → logprob: -7.321828842163086
    8. ',' → logprob: -7.696828842163086
    9. 'z' → logprob: -7.946828842163086
    10. '    
' → logprob: -8.571828842163086

Token 1280: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6498164534568787
    2. ' if' → logprob: -0.8998164534568787
    3. 'if' → logprob: -2.8998165130615234
    4. '
' → logprob: -5.149816513061523
    5. ' vertical' → logprob: -5.274816513061523
    6. 'vertical' → logprob: -5.524816513061523
    7. ' return' → logprob: -8.274816513061523
    8. '    
' → logprob: -8.524816513061523
    9. '#' (adapté à ' #') → logprob: -9.024816513061523
    10. '```' → logprob: -9.024816513061523

Token 1281: ' Block' (ID: 13063)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5314247012138367
    2. ' if' → logprob: -1.5314247608184814
    3. 'if' → logprob: -1.7814247608184814
    4. 'vertical' → logprob: -4.531424522399902
    5. '
' → logprob: -4.781424522399902
    6. ' vertical' → logprob: -5.531424522399902
    7. '#' → logprob: -6.531424522399902
    8. 'vert' → logprob: -7.031424522399902
    9. 'z' → logprob: -7.531424522399902
    10. 'If' → logprob: -8.031424522399902

Token 1282: ' bottom' (ID: 8725)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.0197745431214571
    2. '_top' → logprob: -4.144774436950684
    3. 'bottom' → logprob: -6.519774436950684
    4. 'z' → logprob: -6.769774436950684
    5. 'is' → logprob: -8.269774436950684
    6. '_bottom' → logprob: -8.519774436950684
    7. 'height' → logprob: -8.644774436950684
    8. ' top' → logprob: -9.019774436950684
    9. 'vertical' → logprob: -9.769774436950684
    10. '
' → logprob: -9.769774436950684

Token 1283: ' at' (ID: 540)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3867114782333374
    2. '=' → logprob: -1.8867114782333374
    3. ' at' → logprob: -2.011711597442627
    4. 'at' → logprob: -2.261711597442627
    5. 'top' → logprob: -3.011711597442627
    6. '   ' → logprob: -3.011711597442627
    7. 'z' → logprob: -3.136711597442627
    8. ' is' → logprob: -3.511711597442627
    9. 'height' → logprob: -3.511711597442627
    10. 'and' → logprob: -3.511711597442627

Token 1284: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013095269969198853
    2. 'z' → logprob: -9.125130653381348
    3. ' ' → logprob: -11.250130653381348
    4. 'ground' → logprob: -12.625130653381348
    5. '
' → logprob: -13.250130653381348
    6. 'height' → logprob: -14.500130653381348
    7. '1' → logprob: -14.500130653381348
    8. 'zero' → logprob: -15.000130653381348
    9. 'floor' → logprob: -15.000130653381348
    10. 'plane' → logprob: -15.500130653381348

Token 1285: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9623810658231378e-05
    2. ' ' → logprob: -11.000020027160645
    3. 'z' → logprob: -12.875020027160645
    4. '   ' → logprob: -16.250019073486328
    5. '=' → logprob: -17.000019073486328
    6. '```' → logprob: -17.500019073486328
    7. '  ' → logprob: -17.812519073486328
    8. '
' → logprob: -17.875019073486328
    9. 'zero' → logprob: -17.937519073486328
    10. '`' → logprob: -18.125019073486328

Token 1286: ' top' (ID: 2344)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06396670639514923
    2. '
' → logprob: -2.938966751098633
    3. '    
' → logprob: -5.813966751098633
    4. ',' → logprob: -5.938966751098633
    5. ' and' → logprob: -6.063966751098633
    6. 'and' → logprob: -7.938966751098633
    7. ' if' → logprob: -8.938966751098633
    8. '```' → logprob: -9.188966751098633
    9. '#' → logprob: -9.313966751098633
    10. '

' → logprob: -9.688966751098633

Token 1287: ' at' (ID: 540)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.6251051425933838
    2. '   ' → logprob: -1.6251051425933838
    3. '=' → logprob: -1.8751051425933838
    4. 'at' → logprob: -2.000105142593384
    5. ' at' → logprob: -2.375105142593384
    6. ' +' → logprob: -2.375105142593384
    7. ' =' → logprob: -2.500105142593384
    8. 'max' → logprob: -4.500104904174805
    9. ',' → logprob: -5.000104904174805
    10. 'height' → logprob: -5.000104904174805

Token 1288: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.018150178715586662
    2. ' h' → logprob: -4.018150329589844
    3. '   ' → logprob: -15.768150329589844
    4. ' ' → logprob: -16.643150329589844
    5. '0' → logprob: -18.643150329589844
    6. '+h' → logprob: -18.643150329589844
    7. '```' → logprob: -19.018150329589844
    8. '
' → logprob: -19.018150329589844
    9. '+' → logprob: -19.268150329589844
    10. '    ' → logprob: -19.393150329589844

Token 1289: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15184898674488068
    2. '
' → logprob: -2.0268490314483643
    3. '    
' → logprob: -4.776848793029785
    4. '
' → logprob: -8.651848793029785
    5. '```' → logprob: -9.026848793029785
    6. 'if' → logprob: -9.526848793029785
    7. ' if' → logprob: -9.526848793029785
    8. '  
' → logprob: -10.026848793029785
    9. 'vertical' → logprob: -10.151848793029785
    10. '   
' → logprob: -10.401848793029785

Token 1290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007763731759041548
    2. '
' → logprob: -5.132763862609863
    3. '    
' → logprob: -6.632763862609863
    4. ' if' → logprob: -8.007763862609863
    5. 'if' → logprob: -9.382763862609863
    6. ' 
' → logprob: -10.882763862609863
    7. 'vertical' → logprob: -10.882763862609863
    8. '```' → logprob: -10.882763862609863
    9. ' vertical' → logprob: -11.257763862609863
    10. '   
' → logprob: -12.382763862609863

Token 1291: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027727965265512466
    2. '
' → logprob: -4.152728080749512
    3. ' if' → logprob: -4.777728080749512
    4. 'if' → logprob: -6.152728080749512
    5. ' vertical' → logprob: -7.902728080749512
    6. '    
' → logprob: -8.277728080749512
    7. 'vertical' → logprob: -8.277728080749512
    8. '```' → logprob: -8.777728080749512
    9. '``' → logprob: -11.402728080749512
    10. '
' → logprob: -12.277728080749512

Token 1292: ' For' (ID: 2214)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03199272230267525
    2. 'if' → logprob: -3.9069926738739014
    3. ' if' → logprob: -4.6569929122924805
    4. 'vertical' → logprob: -6.7819929122924805
    5. ' vertical' → logprob: -8.03199291229248
    6. '
' → logprob: -8.15699291229248
    7. 'vert' → logprob: -9.90699291229248
    8. 'v' → logprob: -10.40699291229248
    9. 'over' → logprob: -11.15699291229248
    10. '```' → logprob: -11.65699291229248

Token 1293: ' collision' (ID: 34967)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.5187634229660034
    2. 'horizontal' → logprob: -1.1437634229660034
    3. 'ball' → logprob: -3.768763542175293
    4. ' vertical' → logprob: -4.143763542175293
    5. ' horizontal' → logprob: -4.518763542175293
    6. 'block' → logprob: -4.518763542175293
    7. 'over' → logprob: -5.143763542175293
    8. 'collision' → logprob: -5.393763542175293
    9. 'h' → logprob: -5.518763542175293
    10. 'minimal' → logprob: -6.018763542175293

Token 1294: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007097888737916946
    2. ' if' → logprob: -5.5070977210998535
    3. ',' → logprob: -6.2570977210998535
    4. 'if' → logprob: -7.2570977210998535
    5. ':' → logprob: -8.632098197937012
    6. '
' → logprob: -9.632098197937012
    7. ' to' → logprob: -10.757098197937012
    8. '#' → logprob: -10.882098197937012
    9. 'distance' → logprob: -10.882098197937012
    10. '    
' → logprob: -11.257098197937012

Token 1295: ' sphere' (ID: 51811)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5657079815864563
    2. ' if' → logprob: -0.9407079815864563
    3. 'vertical' → logprob: -4.190708160400391
    4. ' vertical' → logprob: -4.815708160400391
    5. '   ' → logprob: -5.565708160400391
    6. ' vert' → logprob: -5.815708160400391
    7. ' return' → logprob: -5.940708160400391
    8. 'vert' → logprob: -5.940708160400391
    9. 'return' → logprob: -6.065708160400391
    10. 'over' → logprob: -6.815708160400391

Token 1296: ' surface' (ID: 9753)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.4268939793109894
    2. '_center' → logprob: -1.676893949508667
    3. 'vertical' → logprob: -3.426893949508667
    4. 'bottom' → logprob: -3.551893949508667
    5. 'top' → logprob: -3.676893949508667
    6. '_bottom' → logprob: -3.926893949508667
    7. ' center' → logprob: -4.426894187927246
    8. 'z' → logprob: -4.801894187927246
    9. '_top' → logprob: -5.051894187927246
    10. 'surface' → logprob: -5.051894187927246

Token 1297: ' cannot' (ID: 6284)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -1.699196696281433
    2. '_z' → logprob: -2.0741968154907227
    3. 'distance' → logprob: -2.3241968154907227
    4. '_height' → logprob: -2.3241968154907227
    5. 'height' → logprob: -2.4491968154907227
    6. '_center' → logprob: -2.8241968154907227
    7. '#' → logprob: -2.9491968154907227
    8. 'center' → logprob: -3.3241968154907227
    9. ' needs' → logprob: -3.3241968154907227
    10. ' must' → logprob: -3.5741968154907227

Token 1298: ' intersect' (ID: 64353)
  Prédit: 'penetr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'penetr' → logprob: -0.2688266634941101
    2. 'be' → logprob: -1.5188267230987549
    3. 'go' → logprob: -5.268826484680176
    4. 'over' → logprob: -5.768826484680176
    5. 'inter' → logprob: -6.393826484680176
    6. ' be' → logprob: -6.643826484680176
    7. 'enter' → logprob: -6.643826484680176
    8. 'touch' → logprob: -7.268826484680176
    9. 'ex' → logprob: -7.268826484680176
    10. ' penetrate' → logprob: -7.393826484680176

Token 1299: ' block' (ID: 4355)
  Prédit: ' block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' block' → logprob: -0.9477171897888184
    2. 'block' → logprob: -1.8227171897888184
    3. '   ' → logprob: -2.0727171897888184
    4. 'if' → logprob: -2.6977171897888184
    5. ' with' → logprob: -2.8227171897888184
    6. ' if' → logprob: -3.0727171897888184
    7. ' the' → logprob: -3.1977171897888184
    8. 'with' → logprob: -3.4477171897888184
    9. 'the' → logprob: -3.9477171897888184
    10. 'r' → logprob: -4.447717189788818

Token 1300: ' volume' (ID: 10945)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034398097544908524
    2. '
' → logprob: -3.534398078918457
    3. '    
' → logprob: -5.659398078918457
    4. ' if' → logprob: -7.409398078918457
    5. 'if' → logprob: -9.409398078918457
    6. 'vertical' → logprob: -9.784398078918457
    7. ',' → logprob: -9.909398078918457
    8. ' 
' → logprob: -9.909398078918457
    9. '```' → logprob: -10.534398078918457
    10. ' vertical' → logprob: -10.659398078918457

Token 1301: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009333962574601173
    2. '
' → logprob: -5.384334087371826
    3. '    
' → logprob: -5.384334087371826
    4. '    ' → logprob: -11.134333610534668
    5. ' if' → logprob: -11.384333610534668
    6. '        
' → logprob: -11.634333610534668
    7. '   
' → logprob: -11.759333610534668
    8. 'if' → logprob: -11.759333610534668
    9. 'vertical' → logprob: -12.134333610534668
    10. '```' → logprob: -12.134333610534668

Token 1302: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05924740061163902
    2. ' if' → logprob: -3.0592474937438965
    3. ' vertical' → logprob: -5.0592474937438965
    4. ' v' → logprob: -6.6842474937438965
    5. '
' → logprob: -7.3092474937438965
    6. 'if' → logprob: -7.8092474937438965
    7. '```' → logprob: -7.8092474937438965
    8. '    ' → logprob: -8.184247016906738
    9. 'vertical' → logprob: -8.434247016906738
    10. ' return' → logprob: -8.809247016906738

Token 1303: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7187315225601196
    2. '   ' → logprob: -0.8437315225601196
    3. 'if' → logprob: -2.84373140335083
    4. ' vertical' → logprob: -4.84373140335083
    5. '```' → logprob: -5.09373140335083
    6. 'vertical' → logprob: -5.21873140335083
    7. 'v' → logprob: -6.59373140335083
    8. '
' → logprob: -7.34373140335083
    9. ' v' → logprob: -7.34373140335083
    10. '``' → logprob: -8.093731880187988

Token 1304: ' Minimal' (ID: 99472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9126927256584167
    2. 'if' → logprob: -0.9126927256584167
    3. 'vertical' → logprob: -2.0376927852630615
    4. 'vert' → logprob: -3.6626927852630615
    5. 'v' → logprob: -5.162692546844482
    6. 'ball' → logprob: -5.287692546844482
    7. ' if' → logprob: -5.287692546844482
    8. '#' → logprob: -5.537692546844482
    9. 'dz' → logprob: -5.537692546844482
    10. 'horizontal' → logprob: -5.537692546844482

Token 1305: ' vertical' (ID: 17679)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.04250165820121765
    2. '_vertical' → logprob: -3.91750168800354
    3. 'clear' → logprob: -4.792501449584961
    4. 'vert' → logprob: -5.542501449584961
    5. 'z' → logprob: -6.042501449584961
    6. '_clear' → logprob: -6.542501449584961
    7. 'distance' → logprob: -6.917501449584961
    8. ' vertical' → logprob: -7.042501449584961
    9. 'height' → logprob: -7.042501449584961
    10. '_vert' → logprob: -7.167501449584961

Token 1306: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.1442091464996338
    2. 'distance' → logprob: -1.6442091464996338
    3. '_clear' → logprob: -1.7692091464996338
    4. 'clear' → logprob: -1.8942091464996338
    5. '_dist' → logprob: -2.644209146499634
    6. '_distance' → logprob: -2.894209146499634
    7. '_gap' → logprob: -4.519208908081055
    8. ' clearance' → logprob: -4.769208908081055
    9. '
' → logprob: -5.019208908081055
    10. 'gap' → logprob: -5.144208908081055

Token 1307: ' between' (ID: 2870)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47204315662384033
    2. '=' → logprob: -1.3470431566238403
    3. '   ' → logprob: -2.472043037414551
    4. '_needed' → logprob: -4.222043037414551
    5. '_ab' → logprob: -5.597043037414551
    6. 'needed' → logprob: -5.722043037414551
    7. '_to' → logprob: -5.722043037414551
    8. '_required' → logprob: -5.972043037414551
    9. '_between' → logprob: -6.722043037414551
    10. '_b' → logprob: -7.097043037414551

Token 1308: ' ball' (ID: 7880)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.4137459397315979
    2. '(ball' → logprob: -1.5387458801269531
    3. 'block' → logprob: -3.038745880126953
    4. '(r' → logprob: -3.538745880126953
    5. 'r' → logprob: -3.663745880126953
    6. '(block' → logprob: -4.538745880126953
    7. '(' → logprob: -5.538745880126953
    8. '2' → logprob: -5.788745880126953
    9. 'sphere' → logprob: -6.413745880126953
    10. 'the' → logprob: -6.913745880126953

Token 1309: ' center' (ID: 6170)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.3206506371498108
    2. 'surface' → logprob: -1.820650577545166
    3. '_center' → logprob: -3.195650577545166
    4. 'top' → logprob: -3.820650577545166
    5. '=' → logprob: -4.570650577545166
    6. '
' → logprob: -4.820650577545166
    7. '_surface' → logprob: -4.945650577545166
    8. '   ' → logprob: -5.445650577545166
    9. 'z' → logprob: -5.945650577545166
    10. ' center' → logprob: -5.945650577545166

Token 1310: ' and' (ID: 326)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6977740526199341
    2. '   ' → logprob: -1.322774052619934
    3. ' and' → logprob: -2.8227739334106445
    4. '-' → logprob: -2.9477739334106445
    5. ' to' → logprob: -2.9477739334106445
    6. 'and' → logprob: -3.4477739334106445
    7. ' =' → logprob: -4.5727739334106445
    8. '=' → logprob: -4.6977739334106445
    9. 'to' → logprob: -4.6977739334106445
    10. ',' → logprob: -6.4477739334106445

Token 1311: ' block' (ID: 4355)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.04181399196386337
    2. 'block' → logprob: -3.541814088821411
    3. '0' → logprob: -4.791813850402832
    4. '(h' → logprob: -6.666813850402832
    5. 'ball' → logprob: -7.541813850402832
    6. 'top' → logprob: -7.666813850402832
    7. 'the' → logprob: -7.791813850402832
    8. 'max' → logprob: -8.416813850402832
    9. 'bottom' → logprob: -8.666813850402832
    10. ' h' → logprob: -9.041813850402832

Token 1312: ' top' (ID: 2344)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9702643156051636
    2. ' =' → logprob: -1.0952643156051636
    3. '=' → logprob: -2.345264434814453
    4. 'top' → logprob: -3.220264434814453
    5. 'center' → logprob: -3.720264434814453
    6. ' is' → logprob: -4.095264434814453
    7. '
' → logprob: -4.220264434814453
    8. ':' → logprob: -4.470264434814453
    9. ' top' → logprob: -4.470264434814453
    10. '_top' → logprob: -4.970264434814453

Token 1313: ' is' (ID: 382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030751941725611687
    2. ' =' → logprob: -4.655751705169678
    3. ':' → logprob: -5.030751705169678
    4. ' if' → logprob: -5.280751705169678
    5. ' is' → logprob: -5.780751705169678
    6. '
' → logprob: -5.905751705169678
    7. '=' → logprob: -7.655751705169678
    8. '    
' → logprob: -7.655751705169678
    9. '    ' → logprob: -7.780751705169678
    10. ' ' → logprob: -8.280752182006836

Token 1314: ' r' (ID: 428)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.23707257211208344
    2. 'max' → logprob: -1.6120725870132446
    3. ' max' → logprob: -6.112072467803955
    4. ' h' → logprob: -6.237072467803955
    5. 'r' → logprob: -6.362072467803955
    6. 'abs' → logprob: -6.362072467803955
    7. '(h' → logprob: -6.737072467803955
    8. 'horizontal' → logprob: -7.237072467803955
    9. 'ball' → logprob: -7.487072467803955
    10. '0' → logprob: -7.862072467803955

Token 1315: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12033967673778534
    2. ' -' → logprob: -2.7453396320343018
    3. '
' → logprob: -3.2453396320343018
    4. ' if' → logprob: -5.745339870452881
    5. ' +' → logprob: -6.370339870452881
    6. '    
' → logprob: -6.620339870452881
    7. '-' → logprob: -7.370339870452881
    8. ',' → logprob: -7.620339870452881
    9. ')' → logprob: -7.620339870452881
    10. ' ' → logprob: -8.120339393615723

Token 1316: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -7.827200897736475e-05
    2. '(h' → logprob: -10.125078201293945
    3. ' h' → logprob: -10.750078201293945
    4. ' (' → logprob: -12.000078201293945
    5. '(' → logprob: -12.250078201293945
    6. 'max' → logprob: -12.875078201293945
    7. 'min' → logprob: -14.250078201293945
    8. '(max' → logprob: -14.625078201293945
    9. '(r' → logprob: -15.000078201293945
    10. '0' → logprob: -15.250078201293945

Token 1317: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34117546677589417
    2. '
' → logprob: -1.3411754369735718
    3. '    
' → logprob: -4.591175556182861
    4. ' if' → logprob: -5.216175556182861
    5. ' +' → logprob: -6.341175556182861
    6. ':' → logprob: -6.716175556182861
    7. '<|end|>' → logprob: -6.716175556182861
    8. ')' → logprob: -6.841175556182861
    9. ' -' → logprob: -6.966175556182861
    10. 'def' → logprob: -7.466175556182861

Token 1318: ' ball' (ID: 7880)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.4105607569217682
    2. 'h' → logprob: -1.1605607271194458
    3. 'vertical' → logprob: -4.910560607910156
    4. 'r' → logprob: -5.035560607910156
    5. ' horizontal' → logprob: -5.285560607910156
    6. 'ball' → logprob: -6.160560607910156
    7. ' h' → logprob: -6.535560607910156
    8. 'block' → logprob: -7.535560607910156
    9. ' r' → logprob: -9.785560607910156
    10. '0' → logprob: -9.785560607910156

Token 1319: ' overlaps' (ID: 173439)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.2666146457195282
    2. '_z' → logprob: -2.6416146755218506
    3. '_x' → logprob: -3.3916146755218506
    4. 'z' → logprob: -3.5166146755218506
    5. 'is' → logprob: -3.5166146755218506
    6. 'r' → logprob: -3.6416146755218506
    7. ' center' → logprob: -5.1416144371032715
    8. 'radius' → logprob: -5.2666144371032715
    9. ' is' → logprob: -5.5166144371032715
    10. ''s' → logprob: -5.5166144371032715

Token 1320: ' horizontally' (ID: 113653)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03729261830449104
    2. '
' → logprob: -3.662292718887329
    3. ' if' → logprob: -5.53729248046875
    4. '    
' → logprob: -6.53729248046875
    5. ' and' → logprob: -7.16229248046875
    6. ',' → logprob: -7.16229248046875
    7. ':' → logprob: -7.41229248046875
    8. ' vertically' → logprob: -7.53729248046875
    9. ':
' → logprob: -8.16229248046875
    10. ' (' → logprob: -8.28729248046875

Token 1321: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03085220605134964
    2. '
' → logprob: -3.7808523178100586
    3. '    
' → logprob: -5.030852317810059
    4. ' if' → logprob: -7.530852317810059
    5. 'if' → logprob: -9.655852317810059
    6. ',' → logprob: -9.905852317810059
    7. '    ' → logprob: -10.155852317810059
    8. '  
' → logprob: -10.280852317810059
    9. '   
' → logprob: -10.405852317810059
    10. '\n' → logprob: -10.405852317810059

Token 1322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032397438772022724
    2. '
' → logprob: -6.503239631652832
    3. ' if' → logprob: -7.003239631652832
    4. '    
' → logprob: -7.503239631652832
    5. 'if' → logprob: -9.378239631652832
    6. 'vertical' → logprob: -9.753239631652832
    7. ' vertical' → logprob: -10.378239631652832
    8. ' 
' → logprob: -10.378239631652832
    9. '    ' → logprob: -11.003239631652832
    10. '   
' → logprob: -11.878239631652832

Token 1323: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.636391282081604
    2. 'if' → logprob: -0.761391282081604
    3. ' if' → logprob: -6.1363911628723145
    4. 'vertical' → logprob: -6.7613911628723145
    5. '```' → logprob: -8.886391639709473
    6. '
' → logprob: -9.511391639709473
    7. 'v' → logprob: -9.636391639709473
    8. '#' (adapté à ' #') → logprob: -9.886391639709473
    9. 'vert' → logprob: -10.136391639709473
    10. 'return' → logprob: -10.261391639709473

Token 1324: ' Actually' (ID: 50557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2295427918434143
    2. 'if' → logprob: -1.6045427322387695
    3. ' if' → logprob: -5.9795427322387695
    4. 'vertical' → logprob: -7.1045427322387695
    5. '#' → logprob: -8.22954273223877
    6. '```' → logprob: -8.60454273223877
    7. '
' → logprob: -9.35454273223877
    8. 'return' → logprob: -9.72954273223877
    9. 'vert' → logprob: -10.47954273223877
    10. 'ball' → logprob: -10.72954273223877

Token 1325: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002723917830735445
    2. '#' → logprob: -7.502723693847656
    3. ' if' → logprob: -7.627723693847656
    4. '```' → logprob: -7.752723693847656
    5. 'horizontal' → logprob: -8.002723693847656
    6. 'if' → logprob: -8.127723693847656
    7. 'vertical' → logprob: -8.752723693847656
    8. ' horizontal' → logprob: -9.002723693847656
    9. 'def' → logprob: -9.252723693847656
    10. '
' → logprob: -9.252723693847656

Token 1326: ' the' (ID: 290)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06292710453271866
    2. '#' → logprob: -3.687927007675171
    3. '   ' → logprob: -3.812927007675171
    4. 'vertical' → logprob: -4.68792724609375
    5. ' if' → logprob: -5.81292724609375
    6. 'horizontal' → logprob: -7.56292724609375
    7. 'return' → logprob: -7.68792724609375
    8. 'vert' → logprob: -8.06292724609375
    9. 'def' → logprob: -9.31292724609375
    10. '```' → logprob: -9.56292724609375

Token 1327: ' minimal' (ID: 19957)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06405951827764511
    2. 'vertical' → logprob: -3.8140594959259033
    3. '#' → logprob: -4.064059734344482
    4. '   ' → logprob: -4.439059734344482
    5. 'horizontal' → logprob: -5.814059734344482
    6. 'return' → logprob: -6.064059734344482
    7. 'def' → logprob: -6.189059734344482
    8. ' if' → logprob: -6.314059734344482
    9. 'ball' → logprob: -7.439059734344482
    10. 'block' → logprob: -8.564059257507324

Token 1328: ' distance' (ID: 9324)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.009520551189780235
    2. ' vertical' → logprob: -5.884520530700684
    3. 'distance' → logprob: -6.134520530700684
    4. '_vertical' → logprob: -6.509520530700684
    5. 'clear' → logprob: -6.759520530700684
    6. 'height' → logprob: -7.384520530700684
    7. 'required' → logprob: -7.759520530700684
    8. 'def' → logprob: -7.884520530700684
    9. 'vert' → logprob: -9.634520530700684
    10. 'z' → logprob: -9.634520530700684

Token 1329: ' between' (ID: 2870)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.1042473316192627
    2. 'to' → logprob: -1.8542473316192627
    3. '=' → logprob: -1.9792473316192627
    4. 'between' → logprob: -2.1042473316192627
    5. '_to' → logprob: -3.1042473316192627
    6. 'on' → logprob: -3.1042473316192627
    7. '_between' → logprob: -3.4792473316192627
    8. 'needed' → logprob: -3.6042473316192627
    9. 'is' → logprob: -3.6042473316192627
    10. ' =' → logprob: -4.104247093200684

Token 1330: ' ball' (ID: 7880)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.10073742270469666
    2. 'block' → logprob: -3.1007373332977295
    3. 'the' → logprob: -3.3507373332977295
    4. 'center' → logprob: -5.100737571716309
    5. 'sphere' → logprob: -5.100737571716309
    6. '(ball' → logprob: -6.350737571716309
    7. '球' → logprob: -6.850737571716309
    8. ' ball' → logprob: -8.225737571716309
    9. '(' → logprob: -9.100737571716309
    10. 'vertical' → logprob: -10.100737571716309

Token 1331: ' surface' (ID: 9753)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.05177593603730202
    2. 'surface' → logprob: -3.3017759323120117
    3. 'and' → logprob: -4.926775932312012
    4. ' center' → logprob: -5.301775932312012
    5. ' and' → logprob: -8.176775932312012
    6. 'bottom' → logprob: -8.551775932312012
    7. ' surface' → logprob: -8.676775932312012
    8. 'sphere' → logprob: -8.676775932312012
    9. '_center' → logprob: -8.801775932312012
    10. 'vertical' → logprob: -9.676775932312012

Token 1332: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.057114310562610626
    2. 'center' → logprob: -3.057114362716675
    3. ' and' → logprob: -5.682114124298096
    4. 'surface' → logprob: -5.807114124298096
    5. 'to' → logprob: -6.807114124298096
    6. '(center' → logprob: -7.807114124298096
    7. ' center' → logprob: -7.932114124298096
    8. '
' → logprob: -9.932114601135254
    9. '   ' → logprob: -10.057114601135254
    10. '#' → logprob: -10.682114601135254

Token 1333: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.00032259183353744447
    2. ' block' → logprob: -8.375322341918945
    3. 'the' → logprob: -9.875322341918945
    4. 'top' → logprob: -10.750322341918945
    5. 'ball' → logprob: -11.375322341918945
    6. '#' → logprob: -13.250322341918945
    7. 'bottom' → logprob: -13.625322341918945
    8. '   ' → logprob: -14.000322341918945
    9. '
' → logprob: -14.125322341918945
    10. 'surface' → logprob: -14.375322341918945

Token 1334: ' is' (ID: 382)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.5147455930709839
    2. 'surface' → logprob: -1.0147455930709839
    3. 'is' → logprob: -4.139745712280273
    4. 'bottom' → logprob: -4.764745712280273
    5. 'center' → logprob: -4.764745712280273
    6. 'vertical' → logprob: -5.639745712280273
    7. ' is' → logprob: -7.139745712280273
    8. ' surface' → logprob: -7.264745712280273
    9. '(top' → logprob: -8.264745712280273
    10. ' top' → logprob: -8.264745712280273

Token 1335: ' minimal' (ID: 19957)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.03505416586995125
    2. ' max' → logprob: -3.9100542068481445
    3. 'horizontal' → logprob: -5.2850542068481445
    4. '0' → logprob: -5.7850542068481445
    5. 'h' → logprob: -5.9100542068481445
    6. 'r' → logprob: -6.6600542068481445
    7. 'vertical' → logprob: -7.1600542068481445
    8. '   ' → logprob: -7.1600542068481445
    9. 'min' → logprob: -8.285054206848145
    10. '```' → logprob: -8.535054206848145

Token 1336: ' distance' (ID: 9324)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.7667326331138611
    2. '_vertical' → logprob: -1.7667326927185059
    3. 'dist' → logprob: -2.141732692718506
    4. 'distance' → logprob: -2.766732692718506
    5. '_dist' → logprob: -3.141732692718506
    6. 'def' → logprob: -3.266732692718506
    7. '_distance' → logprob: -3.516732692718506
    8. 'z' → logprob: -4.141732692718506
    9. '_vert' → logprob: -4.516732692718506
    10. '_z' → logprob: -4.891732692718506

Token 1337: ' between' (ID: 2870)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2959996461868286
    2. 'from' → logprob: -2.920999526977539
    3. '_between' → logprob: -3.545999526977539
    4. ' between' → logprob: -3.545999526977539
    5. 'between' → logprob: -3.670999526977539
    6. ' =' → logprob: -3.670999526977539
    7. '_to' → logprob: -3.670999526977539
    8. '_dx' → logprob: -4.920999526977539
    9. '_horizontal' → logprob: -4.920999526977539
    10. '```' → logprob: -5.170999526977539

Token 1338: ' sphere' (ID: 51811)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.5991199016571045
    2. '(ball' → logprob: -1.3491199016571045
    3. 'the' → logprob: -2.7241199016571045
    4. 'block' → logprob: -2.8491199016571045
    5. 'r' → logprob: -3.9741199016571045
    6. '(block' → logprob: -4.099120140075684
    7. '(r' → logprob: -4.349120140075684
    8. '(' → logprob: -4.974120140075684
    9. 'sphere' → logprob: -5.724120140075684
    10. 'vertical' → logprob: -5.724120140075684

Token 1339: ' surface' (ID: 9753)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.060955751687288284
    2. 'surface' → logprob: -2.935955762863159
    3. ' center' → logprob: -5.31095552444458
    4. ' surface' → logprob: -7.68595552444458
    5. 'and' → logprob: -7.93595552444458
    6. '(center' → logprob: -8.310956001281738
    7. '_center' → logprob: -10.935956001281738
    8. ' and' → logprob: -11.435956001281738
    9. 'sphere' → logprob: -12.435956001281738
    10. '
' → logprob: -12.685956001281738

Token 1340: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.1108933612704277
    2. ' and' → logprob: -2.9858932495117188
    3. 'center' → logprob: -3.7358932495117188
    4. 'surface' → logprob: -3.8608932495117188
    5. '   ' → logprob: -5.985893249511719
    6. '(center' → logprob: -6.360893249511719
    7. ' center' → logprob: -6.610893249511719
    8. 'to' → logprob: -6.985893249511719
    9. ' surface' → logprob: -7.610893249511719
    10. ' -' → logprob: -7.985893249511719

Token 1341: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.013707151636481285
    2. 'the' → logprob: -4.888707160949707
    3. ' block' → logprob: -5.638707160949707
    4. '(block' → logprob: -6.763707160949707
    5. 'sphere' → logprob: -7.388707160949707
    6. 'cube' → logprob: -7.888707160949707
    7. '#' → logprob: -9.763707160949707
    8. ' the' → logprob: -10.138707160949707
    9. 'rectangle' → logprob: -10.138707160949707
    10. 'top' → logprob: -10.263707160949707

Token 1342: ' volume' (ID: 10945)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035113103687763214
    2. '
' → logprob: -4.035113334655762
    3. '    
' → logprob: -5.410113334655762
    4. '#' → logprob: -5.910113334655762
    5. ' if' → logprob: -6.285113334655762
    6. 'def' → logprob: -6.410113334655762
    7. 'import' → logprob: -6.910113334655762
    8. ' and' → logprob: -7.285113334655762
    9. ' (' → logprob: -7.785113334655762
    10. 'surface' → logprob: -7.785113334655762

Token 1343: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03439775109291077
    2. '
' → logprob: -3.659397840499878
    3. '    
' → logprob: -4.909397602081299
    4. '```' → logprob: -8.534398078918457
    5. '#' → logprob: -9.409398078918457
    6. 'def' → logprob: -9.659398078918457
    7. '    ' → logprob: -9.909398078918457
    8. 'import' → logprob: -10.159398078918457
    9. '<|end|>' → logprob: -10.534398078918457
    10. ',' → logprob: -10.659398078918457

Token 1344: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022662485018372536
    2. '
' → logprob: -4.02266263961792
    3. '    
' → logprob: -6.02266263961792
    4. ' if' → logprob: -7.27266263961792
    5. 'if' → logprob: -8.022662162780762
    6. '```' → logprob: -8.147662162780762
    7. 'vertical' → logprob: -9.022662162780762
    8. '    ' → logprob: -9.397662162780762
    9. ' 
' → logprob: -9.647662162780762
    10. '#' → logprob: -10.147662162780762

Token 1345: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08979488909244537
    2. '
' → logprob: -3.089794874191284
    3. 'if' → logprob: -4.089795112609863
    4. ' if' → logprob: -4.589795112609863
    5. '#' (adapté à ' #') → logprob: -5.464795112609863
    6. 'dx' → logprob: -6.089795112609863
    7. '```' → logprob: -6.714795112609863
    8. 'vertical' → logprob: -7.089795112609863
    9. '    
' → logprob: -7.089795112609863
    10. 'def' → logprob: -7.214795112609863

Token 1346: ' We' (ID: 1416)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7540103197097778
    2. 'if' → logprob: -1.0040103197097778
    3. 'dz' → logprob: -3.6290102005004883
    4. 'vertical' → logprob: -3.6290102005004883
    5. ' if' → logprob: -4.129010200500488
    6. '#' → logprob: -4.254010200500488
    7. '
' → logprob: -4.379010200500488
    8. 'v' → logprob: -4.879010200500488
    9. 'vert' → logprob: -4.879010200500488
    10. 'ball' → logprob: -5.004010200500488

Token 1347: ' want' (ID: 1682)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1316542774438858
    2. 'import' → logprob: -2.7566542625427246
    3. 'return' → logprob: -3.7566542625427246
    4. 'horizontal' → logprob: -5.381654262542725
    5. 'need' → logprob: -5.506654262542725
    6. '#' → logprob: -5.506654262542725
    7. '
' → logprob: -5.506654262542725
    8. 'calculate' → logprob: -5.631654262542725
    9. 'continue' → logprob: -6.006654262542725
    10. 'if' → logprob: -6.131654262542725

Token 1348: ' radius' (ID: 21090)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9086917638778687
    2. '   ' → logprob: -1.4086917638778687
    3. 'min' → logprob: -1.5336917638778687
    4. ' max' → logprob: -3.658691883087158
    5. '0' → logprob: -4.158691883087158
    6. 'dist' → logprob: -4.283691883087158
    7. ' to' → logprob: -4.283691883087158
    8. 'horizontal' → logprob: -4.658691883087158
    9. 'math' → logprob: -4.783691883087158
    10. 'def' → logprob: -4.908691883087158

Token 1349: ' r' (ID: 428)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.002839110791683197
    2. '-' → logprob: -6.877839088439941
    3. ' ' → logprob: -7.252839088439941
    4. ' +' → logprob: -7.752839088439941
    5. '<|end|>' → logprob: -9.002839088439941
    6. ')' → logprob: -9.252839088439941
    7. ',' → logprob: -9.377839088439941
    8. '+' → logprob: -10.002839088439941
    9. ' )' → logprob: -10.252839088439941
    10. '<|end|>' → logprob: -10.252839088439941

Token 1350: ' such' (ID: 2238)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37295010685920715
    2. '
' → logprob: -2.4979500770568848
    3. ' -' → logprob: -2.6229500770568848
    4. ':' → logprob: -2.7479500770568848
    5. ' =' → logprob: -3.9979500770568848
    6. 'def' → logprob: -4.622950077056885
    7. ' ' → logprob: -4.872950077056885
    8. ' if' → logprob: -5.247950077056885
    9. ' >=' → logprob: -5.247950077056885
    10. ',' → logprob: -5.372950077056885

Token 1351: ' that' (ID: 484)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.21073497831821442
    2. 'that' → logprob: -1.7107349634170532
    3. 'hat' → logprob: -4.835734844207764
    4. ' that' → logprob: -6.710734844207764
    5. '_that' → logprob: -10.710735321044922
    6. '   ' → logprob: -10.835735321044922
    7. '#' → logprob: -11.210735321044922
    8. 'That' → logprob: -11.335735321044922
    9. 'AT' → logprob: -11.710735321044922
    10. '	that' → logprob: -11.835735321044922

Token 1352: ':
' (ID: 734)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.621284008026123
    2. 'vertical' → logprob: -1.496284008026123
    3. '(h' → logprob: -2.371284008026123
    4. '(horizontal' → logprob: -3.121284008026123
    5. ' horizontal' → logprob: -3.871284008026123
    6. '(vertical' → logprob: -3.996284008026123
    7. 'max' → logprob: -3.996284008026123
    8. 'h' → logprob: -4.746284008026123
    9. 'r' → logprob: -4.746284008026123
    10. '(r' → logprob: -4.996284008026123

Token 1353: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1067013069987297
    2. ' if' → logprob: -2.356701374053955
    3. ' return' → logprob: -5.981701374053955
    4. '    ' → logprob: -6.481701374053955
    5. '```' → logprob: -7.106701374053955
    6. ' vertical' → logprob: -7.731701374053955
    7. 'if' → logprob: -8.106700897216797
    8. ' vertically' → logprob: -9.106700897216797
    9. ' ' → logprob: -9.356700897216797
    10. 'vertical' → logprob: -9.481700897216797

Token 1354: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.1216764450073242
    2. ' if' → logprob: -1.1216764450073242
    3. 'if' → logprob: -1.9966764450073242
    4. '   ' → logprob: -1.9966764450073242
    5. 'vertical' → logprob: -3.621676445007324
    6. ' return' → logprob: -4.746676445007324
    7. ' vertical' → logprob: -4.746676445007324
    8. 'return' → logprob: -4.996676445007324
    9. ' #' → logprob: -5.121676445007324
    10. '```' → logprob: -5.246676445007324

Token 1355: ' sqrt' (ID: 44237)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4243217408657074
    2. ' if' → logprob: -1.9243217706680298
    3. '   ' → logprob: -2.4243216514587402
    4. 'vertical' → logprob: -2.9243216514587402
    5. 'horizontal' → logprob: -4.29932165145874
    6. '```' → logprob: -4.29932165145874
    7. ' vertical' → logprob: -5.04932165145874
    8. 'min' → logprob: -5.42432165145874
    9. '
' → logprob: -5.67432165145874
    10. '#' → logprob: -5.79932165145874

Token 1356: '(horizontal' (ID: 106641)
  Prédit: '(dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dx' → logprob: -0.4291166067123413
    2. '(horizontal' → logprob: -1.1791166067123413
    3. '((' → logprob: -3.929116725921631
    4. 'dx' → logprob: -4.554116725921631
    5. 'horizontal' → logprob: -4.679116725921631
    6. '(' → logprob: -6.429116725921631
    7. ' horizontal' → logprob: -9.429116249084473
    8. '(max' → logprob: -9.804116249084473
    9. '(h' → logprob: -9.929116249084473
    10. ' (' → logprob: -10.304116249084473

Token 1357: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.010953613556921482
    2. 'dist' → logprob: -5.135953426361084
    3. '_dx' → logprob: -5.385953426361084
    4. 'dx' → logprob: -8.260953903198242
    5. '
' → logprob: -9.635953903198242
    6. '_distance' → logprob: -10.385953903198242
    7. '```' → logprob: -10.760953903198242
    8. '_diff' → logprob: -11.135953903198242
    9. 'distance' → logprob: -11.385953903198242
    10. 'Dist' → logprob: -12.385953903198242

Token 1358: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.1271909922361374
    2. '*' → logprob: -2.1271910667419434
    3. '2' → logprob: -8.502190589904785
    4. '²' → logprob: -10.502190589904785
    5. '```' → logprob: -10.877190589904785
    6. '^' → logprob: -13.127190589904785
    7. '***' → logprob: -13.502190589904785
    8. '*r' → logprob: -13.752190589904785
    9. ')' → logprob: -13.752190589904785
    10. '[' → logprob: -13.877190589904785

Token 1359: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3544423381972592e-05
    2. '**' → logprob: -11.62501335144043
    3. ' ' → logprob: -13.25001335144043
    4. '*' → logprob: -13.50001335144043
    5. '
' → logprob: -14.25001335144043
    6. '```' → logprob: -14.87501335144043
    7. '²' → logprob: -16.37501335144043
    8. '​' → logprob: -16.37501335144043
    9. 'dx' → logprob: -16.37501335144043
    10. '=' → logprob: -18.00001335144043

Token 1360: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5761576294898987
    2. ' +' → logprob: -0.8261576294898987
    3. '+r' → logprob: -9.201157569885254
    4. ')' → logprob: -10.076157569885254
    5. ',' → logprob: -10.326157569885254
    6. '+
' → logprob: -11.451157569885254
    7. ')+' → logprob: -11.951157569885254
    8. '   ' → logprob: -12.576157569885254
    9. '```' → logprob: -12.576157569885254
    10. '+d' → logprob: -12.951157569885254

Token 1361: ' vertical' (ID: 17679)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(max' → logprob: -1.2985283136367798
    2. '(' → logprob: -1.5485283136367798
    3. '(vertical' → logprob: -1.5485283136367798
    4. '(min' → logprob: -2.2985281944274902
    5. 'vertical' → logprob: -2.7985281944274902
    6. '(r' → logprob: -2.7985281944274902
    7. 'max' → logprob: -3.2985281944274902
    8. ' (' → logprob: -4.29852819442749
    9. 'min' → logprob: -4.42352819442749
    10. '(v' → logprob: -5.17352819442749

Token 1362: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.2152293622493744
    2. 'dist' → logprob: -2.2152292728424072
    3. '_distance' → logprob: -2.9652292728424072
    4. '
' → logprob: -4.090229511260986
    5. 'distance' → logprob: -4.965229511260986
    6. 'r' → logprob: -5.590229511260986
    7. '(r' → logprob: -6.340229511260986
    8. '_r' → logprob: -6.965229511260986
    9. ')' → logprob: -7.465229511260986
    10. '(' → logprob: -7.840229511260986

Token 1363: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.10317851603031158
    2. '^' → logprob: -2.9781785011291504
    3. ')' → logprob: -3.4781785011291504
    4. '_squared' → logprob: -4.47817850112915
    5. '²' → logprob: -7.10317850112915
    6. '```' → logprob: -7.22817850112915
    7. '_' → logprob: -7.35317850112915
    8. '_r' → logprob: -7.85317850112915
    9. '[' → logprob: -8.228178977966309
    10. '_distance' → logprob: -8.228178977966309

Token 1364: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00035918003413826227
    2. '**' → logprob: -8.000359535217285
    3. '
' → logprob: -11.750359535217285
    4. '0' → logprob: -12.750359535217285
    5. '*' → logprob: -13.125359535217285
    6. '(' → logprob: -13.375359535217285
    7. '²' → logprob: -13.500359535217285
    8. ' ' → logprob: -13.625359535217285
    9. ')' → logprob: -13.750359535217285
    10. 'r' → logprob: -14.125359535217285

Token 1365: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010954678989946842
    2. ')**' → logprob: -5.260954856872559
    3. ' )' → logprob: -6.260954856872559
    4. '**' → logprob: -6.385954856872559
    5. ')=' → logprob: -7.885954856872559
    6. ')==' → logprob: -8.385954856872559
    7. ')>' → logprob: -8.510954856872559
    8. '**)' → logprob: -8.635954856872559
    9. '   ' → logprob: -8.760954856872559
    10. '")' → logprob: -8.885954856872559

Token 1366: ' >=' (ID: 5064)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4733034074306488
    2. '=' → logprob: -1.5983034372329712
    3. ' >=' → logprob: -2.3483033180236816
    4. ')' → logprob: -3.7233033180236816
    5. ' <=' → logprob: -3.7233033180236816
    6. ' >' → logprob: -4.973303318023682
    7. '   ' → logprob: -5.348303318023682
    8. '>=' → logprob: -5.348303318023682
    9. '**' → logprob: -5.598303318023682
    10. ' )' → logprob: -5.598303318023682

Token 1367: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -8.101369894575328e-05
    2. ' r' → logprob: -9.875081062316895
    3. '(r' → logprob: -11.125081062316895
    4. '2' → logprob: -11.500081062316895
    5. '(' → logprob: -13.250081062316895
    6. '
' → logprob: -14.375081062316895
    7. 'horizontal' → logprob: -14.375081062316895
    8. '   ' → logprob: -14.750081062316895
    9. 'radius' → logprob: -15.125081062316895
    10. '0' → logprob: -15.250081062316895

Token 1368: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13335181772708893
    2. '
' → logprob: -2.1333518028259277
    3. '    
' → logprob: -6.133351802825928
    4. 'def' → logprob: -6.258351802825928
    5. '<|end|>' → logprob: -8.008352279663086
    6. 'vertical' → logprob: -8.508352279663086
    7. ')' → logprob: -8.633352279663086
    8. ',' → logprob: -8.758352279663086
    9. '<|end|>' → logprob: -8.758352279663086
    10. ' if' → logprob: -9.008352279663086

Token 1369: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022521954961121082
    2. '
' → logprob: -6.627252101898193
    3. '    
' → logprob: -7.877252101898193
    4. '    ' → logprob: -8.502252578735352
    5. 'vertical' → logprob: -9.377252578735352
    6. '\' → logprob: -10.127252578735352
    7. ' vertical' → logprob: -10.252252578735352
    8. '\n' → logprob: -10.627252578735352
    9. '       ' → logprob: -10.627252578735352
    10. '  ' → logprob: -10.877252578735352

Token 1370: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04141661897301674
    2. '
' → logprob: -3.416416645050049
    3. '    ' → logprob: -6.416416645050049
    4. 'vertical' → logprob: -6.541416645050049
    5. '    
' → logprob: -6.791416645050049
    6. ' vertical' → logprob: -7.291416645050049
    7. ' if' → logprob: -7.291416645050049
    8. 'return' → logprob: -8.54141616821289
    9. ')' → logprob: -8.66641616821289
    10. ' ' → logprob: -8.66641616821289

Token 1371: ' vertical' (ID: 17679)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.406982958316803
    2. 'vertical' → logprob: -1.2819828987121582
    3. 'if' → logprob: -3.531982898712158
    4. '
' → logprob: -4.406982898712158
    5. ' vertical' → logprob: -5.531982898712158
    6. '#' → logprob: -5.531982898712158
    7. ' if' → logprob: -6.406982898712158
    8. 'vert' → logprob: -6.531982898712158
    9. 'return' → logprob: -6.656982898712158
    10. 'v' → logprob: -6.781982898712158

Token 1372: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.017739903181791306
    2. 'dist' → logprob: -4.267739772796631
    3. '_clear' → logprob: -5.767739772796631
    4. 'clear' → logprob: -8.392740249633789
    5. '_offset' → logprob: -9.017740249633789
    6. '_gap' → logprob: -10.767740249633789
    7. '_distance' → logprob: -11.017740249633789
    8. '=' → logprob: -11.517740249633789
    9. '_diff' → logprob: -11.517740249633789
    10. '_overlap' → logprob: -11.642740249633789

Token 1373: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2815079092979431
    2. ' =' → logprob: -1.406507968902588
    3. '   ' → logprob: -8.03150749206543
    4. '>' → logprob: -11.40650749206543
    5. 'def' → logprob: -12.40650749206543
    6. ' >' → logprob: -13.28150749206543
    7. ',' → logprob: -13.28150749206543
    8. ' ' → logprob: -13.40650749206543
    9. '=
' → logprob: -13.53150749206543
    10. 'if' → logprob: -13.65650749206543

Token 1374: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.15645945072174072
    2. 'h' → logprob: -2.031459331512451
    3. 'r' → logprob: -4.781459331512451
    4. '0' → logprob: -6.031459331512451
    5. 'abs' → logprob: -6.156459331512451
    6. '(max' → logprob: -8.40645980834961
    7. ' max' → logprob: -8.65645980834961
    8. 'ball' → logprob: -9.15645980834961
    9. '(h' → logprob: -9.28145980834961
    10. 'min' → logprob: -9.40645980834961

Token 1375: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013922579819336534
    2. '0' → logprob: -7.001392364501953
    3. '(h' → logprob: -7.751392364501953
    4. '(r' → logprob: -10.501392364501953
    5. 'h' → logprob: -11.126392364501953
    6. '(
' → logprob: -13.376392364501953
    7. 'r' → logprob: -13.376392364501953
    8. ' (' → logprob: -13.626392364501953
    9. '((' → logprob: -14.001392364501953
    10. '(-' → logprob: -14.501392364501953

Token 1376: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015937690623104572
    2. 'h' → logprob: -6.501593589782715
    3. '(' → logprob: -10.001593589782715
    4. '(h' → logprob: -10.376593589782715
    5. 'r' → logprob: -11.751593589782715
    6. '(r' → logprob: -12.751593589782715
    7. 'block' → logprob: -13.751593589782715
    8. ' ' → logprob: -13.876593589782715
    9. ' h' → logprob: -15.001593589782715
    10. 'ball' → logprob: -15.001593589782715

Token 1377: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009956651367247105
    2. ' -' → logprob: -4.8849568367004395
    3. ' ,' → logprob: -6.8849568367004395
    4. ',r' → logprob: -7.2599568367004395
    5. '-' → logprob: -8.009956359863281
    6. '   ' → logprob: -9.009956359863281
    7. ',
' → logprob: -9.759956359863281
    8. ',h' → logprob: -10.384956359863281
    9. '-r' → logprob: -11.259956359863281
    10. ')' → logprob: -11.259956359863281

Token 1378: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0012448744382709265
    2. 'r' → logprob: -6.876245021820068
    3. '(h' → logprob: -8.62624454498291
    4. 'ball' → logprob: -11.50124454498291
    5. '(r' → logprob: -11.62624454498291
    6. ' h' → logprob: -12.00124454498291
    7. 'block' → logprob: -12.50124454498291
    8. '(' → logprob: -14.12624454498291
    9. '0' → logprob: -14.62624454498291
    10. 'height' → logprob: -14.62624454498291

Token 1379: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008319411426782608
    2. '-' → logprob: -4.88331937789917
    3. '-r' → logprob: -7.25831937789917
    4. ')' → logprob: -12.508319854736328
    5. '   ' → logprob: -13.508319854736328
    6. ' +' → logprob: -14.008319854736328
    7. ' ' → logprob: -14.133319854736328
    8. '+' → logprob: -14.383319854736328
    9. '+r' → logprob: -15.258319854736328
    10. '#' → logprob: -15.383319854736328

Token 1380: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.014913889579474926
    2. '(' → logprob: -4.639914035797119
    3. '2' → logprob: -5.514914035797119
    4. '(r' → logprob: -7.139914035797119
    5. ' r' → logprob: -8.264913558959961
    6. ' (' → logprob: -9.764913558959961
    7. ' ' → logprob: -12.514913558959961
    8. '   ' → logprob: -13.014913558959961
    9. '(
' → logprob: -13.764913558959961
    10. '0' → logprob: -14.389913558959961

Token 1381: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022777853533625603
    2. ')
' → logprob: -4.272778034210205
    3. '   ' → logprob: -5.147778034210205
    4. ' +' → logprob: -6.397778034210205
    5. ' )' → logprob: -7.522778034210205
    6. '+' → logprob: -7.897778034210205
    7. ')+' → logprob: -10.397777557373047
    8. ')
' → logprob: -10.397777557373047
    9. ' )
' → logprob: -10.522777557373047
    10. '```' → logprob: -11.022777557373047

Token 1382: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01643795147538185
    2. '
' → logprob: -4.266438007354736
    3. '    
' → logprob: -6.266438007354736
    4. 'vertical' → logprob: -9.141437530517578
    5. '```' → logprob: -9.641437530517578
    6. 'if' → logprob: -9.766437530517578
    7. ' if' → logprob: -10.016437530517578
    8. ' vertical' → logprob: -11.141437530517578
    9. 'return' → logprob: -11.391437530517578
    10. '  
' → logprob: -11.891437530517578

Token 1383: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030781926587224007
    2. '
' → logprob: -3.5307819843292236
    3. '    
' → logprob: -7.2807817459106445
    4. '```' → logprob: -9.155781745910645
    5. ' if' → logprob: -9.405781745910645
    6. ' 
' → logprob: -10.530781745910645
    7. 'vertical' → logprob: -11.155781745910645
    8. ')' → logprob: -11.155781745910645
    9. '\n' → logprob: -11.405781745910645
    10. '\' → logprob: -11.655781745910645

Token 1384: ' Because' (ID: 13602)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21858073770999908
    2. 'if' → logprob: -2.343580722808838
    3. ' if' → logprob: -2.593580722808838
    4. 'r' → logprob: -4.968580722808838
    5. 'return' → logprob: -5.093580722808838
    6. '
' → logprob: -5.593580722808838
    7. 'vertical' → logprob: -6.468580722808838
    8. '```' → logprob: -6.468580722808838
    9. 'import' → logprob: -6.718580722808838
    10. ' r' → logprob: -6.843580722808838

Token 1385: ' ball' (ID: 7880)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.49564075469970703
    2. ' horizontal' → logprob: -0.995640754699707
    3. 'vertical' → logprob: -4.870640754699707
    4. 'the' → logprob: -5.870640754699707
    5. 'if' → logprob: -6.120640754699707
    6. '   ' → logprob: -6.245640754699707
    7. 'r' → logprob: -6.245640754699707
    8. '(horizontal' → logprob: -6.995640754699707
    9. ' r' → logprob: -7.120640754699707
    10. ' the' → logprob: -7.120640754699707

Token 1386: ' center' (ID: 6170)
  Prédit: '_center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_center' → logprob: -0.6973690390586853
    2. 'center' → logprob: -0.8223690390586853
    3. ' center' → logprob: -4.07236909866333
    4. '_x' → logprob: -4.82236909866333
    5. '   ' → logprob: -5.32236909866333
    6. '_radius' → logprob: -5.44736909866333
    7. '_vertical' → logprob: -5.82236909866333
    8. 'radius' → logprob: -6.07236909866333
    9. 'vertical' → logprob: -6.19736909866333
    10. 'surface' → logprob: -6.44736909866333

Token 1387: ' at' (ID: 540)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.6666312217712402
    2. '_z' → logprob: -0.9166312217712402
    3. ' is' → logprob: -3.0416312217712402
    4. ' z' → logprob: -4.54163122177124
    5. 'is' → logprob: -4.66663122177124
    6. ' at' → logprob: -5.41663122177124
    7. 'at' → logprob: -6.16663122177124
    8. ' has' → logprob: -6.41663122177124
    9. '_x' → logprob: -6.66663122177124
    10. 'r' → logprob: -6.79163122177124

Token 1388: ' height' (ID: 4679)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00033117449493147433
    2. 'z' → logprob: -8.500330924987793
    3. '(r' → logprob: -10.375330924987793
    4. ' r' → logprob: -10.500330924987793
    5. 'ball' → logprob: -10.500330924987793
    6. '(' → logprob: -11.250330924987793
    7. '```' → logprob: -11.625330924987793
    8. '(ball' → logprob: -12.125330924987793
    9. '0' → logprob: -12.500330924987793
    10. '2' → logprob: -12.625330924987793

Token 1389: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.031434234231710434
    2. ' r' → logprob: -4.031434059143066
    3. '=' → logprob: -4.781434059143066
    4. ' =' → logprob: -6.406434059143066
    5. '0' → logprob: -6.531434059143066
    6. '   ' → logprob: -7.906434059143066
    7. 'ball' → logprob: -8.156434059143066
    8. '2' → logprob: -8.281434059143066
    9. '=r' → logprob: -9.031434059143066
    10. ' ball' → logprob: -9.281434059143066

Token 1390: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01839902438223362
    2. '
' → logprob: -4.393399238586426
    3. ' if' → logprob: -6.393399238586426
    4. 'def' → logprob: -6.518399238586426
    5. '```' → logprob: -6.893399238586426
    6. 'if' → logprob: -7.768399238586426
    7. 'r' → logprob: -8.018399238586426
    8. '    
' → logprob: -8.018399238586426
    9. 'import' → logprob: -8.893399238586426
    10. ')' → logprob: -9.518399238586426

Token 1391: ' block' (ID: 4355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9336417317390442
    2. ' vertical' → logprob: -1.1836416721343994
    3. 'vertical' → logprob: -2.0586416721343994
    4. ' r' → logprob: -2.4336416721343994
    5. ' if' → logprob: -2.9336416721343994
    6. 'r' → logprob: -4.3086419105529785
    7. '```' → logprob: -5.4336419105529785
    8. ')' → logprob: -5.5586419105529785
    9. ' return' → logprob: -5.5586419105529785
    10. ' ' → logprob: -7.0586419105529785

Token 1392: ' height' (ID: 4679)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.5846560001373291
    2. ' top' → logprob: -1.209656000137329
    3. 'bottom' → logprob: -2.834656000137329
    4. 'height' → logprob: -3.459656000137329
    5. ' bottom' → logprob: -3.834656000137329
    6. 'z' → logprob: -5.08465576171875
    7. '_top' → logprob: -5.08465576171875
    8. 'base' → logprob: -5.45965576171875
    9. ' extends' → logprob: -6.08465576171875
    10. '#' → logprob: -6.20965576171875

Token 1393: ' h' (ID: 312)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1739635169506073
    2. '-' → logprob: -2.0489635467529297
    3. '=' → logprob: -4.29896354675293
    4. ' =' → logprob: -5.17396354675293
    5. '   ' → logprob: -5.29896354675293
    6. 'def' → logprob: -6.04896354675293
    7. ')' → logprob: -6.04896354675293
    8. '#' → logprob: -7.79896354675293
    9. '```' → logprob: -8.29896354675293
    10. ' ' → logprob: -8.42396354675293

Token 1394: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015560091473162174
    2. '
' → logprob: -4.390560150146484
    3. '    
' → logprob: -6.390560150146484
    4. 'def' → logprob: -6.890560150146484
    5. ' if' → logprob: -9.140560150146484
    6. 'if' → logprob: -9.640560150146484
    7. '```' → logprob: -10.515560150146484
    8. 'r' → logprob: -10.640560150146484
    9. ')' → logprob: -10.890560150146484
    10. ',' → logprob: -10.890560150146484

Token 1395: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013520221691578627
    2. '
' → logprob: -7.001351833343506
    3. '    
' → logprob: -7.751351833343506
    4. '```' → logprob: -13.001352310180664
    5. 'def' → logprob: -13.501352310180664
    6. '    ' → logprob: -13.751352310180664
    7. ' 
' → logprob: -14.001352310180664
    8. '  
' → logprob: -14.501352310180664
    9. '   
' → logprob: -14.751352310180664
    10. '       ' → logprob: -14.876352310180664

Token 1396: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40583041310310364
    2. 'if' → logprob: -1.1558303833007812
    3. 'r' → logprob: -5.030830383300781
    4. ' if' → logprob: -5.530830383300781
    5. '#' (adapté à ' #') → logprob: -6.030830383300781
    6. 'def' → logprob: -6.405830383300781
    7. 'vertical' → logprob: -6.780830383300781
    8. 'import' → logprob: -7.155830383300781
    9. '
' → logprob: -7.155830383300781
    10. '```' → logprob: -7.780830383300781

Token 1397: ' So' (ID: 2632)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5925330519676208
    2. '   ' → logprob: -0.8425330519676208
    3. '#' → logprob: -4.967533111572266
    4. 'vertical' → logprob: -5.842533111572266
    5. 'r' → logprob: -6.092533111572266
    6. 'def' → logprob: -6.342533111572266
    7. 'import' → logprob: -7.592533111572266
    8. ' if' → logprob: -7.717533111572266
    9. '```' → logprob: -7.842533111572266
    10. 'low' → logprob: -8.217533111572266

Token 1398: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8682960271835327
    2. ' if' → logprob: -1.4932960271835327
    3. '   ' → logprob: -1.7432960271835327
    4. 'r' → logprob: -2.4932961463928223
    5. 'def' → logprob: -3.4932961463928223
    6. '#' → logprob: -3.8682961463928223
    7. 'vertical' → logprob: -3.9932961463928223
    8. ' r' → logprob: -4.743296146392822
    9. 'horizontal' → logprob: -5.118296146392822
    10. 'import' → logprob: -5.993296146392822

Token 1399: ' horizontal' (ID: 25511)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.009804847650229931
    2. ' horizontal' → logprob: -4.634804725646973
    3. 'r' → logprob: -10.134804725646973
    4. 'vertical' → logprob: -12.884804725646973
    5. '   ' → logprob: -13.009804725646973
    6. '(horizontal' → logprob: -13.009804725646973
    7. ' r' → logprob: -14.509804725646973
    8. 'radius' → logprob: -15.009804725646973
    9. 'ball' → logprob: -15.384804725646973
    10. 'hor' → logprob: -15.384804725646973

Token 1400: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.03369146212935448
    2. 'dist' → logprob: -3.40869140625
    3. 'distance' → logprob: -10.53369140625
    4. '
' → logprob: -12.40869140625
    5. 'Dist' → logprob: -12.65869140625
    6. '_distance' → logprob: -12.65869140625
    7. '```' → logprob: -12.78369140625
    8. '>=' → logprob: -14.03369140625
    9. '	dist' → logprob: -14.40869140625
    10. '<=' → logprob: -14.78369140625

Token 1401: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.6509059071540833
    2. ' >=' → logprob: -1.2759058475494385
    3. ' <' → logprob: -2.1509058475494385
    4. '<' → logprob: -3.1509058475494385
    5. '>' → logprob: -3.9009058475494385
    6. ' >' → logprob: -4.775906085968018
    7. '<=' → logprob: -5.025906085968018
    8. ' <=' → logprob: -5.775906085968018
    9. '   ' → logprob: -6.650906085968018
    10. '```' → logprob: -9.77590560913086

Token 1402: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0015031944494694471
    2. ' r' → logprob: -6.501502990722656
    3. '   ' → logprob: -14.251502990722656
    4. '
' → logprob: -16.626502990722656
    5. ' ' → logprob: -17.001502990722656
    6. '	r' → logprob: -17.501502990722656
    7. '```' → logprob: -18.001502990722656
    8. '0' → logprob: -18.376502990722656
    9. 'radius' → logprob: -18.501502990722656
    10. '    ' → logprob: -19.626502990722656

Token 1403: ':' (ID: 25)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8898314237594604
    2. '   ' → logprob: -1.1398314237594604
    3. ':' → logprob: -1.3898314237594604
    4. '       ' → logprob: -4.51483154296875
    5. ':return' → logprob: -5.38983154296875
    6. 'and' → logprob: -6.26483154296875
    7. ' and' → logprob: -6.38983154296875
    8. ' or' → logprob: -7.88983154296875
    9. 'return' → logprob: -8.51483154296875
    10. ',' → logprob: -8.63983154296875

Token 1404: ' no' (ID: 860)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04880015552043915
    2. ' return' → logprob: -3.173800230026245
    3. 'return' → logprob: -5.423799991607666
    4. '       ' → logprob: -6.673799991607666
    5. '    ' → logprob: -9.298800468444824
    6. '
' → logprob: -11.923800468444824
    7. '```' → logprob: -12.798800468444824
    8. ' ' → logprob: -13.048800468444824
    9. '	return' → logprob: -13.298800468444824
    10. '     ' → logprob: -13.673800468444824

Token 1405: ' horizontal' (ID: 25511)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.6961749196052551
    2. 'collision' → logprob: -0.8211749196052551
    3. ' vertical' → logprob: -3.9461748600006104
    4. 'problem' → logprob: -4.5711750984191895
    5. ' collision' → logprob: -4.8211750984191895
    6. 'return' → logprob: -4.9461750984191895
    7. 'block' → logprob: -5.8211750984191895
    8. '#' → logprob: -5.8211750984191895
    9. 'distance' → logprob: -6.3211750984191895
    10. 'additional' → logprob: -6.6961750984191895

Token 1406: ' overlap' (ID: 56631)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.05613744258880615
    2. '_overlap' → logprob: -3.0561375617980957
    3. ' overlap' → logprob: -5.181137561798096
    4. 'distance' → logprob: -7.306137561798096
    5. 'collision' → logprob: -8.306137084960938
    6. 'clear' → logprob: -8.431137084960938
    7. '_over' → logprob: -8.806137084960938
    8. 'intersection' → logprob: -8.931137084960938
    9. 'dist' → logprob: -9.181137084960938
    10. ' over' → logprob: -9.931137084960938

Token 1407: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024961046874523163
    2. ':' → logprob: -4.274960994720459
    3. '    
' → logprob: -5.399960994720459
    4. ',' → logprob: -5.774960994720459
    5. '       ' → logprob: -6.774960994720459
    6. ':
' → logprob: -7.399960994720459
    7. '
' → logprob: -7.899960994720459
    8. ' and' → logprob: -8.274961471557617
    9. '.' → logprob: -8.899961471557617
    10. '\n' → logprob: -9.399961471557617

Token 1408: ' vertical' (ID: 17679)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.05245544761419296
    2. '   ' → logprob: -3.552455425262451
    3. 'return' → logprob: -3.802455425262451
    4. ' vertical' → logprob: -9.67745590209961
    5. '
' → logprob: -10.92745590209961
    6. 'vertical' → logprob: -11.05245590209961
    7. '       ' → logprob: -11.30245590209961
    8. '    ' → logprob: -11.42745590209961
    9. '```' → logprob: -11.92745590209961
    10. ' if' → logprob: -12.55245590209961

Token 1409: ' safe' (ID: 7703)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.08426293730735779
    2. 'dist' → logprob: -2.8342628479003906
    3. 'distance' → logprob: -4.459262847900391
    4. '_distance' → logprob: -5.459262847900391
    5. 'clear' → logprob: -5.834262847900391
    6. '_clear' → logprob: -5.959262847900391
    7. '_' → logprob: -8.70926284790039
    8. '_overlap' → logprob: -9.08426284790039
    9. ' clearance' → logprob: -9.45926284790039
    10. ' distance' → logprob: -9.58426284790039

Token 1410: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12958021461963654
    2. 'return' → logprob: -2.75458025932312
    3. ' return' → logprob: -3.50458025932312
    4. '
' → logprob: -4.504580020904541
    5. ' if' → logprob: -5.004580020904541
    6. 'if' → logprob: -5.754580020904541
    7. '    
' → logprob: -6.129580020904541
    8. ':' → logprob: -7.129580020904541
    9. '       ' → logprob: -7.129580020904541
    10. '    ' → logprob: -7.629580020904541

Token 1411: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003675133048091084
    2. ' if' → logprob: -8.750367164611816
    3. 'if' → logprob: -9.000367164611816
    4. 'return' → logprob: -10.500367164611816
    5. '       ' → logprob: -10.750367164611816
    6. '
' → logprob: -11.625367164611816
    7. '    
' → logprob: -11.875367164611816
    8. ' return' → logprob: -12.000367164611816
    9. 'elif' → logprob: -12.125367164611816
    10. 'else' → logprob: -12.250367164611816

Token 1412: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015898631885647774
    2. 'if' → logprob: -4.640898704528809
    3. ' if' → logprob: -5.265898704528809
    4. '
' → logprob: -7.265898704528809
    5. '```' → logprob: -9.390898704528809
    6. 'else' → logprob: -9.640898704528809
    7. 'elif' → logprob: -9.890898704528809
    8. '    
' → logprob: -10.515898704528809
    9. 'return' → logprob: -11.515898704528809
    10. '       ' → logprob: -12.015898704528809

Token 1413: ' If' (ID: 1843)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23731772601604462
    2. ' if' → logprob: -1.987317681312561
    3. 'if' → logprob: -2.6123178005218506
    4. 'return' → logprob: -7.9873175621032715
    5. ' return' → logprob: -8.61231803894043
    6. '
' → logprob: -8.73731803894043
    7. 'vertical' → logprob: -9.61231803894043
    8. ' vertical' → logprob: -10.98731803894043
    9. 'elif' → logprob: -11.36231803894043
    10. '```' → logprob: -11.61231803894043

Token 1414: ' horizontal' (ID: 25511)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.005939936731010675
    2. ' horizontal' → logprob: -5.130939960479736
    3. 'vertical' → logprob: -11.630939483642578
    4. '(horizontal' → logprob: -14.130939483642578
    5. 'r' → logprob: -14.630939483642578
    6. '   ' → logprob: -15.505939483642578
    7. 'ball' → logprob: -15.880939483642578
    8. '0' → logprob: -15.880939483642578
    9. 'not' → logprob: -16.255939483642578
    10. 'cx' → logprob: -16.255939483642578

Token 1415: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.00672922981902957
    2. 'dist' → logprob: -5.0067291259765625
    3. '
' → logprob: -12.006729125976562
    4. '```' → logprob: -12.756729125976562
    5. 'Dist' → logprob: -13.006729125976562
    6. '_distance' → logprob: -15.006729125976562
    7. '	dist' → logprob: -15.131729125976562
    8. '   ' → logprob: -15.131729125976562
    9. 'distance' → logprob: -15.506729125976562
    10. '\' → logprob: -15.756729125976562

Token 1416: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2947083115577698
    2. '<' → logprob: -1.419708251953125
    3. '>' → logprob: -5.169708251953125
    4. ' >' → logprob: -5.419708251953125
    5. ' <=' → logprob: -6.919708251953125
    6. '<=' → logprob: -7.169708251953125
    7. ' >=' → logprob: -7.419708251953125
    8. '>=' → logprob: -7.419708251953125
    9. '   ' → logprob: -8.294708251953125
    10. ' <
' → logprob: -10.544708251953125

Token 1417: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6931605935096741
    2. ' r' → logprob: -0.6931605935096741
    3. '=' → logprob: -11.693161010742188
    4. '
' → logprob: -13.318161010742188
    5. '   ' → logprob: -13.818161010742188
    6. '=r' → logprob: -13.818161010742188
    7. ' =' → logprob: -15.568161010742188
    8. ' ' → logprob: -15.943161010742188
    9. ' ' → logprob: -15.943161010742188
    10. '```' → logprob: -16.068161010742188

Token 1418: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42633679509162903
    2. ':
' → logprob: -1.3013367652893066
    3. '   ' → logprob: -2.6763367652893066
    4. ',' → logprob: -5.301336765289307
    5. ' and' → logprob: -7.176336765289307
    6. 'and' → logprob: -8.926337242126465
    7. ':

' → logprob: -9.926337242126465
    8. '):
' → logprob: -9.926337242126465
    9. '       ' → logprob: -10.051337242126465
    10. ',
' → logprob: -10.676337242126465

Token 1419: ' vertical' (ID: 17679)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6907665133476257
    2. ' vertical' → logprob: -0.9407665133476257
    3. '   ' → logprob: -2.9407665729522705
    4. 'return' → logprob: -3.9407665729522705
    5. 'vertical' → logprob: -4.065766334533691
    6. ' r' → logprob: -4.815766334533691
    7. ' if' → logprob: -5.065766334533691
    8. ' vert' → logprob: -7.065766334533691
    9. ' needed' → logprob: -7.315766334533691
    10. '    ' → logprob: -7.565766334533691

Token 1420: ' space' (ID: 4918)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.09589444845914841
    2. 'dist' → logprob: -2.8458943367004395
    3. '_clear' → logprob: -4.3458943367004395
    4. '_overlap' → logprob: -4.5958943367004395
    5. 'clear' → logprob: -5.5958943367004395
    6. 'safe' → logprob: -5.8458943367004395
    7. '_distance' → logprob: -6.4708943367004395
    8. '_safe' → logprob: -7.0958943367004395
    9. 'over' → logprob: -7.9708943367004395
    10. 'distance' → logprob: -8.220894813537598

Token 1421: ' must' (ID: 2804)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09010811895132065
    2. 'needed' → logprob: -3.2151081562042236
    3. ' =' → logprob: -3.9651081562042236
    4. '_needed' → logprob: -4.5901079177856445
    5. '   ' → logprob: -5.2151079177856445
    6. '
' → logprob: -5.5901079177856445
    7. 'required' → logprob: -6.0901079177856445
    8. '_required' → logprob: -6.4651079177856445
    9. ' needed' → logprob: -6.8401079177856445
    10. '>' → logprob: -7.0901079177856445

Token 1422: ' satisfy' (ID: 35441)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.9487374424934387
    2. ' be' → logprob: -1.198737382888794
    3. '>' → logprob: -1.448737382888794
    4. 'be' → logprob: -2.698737382888794
    5. '=' → logprob: -5.073737621307373
    6. ' >=' → logprob: -6.448737621307373
    7. ' >' → logprob: -7.448737621307373
    8. '≥' → logprob: -8.073737144470215
    9. '   ' → logprob: -8.573737144470215
    10. '<=' → logprob: -10.698737144470215

Token 1423: ' (' (ID: 350)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.8316906094551086
    2. ' h' → logprob: -1.8316905498504639
    3. '   ' → logprob: -2.081690549850464
    4. 'r' → logprob: -2.331690549850464
    5. 'max' → logprob: -3.081690549850464
    6. ' r' → logprob: -3.206690549850464
    7. ' max' → logprob: -3.331690549850464
    8. 'vertical' → logprob: -3.456690549850464
    9. ' vertical' → logprob: -4.081690788269043
    10. '```' → logprob: -5.831690788269043

Token 1424: 'r' (ID: 81)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.18433777987957
    2. 'r' → logprob: -1.8093377351760864
    3. '(h' → logprob: -6.434337615966797
    4. 'max' → logprob: -7.184337615966797
    5. '(r' → logprob: -7.309337615966797
    6. '   ' → logprob: -7.684337615966797
    7. ')' → logprob: -8.059337615966797
    8. ' h' → logprob: -8.184337615966797
    9. 'vertical' → logprob: -8.684337615966797
    10. ' r' → logprob: -9.934337615966797

Token 1425: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06402910500764847
    2. '-' → logprob: -2.8140292167663574
    3. ' >' → logprob: -6.689029216766357
    4. '>' → logprob: -7.439029216766357
    5. ')' → logprob: -8.8140287399292
    6. '-r' → logprob: -11.0640287399292
    7. '   ' → logprob: -11.4390287399292
    8. '-)' → logprob: -11.6890287399292
    9. ' ' → logprob: -11.9390287399292
    10. '
' → logprob: -11.9390287399292

Token 1426: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.002400624332949519
    2. 'horizontal' → logprob: -6.6274003982543945
    3. ' h' → logprob: -7.3774003982543945
    4. 'max' → logprob: -9.002400398254395
    5. '(h' → logprob: -9.002400398254395
    6. 'vertical' → logprob: -9.127400398254395
    7. ' (' → logprob: -10.252400398254395
    8. '(' → logprob: -10.752400398254395
    9. ' horizontal' → logprob: -11.752400398254395
    10. '(horizontal' → logprob: -11.877400398254395

Token 1427: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009477839921601117
    2. ')>' → logprob: -8.000947952270508
    3. ' )' → logprob: -8.375947952270508
    4. '>' → logprob: -9.500947952270508
    5. ')<' → logprob: -9.625947952270508
    6. ' >' → logprob: -9.625947952270508
    7. ' <' → logprob: -10.250947952270508
    8. ' <=' → logprob: -10.250947952270508
    9. ')<=' → logprob: -10.500947952270508
    10. ')**' → logprob: -10.875947952270508

Token 1428: ' <=' (ID: 5017)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6681758165359497
    2. '>' → logprob: -2.16817569732666
    3. '   ' → logprob: -2.16817569732666
    4. ' >=' → logprob: -2.54317569732666
    5. ' if' → logprob: -2.66817569732666
    6. 'if' → logprob: -3.04317569732666
    7. ' <=' → logprob: -3.41817569732666
    8. ':' → logprob: -4.41817569732666
    9. '>=' → logprob: -5.04317569732666
    10. '
' → logprob: -6.04317569732666

Token 1429: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5681372284889221
    2. 'horizontal' → logprob: -1.1931371688842773
    3. 'vertical' → logprob: -2.5681371688842773
    4. ' horizontal' → logprob: -3.4431371688842773
    5. ' ' → logprob: -4.943137168884277
    6. ' vertical' → logprob: -5.068137168884277
    7. 'math' → logprob: -5.318137168884277
    8. ' math' → logprob: -6.943137168884277
    9. ' -' → logprob: -7.693137168884277
    10. '-' → logprob: -7.943137168884277

Token 1430: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11282335966825485
    2. 'horizontal' → logprob: -2.987823247909546
    3. 'vertical' → logprob: -3.737823247909546
    4. 'r' → logprob: -4.362823486328125
    5. 'math' → logprob: -4.612823486328125
    6. '-r' → logprob: -5.237823486328125
    7. '-' → logprob: -6.362823486328125
    8. '-horizontal' → logprob: -7.487823486328125
    9. '-m' → logprob: -7.737823486328125
    10. '-h' → logprob: -8.362823486328125

Token 1431: ' ->' (ID: 2747)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07202477008104324
    2. '
' → logprob: -2.8220248222351074
    3. '    
' → logprob: -4.697024822235107
    4. 'def' → logprob: -8.69702434539795
    5. ' if' → logprob: -8.94702434539795
    6. '   
' → logprob: -9.07202434539795
    7. '  
' → logprob: -9.57202434539795
    8. ' 
' → logprob: -9.57202434539795
    9. '
' → logprob: -9.94702434539795
    10. '

' → logprob: -10.19702434539795

Token 1432: ' r' (ID: 428)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3192620277404785
    2. ' ' → logprob: -1.4442620277404785
    3. ' h' → logprob: -4.4442620277404785
    4. ' r' → logprob: -4.5692620277404785
    5. ' max' → logprob: -5.3192620277404785
    6. 'h' → logprob: -5.6942620277404785
    7. ' True' → logprob: -6.0692620277404785
    8. 'r' → logprob: -6.3192620277404785
    9. 'True' → logprob: -6.9442620277404785
    10. ' return' → logprob: -7.3192620277404785

Token 1433: ' <=' (ID: 5017)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.40830424427986145
    2. ' <=' → logprob: -1.658304214477539
    3. ' =' → logprob: -2.783304214477539
    4. '>=' → logprob: -3.283304214477539
    5. '=' → logprob: -3.533304214477539
    6. '<=' → logprob: -5.283304214477539
    7. ' >' → logprob: -5.408304214477539
    8. '<|end|>' → logprob: -6.283304214477539
    9. ')' → logprob: -6.783304214477539
    10. ' ' → logprob: -7.283304214477539

Token 1434: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -3.547789674485102e-05
    2. ' h' → logprob: -10.250035285949707
    3. '	h' → logprob: -18.625036239624023
    4. '
' → logprob: -19.000036239624023
    5. '=h' → logprob: -21.750036239624023
    6. 'block' → logprob: -21.875036239624023
    7. 'height' → logprob: -22.125036239624023
    8. '(h' → logprob: -22.375036239624023
    9. '   ' → logprob: -22.500036239624023
    10. 'min' → logprob: -22.750036239624023

Token 1435: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024538997560739517
    2. '
' → logprob: -3.899538993835449
    3. ' if' → logprob: -6.524538993835449
    4. 'if' → logprob: -6.774538993835449
    5. '    
' → logprob: -6.774538993835449
    6. 'def' → logprob: -9.27453899383545
    7. '```' → logprob: -9.52453899383545
    8. '
' → logprob: -11.27453899383545
    9. 'return' → logprob: -11.89953899383545
    10. ')' → logprob: -11.89953899383545

Token 1436: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002432620618492365
    2. 'if' → logprob: -6.877432823181152
    3. ' if' → logprob: -7.502432823181152
    4. '
' → logprob: -7.752432823181152
    5. 'return' → logprob: -8.377432823181152
    6. '    
' → logprob: -9.252432823181152
    7. 'def' → logprob: -9.627432823181152
    8. ' return' → logprob: -11.627432823181152
    9. '    ' → logprob: -13.127432823181152
    10. '       ' → logprob: -13.377432823181152

Token 1437: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2029009908437729
    2. 'if' → logprob: -1.702901005744934
    3. '
' → logprob: -6.9529008865356445
    4. ' if' → logprob: -7.7029008865356445
    5. '```' → logprob: -10.327900886535645
    6. 'return' → logprob: -10.702900886535645
    7. 'vertical' → logprob: -12.077900886535645
    8. '    
' → logprob: -12.327900886535645
    9. 'r' → logprob: -12.577900886535645
    10. '#' (adapté à ' #') → logprob: -12.702900886535645

Token 1438: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2935921549797058
    2. 'if' → logprob: -1.4185922145843506
    3. ' if' → logprob: -5.0435919761657715
    4. 'r' → logprob: -6.5435919761657715
    5. '
' → logprob: -6.5435919761657715
    6. 'return' → logprob: -7.0435919761657715
    7. '```' → logprob: -7.1685919761657715
    8. '#' → logprob: -7.5435919761657715
    9. 'vertical' → logprob: -8.04359245300293
    10. 'def' → logprob: -9.29359245300293

Token 1439: ' the' (ID: 290)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02722959965467453
    2. 'return' → logprob: -4.4022297859191895
    3. '   ' → logprob: -4.7772297859191895
    4. ' if' → logprob: -5.1522297859191895
    5. '#' → logprob: -8.652229309082031
    6. 'horizontal' → logprob: -9.902229309082031
    7. 'vertical' → logprob: -10.027229309082031
    8. ' return' → logprob: -10.152229309082031
    9. '```' → logprob: -10.402229309082031
    10. 'r' → logprob: -10.777229309082031

Token 1440: ' minimal' (ID: 19957)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.016535507515072823
    2. 'def' → logprob: -4.51653528213501
    3. 'return' → logprob: -5.64153528213501
    4. '   ' → logprob: -7.51653528213501
    5. ' if' → logprob: -7.51653528213501
    6. '#' → logprob: -7.76653528213501
    7. 'import' → logprob: -8.891535758972168
    8. 'res' → logprob: -9.641535758972168
    9. '```' → logprob: -10.016535758972168
    10. 'vertical' → logprob: -10.141535758972168

Token 1441: ' radius' (ID: 21090)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3605344891548157
    2. 'radius' → logprob: -1.610534429550171
    3. 'required' → logprob: -2.610534429550171
    4. 'vertical' → logprob: -4.98553466796875
    5. 'needed' → logprob: -5.11053466796875
    6. ' radius' → logprob: -5.61053466796875
    7. ' required' → logprob: -5.86053466796875
    8. 'distance' → logprob: -6.61053466796875
    9. 'return' → logprob: -6.61053466796875
    10. ' r' → logprob: -6.86053466796875

Token 1442: ' r' (ID: 428)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6816064715385437
    2. ' =' → logprob: -1.0566065311431885
    3. 'def' → logprob: -2.3066065311431885
    4. 'needed' → logprob: -4.431606292724609
    5. 'return' → logprob: -4.681606292724609
    6. ' needed' → logprob: -5.306606292724609
    7. '_needed' → logprob: -5.556606292724609
    8. '   ' → logprob: -5.556606292724609
    9. ' is' → logprob: -5.681606292724609
    10. ' to' → logprob: -6.306606292724609

Token 1443: ' must' (ID: 2804)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3928992450237274
    2. '=' → logprob: -1.1428992748260498
    3. 'def' → logprob: -6.517899036407471
    4. ':' → logprob: -6.767899036407471
    5. '   ' → logprob: -6.767899036407471
    6. 'import' → logprob: -6.767899036407471
    7. ' ' → logprob: -8.017899513244629
    8. '
' → logprob: -8.142899513244629
    9. ' is' → logprob: -9.017899513244629
    10. '=
' → logprob: -9.267899513244629

Token 1444: ' satisfy' (ID: 35441)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.6063377261161804
    2. 'max' → logprob: -1.1063377857208252
    3. ' be' → logprob: -2.606337785720825
    4. '=max' → logprob: -3.856337785720825
    5. 'return' → logprob: -4.606337547302246
    6. '>=' → logprob: -4.856337547302246
    7. '=' → logprob: -5.481337547302246
    8. 'maximize' → logprob: -5.731337547302246
    9. 'at' → logprob: -6.231337547302246
    10. ' at' → logprob: -7.856337547302246

Token 1445: ':
' (ID: 734)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2035767287015915
    2. ' max' → logprob: -2.7035768032073975
    3. 'r' → logprob: -3.0785768032073975
    4. '   ' → logprob: -3.0785768032073975
    5. '
' → logprob: -4.953576564788818
    6. '```' → logprob: -5.203576564788818
    7. ' r' → logprob: -5.453576564788818
    8. 'if' → logprob: -6.078576564788818
    9. 'horizontal' → logprob: -6.078576564788818
    10. 'min' → logprob: -7.578576564788818

Token 1446: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003539962926879525
    2. ' return' → logprob: -6.6285400390625
    3. ' if' → logprob: -7.1285400390625
    4. '    ' → logprob: -7.8785400390625
    5. 'return' → logprob: -7.8785400390625
    6. ' r' → logprob: -8.3785400390625
    7. '
' → logprob: -9.0035400390625
    8. '```' → logprob: -9.3785400390625
    9. 'if' → logprob: -9.7535400390625
    10. 'r' → logprob: -10.1285400390625

Token 1447: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0028984546661377
    2. '#' (adapté à ' #') → logprob: -1.5028984546661377
    3. 'r' → logprob: -1.5028984546661377
    4. 'if' → logprob: -2.6278984546661377
    5. ' r' → logprob: -3.2528984546661377
    6. 'return' → logprob: -3.5028984546661377
    7. ' if' → logprob: -4.252898216247559
    8. '```' → logprob: -4.377898216247559
    9. 'from' → logprob: -5.377898216247559
    10. ' return' → logprob: -5.377898216247559

Token 1448: ' horizontal' (ID: 25511)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16889438033103943
    2. 'r' → logprob: -2.4188942909240723
    3. '#' → logprob: -3.2938942909240723
    4. 'from' → logprob: -4.918894290924072
    5. 'return' → logprob: -5.168894290924072
    6. '```' → logprob: -5.168894290924072
    7. '   ' → logprob: -5.293894290924072
    8. 'import' → logprob: -5.918894290924072
    9. 'low' → logprob: -6.793894290924072
    10. 'def' → logprob: -7.543894290924072

Token 1449: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.011154991574585438
    2. 'dist' → logprob: -4.511155128479004
    3. '_distance' → logprob: -9.886155128479004
    4. 'distance' → logprob: -10.386155128479004
    5. 'Dist' → logprob: -11.386155128479004
    6. '```' → logprob: -12.636155128479004
    7. '
' → logprob: -12.886155128479004
    8. '_d' → logprob: -13.886155128479004
    9. '	dist' → logprob: -13.886155128479004
    10. ')' → logprob: -14.511155128479004

Token 1450: '^' (ID: 61)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.53536057472229
    2. ' <=' → logprob: -1.53536057472229
    3. '=' → logprob: -2.53536057472229
    4. '>=' → logprob: -2.78536057472229
    5. ' >=' → logprob: -4.035360336303711
    6. '>' → logprob: -4.285360336303711
    7. ' =' → logprob: -5.035360336303711
    8. ' <' → logprob: -5.535360336303711
    9. '**' → logprob: -5.660360336303711
    10. '   ' → logprob: -5.785360336303711

Token 1451: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008138987235724926
    2. '=' → logprob: -5.383139133453369
    3. '<=' → logprob: -5.758139133453369
    4. '**' → logprob: -9.133138656616211
    5. '>=' → logprob: -9.133138656616211
    6. '==' → logprob: -9.383138656616211
    7. ' ' → logprob: -10.633138656616211
    8. '```' → logprob: -11.883138656616211
    9. '-' → logprob: -12.883138656616211
    10. '<' → logprob: -13.133138656616211

Token 1452: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.463155746459961
    2. ' >=' → logprob: -1.463155746459961
    3. ' <=' → logprob: -1.463155746459961
    4. '>=' → logprob: -1.838155746459961
    5. '<=' → logprob: -2.838155746459961
    6. '+' → logprob: -3.213155746459961
    7. '=' → logprob: -4.213155746459961
    8. '>' → logprob: -4.463155746459961
    9. ' >' → logprob: -4.588155746459961
    10. '   ' → logprob: -5.338155746459961

Token 1453: ' max' (ID: 2999)
  Prédit: '(vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(vertical' → logprob: -0.5258732438087463
    2. '(h' → logprob: -2.0258731842041016
    3. '(' → logprob: -2.2758731842041016
    4. '(max' → logprob: -2.5258731842041016
    5. 'vertical' → logprob: -3.0258731842041016
    6. '(r' → logprob: -3.4008731842041016
    7. ' (' → logprob: -5.275873184204102
    8. 'max' → logprob: -5.900873184204102
    9. '(horizontal' → logprob: -5.900873184204102
    10. '(min' → logprob: -7.025873184204102

Token 1454: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.1008713702030946e-06
    2. '0' → logprob: -13.500001907348633
    3. ' (' → logprob: -14.875001907348633
    4. '((' → logprob: -16.000001907348633
    5. '```' → logprob: -16.250001907348633
    6. '(
' → logprob: -17.625001907348633
    7. 'def' → logprob: -19.000001907348633
    8. '\(' → logprob: -19.125001907348633
    9. '(-' → logprob: -20.750001907348633
    10. '\' → logprob: -20.875001907348633

Token 1455: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06197552755475044
    2. '(' → logprob: -2.8119754791259766
    3. '(r' → logprob: -12.436975479125977
    4. 'r' → logprob: -13.311975479125977
    5. '(h' → logprob: -14.561975479125977
    6. 'h' → logprob: -14.561975479125977
    7. ' (' → logprob: -14.686975479125977
    8. '(
' → logprob: -15.186975479125977
    9. '((' → logprob: -15.436975479125977
    10. '```' → logprob: -15.561975479125977

Token 1456: ',h' (ID: 42751)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006124671082943678
    2. ',(' → logprob: -5.506124496459961
    3. '(r' → logprob: -6.756124496459961
    4. ',r' → logprob: -7.381124496459961
    5. '(' → logprob: -8.881124496459961
    6. '(h' → logprob: -9.631124496459961
    7. ',h' → logprob: -10.506124496459961
    8. ' ,' → logprob: -11.506124496459961
    9. ',
' → logprob: -12.506124496459961
    10. '   ' → logprob: -12.881124496459961

Token 1457: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.002966291969642043
    2. '-' → logprob: -6.252966403961182
    3. '-r' → logprob: -6.877966403961182
    4. ')' → logprob: -13.252965927124023
    5. ' r' → logprob: -13.377965927124023
    6. ' ' → logprob: -13.627965927124023
    7. '   ' → logprob: -15.002965927124023
    8. ',' → logprob: -15.002965927124023
    9. '```' → logprob: -15.127965927124023
    10. ' -
' → logprob: -15.252965927124023

Token 1458: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0006267757853493094
    2. ' r' → logprob: -7.375626564025879
    3. ')' → logprob: -15.875626564025879
    4. '   ' → logprob: -16.250627517700195
    5. ' ' → logprob: -18.000627517700195
    6. '```' → logprob: -18.000627517700195
    7. '
' → logprob: -18.625627517700195
    8. '_r' → logprob: -18.750627517700195
    9. '	r' → logprob: -19.250627517700195
    10. 'ball' → logprob: -19.375627517700195

Token 1459: ')^' (ID: 73602)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.030600499361753464
    2. ')' → logprob: -3.5306005477905273
    3. '**' → logprob: -7.155600547790527
    4. '   ' → logprob: -10.530600547790527
    5. '```' → logprob: -11.155600547790527
    6. '2' → logprob: -11.655600547790527
    7. ')^' → logprob: -11.905600547790527
    8. ' )' → logprob: -12.530600547790527
    9. '*' → logprob: -12.905600547790527
    10. '**)' → logprob: -13.780600547790527

Token 1460: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00013488641707226634
    2. '**' → logprob: -9.500134468078613
    3. ' ' → logprob: -10.000134468078613
    4. '
' → logprob: -11.875134468078613
    5. '```' → logprob: -12.375134468078613
    6. '   ' → logprob: -13.500134468078613
    7. '=' → logprob: -14.750134468078613
    8. '²' → logprob: -15.250134468078613
    9. '``' → logprob: -15.375134468078613
    10. '*' → logprob: -15.500134468078613

Token 1461: ' >=' (ID: 5064)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24500323832035065
    2. ')' → logprob: -2.6200032234191895
    3. '
' → logprob: -2.9950032234191895
    4. '**' → logprob: -3.2450032234191895
    5. 'def' → logprob: -3.4950032234191895
    6. ' =' → logprob: -5.4950032234191895
    7. 'return' → logprob: -5.8700032234191895
    8. ')
' → logprob: -6.1200032234191895
    9. '=' → logprob: -6.2450032234191895
    10. ' ' → logprob: -6.4950032234191895

Token 1462: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.8624639324116288e-06
    2. ' r' → logprob: -13.750001907348633
    3. '(r' → logprob: -14.500001907348633
    4. '
' → logprob: -15.500001907348633
    5. '(' → logprob: -16.375001907348633
    6. '   ' → logprob: -17.750001907348633
    7. '```' → logprob: -18.125001907348633
    8. '_r' → logprob: -20.000001907348633
    9. 'math' → logprob: -20.375001907348633
    10. '	r' → logprob: -20.625001907348633

Token 1463: '^' (ID: 61)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0424885749816895
    2. ')' → logprob: -1.2924885749816895
    3. '   ' → logprob: -1.4174885749816895
    4. '**' → logprob: -3.2924885749816895
    5. 'def' → logprob: -3.6674885749816895
    6. ':' → logprob: -3.9174885749816895
    7. ' ' → logprob: -4.2924885749816895
    8. '):' → logprob: -5.2924885749816895
    9. ' +' → logprob: -5.6674885749816895
    10. '  ' → logprob: -6.0424885749816895

Token 1464: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001589250285178423
    2. ' ' → logprob: -6.501589298248291
    3. '1' → logprob: -10.126588821411133
    4. '²' → logprob: -11.376588821411133
    5. ''' → logprob: -11.626588821411133
    6. '"' → logprob: -11.751588821411133
    7. '**' → logprob: -12.126588821411133
    8. '0' → logprob: -12.126588821411133
    9. ')' → logprob: -13.251588821411133
    10. '`' → logprob: -13.376588821411133

Token 1465: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16270600259304047
    2. '
' → logprob: -2.287705898284912
    3. 'def' → logprob: -3.412705898284912
    4. 'import' → logprob: -4.787705898284912
    5. 'if' → logprob: -6.412705898284912
    6. '    
' → logprob: -6.412705898284912
    7. '```' → logprob: -6.537705898284912
    8. 'r' → logprob: -6.662705898284912
    9. 'from' → logprob: -7.662705898284912
    10. '#' → logprob: -8.91270637512207

Token 1466: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00831384863704443
    2. '
' → logprob: -5.3833136558532715
    3. 'def' → logprob: -5.7583136558532715
    4. '    
' → logprob: -8.25831413269043
    5. '```' → logprob: -9.38331413269043
    6. 'import' → logprob: -9.75831413269043
    7. 'r' → logprob: -10.50831413269043
    8. 'from' → logprob: -10.63331413269043
    9. ' def' → logprob: -11.13331413269043
    10. ' r' → logprob: -11.50831413269043

Token 1467: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.42434802651405334
    2. '   ' → logprob: -1.924347996711731
    3. 'def' → logprob: -2.5493481159210205
    4. '#' (adapté à ' #') → logprob: -2.9243481159210205
    5. 'low' → logprob: -3.5493481159210205
    6. 'import' → logprob: -4.174347877502441
    7. 'from' → logprob: -4.674347877502441
    8. 'a' → logprob: -5.049347877502441
    9. 'r' → logprob: -5.924347877502441
    10. '```' → logprob: -6.549347877502441

Token 1468: ' We'll' (ID: 46830)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4847106337547302
    2. 'def' → logprob: -1.734710693359375
    3. 'if' → logprob: -1.984710693359375
    4. 'import' → logprob: -3.484710693359375
    5. '#' → logprob: -4.109710693359375
    6. 'r' → logprob: -4.734710693359375
    7. '
' → logprob: -4.859710693359375
    8. 'from' → logprob: -5.609710693359375
    9. '```' → logprob: -6.984710693359375
    10. ' if' → logprob: -7.109710693359375

Token 1469: ' check' (ID: 2371)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.157675102353096
    2. 'import' → logprob: -2.90767502784729
    3. 'solve' → logprob: -3.65767502784729
    4. 'return' → logprob: -3.78267502784729
    5. 'define' → logprob: -4.657675266265869
    6. 'continue' → logprob: -4.657675266265869
    7. '
' → logprob: -5.907675266265869
    8. ' def' → logprob: -5.907675266265869
    9. 'write' → logprob: -6.032675266265869
    10. 'try' → logprob: -6.157675266265869

Token 1470: ' feasibility' (ID: 97666)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7661119699478149
    2. 'if' → logprob: -1.516111969947815
    3. 'low' → logprob: -2.0161118507385254
    4. 'def' → logprob: -2.6411118507385254
    5. '#' → logprob: -3.6411118507385254
    6. '   ' → logprob: -3.6411118507385254
    7. 'for' → logprob: -3.7661118507385254
    8. 'import' → logprob: -4.266111850738525
    9. 'left' → logprob: -4.891111850738525
    10. '```' → logprob: -5.266111850738525

Token 1471: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09007783234119415
    2. 'def' → logprob: -2.8400778770446777
    3. '
' → logprob: -4.090077877044678
    4. 'if' → logprob: -5.715077877044678
    5. 'import' → logprob: -6.215077877044678
    6. '    
' → logprob: -6.465077877044678
    7. '#' → logprob: -6.590077877044678
    8. 'r' → logprob: -6.965077877044678
    9. ' if' → logprob: -7.340077877044678
    10. 'from' → logprob: -8.34007740020752

Token 1472: ' main' (ID: 2758)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.22082939743995667
    2. 'def' → logprob: -1.9708293676376343
    3. 'the' → logprob: -4.095829486846924
    4. 'radius' → logprob: -4.220829486846924
    5. 'a' → logprob: -5.220829486846924
    6. 'range' → logprob: -5.470829486846924
    7. 'return' → logprob: -5.845829486846924
    8. '
' → logprob: -5.970829486846924
    9. 'code' → logprob: -5.970829486846924
    10. '#' → logprob: -6.470829486846924

Token 1473: ' function' (ID: 1114)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1474: ' rather' (ID: 7542)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1475: ' than' (ID: 1572)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1476: ' here' (ID: 2105)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0034999309573322535
    2. 'here' → logprob: -7.128499984741211
    3. 'this' → logprob: -7.378499984741211
    4. 'raising' → logprob: -7.503499984741211
    5. 'calcul' → logprob: -7.753499984741211
    6. 'def' → logprob: -7.878499984741211
    7. 'vertical' → logprob: -8.128499984741211
    8. '#' → logprob: -9.378499984741211
    9. 'comput' → logprob: -9.378499984741211
    10. 'com' → logprob: -9.503499984741211

Token 1477: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1478: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6405729651451111
    2. '<|end|>' → logprob: -0.7655729651451111
    3. 'pass' → logprob: -5.515573024749756
    4. 'return' → logprob: -6.140573024749756
    5. '<|end|>' → logprob: -6.765573024749756
    6. '#' → logprob: -7.890573024749756
    7. '```' → logprob: -9.640572547912598
    8. '   ' → logprob: -10.390572547912598
    9. ' pass' → logprob: -10.890572547912598
    10. '
' → logprob: -11.015572547912598

Token 1479: ' return' (ID: 622)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.21369288861751556
    2. '   ' → logprob: -2.2136929035186768
    3. 'return' (adapté à ' return') → logprob: -2.5886929035186768
    4. ' pass' → logprob: -5.088692665100098
    5. ' return' → logprob: -7.338692665100098
    6. '<|end|>' → logprob: -7.463692665100098
    7. 'def' → logprob: -7.588692665100098
    8. '    ' → logprob: -10.588692665100098
    9. '	pass' → logprob: -11.088692665100098
    10. ' ' → logprob: -11.463692665100098

Token 1480: ' horizontal' (ID: 25511)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6444088816642761
    2. 'horizontal' → logprob: -1.019408941268921
    3. 'math' → logprob: -2.394408941268921
    4. '0' → logprob: -4.144408702850342
    5. 'None' → logprob: -5.644408702850342
    6. 'min' → logprob: -6.144408702850342
    7. '(max' → logprob: -7.644408702850342
    8. '(horizontal' → logprob: -7.769408702850342
    9. ' horizontal' → logprob: -8.5194091796875
    10. '(math' → logprob: -9.3944091796875

Token 1481: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -1.0280383548888494e-06
    2. '_distance' → logprob: -13.875000953674316
    3. 'dist' → logprob: -17.500001907348633
    4. 'Dist' → logprob: -18.375001907348633
    5. ' _' → logprob: -18.500001907348633
    6. ''_' → logprob: -19.000001907348633
    7. '\' → logprob: -19.125001907348633
    8. '"_' → logprob: -19.125001907348633
    9. '_d' → logprob: -19.750001907348633
    10. '_DIST' → logprob: -20.000001907348633

Token 1482: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1483: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.2127499133348465
    2. 'min' → logprob: -1.83774995803833
    3. 'max' → logprob: -3.46274995803833
    4. 'block' → logprob: -7.46274995803833
    5. 'r' → logprob: -8.587749481201172
    6. ' h' → logprob: -8.962749481201172
    7. ' min' → logprob: -9.587749481201172
    8. '0' → logprob: -9.837749481201172
    9. '(min' → logprob: -10.712749481201172
    10. '(' → logprob: -10.837749481201172

Token 1484: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1485: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7099599242210388
    2. '<|end|>' → logprob: -0.7099599242210388
    3. '<|end|>' → logprob: -4.334959983825684
    4. '#' → logprob: -6.334959983825684
    5. '```' → logprob: -6.959959983825684
    6. '
' → logprob: -8.584959983825684
    7. ')' → logprob: -8.959959983825684
    8. '\' → logprob: -9.459959983825684
    9. 'r' → logprob: -9.584959983825684
    10. ':' → logprob: -9.709959983825684

Token 1486: ' course' (ID: 4165)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -1.5967580080032349
    2. 'find' → logprob: -1.5967580080032349
    3. 'main' → logprob: -1.5967580080032349
    4. ' main' → logprob: -2.0967578887939453
    5. 'minimal' → logprob: -2.8467578887939453
    6. 'check' → logprob: -3.0967578887939453
    7. ' find' → logprob: -3.0967578887939453
    8. 'solve' → logprob: -3.4717578887939453
    9. ' minimal' → logprob: -3.9717578887939453
    10. ' can' → logprob: -4.471757888793945

Token 1487: '_line' (ID: 14418)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05492741987109184
    2. '_line' → logprob: -3.679927349090576
    3. 'def' → logprob: -4.929927349090576
    4. '_segments' → logprob: -5.054927349090576
    5. '_points' → logprob: -5.679927349090576
    6. '_lines' → logprob: -5.929927349090576
    7. '_length' → logprob: -6.054927349090576
    8. '_x' → logprob: -7.554927349090576
    9. '_
' → logprob: -7.804927349090576
    10. '(line' → logprob: -8.054927825927734

Token 1488: '_inter' (ID: 16818)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.539690375328064
    2. '_points' → logprob: -1.664690375328064
    3. '(x' → logprob: -1.914690375328064
    4. '(' → logprob: -2.6646904945373535
    5. '_segments' → logprob: -2.9146904945373535
    6. '_length' → logprob: -3.1646904945373535
    7. '(line' → logprob: -3.4146904945373535
    8. '_inter' → logprob: -3.6646904945373535
    9. '_segment' → logprob: -3.7896904945373535
    10. '(a' → logprob: -3.9146904945373535

Token 1489: 'sects' (ID: 105681)
  Prédit: 'sects'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sects' → logprob: -0.00024168188974726945
    2. 'sect' → logprob: -8.62524127960205
    3. 'section' → logprob: -10.62524127960205
    4. 'pol' → logprob: -11.25024127960205
    5. 's' → logprob: -11.75024127960205
    6. 'sections' → logprob: -12.12524127960205
    7. 'polate' → logprob: -12.62524127960205
    8. '```' → logprob: -13.37524127960205
    9. 'acts' → logprob: -13.75024127960205
    10. 'se' → logprob: -13.75024127960205

Token 1490: '_block' (ID: 15644)
  Prédit: '_rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -0.6438838243484497
    2. '_blocks' → logprob: -1.2688838243484497
    3. '_block' → logprob: -2.26888370513916
    4. 'rect' → logprob: -3.39388370513916
    5. '(block' → logprob: -4.14388370513916
    6. 'block' → logprob: -4.39388370513916
    7. '_rectangle' → logprob: -4.51888370513916
    8. 'blocks' → logprob: -5.14388370513916
    9. '(rect' → logprob: -5.89388370513916
    10. '(ball' → logprob: -6.01888370513916

Token 1491: '(s' (ID: 1858)
  Prédit: '(ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ax' → logprob: -0.15594317018985748
    2. '(line' → logprob: -2.1559431552886963
    3. '(ball' → logprob: -3.6559431552886963
    4. '(' → logprob: -6.530943393707275
    5. '(a' → logprob: -8.030942916870117
    6. '(course' → logprob: -8.155942916870117
    7. '_line' → logprob: -8.905942916870117
    8. '(cx' → logprob: -9.030942916870117
    9. '(block' → logprob: -9.280942916870117
    10. '((' → logprob: -10.030942916870117

Token 1492: 'x' (ID: 87)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8641568422317505
    2. 'eg' → logprob: -0.9891568422317505
    3. 'egment' → logprob: -1.7391568422317505
    4. 'x' → logprob: -4.489156723022461
    5. '1' → logprob: -5.114156723022461
    6. ',' → logprob: -5.114156723022461
    7. '_x' → logprob: -6.239156723022461
    8. 'tr' → logprob: -6.739156723022461
    9. 'egs' → logprob: -6.989156723022461
    10. '(' → logprob: -7.364156723022461

Token 1493: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000533136713784188
    2. 'x' → logprob: -8.250533103942871
    3. ' ,' → logprob: -8.625533103942871
    4. ',x' → logprob: -10.000533103942871
    5. ',y' → logprob: -10.625533103942871
    6. '   ' → logprob: -12.000533103942871
    7. '_,' → logprob: -12.375533103942871
    8. '_x' → logprob: -12.375533103942871
    9. ',
' → logprob: -12.625533103942871
    10. 'y' → logprob: -13.500533103942871

Token 1494: ' sy' (ID: 6157)
  Prédit: 'sy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sy' → logprob: -0.00020413640595506877
    2. ' sy' → logprob: -8.500204086303711
    3. '_sy' → logprob: -14.500204086303711
    4. 'sx' → logprob: -17.00020408630371
    5. 'Sy' → logprob: -18.25020408630371
    6. 'sys' → logprob: -18.75020408630371
    7. 'syz' → logprob: -18.75020408630371
    8. 'sz' → logprob: -19.00020408630371
    9. 's' → logprob: -19.25020408630371
    10. '.sy' → logprob: -19.62520408630371

Token 1495: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024370834580622613
    2. ' ,' → logprob: -8.375244140625
    3. ',
' → logprob: -12.250244140625
    4. ',b' → logprob: -12.750244140625
    5. '_,' → logprob: -12.875244140625
    6. ',s' → logprob: -13.750244140625
    7. '   ' → logprob: -14.125244140625
    8. '),' → logprob: -15.625244140625
    9. ',x' → logprob: -15.625244140625
    10. '`,' → logprob: -16.250244140625

Token 1496: ' ex' (ID: 513)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.011549359187483788
    2. 'bx' → logprob: -4.636549472808838
    3. 'min' → logprob: -7.636549472808838
    4. 'block' → logprob: -7.761549472808838
    5. 'tx' → logprob: -7.886549472808838
    6. ' ex' → logprob: -7.886549472808838
    7. 'dx' → logprob: -9.63654899597168
    8. 'mx' → logprob: -10.88654899597168
    9. '```' → logprob: -11.01154899597168
    10. ' bx' → logprob: -12.26154899597168

Token 1497: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003088231896981597
    2. 'x' → logprob: -5.878087997436523
    3. ',x' → logprob: -8.378087997436523
    4. '_,' → logprob: -10.878087997436523
    5. ' ,' → logprob: -11.003087997436523
    6. '_x' → logprob: -12.128087997436523
    7. ',
' → logprob: -12.128087997436523
    8. '`,' → logprob: -13.753087997436523
    9. '```' → logprob: -13.753087997436523
    10. '),' → logprob: -14.378087997436523

Token 1498: ' ey' (ID: 17600)
  Prédit: 'ey'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ey' → logprob: -0.0029920823872089386
    2. ' ey' → logprob: -5.877992153167725
    3. 'ex' → logprob: -9.127991676330566
    4. 'es' → logprob: -10.877991676330566
    5. 'ez' → logprob: -11.127991676330566
    6. 'eys' → logprob: -12.002991676330566
    7. 'se' → logprob: -12.377991676330566
    8. 'ery' → logprob: -12.377991676330566
    9. 'eyey' → logprob: -12.377991676330566
    10. 'ee' → logprob: -12.502991676330566

Token 1499: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010783452307805419
    2. '   ' → logprob: -10.250107765197754
    3. ' ,' → logprob: -10.500107765197754
    4. ',
' → logprob: -10.625107765197754
    5. ',b' → logprob: -11.250107765197754
    6. '):' → logprob: -12.500107765197754
    7. '):
' → logprob: -13.125107765197754
    8. '_,' → logprob: -15.250107765197754
    9. ',r' → logprob: -15.250107765197754
    10. ',s' → logprob: -15.625107765197754

Token 1500: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.25951457023620605
    2. 'min' → logprob: -2.134514570236206
    3. 'bx' → logprob: -3.009514570236206
    4. ' block' → logprob: -3.134514570236206
    5. ' min' → logprob: -4.759514808654785
    6. ' bx' → logprob: -4.884514808654785
    7. '   ' → logprob: -7.634514808654785
    8. 'rx' → logprob: -8.134514808654785
    9. 'b' → logprob: -9.634514808654785
    10. 'mx' → logprob: -9.884514808654785

Token 1501: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1804884374141693
    2. '):
' → logprob: -1.8054884672164917
    3. '   ' → logprob: -7.680488586425781
    4. '):
' → logprob: -8.805488586425781
    5. ',' → logprob: -9.180488586425781
    6. ':' → logprob: -11.180488586425781
    7. '):

' → logprob: -12.555488586425781
    8. 'def' → logprob: -12.930488586425781
    9. ' ):' → logprob: -13.180488586425781
    10. ')' → logprob: -13.555488586425781

Token 1502: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012711855815723538
    2. '
' → logprob: -7.7512712478637695
    3. '    
' → logprob: -8.00127124786377
    4. '```' → logprob: -8.12627124786377
    5. 'min' → logprob: -9.25127124786377
    6. ' min' → logprob: -10.12627124786377
    7. ':' → logprob: -10.87627124786377
    8. ',' → logprob: -11.87627124786377
    9. '(min' → logprob: -11.87627124786377
    10. '(' → logprob: -12.00127124786377

Token 1503: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3139110207557678
    2. 'min' → logprob: -1.313910961151123
    3. ' min' → logprob: -7.938910961151123
    4. '```' → logprob: -8.688911437988281
    5. '(min' → logprob: -10.063911437988281
    6. '	min' → logprob: -10.563911437988281
    7. '
' → logprob: -11.188911437988281
    8. 'def' → logprob: -11.813911437988281
    9. '``' → logprob: -11.938911437988281
    10. 'rx' → logprob: -12.063911437988281

Token 1504: ' Check' (ID: 6208)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.002788707846775651
    2. 'def' → logprob: -6.627788543701172
    3. '   ' → logprob: -7.127788543701172
    4. 'rx' → logprob: -7.627788543701172
    5. '#' → logprob: -9.502788543701172
    6. 'bx' → logprob: -10.002788543701172
    7. '(min' → logprob: -10.627788543701172
    8. ' min' → logprob: -11.127788543701172
    9. 'mx' → logprob: -12.627788543701172
    10. 'block' → logprob: -12.627788543701172

Token 1505: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5721040368080139
    2. 'if' → logprob: -1.4471039772033691
    3. 'def' → logprob: -1.9471039772033691
    4. '   ' → logprob: -2.947103977203369
    5. '(block' → logprob: -6.947103977203369
    6. ' line' → logprob: -7.572103977203369
    7. 'min' → logprob: -7.822103977203369
    8. '#' → logprob: -8.072104454040527
    9. '(min' → logprob: -8.072104454040527
    10. 'return' → logprob: -8.197104454040527

Token 1506: ' bottom' (ID: 8725)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.019956612959504128
    2. ' line' → logprob: -4.144956588745117
    3. 'min' → logprob: -6.644956588745117
    4. 'point' → logprob: -7.269956588745117
    5. 'def' → logprob: -7.394956588745117
    6. 'block' → logprob: -7.644956588745117
    7. 'vertical' → logprob: -8.019956588745117
    8. '(line' → logprob: -9.019956588745117
    9. 'sx' → logprob: -9.269956588745117
    10. 'import' → logprob: -9.644956588745117

Token 1507: ' sphere' (ID: 51811)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.14650054275989532
    2. '_x' → logprob: -2.271500587463379
    3. 'block' → logprob: -4.396500587463379
    4. 'def' → logprob: -4.396500587463379
    5. 'rect' → logprob: -6.271500587463379
    6. 'sx' → logprob: -7.021500587463379
    7. '```' → logprob: -7.271500587463379
    8. '
' → logprob: -7.271500587463379
    9. 's' → logprob: -7.646500587463379
    10. 'xmin' → logprob: -7.646500587463379

Token 1508: ' point' (ID: 2438)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8668842911720276
    2. '_x' → logprob: -0.9918842911720276
    3. 'min' → logprob: -2.366884231567383
    4. 'def' → logprob: -3.741884231567383
    5. '_min' → logprob: -4.491884231567383
    6. 'rect' → logprob: -4.491884231567383
    7. '_rect' → logprob: -4.866884231567383
    8. '   ' → logprob: -4.991884231567383
    9. 'corner' → logprob: -5.241884231567383
    10. '=' → logprob: -5.366884231567383

Token 1509: ' trajectory' (ID: 70764)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -1.0289884805679321
    2. '_x' → logprob: -1.5289884805679321
    3. '   ' → logprob: -2.4039883613586426
    4. 'x' → logprob: -2.5289883613586426
    5. 'def' → logprob: -2.5289883613586426
    6. '(cx' → logprob: -3.2789883613586426
    7. '_inter' → logprob: -3.2789883613586426
    8. '(x' → logprob: -4.153988361358643
    9. ' intersects' → logprob: -4.278988361358643
    10. '```' → logprob: -4.903988361358643

Token 1510: ' line' (ID: 2543)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.09031736850738525
    2. ' intersects' → logprob: -3.2153172492980957
    3. '(px' → logprob: -4.215317249298096
    4. '(cx' → logprob: -4.840317249298096
    5. '(ax' → logprob: -5.340317249298096
    6. 'def' → logprob: -5.590317249298096
    7. '   ' → logprob: -5.715317249298096
    8. '(x' → logprob: -6.090317249298096
    9. '(inter' → logprob: -6.340317249298096
    10. '(ball' → logprob: -6.590317249298096

Token 1511: ' segment' (ID: 14806)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.1266828030347824
    2. ' intersects' → logprob: -3.126682758331299
    3. '_inter' → logprob: -3.251682758331299
    4. '(ax' → logprob: -4.751682758331299
    5. 'def' → logprob: -5.001682758331299
    6. '   ' → logprob: -5.251682758331299
    7. 's' → logprob: -5.376682758331299
    8. 'ax' → logprob: -6.251682758331299
    9. 'segment' → logprob: -6.626682758331299
    10. ',' → logprob: -6.751682758331299

Token 1512: ' intersects' (ID: 198484)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.05350372940301895
    2. '(s' → logprob: -3.6785037517547607
    3. ' intersects' → logprob: -3.6785037517547607
    4. 'def' → logprob: -8.05350399017334
    5. '((' → logprob: -8.42850399017334
    6. '_inter' → logprob: -8.55350399017334
    7. 'from' → logprob: -8.80350399017334
    8. '(ax' → logprob: -9.05350399017334
    9. 'sx' → logprob: -9.55350399017334
    10. ' (' → logprob: -9.67850399017334

Token 1513: ' block' (ID: 4355)
  Prédit: '(block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(block' → logprob: -0.1542670726776123
    2. '((' → logprob: -2.2792670726776123
    3. 'block' → logprob: -3.7792670726776123
    4. ' (' → logprob: -5.404267311096191
    5. '(line' → logprob: -5.529267311096191
    6. '(' → logprob: -5.779267311096191
    7. 'line' → logprob: -6.654267311096191
    8. 'def' → logprob: -6.654267311096191
    9. '(
' → logprob: -6.904267311096191
    10. '(s' → logprob: -7.404267311096191

Token 1514: ' bottom' (ID: 8725)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.7428333163261414
    2. '(block' → logprob: -1.4928333759307861
    3. 'def' → logprob: -2.742833375930786
    4. '   ' → logprob: -2.992833375930786
    5. '(rx' → logprob: -3.117833375930786
    6. '(ax' → logprob: -3.367833375930786
    7. '(cx' → logprob: -3.617833375930786
    8. 'min' → logprob: -3.742833375930786
    9. '(ball' → logprob: -4.117833137512207
    10. '(b' → logprob: -4.367833137512207

Token 1515: ' rectangle' (ID: 45808)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.17669816315174103
    2. 'def' → logprob: -2.8016982078552246
    3. '((' → logprob: -2.8016982078552246
    4. '(block' → logprob: -4.051698207855225
    5. '   ' → logprob: -5.176698207855225
    6. 'min' → logprob: -5.551698207855225
    7. ' (' → logprob: -6.051698207855225
    8. ':' → logprob: -6.301698207855225
    9. '=(' → logprob: -6.926698207855225
    10. '(rx' → logprob: -6.926698207855225

Token 1516: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22777396440505981
    2. '(min' → logprob: -1.852773904800415
    3. '(rx' → logprob: -3.852773904800415
    4. ':' → logprob: -4.727774143218994
    5. 'min' → logprob: -5.102774143218994
    6. ':
' → logprob: -5.477774143218994
    7. '(cx' → logprob: -6.227774143218994
    8. 'def' → logprob: -6.852774143218994
    9. ',' → logprob: -7.727774143218994
    10. '(ax' → logprob: -7.852774143218994

Token 1517: 'projection' (ID: 144127)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.3452785611152649
    2. '(block' → logprob: -1.8452785015106201
    3. 'def' → logprob: -2.97027850151062
    4. '):
' → logprob: -4.095278739929199
    5. ')
' → logprob: -4.095278739929199
    6. ')' → logprob: -4.470278739929199
    7. 'sx' → logprob: -4.970278739929199
    8. '
' → logprob: -5.220278739929199
    9. '   ' → logprob: -5.345278739929199
    10. '((' → logprob: -5.470278739929199

Token 1518: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6669401526451111
    2. '):
' → logprob: -0.9169401526451111
    3. ')' → logprob: -3.166940212249756
    4. 'on' → logprob: -4.416940212249756
    5. '   ' → logprob: -5.291940212249756
    6. 'def' → logprob: -5.416940212249756
    7. ')
' → logprob: -5.416940212249756
    8. '):

' → logprob: -5.416940212249756
    9. ' on' → logprob: -5.666940212249756
    10. 'of' → logprob: -6.291940212249756

Token 1519: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03939531743526459
    2. 'def' → logprob: -3.789395332336426
    3. 'min' → logprob: -4.289395332336426
    4. '(min' → logprob: -6.289395332336426
    5. '```' → logprob: -9.039395332336426
    6. '(rx' → logprob: -9.289395332336426
    7. '
' → logprob: -9.539395332336426
    8. 'rx' → logprob: -10.039395332336426
    9. ' min' → logprob: -10.039395332336426
    10. 'return' → logprob: -10.539395332336426

Token 1520: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.005704688373953104
    2. '(min' → logprob: -6.005704879760742
    3. 'return' → logprob: -6.505704879760742
    4. 'rx' → logprob: -7.130704879760742
    5. '   ' → logprob: -7.630704879760742
    6. 'bx' → logprob: -8.005704879760742
    7. '```' → logprob: -10.380704879760742
    8. '(rx' → logprob: -10.630704879760742
    9. 'cx' → logprob: -10.755704879760742
    10. ' min' → logprob: -11.255704879760742

Token 1521: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.416665640543215e-05
    2. '_x' → logprob: -10.87503433227539
    3. ',' → logprob: -12.25003433227539
    4. 'def' → logprob: -12.75003433227539
    5. 'block' → logprob: -12.87503433227539
    6. '```' → logprob: -12.87503433227539
    7. '_block' → logprob: -14.12503433227539
    8. '_,' → logprob: -14.50003433227539
    9. '``' → logprob: -15.37503433227539
    10. 'xmin' → logprob: -16.00003433227539

Token 1522: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017469677550252527
    2. '=' → logprob: -9.250174522399902
    3. ',min' → logprob: -10.375174522399902
    4. '<|end|>' → logprob: -11.500174522399902
    5. ' =' → logprob: -11.625174522399902
    6. ' ,' → logprob: -12.000174522399902
    7. ',
' → logprob: -12.000174522399902
    8. ',b' → logprob: -12.125174522399902
    9. ',user' → logprob: -12.750174522399902
    10. '<|end|>' → logprob: -14.125174522399902

Token 1523: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0008155853138305247
    2. ' min' → logprob: -7.125815391540527
    3. 'mini' → logprob: -11.625815391540527
    4. 'm' → logprob: -14.125815391540527
    5. 'mine' → logprob: -14.625815391540527
    6. '	min' → logprob: -15.000815391540527
    7. ',min' → logprob: -15.250815391540527
    8. ',' → logprob: -16.000816345214844
    9. 'max' → logprob: -16.625816345214844
    10. ' mini' → logprob: -16.875816345214844

Token 1524: 'y' (ID: 88)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8745443224906921
    2. ',' → logprob: -1.249544382095337
    3. 'y' → logprob: -1.249544382095337
    4. ',min' → logprob: -4.999544143676758
    5. ',y' → logprob: -6.874544143676758
    6. 'block' → logprob: -6.999544143676758
    7. 'x' → logprob: -8.624544143676758
    8. '_min' → logprob: -8.999544143676758
    9. '_,' → logprob: -9.124544143676758
    10. '_block' → logprob: -9.249544143676758

Token 1525: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.2994620242971e-06
    2. '=' → logprob: -12.375008583068848
    3. ',
' → logprob: -13.250008583068848
    4. ',min' → logprob: -13.500008583068848
    5. ' ,' → logprob: -14.500008583068848
    6. ',max' → logprob: -16.62500762939453
    7. ',...' → logprob: -16.87500762939453
    8. '_,' → logprob: -17.25000762939453
    9. ',\
' → logprob: -17.87500762939453
    10. '‌,' → logprob: -17.87500762939453

Token 1526: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.10021496564149857
    2. ' max' → logprob: -2.350214958190918
    3. 'min' → logprob: -11.850214958190918
    4. ' min' → logprob: -14.475214958190918
    5. ',max' → logprob: -15.225214958190918
    6. '_max' → logprob: -15.850214958190918
    7. '(max' → logprob: -16.350215911865234
    8. '=max' → logprob: -16.350215911865234
    9. '[max' → logprob: -16.975215911865234
    10. '...' → logprob: -17.725215911865234

Token 1527: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.5048530030981055e-06
    2. ',' → logprob: -13.750001907348633
    3. '_x' → logprob: -14.875001907348633
    4. '=' → logprob: -17.500001907348633
    5. '```' → logprob: -17.750001907348633
    6. ',x' → logprob: -18.125001907348633
    7. '<|end|>' → logprob: -18.250001907348633
    8. '_,' → logprob: -18.625001907348633
    9. 'block' → logprob: -18.625001907348633
    10. '_block' → logprob: -19.000001907348633

Token 1528: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7432603272027336e-06
    2. '=' → logprob: -13.875001907348633
    3. ' ,' → logprob: -15.000001907348633
    4. ',min' → logprob: -15.750001907348633
    5. ',
' → logprob: -16.250001907348633
    6. ',max' → logprob: -16.500001907348633
    7. ',b' → logprob: -18.250001907348633
    8. ',user' → logprob: -18.375001907348633
    9. '_,' → logprob: -18.625001907348633
    10. ',\
' → logprob: -19.000001907348633

Token 1529: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.005245852749794722
    2. 'min' → logprob: -5.380245685577393
    3. ' max' → logprob: -7.380245685577393
    4. ' min' → logprob: -13.63024616241455
    5. 'm' → logprob: -14.75524616241455
    6. '
' → logprob: -16.880245208740234
    7. '	max' → logprob: -17.005245208740234
    8. '0' → logprob: -17.505245208740234
    9. ',max' → logprob: -17.505245208740234
    10. 'may' → logprob: -17.505245208740234

Token 1530: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.001967531396076083
    2. 'max' → logprob: -6.251967430114746
    3. ',' → logprob: -10.751967430114746
    4. 'x' → logprob: -12.126967430114746
    5. 'ay' → logprob: -13.251967430114746
    6. '=max' → logprob: -13.251967430114746
    7. ' ymax' → logprob: -13.376967430114746
    8. '_max' → logprob: -13.876967430114746
    9. '=' → logprob: -14.001967430114746
    10. '1' → logprob: -14.501967430114746

Token 1531: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39212170243263245
    2. '=' → logprob: -1.14212167263031
    3. ' =' → logprob: -5.2671217918396
    4. '   ' → logprob: -10.642121315002441
    5. ' ,' → logprob: -11.392121315002441
    6. ',b' → logprob: -11.517121315002441
    7. ',min' → logprob: -12.017121315002441
    8. '=min' → logprob: -12.517121315002441
    9. ')' → logprob: -12.642121315002441
    10. '=
' → logprob: -12.892121315002441

Token 1532: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.01415187306702137
    2. ' h' → logprob: -5.1391520500183105
    3. 'block' → logprob: -5.7641520500183105
    4. '_h' → logprob: -6.1391520500183105
    5. 'height' → logprob: -7.1391520500183105
    6. '=' → logprob: -7.2641520500183105
    7. ' =' → logprob: -7.7641520500183105
    8. ' block' → logprob: -7.8891520500183105
    9. '_' → logprob: -8.639151573181152
    10. '=h' → logprob: -8.639151573181152

Token 1533: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4567949175834656
    2. '   ' → logprob: -1.2067949771881104
    3. ' =' → logprob: -2.7067949771881104
    4. '=
' → logprob: -7.581794738769531
    5. ',' → logprob: -9.081794738769531
    6. '=line' → logprob: -9.831794738769531
    7. ')' → logprob: -10.456794738769531
    8. ')=' → logprob: -11.081794738769531
    9. '    
' → logprob: -12.081794738769531
    10. ' =
' → logprob: -12.081794738769531

Token 1534: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.0001584850688232109
    2. ' block' → logprob: -8.750158309936523
    3. '   ' → logprob: -21.000158309936523
    4. '	block' → logprob: -22.000158309936523
    5. '(block' → logprob: -22.500158309936523
    6. 'bloc' → logprob: -23.000158309936523
    7. '
' → logprob: -23.250158309936523
    8. 'blok' → logprob: -24.250158309936523
    9. 'blocked' → logprob: -24.375158309936523
    10. '_block' → logprob: -24.500158309936523

Token 1535: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08606831729412079
    2. '
' → logprob: -2.5860683917999268
    3. '    
' → logprob: -4.961068153381348
    4. '```' → logprob: -9.836068153381348
    5. '
' → logprob: -10.086068153381348
    6. '   
' → logprob: -11.211068153381348
    7. '  
' → logprob: -11.461068153381348
    8. '	
' → logprob: -11.961068153381348
    9. '    
' → logprob: -12.586068153381348
    10. '        
' → logprob: -12.961068153381348

Token 1536: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010092307347804308
    2. 'return' → logprob: -7.001009464263916
    3. '
' → logprob: -9.376008987426758
    4. '```' → logprob: -11.876008987426758
    5. ' return' → logprob: -12.876008987426758
    6. 'if' → logprob: -13.376008987426758
    7. '    
' → logprob: -13.501008987426758
    8. '   ' → logprob: -15.501008987426758
    9. 'for' → logprob: -16.376008987426758
    10. '	return' → logprob: -16.501008987426758

Token 1537: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.47418177127838135
    2. '   ' → logprob: -0.9741817712783813
    3. ' return' → logprob: -9.72418212890625
    4. 'if' → logprob: -10.34918212890625
    5. '
' → logprob: -11.59918212890625
    6. '	return' → logprob: -13.47418212890625
    7. '```' → logprob: -13.84918212890625
    8. '    
' → logprob: -14.22418212890625
    9. '   ' → logprob: -15.84918212890625
    10. '  ' → logprob: -16.47418212890625

Token 1538: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0067156096920371056
    2. ' line' → logprob: -5.006715774536133
    3. '   ' → logprob: -16.006715774536133
    4. ' ' → logprob: -16.881715774536133
    5. '	line' → logprob: -17.881715774536133
    6. '(line' → logprob: -18.131715774536133
    7. '#line' → logprob: -19.631715774536133
    8. 'Line' → logprob: -19.756715774536133
    9. '  ' → logprob: -20.631715774536133
    10. 'lines' → logprob: -21.131715774536133

Token 1539: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -2.2200749754119897e-06
    2. '_line' → logprob: -13.500001907348633
    3. '_segments' → logprob: -14.250001907348633
    4. 'segment' → logprob: -16.375001907348633
    5. '_seg' → logprob: -17.500001907348633
    6. 'Segment' → logprob: -18.250001907348633
    7. 'line' → logprob: -18.875001907348633
    8. '```' → logprob: -19.250001907348633
    9. '_block' → logprob: -19.500001907348633
    10. '_' → logprob: -20.250001907348633

Token 1540: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -1.9146995327901095e-05
    2. 'inter' → logprob: -10.875019073486328
    3. '_line' → logprob: -16.500019073486328
    4. 's' → logprob: -17.875019073486328
    5. '(inter' → logprob: -18.000019073486328
    6. '_segments' → logprob: -18.375019073486328
    7. '_in' → logprob: -18.500019073486328
    8. '```' → logprob: -18.875019073486328
    9. '_INTER' → logprob: -19.000019073486328
    10. '(line' → logprob: -19.250019073486328

Token 1541: 'sects' (ID: 105681)
  Prédit: 'sects'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sects' → logprob: -0.0004977479111403227
    2. 'ects' → logprob: -7.625497817993164
    3. 'sect' → logprob: -12.375497817993164
    4. 'er' → logprob: -13.875497817993164
    5. 'cts' → logprob: -14.125497817993164
    6. 'section' → logprob: -14.125497817993164
    7. 'es' → logprob: -14.375497817993164
    8. '```' → logprob: -14.625497817993164
    9. 's' → logprob: -14.875497817993164
    10. 'cepts' → logprob: -15.125497817993164

Token 1542: '_rect' (ID: 39269)
  Prédit: '_rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -0.02776159532368183
    2. '(s' → logprob: -3.777761697769165
    3. '((' → logprob: -5.777761459350586
    4. 'rect' → logprob: -6.777761459350586
    5. '_line' → logprob: -8.902761459350586
    6. '(x' → logprob: -10.527761459350586
    7. '_' → logprob: -10.777761459350586
    8. '(ax' → logprob: -10.777761459350586
    9. '(' → logprob: -11.402761459350586
    10. '(b' → logprob: -11.652761459350586

Token 1543: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00508314510807395
    2. '((' → logprob: -5.380083084106445
    3. '(' → logprob: -7.755083084106445
    4. ' (' → logprob: -11.255083084106445
    5. '(ex' → logprob: -11.255083084106445
    6. '(int' → logprob: -13.380083084106445
    7. '(
' → logprob: -13.630083084106445
    8. '
' → logprob: -14.005083084106445
    9. '(line' → logprob: -14.005083084106445
    10. '(end' → logprob: -14.630083084106445

Token 1544: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.629921436891891e-05
    2. 'ex' → logprob: -11.37502670288086
    3. '(s' → logprob: -11.37502670288086
    4. 'sx' → logprob: -13.00002670288086
    5. '(ex' → logprob: -14.87502670288086
    6. '(x' → logprob: -15.50002670288086
    7. '(min' → logprob: -15.62502670288086
    8. ' sx' → logprob: -16.87502670288086
    9. 'xmin' → logprob: -17.00002670288086
    10. 'min' → logprob: -17.25002670288086

Token 1545: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012987985974177718
    2. ' ,' → logprob: -9.000129699707031
    3. ',
' → logprob: -12.375129699707031
    4. ',s' → logprob: -13.625129699707031
    5. '<|end|>' → logprob: -15.125129699707031
    6. '‌,' → logprob: -15.625129699707031
    7. '_,' → logprob: -16.00012969970703
    8. ',\
' → logprob: -16.12512969970703
    9. ')' → logprob: -16.62512969970703
    10. ',y' → logprob: -17.25012969970703

Token 1546: ' sy' (ID: 6157)
  Prédit: 'sy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sy' → logprob: -6.704273118884885e-07
    2. ' sy' → logprob: -14.250000953674316
    3. 'Sy' → logprob: -22.0
    4. '_sy' → logprob: -22.0
    5. 'sym' → logprob: -22.5
    6. '
' → logprob: -23.0
    7. 'syn' → logprob: -23.5
    8. 'sys' → logprob: -24.625
    9. 'SY' → logprob: -25.5
    10. '.sy' → logprob: -25.625

Token 1547: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.77022064034827e-05
    2. ' ,' → logprob: -9.875097274780273
    3. ',
' → logprob: -10.000097274780273
    4. ',

' → logprob: -15.500097274780273
    5. ',\
' → logprob: -15.875097274780273
    6. '_,' → logprob: -16.125097274780273
    7. '‌,' → logprob: -16.250097274780273
    8. '   ' → logprob: -16.375097274780273
    9. ',
' → logprob: -16.500097274780273
    10. '),' → logprob: -17.125097274780273

Token 1548: ' ex' (ID: 513)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.001170225441455841
    2. ' ex' → logprob: -6.7511701583862305
    3. '(ex' → logprob: -21.001171112060547
    4. 'ey' → logprob: -21.126171112060547
    5. '	ex' → logprob: -22.001171112060547
    6. 'exo' → logprob: -22.501171112060547
    7. ''ex' → logprob: -23.376171112060547
    8. 'ox' → logprob: -23.626171112060547
    9. '```' → logprob: -23.751171112060547
    10. 'exa' → logprob: -24.376171112060547

Token 1549: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.895480277715251e-06
    2. ' ,' → logprob: -12.125008583068848
    3. ',
' → logprob: -12.875008583068848
    4. '_,' → logprob: -14.375008583068848
    5. '‌,' → logprob: -16.625009536743164
    6. ',\
' → logprob: -16.625009536743164
    7. '`,' → logprob: -16.875009536743164
    8. '<|end|>' → logprob: -17.125009536743164
    9. '),' → logprob: -17.375009536743164
    10. '```' → logprob: -18.125009536743164

Token 1550: ' ey' (ID: 17600)
  Prédit: 'ey'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ey' → logprob: -1.759734732331708e-05
    2. 'sy' → logprob: -11.125017166137695
    3. ' ey' → logprob: -13.000017166137695
    4. 'ay' → logprob: -15.500017166137695
    5. 'sey' → logprob: -16.625017166137695
    6. 'ery' → logprob: -16.875017166137695
    7. 'eyey' → logprob: -16.875017166137695
    8. 'uy' → logprob: -16.875017166137695
    9. 'iy' → logprob: -17.250017166137695
    10. 'y' → logprob: -17.250017166137695

Token 1551: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014919086243025959
    2. ' ,' → logprob: -8.87514877319336
    3. ',
' → logprob: -12.00014877319336
    4. '   ' → logprob: -13.12514877319336
    5. ',min' → logprob: -13.87514877319336
    6. ',

' → logprob: -17.62514877319336
    7. '‌,' → logprob: -17.75014877319336
    8. ',
' → logprob: -17.87514877319336
    9. ',\
' → logprob: -17.87514877319336
    10. '_,' → logprob: -18.00014877319336

Token 1552: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.006715370807796717
    2. ' min' → logprob: -5.006715297698975
    3. '[min' → logprob: -19.256715774536133
    4. '(min' → logprob: -20.006715774536133
    5. '   ' → logprob: -20.256715774536133
    6. '	min' → logprob: -20.756715774536133
    7. '    ' → logprob: -21.756715774536133
    8. '_min' → logprob: -21.881715774536133
    9. 'max' → logprob: -22.256715774536133
    10. '=min' → logprob: -22.881715774536133

Token 1553: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: 0.0
    2. ',' → logprob: -19.875
    3. '0' → logprob: -20.375
    4. 'y' → logprob: -20.375
    5. '1' → logprob: -20.5
    6. '[' → logprob: -20.75
    7. '_x' → logprob: -20.75
    8. '=' → logprob: -21.0
    9. 'min' → logprob: -21.375
    10. 'xmin' → logprob: -21.625

Token 1554: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013798571308143437
    2. ' ,' → logprob: -9.625138282775879
    3. ',
' → logprob: -10.250138282775879
    4. ',min' → logprob: -10.250138282775879
    5. 'min' → logprob: -14.875138282775879
    6. '<|end|>' → logprob: -15.750138282775879
    7. ',

' → logprob: -16.125137329101562
    8. ',max' → logprob: -16.125137329101562
    9. ')' → logprob: -16.750137329101562
    10. '‌,' → logprob: -16.750137329101562

Token 1555: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.0206720617134124e-05
    2. ' min' → logprob: -11.50001049041748
    3. 'mini' → logprob: -19.500009536743164
    4. 'max' → logprob: -20.375009536743164
    5. '	min' → logprob: -21.125009536743164
    6. 'mine' → logprob: -22.125009536743164
    7. 'mint' → logprob: -22.625009536743164
    8. '
' → logprob: -22.625009536743164
    9. 'minimum' → logprob: -22.750009536743164
    10. ' ' → logprob: -22.875009536743164

Token 1556: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00015181333583313972
    2. 'x' → logprob: -8.875151634216309
    3. 'min' → logprob: -11.750151634216309
    4. '
' → logprob: -13.500151634216309
    5. '1' → logprob: -14.125151634216309
    6. 'iy' → logprob: -14.375151634216309
    7. ',' → logprob: -15.625151634216309
    8. 'yi' → logprob: -16.125152587890625
    9. ',y' → logprob: -16.375152587890625
    10. 'ym' → logprob: -16.375152587890625

Token 1557: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.976922744186595e-05
    2. ' ,' → logprob: -10.500040054321289
    3. ',
' → logprob: -11.375040054321289
    4. ',max' → logprob: -14.375040054321289
    5. ',min' → logprob: -16.87504005432129
    6. ',\
' → logprob: -17.87504005432129
    7. '   ' → logprob: -18.12504005432129
    8. ',

' → logprob: -18.62504005432129
    9. '
' → logprob: -18.75004005432129
    10. ')' → logprob: -18.75004005432129

Token 1558: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -2.339278580620885e-06
    2. ' max' → logprob: -13.000001907348633
    3. 'min' → logprob: -23.625001907348633
    4. '_max' → logprob: -24.125001907348633
    5. '(max' → logprob: -25.000001907348633
    6. 'Max' → logprob: -25.500001907348633
    7. '	max' → logprob: -25.875001907348633
    8. ',max' → logprob: -26.375001907348633
    9. 'MAX' → logprob: -26.375001907348633
    10. '[max' → logprob: -26.750001907348633

Token 1559: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: 0.0
    2. ' ' → logprob: -18.625
    3. 'max' → logprob: -19.5
    4. '```' → logprob: -19.5
    5. ' x' → logprob: -19.625
    6. ',' → logprob: -19.875
    7. '1' → logprob: -20.0
    8. '   ' → logprob: -20.25
    9. 'ax' → logprob: -20.625
    10. '<|end|>' → logprob: -21.25

Token 1560: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.232493564719334e-05
    2. ',
' → logprob: -10.125082015991211
    3. ',max' → logprob: -10.375082015991211
    4. 'max' → logprob: -12.000082015991211
    5. ' ,' → logprob: -12.500082015991211
    6. ' max' → logprob: -14.875082015991211
    7. '_,' → logprob: -15.375082015991211
    8. ')' → logprob: -15.625082015991211
    9. ',y' → logprob: -15.875082015991211
    10. ',\
' → logprob: -16.50008201599121

Token 1561: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.004078401252627373
    2. ' max' → logprob: -5.504078388214111
    3. '_max' → logprob: -20.254077911376953
    4. '	max' → logprob: -20.254077911376953
    5. '(max' → logprob: -20.254077911376953
    6. 'min' → logprob: -21.629077911376953
    7. ' ' → logprob: -21.754077911376953
    8. ',max' → logprob: -21.879077911376953
    9. '[max' → logprob: -22.004077911376953
    10. '=max' → logprob: -22.504077911376953

Token 1562: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00013417120499070734
    2. 'max' → logprob: -9.375134468078613
    3. 'x' → logprob: -10.000134468078613
    4. ' ymax' → logprob: -13.625134468078613
    5. 'ay' → logprob: -13.875134468078613
    6. 'yes' → logprob: -15.125134468078613
    7. '
' → logprob: -15.375134468078613
    8. '5' → logprob: -15.750134468078613
    9. '6' → logprob: -16.125133514404297
    10. '```' → logprob: -16.375133514404297

Token 1563: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.9153885558771435e-06
    2. ')
' → logprob: -12.875005722045898
    3. '   ' → logprob: -13.125005722045898
    4. ' )' → logprob: -14.250005722045898
    5. '))' → logprob: -15.875005722045898
    6. ',' → logprob: -16.6250057220459
    7. '),' → logprob: -16.6250057220459
    8. ')return' → logprob: -16.6250057220459
    9. ')...' → logprob: -17.3750057220459
    10. '<|end|>' → logprob: -17.6250057220459

Token 1564: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.756989700486884e-05
    2. '```' → logprob: -10.25008773803711
    3. 'import' → logprob: -10.37508773803711
    4. '<|end|>' → logprob: -11.37508773803711
    5. '#' → logprob: -12.75008773803711
    6. '<|end|>' → logprob: -13.00008773803711
    7. '
' → logprob: -13.50008773803711
    8. ' def' → logprob: -14.75008773803711
    9. '``' → logprob: -14.75008773803711
    10. '\' → logprob: -15.50008773803711

Token 1565: ' max' (ID: 2999)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.4552428424358368
    2. 'can' → logprob: -2.330242872238159
    3. 'minimal' → logprob: -2.455242872238159
    4. 'def' → logprob: -3.205242872238159
    5. 'min' → logprob: -3.330242872238159
    6. 'minimum' → logprob: -3.455242872238159
    7. 'main' → logprob: -4.08024263381958
    8. 'solve' → logprob: -4.08024263381958
    9. 'calculate' → logprob: -4.45524263381958
    10. 'compute' → logprob: -4.58024263381958

Token 1566: '_radius' (ID: 70179)
  Prédit: '_radius'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_radius' → logprob: -0.04266592487692833
    2. '_ball' → logprob: -4.292665958404541
    3. '_distance' → logprob: -5.167665958404541
    4. '_' → logprob: -5.417665958404541
    5. 'def' → logprob: -5.917665958404541
    6. '(' → logprob: -6.042665958404541
    7. '_safe' → logprob: -6.167665958404541
    8. '_possible' → logprob: -6.292665958404541
    9. '_r' → logprob: -6.542665958404541
    10. '_clear' → logprob: -6.917665958404541

Token 1567: '_fe' (ID: 16058)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21846309304237366
    2. '(s' → logprob: -1.8434630632400513
    3. '(ball' → logprob: -4.343462944030762
    4. '():' → logprob: -5.593462944030762
    5. '(line' → logprob: -5.718462944030762
    6. '_(' → logprob: -5.718462944030762
    7. 'def' → logprob: -6.218462944030762
    8. '_ball' → logprob: -6.468462944030762
    9. '_' → logprob: -6.593462944030762
    10. '_at' → logprob: -6.843462944030762

Token 1568: 'asible' (ID: 195692)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1465117484331131
    2. 'el' → logprob: -2.8965117931365967
    3. 't' → logprob: -3.3965117931365967
    4. 'asible' → logprob: -3.7715117931365967
    5. 'lse' → logprob: -4.771511554718018
    6. 'f' → logprob: -5.396511554718018
    7. 'els' → logprob: -5.521511554718018
    8. 'z' → logprob: -6.521511554718018
    9. 'as' → logprob: -6.521511554718018
    10. 'ef' → logprob: -7.646511554718018

Token 1569: '(r' (ID: 4729)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.09798761457204819
    2. '(' → logprob: -2.472987651824951
    3. '(ball' → logprob: -5.347987651824951
    4. '_(' → logprob: -6.597987651824951
    5. '(line' → logprob: -7.097987651824951
    6. '(b' → logprob: -8.222987174987793
    7. '(x' → logprob: -8.222987174987793
    8. '((' → logprob: -8.347987174987793
    9. '(_' → logprob: -8.472987174987793
    10. '(ax' → logprob: -8.597987174987793

Token 1570: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4472704529762268
    2. ',' → logprob: -1.072270393371582
    3. '):
' → logprob: -4.947270393371582
    4. ')' → logprob: -5.072270393371582
    5. '=' → logprob: -6.572270393371582
    6. '(ball' → logprob: -6.947270393371582
    7. '_' → logprob: -7.572270393371582
    8. '(r' → logprob: -7.947270393371582
    9. ' ,' → logprob: -8.072270393371582
    10. '(x' → logprob: -8.697270393371582

Token 1571: ' sx' (ID: 39428)
  Prédit: 'sx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sx' → logprob: -0.1285926252603531
    2. ' sx' → logprob: -2.5035927295684814
    3. 'ball' → logprob: -3.5035927295684814
    4. ' ball' → logprob: -5.878592491149902
    5. 's' → logprob: -6.753592491149902
    6. 'start' → logprob: -6.878592491149902
    7. 'path' → logprob: -7.628592491149902
    8. '   ' → logprob: -7.628592491149902
    9. 'course' → logprob: -7.878592491149902
    10. 'blocks' → logprob: -7.878592491149902

Token 1572: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.11996734328568e-05
    2. ' ,' → logprob: -10.250041007995605
    3. ',
' → logprob: -12.375041007995605
    4. ',s' → logprob: -13.625041007995605
    5. '_,' → logprob: -16.000041961669922
    6. '<|end|>' → logprob: -16.250041961669922
    7. '‌,' → logprob: -16.625041961669922
    8. ',\
' → logprob: -17.250041961669922
    9. '<|end|>' → logprob: -17.500041961669922
    10. ',int' → logprob: -18.250041961669922

Token 1573: ' sy' (ID: 6157)
  Prédit: ' sy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sy' → logprob: -0.12699897587299347
    2. 'sy' → logprob: -2.1269989013671875
    3. 's' → logprob: -10.251998901367188
    4. '_sy' → logprob: -10.376998901367188
    5. '<|end|>' → logprob: -13.001998901367188
    6. 'Sy' → logprob: -14.251998901367188
    7. '.sy' → logprob: -14.626998901367188
    8. ' s' → logprob: -14.626998901367188
    9. '<|end|>' → logprob: -15.876998901367188
    10. ',' → logprob: -16.626998901367188

Token 1574: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004946522531099617
    2. ' ,' → logprob: -7.625494480133057
    3. ',
' → logprob: -12.000494956970215
    4. '_,' → logprob: -15.000494956970215
    5. ',e' → logprob: -16.8754940032959
    6. '‌,' → logprob: -17.0004940032959
    7. ',\
' → logprob: -17.0004940032959
    8. ' ,
' → logprob: -17.5004940032959
    9. '   ' → logprob: -17.6254940032959
    10. ',

' → logprob: -18.1254940032959

Token 1575: ' ex' (ID: 513)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.002476016292348504
    2. ' ex' → logprob: -6.002476215362549
    3. '   ' → logprob: -16.00247573852539
    4. '```' → logprob: -16.37747573852539
    5. '	ex' → logprob: -18.12747573852539
    6. 'ey' → logprob: -18.62747573852539
    7. ''ex' → logprob: -18.75247573852539
    8. '(ex' → logprob: -18.75247573852539
    9. '
' → logprob: -19.00247573852539
    10. ' ' → logprob: -19.12747573852539

Token 1576: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.208653162000701e-05
    2. ' ,' → logprob: -9.875082015991211
    3. ',
' → logprob: -10.625082015991211
    4. ',s' → logprob: -13.125082015991211
    5. '<|end|>' → logprob: -13.625082015991211
    6. '_,' → logprob: -13.875082015991211
    7. '‌,' → logprob: -14.625082015991211
    8. ')' → logprob: -15.000082015991211
    9. '   ' → logprob: -15.250082015991211
    10. 'def' → logprob: -15.750082015991211

Token 1577: ' ey' (ID: 17600)
  Prédit: 'ey'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ey' → logprob: -0.0069506303407251835
    2. 'sy' → logprob: -5.381950855255127
    3. ' ey' → logprob: -6.381950855255127
    4. 'se' → logprob: -8.131950378417969
    5. 'sey' → logprob: -8.256950378417969
    6. 'eys' → logprob: -10.256950378417969
    7. ' sy' → logprob: -11.131950378417969
    8. 'eyey' → logprob: -11.631950378417969
    9. 'es' → logprob: -12.131950378417969
    10. 'ery' → logprob: -12.506950378417969

Token 1578: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4974866644479334e-05
    2. ',
' → logprob: -12.375015258789062
    3. '   ' → logprob: -12.500015258789062
    4. ',b' → logprob: -12.625015258789062
    5. ' ,' → logprob: -12.750015258789062
    6. '):' → logprob: -15.375015258789062
    7. '_,' → logprob: -16.250015258789062
    8. ',r' → logprob: -16.375015258789062
    9. '):
' → logprob: -16.625015258789062
    10. ',line' → logprob: -16.625015258789062

Token 1579: ' blocks' (ID: 18125)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.011871719732880592
    2. ' blocks' → logprob: -4.511871814727783
    3. '   ' → logprob: -7.261871814727783
    4. 'block' → logprob: -10.011871337890625
    5. 'ball' → logprob: -11.011871337890625
    6. '
' → logprob: -11.511871337890625
    7. 'r' → logprob: -12.011871337890625
    8. 'balls' → logprob: -12.011871337890625
    9. 's' → logprob: -12.636871337890625
    10. 'bx' → logprob: -12.886871337890625

Token 1580: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003518579760566354
    2. '):' → logprob: -6.003518581390381
    3. '):
' → logprob: -7.128518581390381
    4. ',
' → logprob: -8.628518104553223
    5. ')' → logprob: -10.753518104553223
    6. '   ' → logprob: -11.503518104553223
    7. '):

' → logprob: -12.378518104553223
    8. ' ,' → logprob: -12.628518104553223
    9. ',r' → logprob: -12.628518104553223
    10. '<|end|>' → logprob: -12.753518104553223

Token 1581: '   ' (ID: 271)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.5636021494865417
    2. ':' → logprob: -1.3136022090911865
    3. '   ' → logprob: -2.4386022090911865
    4. ':
' → logprob: -3.8136022090911865
    5. '(' → logprob: -3.9386022090911865
    6. '(
' → logprob: -4.688601970672607
    7. 'def' → logprob: -4.938601970672607
    8. '(s' → logprob: -5.813601970672607
    9. ' (' → logprob: -6.688601970672607
    10. '```' → logprob: -6.938601970672607

Token 1582: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13776852190494537
    2. ' for' → logprob: -2.387768507003784
    3. 'for' → logprob: -3.512768507003784
    4. '
' → logprob: -6.262768745422363
    5. 'def' → logprob: -6.262768745422363
    6. '```' → logprob: -7.012768745422363
    7. '    
' → logprob: -7.137768745422363
    8. 't' → logprob: -8.137768745422363
    9. ' 
' → logprob: -8.762768745422363
    10. 'r' → logprob: -9.012768745422363

Token 1583: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013542636297643185
    2. '   ' → logprob: -5.013542652130127
    3. 'def' → logprob: -5.388542652130127
    4. 'import' → logprob: -6.763542652130127
    5. ' for' → logprob: -6.888542652130127
    6. '
' → logprob: -11.013542175292969
    7. '#' → logprob: -11.513542175292969
    8. 't' → logprob: -11.763542175292969
    9. '```' → logprob: -11.888542175292969
    10. 'try' → logprob: -12.138542175292969

Token 1584: ' given' (ID: 4335)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9900638461112976
    2. ' r' → logprob: -1.3650639057159424
    3. 'block' → logprob: -1.4900639057159424
    4. 'ball' → logprob: -2.9900639057159424
    5. ' block' → logprob: -3.3650639057159424
    6. 'radius' → logprob: -3.8650639057159424
    7. 'each' → logprob: -4.615063667297363
    8. 'b' → logprob: -4.740063667297363
    9. ' radius' → logprob: -4.865063667297363
    10. ' ball' → logprob: -5.365063667297363

Token 1585: ' radius' (ID: 21090)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07722766697406769
    2. 'radius' → logprob: -3.3272275924682617
    3. ' r' → logprob: -3.4522275924682617
    4. ' radius' → logprob: -5.327227592468262
    5. 'ball' → logprob: -6.577227592468262
    6. ' ball' → logprob: -8.702227592468262
    7. '
' → logprob: -9.327227592468262
    8. '_radius' → logprob: -9.952227592468262
    9. '   ' → logprob: -10.077227592468262
    10. ' ' → logprob: -10.202227592468262

Token 1586: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2374621331691742
    2. ',' → logprob: -2.237462043762207
    3. ' r' → logprob: -3.112462043762207
    4. '_r' → logprob: -3.487462043762207
    5. 'def' → logprob: -4.612462043762207
    6. '(r' → logprob: -4.862462043762207
    7. ' ,' → logprob: -5.987462043762207
    8. '_,' → logprob: -6.112462043762207
    9. '   ' → logprob: -6.362462043762207
    10. ',r' → logprob: -6.987462043762207

Token 1587: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5590950846672058
    2. ':' → logprob: -1.3090951442718506
    3. '   ' → logprob: -1.9340951442718506
    4. '):' → logprob: -5.0590949058532715
    5. ':
' → logprob: -5.1840949058532715
    6. ',
' → logprob: -8.05909538269043
    7. '):
' → logprob: -8.18409538269043
    8. ' ,' → logprob: -8.43409538269043
    9. '
' → logprob: -8.55909538269043
    10. ' for' → logprob: -9.05909538269043

Token 1588: ' check' (ID: 2371)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04459040239453316
    2. ' for' → logprob: -4.669590473175049
    3. '
' → logprob: -4.919590473175049
    4. ' ' → logprob: -5.169590473175049
    5. '\t' → logprob: -5.294590473175049
    6. '```' → logprob: -5.794590473175049
    7. ' ' → logprob: -5.919590473175049
    8. '    
' → logprob: -6.294590473175049
    9. ' 
' → logprob: -6.419590473175049
    10. ' return' → logprob: -7.294590473175049

Token 1589: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.37057074904441833
    2. '   ' → logprob: -1.4955707788467407
    3. 'if' → logprob: -2.745570659637451
    4. 'def' → logprob: -5.495570659637451
    5. ' whether' → logprob: -5.745570659637451
    6. '	if' → logprob: -5.870570659637451
    7. 'whether' → logprob: -5.870570659637451
    8. ' ' → logprob: -6.745570659637451
    9. '
' → logprob: -7.120570659637451
    10. ':' → logprob: -7.120570659637451

Token 1590: ' ball' (ID: 7880)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3037292957305908
    2. 'all' → logprob: -2.678729295730591
    3. 'not' → logprob: -3.053729295730591
    4. 'r' → logprob: -3.553729295730591
    5. 'any' → logprob: -3.553729295730591
    6. ' not' → logprob: -3.678729295730591
    7. ' any' → logprob: -3.928729295730591
    8. ' max' → logprob: -4.178729057312012
    9. 'ball' → logprob: -4.303729057312012
    10. ' all' → logprob: -5.053729057312012

Token 1591: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.2733096480369568
    2. ' can' → logprob: -1.6483097076416016
    3. 'coll' → logprob: -4.398309707641602
    4. '#' → logprob: -5.023309707641602
    5. '_can' → logprob: -5.148309707641602
    6. 's' → logprob: -5.273309707641602
    7. '   ' → logprob: -5.273309707641602
    8. 'roll' → logprob: -5.898309707641602
    9. '```' → logprob: -6.398309707641602
    10. ''s' → logprob: -7.398309707641602

Token 1592: ' roll' (ID: 8465)
  Prédit: 'roll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roll' → logprob: -0.015320857055485249
    2. ' roll' → logprob: -4.265320777893066
    3. 'pass' → logprob: -7.640320777893066
    4. 'travel' → logprob: -8.515320777893066
    5. 'move' → logprob: -8.640320777893066
    6. '_roll' → logprob: -8.890320777893066
    7. 'be' → logprob: -10.765320777893066
    8. ' ' → logprob: -10.890320777893066
    9. 'go' → logprob: -11.265320777893066
    10. ' travel' → logprob: -11.390320777893066

Token 1593: ' from' (ID: 591)
  Prédit: 'without'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'without' → logprob: -1.0773814916610718
    2. 'from' → logprob: -1.2023814916610718
    3. 'through' → logprob: -2.2023816108703613
    4. ' without' → logprob: -2.7023816108703613
    5. ' through' → logprob: -3.0773816108703613
    6. '(s' → logprob: -3.2023816108703613
    7. ' from' → logprob: -3.9523816108703613
    8. ' along' → logprob: -4.577381610870361
    9. '(r' → logprob: -4.952381610870361
    10. '   ' → logprob: -4.952381610870361

Token 1594: ' start' (ID: 1604)
  Prédit: 'sx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sx' → logprob: -0.03850202634930611
    2. ' sx' → logprob: -3.4135019779205322
    3. '(s' → logprob: -5.413502216339111
    4. ' (' → logprob: -8.413501739501953
    5. 'start' → logprob: -9.788501739501953
    6. 's' → logprob: -10.163501739501953
    7. '
' → logprob: -11.163501739501953
    8. '```' → logprob: -11.663501739501953
    9. '   ' → logprob: -12.163501739501953
    10. ' start' → logprob: -12.538501739501953

Token 1595: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.47416168451309204
    2. ' to' → logprob: -1.4741616249084473
    3. '(s' → logprob: -1.9741616249084473
    4. 'sx' → logprob: -5.849161624908447
    5. 's' → logprob: -6.099161624908447
    6. '```' → logprob: -6.474161624908447
    7. '_s' → logprob: -7.349161624908447
    8. ',' → logprob: -7.599161624908447
    9. '(r' → logprob: -7.974161624908447
    10. '(' → logprob: -7.974161624908447

Token 1596: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.038183555006980896
    2. ' end' → logprob: -3.2881834506988525
    3. 'finish' → logprob: -8.913183212280273
    4. ' finish' → logprob: -12.413183212280273
    5. 'stop' → logprob: -13.288183212280273
    6. '=end' → logprob: -14.538183212280273
    7. ' ' → logprob: -15.663183212280273
    8. ',end' → logprob: -15.788183212280273
    9. 'goal' → logprob: -15.913183212280273
    10. '   ' → logprob: -16.288183212280273

Token 1597: '
' (ID: 198)
  Prédit: ' without'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' without' → logprob: -0.8210620880126953
    2. 'without' → logprob: -0.9460620880126953
    3. '   ' → logprob: -2.6960620880126953
    4. '```' → logprob: -3.8210620880126953
    5. 'with' → logprob: -4.571062088012695
    6. '(' → logprob: -4.821062088012695
    7. '(s' → logprob: -4.821062088012695
    8. '(r' → logprob: -4.946062088012695
    9. 'def' → logprob: -4.946062088012695
    10. ':
' → logprob: -4.946062088012695

Token 1598: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01660022884607315
    2. '
' → logprob: -5.266600131988525
    3. '```' → logprob: -5.516600131988525
    4. ' without' → logprob: -6.141600131988525
    5. ' for' → logprob: -7.016600131988525
    6. '(' → logprob: -7.266600131988525
    7. ' with' → logprob: -7.641600131988525
    8. ',' → logprob: -7.641600131988525
    9. 'def' → logprob: -7.641600131988525
    10. ':' → logprob: -7.891600131988525

Token 1599: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07568204402923584
    2. '
' → logprob: -2.8256821632385254
    3. '    
' → logprob: -5.950682163238525
    4. '```' → logprob: -5.950682163238525
    5. ' for' → logprob: -6.075682163238525
    6. 'for' → logprob: -6.325682163238525
    7. 'def' → logprob: -6.575682163238525
    8. ':' → logprob: -7.075682163238525
    9. '(
' → logprob: -7.825682163238525
    10. '  
' → logprob: -8.200681686401367

Token 1600: ' without' (ID: 2935)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20083414018154144
    2. 'for' → logprob: -2.575834035873413
    3. 'def' → logprob: -2.700834035873413
    4. ' for' → logprob: -3.325834035873413
    5. '```' → logprob: -6.825834274291992
    6. 'import' → logprob: -7.200834274291992
    7. '
' → logprob: -7.700834274291992
    8. ' def' → logprob: -9.325834274291992
    9. 'ball' → logprob: -9.450834274291992
    10. 'if' → logprob: -9.700834274291992

Token 1601: ' collision' (ID: 34967)
  Prédit: 'coll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coll' → logprob: -0.58756422996521
    2. ' coll' → logprob: -0.83756422996521
    3. 'any' → logprob: -5.587564468383789
    4. ' any' → logprob: -5.837564468383789
    5. 'collision' → logprob: -5.962564468383789
    6. ' collisions' → logprob: -6.962564468383789
    7. 'inter' → logprob: -8.087564468383789
    8. ' collision' → logprob: -8.212564468383789
    9. 'touch' → logprob: -8.212564468383789
    10. ' touching' → logprob: -8.462564468383789

Token 1602: '
    
' (ID: 15698)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5778002142906189
    2. '   ' → logprob: -1.2028002738952637
    3. ':' → logprob: -2.5778002738952637
    4. '(
' → logprob: -4.077800273895264
    5. '(r' → logprob: -4.202800273895264
    6. ',' → logprob: -5.202800273895264
    7. ':
' → logprob: -5.327800273895264
    8. ' and' → logprob: -5.702800273895264
    9. 'def' → logprob: -6.202800273895264
    10. ' (' → logprob: -6.202800273895264

Token 1603: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012485662009567022
    2. '
' → logprob: -7.876248359680176
    3. '```' → logprob: -7.876248359680176
    4. 'for' → logprob: -8.251248359680176
    5. 'def' → logprob: -9.376248359680176
    6. ' for' → logprob: -9.626248359680176
    7. '    
' → logprob: -10.376248359680176
    8. 'import' → logprob: -11.001248359680176
    9. '``' → logprob: -11.626248359680176
    10. ':' → logprob: -12.501248359680176

Token 1604: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.019944224506616592
    2. 'ball' → logprob: -4.394944190979004
    3. '   ' → logprob: -5.769944190979004
    4. 't' → logprob: -6.519944190979004
    5. '#' (adapté à ' #') → logprob: -7.269944190979004
    6. 'def' → logprob: -7.894944190979004
    7. 'step' → logprob: -7.894944190979004
    8. 'dx' → logprob: -8.519944190979004
    9. 'line' → logprob: -9.144944190979004
    10. 'eps' → logprob: -9.394944190979004

Token 1605: ' The' (ID: 623)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09122540801763535
    2. 'ball' → logprob: -2.7162253856658936
    3. '#' → logprob: -4.966225624084473
    4. 't' → logprob: -5.841225624084473
    5. 'cx' → logprob: -5.966225624084473
    6. 'px' → logprob: -6.216225624084473
    7. 'pos' → logprob: -6.591225624084473
    8. 'sx' → logprob: -7.091225624084473
    9. 'def' → logprob: -7.216225624084473
    10. '   ' → logprob: -7.966225624084473

Token 1606: ' ball' (ID: 7880)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9025155901908875
    2. '#' → logprob: -1.5275156497955322
    3. 'ball' → logprob: -2.1525156497955322
    4. ' for' → logprob: -2.9025156497955322
    5. 'def' → logprob: -2.9025156497955322
    6. 'cx' → logprob: -2.9025156497955322
    7. 'sx' → logprob: -3.4025156497955322
    8. 'r' → logprob: -4.902515411376953
    9. '
' → logprob: -5.027515411376953
    10. '   ' → logprob: -5.277515411376953

Token 1607: ' center' (ID: 6170)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.524733304977417
    2. ' center' → logprob: -1.899733304977417
    3. '_center' → logprob: -2.149733304977417
    4. ' is' → logprob: -2.899733304977417
    5. 'center' → logprob: -3.024733304977417
    6. ''s' → logprob: -4.649733543395996
    7. 'is' → logprob: -5.524733543395996
    8. ' radius' → logprob: -5.774733543395996
    9. '_radius' → logprob: -5.899733543395996
    10. '_c' → logprob: -6.024733543395996

Token 1608: ' path' (ID: 3104)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.29436466097831726
    2. ' is' → logprob: -2.1693646907806396
    3. '_z' → logprob: -3.0443646907806396
    4. ' =' → logprob: -3.4193646907806396
    5. '_y' → logprob: -4.2943644523620605
    6. 'is' → logprob: -4.4193644523620605
    7. 'z' → logprob: -4.9193644523620605
    8. 'x' → logprob: -5.1693644523620605
    9. '=' → logprob: -5.6693644523620605
    10. '   ' → logprob: -5.9193644523620605

Token 1609: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4858332872390747
    2. '=' → logprob: -1.4858332872390747
    3. ' is' → logprob: -2.485833168029785
    4. 'is' → logprob: -3.110833168029785
    5. '_x' → logprob: -4.110833168029785
    6. 's' → logprob: -5.610833168029785
    7. 'x' → logprob: -6.110833168029785
    8. '_is' → logprob: -6.735833168029785
    9. '   ' → logprob: -6.860833168029785
    10. '_length' → logprob: -7.985833168029785

Token 1610: ' offset' (ID: 8985)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7366077899932861
    2. '(s' → logprob: -1.4866077899932861
    3. '(' → logprob: -2.111607789993286
    4. '((' → logprob: -2.236607789993286
    5. '(
' → logprob: -3.861607789993286
    6. ' ((' → logprob: -4.111607551574707
    7. '[(' → logprob: -4.236607551574707
    8. '   ' → logprob: -5.486607551574707
    9. '[
' → logprob: -5.861607551574707
    10. ' [(' → logprob: -5.861607551574707

Token 1611: ' r' (ID: 428)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.17293880879878998
    2. ' from' → logprob: -3.297938823699951
    3. 'from' → logprob: -3.297938823699951
    4. 'd' → logprob: -4.297938823699951
    5. ' =' → logprob: -4.422938823699951
    6. 's' → logprob: -4.672938823699951
    7. ' ' → logprob: -4.797938823699951
    8. '   ' → logprob: -4.922938823699951
    9. 'ted' → logprob: -5.172938823699951
    10. 'ed' → logprob: -5.422938823699951

Token 1612: ' above' (ID: 5151)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.2667896747589111
    2. ',' → logprob: -1.3917896747589111
    3. 'def' → logprob: -2.016789674758911
    4. 's' → logprob: -2.391789674758911
    5. '   ' → logprob: -2.516789674758911
    6. ')' → logprob: -3.141789674758911
    7. 'distance' → logprob: -4.391789436340332
    8. ' from' → logprob: -4.516789436340332
    9. '*' → logprob: -4.641789436340332
    10. '(s' → logprob: -4.891789436340332

Token 1613: ' bottom' (ID: 8725)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.02897861786186695
    2. ' the' → logprob: -4.1539788246154785
    3. 'ground' → logprob: -4.6539788246154785
    4. 'plane' → logprob: -6.1539788246154785
    5. ' ground' → logprob: -7.9039788246154785
    6. '0' → logprob: -8.02897834777832
    7. ' plane' → logprob: -8.77897834777832
    8. 'line' → logprob: -9.15397834777832
    9. 'def' → logprob: -9.40397834777832
    10. '<|end|>' → logprob: -9.40397834777832

Token 1614: ' point' (ID: 2438)
  Prédit: 'plane'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plane' → logprob: -0.9046050310134888
    2. '   ' → logprob: -1.5296050310134888
    3. ' plane' → logprob: -1.5296050310134888
    4. ',' → logprob: -3.029604911804199
    5. ')' → logprob: -3.779604911804199
    6. 'def' → logprob: -4.029604911804199
    7. '_plane' → logprob: -4.279604911804199
    8. 'z' → logprob: -4.404604911804199
    9. '
' → logprob: -4.404604911804199
    10. '<|end|>' → logprob: -5.029604911804199

Token 1615: ' on' (ID: 402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5507095456123352
    2. '   ' → logprob: -1.0507094860076904
    3. ',' → logprob: -4.1757097244262695
    4. '):' → logprob: -4.4257097244262695
    5. '
' → logprob: -4.6757097244262695
    6. ':
' → logprob: -4.8007097244262695
    7. 'def' → logprob: -5.5507097244262695
    8. '    
' → logprob: -5.8007097244262695
    9. '<|end|>' → logprob: -5.9257097244262695
    10. ' :' → logprob: -6.4257097244262695

Token 1616: ' plane' (ID: 16499)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.36981573700904846
    2. 'plane' → logprob: -2.1198158264160156
    3. 'line' → logprob: -2.6198158264160156
    4. 'course' → logprob: -2.6198158264160156
    5. 'def' → logprob: -4.244815826416016
    6. 'ground' → logprob: -5.119815826416016
    7. ' the' → logprob: -5.119815826416016
    8. 'surface' → logprob: -5.744815826416016
    9. '0' → logprob: -5.994815826416016
    10. ' plane' → logprob: -6.369815826416016

Token 1617: ' z' (ID: 579)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45086967945098877
    2. '
' → logprob: -1.0758696794509888
    3. '    
' → logprob: -3.950869560241699
    4. 'def' → logprob: -6.825869560241699
    5. ',' → logprob: -7.575869560241699
    6. '  
' → logprob: -8.9508695602417
    7. '   
' → logprob: -8.9508695602417
    8. 'for' → logprob: -9.2008695602417
    9. '
' → logprob: -9.5758695602417
    10. ')' → logprob: -9.7008695602417

Token 1618: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015214069280773401
    2. ' =' → logprob: -6.501521587371826
    3. '   ' → logprob: -11.751521110534668
    4. '0' → logprob: -12.751521110534668
    5. '=
' → logprob: -12.876521110534668
    6. ',' → logprob: -13.876521110534668
    7. '```' → logprob: -14.376521110534668
    8. '+=' → logprob: -14.376521110534668
    9. '=\' → logprob: -14.501521110534668
    10. '+' → logprob: -14.626521110534668

Token 1619: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -16.375003814697266
    4. '   ' → logprob: -17.625003814697266
    5. 'plane' → logprob: -17.625003814697266
    6. '``' → logprob: -17.750003814697266
    7. '
' → logprob: -18.125003814697266
    8. '=' → logprob: -18.500003814697266
    9. ',' → logprob: -18.625003814697266
    10. ' plane' → logprob: -18.625003814697266

Token 1620: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5790444612503052
    2. ':' → logprob: -1.3290444612503052
    3. '
' → logprob: -2.5790443420410156
    4. ':
' → logprob: -2.8290443420410156
    5. 'def' → logprob: -4.329044342041016
    6. '    
' → logprob: -4.329044342041016
    7. '):' → logprob: -5.579044342041016
    8. '```' → logprob: -6.204044342041016
    9. '):
' → logprob: -6.454044342041016
    10. ',' → logprob: -6.829044342041016

Token 1621: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004247100558131933
    2. '#' → logprob: -7.254247188568115
    3. ' and' → logprob: -7.379247188568115
    4. 'and' → logprob: -7.629247188568115
    5. ' ' → logprob: -8.004246711730957
    6. 'r' → logprob: -8.004246711730957
    7. 'def' → logprob: -8.254246711730957
    8. ')' → logprob: -8.379246711730957
    9. '    
' → logprob: -8.504246711730957
    10. '
' → logprob: -8.879246711730957

Token 1622: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010313507169485092
    2. '#' (adapté à ' #') → logprob: -4.760313510894775
    3. ' ' → logprob: -7.260313510894775
    4. '    
' → logprob: -8.385313034057617
    5. ''' → logprob: -8.760313034057617
    6. '       ' → logprob: -9.135313034057617
    7. 'and' → logprob: -9.385313034057617
    8. '  ' → logprob: -9.635313034057617
    9. ')' → logprob: -9.760313034057617
    10. '    ' → logprob: -10.135313034057617

Token 1623: ' but' (ID: 889)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0065030320547521114
    2. '
' → logprob: -6.006503105163574
    3. ' for' → logprob: -6.381503105163574
    4. 'for' → logprob: -7.381503105163574
    5. '    
' → logprob: -7.506503105163574
    6. '#' → logprob: -8.381503105163574
    7. ' ' → logprob: -8.631503105163574
    8. ' line' → logprob: -8.881503105163574
    9. ' indentation' → logprob: -9.256503105163574
    10. ' so' → logprob: -9.506503105163574

Token 1624: ' bottom' (ID: 8725)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.609152615070343
    2. 'the' → logprob: -1.9841525554656982
    3. ' all' → logprob: -2.3591525554656982
    4. '   ' → logprob: -2.6091525554656982
    5. ' not' → logprob: -2.7341525554656982
    6. 'all' → logprob: -4.359152793884277
    7. 'not' → logprob: -4.484152793884277
    8. ' for' → logprob: -4.484152793884277
    9. 'r' → logprob: -4.859152793884277
    10. ' any' → logprob: -5.234152793884277

Token 1625: ' point' (ID: 2438)
  Prédit: ' point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.8201600313186646
    2. 'point' → logprob: -1.0701600313186646
    3. '_point' → logprob: -2.070159912109375
    4. '   ' → logprob: -4.445159912109375
    5. '_token' → logprob: -4.445159912109375
    6. ' _' → logprob: -4.570159912109375
    7. '
' → logprob: -4.570159912109375
    8. '_' → logprob: -4.570159912109375
    9. ' token' → logprob: -4.820159912109375
    10. 'token' → logprob: -5.820159912109375

Token 1626: ' moves' (ID: 19523)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.18905101716518402
    2. ' must' → logprob: -2.3140509128570557
    3. ' on' → logprob: -4.189051151275635
    4. ' remains' → logprob: -4.564051151275635
    5. ' continues' → logprob: -4.689051151275635
    6. 'is' → logprob: -5.189051151275635
    7. ' of' → logprob: -5.439051151275635
    8. ' can' → logprob: -5.564051151275635
    9. 'must' → logprob: -5.939051151275635
    10. '<|end|>' → logprob: -6.064051151275635

Token 1627: ' along' (ID: 4251)
  Prédit: 'along'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'along' → logprob: -1.2520151138305664
    2. 'on' → logprob: -1.5020151138305664
    3. ' along' → logprob: -2.0020151138305664
    4. ' on' → logprob: -2.3770151138305664
    5. 'r' → logprob: -2.7520151138305664
    6. 'in' → logprob: -3.7520151138305664
    7. 'through' → logprob: -3.8770151138305664
    8. 'at' → logprob: -4.002015113830566
    9. 'from' → logprob: -4.502015113830566
    10. ' over' → logprob: -4.502015113830566

Token 1628: ' straight' (ID: 10230)
  Prédit: 'sx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sx' → logprob: -0.7096030116081238
    2. '(s' → logprob: -0.9596030116081238
    3. ' (' → logprob: -2.8346030712127686
    4. ' sx' → logprob: -3.3346030712127686
    5. 'ex' → logprob: -4.4596028327941895
    6. '(ex' → logprob: -4.5846028327941895
    7. 'the' → logprob: -5.5846028327941895
    8. 'line' → logprob: -6.7096028327941895
    9. ' the' → logprob: -6.9596028327941895
    10. '[s' → logprob: -6.9596028327941895

Token 1629: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.39546671509742737
    2. 'line' → logprob: -1.145466685295105
    3. 'segment' → logprob: -4.8954668045043945
    4. ' segment' → logprob: -7.1454668045043945
    5. '_line' → logprob: -8.895466804504395
    6. '-line' → logprob: -10.145466804504395
    7. ' ' → logprob: -10.895466804504395
    8. '   ' → logprob: -11.020466804504395
    9. 's' → logprob: -11.145466804504395
    10. 'path' → logprob: -11.645466804504395

Token 1630: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21869638562202454
    2. '
' → logprob: -1.7186963558197021
    3. '    
' → logprob: -4.218696594238281
    4. ',' → logprob: -7.218696594238281
    5. 'def' → logprob: -7.468696594238281
    6. ':' → logprob: -8.968696594238281
    7. '```' → logprob: -8.968696594238281
    8. '  
' → logprob: -9.218696594238281
    9. 'for' → logprob: -9.468696594238281
    10. ' for' → logprob: -9.468696594238281

Token 1631: 'sx' (ID: 102754)
  Prédit: 'sx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sx' → logprob: -0.019188828766345978
    2. ' sx' → logprob: -4.01918888092041
    3. '(s' → logprob: -8.14418888092041
    4. ')' → logprob: -8.39418888092041
    5. ' (' → logprob: -8.39418888092041
    6. 's' → logprob: -9.76918888092041
    7. '
' → logprob: -10.14418888092041
    8. '   ' → logprob: -10.14418888092041
    9. ''s' → logprob: -10.64418888092041
    10. ')
' → logprob: -11.14418888092041

Token 1632: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029580891132354736
    2. ' ,' → logprob: -5.877958297729492
    3. ',
' → logprob: -9.752958297729492
    4. '+' → logprob: -10.002958297729492
    5. ',s' → logprob: -10.502958297729492
    6. ',y' → logprob: -12.877958297729492
    7. '+,' → logprob: -12.877958297729492
    8. ')' → logprob: -13.002958297729492
    9. ',r' → logprob: -13.002958297729492
    10. ' +' → logprob: -13.252958297729492

Token 1633: 'sy' (ID: 5611)
  Prédit: 'sy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sy' → logprob: -0.04860281944274902
    2. ' sy' → logprob: -3.048602819442749
    3. '_sy' → logprob: -11.173603057861328
    4. 'Sy' → logprob: -15.048603057861328
    5. ')' → logprob: -15.173603057861328
    6. '.sy' → logprob: -15.798603057861328
    7. 'syz' → logprob: -16.423603057861328
    8. ',' → logprob: -16.548603057861328
    9. 's' → logprob: -16.548603057861328
    10. 'ay' → logprob: -16.673603057861328

Token 1634: ')-(' (ID: 111485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12140966951847076
    2. ')' → logprob: -2.4964096546173096
    3. '),' → logprob: -3.7464096546173096
    4. ',
' → logprob: -5.621409893035889
    5. ' ,' → logprob: -5.996409893035889
    6. '),(' → logprob: -6.996409893035889
    7. ',r' → logprob: -8.49640941619873
    8. ')->' → logprob: -8.74640941619873
    9. '),
' → logprob: -9.12140941619873
    10. '   ' → logprob: -9.24640941619873

Token 1635: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0002966127940453589
    2. ' ex' → logprob: -8.125296592712402
    3. 'ey' → logprob: -14.625296592712402
    4. '(ex' → logprob: -16.37529754638672
    5. '	ex' → logprob: -17.12529754638672
    6. 'e' → logprob: -18.12529754638672
    7. ''ex' → logprob: -18.50029754638672
    8. 'x' → logprob: -18.50029754638672
    9. ',' → logprob: -18.62529754638672
    10. ')' → logprob: -18.87529754638672

Token 1636: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008642955799587071
    2. ' ,' → logprob: -7.375864505767822
    3. ',
' → logprob: -9.375864028930664
    4. ',r' → logprob: -10.125864028930664
    5. '),' → logprob: -10.250864028930664
    6. ')' → logprob: -10.250864028930664
    7. 'r' → logprob: -11.375864028930664
    8. ',end' → logprob: -12.250864028930664
    9. '_,' → logprob: -12.375864028930664
    10. '<|end|>' → logprob: -12.375864028930664

Token 1637: 'ey' (ID: 806)
  Prédit: 'ey'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ey' → logprob: -0.0001805377542041242
    2. ' ey' → logprob: -8.6251802444458
    3. 'eyey' → logprob: -14.7501802444458
    4. ',' → logprob: -15.6251802444458
    5. '
' → logprob: -16.250181198120117
    6. 'ay' → logprob: -16.875181198120117
    7. ')' → logprob: -17.125181198120117
    8. '```' → logprob: -17.375181198120117
    9. ' ' → logprob: -17.625181198120117
    10. 'eye' → logprob: -17.750181198120117

Token 1638: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010087174363434315
    2. '):' → logprob: -5.135087013244629
    3. ').' → logprob: -6.135087013244629
    4. '   ' → logprob: -7.010087013244629
    5. ')
' → logprob: -7.510087013244629
    6. '):
' → logprob: -8.135087013244629
    7. '),' → logprob: -9.510087013244629
    8. '):

' → logprob: -9.885087013244629
    9. '.' → logprob: -10.510087013244629
    10. ',' → logprob: -10.635087013244629

Token 1639: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013362566940486431
    2. '
' → logprob: -4.513362407684326
    3. '    
' → logprob: -6.263362407684326
    4. ' for' → logprob: -8.638362884521484
    5. ',' → logprob: -9.638362884521484
    6. '```' → logprob: -10.013362884521484
    7. ')' → logprob: -10.638362884521484
    8. 'for' → logprob: -10.888362884521484
    9. '  
' → logprob: -11.263362884521484
    10. '   
' → logprob: -11.388362884521484

Token 1640: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024731589946895838
    2. 'for' → logprob: -6.5024733543396
    3. '
' → logprob: -7.5024733543396
    4. ' for' → logprob: -8.002472877502441
    5. '    
' → logprob: -9.627472877502441
    6. 'def' → logprob: -12.127472877502441
    7. '```' → logprob: -12.377472877502441
    8. '   ' → logprob: -12.877472877502441
    9. '	for' → logprob: -13.002472877502441
    10. 'import' → logprob: -14.127472877502441

Token 1641: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19007425010204315
    2. '   ' → logprob: -1.8150742053985596
    3. 'ball' → logprob: -4.940074443817139
    4. 'center' → logprob: -6.940074443817139
    5. ' for' → logprob: -7.940074443817139
    6. 'cx' → logprob: -7.940074443817139
    7. 'height' → logprob: -8.06507396697998
    8. 'offset' → logprob: -8.69007396697998
    9. '#' (adapté à ' #') → logprob: -8.81507396697998
    10. 'path' → logprob: -9.06507396697998

Token 1642: ' The' (ID: 623)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20439088344573975
    2. 'ball' → logprob: -2.5793910026550293
    3. 'center' → logprob: -2.8293910026550293
    4. 'cx' → logprob: -3.7043910026550293
    5. '#' → logprob: -4.829391002655029
    6. '   ' → logprob: -5.079391002655029
    7. 'path' → logprob: -6.204391002655029
    8. 'def' → logprob: -6.579391002655029
    9. 'height' → logprob: -6.579391002655029
    10. 'if' → logprob: -6.704391002655029

Token 1643: ' ball' (ID: 7880)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5064882040023804
    2. 'cx' → logprob: -1.6314882040023804
    3. 'ball' → logprob: -2.88148832321167
    4. 'center' → logprob: -3.00648832321167
    5. ' for' → logprob: -3.63148832321167
    6. 'def' → logprob: -4.13148832321167
    7. 'px' → logprob: -4.25648832321167
    8. '   ' → logprob: -4.75648832321167
    9. '#' → logprob: -5.13148832321167
    10. 'path' → logprob: -5.13148832321167

Token 1644: ' bottom' (ID: 8725)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.6856359839439392
    2. '_center' → logprob: -1.060636043548584
    3. '_x' → logprob: -2.435636043548584
    4. ' center' → logprob: -3.185636043548584
    5. '
' → logprob: -4.935636043548584
    6. '   ' → logprob: -5.185636043548584
    7. '#' → logprob: -6.935636043548584
    8. ''s' → logprob: -7.060636043548584
    9. '_y' → logprob: -7.185636043548584
    10. '_c' → logprob: -7.310636043548584

Token 1645: ' never' (ID: 3779)
  Prédit: ' path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' path' → logprob: -1.16446852684021
    2. '_x' → logprob: -1.66446852684021
    3. '_path' → logprob: -1.91446852684021
    4. 'point' → logprob: -2.28946852684021
    5. 'path' → logprob: -2.66446852684021
    6. ' point' → logprob: -3.16446852684021
    7. '   ' → logprob: -3.41446852684021
    8. ' moves' → logprob: -3.78946852684021
    9. '_point' → logprob: -4.664468765258789
    10. ' center' → logprob: -4.789468765258789

Token 1646: ' leaves' (ID: 15657)
  Prédit: ' touches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' touches' → logprob: -0.6197713017463684
    2. 'moves' → logprob: -2.2447712421417236
    3. 'touch' → logprob: -2.3697712421417236
    4. 'le' → logprob: -2.8697712421417236
    5. '```' → logprob: -3.6197712421417236
    6. 'desc' → logprob: -3.7447712421417236
    7. ' goes' → logprob: -3.7447712421417236
    8. ' leaves' → logprob: -3.8697712421417236
    9. 'go' → logprob: -3.8697712421417236
    10. ' desc' → logprob: -4.494771480560303

Token 1647: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.26700666546821594
    2. ' the' → logprob: -2.0170066356658936
    3. ' (' → logprob: -2.6420066356658936
    4. '(' → logprob: -4.892006874084473
    5. 'line' → logprob: -5.017006874084473
    6. ' line' → logprob: -5.142006874084473
    7. '0' → logprob: -5.767006874084473
    8. '(s' → logprob: -6.392006874084473
    9. 'plane' → logprob: -6.892006874084473
    10. ' plane' → logprob: -7.017006874084473

Token 1648: ' course' (ID: 4165)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.4177532196044922
    2. 'plane' → logprob: -1.6677532196044922
    3. ' line' → logprob: -2.542753219604492
    4. 'ground' → logprob: -4.042753219604492
    5. ' plane' → logprob: -4.167753219604492
    6. 'course' → logprob: -4.417753219604492
    7. '(s' → logprob: -4.417753219604492
    8. '(x' → logprob: -5.667753219604492
    9. ' (' → logprob: -5.917753219604492
    10. 'surface' → logprob: -6.167753219604492

Token 1649: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045408740639686584
    2. '
' → logprob: -3.6704087257385254
    3. '    
' → logprob: -4.795408725738525
    4. 'line' → logprob: -5.545408725738525
    5. ' line' → logprob: -6.170408725738525
    6. ',' → logprob: -6.420408725738525
    7. 'def' → logprob: -7.170408725738525
    8. '_line' → logprob: -7.670408725738525
    9. ')' → logprob: -8.295409202575684
    10. '.' → logprob: -8.420409202575684

Token 1650: ' segment' (ID: 14806)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28468796610832214
    2. '
' → logprob: -1.9096879959106445
    3. '    
' → logprob: -2.4096879959106445
    4. ':' → logprob: -5.9096879959106445
    5. '  
' → logprob: -6.9096879959106445
    6. ',' → logprob: -6.9096879959106445
    7. '   
' → logprob: -7.1596879959106445
    8. '<|end|>' → logprob: -7.5346879959106445
    9. 'def' → logprob: -7.9096879959106445
    10. 'for' → logprob: -8.034687995910645

Token 1651: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1377936601638794
    2. '
' → logprob: -2.13779354095459
    3. '    
' → logprob: -4.63779354095459
    4. 'for' → logprob: -8.26279354095459
    5. ',' → logprob: -8.63779354095459
    6. ' for' → logprob: -8.76279354095459
    7. '   
' → logprob: -8.76279354095459
    8. '  
' → logprob: -9.51279354095459
    9. 'def' → logprob: -10.01279354095459
    10. ':' → logprob: -10.26279354095459

Token 1652: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3100407123565674
    2. '
' → logprob: -1.5600407123565674
    3. '    
' → logprob: -3.6850407123565674
    4. ' for' → logprob: -3.8100407123565674
    5. 'for' → logprob: -4.810040473937988
    6. ' 
' → logprob: -7.935040473937988
    7. '  
' → logprob: -8.560040473937988
    8. '   
' → logprob: -8.935040473937988
    9. '        
' → logprob: -9.435040473937988
    10. '```' → logprob: -10.185040473937988

Token 1653: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3916466534137726
    2. 'for' → logprob: -1.1416466236114502
    3. 'ball' → logprob: -6.266646862030029
    4. ' for' → logprob: -7.516646862030029
    5. 'dx' → logprob: -7.641646862030029
    6. 'cx' → logprob: -7.766646862030029
    7. 'line' → logprob: -8.141646385192871
    8. 'center' → logprob: -8.641646385192871
    9. 'def' → logprob: -8.891646385192871
    10. '
' → logprob: -8.891646385192871

Token 1654: ' Check' (ID: 6208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.022321781143546104
    2. '   ' → logprob: -4.272321701049805
    3. 'center' → logprob: -5.522321701049805
    4. 'ball' → logprob: -6.272321701049805
    5. 'cx' → logprob: -7.147321701049805
    6. 'def' → logprob: -7.272321701049805
    7. 'height' → logprob: -8.897321701049805
    8. '```' → logprob: -9.022321701049805
    9. '
' → logprob: -9.147321701049805
    10. '#' → logprob: -9.772321701049805

Token 1655: ' the' (ID: 290)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05171401798725128
    2. '   ' → logprob: -3.3017139434814453
    3. ' for' → logprob: -4.301713943481445
    4. '	for' → logprob: -11.551713943481445
    5. '
' → logprob: -11.926713943481445
    6. 'import' → logprob: -12.176713943481445
    7. 'if' → logprob: -12.426713943481445
    8. ' ' → logprob: -13.426713943481445
    9. 'all' → logprob: -13.676713943481445
    10. '    
' → logprob: -13.801713943481445

Token 1656: ' ball' (ID: 7880)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.781997561454773
    2. ' for' → logprob: -1.406997561454773
    3. ' following' → logprob: -2.5319976806640625
    4. 'for' → logprob: -2.5319976806640625
    5. ' ' → logprob: -3.2819976806640625
    6. ' line' → logprob: -4.1569976806640625
    7. '
' → logprob: -4.2819976806640625
    8. '```' → logprob: -4.5319976806640625
    9. 'r' → logprob: -4.6569976806640625
    10. ' radius' → logprob: -5.0319976806640625

Token 1657: ' does' (ID: 2226)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.29349198937416077
    2. 'bottom' → logprob: -1.7934919595718384
    3. 'for' → logprob: -3.418492078781128
    4. '_x' → logprob: -4.418491840362549
    5. '_center' → logprob: -4.418491840362549
    6. '   ' → logprob: -4.668491840362549
    7. ' center' → logprob: -5.418491840362549
    8. '_bottom' → logprob: -5.543491840362549
    9. 'radius' → logprob: -5.793491840362549
    10. 'r' → logprob: -5.793491840362549

Token 1658: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.576020359992981
    2. ' not' → logprob: -0.826020359992981
    3. 'n't' → logprob: -9.701020240783691
    4. '_not' → logprob: -11.076020240783691
    5. '	not' → logprob: -13.076020240783691
    6. '```' → logprob: -13.451020240783691
    7. '   ' → logprob: -14.951020240783691
    8. '#' → logprob: -15.701020240783691
    9. '<|end|>' → logprob: -16.701021194458008
    10. '(not' → logprob: -16.826021194458008

Token 1659: ' collide' (ID: 133533)
  Prédit: ' collide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collide' → logprob: -1.196760654449463
    2. 'coll' → logprob: -1.321760654449463
    3. 'penetr' → logprob: -1.446760654449463
    4. 'inter' → logprob: -1.821760654449463
    5. ' intersect' → logprob: -4.446760654449463
    6. ' penetrate' → logprob: -4.821760654449463
    7. 'pass' → logprob: -5.196760654449463
    8. ' pass' → logprob: -5.571760654449463
    9. 'touch' → logprob: -6.446760654449463
    10. ' coll' → logprob: -6.571760654449463

Token 1660: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.25354889035224915
    2. ' with' → logprob: -1.5035488605499268
    3. '   ' → logprob: -6.753549098968506
    4. '	with' → logprob: -8.378548622131348
    5. '```' → logprob: -8.753548622131348
    6. '<|end|>' → logprob: -10.503548622131348
    7. '#' → logprob: -11.378548622131348
    8. '_with' → logprob: -11.753548622131348
    9. ' ' → logprob: -12.628548622131348
    10. '<|end|>' → logprob: -13.378548622131348

Token 1661: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.2546224594116211
    2. ' any' → logprob: -1.504622459411621
    3. 'blocks' → logprob: -6.254622459411621
    4. ' blocks' → logprob: -7.504622459411621
    5. 'block' → logprob: -9.129622459411621
    6. 'the' → logprob: -9.754622459411621
    7. ' block' → logprob: -11.004622459411621
    8. '   ' → logprob: -11.629622459411621
    9. ' the' → logprob: -11.754622459411621
    10. '```' → logprob: -11.754622459411621

Token 1662: ' block' (ID: 4355)
  Prédit: ' block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' block' → logprob: -0.0790400430560112
    2. 'block' → logprob: -2.579040050506592
    3. '   ' → logprob: -9.579039573669434
    4. ' blocks' → logprob: -10.579039573669434
    5. '(block' → logprob: -11.329039573669434
    6. ' ' → logprob: -11.454039573669434
    7. 'blocks' → logprob: -11.579039573669434
    8. '
' → logprob: -11.704039573669434
    9. '	block' → logprob: -11.954039573669434
    10. '  ' → logprob: -13.079039573669434

Token 1663: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004128622822463512
    2. '
' → logprob: -6.004128456115723
    3. '    
' → logprob: -6.879128456115723
    4. 'for' → logprob: -7.754128456115723
    5. ' for' → logprob: -8.754128456115723
    6. ':' → logprob: -11.254128456115723
    7. '  
' → logprob: -12.504128456115723
    8. '	for' → logprob: -13.004128456115723
    9. 'def' → logprob: -13.129128456115723
    10. ')' → logprob: -13.254128456115723

Token 1664: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001277853618375957
    2. 'for' → logprob: -7.251277923583984
    3. '
' → logprob: -8.376277923583984
    4. '```' → logprob: -9.126277923583984
    5. ' for' → logprob: -9.251277923583984
    6. '    
' → logprob: -9.376277923583984
    7. 'def' → logprob: -10.376277923583984
    8. '	for' → logprob: -11.626277923583984
    9. ')' → logprob: -13.626277923583984
    10. '   ' → logprob: -13.751277923583984

Token 1665: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02591611072421074
    2. '   ' → logprob: -4.27591609954834
    3. 'center' → logprob: -5.15091609954834
    4. 'ball' → logprob: -5.65091609954834
    5. 'def' → logprob: -7.02591609954834
    6. 'cx' → logprob: -7.90091609954834
    7. 'height' → logprob: -8.02591609954834
    8. 'r' → logprob: -8.52591609954834
    9. 'path' → logprob: -8.90091609954834
    10. 'h' → logprob: -9.52591609954834

Token 1666: ' The' (ID: 623)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9049611687660217
    2. 'ball' → logprob: -1.654961109161377
    3. 'def' → logprob: -2.529961109161377
    4. 'path' → logprob: -2.779961109161377
    5. 'line' → logprob: -3.029961109161377
    6. 'center' → logprob: -3.029961109161377
    7. 'dir' → logprob: -3.404961109161377
    8. 'cx' → logprob: -3.529961109161377
    9. 'dx' → logprob: -3.904961109161377
    10. 'bottom' → logprob: -4.029961109161377

Token 1667: ' ball' (ID: 7880)
  Prédit: ' ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ball' → logprob: -1.2832404375076294
    2. ' bottom' → logprob: -1.6582404375076294
    3. ' ' → logprob: -2.15824031829834
    4. 'bottom' → logprob: -2.90824031829834
    5. 'ball' → logprob: -3.28324031829834
    6. 'r' → logprob: -3.40824031829834
    7. ' #' → logprob: -3.53324031829834
    8. 'for' → logprob: -3.65824031829834
    9. ' ' → logprob: -3.78324031829834
    10. ' line' → logprob: -3.78324031829834

Token 1668: ' center' (ID: 6170)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.9852743148803711
    2. '_x' → logprob: -1.610274314880371
    3. 'center' → logprob: -1.985274314880371
    4. '_bottom' → logprob: -2.110274314880371
    5. ' bottom' → logprob: -2.735274314880371
    6. '_center' → logprob: -3.110274314880371
    7. '   ' → logprob: -4.110274314880371
    8. ' center' → logprob: -4.360274314880371
    9. 's' → logprob: -4.985274314880371
    10. 'x' → logprob: -5.110274314880371

Token 1669: ' is' (ID: 382)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.9795747995376587
    2. 'path' → logprob: -1.3545747995376587
    3. '_z' → logprob: -2.229574680328369
    4. 'height' → logprob: -2.604574680328369
    5. '_path' → logprob: -2.979574680328369
    6. 'z' → logprob: -2.979574680328369
    7. 'center' → logprob: -3.729574680328369
    8. 'x' → logprob: -3.854574680328369
    9. ' path' → logprob: -4.729574680328369
    10. '_height' → logprob: -5.104574680328369

Token 1670: ' at' (ID: 540)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.06616061180830002
    2. ' (' → logprob: -3.5661606788635254
    3. '(
' → logprob: -4.566160678863525
    4. '(' → logprob: -5.066160678863525
    5. '(lambda' → logprob: -5.066160678863525
    6. '(r' → logprob: -5.691160678863525
    7. '((' → logprob: -6.191160678863525
    8. 'r' → logprob: -6.566160678863525
    9. 'def' → logprob: -6.816160678863525
    10. 'sx' → logprob: -6.816160678863525

Token 1671: ' height' (ID: 4679)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.10371070355176926
    2. ' (' → logprob: -3.228710651397705
    3. '(lambda' → logprob: -3.853710651397705
    4. 'sx' → logprob: -3.978710651397705
    5. 'lambda' → logprob: -5.103710651397705
    6. '((' → logprob: -5.353710651397705
    7. '(' → logprob: -5.728710651397705
    8. 'def' → logprob: -7.353710651397705
    9. '(
' → logprob: -7.353710651397705
    10. '(x' → logprob: -7.478710651397705

Token 1672: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.026363812386989594
    2. ' r' → logprob: -3.6513638496398926
    3. '=' → logprob: -10.651363372802734
    4. '   ' → logprob: -11.401363372802734
    5. '0' → logprob: -11.776363372802734
    6. ' ' → logprob: -11.901363372802734
    7. ' =' → logprob: -12.151363372802734
    8. '+' → logprob: -13.276363372802734
    9. ' +' → logprob: -13.276363372802734
    10. '
' → logprob: -13.776363372802734

Token 1673: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16267135739326477
    2. '
' → logprob: -2.2876713275909424
    3. ',' → logprob: -3.5376713275909424
    4. '    
' → logprob: -4.2876715660095215
    5. ' and' → logprob: -6.6626715660095215
    6. ' at' → logprob: -7.0376715660095215
    7. '.' → logprob: -7.4126715660095215
    8. 'def' → logprob: -7.5376715660095215
    9. ')' → logprob: -8.162671089172363
    10. '\n' → logprob: -8.412671089172363

Token 1674: ' its' (ID: 1617)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049448203295469284
    2. '
' → logprob: -4.174448013305664
    3. ' for' → logprob: -4.549448013305664
    4. '#' → logprob: -5.049448013305664
    5. 'for' → logprob: -5.299448013305664
    6. ' and' → logprob: -5.924448013305664
    7. 'and' → logprob: -6.424448013305664
    8. ' so' → logprob: -6.424448013305664
    9. '    
' → logprob: -6.424448013305664
    10. ' radius' → logprob: -6.799448013305664

Token 1675: ' horizontal' (ID: 25511)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.7245627045631409
    2. 'bottom' → logprob: -1.349562644958496
    3. 'radius' → logprob: -2.349562644958496
    4. 'xy' → logprob: -2.974562644958496
    5. 'path' → logprob: -3.724562644958496
    6. 'projection' → logprob: -3.849562644958496
    7. 'center' → logprob: -4.224562644958496
    8. ' horizontal' → logprob: -4.974562644958496
    9. 'base' → logprob: -5.099562644958496
    10. 'vertical' → logprob: -5.224562644958496

Token 1676: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.19082403182983398
    2. 'center' → logprob: -2.815824031829834
    3. 'path' → logprob: -2.940824031829834
    4. 'distance' → logprob: -3.190824031829834
    5. 'coordinate' → logprob: -5.065824031829834
    6. 'coordinates' → logprob: -5.565824031829834
    7. 'radius' → logprob: -5.690824031829834
    8. 'projection' → logprob: -6.065824031829834
    9. ' position' → logprob: -7.315824031829834
    10. 'line' → logprob: -7.565824031829834

Token 1677: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8037847280502319
    2. ' is' → logprob: -1.553784728050232
    3. ' =' → logprob: -1.553784728050232
    4. 'is' → logprob: -2.4287848472595215
    5. '   ' → logprob: -3.5537848472595215
    6. ' along' → logprob: -5.4287848472595215
    7. 'along' → logprob: -5.9287848472595215
    8. 's' → logprob: -6.6787848472595215
    9. '#' → logprob: -7.4287848472595215
    10. ' line' → logprob: -7.5537848472595215

Token 1678: ' on' (ID: 402)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.2309224158525467
    2. 'sx' → logprob: -2.7309224605560303
    3. '(
' → logprob: -3.1059224605560303
    4. 'line' → logprob: -3.8559224605560303
    5. 'the' → logprob: -4.230922222137451
    6. '(' → logprob: -4.605922222137451
    7. ' (' → logprob: -4.730922222137451
    8. '((' → logprob: -5.230922222137451
    9. '(x' → logprob: -5.480922222137451
    10. '   ' → logprob: -5.480922222137451

Token 1679: ' the' (ID: 290)
  Prédit: 'sx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sx' → logprob: -0.9921409487724304
    2. 'the' → logprob: -1.2421410083770752
    3. ' sx' → logprob: -2.242141008377075
    4. ' the' → logprob: -2.242141008377075
    5. 'line' → logprob: -3.117141008377075
    6. ' line' → logprob: -3.617141008377075
    7. '(s' → logprob: -3.992141008377075
    8. ' (' → logprob: -4.742140769958496
    9. '[s' → logprob: -4.992140769958496
    10. 'course' → logprob: -5.367140769958496

Token 1680: ' line' (ID: 2543)
  Prédit: 'course'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'course' → logprob: -0.2759378254413605
    2. 'line' → logprob: -2.025937795639038
    3. ' course' → logprob: -3.400937795639038
    4. ' line' → logprob: -3.400937795639038
    5. 'sx' → logprob: -3.525937795639038
    6. ' sx' → logprob: -5.525938034057617
    7. '(s' → logprob: -6.025938034057617
    8. ' (' → logprob: -6.775938034057617
    9. '(x' → logprob: -6.900938034057617
    10. '(line' → logprob: -7.025938034057617

Token 1681: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6649937033653259
    2. 'segment' → logprob: -0.9149937033653259
    3. ' segment' → logprob: -2.9149937629699707
    4. 'sx' → logprob: -4.789993762969971
    5. 'from' → logprob: -5.789993762969971
    6. 's' → logprob: -6.039993762969971
    7. ' sx' → logprob: -6.164993762969971
    8. ' of' → logprob: -6.414993762969971
    9. ' between' → logprob: -6.664993762969971
    10. '    ' → logprob: -6.789993762969971

Token 1682: ' start' (ID: 1604)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.5487931370735168
    2. 'sx' → logprob: -0.9237931370735168
    3. ' sx' → logprob: -4.173793315887451
    4. ' (' → logprob: -4.673793315887451
    5. 's' → logprob: -8.048792839050293
    6. 'start' → logprob: -9.423792839050293
    7. '   ' → logprob: -9.548792839050293
    8. '[s' → logprob: -10.548792839050293
    9. ' ' → logprob: -11.548792839050293
    10. '```' → logprob: -11.673792839050293

Token 1683: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5899827480316162
    2. ',' → logprob: -1.2149827480316162
    3. 'to' → logprob: -2.214982748031616
    4. ' ,' → logprob: -4.589982986450195
    5. 'sx' → logprob: -4.589982986450195
    6. '   ' → logprob: -4.964982986450195
    7. ' ' → logprob: -6.089982986450195
    8. 's' → logprob: -6.089982986450195
    9. ',s' → logprob: -6.714982986450195
    10. '(s' → logprob: -6.839982986450195

Token 1684: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.01104935072362423
    2. ' end' → logprob: -4.511049270629883
    3. 'start' → logprob: -13.886049270629883
    4. '(end' → logprob: -15.261049270629883
    5. 'sys' → logprob: -16.261049270629883
    6. 'ex' → logprob: -16.636049270629883
    7. 'sx' → logprob: -16.761049270629883
    8. 'stop' → logprob: -17.261049270629883
    9. 'finish' → logprob: -18.386049270629883
    10. ' ' → logprob: -18.386049270629883

Token 1685: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0339285247027874
    2. '    
' → logprob: -4.408928394317627
    3. ',' → logprob: -4.783928394317627
    4. '
' → logprob: -5.033928394317627
    5. '.' → logprob: -6.283928394317627
    6. '    ' → logprob: -7.408928394317627
    7. 'def' → logprob: -7.658928394317627
    8. '(' → logprob: -7.783928394317627
    9. ' ' → logprob: -7.783928394317627
    10. '<|end|>' → logprob: -7.783928394317627

Token 1686: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014407820999622345
    2. '
' → logprob: -4.764407634735107
    3. '    
' → logprob: -5.514407634735107
    4. 'for' → logprob: -6.639407634735107
    5. ' for' → logprob: -8.139408111572266
    6. '   
' → logprob: -10.514408111572266
    7. '  
' → logprob: -11.014408111572266
    8. '```' → logprob: -11.139408111572266
    9. '    ' → logprob: -11.264408111572266
    10. '' → logprob: -12.014408111572266

Token 1687: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9045589566230774
    2. 'for' → logprob: -0.9045589566230774
    3. 'dx' → logprob: -2.4045588970184326
    4. 'line' → logprob: -3.7795588970184326
    5. 't' → logprob: -4.029559135437012
    6. 'dir' → logprob: -4.029559135437012
    7. 'pos' → logprob: -4.154559135437012
    8. 'px' → logprob: -5.154559135437012
    9. 'direction' → logprob: -5.154559135437012
    10. 'ball' → logprob: -5.404559135437012

Token 1688: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21935464441776276
    2. 'def' → logprob: -3.3443546295166016
    3. 'dir' → logprob: -3.7193546295166016
    4. 'dx' → logprob: -3.7193546295166016
    5. 'line' → logprob: -3.8443546295166016
    6. '   ' → logprob: -3.9693546295166016
    7. 't' → logprob: -3.9693546295166016
    8. 'pos' → logprob: -4.594354629516602
    9. 'px' → logprob: -4.844354629516602
    10. 'import' → logprob: -4.844354629516602

Token 1689: ' continuous' (ID: 27979)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.7041320204734802
    2. 'bx' → logprob: -1.454132080078125
    3. 'ball' → logprob: -2.454132080078125
    4. 'px' → logprob: -3.204132080078125
    5. 'x' → logprob: -3.454132080078125
    6. 'b' → logprob: -3.579132080078125
    7. ' bx' → logprob: -4.079132080078125
    8. 'i' → logprob: -4.329132080078125
    9. 'pos' → logprob: -5.204132080078125
    10. 't' → logprob: -5.329132080078125

Token 1690: ' collision' (ID: 34967)
  Prédit: ' checking'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' checking' → logprob: -0.5575002431869507
    2. 'checking' → logprob: -1.9325002431869507
    3. ' line' → logprob: -2.9325003623962402
    4. 'def' → logprob: -3.3075003623962402
    5. 't' → logprob: -3.5575003623962402
    6. 'distance' → logprob: -3.8075003623962402
    7. 'line' → logprob: -4.80750036239624
    8. ' coverage' → logprob: -4.80750036239624
    9. ' movement' → logprob: -4.93250036239624
    10. 'r' → logprob: -4.93250036239624

Token 1691: ' checking' (ID: 19141)
  Prédit: 'checking'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'checking' → logprob: -0.5457112789154053
    2. ' checking' → logprob: -1.0457112789154053
    3. 'check' → logprob: -3.4207112789154053
    4. 'def' → logprob: -4.295711517333984
    5. ' avoidance' → logprob: -4.920711517333984
    6. 'avoid' → logprob: -5.545711517333984
    7. '_check' → logprob: -5.670711517333984
    8. ' check' → logprob: -6.420711517333984
    9. 'Checking' → logprob: -6.420711517333984
    10. 'import' → logprob: -7.045711517333984

Token 1692: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016628365963697433
    2. ',' → logprob: -4.766628265380859
    3. '    
' → logprob: -6.391628265380859
    4. '
' → logprob: -6.516628265380859
    5. 'for' → logprob: -7.016628265380859
    6. ' for' → logprob: -7.641628265380859
    7. 'line' → logprob: -7.766628265380859
    8. 'pos' → logprob: -7.766628265380859
    9. 'import' → logprob: -7.891628265380859
    10. '#' → logprob: -8.14162826538086

Token 1693: ' path' (ID: 3104)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.242362380027771
    2. ' the' → logprob: -2.2423624992370605
    3. ' line' → logprob: -3.1173624992370605
    4. 'line' → logprob: -4.2423624992370605
    5. 'each' → logprob: -4.3673624992370605
    6. 'distance' → logprob: -5.1173624992370605
    7. 'def' → logprob: -5.6173624992370605
    8. 'r' → logprob: -5.7423624992370605
    9. ' each' → logprob: -5.9923624992370605
    10. 't' → logprob: -6.1173624992370605

Token 1694: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025572343729436398
    2. ':' → logprob: -6.877557277679443
    3. '
' → logprob: -7.502557277679443
    4. ',' → logprob: -7.627557277679443
    5. '    
' → logprob: -8.627556800842285
    6. 'import' → logprob: -9.502556800842285
    7. 'def' → logprob: -10.252556800842285
    8. ' line' → logprob: -10.752556800842285
    9. '    ' → logprob: -11.002556800842285
    10. ')' → logprob: -11.002556800842285

Token 1695: ' since' (ID: 3630)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0044066207483410835
    2. '#' → logprob: -6.379406452178955
    3. 'length' → logprob: -7.129406452178955
    4. 'import' → logprob: -8.004406929016113
    5. 'n' → logprob: -8.004406929016113
    6. 'step' → logprob: -8.379406929016113
    7. 'steps' → logprob: -8.754406929016113
    8. 't' → logprob: -8.879406929016113
    9. ' length' → logprob: -9.004406929016113
    10. 'line' → logprob: -9.379406929016113

Token 1696: ' ball' (ID: 7880)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9940115809440613
    2. ' the' → logprob: -1.119011640548706
    3. ' line' → logprob: -2.244011640548706
    4. ' blocks' → logprob: -3.119011640548706
    5. 'distance' → logprob: -3.494011640548706
    6. 'r' → logprob: -3.494011640548706
    7. 'blocks' → logprob: -3.869011640548706
    8. ' code' → logprob: -3.994011640548706
    9. ' r' → logprob: -4.744011402130127
    10. 'def' → logprob: -5.119011402130127

Token 1697: ' moves' (ID: 19523)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'center' → logprob: -1.145995020866394
    2. '   ' → logprob: -2.1459951400756836
    3. '_x' → logprob: -2.1459951400756836
    4. 'bottom' → logprob: -2.3959951400756836
    5. 'position' → logprob: -2.5209951400756836
    6. ' center' → logprob: -3.0209951400756836
    7. '_center' → logprob: -3.2709951400756836
    8. ' is' → logprob: -3.5209951400756836
    9. '_bottom' → logprob: -3.8959951400756836
    10. 'radius' → logprob: -4.145995140075684

Token 1698: ' on' (ID: 402)
  Prédit: 'along'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'along' → logprob: -0.3665037155151367
    2. ' along' → logprob: -1.6165037155151367
    3. 'in' → logprob: -2.9915037155151367
    4. '   ' → logprob: -3.6165037155151367
    5. 'from' → logprob: -4.366503715515137
    6. ' in' → logprob: -5.241503715515137
    7. 'through' → logprob: -5.991503715515137
    8. 'over' → logprob: -6.616503715515137
    9. 'line' → logprob: -6.866503715515137
    10. ' through' → logprob: -6.991503715515137

Token 1699: ' straight' (ID: 10230)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7724748849868774
    2. 'line' → logprob: -1.6474748849868774
    3. 'a' → logprob: -1.7724748849868774
    4. 'straight' → logprob: -3.272474765777588
    5. 'x' → logprob: -3.522474765777588
    6. ' line' → logprob: -3.772474765777588
    7. 'sx' → logprob: -4.522474765777588
    8. 'def' → logprob: -4.647474765777588
    9. ' the' → logprob: -4.647474765777588
    10. ' a' → logprob: -4.772474765777588

Token 1700: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.0037003199104219675
    2. '   ' → logprob: -6.503700256347656
    3. 'line' → logprob: -6.753700256347656
    4. '_line' → logprob: -7.128700256347656
    5. ' ' → logprob: -9.628700256347656
    6. ' segment' → logprob: -9.628700256347656
    7. '_' → logprob: -10.253700256347656
    8. '    
' → logprob: -11.003700256347656
    9. '	line' → logprob: -12.253700256347656
    10. ' _' → logprob: -12.503700256347656

Token 1701: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6545902490615845
    2. ',' → logprob: -0.7795902490615845
    3. ',
' → logprob: -5.279590129852295
    4. '
' → logprob: -5.529590129852295
    5. ':' → logprob: -5.779590129852295
    6. 'and' → logprob: -6.654590129852295
    7. ' and' → logprob: -6.904590129852295
    8. 'from' → logprob: -7.029590129852295
    9. ' for' → logprob: -7.404590129852295
    10. ':
' → logprob: -7.529590129852295

Token 1702: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001943984068930149
    2. '#' → logprob: -6.251944065093994
    3. '    
' → logprob: -13.126943588256836
    4. '
' → logprob: -13.126943588256836
    5. '```' → logprob: -13.376943588256836
    6. 'import' → logprob: -13.501943588256836
    7. '       ' → logprob: -13.501943588256836
    8. '    ' → logprob: -13.751943588256836
    9. ':' → logprob: -13.876943588256836
    10. 'def' → logprob: -14.251943588256836

Token 1703: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3869101405143738
    2. '#' (adapté à ' #') → logprob: -1.1369102001190186
    3. ' #' → logprob: -10.511910438537598
    4. 'def' → logprob: -12.886910438537598
    5. ' ' → logprob: -13.136910438537598
    6. 'for' → logprob: -13.261910438537598
    7. '       ' → logprob: -13.261910438537598
    8. '  ' → logprob: -13.761910438537598
    9. '
' → logprob: -14.011910438537598
    10. '    ' → logprob: -14.511910438537598

Token 1704: ' we' (ID: 581)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09540995955467224
    2. '#' → logprob: -2.470409870147705
    3. 'length' → logprob: -5.470409870147705
    4. 'for' → logprob: -7.220409870147705
    5. 'n' → logprob: -7.845409870147705
    6. 'import' → logprob: -7.970409870147705
    7. 'dx' → logprob: -8.720410346984863
    8. 't' → logprob: -8.970410346984863
    9. 'distance' → logprob: -9.470410346984863
    10. 'line' → logprob: -9.470410346984863

Token 1705: ' can' (ID: 665)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1769515872001648
    2. 'import' → logprob: -3.3019516468048096
    3. ' can' → logprob: -3.6769516468048096
    4. ' check' → logprob: -3.6769516468048096
    5. 'def' → logprob: -3.6769516468048096
    6. '#' → logprob: -3.9269516468048096
    7. ' #' → logprob: -4.8019514083862305
    8. ' will' → logprob: -5.4269514083862305
    9. '```' → logprob: -6.3019514083862305
    10. 'check' → logprob: -6.5519514083862305

Token 1706: ' check' (ID: 2371)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3760697543621063
    2. 'def' → logprob: -2.2510697841644287
    3. '#' → logprob: -2.8760697841644287
    4. '   ' → logprob: -3.0010697841644287
    5. 'check' → logprob: -3.1260697841644287
    6. 'simulate' → logprob: -4.62606954574585
    7. 'approx' → logprob: -4.62606954574585
    8. '
' → logprob: -4.87606954574585
    9. '...' → logprob: -5.62606954574585
    10. ' check' → logprob: -5.75106954574585

Token 1707: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7254120707511902
    2. 'for' → logprob: -2.350412130355835
    3. ' if' → logprob: -2.600412130355835
    4. ' distances' → logprob: -2.850412130355835
    5. 'distance' → logprob: -2.850412130355835
    6. 'if' → logprob: -3.100412130355835
    7. 'the' → logprob: -3.350412130355835
    8. ' the' → logprob: -3.725412130355835
    9. ' for' → logprob: -3.725412130355835
    10. 'dist' → logprob: -3.850412130355835

Token 1708: ' minimal' (ID: 19957)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2654944360256195
    2. 'steps' → logprob: -2.1404943466186523
    3. 'def' → logprob: -2.8904943466186523
    4. 'distance' → logprob: -3.5154943466186523
    5. 'import' → logprob: -4.890494346618652
    6. 'step' → logprob: -4.890494346618652
    7. 'samples' → logprob: -5.765494346618652
    8. '#' → logprob: -6.140494346618652
    9. 'segments' → logprob: -6.140494346618652
    10. ' for' → logprob: -6.390494346618652

Token 1709: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.06307362765073776
    2. 'def' → logprob: -3.5630736351013184
    3. ' distance' → logprob: -4.063073635101318
    4. 'dist' → logprob: -5.188073635101318
    5. 'r' → logprob: -6.188073635101318
    6. 'import' → logprob: -6.313073635101318
    7. 'horizontal' → logprob: -6.438073635101318
    8. 'dx' → logprob: -7.313073635101318
    9. 'segment' → logprob: -7.313073635101318
    10. 't' → logprob: -7.438073635101318

Token 1710: ' between' (ID: 2870)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5476176738739014
    2. 'between' → logprob: -1.0476176738739014
    3. '   ' → logprob: -3.0476176738739014
    4. ' between' → logprob: -4.5476179122924805
    5. 's' → logprob: -5.6726179122924805
    6. 'to' → logprob: -5.6726179122924805
    7. 'def' → logprob: -6.2976179122924805
    8. ' from' → logprob: -6.7976179122924805
    9. ')' → logprob: -7.0476179122924805
    10. ' ' → logprob: -7.9226179122924805

Token 1711: ' ball' (ID: 7880)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.05612640082836151
    2. 'def' → logprob: -4.181126594543457
    3. 'the' → logprob: -4.181126594543457
    4. '((' → logprob: -5.056126594543457
    5. 'import' → logprob: -5.431126594543457
    6. 'start' → logprob: -5.931126594543457
    7. 'line' → logprob: -6.056126594543457
    8. '(ball' → logprob: -6.306126594543457
    9. '(start' → logprob: -6.806126594543457
    10. '(line' → logprob: -6.806126594543457

Token 1712: ' center' (ID: 6170)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.2534993886947632
    2. ' center' → logprob: -1.7534993886947632
    3. '_center' → logprob: -4.378499507904053
    4. 'path' → logprob: -4.628499507904053
    5. 'bottom' → logprob: -4.878499507904053
    6. 'line' → logprob: -5.503499507904053
    7. 'position' → logprob: -5.878499507904053
    8. ' path' → logprob: -6.003499507904053
    9. ''s' → logprob: -6.128499507904053
    10. ' bottom' → logprob: -6.253499507904053

Token 1713: ' path' (ID: 3104)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.6570705771446228
    2. 'line' → logprob: -1.6570706367492676
    3. 'path' → logprob: -1.7820706367492676
    4. ' and' → logprob: -2.9070706367492676
    5. ' line' → logprob: -3.7820706367492676
    6. 'segment' → logprob: -4.407070636749268
    7. 'position' → logprob: -5.157070636749268
    8. '(line' → logprob: -5.657070636749268
    9. 'to' → logprob: -5.657070636749268
    10. ' path' → logprob: -5.782070636749268

Token 1714: ' segment' (ID: 14806)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.11955820024013519
    2. 'and' → logprob: -2.869558095932007
    3. '   ' → logprob: -3.494558095932007
    4. ' to' → logprob: -4.994558334350586
    5. 'segment' → logprob: -5.369558334350586
    6. ' line' → logprob: -6.119558334350586
    7. ' (' → logprob: -6.119558334350586
    8. ',' → logprob: -6.244558334350586
    9. ' segment' → logprob: -6.369558334350586
    10. ')' → logprob: -7.369558334350586

Token 1715: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.4483885169029236
    2. ' and' → logprob: -1.1983885765075684
    3. '   ' → logprob: -3.1983885765075684
    4. ',' → logprob: -4.698388576507568
    5. 'def' → logprob: -6.573388576507568
    6. 'import' → logprob: -6.573388576507568
    7. 'to' → logprob: -6.948388576507568
    8. 'a' → logprob: -7.073388576507568
    9. ' (' → logprob: -7.448388576507568
    10. '(' → logprob: -7.448388576507568

Token 1716: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.7553070783615112
    2. '(block' → logprob: -1.8803070783615112
    3. 'each' → logprob: -2.255307197570801
    4. 'the' → logprob: -3.005307197570801
    5. 'for' → logprob: -3.130307197570801
    6. '#' → logprob: -3.380307197570801
    7. 'def' → logprob: -3.380307197570801
    8. '((' → logprob: -3.505307197570801
    9. ' block' → logprob: -4.380307197570801
    10. 'blocks' → logprob: -4.755307197570801

Token 1717: ' volume' (ID: 10945)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1709033101797104
    2. ':' → logprob: -3.045903205871582
    3. 'def' → logprob: -3.670903205871582
    4. '
' → logprob: -4.295903205871582
    5. ' =' → logprob: -4.920903205871582
    6. ' for' → logprob: -4.920903205871582
    7. '=' → logprob: -5.045903205871582
    8. ' and' → logprob: -5.420903205871582
    9. ':
' → logprob: -5.545903205871582
    10. 'for' → logprob: -5.795903205871582

Token 1718: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02125300094485283
    2. '
' → logprob: -4.5212531089782715
    3. '    
' → logprob: -4.8962531089782715
    4. 'def' → logprob: -7.0212531089782715
    5. ' and' → logprob: -8.396252632141113
    6. '```' → logprob: -8.396252632141113
    7. ',' → logprob: -8.521252632141113
    8. ' (' → logprob: -8.646252632141113
    9. ':' → logprob: -8.896252632141113
    10. 'import' → logprob: -9.021252632141113

Token 1719: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031786637846380472
    2. '
' → logprob: -6.378178596496582
    3. '    
' → logprob: -6.628178596496582
    4. 'def' → logprob: -9.628178596496582
    5. '```' → logprob: -10.753178596496582
    6. ')' → logprob: -11.378178596496582
    7. 'import' → logprob: -11.503178596496582
    8. ' for' → logprob: -11.878178596496582
    9. '    ' → logprob: -12.003178596496582
    10. ',' → logprob: -12.003178596496582

Token 1720: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024753011763095856
    2. '
' → logprob: -4.649753093719482
    3. ' for' → logprob: -6.024753093719482
    4. 'for' → logprob: -6.274753093719482
    5. 'line' → logprob: -6.524753093719482
    6. '    
' → logprob: -6.774753093719482
    7. 'min' → logprob: -6.899753093719482
    8. 'def' → logprob: -7.024753093719482
    9. ' min' → logprob: -7.149753093719482
    10. ' line' → logprob: -7.274753093719482

Token 1721: ' Approach' (ID: 86383)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21730861067771912
    2. '#' → logprob: -2.092308521270752
    3. 'def' → logprob: -3.467308521270752
    4. '
' → logprob: -5.217308521270752
    5. 'for' → logprob: -5.842308521270752
    6. ' #' → logprob: -5.842308521270752
    7. 'n' → logprob: -6.092308521270752
    8. 't' → logprob: -6.092308521270752
    9. 'path' → logprob: -6.092308521270752
    10. 'ball' → logprob: -6.217308521270752

Token 1722: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012993624433875084
    2. ':' → logprob: -4.887993812561035
    3. '
' → logprob: -6.137993812561035
    4. '#' → logprob: -6.637993812561035
    5. '```' → logprob: -7.637993812561035
    6. 'def' → logprob: -7.887993812561035
    7. '    
' → logprob: -8.012993812561035
    8. 'import' → logprob: -8.137993812561035
    9. '=' → logprob: -9.012993812561035
    10. ':
' → logprob: -9.137993812561035

Token 1723: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00559634156525135
    2. '    ' → logprob: -6.380596160888672
    3. '
' → logprob: -6.505596160888672
    4. '```' → logprob: -6.630596160888672
    5. '    
' → logprob: -7.380596160888672
    6. ' for' → logprob: -9.005596160888672
    7. 'def' → logprob: -9.380596160888672
    8. 'for' → logprob: -10.255596160888672
    9. '       ' → logprob: -10.505596160888672
    10. '`' → logprob: -10.505596160888672

Token 1724: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00692351907491684
    2. '
' → logprob: -6.256923675537109
    3. ' for' → logprob: -6.256923675537109
    4. '    ' → logprob: -6.381923675537109
    5. '    
' → logprob: -8.00692367553711
    6. '```' → logprob: -8.25692367553711
    7. ' ' → logprob: -8.38192367553711
    8. 'import' → logprob: -9.25692367553711
    9. 'for' → logprob: -9.38192367553711
    10. '       ' → logprob: -9.75692367553711

Token 1725: ' For' (ID: 2214)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06783824414014816
    2. '#' → logprob: -2.942838191986084
    3. 'for' → logprob: -4.942838191986084
    4. 'line' → logprob: -6.692838191986084
    5. 'import' → logprob: -6.817838191986084
    6. '```' → logprob: -6.942838191986084
    7. 'ball' → logprob: -7.817838191986084
    8. '
' → logprob: -8.067838668823242
    9. 'n' → logprob: -8.192838668823242
    10. 'length' → logprob: -8.317838668823242

Token 1726: ' each' (ID: 2454)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.7623084187507629
    2. 'each' → logprob: -1.5123083591461182
    3. 't' → logprob: -1.8873083591461182
    4. 'i' → logprob: -2.762308359146118
    5. 'r' → logprob: -4.012308597564697
    6. 'step' → logprob: -4.137308597564697
    7. 'b' → logprob: -4.762308597564697
    8. 'ball' → logprob: -4.762308597564697
    9. ' each' → logprob: -4.887308597564697
    10. 'br' → logprob: -4.887308597564697

Token 1727: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.38774269819259644
    2. ' block' → logprob: -1.1377427577972412
    3. 'b' → logprob: -8.01274299621582
    4. '   ' → logprob: -8.13774299621582
    5. '(block' → logprob: -9.63774299621582
    6. ' b' → logprob: -10.13774299621582
    7. '```' → logprob: -10.88774299621582
    8. ')' → logprob: -11.01274299621582
    9. '	block' → logprob: -11.01274299621582
    10. '
' → logprob: -11.26274299621582

Token 1728: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26249316334724426
    2. ':' → logprob: -1.8874931335449219
    3. ',' → logprob: -2.762493133544922
    4. ':
' → logprob: -4.762493133544922
    5. '
' → logprob: -6.637493133544922
    6. '):' → logprob: -6.762493133544922
    7. 'for' → logprob: -7.012493133544922
    8. ' for' → logprob: -7.012493133544922
    9. '#' → logprob: -7.387493133544922
    10. '):
' → logprob: -7.387493133544922

Token 1729: ' compute' (ID: 23864)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0375060997903347
    2. '#' → logprob: -4.412506103515625
    3. ' for' → logprob: -4.787506103515625
    4. 'for' → logprob: -5.162506103515625
    5. ' dx' → logprob: -5.912506103515625
    6. 'dx' → logprob: -6.162506103515625
    7. ' line' → logprob: -7.037506103515625
    8. ' px' → logprob: -7.162506103515625
    9. ' #' → logprob: -7.162506103515625
    10. ' start' → logprob: -7.787506103515625

Token 1730: ' minimal' (ID: 19957)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0607815980911255
    2. 'minimal' → logprob: -1.1857815980911255
    3. 'min' → logprob: -2.685781478881836
    4. 'the' → logprob: -2.935781478881836
    5. 'def' → logprob: -3.185781478881836
    6. 'ball' → logprob: -3.310781478881836
    7. 'dist' → logprob: -4.185781478881836
    8. 'minimum' → logprob: -4.185781478881836
    9. 'horizontal' → logprob: -4.310781478881836
    10. 'lowest' → logprob: -4.435781478881836

Token 1731: ' horizontal' (ID: 25511)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.7016782760620117
    2. 'distance' → logprob: -1.2016782760620117
    3. 'radius' → logprob: -2.7016782760620117
    4. ' horizontal' → logprob: -2.8266782760620117
    5. 'required' → logprob: -3.4516782760620117
    6. ' distance' → logprob: -4.576678276062012
    7. 'r' → logprob: -4.951678276062012
    8. ' radius' → logprob: -4.951678276062012
    9. ' required' → logprob: -5.201678276062012
    10. 'def' → logprob: -5.826678276062012

Token 1732: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.05934986099600792
    2. 'dist' → logprob: -3.309349775314331
    3. ' distance' → logprob: -4.30935001373291
    4. '_distance' → logprob: -5.18435001373291
    5. '_dist' → logprob: -6.93435001373291
    6. 'def' → logprob: -8.05935001373291
    7. 'segment' → logprob: -8.68435001373291
    8. 'dx' → logprob: -8.80935001373291
    9. 'and' → logprob: -9.55935001373291
    10. ' and' → logprob: -9.93435001373291

Token 1733: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21508757770061493
    2. ' =' → logprob: -2.840087652206421
    3. '=' → logprob: -3.090087652206421
    4. 'from' → logprob: -3.465087652206421
    5. 'between' → logprob: -4.465087413787842
    6. ')' → logprob: -4.715087413787842
    7. ' between' → logprob: -4.840087413787842
    8. ',' → logprob: -4.965087413787842
    9. 's' → logprob: -5.965087413787842
    10. '(s' → logprob: -6.090087413787842

Token 1734: ' line' (ID: 2543)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.17531785368919373
    2. 'the' → logprob: -2.8003177642822266
    3. 'sx' → logprob: -3.3003177642822266
    4. 'line' → logprob: -3.6753177642822266
    5. 'def' → logprob: -4.175317764282227
    6. 'r' → logprob: -5.175317764282227
    7. 'start' → logprob: -6.550317764282227
    8. ' (' → logprob: -6.550317764282227
    9. ' the' → logprob: -6.800317764282227
    10. '#' → logprob: -6.800317764282227

Token 1735: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.9469824433326721
    2. '_start' → logprob: -1.9469823837280273
    3. '_segment' → logprob: -2.0719823837280273
    4. 'start' → logprob: -2.5719823837280273
    5. '   ' → logprob: -3.1969823837280273
    6. 'def' → logprob: -3.4469823837280273
    7. '_x' → logprob: -3.6969823837280273
    8. 'seg' → logprob: -3.6969823837280273
    9. '_point' → logprob: -3.8219823837280273
    10. '_vec' → logprob: -4.196982383728027

Token 1736: ' (' (ID: 350)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.14640569686889648
    2. 'to' → logprob: -3.1464056968688965
    3. ' (' → logprob: -3.2714056968688965
    4. '   ' → logprob: -3.7714056968688965
    5. ' to' → logprob: -4.1464056968688965
    6. '((' → logprob: -5.3964056968688965
    7. 'sx' → logprob: -5.6464056968688965
    8. 's' → logprob: -6.6464056968688965
    9. 'segment' → logprob: -6.6464056968688965
    10. '[(' → logprob: -6.8964056968688965

Token 1737: 'sx' (ID: 102754)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0007250601192936301
    2. ' (' → logprob: -7.375725269317627
    3. '   ' → logprob: -9.500724792480469
    4. '
' → logprob: -11.750724792480469
    5. '(' → logprob: -12.875724792480469
    6. ' ' → logprob: -13.125724792480469
    7. '(S' → logprob: -13.375724792480469
    8. 'sx' → logprob: -13.625724792480469
    9. '#' → logprob: -14.125724792480469
    10. 'def' → logprob: -14.250724792480469

Token 1738: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.9160102712921798e-05
    2. ',s' → logprob: -11.500029563903809
    3. ' ,' → logprob: -11.875029563903809
    4. '```' → logprob: -12.375029563903809
    5. ',
' → logprob: -12.875029563903809
    6. 'sy' → logprob: -13.250029563903809
    7. ')' → logprob: -14.125029563903809
    8. '[' → logprob: -14.250029563903809
    9. '_sy' → logprob: -14.375029563903809
    10. '),' → logprob: -14.625029563903809

Token 1739: 'sy' (ID: 5611)
  Prédit: 'sy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sy' → logprob: -3.1424973713001236e-05
    2. ' sy' → logprob: -10.375031471252441
    3. '_sy' → logprob: -16.250030517578125
    4. 'ey' → logprob: -17.375030517578125
    5. '
' → logprob: -17.625030517578125
    6. 'sys' → logprob: -18.000030517578125
    7. 'Sy' → logprob: -18.500030517578125
    8. 'syn' → logprob: -18.750030517578125
    9. 's' → logprob: -19.125030517578125
    10. 'sym' → logprob: -19.250030517578125

Token 1740: ')-(' (ID: 111485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04455733671784401
    2. ')' → logprob: -3.4195573329925537
    3. '),(' → logprob: -4.794557571411133
    4. '),' → logprob: -6.419557571411133
    5. ',
' → logprob: -8.169557571411133
    6. 'to' → logprob: -8.794557571411133
    7. '   ' → logprob: -8.919557571411133
    8. ' ,' → logprob: -9.044557571411133
    9. ' to' → logprob: -9.419557571411133
    10. ',)' → logprob: -10.419557571411133

Token 1741: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -3.4121114822482923e-06
    2. ' ex' → logprob: -12.625003814697266
    3. '(ex' → logprob: -17.875003814697266
    4. '	ex' → logprob: -20.750003814697266
    5. '
' → logprob: -20.875003814697266
    6. ''ex' → logprob: -21.625003814697266
    7. '```' → logprob: -22.000003814697266
    8. 'ey' → logprob: -22.875003814697266
    9. '``' → logprob: -23.375003814697266
    10. ' ' → logprob: -23.625003814697266

Token 1742: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.1782583391759545e-05
    2. 'ey' → logprob: -10.500031471252441
    3. 'ex' → logprob: -13.500031471252441
    4. ',
' → logprob: -14.250031471252441
    5. '```' → logprob: -14.250031471252441
    6. ',s' → logprob: -15.375031471252441
    7. ')' → logprob: -15.500031471252441
    8. ' ,' → logprob: -15.500031471252441
    9. '),' → logprob: -15.500031471252441
    10. '
' → logprob: -15.625031471252441

Token 1743: 'ey' (ID: 806)
  Prédit: 'ey'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ey' → logprob: -2.069664333248511e-05
    2. 'sy' → logprob: -11.125020980834961
    3. ' ey' → logprob: -12.125020980834961
    4. '
' → logprob: -14.875020980834961
    5. 'ay' → logprob: -18.37502098083496
    6. 'eys' → logprob: -18.62502098083496
    7. '```' → logprob: -18.87502098083496
    8. ')' → logprob: -18.87502098083496
    9. ' ' → logprob: -19.00002098083496
    10. 'eyey' → logprob: -19.00002098083496

Token 1744: ')
' (ID: 446)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.40636906027793884
    2. ')' → logprob: -1.7813690900802612
    3. 'to' → logprob: -1.9063690900802612
    4. '   ' → logprob: -4.906369209289551
    5. ' and' → logprob: -5.531369209289551
    6. 'and' → logprob: -6.031369209289551
    7. ',' → logprob: -6.281369209289551
    8. '#' → logprob: -8.03136920928955
    9. ' )' → logprob: -8.40636920928955
    10. '),' → logprob: -8.90636920928955

Token 1745: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15901944041252136
    2. ' to' → logprob: -2.0340194702148438
    3. 'to' → logprob: -4.159019470214844
    4. 'def' → logprob: -8.659019470214844
    5. ',' → logprob: -9.159019470214844
    6. ')' → logprob: -9.659019470214844
    7. 'and' → logprob: -10.034019470214844
    8. '
' → logprob: -10.284019470214844
    9. ' and' → logprob: -10.284019470214844
    10. '#' → logprob: -10.534019470214844

Token 1746: ' #' (ID: 1069)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5492570400238037
    2. '   ' → logprob: -0.9242570400238037
    3. 'to' → logprob: -3.7992570400238037
    4. ' and' → logprob: -7.299257278442383
    5. ',' → logprob: -7.424257278442383
    6. 'def' → logprob: -7.799257278442383
    7. ' =' → logprob: -7.799257278442383
    8. ')' → logprob: -8.174257278442383
    9. ' (' → logprob: -8.549257278442383
    10. '=' → logprob: -9.299257278442383

Token 1747: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10868173837661743
    2. ' to' → logprob: -2.7336816787719727
    3. 'to' → logprob: -3.3586816787719727
    4. 'def' → logprob: -7.233681678771973
    5. '
' → logprob: -7.858681678771973
    6. '#' → logprob: -7.858681678771973
    7. ':' → logprob: -7.858681678771973
    8. ',' → logprob: -8.483681678771973
    9. 'and' → logprob: -8.483681678771973
    10. '```' → logprob: -8.983681678771973

Token 1748: ' block' (ID: 4355)
  Prédit: '(block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(block' → logprob: -0.7936716675758362
    2. '(min' → logprob: -1.6686716079711914
    3. 'block' → logprob: -1.9186716079711914
    4. '(s' → logprob: -2.2936716079711914
    5. ' (' → logprob: -2.9186716079711914
    6. '((' → logprob: -3.9186716079711914
    7. 'def' → logprob: -4.793671607971191
    8. 'min' → logprob: -5.418671607971191
    9. '(px' → logprob: -5.418671607971191
    10. '(max' → logprob: -5.668671607971191

Token 1749: ' bottom' (ID: 8725)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5921856760978699
    2. '_min' → logprob: -1.7171857357025146
    3. 'bottom' → logprob: -2.4671857357025146
    4. '   ' → logprob: -2.7171857357025146
    5. '_x' → logprob: -3.5921857357025146
    6. '_bottom' → logprob: -3.8421857357025146
    7. 'def' → logprob: -4.3421854972839355
    8. '#' → logprob: -4.5921854972839355
    9. 'corner' → logprob: -4.7171854972839355
    10. 'x' → logprob: -5.0921854972839355

Token 1750: ' rectangle' (ID: 45808)
  Prédit: 'rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rectangle' → logprob: -0.5320524573326111
    2. '   ' → logprob: -2.157052516937256
    3. 'rect' → logprob: -2.407052516937256
    4. '_rectangle' → logprob: -2.532052516937256
    5. 'min' → logprob: -3.532052516937256
    6. '
' → logprob: -3.782052516937256
    7. ' rectangle' → logprob: -3.907052516937256
    8. '_rect' → logprob: -4.157052516937256
    9. '```' → logprob: -5.407052516937256
    10. ',' → logprob: -5.532052516937256

Token 1751: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056140150874853134
    2. '
' → logprob: -3.681140184402466
    3. '    
' → logprob: -3.806140184402466
    4. 'def' → logprob: -5.806139945983887
    5. ',' → logprob: -6.931139945983887
    6. ')' → logprob: -8.056139945983887
    7. '#' → logprob: -8.181139945983887
    8. 'import' → logprob: -8.181139945983887
    9. ' (' → logprob: -8.431139945983887
    10. '.' → logprob: -8.556139945983887

Token 1752: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0068080914206802845
    2. ':' → logprob: -6.381808280944824
    3. '
' → logprob: -6.506808280944824
    4. '    
' → logprob: -6.881808280944824
    5. ',' → logprob: -7.256808280944824
    6. '.' → logprob: -7.381808280944824
    7. ' and' → logprob: -7.881808280944824
    8. 'def' → logprob: -8.381808280944824
    9. ')' → logprob: -8.881808280944824
    10. 'and' → logprob: -9.756808280944824

Token 1753: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020308401435613632
    2. '    
' → logprob: -4.520308494567871
    3. '
' → logprob: -4.770308494567871
    4. 'import' → logprob: -8.895308494567871
    5. ':' → logprob: -9.270308494567871
    6. '```' → logprob: -9.395308494567871
    7. ',' → logprob: -9.520308494567871
    8. 'def' → logprob: -9.520308494567871
    9. '  
' → logprob: -10.270308494567871
    10. '    ' → logprob: -10.270308494567871

Token 1754: ' Let' (ID: 9024)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008643409237265587
    2. '
' → logprob: -5.633643627166748
    3. 'import' → logprob: -6.008643627166748
    4. '    
' → logprob: -7.133643627166748
    5. 'def' → logprob: -7.258643627166748
    6. '```' → logprob: -8.00864315032959
    7. 'from' → logprob: -8.38364315032959
    8. 'for' → logprob: -9.25864315032959
    9. ':' → logprob: -9.63364315032959
    10. ',' → logprob: -10.13364315032959

Token 1755: ' this' (ID: 495)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9559886455535889
    2. 'min' → logprob: -1.8309886455535889
    3. 'px' → logprob: -1.8309886455535889
    4. 'line' → logprob: -2.955988645553589
    5. 'dist' → logprob: -3.205988645553589
    6. 'l' → logprob: -3.580988645553589
    7. 'ball' → logprob: -3.830988645553589
    8. 'r' → logprob: -3.955988645553589
    9. '   ' → logprob: -4.080988883972168
    10. 'low' → logprob: -4.330988883972168

Token 1756: ' minimal' (ID: 19957)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.36904701590538025
    2. 'distance' → logprob: -1.8690470457077026
    3. 'dist' → logprob: -3.494046926498413
    4. 'be' → logprob: -3.869046926498413
    5. 'horizontal' → logprob: -3.869046926498413
    6. 'min' → logprob: -3.994046926498413
    7. 'continue' → logprob: -4.369047164916992
    8. 'import' → logprob: -4.619047164916992
    9. 'dx' → logprob: -4.869047164916992
    10. ' be' → logprob: -5.119047164916992

Token 1757: ' horizontal' (ID: 25511)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.748860776424408
    2. 'horizontal' → logprob: -0.748860776424408
    3. 'dist' → logprob: -3.2488608360290527
    4. 'radius' → logprob: -5.498860836029053
    5. '_horizontal' → logprob: -5.623860836029053
    6. '_distance' → logprob: -5.998860836029053
    7. 'def' → logprob: -6.248860836029053
    8. '_dist' → logprob: -6.498860836029053
    9. 'h' → logprob: -7.748860836029053
    10. '_h' → logprob: -8.373860359191895

Token 1758: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.5305495858192444
    2. 'dist' → logprob: -0.9055495858192444
    3. '_dist' → logprob: -5.5305495262146
    4. 'def' → logprob: -6.1555495262146
    5. '_distance' → logprob: -6.9055495262146
    6. ' distance' → logprob: -8.905550003051758
    7. 'import' → logprob: -10.030550003051758
    8. 'd' → logprob: -10.280550003051758
    9. 'radius' → logprob: -10.405550003051758
    10. '
' → logprob: -11.155550003051758

Token 1759: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.41107118129730225
    2. '=' → logprob: -1.1610711812973022
    3. ' be' → logprob: -4.286071300506592
    4. ' =' → logprob: -4.911071300506592
    5. 'def' → logprob: -6.786071300506592
    6. 's' → logprob: -8.286070823669434
    7. ',' → logprob: -8.411070823669434
    8. 'd' → logprob: -8.661070823669434
    9. 'between' → logprob: -8.661070823669434
    10. '   ' → logprob: -8.911070823669434

Token 1760: ' d' (ID: 272)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.08888592571020126
    2. 'min' → logprob: -3.338886022567749
    3. 'inf' → logprob: -3.838886022567749
    4. 'math' → logprob: -4.46388578414917
    5. 'd' → logprob: -4.58888578414917
    6. 'dist' → logprob: -6.21388578414917
    7. '   ' → logprob: -6.21388578414917
    8. 'res' → logprob: -7.46388578414917
    9. '=float' → logprob: -8.088886260986328
    10. '1' → logprob: -8.463886260986328

Token 1761: '_h' (ID: 3434)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10542580485343933
    2. ',' → logprob: -2.9804258346557617
    3. '
' → logprob: -3.7304258346557617
    4. 'def' → logprob: -4.855425834655762
    5. ' =' → logprob: -5.480425834655762
    6. '    
' → logprob: -5.980425834655762
    7. 'import' → logprob: -6.480425834655762
    8. '=' → logprob: -6.730425834655762
    9. ')' → logprob: -6.980425834655762
    10. 's' → logprob: -7.355425834655762

Token 1762: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20885099470615387
    2. '
' → logprob: -1.8338509798049927
    3. '    
' → logprob: -3.9588510990142822
    4. ',' → logprob: -5.583850860595703
    5. 'def' → logprob: -6.458850860595703
    6. '
' → logprob: -6.958850860595703
    7. 'import' → logprob: -7.083850860595703
    8. '.' → logprob: -7.333850860595703
    9. '

' → logprob: -8.833850860595703
    10. ' and' → logprob: -8.958850860595703

Token 1763: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005411197198554873
    2. '
' → logprob: -8.625540733337402
    3. '#' → logprob: -8.875540733337402
    4. ',' → logprob: -9.500540733337402
    5. ' and' → logprob: -10.750540733337402
    6. 'import' → logprob: -10.750540733337402
    7. 'def' → logprob: -10.750540733337402
    8. '    
' → logprob: -10.750540733337402
    9. '```' → logprob: -11.250540733337402
    10. ')' → logprob: -11.375540733337402

Token 1764: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009483946487307549
    2. '
' → logprob: -5.009483814239502
    3. '    
' → logprob: -6.759483814239502
    4. ',' → logprob: -7.759483814239502
    5. ')' → logprob: -8.38448429107666
    6. '#' (adapté à ' #') → logprob: -8.75948429107666
    7. 'import' → logprob: -9.00948429107666
    8. 'def' → logprob: -9.00948429107666
    9. '```' → logprob: -9.25948429107666
    10. ' and' → logprob: -9.38448429107666

Token 1765: ' Let' (ID: 9024)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0847582072019577
    2. '
' → logprob: -2.7097582817077637
    3. '#' → logprob: -5.459758281707764
    4. 'for' → logprob: -5.834758281707764
    5. 'import' → logprob: -6.334758281707764
    6. ' for' → logprob: -6.334758281707764
    7. '```' → logprob: -6.709758281707764
    8. 'r' → logprob: -7.834758281707764
    9. 'from' → logprob: -8.084757804870605
    10. 'def' → logprob: -8.084757804870605

Token 1766: ' block' (ID: 4355)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.7218577861785889
    2. '   ' → logprob: -1.7218577861785889
    3. 'h' → logprob: -1.8468577861785889
    4. 'r' → logprob: -2.096857786178589
    5. 'max' → logprob: -2.221857786178589
    6. 'min' → logprob: -2.346857786178589
    7. 'block' → logprob: -2.596857786178589
    8. '```' → logprob: -3.721857786178589
    9. 'for' → logprob: -4.471858024597168
    10. 'def' → logprob: -4.971858024597168

Token 1767: ' height' (ID: 4679)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.733962893486023
    2. '_min' → logprob: -1.608962893486023
    3. '_bottom' → logprob: -2.1089630126953125
    4. 'bottom' → logprob: -2.2339630126953125
    5. '_x' → logprob: -3.1089630126953125
    6. '_h' → logprob: -4.3589630126953125
    7. 'x' → logprob: -5.3589630126953125
    8. '_z' → logprob: -5.4839630126953125
    9. 'z' → logprob: -5.6089630126953125
    10. 'max' → logprob: -5.6089630126953125

Token 1768: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.7977961301803589
    2. 'be' → logprob: -1.7977961301803589
    3. '=' → logprob: -2.0477962493896484
    4. '_h' → logprob: -2.1727962493896484
    5. 'h' → logprob: -2.2977962493896484
    6. ' =' → logprob: -3.7977962493896484
    7. 'd' → logprob: -5.672796249389648
    8. ',' → logprob: -5.797796249389648
    9. ' h' → logprob: -5.922796249389648
    10. '=h' → logprob: -6.172796249389648

Token 1769: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.08691093325614929
    2. 'block' → logprob: -3.2119109630584717
    3. ' h' → logprob: -3.3369109630584717
    4. ' block' → logprob: -5.336910724639893
    5. 'max' → logprob: -6.461910724639893
    6. '   ' → logprob: -7.336910724639893
    7. ' max' → logprob: -9.21191120147705
    8. 'b' → logprob: -9.21191120147705
    9. 'min' → logprob: -10.21191120147705
    10. '    ' → logprob: -10.71191120147705

Token 1770: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06143443286418915
    2. '
' → logprob: -3.061434507369995
    3. '    
' → logprob: -4.436434268951416
    4. 'def' → logprob: -8.061434745788574
    5. 'import' → logprob: -9.186434745788574
    6. ',' → logprob: -9.436434745788574
    7. '
' → logprob: -9.686434745788574
    8. '  
' → logprob: -9.811434745788574
    9. '<|end|>' → logprob: -10.061434745788574
    10. '#' → logprob: -10.186434745788574

Token 1771: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003323626471683383
    2. '
' → logprob: -5.878323554992676
    3. '    
' → logprob: -7.628323554992676
    4. '```' → logprob: -11.253323554992676
    5. 'def' → logprob: -11.878323554992676
    6. 'import' → logprob: -12.503323554992676
    7. '#' → logprob: -13.628323554992676
    8. ' for' → logprob: -14.128323554992676
    9. '
' → logprob: -14.128323554992676
    10. ',' → logprob: -14.253323554992676

Token 1772: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005521411541849375
    2. '
' → logprob: -5.880521297454834
    3. 'r' → logprob: -7.255521297454834
    4. 'def' → logprob: -7.255521297454834
    5. '```' → logprob: -7.255521297454834
    6. 'min' → logprob: -8.255521774291992
    7. '    
' → logprob: -9.380521774291992
    8. 'max' → logprob: -9.380521774291992
    9. 'for' → logprob: -9.880521774291992
    10. 'import' → logprob: -10.380521774291992

Token 1773: ' The' (ID: 623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024014953523874283
    2. 'for' → logprob: -4.399014949798584
    3. 'def' → logprob: -5.399014949798584
    4. '```' → logprob: -6.149014949798584
    5. '#' → logprob: -6.524014949798584
    6. '
' → logprob: -7.149014949798584
    7. 'min' → logprob: -7.149014949798584
    8. 'import' → logprob: -7.399014949798584
    9. 'line' → logprob: -8.399015426635742
    10. 'r' → logprob: -8.649015426635742

Token 1774: ' vertical' (ID: 17679)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5064913630485535
    2. 'def' → logprob: -1.6314914226531982
    3. '   ' → logprob: -2.7564914226531982
    4. '#' → logprob: -2.8814914226531982
    5. 'low' → logprob: -3.3814914226531982
    6. ' for' → logprob: -4.131491184234619
    7. 'best' → logprob: -5.256491184234619
    8. 'r' → logprob: -5.256491184234619
    9. 'import' → logprob: -5.631491184234619
    10. 'ball' → logprob: -5.881491184234619

Token 1775: ' distance' (ID: 9324)
  Prédit: 'clear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'clear' → logprob: -0.7534264326095581
    2. 'distance' → logprob: -0.8784264326095581
    3. '_clear' → logprob: -2.8784265518188477
    4. '#' → logprob: -4.378426551818848
    5. 'space' → logprob: -5.003426551818848
    6. 'dist' → logprob: -5.003426551818848
    7. 'part' → logprob: -5.253426551818848
    8. 'def' → logprob: -5.503426551818848
    9. ' clearance' → logprob: -5.503426551818848
    10. 'component' → logprob: -5.628426551818848

Token 1776: ' between' (ID: 2870)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5316357612609863
    2. '#' → logprob: -1.7816357612609863
    3. 'needed' → logprob: -1.9066357612609863
    4. 'must' → logprob: -4.156635761260986
    5. 'from' → logprob: -4.406635761260986
    6. 'def' → logprob: -4.531635761260986
    7. 'required' → logprob: -4.656635761260986
    8. 'to' → logprob: -5.031635761260986
    9. 'available' → logprob: -5.281635761260986
    10. 'between' → logprob: -5.281635761260986

Token 1777: ' ball' (ID: 7880)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.02456529252231121
    2. 'the' → logprob: -4.14956521987915
    3. 'block' → logprob: -5.64956521987915
    4. 'center' → logprob: -6.27456521987915
    5. ' ball' → logprob: -6.39956521987915
    6. 'sphere' → logprob: -7.27456521987915
    7. '球' → logprob: -7.89956521987915
    8. '#' → logprob: -8.774565696716309
    9. '
' → logprob: -10.024565696716309
    10. ' the' → logprob: -10.524565696716309

Token 1778: ' center' (ID: 6170)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.03458869457244873
    2. ' center' → logprob: -4.034588813781738
    3. '_center' → logprob: -4.784588813781738
    4. 'r' → logprob: -6.034588813781738
    5. 'height' → logprob: -6.784588813781738
    6. '#' → logprob: -6.909588813781738
    7. '
' → logprob: -7.534588813781738
    8. '   ' → logprob: -7.659588813781738
    9. '_x' → logprob: -8.409588813781738
    10. 'radius' → logprob: -8.534588813781738

Token 1779: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7287989258766174
    2. 'and' → logprob: -1.2287988662719727
    3. '   ' → logprob: -1.7287988662719727
    4. ' to' → logprob: -4.603798866271973
    5. '#' → logprob: -4.853798866271973
    6. ' is' → logprob: -4.978798866271973
    7. 'to' → logprob: -5.103798866271973
    8. 'path' → logprob: -5.728798866271973
    9. ' path' → logprob: -6.228798866271973
    10. 'is' → logprob: -6.478798866271973

Token 1780: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.01629863679409027
    2. 'the' → logprob: -4.891298770904541
    3. ' block' → logprob: -5.516298770904541
    4. 'h' → logprob: -5.891298770904541
    5. 'ball' → logprob: -6.766298770904541
    6. 'r' → logprob: -8.141298294067383
    7. 'blocks' → logprob: -9.391298294067383
    8. ' the' → logprob: -9.641298294067383
    9. '#' → logprob: -9.641298294067383
    10. 'bottom' → logprob: -10.141298294067383

Token 1781: ' top' (ID: 2344)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.8758384585380554
    2. 'height' → logprob: -1.7508385181427002
    3. '   ' → logprob: -2.0008385181427
    4. 'top' → logprob: -2.6258385181427
    5. ' top' → logprob: -3.0008385181427
    6. '#' → logprob: -3.2508385181427
    7. 'is' → logprob: -3.5008385181427
    8. ' height' → logprob: -4.125838279724121
    9. 's' → logprob: -4.375838279724121
    10. 'bottom' → logprob: -4.875838279724121

Token 1782: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6917544603347778
    2. '   ' → logprob: -1.3167544603347778
    3. ' must' → logprob: -2.4417543411254883
    4. 'is' → logprob: -2.6917543411254883
    5. 'must' → logprob: -2.8167543411254883
    6. '#' → logprob: -5.566754341125488
    7. '
' → logprob: -6.691754341125488
    8. ' should' → logprob: -6.941754341125488
    9. ' =' → logprob: -6.941754341125488
    10. 'r' → logprob: -7.066754341125488

Token 1783: ' r' (ID: 428)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.8209500908851624
    2. 'r' → logprob: -0.9459500908851624
    3. 'max' → logprob: -2.5709500312805176
    4. '   ' → logprob: -3.1959500312805176
    5. ' h' → logprob: -4.070950031280518
    6. ' max' → logprob: -4.445950031280518
    7. ' r' → logprob: -4.820950031280518
    8. '(h' → logprob: -5.570950031280518
    9. '(r' → logprob: -5.820950031280518
    10. '(' → logprob: -5.820950031280518

Token 1784: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6602073311805725
    2. '   ' → logprob: -0.7852073311805725
    3. '**' → logprob: -4.660207271575928
    4. '-' → logprob: -5.410207271575928
    5. '#' → logprob: -5.535207271575928
    6. 'def' → logprob: -6.285207271575928
    7. ')' → logprob: -6.410207271575928
    8. '
' → logprob: -6.535207271575928
    9. ',' → logprob: -7.035207271575928
    10. 'import' → logprob: -7.785207271575928

Token 1785: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -5.848420551046729e-05
    2. ' h' → logprob: -9.7500581741333
    3. 'block' → logprob: -16.250059127807617
    4. 'max' → logprob: -17.500059127807617
    5. ' block' → logprob: -18.000059127807617
    6. '
' → logprob: -18.250059127807617
    7. '   ' → logprob: -18.625059127807617
    8. '<h' → logprob: -19.625059127807617
    9. '	h' → logprob: -19.750059127807617
    10. 'height' → logprob: -19.875059127807617

Token 1786: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0363030806183815
    2. '
' → logprob: -3.6613030433654785
    3. '    
' → logprob: -5.0363030433654785
    4. 'def' → logprob: -5.7863030433654785
    5. 'import' → logprob: -9.536303520202637
    6. '```' → logprob: -9.786303520202637
    7. '   
' → logprob: -10.536303520202637
    8. ')' → logprob: -10.661303520202637
    9. '#' → logprob: -11.036303520202637
    10. '<|end|>' → logprob: -11.036303520202637

Token 1787: 'ball' (ID: 5052)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8944862484931946
    2. '   ' → logprob: -1.0194861888885498
    3. ')
' → logprob: -1.6444861888885498
    4. ' if' → logprob: -4.394486427307129
    5. ' )
' → logprob: -4.769486427307129
    6. ' )' → logprob: -5.144486427307129
    7. '#' → logprob: -5.394486427307129
    8. ')

' → logprob: -7.019486427307129
    9. 'if' → logprob: -7.269486427307129
    10. ' ' → logprob: -7.269486427307129

Token 1788: ' center' (ID: 6170)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.593304455280304
    2. '-' → logprob: -1.2183043956756592
    3. ')' → logprob: -3.218304395675659
    4. '-r' → logprob: -3.593304395675659
    5. '_height' → logprob: -3.968304395675659
    6. '_r' → logprob: -4.718304634094238
    7. '#' → logprob: -5.093304634094238
    8. '-radius' → logprob: -5.093304634094238
    9. '-height' → logprob: -5.218304634094238
    10. '_x' → logprob: -5.593304634094238

Token 1789: ' at' (ID: 540)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.930057942867279
    2. ' height' → logprob: -1.3050580024719238
    3. ')' → logprob: -2.305058002471924
    4. ' is' → logprob: -2.430058002471924
    5. ' at' → logprob: -2.930058002471924
    6. '_height' → logprob: -4.305058002471924
    7. ' must' → logprob: -4.680058002471924
    8. 'e' → logprob: -4.930058002471924
    9. 'must' → logprob: -4.930058002471924
    10. 'is' → logprob: -5.055058002471924

Token 1790: ' height' (ID: 4679)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.09527700394392014
    2. 'height' → logprob: -2.4702770709991455
    3. '0' → logprob: -5.845276832580566
    4. 'z' → logprob: -6.220276832580566
    5. ' r' → logprob: -7.720276832580566
    6. ')' → logprob: -7.720276832580566
    7. ' height' → logprob: -8.095276832580566
    8. 'the' → logprob: -9.595276832580566
    9. '```' → logprob: -10.470276832580566
    10. '+' → logprob: -11.220276832580566

Token 1791: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.008817359805107117
    2. ' r' → logprob: -4.758817195892334
    3. ')' → logprob: -8.633817672729492
    4. ' at' → logprob: -12.008817672729492
    5. ',' → logprob: -12.133817672729492
    6. '   ' → logprob: -12.383817672729492
    7. '
' → logprob: -13.133817672729492
    8. '),' → logprob: -13.258817672729492
    9. ' ' → logprob: -13.883817672729492
    10. '```' → logprob: -14.258817672729492

Token 1792: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13761144876480103
    2. '   ' → logprob: -2.3876113891601562
    3. ')
' → logprob: -3.5126113891601562
    4. ',' → logprob: -6.387611389160156
    5. '),' → logprob: -7.012611389160156
    6. ').' → logprob: -7.012611389160156
    7. ' )' → logprob: -7.137611389160156
    8. 'def' → logprob: -7.262611389160156
    9. ')

' → logprob: -7.887611389160156
    10. ' +' → logprob: -8.262611389160156

Token 1793: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00042531240615062416
    2. '
' → logprob: -8.875425338745117
    3. '```' → logprob: -9.250425338745117
    4. '#' → logprob: -9.500425338745117
    5. '<|end|>' → logprob: -10.500425338745117
    6. ')' → logprob: -10.500425338745117
    7. ',' → logprob: -10.875425338745117
    8. 'def' → logprob: -11.250425338745117
    9. '    
' → logprob: -11.500425338745117
    10. ' and' → logprob: -12.750425338745117

Token 1794: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006467382423579693
    2. '
' → logprob: -5.131467342376709
    3. 'def' → logprob: -8.631467819213867
    4. ')' → logprob: -9.006467819213867
    5. '    
' → logprob: -9.631467819213867
    6. '#' (adapté à ' #') → logprob: -9.881467819213867
    7. '```' → logprob: -10.506467819213867
    8. ',' → logprob: -10.881467819213867
    9. '
' → logprob: -11.631467819213867
    10. ')
' → logprob: -11.756467819213867

Token 1795: ' The' (ID: 623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015113052912056446
    2. '
' → logprob: -4.76511287689209
    3. 'def' → logprob: -5.89011287689209
    4. 'for' → logprob: -6.39011287689209
    5. '```' → logprob: -6.89011287689209
    6. '#' → logprob: -7.89011287689209
    7. ' for' → logprob: -8.76511287689209
    8. 'import' → logprob: -9.01511287689209
    9. '    
' → logprob: -9.89011287689209
    10. '``' → logprob: -10.26511287689209

Token 1796: ' ball' (ID: 7880)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.17403562366962433
    2. ' vertical' → logprob: -2.9240355491638184
    3. '#' → logprob: -3.1740355491638184
    4. 'horizontal' → logprob: -4.049035549163818
    5. '   ' → logprob: -4.424035549163818
    6. 'def' → logprob: -4.674035549163818
    7. 'for' → logprob: -5.049035549163818
    8. 'ball' → logprob: -5.174035549163818
    9. 'if' → logprob: -5.424035549163818
    10. ' for' → logprob: -6.049035549163818

Token 1797: ' surface' (ID: 9753)
  Prédit: ' center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' center' → logprob: -0.7236420512199402
    2. 'center' → logprob: -0.8486420512199402
    3. '   ' → logprob: -3.598642110824585
    4. '_center' → logprob: -3.723642110824585
    5. ' must' → logprob: -5.223641872406006
    6. '#' → logprob: -5.223641872406006
    7. 'radius' → logprob: -5.348641872406006
    8. ' radius' → logprob: -5.473641872406006
    9. 'must' → logprob: -6.223641872406006
    10. '
' → logprob: -6.723641872406006

Token 1798: ' can' (ID: 665)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2131328582763672
    2. 'radius' → logprob: -1.7131328582763672
    3. 'cannot' → logprob: -1.9631328582763672
    4. 'must' → logprob: -2.213132858276367
    5. ' radius' → logprob: -2.963132858276367
    6. ' must' → logprob: -3.088132858276367
    7. 'distance' → logprob: -3.213132858276367
    8. ' cannot' → logprob: -3.338132858276367
    9. ' is' → logprob: -3.463132858276367
    10. '#' → logprob: -3.838132858276367

Token 1799: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.45332422852516174
    2. 'touch' → logprob: -2.078324317932129
    3. 'only' → logprob: -2.953324317932129
    4. ' not' → logprob: -3.328324317932129
    5. 'penetr' → logprob: -3.328324317932129
    6. 't' → logprob: -3.703324317932129
    7. ' only' → logprob: -4.203324317932129
    8. 'contact' → logprob: -4.703324317932129
    9. 'be' → logprob: -4.828324317932129
    10. ' touch' → logprob: -4.953324317932129

Token 1800: ' intersect' (ID: 64353)
  Prédit: 'penetr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'penetr' → logprob: -0.7512267827987671
    2. 'inter' → logprob: -1.001226782798767
    3. ' intersect' → logprob: -3.1262269020080566
    4. 'touch' → logprob: -3.3762269020080566
    5. ' penetrate' → logprob: -3.6262269020080566
    6. 'be' → logprob: -3.7512269020080566
    7. ' be' → logprob: -4.001226902008057
    8. ' touch' → logprob: -5.001226902008057
    9. 'come' → logprob: -7.376226902008057
    10. '#' → logprob: -7.501226902008057

Token 1801: ' the' (ID: 290)
  Prédit: ' block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' block' → logprob: -0.14737778902053833
    2. ' the' → logprob: -2.6473777294158936
    3. 'block' → logprob: -3.1473777294158936
    4. 'the' → logprob: -3.7723777294158936
    5. '   ' → logprob: -9.022377967834473
    6. '#' → logprob: -10.272377967834473
    7. '(block' → logprob: -10.397377967834473
    8. ' any' → logprob: -11.647377967834473
    9. ' #' → logprob: -12.022377967834473
    10. ' ' → logprob: -12.022377967834473

Token 1802: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.16874727606773376
    2. ' block' → logprob: -1.9187473058700562
    3. 'blocks' → logprob: -5.293747425079346
    4. ' blocks' → logprob: -6.418747425079346
    5. 'ball' → logprob: -7.668747425079346
    6. '#' → logprob: -7.918747425079346
    7. 'sphere' → logprob: -8.293746948242188
    8. '```' → logprob: -9.043746948242188
    9. 'surface' → logprob: -9.293746948242188
    10. 'r' → logprob: -9.418746948242188

Token 1803: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0247261431068182
    2. '
' → logprob: -4.024725914001465
    3. '    
' → logprob: -5.899725914001465
    4. 'def' → logprob: -6.649725914001465
    5. ' for' → logprob: -7.649725914001465
    6. 'import' → logprob: -7.899725914001465
    7. ',' → logprob: -8.024725914001465
    8. '#' → logprob: -8.524725914001465
    9. '
' → logprob: -8.524725914001465
    10. ' (' → logprob: -8.649725914001465

Token 1804: ' so' (ID: 813)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037327881902456284
    2. '#' → logprob: -3.412327766418457
    3. ' so' → logprob: -6.287327766418457
    4. 'def' → logprob: -7.662327766418457
    5. '
' → logprob: -7.912327766418457
    6. ' #' → logprob: -8.787327766418457
    7. ' and' → logprob: -9.412327766418457
    8. '       ' → logprob: -9.412327766418457
    9. '    
' → logprob: -9.412327766418457
    10. '    ' → logprob: -9.662327766418457

Token 1805: ':
' (ID: 734)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8487964272499084
    2. '   ' → logprob: -0.9737964272499084
    3. ' if' → logprob: -2.2237963676452637
    4. ' the' → logprob: -3.4737963676452637
    5. 'for' → logprob: -3.4737963676452637
    6. 'if' → logprob: -4.598796367645264
    7. 'the' → logprob: -5.223796367645264
    8. '#' → logprob: -5.848796367645264
    9. ' r' → logprob: -6.598796367645264
    10. 'import' → logprob: -6.848796367645264

Token 1806: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006845565512776375
    2. '#' → logprob: -8.37568473815918
    3. '```' → logprob: -8.37568473815918
    4. 'def' → logprob: -9.12568473815918
    5. '
' → logprob: -10.12568473815918
    6. '    ' → logprob: -11.12568473815918
    7. '       ' → logprob: -11.25068473815918
    8. ' for' → logprob: -11.37568473815918
    9. ')' → logprob: -12.12568473815918
    10. 'for' → logprob: -12.37568473815918

Token 1807: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0321979783475399
    2. 'for' → logprob: -4.157197952270508
    3. '```' → logprob: -5.032197952270508
    4. '#' (adapté à ' #') → logprob: -5.157197952270508
    5. ' for' → logprob: -5.782197952270508
    6. '
' → logprob: -8.282197952270508
    7. '``' → logprob: -8.532197952270508
    8. 'def' → logprob: -9.657197952270508
    9. '`' → logprob: -10.157197952270508
    10. 'import' → logprob: -10.282197952270508

Token 1808: ' minimal' (ID: 19957)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6384823322296143
    2. '   ' → logprob: -0.8884823322296143
    3. 'r' → logprob: -4.013482093811035
    4. '```' → logprob: -4.138482093811035
    5. ' for' → logprob: -4.638482093811035
    6. 'import' → logprob: -4.763482093811035
    7. '#' → logprob: -5.263482093811035
    8. 'def' → logprob: -7.013482093811035
    9. 'max' → logprob: -7.763482093811035
    10. 'if' → logprob: -7.763482093811035

Token 1809: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.3105503022670746
    2. 'vertical' → logprob: -2.5605502128601074
    3. 'dist' → logprob: -2.6855502128601074
    4. 'surface' → logprob: -2.8105502128601074
    5. '   ' → logprob: -4.560550212860107
    6. 'horizontal' → logprob: -4.685550212860107
    7. 'radius' → logprob: -4.810550212860107
    8. ' distance' → logprob: -4.935550212860107
    9. 'for' → logprob: -5.560550212860107
    10. 'required' → logprob: -5.810550212860107

Token 1810: ' between' (ID: 2870)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6736478209495544
    2. ' =' → logprob: -1.9236478805541992
    3. '=' → logprob: -2.673647880554199
    4. 'from' → logprob: -2.673647880554199
    5. 'between' → logprob: -2.798647880554199
    6. ' between' → logprob: -3.048647880554199
    7. '#' → logprob: -3.048647880554199
    8. '_between' → logprob: -3.673647880554199
    9. '_squared' → logprob: -5.298647880554199
    10. '```' → logprob: -6.048647880554199

Token 1811: ' ball' (ID: 7880)
  Prédit: 'ball'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ball' → logprob: -0.11774639040231705
    2. 'the' → logprob: -3.117746353149414
    3. '(ball' → logprob: -3.492746353149414
    4. 'block' → logprob: -4.242746353149414
    5. ' ball' → logprob: -5.242746353149414
    6. 'sphere' → logprob: -5.617746353149414
    7. 'center' → logprob: -5.992746353149414
    8. '(s' → logprob: -5.992746353149414
    9. 'horizontal' → logprob: -6.242746353149414
    10. '球' → logprob: -6.367746353149414

Token 1812: ' center' (ID: 6170)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.8847537636756897
    2. ' center' → logprob: -1.009753704071045
    3. 'surface' → logprob: -2.009753704071045
    4. ' surface' → logprob: -2.634753704071045
    5. '_center' → logprob: -4.884753704071045
    6. '_surface' → logprob: -5.634753704071045
    7. '
' → logprob: -6.509753704071045
    8. ''s' → logprob: -6.634753704071045
    9. '(center' → logprob: -7.884753704071045
    10. 's' → logprob: -8.259754180908203

Token 1813: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.6198326349258423
    2. ' and' → logprob: -0.9948326349258423
    3. 'to' → logprob: -3.3698325157165527
    4. ' to' → logprob: -3.8698325157165527
    5. '   ' → logprob: -4.619832515716553
    6. 'surface' → logprob: -5.119832515716553
    7. ',' → logprob: -5.744832515716553
    8. 'segment' → logprob: -5.744832515716553
    9. 'center' → logprob: -6.119832515716553
    10. '_surface' → logprob: -6.244832515716553

Token 1814: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.05888748541474342
    2. ' block' → logprob: -3.433887481689453
    3. 'the' → logprob: -3.933887481689453
    4. '(block' → logprob: -5.933887481689453
    5. ' the' → logprob: -7.058887481689453
    6. 'any' → logprob: -7.808887481689453
    7. '((' → logprob: -8.308887481689453
    8. 'r' → logprob: -8.808887481689453
    9. '#' → logprob: -8.808887481689453
    10. '(s' → logprob: -8.933887481689453

Token 1815: ' >=' (ID: 5064)
  Prédit: 'surface'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'surface' → logprob: -0.9458098411560059
    2. '   ' → logprob: -1.4458098411560059
    3. ' surface' → logprob: -2.070809841156006
    4. 's' → logprob: -2.820809841156006
    5. '_surface' → logprob: -3.570809841156006
    6. ' =' → logprob: -3.695809841156006
    7. ')' → logprob: -3.695809841156006
    8. '#' → logprob: -4.320809841156006
    9. ' center' → logprob: -4.320809841156006
    10. 'center' → logprob: -4.320809841156006

Token 1816: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.004910073708742857
    2. ' r' → logprob: -5.754909992218018
    3. '2' → logprob: -6.379909992218018
    4. ' ' → logprob: -10.379910469055176
    5. '```' → logprob: -13.629910469055176
    6. '1' → logprob: -14.379910469055176
    7. 'radius' → logprob: -14.504910469055176
    8. '
' → logprob: -14.504910469055176
    9. '   ' → logprob: -14.629910469055176
    10. '0' → logprob: -15.254910469055176

Token 1817: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09207651764154434
    2. '
' → logprob: -2.842076539993286
    3. '    
' → logprob: -3.592076539993286
    4. 'def' → logprob: -7.342076301574707
    5. ')' → logprob: -8.592076301574707
    6. '  
' → logprob: -8.717076301574707
    7. '   
' → logprob: -8.842076301574707
    8. ',' → logprob: -8.842076301574707
    9. '```' → logprob: -8.967076301574707
    10. ' 
' → logprob: -9.342076301574707

Token 1818: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006236279383301735
    2. '
' → logprob: -5.6312360763549805
    3. '    
' → logprob: -6.0062360763549805
    4. 'def' → logprob: -10.13123607635498
    5. '```' → logprob: -10.50623607635498
    6. '  
' → logprob: -10.88123607635498
    7. '   
' → logprob: -11.38123607635498
    8. ' for' → logprob: -12.13123607635498
    9. ' 
' → logprob: -12.13123607635498
    10. ',' → logprob: -12.13123607635498

Token 1819: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02480080910027027
    2. '
' → logprob: -4.149800777435303
    3. '    
' → logprob: -4.774800777435303
    4. '  
' → logprob: -9.524801254272461
    5. '   
' → logprob: -10.149801254272461
    6. '```' → logprob: -10.399801254272461
    7. 'for' → logprob: -10.524801254272461
    8. ' 
' → logprob: -11.274801254272461
    9. ' for' → logprob: -11.399801254272461
    10. '\n' → logprob: -11.399801254272461

Token 1820: ' minimal' (ID: 19957)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043872810900211334
    2. '
' → logprob: -3.668872833251953
    3. '```' → logprob: -4.918872833251953
    4. ' for' → logprob: -6.168872833251953
    5. 'for' → logprob: -6.168872833251953
    6. '    
' → logprob: -6.293872833251953
    7. '`' → logprob: -7.293872833251953
    8. '``' → logprob: -7.418872833251953
    9. 'def' → logprob: -7.668872833251953
    10. 'import' → logprob: -7.793872833251953

Token 1821: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.5511096119880676
    2. 'horizontal' → logprob: -1.5511095523834229
    3. 'dist' → logprob: -1.8011095523834229
    4. 'vertical' → logprob: -3.926109552383423
    5. '
' → logprob: -5.301109790802002
    6. 'd' → logprob: -5.676109790802002
    7. 'def' → logprob: -5.801109790802002
    8. 'required' → logprob: -5.926109790802002
    9. ' horizontal' → logprob: -6.301109790802002
    10. ' distance' → logprob: -6.301109790802002

Token 1822: '^' (ID: 61)
  Prédit: 'between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'between' → logprob: -0.13483808934688568
    2. ' between' → logprob: -3.259838104248047
    3. 'from' → logprob: -3.634838104248047
    4. 'must' → logprob: -4.259838104248047
    5. '=' → logprob: -4.384838104248047
    6. '**' → logprob: -4.509838104248047
    7. '_between' → logprob: -5.509838104248047
    8. ' =' → logprob: -5.759838104248047
    9. 's' → logprob: -5.759838104248047
    10. '_squared' → logprob: -6.134838104248047

Token 1823: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06183299794793129
    2. '=' → logprob: -3.311832904815674
    3. ' =' → logprob: -4.686832904815674
    4. '**' → logprob: -4.686832904815674
    5. '   ' → logprob: -5.936832904815674
    6. ')' → logprob: -7.311832904815674
    7. ' ' → logprob: -8.311833381652832
    8. '```' → logprob: -8.311833381652832
    9. '#' → logprob: -8.436833381652832
    10. '
' → logprob: -8.811833381652832

Token 1824: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.089782953262329
    2. ' =' → logprob: -1.089782953262329
    3. ' >=' → logprob: -1.714782953262329
    4. ' <=' → logprob: -2.839782953262329
    5. '   ' → logprob: -3.089782953262329
    6. '>=' → logprob: -3.339782953262329
    7. '<=' → logprob: -5.33978271484375
    8. '```' → logprob: -6.71478271484375
    9. 'def' → logprob: -7.83978271484375
    10. ')' → logprob: -7.83978271484375

Token 1825: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4095451533794403
    2. '   ' → logprob: -2.5345451831817627
    3. '(d' → logprob: -2.7845451831817627
    4. 'max' → logprob: -3.0345451831817627
    5. '"' → logprob: -3.2845451831817627
    6. 'r' → logprob: -3.6595451831817627
    7. 'f' → logprob: -3.7845451831817627
    8. ''d' → logprob: -4.159544944763184
    9. '"d' → logprob: -4.409544944763184
    10. '(r' → logprob: -5.034544944763184

Token 1826: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.00022308611369226128
    2. 'h' → logprob: -8.750223159790039
    3. '_horizontal' → logprob: -10.625223159790039
    4. '_x' → logprob: -11.625223159790039
    5. 'horizontal' → logprob: -11.625223159790039
    6. '```' → logprob: -12.500223159790039
    7. '   ' → logprob: -12.500223159790039
    8. '
' → logprob: -12.625223159790039
    9. '2' → logprob: -12.625223159790039
    10. '\' → logprob: -13.750223159790039

Token 1827: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.019952058792114258
    2. '2' → logprob: -4.019951820373535
    3. '*' → logprob: -6.894951820373535
    4. '²' → logprob: -8.894951820373535
    5. ' **' → logprob: -8.894951820373535
    6. '```' → logprob: -8.894951820373535
    7. 'def' → logprob: -9.144951820373535
    8. '*d' → logprob: -9.519951820373535
    9. 'd' → logprob: -9.644951820373535
    10. '
' → logprob: -10.269951820373535

Token 1828: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.625005722045898
    3. '**' → logprob: -13.125005722045898
    4. '²' → logprob: -15.000005722045898
    5. '*' → logprob: -16.1250057220459
    6. '```' → logprob: -17.2500057220459
    7. '
' → logprob: -17.5000057220459
    8. '​' → logprob: -18.0000057220459
    9. 'd' → logprob: -18.7500057220459
    10. '   ' → logprob: -19.1250057220459

Token 1829: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.044498737901449203
    2. '   ' → logprob: -3.2944986820220947
    3. '+' → logprob: -6.169498920440674
    4. 'def' → logprob: -6.544498920440674
    5. ',' → logprob: -7.044498920440674
    6. ' def' → logprob: -7.169498920440674
    7. ' ' → logprob: -8.294498443603516
    8. '    ' → logprob: -8.294498443603516
    9. ' -' → logprob: -8.669498443603516
    10. ')' → logprob: -8.919498443603516

Token 1830: ' max' (ID: 2999)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.06458869576454163
    2. ' (' → logprob: -3.564588785171509
    3. 'max' → logprob: -3.564588785171509
    4. '(max' → logprob: -5.18958854675293
    5. '   ' → logprob: -9.18958854675293
    6. '(' → logprob: -9.18958854675293
    7. ' max' → logprob: -9.68958854675293
    8. '
' → logprob: -10.31458854675293
    9. 'min' → logprob: -11.06458854675293
    10. '(min' → logprob: -12.18958854675293

Token 1831: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.6166903151315637e-05
    2. '0' → logprob: -11.125016212463379
    3. ' (' → logprob: -13.750016212463379
    4. '```' → logprob: -15.375016212463379
    5. '((' → logprob: -17.125015258789062
    6. 'def' → logprob: -17.875015258789062
    7. '   ' → logprob: -17.875015258789062
    8. '(
' → logprob: -18.250015258789062
    9. '`' → logprob: -19.000015258789062
    10. '``' → logprob: -19.500015258789062

Token 1832: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.576093316078186
    2. '0' → logprob: -0.826093316078186
    3. '(h' → logprob: -9.201093673706055
    4. '(r' → logprob: -10.451093673706055
    5. ' (' → logprob: -11.576093673706055
    6. 'h' → logprob: -12.201093673706055
    7. '```' → logprob: -12.826093673706055
    8. '((' → logprob: -13.576093673706055
    9. '   ' → logprob: -13.701093673706055
    10. 'r' → logprob: -13.951093673706055

Token 1833: ',' (ID: 11)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.05588541179895401
    2. '(' → logprob: -2.9308853149414062
    3. ',' → logprob: -7.430885314941406
    4. '(r' → logprob: -8.180885314941406
    5. ',h' → logprob: -10.055885314941406
    6. ' (' → logprob: -10.180885314941406
    7. '0' → logprob: -10.430885314941406
    8. '   ' → logprob: -12.305885314941406
    9. 'h' → logprob: -12.430885314941406
    10. ',(' → logprob: -12.555885314941406

Token 1834: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.07913675159215927
    2. '(h' → logprob: -2.579136848449707
    3. ' h' → logprob: -8.954136848449707
    4. ' (' → logprob: -9.579136848449707
    5. '(' → logprob: -11.079136848449707
    6. '(r' → logprob: -11.329136848449707
    7. 'r' → logprob: -12.079136848449707
    8. '   ' → logprob: -12.454136848449707
    9. '```' → logprob: -12.829136848449707
    10. '0' → logprob: -13.204136848449707

Token 1835: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.017304278910160065
    2. '-' → logprob: -4.267304420471191
    3. '-r' → logprob: -5.767304420471191
    4. '   ' → logprob: -12.517304420471191
    5. ' ' → logprob: -13.892304420471191
    6. '```' → logprob: -14.267304420471191
    7. ' -
' → logprob: -14.517304420471191
    8. '-
' → logprob: -14.892304420471191
    9. ' ' → logprob: -14.892304420471191
    10. '  ' → logprob: -15.392304420471191

Token 1836: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.007606866303831339
    2. ' r' → logprob: -4.8826069831848145
    3. ')' → logprob: -14.507606506347656
    4. '
' → logprob: -16.382606506347656
    5. '_r' → logprob: -16.382606506347656
    6. '```' → logprob: -16.757606506347656
    7. '(r' → logprob: -17.632606506347656
    8. ' ' → logprob: -18.132606506347656
    9. ',' → logprob: -18.132606506347656
    10. '	r' → logprob: -19.007606506347656

Token 1837: ')^' (ID: 73602)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.024338562041521072
    2. ')' → logprob: -3.774338483810425
    3. ')^' → logprob: -7.149338722229004
    4. ' )' → logprob: -8.774338722229004
    5. '   ' → logprob: -9.399338722229004
    6. '**' → logprob: -10.274338722229004
    7. '```' → logprob: -11.524338722229004
    8. 'r' → logprob: -11.649338722229004
    9. ' ' → logprob: -11.649338722229004
    10. '#' → logprob: -13.899338722229004

Token 1838: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002775438770186156
    2. '**' → logprob: -8.750277519226074
    3. '```' → logprob: -9.500277519226074
    4. ')' → logprob: -11.125277519226074
    5. ' ' → logprob: -11.250277519226074
    6. '
' → logprob: -11.875277519226074
    7. '``' → logprob: -12.875277519226074
    8. 'def' → logprob: -13.125277519226074
    9. '²' → logprob: -13.875277519226074
    10. '(' → logprob: -14.125277519226074

Token 1839: ' >=' (ID: 5064)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0068030026741325855
    2. '
' → logprob: -5.256803035736084
    3. 'def' → logprob: -7.256803035736084
    4. '    
' → logprob: -8.256802558898926
    5. ' for' → logprob: -8.256802558898926
    6. '```' → logprob: -9.006802558898926
    7. 'import' → logprob: -9.256802558898926
    8. 'for' → logprob: -10.006802558898926
    9. ',' → logprob: -11.381802558898926
    10. '
' → logprob: -11.631802558898926

Token 1840: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.26103711128234863
    2. '2' → logprob: -2.3860371112823486
    3. '(' → logprob: -2.8860371112823486
    4. ' r' → logprob: -3.3860371112823486
    5. ' (' → logprob: -3.6360371112823486
    6. '(r' → logprob: -4.2610368728637695
    7. ' ' → logprob: -5.5110368728637695
    8. '   ' → logprob: -6.0110368728637695
    9. '```' → logprob: -7.8860368728637695
    10. '4' → logprob: -8.13603687286377

Token 1841: '^' (ID: 61)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0597559213638306
    2. '
' → logprob: -1.4347559213638306
    3. '2' → logprob: -1.6847559213638306
    4. '**' → logprob: -2.684755802154541
    5. ')' → logprob: -3.309755802154541
    6. ')
' → logprob: -3.309755802154541
    7. ' ' → logprob: -3.434755802154541
    8. 'def' → logprob: -3.934755802154541
    9. '```' → logprob: -4.559755802154541
    10. '       ' → logprob: -5.559755802154541

Token 1842: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.762356209335849e-05
    2. ' ' → logprob: -10.37503719329834
    3. '0' → logprob: -13.12503719329834
    4. '```' → logprob: -13.12503719329834
    5. '**' → logprob: -13.75003719329834
    6. '²' → logprob: -15.37503719329834
    7. '``' → logprob: -15.37503719329834
    8. '*' → logprob: -15.50003719329834
    9. '   ' → logprob: -15.50003719329834
    10. '(' → logprob: -16.250038146972656

Token 1843: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015703270211815834
    2. '
' → logprob: -4.265703201293945
    3. 'def' → logprob: -7.390703201293945
    4. '    
' → logprob: -7.390703201293945
    5. '```' → logprob: -9.140703201293945
    6. 'import' → logprob: -9.515703201293945
    7. ' for' → logprob: -10.515703201293945
    8. '       ' → logprob: -11.015703201293945
    9. 'for' → logprob: -11.140703201293945
    10. ')' → logprob: -11.265703201293945

Token 1844: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002100179670378566
    2. '
' → logprob: -7.252099990844727
    3. 'for' → logprob: -7.377099990844727
    4. 'def' → logprob: -8.002099990844727
    5. ' for' → logprob: -8.377099990844727
    6. '```' → logprob: -9.127099990844727
    7. '    
' → logprob: -10.002099990844727
    8. '       ' → logprob: -11.377099990844727
    9. ')' → logprob: -11.502099990844727
    10. 'import' → logprob: -11.627099990844727

Token 1845: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004512719344347715
    2. 'for' → logprob: -5.629512786865234
    3. ' for' → logprob: -8.254512786865234
    4. '
' → logprob: -8.379512786865234
    5. 'def' → logprob: -8.379512786865234
    6. '```' → logprob: -8.629512786865234
    7. 'import' → logprob: -12.254512786865234
    8. '``' → logprob: -12.379512786865234
    9. '    
' → logprob: -13.004512786865234
    10. '       ' → logprob: -13.879512786865234

Token 1846: ' Rear' (ID: 69048)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08359681069850922
    2. 'for' → logprob: -2.583596706390381
    3. ' for' → logprob: -5.583596706390381
    4. 'def' → logprob: -7.708596706390381
    5. 'import' → logprob: -8.458597183227539
    6. '
' → logprob: -8.583597183227539
    7. '```' → logprob: -9.958597183227539
    8. '    
' → logprob: -10.958597183227539
    9. 'from' → logprob: -11.708597183227539
    10. '``' → logprob: -12.958597183227539

Token 1847: 'r' (ID: 81)
  Prédit: 'mainder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mainder' → logprob: -0.866830050945282
    2. 'st' → logprob: -1.6168301105499268
    3. '   ' → logprob: -1.7418301105499268
    4. 'nder' → logprob: -2.8668301105499268
    5. 'm' → logprob: -3.1168301105499268
    6. 'turn' → logprob: -3.1168301105499268
    7. 'inder' → logprob: -4.116829872131348
    8. 'ma' → logprob: -4.491829872131348
    9. 'r' → logprob: -4.866829872131348
    10. 'main' → logprob: -5.241829872131348

Token 1848: 'anged' (ID: 5717)
  Prédit: 'eturn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eturn' → logprob: -0.5566441416740417
    2. 'urn' → logprob: -1.8066442012786865
    3. 'r' → logprob: -1.9316442012786865
    4. 'turn' → logprob: -3.4316442012786865
    5. '   ' → logprob: -3.8066442012786865
    6. 'def' → logprob: -4.056643962860107
    7. 'ax' → logprob: -4.681643962860107
    8. 'ange' → logprob: -5.181643962860107
    9. 'aise' → logprob: -5.181643962860107
    10. '=' → logprob: -5.556643962860107

Token 1849: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4065297544002533
    2. ' for' → logprob: -2.156529664993286
    3. ':' → logprob: -2.531529664993286
    4. 'for' → logprob: -2.531529664993286
    5. 'def' → logprob: -3.281529664993286
    6. '```' → logprob: -4.531529903411865
    7. '
' → logprob: -5.531529903411865
    8. ':
' → logprob: -6.031529903411865
    9. ' =' → logprob: -6.906529903411865
    10. ',' → logprob: -7.031529903411865

Token 1850: ' d' (ID: 272)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5197281837463379
    2. 'for' → logprob: -1.644728183746338
    3. '   ' → logprob: -2.144728183746338
    4. '```' → logprob: -2.519728183746338
    5. 'def' → logprob: -4.894728183746338
    6. '
' → logprob: -6.644728183746338
    7. '``' → logprob: -6.644728183746338
    8. 'import' → logprob: -6.769728183746338
    9. ' r' → logprob: -6.769728183746338
    10. ' def' → logprob: -7.144728183746338

Token 1851: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.004476997070014477
    2. '   ' → logprob: -6.129477024078369
    3. '_' → logprob: -6.629477024078369
    4. '**' → logprob: -7.754477024078369
    5. '```' → logprob: -8.879476547241211
    6. 'def' → logprob: -9.254476547241211
    7. '=' → logprob: -10.129476547241211
    8. '_squared' → logprob: -10.254476547241211
    9. ')' → logprob: -10.504476547241211
    10. '
' → logprob: -10.629476547241211

Token 1852: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0020843585953116417
    2. '2' → logprob: -7.252084255218506
    3. '²' → logprob: -7.502084255218506
    4. '
' → logprob: -8.877084732055664
    5. ' **' → logprob: -8.877084732055664
    6. 'def' → logprob: -9.002084732055664
    7. '_squared' → logprob: -9.252084732055664
    8. '^' → logprob: -9.752084732055664
    9. '*' → logprob: -9.752084732055664
    10. '```' → logprob: -10.002084732055664

Token 1853: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00484910374507308
    2. '**' → logprob: -5.379848957061768
    3. '²' → logprob: -9.504849433898926
    4. '^' → logprob: -9.629849433898926
    5. ' ' → logprob: -10.504849433898926
    6. '*' → logprob: -10.629849433898926
    7. '=' → logprob: -11.629849433898926
    8. '```' → logprob: -11.754849433898926
    9. '​' → logprob: -12.004849433898926
    10. '
' → logprob: -12.504849433898926

Token 1854: ' >=' (ID: 5064)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.41384419798851013
    2. ' >=' → logprob: -1.9138442277908325
    3. ' >' → logprob: -2.663844108581543
    4. '<=' → logprob: -3.413844108581543
    5. ' +' → logprob: -3.913844108581543
    6. '   ' → logprob: -3.913844108581543
    7. '>=' → logprob: -4.038844108581543
    8. '>' → logprob: -4.413844108581543
    9. ' <' → logprob: -5.413844108581543
    10. '+' → logprob: -5.538844108581543

Token 1855: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1311701238155365
    2. '(r' → logprob: -2.2561700344085693
    3. '2' → logprob: -5.006170272827148
    4. '(' → logprob: -5.506170272827148
    5. ' (' → logprob: -5.631170272827148
    6. ' r' → logprob: -5.631170272827148
    7. '   ' → logprob: -9.256170272827148
    8. '```' → logprob: -10.006170272827148
    9. ' ' → logprob: -10.506170272827148
    10. '4' → logprob: -10.506170272827148

Token 1856: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.4345187842845917
    2. '2' → logprob: -1.434518814086914
    3. '
' → logprob: -3.684518814086914
    4. '   ' → logprob: -3.809518814086914
    5. ')' → logprob: -4.184518814086914
    6. ',' → logprob: -4.934518814086914
    7. ' and' → logprob: -5.059518814086914
    8. ' ' → logprob: -5.059518814086914
    9. ' or' → logprob: -5.184518814086914
    10. ' **' → logprob: -5.184518814086914

Token 1857: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.7385154428193346e-05
    2. ' ' → logprob: -10.87503719329834
    3. '**' → logprob: -11.75003719329834
    4. '²' → logprob: -12.25003719329834
    5. '
' → logprob: -12.87503719329834
    6. '*' → logprob: -13.87503719329834
    7. '^' → logprob: -14.62503719329834
    8. '[' → logprob: -14.75003719329834
    9. '```' → logprob: -15.00003719329834
    10. '_' → logprob: -15.50003719329834

Token 1858: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49124687910079956
    2. '
' → logprob: -1.4912469387054443
    3. 'def' → logprob: -2.7412469387054443
    4. ' and' → logprob: -3.7412469387054443
    5. ')' → logprob: -4.366246700286865
    6. ' or' → logprob: -4.491246700286865
    7. ' for' → logprob: -4.616246700286865
    8. ' -' → logprob: -4.866246700286865
    9. '**' → logprob: -5.241246700286865
    10. 'for' → logprob: -5.491246700286865

Token 1859: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3392351269721985
    2. '(' → logprob: -2.0892350673675537
    3. '(max' → logprob: -2.8392350673675537
    4. ' (' → logprob: -2.9642350673675537
    5. '2' → logprob: -3.3392350673675537
    6. ' max' → logprob: -4.214235305786133
    7. ' ' → logprob: -6.714235305786133
    8. '(h' → logprob: -6.964235305786133
    9. '(r' → logprob: -7.589235305786133
    10. '0' → logprob: -7.839235305786133

Token 1860: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.512236498361744e-07
    2. '(
' → logprob: -15.500000953674316
    3. '0' → logprob: -15.625000953674316
    4. ' (' → logprob: -16.25
    5. '```' → logprob: -17.875
    6. 'r' → logprob: -19.5
    7. 'def' → logprob: -19.5
    8. '   ' → logprob: -20.0
    9. '
' → logprob: -20.25
    10. '(r' → logprob: -20.625

Token 1861: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00977698341012001
    2. '0' → logprob: -4.634777069091797
    3. '```' → logprob: -11.884777069091797
    4. ' (' → logprob: -12.634777069091797
    5. '(
' → logprob: -12.634777069091797
    6. 'r' → logprob: -12.884777069091797
    7. '<|end|>' → logprob: -13.759777069091797
    8. '(r' → logprob: -13.884777069091797
    9. ')' → logprob: -14.634777069091797
    10. 'def' → logprob: -14.759777069091797

Token 1862: ',h' (ID: 42751)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07007970660924911
    2. ',' → logprob: -2.695079803466797
    3. '(h' → logprob: -9.195079803466797
    4. '0' → logprob: -10.695079803466797
    5. ' (' → logprob: -12.195079803466797
    6. '(
' → logprob: -12.695079803466797
    7. '(r' → logprob: -12.945079803466797
    8. ' ,' → logprob: -13.070079803466797
    9. ',h' → logprob: -13.070079803466797
    10. ',(' → logprob: -13.695079803466797

Token 1863: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02292444370687008
    2. ',' → logprob: -4.772924423217773
    3. '-' → logprob: -4.897924423217773
    4. '-r' → logprob: -5.147924423217773
    5. '   ' → logprob: -7.772924423217773
    6. ',r' → logprob: -8.522924423217773
    7. '
' → logprob: -8.647924423217773
    8. ' ' → logprob: -10.272924423217773
    9. '-
' → logprob: -11.147924423217773
    10. ' -
' → logprob: -11.397924423217773

Token 1864: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.043017804622650146
    2. ' r' → logprob: -3.168017864227295
    3. '```' → logprob: -11.418017387390137
    4. '0' → logprob: -12.793017387390137
    5. ' ' → logprob: -13.418017387390137
    6. '``' → logprob: -14.043017387390137
    7. '   ' → logprob: -14.293017387390137
    8. '_r' → logprob: -14.668017387390137
    9. '
' → logprob: -14.668017387390137
    10. '	r' → logprob: -15.605517387390137

Token 1865: ')^' (ID: 73602)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.2569321095943451
    2. ')^' → logprob: -1.5069321393966675
    3. ')' → logprob: -5.381932258605957
    4. ' )' → logprob: -8.631932258605957
    5. '   ' → logprob: -9.006932258605957
    6. '())' → logprob: -10.506932258605957
    7. '**' → logprob: -11.006932258605957
    8. '_)' → logprob: -11.256932258605957
    9. ' ' → logprob: -11.881932258605957
    10. '```' → logprob: -12.131932258605957

Token 1866: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.264322317088954e-05
    2. ' ' → logprob: -10.500052452087402
    3. '1' → logprob: -11.250052452087402
    4. '**' → logprob: -13.125052452087402
    5. '0' → logprob: -13.250052452087402
    6. '   ' → logprob: -13.687552452087402
    7. '```' → logprob: -13.687552452087402
    8. '(' → logprob: -13.875052452087402
    9. ')' → logprob: -14.625052452087402
    10. '
' → logprob: -14.625052452087402

Token 1867: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027393855154514313
    2. '
' → logprob: -3.7773938179016113
    3. 'def' → logprob: -6.902393817901611
    4. ')' → logprob: -7.777393817901611
    5. '```' → logprob: -7.777393817901611
    6. '    
' → logprob: -8.02739429473877
    7. 'import' → logprob: -8.15239429473877
    8. ' for' → logprob: -8.27739429473877
    9. 'for' → logprob: -8.40239429473877
    10. ')
' → logprob: -8.40239429473877

Token 1868: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001084374962374568
    2. '```' → logprob: -7.501084327697754
    3. '    
' → logprob: -8.876084327697754
    4. '
' → logprob: -8.876084327697754
    5. 'def' → logprob: -9.626084327697754
    6. '    ' → logprob: -10.626084327697754
    7. ')' → logprob: -11.001084327697754
    8. '  
' → logprob: -11.001084327697754
    9. ' ' → logprob: -11.126084327697754
    10. ' if' → logprob: -11.251084327697754

Token 1869: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021998796612024307
    2. '
' → logprob: -3.896998882293701
    3. 'def' → logprob: -7.521998882293701
    4. 'for' → logprob: -8.021998405456543
    5. '    
' → logprob: -8.146998405456543
    6. ' for' → logprob: -8.896998405456543
    7. '```' → logprob: -9.896998405456543
    8. ' if' → logprob: -11.146998405456543
    9. 'import' → logprob: -11.271998405456543
    10. 'if' → logprob: -11.396998405456543

Token 1870: ' Note' (ID: 12225)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22915145754814148
    2. 'for' → logprob: -2.229151487350464
    3. ' for' → logprob: -2.979151487350464
    4. 'def' → logprob: -4.104151248931885
    5. '
' → logprob: -4.229151248931885
    6. 'import' → logprob: -5.354151248931885
    7. '```' → logprob: -5.854151248931885
    8. 'r' → logprob: -6.104151248931885
    9. 'max' → logprob: -6.229151248931885
    10. 'best' → logprob: -7.604151248931885

Token 1871: ' max' (ID: 2999)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02139897085726261
    2. 'import' → logprob: -4.771399021148682
    3. ' for' → logprob: -5.021399021148682
    4. '
' → logprob: -5.646399021148682
    5. 'def' → logprob: -7.521399021148682
    6. '    ' → logprob: -7.771399021148682
    7. 'for' → logprob: -8.021398544311523
    8. ' import' → logprob: -8.021398544311523
    9. '    
' → logprob: -8.521398544311523
    10. '```' → logprob: -8.646398544311523

Token 1872: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00011594036914175376
    2. '0' → logprob: -9.750116348266602
    3. 'r' → logprob: -10.750116348266602
    4. '_r' → logprob: -11.250116348266602
    5. '_h' → logprob: -11.875116348266602
    6. 'def' → logprob: -12.500116348266602
    7. '(r' → logprob: -13.000116348266602
    8. 'd' → logprob: -13.125116348266602
    9. '(
' → logprob: -13.625116348266602
    10. ' (' → logprob: -13.625116348266602

Token 1873: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.577750027179718
    2. '(' → logprob: -0.827750027179718
    3. 'r' → logprob: -6.952750205993652
    4. 'd' → logprob: -8.327750205993652
    5. ',' → logprob: -8.702750205993652
    6. ')' → logprob: -8.702750205993652
    7. 'def' → logprob: -9.702750205993652
    8. '
' → logprob: -9.952750205993652
    9. '(
' → logprob: -10.452750205993652
    10. '),' → logprob: -10.577750205993652

Token 1874: ',h' (ID: 42751)
  Prédit: ',h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',h' → logprob: -0.14433927834033966
    2. ',' → logprob: -2.0193393230438232
    3. '(h' → logprob: -6.769339084625244
    4. ',r' → logprob: -8.269339561462402
    5. ',(' → logprob: -9.769339561462402
    6. '=' → logprob: -10.769339561462402
    7. ' ,' → logprob: -10.769339561462402
    8. ',
' → logprob: -11.019339561462402
    9. 'h' → logprob: -11.144339561462402
    10. '(' → logprob: -11.144339561462402

Token 1875: '-r' (ID: 6335)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06628256291151047
    2. '-' → logprob: -3.6912825107574463
    3. ' >' → logprob: -3.8162825107574463
    4. '>' → logprob: -4.566282749176025
    5. '-r' → logprob: -5.191282749176025
    6. ' <=' → logprob: -7.691282749176025
    7. '<=' → logprob: -8.566282272338867
    8. ',' → logprob: -9.066282272338867
    9. ')' → logprob: -9.316282272338867
    10. '>=' → logprob: -9.566282272338867

Token 1876: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0630614310503006
    2. ')**' → logprob: -3.188061475753784
    3. ')>' → logprob: -4.438061237335205
    4. ')^' → logprob: -5.063061237335205
    5. ' )' → logprob: -6.813061237335205
    6. '_)' → logprob: -8.563061714172363
    7. ')>=' → logprob: -9.938061714172363
    8. ')<' → logprob: -10.063061714172363
    9. ')==' → logprob: -10.188061714172363
    10. ')`' → logprob: -10.188061714172363

Token 1877: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7972310185432434
    2. '**' → logprob: -1.0472309589385986
    3. ')' → logprob: -2.4222309589385986
    4. '=' → logprob: -3.2972309589385986
    5. '   ' → logprob: -3.6722309589385986
    6. 'def' → logprob: -4.422231197357178
    7. ')**' → logprob: -4.797231197357178
    8. '```' → logprob: -5.172231197357178
    9. ' ==' → logprob: -5.547231197357178
    10. '
' → logprob: -5.797231197357178

Token 1878: ' height' (ID: 4679)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.04543642699718475
    2. '(h' → logprob: -4.045436382293701
    3. ' h' → logprob: -4.170436382293701
    4. '0' → logprob: -4.670436382293701
    5. ' (' → logprob: -6.420436382293701
    6. 'max' → logprob: -8.17043685913086
    7. '(' → logprob: -9.67043685913086
    8. ' max' → logprob: -9.79543685913086
    9. ' ' → logprob: -10.42043685913086
    10. '(max' → logprob: -10.79543685913086

Token 1879: ' distance' (ID: 9324)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.480781078338623
    2. 'def' → logprob: -1.730781078338623
    3. ' -' → logprob: -1.730781078338623
    4. ' =' → logprob: -1.980781078338623
    5. ')' → logprob: -2.605781078338623
    6. '
' → logprob: -3.105781078338623
    7. ' if' → logprob: -3.855781078338623
    8. '_' → logprob: -4.105781078338623
    9. ')
' → logprob: -4.230781078338623
    10. ' def' → logprob: -4.355781078338623

Token 1880: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.054082468152046204
    2. '
' → logprob: -4.17908239364624
    3. '**' → logprob: -4.55408239364624
    4. ')' → logprob: -4.67908239364624
    5. 'def' → logprob: -5.30408239364624
    6. ')
' → logprob: -5.67908239364624
    7. ' if' → logprob: -5.92908239364624
    8. '_squared' → logprob: -6.67908239364624
    9. '```' → logprob: -6.80408239364624
    10. '^' → logprob: -6.92908239364624

Token 1881: ' h' (ID: 312)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.020191585645079613
    2. 'h' → logprob: -4.020191669464111
    3. ' r' → logprob: -6.270191669464111
    4. ' h' → logprob: -8.895191192626953
    5. '```' → logprob: -12.395191192626953
    6. '(r' → logprob: -13.520191192626953
    7. '   ' → logprob: -13.520191192626953
    8. 'block' → logprob: -14.395191192626953
    9. '(h' → logprob: -14.645191192626953
    10. '
' → logprob: -14.645191192626953

Token 1882: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.06582716852426529
    2. ' >' → logprob: -3.3158271312713623
    3. '<=' → logprob: -3.9408271312713623
    4. '>=' → logprob: -5.440827369689941
    5. '<' → logprob: -6.315827369689941
    6. ' <=' → logprob: -6.815827369689941
    7. ' <' → logprob: -7.815827369689941
    8. ' >=' → logprob: -8.690827369689941
    9. '>
' → logprob: -9.690827369689941
    10. '==' → logprob: -10.315827369689941

Token 1883: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -7.493430894101039e-05
    2. ' r' → logprob: -9.500075340270996
    3. '_r' → logprob: -18.37507438659668
    4. '=r' → logprob: -18.75007438659668
    5. '	r' → logprob: -19.00007438659668
    6. '
' → logprob: -19.25007438659668
    7. '=' → logprob: -19.25007438659668
    8. '```' → logprob: -19.87507438659668
    9. '(r' → logprob: -20.50007438659668
    10. '[r' → logprob: -21.12507438659668

Token 1884: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022656895220279694
    2. '
' → logprob: -4.3976569175720215
    3. 'def' → logprob: -5.1476569175720215
    4. '    
' → logprob: -6.1476569175720215
    5. 'import' → logprob: -6.8976569175720215
    6. ')' → logprob: -8.647656440734863
    7. ' for' → logprob: -8.647656440734863
    8. '```' → logprob: -8.772656440734863
    9. ')
' → logprob: -9.272656440734863
    10. ' def' → logprob: -9.647656440734863

Token 1885: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5016913414001465
    2. '   ' → logprob: -1.3766913414001465
    3. '#' → logprob: -2.7516913414001465
    4. 'else' → logprob: -3.3766913414001465
    5. ' r' → logprob: -4.1266913414001465
    6. ' otherwise' → logprob: -5.0016913414001465
    7. 'r' → logprob: -5.3766913414001465
    8. ' if' → logprob: -6.0016913414001465
    9. 'def' → logprob: -6.0016913414001465
    10. ' #' → logprob: -6.0016913414001465

Token 1886: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006006414070725441
    2. ' ' → logprob: -5.881006240844727
    3. 'h' → logprob: -5.881006240844727
    4. ' h' → logprob: -8.631006240844727
    5. '(h' → logprob: -9.131006240844727
    6. 'r' → logprob: -9.506006240844727
    7. '(r' → logprob: -11.006006240844727
    8. ' (' → logprob: -11.256006240844727
    9. '   ' → logprob: -12.256006240844727
    10. ' r' → logprob: -12.506006240844727

Token 1887: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002261854097014293
    2. ' ' → logprob: -8.500226020812988
    3. 'h' → logprob: -11.000226020812988
    4. '(' → logprob: -13.375226020812988
    5. '(h' → logprob: -13.375226020812988
    6. '   ' → logprob: -14.375226020812988
    7. 'r' → logprob: -14.625226020812988
    8. '```' → logprob: -14.875226020812988
    9. ' h' → logprob: -15.000226020812988
    10. '
' → logprob: -15.750226020812988

Token 1888: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059438154101371765
    2. '
' → logprob: -2.9344382286071777
    3. '    
' → logprob: -6.059438228607178
    4. 'def' → logprob: -6.309438228607178
    5. '```' → logprob: -8.43443775177002
    6. 'import' → logprob: -10.05943775177002
    7. '
' → logprob: -11.05943775177002
    8. ' for' → logprob: -11.43443775177002
    9. '   
' → logprob: -11.43443775177002
    10. 'for' → logprob: -11.68443775177002

Token 1889: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02170197106897831
    2. 'def' → logprob: -4.146701812744141
    3. '
' → logprob: -5.271701812744141
    4. '```' → logprob: -8.14670181274414
    5. '    
' → logprob: -9.89670181274414
    6. 'if' → logprob: -10.02170181274414
    7. 'for' → logprob: -10.39670181274414
    8. 'import' → logprob: -10.52170181274414
    9. ' if' → logprob: -11.14670181274414
    10. ' for' → logprob: -11.77170181274414

Token 1890: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11407844722270966
    2. 'def' → logprob: -2.6140785217285156
    3. '
' → logprob: -3.6140785217285156
    4. '```' → logprob: -6.114078521728516
    5. 'for' → logprob: -6.239078521728516
    6. 'if' → logprob: -6.739078521728516
    7. 'r' → logprob: -6.989078521728516
    8. ' for' → logprob: -8.239078521728516
    9. 'max' → logprob: -8.739078521728516
    10. 'res' → logprob: -9.114078521728516

Token 1891: ' We' (ID: 1416)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04720604792237282
    2. 'for' → logprob: -3.797206163406372
    3. ' for' → logprob: -4.672205924987793
    4. 'def' → logprob: -5.547205924987793
    5. '
' → logprob: -5.672205924987793
    6. 'import' → logprob: -6.172205924987793
    7. 'max' → logprob: -6.172205924987793
    8. '```' → logprob: -6.797205924987793
    9. 'r' → logprob: -7.172205924987793
    10. 'best' → logprob: -8.297205924987793

Token 1892: ' must' (ID: 2804)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2736071050167084
    2. 'def' → logprob: -2.398607015609741
    3. ' def' → logprob: -2.398607015609741
    4. ' =' → logprob: -3.648607015609741
    5. '=' → logprob: -4.39860725402832
    6. ' return' → logprob: -5.77360725402832
    7. ' continue' → logprob: -6.02360725402832
    8. '
' → logprob: -6.39860725402832
    9. '    ' → logprob: -6.52360725402832
    10. ' ' → logprob: -6.52360725402832

Token 1893: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.28487372398376465
    2. ' check' → logprob: -2.2848737239837646
    3. '   ' → logprob: -2.6598737239837646
    4. 'for' → logprob: -3.5348737239837646
    5. 'return' → logprob: -4.159873962402344
    6. 'import' → logprob: -5.034873962402344
    7. 'def' → logprob: -5.159873962402344
    8. ' for' → logprob: -5.284873962402344
    9. 'continue' → logprob: -5.659873962402344
    10. 'iterate' → logprob: -5.784873962402344

Token 1894: ' this' (ID: 495)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8507236242294312
    2. 'for' → logprob: -1.3507236242294312
    3. '   ' → logprob: -1.7257236242294312
    4. ' if' → logprob: -2.8507237434387207
    5. ' r' → logprob: -3.7257237434387207
    6. 'r' → logprob: -3.8507237434387207
    7. 'if' → logprob: -3.8507237434387207
    8. ' all' → logprob: -5.850723743438721
    9. 'all' → logprob: -6.600723743438721
    10. '
' → logprob: -6.850723743438721

Token 1895: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7336987257003784
    2. '   ' → logprob: -1.2336987257003784
    3. 'for' → logprob: -2.108698844909668
    4. '
' → logprob: -2.358698844909668
    5. 'def' → logprob: -5.108698844909668
    6. 'import' → logprob: -5.358698844909668
    7. '```' → logprob: -6.983698844909668
    8. '
' → logprob: -8.733698844909668
    9. ' in' → logprob: -9.233698844909668
    10. ',' → logprob: -9.358698844909668

Token 1896: ' all' (ID: 722)
  Prédit: ' block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' block' → logprob: -0.14664271473884583
    2. 'block' → logprob: -2.0216426849365234
    3. ' each' → logprob: -6.271642684936523
    4. 'each' → logprob: -7.146642684936523
    5. ' b' → logprob: -7.646642684936523
    6. 'b' → logprob: -7.646642684936523
    7. ' all' → logprob: -8.646642684936523
    8. '	block' → logprob: -10.271642684936523
    9. '(block' → logprob: -10.521642684936523
    10. 'all' → logprob: -10.521642684936523

Token 1897: ' blocks' (ID: 18125)
  Prédit: ' block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' block' → logprob: -0.3138337731361389
    2. 'block' → logprob: -1.3138337135314941
    3. ' blocks' → logprob: -8.313834190368652
    4. 'blocks' → logprob: -9.063834190368652
    5. '(block' → logprob: -9.563834190368652
    6. '   ' → logprob: -9.938834190368652
    7. 'b' → logprob: -10.063834190368652
    8. ' b' → logprob: -10.938834190368652
    9. ' ' → logprob: -11.188834190368652
    10. '	block' → logprob: -11.438834190368652

Token 1898: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006213527638465166
    2. '
' → logprob: -5.256213665008545
    3. 'for' → logprob: -7.881213665008545
    4. 'def' → logprob: -8.381213188171387
    5. '    
' → logprob: -8.756213188171387
    6. '```' → logprob: -9.131213188171387
    7. ' for' → logprob: -9.381213188171387
    8. ':' → logprob: -11.631213188171387
    9. 'import' → logprob: -12.881213188171387
    10. '       ' → logprob: -13.381213188171387

Token 1899: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00213657901622355
    2. '```' → logprob: -6.877136707305908
    3. '
' → logprob: -7.502136707305908
    4. 'def' → logprob: -7.752136707305908
    5. 'for' → logprob: -9.25213623046875
    6. '    
' → logprob: -11.25213623046875
    7. '``' → logprob: -12.00213623046875
    8. ' for' → logprob: -12.37713623046875
    9. '       ' → logprob: -14.12713623046875
    10. '`' → logprob: -15.00213623046875

Token 1900: ' ax' (ID: 6807)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6475526690483093
    2. 'for' → logprob: -0.7725526690483093
    3. ' for' → logprob: -4.397552490234375
    4. '
' → logprob: -6.647552490234375
    5. 'def' → logprob: -7.397552490234375
    6. '```' → logprob: -7.522552490234375
    7. ':' → logprob: -11.147552490234375
    8. 'r' → logprob: -11.147552490234375
    9. '	for' → logprob: -11.397552490234375
    10. '    
' → logprob: -11.397552490234375

Token 1901: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02111305110156536
    2. '=' → logprob: -4.27111291885376
    3. 'x' → logprob: -5.77111291885376
    4. ' =' → logprob: -6.02111291885376
    5. '_,' → logprob: -7.89611291885376
    6. '1' → logprob: -8.146113395690918
    7. '   ' → logprob: -8.146113395690918
    8. ',s' → logprob: -8.771113395690918
    9. ' ,' → logprob: -9.271113395690918
    10. '_x' → logprob: -10.396113395690918

Token 1902: ' ay' (ID: 4199)
  Prédit: 'ay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ay' → logprob: -7.493430894101039e-05
    2. ' ay' → logprob: -9.500075340270996
    3. '
' → logprob: -17.87507438659668
    4. '   ' → logprob: -20.00007438659668
    5. 'aye' → logprob: -20.62507438659668
    6. '    
' → logprob: -20.87507438659668
    7. 'aj' → logprob: -21.00007438659668
    8. 'ays' → logprob: -21.25007438659668
    9. 'ayy' → logprob: -22.00007438659668
    10. 'sy' → logprob: -22.12507438659668

Token 1903: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2596345543861389
    2. '=' → logprob: -1.7596344947814941
    3. ' =' → logprob: -2.884634494781494
    4. ' ,' → logprob: -8.384634971618652
    5. '   ' → logprob: -8.509634971618652
    6. ',
' → logprob: -9.759634971618652
    7. ')' → logprob: -9.884634971618652
    8. ',b' → logprob: -9.884634971618652
    9. '=
' → logprob: -11.259634971618652
    10. '=ax' → logprob: -11.384634971618652

Token 1904: ' sx' (ID: 39428)
  Prédit: 'sx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sx' → logprob: -0.008648133836686611
    2. ' sx' → logprob: -4.758647918701172
    3. '(s' → logprob: -10.508647918701172
    4. '   ' → logprob: -13.133647918701172
    5. '
' → logprob: -13.258647918701172
    6. 's' → logprob: -13.883647918701172
    7. 'float' → logprob: -15.383647918701172
    8. 'int' → logprob: -15.383647918701172
    9. ' (' → logprob: -15.383647918701172
    10. '[s' → logprob: -15.758647918701172

Token 1905: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005081149865873158
    2. '   ' → logprob: -8.500508308410645
    3. ',
' → logprob: -8.500508308410645
    4. ' ,' → logprob: -9.500508308410645
    5. ',b' → logprob: -12.000508308410645
    6. ',\
' → logprob: -12.375508308410645
    7. '
' → logprob: -12.625508308410645
    8. '    
' → logprob: -12.625508308410645
    9. '_,' → logprob: -13.500508308410645
    10. '=' → logprob: -13.625508308410645

Token 1906: ' sy' (ID: 6157)
  Prédit: 'sy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sy' → logprob: -0.0007102862582542002
    2. ' sy' → logprob: -7.250710487365723
    3. '_sy' → logprob: -15.125710487365723
    4. 'Sy' → logprob: -18.250709533691406
    5. 'ay' → logprob: -18.250709533691406
    6. 'syn' → logprob: -18.500709533691406
    7. '.sy' → logprob: -18.625709533691406
    8. 'sym' → logprob: -19.125709533691406
    9. 's' → logprob: -19.375709533691406
    10. 'sx' → logprob: -19.375709533691406

Token 1907: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16470365226268768
    2. '
' → logprob: -2.039703607559204
    3. ',' → logprob: -4.289703845977783
    4. '    
' → logprob: -5.789703845977783
    5. '  
' → logprob: -7.289703845977783
    6. 'bx' → logprob: -7.289703845977783
    7. ' bx' → logprob: -7.539703845977783
    8. ';' → logprob: -7.789703845977783
    9. '```' → logprob: -7.914703845977783
    10. ',
' → logprob: -8.039703369140625

Token 1908: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05738697201013565
    2. ' bx' → logprob: -3.182386875152588
    3. '	b' → logprob: -4.932386875152588
    4. 'bx' → logprob: -5.182386875152588
    5. ',' → logprob: -7.807386875152588
    6. '\t' → logprob: -8.307387351989746
    7. '```' → logprob: -8.432387351989746
    8. '
' → logprob: -8.807387351989746
    9. '    
' → logprob: -9.057387351989746
    10. '    ' → logprob: -10.182387351989746

Token 1909: ' bx' (ID: 93853)
  Prédit: 'bx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bx' (adapté à ' bx') → logprob: -0.12767794728279114
    2. ' bx' → logprob: -2.1276779174804688
    3. '   ' → logprob: -7.502677917480469
    4. 'ex' → logprob: -8.627677917480469
    5. ' ex' → logprob: -11.627677917480469
    6. '	b' → logprob: -12.502677917480469
    7. '```' → logprob: -12.627677917480469
    8. ' ' → logprob: -14.127677917480469
    9. 'b' → logprob: -14.502677917480469
    10. '``' → logprob: -15.002677917480469

Token 1910: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.5120287066092715e-05
    2. ' ,' → logprob: -10.375035285949707
    3. ',
' → logprob: -12.750035285949707
    4. ',b' → logprob: -15.125035285949707
    5. '_,' → logprob: -15.500035285949707
    6. 'b' → logprob: -16.25003433227539
    7. 'by' → logprob: -16.62503433227539
    8. '‌,' → logprob: -16.62503433227539
    9. 'ey' → logprob: -17.00003433227539
    10. '
' → logprob: -17.00003433227539

Token 1911: ' by' (ID: 656)
  Prédit: 'ey'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ey' → logprob: -0.5495049357414246
    2. 'by' → logprob: -0.9245049357414246
    3. ' ey' → logprob: -3.7995049953460693
    4. 'ay' → logprob: -6.29950475692749
    5. ' by' → logprob: -6.92450475692749
    6. 'eby' → logprob: -7.54950475692749
    7. 'eb' → logprob: -8.549505233764648
    8. 'be' → logprob: -9.924505233764648
    9. 'b' → logprob: -11.299505233764648
    10. 'ery' → logprob: -11.924505233764648

Token 1912: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07009726762771606
    2. ' =' → logprob: -2.6950972080230713
    3. ',' → logprob: -9.070096969604492
    4. '=
' → logprob: -10.945096969604492
    5. '   ' → logprob: -11.070096969604492
    6. ')' → logprob: -11.820096969604492
    7. ' =
' → logprob: -13.195096969604492
    8. ' ' → logprob: -13.570096969604492
    9. ')=' → logprob: -14.945096969604492
    10. '
' → logprob: -15.320096969604492

Token 1913: ' ex' (ID: 513)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0005530327325686812
    2. ' ex' → logprob: -7.500553131103516
    3. 'x' → logprob: -18.875553131103516
    4. '   ' → logprob: -20.625553131103516
    5. '(ex' → logprob: -20.625553131103516
    6. 'ey' → logprob: -20.750553131103516
    7. 'e' → logprob: -21.125553131103516
    8. '
' → logprob: -21.375553131103516
    9. 'exo' → logprob: -21.375553131103516
    10. '	ex' → logprob: -21.750553131103516

Token 1914: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7511679530143738
    2. '
' → logprob: -1.2511680126190186
    3. '<|end|>' → logprob: -2.0011680126190186
    4. 'for' → logprob: -3.3761680126190186
    5. '<|end|>' → logprob: -4.0011677742004395
    6. '   ' → logprob: -4.2511677742004395
    7. ' =' → logprob: -4.5011677742004395
    8. 'def' → logprob: -4.7511677742004395
    9. ',
' → logprob: -5.3761677742004395
    10. '=' → logprob: -5.7511677742004395

Token 1915: ' ey' (ID: 17600)
  Prédit: 'ey'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ey' → logprob: -1.688212614681106e-05
    2. ' ey' → logprob: -11.000017166137695
    3. 'eyey' → logprob: -16.500017166137695
    4. 'eye' → logprob: -18.750017166137695
    5. 'ay' → logprob: -18.750017166137695
    6. 'eys' → logprob: -19.125017166137695
    7. 'eyd' → logprob: -20.000017166137695
    8. 'ew' → logprob: -20.375017166137695
    9. 'eb' → logprob: -20.750017166137695
    10. 'ery' → logprob: -21.000017166137695

Token 1916: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07704004645347595
    2. '
' → logprob: -2.952039957046509
    3. ' for' → logprob: -4.702040195465088
    4. 'for' → logprob: -5.077040195465088
    5. '    
' → logprob: -5.202040195465088
    6. '```' → logprob: -7.827040195465088
    7. '<|end|>' → logprob: -8.82703971862793
    8. '	for' → logprob: -9.07703971862793
    9. '  
' → logprob: -9.45203971862793
    10. '   
' → logprob: -9.95203971862793

Token 1917: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05029991269111633
    2. 'for' → logprob: -3.050299882888794
    3. ' for' → logprob: -6.675300121307373
    4. '```' → logprob: -8.175299644470215
    5. '
' → logprob: -8.800299644470215
    6. 'def' → logprob: -11.800299644470215
    7. 'import' → logprob: -12.550299644470215
    8. '    
' → logprob: -12.800299644470215
    9. '	for' → logprob: -13.550299644470215
    10. '``' → logprob: -14.050299644470215

Token 1918: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.15067839622497559
    2. '   ' → logprob: -2.1506783962249756
    3. ' for' → logprob: -3.7756783962249756
    4. '```' → logprob: -7.650678634643555
    5. '
' → logprob: -9.775678634643555
    6. 'def' → logprob: -12.150678634643555
    7. '``' → logprob: -12.150678634643555
    8. '	for' → logprob: -13.150678634643555
    9. 'r' → logprob: -13.400678634643555
    10. '    
' → logprob: -13.900678634643555

Token 1919: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.0005533903022296727
    2. ' block' → logprob: -7.500553607940674
    3. '   ' → logprob: -15.250553131103516
    4. 'b' → logprob: -15.625553131103516
    5. '(block' → logprob: -17.750553131103516
    6. 'blk' → logprob: -19.500553131103516
    7. '       ' → logprob: -19.750553131103516
    8. '	block' → logprob: -20.125553131103516
    9. '_block' → logprob: -20.375553131103516
    10. '```' → logprob: -20.500553131103516

Token 1920: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014251535758376122
    2. 'in' → logprob: -4.264251708984375
    3. '   ' → logprob: -10.139251708984375
    4. ':' → logprob: -10.514251708984375
    5. ',' → logprob: -12.389251708984375
    6. '       ' → logprob: -12.764251708984375
    7. '	in' → logprob: -12.889251708984375
    8. '    ' → logprob: -13.014251708984375
    9. '_in' → logprob: -13.139251708984375
    10. '  ' → logprob: -13.514251708984375

Token 1921: ' blocks' (ID: 18125)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -2.7848862373502925e-05
    2. ' blocks' → logprob: -10.500027656555176
    3. '.blocks' → logprob: -16.250028610229492
    4. '   ' → logprob: -16.500028610229492
    5. 'block' → logprob: -18.625028610229492
    6. '
' → logprob: -19.750028610229492
    7. '_blocks' → logprob: -20.250028610229492
    8. '[' → logprob: -20.750028610229492
    9. '       ' → logprob: -21.250028610229492
    10. '```' → logprob: -21.375028610229492

Token 1922: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2851417660713196
    2. '       ' → logprob: -1.4101417064666748
    3. ':
' → logprob: -5.910141944885254
    4. '   ' → logprob: -7.910141944885254
    5. '[' → logprob: -8.035141944885254
    6. ',' → logprob: -8.035141944885254
    7. '=' → logprob: -10.035141944885254
    8. '        
' → logprob: -10.160141944885254
    9. '<|end|>' → logprob: -10.785141944885254
    10. '<|end|>' → logprob: -10.785141944885254

Token 1923: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017212345264852047
    2. '   ' → logprob: -6.501721382141113
    3. '```' → logprob: -8.876721382141113
    4. '
' → logprob: -10.501721382141113
    5. '        
' → logprob: -10.626721382141113
    6. '    
' → logprob: -12.126721382141113
    7. '    ' → logprob: -12.626721382141113
    8. '           ' → logprob: -12.626721382141113
    9. ':' → logprob: -12.751721382141113
    10. '     ' → logprob: -13.251721382141113

Token 1924: ' min' (ID: 1349)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5815193057060242
    2. 'min' (adapté à ' min') → logprob: -0.8315193057060242
    3. 'if' → logprob: -6.33151912689209
    4. ' min' → logprob: -6.58151912689209
    5. 'dx' → logprob: -6.95651912689209
    6. '   ' → logprob: -7.45651912689209
    7. 'horizontal' → logprob: -8.20651912689209
    8. 'hx' → logprob: -9.08151912689209
    9. 'd' → logprob: -9.20651912689209
    10. '(min' → logprob: -9.45651912689209

Token 1925: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: 0.0
    2. ',' → logprob: -16.75
    3. '```' → logprob: -17.375
    4. 'def' → logprob: -18.625
    5. 'import' → logprob: -19.0
    6. '   ' → logprob: -19.25
    7. '<|end|>' → logprob: -19.375
    8. '_x' → logprob: -19.5
    9. '#' → logprob: -19.625
    10. '[' → logprob: -19.75

Token 1926: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021390743495430797
    2. ',min' → logprob: -8.625213623046875
    3. ' ,' → logprob: -11.125213623046875
    4. ',
' → logprob: -12.125213623046875
    5. ',user' → logprob: -12.625213623046875
    6. ',max' → logprob: -13.000213623046875
    7. '=' → logprob: -13.500213623046875
    8. '   ' → logprob: -13.625213623046875
    9. '_,' → logprob: -14.000213623046875
    10. 'min' → logprob: -14.000213623046875

Token 1927: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.02975442260503769
    2. ' min' → logprob: -3.529754400253296
    3. 'mini' → logprob: -12.904754638671875
    4. '_min' → logprob: -14.154754638671875
    5. ',min' → logprob: -15.404754638671875
    6. ' minic' → logprob: -15.779754638671875
    7. ' mini' → logprob: -15.904754638671875
    8. '	min' → logprob: -16.154754638671875
    9. '=min' → logprob: -16.654754638671875
    10. '(min' → logprob: -16.654754638671875

Token 1928: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.010673895478248596
    2. 'min' → logprob: -4.635673999786377
    3. 'x' → logprob: -7.010673999786377
    4. ',' → logprob: -12.760673522949219
    5. ' min' → logprob: -13.135673522949219
    6. '
' → logprob: -13.135673522949219
    7. '(min' → logprob: -14.010673522949219
    8. '=min' → logprob: -14.135673522949219
    9. ' ymin' → logprob: -14.510673522949219
    10. 'xmin' → logprob: -14.510673522949219

Token 1929: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1279553291387856e-05
    2. '=' → logprob: -11.750011444091797
    3. ' ,' → logprob: -13.000011444091797
    4. ',min' → logprob: -15.000011444091797
    5. ',user' → logprob: -15.500011444091797
    6. ' =' → logprob: -15.750011444091797
    7. ',max' → logprob: -16.000011444091797
    8. ',
' → logprob: -16.625011444091797
    9. '_,' → logprob: -17.625011444091797
    10. ',next' → logprob: -18.000011444091797

Token 1930: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.47434768080711365
    2. ' max' → logprob: -0.974347710609436
    3. 'min' → logprob: -8.849348068237305
    4. ' min' → logprob: -8.974348068237305
    5. 'm' → logprob: -15.724348068237305
    6. ',max' → logprob: -15.849348068237305
    7. '...' → logprob: -17.099348068237305
    8. '    ' → logprob: -17.349348068237305
    9. ',' → logprob: -17.474348068237305
    10. '_max' → logprob: -17.599348068237305

Token 1931: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.088346359931165e-07
    2. ',' → logprob: -14.500000953674316
    3. '<|end|>' → logprob: -15.125000953674316
    4. '=' → logprob: -17.375
    5. '```' → logprob: -18.125
    6. '[' → logprob: -18.625
    7. '...' → logprob: -18.625
    8. '<|end|>' → logprob: -19.25
    9. ' ' → logprob: -19.5
    10. ' x' → logprob: -19.875

Token 1932: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.927930654550437e-05
    2. ' ,' → logprob: -11.000029563903809
    3. '=' → logprob: -11.750029563903809
    4. '_,' → logprob: -13.375029563903809
    5. ',max' → logprob: -13.875029563903809
    6. ',user' → logprob: -14.375029563903809
    7. ' =' → logprob: -14.750029563903809
    8. ',
' → logprob: -15.250029563903809
    9. ',min' → logprob: -15.750029563903809
    10. '   ' → logprob: -16.250028610229492

Token 1933: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0028395876288414
    2. 'min' → logprob: -6.2528395652771
    3. ' max' → logprob: -7.0028395652771
    4. ' min' → logprob: -14.502840042114258
    5. 'm' → logprob: -15.002840042114258
    6. ',max' → logprob: -15.502840042114258
    7. 'maxlength' → logprob: -16.377840042114258
    8. '_max' → logprob: -17.252840042114258
    9. '(max' → logprob: -17.502840042114258
    10. ',' → logprob: -17.502840042114258

Token 1934: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -3.1186566047836095e-05
    2. 'x' → logprob: -10.875031471252441
    3. 'max' → logprob: -11.625031471252441
    4. 'Y' → logprob: -14.125031471252441
    5. ',' → logprob: -14.750031471252441
    6. ' ymax' → logprob: -14.875031471252441
    7. ' ' → logprob: -15.250031471252441
    8. '_y' → logprob: -15.250031471252441
    9. 'ay' → logprob: -15.625031471252441
    10. '...' → logprob: -15.750031471252441

Token 1935: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00025084958178922534
    2. ' ,' → logprob: -9.375250816345215
    3. '=' → logprob: -9.750250816345215
    4. ',r' → logprob: -10.000250816345215
    5. ' =' → logprob: -10.500250816345215
    6. ',
' → logprob: -12.125250816345215
    7. ',user' → logprob: -12.250250816345215
    8. '<|end|>' → logprob: -12.250250816345215
    9. '       ' → logprob: -12.625250816345215
    10. '```' → logprob: -13.500250816345215

Token 1936: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0009265877306461334
    2. ' h' → logprob: -7.250926494598389
    3. 'max' → logprob: -9.125926971435547
    4. 'block' → logprob: -9.500926971435547
    5. '_h' → logprob: -10.875926971435547
    6. 'height' → logprob: -12.625926971435547
    7. '=' → logprob: -13.250926971435547
    8. ' block' → logprob: -13.250926971435547
    9. 'min' → logprob: -13.500926971435547
    10. '
' → logprob: -13.625926971435547

Token 1937: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6195186972618103
    2. ' =' → logprob: -0.9945186972618103
    3. '=' → logprob: -2.744518756866455
    4. ',' → logprob: -3.994518756866455
    5. '        
' → logprob: -5.869518756866455
    6. ':' → logprob: -6.869518756866455
    7. '<|end|>' → logprob: -7.119518756866455
    8. '=
' → logprob: -7.244518756866455
    9. '<|end|>' → logprob: -7.244518756866455
    10. '```' → logprob: -7.869518756866455

Token 1938: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.0002613358374219388
    2. ' block' → logprob: -8.250261306762695
    3. '(block' → logprob: -18.625261306762695
    4. '	block' → logprob: -19.375261306762695
    5. '   ' → logprob: -19.500261306762695
    6. '       ' → logprob: -21.375261306762695
    7. 'blockquote' → logprob: -21.500261306762695
    8. 'user' → logprob: -21.750261306762695
    9. '```' → logprob: -21.750261306762695
    10. '
' → logprob: -22.500261306762695

Token 1939: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015745626762509346
    2. '
' → logprob: -4.640745639801025
    3. '        
' → logprob: -5.515745639801025
    4. ',' → logprob: -7.265745639801025
    5. '<|end|>' → logprob: -7.765745639801025
    6. '  
' → logprob: -8.390745162963867
    7. '   ' → logprob: -8.390745162963867
    8. '<|end|>' → logprob: -9.515745162963867
    9. '    
' → logprob: -10.015745162963867
    10. ':' → logprob: -10.265745162963867

Token 1940: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009708948782645166
    2. '```' → logprob: -7.625970840454102
    3. '
' → logprob: -8.000970840454102
    4. '   ' → logprob: -9.000970840454102
    5. '        
' → logprob: -11.250970840454102
    6. ',' → logprob: -13.000970840454102
    7. '`' → logprob: -13.500970840454102
    8. '           ' → logprob: -13.500970840454102
    9. '``' → logprob: -13.500970840454102
    10. '    
' → logprob: -13.750970840454102

Token 1941: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6333039999008179
    2. 'if' → logprob: -0.8833039999008179
    3. '#' → logprob: -3.5083041191101074
    4. '   ' → logprob: -4.133304119110107
    5. 'dx' → logprob: -5.633304119110107
    6. 'horizontal' → logprob: -5.883304119110107
    7. ' if' → logprob: -7.133304119110107
    8. 'px' → logprob: -7.383304119110107
    9. 'hx' → logprob: -7.633304119110107
    10. 'h' → logprob: -8.13330364227295

Token 1942: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.016469722613692284
    2. ' =' → logprob: -4.766469955444336
    3. '=' → logprob: -5.641469955444336
    4. 'x' → logprob: -6.641469955444336
    5. '_x' → logprob: -6.766469955444336
    6. 'h' → logprob: -6.891469955444336
    7. '_horizontal' → logprob: -7.641469955444336
    8. '   ' → logprob: -9.641469955444336
    9. ',' → logprob: -9.891469955444336
    10. 'ist' → logprob: -10.141469955444336

Token 1943: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.526633620262146
    2. '=' → logprob: -0.901633620262146
    3. 'ist' → logprob: -6.6516337394714355
    4. ',' → logprob: -6.6516337394714355
    5. 'istance' → logprob: -7.1516337394714355
    6. '_h' → logprob: -10.776633262634277
    7. '_line' → logprob: -11.026633262634277
    8. '_horizontal' → logprob: -11.276633262634277
    9. ' ' → logprob: -11.651633262634277
    10. 'ists' → logprob: -11.776633262634277

Token 1944: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0500321090221405
    2. 'min' → logprob: -3.800032138824463
    3. 'line' → logprob: -5.175032138824463
    4. 'math' → logprob: -5.300032138824463
    5. 'float' → logprob: -5.300032138824463
    6. 'abs' → logprob: -5.800032138824463
    7. 'max' → logprob: -6.300032138824463
    8. '0' → logprob: -6.425032138824463
    9. 'point' → logprob: -6.675032138824463
    10. ' dist' → logprob: -7.175032138824463

Token 1945: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.2022562325000763
    2. '_point' → logprob: -1.702256202697754
    3. '_line' → logprob: -7.452256202697754
    4. 'segment' → logprob: -8.577256202697754
    5. 'point' → logprob: -9.702256202697754
    6. '```' → logprob: -12.327256202697754
    7. '((' → logprob: -13.452256202697754
    8. '(
' → logprob: -13.452256202697754
    9. '_rectangle' → logprob: -13.952256202697754
    10. 'line' → logprob: -14.452256202697754

Token 1946: '_rectangle' (ID: 166619)
  Prédit: '_segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.027612704783678055
    2. '_point' → logprob: -3.9026126861572266
    3. 'segment' → logprob: -5.277612686157227
    4. '((' → logprob: -6.402612686157227
    5. 'point' → logprob: -9.402612686157227
    6. '_rectangle' → logprob: -9.777612686157227
    7. '```' → logprob: -10.027612686157227
    8. '[(' → logprob: -10.777612686157227
    9. '_to' → logprob: -10.777612686157227
    10. '_line' → logprob: -11.277612686157227

Token 1947: '_' (ID: 62)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.15254834294319153
    2. '(ax' → logprob: -2.652548313140869
    3. '(s' → logprob: -3.277548313140869
    4. '_line' → logprob: -3.777548313140869
    5. '_segment' → logprob: -5.777548313140869
    6. '_' → logprob: -5.777548313140869
    7. '(a' → logprob: -6.402548313140869
    8. 'line' → logprob: -8.152548789978027
    9. '_to' → logprob: -8.277548789978027
    10. '(line' → logprob: -8.277548789978027

Token 1948: '2' (ID: 17)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.7364557385444641
    2. '(ax' → logprob: -1.3614556789398193
    3. 'segment' → logprob: -2.1114556789398193
    4. 'xy' → logprob: -2.9864556789398193
    5. '((' → logprob: -3.2364556789398193
    6. '2' → logprob: -3.4864556789398193
    7. '_xy' → logprob: -5.361455917358398
    8. 'ax' → logprob: -5.486455917358398
    9. 'point' → logprob: -6.111455917358398
    10. 'ist' → logprob: -6.236455917358398

Token 1949: 'd' (ID: 67)
  Prédit: '(ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ax' → logprob: -0.6751388311386108
    2. '((' → logprob: -1.0501388311386108
    3. '(s' → logprob: -2.1751389503479004
    4. 'istance' → logprob: -4.6751389503479
    5. 'd' → logprob: -4.8001389503479
    6. 'ist' → logprob: -6.0501389503479
    7. 'line' → logprob: -6.5501389503479
    8. '_line' → logprob: -6.6751389503479
    9. 'segment' → logprob: -7.3001389503479
    10. 'ax' → logprob: -7.5501389503479

Token 1950: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0281826164573431
    2. '(ax' → logprob: -3.6531825065612793
    3. '(s' → logprob: -6.778182506561279
    4. '(' → logprob: -8.778182983398438
    5. '(line' → logprob: -9.028182983398438
    6. '(a' → logprob: -9.153182983398438
    7. '(b' → logprob: -9.403182983398438
    8. '(
' → logprob: -9.403182983398438
    9. 'def' → logprob: -9.903182983398438
    10. '(((' → logprob: -10.528182983398438

Token 1951: 'ax' (ID: 1362)
  Prédit: '(ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ax' → logprob: -0.47494733333587646
    2. 'ax' → logprob: -0.9749473333358765
    3. 'sx' → logprob: -8.349946975708008
    4. '(a' → logprob: -8.474946975708008
    5. '(s' → logprob: -8.724946975708008
    6. 'a' → logprob: -9.599946975708008
    7. '   ' → logprob: -9.849946975708008
    8. ' (' → logprob: -9.974946975708008
    9. '=ax' → logprob: -10.849946975708008
    10. '	ax' → logprob: -11.224946975708008

Token 1952: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2544861435890198
    2. '[' → logprob: -1.504486083984375
    3. '),' → logprob: -6.129486083984375
    4. '),(' → logprob: -9.004486083984375
    5. ',[' → logprob: -9.129486083984375
    6. '0' → logprob: -10.129486083984375
    7. ' ,' → logprob: -10.754486083984375
    8. 'def' → logprob: -10.879486083984375
    9. ',),' → logprob: -10.879486083984375
    10. ',
' → logprob: -11.379486083984375

Token 1953: 'ay' (ID: 356)
  Prédit: 'ay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ay' → logprob: -3.128163257315464e-07
    2. ' ay' → logprob: -15.5
    3. '
' → logprob: -18.375
    4. '   ' → logprob: -20.125
    5. ' ' → logprob: -20.25
    6. 'aye' → logprob: -21.25
    7. 'ah' → logprob: -21.5
    8. 'ays' → logprob: -21.75
    9. 'aw' → logprob: -22.0
    10. 'aj' → logprob: -22.0

Token 1954: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0914834663271904
    2. ',' → logprob: -2.9664833545684814
    3. '),(' → logprob: -3.3414833545684814
    4. '[' → logprob: -8.841483116149902
    5. ',(' → logprob: -9.216483116149902
    6. 'def' → logprob: -9.341483116149902
    7. ',b' → logprob: -9.466483116149902
    8. '(' → logprob: -10.091483116149902
    9. ',),' → logprob: -10.341483116149902
    10. '   ' → logprob: -10.591483116149902

Token 1955: 'bx' (ID: 34802)
  Prédit: 'bx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bx' → logprob: -1.275939702987671
    2. '(min' → logprob: -1.400939702987671
    3. 'max' → logprob: -1.525939702987671
    4. 'min' → logprob: -2.025939702987671
    5. '(max' → logprob: -2.400939702987671
    6. '(b' → logprob: -4.15093994140625
    7. 'sx' → logprob: -5.15093994140625
    8. ' (' → logprob: -5.40093994140625
    9. 'block' → logprob: -5.77593994140625
    10. '(block' → logprob: -6.40093994140625

Token 1956: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3150150775909424
    2. ',' → logprob: -1.4400150775909424
    3. '),(' → logprob: -3.9400150775909424
    4. '),' → logprob: -4.440014839172363
    5. ',[' → logprob: -7.440014839172363
    6. '(' → logprob: -7.815014839172363
    7. ')[' → logprob: -8.065014839172363
    8. ',(' → logprob: -8.940014839172363
    9. ')' → logprob: -8.940014839172363
    10. '1' → logprob: -9.190014839172363

Token 1957: 'by' (ID: 2345)
  Prédit: 'by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.08343365043401718
    2. '(' → logprob: -2.5834336280822754
    3. 'ay' → logprob: -5.833433628082275
    4. '(by' → logprob: -7.208433628082275
    5. 'min' → logprob: -8.083434104919434
    6. ' (' → logprob: -8.208434104919434
    7. '(min' → logprob: -9.333434104919434
    8. '0' → logprob: -10.208434104919434
    9. '(b' → logprob: -10.833434104919434
    10. '(
' → logprob: -11.458434104919434

Token 1958: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006199848721735179
    2. '),' → logprob: -8.250619888305664
    3. ',(' → logprob: -9.000619888305664
    4. ' ,' → logprob: -9.500619888305664
    5. '(block' → logprob: -9.750619888305664
    6. ',
' → logprob: -10.000619888305664
    7. '),(' → logprob: -11.250619888305664
    8. '(' → logprob: -11.500619888305664
    9. ',min' → logprob: -12.000619888305664
    10. ')' → logprob: -12.375619888305664

Token 1959: ' (' (ID: 350)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.0030298829078674316
    2. ' (' → logprob: -6.253029823303223
    3. '(block' → logprob: -6.878029823303223
    4. '(max' → logprob: -9.753029823303223
    5. '(' → logprob: -12.003029823303223
    6. '[min' → logprob: -13.253029823303223
    7. '   ' → logprob: -13.378029823303223
    8. 'block' → logprob: -14.628029823303223
    9. '(px' → logprob: -14.753029823303223
    10. '((' → logprob: -15.003029823303223

Token 1960: 'min' (ID: 1493)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.252013236284256
    2. 'min' → logprob: -1.5020132064819336
    3. '[min' → logprob: -9.877013206481934
    4. ' min' → logprob: -10.877013206481934
    5. ' (' → logprob: -11.627013206481934
    6. '   ' → logprob: -13.002013206481934
    7. ',min' → logprob: -14.502013206481934
    8. '(' → logprob: -14.627013206481934
    9. '	min' → logprob: -14.877013206481934
    10. '=min' → logprob: -14.877013206481934

Token 1961: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: 0.0
    2. ',' → logprob: -18.875
    3. ' x' → logprob: -18.875
    4. '<|end|>' → logprob: -19.0
    5. '[' → logprob: -19.5
    6. '(x' → logprob: -19.75
    7. ')x' → logprob: -20.0
    8. '(' → logprob: -20.375
    9. '```' → logprob: -20.5
    10. 'block' → logprob: -20.625

Token 1962: ',min' (ID: 129117)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5764484405517578
    2. ',min' → logprob: -0.8264484405517578
    3. ',max' → logprob: -7.951448440551758
    4. 'min' → logprob: -9.576448440551758
    5. '[min' → logprob: -10.451448440551758
    6. ',
' → logprob: -11.201448440551758
    7. ' ,' → logprob: -11.326448440551758
    8. ',m' → logprob: -11.576448440551758
    9. '[' → logprob: -11.701448440551758
    10. ' min' → logprob: -13.326448440551758

Token 1963: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.5577775128767826e-06
    2. 'min' → logprob: -13.000005722045898
    3. ',' → logprob: -13.375005722045898
    4. ',y' → logprob: -14.750005722045898
    5. 'iy' → logprob: -14.875005722045898
    6. 'x' → logprob: -15.000005722045898
    7. '
' → logprob: -16.0000057220459
    8. 'ney' → logprob: -16.2500057220459
    9. 'ny' → logprob: -16.8750057220459
    10. 'nyi' → logprob: -17.0000057220459

Token 1964: ',max' (ID: 81466)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02301996573805809
    2. '),(' → logprob: -4.648019790649414
    3. ',min' → logprob: -5.148019790649414
    4. '),' → logprob: -5.273019790649414
    5. ',max' → logprob: -6.148019790649414
    6. ',
' → logprob: -10.398019790649414
    7. ',(' → logprob: -10.773019790649414
    8. ' ,' → logprob: -11.148019790649414
    9. ',),' → logprob: -11.398019790649414
    10. ')' → logprob: -13.023019790649414

Token 1965: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9361264946837764e-07
    2. 'max' → logprob: -16.0
    3. 'ax' → logprob: -18.125
    4. ',max' → logprob: -19.125
    5. ',' → logprob: -19.25
    6. ' max' → logprob: -19.875
    7. '(max' → logprob: -20.875
    8. '```' → logprob: -20.875
    9. '
' → logprob: -21.0
    10. 'xx' → logprob: -21.875

Token 1966: ',max' (ID: 81466)
  Prédit: ',max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',max' → logprob: -0.4118846654891968
    2. ',min' → logprob: -1.6618846654891968
    3. ',' → logprob: -1.9118846654891968
    4. ',y' → logprob: -12.661884307861328
    5. 'max' → logprob: -12.661884307861328
    6. ',m' → logprob: -13.161884307861328
    7. 'min' → logprob: -13.161884307861328
    8. ',
' → logprob: -13.661884307861328
    9. ',num' → logprob: -13.661884307861328
    10. ',next' → logprob: -13.661884307861328

Token 1967: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.003291425062343478
    2. 'max' → logprob: -5.753291606903076
    3. 'ay' → logprob: -9.378291130065918
    4. 'x' → logprob: -10.878291130065918
    5. ' ymax' → logprob: -13.003291130065918
    6. 'may' → logprob: -13.628291130065918
    7. ',' → logprob: -13.878291130065918
    8. '=' → logprob: -14.128291130065918
    9. '1' → logprob: -14.128291130065918
    10. '```' → logprob: -14.253291130065918

Token 1968: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12711970508098602
    2. '))' → logprob: -2.127119779586792
    3. '))
' → logprob: -9.377120018005371
    4. ')
' → logprob: -10.002120018005371
    5. '   ' → logprob: -10.002120018005371
    6. ')))' → logprob: -11.627120018005371
    7. ' )' → logprob: -13.252120018005371
    8. ')")' → logprob: -13.377120018005371
    9. '):' → logprob: -14.252120018005371
    10. '),' → logprob: -15.002120018005371

Token 1969: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008442913531325758
    2. '<|end|>' → logprob: -8.37584400177002
    3. '        
' → logprob: -8.75084400177002
    4. '
' → logprob: -8.87584400177002
    5. ')' → logprob: -9.25084400177002
    6. '   ' → logprob: -9.75084400177002
    7. ',' → logprob: -10.62584400177002
    8. '[' → logprob: -10.75084400177002
    9. '<|end|>' → logprob: -11.25084400177002
    10. ':' → logprob: -11.37584400177002

Token 1970: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011187844211235642
    2. ' if' → logprob: -8.001118659973145
    3. '
' → logprob: -8.251118659973145
    4. '   ' → logprob: -8.876118659973145
    5. 'if' → logprob: -8.876118659973145
    6. ')' → logprob: -9.126118659973145
    7. '        
' → logprob: -10.376118659973145
    8. '```' → logprob: -10.876118659973145
    9. ',' → logprob: -11.126118659973145
    10. '           ' → logprob: -11.251118659973145

Token 1971: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.016528237611055374
    2. '       ' → logprob: -4.266528129577637
    3. ' if' → logprob: -6.141528129577637
    4. 'import' → logprob: -9.266528129577637
    5. '   ' → logprob: -9.391528129577637
    6. 'r' → logprob: -10.516528129577637
    7. '```' → logprob: -12.891528129577637
    8. '           ' → logprob: -14.391528129577637
    9. 'd' → logprob: -15.141528129577637
    10. ' ' → logprob: -15.266528129577637

Token 1972: ' Compute' (ID: 45438)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009450170211493969
    2. '       ' → logprob: -5.5094499588012695
    3. 'import' → logprob: -6.0094499588012695
    4. 'r' → logprob: -6.1344499588012695
    5. ' if' → logprob: -8.13444995880127
    6. '```' → logprob: -8.50944995880127
    7. '#' → logprob: -9.88444995880127
    8. '``' → logprob: -10.00944995880127
    9. 'max' → logprob: -10.00944995880127
    10. '   ' → logprob: -10.38444995880127

Token 1973: ' vertical' (ID: 17679)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8562586307525635
    2. 'rhs' → logprob: -1.6062586307525635
    3. 'if' → logprob: -2.3562586307525635
    4. 'max' → logprob: -3.2312586307525635
    5. 'allowed' → logprob: -3.3562586307525635
    6. 'dist' → logprob: -3.3562586307525635
    7. '   ' → logprob: -3.4812586307525635
    8. 'required' → logprob: -4.231258392333984
    9. 'possible' → logprob: -4.356258392333984
    10. 'lhs' → logprob: -4.606258392333984

Token 1974: ' part' (ID: 997)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.40903353691101074
    2. 'dist' → logprob: -1.2840335369110107
    3. '_clear' → logprob: -3.7840335369110107
    4. 'clear' → logprob: -4.90903377532959
    5. '_distance' → logprob: -5.03403377532959
    6. '_gap' → logprob: -5.28403377532959
    7. 'distance' → logprob: -5.53403377532959
    8. '_diff' → logprob: -5.53403377532959
    9. '_offset' → logprob: -6.15903377532959
    10. '_overlap' → logprob: -6.40903377532959

Token 1975: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1886858493089676
    2. ' if' → logprob: -2.188685894012451
    3. 'v' → logprob: -3.688685894012451
    4. ' =' → logprob: -4.813685894012451
    5. '```' → logprob: -4.813685894012451
    6. 'if' → logprob: -5.688685894012451
    7. ',' → logprob: -5.813685894012451
    8. ' vertical' → logprob: -5.813685894012451
    9. ' v' → logprob: -5.938685894012451
    10. '=' → logprob: -6.063685894012451

Token 1976: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024388356134295464
    2. ' if' → logprob: -4.149388313293457
    3. 'if' → logprob: -5.399388313293457
    4. '```' → logprob: -6.024388313293457
    5. '   ' → logprob: -7.899388313293457
    6. 'v' → logprob: -8.399388313293457
    7. '=' → logprob: -8.524388313293457
    8. ',' → logprob: -8.774388313293457
    9. ' =' → logprob: -8.774388313293457
    10. '>' → logprob: -9.774388313293457

Token 1977: ' vert' (ID: 7583)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7103717923164368
    2. 'if' → logprob: -0.9603717923164368
    3. 'v' → logprob: -3.460371732711792
    4. ' vertical' → logprob: -3.460371732711792
    5. '   ' → logprob: -3.710371732711792
    6. ' v' → logprob: -4.085371971130371
    7. 'vertical' → logprob: -4.710371971130371
    8. '       ' → logprob: -4.835371971130371
    9. 'vert' (adapté à ' vert') → logprob: -6.460371971130371
    10. ' vert' → logprob: -7.335371971130371

Token 1978: '_gap' (ID: 131234)
  Prédit: 'ical'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ical' → logprob: -0.2633160650730133
    2. '_dist' → logprob: -1.638316035270691
    3. '_distance' → logprob: -3.6383161544799805
    4. 'dist' → logprob: -5.2633161544799805
    5. ' =' → logprob: -6.5133161544799805
    6. 't' → logprob: -6.8883161544799805
    7. 'cal' → logprob: -7.1383161544799805
    8. '_part' → logprob: -7.1383161544799805
    9. '=' → logprob: -7.8883161544799805
    10. 'ic' → logprob: -8.51331615447998

Token 1979: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859929531812668
    2. ' =' → logprob: -3.0485992431640625
    3. '   ' → logprob: -12.048599243164062
    4. '```' → logprob: -12.673599243164062
    5. '=
' → logprob: -13.798599243164062
    6. '=max' → logprob: -14.923599243164062
    7. '
' → logprob: -15.048599243164062
    8. ',' → logprob: -15.173599243164062
    9. '       ' → logprob: -15.298599243164062
    10. '    ' → logprob: -15.798599243164062

Token 1980: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0025674565695226192
    2. ' max' → logprob: -6.252567291259766
    3. '0' → logprob: -7.377567291259766
    4. 'h' → logprob: -12.252567291259766
    5. 'r' → logprob: -12.377567291259766
    6. 'min' → logprob: -13.377567291259766
    7. '(max' → logprob: -13.877567291259766
    8. '   ' → logprob: -14.127567291259766
    9. ' ' → logprob: -14.377567291259766
    10. 'abs' → logprob: -15.752567291259766

Token 1981: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.6240566083070007e-06
    2. '0' → logprob: -13.500001907348633
    3. ' (' → logprob: -15.875001907348633
    4. '(
' → logprob: -17.000001907348633
    5. 'def' → logprob: -20.500001907348633
    6. '<|end|>' → logprob: -20.625001907348633
    7. '((' → logprob: -20.750001907348633
    8. '```' → logprob: -21.125001907348633
    9. '(-' → logprob: -21.625001907348633
    10. '=' → logprob: -22.000001907348633

Token 1982: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011048170737922192
    2. '(' → logprob: -4.511048316955566
    3. '(h' → logprob: -15.636048316955566
    4. 'h' → logprob: -16.13604736328125
    5. ')' → logprob: -17.76104736328125
    6. ' ' → logprob: -17.88604736328125
    7. '```' → logprob: -18.38604736328125
    8. ' (' → logprob: -19.01104736328125
    9. '[' → logprob: -19.13604736328125
    10. '(
' → logprob: -19.13604736328125

Token 1983: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2564880847930908
    2. ',h' → logprob: -2.131488084793091
    3. '(' → logprob: -2.756488084793091
    4. '(h' → logprob: -3.131488084793091
    5. '0' → logprob: -8.881487846374512
    6. ',(' → logprob: -9.381487846374512
    7. ' ,' → logprob: -9.756487846374512
    8. 'h' → logprob: -10.506487846374512
    9. '(
' → logprob: -10.631487846374512
    10. ',
' → logprob: -10.631487846374512

Token 1984: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.002301204949617386
    2. 'r' → logprob: -7.002301216125488
    3. ' h' → logprob: -7.252301216125488
    4. '(h' → logprob: -7.377301216125488
    5. '(r' → logprob: -10.127301216125488
    6. '   ' → logprob: -11.627301216125488
    7. ' r' → logprob: -12.877301216125488
    8. ' (' → logprob: -13.252301216125488
    9. '(' → logprob: -14.502301216125488
    10. '<h' → logprob: -15.127301216125488

Token 1985: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.046925708651542664
    2. '-' → logprob: -3.1719257831573486
    3. '-r' → logprob: -5.5469255447387695
    4. ')' → logprob: -11.79692554473877
    5. '   ' → logprob: -12.92192554473877
    6. '       ' → logprob: -12.92192554473877
    7. '-
' → logprob: -13.04692554473877
    8. ' -
' → logprob: -13.42192554473877
    9. ' ' → logprob: -13.79692554473877
    10. ',' → logprob: -14.54692554473877

Token 1986: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -4.5491004129871726e-05
    2. ' r' → logprob: -10.000045776367188
    3. '	r' → logprob: -20.500045776367188
    4. '_r' → logprob: -21.000045776367188
    5. '   ' → logprob: -22.250045776367188
    6. '```' → logprob: -22.625045776367188
    7. '
' → logprob: -23.875045776367188
    8. ')' → logprob: -24.500045776367188
    9. '$r' → logprob: -25.375045776367188
    10. ' ' → logprob: -25.500045776367188

Token 1987: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.031851738691329956
    2. ')
' → logprob: -3.5318517684936523
    3. ')**' → logprob: -6.531851768493652
    4. '   ' → logprob: -7.906851768493652
    5. '       ' → logprob: -8.531851768493652
    6. '**' → logprob: -10.406851768493652
    7. ' )' → logprob: -11.031851768493652
    8. ')
' → logprob: -11.281851768493652
    9. ')`' → logprob: -11.906851768493652
    10. ')`
' → logprob: -12.656851768493652

Token 1988: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007333060260862112
    2. ' if' → logprob: -5.132333278656006
    3. '   ' → logprob: -7.507333278656006
    4. 'if' → logprob: -8.257332801818848
    5. ')' → logprob: -8.382332801818848
    6. '```' → logprob: -8.632332801818848
    7. '
' → logprob: -9.632332801818848
    8. ',' → logprob: -10.132332801818848
    9. '        
' → logprob: -10.257332801818848
    10. ')
' → logprob: -11.257332801818848

Token 1989: ' lhs' (ID: 51302)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13657207787036896
    2. ' if' → logprob: -2.6365721225738525
    3. '       ' → logprob: -2.8865721225738525
    4. '   ' → logprob: -8.886571884155273
    5. '```' → logprob: -9.511571884155273
    6. 'd' → logprob: -10.511571884155273
    7. '        
' → logprob: -11.511571884155273
    8. 'import' → logprob: -11.636571884155273
    9. 'return' → logprob: -12.386571884155273
    10. ')' → logprob: -12.511571884155273

Token 1990: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6359212398529053
    2. ' =' → logprob: -0.7609212398529053
    3. ' >=' → logprob: -6.260921478271484
    4. ',' → logprob: -8.010921478271484
    5. '>=' → logprob: -8.135921478271484
    6. ' <=' → logprob: -8.510921478271484
    7. '<|end|>' → logprob: -8.635921478271484
    8. ')' → logprob: -9.010921478271484
    9. '**' → logprob: -9.760921478271484
    10. ' ' → logprob: -10.135921478271484

Token 1991: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00016349162615370005
    2. ' d' → logprob: -9.500163078308105
    3. '(d' → logprob: -9.750163078308105
    4. 'r' → logprob: -11.125163078308105
    5. '   ' → logprob: -11.250163078308105
    6. '	d' → logprob: -15.000163078308105
    7. 'float' → logprob: -15.250163078308105
    8. '(' → logprob: -15.375163078308105
    9. '(r' → logprob: -15.375163078308105
    10. '\(' → logprob: -15.375163078308105

Token 1992: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -1.7432603272027336e-06
    2. '_' → logprob: -13.750001907348633
    3. 'h' → logprob: -15.500001907348633
    4. ' _' → logprob: -16.250001907348633
    5. '_
' → logprob: -16.250001907348633
    6. '```' → logprob: -16.875001907348633
    7. '_{' → logprob: -17.500001907348633
    8. '**' → logprob: -18.125001907348633
    9. ')' → logprob: -18.125001907348633
    10. '_s' → logprob: -18.375001907348633

Token 1993: '*d' (ID: 81685)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.001586866332218051
    2. 'd' → logprob: -7.8765869140625
    3. ' **' → logprob: -8.0015869140625
    4. '*d' → logprob: -8.3765869140625
    5. '*' → logprob: -8.5015869140625
    6. ')**' → logprob: -8.7515869140625
    7. ')' → logprob: -9.1265869140625
    8. '2' → logprob: -9.2515869140625
    9. '²' → logprob: -10.8765869140625
    10. ' d' → logprob: -11.1265869140625

Token 1994: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.006049904972314835
    2. '_d' → logprob: -5.131050109863281
    3. '_' → logprob: -9.381050109863281
    4. 'd' → logprob: -10.881050109863281
    5. 'h' → logprob: -12.006050109863281
    6. '```' → logprob: -12.881050109863281
    7. '   ' → logprob: -13.256050109863281
    8. ' _' → logprob: -13.506050109863281
    9. ')' → logprob: -13.631050109863281
    10. '_
' → logprob: -13.881050109863281

Token 1995: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1947776079177856
    2. ' -' → logprob: -1.4447776079177856
    3. '<|end|>' → logprob: -1.5697776079177856
    4. '       ' → logprob: -2.569777488708496
    5. '```' → logprob: -3.319777488708496
    6. '<|end|>' → logprob: -3.694777488708496
    7. ' >=' → logprob: -4.069777488708496
    8. ')' → logprob: -4.069777488708496
    9. '
' → logprob: -4.319777488708496
    10. ',' → logprob: -4.569777488708496

Token 1996: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0735408216714859
    2. ' >=' → logprob: -3.4485409259796143
    3. '```' → logprob: -3.8235409259796143
    4. '>=' → logprob: -4.948540687561035
    5. '       ' → logprob: -5.948540687561035
    6. ' +' → logprob: -6.448540687561035
    7. ' -' → logprob: -6.573540687561035
    8. ' rhs' → logprob: -6.823540687561035
    9. '+' → logprob: -7.448540687561035
    10. ' <=' → logprob: -7.448540687561035

Token 1997: ' rhs' (ID: 29564)
  Prédit: ' rhs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rhs' → logprob: -0.5256116390228271
    2. 'rhs' (adapté à ' rhs') → logprob: -0.9006116390228271
    3. '   ' → logprob: -6.150611877441406
    4. '```' → logprob: -8.650611877441406
    5. ' if' → logprob: -9.775611877441406
    6. '_rhs' → logprob: -9.900611877441406
    7. 'if' → logprob: -10.650611877441406
    8. '``' → logprob: -11.400611877441406
    9. '       ' → logprob: -11.900611877441406
    10. 'lhs' → logprob: -12.150611877441406

Token 1998: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193148851394653
    2. ' =' → logprob: -1.5019314289093018
    3. '=r' → logprob: -14.126931190490723
    4. '```' → logprob: -14.126931190490723
    5. '   ' → logprob: -15.251931190490723
    6. ':' → logprob: -15.501931190490723
    7. ',' → logprob: -16.00193214416504
    8. ' ' → logprob: -16.25193214416504
    9. ')' → logprob: -16.25193214416504
    10. '=
' → logprob: -16.62693214416504

Token 1999: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0009581510093994439
    2. ' r' → logprob: -7.12595796585083
    3. '   ' → logprob: -8.875958442687988
    4. '(r' → logprob: -11.375958442687988
    5. ' ' → logprob: -13.375958442687988
    6. '```' → logprob: -15.000958442687988
    7. ' (' → logprob: -15.250958442687988
    8. '  ' → logprob: -15.625958442687988
    9. '	r' → logprob: -16.375957489013672
    10. '    ' → logprob: -16.875957489013672

Token 2000: '*r' (ID: 92096)
  Prédit: '*r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*r' → logprob: -0.3082565665245056
    2. '*' → logprob: -1.6832566261291504
    3. '**' → logprob: -2.5582566261291504
    4. ' *' → logprob: -6.30825662612915
    5. '<|end|>' → logprob: -9.058256149291992
    6. '<|end|>' → logprob: -10.183256149291992
    7. '2' → logprob: -10.933256149291992
    8. 'r' → logprob: -10.933256149291992
    9. ' **' → logprob: -11.058256149291992
    10. '```' → logprob: -11.808256149291992

Token 2001: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29404863715171814
    2. ' if' → logprob: -2.044048547744751
    3. '   ' → logprob: -3.169048547744751
    4. ' >' → logprob: -3.919048547744751
    5. '<|end|>' → logprob: -4.16904878616333
    6. '>' → logprob: -4.29404878616333
    7. '**' → logprob: -4.91904878616333
    8. '```' → logprob: -5.29404878616333
    9. ' -' → logprob: -5.54404878616333
    10. ')' → logprob: -5.54404878616333

Token 2002: ' vert' (ID: 7583)
  Prédit: 'vert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vert' → logprob: -0.030214155092835426
    2. ' vert' → logprob: -3.5302140712738037
    3. '(' → logprob: -7.780214309692383
    4. '   ' → logprob: -10.280214309692383
    5. ' (' → logprob: -12.030214309692383
    6. '_vert' → logprob: -13.530214309692383
    7. 'verts' → logprob: -13.780214309692383
    8. '       ' → logprob: -14.405214309692383
    9. 'vertical' → logprob: -15.030214309692383
    10. 'Vert' → logprob: -15.030214309692383

Token 2003: '_gap' (ID: 131234)
  Prédit: '_gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gap' → logprob: -0.0022122275549918413
    2. '*' → logprob: -7.502212047576904
    3. ' _' → logprob: -7.752212047576904
    4. '**' → logprob: -8.377212524414062
    5. ' ' → logprob: -8.502212524414062
    6. '   ' → logprob: -8.627212524414062
    7. '_' → logprob: -8.877212524414062
    8. '+' → logprob: -9.502212524414062
    9. 'gap' → logprob: -9.502212524414062
    10. '_vert' → logprob: -9.752212524414062

Token 2004: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.005812417715787888
    2. '**' → logprob: -5.380812644958496
    3. ' *' → logprob: -7.005812644958496
    4. '*r' → logprob: -8.880812644958496
    5. '*v' → logprob: -9.380812644958496
    6. '*object' → logprob: -10.255812644958496
    7. ')' → logprob: -11.880812644958496
    8. '<|end|>' → logprob: -12.755812644958496
    9. '*out' → logprob: -12.755812644958496
    10. '*d' → logprob: -13.005812644958496

Token 2005: 'vert' (ID: 2339)
  Prédit: 'vert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vert' → logprob: -0.00864282064139843
    2. '2' → logprob: -4.758642673492432
    3. ' vert' → logprob: -10.88364315032959
    4. 'Vert' → logprob: -12.63364315032959
    5. '_vert' → logprob: -13.25864315032959
    6. '.vert' → logprob: -13.63364315032959
    7. 'vertical' → logprob: -14.63364315032959
    8. '   ' → logprob: -14.63364315032959
    9. '(' → logprob: -14.88364315032959
    10. 'vel' → logprob: -14.88364315032959

Token 2006: '_gap' (ID: 131234)
  Prédit: '_gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gap' → logprob: -0.1457841843366623
    2. 'gap' → logprob: -2.0207841396331787
    3. 'Gap' → logprob: -6.520784378051758
    4. '-gap' → logprob: -7.145784378051758
    5. 'g' → logprob: -8.520784378051758
    6. '2' → logprob: -8.645784378051758
    7. '
' → logprob: -8.895784378051758
    8. 'r' → logprob: -9.270784378051758
    9. '0' → logprob: -10.020784378051758
    10. '```' → logprob: -10.770784378051758

Token 2007: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10295926034450531
    2. '   ' → logprob: -2.727959156036377
    3. '
' → logprob: -4.477959156036377
    4. ' if' → logprob: -4.477959156036377
    5. ')' → logprob: -5.102959156036377
    6. 'if' → logprob: -6.352959156036377
    7. '```' → logprob: -8.102959632873535
    8. ')
' → logprob: -8.352959632873535
    9. '<|end|>' → logprob: -8.352959632873535
    10. ',' → logprob: -8.727959632873535

Token 2008: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006855320185422897
    2. '   ' → logprob: -5.256855487823486
    3. ' if' → logprob: -7.131855487823486
    4. ')' → logprob: -7.881855487823486
    5. '	' → logprob: -9.006855010986328
    6. '
' → logprob: -9.381855010986328
    7. 'if' → logprob: -9.631855010986328
    8. '```' → logprob: -10.131855010986328
    9. '	if' → logprob: -10.256855010986328
    10. '           ' → logprob: -10.881855010986328

Token 2009: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4774617552757263
    2. 'if' → logprob: -0.9774617552757263
    3. ' if' → logprob: -5.727461814880371
    4. '   ' → logprob: -9.102461814880371
    5. '
' → logprob: -12.352461814880371
    6. '```' → logprob: -12.477461814880371
    7. '           ' → logprob: -13.102461814880371
    8. '	if' → logprob: -14.477461814880371
    9. '	' → logprob: -14.977461814880371
    10. 'If' → logprob: -15.102461814880371

Token 2010: ' For' (ID: 2214)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03853391855955124
    2. '       ' → logprob: -3.288533926010132
    3. ' if' → logprob: -7.788533687591553
    4. '   ' → logprob: -9.538534164428711
    5. 'If' → logprob: -13.163534164428711
    6. 'for' → logprob: -13.538534164428711
    7. '	if' → logprob: -13.788534164428711
    8. '```' → logprob: -13.913534164428711
    9. '           ' → logprob: -15.538534164428711
    10. 'import' → logprob: -15.788534164428711

Token 2011: ' feasibility' (ID: 97666)
  Prédit: 'lhs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lhs' → logprob: -0.5664360523223877
    2. 'rhs' → logprob: -1.0664360523223877
    3. ' lhs' → logprob: -3.3164360523223877
    4. 'collision' → logprob: -3.8164360523223877
    5. ' rhs' → logprob: -4.316435813903809
    6. 'not' → logprob: -5.191435813903809
    7. ' not' → logprob: -5.691435813903809
    8. ' collision' → logprob: -6.191435813903809
    9. 'd' → logprob: -6.441435813903809
    10. 'any' → logprob: -7.066435813903809

Token 2012: ' rhs' (ID: 29564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1064496859908104
    2. ' if' → logprob: -2.606449604034424
    3. 'if' → logprob: -3.606449604034424
    4. '   ' → logprob: -10.981450080871582
    5. '           ' → logprob: -11.481450080871582
    6. ',' → logprob: -13.106450080871582
    7. '```' → logprob: -13.606450080871582
    8. ' =' → logprob: -14.106450080871582
    9. '<|end|>' → logprob: -14.481450080871582
    10. '=' → logprob: -14.731450080871582

Token 2013: ' must' (ID: 2804)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.982776939868927
    2. ' >=' → logprob: -1.4827768802642822
    3. '>' → logprob: -2.1077768802642822
    4. ' <' → logprob: -2.4827768802642822
    5. '>=' → logprob: -2.7327768802642822
    6. ' >' → logprob: -2.7327768802642822
    7. '<=' → logprob: -2.9827768802642822
    8. '<' → logprob: -4.482777118682861
    9. '=' → logprob: -7.607777118682861
    10. '   ' → logprob: -7.857777118682861

Token 2014: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.4560450613498688
    2. '<=' → logprob: -1.3310450315475464
    3. '>=' → logprob: -2.706045150756836
    4. ' <=' → logprob: -3.956045150756836
    5. 'be' → logprob: -4.456045150756836
    6. ' >=' → logprob: -6.081045150756836
    7. '>' → logprob: -6.456045150756836
    8. '=' → logprob: -8.331045150756836
    9. ' not' → logprob: -9.081045150756836
    10. 'not' → logprob: -9.331045150756836

Token 2015: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.019750695675611496
    2. ' <=' → logprob: -4.019750595092773
    3. '>=' → logprob: -6.519750595092773
    4. '0' → logprob: -9.644750595092773
    5. ' >=' → logprob: -11.019750595092773
    6. '≤' → logprob: -11.144750595092773
    7. 'less' → logprob: -11.519750595092773
    8. '>' → logprob: -11.519750595092773
    9. '```' → logprob: -12.644750595092773
    10. '<' → logprob: -13.019750595092773

Token 2016: ' lhs' (ID: 51302)
  Prédit: 'lhs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lhs' → logprob: -0.004680630285292864
    2. ' lhs' → logprob: -5.379680633544922
    3. '0' → logprob: -9.754680633544922
    4. '(lhs' → logprob: -14.004680633544922
    5. 'l' → logprob: -14.754680633544922
    6. 'lh' → logprob: -14.879680633544922
    7. '```' → logprob: -14.879680633544922
    8. 'rhs' → logprob: -15.379680633544922
    9. 'left' → logprob: -16.754680633544922
    10. '
' → logprob: -16.879680633544922

Token 2017: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008951001800596714
    2. '   ' → logprob: -4.883951187133789
    3. ' if' → logprob: -7.008951187133789
    4. '
' → logprob: -8.258951187133789
    5. 'if' → logprob: -10.258951187133789
    6. '           ' → logprob: -10.383951187133789
    7. ':' → logprob: -10.883951187133789
    8. '        
' → logprob: -11.008951187133789
    9. ',' → logprob: -11.258951187133789
    10. '```' → logprob: -11.508951187133789

Token 2018: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014776040916331112
    2. '   ' → logprob: -9.500147819519043
    3. ' if' → logprob: -11.125147819519043
    4. '	' → logprob: -11.375147819519043
    5. '<|end|>' → logprob: -11.375147819519043
    6. '```' → logprob: -11.500147819519043
    7. 'if' → logprob: -12.125147819519043
    8. '
' → logprob: -12.250147819519043
    9. '           ' → logprob: -12.250147819519043
    10. ',' → logprob: -12.375147819519043

Token 2019: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023518456146121025
    2. 'if' → logprob: -3.7735185623168945
    3. ' if' → logprob: -8.398518562316895
    4. '   ' → logprob: -10.023518562316895
    5. '           ' → logprob: -13.273518562316895
    6. '	' → logprob: -14.398518562316895
    7. '```' → logprob: -15.148518562316895
    8. '
' → logprob: -15.398518562316895
    9. '	if' → logprob: -15.898518562316895
    10. '     ' → logprob: -16.148517608642578

Token 2020: ' If' (ID: 1843)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07913532108068466
    2. 'if' → logprob: -2.5791354179382324
    3. ' if' → logprob: -8.829134941101074
    4. '   ' → logprob: -9.329134941101074
    5. '```' → logprob: -12.204134941101074
    6. '           ' → logprob: -13.204134941101074
    7. 'If' → logprob: -13.704134941101074
    8. '	if' → logprob: -14.079134941101074
    9. '	' → logprob: -14.204134941101074
    10. 'for' → logprob: -15.579134941101074

Token 2021: ' rhs' (ID: 29564)
  Prédit: 'rhs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rhs' → logprob: -0.03866834565997124
    2. ' rhs' → logprob: -3.288668394088745
    3. 'lhs' → logprob: -7.788668155670166
    4. '(rhs' → logprob: -8.663668632507324
    5. 'r' → logprob: -11.163668632507324
    6. ' lhs' → logprob: -11.538668632507324
    7. '   ' → logprob: -12.038668632507324
    8. '       ' → logprob: -12.538668632507324
    9. '_rhs' → logprob: -12.538668632507324
    10. '    ' → logprob: -14.788668632507324

Token 2022: ' <=' (ID: 5017)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.38689687848091125
    2. ' >' → logprob: -1.1368968486785889
    3. ' <=' → logprob: -11.761897087097168
    4. ')' → logprob: -12.386897087097168
    5. '<=' → logprob: -12.886897087097168
    6. '=' → logprob: -13.261897087097168
    7. '   ' → logprob: -13.511897087097168
    8. ':' → logprob: -13.636897087097168
    9. '>
' → logprob: -13.761897087097168
    10. '```' → logprob: -14.011897087097168

Token 2023: ' ' (ID: 220)
  Prédit: 'lhs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lhs' → logprob: -0.004350009839981794
    2. '0' → logprob: -5.754350185394287
    3. ' lhs' → logprob: -6.754350185394287
    4. 'lh' → logprob: -13.504349708557129
    5. 'l' → logprob: -13.504349708557129
    6. ' ' → logprob: -14.254349708557129
    7. '```' → logprob: -14.254349708557129
    8. 'rhs' → logprob: -14.504349708557129
    9. '(lhs' → logprob: -14.629349708557129
    10. '   ' → logprob: -15.129349708557129

Token 2024: '0' (ID: 15)
  Prédit: 'lhs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lhs' → logprob: -0.20147863030433655
    2. '0' → logprob: -1.7014786005020142
    3. ' lhs' → logprob: -10.451478958129883
    4. 'lh' → logprob: -11.326478958129883
    5. 'l' → logprob: -11.951478958129883
    6. 'rhs' → logprob: -12.451478958129883
    7. '(lhs' → logprob: -12.451478958129883
    8. '```' → logprob: -12.701478958129883
    9. 'left' → logprob: -13.076478958129883
    10. '
' → logprob: -13.826478958129883

Token 2025: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03386479616165161
    2. '       ' → logprob: -4.158864974975586
    3. ':
' → logprob: -4.283864974975586
    4. ' or' → logprob: -5.783864974975586
    5. '           ' → logprob: -7.783864974975586
    6. ' and' → logprob: -9.033864974975586
    7. ':return' → logprob: -9.408864974975586
    8. '   ' → logprob: -10.033864974975586
    9. ' if' → logprob: -10.283864974975586
    10. ',' → logprob: -10.283864974975586

Token 2026: ' automatically' (ID: 14188)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.1681121587753296
    2. ' return' → logprob: -1.9181121587753296
    3. '           ' → logprob: -6.043112277984619
    4. ' if' → logprob: -6.168112277984619
    5. 'continue' → logprob: -6.543112277984619
    6. '       ' → logprob: -7.043112277984619
    7. 'return' → logprob: -7.418112277984619
    8. ' ' → logprob: -9.418111801147461
    9. ':return' → logprob: -9.418111801147461
    10. ':' → logprob: -10.043111801147461

Token 2027: ' feasible' (ID: 58866)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.2042649984359741
    2. 'continue' → logprob: -1.3292649984359741
    3. ' return' → logprob: -1.7042649984359741
    4. '       ' → logprob: -1.9542649984359741
    5. 'return' → logprob: -2.3292651176452637
    6. '           ' → logprob: -4.454265117645264
    7. ' if' → logprob: -6.829265117645264
    8. '   ' → logprob: -6.954265117645264
    9. 'if' → logprob: -8.704264640808105
    10. '               ' → logprob: -9.454264640808105

Token 2028: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49106815457344055
    2. '       ' → logprob: -1.1160681247711182
    3. '
' → logprob: -3.241068124771118
    4. '    
' → logprob: -4.616068363189697
    5. ':
' → logprob: -6.116068363189697
    6. ':' → logprob: -6.116068363189697
    7. '        
' → logprob: -6.241068363189697
    8. 'def' → logprob: -6.491068363189697
    9. ')' → logprob: -6.991068363189697
    10. '\n' → logprob: -7.241068363189697

Token 2029: 'ball' (ID: 5052)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.8038869500160217
    2. ' return' → logprob: -1.553886890411377
    3. 'continue' → logprob: -2.053886890411377
    4. 'return' → logprob: -2.178886890411377
    5. '       ' → logprob: -2.928886890411377
    6. '           ' → logprob: -3.803886890411377
    7. ')' → logprob: -4.178886890411377
    8. ')
' → logprob: -6.053886890411377
    9. ' if' → logprob: -6.803886890411377
    10. ')return' → logprob: -6.928886890411377

Token 2030: ' radius' (ID: 21090)
  Prédit: ' radius'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' radius' → logprob: -1.4000847339630127
    2. ' is' → logprob: -2.0250847339630127
    3. ' has' → logprob: -2.5250847339630127
    4. 'r' → logprob: -2.5250847339630127
    5. ' cannot' → logprob: -2.5250847339630127
    6. ')' → logprob: -2.7750847339630127
    7. 'radius' → logprob: -2.7750847339630127
    8. ' can' → logprob: -3.2750847339630127
    9. '_radius' → logprob: -3.2750847339630127
    10. ' does' → logprob: -3.9000847339630127

Token 2031: ' smaller' (ID: 13679)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.1686568409204483
    2. ' >=' → logprob: -2.793656826019287
    3. ' >' → logprob: -3.293656826019287
    4. '<=' → logprob: -3.418656826019287
    5. ')' → logprob: -4.918656826019287
    6. '>=' → logprob: -5.668656826019287
    7. '>' → logprob: -5.793656826019287
    8. '=' → logprob: -6.043656826019287
    9. ' <' → logprob: -6.168656826019287
    10. ' is' → logprob: -6.293656826019287

Token 2032: ' than' (ID: 1572)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03570878505706787
    2. ' or' → logprob: -4.660708904266357
    3. 'or' → logprob: -4.660708904266357
    4. ' than' → logprob: -4.785708904266357
    5. 'than' → logprob: -5.285708904266357
    6. ')' → logprob: -6.660708904266357
    7. ' =' → logprob: -6.910708904266357
    8. 'import' → logprob: -9.4107084274292
    9. '=
' → logprob: -9.6607084274292
    10. '==' → logprob: -9.7857084274292

Token 2033: ' block' (ID: 4355)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.8410629034042358
    2. ' block' → logprob: -0.9660629034042358
    3. 'block' → logprob: -2.5910630226135254
    4. 'vertical' → logprob: -3.5910630226135254
    5. 'height' → logprob: -3.8410630226135254
    6. ' h' → logprob: -4.216063022613525
    7. ' or' → logprob: -4.341063022613525
    8. 'or' → logprob: -4.716063022613525
    9. ' vertical' → logprob: -4.716063022613525
    10. '0' → logprob: -4.841063022613525

Token 2034: ' height' (ID: 4679)
  Prédit: ' radius'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' radius' → logprob: -0.857620120048523
    2. 'radius' → logprob: -1.232620120048523
    3. 'r' → logprob: -1.732620120048523
    4. ')' → logprob: -2.8576202392578125
    5. '),' → logprob: -4.8576202392578125
    6. ' or' → logprob: -4.9826202392578125
    7. ' r' → logprob: -5.1076202392578125
    8. 'height' → logprob: -5.2326202392578125
    9. ' size' → logprob: -5.6076202392578125
    10. ' height' → logprob: -5.7326202392578125

Token 2035: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7257146239280701
    2. ' or' → logprob: -1.3507146835327148
    3. '       ' → logprob: -2.225714683532715
    4. ')
' → logprob: -2.225714683532715
    5. '):' → logprob: -4.350714683532715
    6. '):
' → logprob: -4.600714683532715
    7. '),' → logprob: -5.100714683532715
    8. ',' → logprob: -5.350714683532715
    9. ' )' → logprob: -6.600714683532715
    10. '   ' → logprob: -6.975714683532715

Token 2036: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006108098896220326
    2. '           ' → logprob: -8.6256103515625
    3. ' if' → logprob: -8.8756103515625
    4. ',' → logprob: -9.5006103515625
    5. ')' → logprob: -9.6256103515625
    6. '```' → logprob: -9.6256103515625
    7. '   ' → logprob: -10.3756103515625
    8. ':' → logprob: -11.2506103515625
    9. '
' → logprob: -12.0006103515625
    10. ' or' → logprob: -12.1256103515625

Token 2037: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030861452221870422
    2. ' if' → logprob: -3.7808613777160645
    3. 'if' → logprob: -4.9058613777160645
    4. '   ' → logprob: -9.030861854553223
    5. '```' → logprob: -10.030861854553223
    6. '           ' → logprob: -11.280861854553223
    7. 'If' → logprob: -13.030861854553223
    8. '
' → logprob: -13.530861854553223
    9. ' ' → logprob: -14.155861854553223
    10. ')' → logprob: -14.280861854553223

Token 2038: ' But' (ID: 3072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013171528466045856
    2. 'if' → logprob: -4.388171672821045
    3. ' if' → logprob: -7.763171672821045
    4. '   ' → logprob: -8.513171195983887
    5. '```' → logprob: -10.513171195983887
    6. 'If' → logprob: -12.513171195983887
    7. '           ' → logprob: -13.388171195983887
    8. '
' → logprob: -14.013171195983887
    9. 'import' → logprob: -14.138171195983887
    10. ' ' → logprob: -14.638171195983887

Token 2039: ' if' (ID: 538)
  Prédit: ' rhs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rhs' → logprob: -0.8929013609886169
    2. 'rhs' → logprob: -1.0179014205932617
    3. 'if' → logprob: -2.0179014205932617
    4. ' if' → logprob: -2.5179014205932617
    5. '(rhs' → logprob: -5.142901420593262
    6. ' lhs' → logprob: -5.267901420593262
    7. 'lhs' → logprob: -5.642901420593262
    8. ' not' → logprob: -8.517901420593262
    9. '(lhs' → logprob: -8.892901420593262
    10. '       ' → logprob: -9.142901420593262

Token 2040: ' rhs' (ID: 29564)
  Prédit: 'rhs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rhs' → logprob: -0.016506310552358627
    2. ' rhs' → logprob: -4.141506195068359
    3. 'lhs' → logprob: -7.891506195068359
    4. '(rhs' → logprob: -9.89150619506836
    5. 'r' → logprob: -10.14150619506836
    6. ' lhs' → logprob: -12.14150619506836
    7. '   ' → logprob: -14.39150619506836
    8. '_rhs' → logprob: -14.51650619506836
    9. '```' → logprob: -15.39150619506836
    10. '
' → logprob: -15.51650619506836

Token 2041: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.11286043375730515
    2. ' >' → logprob: -2.2378604412078857
    3. '>
' → logprob: -11.737860679626465
    4. ')' → logprob: -12.487860679626465
    5. '<' → logprob: -12.737860679626465
    6. ' <' → logprob: -12.737860679626465
    7. ' <=' → logprob: -12.862860679626465
    8. '<=' → logprob: -12.862860679626465
    9. '=' → logprob: -13.362860679626465
    10. '>=' → logprob: -13.362860679626465

Token 2042: ' lhs' (ID: 51302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010711579816415906
    2. 'lhs' → logprob: -7.376070976257324
    3. ' ' → logprob: -7.751070976257324
    4. ' lhs' → logprob: -11.626070976257324
    5. 'rhs' → logprob: -13.501070976257324
    6. '   ' → logprob: -13.751070976257324
    7. 'l' → logprob: -14.501070976257324
    8. '(lhs' → logprob: -14.876070976257324
    9. '
' → logprob: -15.001070976257324
    10. 'lh' → logprob: -15.313570976257324

Token 2043: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1816568672657013
    2. ' and' → logprob: -2.681656837463379
    3. '       ' → logprob: -3.181656837463379
    4. ':
' → logprob: -3.181656837463379
    5. ',' → logprob: -5.306656837463379
    6. '           ' → logprob: -5.431656837463379
    7. '>' → logprob: -6.931656837463379
    8. ' >' → logprob: -6.931656837463379
    9. ':return' → logprob: -7.556656837463379
    10. 'and' → logprob: -7.681656837463379

Token 2044: ' no' (ID: 860)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2564263939857483
    2. ' return' → logprob: -1.5064263343811035
    3. '           ' → logprob: -5.8814263343811035
    4. 'False' → logprob: -6.5064263343811035
    5. ' False' → logprob: -8.631426811218262
    6. '       ' → logprob: -12.131426811218262
    7. 'True' → logprob: -12.381426811218262
    8. '```' → logprob: -12.631426811218262
    9. '{return' → logprob: -12.631426811218262
    10. '               ' → logprob: -13.006426811218262

Token 2045: ' feasibility' (ID: 97666)
  Prédit: ' feasible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' feasible' → logprob: -0.8327253460884094
    2. ' feasibility' → logprob: -1.7077252864837646
    3. '
' → logprob: -2.2077252864837646
    4. '   ' → logprob: -2.9577252864837646
    5. '       ' → logprob: -3.3327252864837646
    6. '<|end|>' → logprob: -3.5827252864837646
    7. '    ' → logprob: -3.7077252864837646
    8. ' #' → logprob: -4.082725524902344
    9. ' ' → logprob: -4.207725524902344
    10. ' collision' → logprob: -4.207725524902344

Token 2046: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11793337017297745
    2. '           ' → logprob: -2.8679332733154297
    3. ':' → logprob: -3.2429332733154297
    4. ':
' → logprob: -4.61793327331543
    5. '   ' → logprob: -6.11793327331543
    6. ',' → logprob: -6.74293327331543
    7. '               ' → logprob: -7.61793327331543
    8. ')' → logprob: -7.86793327331543
    9. ' if' → logprob: -8.74293327331543
    10. '):' → logprob: -8.99293327331543

Token 2047: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002997316187247634
    2. '   ' → logprob: -5.877997398376465
    3. '
' → logprob: -10.252997398376465
    4. '           ' → logprob: -10.377997398376465
    5. ')' → logprob: -10.877997398376465
    6. '	' → logprob: -11.002997398376465
    7. ' if' → logprob: -11.002997398376465
    8. '<|end|>' → logprob: -11.377997398376465
    9. '```' → logprob: -11.377997398376465
    10. '        
' → logprob: -11.502997398376465

Token 2048: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010190793313086033
    2. 'if' (adapté à ' if') → logprob: -4.635190963745117
    3. ' if' → logprob: -8.135190963745117
    4. '   ' → logprob: -9.010190963745117
    5. '           ' → logprob: -11.510190963745117
    6. '
' → logprob: -12.260190963745117
    7. '```' → logprob: -12.885190963745117
    8. '	' → logprob: -13.635190963745117
    9. '	if' → logprob: -15.385190963745117
    10. '               ' → logprob: -15.635190963745117

Token 2049: ' rhs' (ID: 29564)
  Prédit: ' rhs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rhs' → logprob: -0.038331322371959686
    2. 'rhs' → logprob: -3.2883312702178955
    3. '(rhs' → logprob: -8.288331031799316
    4. ' r' → logprob: -10.913331031799316
    5. ' lhs' → logprob: -11.413331031799316
    6. 'r' → logprob: -12.163331031799316
    7. '_rhs' → logprob: -13.538331031799316
    8. '   ' → logprob: -14.163331031799316
    9. 'lhs' → logprob: -14.288331031799316
    10. ' vert' → logprob: -15.288331031799316

Token 2050: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.22545620799064636
    2. '>' → logprob: -1.6004562377929688
    3. '   ' → logprob: -11.350456237792969
    4. '>
' → logprob: -11.725456237792969
    5. ' >
' → logprob: -12.100456237792969
    6. '       ' → logprob: -12.225456237792969
    7. ' ' → logprob: -12.600456237792969
    8. ')' → logprob: -12.975456237792969
    9. ')>' → logprob: -13.350456237792969
    10. ' <' → logprob: -14.350456237792969

Token 2051: ' lhs' (ID: 51302)
  Prédit: 'lhs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lhs' → logprob: -0.07890212535858154
    2. ' lhs' → logprob: -2.578902244567871
    3. '(lhs' → logprob: -12.203902244567871
    4. 'l' → logprob: -12.953902244567871
    5. '   ' → logprob: -12.953902244567871
    6. '0' → logprob: -13.578902244567871
    7. ' ' → logprob: -15.078902244567871
    8. 'rhs' → logprob: -15.453902244567871
    9. 'left' → logprob: -15.703902244567871
    10. 'lst' → logprob: -16.328901290893555

Token 2052: ' +' (ID: 659)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022117510437965393
    2. ':
' → logprob: -4.647117614746094
    3. '           ' → logprob: -5.147117614746094
    4. '       ' → logprob: -5.272117614746094
    5. ':return' → logprob: -7.147117614746094
    6. ' and' → logprob: -8.522117614746094
    7. '<|end|>' → logprob: -9.272117614746094
    8. '):' → logprob: -9.772117614746094
    9. '               ' → logprob: -10.272117614746094
    10. ',' → logprob: -10.772117614746094

Token 2053: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2471589798224159e-05
    2. ' ' → logprob: -11.375012397766113
    3. '   ' → logprob: -14.500012397766113
    4. '0' → logprob: -16.00001335144043
    5. '+' → logprob: -16.87501335144043
    6. '-' → logprob: -16.87501335144043
    7. '(' → logprob: -17.37501335144043
    8. '
' → logprob: -18.00001335144043
    9. '  ' → logprob: -18.50001335144043
    10. '=' → logprob: -18.50001335144043

Token 2054: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8670179997570813e-05
    2. ' ' → logprob: -11.125019073486328
    3. '   ' → logprob: -12.750019073486328
    4. '0' → logprob: -14.750019073486328
    5. '-' → logprob: -15.125019073486328
    6. '(' → logprob: -15.875019073486328
    7. '
' → logprob: -16.375019073486328
    8. '+' → logprob: -17.250019073486328
    9. '  ' → logprob: -17.750019073486328
    10. '       ' → logprob: -18.250019073486328

Token 2055: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0052362410351634026
    2. '-' → logprob: -5.2552361488342285
    3. '-e' → logprob: -14.005236625671387
    4. '1' → logprob: -14.880236625671387
    5. '```' → logprob: -14.880236625671387
    6. '**' → logprob: -15.380236625671387
    7. '
' → logprob: -15.380236625671387
    8. 'E' → logprob: -15.505236625671387
    9. '^-' → logprob: -15.630236625671387
    10. '   ' → logprob: -16.38023567199707

Token 2056: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.128163257315464e-07
    2. ' -' → logprob: -16.625
    3. '```' → logprob: -16.75
    4. '   ' → logprob: -16.875
    5. 'e' → logprob: -17.375
    6. '       ' → logprob: -18.0
    7. '0' → logprob: -18.375
    8. '``' → logprob: -18.375
    9. '−' → logprob: -18.625
    10. '-
' → logprob: -18.625

Token 2057: '14' (ID: 1265)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.23172728717327118
    2. '12' → logprob: -2.231727361679077
    3. '8' → logprob: -2.731727361679077
    4. '10' → logprob: -3.606727361679077
    5. '7' → logprob: -5.356727123260498
    6. '14' → logprob: -6.481727123260498
    7. '6' → logprob: -7.606727123260498
    8. '-' → logprob: -8.231727600097656
    9. '15' → logprob: -9.356727600097656
    10. '13' → logprob: -9.856727600097656

Token 2058: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6504238843917847
    2. '           ' → logprob: -0.9004238843917847
    3. ':
' → logprob: -2.900424003601074
    4. '       ' → logprob: -4.275424003601074
    5. ':return' → logprob: -6.025424003601074
    6. '               ' → logprob: -9.150424003601074
    7. ' or' → logprob: -9.400424003601074
    8. '          ' → logprob: -9.525424003601074
    9. '<|end|>' → logprob: -10.650424003601074
    10. ' return' → logprob: -10.650424003601074

Token 2059: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.351697033504024e-05
    2. 'return' → logprob: -9.500083923339844
    3. '       ' → logprob: -12.125083923339844
    4. '               ' → logprob: -13.375083923339844
    5. ' return' → logprob: -13.625083923339844
    6. '	       ' → logprob: -15.625083923339844
    7. '```' → logprob: -16.375083923339844
    8. '		' → logprob: -16.500083923339844
    9. '{return' → logprob: -17.500083923339844
    10. '          ' → logprob: -18.125083923339844

Token 2060: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31536275148391724
    2. 'return' (adapté à ' return') → logprob: -1.3153626918792725
    3. '       ' → logprob: -6.315362930297852
    4. ' return' → logprob: -8.440362930297852
    5. '               ' → logprob: -9.565362930297852
    6. '	return' → logprob: -13.315362930297852
    7. '	       ' → logprob: -14.190362930297852
    8. '{return' → logprob: -14.315362930297852
    9. '		' → logprob: -14.940362930297852
    10. '   ' → logprob: -15.065362930297852

Token 2061: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0009114635176956654
    2. ' False' → logprob: -7.000911235809326
    3. '(False' → logprob: -18.625911712646484
    4. '   ' → logprob: -19.875911712646484
    5. 'True' → logprob: -20.875911712646484
    6. '=False' → logprob: -22.125911712646484
    7. '```' → logprob: -23.000911712646484
    8. '       ' → logprob: -23.125911712646484
    9. 'None' → logprob: -23.125911712646484
    10. '0' → logprob: -23.125911712646484

Token 2062: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2063: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011714319698512554
    2. '        
' → logprob: -5.261714458465576
    3. '   ' → logprob: -6.011714458465576
    4. '    
' → logprob: -6.636714458465576
    5. '<|end|>' → logprob: -7.011714458465576
    6. '	' → logprob: -8.136713981628418
    7. '\
' → logprob: -8.261713981628418
    8. ')' → logprob: -8.511713981628418
    9. '           ' → logprob: -9.011713981628418
    10. '  
' → logprob: -9.136713981628418

Token 2064: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011116202920675278
    2. '
' → logprob: -5.386116027832031
    3. 'return' (adapté à ' return') → logprob: -5.886116027832031
    4. '    
' → logprob: -6.636116027832031
    5. '	return' → logprob: -6.761116027832031
    6. ' return' → logprob: -6.886116027832031
    7. '```' → logprob: -10.136116027832031
    8. '  
' → logprob: -10.511116027832031
    9. ' 
' → logprob: -10.511116027832031
    10. '       ' → logprob: -11.011116027832031

Token 2065: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.12692810595035553
    2. ' True' → logprob: -2.1269280910491943
    3. '(True' → logprob: -18.126928329467773
    4. '   ' → logprob: -19.626928329467773
    5. '=True' → logprob: -20.251928329467773
    6. 'False' → logprob: -23.376928329467773
    7. '    ' → logprob: -24.876928329467773
    8. '
' → logprob: -24.876928329467773
    9. '_true' → logprob: -24.876928329467773
    10. ' ' → logprob: -24.876928329467773

Token 2066: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00035965684219263494
    2. ' def' → logprob: -9.125359535217285
    3. '(
' → logprob: -9.375359535217285
    4. '(' → logprob: -10.000359535217285
    5. ')' → logprob: -10.375359535217285
    6. ':' → logprob: -10.500359535217285
    7. ':def' → logprob: -11.000359535217285
    8. '
' → logprob: -11.250359535217285
    9. 'd' → logprob: -11.750359535217285
    10. '```' → logprob: -12.250359535217285

Token 2067: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0280383548888494e-06
    2. ' def' → logprob: -14.500000953674316
    3. 'd' → logprob: -15.625000953674316
    4. ')' → logprob: -15.750000953674316
    5. ':def' → logprob: -16.375001907348633
    6. '
' → logprob: -17.125001907348633
    7. 'de' → logprob: -19.125001907348633
    8. '(
' → logprob: -19.250001907348633
    9. '```' → logprob: -19.250001907348633
    10. ')
' → logprob: -20.250001907348633

Token 2068: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.07900699973106384
    2. ' dist' → logprob: -2.5790069103240967
    3. 'def' → logprob: -9.079007148742676
    4. ' def' → logprob: -13.329007148742676
    5. 'distance' → logprob: -15.079007148742676
    6. '	dist' → logprob: -15.079007148742676
    7. '_dist' → logprob: -15.329007148742676
    8. 'point' → logprob: -15.954007148742676
    9. '```' → logprob: -16.32900619506836
    10. 'd' → logprob: -16.45400619506836

Token 2069: '_point' (ID: 15466)
  Prédit: '_segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -5.319370302458992e-06
    2. '_rectangle' → logprob: -12.375005722045898
    3. '_segments' → logprob: -14.125005722045898
    4. 'segment' → logprob: -15.750005722045898
    5. '_seg' → logprob: -17.2500057220459
    6. '_point' → logprob: -17.5000057220459
    7. '_between' → logprob: -17.5000057220459
    8. '_sequence' → logprob: -17.6250057220459
    9. '_rect' → logprob: -17.7500057220459
    10. '_block' → logprob: -18.1250057220459

Token 2070: '_rectangle' (ID: 166619)
  Prédit: '_segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.0029659343417733908
    2. '_rectangle' → logprob: -6.502965927124023
    3. '_' → logprob: -6.752965927124023
    4. '_to' → logprob: -8.627965927124023
    5. '_segments' → logprob: -9.627965927124023
    6. '_point' → logprob: -10.627965927124023
    7. '_triangle' → logprob: -12.627965927124023
    8. '_seg' → logprob: -12.752965927124023
    9. '_tuple' → logprob: -13.002965927124023
    10. '_polygon' → logprob: -13.127965927124023

Token 2071: '(px' (ID: 195026)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.021327786147594452
    2. '(px' → logprob: -4.146327972412109
    3. '(point' → logprob: -5.896327972412109
    4. '(x' → logprob: -6.896327972412109
    5. 'def' → logprob: -7.271327972412109
    6. '((' → logprob: -7.896327972412109
    7. '2' → logprob: -9.39632797241211
    8. '(p' → logprob: -9.64632797241211
    9. '(' → logprob: -9.77132797241211
    10. '```' → logprob: -10.14632797241211

Token 2072: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010698467958718538
    2. ' ,' → logprob: -7.126070022583008
    3. '   ' → logprob: -9.626070022583008
    4. '_,' → logprob: -9.751070022583008
    5. ',x' → logprob: -10.501070022583008
    6. 'x' → logprob: -10.751070022583008
    7. ',p' → logprob: -10.876070022583008
    8. ',
' → logprob: -11.251070022583008
    9. ',(' → logprob: -11.501070022583008
    10. '1' → logprob: -12.001070022583008

Token 2073: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.0021726242266595364
    2. ' py' → logprob: -6.752172470092773
    3. 'ry' → logprob: -7.002172470092773
    4. '_py' → logprob: -10.502172470092773
    5. '(py' → logprob: -10.752172470092773
    6. 'qy' → logprob: -11.002172470092773
    7. 'px' → logprob: -12.002172470092773
    8. '
' → logprob: -12.502172470092773
    9. '```' → logprob: -12.627172470092773
    10. ' ry' → logprob: -12.752172470092773

Token 2074: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.374227425316349e-05
    2. '   ' → logprob: -10.750073432922363
    3. ',min' → logprob: -10.750073432922363
    4. ' ,' → logprob: -10.875073432922363
    5. ',
' → logprob: -11.500073432922363
    6. '(min' → logprob: -15.125073432922363
    7. 'min' → logprob: -15.375073432922363
    8. ',x' → logprob: -15.500073432922363
    9. '):' → logprob: -16.00007438659668
    10. '_,' → logprob: -16.00007438659668

Token 2075: ' rx' (ID: 37623)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.022687900811433792
    2. 'min' → logprob: -4.397687911987305
    3. 'rect' → logprob: -4.647687911987305
    4. ' rx' → logprob: -7.772687911987305
    5. 'xmin' → logprob: -10.397687911987305
    6. '(rx' → logprob: -10.772687911987305
    7. '```' → logprob: -11.022687911987305
    8. 'r' → logprob: -11.272687911987305
    9. 'mx' → logprob: -11.772687911987305
    10. ' min' → logprob: -12.147687911987305

Token 2076: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. ',' → logprob: -13.00000286102295
    3. 'min' → logprob: -14.25000286102295
    4. '_min' → logprob: -16.250003814697266
    5. '
' → logprob: -16.375003814697266
    6. '   ' → logprob: -17.500003814697266
    7. ' ' → logprob: -17.500003814697266
    8. '```' → logprob: -17.625003814697266
    9. 'def' → logprob: -18.125003814697266
    10. ')' → logprob: -19.375003814697266

Token 2077: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.7689099018462e-05
    2. ' ,' → logprob: -9.62508773803711
    3. ',
' → logprob: -11.12508773803711
    4. ',r' → logprob: -13.50008773803711
    5. '_,' → logprob: -13.50008773803711
    6. '1' → logprob: -13.75008773803711
    7. '   ' → logprob: -13.75008773803711
    8. '```' → logprob: -14.62508773803711
    9. '<|end|>' → logprob: -15.25008773803711
    10. ',x' → logprob: -15.75008773803711

Token 2078: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.00018065694894175977
    2. ' ry' → logprob: -8.6251802444458
    3. 'ray' → logprob: -15.3751802444458
    4. 'Ry' → logprob: -15.3751802444458
    5. 'ryl' → logprob: -15.6251802444458
    6. 'rx' → logprob: -16.125181198120117
    7. 'ryn' → logprob: -16.375181198120117
    8. 'riy' → logprob: -16.625181198120117
    9. 'ryw' → logprob: -16.875181198120117
    10. 'rym' → logprob: -17.125181198120117

Token 2079: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020938136731274426
    2. ',' → logprob: -8.50020980834961
    3. '<|end|>' → logprob: -13.12520980834961
    4. '```' → logprob: -13.62520980834961
    5. '<|end|>' → logprob: -14.00020980834961
    6. '   ' → logprob: -14.37520980834961
    7. '
' → logprob: -14.62520980834961
    8. ' ' → logprob: -15.25020980834961
    9. 'def' → logprob: -15.75020980834961
    10. ',
' → logprob: -16.12520980834961

Token 2080: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.583550642360933e-05
    2. ' ,' → logprob: -10.625036239624023
    3. ',r' → logprob: -11.625036239624023
    4. ',
' → logprob: -13.500036239624023
    5. '   ' → logprob: -14.250036239624023
    6. '
' → logprob: -16.500036239624023
    7. '):
' → logprob: -16.625036239624023
    8. 'def' → logprob: -16.875036239624023
    9. '_,' → logprob: -17.000036239624023
    10. '‌,' → logprob: -17.250036239624023

Token 2081: ' rx' (ID: 37623)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.023268306627869606
    2. ' rx' → logprob: -3.773268222808838
    3. '(rx' → logprob: -11.023268699645996
    4. '_rx' → logprob: -12.773268699645996
    5. '.rx' → logprob: -13.273268699645996
    6. 'px' → logprob: -14.648268699645996
    7. 'tx' → logprob: -14.773268699645996
    8. 'ry' → logprob: -14.773268699645996
    9. '
' → logprob: -15.148268699645996
    10. 'Rx' → logprob: -16.27326774597168

Token 2082: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006272526225075126
    2. '1' → logprob: -7.375627040863037
    3. '```' → logprob: -14.250627517700195
    4. ',' → logprob: -17.625627517700195
    5. '   ' → logprob: -18.625627517700195
    6. '<|end|>' → logprob: -18.750627517700195
    7. '0' → logprob: -18.875627517700195
    8. '
' → logprob: -19.000627517700195
    9. ' ' → logprob: -19.125627517700195
    10. 'r' → logprob: -19.250627517700195

Token 2083: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0206720617134124e-05
    2. ' ,' → logprob: -11.75001049041748
    3. ',
' → logprob: -13.75001049041748
    4. ',p' → logprob: -14.87501049041748
    5. ',r' → logprob: -15.50001049041748
    6. '<|end|>' → logprob: -15.62501049041748
    7. ',y' → logprob: -16.375009536743164
    8. '_,' → logprob: -16.375009536743164
    9. '```' → logprob: -16.750009536743164
    10. '   ' → logprob: -16.750009536743164

Token 2084: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.03804286941885948
    2. ' ry' → logprob: -3.2880427837371826
    3. 'py' → logprob: -15.038043022155762
    4. 'Ry' → logprob: -15.288043022155762
    5. 'rx' → logprob: -15.913043022155762
    6. 'rys' → logprob: -16.288042068481445
    7. ' rye' → logprob: -16.288042068481445
    8. 'ryw' → logprob: -16.538042068481445
    9. 'RY' → logprob: -16.788042068481445
    10. 'ryl' → logprob: -16.788042068481445

Token 2085: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.125
    3. '₂' → logprob: -18.25
    4. '   ' → logprob: -18.25
    5. '۲' → logprob: -18.625
    6. ' ' → logprob: -19.25
    7. '２' → logprob: -19.5
    8. '
' → logprob: -19.625
    9. '``' → logprob: -19.875
    10. '1' → logprob: -20.125

Token 2086: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04164076969027519
    2. '):' → logprob: -3.2916407585144043
    3. '   ' → logprob: -5.791640758514404
    4. '):
' → logprob: -7.541640758514404
    5. 'def' → logprob: -12.416641235351562
    6. ':' → logprob: -13.041641235351562
    7. '):

' → logprob: -13.916641235351562
    8. ':
' → logprob: -14.416641235351562
    9. '():
' → logprob: -14.791641235351562
    10. '```' → logprob: -14.791641235351562

Token 2087: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003676440566778183
    2. '```' → logprob: -5.628676414489746
    3. '``' → logprob: -10.128676414489746
    4. '
' → logprob: -11.628676414489746
    5. '`' → logprob: -11.878676414489746
    6. 'x' → logprob: -12.128676414489746
    7. 'def' → logprob: -12.503676414489746
    8. 'dx' → logprob: -12.878676414489746
    9. '   ' → logprob: -13.378676414489746
    10. '       ' → logprob: -13.878676414489746

Token 2088: ' #' (ID: 1069)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.1350824236869812
    2. '   ' → logprob: -2.510082483291626
    3. '```' → logprob: -3.635082483291626
    4. ' dx' → logprob: -5.010082244873047
    5. 'dist' → logprob: -5.885082244873047
    6. 'd' → logprob: -6.260082244873047
    7. 'if' → logprob: -6.385082244873047
    8. 'px' → logprob: -6.510082244873047
    9. 'dp' → logprob: -6.885082244873047
    10. 'p' → logprob: -7.010082244873047

Token 2089: ' distance' (ID: 9324)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.23716989159584045
    2. 'def' → logprob: -1.862169861793518
    3. '   ' → logprob: -4.1121697425842285
    4. 'if' → logprob: -4.2371697425842285
    5. 'px' → logprob: -4.6121697425842285
    6. 'cx' → logprob: -5.1121697425842285
    7. 'x' → logprob: -5.6121697425842285
    8. '#' → logprob: -6.4871697425842285
    9. '```' → logprob: -6.9871697425842285
    10. 'qx' → logprob: -6.9871697425842285

Token 2090: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5529744625091553
    2. 'def' → logprob: -1.3029744625091553
    3. '=' → logprob: -2.4279744625091553
    4. '(px' → logprob: -3.1779744625091553
    5. 'px' → logprob: -4.552974700927734
    6. '   ' → logprob: -5.552974700927734
    7. ' =' → logprob: -6.177974700927734
    8. 'dx' → logprob: -6.177974700927734
    9. '```' → logprob: -6.927974700927734
    10. '_px' → logprob: -7.177974700927734

Token 2091: ' point' (ID: 2438)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.018177097663283348
    2. ' px' → logprob: -4.018177032470703
    3. 'py' → logprob: -11.393177032470703
    4. '(px' → logprob: -11.768177032470703
    5. 'point' → logprob: -12.393177032470703
    6. 'max' → logprob: -13.143177032470703
    7. 'min' → logprob: -14.268177032470703
    8. '0' → logprob: -14.893177032470703
    9. 'float' → logprob: -15.143177032470703
    10. 'pt' → logprob: -15.768177032470703

Token 2092: ' to' (ID: 316)
  Prédit: '(px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(px' → logprob: -0.03645848482847214
    2. 'px' → logprob: -3.4114584922790527
    3. 'to' → logprob: -6.911458492279053
    4. ' px' → logprob: -7.286458492279053
    5. '_to' → logprob: -7.911458492279053
    6. '   ' → logprob: -8.536458015441895
    7. '_px' → logprob: -8.911458015441895
    8. 'def' → logprob: -9.286458015441895
    9. '
' → logprob: -9.411458015441895
    10. ' to' → logprob: -9.411458015441895

Token 2093: ' rectangle' (ID: 45808)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.796126127243042
    2. 'rectangle' → logprob: -1.671126127243042
    3. '(px' → logprob: -1.796126127243042
    4. 'x' → logprob: -1.921126127243042
    5. 'closest' → logprob: -4.046126365661621
    6. 'max' → logprob: -4.796126365661621
    7. ' px' → logprob: -5.046126365661621
    8. 'rect' → logprob: -5.546126365661621
    9. 'point' → logprob: -5.796126365661621
    10. '(x' → logprob: -6.046126365661621

Token 2094: '
' (ID: 198)
  Prédit: '(px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(px' → logprob: -0.75752854347229
    2. '   ' → logprob: -1.25752854347229
    3. '```' → logprob: -2.50752854347229
    4. '(
' → logprob: -2.63252854347229
    5. 'def' → logprob: -3.25752854347229
    6. 'px' → logprob: -4.007528305053711
    7. '(' → logprob: -4.757528305053711
    8. ':' → logprob: -4.882528305053711
    9. '
' → logprob: -5.007528305053711
    10. '(p' → logprob: -5.757528305053711

Token 2095: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017098156735301018
    2. '```' → logprob: -4.5170979499816895
    3. 'def' → logprob: -5.6420979499816895
    4. '``' → logprob: -7.0170979499816895
    5. 'dx' → logprob: -7.3920979499816895
    6. 'px' → logprob: -7.8920979499816895
    7. '(px' → logprob: -8.142098426818848
    8. '
' → logprob: -9.642098426818848
    9. '(' → logprob: -9.767098426818848
    10. ' px' → logprob: -10.767098426818848

Token 2096: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' (adapté à ' dx') → logprob: -0.03349987789988518
    2. 'if' → logprob: -4.658499717712402
    3. '   ' → logprob: -4.908499717712402
    4. '```' → logprob: -5.158499717712402
    5. 'cx' → logprob: -5.158499717712402
    6. ' dx' → logprob: -6.283499717712402
    7. 'dist' → logprob: -6.658499717712402
    8. 'px' → logprob: -7.033499717712402
    9. ' if' → logprob: -9.158499717712402
    10. 'd' → logprob: -9.158499717712402

Token 2097: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029764965176582336
    2. ' =' → logprob: -3.5297648906707764
    3. '=
' → logprob: -12.029765129089355
    4. '   ' → logprob: -12.404765129089355
    5. '=max' → logprob: -12.529765129089355
    6. 'max' → logprob: -14.654765129089355
    7. 'if' → logprob: -16.15476417541504
    8. 'def' → logprob: -16.27976417541504
    9. '```' → logprob: -17.40476417541504
    10. '=None' → logprob: -17.52976417541504

Token 2098: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12917381525039673
    2. 'max' → logprob: -2.129173755645752
    3. 'min' → logprob: -6.129173755645752
    4. ' max' → logprob: -10.00417423248291
    5. 'px' → logprob: -11.50417423248291
    6. '
' → logprob: -12.37917423248291
    7. ' ' → logprob: -13.00417423248291
    8. ' min' → logprob: -13.37917423248291
    9. '   ' → logprob: -14.25417423248291
    10. '```' → logprob: -15.25417423248291

Token 2099: '0' (ID: 15)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.21600806713104248
    2. 'min' → logprob: -2.216008186340332
    3. '0' → logprob: -2.466008186340332
    4. 'px' → logprob: -8.341008186340332
    5. ' max' → logprob: -9.966008186340332
    6. '(max' → logprob: -11.966008186340332
    7. ' min' → logprob: -12.341008186340332
    8. '
' → logprob: -13.091008186340332
    9. '(min' → logprob: -13.341008186340332
    10. 'rx' → logprob: -14.216008186340332

Token 2100: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.41946813464164734
    2. '
' → logprob: -1.1694681644439697
    3. ' if' → logprob: -3.7944681644439697
    4. '   ' → logprob: -4.669467926025391
    5. '```' → logprob: -9.66946792602539
    6. '    
' → logprob: -10.54446792602539
    7. '0' → logprob: -10.54446792602539
    8. 'max' → logprob: -11.04446792602539
    9. 'If' → logprob: -11.04446792602539
    10. '	if' → logprob: -11.66946792602539

Token 2101: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.40214186906814575
    2. ' if' → logprob: -1.152141809463501
    3. '
' → logprob: -4.77714204788208
    4. '   ' → logprob: -5.40214204788208
    5. 'px' → logprob: -6.77714204788208
    6. 'max' → logprob: -7.52714204788208
    7. '0' → logprob: -8.027141571044922
    8. '```' → logprob: -9.402141571044922
    9. ' max' → logprob: -10.027141571044922
    10. '	if' → logprob: -10.277141571044922

Token 2102: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07914501428604126
    2. ' if' → logprob: -2.5791449546813965
    3. '   ' → logprob: -8.454145431518555
    4. 'px' → logprob: -10.829145431518555
    5. '```' → logprob: -11.204145431518555
    6. 'dx' → logprob: -12.579145431518555
    7. 'py' → logprob: -12.704145431518555
    8. ' px' → logprob: -13.829145431518555
    9. 'dy' → logprob: -14.829145431518555
    10. '
' → logprob: -15.079145431518555

Token 2103: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.005243479739874601
    2. ' px' → logprob: -5.255243301391602
    3. '(px' → logprob: -11.630243301391602
    4. '   ' → logprob: -14.755243301391602
    5. '_px' → logprob: -15.505243301391602
    6. '```' → logprob: -17.1302433013916
    7. '  ' → logprob: -17.1302433013916
    8. 'Px' → logprob: -17.2552433013916
    9. ':px' → logprob: -17.6302433013916
    10. ' ' → logprob: -17.8802433013916

Token 2104: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.25196921825408936
    2. ' <' → logprob: -1.5019692182540894
    3. '<x' → logprob: -11.251969337463379
    4. '>' → logprob: -11.626969337463379
    5. '<p' → logprob: -12.376969337463379
    6. ' >' → logprob: -12.751969337463379
    7. '<float' → logprob: -13.501969337463379
    8. '<int' → logprob: -13.626969337463379
    9. '<class' → logprob: -13.751969337463379
    10. '<cv' → logprob: -13.876969337463379

Token 2105: ' rx' (ID: 37623)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.0024827925954014063
    2. ' rx' → logprob: -6.002482891082764
    3. '(rx' → logprob: -12.127482414245605
    4. '_rx' → logprob: -14.002482414245605
    5. '.rx' → logprob: -14.502482414245605
    6. 'Rx' → logprob: -16.127483367919922
    7. 'tx' → logprob: -16.502483367919922
    8. 'x' → logprob: -17.127483367919922
    9. '
' → logprob: -18.127483367919922
    10. 'rpc' → logprob: -18.502483367919922

Token 2106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012570773833431304
    2. '2' → logprob: -9.000125885009766
    3. '   ' → logprob: -13.250125885009766
    4. '```' → logprob: -15.375125885009766
    5. ' ' → logprob: -16.750125885009766
    6. 'x' → logprob: -16.875125885009766
    7. 'def' → logprob: -17.125125885009766
    8. 'min' → logprob: -17.625125885009766
    9. '=' → logprob: -17.625125885009766
    10. '[' → logprob: -18.125125885009766

Token 2107: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.05111817270517349
    2. ':' → logprob: -3.3011181354522705
    3. '   ' → logprob: -4.55111837387085
    4. '       ' → logprob: -6.30111837387085
    5. 'dx' → logprob: -7.67611837387085
    6. '-' → logprob: -9.551117897033691
    7. '```' → logprob: -10.426117897033691
    8. '(dx' → logprob: -11.551117897033691
    9. '_dx' → logprob: -12.301117897033691
    10. ':

' → logprob: -12.551117897033691

Token 2108: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7258279323577881
    2. '       ' → logprob: -0.7258279323577881
    3. 'rx' → logprob: -4.225828170776367
    4. ' rx' → logprob: -4.475828170776367
    5. '```' → logprob: -6.100828170776367
    6. 'dx' → logprob: -6.475828170776367
    7. '(rx' → logprob: -7.475828170776367
    8. '
' → logprob: -7.725828170776367
    9. 'px' → logprob: -7.975828170776367
    10. '``' → logprob: -8.350828170776367

Token 2109: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' (adapté à ' dx') → logprob: -0.0012017777189612389
    2. ' dx' → logprob: -6.751201629638672
    3. 'px' → logprob: -11.251201629638672
    4. '   ' → logprob: -11.501201629638672
    5. '```' → logprob: -12.001201629638672
    6. '_dx' → logprob: -13.626201629638672
    7. '(dx' → logprob: -14.751201629638672
    8. '       ' → logprob: -15.751201629638672
    9. 'rx' → logprob: -15.876201629638672
    10. '.dx' → logprob: -16.751201629638672

Token 2110: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02324850670993328
    2. ' =' → logprob: -3.7732484340667725
    3. '=
' → logprob: -13.148248672485352
    4. '   ' → logprob: -13.898248672485352
    5. '+=' → logprob: -16.64824867248535
    6. '```' → logprob: -17.27324867248535
    7. ' ' → logprob: -17.39824867248535
    8. '       ' → logprob: -17.77324867248535
    9. ' =
' → logprob: -17.77324867248535
    10. '=r' → logprob: -18.77324867248535

Token 2111: ' rx' (ID: 37623)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.0006724014529027045
    2. ' rx' → logprob: -8.000672340393066
    3. '(rx' → logprob: -8.000672340393066
    4. '   ' → logprob: -13.750672340393066
    5. '_rx' → logprob: -15.500672340393066
    6. 'px' → logprob: -15.750672340393066
    7. '.rx' → logprob: -16.875673294067383
    8. 'rv' → logprob: -17.125673294067383
    9. '(' → logprob: -17.125673294067383
    10. 'ry' → logprob: -17.375673294067383

Token 2112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. '2' → logprob: -13.750000953674316
    3. '
' → logprob: -16.750001907348633
    4. '```' → logprob: -17.375001907348633
    5. ' -' → logprob: -17.937501907348633
    6. '[' → logprob: -18.375001907348633
    7. '``' → logprob: -18.375001907348633
    8. '   ' → logprob: -18.625001907348633
    9. '4' → logprob: -18.687501907348633
    10. 'x' → logprob: -19.000001907348633

Token 2113: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0017038638470694423
    2. '-' → logprob: -6.37670373916626
    3. '-p' → logprob: -14.626704216003418
    4. '<|end|>' → logprob: -14.751704216003418
    5. '_px' → logprob: -15.126704216003418
    6. ' ' → logprob: -15.251704216003418
    7. 'px' → logprob: -16.2517032623291
    8. '(px' → logprob: -16.3767032623291
    9. ' -
' → logprob: -16.7517032623291
    10. ' ' → logprob: -17.0017032623291

Token 2114: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.0002615742268972099
    2. ' px' → logprob: -8.250261306762695
    3. 'py' → logprob: -16.000261306762695
    4. '_px' → logprob: -16.125261306762695
    5. '(px' → logprob: -16.250261306762695
    6. ':px' → logprob: -20.375261306762695
    7. 'p' → logprob: -20.625261306762695
    8. 'pz' → logprob: -21.375261306762695
    9. '   ' → logprob: -21.500261306762695
    10. '}px' → logprob: -21.625261306762695

Token 2115: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008623912930488586
    2. 'elif' → logprob: -4.758624076843262
    3. ' elif' → logprob: -12.133624076843262
    4. '
' → logprob: -13.008624076843262
    5. '```' → logprob: -13.758624076843262
    6. 'else' → logprob: -16.133623123168945
    7. '	elif' → logprob: -16.133623123168945
    8. 'if' → logprob: -16.258623123168945
    9. '       ' → logprob: -16.633623123168945
    10. 'el' → logprob: -17.133623123168945

Token 2116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31327730417251587
    2. 'elif' → logprob: -1.313277244567871
    3. ' elif' → logprob: -11.188277244567871
    4. '```' → logprob: -13.813277244567871
    5. '	elif' → logprob: -15.188277244567871
    6. 'el' → logprob: -15.938277244567871
    7. ' ' → logprob: -16.313278198242188
    8. 'else' → logprob: -16.688278198242188
    9. '  ' → logprob: -16.938278198242188
    10. '
' → logprob: -16.938278198242188

Token 2117: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.023621851578354836
    2. '   ' → logprob: -3.7736217975616455
    3. ' elif' → logprob: -7.898622035980225
    4. 'else' → logprob: -12.773621559143066
    5. '```' → logprob: -14.148621559143066
    6. 'if' → logprob: -14.148621559143066
    7. 'el' → logprob: -15.023621559143066
    8. '       ' → logprob: -15.648621559143066
    9. '	elif' → logprob: -16.148622512817383
    10. ' ' → logprob: -16.273622512817383

Token 2118: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.03106173872947693
    2. ' px' → logprob: -3.5310616493225098
    3. 'py' → logprob: -6.65606164932251
    4. ' py' → logprob: -11.406062126159668
    5. '(px' → logprob: -11.531062126159668
    6. '_px' → logprob: -12.781062126159668
    7. ':px' → logprob: -15.656062126159668
    8. '
' → logprob: -16.15606117248535
    9. '   ' → logprob: -16.90606117248535
    10. '(py' → logprob: -17.28106117248535

Token 2119: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.57594233751297
    2. '>' → logprob: -0.82594233751297
    3. ' ' → logprob: -14.575942039489746
    4. '   ' → logprob: -14.825942039489746
    5. '>x' → logprob: -14.825942039489746
    6. '```' → logprob: -15.075942039489746
    7. '[' → logprob: -15.325942039489746
    8. '>
' → logprob: -15.825942039489746
    9. 'py' → logprob: -15.950942039489746
    10. '=' → logprob: -16.325942993164062

Token 2120: ' rx' (ID: 37623)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.12693430483341217
    2. ' rx' → logprob: -2.126934289932251
    3. '(rx' → logprob: -12.876934051513672
    4. '   ' → logprob: -13.626934051513672
    5. 'px' → logprob: -13.876934051513672
    6. 'ry' → logprob: -14.751934051513672
    7. 'tx' → logprob: -15.251934051513672
    8. '_rx' → logprob: -15.626934051513672
    9. '.rx' → logprob: -15.626934051513672
    10. ' ' → logprob: -16.251934051513672

Token 2121: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3856492842023727e-06
    2. 'x' → logprob: -13.625000953674316
    3. '₂' → logprob: -17.500001907348633
    4. '   ' → logprob: -18.000001907348633
    5. '```' → logprob: -18.000001907348633
    6. '۲' → logprob: -18.125001907348633
    7. '[' → logprob: -18.500001907348633
    8. '２' → logprob: -19.500001907348633
    9. 'y' → logprob: -19.500001907348633
    10. '
' → logprob: -19.625001907348633

Token 2122: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1836053878068924
    2. ':
' → logprob: -2.183605432510376
    3. '       ' → logprob: -2.933605432510376
    4. '   ' → logprob: -7.308605194091797
    5. ':px' → logprob: -8.058605194091797
    6. '[' → logprob: -8.183605194091797
    7. ',' → logprob: -8.433605194091797
    8. '<|end|>' → logprob: -9.683605194091797
    9. '```' → logprob: -9.808605194091797
    10. '(px' → logprob: -10.058605194091797

Token 2123: '       ' (ID: 309)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.3068845272064209
    2. ' px' → logprob: -1.431884527206421
    3. '       ' → logprob: -3.806884527206421
    4. 'py' → logprob: -6.181884765625
    5. '(px' → logprob: -6.931884765625
    6. ' py' → logprob: -9.681884765625
    7. '   ' → logprob: -10.306884765625
    8. '_px' → logprob: -10.556884765625
    9. '(py' → logprob: -11.556884765625
    10. ':px' → logprob: -12.556884765625

Token 2124: ' dx' (ID: 29472)
  Prédit: ' px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' px' → logprob: -0.02979828231036663
    2. 'px' → logprob: -3.5297982692718506
    3. '(px' → logprob: -10.02979850769043
    4. '_px' → logprob: -12.65479850769043
    5. ' py' → logprob: -15.27979850769043
    6. 'py' → logprob: -15.65479850769043
    7. ':px' → logprob: -16.52979850769043
    8. '```' → logprob: -18.15479850769043
    9. 'x' → logprob: -19.02979850769043
    10. 'Px' → logprob: -19.15479850769043

Token 2125: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023245712742209435
    2. ' =' → logprob: -3.7732458114624023
    3. '=
' → logprob: -15.398245811462402
    4. '   ' → logprob: -18.023244857788086
    5. '       ' → logprob: -18.773244857788086
    6. '```' → logprob: -19.648244857788086
    7. ' ' → logprob: -19.898244857788086
    8. ' =
' → logprob: -20.023244857788086
    9. '.=' → logprob: -20.398244857788086
    10. '+=' → logprob: -20.523244857788086

Token 2126: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.009852414019405842
    2. ' px' → logprob: -4.634852409362793
    3. 'rx' → logprob: -9.384852409362793
    4. 'py' → logprob: -12.384852409362793
    5. '(px' → logprob: -12.384852409362793
    6. '   ' → logprob: -13.259852409362793
    7. ' rx' → logprob: -13.884852409362793
    8. '_px' → logprob: -14.134852409362793
    9. 'tx' → logprob: -16.13485336303711
    10. ':px' → logprob: -16.50985336303711

Token 2127: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0067156096920371056
    2. '-' → logprob: -5.006715774536133
    3. ' ' → logprob: -15.881715774536133
    4. ' ' → logprob: -16.631715774536133
    5. ' -
' → logprob: -17.631715774536133
    6. '-r' → logprob: -18.006715774536133
    7. '<|end|>' → logprob: -19.256715774536133
    8. ' −' → logprob: -19.381715774536133
    9. '−' → logprob: -19.631715774536133
    10. '```' → logprob: -20.006715774536133

Token 2128: ' rx' (ID: 37623)
  Prédit: 'rx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rx' → logprob: -0.0001589618914294988
    2. ' rx' → logprob: -8.75015926361084
    3. '(rx' → logprob: -15.00015926361084
    4. 'ry' → logprob: -17.000158309936523
    5. '_rx' → logprob: -17.250158309936523
    6. 'tx' → logprob: -17.250158309936523
    7. '.rx' → logprob: -17.250158309936523
    8. 'rc' → logprob: -17.875158309936523
    9. '   ' → logprob: -19.375158309936523
    10. 'rv' → logprob: -19.625158309936523

Token 2129: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '```' → logprob: -18.875
    3. '[' → logprob: -19.375
    4. '۲' → logprob: -19.5
    5. '₂' → logprob: -20.0
    6. '२' → logprob: -20.625
    7. '
' → logprob: -20.625
    8. '２' → logprob: -21.125
    9. '_' → logprob: -21.25
    10. '২' → logprob: -21.375

Token 2130: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.351697033504024e-05
    2. '    
' → logprob: -10.375083923339844
    3. 'return' → logprob: -10.500083923339844
    4. '
' → logprob: -11.000083923339844
    5. 'else' → logprob: -12.875083923339844
    6. '       ' → logprob: -13.625083923339844
    7. ' return' → logprob: -13.875083923339844
    8. '        
' → logprob: -14.250083923339844
    9. '```' → logprob: -14.250083923339844
    10. ',' → logprob: -14.875083923339844

Token 2131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00044473158777691424
    2. 'else' → logprob: -8.125444412231445
    3. 'dy' → logprob: -8.875444412231445
    4. 'elif' → logprob: -11.875444412231445
    5. 'return' → logprob: -14.125444412231445
    6. '
' → logprob: -15.250444412231445
    7. 'def' → logprob: -15.250444412231445
    8. ' dy' → logprob: -15.500444412231445
    9. '```' → logprob: -16.125444412231445
    10. '    
' → logprob: -16.125444412231445

Token 2132: ' dy' (ID: 11996)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04317799583077431
    2. 'else' → logprob: -3.418178081512451
    3. 'dy' (adapté à ' dy') → logprob: -4.668178081512451
    4. '```' → logprob: -10.293177604675293
    5. 'elif' → logprob: -10.668177604675293
    6. 'return' → logprob: -11.668177604675293
    7. ' else' → logprob: -11.918177604675293
    8. '       ' → logprob: -12.293177604675293
    9. 'def' → logprob: -12.293177604675293
    10. 'dx' → logprob: -12.293177604675293

Token 2133: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889407873153687
    2. ' =' → logprob: -2.5788941383361816
    3. '   ' → logprob: -12.453893661499023
    4. '=None' → logprob: -15.578893661499023
    5. '=
' → logprob: -16.078893661499023
    6. '```' → logprob: -16.078893661499023
    7. ' ' → logprob: -16.828893661499023
    8. 'def' → logprob: -18.078893661499023
    9. '  ' → logprob: -18.203893661499023
    10. '<|end|>' → logprob: -18.578893661499023

Token 2134: ' ' (ID: 220)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.04808725789189339
    2. '0' → logprob: -3.1730873584747314
    3. ' ry' → logprob: -5.298087120056152
    4. ' ' → logprob: -9.798087120056152
    5. '   ' → logprob: -11.298087120056152
    6. 'max' → logprob: -14.048087120056152
    7. 'py' → logprob: -14.173087120056152
    8. '
' → logprob: -14.548087120056152
    9. '    ' → logprob: -14.673087120056152
    10. 'Ry' → logprob: -14.923087120056152

Token 2135: '0' (ID: 15)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.10027395188808441
    2. '0' → logprob: -2.350273847579956
    3. ' ry' → logprob: -10.100274085998535
    4. 'rx' → logprob: -11.725274085998535
    5. '   ' → logprob: -12.225274085998535
    6. 'py' → logprob: -12.975274085998535
    7. 'max' → logprob: -12.975274085998535
    8. 'ryl' → logprob: -13.850274085998535
    9. ' ' → logprob: -14.100274085998535
    10. 'ryf' → logprob: -14.350274085998535

Token 2136: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0385732538998127
    2. ' if' → logprob: -3.7885732650756836
    3. ' =' → logprob: -5.163573265075684
    4. '=' → logprob: -5.288573265075684
    5. 'if' → logprob: -5.538573265075684
    6. '```' → logprob: -8.038573265075684
    7. '<|end|>' → logprob: -9.663573265075684
    8. '    ' → logprob: -10.788573265075684
    9. 'If' → logprob: -10.788573265075684
    10. ' ' → logprob: -11.288573265075684

Token 2137: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06572078913450241
    2. '   ' → logprob: -2.815720796585083
    3. ' if' → logprob: -5.690720558166504
    4. '```' → logprob: -8.190720558166504
    5. 'If' → logprob: -9.940720558166504
    6. 'def' → logprob: -10.690720558166504
    7. ' ' → logprob: -11.440720558166504
    8. '``' → logprob: -13.065720558166504
    9. '[' → logprob: -13.190720558166504
    10. '	if' → logprob: -14.065720558166504

Token 2138: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0009750670287758112
    2. '   ' → logprob: -7.000975131988525
    3. ' if' → logprob: -10.125974655151367
    4. '```' → logprob: -11.250974655151367
    5. 'elif' → logprob: -11.500974655151367
    6. 'If' → logprob: -14.750974655151367
    7. '       ' → logprob: -16.750974655151367
    8. '	if' → logprob: -17.750974655151367
    9. '``' → logprob: -17.750974655151367
    10. 'else' → logprob: -18.000974655151367

Token 2139: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -5.3120038501219824e-05
    2. ' py' → logprob: -10.000053405761719
    3. '(py' → logprob: -11.875053405761719
    4. '_py' → logprob: -14.125053405761719
    5. '   ' → logprob: -17.12505340576172
    6. '.py' → logprob: -18.00005340576172
    7. 'px' → logprob: -18.25005340576172
    8. 'ry' → logprob: -18.50005340576172
    9. 'Py' → logprob: -19.87505340576172
    10. '```' → logprob: -20.87505340576172

Token 2140: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.12699466943740845
    2. '<' → logprob: -2.1269946098327637
    3. 'py' → logprob: -10.376995086669922
    4. ' >' → logprob: -10.876995086669922
    5. '(py' → logprob: -12.001995086669922
    6. '>' → logprob: -12.376995086669922
    7. '<p' → logprob: -12.751995086669922
    8. ' py' → logprob: -13.126995086669922
    9. '_py' → logprob: -14.626995086669922
    10. '   ' → logprob: -15.626995086669922

Token 2141: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.0025207267608493567
    2. 'py' → logprob: -6.127520561218262
    3. ' ry' → logprob: -8.002520561218262
    4. ' py' → logprob: -15.877520561218262
    5. '
' → logprob: -16.127521514892578
    6. 'rx' → logprob: -16.252521514892578
    7. '   ' → logprob: -16.252521514892578
    8. 'ray' → logprob: -16.627521514892578
    9. 'ryw' → logprob: -17.127521514892578
    10. 'Ry' → logprob: -17.127521514892578

Token 2142: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006899955682456493
    2. '1' → logprob: -5.006899833679199
    3. 'py' → logprob: -8.6318998336792
    4. '```' → logprob: -12.7568998336792
    5. 'ry' → logprob: -13.6318998336792
    6. '   ' → logprob: -13.8818998336792
    7. '``' → logprob: -15.1318998336792
    8. '_py' → logprob: -15.3818998336792
    9. '(py' → logprob: -15.8818998336792
    10. '
' → logprob: -16.006900787353516

Token 2143: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8246174454689026
    2. '       ' → logprob: -1.0746173858642578
    3. ':' → logprob: -1.6996173858642578
    4. '   ' → logprob: -3.324617385864258
    5. '(py' → logprob: -7.324617385864258
    6. 'py' → logprob: -8.699617385864258
    7. '=' → logprob: -8.949617385864258
    8. '_py' → logprob: -9.074617385864258
    9. '[' → logprob: -9.824617385864258
    10. '```' → logprob: -10.324617385864258

Token 2144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10309883952140808
    2. 'py' → logprob: -3.1030988693237305
    3. 'ry' → logprob: -3.1030988693237305
    4. '   ' → logprob: -5.1030988693237305
    5. '(py' → logprob: -6.7280988693237305
    6. ' ry' → logprob: -7.4780988693237305
    7. '_py' → logprob: -9.10309886932373
    8. '      ' → logprob: -10.22809886932373
    9. ' py' → logprob: -10.35309886932373
    10. '```' → logprob: -10.60309886932373

Token 2145: ' dy' (ID: 11996)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.009114613756537437
    2. 'py' → logprob: -4.759114742279053
    3. ' ry' → logprob: -7.759114742279053
    4. 'dy' (adapté à ' dy') → logprob: -9.634114265441895
    5. '   ' → logprob: -13.384114265441895
    6. ' py' → logprob: -13.759114265441895
    7. 'ryf' → logprob: -13.884114265441895
    8. '(py' → logprob: -13.884114265441895
    9. 'ryd' → logprob: -14.759114265441895
    10. 'ryw' → logprob: -14.884114265441895

Token 2146: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007100477814674377
    2. ' =' → logprob: -7.2507100105285645
    3. '=
' → logprob: -17.000709533691406
    4. '   ' → logprob: -17.250709533691406
    5. '       ' → logprob: -19.625709533691406
    6. '+=' → logprob: -20.125709533691406
    7. '```' → logprob: -21.000709533691406
    8. '=}' → logprob: -21.500709533691406
    9. '＝' → logprob: -21.875709533691406
    10. '==' → logprob: -22.250709533691406

Token 2147: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.0003364158037584275
    2. ' ry' → logprob: -8.000336647033691
    3. 'py' → logprob: -14.125336647033691
    4. '   ' → logprob: -16.125335693359375
    5. '(' → logprob: -16.500335693359375
    6. '
' → logprob: -17.750335693359375
    7. 'ryw' → logprob: -18.125335693359375
    8. ' ' → logprob: -18.500335693359375
    9. 'Ry' → logprob: -18.500335693359375
    10. 'ryl' → logprob: -18.750335693359375

Token 2148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.158350151963532e-05
    2. 'py' → logprob: -9.875061988830566
    3. 'ry' → logprob: -11.875061988830566
    4. '2' → logprob: -14.875061988830566
    5. '```' → logprob: -14.875061988830566
    6. '_py' → logprob: -15.000061988830566
    7. '=' → logprob: -15.312561988830566
    8. '(py' → logprob: -15.375061988830566
    9. '#' → logprob: -15.812561988830566
    10. '   ' → logprob: -15.875061988830566

Token 2149: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.387206107378006
    2. '-' → logprob: -1.1372060775756836
    3. '-p' → logprob: -8.012206077575684
    4. '_py' → logprob: -14.012206077575684
    5. '-P' → logprob: -14.012206077575684
    6. '-python' → logprob: -14.387206077575684
    7. 'py' → logprob: -14.512206077575684
    8. '(py' → logprob: -15.262206077575684
    9. '   ' → logprob: -15.637206077575684
    10. ' ' → logprob: -15.762206077575684

Token 2150: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.00016110755677800626
    2. ' py' → logprob: -8.750161170959473
    3. '(py' → logprob: -13.250161170959473
    4. '_py' → logprob: -14.375161170959473
    5. 'ry' → logprob: -16.250160217285156
    6. '   ' → logprob: -17.250160217285156
    7. '.py' → logprob: -18.000160217285156
    8. 'pe' → logprob: -18.375160217285156
    9. 'Py' → logprob: -18.375160217285156
    10. ' ' → logprob: -18.500160217285156

Token 2151: '
' (ID: 198)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.39089956879615784
    2. '-' → logprob: -1.1408995389938354
    3. '   ' → logprob: -6.265899658203125
    4. '       ' → logprob: -7.015899658203125
    5. 'py' → logprob: -7.015899658203125
    6. '(py' → logprob: -8.265899658203125
    7. '_py' → logprob: -10.640899658203125
    8. '-p' → logprob: -11.015899658203125
    9. ' py' → logprob: -12.015899658203125
    10. ' ' → logprob: -12.015899658203125

Token 2152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3793828785419464
    2. 'py' → logprob: -1.629382848739624
    3. 'else' → logprob: -2.629382848739624
    4. '       ' → logprob: -3.754382848739624
    5. '(py' → logprob: -4.254383087158203
    6. 'elif' → logprob: -5.004383087158203
    7. 'dy' → logprob: -6.879383087158203
    8. '0' → logprob: -7.254383087158203
    9. '_py' → logprob: -8.129383087158203
    10. 'return' → logprob: -8.254383087158203

Token 2153: ' elif' (ID: 9497)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.02466706372797489
    2. 'elif' (adapté à ' elif') → logprob: -4.399667263031006
    3. '   ' → logprob: -4.649667263031006
    4. 'else' → logprob: -6.274667263031006
    5. '       ' → logprob: -7.899667263031006
    6. '(py' → logprob: -8.524666786193848
    7. '_py' → logprob: -10.399666786193848
    8. ' py' → logprob: -11.524666786193848
    9. '```' → logprob: -11.899666786193848
    10. '.py' → logprob: -12.649666786193848

Token 2154: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.0009137284359894693
    2. ' py' → logprob: -7.000913619995117
    3. '(py' → logprob: -13.250913619995117
    4. '_py' → logprob: -15.000913619995117
    5. '   ' → logprob: -18.125913619995117
    6. '.py' → logprob: -18.250913619995117
    7. 'Py' → logprob: -19.125913619995117
    8. 'px' → logprob: -20.000913619995117
    9. 'ipy' → logprob: -20.125913619995117
    10. 'pe' → logprob: -20.125913619995117

Token 2155: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.16102439165115356
    2. 'py' → logprob: -1.9110243320465088
    3. ' >' → logprob: -7.536024570465088
    4. ' py' → logprob: -9.16102409362793
    5. '(py' → logprob: -9.41102409362793
    6. '_py' → logprob: -9.53602409362793
    7. 'y' → logprob: -13.28602409362793
    8. 'Py' → logprob: -13.41102409362793
    9. '.py' → logprob: -13.66102409362793
    10. ' ' → logprob: -13.91102409362793

Token 2156: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.0011527208844199777
    2. ' ry' → logprob: -7.001152515411377
    3. 'py' → logprob: -8.376152992248535
    4. '   ' → logprob: -11.626152992248535
    5. 'rey' → logprob: -15.001152992248535
    6. ' ' → logprob: -15.251152992248535
    7. ' py' → logprob: -15.876152992248535
    8. '  ' → logprob: -16.00115203857422
    9. 'ey' → logprob: -16.12615203857422
    10. '    ' → logprob: -16.12615203857422

Token 2157: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.38800323009490967
    2. 'ry' → logprob: -1.1380032300949097
    3. 'y' → logprob: -7.513003349304199
    4. ' ry' → logprob: -7.763003349304199
    5. 'py' → logprob: -9.0130033493042
    6. 'ey' → logprob: -11.8880033493042
    7. '   ' → logprob: -12.0130033493042
    8. '=' → logprob: -12.6380033493042
    9. '₂' → logprob: -12.8880033493042
    10. '_' → logprob: -13.0130033493042

Token 2158: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09914958477020264
    2. 'py' → logprob: -3.099149703979492
    3. '(py' → logprob: -3.849149703979492
    4. ' py' → logprob: -4.474149703979492
    5. ':' → logprob: -4.974149703979492
    6. '_py' → logprob: -5.599149703979492
    7. '   ' → logprob: -6.474149703979492
    8. ',' → logprob: -6.599149703979492
    9. '=' → logprob: -6.849149703979492
    10. ':
' → logprob: -7.474149703979492

Token 2159: '       ' (ID: 309)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.1807953268289566
    2. ' py' → logprob: -1.9307953119277954
    3. 'ry' → logprob: -4.430795192718506
    4. ' ry' → logprob: -5.055795192718506
    5. '   ' → logprob: -6.930795192718506
    6. '(py' → logprob: -6.930795192718506
    7. '_py' → logprob: -9.305795669555664
    8. '       ' → logprob: -11.555795669555664
    9. '    ' → logprob: -11.555795669555664
    10. '.py' → logprob: -12.305795669555664

Token 2160: ' dy' (ID: 11996)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.0001657565007917583
    2. ' py' → logprob: -8.750165939331055
    3. '   ' → logprob: -12.625165939331055
    4. '(py' → logprob: -13.250165939331055
    5. 'ry' → logprob: -13.500165939331055
    6. '_py' → logprob: -15.125165939331055
    7. 'pe' → logprob: -15.500165939331055
    8. ' ' → logprob: -15.875165939331055
    9. '  ' → logprob: -16.625165939331055
    10. 'dy' (adapté à ' dy') → logprob: -17.125165939331055

Token 2161: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8649739027023315
    2. '=' → logprob: -1.3649739027023315
    3. ' py' → logprob: -1.8649739027023315
    4. 'py' → logprob: -1.8649739027023315
    5. '>' → logprob: -5.364974021911621
    6. '       ' → logprob: -5.739974021911621
    7. '(py' → logprob: -6.239974021911621
    8. '_py' → logprob: -6.614974021911621
    9. ' >' → logprob: -6.989974021911621
    10. ' ' → logprob: -7.364974021911621

Token 2162: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.0031184181571006775
    2. 'ry' → logprob: -6.003118515014648
    3. ' py' → logprob: -7.378118515014648
    4. ' ry' → logprob: -11.253118515014648
    5. '(py' → logprob: -12.753118515014648
    6. '_py' → logprob: -14.253118515014648
    7. '   ' → logprob: -14.503118515014648
    8. ' ' → logprob: -15.628118515014648
    9. '  ' → logprob: -16.00311851501465
    10. '2' → logprob: -16.75311851501465

Token 2163: ' -' (ID: 533)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017939432291314006
    2. '-' → logprob: -6.50179386138916
    3. ' ' → logprob: -8.62679386138916
    4. ' -' → logprob: -10.00179386138916
    5. '   ' → logprob: -10.37679386138916
    6. '_' → logprob: -11.50179386138916
    7. '[' → logprob: -11.75179386138916
    8. 'py' → logprob: -12.00179386138916
    9. '```' → logprob: -13.12679386138916
    10. '
' → logprob: -13.25179386138916

Token 2164: ' ry' (ID: 23218)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.00011200665176147595
    2. 'py' → logprob: -9.75011157989502
    3. ' ry' → logprob: -10.00011157989502
    4. '   ' → logprob: -12.12511157989502
    5. 'rx' → logprob: -14.12511157989502
    6. 'rey' → logprob: -15.00011157989502
    7. '  ' → logprob: -15.37511157989502
    8. '
' → logprob: -15.37511157989502
    9. 'ey' → logprob: -15.50011157989502
    10. ' ' → logprob: -15.75011157989502

Token 2165: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '```' → logprob: -17.375
    3. '1' → logprob: -17.5
    4. '_' → logprob: -18.375
    5. '
' → logprob: -18.375
    6. '   ' → logprob: -19.125
    7. ' ' → logprob: -19.375
    8. '``' → logprob: -19.625
    9. '₂' → logprob: -19.625
    10. '２' → logprob: -19.75

Token 2166: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1664012372493744
    2. '       ' → logprob: -1.9164012670516968
    3. '=' → logprob: -5.916401386260986
    4. '```' → logprob: -6.791401386260986
    5. '
' → logprob: -7.666401386260986
    6. ':
' → logprob: -7.791401386260986
    7. ' =' → logprob: -8.166400909423828
    8. 'dy' → logprob: -8.416400909423828
    9. ' dy' → logprob: -8.791400909423828
    10. 'return' → logprob: -8.916400909423828

Token 2167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037270416505634785
    2. '       ' → logprob: -5.628726959228516
    3. '```' → logprob: -9.753726959228516
    4. ' dy' → logprob: -10.628726959228516
    5. 'dy' → logprob: -10.753726959228516
    6. '  ' → logprob: -12.253726959228516
    7. '``' → logprob: -13.253726959228516
    8. '
' → logprob: -13.253726959228516
    9. ' ' → logprob: -13.378726959228516
    10. ' =' → logprob: -13.378726959228516

Token 2168: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023281820118427277
    2. 'return' (adapté à ' return') → logprob: -3.7732818126678467
    3. '```' → logprob: -10.898282051086426
    4. ' return' → logprob: -11.023282051086426
    5. '       ' → logprob: -14.773282051086426
    6. '``' → logprob: -14.773282051086426
    7. '
' → logprob: -14.773282051086426
    8. '	return' → logprob: -15.523282051086426
    9. '`' → logprob: -16.64828109741211
    10. 'import' → logprob: -17.39828109741211

Token 2169: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.00862036645412445
    2. ' math' → logprob: -4.758620262145996
    3. 'dx' → logprob: -12.258620262145996
    4. '(math' → logprob: -14.508620262145996
    5. ' dx' → logprob: -15.508620262145996
    6. 'Math' → logprob: -15.633620262145996
    7. 'max' → logprob: -16.008621215820312
    8. '   ' → logprob: -16.633621215820312
    9. ' ' → logprob: -18.883621215820312
    10. 'float' → logprob: -19.508621215820312

Token 2170: '.h' (ID: 1508)
  Prédit: '.h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.h' → logprob: -0.029970664530992508
    2. '.sqrt' → logprob: -3.529970645904541
    3. '.' → logprob: -9.0299711227417
    4. '.dist' → logprob: -10.2799711227417
    5. '.pow' → logprob: -10.2799711227417
    6. '```' → logprob: -11.0299711227417
    7. 'hyp' → logprob: -11.9049711227417
    8. '.Sqrt' → logprob: -13.2799711227417
    9. '.hy' → logprob: -13.6549711227417
    10. '.abs' → logprob: -13.7799711227417

Token 2171: 'yp' (ID: 1785)
  Prédit: 'yp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yp' → logprob: -0.00012833021173719317
    2. 'hyp' → logprob: -9.000128746032715
    3. 'y' → logprob: -12.375128746032715
    4. ' hypot' → logprob: -14.625128746032715
    5. 'ot' → logprob: -16.6251277923584
    6. 'yt' → logprob: -17.3751277923584
    7. 'pot' → logprob: -17.6251277923584
    8. 'ipot' → logprob: -18.8751277923584
    9. '   ' → logprob: -19.3751277923584
    10. 'sqrt' → logprob: -19.5001277923584

Token 2172: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -1.5048530030981055e-06
    2. 't' → logprob: -14.250001907348633
    3. 'otp' → logprob: -14.500001907348633
    4. 'o' → logprob: -15.500001907348633
    5. 'pot' → logprob: -16.750001907348633
    6. 'от' → logprob: -17.250001907348633
    7. 'otl' → logprob: -17.250001907348633
    8. '0' → logprob: -17.625001907348633
    9. '[' → logprob: -18.000001907348633
    10. 'opt' → logprob: -18.125001907348633

Token 2173: '(dx' (ID: 124932)
  Prédit: '(dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dx' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.625001907348633
    3. '(px' → logprob: -14.250001907348633
    4. 'dx' → logprob: -15.500001907348633
    5. '(
' → logprob: -19.250001907348633
    6. '_dx' → logprob: -19.500001907348633
    7. '```' → logprob: -19.750001907348633
    8. '(d' → logprob: -20.000001907348633
    9. ' (' → logprob: -20.750001907348633
    10. '(py' → logprob: -21.125001907348633

Token 2174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9266199160483666e-05
    2. ' ,' → logprob: -11.125019073486328
    3. '   ' → logprob: -13.375019073486328
    4. ',
' → logprob: -13.375019073486328
    5. '(dx' → logprob: -14.000019073486328
    6. '```' → logprob: -15.750019073486328
    7. ',d' → logprob: -16.125019073486328
    8. 'dx' → logprob: -16.625019073486328
    9. '
' → logprob: -16.875019073486328
    10. ' ' → logprob: -17.250019073486328

Token 2175: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -1.676292231422849e-05
    2. ' dy' → logprob: -11.000017166137695
    3. '.dy' → logprob: -20.625017166137695
    4. '0' → logprob: -20.750017166137695
    5. '   ' → logprob: -21.250017166137695
    6. 'py' → logprob: -21.625017166137695
    7. 'Dy' → logprob: -21.875017166137695
    8. '
' → logprob: -22.000017166137695
    9. 'd' → logprob: -22.000017166137695
    10. 'dx' → logprob: -22.500017166137695

Token 2176: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.0219828002154827e-05
    2. '   ' → logprob: -10.875020027160645
    3. ' )' → logprob: -14.375020027160645
    4. ')
' → logprob: -14.750020027160645
    5. '}' → logprob: -17.00002098083496
    6. '())' → logprob: -17.12502098083496
    7. '()' → logprob: -17.37502098083496
    8. ' ' → logprob: -17.87502098083496
    9. '))' → logprob: -17.87502098083496
    10. '),' → logprob: -18.12502098083496

Token 2177: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. ' def' → logprob: -16.75
    3. '```' → logprob: -19.75
    4. ':def' → logprob: -19.75
    5. '
' → logprob: -21.125
    6. '-def' → logprob: -21.875
    7. '_def' → logprob: -22.25
    8. '	def' → logprob: -22.25
    9. '<|end|>' → logprob: -22.5
    10. '(def' → logprob: -23.0

Token 2178: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.006755275186151266
    2. ' dist' → logprob: -5.006755352020264
    3. 'def' → logprob: -10.131754875183105
    4. ' def' → logprob: -16.756755828857422
    5. '	dist' → logprob: -17.506755828857422
    6. '_dist' → logprob: -18.506755828857422
    7. 'distance' → logprob: -18.756755828857422
    8. 'segments' → logprob: -19.131755828857422
    9. 'segment' → logprob: -19.881755828857422
    10. 'Dist' → logprob: -20.131755828857422

Token 2179: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.0005580356228165329
    2. '_point' → logprob: -7.500557899475098
    3. 'def' → logprob: -13.125557899475098
    4. '```' → logprob: -13.875557899475098
    5. '_line' → logprob: -14.250557899475098
    6. '_rectangle' → logprob: -14.750557899475098
    7. '_segments' → logprob: -15.000557899475098
    8. 'segment' → logprob: -15.125557899475098
    9. '_seg' → logprob: -16.375558853149414
    10. 'Segment' → logprob: -16.875558853149414

Token 2180: '_rectangle' (ID: 166619)
  Prédit: '_rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rectangle' → logprob: -0.0018872303189709783
    2. '_segment' → logprob: -6.751887321472168
    3. '_point' → logprob: -7.251887321472168
    4. '_polygon' → logprob: -13.126887321472168
    5. '_to' → logprob: -13.376887321472168
    6. 'rectangle' → logprob: -13.751887321472168
    7. '_line' → logprob: -13.876887321472168
    8. '_rect' → logprob: -14.126887321472168
    9. '_' → logprob: -14.501887321472168
    10. '```' → logprob: -15.501887321472168

Token 2181: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.031025677919387817
    2. '(a' → logprob: -3.6560256481170654
    3. '((' → logprob: -5.6560258865356445
    4. '2' → logprob: -7.0310258865356445
    5. '(segment' → logprob: -9.406025886535645
    6. '_a' → logprob: -9.656025886535645
    7. 'def' → logprob: -9.781025886535645
    8. 'a' → logprob: -10.281025886535645
    9. '(s' → logprob: -10.906025886535645
    10. '_(' → logprob: -11.156025886535645

Token 2182: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006641837535426021
    2. '((' → logprob: -8.000663757324219
    3. 'def' → logprob: -8.500663757324219
    4. '_' → logprob: -9.625663757324219
    5. '(a' → logprob: -10.375663757324219
    6. '(p' → logprob: -11.375663757324219
    7. '(px' → logprob: -12.125663757324219
    8. '(ax' → logprob: -12.750663757324219
    9. '```' → logprob: -12.875663757324219
    10. '(x' → logprob: -13.000663757324219

Token 2183: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.061980459839105606
    2. 'def' → logprob: -2.8119804859161377
    3. '2' → logprob: -11.811980247497559
    4. '((' → logprob: -12.561980247497559
    5. '_d' → logprob: -14.436980247497559
    6. '(' → logprob: -14.811980247497559
    7. '(def' → logprob: -15.061980247497559
    8. ' def' → logprob: -15.436980247497559
    9. '(d' → logprob: -15.561980247497559
    10. 'D' → logprob: -16.936981201171875

Token 2184: '(seg' (ID: 140462)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.01176145114004612
    2. '(seg' → logprob: -5.011761665344238
    3. '(p' → logprob: -5.511761665344238
    4. '((' → logprob: -7.136761665344238
    5. '(segment' → logprob: -8.636761665344238
    6. '(s' → logprob: -11.386761665344238
    7. '(ax' → logprob: -12.761761665344238
    8. '(pa' → logprob: -12.761761665344238
    9. '(ab' → logprob: -13.261761665344238
    10. '(sa' → logprob: -14.761761665344238

Token 2185: '_a' (ID: 10852)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.038869258016347885
    2. '((' → logprob: -3.6638691425323486
    3. '(a' → logprob: -5.538869380950928
    4. '_segment' → logprob: -6.163869380950928
    5. '(p' → logprob: -6.788869380950928
    6. '(start' → logprob: -7.038869380950928
    7. '(' → logprob: -7.288869380950928
    8. 'gment' → logprob: -7.288869380950928
    9. '```' → logprob: -7.913869380950928
    10. '   ' → logprob: -7.913869380950928

Token 2186: ',' (ID: 11)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.35568663477897644
    2. 'def' → logprob: -1.8556866645812988
    3. '1' → logprob: -2.980686664581299
    4. '2' → logprob: -3.355686664581299
    5. '((' → logprob: -4.355686664581299
    6. 'b' → logprob: -5.355686664581299
    7. ',' → logprob: -5.605686664581299
    8. '0' → logprob: -5.730686664581299
    9. '_' → logprob: -5.855686664581299
    10. 'nd' → logprob: -6.105686664581299

Token 2187: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -1.259079363080673e-05
    2. ' seg' → logprob: -11.375012397766113
    3. '(seg' → logprob: -13.750012397766113
    4. '
' → logprob: -17.75001335144043
    5. 'seq' → logprob: -17.75001335144043
    6. 'segment' → logprob: -18.00001335144043
    7. '(' → logprob: -19.00001335144043
    8. '   ' → logprob: -19.75001335144043
    9. 'sec' → logprob: -20.00001335144043
    10. '_seg' → logprob: -20.12501335144043

Token 2188: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.006853784900158644
    2. 'seg' → logprob: -5.2568535804748535
    3. 'b' → logprob: -7.2568535804748535
    4. '_seg' → logprob: -7.3818535804748535
    5. '(seg' → logprob: -8.631854057312012
    6. 'segment' → logprob: -9.881854057312012
    7. ' seg' → logprob: -10.881854057312012
    8. '_a' → logprob: -11.881854057312012
    9. 'B' → logprob: -12.006854057312012
    10. '_segment' → logprob: -12.256854057312012

Token 2189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013276183744892478
    2. '   ' → logprob: -7.0013275146484375
    3. '):
' → logprob: -8.251327514648438
    4. '(seg' → logprob: -9.376327514648438
    5. '):' → logprob: -10.001327514648438
    6. ' ,' → logprob: -11.126327514648438
    7. 'seg' → logprob: -13.126327514648438
    8. 'def' → logprob: -13.501327514648438
    9. ' ' → logprob: -13.626327514648438
    10. ',
' → logprob: -13.876327514648438

Token 2190: ' rect' (ID: 13107)
  Prédit: '(seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(seg' → logprob: -0.03979463875293732
    2. '(rx' → logprob: -3.664794683456421
    3. '(min' → logprob: -4.914794445037842
    4. '(' → logprob: -6.164794445037842
    5. '(rect' → logprob: -6.289794445037842
    6. '(px' → logprob: -7.164794445037842
    7. 'seg' → logprob: -7.164794445037842
    8. '(s' → logprob: -9.289794921875
    9. '(
' → logprob: -9.414794921875
    10. '(lambda' → logprob: -9.414794921875

Token 2191: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6536707878112793
    2. '_min' → logprob: -1.6536707878112793
    3. '):' → logprob: -2.1536707878112793
    4. '   ' → logprob: -3.6536707878112793
    5. 'min' → logprob: -3.6536707878112793
    6. '_coords' → logprob: -3.7786707878112793
    7. '(' → logprob: -4.153670787811279
    8. '_' → logprob: -4.403670787811279
    9. '(min' → logprob: -4.403670787811279
    10. '=(' → logprob: -4.528670787811279

Token 2192: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015693542081862688
    2. 'def' → logprob: -9.125157356262207
    3. '(px' → logprob: -11.250157356262207
    4. '(ax' → logprob: -11.625157356262207
    5. '```' → logprob: -11.750157356262207
    6. '(a' → logprob: -12.000157356262207
    7. '(rx' → logprob: -12.375157356262207
    8. ':
' → logprob: -13.000157356262207
    9. 'a' → logprob: -13.875157356262207
    10. '(cx' → logprob: -14.000157356262207

Token 2193: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5021008849143982
    2. 'px' → logprob: -1.877100944519043
    3. 'ax' → logprob: -2.377100944519043
    4. 'def' → logprob: -2.752100944519043
    5. '   ' → logprob: -3.127100944519043
    6. 'rx' → logprob: -4.127100944519043
    7. '(px' → logprob: -4.627100944519043
    8. '(ax' → logprob: -5.502100944519043
    9. '(min' → logprob: -5.752100944519043
    10. '(rx' → logprob: -6.377100944519043

Token 2194: ' segment' (ID: 14806)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6958546042442322
    2. 'ax' → logprob: -1.320854663848877
    3. '(ax' → logprob: -1.945854663848877
    4. 'min' → logprob: -3.195854663848877
    5. '#' → logprob: -3.945854663848877
    6. '(min' → logprob: -4.695854663848877
    7. 'a' → logprob: -4.820854663848877
    8. '(a' → logprob: -5.445854663848877
    9. '(px' → logprob: -5.445854663848877
    10. 'px' → logprob: -6.070854663848877

Token 2195: ' points' (ID: 5571)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.7311897873878479
    2. 'a' → logprob: -0.9811897873878479
    3. 'def' → logprob: -2.731189727783203
    4. 'px' → logprob: -3.231189727783203
    5. 'x' → logprob: -4.481189727783203
    6. '(ax' → logprob: -4.856189727783203
    7. '_a' → logprob: -5.356189727783203
    8. '(px' → logprob: -5.606189727783203
    9. '#' → logprob: -6.106189727783203
    10. 'min' → logprob: -6.231189727783203

Token 2196: ':' (ID: 25)
  Prédit: '(px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(px' → logprob: -0.7198376059532166
    2. '(ax' → logprob: -1.5948376655578613
    3. 'def' → logprob: -1.9698376655578613
    4. 'a' → logprob: -2.8448376655578613
    5. 'ax' → logprob: -3.0948376655578613
    6. 'px' → logprob: -3.4698376655578613
    7. '(a' → logprob: -4.094837665557861
    8. '(x' → logprob: -5.219837665557861
    9. 'x' → logprob: -5.844837665557861
    10. '(pa' → logprob: -6.094837665557861

Token 2197: ' seg' (ID: 3055)
  Prédit: '(ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ax' → logprob: -0.5844426155090332
    2. '(px' → logprob: -1.5844426155090332
    3. '(x' → logprob: -2.334442615509033
    4. 'ax' → logprob: -2.709442615509033
    5. '(min' → logprob: -3.959442615509033
    6. 'def' → logprob: -4.334442615509033
    7. 'x' → logprob: -4.334442615509033
    8. 'min' → logprob: -4.459442615509033
    9. 'px' → logprob: -5.084442615509033
    10. '(rx' → logprob: -5.834442615509033

Token 2198: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.014558205381035805
    2. 'a' → logprob: -4.3895583152771
    3. '_x' → logprob: -7.6395583152771
    4. 'def' → logprob: -7.7645583152771
    5. 'x' → logprob: -7.7645583152771
    6. 'ax' → logprob: -8.514557838439941
    7. '_c' → logprob: -9.889557838439941
    8. 'A' → logprob: -9.889557838439941
    9. 'min' → logprob: -10.014557838439941
    10. '1' → logprob: -10.139557838439941

Token 2199: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10776478797197342
    2. 'seg' → logprob: -3.107764720916748
    3. ' =' → logprob: -3.857764720916748
    4. 'x' → logprob: -4.107764720916748
    5. '(seg' → logprob: -4.982764720916748
    6. '=' → logprob: -5.982764720916748
    7. '_x' → logprob: -5.982764720916748
    8. 'def' → logprob: -6.482764720916748
    9. '[' → logprob: -6.482764720916748
    10. '=(' → logprob: -6.732764720916748

Token 2200: ' (' (ID: 350)
  Prédit: '(seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seg' → logprob: -0.0030692180152982473
    2. '(x' → logprob: -6.6280694007873535
    3. 'seg' → logprob: -6.7530694007873535
    4. '(a' → logprob: -8.128068923950195
    5. '(' → logprob: -8.878068923950195
    6. '(ax' → logprob: -9.878068923950195
    7. ' (' → logprob: -10.753068923950195
    8. 'tuple' → logprob: -10.878068923950195
    9. '(tuple' → logprob: -11.003068923950195
    10. '(segment' → logprob: -11.628068923950195

Token 2201: 'x' (ID: 87)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.16890083253383636
    2. 'seg' → logprob: -1.9189008474349976
    3. '(rect' → logprob: -6.043900966644287
    4. 'min' → logprob: -6.293900966644287
    5. 'float' → logprob: -6.668900966644287
    6. 'x' → logprob: -7.293900966644287
    7. '(seg' → logprob: -7.293900966644287
    8. ')' → logprob: -8.168900489807129
    9. '0' → logprob: -8.293900489807129
    10. 'rx' → logprob: -8.668900489807129

Token 2202: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4466073513031006
    2. '0' → logprob: -1.4466073513031006
    3. '[' → logprob: -2.4466073513031006
    4. 'rect' → logprob: -4.32160758972168
    5. ',' → logprob: -4.57160758972168
    6. 'seg' → logprob: -5.32160758972168
    7. 'def' → logprob: -5.32160758972168
    8. 'min' → logprob: -6.69660758972168
    9. 'a' → logprob: -7.44660758972168
    10. '```' → logprob: -7.44660758972168

Token 2203: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06869647651910782
    2. '1' → logprob: -3.3186964988708496
    3. '[' → logprob: -3.5686964988708496
    4. '0' → logprob: -6.94369649887085
    5. 'seg' → logprob: -7.19369649887085
    6. 'def' → logprob: -8.943696022033691
    7. ',y' → logprob: -9.193696022033691
    8. '(seg' → logprob: -10.943696022033691
    9. '```' → logprob: -11.943696022033691
    10. ' ,' → logprob: -12.443696022033691

Token 2204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1606428623199463
    2. ',' → logprob: -2.4106428623199463
    3. '0' → logprob: -3.5356428623199463
    4. 'seg' → logprob: -3.7856428623199463
    5. '),' → logprob: -5.535642623901367
    6. '[' → logprob: -7.160642623901367
    7. ')' → logprob: -7.285642623901367
    8. 'rect' → logprob: -7.660642623901367
    9. '(seg' → logprob: -7.910642623901367
    10. 'def' → logprob: -9.410642623901367

Token 2205: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.021123554557561874
    2. ',' → logprob: -3.8961236476898193
    3. ')
' → logprob: -8.146123886108398
    4. ')' → logprob: -9.146123886108398
    5. '   ' → logprob: -9.521123886108398
    6. '),(' → logprob: -9.771123886108398
    7. '
' → logprob: -11.021123886108398
    8. 'def' → logprob: -11.521123886108398
    9. ',),' → logprob: -11.521123886108398
    10. '),
' → logprob: -11.521123886108398

Token 2206: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.06421906501054764
    2. 'rect' → logprob: -2.8142189979553223
    3. 'x' → logprob: -6.564218997955322
    4. 'rx' → logprob: -7.689218997955322
    5. 'def' → logprob: -8.81421947479248
    6. 'min' → logprob: -9.56421947479248
    7. ' seg' → logprob: -9.68921947479248
    8. '   ' → logprob: -10.43921947479248
    9. '(seg' → logprob: -11.06421947479248
    10. '(x' → logprob: -11.31421947479248

Token 2207: '_b' (ID: 1535)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.31065061688423157
    2. 'rect' → logprob: -1.9356505870819092
    3. '_a' → logprob: -2.560650587081909
    4. '(' → logprob: -4.310650825500488
    5. '_x' → logprob: -5.185650825500488
    6. 'def' → logprob: -5.560650825500488
    7. '_b' → logprob: -5.810650825500488
    8. '(rect' → logprob: -5.935650825500488
    9. '=(' → logprob: -6.060650825500488
    10. 'c' → logprob: -6.310650825500488

Token 2208: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3371334969997406
    2. '=' → logprob: -1.462133526802063
    3. '=(' → logprob: -3.4621334075927734
    4. ' =' → logprob: -3.9621334075927734
    5. ')' → logprob: -6.462133407592773
    6. '),' → logprob: -7.212133407592773
    7. '=
' → logprob: -7.462133407592773
    8. 'def' → logprob: -8.837133407592773
    9. ')=' → logprob: -8.837133407592773
    10. '(seg' → logprob: -8.837133407592773

Token 2209: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0015624772058799863
    2. ' (' → logprob: -7.376562595367432
    3. 'rect' → logprob: -7.751562595367432
    4. 'x' → logprob: -7.751562595367432
    5. '
' → logprob: -10.751562118530273
    6. '(rect' → logprob: -10.876562118530273
    7. 'seg' → logprob: -11.001562118530273
    8. 'float' → logprob: -11.501562118530273
    9. 'def' → logprob: -13.376562118530273
    10. '(float' → logprob: -13.501562118530273

Token 2210: 'x' (ID: 87)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.0654144361615181
    2. '(rect' → logprob: -3.1904144287109375
    3. 'rx' → logprob: -4.3154144287109375
    4. 'x' → logprob: -5.9404144287109375
    5. '(rx' → logprob: -6.3154144287109375
    6. 'float' → logprob: -6.6904144287109375
    7. '(x' → logprob: -6.6904144287109375
    8. '(' → logprob: -8.065414428710938
    9. 'min' → logprob: -8.440414428710938
    10. '
' → logprob: -8.565414428710938

Token 2211: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.101027488708496
    2. '0' → logprob: -1.226027488708496
    3. 'rect' → logprob: -1.726027488708496
    4. '[' → logprob: -1.976027488708496
    5. '1' → logprob: -4.101027488708496
    6. 'seg' → logprob: -4.351027488708496
    7. 'c' → logprob: -4.601027488708496
    8. ',' → logprob: -5.601027488708496
    9. '3' → logprob: -5.976027488708496
    10. '(rect' → logprob: -6.101027488708496

Token 2212: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3495118021965027
    2. '[' → logprob: -1.2245118618011475
    3. '),' → logprob: -7.974511623382568
    4. '0' → logprob: -8.849512100219727
    5. 'rect' → logprob: -8.849512100219727
    6. ',y' → logprob: -9.349512100219727
    7. ')' → logprob: -9.349512100219727
    8. '1' → logprob: -9.974512100219727
    9. ',
' → logprob: -9.974512100219727
    10. 'def' → logprob: -10.349512100219727

Token 2213: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07599355280399323
    2. ',' → logprob: -2.825993537902832
    3. '2' → logprob: -4.325993537902832
    4. ',y' → logprob: -7.950993537902832
    5. 'y' → logprob: -9.325993537902832
    6. '
' → logprob: -9.700993537902832
    7. ')' → logprob: -9.700993537902832
    8. '```' → logprob: -9.825993537902832
    9. '),' → logprob: -10.075993537902832
    10. ',
' → logprob: -11.325993537902832

Token 2214: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9312589764595032
    2. '),' → logprob: -1.0562589168548584
    3. ')
' → logprob: -2.1812589168548584
    4. '   ' → logprob: -2.8062589168548584
    5. '
' → logprob: -3.3062589168548584
    6. ')' → logprob: -3.4312589168548584
    7. 'def' → logprob: -5.1812591552734375
    8. 'x' → logprob: -5.3062591552734375
    9. '):
' → logprob: -6.1812591552734375
    10. ',
' → logprob: -7.6812591552734375

Token 2215: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16390681266784668
    2. 'x' → logprob: -2.4139068126678467
    3. 'def' → logprob: -3.9139068126678467
    4. 'rx' → logprob: -4.538907051086426
    5. '(rx' → logprob: -5.163907051086426
    6. 'px' → logprob: -5.538907051086426
    7. '(px' → logprob: -5.663907051086426
    8. ' (' → logprob: -5.788907051086426
    9. 'a' → logprob: -5.788907051086426
    10. ' rx' → logprob: -6.038907051086426

Token 2216: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.23978741466999054
    2. 'x' → logprob: -2.2397873401641846
    3. 'def' → logprob: -2.6147873401641846
    4. 'rx' → logprob: -4.114787578582764
    5. '   ' → logprob: -4.739787578582764
    6. '(x' → logprob: -5.739787578582764
    7. '(min' → logprob: -5.989787578582764
    8. '(rx' → logprob: -6.364787578582764
    9. 'px' → logprob: -7.614787578582764
    10. 'rect' → logprob: -8.614787101745605

Token 2217: ' rectangle' (ID: 45808)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.04336532577872276
    2. 'rx' → logprob: -3.543365240097046
    3. '(min' → logprob: -4.543365478515625
    4. 'x' → logprob: -7.043365478515625
    5. '(rx' → logprob: -7.293365478515625
    6. '(x' → logprob: -7.418365478515625
    7. 'def' → logprob: -7.793365478515625
    8. 'px' → logprob: -8.668365478515625
    9. 'rect' → logprob: -9.793365478515625
    10. '(px' → logprob: -10.668365478515625

Token 2218: ':' (ID: 25)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5342756509780884
    2. '=' → logprob: -1.6592756509780884
    3. '(min' → logprob: -3.159275531768799
    4. '_min' → logprob: -3.284275531768799
    5. ' =' → logprob: -3.534275531768799
    6. '=(' → logprob: -3.909275531768799
    7. 'def' → logprob: -3.909275531768799
    8. '=min' → logprob: -4.159275531768799
    9. '(rx' → logprob: -4.409275531768799
    10. 'x' → logprob: -4.534275531768799

Token 2219: ' (' (ID: 350)
  Prédit: '(rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rect' → logprob: -1.2631089687347412
    2. 'rect' → logprob: -1.3881089687347412
    3. '(rx' → logprob: -1.7631089687347412
    4. '(min' → logprob: -2.013108968734741
    5. 'min' → logprob: -2.763108968734741
    6. '(x' → logprob: -2.763108968734741
    7. 'rx' → logprob: -4.38810920715332
    8. 'x' → logprob: -5.26310920715332
    9. ' (' → logprob: -5.63810920715332
    10. ' rect' → logprob: -5.63810920715332

Token 2220: 'min' (ID: 1493)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.00024144348572008312
    2. '0' → logprob: -9.12524127960205
    3. '(rect' → logprob: -9.25024127960205
    4. ' rect' → logprob: -10.50024127960205
    5. '
' → logprob: -13.25024127960205
    6. 'rx' → logprob: -13.87524127960205
    7. '	rect' → logprob: -14.00024127960205
    8. '[' → logprob: -14.12524127960205
    9. 'rec' → logprob: -14.25024127960205
    10. '(' → logprob: -14.37524127960205

Token 2221: 'x' (ID: 87)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.4299406111240387
    2. 'x' → logprob: -1.0549405813217163
    3. '[' → logprob: -7.554940700531006
    4. '(rect' → logprob: -7.679940700531006
    5. '_x' → logprob: -8.929940223693848
    6. '_rect' → logprob: -9.929940223693848
    7. ' rect' → logprob: -10.804940223693848
    8. '0' → logprob: -11.429940223693848
    9. '```' → logprob: -11.679940223693848
    10. '	rect' → logprob: -12.429940223693848

Token 2222: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003096023283433169
    2. '[' → logprob: -8.375309944152832
    3. ',
' → logprob: -10.625309944152832
    4. 'rect' → logprob: -10.875309944152832
    5. '(rect' → logprob: -11.750309944152832
    6. 'def' → logprob: -11.875309944152832
    7. ' ,' → logprob: -12.125309944152832
    8. ',user' → logprob: -13.125309944152832
    9. ',float' → logprob: -13.250309944152832
    10. '0' → logprob: -13.625309944152832

Token 2223: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.08385873585939407
    2. 'rect' → logprob: -2.5838587284088135
    3. '<|end|>' → logprob: -6.708858966827393
    4. ' min' → logprob: -7.583858966827393
    5. ' rect' → logprob: -7.833858966827393
    6. '0' → logprob: -7.833858966827393
    7. '<|end|>' → logprob: -8.208858489990234
    8. ')' → logprob: -8.208858489990234
    9. 'ry' → logprob: -8.333858489990234
    10. '
' → logprob: -8.458858489990234

Token 2224: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.008710776455700397
    2. 'x' → logprob: -4.758710861206055
    3. 'rect' → logprob: -9.883710861206055
    4. '<|end|>' → logprob: -10.383710861206055
    5. ',' → logprob: -12.758710861206055
    6. '
' → logprob: -13.133710861206055
    7. '_y' → logprob: -13.133710861206055
    8. '_rect' → logprob: -14.258710861206055
    9. '```' → logprob: -14.321210861206055
    10. '[' → logprob: -15.008710861206055

Token 2225: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2246291337069124e-05
    2. ',
' → logprob: -11.750021934509277
    3. ',max' → logprob: -12.000021934509277
    4. 'rect' → logprob: -12.250021934509277
    5. ' ,' → logprob: -13.750021934509277
    6. ',min' → logprob: -14.125021934509277
    7. '[' → logprob: -14.375021934509277
    8. '_,' → logprob: -15.125021934509277
    9. 'def' → logprob: -15.625021934509277
    10. '),' → logprob: -15.750021934509277

Token 2226: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.16340114176273346
    2. 'min' → logprob: -1.9134011268615723
    3. 'rect' → logprob: -6.663401126861572
    4. ' max' → logprob: -7.163401126861572
    5. 'rx' → logprob: -7.913401126861572
    6. ')' → logprob: -8.28840160369873
    7. ' min' → logprob: -9.28840160369873
    8. 'def' → logprob: -9.28840160369873
    9. '0' → logprob: -9.41340160369873
    10. '   ' → logprob: -10.78840160369873

Token 2227: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.1008713702030946e-06
    2. 'rect' → logprob: -13.500001907348633
    3. '_x' → logprob: -14.375001907348633
    4. '```' → logprob: -16.875001907348633
    5. '``' → logprob: -18.625001907348633
    6. '_rect' → logprob: -18.625001907348633
    7. '[' → logprob: -18.625001907348633
    8. '(rect' → logprob: -19.250001907348633
    9. ')x' → logprob: -19.250001907348633
    10. '
' → logprob: -19.500001907348633

Token 2228: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012106612848583609
    2. ',max' → logprob: -9.875121116638184
    3. ',min' → logprob: -10.125121116638184
    4. 'min' → logprob: -11.250121116638184
    5. 'max' → logprob: -12.000121116638184
    6. ',
' → logprob: -12.375121116638184
    7. '[' → logprob: -13.250121116638184
    8. 'def' → logprob: -13.625121116638184
    9. ' ,' → logprob: -13.750121116638184
    10. '_,' → logprob: -14.250121116638184

Token 2229: ' max' (ID: 2999)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5759739875793457
    2. 'max' → logprob: -0.8259739875793457
    3. ' min' → logprob: -10.825973510742188
    4. ' max' → logprob: -11.200973510742188
    5. '   ' → logprob: -15.200973510742188
    6. '0' → logprob: -15.950973510742188
    7. 'm' → logprob: -15.950973510742188
    8. '	min' → logprob: -16.450973510742188
    9. '#' → logprob: -16.700973510742188
    10. '_min' → logprob: -16.825973510742188

Token 2230: 'y' (ID: 88)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.08324477821588516
    2. 'y' → logprob: -2.583244800567627
    3. '_max' → logprob: -6.583244800567627
    4. '(max' → logprob: -6.833244800567627
    5. ',' → logprob: -7.208244800567627
    6. ' max' → logprob: -7.333244800567627
    7. '=max' → logprob: -9.083244323730469
    8. 'x' → logprob: -9.208244323730469
    9. 'z' → logprob: -9.833244323730469
    10. ',max' → logprob: -10.083244323730469

Token 2231: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16154290735721588
    2. '):
' → logprob: -2.2865428924560547
    3. '):' → logprob: -4.036542892456055
    4. ')=' → logprob: -4.161542892456055
    5. ')
' → logprob: -4.286542892456055
    6. '   ' → logprob: -8.411542892456055
    7. '
' → logprob: -9.411542892456055
    8. '=' → logprob: -9.411542892456055
    9. '),' → logprob: -10.036542892456055
    10. 'def' → logprob: -10.036542892456055

Token 2232: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.013391137123108
    2. '   ' → logprob: -1.263391137123108
    3. 'def' → logprob: -1.263391137123108
    4. 'a' → logprob: -3.0133910179138184
    5. '(x' → logprob: -5.138391017913818
    6. '```' → logprob: -5.138391017913818
    7. 'ax' → logprob: -5.263391017913818
    8. 'seg' → logprob: -6.388391017913818
    9. 'min' → logprob: -7.013391017913818
    10. '
' → logprob: -7.263391017913818

Token 2233: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.2953503429889679
    2. 'x' → logprob: -1.4203503131866455
    3. '(x' → logprob: -4.670350551605225
    4. '(min' → logprob: -6.170350551605225
    5. 'def' → logprob: -6.670350551605225
    6. 'ax' → logprob: -7.295350551605225
    7. 'seg' → logprob: -8.045350074768066
    8. '   ' → logprob: -8.795350074768066
    9. '(ax' → logprob: -9.670350074768066
    10. 'import' → logprob: -10.545350074768066

Token 2234: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.3782830137643032e-05
    2. 'rect' → logprob: -11.62501335144043
    3. '_x' → logprob: -13.37501335144043
    4. ',' → logprob: -13.62501335144043
    5. 'def' → logprob: -14.37501335144043
    6. '```' → logprob: -14.50001335144043
    7. '_rect' → logprob: -15.75001335144043
    8. '1' → logprob: -15.87501335144043
    9. '[' → logprob: -16.00001335144043
    10. '_,' → logprob: -16.12501335144043

Token 2235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001968649885384366
    2. '=' → logprob: -9.50019645690918
    3. ',min' → logprob: -10.50019645690918
    4. ',
' → logprob: -10.62519645690918
    5. ' =' → logprob: -11.00019645690918
    6. ',user' → logprob: -11.25019645690918
    7. ' ,' → logprob: -11.87519645690918
    8. '_,' → logprob: -12.50019645690918
    9. ',p' → logprob: -12.50019645690918
    10. ',r' → logprob: -12.87519645690918

Token 2236: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0006329743773676455
    2. ' min' → logprob: -7.3756327629089355
    3. 'max' → logprob: -13.000633239746094
    4. 'm' → logprob: -14.250633239746094
    5. 'mini' → logprob: -14.250633239746094
    6. '_min' → logprob: -14.375633239746094
    7. '=min' → logprob: -15.000633239746094
    8. 'py' → logprob: -15.250633239746094
    9. ',min' → logprob: -15.375633239746094
    10. '	min' → logprob: -15.625633239746094

Token 2237: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.05950205773115158
    2. 'min' → logprob: -3.059502124786377
    3. 'x' → logprob: -4.559502124786377
    4. ',' → logprob: -8.059501647949219
    5. 'py' → logprob: -10.184501647949219
    6. ',y' → logprob: -12.434501647949219
    7. ' ymin' → logprob: -12.434501647949219
    8. 'ypy' → logprob: -12.934501647949219
    9. ',min' → logprob: -12.934501647949219
    10. '0' → logprob: -12.934501647949219

Token 2238: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.558399319241289e-05
    2. '=' → logprob: -11.375025749206543
    3. ',min' → logprob: -11.875025749206543
    4. ' ,' → logprob: -12.500025749206543
    5. ',
' → logprob: -13.750025749206543
    6. '_,' → logprob: -14.625025749206543
    7. '```' → logprob: -15.125025749206543
    8. ',max' → logprob: -15.250025749206543
    9. ',user' → logprob: -15.250025749206543
    10. '`,' → logprob: -16.000024795532227

Token 2239: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0009314678027294576
    2. ' max' → logprob: -7.000931262969971
    3. 'min' → logprob: -11.125931739807129
    4. 'rect' → logprob: -12.250931739807129
    5. 'mx' → logprob: -15.750931739807129
    6. 'rx' → logprob: -15.875931739807129
    7. ' rect' → logprob: -16.625930786132812
    8. '_max' → logprob: -17.125930786132812
    9. ',max' → logprob: -17.250930786132812
    10. ' min' → logprob: -18.375930786132812

Token 2240: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: 0.0
    2. 'max' → logprob: -18.25
    3. 'y' → logprob: -20.25
    4. '```' → logprob: -20.375
    5. '0' → logprob: -21.0
    6. ',' → logprob: -21.25
    7. '_x' → logprob: -21.75
    8. '#' → logprob: -22.3125
    9. 'xmin' → logprob: -22.4375
    10. 'xref' → logprob: -22.4375

Token 2241: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.339278580620885e-06
    2. ',max' → logprob: -13.500001907348633
    3. ',min' → logprob: -14.375001907348633
    4. ' ,' → logprob: -15.875001907348633
    5. ',
' → logprob: -16.250001907348633
    6. ',user' → logprob: -17.250001907348633
    7. ',y' → logprob: -18.750001907348633
    8. '_,' → logprob: -19.125001907348633
    9. ',last' → logprob: -19.375001907348633
    10. ',m' → logprob: -19.625001907348633

Token 2242: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -7.493430894101039e-05
    2. ' max' → logprob: -9.500075340270996
    3. 'min' → logprob: -16.75007438659668
    4. '_max' → logprob: -19.12507438659668
    5. 'm' → logprob: -19.87507438659668
    6. '	max' → logprob: -20.62507438659668
    7. '(max' → logprob: -21.37507438659668
    8. ',max' → logprob: -21.37507438659668
    9. '[max' → logprob: -22.12507438659668
    10. '=max' → logprob: -22.25007438659668

Token 2243: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.02139955572783947
    2. 'max' → logprob: -4.14639949798584
    3. 'ay' → logprob: -5.64639949798584
    4. 'x' → logprob: -6.39639949798584
    5. 'ey' → logprob: -9.89639949798584
    6. 'my' → logprob: -10.14639949798584
    7. 'ry' → logprob: -11.52139949798584
    8. 'may' → logprob: -11.77139949798584
    9. ',' → logprob: -12.02139949798584
    10. '=max' → logprob: -12.52139949798584

Token 2244: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43520137667655945
    2. '=' → logprob: -1.1852014064788818
    3. '   ' → logprob: -3.185201406478882
    4. ',' → logprob: -5.810201168060303
    5. '=
' → logprob: -6.060201168060303
    6. ' =
' → logprob: -8.685201644897461
    7. ' ' → logprob: -9.810201644897461
    8. '=(' → logprob: -9.935201644897461
    9. ')' → logprob: -10.685201644897461
    10. ':' → logprob: -10.810201644897461

Token 2245: ' rect' (ID: 13107)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -2.7729658540920354e-05
    2. ' rect' → logprob: -10.500027656555176
    3. '(rect' → logprob: -15.625027656555176
    4. 'block' → logprob: -18.625028610229492
    5. '
' → logprob: -18.750028610229492
    6. '	rect' → logprob: -18.750028610229492
    7. '_rect' → logprob: -19.375028610229492
    8. 'rest' → logprob: -19.500028610229492
    9. '0' → logprob: -19.625028610229492
    10. '   ' → logprob: -19.750028610229492

Token 2246: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018096912652254105
    2. '
' → logprob: -4.893096923828125
    3. 'x' → logprob: -5.643096923828125
    4. 'a' → logprob: -6.143096923828125
    5. 'ax' → logprob: -6.143096923828125
    6. '```' → logprob: -7.518096923828125
    7. ' if' → logprob: -7.893096923828125
    8. ' x' → logprob: -8.018096923828125
    9. 'def' → logprob: -8.268096923828125
    10. ',' → logprob: -8.393096923828125

Token 2247: '   ' (ID: 271)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.8787104487419128
    2. 'x' → logprob: -1.1287105083465576
    3. 'if' → logprob: -1.7537105083465576
    4. '   ' → logprob: -2.7537105083465576
    5. 'def' → logprob: -4.8787102699279785
    6. '#' → logprob: -4.8787102699279785
    7. 'px' → logprob: -5.8787102699279785
    8. '(ax' → logprob: -6.1287102699279785
    9. 'seg' → logprob: -7.0037102699279785
    10. '```' → logprob: -7.5037102699279785

Token 2248: ' x' (ID: 1215)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -1.157389521598816
    2. 'x' (adapté à ' x') → logprob: -1.282389521598816
    3. 'if' → logprob: -1.407389521598816
    4. '#' → logprob: -2.0323896408081055
    5. '(x' → logprob: -4.9073896408081055
    6. '(ax' → logprob: -5.1573896408081055
    7. 'px' → logprob: -5.2823896408081055
    8. 'a' → logprob: -5.6573896408081055
    9. 'def' → logprob: -5.7823896408081055
    10. 'seg' → logprob: -6.0323896408081055

Token 2249: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.537868779967539e-06
    2. '=' → logprob: -12.250008583068848
    3. ',' → logprob: -14.125008583068848
    4. 'a' → logprob: -14.250008583068848
    5. ' =' → logprob: -14.250008583068848
    6. '```' → logprob: -15.250008583068848
    7. '_min' → logprob: -15.500008583068848
    8. 'min' → logprob: -15.500008583068848
    9. 'def' → logprob: -15.625008583068848
    10. '0' → logprob: -15.750008583068848

Token 2250: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016150614246726036
    2. ',y' → logprob: -4.14115047454834
    3. ' ,' → logprob: -9.64115047454834
    4. ',x' → logprob: -10.76615047454834
    5. '=' → logprob: -11.26615047454834
    6. 'y' → logprob: -11.76615047454834
    7. 'x' → logprob: -12.76615047454834
    8. ',
' → logprob: -12.89115047454834
    9. '1' → logprob: -14.26615047454834
    10. '<|end|>' → logprob: -14.51615047454834

Token 2251: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05373930558562279
    2. '=' → logprob: -3.053739309310913
    3. '_' → logprob: -5.428739070892334
    4. ' =' → logprob: -8.303739547729492
    5. '[' → logprob: -8.803739547729492
    6. ',' → logprob: -8.803739547729492
    7. ')' → logprob: -9.678739547729492
    8. '=_' → logprob: -10.178739547729492
    9. '```' → logprob: -10.678739547729492
    10. '   ' → logprob: -11.428739547729492

Token 2252: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3819625973701477
    2. '=' → logprob: -1.256962537765503
    3. ' =' → logprob: -4.131962776184082
    4. ',x' → logprob: -4.131962776184082
    5. '   ' → logprob: -8.006962776184082
    6. 'x' → logprob: -8.881962776184082
    7. ',
' → logprob: -9.131962776184082
    8. ' ,' → logprob: -9.256962776184082
    9. ',y' → logprob: -10.006962776184082
    10. '=x' → logprob: -10.256962776184082

Token 2253: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.001170460251159966
    2. ' seg' → logprob: -6.751170635223389
    3. '(seg' → logprob: -15.12617015838623
    4. '   ' → logprob: -17.001171112060547
    5. 'se' → logprob: -18.501171112060547
    6. '_seg' → logprob: -19.376171112060547
    7. 'sig' → logprob: -19.751171112060547
    8. 'Seg' → logprob: -19.876171112060547
    9. 'segment' → logprob: -20.251171112060547
    10. 'segments' → logprob: -20.751171112060547

Token 2254: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.1757756471633911
    2. '_b' → logprob: -1.9257756471633911
    3. '1' → logprob: -4.550775527954102
    4. 'seg' → logprob: -6.175775527954102
    5. '[' → logprob: -6.550775527954102
    6. '   ' → logprob: -8.425775527954102
    7. 'a' → logprob: -8.550775527954102
    8. '_' → logprob: -8.550775527954102
    9. 'b' → logprob: -8.675775527954102
    10. '(seg' → logprob: -8.925775527954102

Token 2255: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.135935440659523
    2. ',x' → logprob: -2.5109355449676514
    3. ',
' → logprob: -3.1359355449676514
    4. '
' → logprob: -6.760935306549072
    5. '   ' → logprob: -6.885935306549072
    6. ',y' → logprob: -9.01093578338623
    7. 'x' → logprob: -9.26093578338623
    8. ' ,' → logprob: -11.01093578338623
    9. '    
' → logprob: -12.13593578338623
    10. ',\
' → logprob: -12.13593578338623

Token 2256: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3985767960548401
    2. '   ' → logprob: -1.3985767364501953
    3. ',' → logprob: -2.6485767364501953
    4. ' x' → logprob: -4.898576736450195
    5. ',x' → logprob: -6.398576736450195
    6. ',
' → logprob: -7.023576736450195
    7. '    
' → logprob: -8.398576736450195
    8. '```' → logprob: -8.523576736450195
    9. '
' → logprob: -9.023576736450195
    10. '_,' → logprob: -9.148576736450195

Token 2257: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -2.1054253011243418e-05
    2. ' x' → logprob: -11.375020980834961
    3. '   ' → logprob: -11.625020980834961
    4. '
' → logprob: -15.125020980834961
    5. '	x' → logprob: -16.00002098083496
    6. ',' → logprob: -16.50002098083496
    7. ',x' → logprob: -16.50002098083496
    8. '    
' → logprob: -17.25002098083496
    9. '```' → logprob: -18.25002098083496
    10. 'y' → logprob: -18.62502098083496

Token 2258: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.146429223008454e-05
    2. ',' → logprob: -9.87506103515625
    3. '1' → logprob: -11.75006103515625
    4. ' ' → logprob: -14.00006103515625
    5. '=' → logprob: -15.00006103515625
    6. '```' → logprob: -15.75006103515625
    7. ',x' → logprob: -15.75006103515625
    8. '_,' → logprob: -15.87506103515625
    9. ',y' → logprob: -16.00006103515625
    10. ',
' → logprob: -16.25006103515625

Token 2259: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.02325339801609516
    2. ',' → logprob: -3.7732534408569336
    3. ',
' → logprob: -12.648253440856934
    4. ',user' → logprob: -13.523253440856934
    5. ',x' → logprob: -13.523253440856934
    6. ' ,' → logprob: -14.023253440856934
    7. '<|end|>' → logprob: -14.398253440856934
    8. 'y' → logprob: -15.023253440856934
    9. ',Y' → logprob: -16.148252487182617
    10. '   ' → logprob: -16.398252487182617

Token 2260: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.584239938296378e-06
    2. '1' → logprob: -11.875007629394531
    3. 'y' → logprob: -15.125007629394531
    4. '```' → logprob: -16.50000762939453
    5. ' ' → logprob: -17.25000762939453
    6. '=' → logprob: -17.37500762939453
    7. ',' → logprob: -17.37500762939453
    8. '[' → logprob: -17.62500762939453
    9. '
' → logprob: -17.87500762939453
    10. '<|end|>' → logprob: -18.25000762939453

Token 2261: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2385183423757553
    2. ' =' → logprob: -1.6135183572769165
    3. ',' → logprob: -4.863518238067627
    4. '   ' → logprob: -5.613518238067627
    5. '=
' → logprob: -7.238518238067627
    6. 'x' → logprob: -8.863518714904785
    7. ')' → logprob: -8.988518714904785
    8. 'import' → logprob: -9.488518714904785
    9. '
' → logprob: -9.738518714904785
    10. ':' → logprob: -9.738518714904785

Token 2262: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.0009340902324765921
    2. ' seg' → logprob: -7.00093412399292
    3. '(seg' → logprob: -11.375933647155762
    4. 'x' → logprob: -11.500933647155762
    5. 'max' → logprob: -14.125933647155762
    6. 'segment' → logprob: -17.125934600830078
    7. '_seg' → logprob: -17.250934600830078
    8. 'se' → logprob: -17.500934600830078
    9. '   ' → logprob: -17.750934600830078
    10. '(x' → logprob: -18.125934600830078

Token 2263: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.14141719043254852
    2. 'b' → logprob: -2.1414172649383545
    3. '2' → logprob: -4.266417026519775
    4. '_a' → logprob: -8.766417503356934
    5. 'B' → logprob: -9.266417503356934
    6. '_B' → logprob: -10.391417503356934
    7. 'seg' → logprob: -10.891417503356934
    8. '(' → logprob: -10.891417503356934
    9. 'x' → logprob: -11.391417503356934
    10. '_' → logprob: -11.641417503356934

Token 2264: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20583996176719666
    2. '
' → logprob: -1.705839991569519
    3. '    
' → logprob: -5.955840110778809
    4. 'if' → logprob: -6.705840110778809
    5. ' if' → logprob: -7.830840110778809
    6. '#' → logprob: -9.955840110778809
    7. '
' → logprob: -10.205840110778809
    8. '```' → logprob: -10.205840110778809
    9. 'import' → logprob: -11.080840110778809
    10. 'def' → logprob: -11.330840110778809

Token 2265: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5030182003974915
    2. '   ' → logprob: -1.0030181407928467
    3. '#' → logprob: -3.6280181407928467
    4. 'dx' → logprob: -7.378018379211426
    5. '```' → logprob: -7.753018379211426
    6. 'def' → logprob: -8.128018379211426
    7. ' if' → logprob: -8.378018379211426
    8. 'dist' → logprob: -9.503018379211426
    9. 'min' → logprob: -9.503018379211426
    10. 'd' → logprob: -10.003018379211426

Token 2266: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.057346101850271225
    2. '#' (adapté à ' #') → logprob: -3.1823461055755615
    3. 'def' → logprob: -5.057345867156982
    4. 'dist' → logprob: -5.932345867156982
    5. 'res' → logprob: -6.057345867156982
    6. 'best' → logprob: -6.807345867156982
    7. 'min' → logprob: -7.557345867156982
    8. 't' → logprob: -7.682345867156982
    9. 'd' → logprob: -7.932345867156982
    10. 'dx' → logprob: -8.80734634399414

Token 2267: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07159364223480225
    2. '#' → logprob: -2.821593761444092
    3. 'def' → logprob: -5.571593761444092
    4. 'dist' → logprob: -6.196593761444092
    5. 'best' → logprob: -7.196593761444092
    6. 'dx' → logprob: -7.196593761444092
    7. 'min' → logprob: -7.446593761444092
    8. 'res' → logprob: -7.571593761444092
    9. 'px' → logprob: -9.071593284606934
    10. 'closest' → logprob: -9.071593284606934

Token 2268: ' segment' (ID: 14806)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.7955505847930908
    2. 'x' → logprob: -1.1705505847930908
    3. '(min' → logprob: -2.545550584793091
    4. '(x' → logprob: -2.795550584793091
    5. 'point' → logprob: -3.920550584793091
    6. 'max' → logprob: -3.920550584793091
    7. 'line' → logprob: -4.170550346374512
    8. 'rect' → logprob: -4.420550346374512
    9. ' (' → logprob: -5.170550346374512
    10. ' x' → logprob: -5.295550346374512

Token 2269: ' intersects' (ID: 198484)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.35658910870552063
    2. 'inter' → logprob: -2.1065890789031982
    3. 'is' → logprob: -2.8565890789031982
    4. 'ent' → logprob: -3.3565890789031982
    5. 'inside' → logprob: -3.4815890789031982
    6. 'x' → logprob: -4.856589317321777
    7. ' intersects' → logprob: -4.856589317321777
    8. 'min' → logprob: -5.231589317321777
    9. 's' → logprob: -5.356589317321777
    10. ' is' → logprob: -5.731589317321777

Token 2270: ' rectangle' (ID: 45808)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.225567027926445
    2. '(line' → logprob: -2.475567102432251
    3. '((' → logprob: -2.850567102432251
    4. '(rx' → logprob: -3.975567102432251
    5. '(min' → logprob: -4.350566864013672
    6. 'rect' → logprob: -4.725566864013672
    7. '(rect' → logprob: -4.975566864013672
    8. ' line' → logprob: -5.600566864013672
    9. 'min' → logprob: -6.100566864013672
    10. 'rx' → logprob: -6.725566864013672

Token 2271: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47238898277282715
    2. ':
' → logprob: -1.9723889827728271
    3. 'if' → logprob: -2.472388982772827
    4. '       ' → logprob: -2.972388982772827
    5. ' if' → logprob: -2.972388982772827
    6. ' and' → logprob: -3.597388982772827
    7. ' or' → logprob: -4.222389221191406
    8. 'and' → logprob: -5.222389221191406
    9. ':' → logprob: -7.097389221191406
    10. 'or' → logprob: -7.222389221191406

Token 2272: ' dist' (ID: 3601)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.39483314752578735
    2. '       ' → logprob: -1.8948330879211426
    3. '   ' → logprob: -2.0198330879211426
    4. ' return' → logprob: -3.1448330879211426
    5. '
' → logprob: -9.7698335647583
    6. '	return' → logprob: -11.2698335647583
    7. '    ' → logprob: -11.3948335647583
    8. ' ' → logprob: -11.7698335647583
    9. '           ' → logprob: -12.1448335647583
    10. ':return' → logprob: -12.2698335647583

Token 2273: '=' (ID: 28)
  Prédit: '_segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.06253771483898163
    2. '   ' → logprob: -2.937537670135498
    3. '=' → logprob: -5.562537670135498
    4. '==' → logprob: -6.812537670135498
    5. ' =' → logprob: -7.187537670135498
    6. 'ance' → logprob: -7.687537670135498
    7. ' ==' → logprob: -7.937537670135498
    8. '_segments' → logprob: -8.687538146972656
    9. 'return' → logprob: -9.187538146972656
    10. '(' → logprob: -9.187538146972656

Token 2274: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.500005722045898
    3. '   ' → logprob: -13.250005722045898
    4. '=' → logprob: -17.0000057220459
    5. 'return' → logprob: -17.1250057220459
    6. '```' → logprob: -18.6250057220459
    7. '
' → logprob: -18.8750057220459
    8. '[' → logprob: -19.3750057220459
    9. '`' → logprob: -19.6250057220459
    10. '۰' → logprob: -19.8750057220459

Token 2275: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018447443144395947
    2. 'if' → logprob: -6.376844882965088
    3. ' if' → logprob: -9.00184440612793
    4. '
' → logprob: -11.00184440612793
    5. '```' → logprob: -13.25184440612793
    6. ',' → logprob: -15.50184440612793
    7. '	if' → logprob: -15.75184440612793
    8. '    
' → logprob: -15.75184440612793
    9. 'import' → logprob: -15.75184440612793
    10. '       ' → logprob: -16.00184440612793

Token 2276: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00043674863991327584
    2. 'if' → logprob: -8.250436782836914
    3. ' if' → logprob: -9.375436782836914
    4. '```' → logprob: -9.375436782836914
    5. '	if' → logprob: -13.625436782836914
    6. '       ' → logprob: -13.625436782836914
    7. '``' → logprob: -13.875436782836914
    8. '
' → logprob: -13.875436782836914
    9. '`' → logprob: -14.000436782836914
    10. '   ' → logprob: -15.750436782836914

Token 2277: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02987498603761196
    2. '   ' → logprob: -3.5298750400543213
    3. ' if' → logprob: -9.029874801635742
    4. '```' → logprob: -12.279874801635742
    5. '	if' → logprob: -16.279874801635742
    6. 'If' → logprob: -17.529874801635742
    7. '``' → logprob: -18.029874801635742
    8. '
' → logprob: -18.279874801635742
    9. ' ' → logprob: -18.529874801635742
    10. '    
' → logprob: -18.529874801635742

Token 2278: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0003698973741848022
    2. ' line' → logprob: -8.000370025634766
    3. '(line' → logprob: -10.500370025634766
    4. '   ' → logprob: -12.500370025634766
    5. '	line' → logprob: -14.125370025634766
    6. 'point' → logprob: -14.625370025634766
    7. '(' → logprob: -15.250370025634766
    8. ' ' → logprob: -15.375370025634766
    9. '
' → logprob: -15.375370025634766
    10. 'rect' → logprob: -15.625370025634766

Token 2279: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -3.292907877039397e-06
    2. '_segments' → logprob: -13.12500286102295
    3. 'segment' → logprob: -14.12500286102295
    4. '_line' → logprob: -15.25000286102295
    5. 'Segment' → logprob: -16.000003814697266
    6. '```' → logprob: -16.500003814697266
    7. '
' → logprob: -18.125003814697266
    8. 's' → logprob: -18.250003814697266
    9. '_point' → logprob: -19.000003814697266
    10. '_seg' → logprob: -19.000003814697266

Token 2280: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.0004892880679108202
    2. 'inter' → logprob: -7.625489234924316
    3. '_in' → logprob: -14.250489234924316
    4. '```' → logprob: -16.000490188598633
    5. '_segments' → logprob: -16.500490188598633
    6. '
' → logprob: -16.625490188598633
    7. '_INTER' → logprob: -16.750490188598633
    8. '_interrupt' → logprob: -16.750490188598633
    9. '_' → logprob: -17.125490188598633
    10. ' intersects' → logprob: -17.125490188598633

Token 2281: 'sects' (ID: 105681)
  Prédit: 'sects'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sects' → logprob: -0.13133655488491058
    2. 'ects' → logprob: -2.1313364505767822
    3. '```' → logprob: -6.256336688995361
    4. 'erse' → logprob: -6.881336688995361
    5. 'er' → logprob: -7.756336688995361
    6. 'sect' → logprob: -8.756336212158203
    7. 'es' → logprob: -8.756336212158203
    8. 'section' → logprob: -9.131336212158203
    9. 's' → logprob: -9.631336212158203
    10. 'cts' → logprob: -10.006336212158203

Token 2282: '_rect' (ID: 39269)
  Prédit: '_rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -0.127247154712677
    2. 'rect' → logprob: -2.1272470951080322
    3. '(x' → logprob: -8.752246856689453
    4. '((' → logprob: -9.502246856689453
    5. '_rectangle' → logprob: -10.752246856689453
    6. '(s' → logprob: -10.877246856689453
    7. 'Rect' → logprob: -11.502246856689453
    8. 'segment' → logprob: -11.627246856689453
    9. '(seg' → logprob: -12.377246856689453
    10. 'seg' → logprob: -12.752246856689453

Token 2283: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0016192420152947307
    2. '((' → logprob: -6.626619338989258
    3. '(' → logprob: -8.751619338989258
    4. ' (' → logprob: -9.251619338989258
    5. 'x' → logprob: -10.251619338989258
    6. '(
' → logprob: -13.626619338989258
    7. '```' → logprob: -14.251619338989258
    8. '   ' → logprob: -14.876619338989258
    9. '(int' → logprob: -15.126619338989258
    10. 'int' → logprob: -16.001619338989258

Token 2284: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. 'x' → logprob: -13.750000953674316
    3. '```' → logprob: -16.500001907348633
    4. 'min' → logprob: -16.875001907348633
    5. 'y' → logprob: -17.125001907348633
    6. '2' → logprob: -17.250001907348633
    7. ',' → logprob: -17.500001907348633
    8. '``' → logprob: -17.750001907348633
    9. ' ' → logprob: -18.375001907348633
    10. ')' → logprob: -18.750001907348633

Token 2285: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06225021556019783
    2. ',y' → logprob: -2.8122501373291016
    3. ' ,' → logprob: -8.187250137329102
    4. ',
' → logprob: -13.062250137329102
    5. 'y' → logprob: -13.187250137329102
    6. ' y' → logprob: -16.6872501373291
    7. '   ' → logprob: -16.8122501373291
    8. ',x' → logprob: -16.9372501373291
    9. '```' → logprob: -17.0622501373291
    10. '(y' → logprob: -17.5622501373291

Token 2286: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016420685278717428
    2. ',' → logprob: -9.000164031982422
    3. 'y' → logprob: -10.375164031982422
    4. '
' → logprob: -12.250164031982422
    5. '   ' → logprob: -13.500164031982422
    6. 'x' → logprob: -13.875164031982422
    7. ',y' → logprob: -14.125164031982422
    8. ' ' → logprob: -14.500164031982422
    9. '```' → logprob: -14.500164031982422
    10. ',
' → logprob: -16.125164031982422

Token 2287: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001692315679974854
    2. ',x' → logprob: -6.751692295074463
    3. ' ,' → logprob: -7.626692295074463
    4. ',
' → logprob: -10.501692771911621
    5. 'x' → logprob: -12.501692771911621
    6. ',min' → logprob: -13.001692771911621
    7. '```' → logprob: -14.501692771911621
    8. '   ' → logprob: -15.751692771911621
    9. ' x' → logprob: -15.876692771911621
    10. ',r' → logprob: -17.126691818237305

Token 2288: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ',' → logprob: -17.0
    3. '```' → logprob: -17.375
    4. ' ' → logprob: -18.0
    5. 'x' → logprob: -18.25
    6. '₂' → logprob: -18.875
    7. '``' → logprob: -19.25
    8. '
' → logprob: -19.375
    9. '２' → logprob: -19.625
    10. '۲' → logprob: -20.0

Token 2289: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.00043519894825294614
    2. ',' → logprob: -8.375434875488281
    3. 'y' → logprob: -8.500434875488281
    4. ' ,' → logprob: -14.250434875488281
    5. ',
' → logprob: -14.750434875488281
    6. '1' → logprob: -16.87543487548828
    7. '2' → logprob: -17.25043487548828
    8. '
' → logprob: -17.50043487548828
    9. ' y' → logprob: -18.25043487548828
    10. '```' → logprob: -18.25043487548828

Token 2290: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.868328920158092e-05
    2. 'x' → logprob: -11.375028610229492
    3. '1' → logprob: -11.750028610229492
    4. 'y' → logprob: -12.000028610229492
    5. '
' → logprob: -13.750028610229492
    6. '```' → logprob: -14.375028610229492
    7. '   ' → logprob: -15.000028610229492
    8. ')' → logprob: -15.625028610229492
    9. ' ' → logprob: -15.625028610229492
    10. 'min' → logprob: -15.750028610229492

Token 2291: ',min' (ID: 129117)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014276213012635708
    2. ',min' → logprob: -4.264276027679443
    3. ' ,' → logprob: -9.889276504516602
    4. ',
' → logprob: -10.264276504516602
    5. 'min' → logprob: -10.639276504516602
    6. ' min' → logprob: -13.514276504516602
    7. '```' → logprob: -15.514276504516602
    8. ',m' → logprob: -15.514276504516602
    9. ',max' → logprob: -15.764276504516602
    10. '   ' → logprob: -15.889276504516602

Token 2292: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: 0.0
    2. 'in' → logprob: -17.0
    3. '1' → logprob: -17.875
    4. '0' → logprob: -19.375
    5. '```' → logprob: -19.625
    6. 'n' → logprob: -20.375
    7. 'min' → logprob: -20.5
    8. '[' → logprob: -20.75
    9. ')' → logprob: -21.125
    10. '=' → logprob: -21.125

Token 2293: ',min' (ID: 129117)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02331361174583435
    2. ',min' → logprob: -3.773313522338867
    3. ',
' → logprob: -10.023313522338867
    4. ' ,' → logprob: -10.898313522338867
    5. 'min' → logprob: -12.523313522338867
    6. ',m' → logprob: -14.523313522338867
    7. ',my' → logprob: -15.148313522338867
    8. ',max' → logprob: -15.523313522338867
    9. '[min' → logprob: -15.523313522338867
    10. ' min' → logprob: -15.648313522338867

Token 2294: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.062220655381679535
    2. 'min' → logprob: -2.812220573425293
    3. 'iny' → logprob: -9.312220573425293
    4. 'ney' → logprob: -9.562220573425293
    5. 'nyi' → logprob: -10.437220573425293
    6. 'ny' → logprob: -10.437220573425293
    7. ' ymin' → logprob: -11.687220573425293
    8. '
' → logprob: -12.937220573425293
    9. 'x' → logprob: -13.312220573425293
    10. 'iy' → logprob: -13.562220573425293

Token 2295: ',max' (ID: 81466)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4804135262966156
    2. ',max' → logprob: -0.980413556098938
    3. ',' → logprob: -5.105413436889648
    4. ',min' → logprob: -8.980413436889648
    5. 'min' → logprob: -9.105413436889648
    6. ' max' → logprob: -11.230413436889648
    7. '```' → logprob: -13.855413436889648
    8. ',
' → logprob: -14.480413436889648
    9. '
' → logprob: -15.355413436889648
    10. ' ,' → logprob: -15.605413436889648

Token 2296: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.306760805164231e-05
    2. 'max' → logprob: -11.25001335144043
    3. '(max' → logprob: -17.87501335144043
    4. 'xmin' → logprob: -19.00001335144043
    5. '=max' → logprob: -19.87501335144043
    6. 'ax' → logprob: -19.87501335144043
    7. 'mx' → logprob: -19.87501335144043
    8. 'xcc' → logprob: -20.25001335144043
    9. '0' → logprob: -20.37501335144043
    10. '```' → logprob: -20.37501335144043

Token 2297: ',max' (ID: 81466)
  Prédit: ',max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',max' → logprob: -7.553032628493384e-05
    2. ',' → logprob: -9.750075340270996
    3. 'max' → logprob: -11.000075340270996
    4. ',min' → logprob: -15.125075340270996
    5. ',
' → logprob: -16.125076293945312
    6. ' max' → logprob: -18.000076293945312
    7. '	max' → logprob: -18.500076293945312
    8. '|max' → logprob: -18.750076293945312
    9. '(max' → logprob: -19.000076293945312
    10. '[max' → logprob: -19.000076293945312

Token 2298: 'y' (ID: 88)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07922045886516571
    2. 'y' → logprob: -2.5792205333709717
    3. ' ymax' → logprob: -8.45422077178955
    4. '=max' → logprob: -10.20422077178955
    5. 'may' → logprob: -11.32922077178955
    6. '1' → logprob: -11.45422077178955
    7. ' max' → logprob: -11.45422077178955
    8. '(max' → logprob: -11.70422077178955
    9. '0' → logprob: -12.07922077178955
    10. 'ym' → logprob: -12.82922077178955

Token 2299: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04887552931904793
    2. '):' → logprob: -3.048875570297241
    3. '   ' → logprob: -8.29887580871582
    4. ')' → logprob: -10.92387580871582
    5. '):
' → logprob: -10.92387580871582
    6. '):

' → logprob: -14.04887580871582
    7. ''):
' → logprob: -14.42387580871582
    8. '       ' → logprob: -14.92387580871582
    9. ':
' → logprob: -15.04887580871582
    10. ':' → logprob: -15.04887580871582

Token 2300: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.394135612528771e-05
    2. '   ' → logprob: -10.250043869018555
    3. 'return' → logprob: -12.125043869018555
    4. ' return' → logprob: -13.875043869018555
    5. '
' → logprob: -14.375043869018555
    6. '	' → logprob: -14.875043869018555
    7. '           ' → logprob: -15.250043869018555
    8. '```' → logprob: -15.625043869018555
    9. ':return' → logprob: -16.000043869018555
    10. '	return' → logprob: -16.000043869018555

Token 2301: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004149391781538725
    2. '       ' → logprob: -6.254149436950684
    3. ' return' → logprob: -6.254149436950684
    4. '   ' → logprob: -8.379149436950684
    5. '0' → logprob: -9.879149436950684
    6. '	return' → logprob: -11.379149436950684
    7. '
' → logprob: -13.379149436950684
    8. ':return' → logprob: -14.004149436950684
    9. '```' → logprob: -14.379149436950684
    10. ')return' → logprob: -15.129149436950684

Token 2302: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '   ' → logprob: -18.875
    4. '
' → logprob: -20.375
    5. '.' → logprob: -22.125
    6. '```' → logprob: -22.125
    7. '00' → logprob: -22.875
    8. '۰' → logprob: -23.0
    9. ' ' → logprob: -23.5
    10. '`' → logprob: -23.625

Token 2303: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '   ' → logprob: -19.625
    4. '
' → logprob: -21.875
    5. '00' → logprob: -22.375
    6. '۰' → logprob: -22.75
    7. '000' → logprob: -23.125
    8. '    
' → logprob: -23.5
    9. '```' → logprob: -23.625
    10. '.' → logprob: -23.625

Token 2304: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.816093228830141e-06
    2. '0' → logprob: -13.00000286102295
    3. '
' → logprob: -15.75000286102295
    4. 'return' → logprob: -16.500001907348633
    5. '.
' → logprob: -16.500001907348633
    6. 'e' → logprob: -17.125001907348633
    7. '    
' → logprob: -17.125001907348633
    8. '   ' → logprob: -18.250001907348633
    9. '```' → logprob: -18.625001907348633
    10. '
' → logprob: -19.125001907348633

Token 2305: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. 'return' → logprob: -15.375
    3. '```' → logprob: -17.625
    4. '
' → logprob: -18.25
    5. 'def' → logprob: -18.75
    6. '   ' → logprob: -19.125
    7. '.' → logprob: -19.25
    8. '    
' → logprob: -19.375
    9. '000' → logprob: -19.625
    10. '1' → logprob: -20.75

Token 2306: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2058584839105606
    2. '
' → logprob: -2.2058584690093994
    3. '    
' → logprob: -2.5808584690093994
    4. '        
' → logprob: -9.70585823059082
    5. 'dx' → logprob: -10.20585823059082
    6. '  
' → logprob: -10.95585823059082
    7. '
' → logprob: -11.33085823059082
    8. '#' → logprob: -11.70585823059082
    9. '   
' → logprob: -11.83085823059082
    10. '
    
' → logprob: -12.08085823059082

Token 2307: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07928553968667984
    2. '#' → logprob: -3.7042856216430664
    3. 'dx' → logprob: -4.079285621643066
    4. 'dist' → logprob: -4.454285621643066
    5. 'px' → logprob: -4.454285621643066
    6. 'min' → logprob: -4.704285621643066
    7. 'd' → logprob: -7.204285621643066
    8. '
' → logprob: -7.954285621643066
    9. '    
' → logprob: -8.329285621643066
    10. 'closest' → logprob: -8.829285621643066

Token 2308: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.09226883202791214
    2. '#' (adapté à ' #') → logprob: -3.092268943786621
    3. 'dist' → logprob: -3.467268943786621
    4. 'return' → logprob: -5.092268943786621
    5. '   ' → logprob: -5.967268943786621
    6. 'c' → logprob: -6.842268943786621
    7. 'p' → logprob: -7.467268943786621
    8. 'res' → logprob: -7.467268943786621
    9. 'dp' → logprob: -8.217268943786621
    10. 'ds' → logprob: -9.842268943786621

Token 2309: ' Else' (ID: 42978)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2732207775115967
    2. 'dist' → logprob: -2.2732207775115967
    3. '#' → logprob: -2.5232207775115967
    4. 'c' → logprob: -3.2732207775115967
    5. 'corn' → logprob: -5.273221015930176
    6. 'return' → logprob: -5.523221015930176
    7. 'res' → logprob: -5.773221015930176
    8. '   ' → logprob: -5.898221015930176
    9. 'points' → logprob: -7.148221015930176
    10. 'p' → logprob: -7.523221015930176

Token 2310: ' dist' (ID: 3601)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4812011122703552
    2. '   ' → logprob: -1.231201171875
    3. 'dist' → logprob: -2.856201171875
    4. ' d' → logprob: -4.231201171875
    5. 'return' → logprob: -4.731201171875
    6. 'p' → logprob: -5.731201171875
    7. '#' → logprob: -6.231201171875
    8. 'res' → logprob: -6.356201171875
    9. ' return' → logprob: -7.106201171875
    10. ' dist' → logprob: -8.231201171875

Token 2311: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8437365293502808
    2. '   ' → logprob: -1.3437365293502808
    3. '_points' → logprob: -2.2187366485595703
    4. '=' → logprob: -2.9687366485595703
    5. ' =' → logprob: -3.0937366485595703
    6. '_point' → logprob: -3.4687366485595703
    7. '1' → logprob: -3.9687366485595703
    8. '_candidates' → logprob: -4.21873664855957
    9. '_x' → logprob: -4.71873664855957
    10. '_pts' → logprob: -5.34373664855957

Token 2312: ' minimal' (ID: 19957)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.771655115589965e-05
    2. ' min' → logprob: -11.500018119812012
    3. 'minimum' → logprob: -12.375018119812012
    4. '   ' → logprob: -13.125018119812012
    5. 'dist' → logprob: -14.000018119812012
    6. '	min' → logprob: -15.375018119812012
    7. '
' → logprob: -16.375017166137695
    8. 'float' → logprob: -16.500017166137695
    9. ' ' → logprob: -18.250017166137695
    10. '  ' → logprob: -18.875017166137695

Token 2313: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.016542542725801468
    2. 'distance' → logprob: -4.891542434692383
    3. 'return' → logprob: -5.391542434692383
    4. 'd' → logprob: -5.766542434692383
    5. '(dist' → logprob: -7.641542434692383
    6. '(
' → logprob: -8.516542434692383
    7. 'dx' → logprob: -9.016542434692383
    8. 'def' → logprob: -9.391542434692383
    9. ' dist' → logprob: -9.516542434692383
    10. '#' → logprob: -10.516542434692383

Token 2314: ' between' (ID: 2870)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34760186076164246
    2. 'to' → logprob: -1.5976018905639648
    3. ' to' → logprob: -3.347601890563965
    4. 'between' → logprob: -3.597601890563965
    5. 'from' → logprob: -4.472601890563965
    6. 'return' → logprob: -5.347601890563965
    7. '```' → logprob: -5.972601890563965
    8. ' between' → logprob: -5.972601890563965
    9. '(
' → logprob: -6.722601890563965
    10. '
' → logprob: -6.722601890563965

Token 2315: ' segment' (ID: 14806)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.05457282066345215
    2. 'segment' → logprob: -4.054573059082031
    3. 'x' → logprob: -5.054573059082031
    4. 'dist' → logprob: -5.179573059082031
    5. 'segments' → logprob: -5.554573059082031
    6. '((' → logprob: -5.554573059082031
    7. '#' → logprob: -5.679573059082031
    8. 'the' → logprob: -5.679573059082031
    9. 'math' → logprob: -6.054573059082031
    10. 'seg' → logprob: -6.304573059082031

Token 2316: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.0024518726859241724
    2. ' and' → logprob: -6.1274518966674805
    3. 'to' → logprob: -9.00245189666748
    4. '   ' → logprob: -10.25245189666748
    5. 'point' → logprob: -10.62745189666748
    6. 'start' → logprob: -10.87745189666748
    7. '((' → logprob: -11.50245189666748
    8. 'endpoint' → logprob: -11.50245189666748
    9. 'points' → logprob: -11.75245189666748
    10. 'end' → logprob: -11.87745189666748

Token 2317: ' rectangle' (ID: 45808)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.6365274786949158
    2. '(min' → logprob: -0.7615274786949158
    3. ' (' → logprob: -7.1365275382995605
    4. '((' → logprob: -7.3865275382995605
    5. '[(' → logprob: -7.3865275382995605
    6. '(' → logprob: -7.6365275382995605
    7. '(rx' → logprob: -7.7615275382995605
    8. '(rect' → logprob: -8.636527061462402
    9. '(max' → logprob: -8.761527061462402
    10. 'min' → logprob: -8.886527061462402

Token 2318: ' edges' (ID: 22569)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3103012144565582
    2. 'd' → logprob: -1.4353011846542358
    3. 'p' → logprob: -4.310301303863525
    4. 'dist' → logprob: -4.810301303863525
    5. 'corn' → logprob: -6.310301303863525
    6. 'px' → logprob: -6.685301303863525
    7. '#' → logprob: -6.935301303863525
    8. 'return' → logprob: -6.935301303863525
    9. 'points' → logprob: -7.685301303863525
    10. 'c' → logprob: -8.060300827026367

Token 2319: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10784806311130524
    2. 'edges' → logprob: -2.4828481674194336
    3. 'rect' → logprob: -5.232848167419434
    4. '
' → logprob: -5.357848167419434
    5. 'dist' → logprob: -5.607848167419434
    6. ' edges' → logprob: -5.982848167419434
    7. 'edge' → logprob: -6.982848167419434
    8. '    
' → logprob: -7.357848167419434
    9. 'min' → logprob: -8.482848167419434
    10. '#' → logprob: -9.232848167419434

Token 2320: ' vertices' (ID: 38360)
  Prédit: 'corn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'corn' → logprob: -0.008421548642218113
    2. 'points' → logprob: -5.383421421051025
    3. 'corner' → logprob: -6.008421421051025
    4. 'vertices' → logprob: -7.633421421051025
    5. 'rectangle' → logprob: -7.883421421051025
    6. 'point' → logprob: -8.133421897888184
    7. '#' → logprob: -9.008421897888184
    8. ' corners' → logprob: -10.633421897888184
    9. '
' → logprob: -11.758421897888184
    10. 'dist' → logprob: -11.883421897888184

Token 2321: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01683867536485195
    2. '
' → logprob: -5.141838550567627
    3. 'points' → logprob: -5.891838550567627
    4. 'dist' → logprob: -6.141838550567627
    5. 'edges' → logprob: -6.141838550567627
    6. '    
' → logprob: -6.266838550567627
    7. 'd' → logprob: -7.766838550567627
    8. 'vertices' → logprob: -8.016839027404785
    9. '#' → logprob: -8.141839027404785
    10. 'pts' → logprob: -8.766839027404785

Token 2322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008579470217227936
    2. 'dist' → logprob: -6.258579254150391
    3. 'points' → logprob: -6.633579254150391
    4. 'edges' → logprob: -6.633579254150391
    5. 'min' → logprob: -7.383579254150391
    6. 'd' → logprob: -7.383579254150391
    7. 'corn' → logprob: -7.383579254150391
    8. 'pts' → logprob: -7.508579254150391
    9. '#' → logprob: -7.633579254150391
    10. 'rect' → logprob: -8.13357925415039

Token 2323: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.0494029521942139
    2. 'corn' → logprob: -1.2994029521942139
    3. 'dist' → logprob: -1.5494029521942139
    4. 'd' → logprob: -2.674402952194214
    5. '#' (adapté à ' #') → logprob: -2.924402952194214
    6. 'edges' → logprob: -3.924402952194214
    7. 'points' → logprob: -5.049403190612793
    8. 'rect' → logprob: -5.174403190612793
    9. 'corner' → logprob: -6.299403190612793
    10. 'res' → logprob: -6.299403190612793

Token 2324: ' ' (ID: 220)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.1421607732772827
    2. 'corn' → logprob: -1.6421607732772827
    3. 'dist' → logprob: -2.0171608924865723
    4. '#' → logprob: -2.1421608924865723
    5. 'rect' → logprob: -2.2671608924865723
    6. 'edges' → logprob: -2.6421608924865723
    7. 'd' → logprob: -3.3921608924865723
    8. 'def' → logprob: -4.517160892486572
    9. 'points' → logprob: -5.517160892486572
    10. 'verts' → logprob: -5.642160892486572

Token 2325: '1' (ID: 16)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rect' → logprob: -1.1698750257492065
    2. 'dist' → logprob: -1.5448750257492065
    3. '#' → logprob: -1.9198750257492065
    4. 'corn' → logprob: -2.169875144958496
    5. 'def' → logprob: -2.669875144958496
    6. 'c' → logprob: -3.044875144958496
    7. 'd' → logprob: -3.294875144958496
    8. 'edges' → logprob: -3.794875144958496
    9. 'points' → logprob: -4.794875144958496
    10. 'verts' → logprob: -4.919875144958496

Token 2326: ')' (ID: 8)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6690934896469116
    2. '   ' → logprob: -1.4190934896469116
    3. 'dist' → logprob: -2.669093608856201
    4. 'px' → logprob: -3.169093608856201
    5. 'p' → logprob: -3.419093608856201
    6. ' px' → logprob: -3.919093608856201
    7. 'def' → logprob: -4.294093608856201
    8. ' #' → logprob: -4.419093608856201
    9. 'points' → logprob: -4.544093608856201
    10. ' corners' → logprob: -4.919093608856201

Token 2327: ' Check' (ID: 6208)
  Prédit: 'corn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'corn' → logprob: -1.0535942316055298
    2. 'dist' → logprob: -1.1785942316055298
    3. '#' → logprob: -2.0535941123962402
    4. 'd' → logprob: -2.1785941123962402
    5. 'points' → logprob: -3.6785941123962402
    6. 'c' → logprob: -3.9285941123962402
    7. 'rect' → logprob: -3.9285941123962402
    8. 'p' → logprob: -4.80359411239624
    9. 'Check' → logprob: -5.30359411239624
    10. 'pts' → logprob: -5.30359411239624

Token 2328: ' all' (ID: 722)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8013342022895813
    2. 'corn' → logprob: -1.4263341426849365
    3. '#' → logprob: -2.3013341426849365
    4. 'points' → logprob: -2.8013341426849365
    5. 'segment' → logprob: -3.3013341426849365
    6. 'vertices' → logprob: -3.3013341426849365
    7. ' corners' → logprob: -4.176334381103516
    8. 'point' → logprob: -4.301334381103516
    9. 'distance' → logprob: -4.801334381103516
    10. 'rect' → logprob: -4.801334381103516

Token 2329: ' segment' (ID: 14806)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.650375247001648
    2. '[
' → logprob: -0.900375247001648
    3. '#' → logprob: -4.6503753662109375
    4. '[' → logprob: -4.6503753662109375
    5. 'corn' → logprob: -4.6503753662109375
    6. '(rect' → logprob: -4.6503753662109375
    7. 'rect' → logprob: -4.7753753662109375
    8. '((' → logprob: -4.9003753662109375
    9. '[((' → logprob: -5.1503753662109375
    10. 'vertices' → logprob: -5.6503753662109375

Token 2330: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.596845805644989
    2. '_points' → logprob: -1.8468458652496338
    3. 'end' → logprob: -2.221845865249634
    4. 'vertices' → logprob: -3.596845865249634
    5. 'ends' → logprob: -3.846845865249634
    6. '   ' → logprob: -3.971845865249634
    7. '_end' → logprob: -4.221845626831055
    8. ' points' → logprob: -4.221845626831055
    9. 'edges' → logprob: -4.221845626831055
    10. ' endpoints' → logprob: -4.221845626831055

Token 2331: ' to' (ID: 316)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4972797930240631
    2. '   ' → logprob: -1.6222797632217407
    3. 'and' → logprob: -2.9972798824310303
    4. 'points' → logprob: -3.2472798824310303
    5. 'for' → logprob: -3.9972798824310303
    6. ' and' → logprob: -4.497279644012451
    7. 'if' → logprob: -4.497279644012451
    8. 'c' → logprob: -4.622279644012451
    9. 'd' → logprob: -4.872279644012451
    10. ',' → logprob: -4.872279644012451

Token 2332: ' rectangle' (ID: 45808)
  Prédit: 'rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rectangle' → logprob: -0.9449079632759094
    2. 'rect' → logprob: -1.3199079036712646
    3. 'dist' → logprob: -1.6949079036712646
    4. '(rect' → logprob: -2.8199079036712646
    5. 'min' → logprob: -2.9449079036712646
    6. '[min' → logprob: -4.194908142089844
    7. '(min' → logprob: -4.319908142089844
    8. 'distance' → logprob: -5.069908142089844
    9. 'point' → logprob: -5.569908142089844
    10. ' rectangle' → logprob: -6.069908142089844

Token 2333: ':
' (ID: 734)
  Prédit: 'corn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'corn' → logprob: -0.14972662925720215
    2. '   ' → logprob: -2.899726629257202
    3. 'dist' → logprob: -3.024726629257202
    4. ' corners' → logprob: -4.524726867675781
    5. 'vertices' → logprob: -4.649726867675781
    6. 'corner' → logprob: -5.524726867675781
    7. 'points' → logprob: -5.649726867675781
    8. 'd' → logprob: -6.274726867675781
    9. '#' → logprob: -6.649726867675781
    10. 'for' → logprob: -6.774726867675781

Token 2334: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9407447576522827
    2. 'dist' → logprob: -0.9407447576522827
    3. 'd' → logprob: -1.9407447576522827
    4. 'return' → logprob: -2.9407448768615723
    5. 'p' → logprob: -4.565744876861572
    6. 'min' → logprob: -6.190744876861572
    7. '```' → logprob: -6.315744876861572
    8. 'res' → logprob: -6.315744876861572
    9. 'points' → logprob: -6.565744876861572
    10. 'pts' → logprob: -6.815744876861572

Token 2335: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.4647709131240845
    2. 'dist' → logprob: -1.0897709131240845
    3. 'res' → logprob: -4.339770793914795
    4. 'min' → logprob: -4.714770793914795
    5. '   ' → logprob: -4.839770793914795
    6. 'return' → logprob: -5.839770793914795
    7. 'best' → logprob: -7.214770793914795
    8. 'ans' → logprob: -7.964770793914795
    9. 'mind' → logprob: -8.089771270751953
    10. 'c' → logprob: -8.214771270751953

Token 2336: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.6768656969070435
    2. 'p' → logprob: -1.6768656969070435
    3. 'ist' → logprob: -1.6768656969070435
    4. 'ists' → logprob: -1.6768656969070435
    5. '1' → logprob: -1.9268656969070435
    6. ' =' → logprob: -3.051865577697754
    7. 's' → logprob: -3.301865577697754
    8. '_p' → logprob: -4.426865577697754
    9. 'min' → logprob: -5.551865577697754
    10. '=min' → logprob: -6.676865577697754

Token 2337: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804665803909302
    2. ' =' → logprob: -3.2880465984344482
    3. '=min' → logprob: -13.288046836853027
    4. '=
' → logprob: -13.788046836853027
    5. '1' → logprob: -14.288046836853027
    6. '=d' → logprob: -14.413046836853027
    7. '=max' → logprob: -15.038046836853027
    8. 's' → logprob: -15.413046836853027
    9. ',' → logprob: -15.788046836853027
    10. 'dist' → logprob: -15.913046836853027

Token 2338: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0004362718027550727
    2. 'min' → logprob: -8.375435829162598
    3. ' dist' → logprob: -8.500435829162598
    4. 'float' → logprob: -14.375435829162598
    5. '   ' → logprob: -14.750435829162598
    6. ' min' → logprob: -15.000435829162598
    7. 'math' → logprob: -15.125435829162598
    8. 'max' → logprob: -15.625435829162598
    9. '0' → logprob: -15.875435829162598
    10. 'distance' → logprob: -16.375436782836914

Token 2339: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.031018516048789024
    2. '_segment' → logprob: -3.9060184955596924
    3. 'point' → logprob: -4.6560187339782715
    4. '(x' → logprob: -7.5310187339782715
    5. 'segment' → logprob: -8.031018257141113
    6. 'x' → logprob: -11.406018257141113
    7. 'seg' → logprob: -12.156018257141113
    8. 'Point' → logprob: -12.281018257141113
    9. '((' → logprob: -12.406018257141113
    10. '(' → logprob: -12.531018257141113

Token 2340: '_rectangle' (ID: 166619)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.41968974471092224
    2. '_segment' → logprob: -1.6696897745132446
    3. '_rectangle' → logprob: -2.794689655303955
    4. 'x' → logprob: -3.044689655303955
    5. 'segment' → logprob: -3.419689655303955
    6. 'rectangle' → logprob: -5.669689655303955
    7. 'seg' → logprob: -5.794689655303955
    8. 'rect' → logprob: -6.794689655303955
    9. 'dist' → logprob: -6.919689655303955
    10. 'd' → logprob: -7.419689655303955

Token 2341: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.043039385229349136
    2. 'x' → logprob: -3.168039321899414
    3. '(' → logprob: -10.293039321899414
    4. '   ' → logprob: -13.168039321899414
    5. '(
' → logprob: -13.543039321899414
    6. ' (' → logprob: -14.168039321899414
    7. '
' → logprob: -14.668039321899414
    8. ' x' → logprob: -14.668039321899414
    9. '```' → logprob: -15.168039321899414
    10. '((' → logprob: -15.668039321899414

Token 2342: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09570889919996262
    2. 'x' → logprob: -2.9707088470458984
    3. 'y' → logprob: -3.2207088470458984
    4. 's' → logprob: -11.470708847045898
    5. ' y' → logprob: -11.720708847045898
    6. '=' → logprob: -11.720708847045898
    7. '(x' → logprob: -11.845708847045898
    8. '   ' → logprob: -11.845708847045898
    9. ' x' → logprob: -12.095708847045898
    10. ',y' → logprob: -12.095708847045898

Token 2343: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08913139253854752
    2. ',y' → logprob: -2.4641313552856445
    3. ' ,' → logprob: -8.964131355285645
    4. 'y' → logprob: -10.339131355285645
    5. '1' → logprob: -11.714131355285645
    6. ',
' → logprob: -11.839131355285645
    7. 'd' → logprob: -11.964131355285645
    8. '```' → logprob: -13.214131355285645
    9. ',d' → logprob: -13.214131355285645
    10. '   ' → logprob: -13.464131355285645

Token 2344: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. 'min' → logprob: -14.875000953674316
    3. ',' → logprob: -16.375
    4. '2' → logprob: -16.5
    5. 'y' → logprob: -16.5
    6. ' ' → logprob: -18.25
    7. '
' → logprob: -18.75
    8. '[' → logprob: -19.0
    9. 'x' → logprob: -19.5
    10. 'def' → logprob: -19.8125

Token 2345: ',min' (ID: 129117)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13489171862602234
    2. 'min' → logprob: -2.5098917484283447
    3. ',min' → logprob: -3.1348917484283447
    4. ' min' → logprob: -7.259891510009766
    5. '(min' → logprob: -7.509891510009766
    6. ' ,' → logprob: -9.384891510009766
    7. '   ' → logprob: -10.134891510009766
    8. '=min' → logprob: -11.259891510009766
    9. '[min' → logprob: -11.884891510009766
    10. ',
' → logprob: -13.259891510009766

Token 2346: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1637164789135568e-05
    2. 'min' → logprob: -11.500011444091797
    3. '(min' → logprob: -14.625011444091797
    4. 'y' → logprob: -15.000011444091797
    5. 'xmin' → logprob: -15.750011444091797
    6. '1' → logprob: -15.875011444091797
    7. '=min' → logprob: -15.875011444091797
    8. '   ' → logprob: -16.375011444091797
    9. '0' → logprob: -16.875011444091797
    10. ' min' → logprob: -16.875011444091797

Token 2347: ',min' (ID: 129117)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008798925206065178
    2. ',min' → logprob: -4.758799076080322
    3. ' ,' → logprob: -9.008798599243164
    4. ',y' → logprob: -9.883798599243164
    5. 'min' → logprob: -12.758798599243164
    6. ',m' → logprob: -12.883798599243164
    7. ',
' → logprob: -13.258798599243164
    8. ',max' → logprob: -14.008798599243164
    9. ',n' → logprob: -14.508798599243164
    10. ',user' → logprob: -15.008798599243164

Token 2348: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -3.531315314830863e-06
    2. 'x' → logprob: -12.875003814697266
    3. 'min' → logprob: -14.750003814697266
    4. 'iy' → logprob: -16.000003814697266
    5. '1' → logprob: -16.375003814697266
    6. 'iny' → logprob: -16.500003814697266
    7. '0' → logprob: -17.000003814697266
    8. '```' → logprob: -17.250003814697266
    9. ' ' → logprob: -17.375003814697266
    10. '   ' → logprob: -17.625003814697266

Token 2349: ',max' (ID: 81466)
  Prédit: ',max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',max' → logprob: -0.17212775349617004
    2. 'max' → logprob: -2.4221277236938477
    3. ',' → logprob: -2.6721277236938477
    4. ',min' → logprob: -8.297127723693848
    5. 'min' → logprob: -10.672127723693848
    6. ' max' → logprob: -11.297127723693848
    7. ' ,' → logprob: -12.797127723693848
    8. '
' → logprob: -13.672127723693848
    9. ',
' → logprob: -13.797127723693848
    10. '```' → logprob: -14.797127723693848

Token 2350: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0280383548888494e-06
    2. 'max' → logprob: -14.000000953674316
    3. '```' → logprob: -17.125001907348633
    4. '
' → logprob: -18.125001907348633
    5. '(max' → logprob: -18.500001907348633
    6. 'y' → logprob: -18.875001907348633
    7. 'xmin' → logprob: -18.875001907348633
    8. '=max' → logprob: -19.375001907348633
    9. '0' → logprob: -19.625001907348633
    10. 'mx' → logprob: -19.750001907348633

Token 2351: ',max' (ID: 81466)
  Prédit: ',max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',max' → logprob: -0.02493954263627529
    2. 'max' → logprob: -3.77493953704834
    3. ',' → logprob: -6.39993953704834
    4. ',min' → logprob: -10.89993953704834
    5. ',y' → logprob: -11.64993953704834
    6. ',m' → logprob: -13.89993953704834
    7. ',my' → logprob: -13.89993953704834
    8. 'may' → logprob: -14.52493953704834
    9. 'm' → logprob: -15.02493953704834
    10. '```' → logprob: -15.77493953704834

Token 2352: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.011328031308948994
    2. 'max' → logprob: -4.511328220367432
    3. 'x' → logprob: -8.261327743530273
    4. '(max' → logprob: -11.886327743530273
    5. ' ymax' → logprob: -11.886327743530273
    6. 'ym' → logprob: -13.011327743530273
    7. '=max' → logprob: -13.761327743530273
    8. ' max' → logprob: -13.761327743530273
    9. '[max' → logprob: -14.386327743530273
    10. ',max' → logprob: -14.511327743530273

Token 2353: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10446550697088242
    2. ')' → logprob: -2.3544654846191406
    3. '   ' → logprob: -5.479465484619141
    4. ')
' → logprob: -9.97946548461914
    5. 'd' → logprob: -10.72946548461914
    6. ')d' → logprob: -11.97946548461914
    7. ' ' → logprob: -13.47946548461914
    8. '
' → logprob: -14.60446548461914
    9. ' )
' → logprob: -14.85446548461914
    10. ')

' → logprob: -14.97946548461914

Token 2354: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02990819327533245
    2. '   ' → logprob: -3.5299081802368164
    3. ' d' → logprob: -9.654908180236816
    4. '```' → logprob: -9.779908180236816
    5. '
' → logprob: -10.279908180236816
    6. 'def' → logprob: -13.904908180236816
    7. ',' → logprob: -14.779908180236816
    8. '``' → logprob: -15.154908180236816
    9. '_d' → logprob: -15.529908180236816
    10. '`' → logprob: -15.654908180236816

Token 2355: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0007113590254448354
    2. '   ' → logprob: -7.250711441040039
    3. ' d' → logprob: -13.625711441040039
    4. '
' → logprob: -16.62571144104004
    5. '```' → logprob: -17.00071144104004
    6. ' ' → logprob: -18.87571144104004
    7. 'def' → logprob: -19.12571144104004
    8. '  ' → logprob: -19.62571144104004
    9. '	d' → logprob: -20.00071144104004
    10. '    
' → logprob: -20.25071144104004

Token 2356: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.306760805164231e-05
    2. '=' → logprob: -11.75001335144043
    3. ' =' → logprob: -13.25001335144043
    4. '   ' → logprob: -13.62501335144043
    5. ' ' → logprob: -13.87501335144043
    6. ',' → logprob: -14.75001335144043
    7. '_' → logprob: -15.12501335144043
    8. '1' → logprob: -15.50001335144043
    9. '₂' → logprob: -16.50001335144043
    10. '=
' → logprob: -17.12501335144043

Token 2357: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2015969455242157
    2. '=' → logprob: -1.701596975326538
    3. '   ' → logprob: -9.451597213745117
    4. ',' → logprob: -9.701597213745117
    5. 'd' → logprob: -11.951597213745117
    6. ')' → logprob: -12.201597213745117
    7. '(x' → logprob: -12.326597213745117
    8. '(' → logprob: -12.451597213745117
    9. 'return' → logprob: -12.826597213745117
    10. ' ' → logprob: -12.951597213745117

Token 2358: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0010330495424568653
    2. ' dist' → logprob: -6.876032829284668
    3. '   ' → logprob: -16.626033782958984
    4. '	dist' → logprob: -17.001033782958984
    5. '(dist' → logprob: -17.251033782958984
    6. '
' → logprob: -18.001033782958984
    7. '_dist' → logprob: -18.501033782958984
    8. '.dist' → logprob: -18.501033782958984
    9. 'def' → logprob: -18.626033782958984
    10. 'Dist' → logprob: -19.376033782958984

Token 2359: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.0001600347168277949
    2. 'point' → logprob: -8.875160217285156
    3. '_segment' → logprob: -11.625160217285156
    4. '(x' → logprob: -11.875160217285156
    5. 'Point' → logprob: -13.125160217285156
    6. 'x' → logprob: -13.125160217285156
    7. 'segment' → logprob: -16.125160217285156
    8. '2' → logprob: -16.750160217285156
    9. '_points' → logprob: -17.500160217285156
    10. '
' → logprob: -17.500160217285156

Token 2360: '_rectangle' (ID: 166619)
  Prédit: '_rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rectangle' → logprob: -0.4751262664794922
    2. '(x' → logprob: -1.1001262664794922
    3. 'x' → logprob: -3.350126266479492
    4. 'rectangle' → logprob: -4.600126266479492
    5. 'Rectangle' → logprob: -9.350126266479492
    6. 'rect' → logprob: -9.350126266479492
    7. '```' → logprob: -10.725126266479492
    8. '(' → logprob: -11.850126266479492
    9. 'segment' → logprob: -12.350126266479492
    10. '2' → logprob: -12.475126266479492

Token 2361: '(x' (ID: 4061)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011600980535149574
    2. '(x' → logprob: -4.511600971221924
    3. ' x' → logprob: -7.511600971221924
    4. '   ' → logprob: -12.136601448059082
    5. '	x' → logprob: -14.636601448059082
    6. ' ' → logprob: -15.511601448059082
    7. '0' → logprob: -16.511600494384766
    8. ' (' → logprob: -17.761600494384766
    9. '2' → logprob: -18.011600494384766
    10. '(' → logprob: -18.261600494384766

Token 2362: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3856492842023727e-06
    2. 'x' → logprob: -14.500000953674316
    3. '1' → logprob: -15.750000953674316
    4. '```' → logprob: -15.750000953674316
    5. '
' → logprob: -15.875000953674316
    6. ' ' → logprob: -16.125001907348633
    7. '``' → logprob: -17.125001907348633
    8. '(x' → logprob: -17.375001907348633
    9. '=' → logprob: -17.437501907348633
    10. '   ' → logprob: -17.500001907348633

Token 2363: ',y' (ID: 16103)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.16081522405147552
    2. ',y' → logprob: -1.9108152389526367
    3. 'x' → logprob: -8.160815238952637
    4. ',' → logprob: -8.285815238952637
    5. '(y' → logprob: -10.285815238952637
    6. '(x' → logprob: -12.285815238952637
    7. '
' → logprob: -12.660815238952637
    8. '	y' → logprob: -12.785815238952637
    9. ''y' → logprob: -12.910815238952637
    10. ' y' → logprob: -13.160815238952637

Token 2364: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3351706564426422
    2. '2' → logprob: -1.5851706266403198
    3. 'min' → logprob: -3.7101707458496094
    4. 'y' → logprob: -3.9601707458496094
    5. 'max' → logprob: -3.9601707458496094
    6. 'py' → logprob: -4.460170745849609
    7. 'x' → logprob: -5.960170745849609
    8. ',min' → logprob: -7.210170745849609
    9. ',max' → logprob: -7.335170745849609
    10. ',' → logprob: -7.960170745849609

Token 2365: ',min' (ID: 129117)
  Prédit: ',min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',min' → logprob: -0.00013011827832087874
    2. ',' → logprob: -9.500129699707031
    3. 'min' → logprob: -9.875129699707031
    4. ',max' → logprob: -12.750129699707031
    5. ' ,' → logprob: -15.125129699707031
    6. ',
' → logprob: -16.12512969970703
    7. ',m' → logprob: -16.37512969970703
    8. '	min' → logprob: -16.87512969970703
    9. ' min' → logprob: -17.12512969970703
    10. '=min' → logprob: -17.37512969970703

Token 2366: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12953831255435944
    2. 'y' → logprob: -2.1295382976531982
    3. 'max' → logprob: -6.004538536071777
    4. 'ay' → logprob: -9.879538536071777
    5. 'ax' → logprob: -10.754538536071777
    6. ' max' → logprob: -11.004538536071777
    7. ' ymax' → logprob: -11.129538536071777
    8. 'ry' → logprob: -12.379538536071777
    9. '(max' → logprob: -12.629538536071777
    10. 'ey' → logprob: -12.879538536071777

Token 2367: ',min' (ID: 129117)
  Prédit: ',min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',min' → logprob: -0.0016278100665658712
    2. ',max' → logprob: -6.5016279220581055
    3. ',' → logprob: -9.001627922058105
    4. 'min' → logprob: -13.376627922058105
    5. ',m' → logprob: -15.001627922058105
    6. ',my' → logprob: -15.126627922058105
    7. ' ,' → logprob: -16.75162696838379
    8. '[min' → logprob: -17.75162696838379
    9. ',num' → logprob: -18.00162696838379
    10. ',y' → logprob: -18.25162696838379

Token 2368: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.011944987811148167
    2. 'max' → logprob: -4.761944770812988
    3. 'my' → logprob: -6.261944770812988
    4. 'x' → logprob: -8.261944770812988
    5. 'idy' → logprob: -8.261944770812988
    6. '1' → logprob: -8.761944770812988
    7. 'ry' → logprob: -8.886944770812988
    8. 'm' → logprob: -9.136944770812988
    9. 'iy' → logprob: -9.636944770812988
    10. 'ay' → logprob: -9.636944770812988

Token 2369: ',max' (ID: 81466)
  Prédit: ',max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',max' → logprob: -0.00862036645412445
    2. 'max' → logprob: -4.758620262145996
    3. ',' → logprob: -12.133620262145996
    4. ' max' → logprob: -15.758620262145996
    5. '|max' → logprob: -16.258621215820312
    6. '[max' → logprob: -16.383621215820312
    7. '	max' → logprob: -16.508621215820312
    8. '
' → logprob: -17.383621215820312
    9. '(max' → logprob: -17.508621215820312
    10. '=max' → logprob: -17.633621215820312

Token 2370: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.016404185444116592
    2. 'max' → logprob: -4.141404151916504
    3. 'y' → logprob: -8.391404151916504
    4. '2' → logprob: -8.891404151916504
    5. ',max' → logprob: -12.891404151916504
    6. '=max' → logprob: -14.141404151916504
    7. '(max' → logprob: -14.266404151916504
    8. 'mx' → logprob: -14.766404151916504
    9. 'z' → logprob: -15.016404151916504
    10. 'rx' → logprob: -15.266404151916504

Token 2371: ',max' (ID: 81466)
  Prédit: ',max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',max' → logprob: -4.215330409351736e-05
    2. ',' → logprob: -10.125041961669922
    3. 'max' → logprob: -13.625041961669922
    4. ',y' → logprob: -14.250041961669922
    5. ',min' → logprob: -16.500041961669922
    6. ' ,' → logprob: -17.625041961669922
    7. ',m' → logprob: -18.125041961669922
    8. ',next' → logprob: -18.250041961669922
    9. ',my' → logprob: -18.250041961669922
    10. ',
' → logprob: -18.500041961669922

Token 2372: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00776029983535409
    2. 'max' → logprob: -4.882760524749756
    3. '5' → logprob: -9.632760047912598
    4. 'my' → logprob: -10.132760047912598
    5. ' ymax' → logprob: -11.257760047912598
    6. 'ym' → logprob: -11.507760047912598
    7. 'may' → logprob: -11.757760047912598
    8. 'x' → logprob: -12.507760047912598
    9. 'ymy' → logprob: -13.507760047912598
    10. '   ' → logprob: -13.507760047912598

Token 2373: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32365649938583374
    2. ')
' → logprob: -1.3236565589904785
    3. '   ' → logprob: -4.5736565589904785
    4. ')
' → logprob: -11.57365608215332
    5. '```' → logprob: -12.32365608215332
    6. ')return' → logprob: -13.44865608215332
    7. 'def' → logprob: -13.44865608215332
    8. 'return' → logprob: -13.69865608215332
    9. '
' → logprob: -14.44865608215332
    10. 'd' → logprob: -14.69865608215332

Token 2374: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02909800596535206
    2. '```' → logprob: -3.9040980339050293
    3. 'd' → logprob: -4.904098033905029
    4. '
' → logprob: -7.154098033905029
    5. '``' → logprob: -9.279097557067871
    6. 'return' → logprob: -9.404097557067871
    7. ' d' → logprob: -9.654097557067871
    8. ',' → logprob: -11.029097557067871
    9. '    
' → logprob: -11.029097557067871
    10. 'def' → logprob: -11.029097557067871

Token 2375: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.28713271021842957
    2. '   ' → logprob: -1.412132740020752
    3. 'def' → logprob: -5.787132740020752
    4. '```' → logprob: -6.162132740020752
    5. 'dist' → logprob: -7.912132740020752
    6. 'edges' → logprob: -8.787132263183594
    7. '#' → logprob: -9.037132263183594
    8. '
' → logprob: -10.537132263183594
    9. ' d' → logprob: -10.537132263183594
    10. 'min' → logprob: -10.662132263183594

Token 2376: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.026089640334248543
    2. '#' (adapté à ' #') → logprob: -5.026089668273926
    3. '   ' → logprob: -5.151089668273926
    4. 'dist' → logprob: -5.276089668273926
    5. 'rect' → logprob: -5.526089668273926
    6. 'edges' → logprob: -6.901089668273926
    7. 'def' → logprob: -7.276089668273926
    8. 'corn' → logprob: -7.401089668273926
    9. 'min' → logprob: -7.526089668273926
    10. 'ds' → logprob: -7.901089668273926

Token 2377: ' ' (ID: 220)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.46117082238197327
    2. '#' → logprob: -1.7111707925796509
    3. 'rect' → logprob: -2.0861709117889404
    4. 'def' → logprob: -3.2111709117889404
    5. 'edges' → logprob: -4.961170673370361
    6. 'dist' → logprob: -5.336170673370361
    7. '   ' → logprob: -5.336170673370361
    8. 'corn' → logprob: -6.086170673370361
    9. 'r' → logprob: -6.586170673370361
    10. 'corner' → logprob: -7.086170673370361

Token 2378: '2' (ID: 17)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.778785228729248
    2. 'd' → logprob: -0.903785228729248
    3. 'rect' → logprob: -2.278785228729248
    4. 'edges' → logprob: -4.153785228729248
    5. 'def' → logprob: -5.028785228729248
    6. 'dist' → logprob: -5.528785228729248
    7. 'corn' → logprob: -5.903785228729248
    8. 'edge' → logprob: -6.528785228729248
    9. 'r' → logprob: -7.153785228729248
    10. 'corner' → logprob: -7.653785228729248

Token 2379: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009105057455599308
    2. '   ' → logprob: -5.009105205535889
    3. '#' → logprob: -6.634105205535889
    4. ' )' → logprob: -7.759105205535889
    5. ' #' → logprob: -8.13410472869873
    6. ')#' → logprob: -8.88410472869873
    7. '0' → logprob: -9.25910472869873
    8. 'for' → logprob: -10.25910472869873
    9. ')
' → logprob: -11.00910472869873
    10. ' ' → logprob: -11.13410472869873

Token 2380: ' Check' (ID: 6208)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.9523415565490723
    2. '#' → logprob: -1.5773415565490723
    3. 'edges' → logprob: -1.8273415565490723
    4. 'edge' → logprob: -2.3273415565490723
    5. 'd' → logprob: -2.5773415565490723
    6. 'dist' → logprob: -2.9523415565490723
    7. 'def' → logprob: -5.202341556549072
    8. 'corn' → logprob: -5.202341556549072
    9. 'corner' → logprob: -5.702341556549072
    10. 'rectangle' → logprob: -6.577341556549072

Token 2381: ' rectangle' (ID: 45808)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.9790838956832886
    2. '#' → logprob: -1.6040838956832886
    3. 'segment' → logprob: -1.6040838956832886
    4. 'edges' → logprob: -2.604084014892578
    5. 'dist' → logprob: -2.604084014892578
    6. 'rectangle' → logprob: -3.104084014892578
    7. '   ' → logprob: -4.979084014892578
    8. 'for' → logprob: -5.604084014892578
    9. 'block' → logprob: -6.104084014892578
    10. 'points' → logprob: -6.229084014892578

Token 2382: ' corners' (ID: 39479)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.02201606146991253
    2. ' edges' → logprob: -3.8970160484313965
    3. '_edges' → logprob: -7.0220160484313965
    4. 'corn' → logprob: -8.147016525268555
    5. 'vertices' → logprob: -8.647016525268555
    6. 's' → logprob: -10.022016525268555
    7. '   ' → logprob: -10.522016525268555
    8. '#' → logprob: -11.397016525268555
    9. ' corners' → logprob: -11.397016525268555
    10. 'points' → logprob: -11.772016525268555

Token 2383: ' to' (ID: 316)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.1258467435836792
    2. '   ' → logprob: -1.2508467435836792
    3. 'd' → logprob: -1.7508467435836792
    4. 'corn' → logprob: -2.0008468627929688
    5. 'dist' → logprob: -3.2508468627929688
    6. '=' → logprob: -4.500846862792969
    7. 'corner' → logprob: -4.500846862792969
    8. ' corners' → logprob: -5.500846862792969
    9. ' =' → logprob: -5.750846862792969
    10. 'r' → logprob: -5.875846862792969

Token 2384: ' segment' (ID: 14806)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.7287997007369995
    2. 'seg' → logprob: -1.3537997007369995
    3. 'dist' → logprob: -1.9787997007369995
    4. 'segment' → logprob: -2.978799819946289
    5. '[(' → logprob: -3.853799819946289
    6. '(' → logprob: -4.228799819946289
    7. '(seg' → logprob: -4.353799819946289
    8. '((' → logprob: -4.728799819946289
    9. 'x' → logprob: -5.853799819946289
    10. 'def' → logprob: -5.978799819946289

Token 2385: '
' (ID: 198)
  Prédit: 'corn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'corn' → logprob: -0.08945866674184799
    2. '   ' → logprob: -3.589458703994751
    3. ' corners' → logprob: -4.339458465576172
    4. 'd' → logprob: -4.464458465576172
    5. 'rect' → logprob: -4.464458465576172
    6. 'dist' → logprob: -4.964458465576172
    7. 'corner' → logprob: -5.839458465576172
    8. 'cx' → logprob: -5.839458465576172
    9. 'rx' → logprob: -6.214458465576172
    10. 'c' → logprob: -6.339458465576172

Token 2386: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19092519581317902
    2. 'c' → logprob: -2.565925121307373
    3. 'd' → logprob: -3.315925121307373
    4. 'corn' → logprob: -3.315925121307373
    5. 'dist' → logprob: -4.565925121307373
    6. 'r' → logprob: -5.690925121307373
    7. 'cx' → logprob: -6.065925121307373
    8. 'corner' → logprob: -6.565925121307373
    9. ' corners' → logprob: -6.690925121307373
    10. 'points' → logprob: -6.940925121307373

Token 2387: ' corners' (ID: 39479)
  Prédit: 'corn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'corn' → logprob: -0.008565874770283699
    2. 'rect' → logprob: -5.883565902709961
    3. 'corner' → logprob: -6.758565902709961
    4. 'rc' → logprob: -6.883565902709961
    5. 'd' → logprob: -7.008565902709961
    6. '   ' → logprob: -7.008565902709961
    7. 'c' → logprob: -7.633565902709961
    8. 'dist' → logprob: -7.758565902709961
    9. 'cx' → logprob: -8.008565902709961
    10. 'dc' → logprob: -8.883565902709961

Token 2388: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759480595588684
    2. '=' → logprob: -0.8259480595588684
    3. '=[
' → logprob: -13.075947761535645
    4. 's' → logprob: -13.325947761535645
    5. '=[' → logprob: -13.450947761535645
    6. '=
' → logprob: -13.950947761535645
    7. '   ' → logprob: -14.075947761535645
    8. 'dist' → logprob: -14.325947761535645
    9. '_points' → logprob: -15.825947761535645
    10. 'c' → logprob: -15.950947761535645

Token 2389: ' [(' (ID: 43900)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.25208815932273865
    2. '[(' → logprob: -1.502088189125061
    3. '[' → logprob: -8.75208854675293
    4. '[((' → logprob: -14.00208854675293
    5. ' [
' → logprob: -16.00208854675293
    6. ' [(' → logprob: -17.62708854675293
    7. '[min' → logprob: -18.12708854675293
    8. '   ' → logprob: -18.50208854675293
    9. ' [' → logprob: -21.50208854675293
    10. '[\' → logprob: -22.62708854675293

Token 2390: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0004365102213341743
    2. '(min' → logprob: -7.750436305999756
    3. ' min' → logprob: -12.375436782836914
    4. '[min' → logprob: -13.875436782836914
    5. '   ' → logprob: -14.500436782836914
    6. 'max' → logprob: -16.000436782836914
    7. '	min' → logprob: -17.500436782836914
    8. ',min' → logprob: -18.000436782836914
    9. '(' → logprob: -18.375436782836914
    10. '
' → logprob: -18.625436782836914

Token 2391: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: 0.0
    2. '```' → logprob: -19.0
    3. 'xmin' → logprob: -19.5
    4. '<|end|>' → logprob: -19.75
    5. ',' → logprob: -19.875
    6. '(x' → logprob: -20.0
    7. '#' → logprob: -20.375
    8. '[' → logprob: -20.75
    9. '(' → logprob: -20.875
    10. '   ' → logprob: -21.0

Token 2392: ',min' (ID: 129117)
  Prédit: ',min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',min' → logprob: -0.16026870906352997
    2. ',' → logprob: -1.9102686643600464
    3. ' ,' → logprob: -10.285268783569336
    4. ',max' → logprob: -12.285268783569336
    5. ',m' → logprob: -12.285268783569336
    6. 'min' → logprob: -14.910268783569336
    7. ',n' → logprob: -15.285268783569336
    8. ',
' → logprob: -15.535268783569336
    9. ',my' → logprob: -15.910268783569336
    10. '[min' → logprob: -16.035268783569336

Token 2393: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0007347009377554059
    2. 'min' → logprob: -7.250734806060791
    3. 'nyi' → logprob: -12.250734329223633
    4. 'iy' → logprob: -12.750734329223633
    5. 'max' → logprob: -12.875734329223633
    6. ' ymin' → logprob: -13.125734329223633
    7. 'ny' → logprob: -13.250734329223633
    8. 'x' → logprob: -13.375734329223633
    9. 'iny' → logprob: -13.500734329223633
    10. ',' → logprob: -13.750734329223633

Token 2394: '),' (ID: 936)
  Prédit: '),('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.45926374197006226
    2. '),' → logprob: -1.209263801574707
    3. ',' → logprob: -2.834263801574707
    4. ',max' → logprob: -5.334263801574707
    5. ',min' → logprob: -5.334263801574707
    6. ',),' → logprob: -7.209263801574707
    7. ',(' → logprob: -7.834263801574707
    8. '),
' → logprob: -8.334263801574707
    9. '   ' → logprob: -11.459263801574707
    10. ',),
' → logprob: -11.584263801574707

Token 2395: ' (' (ID: 350)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.07898463308811188
    2. '(max' → logprob: -2.5789847373962402
    3. ' (' → logprob: -9.328984260559082
    4. '   ' → logprob: -12.703984260559082
    5. '(' → logprob: -13.078984260559082
    6. '[min' → logprob: -15.078984260559082
    7. '       ' → logprob: -15.453984260559082
    8. '(mx' → logprob: -16.2039852142334
    9. ' ' → logprob: -16.4539852142334
    10. '(rx' → logprob: -17.0789852142334

Token 2396: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4741138815879822
    2. 'min' → logprob: -0.9741138815879822
    3. ' max' → logprob: -11.349113464355469
    4. '(min' → logprob: -11.724113464355469
    5. '(max' → logprob: -11.849113464355469
    6. ' min' → logprob: -11.974113464355469
    7. '   ' → logprob: -13.974113464355469
    8. '[min' → logprob: -13.974113464355469
    9. 'rx' → logprob: -14.724113464355469
    10. '[max' → logprob: -15.474113464355469

Token 2397: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.320199877838604e-07
    2. 'max' → logprob: -15.375
    3. '(max' → logprob: -17.3125
    4. '```' → logprob: -17.375
    5. '
' → logprob: -17.5625
    6. '(x' → logprob: -17.75
    7. '[' → logprob: -17.875
    8. '(' → logprob: -17.875
    9. 'xmin' → logprob: -17.875
    10. 'y' → logprob: -18.1875

Token 2398: ',min' (ID: 129117)
  Prédit: ',min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',min' → logprob: -0.004674930591136217
    2. ',max' → logprob: -5.504674911499023
    3. ',' → logprob: -7.629674911499023
    4. 'min' → logprob: -9.129674911499023
    5. '(min' → logprob: -14.004674911499023
    6. 'max' → logprob: -14.504674911499023
    7. ' ,' → logprob: -15.629674911499023
    8. '[min' → logprob: -15.629674911499023
    9. ',m' → logprob: -16.129674911499023
    10. '_min' → logprob: -16.379674911499023

Token 2399: 'y' (ID: 88)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.34516555070877075
    2. 'x' → logprob: -1.345165491104126
    3. 'y' → logprob: -3.470165491104126
    4. 'may' → logprob: -8.970165252685547
    5. ',max' → logprob: -10.345165252685547
    6. '(max' → logprob: -10.345165252685547
    7. 'min' → logprob: -10.595165252685547
    8. ' max' → logprob: -11.095165252685547
    9. 'ay' → logprob: -11.345165252685547
    10. '=max' → logprob: -11.345165252685547

Token 2400: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00038467496051453054
    2. '),(' → logprob: -8.000384330749512
    3. ',' → logprob: -10.000384330749512
    4. '(' → logprob: -14.000384330749512
    5. '(max' → logprob: -14.000384330749512
    6. ',),' → logprob: -14.125384330749512
    7. '),
' → logprob: -14.750384330749512
    8. ' ),' → logprob: -14.875384330749512
    9. ''),' → logprob: -16.250385284423828
    10. '   ' → logprob: -16.500385284423828

Token 2401: ' (' (ID: 350)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.6802748441696167
    2. '(max' → logprob: -1.1802748441696167
    3. ' (' → logprob: -1.6802748441696167
    4. '(' → logprob: -12.930274963378906
    5. '   ' → logprob: -13.180274963378906
    6. ' ' → logprob: -14.680274963378906
    7. '  ' → logprob: -16.430274963378906
    8. '(mid' → logprob: -16.680274963378906
    9. '[min' → logprob: -16.930274963378906
    10. '	' → logprob: -17.180274963378906

Token 2402: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.018177801743149757
    2. 'min' → logprob: -4.0181779861450195
    3. ' max' → logprob: -11.14317798614502
    4. '(max' → logprob: -11.26817798614502
    5. '(min' → logprob: -14.76817798614502
    6. ' min' → logprob: -15.76817798614502
    7. '[max' → logprob: -16.268177032470703
    8. ',max' → logprob: -16.393177032470703
    9. '	max' → logprob: -17.768177032470703
    10. '   ' → logprob: -18.018177032470703

Token 2403: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0005532711511477828
    2. 'max' → logprob: -7.500553131103516
    3. 'y' → logprob: -16.875553131103516
    4. '(max' → logprob: -17.125553131103516
    5. ' max' → logprob: -17.625553131103516
    6. '```' → logprob: -17.750553131103516
    7. 'xmin' → logprob: -18.000553131103516
    8. '   ' → logprob: -18.125553131103516
    9. 'mx' → logprob: -18.375553131103516
    10. '``' → logprob: -18.563053131103516

Token 2404: ',max' (ID: 81466)
  Prédit: ',max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',max' → logprob: -0.001419995678588748
    2. ',' → logprob: -7.251420021057129
    3. ',min' → logprob: -7.251420021057129
    4. ' ,' → logprob: -15.001420021057129
    5. ',
' → logprob: -15.501420021057129
    6. 'max' → logprob: -15.751420021057129
    7. ',m' → logprob: -18.251419067382812
    8. '(max' → logprob: -19.251419067382812
    9. ',(' → logprob: -19.751419067382812
    10. '[max' → logprob: -20.126419067382812

Token 2405: 'y' (ID: 88)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06257008016109467
    2. 'y' → logprob: -2.812570095062256
    3. 'max' → logprob: -7.437570095062256
    4. '(max' → logprob: -11.937569618225098
    5. ',' → logprob: -12.812569618225098
    6. ',max' → logprob: -12.937569618225098
    7. ')' → logprob: -15.187569618225098
    8. ' ymax' → logprob: -15.312569618225098
    9. ',y' → logprob: -15.687569618225098
    10. '(y' → logprob: -15.937569618225098

Token 2406: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5769487023353577
    2. '),' → logprob: -0.8269487023353577
    3. '),(' → logprob: -7.076948642730713
    4. ',(' → logprob: -10.076949119567871
    5. '(min' → logprob: -10.076949119567871
    6. ',min' → logprob: -10.576949119567871
    7. ',),' → logprob: -10.701949119567871
    8. '(' → logprob: -11.451949119567871
    9. ' ,' → logprob: -12.201949119567871
    10. ')' → logprob: -12.451949119567871

Token 2407: ' (' (ID: 350)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.029780801385641098
    2. ' (' → logprob: -3.529780864715576
    3. '(max' → logprob: -10.779780387878418
    4. '   ' → logprob: -11.904780387878418
    5. ' ' → logprob: -13.779780387878418
    6. '(' → logprob: -13.904780387878418
    7. '[min' → logprob: -15.154780387878418
    8. '  ' → logprob: -15.529780387878418
    9. '(m' → logprob: -16.904781341552734
    10. '	' → logprob: -16.904781341552734

Token 2408: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -4.320199877838604e-07
    2. 'max' → logprob: -15.375
    3. ' min' → logprob: -15.75
    4. '(min' → logprob: -18.0
    5. '[min' → logprob: -20.125
    6. '	min' → logprob: -20.25
    7. '_min' → logprob: -21.0
    8. ',min' → logprob: -22.125
    9. 'mini' → logprob: -22.125
    10. '
' → logprob: -22.25

Token 2409: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.107425062713446e-06
    2. 'y' → logprob: -12.000006675720215
    3. 'xmin' → logprob: -14.875006675720215
    4. 'max' → logprob: -16.12500762939453
    5. '
' → logprob: -16.25000762939453
    6. '#' → logprob: -16.43750762939453
    7. '[' → logprob: -17.06250762939453
    8. '```' → logprob: -17.37500762939453
    9. ')x' → logprob: -17.43750762939453
    10. ')' → logprob: -17.81250762939453

Token 2410: ',max' (ID: 81466)
  Prédit: ',max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',max' → logprob: -0.01859188638627529
    2. 'max' → logprob: -4.01859188079834
    3. ',' → logprob: -7.76859188079834
    4. '(max' → logprob: -11.89359188079834
    5. ',min' → logprob: -13.26859188079834
    6. '[max' → logprob: -13.39359188079834
    7. 'maxlength' → logprob: -13.51859188079834
    8. ',
' → logprob: -14.14359188079834
    9. '
' → logprob: -14.14359188079834
    10. '|max' → logprob: -14.26859188079834

Token 2411: 'y' (ID: 88)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0018349916208535433
    2. 'y' → logprob: -6.626834869384766
    3. 'may' → logprob: -7.626834869384766
    4. ',max' → logprob: -12.501834869384766
    5. ' max' → logprob: -12.626834869384766
    6. 'ay' → logprob: -12.626834869384766
    7. 'min' → logprob: -12.751834869384766
    8. ',' → logprob: -13.001834869384766
    9. ' ymax' → logprob: -13.376834869384766
    10. '(max' → logprob: -13.626834869384766

Token 2412: ')]
' (ID: 11587)
  Prédit: ')]
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]
' → logprob: -0.3885250985622406
    2. ')]' → logprob: -1.138525128364563
    3. ')' → logprob: -6.638525009155273
    4. ')]

' → logprob: -9.013525009155273
    5. ')]
' → logprob: -9.513525009155273
    6. '),' → logprob: -10.013525009155273
    7. ']' → logprob: -10.138525009155273
    8. ')
' → logprob: -10.638525009155273
    9. ']
' → logprob: -11.388525009155273
    10. '):
' → logprob: -12.013525009155273

Token 2413: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16693495213985443
    2. 'dist' → logprob: -2.4169349670410156
    3. '   ' → logprob: -2.9169349670410156
    4. 'res' → logprob: -4.791934967041016
    5. 'min' → logprob: -7.666934967041016
    6. '```' → logprob: -7.791934967041016
    7. 'result' → logprob: -8.416934967041016
    8. 'ans' → logprob: -8.541934967041016
    9. 'md' → logprob: -8.666934967041016
    10. 'results' → logprob: -8.666934967041016

Token 2414: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.062291886657476425
    2. 'dist' → logprob: -3.0622918605804443
    3. 'min' → logprob: -4.812292098999023
    4. '   ' → logprob: -6.062292098999023
    5. 'res' → logprob: -6.687292098999023
    6. 'ds' → logprob: -6.937292098999023
    7. 'md' → logprob: -7.812292098999023
    8. 'dm' → logprob: -9.187292098999023
    9. 'mind' → logprob: -9.187292098999023
    10. 'def' → logprob: -9.437292098999023

Token 2415: '3' (ID: 18)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3105162382125854
    2. 'ists' → logprob: -1.3105162382125854
    3. 'min' → logprob: -1.5605162382125854
    4. 'ist' → logprob: -1.8105162382125854
    5. '3' → logprob: -3.185516357421875
    6. '=' → logprob: -3.935516357421875
    7. '_min' → logprob: -5.185516357421875
    8. 'd' → logprob: -5.435516357421875
    9. 'dist' → logprob: -5.560516357421875
    10. '_list' → logprob: -5.560516357421875

Token 2416: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014168446883559227
    2. ' =' → logprob: -4.2641682624816895
    3. 's' → logprob: -13.139168739318848
    4. '=min' → logprob: -13.139168739318848
    5. 'min' → logprob: -14.639168739318848
    6. '=[]' → logprob: -15.639168739318848
    7. '=max' → logprob: -16.76416778564453
    8. '=
' → logprob: -16.88916778564453
    9. ',' → logprob: -17.01416778564453
    10. '=[]
' → logprob: -17.63916778564453

Token 2417: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0015270020812749863
    2. 'float' → logprob: -6.626526832580566
    3. 'dist' → logprob: -8.876526832580566
    4. 'math' → logprob: -10.126526832580566
    5. ' min' → logprob: -11.376526832580566
    6. '1' → logprob: -12.751526832580566
    7. 'max' → logprob: -13.126526832580566
    8. 'inf' → logprob: -13.251526832580566
    9. '[min' → logprob: -13.251526832580566
    10. '   ' → logprob: -14.626526832580566

Token 2418: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.0025812473613768816
    2. 'dist' → logprob: -6.5025811195373535
    3. '([' → logprob: -6.8775811195373535
    4. '(' → logprob: -10.627581596374512
    5. '(
' → logprob: -11.127581596374512
    6. '[' → logprob: -12.002581596374512
    7. '((' → logprob: -14.627581596374512
    8. ' dist' → logprob: -14.752581596374512
    9. '(abs' → logprob: -14.877581596374512
    10. '(d' → logprob: -15.002581596374512

Token 2419: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.314485639333725
    2. '_segment' → logprob: -1.3144856691360474
    3. 'segment' → logprob: -7.189485549926758
    4. 'point' → logprob: -7.689485549926758
    5. '```' → logprob: -13.439485549926758
    6. '(point' → logprob: -13.689485549926758
    7. 'Segment' → logprob: -13.814485549926758
    8. 'seg' → logprob: -13.814485549926758
    9. '(segment' → logprob: -13.939485549926758
    10. '_segments' → logprob: -14.189485549926758

Token 2420: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.11789141595363617
    2. 'segment' → logprob: -2.367891311645508
    3. '_rectangle' → logprob: -4.992891311645508
    4. '(c' → logprob: -5.367891311645508
    5. '(segment' → logprob: -6.492891311645508
    6. '(x' → logprob: -6.492891311645508
    7. '((' → logprob: -7.117891311645508
    8. 'seg' → logprob: -7.617891311645508
    9. '(seg' → logprob: -8.117891311645508
    10. 'rectangle' → logprob: -8.367891311645508

Token 2421: '(cx' (ID: 116103)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.060677893459796906
    2. 'corner' → logprob: -3.435678005218506
    3. 'corn' → logprob: -4.060678005218506
    4. '(x' → logprob: -5.310678005218506
    5. 'c' → logprob: -6.935678005218506
    6. '(' → logprob: -7.060678005218506
    7. '(cx' → logprob: -7.310678005218506
    8. '((' → logprob: -7.560678005218506
    9. '(point' → logprob: -8.185677528381348
    10. '
' → logprob: -8.810677528381348

Token 2422: ',' (ID: 11)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.8992882370948792
    2. ',' → logprob: -1.2742881774902344
    3. '(cx' → logprob: -1.5242881774902344
    4. 'corn' → logprob: -3.1492881774902344
    5. 'corner' → logprob: -4.399288177490234
    6. ',c' → logprob: -4.649288177490234
    7. 'cx' → logprob: -5.149288177490234
    8. ')' → logprob: -5.774288177490234
    9. 'c' → logprob: -5.774288177490234
    10. '),' → logprob: -5.774288177490234

Token 2423: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -1.7432603272027336e-06
    2. '.cy' → logprob: -15.250001907348633
    3. ' cy' → logprob: -15.375001907348633
    4. '   ' → logprob: -15.625001907348633
    5. 'corner' → logprob: -15.625001907348633
    6. '
' → logprob: -15.750001907348633
    7. 'cycles' → logprob: -16.000001907348633
    8. '```' → logprob: -16.000001907348633
    9. 'c' → logprob: -16.375001907348633
    10. 'cx' → logprob: -16.875001907348633

Token 2424: ',' (ID: 11)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.6578168869018555
    2. ',' → logprob: -1.0328168869018555
    3. '(cx' → logprob: -2.4078168869018555
    4. 'corn' → logprob: -4.6578168869018555
    5. 'corner' → logprob: -5.0328168869018555
    6. '(' → logprob: -5.2828168869018555
    7. '=' → logprob: -5.4078168869018555
    8. ',c' → logprob: -5.9078168869018555
    9. '
' → logprob: -6.9078168869018555
    10. '(x' → logprob: -6.9078168869018555

Token 2425: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.5451681974809617e-05
    2. '   ' → logprob: -11.625015258789062
    3. 'min' → logprob: -12.875015258789062
    4. ' x' → logprob: -13.500015258789062
    5. '
' → logprob: -13.875015258789062
    6. '(x' → logprob: -14.000015258789062
    7. 'seg' → logprob: -14.875015258789062
    8. '  ' → logprob: -16.750015258789062
    9. ' ' → logprob: -17.000015258789062
    10. '    
' → logprob: -17.000015258789062

Token 2426: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03366725519299507
    2. 'min' → logprob: -3.4086673259735107
    3. ',' → logprob: -11.90866756439209
    4. 'x' → logprob: -12.28366756439209
    5. ' min' → logprob: -13.03366756439209
    6. '(min' → logprob: -13.28366756439209
    7. '_min' → logprob: -13.28366756439209
    8. '   ' → logprob: -14.03366756439209
    9. '[min' → logprob: -14.03366756439209
    10. ',min' → logprob: -14.15866756439209

Token 2427: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31362611055374146
    2. ',y' → logprob: -1.3136260509490967
    3. ' ,' → logprob: -8.063626289367676
    4. 'y' → logprob: -10.063626289367676
    5. '   ' → logprob: -13.063626289367676
    6. ',
' → logprob: -13.438626289367676
    7. '```' → logprob: -13.563626289367676
    8. ',x' → logprob: -14.563626289367676
    9. '_,' → logprob: -15.188626289367676
    10. '1' → logprob: -15.438626289367676

Token 2428: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -7.703443770878948e-06
    2. ' y' → logprob: -11.875007629394531
    3. '   ' → logprob: -14.375007629394531
    4. '  ' → logprob: -18.12500762939453
    5. ' ' → logprob: -18.12500762939453
    6. '	y' → logprob: -18.12500762939453
    7. ''y' → logprob: -18.12500762939453
    8. '       ' → logprob: -18.25000762939453
    9. '           ' → logprob: -18.62500762939453
    10. ',y' → logprob: -18.62500762939453

Token 2429: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. 'y' → logprob: -18.25
    3. '```' → logprob: -18.25
    4. ',' → logprob: -18.375
    5. '
' → logprob: -18.875
    6. '2' → logprob: -19.125
    7. '   ' → logprob: -19.5
    8. ' ' → logprob: -20.4375
    9. ')' → logprob: -20.6875
    10. '۱' → logprob: -20.75

Token 2430: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010107713751494884
    2. ',x' → logprob: -4.635107517242432
    3. ' ,' → logprob: -8.76010799407959
    4. 'x' → logprob: -8.76010799407959
    5. ',c' → logprob: -11.26010799407959
    6. '```' → logprob: -11.38510799407959
    7. ',
' → logprob: -12.01010799407959
    8. '   ' → logprob: -13.01010799407959
    9. ')' → logprob: -14.26010799407959
    10. ' x' → logprob: -14.26010799407959

Token 2431: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0028319843113422394
    2. ' x' → logprob: -5.877831935882568
    3. '   ' → logprob: -10.627832412719727
    4. 'cx' → logprob: -13.877832412719727
    5. '  ' → logprob: -14.127832412719727
    6. ' ' → logprob: -14.377832412719727
    7. '    ' → logprob: -15.627832412719727
    8. '	x' → logprob: -15.752832412719727
    9. '       ' → logprob: -16.502832412719727
    10. '                   ' → logprob: -17.002832412719727

Token 2432: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. 'y' → logprob: -16.25
    3. ' ' → logprob: -17.375
    4. 'x' → logprob: -17.875
    5. '```' → logprob: -18.0
    6. ',' → logprob: -18.75
    7. '   ' → logprob: -19.75
    8. '1' → logprob: -19.875
    9. ' y' → logprob: -20.0
    10. '₂' → logprob: -20.5

Token 2433: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005910431034862995
    2. ')' → logprob: -5.630910396575928
    3. ',y' → logprob: -7.380910396575928
    4. 'y' → logprob: -7.630910396575928
    5. '2' → logprob: -8.005910873413086
    6. '),' → logprob: -8.255910873413086
    7. '
' → logprob: -8.880910873413086
    8. '```' → logprob: -9.005910873413086
    9. '1' → logprob: -9.505910873413086
    10. ',c' → logprob: -9.880910873413086

Token 2434: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -9.710618905955926e-05
    2. ' y' → logprob: -9.250097274780273
    3. '   ' → logprob: -14.125097274780273
    4. 'x' → logprob: -16.625097274780273
    5. '	y' → logprob: -17.250097274780273
    6. ' ' → logprob: -18.125097274780273
    7. '  ' → logprob: -18.500097274780273
    8. ''y' → logprob: -19.125097274780273
    9. '```' → logprob: -19.375097274780273
    10. '
' → logprob: -19.750097274780273

Token 2435: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.584239938296378e-06
    2. '```' → logprob: -12.875007629394531
    3. 'x' → logprob: -13.875007629394531
    4. ')' → logprob: -14.000007629394531
    5. 'y' → logprob: -14.125007629394531
    6. '
' → logprob: -14.125007629394531
    7. '``' → logprob: -14.250007629394531
    8. ' ' → logprob: -15.500007629394531
    9. '   ' → logprob: -15.750007629394531
    10. ',' → logprob: -15.750007629394531

Token 2436: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6078587770462036
    2. ')' → logprob: -0.8578587770462036
    3. '[' → logprob: -3.857858657836914
    4. '   ' → logprob: -5.732858657836914
    5. 'for' → logprob: -5.982858657836914
    6. ' for' → logprob: -6.107858657836914
    7. ' ,' → logprob: -7.107858657836914
    8. '
' → logprob: -8.232858657836914
    9. '[c' → logprob: -8.607858657836914
    10. '(cx' → logprob: -8.732858657836914

Token 2437: ' for' (ID: 395)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7334816455841064
    2. ' for' → logprob: -1.1084816455841064
    3. 'for' → logprob: -1.8584816455841064
    4. '(cx' → logprob: -3.8584816455841064
    5. '   ' → logprob: -5.483481407165527
    6. ')' → logprob: -5.733481407165527
    7. '(c' → logprob: -6.108481407165527
    8. '       ' → logprob: -7.233481407165527
    9. '
' → logprob: -7.358481407165527
    10. '[' → logprob: -7.983481407165527

Token 2438: ' cx' (ID: 44448)
  Prédit: '(cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cx' → logprob: -0.062234535813331604
    2. 'cx' → logprob: -2.81223464012146
    3. ' (' → logprob: -8.562234878540039
    4. '(c' → logprob: -9.937234878540039
    5. ' cx' → logprob: -10.562234878540039
    6. '.cx' → logprob: -14.812234878540039
    7. '
' → logprob: -14.937234878540039
    8. '   ' → logprob: -15.437234878540039
    9. '(C' → logprob: -16.31223487854004
    10. '  ' → logprob: -16.43723487854004

Token 2439: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4741174876689911
    2. ',c' → logprob: -0.9741175174713135
    3. ' ,' → logprob: -11.599117279052734
    4. ',
' → logprob: -11.599117279052734
    5. 'corn' → logprob: -11.974117279052734
    6. ',d' → logprob: -12.599117279052734
    7. ',in' → logprob: -13.349117279052734
    8. ',y' → logprob: -13.599117279052734
    9. ',C' → logprob: -13.724117279052734
    10. '
' → logprob: -13.849117279052734

Token 2440: 'cy' (ID: 4523)
  Prédit: 'cy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.023340515792369843
    2. 'corn' → logprob: -3.7733404636383057
    3. 'cx' → logprob: -9.523340225219727
    4. ' corners' → logprob: -11.648340225219727
    5. 'corner' → logprob: -11.898340225219727
    6. '
' → logprob: -12.898340225219727
    7. 'cycles' → logprob: -13.648340225219727
    8. ' cy' → logprob: -13.898340225219727
    9. 'cycl' → logprob: -15.148340225219727
    10. '```' → logprob: -15.273340225219727

Token 2441: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.18010587990283966
    2. ' in' → logprob: -1.8051059246063232
    3. 'corn' → logprob: -8.805106163024902
    4. '
' → logprob: -9.305106163024902
    5. ',' → logprob: -9.805106163024902
    6. ',c' → logprob: -10.555106163024902
    7. ')' → logprob: -11.430106163024902
    8. '(c' → logprob: -11.680106163024902
    9. 'corner' → logprob: -12.055106163024902
    10. 'c' → logprob: -12.305106163024902

Token 2442: ' corners' (ID: 39479)
  Prédit: 'corn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'corn' → logprob: -0.001170460251159966
    2. ' corners' → logprob: -6.751170635223389
    3. 'corner' → logprob: -16.001171112060547
    4. '
' → logprob: -16.251171112060547
    5. 'c' → logprob: -17.001171112060547
    6. '   ' → logprob: -17.751171112060547
    7. 'Corners' → logprob: -18.751171112060547
    8. '[' → logprob: -19.501171112060547
    9. ' ' → logprob: -20.001171112060547
    10. '[c' → logprob: -20.001171112060547

Token 2443: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007219645194709301
    2. '   ' → logprob: -7.2507219314575195
    3. ')
' → logprob: -12.00072193145752
    4. ' )' → logprob: -12.12572193145752
    5. '))' → logprob: -15.75072193145752
    6. ' ' → logprob: -16.625722885131836
    7. ')**' → logprob: -16.750722885131836
    8. ')`' → logprob: -16.875722885131836
    9. '  ' → logprob: -17.250722885131836
    10. '       ' → logprob: -17.375722885131836

Token 2444: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30269891023635864
    2. 'return' → logprob: -1.5526988506317139
    3. '
' → logprob: -3.927698850631714
    4. ')' → logprob: -4.177699089050293
    5. ')
' → logprob: -4.927699089050293
    6. ' return' → logprob: -5.177699089050293
    7. '    
' → logprob: -7.177699089050293
    8. '```' → logprob: -7.427699089050293
    9. '	return' → logprob: -9.802699089050293
    10. ')return' → logprob: -10.427699089050293

Token 2445: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2014756053686142
    2. '   ' → logprob: -1.7014756202697754
    3. ' return' → logprob: -10.076475143432617
    4. '```' → logprob: -11.701475143432617
    5. '    
' → logprob: -12.451475143432617
    6. '
' → logprob: -12.826475143432617
    7. 'd' → logprob: -13.076475143432617
    8. '	return' → logprob: -13.326475143432617
    9. 'dist' → logprob: -14.076475143432617
    10. 'def' → logprob: -15.076475143432617

Token 2446: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0031929241959005594
    2. '   ' → logprob: -5.753192901611328
    3. ' return' → logprob: -11.253192901611328
    4. '```' → logprob: -13.753192901611328
    5. '
' → logprob: -14.253192901611328
    6. 'd' → logprob: -14.878192901611328
    7. '    
' → logprob: -16.128192901611328
    8. '	return' → logprob: -16.878192901611328
    9. 'result' → logprob: -17.128192901611328
    10. ')return' → logprob: -17.503192901611328

Token 2447: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0002613358374219388
    2. ' min' → logprob: -8.250261306762695
    3. '   ' → logprob: -16.750261306762695
    4. '	min' → logprob: -16.875261306762695
    5. 'max' → logprob: -17.375261306762695
    6. '0' → logprob: -17.750261306762695
    7. 'minimum' → logprob: -19.375261306762695
    8. '(min' → logprob: -19.625261306762695
    9. '```' → logprob: -20.250261306762695
    10. '_min' → logprob: -20.625261306762695

Token 2448: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.500001907348633
    3. '(
' → logprob: -14.625001907348633
    4. 'd' → logprob: -14.875001907348633
    5. '(min' → logprob: -16.250001907348633
    6. '((' → logprob: -19.750001907348633
    7. '```' → logprob: -20.000001907348633
    8. '(dist' → logprob: -20.250001907348633
    9. '([' → logprob: -20.375001907348633
    10. '[d' → logprob: -21.250001907348633

Token 2449: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000363590574124828
    2. '(' → logprob: -9.12536334991455
    3. '3' → logprob: -9.25036334991455
    4. '(x' → logprob: -9.75036334991455
    5. 'd' → logprob: -10.37536334991455
    6. 'ist' → logprob: -10.62536334991455
    7. '(
' → logprob: -11.87536334991455
    8. '_' → logprob: -11.87536334991455
    9. ')' → logprob: -12.25036334991455
    10. '(d' → logprob: -12.62536334991455

Token 2450: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.062122516334056854
    2. ',d' → logprob: -2.8121225833892822
    3. ' ,' → logprob: -8.812122344970703
    4. ',
' → logprob: -12.562122344970703
    5. 'd' → logprob: -13.312122344970703
    6. '   ' → logprob: -15.437122344970703
    7. ',min' → logprob: -16.687122344970703
    8. ',b' → logprob: -16.812122344970703
    9. ',D' → logprob: -17.062122344970703
    10. '(d' → logprob: -17.187122344970703

Token 2451: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00027813989436253905
    2. 'd' → logprob: -8.75027847290039
    3. '2' → logprob: -9.12527847290039
    4. '1' → logprob: -11.50027847290039
    5. '(d' → logprob: -15.12527847290039
    6. 'ist' → logprob: -16.87527847290039
    7. ' d' → logprob: -17.12527847290039
    8. ',' → logprob: -17.43777847290039
    9. '0' → logprob: -17.50027847290039
    10. 'dist' → logprob: -17.56277847290039

Token 2452: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.1602715402841568
    2. ',' → logprob: -1.9102715253829956
    3. ' ,' → logprob: -10.035271644592285
    4. ',
' → logprob: -13.410271644592285
    5. ',c' → logprob: -13.910271644592285
    6. 'd' → logprob: -14.410271644592285
    7. ',b' → logprob: -16.28527069091797
    8. ',D' → logprob: -16.28527069091797
    9. '   ' → logprob: -16.41027069091797
    10. ',p' → logprob: -16.53527069091797

Token 2453: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. '(' → logprob: -19.0
    3. '_' → logprob: -19.375
    4. '1' → logprob: -20.25
    5. ')' → logprob: -20.75
    6. '３' → logprob: -20.875
    7. 'd' → logprob: -21.0
    8. ' ' → logprob: -21.125
    9. '```' → logprob: -22.25
    10. '[' → logprob: -22.25

Token 2454: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. '   ' → logprob: -13.12500286102295
    3. ')
' → logprob: -14.62500286102295
    4. ' )' → logprob: -15.87500286102295
    5. '())' → logprob: -16.250001907348633
    6. '))' → logprob: -16.375001907348633
    7. '}' → logprob: -17.875001907348633
    8. ')return' → logprob: -18.625001907348633
    9. '})' → logprob: -18.875001907348633
    10. ')}' → logprob: -18.875001907348633

Token 2455: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00020115631923545152
    2. 'if' → logprob: -9.000201225280762
    3. 'n' → logprob: -10.125201225280762
    4. 'import' → logprob: -10.375201225280762
    5. 'r' → logprob: -13.000201225280762
    6. 'for' → logprob: -13.250201225280762
    7. '```' → logprob: -14.000201225280762
    8. '#' → logprob: -14.375201225280762
    9. 'line' → logprob: -14.750201225280762
    10. 'ndef' → logprob: -14.875201225280762

Token 2456: ' solve' (ID: 17722)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.03703739866614342
    2. 'main' → logprob: -3.7870373725891113
    3. ' solve' → logprob: -5.162037372589111
    4. ' find' → logprob: -5.287037372589111
    5. 'solve' → logprob: -6.912037372589111
    6. ' binary' → logprob: -7.037037372589111
    7. ' max' → logprob: -7.537037372589111
    8. 'binary' → logprob: -8.28703784942627
    9. 'max' → logprob: -9.16203784942627
    10. 'find' → logprob: -9.28703784942627

Token 2457: '_dataset' (ID: 40568)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.030116422101855278
    2. '():
' → logprob: -3.530116319656372
    3. '(s' → logprob: -8.030116081237793
    4. '(line' → logprob: -11.280116081237793
    5. '(args' → logprob: -12.030116081237793
    6. '(input' → logprob: -12.405116081237793
    7. ' ():' → logprob: -12.405116081237793
    8. '()' → logprob: -13.280116081237793
    9. '(argv' → logprob: -13.280116081237793
    10. '():
' → logprob: -13.530116081237793

Token 2458: '():
' (ID: 8595)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.16375906765460968
    2. '():' → logprob: -1.9137591123580933
    3. '():
' → logprob: -6.038759231567383
    4. '(line' → logprob: -7.788759231567383
    5. '(' → logprob: -8.663759231567383
    6. '(S' → logprob: -9.413759231567383
    7. '(*' → logprob: -9.788759231567383
    8. '(input' → logprob: -10.288759231567383
    9. '(argv' → logprob: -10.413759231567383
    10. '(start' → logprob: -10.663759231567383

Token 2459: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.939851037808694e-05
    2. 'n' → logprob: -11.000029563903809
    3. '```' → logprob: -11.625029563903809
    4. 'import' → logprob: -13.500029563903809
    5. ' n' → logprob: -13.750029563903809
    6. '   ' → logprob: -14.375029563903809
    7. '	n' → logprob: -15.000029563903809
    8. '       ' → logprob: -16.500028610229492
    9. 'data' → logprob: -17.000028610229492
    10. 'input' → logprob: -17.000028610229492

Token 2460: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06562422215938568
    2. 'n' → logprob: -2.940624237060547
    3. ' n' → logprob: -4.690624237060547
    4. 'N' → logprob: -6.815624237060547
    5. '	n' → logprob: -9.065624237060547
    6. ' N' → logprob: -9.440624237060547
    7. 't' → logprob: -9.565624237060547
    8. 'T' → logprob: -10.065624237060547
    9. '```' → logprob: -10.065624237060547
    10. '   ' → logprob: -11.815624237060547

Token 2461: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.2520930767059326
    2. 'True' → logprob: -1.5020930767059326
    3. '   ' → logprob: -9.252093315124512
    4. '(True' → logprob: -9.627093315124512
    5. ' ' → logprob: -13.627093315124512
    6. '=True' → logprob: -14.377093315124512
    7. '  ' → logprob: -15.377093315124512
    8. '    ' → logprob: -16.752092361450195
    9. '
' → logprob: -16.752092361450195
    10. ' line' → logprob: -17.502092361450195

Token 2462: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11589282751083374
    2. '       ' → logprob: -2.2408928871154785
    3. ' line' → logprob: -6.3658928871154785
    4. ':' → logprob: -6.9908928871154785
    5. '(line' → logprob: -8.74089241027832
    6. ':
' → logprob: -9.74089241027832
    7. 'line' → logprob: -10.11589241027832
    8. '```' → logprob: -10.24089241027832
    9. '	line' → logprob: -10.36589241027832
    10. '():' → logprob: -10.86589241027832

Token 2463: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001575448433868587
    2. '       ' → logprob: -6.751575469970703
    3. ' line' → logprob: -8.001575469970703
    4. 'line' → logprob: -9.626575469970703
    5. '```' → logprob: -13.251575469970703
    6. '   ' → logprob: -13.501575469970703
    7. '	line' → logprob: -14.126575469970703
    8. '    ' → logprob: -16.126575469970703
    9. '  ' → logprob: -16.751575469970703
    10. '    
' → logprob: -16.876575469970703

Token 2464: ' N' (ID: 478)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.04971138760447502
    2. '   ' → logprob: -3.0497114658355713
    3. ' line' → logprob: -6.799711227416992
    4. '	line' → logprob: -12.174711227416992
    5. 'l' → logprob: -13.299711227416992
    6. 's' → logprob: -14.549711227416992
    7. 'n' → logprob: -14.674711227416992
    8. 'data' → logprob: -15.174711227416992
    9. '_line' → logprob: -15.299711227416992
    10. '(line' → logprob: -15.674711227416992

Token 2465: '_line' (ID: 14418)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1428021639585495
    2. '=' → logprob: -2.0178022384643555
    3. ',' → logprob: -10.142802238464355
    4. '=int' → logprob: -10.892802238464355
    5. '   ' → logprob: -11.142802238464355
    6. ' =
' → logprob: -11.267802238464355
    7. '=input' → logprob: -11.392802238464355
    8. ' ' → logprob: -11.642802238464355
    9. '=line' → logprob: -11.767802238464355
    10. '    ' → logprob: -12.267802238464355

Token 2466: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193482637405396
    2. ' =' → logprob: -1.5019347667694092
    3. '   ' → logprob: -12.626935005187988
    4. '=line' → logprob: -14.126935005187988
    5. '=input' → logprob: -15.001935005187988
    6. '=sys' → logprob: -15.001935005187988
    7. ' ' → logprob: -15.751935005187988
    8. '    ' → logprob: -15.876935005187988
    9. 's' → logprob: -15.876935005187988
    10. '=
' → logprob: -16.126934051513672

Token 2467: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.011050177738070488
    2. ' sys' → logprob: -4.511050224304199
    3. 'input' → logprob: -13.2610502243042
    4. '=sys' → logprob: -15.0110502243042
    5. '(sys' → logprob: -15.1360502243042
    6. ' input' → logprob: -17.636049270629883
    7. '	sys' → logprob: -18.011049270629883
    8. 'Sys' → logprob: -19.011049270629883
    9. '   ' → logprob: -19.011049270629883
    10. '_sys' → logprob: -19.386049270629883

Token 2468: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0022592139430344105
    2. '.readline' → logprob: -7.002259254455566
    3. '.' → logprob: -7.127259254455566
    4. '.stdout' → logprob: -7.877259254455566
    5. 'stdin' → logprob: -8.877259254455566
    6. '.std' → logprob: -11.627259254455566
    7. '(stdin' → logprob: -12.252259254455566
    8. '.argv' → logprob: -12.877259254455566
    9. '.setdefault' → logprob: -13.752259254455566
    10. '.stderr' → logprob: -13.752259254455566

Token 2469: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00017815368482843041
    2. '().' → logprob: -9.125178337097168
    3. '.' → logprob: -9.625178337097168
    4. '.stdin' → logprob: -13.250178337097168
    5. ' readline' → logprob: -14.125178337097168
    6. '```' → logprob: -15.875178337097168
    7. 's' → logprob: -16.50017738342285
    8. '()' → logprob: -16.75017738342285
    9. ' .' → logprob: -16.75017738342285
    10. '.stdout' → logprob: -16.75017738342285

Token 2470: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.19701813161373138
    2. '().' → logprob: -2.0720181465148926
    3. '()' → logprob: -2.9470181465148926
    4. '       ' → logprob: -8.947017669677734
    5. '()
' → logprob: -9.947017669677734
    6. ' =' → logprob: -9.947017669677734
    7. '
' → logprob: -10.197017669677734
    8. '():
' → logprob: -10.572017669677734
    9. '   ' → logprob: -10.697017669677734
    10. '=' → logprob: -10.947017669677734

Token 2471: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1216268241405487
    2. ' if' → logprob: -2.746626853942871
    3. 'if' → logprob: -2.996626853942871
    4. '   ' → logprob: -8.121626853942871
    5. '	if' → logprob: -10.246626853942871
    6. '```' → logprob: -10.871626853942871
    7. 'If' → logprob: -11.496626853942871
    8. '	' → logprob: -11.746626853942871
    9. '        
' → logprob: -11.746626853942871
    10. '=' → logprob: -11.871626853942871

Token 2472: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.20216089487075806
    2. ' if' → logprob: -1.7021608352661133
    3. '       ' → logprob: -7.202160835266113
    4. '
' → logprob: -13.202160835266113
    5. '	if' → logprob: -15.077160835266113
    6. '   ' → logprob: -16.07716178894043
    7. 'If' → logprob: -16.32716178894043
    8. '        
' → logprob: -17.07716178894043
    9. 'N' → logprob: -17.20216178894043
    10. '​' → logprob: -17.57716178894043

Token 2473: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.014635871164500713
    2. ' N' → logprob: -4.514636039733887
    3. 'N' → logprob: -6.264636039733887
    4. 'not' → logprob: -6.389636039733887
    5. ' ' → logprob: -15.139636039733887
    6. ' ' → logprob: -17.38963508605957
    7. ' None' → logprob: -17.88963508605957
    8. '   ' → logprob: -18.13963508605957
    9. 'Not' → logprob: -18.51463508605957
    10. '_not' → logprob: -18.63963508605957

Token 2474: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.006715370807796717
    2. ' N' → logprob: -5.006715297698975
    3. '
' → logprob: -17.381715774536133
    4. ' ' → logprob: -17.506715774536133
    5. '   ' → logprob: -18.631715774536133
    6. '  ' → logprob: -20.631715774536133
    7. ' ' → logprob: -20.631715774536133
    8. ' 
' → logprob: -21.006715774536133
    9. '	N' → logprob: -21.256715774536133
    10. ' (' → logprob: -21.756715774536133

Token 2475: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.00657515786588192
    2. ':' → logprob: -6.256575107574463
    3. '.strip' → logprob: -6.256575107574463
    4. ':
' → logprob: -7.006575107574463
    5. '   ' → logprob: -7.381575107574463
    6. '```' → logprob: -8.756575584411621
    7. '_' → logprob: -8.881575584411621
    8. '==' → logprob: -9.006575584411621
    9. '=' → logprob: -9.006575584411621
    10. '_lines' → logprob: -9.381575584411621

Token 2476: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12140227854251862
    2. '.strip' → logprob: -2.4964022636413574
    3. ':' → logprob: -3.4964022636413574
    4. ' or' → logprob: -6.496402263641357
    5. '   ' → logprob: -9.996402740478516
    6. ':return' → logprob: -10.496402740478516
    7. 'strip' → logprob: -11.246402740478516
    8. '.rstrip' → logprob: -11.746402740478516
    9. '.' → logprob: -11.871402740478516
    10. '       ' → logprob: -11.871402740478516

Token 2477: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28138303756713867
    2. '           ' → logprob: -1.4063830375671387
    3. '   ' → logprob: -8.781383514404297
    4. 'break' → logprob: -10.656383514404297
    5. ' break' → logprob: -11.156383514404297
    6. '```' → logprob: -11.406383514404297
    7. ',' → logprob: -12.281383514404297
    8. '               ' → logprob: -12.656383514404297
    9. ' if' → logprob: -12.906383514404297
    10. ':' → logprob: -13.156383514404297

Token 2478: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0694785788655281
    2. '       ' → logprob: -3.5694785118103027
    3. ' break' → logprob: -3.5694785118103027
    4. 'return' → logprob: -4.569478511810303
    5. '   ' → logprob: -8.819478988647461
    6. '           ' → logprob: -8.944478988647461
    7. '	break' → logprob: -9.569478988647461
    8. ' return' → logprob: -9.944478988647461
    9. '_break' → logprob: -11.819478988647461
    10. '
' → logprob: -11.819478988647461

Token 2479: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.396757089532912e-05
    2. '   ' → logprob: -10.0000638961792
    3. '
' → logprob: -11.8750638961792
    4. '```' → logprob: -12.1250638961792
    5. '        
' → logprob: -12.6250638961792
    6. '           ' → logprob: -13.7500638961792
    7. 'n' → logprob: -15.0000638961792
    8. '	' → logprob: -15.1250638961792
    9. ',' → logprob: -15.2500638961792
    10. 'if' → logprob: -15.8750638961792

Token 2480: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020648978650569916
    2. '   ' → logprob: -3.895648956298828
    3. 'n' → logprob: -10.020648956298828
    4. 'N' → logprob: -10.020648956298828
    5. '```' → logprob: -12.145648956298828
    6. '
' → logprob: -12.770648956298828
    7. '        
' → logprob: -12.895648956298828
    8. 'try' → logprob: -13.020648956298828
    9. 'if' → logprob: -13.395648956298828
    10. '           ' → logprob: -14.020648956298828

Token 2481: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.0033004588913172483
    2. 'n' → logprob: -6.378300666809082
    3. '       ' → logprob: -7.128300666809082
    4. '   ' → logprob: -7.253300666809082
    5. ' N' → logprob: -9.878300666809082
    6. 'if' → logprob: -10.378300666809082
    7. 'try' → logprob: -12.878300666809082
    8. ' n' → logprob: -13.378300666809082
    9. ' if' → logprob: -15.128300666809082
    10. ' ' → logprob: -15.878300666809082

Token 2482: '_line' (ID: 14418)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030763620510697365
    2. '_line' → logprob: -4.155763626098633
    3. '=' → logprob: -4.280763626098633
    4. '       ' → logprob: -8.155763626098633
    5. '   ' → logprob: -8.280763626098633
    6. '=int' → logprob: -9.530763626098633
    7. '=line' → logprob: -10.405763626098633
    8. '    ' → logprob: -10.655763626098633
    9. ' ' → logprob: -10.905763626098633
    10. '_' → logprob: -11.155763626098633

Token 2483: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011507763527333736
    2. ' =' → logprob: -4.511507987976074
    3. '.strip' → logprob: -7.761507987976074
    4. 'strip' → logprob: -11.136507987976074
    5. '_strip' → logprob: -11.386507987976074
    6. '=
' → logprob: -13.011507987976074
    7. '.rstrip' → logprob: -13.136507987976074
    8. '=N' → logprob: -13.636507987976074
    9. '   ' → logprob: -14.386507987976074
    10. '=str' → logprob: -14.511507987976074

Token 2484: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.0206720617134124e-05
    2. ' N' → logprob: -11.50001049041748
    3. '
' → logprob: -20.875009536743164
    4. '	N' → logprob: -21.125009536743164
    5. '=N' → logprob: -21.125009536743164
    6. '>N' → logprob: -21.250009536743164
    7. '"N' → logprob: -22.250009536743164
    8. '   ' → logprob: -22.500009536743164
    9. ''N' → logprob: -22.500009536743164
    10. ' ' → logprob: -22.875009536743164

Token 2485: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.00019626895664259791
    2. 'strip' → logprob: -9.12519645690918
    3. 'line' → logprob: -10.12519645690918
    4. '.strip' → logprob: -11.25019645690918
    5. 'um' → logprob: -12.00019645690918
    6. 'Line' → logprob: -12.00019645690918
    7. '_.' → logprob: -12.25019645690918
    8. '_strip' → logprob: -12.62519645690918
    9. '```' → logprob: -13.25019645690918
    10. 'ine' → logprob: -13.25019645690918

Token 2486: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.02516554482281208
    2. '=' → logprob: -4.025165557861328
    3. 'strip' → logprob: -5.025165557861328
    4. '.' → logprob: -8.900165557861328
    5. '.rstrip' → logprob: -8.900165557861328
    6. '=
' → logprob: -9.900165557861328
    7. 'if' → logprob: -10.900165557861328
    8. 'str' → logprob: -10.900165557861328
    9. ' =' → logprob: -11.275165557861328
    10. '_strip' → logprob: -11.400165557861328

Token 2487: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.0069534690119326115
    2. '()' → logprob: -5.006953239440918
    3. '       ' → logprob: -8.506953239440918
    4. '()
' → logprob: -11.131953239440918
    5. '=' → logprob: -12.506953239440918
    6. '():
' → logprob: -12.631953239440918
    7. '()\' → logprob: -12.756953239440918
    8. '()==' → logprob: -12.881953239440918
    9. '()

' → logprob: -13.631953239440918
    10. '())
' → logprob: -13.631953239440918

Token 2488: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3140472173690796
    2. '       ' → logprob: -1.3140472173690796
    3. ' if' → logprob: -7.189047336578369
    4. '   ' → logprob: -10.939046859741211
    5. '```' → logprob: -11.689046859741211
    6. 'If' → logprob: -13.064046859741211
    7. '	if' → logprob: -14.314046859741211
    8. '
' → logprob: -14.564046859741211
    9. '        
' → logprob: -15.689046859741211
    10. '	' → logprob: -15.689046859741211

Token 2489: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -6.0629870858974755e-05
    2. '       ' → logprob: -9.75006103515625
    3. ' if' → logprob: -13.00006103515625
    4. 'If' → logprob: -18.62506103515625
    5. '   ' → logprob: -18.75006103515625
    6. '	if' → logprob: -19.25006103515625
    7. '```' → logprob: -20.00006103515625
    8. ';if' → logprob: -20.25006103515625
    9. '
' → logprob: -20.62506103515625
    10. '#' → logprob: -21.12506103515625

Token 2490: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.027774808928370476
    2. ' not' → logprob: -4.027774810791016
    3. 'not' → logprob: -4.777774810791016
    4. ' N' → logprob: -6.777774810791016
    5. '   ' → logprob: -10.902774810791016
    6. 'len' → logprob: -12.277774810791016
    7. '       ' → logprob: -13.902774810791016
    8. ' ' → logprob: -14.027774810791016
    9. '
' → logprob: -15.777774810791016
    10. '```' → logprob: -17.152774810791016

Token 2491: '_line' (ID: 14418)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09380318224430084
    2. '_line' → logprob: -2.5938031673431396
    3. ' ==' → logprob: -4.468803405761719
    4. '=' → logprob: -6.218803405761719
    5. '_' → logprob: -7.843803405761719
    6. '```' → logprob: -8.593803405761719
    7. '==
' → logprob: -8.718803405761719
    8. '!=' → logprob: -8.968803405761719
    9. '>' → logprob: -9.093803405761719
    10. '_LINE' → logprob: -9.218803405761719

Token 2492: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.005384468473494053
    2. ' ==' → logprob: -5.25538444519043
    3. '()==' → logprob: -9.25538444519043
    4. '==
' → logprob: -10.25538444519043
    5. '=' → logprob: -11.75538444519043
    6. '===' → logprob: -11.75538444519043
    7. '=="' → logprob: -13.75538444519043
    8. ')==' → logprob: -13.75538444519043
    9. '=='' → logprob: -14.00538444519043
    10. ']==' → logprob: -14.38038444519043

Token 2493: ' '' (ID: 461)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.6069344282150269
    2. ''' → logprob: -0.8569344282150269
    3. '"' → logprob: -3.8569345474243164
    4. '""' → logprob: -4.731934547424316
    5. '0' → logprob: -8.356934547424316
    6. '''
' → logprob: -9.356934547424316
    7. ''''' → logprob: -9.606934547424316
    8. '''''' → logprob: -9.606934547424316
    9. '"":' → logprob: -9.981934547424316
    10. '<|end|>' → logprob: -11.731934547424316

Token 2494: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08319838345050812
    2. ''' → logprob: -2.833198308944702
    3. '':
' → logprob: -4.583198547363281
    4. '''' → logprob: -4.708198547363281
    5. ''):
' → logprob: -7.583198547363281
    6. '':' → logprob: -7.583198547363281
    7. '```' → logprob: -8.833198547363281
    8. 'def' → logprob: -9.083198547363281
    9. '"' → logprob: -9.208198547363281
    10. '""' → logprob: -9.333198547363281

Token 2495: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.009463872760534286
    2. '':' → logprob: -4.884463787078857
    3. ''):
' → logprob: -6.509463787078857
    4. '\n' → logprob: -8.259464263916016
    5. ''' → logprob: -10.009464263916016
    6. ':
' → logprob: -11.134464263916016
    7. '')' → logprob: -11.509464263916016
    8. '':
' → logprob: -11.509464263916016
    9. ''):' → logprob: -11.759464263916016
    10. '):
' → logprob: -11.759464263916016

Token 2496: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002547832846175879
    2. '       ' → logprob: -8.87525463104248
    3. '		' → logprob: -10.37525463104248
    4. '	       ' → logprob: -11.12525463104248
    5. '   ' → logprob: -11.25025463104248
    6. ':
' → logprob: -11.37525463104248
    7. '               ' → logprob: -11.50025463104248
    8. ':' → logprob: -11.87525463104248
    9. '          ' → logprob: -12.00025463104248
    10. '```' → logprob: -12.50025463104248

Token 2497: ' break' (ID: 2338)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.37789973616600037
    2. '           ' → logprob: -1.3778997659683228
    3. '       ' → logprob: -2.877899646759033
    4. ' return' → logprob: -5.502899646759033
    5. 'break' (adapté à ' break') → logprob: -6.252899646759033
    6. '   ' → logprob: -8.252900123596191
    7. ' break' → logprob: -10.377900123596191
    8. '		' → logprob: -11.252900123596191
    9. '               ' → logprob: -11.502900123596191
    10. '	return' → logprob: -11.627900123596191

Token 2498: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031142855063080788
    2. '
' → logprob: -3.6561429500579834
    3. '        
' → logprob: -5.406142711639404
    4. '   ' → logprob: -8.406143188476562
    5. '    
' → logprob: -9.656143188476562
    6. '```' → logprob: -10.281143188476562
    7. '  
' → logprob: -12.031143188476562
    8. '            
' → logprob: -12.656143188476562
    9. '       
' → logprob: -13.406143188476562
    10. '           ' → logprob: -13.531143188476562

Token 2499: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00043639098294079304
    2. '```' → logprob: -8.250436782836914
    3. '        
' → logprob: -9.375436782836914
    4. '   ' → logprob: -9.875436782836914
    5. '
' → logprob: -10.250436782836914
    6. '``' → logprob: -14.250436782836914
    7. '           ' → logprob: -14.375436782836914
    8. '    
' → logprob: -14.500436782836914
    9. '`' → logprob: -15.500436782836914
    10. '​' → logprob: -15.625436782836914

Token 2500: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.053209323436021805
    2. 'n' → logprob: -3.6782093048095703
    3. '       ' → logprob: -4.05320930480957
    4. 'parts' → logprob: -4.80320930480957
    5. '   ' → logprob: -8.67820930480957
    6. ' parts' → logprob: -8.80320930480957
    7. 'tokens' → logprob: -9.30320930480957
    8. 'nums' → logprob: -9.42820930480957
    9. 'r' → logprob: -9.55320930480957
    10. ' N' → logprob: -9.55320930480957

Token 2501: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10586307942867279
    2. '=' → logprob: -2.605863094329834
    3. '_line' → logprob: -4.605863094329834
    4. '       ' → logprob: -4.605863094329834
    5. ',' → logprob: -5.980863094329834
    6. '   ' → logprob: -6.855863094329834
    7. '_' → logprob: -7.105863094329834
    8. ' ' → logprob: -7.980863094329834
    9. '        ' → logprob: -8.105862617492676
    10. '    ' → logprob: -8.230862617492676

Token 2502: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07889430224895477
    2. ' int' → logprob: -2.5788943767547607
    3. ' N' → logprob: -13.20389461517334
    4. 'N' → logprob: -13.82889461517334
    5. '       ' → logprob: -14.32889461517334
    6. '=int' → logprob: -15.20389461517334
    7. '   ' → logprob: -15.45389461517334
    8. '[int' → logprob: -15.82889461517334
    9. '(int' → logprob: -15.95389461517334
    10. ' ' → logprob: -16.203893661499023

Token 2503: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -8.65707261255011e-06
    2. 'N' → logprob: -11.875008583068848
    3. '(' → logprob: -13.625008583068848
    4. '(
' → logprob: -15.250008583068848
    5. ' (' → logprob: -16.375009536743164
    6. '((' → logprob: -18.375009536743164
    7. '	N' → logprob: -18.500009536743164
    8. '   ' → logprob: -19.000009536743164
    9. '(n' → logprob: -19.125009536743164
    10. '[N' → logprob: -19.750009536743164

Token 2504: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0003079334564972669
    2. ')
' → logprob: -9.5003080368042
    3. ')' → logprob: -9.6253080368042
    4. '(N' → logprob: -9.7503080368042
    5. 'Line' → logprob: -10.1253080368042
    6. 'line' → logprob: -11.1253080368042
    7. 'N' → logprob: -11.2503080368042
    8. '_LINE' → logprob: -11.7503080368042
    9. '(_' → logprob: -11.8753080368042
    10. ' _' → logprob: -12.2503080368042

Token 2505: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31534692645072937
    2. ')
' → logprob: -1.3153469562530518
    3. '       ' → logprob: -6.315346717834473
    4. ')
' → logprob: -9.440346717834473
    5. '   ' → logprob: -9.815346717834473
    6. '
' → logprob: -10.940346717834473
    7. '):
' → logprob: -10.940346717834473
    8. '```' → logprob: -11.315346717834473
    9. '')' → logprob: -11.565346717834473
    10. ')`' → logprob: -11.690346717834473

Token 2506: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004762499127537012
    2. 'blocks' → logprob: -6.254762649536133
    3. '```' → logprob: -6.379762649536133
    4. '   ' → logprob: -7.004762649536133
    5. '        
' → logprob: -9.254762649536133
    6. '``' → logprob: -10.129762649536133
    7. 'block' → logprob: -11.504762649536133
    8. '	block' → logprob: -11.504762649536133
    9. '<|end|>' → logprob: -11.754762649536133
    10. '	lines' → logprob: -11.754762649536133

Token 2507: ' sx' (ID: 39428)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.0026051488239318132
    2. 'points' → logprob: -7.127604961395264
    3. 'balls' → logprob: -7.127604961395264
    4. '   ' → logprob: -7.252604961395264
    5. '       ' → logprob: -8.502605438232422
    6. 'ball' → logprob: -10.502605438232422
    7. 'start' → logprob: -10.627605438232422
    8. '```' → logprob: -11.502605438232422
    9. 'lines' → logprob: -11.752605438232422
    10. 'starts' → logprob: -12.627605438232422

Token 2508: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004083891399204731
    2. ',s' → logprob: -8.375408172607422
    3. ' ,' → logprob: -9.250408172607422
    4. ',
' → logprob: -9.875408172607422
    5. '_,' → logprob: -10.875408172607422
    6. '=' → logprob: -12.500408172607422
    7. '<|end|>' → logprob: -13.750408172607422
    8. ' =' → logprob: -14.000408172607422
    9. ',y' → logprob: -14.125408172607422
    10. ',user' → logprob: -14.250408172607422

Token 2509: ' sy' (ID: 6157)
  Prédit: 'sy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sy' → logprob: -0.06200813129544258
    2. ' sy' → logprob: -2.8120081424713135
    3. '_sy' → logprob: -10.687007904052734
    4. 'sys' → logprob: -11.187007904052734
    5. 's' → logprob: -13.187007904052734
    6. ' sys' → logprob: -14.687007904052734
    7. '0' → logprob: -14.687007904052734
    8. 'syz' → logprob: -15.187007904052734
    9. 'ay' → logprob: -15.687007904052734
    10. 'Sy' → logprob: -15.937007904052734

Token 2510: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03232875093817711
    2. '=' → logprob: -3.6573288440704346
    3. ' =' → logprob: -5.1573286056518555
    4. ',s' → logprob: -9.157328605651855
    5. ' ,' → logprob: -9.657328605651855
    6. ',line' → logprob: -10.532328605651855
    7. '=line' → logprob: -11.657328605651855
    8. '<|end|>' → logprob: -11.782328605651855
    9. ',r' → logprob: -12.032328605651855
    10. '=sys' → logprob: -12.157328605651855

Token 2511: ' ex' (ID: 513)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.001504982472397387
    2. ' ex' → logprob: -6.501504898071289
    3. ' =' → logprob: -13.876504898071289
    4. '=' → logprob: -14.126504898071289
    5. '_ex' → logprob: -15.126504898071289
    6. '(ex' → logprob: -15.126504898071289
    7. 'ey' → logprob: -16.50150489807129
    8. 'tx' → logprob: -16.62650489807129
    9. '	ex' → logprob: -16.75150489807129
    10. '
' → logprob: -17.50150489807129

Token 2512: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016943422378972173
    2. '=' → logprob: -6.626694202423096
    3. ' =' → logprob: -8.126694679260254
    4. ' ,' → logprob: -9.876694679260254
    5. ',s' → logprob: -11.501694679260254
    6. ',line' → logprob: -12.876694679260254
    7. ',
' → logprob: -13.001694679260254
    8. '<|end|>' → logprob: -13.251694679260254
    9. '_,' → logprob: -13.626694679260254
    10. '‌,' → logprob: -14.751694679260254

Token 2513: ' ey' (ID: 17600)
  Prédit: 'ey'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ey' → logprob: -0.00020473242329899222
    2. ' ey' → logprob: -8.500205039978027
    3. 'ex' → logprob: -14.000205039978027
    4. 'eys' → logprob: -14.875205039978027
    5. 'eyey' → logprob: -17.25020408630371
    6. 'eyd' → logprob: -18.25020408630371
    7. 'ew' → logprob: -18.62520408630371
    8. 'ery' → logprob: -18.62520408630371
    9. 'e' → logprob: -18.87520408630371
    10. 'sy' → logprob: -18.87520408630371

Token 2514: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4745289981365204
    2. ' =' → logprob: -0.9745290279388428
    3. ',' → logprob: -8.474529266357422
    4. '=line' → logprob: -8.974529266357422
    5. '=sys' → logprob: -9.474529266357422
    6. '=s' → logprob: -10.599529266357422
    7. '   ' → logprob: -13.224529266357422
    8. '=
' → logprob: -13.224529266357422
    9. '	' → logprob: -13.724529266357422
    10. ',s' → logprob: -13.849529266357422

Token 2515: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.2368982881307602
    2. 'map' → logprob: -2.236898183822632
    3. ' map' → logprob: -2.736898183822632
    4. ' read' → logprob: -3.236898183822632
    5. 'list' → logprob: -9.861898422241211
    6. ' list' → logprob: -10.986898422241211
    7. '	read' → logprob: -12.611898422241211
    8. '[' → logprob: -12.986898422241211
    9. '   ' → logprob: -12.986898422241211
    10. ' ' → logprob: -13.111898422241211

Token 2516: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.08565905690193176
    2. '_float' → logprob: -2.8356590270996094
    3. 'int' → logprob: -3.9606590270996094
    4. '_line' → logprob: -6.585659027099609
    5. '()' → logprob: -7.710659027099609
    6. ')_' → logprob: -7.835659027099609
    7. '_tokens' → logprob: -8.08565902709961
    8. ')' → logprob: -8.08565902709961
    9. '_' → logprob: -8.33565902709961
    10. '_coords' → logprob: -8.83565902709961

Token 2517: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002797153079882264
    2. '()' → logprob: -6.2527971267700195
    3. '()
' → logprob: -7.1277971267700195
    4. '())' → logprob: -10.75279712677002
    5. '().' → logprob: -11.00279712677002
    6. '())
' → logprob: -11.25279712677002
    7. '(),' → logprob: -13.00279712677002
    8. '()[' → logprob: -13.12779712677002
    9. '()`' → logprob: -13.12779712677002
    10. '```' → logprob: -13.37779712677002

Token 2518: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01708444580435753
    2. '<|end|>' → logprob: -4.14208459854126
    3. '        
' → logprob: -8.392084121704102
    4. ',' → logprob: -8.767084121704102
    5. '#' → logprob: -9.017084121704102
    6. ')' → logprob: -9.392084121704102
    7. '<|end|>' → logprob: -9.392084121704102
    8. '()' → logprob: -9.392084121704102
    9. '   ' → logprob: -9.892084121704102
    10. '
' → logprob: -10.142084121704102

Token 2519: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005922323907725513
    2. 'blocks' → logprob: -7.625592231750488
    3. '   ' → logprob: -9.250592231750488
    4. '```' → logprob: -12.000592231750488
    5. ' blocks' → logprob: -14.000592231750488
    6. 'block' → logprob: -14.750592231750488
    7. '           ' → logprob: -15.000592231750488
    8. '_blocks' → logprob: -15.750592231750488
    9. '	   ' → logprob: -16.500593185424805
    10. '	' → logprob: -17.000593185424805

Token 2520: ' blocks' (ID: 18125)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' (adapté à ' blocks') → logprob: -0.048661742359399796
    2. '       ' → logprob: -3.048661708831787
    3. '   ' → logprob: -9.923662185668945
    4. ' blocks' → logprob: -10.673662185668945
    5. 'block' → logprob: -14.048662185668945
    6. '```' → logprob: -14.548662185668945
    7. '_blocks' → logprob: -14.923662185668945
    8. '.blocks' → logprob: -15.298662185668945
    9. '	' → logprob: -15.673662185668945
    10. '           ' → logprob: -16.173662185668945

Token 2521: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741763174533844
    2. ' =' → logprob: -0.974176287651062
    3. '   ' → logprob: -9.474176406860352
    4. '=[]' → logprob: -11.474176406860352
    5. '=[]
' → logprob: -12.224176406860352
    6. '       ' → logprob: -12.224176406860352
    7. '    ' → logprob: -13.599176406860352
    8. '        ' → logprob: -15.599176406860352
    9. '	' → logprob: -15.599176406860352
    10. '=[' → logprob: -16.34917640686035

Token 2522: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003828340908512473
    2. '[]
' → logprob: -5.753828525543213
    3. '[]' → logprob: -7.753828525543213
    4. '[list' → logprob: -10.253828048706055
    5. '[get' → logprob: -10.503828048706055
    6. '[class' → logprob: -11.378828048706055
    7. '[int' → logprob: -11.503828048706055
    8. '[line' → logprob: -11.628828048706055
    9. '[array' → logprob: -11.628828048706055
    10. '[result' → logprob: -11.628828048706055

Token 2523: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05770556628704071
    2. 'for' → logprob: -2.9327056407928467
    3. ' for' → logprob: -5.932705402374268
    4. '   ' → logprob: -9.807705879211426
    5. '<|end|>' → logprob: -10.182705879211426
    6. '	for' → logprob: -10.432705879211426
    7. '```' → logprob: -10.557705879211426
    8. '	   ' → logprob: -11.807705879211426
    9. '	' → logprob: -12.557705879211426
    10. '        
' → logprob: -12.807705879211426

Token 2524: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.008626513183116913
    2. '       ' → logprob: -4.758626461029053
    3. ' for' → logprob: -11.383626937866211
    4. '   ' → logprob: -14.508626937866211
    5. '	for' → logprob: -15.633626937866211
    6. '```' → logprob: -17.75862693786621
    7. '
' → logprob: -19.00862693786621
    8. '        
' → logprob: -19.25862693786621
    9. '           ' → logprob: -19.38362693786621
    10. 'while' → logprob: -19.63362693786621

Token 2525: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3782830137643032e-05
    2. '_
' → logprob: -12.25001335144043
    3. '_i' → logprob: -12.25001335144043
    4. ' _' → logprob: -13.50001335144043
    5. '_in' → logprob: -13.62501335144043
    6. '_range' → logprob: -13.87501335144043
    7. 'i' → logprob: -16.00001335144043
    8. '
' → logprob: -16.00001335144043
    9. ' in' → logprob: -16.12501335144043
    10. '_=' → logprob: -16.25001335144043

Token 2526: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5968387722969055
    2. ' in' → logprob: -0.8468387722969055
    3. 'range' → logprob: -3.9718387126922607
    4. ' range' → logprob: -6.84683895111084
    5. '_' → logprob: -7.34683895111084
    6. 'i' → logprob: -9.72183895111084
    7. ' ' → logprob: -10.47183895111084
    8. '0' → logprob: -10.59683895111084
    9. '
' → logprob: -11.97183895111084
    10. '  ' → logprob: -12.47183895111084

Token 2527: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.318681188422488e-05
    2. ' range' → logprob: -11.25001335144043
    3. '
' → logprob: -16.50001335144043
    4. '   ' → logprob: -18.00001335144043
    5. ' ' → logprob: -19.12501335144043
    6. '  ' → logprob: -19.50001335144043
    7. '	range' → logprob: -20.25001335144043
    8. '    ' → logprob: -20.37501335144043
    9. '0' → logprob: -20.62501335144043
    10. '_' → logprob: -20.75001335144043

Token 2528: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0013317868579179049
    2. '(N' → logprob: -6.751331806182861
    3. 'int' → logprob: -9.626331329345703
    4. ' N' → logprob: -10.126331329345703
    5. 'range' → logprob: -10.251331329345703
    6. '   ' → logprob: -11.001331329345703
    7. ' ' → logprob: -13.626331329345703
    8. ' range' → logprob: -14.251331329345703
    9. '0' → logprob: -14.876331329345703
    10. '
' → logprob: -15.001331329345703

Token 2529: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.28526994585990906
    2. ':
' → logprob: -1.6602699756622314
    3. '       ' → logprob: -3.9102699756622314
    4. '():
' → logprob: -4.035269737243652
    5. ':' → logprob: -4.785269737243652
    6. '):' → logprob: -4.785269737243652
    7. '           ' → logprob: -6.160269737243652
    8. '   ' → logprob: -7.035269737243652
    9. ',' → logprob: -8.785269737243652
    10. '=' → logprob: -9.535269737243652

Token 2530: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018265502294525504
    2. '   ' → logprob: -6.376826763153076
    3. '	       ' → logprob: -10.001826286315918
    4. '```' → logprob: -10.876826286315918
    5. '	   ' → logprob: -11.376826286315918
    6. '    	   ' → logprob: -11.501826286315918
    7. '		   ' → logprob: -11.751826286315918
    8. 'line' → logprob: -12.126826286315918
    9. ' line' → logprob: -12.251826286315918
    10. '       ' → logprob: -12.501826286315918

Token 2531: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.016105452552437782
    2. '   ' → logprob: -4.891105651855469
    3. 'x' → logprob: -6.266105651855469
    4. 'blocks' → logprob: -6.266105651855469
    5. 'mx' → logprob: -6.391105651855469
    6. 'line' → logprob: -7.141105651855469
    7. 'bx' → logprob: -7.266105651855469
    8. 'block' → logprob: -7.266105651855469
    9. 'xmin' → logprob: -7.516105651855469
    10. 'parts' → logprob: -9.516105651855469

Token 2532: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.704273118884885e-07
    2. '_x' → logprob: -14.625000953674316
    3. '<|end|>' → logprob: -16.0
    4. ' x' → logprob: -16.875
    5. '```' → logprob: -18.0
    6. '<|end|>' → logprob: -18.5
    7. '[' → logprob: -19.125
    8. '   ' → logprob: -19.125
    9. ',' → logprob: -19.625
    10. '_' → logprob: -19.75

Token 2533: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008585774339735508
    2. ',min' → logprob: -7.500858783721924
    3. ' ,' → logprob: -8.875858306884766
    4. '_,' → logprob: -9.375858306884766
    5. ',line' → logprob: -11.250858306884766
    6. '<|end|>' → logprob: -11.250858306884766
    7. '<|end|>' → logprob: -11.375858306884766
    8. ',user' → logprob: -11.625858306884766
    9. ',int' → logprob: -11.625858306884766
    10. ',next' → logprob: -12.750858306884766

Token 2534: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0016466111410409212
    2. ' min' → logprob: -6.501646518707275
    3. 'm' → logprob: -9.126646995544434
    4. 'mini' → logprob: -10.626646995544434
    5. 'max' → logprob: -12.751646995544434
    6. 'mi' → logprob: -13.251646995544434
    7. 'mint' → logprob: -13.376646995544434
    8. 'ming' → logprob: -13.876646995544434
    9. 'mine' → logprob: -14.001646995544434
    10. 'mind' → logprob: -14.501646995544434

Token 2535: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.062394823879003525
    2. 'x' → logprob: -2.812394857406616
    3. 'min' → logprob: -7.812394618988037
    4. ',' → logprob: -11.062395095825195
    5. ' ymin' → logprob: -13.687395095825195
    6. '1' → logprob: -13.937395095825195
    7. 'xmin' → logprob: -13.937395095825195
    8. '<|end|>' → logprob: -14.687395095825195
    9. '0' → logprob: -14.937395095825195
    10. ' ' → logprob: -15.062395095825195

Token 2536: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8312570318812504e-05
    2. ' ,' → logprob: -11.250018119812012
    3. ',max' → logprob: -12.250018119812012
    4. ',min' → logprob: -14.750018119812012
    5. '_,' → logprob: -17.000019073486328
    6. ',
' → logprob: -17.125019073486328
    7. '=' → logprob: -17.125019073486328
    8. 'max' → logprob: -17.250019073486328
    9. '           ' → logprob: -17.500019073486328
    10. ',end' → logprob: -19.000019073486328

Token 2537: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0006045030895620584
    2. ' max' → logprob: -7.500604629516602
    3. 'min' → logprob: -9.875604629516602
    4. ' min' → logprob: -17.1256046295166
    5. 'maxlength' → logprob: -17.1256046295166
    6. '_max' → logprob: -17.2506046295166
    7. '           ' → logprob: -17.2506046295166
    8. '	max' → logprob: -19.3756046295166
    9. 'm' → logprob: -19.7506046295166
    10. '   ' → logprob: -20.1256046295166

Token 2538: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: 0.0
    2. ',' → logprob: -17.125
    3. '```' → logprob: -17.625
    4. '_x' → logprob: -18.375
    5. '_,' → logprob: -20.0
    6. '
' → logprob: -20.25
    7. ' x' → logprob: -20.375
    8. '   ' → logprob: -21.0
    9. '``' → logprob: -21.0
    10. '_' → logprob: -21.625

Token 2539: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.417976379045285e-05
    2. ' ,' → logprob: -11.000043869018555
    3. '_,' → logprob: -11.250043869018555
    4. ',max' → logprob: -11.875043869018555
    5. ',min' → logprob: -12.125043869018555
    6. '=' → logprob: -13.750043869018555
    7. ',
' → logprob: -15.750043869018555
    8. ' =' → logprob: -15.750043869018555
    9. '<|end|>' → logprob: -15.875043869018555
    10. ',user' → logprob: -16.125043869018555

Token 2540: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.009100918658077717
    2. 'min' → logprob: -5.134100914001465
    3. ' max' → logprob: -5.759100914001465
    4. ' min' → logprob: -11.509100914001465
    5. 'm' → logprob: -12.884100914001465
    6. '_max' → logprob: -15.884100914001465
    7. 'maxlength' → logprob: -15.884100914001465
    8. '	max' → logprob: -16.00910186767578
    9. 'may' → logprob: -16.50910186767578
    10. ' ' → logprob: -16.63410186767578

Token 2541: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.22681842744350433
    2. 'x' → logprob: -1.6018184423446655
    3. 'max' → logprob: -6.601818561553955
    4. ',' → logprob: -11.226818084716797
    5. 'ey' → logprob: -11.601818084716797
    6. ',max' → logprob: -12.351818084716797
    7. 'ay' → logprob: -12.601818084716797
    8. '=' → logprob: -12.976818084716797
    9. '=max' → logprob: -13.226818084716797
    10. '_max' → logprob: -13.351818084716797

Token 2542: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016742534353397787
    2. ' ,' → logprob: -9.125167846679688
    3. ' =' → logprob: -10.625167846679688
    4. '=' → logprob: -10.625167846679688
    5. ',r' → logprob: -12.250167846679688
    6. '           ' → logprob: -13.625167846679688
    7. ',min' → logprob: -13.875167846679688
    8. '_,' → logprob: -14.500167846679688
    9. ',s' → logprob: -15.125167846679688
    10. ',max' → logprob: -15.375167846679688

Token 2543: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0007187459850683808
    2. 'height' → logprob: -7.875718593597412
    3. ' h' → logprob: -8.00071907043457
    4. '   ' → logprob: -13.87571907043457
    5. 'max' → logprob: -14.12571907043457
    6. ' height' → logprob: -14.62571907043457
    7. '=' → logprob: -15.25071907043457
    8. '    ' → logprob: -15.62571907043457
    9. ' =' → logprob: -15.75071907043457
    10. ' ' → logprob: -16.00071907043457

Token 2544: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5761702656745911
    2. ' =' → logprob: -0.8261702656745911
    3. ',' → logprob: -9.076169967651367
    4. '=sys' → logprob: -10.076169967651367
    5. '   ' → logprob: -10.201169967651367
    6. '=line' → logprob: -10.701169967651367
    7. '    ' → logprob: -12.951169967651367
    8. '=input' → logprob: -13.326169967651367
    9. '       ' → logprob: -13.451169967651367
    10. '	' → logprob: -13.576169967651367

Token 2545: ' read' (ID: 1729)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.4511266350746155
    2. 'read' → logprob: -1.0761265754699707
    3. ' map' → logprob: -3.9511265754699707
    4. ' read' → logprob: -6.326126575469971
    5. 'list' → logprob: -6.826126575469971
    6. '   ' → logprob: -10.576127052307129
    7. ' list' → logprob: -10.576127052307129
    8. '
' → logprob: -12.451127052307129
    9. '	map' → logprob: -12.951127052307129
    10. '[' → logprob: -13.076127052307129

Token 2546: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.09051654487848282
    2. 'int' → logprob: -2.4655165672302246
    3. 'ints' → logprob: -6.965516567230225
    4. 'map' → logprob: -8.090516090393066
    5. '[int' → logprob: -8.590516090393066
    6. '(int' → logprob: -9.465516090393066
    7. 'Int' → logprob: -11.090516090393066
    8. '(map' → logprob: -11.590516090393066
    9. 's' → logprob: -11.715516090393066
    10. '
' → logprob: -11.715516090393066

Token 2547: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01381591521203518
    2. 't' → logprob: -4.638815879821777
    3. 'ts' → logprob: -5.513815879821777
    4. 'ints' → logprob: -11.263815879821777
    5. 'nts' → logprob: -12.888815879821777
    6. 'int' → logprob: -13.138815879821777
    7. '
' → logprob: -14.013815879821777
    8. 'def' → logprob: -14.138815879821777
    9. 'nt' → logprob: -15.013815879821777
    10. '```' → logprob: -15.013815879821777

Token 2548: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012153579853475094
    2. '<|end|>' → logprob: -4.637153625488281
    3. '<|end|>' → logprob: -6.887153625488281
    4. '
' → logprob: -7.762153625488281
    5. ',' → logprob: -8.387153625488281
    6. ')' → logprob: -8.637153625488281
    7. '       ' → logprob: -9.137153625488281
    8. '            
' → logprob: -9.262153625488281
    9. ':
' → logprob: -9.637153625488281
    10. '		' → logprob: -9.762153625488281

Token 2549: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.5597102396423e-05
    2. '       ' → logprob: -10.750035285949707
    3. '```' → logprob: -12.125035285949707
    4. '   ' → logprob: -12.250035285949707
    5. 'blocks' → logprob: -13.250035285949707
    6. '<|end|>' → logprob: -14.000035285949707
    7. '	       ' → logprob: -15.250035285949707
    8. '               ' → logprob: -15.250035285949707
    9. '		' → logprob: -15.750035285949707
    10. '          ' → logprob: -16.000036239624023

Token 2550: ' blocks' (ID: 18125)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' (adapté à ' blocks') → logprob: -0.2529907822608948
    2. '           ' → logprob: -1.50299072265625
    3. ' blocks' → logprob: -7.12799072265625
    4. '       ' → logprob: -9.25299072265625
    5. 'block' → logprob: -9.87799072265625
    6. 'if' → logprob: -9.87799072265625
    7. '#' → logprob: -10.37799072265625
    8. '   ' → logprob: -10.75299072265625
    9. '
' → logprob: -12.25299072265625
    10. ' if' → logprob: -13.75299072265625

Token 2551: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003015001420862973
    2. '.' → logprob: -8.375301361083984
    3. '           ' → logprob: -10.000301361083984
    4. '       ' → logprob: -11.875301361083984
    5. ' .' → logprob: -12.000301361083984
    6. '   ' → logprob: -12.375301361083984
    7. '.extend' → logprob: -12.375301361083984
    8. 'append' → logprob: -12.875301361083984
    9. '.app' → logprob: -14.500301361083984
    10. ').' → logprob: -16.125301361083984

Token 2552: '((' (ID: 2054)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.0016116275219246745
    2. '(' → logprob: -6.751611709594727
    3. '((' → logprob: -8.251611709594727
    4. ' (' → logprob: -8.751611709594727
    5. '   ' → logprob: -10.751611709594727
    6. '(max' → logprob: -14.376611709594727
    7. '[min' → logprob: -15.876611709594727
    8. '(M' → logprob: -17.376611709594727
    9. '  ' → logprob: -17.501611709594727
    10. '(mon' → logprob: -17.876611709594727

Token 2553: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.9361264946837764e-07
    2. ' min' → logprob: -15.875
    3. '_min' → logprob: -19.375
    4. '(min' → logprob: -19.875
    5. '   ' → logprob: -20.375
    6. '	min' → logprob: -20.375
    7. '[min' → logprob: -20.5
    8. '           ' → logprob: -22.0
    9. 'max' → logprob: -22.125
    10. '=min' → logprob: -22.875

Token 2554: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.128163257315464e-07
    2. '0' → logprob: -16.5
    3. 'min' → logprob: -17.875
    4. 'xmin' → logprob: -18.125
    5. ' x' → logprob: -18.125
    6. ')x' → logprob: -18.375
    7. '<|end|>' → logprob: -18.375
    8. '   ' → logprob: -19.0
    9. ',' → logprob: -19.25
    10. '       ' → logprob: -19.5

Token 2555: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003207538742572069
    2. ',min' → logprob: -5.753207683563232
    3. ' ,' → logprob: -11.628207206726074
    4. ',
' → logprob: -11.753207206726074
    5. ',user' → logprob: -12.503207206726074
    6. ',max' → logprob: -12.753207206726074
    7. ',next' → logprob: -13.253207206726074
    8. 'min' → logprob: -13.628207206726074
    9. ',m' → logprob: -14.003207206726074
    10. '<|end|>' → logprob: -14.878207206726074

Token 2556: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00317783304490149
    2. ' min' → logprob: -5.753177642822266
    3. 'max' → logprob: -16.128177642822266
    4. '_min' → logprob: -18.003177642822266
    5. '	min' → logprob: -18.753177642822266
    6. 'mini' → logprob: -19.128177642822266
    7. '[min' → logprob: -19.128177642822266
    8. '(min' → logprob: -19.628177642822266
    9. 'mind' → logprob: -19.753177642822266
    10. 'mint' → logprob: -20.253177642822266

Token 2557: 'y' (ID: 88)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.012649266980588436
    2. 'y' → logprob: -4.387649059295654
    3. ' min' → logprob: -9.762649536132812
    4. ' ymin' → logprob: -10.637649536132812
    5. 'nyi' → logprob: -10.887649536132812
    6. ',' → logprob: -11.512649536132812
    7. 'max' → logprob: -12.262649536132812
    8. 'm' → logprob: -12.262649536132812
    9. 'ny' → logprob: -12.762649536132812
    10. 'ney' → logprob: -12.887649536132812

Token 2558: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013846253568772227
    2. ',max' → logprob: -9.000138282775879
    3. ' ,' → logprob: -11.625138282775879
    4. ',
' → logprob: -12.625138282775879
    5. ',min' → logprob: -13.000138282775879
    6. 'max' → logprob: -15.625138282775879
    7. ',m' → logprob: -16.625139236450195
    8. '```' → logprob: -17.250139236450195
    9. ',user' → logprob: -17.375139236450195
    10. ',next' → logprob: -17.500139236450195

Token 2559: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -6.2729995988775045e-06
    2. ' max' → logprob: -12.000006675720215
    3. 'min' → logprob: -20.5000057220459
    4. '(max' → logprob: -21.3750057220459
    5. '_max' → logprob: -22.0000057220459
    6. '
' → logprob: -22.0000057220459
    7. ',max' → logprob: -22.8750057220459
    8. '[max' → logprob: -23.6250057220459
    9. '	max' → logprob: -24.3750057220459
    10. 'Max' → logprob: -24.8750057220459

Token 2560: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.106736039626412e-05
    2. 'max' → logprob: -10.500031471252441
    3. ',' → logprob: -12.875031471252441
    4. '```' → logprob: -15.250031471252441
    5. ',max' → logprob: -15.375031471252441
    6. 'y' → logprob: -15.875031471252441
    7. '(max' → logprob: -16.625030517578125
    8. '       ' → logprob: -16.875030517578125
    9. '_max' → logprob: -17.125030517578125
    10. ' max' → logprob: -17.125030517578125

Token 2561: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.478889215737581e-05
    2. ',max' → logprob: -10.250054359436035
    3. ',
' → logprob: -11.500054359436035
    4. ',min' → logprob: -12.250054359436035
    5. ' ,' → logprob: -12.375054359436035
    6. ',m' → logprob: -16.00005531311035
    7. ',\
' → logprob: -18.25005531311035
    8. ',user' → logprob: -18.25005531311035
    9. ',num' → logprob: -18.37505531311035
    10. ',next' → logprob: -18.62505531311035

Token 2562: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0001234428636962548
    2. ' max' → logprob: -9.000123023986816
    3. 'min' → logprob: -19.625123977661133
    4. '_max' → logprob: -20.375123977661133
    5. '(max' → logprob: -20.625123977661133
    6. ',max' → logprob: -21.000123977661133
    7. 'maxlength' → logprob: -22.375123977661133
    8. '[max' → logprob: -22.500123977661133
    9. 'maximize' → logprob: -23.125123977661133
    10. '	max' → logprob: -23.125123977661133

Token 2563: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0003086486831307411
    2. 'x' → logprob: -8.250308990478516
    3. 'max' → logprob: -10.625308990478516
    4. 'ay' → logprob: -10.750308990478516
    5. 'ey' → logprob: -14.000308990478516
    6. 'qy' → logprob: -15.750308990478516
    7. '
' → logprob: -16.875308990478516
    8. 'ya' → logprob: -16.875308990478516
    9. 'oy' → logprob: -17.000308990478516
    10. '_y' → logprob: -17.000308990478516

Token 2564: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.537180211627856e-05
    2. ',h' → logprob: -10.125045776367188
    3. ' ,' → logprob: -12.750045776367188
    4. ',
' → logprob: -13.125045776367188
    5. '```' → logprob: -16.500045776367188
    6. '),' → logprob: -16.875045776367188
    7. ',n' → logprob: -17.375045776367188
    8. ',r' → logprob: -17.625045776367188
    9. '
' → logprob: -17.750045776367188
    10. ',p' → logprob: -17.875045776367188

Token 2565: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.002475777640938759
    2. ' h' → logprob: -6.002475738525391
    3. '           ' → logprob: -16.87747573852539
    4. '
' → logprob: -17.00247573852539
    5. '```' → logprob: -17.62747573852539
    6. ' ' → logprob: -17.75247573852539
    7. '   ' → logprob: -17.75247573852539
    8. ' ' → logprob: -17.87747573852539
    9. '	h' → logprob: -18.87747573852539
    10. ')' → logprob: -18.87747573852539

Token 2566: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.12428545206785202
    2. ')' → logprob: -2.4992854595184326
    3. '))
' → logprob: -3.3742854595184326
    4. '       ' → logprob: -8.249285697937012
    5. '           ' → logprob: -9.249285697937012
    6. ')
' → logprob: -9.749285697937012
    7. '   ' → logprob: -9.999285697937012
    8. ')))' → logprob: -11.499285697937012
    9. '))

' → logprob: -12.874285697937012
    10. '))
' → logprob: -12.874285697937012

Token 2567: '        
' (ID: 3564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16956712305545807
    2. '```' → logprob: -1.9195671081542969
    3. '
' → logprob: -5.794567108154297
    4. '       ' → logprob: -5.919567108154297
    5. '``' → logprob: -6.544567108154297
    6. '    
' → logprob: -7.169567108154297
    7. 'max' → logprob: -7.544567108154297
    8. 'r' → logprob: -7.669567108154297
    9. '        
' → logprob: -9.669567108154297
    10. 'radius' → logprob: -9.794567108154297

Token 2568: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3690599203109741
    2. '```' → logprob: -1.2440599203109741
    3. '
' → logprob: -4.244060039520264
    4. '``' → logprob: -5.369060039520264
    5. '       ' → logprob: -7.619060039520264
    6. '    
' → logprob: -7.744060039520264
    7. 'r' → logprob: -8.119059562683105
    8. '<|end|>' → logprob: -10.244059562683105
    9. 'max' → logprob: -10.744059562683105
    10. '  
' → logprob: -11.119059562683105

Token 2569: ' #' (ID: 1069)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.1485287994146347
    2. '#' (adapté à ' #') → logprob: -3.398528814315796
    3. 'lo' → logprob: -3.398528814315796
    4. 'l' → logprob: -3.398528814315796
    5. 'left' → logprob: -4.023528575897217
    6. '   ' → logprob: -4.773528575897217
    7. '       ' → logprob: -5.273528575897217
    8. '```' → logprob: -5.398528575897217
    9. '
' → logprob: -7.523528575897217
    10. 'r' → logprob: -7.523528575897217

Token 2570: ' First' (ID: 8338)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.24134327471256256
    2. 'left' → logprob: -2.2413432598114014
    3. 'lo' → logprob: -2.7413432598114014
    4. '#' → logprob: -3.8663432598114014
    5. 'l' → logprob: -4.4913434982299805
    6. '       ' → logprob: -4.7413434982299805
    7. 'eps' → logprob: -6.3663434982299805
    8. 'lower' → logprob: -8.36634349822998
    9. 'EPS' → logprob: -8.61634349822998
    10. 'lb' → logprob: -8.74134349822998

Token 2571: ' check' (ID: 2371)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4110303223133087
    2. '#' → logprob: -1.6610302925109863
    3. 'low' → logprob: -2.4110302925109863
    4. '
' → logprob: -4.161030292510986
    5. 'lo' → logprob: -4.536030292510986
    6. 'left' → logprob: -4.661030292510986
    7. 'step' → logprob: -5.286030292510986
    8. 'r' → logprob: -5.411030292510986
    9. 'l' → logprob: -6.036030292510986
    10. ',' → logprob: -6.036030292510986

Token 2572: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09232861548662186
    2. 'fe' → logprob: -3.0923285484313965
    3. '       ' → logprob: -3.8423285484313965
    4. 'inter' → logprob: -4.5923285484313965
    5. '#' → logprob: -5.8423285484313965
    6. ' feasible' → logprob: -6.2173285484313965
    7. 'possible' → logprob: -6.2173285484313965
    8. '   ' → logprob: -6.5923285484313965
    9. 'r' → logprob: -6.9673285484313965
    10. ' if' → logprob: -7.0923285484313965

Token 2573: ' course' (ID: 4165)
  Prédit: 'course'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'course' → logprob: -0.010114200413227081
    2. 'not' → logprob: -5.3851141929626465
    3. ' course' → logprob: -5.7601141929626465
    4. 'line' → logprob: -6.1351141929626465
    5. ' not' → logprob: -9.260114669799805
    6. '   ' → logprob: -11.010114669799805
    7. ' line' → logprob: -11.135114669799805
    8. 'curve' → logprob: -11.760114669799805
    9. '(course' → logprob: -11.885114669799805
    10. 'point' → logprob: -12.635114669799805

Token 2574: ' line' (ID: 2543)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.356372594833374
    2. 'line' → logprob: -1.231372594833374
    3. ' line' → logprob: -5.356372833251953
    4. 'is' → logprob: -6.481372833251953
    5. 'inter' → logprob: -7.481372833251953
    6. '_inter' → logprob: -8.231372833251953
    7. 'bottom' → logprob: -8.856372833251953
    8. '#' → logprob: -9.231372833251953
    9. '_is' → logprob: -9.356372833251953
    10. '       ' → logprob: -9.731372833251953

Token 2575: ' intersects' (ID: 198484)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.06217953562736511
    2. '_inter' → logprob: -3.0621795654296875
    3. ' intersects' → logprob: -4.3121795654296875
    4. 'is' → logprob: -9.812179565429688
    5. '   ' → logprob: -11.937179565429688
    6. '       ' → logprob: -12.437179565429688
    7. ' is' → logprob: -12.437179565429688
    8. '
' → logprob: -12.937179565429688
    9. '```' → logprob: -12.937179565429688
    10. '.inter' → logprob: -13.187179565429688

Token 2576: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.00020926215802319348
    2. 'with' → logprob: -8.500208854675293
    3. ' any' → logprob: -12.625208854675293
    4. '_any' → logprob: -13.750208854675293
    5. '   ' → logprob: -14.500208854675293
    6. 'blocks' → logprob: -15.125208854675293
    7. 'block' → logprob: -15.875208854675293
    8. 'for' → logprob: -16.00020980834961
    9. '(any' → logprob: -16.75020980834961
    10. 'anyon' → logprob: -16.75020980834961

Token 2577: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -1.2352385965641588e-05
    2. '(block' → logprob: -11.500012397766113
    3. 'blocks' → logprob: -13.500012397766113
    4. ' block' → logprob: -14.750012397766113
    5. 'for' → logprob: -15.375012397766113
    6. 'of' → logprob: -16.500011444091797
    7. '       ' → logprob: -18.625011444091797
    8. '```' → logprob: -18.875011444091797
    9. 'blocked' → logprob: -19.125011444091797
    10. '   ' → logprob: -19.125011444091797

Token 2578: ''s' (ID: 885)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08018231391906738
    2. 'inter' → logprob: -2.7051823139190674
    3. 'if' → logprob: -5.205182075500488
    4. 'intersection' → logprob: -6.830182075500488
    5. ' if' → logprob: -6.955182075500488
    6. 'for' → logprob: -7.580182075500488
    7. 'collision' → logprob: -7.705182075500488
    8. ' for' → logprob: -7.830182075500488
    9. 'possible' → logprob: -8.205182075500488
    10. 'blocked' → logprob: -8.205182075500488

Token 2579: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.009900933131575584
    2. 'projection' → logprob: -4.75990104675293
    3. ' bottom' → logprob: -7.38490104675293
    4. '```' → logprob: -8.25990104675293
    5. 'block' → logprob: -8.38490104675293
    6. 'foot' → logprob: -10.00990104675293
    7. '(bottom' → logprob: -10.13490104675293
    8. ' projection' → logprob: -10.88490104675293
    9. 'project' → logprob: -10.88490104675293
    10. '
' → logprob: -10.88490104675293

Token 2580: ' surface' (ID: 9753)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03528285399079323
    2. 'inter' → logprob: -4.285283088684082
    3. 'for' → logprob: -4.660283088684082
    4. 'if' → logprob: -4.910283088684082
    5. 'line' → logprob: -6.410283088684082
    6. 'intersection' → logprob: -7.535283088684082
    7. '```' → logprob: -7.785283088684082
    8. ' for' → logprob: -8.160283088684082
    9. '   ' → logprob: -8.285283088684082
    10. 'block' → logprob: -8.660283088684082

Token 2581: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22008831799030304
    2. 'inter' → logprob: -1.7200883626937866
    3. 'if' → logprob: -4.095088481903076
    4. 'for' → logprob: -7.595088481903076
    5. 'blocked' → logprob: -7.845088481903076
    6. 'intersection' → logprob: -7.845088481903076
    7. ' if' → logprob: -8.595088005065918
    8. ' intersects' → logprob: -9.845088005065918
    9. 'possible' → logprob: -9.970088005065918
    10. 'collision' → logprob: -9.970088005065918

Token 2582: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0676763728260994
    2. 'inter' → logprob: -2.817676305770874
    3. 'if' → logprob: -5.442676544189453
    4. 'for' → logprob: -7.442676544189453
    5. 'blocked' → logprob: -7.942676544189453
    6. 'intersection' → logprob: -9.067676544189453
    7. 'possible' → logprob: -9.442676544189453
    8. 'collision' → logprob: -9.817676544189453
    9. 'block' → logprob: -10.192676544189453
    10. '```' → logprob: -10.192676544189453

Token 2583: ' #' (ID: 1069)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.6943913102149963
    2. '       ' → logprob: -0.8193913102149963
    3. 'if' → logprob: -3.4443912506103516
    4. 'blocked' → logprob: -4.444391250610352
    5. 'for' → logprob: -5.194391250610352
    6. 'collision' → logprob: -5.694391250610352
    7. 'intersection' → logprob: -6.069391250610352
    8. 'block' → logprob: -6.569391250610352
    9. 'possible' → logprob: -7.069391250610352
    10. 'coll' → logprob: -7.444391250610352

Token 2584: ' if' (ID: 538)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.5418261885643005
    2. '       ' → logprob: -0.9168261885643005
    3. 'if' → logprob: -5.291826248168945
    4. 'blocked' → logprob: -5.416826248168945
    5. 'for' → logprob: -5.916826248168945
    6. 'collision' → logprob: -6.416826248168945
    7. 'possible' → logprob: -6.541826248168945
    8. 'intersection' → logprob: -6.666826248168945
    9. 'conf' → logprob: -7.416826248168945
    10. 'block' → logprob: -7.916826248168945

Token 2585: ' yes' (ID: 14531)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.1641501486301422
    2. 'course' → logprob: -2.2891502380371094
    3. ' any' → logprob: -3.0391502380371094
    4. ' course' → logprob: -6.914150238037109
    5. 'line' → logprob: -7.539150238037109
    6. 'not' → logprob: -7.789150238037109
    7. '   ' → logprob: -9.03915023803711
    8. 'max' → logprob: -10.28915023803711
    9. '       ' → logprob: -10.78915023803711
    10. ' not' → logprob: -11.41415023803711

Token 2586: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.731189489364624
    2. '       ' → logprob: -0.981189489364624
    3. ':' → logprob: -2.356189489364624
    4. 'print' → logprob: -4.231189727783203
    5. ':
' → logprob: -4.606189727783203
    6. ' or' → logprob: -4.731189727783203
    7. ' print' → logprob: -4.981189727783203
    8. ' for' → logprob: -5.606189727783203
    9. ',' → logprob: -6.106189727783203
    10. '```' → logprob: -7.356189727783203

Token 2587: ' largest' (ID: 10574)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1906062215566635
    2. ' print' → logprob: -1.8156062364578247
    3. '           ' → logprob: -4.940606117248535
    4. '```' → logprob: -5.690606117248535
    5. '       ' → logprob: -8.440606117248535
    6. '``' → logprob: -11.315606117248535
    7. '   ' → logprob: -11.440606117248535
    8. '	print' → logprob: -12.065606117248535
    9. 'continue' → logprob: -12.315606117248535
    10. '	       ' → logprob: -12.690606117248535

Token 2588: ' radius' (ID: 21090)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2888742685317993
    2. 'radius' → logprob: -1.9138742685317993
    3. '_radius' → logprob: -3.4138741493225098
    4. 'possible' → logprob: -3.5388741493225098
    5. 'fe' → logprob: -4.16387414932251
    6. '_possible' → logprob: -4.78887414932251
    7. '_r' → logprob: -5.03887414932251
    8. ' radius' → logprob: -5.28887414932251
    9. ' feasible' → logprob: -6.03887414932251
    10. ' r' → logprob: -6.66387414932251

Token 2589: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34886032342910767
    2. ' =' → logprob: -1.223860263824463
    3. 'is' → logprob: -9.098860740661621
    4. '_possible' → logprob: -9.348860740661621
    5. ' is' → logprob: -9.598860740661621
    6. '       ' → logprob: -10.223860740661621
    7. '```' → logprob: -10.348860740661621
    8. 'max' → logprob: -11.098860740661621
    9. '=max' → logprob: -11.098860740661621
    10. 'possible' → logprob: -11.473860740661621

Token 2590: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3782830137643032e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -15.25001335144043
    4. '```' → logprob: -15.75001335144043
    5. '`' → logprob: -16.50001335144043
    6. '"' → logprob: -16.75001335144043
    7. '           ' → logprob: -16.87501335144043
    8. '000' → logprob: -17.25001335144043
    9. '.' → logprob: -17.37501335144043
    10. '       ' → logprob: -17.50001335144043

Token 2591: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. '"' → logprob: -13.875001907348633
    3. ' ' → logprob: -14.125001907348633
    4. '`' → logprob: -15.875001907348633
    5. '.' → logprob: -16.125001907348633
    6. ''' → logprob: -16.125001907348633
    7. '```' → logprob: -16.500001907348633
    8. '-' → logprob: -16.875001907348633
    9. '   ' → logprob: -17.000001907348633
    10. 'float' → logprob: -17.125001907348633

Token 2592: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16560140252113342
    2. 'inter' → logprob: -1.915601372718811
    3. 'if' → logprob: -6.1656012535095215
    4. 'intersection' → logprob: -7.2906012535095215
    5. '   ' → logprob: -7.5406012535095215
    6. '
' → logprob: -7.7906012535095215
    7. 'blocked' → logprob: -8.04060173034668
    8. 'found' → logprob: -8.29060173034668
    9. 'possible' → logprob: -8.41560173034668
    10. 'collision' → logprob: -8.41560173034668

Token 2593: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.951771421066951e-05
    2. '```' → logprob: -11.250029563903809
    3. 'if' → logprob: -11.375029563903809
    4. '   ' → logprob: -13.125029563903809
    5. '
' → logprob: -13.625029563903809
    6. ' if' → logprob: -13.750029563903809
    7. '           ' → logprob: -15.125029563903809
    8. 'found' → logprob: -15.375029563903809
    9. '        
' → logprob: -15.875029563903809
    10. 'possible' → logprob: -17.125028610229492

Token 2594: ' intersects' (ID: 198484)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.3885979652404785
    2. '       ' → logprob: -1.6385979652404785
    3. 'if' → logprob: -2.1385979652404785
    4. 'intersection' → logprob: -5.5135979652404785
    5. 'found' → logprob: -5.8885979652404785
    6. 'blocked' → logprob: -7.5135979652404785
    7. 'max' → logprob: -7.6385979652404785
    8. 'possible' → logprob: -8.13859748840332
    9. 'collision' → logprob: -8.26359748840332
    10. '```' → logprob: -8.76359748840332

Token 2595: '_line' (ID: 14418)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3134877383708954
    2. ' =' → logprob: -1.3134877681732178
    3. '_' → logprob: -8.563488006591797
    4. '_=' → logprob: -11.313488006591797
    5. '=False' → logprob: -12.063488006591797
    6. '   ' → logprob: -12.063488006591797
    7. '=True' → logprob: -12.563488006591797
    8. '_for' → logprob: -12.563488006591797
    9. '    ' → logprob: -14.313488006591797
    10. '       ' → logprob: -14.313488006591797

Token 2596: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012926316820085049
    2. ' =' → logprob: -4.76292610168457
    3. '_' → logprob: -6.01292610168457
    4. 's' → logprob: -6.63792610168457
    5. '_=' → logprob: -7.88792610168457
    6. '=True' → logprob: -10.63792610168457
    7. '```' → logprob: -10.63792610168457
    8. 'es' → logprob: -10.88792610168457
    9. '?' → logprob: -11.01292610168457
    10. '_with' → logprob: -11.01292610168457

Token 2597: ' False' (ID: 7983)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.6931719779968262
    2. 'False' → logprob: -0.6931719779968262
    3. ' False' → logprob: -10.818172454833984
    4. '   ' → logprob: -12.943172454833984
    5. ' any' → logprob: -13.318172454833984
    6. 'false' → logprob: -15.943172454833984
    7. 'Any' → logprob: -16.068172454833984
    8. '0' → logprob: -16.193172454833984
    9. '=False' → logprob: -16.443172454833984
    10. '```' → logprob: -16.568172454833984

Token 2598: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01324081514030695
    2. ' for' → logprob: -4.513240814208984
    3. 'for' → logprob: -6.138240814208984
    4. '<|end|>' → logprob: -11.513240814208984
    5. ',' → logprob: -11.763240814208984
    6. '
' → logprob: -12.513240814208984
    7. '   ' → logprob: -12.638240814208984
    8. '        
' → logprob: -13.013240814208984
    9. '	for' → logprob: -13.263240814208984
    10. '           ' → logprob: -14.013240814208984

Token 2599: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06671065837144852
    2. ' for' → logprob: -3.3167107105255127
    3. 'for' → logprob: -3.5667107105255127
    4. '   ' → logprob: -11.566710472106934
    5. '	for' → logprob: -12.816710472106934
    6. '```' → logprob: -14.066710472106934
    7. '           ' → logprob: -15.316710472106934
    8. '<|end|>' → logprob: -16.44171142578125
    9. ' ' → logprob: -16.81671142578125
    10. '	   ' → logprob: -16.81671142578125

Token 2600: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004174560308456421
    2. ' for' → logprob: -5.504174709320068
    3. '       ' → logprob: -9.25417423248291
    4. '   ' → logprob: -15.12917423248291
    5. '```' → logprob: -15.62917423248291
    6. '	for' → logprob: -17.754175186157227
    7. ' ' → logprob: -18.879175186157227
    8. '``' → logprob: -20.129175186157227
    9. '
' → logprob: -20.629175186157227
    10. '           ' → logprob: -21.004175186157227

Token 2601: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -2.165027217415627e-05
    2. ' block' → logprob: -10.750021934509277
    3. 'b' → logprob: -16.00002098083496
    4. '   ' → logprob: -17.12502098083496
    5. '       ' → logprob: -19.25002098083496
    6. '(block' → logprob: -20.62502098083496
    7. '	block' → logprob: -20.75002098083496
    8. 'blk' → logprob: -20.75002098083496
    9. '           ' → logprob: -21.25002098083496
    10. '_block' → logprob: -23.50002098083496

Token 2602: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033752087503671646
    2. 'in' → logprob: -3.408752202987671
    3. '       ' → logprob: -9.53375244140625
    4. '	in' → logprob: -11.40875244140625
    5. '           ' → logprob: -12.53375244140625
    6. '   ' → logprob: -12.65875244140625
    7. '<|end|>' → logprob: -13.28375244140625
    8. 'not' → logprob: -13.40875244140625
    9. ' not' → logprob: -13.40875244140625
    10. '        ' → logprob: -13.53375244140625

Token 2603: ' blocks' (ID: 18125)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -1.318681188422488e-05
    2. ' blocks' → logprob: -11.25001335144043
    3. '   ' → logprob: -16.25001335144043
    4. 'block' → logprob: -17.50001335144043
    5. '.blocks' → logprob: -17.87501335144043
    6. '       ' → logprob: -19.00001335144043
    7. '
' → logprob: -19.12501335144043
    8. '(block' → logprob: -19.62501335144043
    9. '           ' → logprob: -20.50001335144043
    10. '[' → logprob: -21.00001335144043

Token 2604: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4660639762878418
    2. '           ' → logprob: -1.5910639762878418
    3. ':
' → logprob: -2.466063976287842
    4. ',' → logprob: -3.591063976287842
    5. '<|end|>' → logprob: -3.841063976287842
    6. '       ' → logprob: -4.591063976287842
    7. ' if' → logprob: -4.841063976287842
    8. '[' → logprob: -5.466063976287842
    9. ' =' → logprob: -5.591063976287842
    10. '<|end|>' → logprob: -5.841063976287842

Token 2605: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005174091784283519
    2. ' if' → logprob: -8.750517845153809
    3. '   ' → logprob: -8.875517845153809
    4. '```' → logprob: -8.875517845153809
    5. '<|end|>' → logprob: -10.875517845153809
    6. '       ' → logprob: -11.000517845153809
    7. 'if' → logprob: -11.125517845153809
    8. '<|end|>' → logprob: -12.500517845153809
    9. '#' → logprob: -12.625517845153809
    10. '            
' → logprob: -12.750517845153809

Token 2606: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06265338510274887
    2. ' if' → logprob: -3.4376533031463623
    3. 'if' (adapté à ' if') → logprob: -3.5626533031463623
    4. 'min' → logprob: -9.312653541564941
    5. '   ' → logprob: -10.187653541564941
    6. ' min' → logprob: -10.312653541564941
    7. '       ' → logprob: -11.187653541564941
    8. '```' → logprob: -11.187653541564941
    9. '(min' → logprob: -11.187653541564941
    10. '	       ' → logprob: -11.937653541564941

Token 2607: ' course' (ID: 4165)
  Prédit: 'course'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'course' → logprob: -0.004078878089785576
    2. ' course' → logprob: -5.5040788650512695
    3. 'line' → logprob: -15.50407886505127
    4. '   ' → logprob: -16.254079818725586
    5. '(course' → logprob: -16.629079818725586
    6. '.course' → logprob: -18.504079818725586
    7. 'cour' → logprob: -19.379079818725586
    8. '_course' → logprob: -19.754079818725586
    9. 'cours' → logprob: -19.754079818725586
    10. 'not' → logprob: -20.129079818725586

Token 2608: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -8.180258191714529e-06
    2. 'line' → logprob: -11.875008583068848
    3. '_inter' → logprob: -14.250008583068848
    4. 'inter' → logprob: -14.625008583068848
    5. '_LINE' → logprob: -18.37500762939453
    6. ' line' → logprob: -18.62500762939453
    7. 'Line' → logprob: -18.75000762939453
    8. '_lines' → logprob: -19.25000762939453
    9. '_block' → logprob: -19.75000762939453
    10. '=line' → logprob: -19.75000762939453

Token 2609: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.03804149478673935
    2. 'inter' → logprob: -3.288041591644287
    3. '.inter' → logprob: -16.913042068481445
    4. '-inter' → logprob: -17.663042068481445
    5. '_INTER' → logprob: -18.038042068481445
    6. '```' → logprob: -18.288042068481445
    7. '
' → logprob: -19.288042068481445
    8. '_in' → logprob: -19.288042068481445
    9. ' intersects' → logprob: -19.663042068481445
    10. ''inter' → logprob: -19.788042068481445

Token 2610: 'sects' (ID: 105681)
  Prédit: 'sects'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sects' → logprob: -0.006186283193528652
    2. 'ects' → logprob: -5.131186485290527
    3. 'sect' → logprob: -9.381186485290527
    4. 'inter' → logprob: -10.006186485290527
    5. '```' → logprob: -10.506186485290527
    6. 'section' → logprob: -10.631186485290527
    7. 'es' → logprob: -11.006186485290527
    8. 's' → logprob: -11.381186485290527
    9. ' intersects' → logprob: -11.756186485290527
    10. 'se' → logprob: -12.006186485290527

Token 2611: '_block' (ID: 15644)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.08168017119169235
    2. 'sx' → logprob: -3.0816800594329834
    3. 'block' → logprob: -3.8316800594329834
    4. 's' → logprob: -5.5816802978515625
    5. '_block' → logprob: -5.5816802978515625
    6. '_line' → logprob: -6.7066802978515625
    7. 'line' → logprob: -6.8316802978515625
    8. 'start' → logprob: -8.331680297851562
    9. '
' → logprob: -8.831680297851562
    10. '_s' → logprob: -9.331680297851562

Token 2612: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.696889623621246e-06
    2. 'sx' → logprob: -13.00000286102295
    3. 's' → logprob: -16.125001907348633
    4. '(' → logprob: -16.250001907348633
    5. '((' → logprob: -16.250001907348633
    6. '(
' → logprob: -17.625001907348633
    7. ' (' → logprob: -18.125001907348633
    8. '   ' → logprob: -19.250001907348633
    9. '```' → logprob: -19.500001907348633
    10. ' sx' → logprob: -19.750001907348633

Token 2613: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9361264946837764e-07
    2. '(s' → logprob: -16.5
    3. 'sx' → logprob: -17.125
    4. '(x' → logprob: -18.0
    5. '(' → logprob: -18.125
    6. 'ex' → logprob: -18.375
    7. '           ' → logprob: -18.625
    8. '   ' → logprob: -19.25
    9. '```' → logprob: -19.25
    10. '       ' → logprob: -19.375

Token 2614: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.7994282795116305e-05
    2. ' ,' → logprob: -10.00004768371582
    3. ',
' → logprob: -13.12504768371582
    4. ',s' → logprob: -14.75004768371582
    5. '_,' → logprob: -17.62504768371582
    6. 'sy' → logprob: -17.75004768371582
    7. '   ' → logprob: -18.25004768371582
    8. '[' → logprob: -18.62504768371582
    9. '           ' → logprob: -18.75004768371582
    10. ')' → logprob: -18.87504768371582

Token 2615: ' sy' (ID: 6157)
  Prédit: 'sy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sy' → logprob: -0.00020354038861114532
    2. ' sy' → logprob: -8.500203132629395
    3. '_sy' → logprob: -18.00020408630371
    4. 'sym' → logprob: -18.75020408630371
    5. 'syn' → logprob: -19.12520408630371
    6. '
' → logprob: -19.25020408630371
    7. 'Sy' → logprob: -19.37520408630371
    8. 'sys' → logprob: -20.62520408630371
    9. '.sy' → logprob: -20.62520408630371
    10. '    
' → logprob: -20.87520408630371

Token 2616: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7252845029579476e-05
    2. ' ,' → logprob: -10.625027656555176
    3. ',
' → logprob: -13.500027656555176
    4. '```' → logprob: -14.625027656555176
    5. '   ' → logprob: -15.000027656555176
    6. '           ' → logprob: -15.125027656555176
    7. '`,' → logprob: -15.875027656555176
    8. '(ex' → logprob: -16.75002670288086
    9. ',end' → logprob: -17.00002670288086
    10. 'ex' → logprob: -17.12502670288086

Token 2617: ' ex' (ID: 513)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -1.676292231422849e-05
    2. ' ex' → logprob: -11.000017166137695
    3. '(ex' → logprob: -18.000017166137695
    4. 'sx' → logprob: -18.375017166137695
    5. '```' → logprob: -20.250017166137695
    6. '   ' → logprob: -20.625017166137695
    7. 'x' → logprob: -21.250017166137695
    8. '	ex' → logprob: -21.625017166137695
    9. '
' → logprob: -21.750017166137695
    10. '``' → logprob: -21.875017166137695

Token 2618: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.2020991056924686e-05
    2. ' ,' → logprob: -10.625032424926758
    3. 'block' → logprob: -12.500032424926758
    4. '<|end|>' → logprob: -14.000032424926758
    5. ',
' → logprob: -14.250032424926758
    6. '_,' → logprob: -14.375032424926758
    7. '(block' → logprob: -14.750032424926758
    8. '```' → logprob: -14.875032424926758
    9. ' block' → logprob: -15.375032424926758
    10. ',b' → logprob: -16.125032424926758

Token 2619: ' ey' (ID: 17600)
  Prédit: 'ey'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ey' → logprob: -0.0009122979827225208
    2. ' ey' → logprob: -7.000912189483643
    3. 'ex' → logprob: -14.2509126663208
    4. 'eyey' → logprob: -16.875911712646484
    5. 'ay' → logprob: -17.500911712646484
    6. 'eys' → logprob: -17.875911712646484
    7. 'ery' → logprob: -18.750911712646484
    8. 'sy' → logprob: -19.750911712646484
    9. 'ew' → logprob: -20.000911712646484
    10. 'eby' → logprob: -20.000911712646484

Token 2620: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014883324911352247
    2. '           ' → logprob: -9.75014877319336
    3. ',
' → logprob: -10.00014877319336
    4. ' ,' → logprob: -10.50014877319336
    5. '(block' → logprob: -11.87514877319336
    6. '               ' → logprob: -13.12514877319336
    7. '       ' → logprob: -13.62514877319336
    8. 'block' → logprob: -14.12514877319336
    9. '   ' → logprob: -14.37514877319336
    10. '```' → logprob: -14.50014877319336

Token 2621: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.0007106438861228526
    2. ' block' → logprob: -7.250710487365723
    3. '           ' → logprob: -15.125710487365723
    4. '   ' → logprob: -15.625710487365723
    5. '               ' → logprob: -16.75071144104004
    6. '```' → logprob: -16.87571144104004
    7. '	block' → logprob: -16.87571144104004
    8. '(block' → logprob: -17.00071144104004
    9. '
' → logprob: -17.75071144104004
    10. '                   ' → logprob: -18.12571144104004

Token 2622: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.010484689846634865
    2. '):' → logprob: -5.38548469543457
    3. '           ' → logprob: -5.51048469543457
    4. '               ' → logprob: -6.51048469543457
    5. ':
' → logprob: -8.88548469543457
    6. '():
' → logprob: -9.38548469543457
    7. ':' → logprob: -10.13548469543457
    8. ''):
' → logprob: -11.13548469543457
    9. '):
' → logprob: -11.26048469543457
    10. '       ' → logprob: -12.26048469543457

Token 2623: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07897748053073883
    2. '           ' → logprob: -2.578977584838867
    3. '	       ' → logprob: -10.953977584838867
    4. '                   ' → logprob: -11.078977584838867
    5. '	           ' → logprob: -11.203977584838867
    6. '```' → logprob: -11.328977584838867
    7. '		       ' → logprob: -12.328977584838867
    8. '              ' → logprob: -12.328977584838867
    9. '       ' → logprob: -12.703977584838867
    10. '<|end|>' → logprob: -12.828977584838867

Token 2624: ' intersects' (ID: 198484)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.4712890684604645
    2. '               ' → logprob: -1.096289038658142
    3. '           ' → logprob: -3.2212891578674316
    4. '                   ' → logprob: -6.471289157867432
    5. '(inter' → logprob: -9.221288681030273
    6. '_inter' → logprob: -10.096288681030273
    7. '```' → logprob: -10.221288681030273
    8. '
' → logprob: -10.346288681030273
    9. '.inter' → logprob: -12.096288681030273
    10. '{
' → logprob: -12.346288681030273

Token 2625: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.00010807292710524052
    2. '=True' → logprob: -9.625107765197754
    3. '_inter' → logprob: -10.750107765197754
    4. '_' → logprob: -11.875107765197754
    5. 's' → logprob: -12.750107765197754
    6. 'True' → logprob: -12.875107765197754
    7. '=' → logprob: -13.375107765197754
    8. ' =' → logprob: -13.375107765197754
    9. 'line' → logprob: -13.875107765197754
    10. '_lin' → logprob: -14.375107765197754

Token 2626: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.688177764415741
    2. ' =' → logprob: -0.938177764415741
    3. '=True' → logprob: -2.3131778240203857
    4. '                   ' → logprob: -5.438177585601807
    5. '               ' → logprob: -6.313177585601807
    6. '=False' → logprob: -7.188177585601807
    7. '==' → logprob: -9.813178062438965
    8. '           ' → logprob: -9.938178062438965
    9. '                       ' → logprob: -10.313178062438965
    10. '=
' → logprob: -10.438178062438965

Token 2627: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -2.7610454708337784e-05
    2. ' True' → logprob: -10.500027656555176
    3. '=True' → logprob: -17.37502670288086
    4. '(True' → logprob: -18.87502670288086
    5. 'true' → logprob: -21.12502670288086
    6. '1' → logprob: -21.37502670288086
    7. '   ' → logprob: -21.75002670288086
    8. '
' → logprob: -22.25002670288086
    9. '               ' → logprob: -22.37502670288086
    10. '           ' → logprob: -23.00002670288086

Token 2628: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009517176658846438
    2. '                   ' → logprob: -7.375951766967773
    3. '           ' → logprob: -8.375951766967773
    4. '		       ' → logprob: -10.875951766967773
    5. '       ' → logprob: -11.750951766967773
    6. '<|end|>' → logprob: -11.875951766967773
    7. '	           ' → logprob: -12.000951766967773
    8. '                ' → logprob: -12.000951766967773
    9. '                       ' → logprob: -12.000951766967773
    10. '              ' → logprob: -12.125951766967773

Token 2629: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005383780226111412
    2. '       ' → logprob: -8.62553882598877
    3. 'if' → logprob: -8.62553882598877
    4. '           ' → logprob: -9.12553882598877
    5. '		       ' → logprob: -11.12553882598877
    6. ' if' → logprob: -11.37553882598877
    7. '```' → logprob: -12.12553882598877
    8. '			' → logprob: -12.12553882598877
    9. '
' → logprob: -12.25053882598877
    10. '                   ' → logprob: -12.62553882598877

Token 2630: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005328150931745768
    2. 'break' (adapté à ' break') → logprob: -5.380328178405762
    3. ' break' → logprob: -7.755328178405762
    4. '			' → logprob: -9.255328178405762
    5. '```' → logprob: -9.755328178405762
    6. '           ' → logprob: -10.380328178405762
    7. '	break' → logprob: -10.505328178405762
    8. 'continue' → logprob: -11.130328178405762
    9. '
' → logprob: -11.255328178405762
    10. '                   ' → logprob: -11.755328178405762

Token 2631: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000433291686931625
    2. '
' → logprob: -8.875432968139648
    3. 'if' → logprob: -9.625432968139648
    4. '```' → logprob: -9.875432968139648
    5. '           ' → logprob: -10.000432968139648
    6. '<|end|>' → logprob: -10.250432968139648
    7. '   ' → logprob: -10.375432968139648
    8. '        
' → logprob: -10.625432968139648
    9. ' if' → logprob: -10.875432968139648
    10. 'If' → logprob: -11.500432968139648

Token 2632: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008414304465986788
    2. 'if' → logprob: -7.5008416175842285
    3. '```' → logprob: -8.25084114074707
    4. '   ' → logprob: -11.12584114074707
    5. '
' → logprob: -12.12584114074707
    6. ' if' → logprob: -12.87584114074707
    7. 'If' → logprob: -13.00084114074707
    8. '           ' → logprob: -13.87584114074707
    9. '        
' → logprob: -14.37584114074707
    10. '``' → logprob: -14.87584114074707

Token 2633: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5764698386192322
    2. '       ' → logprob: -0.8264698386192322
    3. ' if' → logprob: -8.201469421386719
    4. '```' → logprob: -8.451469421386719
    5. '   ' → logprob: -10.451469421386719
    6. '
' → logprob: -11.701469421386719
    7. '           ' → logprob: -13.326469421386719
    8. '        
' → logprob: -13.826469421386719
    9. '``' → logprob: -14.076469421386719
    10. 'If' → logprob: -14.701469421386719

Token 2634: ' intersects' (ID: 198484)
  Prédit: ' intersects'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intersects' → logprob: -0.3133397102355957
    2. 'inter' → logprob: -1.3133397102355957
    3. '   ' → logprob: -10.938339233398438
    4. '(inter' → logprob: -11.063339233398438
    5. '       ' → logprob: -11.063339233398438
    6. '_inter' → logprob: -12.063339233398438
    7. ' intersections' → logprob: -12.063339233398438
    8. ' ' → logprob: -12.438339233398438
    9. ' intersect' → logprob: -12.438339233398438
    10. '           ' → logprob: -12.938339233398438

Token 2635: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.06938382983207703
    2. '_' → logprob: -2.8193838596343994
    3. ':' → logprob: -5.44438362121582
    4. ':
' → logprob: -6.44438362121582
    5. '==' → logprob: -7.44438362121582
    6. ' ==' → logprob: -8.19438362121582
    7. '_inter' → logprob: -8.56938362121582
    8. '_LINE' → logprob: -9.31938362121582
    9. '_:' → logprob: -9.81938362121582
    10. '_false' → logprob: -10.06938362121582

Token 2636: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20499484241008759
    2. ':' → logprob: -1.704994797706604
    3. '           ' → logprob: -5.7049946784973145
    4. '       ' → logprob: -9.954995155334473
    5. ' or' → logprob: -9.954995155334473
    6. '==' → logprob: -9.954995155334473
    7. '=' → logprob: -9.954995155334473
    8. ' and' → logprob: -11.704995155334473
    9. '():
' → logprob: -11.829995155334473
    10. ':return' → logprob: -11.954995155334473

Token 2637: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014017868088558316
    2. 'print' → logprob: -6.876401901245117
    3. '```' → logprob: -8.501401901245117
    4. '       ' → logprob: -9.251401901245117
    5. ' print' → logprob: -10.626401901245117
    6. ':
' → logprob: -10.876401901245117
    7. '
' → logprob: -11.376401901245117
    8. ':' → logprob: -11.876401901245117
    9. '{
' → logprob: -12.876401901245117
    10. '               ' → logprob: -13.876401901245117

Token 2638: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0011916564544662833
    2. '       ' → logprob: -7.12619161605835
    3. '           ' → logprob: -8.001192092895508
    4. '```' → logprob: -10.126192092895508
    5. ' print' → logprob: -11.501192092895508
    6. '``' → logprob: -14.251192092895508
    7. '   ' → logprob: -14.751192092895508
    8. 'r' → logprob: -15.876192092895508
    9. '	print' → logprob: -16.001192092895508
    10. 'max' → logprob: -16.001192092895508

Token 2639: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12693314254283905
    2. '(' → logprob: -2.1269330978393555
    3. '("' → logprob: -13.251933097839355
    4. '('' → logprob: -13.501933097839355
    5. ' ' → logprob: -13.751933097839355
    6. '   ' → logprob: -14.751933097839355
    7. '(
' → logprob: -15.251933097839355
    8. '"' → logprob: -16.251934051513672
    9. '00' → logprob: -17.126934051513672
    10. '`' → logprob: -17.126934051513672

Token 2640: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4021237802808173e-05
    2. '"' → logprob: -11.250014305114746
    3. ''' → logprob: -14.625014305114746
    4. ' ' → logprob: -15.750014305114746
    5. '{' → logprob: -15.875014305114746
    6. '`' → logprob: -16.37501335144043
    7. '00' → logprob: -17.25001335144043
    8. '000' → logprob: -17.37501335144043
    9. '   ' → logprob: -17.75001335144043
    10. ')' → logprob: -18.87501335144043

Token 2641: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020819799974560738
    2. ')
' → logprob: -4.270819664001465
    3. '.' → logprob: -5.020819664001465
    4. '.)' → logprob: -11.145819664001465
    5. '0' → logprob: -12.520819664001465
    6. ' )' → logprob: -13.020819664001465
    7. '```' → logprob: -13.020819664001465
    8. '
' → logprob: -13.520819664001465
    9. '')' → logprob: -13.520819664001465
    10. '")' → logprob: -13.645819664001465

Token 2642: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28119948506355286
    2. '       ' → logprob: -1.4061994552612305
    3. 'else' → logprob: -11.15619945526123
    4. '	       ' → logprob: -11.53119945526123
    5. '   ' → logprob: -11.78119945526123
    6. '               ' → logprob: -12.40619945526123
    7. '		' → logprob: -12.65619945526123
    8. '	' → logprob: -13.28119945526123
    9. '<|end|>' → logprob: -13.40619945526123
    10. '
' → logprob: -13.65619945526123

Token 2643: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0037895082496106625
    2. 'continue' (adapté à ' continue') → logprob: -6.12878942489624
    3. '       ' → logprob: -6.50378942489624
    4. ' continue' → logprob: -9.253789901733398
    5. '		' → logprob: -12.878789901733398
    6. '   ' → logprob: -13.378789901733398
    7. '	continue' → logprob: -13.503789901733398
    8. '	       ' → logprob: -13.503789901733398
    9. '_continue' → logprob: -14.128789901733398
    10. '               ' → logprob: -14.253789901733398

Token 2644: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08793134242296219
    2. '
' → logprob: -2.5879313945770264
    3. '        
' → logprob: -4.837931156158447
    4. '```' → logprob: -7.087931156158447
    5. '   ' → logprob: -9.087931632995605
    6. '#' → logprob: -9.837931632995605
    7. '    
' → logprob: -10.837931632995605
    8. 'low' → logprob: -10.962931632995605
    9. 'import' → logprob: -11.837931632995605
    10. 'lower' → logprob: -12.462931632995605

Token 2645: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015247725881636143
    2. '#' → logprob: -4.640247821807861
    3. 'low' → logprob: -6.140247821807861
    4. '```' → logprob: -6.640247821807861
    5. 'lo' → logprob: -6.765247821807861
    6. 'l' → logprob: -8.015247344970703
    7. '
' → logprob: -9.015247344970703
    8. '   ' → logprob: -9.265247344970703
    9. 'left' → logprob: -9.390247344970703
    10. 'eps' → logprob: -9.640247344970703

Token 2646: ' #' (ID: 1069)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.20165511965751648
    2. 'left' → logprob: -1.9516551494598389
    3. 'lo' → logprob: -3.451655149459839
    4. '#' (adapté à ' #') → logprob: -4.95165491104126
    5. 'l' → logprob: -6.82665491104126
    6. '       ' → logprob: -7.82665491104126
    7. 'eps' → logprob: -8.951655387878418
    8. 'lb' → logprob: -9.576655387878418
    9. 'lower' → logprob: -10.201655387878418
    10. '```' → logprob: -10.451655387878418

Token 2647: ' Binary' (ID: 32672)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.10134827345609665
    2. 'lo' → logprob: -3.1013481616973877
    3. 'left' → logprob: -3.1013481616973877
    4. '#' → logprob: -5.101348400115967
    5. 'l' → logprob: -8.851347923278809
    6. 'lb' → logprob: -9.226347923278809
    7. 'r' → logprob: -10.476347923278809
    8. 'L' → logprob: -10.976347923278809
    9. 'lower' → logprob: -11.226347923278809
    10. 'eps' → logprob: -12.101347923278809

Token 2648: ' search' (ID: 3684)
  Prédit: ' search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.08913815021514893
    2. 'search' → logprob: -2.5891380310058594
    3. '_search' → logprob: -4.589138031005859
    4. '_' → logprob: -10.96413803100586
    5. '   ' → logprob: -12.58913803100586
    6. ' space' → logprob: -13.08913803100586
    7. ' Search' → logprob: -13.46413803100586
    8. 'space' → logprob: -13.58913803100586
    9. 'Search' → logprob: -13.58913803100586
    10. '
' → logprob: -13.71413803100586

Token 2649: ' largest' (ID: 10574)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03423338010907173
    2. 'low' → logprob: -4.284233570098877
    3. ' lo' → logprob: -4.909233570098877
    4. 'lo' → logprob: -5.534233570098877
    5. '
' → logprob: -5.659233570098877
    6. '```' → logprob: -5.659233570098877
    7. ' low' → logprob: -7.659233570098877
    8. '(low' → logprob: -8.409233093261719
    9. '        
' → logprob: -8.534233093261719
    10. 'left' → logprob: -8.659233093261719

Token 2650: ' radius' (ID: 21090)
  Prédit: ' radius'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' radius' → logprob: -0.06831622123718262
    2. 'radius' → logprob: -3.3183162212371826
    3. '_radius' → logprob: -4.318316459655762
    4. ' r' → logprob: -4.818316459655762
    5. 'r' → logprob: -4.943316459655762
    6. '_r' → logprob: -7.068316459655762
    7. '_' → logprob: -8.943316459655762
    8. '   ' → logprob: -9.193316459655762
    9. '       ' → logprob: -9.818316459655762
    10. ' possible' → logprob: -10.193316459655762

Token 2651: ' r' (ID: 428)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1658121943473816
    2. '
' → logprob: -1.9158122539520264
    3. '        
' → logprob: -5.290812015533447
    4. ',' → logprob: -8.790812492370605
    5. '   ' → logprob: -8.790812492370605
    6. '```' → logprob: -9.290812492370605
    7. 'r' → logprob: -10.290812492370605
    8. 'low' → logprob: -11.040812492370605
    9. ' low' → logprob: -11.290812492370605
    10. '    
' → logprob: -11.415812492370605

Token 2652: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05008586123585701
    2. '
' → logprob: -3.1750857830047607
    3. '        
' → logprob: -5.42508602142334
    4. ',' → logprob: -6.92508602142334
    5. '(low' → logprob: -7.67508602142334
    6. '   ' → logprob: -7.92508602142334
    7. 'r' → logprob: -8.42508602142334
    8. ' low' → logprob: -9.67508602142334
    9. 'low' → logprob: -9.67508602142334
    10. ' =' → logprob: -10.05008602142334

Token 2653: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25667449831962585
    2. '[' → logprob: -1.5066745281219482
    3. '(' → logprob: -5.881674289703369
    4. ' [' → logprob: -7.506674289703369
    5. 'range' → logprob: -7.506674289703369
    6. ' (' → logprob: -8.256674766540527
    7. ' ' → logprob: -8.381674766540527
    8. '   ' → logprob: -9.881674766540527
    9. 'r' → logprob: -10.006674766540527
    10. 'float' → logprob: -10.131674766540527

Token 2654: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.537868779967539e-06
    2. '(' → logprob: -11.875008583068848
    3. '1' → logprob: -14.125008583068848
    4. '```' → logprob: -15.375008583068848
    5. ' ' → logprob: -15.750008583068848
    6. ',' → logprob: -16.37500762939453
    7. '
' → logprob: -16.75000762939453
    8. '   ' → logprob: -16.87500762939453
    9. '-' → logprob: -17.12500762939453
    10. ']' → logprob: -17.37500762939453

Token 2655: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015618811594322324
    2. ' ,' → logprob: -6.501562118530273
    3. ',
' → logprob: -10.501562118530273
    4. '.' → logprob: -10.626562118530273
    5. ',float' → logprob: -13.501562118530273
    6. '
' → logprob: -13.876562118530273
    7. '0' → logprob: -14.001562118530273
    8. '   ' → logprob: -14.126562118530273
    9. '```' → logprob: -14.126562118530273
    10. '.,' → logprob: -14.376562118530273

Token 2656: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5361800789833069
    2. 'max' → logprob: -1.661180019378662
    3. '1' → logprob: -1.786180019378662
    4. 'min' → logprob: -3.661180019378662
    5. '10' → logprob: -4.661180019378662
    6. 'math' → logprob: -4.661180019378662
    7. '(max' → logprob: -5.161180019378662
    8. ' max' → logprob: -6.286180019378662
    9. '500' → logprob: -6.786180019378662
    10. ' ' → logprob: -6.911180019378662

Token 2657: '0' (ID: 15)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.03683645650744438
    2. '.' → logprob: -3.9118363857269287
    3. ']' → logprob: -4.411836624145508
    4. ']
' → logprob: -6.161836624145508
    5. '0' → logprob: -6.411836624145508
    6. ')' → logprob: -9.411836624145508
    7. '_' → logprob: -9.786836624145508
    8. '00' → logprob: -9.786836624145508
    9. ')
' → logprob: -10.911836624145508
    10. '.]' → logprob: -11.036836624145508

Token 2658: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.19980596005916595
    2. ']
' → logprob: -1.8248059749603271
    3. '       ' → logprob: -4.824805736541748
    4. ')' → logprob: -5.949805736541748
    5. ' ]' → logprob: -5.949805736541748
    6. ',' → logprob: -6.574805736541748
    7. ' ]
' → logprob: -6.824805736541748
    8. '.' → logprob: -7.074805736541748
    9. '0' → logprob: -7.074805736541748
    10. '000' → logprob: -7.199805736541748

Token 2659: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06242326647043228
    2. '
' → logprob: -2.9374232292175293
    3. '   ' → logprob: -5.687423229217529
    4. '        
' → logprob: -6.312423229217529
    5. '```' → logprob: -7.062423229217529
    6. ',' → logprob: -7.812423229217529
    7. ' for' → logprob: -8.562423706054688
    8. '    
' → logprob: -8.562423706054688
    9. 'r' → logprob: -8.812423706054688
    10. ':' → logprob: -9.562423706054688

Token 2660: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' (adapté à ' low') → logprob: -0.03512507677078247
    2. 'lo' → logprob: -3.7851250171661377
    3. 'left' → logprob: -5.035125255584717
    4. '       ' → logprob: -5.785125255584717
    5. 'l' → logprob: -6.160125255584717
    6. 'lb' → logprob: -9.910124778747559
    7. 'lower' → logprob: -10.660124778747559
    8. ' low' → logprob: -11.035124778747559
    9. ' lo' → logprob: -11.285124778747559
    10. '```' → logprob: -12.035124778747559

Token 2661: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0948835089802742
    2. '=' → logprob: -2.719883441925049
    3. ',' → logprob: -3.719883441925049
    4. ' ,' → logprob: -8.719883918762207
    5. '<|end|>' → logprob: -8.719883918762207
    6. ' =
' → logprob: -11.219883918762207
    7. '0' → logprob: -11.719883918762207
    8. ' ' → logprob: -11.844883918762207
    9. '<|end|>' → logprob: -11.844883918762207
    10. ')' → logprob: -11.844883918762207

Token 2662: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '   ' → logprob: -20.75
    4. '```' → logprob: -21.5
    5. '00' → logprob: -21.625
    6. '000' → logprob: -21.75
    7. '۰' → logprob: -22.25
    8. '=' → logprob: -22.5
    9. '.' → logprob: -22.875
    10. '(' → logprob: -23.0

Token 2663: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '   ' → logprob: -19.25
    4. '=' → logprob: -19.625
    5. '(' → logprob: -19.75
    6. '```' → logprob: -20.5
    7. '.' → logprob: -20.625
    8. '۰' → logprob: -20.8125
    9. 'import' → logprob: -20.875
    10. '000' → logprob: -21.0

Token 2664: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0044974153861403465
    2. '
' → logprob: -5.504497528076172
    3. '.
' → logprob: -8.629497528076172
    4. ',' → logprob: -9.754497528076172
    5. '       ' → logprob: -9.754497528076172
    6. ',
' → logprob: -10.504497528076172
    7. '    
' → logprob: -10.754497528076172
    8. '        
' → logprob: -10.754497528076172
    9. ' 
' → logprob: -10.879497528076172
    10. '```' → logprob: -11.504497528076172

Token 2665: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012301014736294746
    2. '.' → logprob: -5.262300968170166
    3. '5' → logprob: -6.512300968170166
    4. '
' → logprob: -6.512300968170166
    5. '```' → logprob: -6.762300968170166
    6. '000' → logprob: -7.262300968170166
    7. ',' → logprob: -7.387300968170166
    8. '1' → logprob: -7.762300968170166
    9. ' 
' → logprob: -8.262301445007324
    10. 'high' → logprob: -8.637301445007324

Token 2666: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0646400973200798
    2. 'high' → logprob: -3.3146400451660156
    3. ',' → logprob: -4.314640045166016
    4. ' high' → logprob: -4.564640045166016
    5. ',
' → logprob: -7.064640045166016
    6. '       ' → logprob: -7.314640045166016
    7. ' 
' → logprob: -7.439640045166016
    8. '```' → logprob: -9.189640045166016
    9. ';' → logprob: -10.189640045166016
    10. '.high' → logprob: -10.439640045166016

Token 2667: '       ' (ID: 309)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.3870556354522705
    2. ' high' → logprob: -1.1370556354522705
    3. ',' → logprob: -9.137055397033691
    4. '.high' → logprob: -10.637055397033691
    5. 'up' → logprob: -11.387055397033691
    6. '
' → logprob: -11.387055397033691
    7. '(high' → logprob: -11.512055397033691
    8. '_high' → logprob: -12.012055397033691
    9. '       ' → logprob: -12.512055397033691
    10. '```' → logprob: -12.887055397033691

Token 2668: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' (adapté à ' high') → logprob: -0.0015028368216007948
    2. ' high' → logprob: -6.501502990722656
    3. 'hi' → logprob: -14.751502990722656
    4. 'up' → logprob: -16.126502990722656
    5. '_high' → logprob: -16.876502990722656
    6. 'High' → logprob: -17.501502990722656
    7. '   ' → logprob: -18.126502990722656
    8. '100' → logprob: -18.626502990722656
    9. '```' → logprob: -18.876502990722656
    10. '.high' → logprob: -19.376502990722656

Token 2669: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006715967319905758
    2. '=' → logprob: -5.006715774536133
    3. '100' → logprob: -15.131715774536133
    4. ' =
' → logprob: -16.131715774536133
    5. '```' → logprob: -16.256715774536133
    6. ',' → logprob: -16.506715774536133
    7. '<|end|>' → logprob: -17.631715774536133
    8. ' ' → logprob: -17.756715774536133
    9. '[' → logprob: -18.006715774536133
    10. '0' → logprob: -18.131715774536133

Token 2670: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.6286106983898208e-05
    2. ' ' → logprob: -11.250016212463379
    3. '200' → logprob: -13.125016212463379
    4. '150' → logprob: -14.875016212463379
    5. '1' → logprob: -15.125016212463379
    6. '10' → logprob: -15.750016212463379
    7. '   ' → logprob: -16.500017166137695
    8. '500' → logprob: -16.500017166137695
    9. '101' → logprob: -16.500017166137695
    10. 'max' → logprob: -16.875017166137695

Token 2671: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0003967071825172752
    2. '200' → logprob: -7.875396728515625
    3. '150' → logprob: -11.500396728515625
    4. '1' → logprob: -12.750396728515625
    5. '101' → logprob: -13.375396728515625
    6. '10' → logprob: -14.125396728515625
    7. 'max' → logprob: -14.875396728515625
    8. '500' → logprob: -15.000396728515625
    9. '300' → logprob: -15.250396728515625
    10. '110' → logprob: -15.375396728515625

Token 2672: '0' (ID: 15)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.012914669699966908
    2. '.
' → logprob: -4.887914657592773
    3. '0' → logprob: -5.262914657592773
    4. '```' → logprob: -9.387914657592773
    5. ')' → logprob: -12.012914657592773
    6. '   ' → logprob: -12.137914657592773
    7. '``' → logprob: -12.512914657592773
    8. '00' → logprob: -12.887914657592773
    9. '000' → logprob: -13.012914657592773
    10. ' .' → logprob: -13.137914657592773

Token 2673: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00017195509281009436
    2. '       ' → logprob: -8.875171661376953
    3. '0' → logprob: -10.875171661376953
    4. '
' → logprob: -12.750171661376953
    5. '.
' → logprob: -12.875171661376953
    6. '<|end|>' → logprob: -13.375171661376953
    7. '        
' → logprob: -13.625171661376953
    8. '   ' → logprob: -13.875171661376953
    9. '<|end|>' → logprob: -14.250171661376953
    10. '	' → logprob: -14.250171661376953

Token 2674: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7848862373502925e-05
    2. '```' → logprob: -11.625027656555176
    3. '9' → logprob: -12.375027656555176
    4. '5' → logprob: -12.625027656555176
    5. '00' → logprob: -12.750027656555176
    6. '000' → logprob: -12.750027656555176
    7. '6' → logprob: -13.375027656555176
    8. '1' → logprob: -13.750027656555176
    9. '999' → logprob: -14.375027656555176
    10. '99' → logprob: -14.375027656555176

Token 2675: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13241246342658997
    2. 'while' → logprob: -2.5074124336242676
    3. '
' → logprob: -3.3824124336242676
    4. '   ' → logprob: -6.132412433624268
    5. ' while' → logprob: -6.132412433624268
    6. 'for' → logprob: -6.632412433624268
    7. '        
' → logprob: -7.257412433624268
    8. '	while' → logprob: -7.382412433624268
    9. 'mid' → logprob: -7.882412433624268
    10. '\t' → logprob: -8.507412910461426

Token 2676: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21524272859096527
    2. 'for' → logprob: -1.7152427434921265
    3. 'while' → logprob: -4.340242862701416
    4. '   ' → logprob: -7.590242862701416
    5. ' for' → logprob: -9.215242385864258
    6. '```' → logprob: -9.715242385864258
    7. '
' → logprob: -11.090242385864258
    8. 'mid' → logprob: -11.340242385864258
    9. '	for' → logprob: -13.090242385864258
    10. ' while' → logprob: -13.215242385864258

Token 2677: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0001261845463886857
    2. 'while' → logprob: -9.625125885009766
    3. '       ' → logprob: -9.875125885009766
    4. ' for' → logprob: -11.875125885009766
    5. '
' → logprob: -13.625125885009766
    6. 'import' → logprob: -14.750125885009766
    7. '	for' → logprob: -16.500125885009766
    8. '   ' → logprob: -17.500125885009766
    9. '        
' → logprob: -17.625125885009766
    10. 'from' → logprob: -18.750125885009766

Token 2678: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.023307207971811295
    2. '_' → logprob: -3.7733073234558105
    3. ' i' → logprob: -9.773306846618652
    4. ' _
' → logprob: -12.523306846618652
    5. ' ' → logprob: -14.398306846618652
    6. ' __' → logprob: -15.273306846618652
    7. '_
' → logprob: -15.773306846618652
    8. '_i' → logprob: -16.27330780029297
    9. '_=' → logprob: -16.89830780029297
    10. ' ' → logprob: -16.89830780029297

Token 2679: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013660696567967534
    2. 'in' → logprob: -6.876366138458252
    3. 'range' → logprob: -8.876365661621094
    4. ' _' → logprob: -9.251365661621094
    5. 'i' → logprob: -10.126365661621094
    6. '_' → logprob: -10.501365661621094
    7. ' range' → logprob: -11.501365661621094
    8. ' i' → logprob: -11.626365661621094
    9. '  ' → logprob: -12.501365661621094
    10. '   ' → logprob: -12.751365661621094

Token 2680: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.627176768844947e-05
    2. ' range' → logprob: -9.250096321105957
    3. '(range' → logprob: -16.62509536743164
    4. '
' → logprob: -18.87509536743164
    5. 'int' → logprob: -19.12509536743164
    6. ' ' → logprob: -19.37509536743164
    7. 'in' → logprob: -19.37509536743164
    8. '	range' → logprob: -19.50009536743164
    9. '10' → logprob: -19.62509536743164
    10. '   ' → logprob: -20.00009536743164

Token 2681: '(' (ID: 7)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '60' → logprob: -0.3081985116004944
    2. '100' → logprob: -1.8081984519958496
    3. '50' → logprob: -2.3081984519958496
    4. '70' → logprob: -6.80819845199585
    5. '80' → logprob: -7.68319845199585
    6. '40' → logprob: -8.683198928833008
    7. '   ' → logprob: -10.558198928833008
    8. '64' → logprob: -10.933198928833008
    9. '200' → logprob: -11.683198928833008
    10. '30' → logprob: -11.808198928833008

Token 2682: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.8333101868629456
    2. '60' → logprob: -0.8333101868629456
    3. '50' → logprob: -2.083310127258301
    4. '70' → logprob: -5.708310127258301
    5. '80' → logprob: -6.333310127258301
    6. '40' → logprob: -7.208310127258301
    7. '200' → logprob: -8.3333101272583
    8. '64' → logprob: -9.3333101272583
    9. '90' → logprob: -11.0833101272583
    10. '30' → logprob: -11.0833101272583

Token 2683: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.055130280554294586
    2. '   ' → logprob: -3.1801302433013916
    3. '0' → logprob: -4.805130481719971
    4. '):' → logprob: -6.180130481719971
    5. '       ' → logprob: -6.930130481719971
    6. ':
' → logprob: -8.805130004882812
    7. ':' → logprob: -9.055130004882812
    8. '```' → logprob: -9.055130004882812
    9. '{
' → logprob: -10.055130004882812
    10. '           ' → logprob: -10.430130004882812

Token 2684: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16303642094135284
    2. '   ' → logprob: -2.663036346435547
    3. '       ' → logprob: -2.663036346435547
    4. '<|end|>' → logprob: -5.288036346435547
    5. '	       ' → logprob: -6.163036346435547
    6. '```' → logprob: -6.538036346435547
    7. '<|end|>' → logprob: -7.788036346435547
    8. '	   ' → logprob: -7.913036346435547
    9. '        
' → logprob: -8.288036346435547
    10. '    
' → logprob: -8.288036346435547

Token 2685: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' (adapté à ' mid') → logprob: -0.00408801669254899
    2. ' mid' → logprob: -5.504087924957275
    3. '           ' → logprob: -12.129088401794434
    4. 'm' → logprob: -12.629088401794434
    5. 'middle' → logprob: -14.379088401794434
    6. '_mid' → logprob: -15.379088401794434
    7. 'midd' → logprob: -16.629087448120117
    8. 'midt' → logprob: -17.629087448120117
    9. '[mid' → logprob: -17.754087448120117
    10. ' midpoint' → logprob: -18.004087448120117

Token 2686: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04306598752737045
    2. '=' → logprob: -3.1680660247802734
    3. '<|end|>' → logprob: -10.293066024780273
    4. ')' → logprob: -11.543066024780273
    5. ' =
' → logprob: -12.668066024780273
    6. 'token' → logprob: -12.668066024780273
    7. '=
' → logprob: -12.793066024780273
    8. 'space' → logprob: -13.168066024780273
    9. '```' → logprob: -13.418066024780273
    10. ' ' → logprob: -13.418066024780273

Token 2687: ' (' (ID: 350)
  Prédit: '(low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(low' → logprob: -0.0032253677491098642
    2. ' (' → logprob: -5.753225326538086
    3. '(high' → logprob: -10.128225326538086
    4. '(lo' → logprob: -13.128225326538086
    5. '(mid' → logprob: -13.378225326538086
    6. '(lower' → logprob: -13.378225326538086
    7. '(l' → logprob: -13.753225326538086
    8. '(left' → logprob: -14.628225326538086
    9. '(' → logprob: -15.253225326538086
    10. '0' → logprob: -15.503225326538086

Token 2688: 'low' (ID: 14739)
  Prédit: 'low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -5.860340752406046e-05
    2. ' low' → logprob: -9.7500581741333
    3. 'high' → logprob: -15.5000581741333
    4. '(low' → logprob: -16.625059127807617
    5. '_low' → logprob: -18.750059127807617
    6. '
' → logprob: -19.375059127807617
    7. '   ' → logprob: -20.250059127807617
    8. '.low' → logprob: -20.500059127807617
    9. 'Low' → logprob: -21.000059127807617
    10. 'lo' → logprob: -22.000059127807617

Token 2689: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07890311628580093
    2. ' +' → logprob: -2.5789031982421875
    3. '+
' → logprob: -11.328903198242188
    4. ' +
' → logprob: -13.828903198242188
    5. '<|end|>' → logprob: -16.328903198242188
    6. '
' → logprob: -16.703903198242188
    7. '```' → logprob: -16.828903198242188
    8. '+r' → logprob: -17.203903198242188
    9. ')' → logprob: -17.453903198242188
    10. ')+' → logprob: -17.578903198242188

Token 2690: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -2.935296834039036e-06
    2. ' high' → logprob: -12.75000286102295
    3. '_high' → logprob: -19.500003814697266
    4. 'High' → logprob: -20.250003814697266
    5. '
' → logprob: -21.500003814697266
    6. '(high' → logprob: -21.500003814697266
    7. '   ' → logprob: -22.500003814697266
    8. '.high' → logprob: -22.500003814697266
    9. 'hi' → logprob: -23.000003814697266
    10. '-high' → logprob: -23.250003814697266

Token 2691: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038085322827100754
    2. ')/' → logprob: -3.2880852222442627
    3. ')*' → logprob: -10.163084983825684
    4. ' )' → logprob: -12.288084983825684
    5. ')
' → logprob: -14.913084983825684
    6. '   ' → logprob: -15.913084983825684
    7. '*)' → logprob: -16.7880859375
    8. ')>>' → logprob: -16.7880859375
    9. '*' → logprob: -17.2880859375
    10. ')
/' → logprob: -17.5380859375

Token 2692: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -18.875001907348633
    4. '```' → logprob: -19.500001907348633
    5. '=' → logprob: -20.750001907348633
    6. '
' → logprob: -20.875001907348633
    7. '200' → logprob: -21.562501907348633
    8. '۲' → logprob: -21.625001907348633
    9. '1' → logprob: -21.625001907348633
    10. '  ' → logprob: -22.125001907348633

Token 2693: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7100187540054321
    2. '<|end|>' → logprob: -0.9600187540054321
    3. '
' → logprob: -3.2100186347961426
    4. '            
' → logprob: -3.4600186347961426
    5. '<|end|>' → logprob: -3.9600186347961426
    6. ')' → logprob: -4.835018634796143
    7. ' if' → logprob: -5.085018634796143
    8. 'if' → logprob: -5.335018634796143
    9. '       ' → logprob: -5.335018634796143
    10. '=' → logprob: -5.960018634796143

Token 2694: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4511958360671997
    2. '       ' → logprob: -1.4511958360671997
    3. ' if' → logprob: -3.20119571685791
    4. '
' → logprob: -3.32619571685791
    5. '<|end|>' → logprob: -3.45119571685791
    6. '   ' → logprob: -4.82619571685791
    7. 'if' → logprob: -4.95119571685791
    8. '<|end|>' → logprob: -6.32619571685791
    9. '        
' → logprob: -7.57619571685791
    10. '            
' → logprob: -8.07619571685791

Token 2695: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0003208037815056741
    2. '           ' → logprob: -8.250320434570312
    3. ' if' → logprob: -9.750320434570312
    4. '       ' → logprob: -13.750320434570312
    5. '   ' → logprob: -15.875320434570312
    6. '```' → logprob: -17.625320434570312
    7. '
' → logprob: -17.750320434570312
    8. '            
' → logprob: -18.000320434570312
    9. 'If' → logprob: -19.000320434570312
    10. '               ' → logprob: -19.000320434570312

Token 2696: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.10020828247070312
    2. ' max' → logprob: -2.350208282470703
    3. '           ' → logprob: -13.475208282470703
    4. '(max' → logprob: -15.475208282470703
    5. '               ' → logprob: -16.725208282470703
    6. '   ' → logprob: -17.475208282470703
    7. '[max' → logprob: -17.475208282470703
    8. '	max' → logprob: -17.600208282470703
    9. ',max' → logprob: -19.225208282470703
    10. ' ' → logprob: -19.225208282470703

Token 2697: '_radius' (ID: 70179)
  Prédit: '_radius'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_radius' → logprob: -4.0484450437361374e-05
    2. 'radius' → logprob: -10.750040054321289
    3. ')' → logprob: -12.500040054321289
    4. '_r' → logprob: -13.000040054321289
    5. '_RADIUS' → logprob: -13.125040054321289
    6. 'Radius' → logprob: -13.625040054321289
    7. '```' → logprob: -14.000040054321289
    8. ')_' → logprob: -14.125040054321289
    9. '   ' → logprob: -14.125040054321289
    10. '
' → logprob: -14.250040054321289

Token 2698: '_fe' (ID: 16058)
  Prédit: '_fe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fe' → logprob: -4.906711546937004e-05
    2. 'fe' → logprob: -10.250048637390137
    3. 'Fe' → logprob: -12.125048637390137
    4. '_Fe' → logprob: -13.000048637390137
    5. ' feasible' → logprob: -13.125048637390137
    6. ' Fe' → logprob: -13.500048637390137
    7. '_' → logprob: -13.625048637390137
    8. '(fe' → logprob: -15.250048637390137
    9. '
' → logprob: -15.750048637390137
    10. ' _' → logprob: -15.875048637390137

Token 2699: 'asible' (ID: 195692)
  Prédit: 'asible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asible' → logprob: -0.0009663687669672072
    2. 'as' → logprob: -7.625966548919678
    3. 'asib' → logprob: -7.875966548919678
    4. 'asi' → logprob: -9.62596607208252
    5. 'sible' → logprob: -11.50096607208252
    6. 'isible' → logprob: -12.12596607208252
    7. '```' → logprob: -12.25096607208252
    8. 'asile' → logprob: -12.75096607208252
    9. 'asil' → logprob: -13.75096607208252
    10. '_' → logprob: -13.87596607208252

Token 2700: '(mid' (ID: 121498)
  Prédit: '(mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -0.001300830626860261
    2. '(' → logprob: -6.876300811767578
    3. '(
' → logprob: -8.876300811767578
    4. ' (' → logprob: -9.001300811767578
    5. '[mid' → logprob: -12.626300811767578
    6. ')' → logprob: -14.501300811767578
    7. '(m' → logprob: -15.251300811767578
    8. 'mid' → logprob: -15.751300811767578
    9. ' (
' → logprob: -15.751300811767578
    10. '(mi' → logprob: -15.876300811767578

Token 2701: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005723327049054205
    2. ' ,' → logprob: -7.750572204589844
    3. ',s' → logprob: -8.875572204589844
    4. ',
' → logprob: -13.750572204589844
    5. '   ' → logprob: -15.000572204589844
    6. ',S' → logprob: -15.875572204589844
    7. ',r' → logprob: -15.875572204589844
    8. '           ' → logprob: -17.250572204589844
    9. '),' → logprob: -17.875572204589844
    10. '```' → logprob: -17.875572204589844

Token 2702: ' sx' (ID: 39428)
  Prédit: 'sx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sx' → logprob: -0.004078758880496025
    2. ' sx' → logprob: -5.5040788650512695
    3. 's' → logprob: -15.25407886505127
    4. 'SX' → logprob: -17.254077911376953
    5. '   ' → logprob: -17.504077911376953
    6. '
' → logprob: -17.504077911376953
    7. ')' → logprob: -18.254077911376953
    8. '(s' → logprob: -18.754077911376953
    9. '```' → logprob: -18.754077911376953
    10. 'px' → logprob: -19.629077911376953

Token 2703: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.1424973713001236e-05
    2. ' ,' → logprob: -10.625031471252441
    3. ',
' → logprob: -12.125031471252441
    4. ',s' → logprob: -13.500031471252441
    5. '‌,' → logprob: -17.000030517578125
    6. '_sy' → logprob: -17.250030517578125
    7. 'sy' → logprob: -17.500030517578125
    8. ',y' → logprob: -17.500030517578125
    9. '```' → logprob: -17.500030517578125
    10. '<|end|>' → logprob: -18.375030517578125

Token 2704: ' sy' (ID: 6157)
  Prédit: 'sy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sy' → logprob: -6.2729995988775045e-06
    2. ' sy' → logprob: -12.000006675720215
    3. '_sy' → logprob: -17.3750057220459
    4. 'sym' → logprob: -19.7500057220459
    5. 'Sy' → logprob: -20.0000057220459
    6. 'syn' → logprob: -21.0000057220459
    7. 'sys' → logprob: -21.1250057220459
    8. '.sy' → logprob: -21.3750057220459
    9. '
' → logprob: -21.8750057220459
    10. 'syz' → logprob: -22.2500057220459

Token 2705: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7835754988482222e-05
    2. ' ,' → logprob: -11.000018119812012
    3. ',
' → logprob: -13.875018119812012
    4. '```' → logprob: -17.625017166137695
    5. '_,' → logprob: -17.750017166137695
    6. '   ' → logprob: -18.625017166137695
    7. '           ' → logprob: -19.125017166137695
    8. ',
' → logprob: -19.125017166137695
    9. ',\
' → logprob: -19.125017166137695
    10. 'ex' → logprob: -19.125017166137695

Token 2706: ' ex' (ID: 513)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0003360582049936056
    2. ' ex' → logprob: -8.000335693359375
    3. 'ey' → logprob: -14.375335693359375
    4. 'bx' → logprob: -19.375335693359375
    5. 'ax' → logprob: -19.625335693359375
    6. '
' → logprob: -20.500335693359375
    7. 'e' → logprob: -20.625335693359375
    8. 'x' → logprob: -21.000335693359375
    9. '   ' → logprob: -21.125335693359375
    10. '    ' → logprob: -21.250335693359375

Token 2707: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.225939872208983e-05
    2. ' ,' → logprob: -10.500032424926758
    3. '```' → logprob: -13.250032424926758
    4. '_,' → logprob: -13.875032424926758
    5. ',
' → logprob: -14.250032424926758
    6. '           ' → logprob: -15.250032424926758
    7. '),' → logprob: -15.375032424926758
    8. ',y' → logprob: -16.375032424926758
    9. '<|end|>' → logprob: -16.375032424926758
    10. 'ey' → logprob: -16.375032424926758

Token 2708: ' ey' (ID: 17600)
  Prédit: 'ey'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ey' → logprob: -1.9862216504407115e-05
    2. ' ey' → logprob: -11.000020027160645
    3. 'eyey' → logprob: -13.375020027160645
    4. 'ay' → logprob: -13.500020027160645
    5. 'uy' → logprob: -17.125019073486328
    6. 'eys' → logprob: -17.375019073486328
    7. 'iy' → logprob: -17.750019073486328
    8. 'eyay' → logprob: -17.875019073486328
    9. 'eyd' → logprob: -18.000019073486328
    10. 'eyi' → logprob: -18.125019073486328

Token 2709: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014478032244369388
    2. '           ' → logprob: -9.375144958496094
    3. ' ,' → logprob: -10.250144958496094
    4. ',
' → logprob: -11.625144958496094
    5. '               ' → logprob: -11.625144958496094
    6. '):
' → logprob: -12.875144958496094
    7. '                   ' → logprob: -14.250144958496094
    8. ')' → logprob: -14.875144958496094
    9. '   ' → logprob: -15.375144958496094
    10. '):' → logprob: -15.375144958496094

Token 2710: ' blocks' (ID: 18125)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.0002378673671046272
    2. ' blocks' → logprob: -8.375237464904785
    3. '           ' → logprob: -12.125237464904785
    4. '               ' → logprob: -14.125237464904785
    5. '.blocks' → logprob: -15.000237464904785
    6. '   ' → logprob: -15.375237464904785
    7. '                   ' → logprob: -16.1252384185791
    8. '       ' → logprob: -16.1252384185791
    9. 'block' → logprob: -16.7502384185791
    10. '```' → logprob: -17.1252384185791

Token 2711: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.008883645758032799
    2. '):' → logprob: -4.758883476257324
    3. '           ' → logprob: -8.508883476257324
    4. ')' → logprob: -10.133883476257324
    5. '               ' → logprob: -10.883883476257324
    6. '):
' → logprob: -12.508883476257324
    7. ' ):
' → logprob: -13.883883476257324
    8. '):

' → logprob: -14.133883476257324
    9. ')==' → logprob: -14.133883476257324
    10. ':
' → logprob: -14.383883476257324

Token 2712: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00037561915814876556
    2. '	           ' → logprob: -8.250375747680664
    3. '		       ' → logprob: -9.875375747680664
    4. '			' → logprob: -10.500375747680664
    5. '           ' → logprob: -12.000375747680664
    6. '                
' → logprob: -12.125375747680664
    7. '	       ' → logprob: -12.375375747680664
    8. '
' → logprob: -12.750375747680664
    9. '```' → logprob: -12.875375747680664
    10. ':
' → logprob: -12.875375747680664

Token 2713: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' (adapté à ' low') → logprob: -5.860340752406046e-05
    2. ' low' → logprob: -9.7500581741333
    3. '           ' → logprob: -16.000059127807617
    4. '               ' → logprob: -16.125059127807617
    5. '   ' → logprob: -16.875059127807617
    6. '
' → logprob: -18.125059127807617
    7. 'Low' → logprob: -19.000059127807617
    8. 'high' → logprob: -19.125059127807617
    9. '(low' → logprob: -19.250059127807617
    10. '.low' → logprob: -19.500059127807617

Token 2714: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889782637357712
    2. '=' → logprob: -2.578897714614868
    3. ' =
' → logprob: -12.078897476196289
    4. ' +=' → logprob: -14.203897476196289
    5. ' ' → logprob: -14.453897476196289
    6. '=
' → logprob: -14.578897476196289
    7. ')' → logprob: -15.578897476196289
    8. ',' → logprob: -15.953897476196289
    9. '<|end|>' → logprob: -16.07889747619629
    10. ' ' → logprob: -16.70389747619629

Token 2715: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.4740790128707886
    2. ' mid' → logprob: -0.9740790128707886
    3. '(mid' → logprob: -13.474079132080078
    4. ' midpoint' → logprob: -15.099079132080078
    5. '_mid' → logprob: -15.974079132080078
    6. '[mid' → logprob: -16.099079132080078
    7. '.mid' → logprob: -17.849079132080078
    8. ' ' → logprob: -18.099079132080078
    9. ' mids' → logprob: -18.474079132080078
    10. 'middle' → logprob: -18.599079132080078

Token 2716: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4856322407722473
    2. ' else' → logprob: -1.7356321811676025
    3. 'else' → logprob: -1.9856321811676025
    4. '<|end|>' → logprob: -2.8606321811676025
    5. '               ' → logprob: -5.610632419586182
    6. '
' → logprob: -6.235632419586182
    7. '<|end|>' → logprob: -6.235632419586182
    8. ' 
' → logprob: -6.360632419586182
    9. '            
' → logprob: -6.735632419586182
    10. '		' → logprob: -7.485632419586182

Token 2717: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19938123226165771
    2. 'else' → logprob: -1.8243812322616577
    3. ' else' → logprob: -3.9493813514709473
    4. '```' → logprob: -9.074380874633789
    5. '
' → logprob: -10.449380874633789
    6. '       ' → logprob: -11.449380874633789
    7. '               ' → logprob: -12.324380874633789
    8. '		' → logprob: -12.574380874633789
    9. '            ' → logprob: -13.199380874633789
    10. '            
' → logprob: -13.199380874633789

Token 2718: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.2157195806503296
    2. ' else' → logprob: -2.215719699859619
    3. '           ' → logprob: -2.465719699859619
    4. '       ' → logprob: -12.090719223022461
    5. '	else' → logprob: -12.715719223022461
    6. '		' → logprob: -12.965719223022461
    7. '```' → logprob: -13.090719223022461
    8. '   ' → logprob: -14.340719223022461
    9. '
' → logprob: -14.340719223022461
    10. '	       ' → logprob: -14.840719223022461

Token 2719: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11594665050506592
    2. ':
' → logprob: -2.3659467697143555
    3. '           ' → logprob: -4.3659467697143555
    4. ':' → logprob: -5.9909467697143555
    5. '       ' → logprob: -9.615946769714355
    6. '              ' → logprob: -9.865946769714355
    7. '):
' → logprob: -10.115946769714355
    8. '                   ' → logprob: -10.365946769714355
    9. '             ' → logprob: -10.365946769714355
    10. '   ' → logprob: -10.615946769714355

Token 2720: '               ' (ID: 506)
  Prédit: ' high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' high' → logprob: -0.10004167258739471
    2. '               ' → logprob: -2.475041627883911
    3. '           ' → logprob: -4.85004186630249
    4. 'high' → logprob: -5.85004186630249
    5. '       ' → logprob: -8.600041389465332
    6. '   ' → logprob: -9.475041389465332
    7. '(high' → logprob: -11.225041389465332
    8. '_high' → logprob: -11.475041389465332
    9. '
' → logprob: -11.600041389465332
    10. ' ' → logprob: -11.725041389465332

Token 2721: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' (adapté à ' high') → logprob: -0.12695036828517914
    2. ' high' → logprob: -2.126950263977051
    3. '               ' → logprob: -11.12695026397705
    4. '_high' → logprob: -12.50195026397705
    5. '   ' → logprob: -13.25195026397705
    6. 'High' → logprob: -13.87695026397705
    7. '.high' → logprob: -14.50195026397705
    8. '(high' → logprob: -15.25195026397705
    9. '                   ' → logprob: -15.50195026397705
    10. '高' → logprob: -16.376951217651367

Token 2722: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868718445301056
    2. ' =' → logprob: -1.1368718147277832
    3. '                ' → logprob: -14.386872291564941
    4. ')' → logprob: -16.636871337890625
    5. '=
' → logprob: -16.636871337890625
    6. '=cut' → logprob: -17.136871337890625
    7. ' =
' → logprob: -17.261871337890625
    8. '               ' → logprob: -17.261871337890625
    9. '                   ' → logprob: -17.636871337890625
    10. ' ' → logprob: -18.261871337890625

Token 2723: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.06196768581867218
    2. ' mid' → logprob: -2.811967611312866
    3. '_mid' → logprob: -16.811967849731445
    4. '(mid' → logprob: -17.811967849731445
    5. ' midpoint' → logprob: -17.811967849731445
    6. '[mid' → logprob: -20.061967849731445
    7. 'middle' → logprob: -20.436967849731445
    8. '.mid' → logprob: -20.686967849731445
    9. 'Mid' → logprob: -20.936967849731445
    10. 'm' → logprob: -21.686967849731445

Token 2724: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6833958029747009
    2. '<|end|>' → logprob: -1.4333958625793457
    3. '
' → logprob: -2.0583958625793457
    4. '        
' → logprob: -2.3083958625793457
    5. '    
' → logprob: -4.933395862579346
    6. '  
' → logprob: -5.308395862579346
    7. '<|end|>' → logprob: -5.433395862579346
    8. ' 
' → logprob: -5.433395862579346
    9. ')' → logprob: -7.058395862579346
    10. '\n' → logprob: -7.058395862579346

Token 2725: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4801934063434601
    2. '   ' → logprob: -0.9801933765411377
    3. '       ' → logprob: -5.480193614959717
    4. ' print' → logprob: -6.355193614959717
    5. '```' → logprob: -8.605193138122559
    6. '
' → logprob: -12.230193138122559
    7. '	print' → logprob: -13.230193138122559
    8. '``' → logprob: -14.605193138122559
    9. '    
' → logprob: -14.855193138122559
    10. 'return' → logprob: -14.980193138122559

Token 2726: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.702754474943504e-05
    2. ' print' → logprob: -10.25003719329834
    3. '       ' → logprob: -14.12503719329834
    4. '```' → logprob: -14.62503719329834
    5. '
' → logprob: -15.75003719329834
    6. 'printf' → logprob: -15.87503719329834
    7. '   ' → logprob: -15.87503719329834
    8. '#print' → logprob: -19.625036239624023
    9. '        
' → logprob: -19.875036239624023
    10. '``' → logprob: -20.125036239624023

Token 2727: '(low' (ID: 119835)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0031242407858371735
    2. '(int' → logprob: -6.628124237060547
    3. '("{' → logprob: -7.003124237060547
    4. '(round' → logprob: -7.753124237060547
    5. '("%.' → logprob: -8.878124237060547
    6. '("' → logprob: -9.128124237060547
    7. '('{' → logprob: -9.503124237060547
    8. '('' → logprob: -9.753124237060547
    9. 'f' → logprob: -10.253124237060547
    10. '(format' → logprob: -10.753124237060547

Token 2728: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.771655115589965e-05
    2. ')
' → logprob: -11.625018119812012
    3. ' )' → logprob: -12.125018119812012
    4. '())' → logprob: -14.250018119812012
    5. ')`' → logprob: -14.250018119812012
    6. '),' → logprob: -14.375018119812012
    7. ',' → logprob: -14.500018119812012
    8. '```' → logprob: -15.750018119812012
    9. '))' → logprob: -16.250017166137695
    10. ')}' → logprob: -16.625017166137695

Token 2729: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2730: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3868718445301056
    2. '__' → logprob: -1.1368718147277832
    3. '_' → logprob: -14.886872291564941
    4. '___' → logprob: -15.011872291564941
    5. '_name' → logprob: -16.261871337890625
    6. ' ' → logprob: -17.011871337890625
    7. 'name' → logprob: -17.261871337890625
    8. '____' → logprob: -17.886871337890625
    9. '(__' → logprob: -18.511871337890625
    10. ' ___' → logprob: -19.011871337890625

Token 2731: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.05301443487405777
    2. ' ==' → logprob: -3.1780145168304443
    3. '==' → logprob: -4.678014278411865
    4. '```' → logprob: -8.928014755249023
    5. '__":
' → logprob: -9.053014755249023
    6. ' __' → logprob: -9.178014755249023
    7. '=="' → logprob: -9.303014755249023
    8. 'if' → logprob: -10.053014755249023
    9. '.__' → logprob: -10.178014755249023
    10. '__':
' → logprob: -10.928014755249023

Token 2732: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.011722803115844727
    2. '==' → logprob: -4.636722564697266
    3. ' ==' → logprob: -7.136722564697266
    4. '=="' → logprob: -7.136722564697266
    5. '```' → logprob: -8.761722564697266
    6. '=='' → logprob: -9.636722564697266
    7. '____' → logprob: -10.386722564697266
    8. '_' → logprob: -10.386722564697266
    9. '___' → logprob: -10.761722564697266
    10. '__.__' → logprob: -10.886722564697266

Token 2733: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.27655720710754395
    2. '==' → logprob: -1.526557207107544
    3. ' ==' → logprob: -4.151556968688965
    4. '=="' → logprob: -5.276556968688965
    5. '=='' → logprob: -6.026556968688965
    6. '```' → logprob: -7.401556968688965
    7. '__":
' → logprob: -9.401556968688965
    8. '==
' → logprob: -9.776556968688965
    9. '__.__' → logprob: -9.901556968688965
    10. '____' → logprob: -10.151556968688965

Token 2734: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3133332431316376
    2. '"' → logprob: -1.31333327293396
    3. '__' → logprob: -10.063333511352539
    4. ' "__' → logprob: -10.938333511352539
    5. ' '__' → logprob: -11.938333511352539
    6. '`' → logprob: -13.313333511352539
    7. ''"' → logprob: -13.938333511352539
    8. ''_' → logprob: -15.063333511352539
    9. '('__' → logprob: -15.188333511352539
    10. '```' → logprob: -15.563333511352539

Token 2735: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4741075932979584
    2. 'main' → logprob: -0.9741076231002808
    3. '_main' → logprob: -11.09910774230957
    4. 'name' → logprob: -11.59910774230957
    5. '__':
' → logprob: -12.72410774230957
    6. '__
' → logprob: -13.84910774230957
    7. '___' → logprob: -13.97410774230957
    8. 'python' → logprob: -14.84910774230957
    9. ' main' → logprob: -15.22410774230957
    10. ' __' → logprob: -15.47410774230957

Token 2736: '__':
' (ID: 39314)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.2179662585258484
    2. ':' → logprob: -2.342966318130493
    3. '__':
' → logprob: -3.092966318130493
    4. ':
' → logprob: -3.342966318130493
    5. '__":
' → logprob: -5.217966079711914
    6. '()' → logprob: -5.842966079711914
    7. '<|end|>' → logprob: -5.967966079711914
    8. '```' → logprob: -6.092966079711914
    9. '   ' → logprob: -6.717966079711914
    10. '.mainloop' → logprob: -7.717966079711914

Token 2737: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03819664195179939
    2. 'solve' → logprob: -3.288196563720703
    3. ' solve' → logprob: -9.788196563720703
    4. '```' → logprob: -10.288196563720703
    5. 'main' → logprob: -10.413196563720703
    6. '    
' → logprob: -11.288196563720703
    7. '.solve' → logprob: -11.663196563720703
    8. 'def' → logprob: -12.288196563720703
    9. 'read' → logprob: -13.163196563720703
    10. 'import' → logprob: -13.413196563720703

Token 2738: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -8.256334695033729e-05
    2. '   ' → logprob: -9.500082969665527
    3. 'read' → logprob: -12.000082969665527
    4. 'import' → logprob: -13.750082969665527
    5. '```' → logprob: -15.500082969665527
    6. ' solve' → logprob: -15.750082969665527
    7. 'def' → logprob: -16.87508201599121
    8. '.solve' → logprob: -16.87508201599121
    9. 'resolve' → logprob: -19.37508201599121
    10. 'data' → logprob: -19.75008201599121

Token 2739: '_dataset' (ID: 40568)
  Prédit: '_dataset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dataset' → logprob: -0.08160776644945145
    2. '()' → logprob: -2.5816078186035156
    3. '_' → logprob: -5.956607818603516
    4. '()
' → logprob: -9.956607818603516
    5. '_data' → logprob: -10.831607818603516
    6. '()\' → logprob: -11.581607818603516
    7. 'dataset' → logprob: -11.706607818603516
    8. '(' → logprob: -11.956607818603516
    9. '```' → logprob: -11.956607818603516
    10. '__' → logprob: -11.956607818603516

Token 2740: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 2738
Tokens correctement prédits (1ère position, stricte): 1034
Tokens correctement prédits (1ère position, avec adaptation): 1102
Tokens correctement prédits (top 10): 2137
Précision stricte (1ère position): 37.76%
Précision adaptée (1ère position): 40.25%
Précision (top 10): 78.05%
================================================================================
