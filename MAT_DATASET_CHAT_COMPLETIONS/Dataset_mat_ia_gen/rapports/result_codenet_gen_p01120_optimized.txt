================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    import sys
    input = sys.stdin.readline

    while True:
        n, m = map(int, input().split())
        if n == 0 and m == 0:
            break
        a = list(map(int, input().split()))
        b = list(map(int, input().split()))

        diffs = []
        for i in range(n):
            diff = (b[i] - a[i]) % m
            diffs.append(diff)

        ops = 0
        i = 0
        while i < n:
            if diffs[i] == 0:
                i += 1
                continue
            current = diffs[i]
            j = i
            while j < n and diffs[j] == current:
                diffs[j] = 0
                j += 1
            ops += current
            i = j

        print(ops)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.29922357201576233
    2. '\n' → logprob: -1.67422354221344
    3. '   ' → logprob: -3.4242236614227295
    4. '(' → logprob: -4.54922342300415
    5. ' 
' → logprob: -5.17422342300415
    6. '    
' → logprob: -5.29922342300415
    7. ''' → logprob: -5.67422342300415
    8. ' ' → logprob: -5.67422342300415
    9. '```' → logprob: -6.17422342300415
    10. '    ' → logprob: -6.29922342300415

Token 4: ' import' (ID: 1588)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4218117594718933
    2. '   ' → logprob: -1.671811819076538
    3. 'pass' → logprob: -2.421811819076538
    4. 'p' → logprob: -3.671811819076538
    5. 'return' → logprob: -4.171811580657959
    6. 'r' → logprob: -4.421811580657959
    7. '#' → logprob: -5.171811580657959
    8. '    ' → logprob: -6.171811580657959
    9. 'a' → logprob: -6.296811580657959
    10. 'n' → logprob: -6.796811580657959

Token 5: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.031138697639107704
    2. ' sys' → logprob: -3.6561386585235596
    3. ' math' → logprob: -5.781138896942139
    4. ' ' → logprob: -6.656138896942139
    5. ' numpy' → logprob: -8.65613842010498
    6. ' json' → logprob: -9.15613842010498
    7. ' random' → logprob: -10.15613842010498
    8. ' tensorflow' → logprob: -10.28113842010498
    9. ' space' → logprob: -11.15613842010498
    10. 'os' → logprob: -11.28113842010498

Token 6: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.20186370611190796
    2. '<|end|>' → logprob: -3.5768637657165527
    3. '\n' → logprob: -3.7018637657165527
    4. 'newline' → logprob: -3.8268637657165527
    5. '.readline' → logprob: -3.8268637657165527
    6. '.print' → logprob: -4.326863765716553
    7. 'import' → logprob: -4.576863765716553
    8. 'print' → logprob: -4.576863765716553
    9. '\' → logprob: -4.826863765716553
    10. '[' → logprob: -4.951863765716553

Token 7: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8574399948120117
    2. '<|end|>' → logprob: -1.2324399948120117
    3. 'import' → logprob: -2.8574399948120117
    4. '```' → logprob: -3.2324399948120117
    5. '.readline' → logprob: -3.4824399948120117
    6. '<|end|>' → logprob: -3.8574399948120117
    7. '
' → logprob: -3.9824399948120117
    8. 'newline' → logprob: -4.232439994812012
    9. '\n' → logprob: -4.357439994812012
    10. '   ' → logprob: -4.607439994812012

Token 8: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34727635979652405
    2. ' ' → logprob: -2.347276449203491
    3. '    ' → logprob: -2.347276449203491
    4. '\n' → logprob: -3.722276449203491
    5. '\' → logprob: -4.222276210784912
    6. '.' → logprob: -4.722276210784912
    7. '[' → logprob: -4.722276210784912
    8. 'import' → logprob: -4.847276210784912
    9. 'newline' → logprob: -5.222276210784912
    10. '  ' → logprob: -5.347276210784912

Token 9: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009440132416784763
    2. '()' → logprob: -5.259439945220947
    3. '_' → logprob: -6.509439945220947
    4. '.' → logprob: -7.134439945220947
    5. ')' → logprob: -8.009440422058105
    6. '_data' → logprob: -8.134440422058105
    7. ' ' → logprob: -8.884440422058105
    8. '```' → logprob: -8.884440422058105
    9. ''' → logprob: -9.384440422058105
    10. '('' → logprob: -9.509440422058105

Token 10: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0007131471065804362
    2. 'sys' → logprob: -7.250713348388672
    3. '=sys' → logprob: -13.625713348388672
    4. '	sys' → logprob: -13.750713348388672
    5. '(sys' → logprob: -14.375713348388672
    6. ' input' → logprob: -15.250713348388672
    7. ' ' → logprob: -15.875713348388672
    8. 'input' → logprob: -17.125713348388672
    9. ' system' → logprob: -17.125713348388672
    10. ' ' → logprob: -18.875713348388672

Token 11: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0021349138114601374
    2. ' .' → logprob: -6.877134799957275
    3. '.readline' → logprob: -7.252134799957275
    4. ''.' → logprob: -8.627135276794434
    5. '[' → logprob: -10.127135276794434
    6. '.​' → logprob: -10.877135276794434
    7. '​.' → logprob: -10.877135276794434
    8. '.<' → logprob: -11.127135276794434
    9. '.
' → logprob: -11.252135276794434
    10. '.get' → logprob: -11.377135276794434

Token 12: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.030841687694191933
    2. '.read' → logprob: -3.530841588973999
    3. '.' → logprob: -6.905841827392578
    4. 'read' → logprob: -10.030841827392578
    5. '.readlines' → logprob: -10.530841827392578
    6. '.Read' → logprob: -11.780841827392578
    7. '<|end|>' → logprob: -12.405841827392578
    8. '.buffer' → logprob: -13.030841827392578
    9. ' .' → logprob: -14.405841827392578
    10. '.stdin' → logprob: -14.530841827392578

Token 13: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05623752251267433
    2. '(' → logprob: -3.0562374591827393
    3. '()
' → logprob: -5.181237697601318
    4. '(
' → logprob: -6.806237697601318
    5. '()

' → logprob: -7.681237697601318
    6. '()\' → logprob: -9.05623722076416
    7. '(

' → logprob: -9.80623722076416
    8. ' ' → logprob: -10.05623722076416
    9. '\n' → logprob: -10.18123722076416
    10. '
' → logprob: -10.43123722076416

Token 14: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5915570855140686
    2. '   ' → logprob: -1.2165570259094238
    3. '(' → logprob: -1.9665570259094238
    4. '    
' → logprob: -5.716557025909424
    5. 'x' → logprob: -5.966557025909424
    6. 'def' → logprob: -7.091557025909424
    7. 'a' → logprob: -7.341557025909424
    8. '(
' → logprob: -7.341557025909424
    9. 'data' → logprob: -7.966557025909424
    10. 'for' → logprob: -8.216557502746582

Token 15: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0035963868722319603
    2. 'name' → logprob: -6.878596305847168
    3. 'data' → logprob: -7.128596305847168
    4. 'user' → logprob: -7.878596305847168
    5. 'for' → logprob: -8.003596305847168
    6. 't' → logprob: -8.128596305847168
    7. 'x' → logprob: -8.378596305847168
    8. '   ' → logprob: -9.003596305847168
    9. 'q' → logprob: -9.628596305847168
    10. 'a' → logprob: -9.628596305847168

Token 16: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.1707831472158432
    2. ' ' → logprob: -1.9207831621170044
    3. ' (' → logprob: -5.670783042907715
    4. ' not' → logprob: -5.670783042907715
    5. 'True' → logprob: -7.045783042907715
    6. '    ' → logprob: -7.295783042907715
    7. '  ' → logprob: -7.670783042907715
    8. '(' → logprob: -7.795783042907715
    9. '<|end|>' → logprob: -8.045783042907715
    10. ' )' → logprob: -8.045783042907715

Token 17: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.044353585690259933
    2. '():' → logprob: -3.169353485107422
    3. '):' → logprob: -7.419353485107422
    4. '       ' → logprob: -8.294353485107422
    5. ':**' → logprob: -8.669353485107422
    6. ' :' → logprob: -8.919353485107422
    7. '   ' → logprob: -10.294353485107422
    8. ':
' → logprob: -10.419353485107422
    9. '<|end|>' → logprob: -10.544353485107422
    10. ' ():' → logprob: -10.544353485107422

Token 18: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09386351704597473
    2. ' ' → logprob: -3.2188634872436523
    3. '    ' → logprob: -3.4688634872436523
    4. '<|end|>' → logprob: -4.968863487243652
    5. '   ' → logprob: -5.843863487243652
    6. '        
' → logprob: -5.968863487243652
    7. '        ' → logprob: -5.968863487243652
    8. '      ' → logprob: -6.843863487243652
    9. '(' → logprob: -7.843863487243652
    10. '  ' → logprob: -8.093863487243652

Token 19: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.7871724367141724
    2. 'line' → logprob: -0.9121724367141724
    3. 'data' → logprob: -2.287172317504883
    4. ' data' → logprob: -4.287172317504883
    5. '   ' → logprob: -4.912172317504883
    6. '    ' → logprob: -5.412172317504883
    7. 'n' (adapté à ' n') → logprob: -5.662172317504883
    8. ' ' → logprob: -5.912172317504883
    9. 's' → logprob: -6.037172317504883
    10. 'user' → logprob: -6.162172317504883

Token 20: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7797901630401611
    2. ' ==' → logprob: -0.7797901630401611
    3. '=' → logprob: -3.029790163040161
    4. ' >' → logprob: -4.154789924621582
    5. ' ' → logprob: -4.779789924621582
    6. '==' → logprob: -5.404789924621582
    7. ' <=' → logprob: -5.779789924621582
    8. '>' → logprob: -6.654789924621582
    9. '<|end|>' → logprob: -8.154789924621582
    10. ' !=' → logprob: -8.529789924621582

Token 21: ' m' (ID: 284)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14794620871543884
    2. ' m' → logprob: -2.2729461193084717
    3. 'm' → logprob: -4.272946357727051
    4. ' =' → logprob: -4.397946357727051
    5. '=' → logprob: -5.772946357727051
    6. ' input' → logprob: -6.272946357727051
    7. 'input' → logprob: -7.022946357727051
    8. '    ' → logprob: -7.647946357727051
    9. '  ' → logprob: -7.897946357727051
    10. ' x' → logprob: -8.39794635772705

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08898712694644928
    2. '=' → logprob: -2.463987112045288
    3. ',' → logprob: -10.088987350463867
    4. ' ' → logprob: -12.713987350463867
    5. ')' → logprob: -13.213987350463867
    6. '    ' → logprob: -15.338987350463867
    7. '<|end|>' → logprob: -15.463987350463867
    8. '=input' → logprob: -15.588987350463867
    9. ' ,' → logprob: -16.088987350463867
    10. '=line' → logprob: -16.463987350463867

Token 23: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.15343129634857178
    2. ' input' → logprob: -2.2784314155578613
    3. 'map' → logprob: -3.6534314155578613
    4. 'input' → logprob: -4.278431415557861
    5. ' ' → logprob: -10.903430938720703
    6. ' list' → logprob: -12.528430938720703
    7. ' [' → logprob: -13.903430938720703
    8. '(map' → logprob: -14.153430938720703
    9. '	map' → logprob: -14.153430938720703
    10. ' tuple' → logprob: -14.278430938720703

Token 24: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28504928946495056
    2. '(int' → logprob: -1.910049319267273
    3. '(lambda' → logprob: -2.7850492000579834
    4. '(str' → logprob: -3.4100492000579834
    5. '(input' → logprob: -5.2850494384765625
    6. '(eval' → logprob: -10.660049438476562
    7. '(
' → logprob: -11.035049438476562
    8. '(list' → logprob: -11.285049438476562
    9. '(ord' → logprob: -11.660049438476562
    10. '(len' → logprob: -12.285049438476562

Token 25: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.08671058714389801
    2. ',input' → logprob: -2.9617106914520264
    3. ',' → logprob: -4.586710453033447
    4. '(' → logprob: -4.711710453033447
    5. ')' → logprob: -4.836710453033447
    6. 'input' → logprob: -5.586710453033447
    7. '(),' → logprob: -8.836710929870605
    8. '=input' → logprob: -9.211710929870605
    9. ' input' → logprob: -9.336710929870605
    10. '()' → logprob: -9.586710929870605

Token 26: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.38689306378364563
    2. 'input' → logprob: -1.1368930339813232
    3. ')' → logprob: -10.886893272399902
    4. '(input' → logprob: -13.511893272399902
    5. '=input' → logprob: -13.761893272399902
    6. '	input' → logprob: -14.886893272399902
    7. ',input' → logprob: -15.136893272399902
    8. ' )' → logprob: -15.886893272399902
    9. '<input' → logprob: -16.386892318725586
    10. ' ' → logprob: -17.011892318725586

Token 27: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.45673251152038574
    2. '())' → logprob: -1.2067325115203857
    3. '()' → logprob: -2.7067325115203857
    4. ')' → logprob: -7.956732749938965
    5. '()))' → logprob: -8.831732749938965
    6. '());' → logprob: -9.456732749938965
    7. '();)' → logprob: -10.456732749938965
    8. '(' → logprob: -10.706732749938965
    9. '()));' → logprob: -10.956732749938965
    10. ' ())' → logprob: -11.206732749938965

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.08118578791618347
    2. 'strip' → logprob: -2.581185817718506
    3. 'rstrip' → logprob: -6.081185817718506
    4. 'read' → logprob: -12.456185340881348
    5. 'rs' → logprob: -13.706185340881348
    6. ' split' → logprob: -13.706185340881348
    7. ')' → logprob: -14.206185340881348
    8. '(split' → logprob: -14.456185340881348
    9. ' strip' → logprob: -15.706185340881348
    10. 'decode' → logprob: -16.456186294555664

Token 29: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.014368698000907898
    2. ')' → logprob: -4.389368534088135
    3. '()' → logprob: -6.639368534088135
    4. '()))' → logprob: -8.014369010925293
    5. '))' → logprob: -8.889369010925293
    6. '())
' → logprob: -9.514369010925293
    7. '(' → logprob: -13.389369010925293
    8. ' ())' → logprob: -13.639369010925293
    9. '())

' → logprob: -14.014369010925293
    10. '()),' → logprob: -14.514369010925293

Token 30: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12819904088974
    2. '<|end|>' → logprob: -2.3781991004943848
    3. ' if' → logprob: -4.003199100494385
    4. 'if' (adapté à ' if') → logprob: -5.753199100494385
    5. ' ' → logprob: -5.878199100494385
    6. '
' → logprob: -7.628199100494385
    7. '<|end|>' → logprob: -7.753199100494385
    8. '\n' → logprob: -7.878199100494385
    9. '        ' → logprob: -7.878199100494385
    10. '   ' → logprob: -8.003198623657227

Token 32: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.003103565191850066
    2. ' not' → logprob: -6.253103733062744
    3. 'n' → logprob: -6.753103733062744
    4. 'not' → logprob: -12.003103256225586
    5. ' ' → logprob: -14.503103256225586
    6. '	n' → logprob: -15.503103256225586
    7. ' (' → logprob: -16.753103256225586
    8. '(n' → logprob: -16.878103256225586
    9. ' ' → logprob: -17.378103256225586
    10. 'n't' → logprob: -18.503103256225586

Token 33: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.023554086685180664
    2. '==' → logprob: -3.7735540866851807
    3. ' <=' → logprob: -8.273553848266602
    4. ' <' → logprob: -10.648553848266602
    5. '<=' → logprob: -11.523553848266602
    6. '=' → logprob: -11.898553848266602
    7. ' ' → logprob: -12.523553848266602
    8. '<' → logprob: -12.773553848266602
    9. ' =' → logprob: -13.273553848266602
    10. ')' → logprob: -14.023553848266602

Token 34: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.42874136567115784
    2. ' ' → logprob: -1.0537413358688354
    3. 'm' → logprob: -10.928741455078125
    4. ' m' → logprob: -11.178741455078125
    5. '  ' → logprob: -13.241241455078125
    6. '   ' → logprob: -13.866241455078125
    7. '=' → logprob: -14.366241455078125
    8. '```' → logprob: -14.366241455078125
    9. '    ' → logprob: -14.616241455078125
    10. ' ' → logprob: -14.741241455078125

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001867326645879075
    2. ' ' → logprob: -8.625186920166016
    3. 'm' → logprob: -12.125186920166016
    4. '```' → logprob: -15.125186920166016
    5. '-' → logprob: -15.437686920166016
    6. 's' → logprob: -15.625186920166016
    7. 'and' → logprob: -15.625186920166016
    8. '   ' → logprob: -15.812686920166016
    9. ' m' → logprob: -16.250186920166016
    10. '  ' → logprob: -16.437686920166016

Token 36: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03835759684443474
    2. 'and' → logprob: -3.2883574962615967
    3. ' or' → logprob: -8.788357734680176
    4. ':' → logprob: -9.163357734680176
    5. ' ' → logprob: -9.788357734680176
    6. '	and' → logprob: -13.538357734680176
    7. ' ' → logprob: -15.038357734680176
    8. '  ' → logprob: -15.163357734680176
    9. '   ' → logprob: -15.413357734680176
    10. 'or' → logprob: -15.413357734680176

Token 37: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.018150178715586662
    2. 'm' → logprob: -4.018150329589844
    3. '	m' → logprob: -15.643150329589844
    4. ' ' → logprob: -16.393150329589844
    5. ' ' → logprob: -17.393150329589844
    6. '    ' → logprob: -18.518150329589844
    7. '&m' → logprob: -18.643150329589844
    8. ' м' → logprob: -19.268150329589844
    9. '<|end|>' → logprob: -19.393150329589844
    10. '   ' → logprob: -19.518150329589844

Token 38: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03017541766166687
    2. '==' → logprob: -3.5301754474639893
    3. '<|end|>' → logprob: -7.90517520904541
    4. '<|end|>' → logprob: -10.65517520904541
    5. ' ' → logprob: -11.78017520904541
    6. ' ' → logprob: -12.15517520904541
    7. '=' → logprob: -12.28017520904541
    8. ' =' → logprob: -12.53017520904541
    9. ')==' → logprob: -13.03017520904541
    10. ')' → logprob: -13.15517520904541

Token 39: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10020678490400314
    2. ' ' → logprob: -2.3502068519592285
    3. '  ' → logprob: -16.47520637512207
    4. ' ' → logprob: -16.85020637512207
    5. '   ' → logprob: -17.72520637512207
    6. '۰' → logprob: -17.97520637512207
    7. '<|end|>' → logprob: -19.28770637512207
    8. '<|end|>' → logprob: -19.66270637512207
    9. '０' → logprob: -19.97520637512207
    10. ' ' → logprob: -20.03770637512207

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003802680876106024
    2. ' ' → logprob: -7.875380039215088
    3. '  ' → logprob: -17.25037956237793
    4. '   ' → logprob: -17.37537956237793
    5. '۰' → logprob: -18.75037956237793
    6. '```' → logprob: -18.87537956237793
    7. '<|end|>' → logprob: -19.06287956237793
    8. '    ' → logprob: -19.62537956237793
    9. ' ' → logprob: -19.87537956237793
    10. '०' → logprob: -20.12537956237793

Token 41: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000662280130200088
    2. '       ' → logprob: -8.125661849975586
    3. ':
' → logprob: -8.250661849975586
    4. '           ' → logprob: -9.250661849975586
    5. ':return' → logprob: -12.375661849975586
    6. '   ' → logprob: -13.250661849975586
    7. ' :' → logprob: -13.375661849975586
    8. '.' → logprob: -14.875661849975586
    9. '):' → logprob: -15.625661849975586
    10. '<|end|>' → logprob: -16.000661849975586

Token 42: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000284696085145697
    2. '       ' → logprob: -8.500285148620605
    3. ' break' → logprob: -9.875285148620605
    4. 'break' → logprob: -11.750285148620605
    5. ':' → logprob: -12.000285148620605
    6. '\n' → logprob: -12.250285148620605
    7. '   ' → logprob: -13.000285148620605
    8. '               ' → logprob: -13.500285148620605
    9. '          ' → logprob: -13.875285148620605
    10. '	break' → logprob: -14.125285148620605

Token 43: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6348764896392822
    2. ' break' → logprob: -0.8848764896392822
    3. 'break' (adapté à ' break') → logprob: -3.0098764896392822
    4. '       ' → logprob: -4.884876251220703
    5. '               ' → logprob: -8.634876251220703
    6. '	break' → logprob: -9.634876251220703
    7. '   ' → logprob: -9.634876251220703
    8. '_break' → logprob: -11.134876251220703
    9. '```' → logprob: -11.509876251220703
    10. 'return' → logprob: -11.634876251220703

Token 44: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1682269275188446
    2. '<|end|>' → logprob: -2.043226957321167
    3. '
' → logprob: -4.668226718902588
    4. '\n' → logprob: -5.043226718902588
    5. '        
' → logprob: -5.168226718902588
    6. '\' → logprob: -6.543226718902588
    7. '<|end|>' → logprob: -7.793226718902588
    8. '' → logprob: -7.918226718902588
    9. '```' → logprob: -8.168227195739746
    10. ')' → logprob: -8.543227195739746

Token 45: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24509243667125702
    2. '<|end|>' → logprob: -1.7450923919677734
    3. '        
' → logprob: -3.9950923919677734
    4. '
' → logprob: -4.620092391967773
    5. '\n' → logprob: -4.745092391967773
    6. '```' → logprob: -6.370092391967773
    7. '<|end|>' → logprob: -6.620092391967773
    8. '\' → logprob: -7.245092391967773
    9. '        ' → logprob: -7.995092391967773
    10. '   ' → logprob: -8.495092391967773

Token 46: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07707150280475616
    2. '<|end|>' → logprob: -3.57707142829895
    3. '        ' → logprob: -3.95207142829895
    4. ' ' → logprob: -4.827071666717529
    5. '        
' → logprob: -5.327071666717529
    6. '    ' → logprob: -6.077071666717529
    7. '<|end|>' → logprob: -6.202071666717529
    8. ')' → logprob: -6.577071666717529
    9. '\n' → logprob: -6.827071666717529
    10. '```' → logprob: -6.827071666717529

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0733044445514679
    2. ',' → logprob: -3.6983044147491455
    3. ' ' → logprob: -3.6983044147491455
    4. '=' → logprob: -4.448304653167725
    5. 'rray' → logprob: -6.073304653167725
    6. '[' → logprob: -6.198304653167725
    7. ',b' → logprob: -7.073304653167725
    8. ' =[' → logprob: -7.073304653167725
    9. ' ,' → logprob: -7.448304653167725
    10. '_' → logprob: -7.573304653167725

Token 48: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.4023020267486572
    2. 'list' → logprob: -1.7773020267486572
    3. ' [' → logprob: -2.6523020267486572
    4. '[]' → logprob: -3.6523020267486572
    5. ' []' → logprob: -3.6523020267486572
    6. '[list' → logprob: -3.7773020267486572
    7. '[' → logprob: -4.152301788330078
    8. '[input' → logprob: -7.902301788330078
    9. '[n' → logprob: -8.027301788330078
    10. '[int' → logprob: -9.402301788330078

Token 49: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23090167343616486
    2. '(map' → logprob: -1.6059017181396484
    3. '(range' → logprob: -6.105901718139648
    4. '()' → logprob: -6.105901718139648
    5. '(int' → logprob: -7.980901718139648
    6. '(input' → logprob: -7.980901718139648
    7. '(a' → logprob: -8.480901718139648
    8. '(
' → logprob: -10.855901718139648
    9. '<|end|>' → logprob: -11.105901718139648
    10. '(filter' → logprob: -12.355901718139648

Token 50: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.018223460763692856
    2. '(' → logprob: -4.018223285675049
    3. '(lambda' → logprob: -11.143223762512207
    4. ')' → logprob: -11.393223762512207
    5. '<|end|>' → logprob: -11.768223762512207
    6. ',int' → logprob: -11.893223762512207
    7. '[int' → logprob: -12.018223762512207
    8. '<int' → logprob: -12.018223762512207
    9. '(str' → logprob: -12.268223762512207
    10. 'int' → logprob: -12.393223762512207

Token 51: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.36999499797821045
    2. '(input' → logprob: -1.6199949979782104
    3. ',' → logprob: -2.2449951171875
    4. '(' → logprob: -5.2449951171875
    5. 'input' → logprob: -9.7449951171875
    6. '(),' → logprob: -9.9949951171875
    7. ' ,' → logprob: -10.2449951171875
    8. '=input' → logprob: -12.3699951171875
    9. ')' → logprob: -12.6199951171875
    10. ',(' → logprob: -12.7449951171875

Token 52: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.632612943649292
    2. 'input' → logprob: -0.757612943649292
    3. ')' → logprob: -12.507613182067871
    4. '(input' → logprob: -12.757613182067871
    5. ',input' → logprob: -13.382613182067871
    6. '	input' → logprob: -13.757613182067871
    7. '[input' → logprob: -13.882613182067871
    8. '=input' → logprob: -13.882613182067871
    9. ' ' → logprob: -14.632613182067871
    10. '<input' → logprob: -15.195113182067871

Token 53: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.619311974034645e-05
    2. '()' → logprob: -10.250036239624023
    3. ' ().' → logprob: -14.375036239624023
    4. '(' → logprob: -16.000036239624023
    5. '.' → logprob: -17.750036239624023
    6. '().__' → logprob: -18.625036239624023
    7. '()

' → logprob: -19.125036239624023
    8. '()))' → logprob: -19.125036239624023
    9. '.readline' → logprob: -19.250036239624023
    10. '.split' → logprob: -19.375036239624023

Token 54: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.179569077678025e-05
    2. 'strip' → logprob: -10.250041961669922
    3. 'rstrip' → logprob: -12.000041961669922
    4. ' split' → logprob: -15.625041961669922
    5. '(split' → logprob: -17.125041961669922
    6. 'plit' → logprob: -17.875041961669922
    7. 'spl' → logprob: -18.875041961669922
    8. 's' → logprob: -19.125041961669922
    9. '.split' → logprob: -19.500041961669922
    10. 'read' → logprob: -19.750041961669922

Token 55: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.02017301693558693
    2. '))' → logprob: -4.520173072814941
    3. '())' → logprob: -4.895173072814941
    4. '()' → logprob: -6.645173072814941
    5. '(' → logprob: -9.145173072814941
    6. '()))
' → logprob: -9.270173072814941
    7. ')' → logprob: -9.395173072814941
    8. '()));' → logprob: -11.895173072814941
    9. '()))

' → logprob: -12.770173072814941
    10. '   ' → logprob: -13.895173072814941

Token 56: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6144914031028748
    2. 'b' → logprob: -1.4894914627075195
    3. '<|end|>' → logprob: -1.7394914627075195
    4. '   ' → logprob: -3.7394914627075195
    5. '        
' → logprob: -4.9894914627075195
    6. '
' → logprob: -5.1144914627075195
    7. ' ' → logprob: -5.8644914627075195
    8. ' b' → logprob: -5.8644914627075195
    9. '```' → logprob: -6.2394914627075195
    10. '[' → logprob: -6.2394914627075195

Token 57: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.04967815428972244
    2. '       ' → logprob: -3.924678087234497
    3. 'a' → logprob: -4.549678325653076
    4. ' b' → logprob: -4.799678325653076
    5. '   ' → logprob: -6.049678325653076
    6. 's' → logprob: -6.674678325653076
    7. 'count' → logprob: -6.799678325653076
    8. 'result' → logprob: -7.424678325653076
    9. 'dp' → logprob: -7.549678325653076
    10. 'q' → logprob: -7.924678325653076

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043003082275390625
    2. '=' → logprob: -3.1680030822753906
    3. ' ' → logprob: -13.41800308227539
    4. ',' → logprob: -13.41800308227539
    5. '.' → logprob: -15.16800308227539
    6. ')' → logprob: -16.16800308227539
    7. '_' → logprob: -16.29300308227539
    8. ' ' → logprob: -16.54300308227539
    9. 'space' → logprob: -16.66800308227539
    10. ' ,' → logprob: -16.79300308227539

Token 59: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.011048054322600365
    2. 'list' → logprob: -4.511047840118408
    3. '=list' → logprob: -15.886048316955566
    4. '(list' → logprob: -16.76104736328125
    5. ' ' → logprob: -17.51104736328125
    6. '	list' → logprob: -18.26104736328125
    7. 'List' → logprob: -18.51104736328125
    8. ' ' → logprob: -18.51104736328125
    9. ':list' → logprob: -18.63604736328125
    10. '[list' → logprob: -19.01104736328125

Token 60: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20219440758228302
    2. '(map' → logprob: -1.7021944522857666
    3. ' (' → logprob: -7.8271942138671875
    4. '(int' → logprob: -7.9521942138671875
    5. '(list' → logprob: -11.827194213867188
    6. '(m' → logprob: -11.952194213867188
    7. '(s' → logprob: -12.827194213867188
    8. '(
' → logprob: -12.952194213867188
    9. '(lambda' → logprob: -14.202194213867188
    10. '(range' → logprob: -14.202194213867188

Token 61: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -3.9650025428272784e-05
    2. '<int' → logprob: -11.250040054321289
    3. 'int' → logprob: -11.375040054321289
    4. '=int' → logprob: -11.750040054321289
    5. '[int' → logprob: -12.500040054321289
    6. ',int' → logprob: -13.250040054321289
    7. ']int' → logprob: -14.125040054321289
    8. '(' → logprob: -14.375040054321289
    9. ' (' → logprob: -15.750040054321289
    10. ' int' → logprob: -16.37504005432129

Token 62: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2072802484035492
    2. ',' → logprob: -2.207280158996582
    3. ',int' → logprob: -2.582280158996582
    4. 'int' → logprob: -7.082280158996582
    5. '<int' → logprob: -8.457280158996582
    6. '(' → logprob: -8.582280158996582
    7. '=int' → logprob: -9.207280158996582
    8. ' ,' → logprob: -9.207280158996582
    9. '[int' → logprob: -9.582280158996582
    10. ')' → logprob: -10.582280158996582

Token 63: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00020890454470645636
    2. ' int' → logprob: -8.750208854675293
    3. 'input' → logprob: -10.000208854675293
    4. '(int' → logprob: -12.500208854675293
    5. '[int' → logprob: -14.500208854675293
    6. '<int' → logprob: -15.500208854675293
    7. '   ' → logprob: -16.25020980834961
    8. ' input' → logprob: -16.25020980834961
    9. '    ' → logprob: -16.87520980834961
    10. ' ' → logprob: -16.87520980834961

Token 64: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.4272752852994017e-05
    2. '(' → logprob: -11.75002384185791
    3. '(int' → logprob: -11.87502384185791
    4. '.' → logprob: -12.00002384185791
    5. '()' → logprob: -13.12502384185791
    6. ' ().' → logprob: -14.62502384185791
    7. '.int' → logprob: -15.37502384185791
    8. '(.' → logprob: -16.000024795532227
    9. '.readline' → logprob: -16.250024795532227
    10. ' .' → logprob: -16.250024795532227

Token 65: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.088346359931165e-07
    2. ')' → logprob: -15.625000953674316
    3. 'spl' → logprob: -15.875000953674316
    4. '(split' → logprob: -16.0
    5. ' split' → logprob: -16.125
    6. 'read' → logprob: -16.375
    7. 'plit' → logprob: -16.5
    8. '```' → logprob: -17.625
    9. 's' → logprob: -17.75
    10. 'sys' → logprob: -17.75

Token 66: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.7389886975288391
    2. '))' → logprob: -1.4889886379241943
    3. '())' → logprob: -1.7389886379241943
    4. ')' → logprob: -2.2389886379241943
    5. '()' → logprob: -4.238988876342773
    6. '(' → logprob: -9.738988876342773
    7. '()))
' → logprob: -10.738988876342773
    8. '()));' → logprob: -12.113988876342773
    9. ' ())' → logprob: -12.363988876342773
    10. '   ' → logprob: -12.363988876342773

Token 67: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ' dif' (ID: 1501)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6556951403617859
    2. 'dp' → logprob: -0.9056951403617859
    3. 'i' → logprob: -3.1556951999664307
    4. 'result' → logprob: -4.655694961547852
    5. '   ' → logprob: -4.905694961547852
    6. 'c' → logprob: -5.655694961547852
    7. 'count' → logprob: -5.780694961547852
    8. 'res' → logprob: -6.280694961547852
    9. 'cnt' → logprob: -6.530694961547852
    10. 'idx' → logprob: -6.655694961547852

Token 69: 'fs' (ID: 6469)
  Prédit: 'ferences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ferences' → logprob: -0.28553420305252075
    2. 'ference' → logprob: -1.785534143447876
    3. 'f' → logprob: -2.660534143447876
    4. 'fer' → logprob: -5.285534381866455
    5. 'fs' → logprob: -5.535534381866455
    6. '_' → logprob: -7.535534381866455
    7. '=' → logprob: -7.910534381866455
    8. ' =' → logprob: -8.285533905029297
    9. '```' → logprob: -8.660533905029297
    10. 's' → logprob: -9.660533905029297

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04369916766881943
    2. '=' → logprob: -3.168699264526367
    3. '_' → logprob: -7.418699264526367
    4. 's' → logprob: -10.668699264526367
    5. '   ' → logprob: -10.668699264526367
    6. ' ' → logprob: -11.168699264526367
    7. '=[]' → logprob: -11.418699264526367
    8. '[' → logprob: -12.418699264526367
    9. ' _' → logprob: -12.918699264526367
    10. '_count' → logprob: -12.918699264526367

Token 71: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.22546257078647614
    2. ' []' → logprob: -1.975462555885315
    3. ' [' → logprob: -3.6004626750946045
    4. '[' → logprob: -3.7254626750946045
    5. 'set' → logprob: -5.350462436676025
    6. '[len' → logprob: -5.975462436676025
    7. '[a' → logprob: -6.475462436676025
    8. ' set' → logprob: -6.725462436676025
    9. ' ' → logprob: -8.225462913513184
    10. 'sorted' → logprob: -8.475462913513184

Token 72: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29096487164497375
    2. '<|end|>' → logprob: -1.7909648418426514
    3. ' ' → logprob: -2.9159648418426514
    4. ' for' → logprob: -4.5409650802612305
    5. '   ' → logprob: -5.0409650802612305
    6. '        ' → logprob: -5.7909650802612305
    7. '    ' → logprob: -6.0409650802612305
    8. '	' → logprob: -6.4159650802612305
    9. 'for' → logprob: -6.6659650802612305
    10. '        
' → logprob: -6.7909650802612305

Token 73: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011945461854338646
    2. ' for' → logprob: -4.6369452476501465
    3. '       ' → logprob: -6.5119452476501465
    4. 'i' → logprob: -7.6369452476501465
    5. '   ' → logprob: -8.886945724487305
    6. '	for' → logprob: -10.386945724487305
    7. 'idx' → logprob: -11.886945724487305
    8. ' ' → logprob: -12.261945724487305
    9. ' i' → logprob: -12.511945724487305
    10. 'if' → logprob: -12.511945724487305

Token 74: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0011959441471844912
    2. 'i' → logprob: -7.501195907592773
    3. ' ' → logprob: -7.876195907592773
    4. ' _' → logprob: -8.376195907592773
    5. '_' → logprob: -10.501195907592773
    6. '_i' → logprob: -13.126195907592773
    7. '	i' → logprob: -13.501195907592773
    8. ' a' → logprob: -15.001195907592773
    9. ' x' → logprob: -15.126195907592773
    10. ' ‌' → logprob: -15.251195907592773

Token 75: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05685216933488846
    2. 'in' → logprob: -2.931852102279663
    3. ' ' → logprob: -6.431852340698242
    4. '	in' → logprob: -9.306852340698242
    5. '  ' → logprob: -9.431852340698242
    6. ',' → logprob: -10.056852340698242
    7. '<|end|>' → logprob: -10.056852340698242
    8. 'range' → logprob: -10.681852340698242
    9. ' i' → logprob: -11.181852340698242
    10. '   ' → logprob: -11.431852340698242

Token 76: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931621432304382
    2. 'range' → logprob: -0.6931621432304382
    3. 'a' → logprob: -11.693161964416504
    4. ' ' → logprob: -12.943161964416504
    5. ' a' → logprob: -13.318161964416504
    6. '	range' → logprob: -14.318161964416504
    7. '   ' → logprob: -14.568161964416504
    8. '  ' → logprob: -14.943161964416504
    9. '(range' → logprob: -15.568161964416504
    10. 'r' → logprob: -15.568161964416504

Token 77: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.14761458337306976
    2. '(m' → logprob: -2.1476144790649414
    3. '(' → logprob: -3.8976144790649414
    4. '(len' → logprob: -8.772614479064941
    5. ' (' → logprob: -11.522614479064941
    6. '(min' → logprob: -12.147614479064941
    7. '(max' → logprob: -12.397614479064941
    8. '()' → logprob: -13.147614479064941
    9. 'm' → logprob: -13.522614479064941
    10. '(abs' → logprob: -13.647614479064941

Token 78: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01887407712638378
    2. '-' → logprob: -4.143874168395996
    3. ' -' → logprob: -6.643874168395996
    4. '):
' → logprob: -7.268874168395996
    5. ' ):' → logprob: -7.893874168395996
    6. '+' → logprob: -8.768874168395996
    7. ')' → logprob: -8.893874168395996
    8. '   ' → logprob: -9.143874168395996
    9. '       ' → logprob: -11.268874168395996
    10. ':' → logprob: -11.268874168395996

Token 79: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1707960367202759
    2. '           ' → logprob: -1.2957960367202759
    3. '       ' → logprob: -1.6707960367202759
    4. '<|end|>' → logprob: -1.7957960367202759
    5. '        ' → logprob: -3.1707959175109863
    6. '    ' → logprob: -4.920795917510986
    7. '   ' → logprob: -5.545795917510986
    8. ':' → logprob: -6.045795917510986
    9. '<|end|>' → logprob: -6.295795917510986
    10. '            ' → logprob: -6.920795917510986

Token 80: ' diff' (ID: 8868)
  Prédit: ' dif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dif' → logprob: -0.19063745439052582
    2. 'diff' (adapté à ' diff') → logprob: -2.1906373500823975
    3. '       ' → logprob: -3.4406373500823975
    4. '           ' → logprob: -4.565637588500977
    5. ' diff' → logprob: -5.065637588500977
    6. ' if' → logprob: -5.690637588500977
    7. '   ' → logprob: -5.815637588500977
    8. 'd' → logprob: -6.065637588500977
    9. 'dif' → logprob: -6.315637588500977
    10. '	diff' → logprob: -7.440637588500977

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10083593428134918
    2. 's' → logprob: -2.6008360385894775
    3. '=' → logprob: -3.8508360385894775
    4. ')' → logprob: -8.225835800170898
    5. ' ' → logprob: -9.475835800170898
    6. ',' → logprob: -10.600835800170898
    7. '   ' → logprob: -11.100835800170898
    8. ' s' → logprob: -11.350835800170898
    9. '<|end|>' → logprob: -11.350835800170898
    10. ']' → logprob: -12.225835800170898

Token 82: ' (' (ID: 350)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' abs' → logprob: -1.2310667037963867
    2. 'abs' → logprob: -1.4810667037963867
    3. 'a' → logprob: -1.6060667037963867
    4. 'b' → logprob: -1.9810667037963867
    5. ' b' → logprob: -2.6060667037963867
    6. ' a' → logprob: -2.7310667037963867
    7. '   ' → logprob: -6.356066703796387
    8. '    ' → logprob: -7.731066703796387
    9. '(abs' → logprob: -8.481066703796387
    10. ' ' → logprob: -8.606066703796387

Token 83: 'b' (ID: 65)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1416151523590088
    2. 'b' → logprob: -2.141615152359009
    3. ' a' → logprob: -5.01661491394043
    4. 'abs' → logprob: -6.01661491394043
    5. '(a' → logprob: -6.14161491394043
    6. ' b' → logprob: -6.39161491394043
    7. '   ' → logprob: -7.64161491394043
    8. ' abs' → logprob: -7.76661491394043
    9. '(b' → logprob: -8.14161491394043
    10. ' (' → logprob: -9.14161491394043

Token 84: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.5941604690160602e-05
    2. '[' → logprob: -10.875025749206543
    3. '[j' → logprob: -12.375025749206543
    4. 'i' → logprob: -14.375025749206543
    5. '[m' → logprob: -14.500025749206543
    6. '[(' → logprob: -15.375025749206543
    7. ')' → logprob: -15.500025749206543
    8. ' [' → logprob: -15.750025749206543
    9. '[
' → logprob: -15.875025749206543
    10. '[a' → logprob: -16.00002670288086

Token 85: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08044105768203735
    2. '-' → logprob: -2.5804409980773926
    3. ')' → logprob: -7.330440998077393
    4. '[i' → logprob: -7.830440998077393
    5. ' ' → logprob: -8.83044147491455
    6. '[' → logprob: -9.20544147491455
    7. '+' → logprob: -9.45544147491455
    8. '>' → logprob: -9.83044147491455
    9. ' )' → logprob: -10.70544147491455
    10. '   ' → logprob: -10.95544147491455

Token 86: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6327198147773743
    2. '-' → logprob: -0.7577198147773743
    3. ')' → logprob: -10.257719993591309
    4. ' ' → logprob: -10.632719993591309
    5. '+' → logprob: -10.882719993591309
    6. '>' → logprob: -11.007719993591309
    7. '   ' → logprob: -11.882719993591309
    8. '-i' → logprob: -12.382719993591309
    9. '    ' → logprob: -13.132719993591309
    10. '  ' → logprob: -13.132719993591309

Token 87: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.043047718703746796
    2. ' a' → logprob: -3.1680476665496826
    3. ')a' → logprob: -11.168047904968262
    4. '	a' → logprob: -11.543047904968262
    5. ')' → logprob: -11.793047904968262
    6. ' ' → logprob: -11.793047904968262
    7. '   ' → logprob: -12.418047904968262
    8. '    ' → logprob: -13.668047904968262
    9. '(a' → logprob: -13.793047904968262
    10. '<|end|>' → logprob: -14.043047904968262

Token 88: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.8444881536415778e-05
    2. '[' → logprob: -10.500028610229492
    3. 'i' → logprob: -15.375028610229492
    4. '[I' → logprob: -15.500028610229492
    5. '[j' → logprob: -16.000028610229492
    6. ' [' → logprob: -16.125028610229492
    7. ')' → logprob: -16.875028610229492
    8. '[
' → logprob: -17.000028610229492
    9. ']' → logprob: -17.375028610229492
    10. '][' → logprob: -17.750028610229492

Token 89: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004630672745406628
    2. ')**' → logprob: -6.6296305656433105
    3. '])' → logprob: -7.0046305656433105
    4. ' )' → logprob: -7.5046305656433105
    5. '))' → logprob: -7.5046305656433105
    6. '+' → logprob: -7.6296305656433105
    7. ')%' → logprob: -7.6296305656433105
    8. ' +' → logprob: -9.379631042480469
    9. '`)' → logprob: -10.254631042480469
    10. ')`' → logprob: -10.254631042480469

Token 90: ' %' (ID: 1851)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.025955842807888985
    2. ' m' → logprob: -4.025955677032471
    3. ' ' → logprob: -5.650955677032471
    4. '100' → logprob: -6.400955677032471
    5. '7' → logprob: -7.150955677032471
    6. '10' → logprob: -7.775955677032471
    7. '864' → logprob: -7.775955677032471
    8. '365' → logprob: -8.025956153869629
    9. '360' → logprob: -8.275956153869629
    10. '40' → logprob: -9.775956153869629

Token 92: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020449827425181866
    2. '       ' → logprob: -6.502045154571533
    3. ')' → logprob: -8.752044677734375
    4. '<|end|>' → logprob: -8.752044677734375
    5. ',' → logprob: -9.752044677734375
    6. '               ' → logprob: -10.127044677734375
    7. '          ' → logprob: -10.252044677734375
    8. '        ' → logprob: -10.502044677734375
    9. ' ' → logprob: -11.752044677734375
    10. '            ' → logprob: -11.877044677734375

Token 93: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05368360877037048
    2. '           ' → logprob: -3.0536835193634033
    3. '<|end|>' → logprob: -5.928683757781982
    4. '
' → logprob: -6.803683757781982
    5. ')' → logprob: -7.303683757781982
    6. ',' → logprob: -7.928683757781982
    7. '        
' → logprob: -8.928683280944824
    8. '```' → logprob: -10.428683280944824
    9. '<|end|>' → logprob: -10.428683280944824
    10. '   ' → logprob: -11.428683280944824

Token 94: ' dif' (ID: 1501)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09841639548540115
    2. ' dif' → logprob: -3.223416328430176
    3. 'diff' → logprob: -3.473416328430176
    4. '           ' → logprob: -3.973416328430176
    5. '   ' → logprob: -6.223416328430176
    6. ' diff' → logprob: -7.098416328430176
    7. 'dif' (adapté à ' dif') → logprob: -7.723416328430176
    8. 'd' → logprob: -7.848416328430176
    9. '        ' → logprob: -9.473416328430176
    10. '
' → logprob: -9.473416328430176

Token 95: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -0.0003741887048818171
    2. 'f' → logprob: -8.125373840332031
    3. ' fs' → logprob: -10.750373840332031
    4. '       ' → logprob: -11.500373840332031
    5. '   ' → logprob: -11.750373840332031
    6. 'ffs' → logprob: -12.125373840332031
    7. '           ' → logprob: -12.375373840332031
    8. 'ф' → logprob: -12.375373840332031
    9. '        ' → logprob: -12.500373840332031
    10. '         ' → logprob: -12.875373840332031

Token 96: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.3132929801940918
    2. '.' → logprob: -1.3132929801940918
    3. '.ap' → logprob: -11.31329345703125
    4. '.app' → logprob: -11.43829345703125
    5. ' .' → logprob: -12.56329345703125
    6. '.add' → logprob: -13.68829345703125
    7. 'append' → logprob: -13.93829345703125
    8. '.extend' → logprob: -14.06329345703125
    9. '.setdefault' → logprob: -14.43829345703125
    10. '.=' → logprob: -15.18829345703125

Token 97: '(diff' (ID: 84195)
  Prédit: '(diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(diff' → logprob: -0.0001238004770129919
    2. '(' → logprob: -9.000123977661133
    3. 'diff' → logprob: -15.500123977661133
    4. ' (' → logprob: -16.625123977661133
    5. '(
' → logprob: -17.375123977661133
    6. '(d' → logprob: -18.250123977661133
    7. '((' → logprob: -18.500123977661133
    8. '	diff' → logprob: -19.000123977661133
    9. '(di' → logprob: -19.000123977661133
    10. ' diff' → logprob: -19.125123977661133

Token 98: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000587821879889816
    2. '       ' → logprob: -8.125587463378906
    3. '<|end|>' → logprob: -8.375587463378906
    4. ')
' → logprob: -10.750587463378906
    5. '
' → logprob: -11.000587463378906
    6. ' )' → logprob: -12.000587463378906
    7. ')return' → logprob: -12.000587463378906
    8. '<|end|>' → logprob: -12.750587463378906
    9. ')n' → logprob: -13.000587463378906
    10. '   ' → logprob: -14.000587463378906

Token 99: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17738576233386993
    2. '       ' → logprob: -1.9273858070373535
    3. '<|end|>' → logprob: -4.3023858070373535
    4. '   ' → logprob: -6.0523858070373535
    5. '        
' → logprob: -7.4273858070373535
    6. '    
' → logprob: -8.552385330200195
    7. '```' → logprob: -9.427385330200195
    8. '<|end|>' → logprob: -10.052385330200195
    9. '  
' → logprob: -10.177385330200195
    10. '    ' → logprob: -10.302385330200195

Token 100: ' ops' (ID: 26973)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.6225072145462036
    2. '       ' → logprob: -2.122507095336914
    3. 'from' → logprob: -2.497507095336914
    4. 'if' → logprob: -2.497507095336914
    5. '   ' → logprob: -2.622507095336914
    6. 'count' → logprob: -3.747507095336914
    7. 'counts' → logprob: -3.997507095336914
    8. 'print' → logprob: -4.372507095336914
    9. 'counter' → logprob: -4.622507095336914
    10. 'max' → logprob: -4.622507095336914

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0005351595464162529
    2. '=' → logprob: -8.000535011291504
    3. '_count' → logprob: -8.750535011291504
    4. 's' → logprob: -10.750535011291504
    5. '_counts' → logprob: -12.375535011291504
    6. ' ' → logprob: -12.500535011291504
    7. 'count' → logprob: -12.625535011291504
    8. '   ' → logprob: -12.750535011291504
    9. '_' → logprob: -13.500535011291504
    10. '    ' → logprob: -13.875535011291504

Token 102: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6789699792861938
    2. ' ' → logprob: -2.0539698600769043
    3. '{}' → logprob: -2.9289698600769043
    4. 'sum' → logprob: -3.0539698600769043
    5. 'min' → logprob: -3.4289698600769043
    6. '[]' → logprob: -3.5539698600769043
    7. 'max' → logprob: -3.8039698600769043
    8. ' []' → logprob: -3.8039698600769043
    9. 'len' → logprob: -3.9289698600769043
    10. ' sum' → logprob: -3.9289698600769043

Token 103: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9728453755378723
    2. 'min' → logprob: -1.8478453159332275
    3. 'diff' → logprob: -1.8478453159332275
    4. 'sum' → logprob: -2.0978453159332275
    5. 'max' → logprob: -2.9728453159332275
    6. 'float' → logprob: -3.0978453159332275
    7. '[' → logprob: -3.3478453159332275
    8. '[min' → logprob: -4.597845554351807
    9. 'len' → logprob: -4.847845554351807
    10. '[]' → logprob: -5.097845554351807

Token 104: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1476123183965683
    2. '<|end|>' → logprob: -2.3976123332977295
    3. '
' → logprob: -3.1476123332977295
    4. '   ' → logprob: -6.64761209487915
    5. ' for' → logprob: -7.52261209487915
    6. '<|end|>' → logprob: -7.89761209487915
    7. '```' → logprob: -8.397612571716309
    8. '        
' → logprob: -8.647612571716309
    9. 'for' → logprob: -8.897612571716309
    10. '  
' → logprob: -9.647612571716309

Token 106: ' i' (ID: 575)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18050962686538696
    2. 'i' (adapté à ' i') → logprob: -2.805509567260742
    3. 'current' → logprob: -3.555509567260742
    4. '   ' → logprob: -3.930509567260742
    5. 'min' → logprob: -4.805509567260742
    6. 'count' → logprob: -4.930509567260742
    7. 'ops' → logprob: -5.055509567260742
    8. '       ' → logprob: -5.180509567260742
    9. 'while' → logprob: -5.305509567260742
    10. 'max' → logprob: -5.555509567260742

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04942653328180313
    2. '=' → logprob: -3.049426555633545
    3. ' ' → logprob: -7.799426555633545
    4. ' +=' → logprob: -7.924426555633545
    5. '+=' → logprob: -10.799426078796387
    6. '<|end|>' → logprob: -11.549426078796387
    7. '  ' → logprob: -11.674426078796387
    8. '+' → logprob: -11.924426078796387
    9. ',' → logprob: -12.424426078796387
    10. 'n' → logprob: -12.424426078796387

Token 108: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020702343434095383
    2. ' ' → logprob: -3.895702362060547
    3. '1' → logprob: -8.770702362060547
    4. 'len' → logprob: -13.020702362060547
    5. ' len' → logprob: -14.145702362060547
    6. '<|end|>' → logprob: -14.645702362060547
    7. '2' → logprob: -14.770702362060547
    8. 'n' → logprob: -15.020702362060547
    9. '   ' → logprob: -15.333202362060547
    10. '  ' → logprob: -15.395702362060547

Token 109: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.037835580878891e-05
    2. ' ' → logprob: -10.50005054473877
    3. '1' → logprob: -10.75005054473877
    4. 'n' → logprob: -14.25005054473877
    5. 'len' → logprob: -15.00005054473877
    6. '-' → logprob: -16.250049591064453
    7. '2' → logprob: -17.000049591064453
    8. '(' → logprob: -17.000049591064453
    9. 'i' → logprob: -17.375049591064453
    10. '   ' → logprob: -17.375049591064453

Token 110: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.08676710724830627
    2. ' while' → logprob: -2.9617671966552734
    3. 'n' → logprob: -3.7117671966552734
    4. '
' → logprob: -5.586767196655273
    5. '       ' → logprob: -6.461767196655273
    6. '<|end|>' → logprob: -7.461767196655273
    7. '```' → logprob: -7.586767196655273
    8. '   ' → logprob: -8.086767196655273
    9. '	while' → logprob: -8.961767196655273
    10. ' n' → logprob: -9.461767196655273

Token 113: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.003617062233388424
    2. 'i' → logprob: -5.628617286682129
    3. ' ' → logprob: -12.003617286682129
    4. ' True' → logprob: -12.128617286682129
    5. ' n' → logprob: -13.378617286682129
    6. '	i' → logprob: -13.503617286682129
    7. 'True' → logprob: -14.003617286682129
    8. '(i' → logprob: -14.753617286682129
    9. ' ops' → logprob: -14.878617286682129
    10. 'n' → logprob: -15.628617286682129

Token 114: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.004001822788268328
    2. '<' → logprob: -5.629001617431641
    3. ' ' → logprob: -8.12900161743164
    4. '<n' → logprob: -9.50400161743164
    5. '<len' → logprob: -10.50400161743164
    6. ' <=' → logprob: -13.37900161743164
    7. '<|end|>' → logprob: -14.00400161743164
    8. '<size' → logprob: -14.75400161743164
    9. ' <
' → logprob: -15.00400161743164
    10. '<num' → logprob: -15.12900161743164

Token 115: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002269085729494691
    2. ' n' → logprob: -6.127269268035889
    3. 'len' → logprob: -9.50226879119873
    4. '   ' → logprob: -11.87726879119873
    5. ' len' → logprob: -13.12726879119873
    6. '	n' → logprob: -16.127269744873047
    7. ' ' → logprob: -16.127269744873047
    8. '  ' → logprob: -17.127269744873047
    9. '```' → logprob: -17.877269744873047
    10. '    ' → logprob: -18.502269744873047

Token 116: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02312644198536873
    2. ' and' → logprob: -4.023126602172852
    3. ':
' → logprob: -5.898126602172852
    4. 'and' → logprob: -6.148126602172852
    5. ' :' → logprob: -9.523126602172852
    6. ':

' → logprob: -13.898126602172852
    7. ':**' → logprob: -13.898126602172852
    8. '1' → logprob: -14.023126602172852
    9. ' :
' → logprob: -14.148126602172852
    10. '):' → logprob: -14.273126602172852

Token 117: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02814854308962822
    2. ' if' → logprob: -4.653148651123047
    3. '<|end|>' → logprob: -5.028148651123047
    4. '       ' → logprob: -5.403148651123047
    5. '   ' → logprob: -6.528148651123047
    6. '<|end|>' → logprob: -6.653148651123047
    7. '
' → logprob: -6.903148651123047
    8. ' ' → logprob: -7.278148651123047
    9. ':' → logprob: -7.778148651123047
    10. '            
' → logprob: -7.903148651123047

Token 118: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.044761624187231064
    2. ' if' → logprob: -3.2947616577148438
    3. '           ' → logprob: -5.419761657714844
    4. '       ' → logprob: -6.294761657714844
    5. '   ' → logprob: -8.294761657714844
    6. 'count' → logprob: -9.794761657714844
    7. 'current' → logprob: -10.169761657714844
    8. '```' → logprob: -10.169761657714844
    9. ' ' → logprob: -11.044761657714844
    10. 'while' → logprob: -12.044761657714844

Token 119: ' dif' (ID: 1501)
  Prédit: ' dif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dif' → logprob: -0.005319850519299507
    2. 'diff' → logprob: -5.255320072174072
    3. ' diff' → logprob: -9.630319595336914
    4. '   ' → logprob: -11.630319595336914
    5. 'dif' → logprob: -12.755319595336914
    6. ' ' → logprob: -13.005319595336914
    7. 'd' → logprob: -13.005319595336914
    8. ' not' → logprob: -13.505319595336914
    9. '	d' → logprob: -14.255319595336914
    10. ' i' → logprob: -14.880319595336914

Token 120: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -1.5048530030981055e-06
    2. 's' → logprob: -14.375001907348633
    3. ' fs' → logprob: -14.875001907348633
    4. 'f' → logprob: -15.875001907348633
    5. '   ' → logprob: -16.875001907348633
    6. '       ' → logprob: -16.875001907348633
    7. '```' → logprob: -17.000001907348633
    8. 'ffs' → logprob: -17.250001907348633
    9. 'ds' → logprob: -17.375001907348633
    10. '           ' → logprob: -17.625001907348633

Token 121: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00026979928952641785
    2. '[' → logprob: -8.250269889831543
    3. ' [' → logprob: -11.875269889831543
    4. ' ' → logprob: -14.625269889831543
    5. '```' → logprob: -15.375269889831543
    6. '==' → logprob: -15.625269889831543
    7. '   ' → logprob: -15.750269889831543
    8. ' ==' → logprob: -16.375268936157227
    9. '[j' → logprob: -16.375268936157227
    10. '[
' → logprob: -16.500268936157227

Token 122: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7861812114715576
    2. ' !=' → logprob: -0.7861812114715576
    3. '==' → logprob: -2.6611812114715576
    4. '!=' → logprob: -4.786181449890137
    5. '>' → logprob: -5.411181449890137
    6. ' >' → logprob: -5.661181449890137
    7. ' ' → logprob: -7.036181449890137
    8. ')' → logprob: -7.411181449890137
    9. ']' → logprob: -7.536181449890137
    10. ']==' → logprob: -7.911181449890137

Token 123: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.0164811611175537
    2. ' ==' → logprob: -1.0164811611175537
    3. ' !=' → logprob: -1.6414811611175537
    4. '!=' → logprob: -2.8914811611175537
    5. '>' → logprob: -3.8914811611175537
    6. ' >' → logprob: -5.141481399536133
    7. ' ' → logprob: -8.141481399536133
    8. ':' → logprob: -8.516481399536133
    9. '=' → logprob: -8.891481399536133
    10. '<|end|>' → logprob: -10.266481399536133

Token 124: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004625222180038691
    2. ' ' → logprob: -5.37962532043457
    3. '1' → logprob: -12.75462532043457
    4. 'diff' → logprob: -13.37962532043457
    5. '  ' → logprob: -15.75462532043457
    6. '   ' → logprob: -16.00462532043457
    7. 'dif' → logprob: -16.06712532043457
    8. '```' → logprob: -16.56712532043457
    9. 'd' → logprob: -17.69212532043457
    10. '    ' → logprob: -17.75462532043457

Token 125: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023727134976070374
    2. ' ' → logprob: -8.375237464904785
    3. '1' → logprob: -12.375237464904785
    4. 'diff' → logprob: -13.250237464904785
    5. 'dif' → logprob: -16.12523651123047
    6. '   ' → logprob: -16.18773651123047
    7. '  ' → logprob: -16.56273651123047
    8. '```' → logprob: -16.62523651123047
    9. 'm' → logprob: -16.81273651123047
    10. '2' → logprob: -17.18773651123047

Token 126: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6932860016822815
    2. ':
' → logprob: -0.6932860016822815
    3. ' or' → logprob: -9.818285942077637
    4. '           ' → logprob: -10.193285942077637
    5. '):
' → logprob: -10.693285942077637
    6. '               ' → logprob: -12.193285942077637
    7. ' and' → logprob: -12.318285942077637
    8. '       ' → logprob: -12.818285942077637
    9. ':

' → logprob: -12.943285942077637
    10. '<|end|>' → logprob: -12.943285942077637

Token 127: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07836327701807022
    2. '           ' → logprob: -2.7033631801605225
    3. '```' → logprob: -6.078363418579102
    4. ':' → logprob: -6.578363418579102
    5. '<|end|>' → logprob: -6.828363418579102
    6. ':
' → logprob: -6.953363418579102
    7. '
' → logprob: -7.078363418579102
    8. ' and' → logprob: -7.703363418579102
    9. ',' → logprob: -7.703363418579102
    10. '       ' → logprob: -8.453363418579102

Token 128: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9829773306846619
    2. 'i' (adapté à ' i') → logprob: -1.3579773902893066
    3. '               ' → logprob: -1.4829773902893066
    4. '           ' → logprob: -1.9829773902893066
    5. '   ' → logprob: -5.732977390289307
    6. '                   ' → logprob: -7.607977390289307
    7. '
' → logprob: -9.232976913452148
    8. '       ' → logprob: -9.857976913452148
    9. '	i' → logprob: -10.482976913452148
    10. ' ' → logprob: -11.107976913452148

Token 129: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.33803561329841614
    2. ' +=' → logprob: -1.3380355834960938
    3. '+' → logprob: -3.7130355834960938
    4. '           ' → logprob: -10.463035583496094
    5. '   ' → logprob: -10.838035583496094
    6. ' +' → logprob: -12.088035583496094
    7. '=' → logprob: -12.463035583496094
    8. '+
' → logprob: -13.588035583496094
    9. '               ' → logprob: -13.713035583496094
    10. '    ' → logprob: -13.713035583496094

Token 130: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '   ' → logprob: -16.000001907348633
    4. '```' → logprob: -16.750001907348633
    5. '  ' → logprob: -20.375001907348633
    6. '１' → logprob: -20.875001907348633
    7. '       ' → logprob: -20.875001907348633
    8. '           ' → logprob: -21.000001907348633
    9. '<|end|>' → logprob: -21.000001907348633
    10. '
' → logprob: -21.250001907348633

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -18.625
    4. '   ' → logprob: -19.25
    5. '১' → logprob: -20.8125
    6. '१' → logprob: -20.9375
    7. '۱' → logprob: -20.9375
    8. '１' → logprob: -20.9375
    9. '<|end|>' → logprob: -21.1875
    10. '
' → logprob: -21.4375

Token 132: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0857754722237587
    2. '           ' → logprob: -2.710775375366211
    3. '
' → logprob: -4.210775375366211
    4. '<|end|>' → logprob: -7.460775375366211
    5. 'continue' → logprob: -9.335775375366211
    6. '```' → logprob: -10.210775375366211
    7. '       ' → logprob: -10.335775375366211
    8. ';' → logprob: -10.710775375366211
    9. ' continue' → logprob: -10.835775375366211
    10. '            
' → logprob: -11.335775375366211

Token 133: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010121163912117481
    2. '           ' → logprob: -4.6351213455200195
    3. '
' → logprob: -9.01012134552002
    4. 'continue' → logprob: -9.13512134552002
    5. '```' → logprob: -9.63512134552002
    6. ';' → logprob: -10.88512134552002
    7. '<|end|>' → logprob: -11.38512134552002
    8. ' continue' → logprob: -11.88512134552002
    9. 'else' → logprob: -11.88512134552002
    10. '       ' → logprob: -12.13512134552002

Token 134: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.040482331067323685
    2. '               ' → logprob: -3.29048228263855
    3. ' continue' → logprob: -6.040482521057129
    4. '           ' → logprob: -10.040482521057129
    5. '	continue' → logprob: -12.040482521057129
    6. 'contin' → logprob: -12.290482521057129
    7. 'continu' → logprob: -13.540482521057129
    8. '_continue' → logprob: -13.915482521057129
    9. '   ' → logprob: -15.040482521057129
    10. '
' → logprob: -15.040482521057129

Token 135: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3032902181148529
    2. '
' → logprob: -1.4282902479171753
    3. '            
' → logprob: -3.9282901287078857
    4. '```' → logprob: -7.178290367126465
    5. '    
' → logprob: -7.928290367126465
    6. '
' → logprob: -8.428290367126465
    7. '
            
' → logprob: -9.428290367126465
    8. '

' → logprob: -9.553290367126465
    9. '           
' → logprob: -9.553290367126465
    10. '  
' → logprob: -9.678290367126465

Token 136: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19972951710224152
    2. 'j' → logprob: -1.949729561805725
    3. 'count' → logprob: -4.1997294425964355
    4. 'start' → logprob: -4.3247294425964355
    5. '            
' → logprob: -5.1997294425964355
    6. 'length' → logprob: -6.8247294425964355
    7. '```' → logprob: -6.9497294425964355
    8. '
' → logprob: -7.3247294425964355
    9. 'current' → logprob: -7.4497294425964355
    10. '       ' → logprob: -8.699729919433594

Token 137: ' current' (ID: 2208)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.7882077097892761
    2. 'j' → logprob: -1.038207769393921
    3. 'val' → logprob: -2.788207769393921
    4. 'count' → logprob: -3.538207769393921
    5. '           ' → logprob: -3.788207769393921
    6. '   ' → logprob: -4.288207530975342
    7. 'change' → logprob: -4.538207530975342
    8. 'diff' → logprob: -4.538207530975342
    9. 'cnt' → logprob: -4.788207530975342
    10. 'increment' → logprob: -5.038207530975342

Token 138: ' =' (ID: 314)
  Prédit: '_diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.1947018802165985
    2. ' =' → logprob: -2.069701910018921
    3. '_val' → logprob: -3.569701910018921
    4. '_value' → logprob: -4.819701671600342
    5. '_op' → logprob: -5.069701671600342
    6. '=' → logprob: -5.194701671600342
    7. 'diff' → logprob: -6.319701671600342
    8. '_change' → logprob: -8.8197021484375
    9. ' ' → logprob: -9.3197021484375
    10. '_ops' → logprob: -9.4447021484375

Token 139: ' dif' (ID: 1501)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.012737186625599861
    2. ' dif' → logprob: -4.387737274169922
    3. '1' → logprob: -9.012737274169922
    4. ' diff' → logprob: -10.137737274169922
    5. ' ' → logprob: -11.012737274169922
    6. 'dif' → logprob: -11.262737274169922
    7. '0' → logprob: -11.512737274169922
    8. '```' → logprob: -12.637737274169922
    9. '(' → logprob: -12.887737274169922
    10. 'd' → logprob: -13.012737274169922

Token 140: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -1.676292231422849e-05
    2. 'f' → logprob: -11.125017166137695
    3. 's' → logprob: -14.750017166137695
    4. '```' → logprob: -14.875017166137695
    5. ' fs' → logprob: -15.250017166137695
    6. '   ' → logprob: -15.750017166137695
    7. 'ffs' → logprob: -16.000017166137695
    8. '(fs' → logprob: -16.250017166137695
    9. 'ference' → logprob: -16.375017166137695
    10. '``' → logprob: -16.625017166137695

Token 141: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.650518920039758e-06
    2. '[' → logprob: -12.875003814697266
    3. '[I' → logprob: -14.375003814697266
    4. ' [' → logprob: -15.875003814697266
    5. '[
' → logprob: -16.750003814697266
    6. 'i' → logprob: -17.250003814697266
    7. '[j' → logprob: -17.500003814697266
    8. '```' → logprob: -17.625003814697266
    9. '[a' → logprob: -18.125003814697266
    10. '\[' → logprob: -18.750003814697266

Token 142: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2704269289970398
    2. ']
' → logprob: -1.6454269886016846
    3. ')' → logprob: -3.3954269886016846
    4. ')
' → logprob: -4.6454267501831055
    5. '])' → logprob: -8.145426750183105
    6. '
' → logprob: -8.395426750183105
    7. ' ]' → logprob: -9.895426750183105
    8. ' )' → logprob: -9.895426750183105
    9. '       ' → logprob: -10.145426750183105
    10. ')]' → logprob: -10.270426750183105

Token 143: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011890692636370659
    2. 'j' → logprob: -4.886890888214111
    3. '
' → logprob: -5.636890888214111
    4. '```' → logprob: -8.386890411376953
    5. 'while' → logprob: -9.136890411376953
    6. ' j' → logprob: -9.511890411376953
    7. 'count' → logprob: -9.761890411376953
    8. '+' → logprob: -10.261890411376953
    9. '            
' → logprob: -10.511890411376953
    10. 'ops' → logprob: -10.511890411376953

Token 144: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.41033798456192017
    2. 'ops' → logprob: -1.9103379249572754
    3. 'count' → logprob: -2.2853379249572754
    4. 'while' → logprob: -2.7853379249572754
    5. 'start' → logprob: -4.410337924957275
    6. '   ' → logprob: -5.660337924957275
    7. 'length' → logprob: -5.660337924957275
    8. 'cnt' → logprob: -6.035337924957275
    9. 'diff' → logprob: -7.035337924957275
    10. 'i' → logprob: -7.035337924957275

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026394817978143692
    2. '=' → logprob: -3.651394844055176
    3. '=i' → logprob: -9.276394844055176
    4. ' +=' → logprob: -15.151394844055176
    5. ' ' → logprob: -15.651394844055176
    6. '+=' → logprob: -16.27639389038086
    7. '=j' → logprob: -16.40139389038086
    8. '<|end|>' → logprob: -16.40139389038086
    9. ',' → logprob: -17.02639389038086
    10. 'i' → logprob: -17.15139389038086

Token 146: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10020678490400314
    2. ' i' → logprob: -2.3502068519592285
    3. '	i' → logprob: -16.10020637512207
    4. ' ' → logprob: -17.22520637512207
    5. '```' → logprob: -18.10020637512207
    6. ')i' → logprob: -18.35020637512207
    7. ',i' → logprob: -18.47520637512207
    8. '<|end|>' → logprob: -18.47520637512207
    9. 'j' → logprob: -19.22520637512207
    10. '
' → logprob: -19.47520637512207

Token 147: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02041388675570488
    2. ' +' → logprob: -4.020413875579834
    3. '<|end|>' → logprob: -6.145413875579834
    4. '<|end|>' → logprob: -9.145414352416992
    5. '+
' → logprob: -12.395414352416992
    6. '
' → logprob: -13.270414352416992
    7. '```' → logprob: -13.770414352416992
    8. '+j' → logprob: -14.145414352416992
    9. '1' → logprob: -14.395414352416992
    10. '+i' → logprob: -14.770414352416992

Token 148: '           ' (ID: 352)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007351282052695751
    2. ' +' → logprob: -5.757351398468018
    3. '
' → logprob: -5.882351398468018
    4. '           ' → logprob: -6.757351398468018
    5. '+
' → logprob: -9.38235092163086
    6. 'while' → logprob: -9.63235092163086
    7. '```' → logprob: -10.38235092163086
    8. '+j' → logprob: -11.75735092163086
    9. ' while' → logprob: -12.13235092163086
    10. '            
' → logprob: -12.38235092163086

Token 149: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.03386859595775604
    2. ' while' → logprob: -3.6588685512542725
    3. '           ' → logprob: -4.908868789672852
    4. '+' → logprob: -9.908868789672852
    5. 'j' → logprob: -9.908868789672852
    6. '1' → logprob: -11.158868789672852
    7. '```' → logprob: -11.158868789672852
    8. '
' → logprob: -11.658868789672852
    9. 'While' → logprob: -11.908868789672852
    10. '       ' → logprob: -12.658868789672852

Token 150: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.12693022191524506
    2. ' j' → logprob: -2.1269302368164062
    3. '   ' → logprob: -14.251930236816406
    4. '(j' → logprob: -14.376930236816406
    5. '	j' → logprob: -14.626930236816406
    6. ' ' → logprob: -15.626930236816406
    7. '```' → logprob: -16.626930236816406
    8. ' (' → logprob: -17.001930236816406
    9. '$j' → logprob: -17.501930236816406
    10. 'jj' → logprob: -17.751930236816406

Token 151: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6776894927024841
    2. '+' → logprob: -0.9276894927024841
    3. ' +' → logprob: -2.802689552307129
    4. '<n' → logprob: -3.802689552307129
    5. '<' → logprob: -4.302689552307129
    6. '<len' → logprob: -8.677689552307129
    7. '+n' → logprob: -10.427689552307129
    8. 'n' → logprob: -11.552689552307129
    9. '   ' → logprob: -11.927689552307129
    10. '<N' → logprob: -12.052689552307129

Token 152: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.662937372922897e-05
    2. ' n' → logprob: -9.250096321105957
    3. '   ' → logprob: -14.625096321105957
    4. '           ' → logprob: -17.375097274780273
    5. '	n' → logprob: -17.625097274780273
    6. '
' → logprob: -19.000097274780273
    7. ' ' → logprob: -19.125097274780273
    8. '<|end|>' → logprob: -19.625097274780273
    9. ' ' → logprob: -19.875097274780273
    10. ')n' → logprob: -20.125097274780273

Token 153: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16023458540439606
    2. 'and' → logprob: -1.9102345705032349
    3. ' ' → logprob: -11.910234451293945
    4. '   ' → logprob: -13.285234451293945
    5. '           ' → logprob: -13.785234451293945
    6. '	and' → logprob: -15.535234451293945
    7. '  ' → logprob: -15.785234451293945
    8. '       ' → logprob: -16.160234451293945
    9. '    ' → logprob: -16.160234451293945
    10. '-' → logprob: -16.160234451293945

Token 154: ' dif' (ID: 1501)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.002534759696573019
    2. ' dif' → logprob: -6.002534866333008
    3. ' ' → logprob: -11.377534866333008
    4. '   ' → logprob: -11.377534866333008
    5. 'dif' → logprob: -11.502534866333008
    6. ' diff' → logprob: -11.627534866333008
    7. 'abs' → logprob: -12.502534866333008
    8. 'j' → logprob: -12.877534866333008
    9. '(d' → logprob: -13.127534866333008
    10. '  ' → logprob: -13.502534866333008

Token 155: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -1.0921942703134846e-05
    2. 'ffs' → logprob: -11.87501049041748
    3. 's' → logprob: -13.12501049041748
    4. 'ds' → logprob: -14.12501049041748
    5. ' fs' → logprob: -14.62501049041748
    6. '   ' → logprob: -15.50001049041748
    7. '```' → logprob: -16.250011444091797
    8. '[' → logprob: -17.125011444091797
    9. '[i' → logprob: -17.125011444091797
    10. 'fts' → logprob: -17.125011444091797

Token 156: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.214019307051785e-05
    2. 'j' → logprob: -10.500032424926758
    3. '[' → logprob: -12.500032424926758
    4. '```' → logprob: -15.125032424926758
    5. '[i' → logprob: -15.500032424926758
    6. '[
' → logprob: -16.250032424926758
    7. '	j' → logprob: -17.375032424926758
    8. '   ' → logprob: -18.375032424926758
    9. ' [' → logprob: -19.000032424926758
    10. '[q' → logprob: -19.125032424926758

Token 157: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25815263390541077
    2. '==' → logprob: -1.5081526041030884
    3. ']' → logprob: -5.633152484893799
    4. ']==' → logprob: -6.258152484893799
    5. ')' → logprob: -8.008152961730957
    6. ' ' → logprob: -9.633152961730957
    7. '```' → logprob: -9.633152961730957
    8. '>' → logprob: -9.883152961730957
    9. ')==' → logprob: -10.008152961730957
    10. '[' → logprob: -10.508152961730957

Token 158: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03405296429991722
    2. ' ==' → logprob: -3.409052848815918
    3. '>=' → logprob: -8.409052848815918
    4. '!=' → logprob: -9.034052848815918
    5. '>' → logprob: -10.284052848815918
    6. '==
' → logprob: -11.534052848815918
    7. '=' → logprob: -12.034052848815918
    8. '<=' → logprob: -13.034052848815918
    9. ' >=' → logprob: -13.034052848815918
    10. ' !=' → logprob: -13.034052848815918

Token 159: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.04858941584825516
    2. ' current' → logprob: -3.0485894680023193
    3. '(current' → logprob: -14.673589706420898
    4. ' ' → logprob: -14.923589706420898
    5. '[current' → logprob: -14.923589706420898
    6. '	current' → logprob: -15.298589706420898
    7. '=current' → logprob: -15.298589706420898
    8. '$current' → logprob: -15.423589706420898
    9. '
' → logprob: -16.5485897064209
    10. 'urrent' → logprob: -16.7985897064209

Token 160: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.02089698240160942
    2. ':' → logprob: -3.8958969116210938
    3. ' and' → logprob: -8.645896911621094
    4. 'and' → logprob: -9.145896911621094
    5. '):
' → logprob: -9.770896911621094
    6. '   ' → logprob: -12.520896911621094
    7. ':j' → logprob: -12.895896911621094
    8. ':

' → logprob: -13.395896911621094
    9. '           ' → logprob: -13.770896911621094
    10. 'j' → logprob: -13.770896911621094

Token 161: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16853053867816925
    2. '               ' → logprob: -1.9185305833816528
    3. 'j' → logprob: -5.668530464172363
    4. ' and' → logprob: -6.543530464172363
    5. '   ' → logprob: -6.793530464172363
    6. ':
' → logprob: -7.293530464172363
    7. '       ' → logprob: -8.043530464172363
    8. ' j' → logprob: -8.043530464172363
    9. '                   ' → logprob: -8.668530464172363
    10. ':' → logprob: -8.918530464172363

Token 162: ' dif' (ID: 1501)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0612531453371048
    2. ' j' → logprob: -3.561253070831299
    3. 'diff' → logprob: -4.186253070831299
    4. '   ' → logprob: -4.936253070831299
    5. ' dif' → logprob: -5.561253070831299
    6. 'ops' → logprob: -6.686253070831299
    7. 'dif' (adapté à ' dif') → logprob: -6.936253070831299
    8. '           ' → logprob: -7.436253070831299
    9. '               ' → logprob: -7.811253070831299
    10. '    ' → logprob: -7.936253070831299

Token 163: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -0.002158825984224677
    2. 's' → logprob: -6.5021586418151855
    3. 'js' → logprob: -8.377159118652344
    4. 'ffs' → logprob: -9.002159118652344
    5. 'ds' → logprob: -10.127159118652344
    6. '           ' → logprob: -10.127159118652344
    7. 'qs' → logprob: -10.127159118652344
    8. 'f' → logprob: -10.252159118652344
    9. 'ss' → logprob: -10.627159118652344
    10. 'j' → logprob: -11.127159118652344

Token 164: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.60414821645827e-06
    2. '[' → logprob: -12.500004768371582
    3. '[i' → logprob: -15.000004768371582
    4. 'j' → logprob: -15.250004768371582
    5. '```' → logprob: -16.000003814697266
    6. '[
' → logprob: -17.750003814697266
    7. '	j' → logprob: -17.875003814697266
    8. ' [' → logprob: -18.000003814697266
    9. '[js' → logprob: -18.125003814697266
    10. '[(' → logprob: -18.125003814697266

Token 165: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000531467841938138
    2. ']-' → logprob: -8.500531196594238
    3. '-' → logprob: -9.000531196594238
    4. ' -=' → logprob: -9.250531196594238
    5. ' ]' → logprob: -10.000531196594238
    6. '-=' → logprob: -10.750531196594238
    7. ')' → logprob: -11.250531196594238
    8. '[' → logprob: -11.625531196594238
    9. ']+=' → logprob: -11.750531196594238
    10. '=' → logprob: -13.125531196594238

Token 166: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02866867557168007
    2. ' =' → logprob: -3.6536686420440674
    3. '-=' → logprob: -6.2786688804626465
    4. ' -=' → logprob: -7.6536688804626465
    5. '+=' → logprob: -11.903668403625488
    6. '-' → logprob: -12.653668403625488
    7. ' +=' → logprob: -13.403668403625488
    8. '==' → logprob: -13.528668403625488
    9. ' ' → logprob: -14.153668403625488
    10. '   ' → logprob: -14.903668403625488

Token 167: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.347765181795694e-05
    2. ' ' → logprob: -9.875053405761719
    3. ' (' → logprob: -14.375053405761719
    4. '(' → logprob: -14.625053405761719
    5. '(diff' → logprob: -15.125053405761719
    6. '(current' → logprob: -15.250053405761719
    7. 'diff' → logprob: -15.250053405761719
    8. 'current' → logprob: -17.00005340576172
    9. '   ' → logprob: -17.25005340576172
    10. '((' → logprob: -18.25005340576172

Token 168: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.250006675720215
    3. 'diff' → logprob: -14.375006675720215
    4. 'current' → logprob: -15.000006675720215
    5. '(current' → logprob: -15.125006675720215
    6. '(diff' → logprob: -16.3750057220459
    7. '(' → logprob: -17.0000057220459
    8. ' (' → logprob: -17.5000057220459
    9. '           ' → logprob: -18.3750057220459
    10. '   ' → logprob: -19.0000057220459

Token 169: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2667887508869171
    2. '           ' → logprob: -1.8917887210845947
    3. '
' → logprob: -2.5167887210845947
    4. '<|end|>' → logprob: -6.516788959503174
    5. '<|end|>' → logprob: -7.891788959503174
    6. ',' → logprob: -8.016788482666016
    7. ' ' → logprob: -9.391788482666016
    8. '                   ' → logprob: -9.516788482666016
    9. '       ' → logprob: -9.641788482666016
    10. '
' → logprob: -9.766788482666016

Token 170: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003141593188047409
    2. '           ' → logprob: -6.003141403198242
    3. 'j' → logprob: -8.253141403198242
    4. ',' → logprob: -8.753141403198242
    5. '<|end|>' → logprob: -9.878141403198242
    6. '<|end|>' → logprob: -9.878141403198242
    7. '
' → logprob: -10.128141403198242
    8. '       ' → logprob: -10.128141403198242
    9. '   ' → logprob: -11.128141403198242
    10. ' ' → logprob: -11.128141403198242

Token 171: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.00022988072305452079
    2. '               ' → logprob: -8.625229835510254
    3. '           ' → logprob: -11.000229835510254
    4. ' j' → logprob: -11.375229835510254
    5. '   ' → logprob: -11.875229835510254
    6. 'ops' → logprob: -12.000229835510254
    7. '                   ' → logprob: -12.125229835510254
    8. 'current' → logprob: -14.250229835510254
    9. '       ' → logprob: -14.500229835510254
    10. '	j' → logprob: -14.500229835510254

Token 172: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.11616329103708267
    2. '+=' → logprob: -2.2411632537841797
    3. '+' → logprob: -5.74116325378418
    4. ' +' → logprob: -9.24116325378418
    5. '<|end|>' → logprob: -11.36616325378418
    6. '=' → logprob: -11.86616325378418
    7. '++' → logprob: -13.24116325378418
    8. ' ' → logprob: -13.49116325378418
    9. ')' → logprob: -13.61616325378418
    10. '    ' → logprob: -13.86616325378418

Token 173: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -18.25002098083496
    4. '```' → logprob: -19.62502098083496
    5. '  ' → logprob: -20.12502098083496
    6. '<|end|>' → logprob: -21.00002098083496
    7. '
' → logprob: -21.56252098083496
    8. '１' → logprob: -21.62502098083496
    9. '۱' → logprob: -21.93752098083496
    10. '           ' → logprob: -22.12502098083496

Token 174: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001319063303526491
    2. ' ' → logprob: -9.000131607055664
    3. 'current' → logprob: -11.750131607055664
    4. ' current' → logprob: -14.625131607055664
    5. '   ' → logprob: -16.500131607055664
    6. '```' → logprob: -17.312631607055664
    7. '  ' → logprob: -17.687631607055664
    8. '
' → logprob: -18.062631607055664
    9. '(current' → logprob: -18.875131607055664
    10. ')' → logprob: -19.062631607055664

Token 175: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010023211129009724
    2. '
' → logprob: -4.63502311706543
    3. '            
' → logprob: -8.38502311706543
    4. '```' → logprob: -12.26002311706543
    5. '  
' → logprob: -12.51002311706543
    6. '    
' → logprob: -12.51002311706543
    7. '               ' → logprob: -12.51002311706543
    8. '
' → logprob: -12.63502311706543
    9. '       ' → logprob: -12.76002311706543
    10. ' 
' → logprob: -13.01002311706543

Token 176: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.590104698669165e-05
    2. '
' → logprob: -10.000085830688477
    3. '            
' → logprob: -11.000085830688477
    4. '               ' → logprob: -11.875085830688477
    5. 'ops' → logprob: -11.875085830688477
    6. ' ops' → logprob: -12.750085830688477
    7. '```' → logprob: -13.500085830688477
    8. '   ' → logprob: -14.125085830688477
    9. '       ' → logprob: -14.250085830688477
    10. ',' → logprob: -14.375085830688477

Token 177: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' (adapté à ' ops') → logprob: -0.09889930486679077
    2. '           ' → logprob: -2.4738993644714355
    3. ' ops' → logprob: -4.9738993644714355
    4. '       ' → logprob: -5.9738993644714355
    5. '
' → logprob: -8.598898887634277
    6. 'operations' → logprob: -9.223898887634277
    7. '   ' → logprob: -9.473898887634277
    8. '.ops' → logprob: -10.973898887634277
    9. '_ops' → logprob: -11.098898887634277
    10. '```' → logprob: -11.723898887634277

Token 178: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0015028368216007948
    2. '+=' → logprob: -6.501502990722656
    3. '+=(' → logprob: -15.501502990722656
    4. '    ' → logprob: -15.626502990722656
    5. '   ' → logprob: -16.626502990722656
    6. ' =' → logprob: -17.001502990722656
    7. ' ' → logprob: -17.876502990722656
    8. '+' → logprob: -17.876502990722656
    9. ']+=' → logprob: -18.501502990722656
    10. '=' → logprob: -18.751502990722656

Token 179: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.05147965997457504
    2. '1' → logprob: -3.0514795780181885
    3. ' current' → logprob: -6.176479816436768
    4. 'm' → logprob: -7.801479816436768
    5. '(current' → logprob: -8.80147933959961
    6. '(' → logprob: -9.30147933959961
    7. ' ' → logprob: -9.55147933959961
    8. 'abs' → logprob: -10.55147933959961
    9. 'min' → logprob: -11.05147933959961
    10. ' (' → logprob: -11.67647933959961

Token 180: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16351555287837982
    2. '           ' → logprob: -1.913515567779541
    3. '       ' → logprob: -6.413515567779541
    4. ' *' → logprob: -8.163515090942383
    5. ' 
' → logprob: -8.288515090942383
    6. '   ' → logprob: -8.413515090942383
    7. '*' → logprob: -8.538515090942383
    8. '<|end|>' → logprob: -9.038515090942383
    9. '+' → logprob: -9.413515090942383
    10. '  
' → logprob: -9.663515090942383

Token 181: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002900565741583705
    2. '
' → logprob: -8.750289916992188
    3. '       ' → logprob: -9.625289916992188
    4. '   ' → logprob: -10.125289916992188
    5. 'i' → logprob: -11.875289916992188
    6. ' i' → logprob: -12.250289916992188
    7. '          ' → logprob: -13.250289916992188
    8. '               ' → logprob: -13.250289916992188
    9. '        
' → logprob: -13.375289916992188
    10. '    
' → logprob: -13.375289916992188

Token 182: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.05682040750980377
    2. '           ' → logprob: -3.0568203926086426
    3. ' i' → logprob: -5.181820392608643
    4. '       ' → logprob: -6.056820392608643
    5. '   ' → logprob: -8.4318208694458
    6. ' ' → logprob: -12.4318208694458
    7. '         ' → logprob: -13.3068208694458
    8. '  ' → logprob: -13.4318208694458
    9. '               ' → logprob: -13.5568208694458
    10. '[i' → logprob: -13.6818208694458

Token 183: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005542247672565281
    2. ' =' → logprob: -7.500554084777832
    3. '+=' → logprob: -13.750554084777832
    4. ' +=' → logprob: -16.00055503845215
    5. '=j' → logprob: -16.62555503845215
    6. '.=' → logprob: -19.37555503845215
    7. '=}' → logprob: -19.62555503845215
    8. '=
' → logprob: -20.62555503845215
    9. ' ' → logprob: -21.00055503845215
    10. ')' → logprob: -21.37555503845215

Token 184: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.20141880214214325
    2. ' j' → logprob: -1.7014187574386597
    3. '<|end|>' → logprob: -13.07641887664795
    4. '	j' → logprob: -13.20141887664795
    5. '$j' → logprob: -14.07641887664795
    6. '<|end|>' → logprob: -15.82641887664795
    7. '[j' → logprob: -16.076417922973633
    8. ' ' → logprob: -16.701417922973633
    9. '/j' → logprob: -16.701417922973633
    10. '_j' → logprob: -16.826417922973633

Token 185: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0032736104913055897
    2. '   ' → logprob: -5.8782734870910645
    3. '

' → logprob: -8.753273963928223
    4. 'print' → logprob: -9.003273963928223
    5. '    
' → logprob: -9.378273963928223
    6. '<|end|>' → logprob: -9.878273963928223
    7. '
' → logprob: -10.628273963928223
    8. 'if' → logprob: -12.003273963928223
    9. '  
' → logprob: -12.253273963928223
    10. '       ' → logprob: -12.378273963928223

Token 186: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7225754857063293
    2. 'if' → logprob: -0.9725754857063293
    3. 'print' → logprob: -2.9725754261016846
    4. '<|end|>' → logprob: -3.0975754261016846
    5. '   ' → logprob: -3.3475754261016846
    6. '\n' → logprob: -6.472575664520264
    7. '```' → logprob: -6.847575664520264
    8. 'main' → logprob: -6.972575664520264
    9. ' if' → logprob: -7.347575664520264
    10. '    
' → logprob: -8.597575187683105

Token 187: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.005253918468952179
    2. '   ' → logprob: -5.255253791809082
    3. ' print' → logprob: -11.130253791809082
    4. '
' → logprob: -12.505253791809082
    5. '       ' → logprob: -13.880253791809082
    6. '```' → logprob: -14.505253791809082
    7. '    
' → logprob: -15.380253791809082
    8. '	print' → logprob: -17.0052547454834
    9. '  ' → logprob: -17.7552547454834
    10. 'printf' → logprob: -19.3802547454834

Token 188: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009157438762485981
    2. '()' → logprob: -7.12591552734375
    3. '('' → logprob: -9.75091552734375
    4. ' (' → logprob: -10.62591552734375
    5. '((' → logprob: -12.12591552734375
    6. '(abs' → logprob: -12.37591552734375
    7. '(sum' → logprob: -12.75091552734375
    8. '(f' → logprob: -12.75091552734375
    9. '(op' → logprob: -12.87591552734375
    10. '(len' → logprob: -13.00091552734375

Token 189: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -4.320199877838604e-07
    2. ' ops' → logprob: -14.875
    3. 'op' → logprob: -17.75
    4. '   ' → logprob: -18.25
    5. 'opts' → logprob: -20.625
    6. '.ops' → logprob: -20.875
    7. 'operations' → logprob: -21.25
    8. '       ' → logprob: -21.25
    9. 'os' → logprob: -21.5
    10. '0' → logprob: -21.75

Token 190: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.282920129597187e-05
    2. ' )' → logprob: -12.000012397766113
    3. ')
' → logprob: -12.500012397766113
    4. '())' → logprob: -13.625012397766113
    5. '   ' → logprob: -14.375012397766113
    6. ')`' → logprob: -15.375012397766113
    7. '()' → logprob: -15.500012397766113
    8. ')}' → logprob: -16.00001335144043
    9. '```' → logprob: -16.37501335144043
    10. ')#' → logprob: -16.62501335144043

Token 191: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.40390074253082275
    2. 'main' → logprob: -1.6539007425308228
    3. '<|end|>' → logprob: -2.653900623321533
    4. '
' → logprob: -2.903900623321533
    5. '```' → logprob: -4.528900623321533
    6. '#' → logprob: -6.278900623321533
    7. ' if' → logprob: -7.528900623321533
    8. '\n' → logprob: -7.653900623321533
    9. '\' → logprob: -7.778900623321533
    10. ' main' → logprob: -8.153901100158691

Token 192: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.002476604888215661
    2. '__' → logprob: -6.002476692199707
    3. '_' → logprob: -15.002476692199707
    4. '_name' → logprob: -15.377476692199707
    5. ' ' → logprob: -16.12747573852539
    6. ' ' → logprob: -16.37747573852539
    7. 'name' → logprob: -16.87747573852539
    8. ' ___' → logprob: -17.00247573852539
    9. ' _' → logprob: -17.25247573852539
    10. '___' → logprob: -17.50247573852539

Token 193: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3732728660106659
    2. '__' → logprob: -1.2482728958129883
    3. '==' → logprob: -4.248272895812988
    4. ' __' → logprob: -4.623272895812988
    5. '_' → logprob: -9.498272895812988
    6. '.__' → logprob: -9.623272895812988
    7. '=="' → logprob: -10.248272895812988
    8. '__.__' → logprob: -10.623272895812988
    9. ' .' → logprob: -10.748272895812988
    10. '__.' → logprob: -10.873272895812988

Token 194: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -8.280175097752362e-05
    2. '__.__' → logprob: -9.875082969665527
    3. '==' → logprob: -10.500082969665527
    4. '__.' → logprob: -13.250082969665527
    5. '___' → logprob: -14.750082969665527
    6. ' ==' → logprob: -14.750082969665527
    7. '__["' → logprob: -14.750082969665527
    8. '____' → logprob: -15.500082969665527
    9. '__('' → logprob: -15.750082969665527
    10. '_' → logprob: -16.25008201599121

Token 195: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5463824272155762
    2. '__' → logprob: -0.9213824272155762
    3. '==' → logprob: -3.796382427215576
    4. '.__' → logprob: -9.046382904052734
    5. '__.__' → logprob: -9.046382904052734
    6. '=="' → logprob: -9.671382904052734
    7. '.' → logprob: -9.796382904052734
    8. ' __' → logprob: -10.421382904052734
    9. '"' → logprob: -10.546382904052734
    10. '[' → logprob: -11.046382904052734

Token 196: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4742215573787689
    2. ''' → logprob: -0.9742215871810913
    3. '__' → logprob: -9.099221229553223
    4. ' "__' → logprob: -10.849221229553223
    5. ' '__' → logprob: -11.849221229553223
    6. ''"' → logprob: -13.224221229553223
    7. '"user' → logprob: -13.724221229553223
    8. '"'' → logprob: -14.224221229553223
    9. ''user' → logprob: -14.474221229553223
    10. '('__' → logprob: -14.849221229553223

Token 197: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.7954958821064793e-05
    2. 'name' → logprob: -11.125018119812012
    3. '__' → logprob: -12.875018119812012
    4. ' main' → logprob: -15.125018119812012
    5. '"' → logprob: -15.500018119812012
    6. '_main' → logprob: -16.500017166137695
    7. 'ma' → logprob: -18.875017166137695
    8. 'm' → logprob: -19.375017166137695
    9. ''' → logprob: -19.375017166137695
    10. '```' → logprob: -19.750017166137695

Token 198: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.0032048076391220093
    2. '__' → logprob: -5.878204822540283
    3. '__':
' → logprob: -7.878204822540283
    4. '():
' → logprob: -11.878204345703125
    5. '.' → logprob: -12.128204345703125
    6. '__.' → logprob: -13.003204345703125
    7. '__["' → logprob: -13.378204345703125
    8. '```' → logprob: -13.878204345703125
    9. '__:' → logprob: -14.003204345703125
    10. '__.__' → logprob: -14.503204345703125

Token 199: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6395077705383301
    2. 'main' → logprob: -1.13950777053833
    3. '   ' → logprob: -1.88950777053833
    4. '	main' → logprob: -6.63950777053833
    5. '(main' → logprob: -12.264507293701172
    6. '_main' → logprob: -12.514507293701172
    7. ' ' → logprob: -12.514507293701172
    8. '  ' → logprob: -13.514507293701172
    9. '    ' → logprob: -13.764507293701172
    10. '    
' → logprob: -14.264507293701172

Token 200: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -15.75
    3. '	main' → logprob: -20.5
    4. '   ' → logprob: -22.625
    5. '_main' → logprob: -24.25
    6. '.main' → logprob: -24.75
    7. '(main' → logprob: -25.25
    8. 'mainwindow' → logprob: -25.375
    9. 'Main' → logprob: -25.625
    10. '```' → logprob: -26.125

Token 201: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 199
Tokens correctement prédits (1ère position, stricte): 88
Tokens correctement prédits (1ère position, avec adaptation): 100
Tokens correctement prédits (top 10): 171
Précision stricte (1ère position): 44.22%
Précision adaptée (1ère position): 50.25%
Précision (top 10): 85.93%
================================================================================
