================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:26:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def is_prime(num):
    if num < 2:
        return False
    for i in range(2, num):
        if num % i == 0:
            return False
    return True

while True:
    n = int(input())
    if n == 0:
        break

    max_twin = (0, 0)
    for i in range(2, n-1):
        if is_prime(i) and is_prime(i+2) and (i+2) <= n:
            if i+2 > max_twin[1]:
                max_twin = (i, i+2)
    print(max_twin[0], max_twin[1])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' is' (ID: 382)
  → Token d'amorce (pas de prédiction)

Token 2: '_prime' (ID: 98616)
  → Token d'amorce (pas de prédiction)

Token 3: '(num' (ID: 15828)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008385734632611275
    2. '_' → logprob: -4.88338565826416
    3. '(_' → logprob: -8.00838565826416
    4. '(_:' → logprob: -8.63338565826416
    5. '```' → logprob: -9.63338565826416
    6. ' (' → logprob: -9.75838565826416
    7. '_(' → logprob: -10.13338565826416
    8. '("("' → logprob: -11.00838565826416
    9. '(:' → logprob: -11.50838565826416
    10. '(a' → logprob: -11.75838565826416

Token 4: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17999716103076935
    2. ')' → logprob: -1.804997205734253
    3. ':' → logprob: -8.554997444152832
    4. '):
' → logprob: -10.554997444152832
    5. '```' → logprob: -11.929997444152832
    6. '(' → logprob: -12.179997444152832
    7. ')：' → logprob: -12.429997444152832
    8. ')**' → logprob: -13.429997444152832
    9. '():' → logprob: -13.679997444152832
    10. ')>' → logprob: -13.804997444152832

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014996565878391266
    2. '   ' → logprob: -4.889996528625488
    3. '```' → logprob: -5.139996528625488
    4. ':
' → logprob: -7.264996528625488
    5. '():' → logprob: -8.514996528625488
    6. '':' → logprob: -9.264996528625488
    7. '):' → logprob: -9.764996528625488
    8. '":' → logprob: -9.889996528625488
    9. ' :' → logprob: -9.889996528625488
    10. '    
' → logprob: -10.139996528625488

Token 6: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4852069318294525
    2. ' if' → logprob: -1.110206961631775
    3. '```' → logprob: -3.1102068424224854
    4. ' ' → logprob: -5.7352070808410645
    5. 'if' (adapté à ' if') → logprob: -6.2352070808410645
    6. '    ' → logprob: -6.8602070808410645
    7. ' 
' → logprob: -7.1102070808410645
    8. ' ```' → logprob: -7.4852070808410645
    9. ' for' → logprob: -7.7352070808410645
    10. '   
' → logprob: -8.110206604003906

Token 7: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.0038000731728971004
    2. ' ' → logprob: -6.128799915313721
    3. ' not' → logprob: -6.628799915313721
    4. 'num' → logprob: -8.253800392150879
    5. ' n' → logprob: -11.003800392150879
    6. '<num' → logprob: -12.628800392150879
    7. ' ' → logprob: -12.753800392150879
    8. '(num' → logprob: -13.003800392150879
    9. '	num' → logprob: -13.753800392150879
    10. ',num' → logprob: -14.128800392150879

Token 8: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.590546190738678
    2. ' <' → logprob: -0.840546190738678
    3. ' ' → logprob: -4.715546131134033
    4. '<' → logprob: -5.715546131134033
    5. '<=' → logprob: -6.215546131134033
    6. ' ==' → logprob: -9.340546607971191
    7. ' %' → logprob: -9.465546607971191
    8. '   ' → logprob: -10.965546607971191
    9. '%' → logprob: -11.090546607971191
    10. '  ' → logprob: -11.465546607971191

Token 9: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31326642632484436
    2. '2' → logprob: -1.313266396522522
    3. '```' → logprob: -12.68826675415039
    4. ' ' → logprob: -14.18826675415039
    5. '   ' → logprob: -15.31326675415039
    6. '=' → logprob: -15.31326675415039
    7. '3' → logprob: -16.43826675415039
    8. '_' → logprob: -16.43826675415039
    9. '    ' → logprob: -16.68826675415039
    10. '(' → logprob: -17.06326675415039

Token 10: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1875571544806007e-05
    2. ' ' → logprob: -11.375011444091797
    3. '```' → logprob: -15.125011444091797
    4. '   ' → logprob: -17.125011444091797
    5. '۲' → logprob: -18.125011444091797
    6. '２' → logprob: -18.125011444091797
    7. '3' → logprob: -18.500011444091797
    8. '(' → logprob: -19.125011444091797
    9. '``' → logprob: -19.500011444091797
    10. '²' → logprob: -19.625011444091797

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015512866666540504
    2. ':
' → logprob: -7.001551151275635
    3. ':return' → logprob: -7.751551151275635
    4. ' :' → logprob: -8.876551628112793
    5. '   ' → logprob: -10.251551628112793
    6. '       ' → logprob: -11.376551628112793
    7. '):' → logprob: -12.126551628112793
    8. '    ' → logprob: -12.376551628112793
    9. ':\' → logprob: -12.501551628112793
    10. ' :
' → logprob: -12.751551628112793

Token 12: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8445762991905212
    2. '    ' → logprob: -1.719576358795166
    3. '   ' → logprob: -1.719576358795166
    4. ' return' → logprob: -2.469576358795166
    5. ':' → logprob: -3.094576358795166
    6. ':return' → logprob: -3.719576358795166
    7. ':
' → logprob: -3.844576358795166
    8. 'return' → logprob: -4.469576358795166
    9. '\n' → logprob: -4.469576358795166
    10. '\' → logprob: -5.719576358795166

Token 13: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8014277219772339
    2. 'return' (adapté à ' return') → logprob: -0.8014277219772339
    3. '   ' → logprob: -2.6764278411865234
    4. '       ' → logprob: -3.4264278411865234
    5. '    ' → logprob: -7.551427841186523
    6. '\n' → logprob: -8.176427841186523
    7. ':return' → logprob: -8.426427841186523
    8. '
' → logprob: -9.926427841186523
    9. '```' → logprob: -9.926427841186523
    10. '\' → logprob: -10.176427841186523

Token 14: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.0040818434208631516
    2. 'False' → logprob: -5.504081726074219
    3. ' True' → logprob: -12.629081726074219
    4. ' ' → logprob: -15.879081726074219
    5. ' None' → logprob: -18.75408172607422
    6. ' false' → logprob: -19.00408172607422
    7. 'True' → logprob: -19.00408172607422
    8. '(False' → logprob: -19.25408172607422
    9. ' ' → logprob: -19.37908172607422
    10. '   ' → logprob: -21.00408172607422

Token 15: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3633328080177307
    2. '
' → logprob: -1.488332748413086
    3. '    
' → logprob: -2.863332748413086
    4. '\n' → logprob: -4.613332748413086
    5. '  
' → logprob: -5.113332748413086
    6. ':
' → logprob: -6.613332748413086
    7. '   
' → logprob: -6.613332748413086
    8. '```' → logprob: -7.363332748413086
    9. ':' → logprob: -7.613332748413086
    10. ' 
' → logprob: -7.613332748413086

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1297575831413269
    2. '
' → logprob: -2.5047576427459717
    3. '    
' → logprob: -3.7547576427459717
    4. '\n' → logprob: -4.879757404327393
    5. '```' → logprob: -6.004757404327393
    6. ':
' → logprob: -6.129757404327393
    7. '  
' → logprob: -6.379757404327393
    8. ':' → logprob: -7.004757404327393
    9. '   
' → logprob: -7.254757404327393
    10. ' 
' → logprob: -8.62975788116455

Token 17: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9784723520278931
    2. '\n' → logprob: -1.353472352027893
    3. '
' → logprob: -2.4784722328186035
    4. '    
' → logprob: -2.8534722328186035
    5. ' for' → logprob: -2.9784722328186035
    6. 'for' (adapté à ' for') → logprob: -3.2284722328186035
    7. ':
' → logprob: -3.3534722328186035
    8. ':' → logprob: -3.6034722328186035
    9. ' 
' → logprob: -3.8534722328186035
    10. '\' → logprob: -3.8534722328186035

Token 18: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.014469388872385025
    2. ' ' → logprob: -4.264469623565674
    3. 'i' → logprob: -8.264469146728516
    4. ' in' → logprob: -11.014469146728516
    5. ' n' → logprob: -11.139469146728516
    6. 'n' → logprob: -12.264469146728516
    7. '_' → logprob: -12.389469146728516
    8. ' _' → logprob: -12.889469146728516
    9. ' range' → logprob: -13.639469146728516
    10. ' ' → logprob: -13.889469146728516

Token 19: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0036886746529489756
    2. ' ' → logprob: -5.753688812255859
    3. 'in' → logprob: -7.628688812255859
    4. '  ' → logprob: -11.75368881225586
    5. ' i' → logprob: -11.75368881225586
    6. '   ' → logprob: -12.50368881225586
    7. '    ' → logprob: -14.25368881225586
    8. '1' → logprob: -14.37868881225586
    9. 'range' → logprob: -14.50368881225586
    10. 'space' → logprob: -14.62868881225586

Token 20: ' range' (ID: 3352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31510061025619507
    2. ' range' → logprob: -1.3151006698608398
    3. 'range' → logprob: -6.44010066986084
    4. ' space' → logprob: -9.44010066986084
    5. '  ' → logprob: -9.56510066986084
    6. ' xrange' → logprob: -10.56510066986084
    7. '	range' → logprob: -11.06510066986084
    8. '2' → logprob: -11.31510066986084
    9. ' in' → logprob: -11.81510066986084
    10. ' ' → logprob: -11.94010066986084

Token 21: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002631238894537091
    2. ' (' → logprob: -8.250263214111328
    3. '<|end|>' → logprob: -14.250263214111328
    4. '(
' → logprob: -14.375263214111328
    5. ' ' → logprob: -15.625263214111328
    6. '2' → logprob: -15.750263214111328
    7. '(i' → logprob: -16.500263214111328
    8. '1' → logprob: -16.500263214111328
    9. '(

' → logprob: -17.000263214111328
    10. '(space' → logprob: -17.000263214111328

Token 22: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.259079363080673e-05
    2. ' ' → logprob: -11.375012397766113
    3. '(' → logprob: -14.375012397766113
    4. '   ' → logprob: -14.875012397766113
    5. '```' → logprob: -16.62501335144043
    6. ')' → logprob: -17.37501335144043
    7. '    ' → logprob: -19.25001335144043
    8. '  ' → logprob: -20.12501335144043
    9. '	' → logprob: -20.31251335144043
    10. '       ' → logprob: -20.37501335144043

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07172878086566925
    2. ' ,' → logprob: -2.6967287063598633
    3. ',num' → logprob: -6.571728706359863
    4. ' ' → logprob: -7.946728706359863
    5. ',
' → logprob: -11.571728706359863
    6. ',int' → logprob: -12.446728706359863
    7. ',i' → logprob: -12.446728706359863
    8. '*num' → logprob: -12.446728706359863
    9. '   ' → logprob: -12.696728706359863
    10. '  ' → logprob: -12.946728706359863

Token 24: ' num' (ID: 2269)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6028994917869568
    2. ' int' → logprob: -0.8528994917869568
    3. 'num' → logprob: -4.102899551391602
    4. ' num' → logprob: -4.602899551391602
    5. '   ' → logprob: -10.352899551391602
    6. '    ' → logprob: -11.852899551391602
    7. '(int' → logprob: -12.852899551391602
    8. ' ' → logprob: -12.852899551391602
    9. '	int' → logprob: -13.227899551391602
    10. ')' → logprob: -13.727899551391602

Token 25: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5527182817459106
    2. '**' → logprob: -0.9277182817459106
    3. ' ):' → logprob: -4.427718162536621
    4. '):
' → logprob: -5.052718162536621
    5. ')' → logprob: -5.177718162536621
    6. ' **' → logprob: -6.302718162536621
    7. ' ' → logprob: -6.927718162536621
    8. ')**' → logprob: -7.052718162536621
    9. ',' → logprob: -7.427718162536621
    10. '   ' → logprob: -8.427718162536621

Token 26: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.92751544713974
    2. '    ' → logprob: -1.3025155067443848
    3. '       ' → logprob: -1.5525155067443848
    4. ' :' → logprob: -2.6775155067443848
    5. ':' → logprob: -3.6775155067443848
    6. '):' → logprob: -4.302515506744385
    7. ' ):' → logprob: -5.552515506744385
    8. ' ' → logprob: -5.802515506744385
    9. ' if' → logprob: -6.427515506744385
    10. '  ' → logprob: -7.177515506744385

Token 27: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6650094389915466
    2. ' if' → logprob: -1.6650094985961914
    3. ' ' → logprob: -2.0400094985961914
    4. '   ' → logprob: -2.7900094985961914
    5. ' :' → logprob: -3.2900094985961914
    6. '    ' → logprob: -3.6650094985961914
    7. ' ):' → logprob: -3.9150094985961914
    8. ' )' → logprob: -4.915009498596191
    9. ':' → logprob: -5.040009498596191
    10. ' i' → logprob: -5.915009498596191

Token 28: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.00525747612118721
    2. ' ' → logprob: -5.380257606506348
    3. 'num' → logprob: -7.380257606506348
    4. ' ' → logprob: -11.630257606506348
    5. '	num' → logprob: -13.130257606506348
    6. '(num' → logprob: -13.880257606506348
    7. '<num' → logprob: -14.630257606506348
    8. ' (' → logprob: -15.380257606506348
    9. '  ' → logprob: -15.380257606506348
    10. ' n' → logprob: -15.505257606506348

Token 29: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.004130288027226925
    2. '%' → logprob: -5.5041303634643555
    3. ' ' → logprob: -10.129130363464355
    4. '%i' → logprob: -11.379130363464355
    5. ' ' → logprob: -14.754130363464355
    6. ' %
' → logprob: -17.37912940979004
    7. '%s' → logprob: -17.62912940979004
    8. ' %)' → logprob: -18.12912940979004
    9. '   ' → logprob: -18.25412940979004
    10. ' %

' → logprob: -18.50412940979004

Token 30: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4740881323814392
    2. ' i' → logprob: -0.9740881323814392
    3. ' ' → logprob: -11.724087715148926
    4. '	i' → logprob: -12.849087715148926
    5. '   ' → logprob: -15.599087715148926
    6. '2' → logprob: -16.474088668823242
    7. ' ' → logprob: -16.724088668823242
    8. '  ' → logprob: -17.099088668823242
    9. '<|end|>' → logprob: -18.224088668823242
    10. '1' → logprob: -18.849088668823242

Token 31: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.011060673743486404
    2. '==' → logprob: -4.51106071472168
    3. '=' → logprob: -12.13606071472168
    4. ' ' → logprob: -12.26106071472168
    5. ' =' → logprob: -13.38606071472168
    6. ')==' → logprob: -14.76106071472168
    7. ' ' → logprob: -15.01106071472168
    8. '===' → logprob: -15.88606071472168
    9. ' ===' → logprob: -16.01106071472168
    10. '0' → logprob: -16.01106071472168

Token 32: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07889000326395035
    2. '0' → logprob: -2.578890085220337
    3. ' ' → logprob: -15.453889846801758
    4. '```' → logprob: -19.203889846801758
    5. ' 
' → logprob: -19.578889846801758
    6. '  ' → logprob: -20.078889846801758
    7. '   ' → logprob: -20.703889846801758
    8. '=' → logprob: -21.891389846801758
    9. '  
' → logprob: -21.953889846801758
    10. '	' → logprob: -21.953889846801758

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038014890742488205
    2. ' ' → logprob: -7.875380039215088
    3. '```' → logprob: -18.50037956237793
    4. '۰' → logprob: -19.87537956237793
    5. '  ' → logprob: -20.25037956237793
    6. ' ' → logprob: -20.37537956237793
    7. '   ' → logprob: -20.50037956237793
    8. '00' → logprob: -20.75037956237793
    9. '٠' → logprob: -21.75037956237793
    10. ' ' → logprob: -21.81287956237793

Token 34: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011717714369297028
    2. ':
' → logprob: -7.126171588897705
    3. ':return' → logprob: -8.001172065734863
    4. ' :' → logprob: -11.251172065734863
    5. '):' → logprob: -11.751172065734863
    6. '       ' → logprob: -11.876172065734863
    7. '           ' → logprob: -12.876172065734863
    8. '   ' → logprob: -14.376172065734863
    9. ' :
' → logprob: -15.001172065734863
    10. ':**' → logprob: -15.126172065734863

Token 35: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011117499321699142
    2. ' return' → logprob: -4.636117458343506
    3. '       ' → logprob: -7.261117458343506
    4. 'return' → logprob: -8.261117935180664
    5. ' 
' → logprob: -8.636117935180664
    6. '   ' → logprob: -10.136117935180664
    7. ' ' → logprob: -10.386117935180664
    8. '               ' → logprob: -10.511117935180664
    9. '            
' → logprob: -10.636117935180664
    10. ' ' → logprob: -10.761117935180664

Token 36: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3334071636199951
    2. 'return' (adapté à ' return') → logprob: -1.3334071636199951
    3. '               ' → logprob: -4.333407402038574
    4. '           ' → logprob: -5.083407402038574
    5. ' 
' → logprob: -7.708407402038574
    6. '   ' → logprob: -9.708407402038574
    7. '       ' → logprob: -10.083407402038574
    8. '
' → logprob: -10.958407402038574
    9. ' ' → logprob: -11.083407402038574
    10. '```' → logprob: -11.333407402038574

Token 37: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.16026455163955688
    2. 'False' → logprob: -1.910264492034912
    3. ' True' → logprob: -10.16026496887207
    4. 'True' → logprob: -13.28526496887207
    5. ' ' → logprob: -17.28526496887207
    6. ' ' → logprob: -19.16026496887207
    7. ' false' → logprob: -19.41026496887207
    8. '(False' → logprob: -19.53526496887207
    9. 'F' → logprob: -19.78526496887207
    10. ' F' → logprob: -20.28526496887207

Token 38: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009158923290669918
    2. '
' → logprob: -4.884159088134766
    3. '    
' → logprob: -6.884159088134766
    4. '  
' → logprob: -8.634159088134766
    5. '\n' → logprob: -9.134159088134766
    6. ' 
' → logprob: -9.634159088134766
    7. ' return' → logprob: -10.009159088134766
    8. '       ' → logprob: -10.134159088134766
    9. '   
' → logprob: -10.509159088134766
    10. '```' → logprob: -10.634159088134766

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028826793655753136
    2. '
' → logprob: -3.6538267135620117
    3. '    
' → logprob: -6.778826713562012
    4. '  
' → logprob: -8.028826713562012
    5. 'return' → logprob: -8.028826713562012
    6. ' 
' → logprob: -8.403826713562012
    7. ' return' → logprob: -8.778826713562012
    8. '```' → logprob: -8.778826713562012
    9. '   
' → logprob: -9.153826713562012
    10. '       ' → logprob: -10.528826713562012

Token 40: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6841462254524231
    2. '   ' → logprob: -0.8091462254524231
    3. ' return' → logprob: -3.0591461658477783
    4. '
' → logprob: -6.684146404266357
    5. ' ' → logprob: -7.184146404266357
    6. '    
' → logprob: -7.684146404266357
    7. '```' → logprob: -7.809146404266357
    8. ' 
' → logprob: -8.6841459274292
    9. '  
' → logprob: -9.3091459274292
    10. '  ' → logprob: -10.3091459274292

Token 41: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0485873706638813
    2. 'True' → logprob: -3.0485873222351074
    3. '(True' → logprob: -18.423587799072266
    4. ' Tru' → logprob: -19.048587799072266
    5. '   ' → logprob: -19.298587799072266
    6. ' ' → logprob: -19.298587799072266
    7. ' ' → logprob: -20.923587799072266
    8. '=True' → logprob: -21.048587799072266
    9. 'Tr' → logprob: -21.548587799072266
    10. ' Tr' → logprob: -21.673587799072266

Token 42: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.507425844669342
    2. '<|end|>' → logprob: -1.0074257850646973
    3. '\n' → logprob: -4.757425785064697
    4. '```' → logprob: -5.132425785064697
    5. '#' → logprob: -5.382425785064697
    6. ' ' → logprob: -6.007425785064697
    7. 'n' → logprob: -6.257425785064697
    8. '

' → logprob: -6.632425785064697
    9. '\' → logprob: -6.757425785064697
    10. 'newline' → logprob: -6.882425785064697

Token 43: 'while' (ID: 7032)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006823355332016945
    2. ' True' → logprob: -5.006823539733887
    3. ' space' → logprob: -10.381823539733887
    4. '  ' → logprob: -10.381823539733887
    5. ' not' → logprob: -11.131823539733887
    6. ' (' → logprob: -12.131823539733887
    7. ' ‌' → logprob: -12.131823539733887
    8. ' ' → logprob: -12.881823539733887
    9. 'True' → logprob: -12.881823539733887
    10. ' i' → logprob: -13.006823539733887

Token 45: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019229217432439327
    2. ' :' → logprob: -6.626923084259033
    3. '():' → logprob: -7.501923084259033
    4. ':
' → logprob: -11.251922607421875
    5. '):' → logprob: -12.001922607421875
    6. ':**' → logprob: -12.126922607421875
    7. '   ' → logprob: -12.501922607421875
    8. '(' → logprob: -12.876922607421875
    9. '```' → logprob: -13.251922607421875
    10. '(:' → logprob: -13.251922607421875

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05507614091038704
    2. ' ' → logprob: -3.4300761222839355
    3. ' input' → logprob: -5.0550761222839355
    4. '    ' → logprob: -5.6800761222839355
    5. '    
' → logprob: -5.9300761222839355
    6. ' 
' → logprob: -6.6800761222839355
    7. '(' → logprob: -6.8050761222839355
    8. ' )' → logprob: -6.8050761222839355
    9. '  ' → logprob: -7.1800761222839355
    10. ' (' → logprob: -7.3050761222839355

Token 47: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9703052043914795
    2. ' num' → logprob: -1.4703052043914795
    3. 'n' (adapté à ' n') → logprob: -2.0953052043914795
    4. ' user' → logprob: -2.3453052043914795
    5. ' inp' → logprob: -2.8453052043914795
    6. ' number' → logprob: -3.4703052043914795
    7. 'num' → logprob: -3.4703052043914795
    8. ' input' → logprob: -4.470305442810059
    9. '   ' → logprob: -4.595305442810059
    10. ' ' → logprob: -4.970305442810059

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005515603348612785
    2. '=' → logprob: -5.6305155754089355
    3. ' ' → logprob: -6.5055155754089355
    4. 'um' → logprob: -8.755516052246094
    5. 'o' → logprob: -9.255516052246094
    6. 'u' → logprob: -9.630516052246094
    7. '  ' → logprob: -10.255516052246094
    8. '   ' → logprob: -10.880516052246094
    9. 'umber' → logprob: -11.005516052246094
    10. '=input' → logprob: -11.505516052246094

Token 49: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.43900561332702637
    2. ' input' → logprob: -1.0640056133270264
    3. 'int' → logprob: -4.9390058517456055
    4. 'input' → logprob: -5.8140058517456055
    5. ' ' → logprob: -9.814005851745605
    6. ' in' → logprob: -10.064005851745605
    7. ' inp' → logprob: -13.064005851745605
    8. ' 
' → logprob: -13.314005851745605
    9. '=int' → logprob: -14.189005851745605
    10. ' ' → logprob: -14.689005851745605

Token 50: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03805101290345192
    2. '(' → logprob: -3.288051128387451
    3. 'input' → logprob: -11.663050651550293
    4. '()' → logprob: -14.788050651550293
    5. '=input' → logprob: -15.663050651550293
    6. ' input' → logprob: -15.913050651550293
    7. '(
' → logprob: -16.03805160522461
    8. '<input' → logprob: -16.03805160522461
    9. '(in' → logprob: -17.16305160522461
    10. ' (' → logprob: -17.16305160522461

Token 51: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.36157408356666565
    2. '(' → logprob: -1.4865740537643433
    3. '('' → logprob: -2.736574172973633
    4. '("("' → logprob: -4.861574172973633
    5. '("' → logprob: -5.986574172973633
    6. '("")' → logprob: -6.736574172973633
    7. '())' → logprob: -7.236574172973633
    8. '(">' → logprob: -8.861574172973633
    9. '(""))' → logprob: -9.861574172973633
    10. ')' → logprob: -10.611574172973633

Token 52: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5973370671272278
    2. ' ' → logprob: -0.9723370671272278
    3. ':' → logprob: -3.972337007522583
    4. '    ' → logprob: -4.222337245941162
    5. 'if' → logprob: -4.222337245941162
    6. '<|end|>' → logprob: -5.097337245941162
    7. '   ' → logprob: -5.222337245941162
    8. ' )' → logprob: -5.847337245941162
    9. ' 
' → logprob: -5.972337245941162
    10. ')' → logprob: -5.972337245941162

Token 53: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1143966093659401
    2. ' if' → logprob: -2.239396572113037
    3. 'if' (adapté à ' if') → logprob: -7.614396572113037
    4. '    ' → logprob: -7.864396572113037
    5. ' )' → logprob: -8.739397048950195
    6. '<|end|>' → logprob: -9.239397048950195
    7. '   ' → logprob: -9.489397048950195
    8. '  ' → logprob: -9.489397048950195
    9. ' 
' → logprob: -9.614397048950195
    10. ' ,' → logprob: -9.989397048950195

Token 54: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.00045498309191316366
    2. ' ' → logprob: -8.375454902648926
    3. ' not' → logprob: -8.500454902648926
    4. 'n' → logprob: -10.875454902648926
    5. ' ' → logprob: -13.625454902648926
    6. '	n' → logprob: -14.875454902648926
    7. '<|end|>' → logprob: -15.625454902648926
    8. ' н' → logprob: -16.375455856323242
    9. 'not' → logprob: -16.875455856323242
    10. '_' → logprob: -16.875455856323242

Token 55: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3845335841178894
    2. ' <=' → logprob: -1.2595336437225342
    3. ' ' → logprob: -3.634533643722534
    4. ' <' → logprob: -4.884533405303955
    5. '==' → logprob: -7.009533405303955
    6. '<=' → logprob: -8.509533882141113
    7. '<|end|>' → logprob: -8.884533882141113
    8. ' >' → logprob: -8.884533882141113
    9. ' %' → logprob: -11.009533882141113
    10. '<' → logprob: -11.134533882141113

Token 56: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0015028368216007948
    2. '0' → logprob: -6.501502990722656
    3. ' -' → logprob: -14.501502990722656
    4. '-' → logprob: -18.001502990722656
    5. ' break' → logprob: -18.001502990722656
    6. '  ' → logprob: -18.501502990722656
    7. ' ' → logprob: -18.564002990722656
    8. '<|end|>' → logprob: -19.439002990722656
    9. ' 

' → logprob: -19.689002990722656
    10. ''s' → logprob: -20.001502990722656

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036211006809026003
    2. '-' → logprob: -5.7536211013793945
    3. ' ' → logprob: -7.7536211013793945
    4. ' -' → logprob: -11.378621101379395
    5. '42' → logprob: -13.878621101379395
    6. '```' → logprob: -14.128621101379395
    7. '   ' → logprob: -15.503621101379395
    8. '1' → logprob: -16.066120147705078
    9. '  ' → logprob: -16.191120147705078
    10. '999' → logprob: -16.503620147705078

Token 58: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013614245690405369
    2. ':
' → logprob: -7.00136137008667
    3. ' :' → logprob: -7.75136137008667
    4. ' :
' → logprob: -11.251361846923828
    5. ':return' → logprob: -12.751361846923828
    6. '   ' → logprob: -12.751361846923828
    7. '       ' → logprob: -15.251361846923828
    8. '):' → logprob: -15.626361846923828
    9. '    ' → logprob: -15.876361846923828
    10. ' break' → logprob: -16.501361846923828

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.2723104848410003e-05
    2. '   ' → logprob: -11.500022888183594
    3. ' break' → logprob: -11.750022888183594
    4. '      ' → logprob: -13.875022888183594
    5. '     ' → logprob: -14.250022888183594
    6. ':' → logprob: -14.500022888183594
    7. '    ' → logprob: -14.875022888183594
    8. '        ' → logprob: -15.000022888183594
    9. '	break' → logprob: -15.125022888183594
    10. ' ' → logprob: -15.250022888183594

Token 60: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.20445308089256287
    2. 'break' (adapté à ' break') → logprob: -2.4544529914855957
    3. '       ' → logprob: -2.5794529914855957
    4. '   ' → logprob: -3.8294529914855957
    5. '	break' → logprob: -6.579452991485596
    6. '```' → logprob: -10.829453468322754
    7. ' ' → logprob: -11.079453468322754
    8. '
' → logprob: -11.579453468322754
    9. '_break' → logprob: -11.954453468322754
    10. '           ' → logprob: -12.204453468322754

Token 61: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8090644478797913
    2. '   ' → logprob: -1.5590643882751465
    3. ':' → logprob: -2.1840643882751465
    4. ' 
' → logprob: -2.4340643882751465
    5. '<|end|>' → logprob: -2.6840643882751465
    6. '    
' → logprob: -3.6840643882751465
    7. ':
' → logprob: -4.4340643882751465
    8. ' ' → logprob: -4.5590643882751465
    9. '  
' → logprob: -4.9340643882751465
    10. '```' → logprob: -5.0590643882751465

Token 62: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8401585221290588
    2. ' 
' → logprob: -1.340158462524414
    3. '   ' → logprob: -1.590158462524414
    4. '    
' → logprob: -2.840158462524414
    5. '  
' → logprob: -4.090158462524414
    6. ' if' → logprob: -4.090158462524414
    7. '   
' → logprob: -5.590158462524414
    8. ' ' → logprob: -6.465158462524414
    9. 'print' → logprob: -6.465158462524414
    10. 'if' → logprob: -6.590158462524414

Token 63: ' max' (ID: 2999)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.0054997205734253
    2. ' if' → logprob: -1.3804997205734253
    3. 'if' → logprob: -1.7554997205734253
    4. ' count' → logprob: -2.380499839782715
    5. '   ' → logprob: -2.755499839782715
    6. 'c' → logprob: -4.380499839782715
    7. 'pr' → logprob: -5.130499839782715
    8. 'result' → logprob: -5.255499839782715
    9. 'prime' → logprob: -5.255499839782715
    10. 'print' → logprob: -5.630499839782715

Token 64: '_t' (ID: 838)
  Prédit: '_prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.4018781781196594
    2. '_' → logprob: -1.6518781185150146
    3. '_factor' → logprob: -2.6518781185150146
    4. '_num' → logprob: -3.1518781185150146
    5. '_div' → logprob: -4.526878356933594
    6. '_sum' → logprob: -5.151878356933594
    7. '_pal' → logprob: -5.401878356933594
    8. '_val' → logprob: -6.151878356933594
    9. '_number' → logprob: -6.526878356933594
    10. '_value' → logprob: -8.401878356933594

Token 65: 'win' (ID: 11668)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.5019495487213135
    2. '_' → logprob: -2.0019495487213135
    3. 'r' → logprob: -2.0019495487213135
    4. 'rip' → logprob: -2.0019495487213135
    5. '_prime' → logprob: -2.3769495487213135
    6. ' =' → logprob: -2.3769495487213135
    7. '_r' → logprob: -3.6269495487213135
    8. 'ime' → logprob: -3.7519495487213135
    9. '_sum' → logprob: -4.001949310302734
    10. '=' → logprob: -4.376949310302734

Token 66: ' =' (ID: 314)
  Prédit: '_prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.041981928050518036
    2. ' =' → logprob: -3.7919819355010986
    3. 's' → logprob: -5.0419816970825195
    4. '_pr' → logprob: -5.1669816970825195
    5. '_' → logprob: -5.9169816970825195
    6. '=' → logprob: -6.0419816970825195
    7. '_gap' → logprob: -7.5419816970825195
    8. '_pair' → logprob: -8.41698169708252
    9. 'prime' → logprob: -8.66698169708252
    10. '_sum' → logprob: -9.66698169708252

Token 67: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9421788454055786
    2. '0' → logprob: -1.3171788454055786
    3. ' None' → logprob: -1.3171788454055786
    4. 'None' → logprob: -2.942178726196289
    5. ' -' → logprob: -4.192178726196289
    6. '-' → logprob: -5.192178726196289
    7. '   ' → logprob: -7.192178726196289
    8. '1' → logprob: -9.442178726196289
    9. '2' → logprob: -9.567178726196289
    10. '  ' → logprob: -9.692178726196289

Token 68: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16754741966724396
    2. 'None' → logprob: -2.4175474643707275
    3. '-' → logprob: -3.1675474643707275
    4. '   ' → logprob: -4.292547225952148
    5. ')' → logprob: -5.542547225952148
    6. ' None' → logprob: -6.167547225952148
    7. ' ' → logprob: -6.542547225952148
    8. '2' → logprob: -7.167547225952148
    9. ' -' → logprob: -7.667547225952148
    10. '1' → logprob: -8.667547225952148

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005234848940744996
    2. ' ,' → logprob: -8.750523567199707
    3. ',)' → logprob: -8.750523567199707
    4. '0' → logprob: -9.250523567199707
    5. ')' → logprob: -9.250523567199707
    6. ' )' → logprob: -12.125523567199707
    7. ' ' → logprob: -12.250523567199707
    8. ',None' → logprob: -13.875523567199707
    9. ',
' → logprob: -14.500523567199707
    10. '   ' → logprob: -14.500523567199707

Token 70: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.055058084428310394
    2. ' ' → logprob: -2.930058002471924
    3. ')' → logprob: -8.680058479309082
    4. ' ' → logprob: -12.430058479309082
    5. ' )' → logprob: -14.305058479309082
    6. '1' → logprob: -15.055058479309082
    7. '   ' → logprob: -15.305058479309082
    8. '  ' → logprob: -15.305058479309082
    9. 'None' → logprob: -16.742557525634766
    10. '	' → logprob: -16.930057525634766

Token 71: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004833425919059664
    2. ')' → logprob: -8.375483512878418
    3. ' ' → logprob: -8.625483512878418
    4. '1' → logprob: -9.625483512878418
    5. '  ' → logprob: -13.687983512878418
    6. '   ' → logprob: -13.687983512878418
    7. 'None' → logprob: -13.875483512878418
    8. ' )' → logprob: -14.187983512878418
    9. '-' → logprob: -14.250483512878418
    10. ' ' → logprob: -14.625483512878418

Token 72: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7729658540920354e-05
    2. ')
' → logprob: -10.875027656555176
    3. '   ' → logprob: -12.250027656555176
    4. ' )' → logprob: -12.500027656555176
    5. ')

' → logprob: -16.250028610229492
    6. '<|end|>' → logprob: -16.875028610229492
    7. '}' → logprob: -17.125028610229492
    8. '),' → logprob: -17.125028610229492
    9. ',' → logprob: -17.500028610229492
    10. ' ' → logprob: -17.750028610229492

Token 73: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11453640460968018
    2. '    
' → logprob: -2.8645362854003906
    3. ' 
' → logprob: -3.8645362854003906
    4. '   ' → logprob: -3.8645362854003906
    5. '  
' → logprob: -5.239536285400391
    6. '   
' → logprob: -6.114536285400391
    7. '<|end|>' → logprob: -7.489536285400391
    8. ' for' → logprob: -7.864536285400391
    9. '
' → logprob: -8.48953628540039
    10. '    ' → logprob: -8.48953628540039

Token 74: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5637533664703369
    2. ' for' → logprob: -1.063753366470337
    3. '   ' → logprob: -2.563753366470337
    4. '    
' → logprob: -5.313753128051758
    5. '
' → logprob: -6.563753128051758
    6. ' 
' → logprob: -7.313753128051758
    7. '   
' → logprob: -7.438753128051758
    8. '  ' → logprob: -8.813753128051758
    9. '  
' → logprob: -8.813753128051758
    10. ' ' → logprob: -8.813753128051758

Token 75: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3487243056297302
    2. 'i' → logprob: -1.223724365234375
    3. 'x' → logprob: -9.723724365234375
    4. 'num' → logprob: -10.223724365234375
    5. '	i' → logprob: -10.598724365234375
    6. 'a' → logprob: -10.723724365234375
    7. ' num' → logprob: -10.848724365234375
    8. ' x' → logprob: -10.973724365234375
    9. 't' → logprob: -10.973724365234375
    10. '   ' → logprob: -11.598724365234375

Token 76: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005129150580614805
    2. 'in' → logprob: -5.630129337310791
    3. ' ' → logprob: -6.505129337310791
    4. '  ' → logprob: -11.505128860473633
    5. ',' → logprob: -12.630128860473633
    6. ' i' → logprob: -12.755128860473633
    7. '	in' → logprob: -12.880128860473633
    8. ' ,' → logprob: -13.255128860473633
    9. '   ' → logprob: -13.255128860473633
    10. 'n' → logprob: -13.255128860473633

Token 77: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.001267016981728375
    2. 'range' → logprob: -6.751266956329346
    3. ' ' → logprob: -9.376267433166504
    4. ' ran' → logprob: -12.626267433166504
    5. '	range' → logprob: -12.876267433166504
    6. '  ' → logprob: -13.126267433166504
    7. '(range' → logprob: -14.126267433166504
    8. ' ra' → logprob: -14.251267433166504
    9. '   ' → logprob: -14.376267433166504
    10. '    ' → logprob: -14.876267433166504

Token 78: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0021526420023292303
    2. '(n' → logprob: -6.252152442932129
    3. '2' → logprob: -9.002152442932129
    4. ' (' → logprob: -9.627152442932129
    5. ' ' → logprob: -10.752152442932129
    6. '   ' → logprob: -12.252152442932129
    7. ' n' → logprob: -12.627152442932129
    8. 'n' → logprob: -13.377152442932129
    9. '(max' → logprob: -14.127152442932129
    10. '(
' → logprob: -14.752152442932129

Token 79: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03851453214883804
    2. '3' → logprob: -3.6635146141052246
    3. 'n' → logprob: -4.538514614105225
    4. '1' → logprob: -6.663514614105225
    5. ' ' → logprob: -9.288514137268066
    6. '   ' → logprob: -10.538514137268066
    7. '(' → logprob: -11.038514137268066
    8. ' n' → logprob: -11.663514137268066
    9. '```' → logprob: -11.913514137268066
    10. 'm' → logprob: -12.288514137268066

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000511687423568219
    2. ' ,' → logprob: -7.625511646270752
    3. ',n' → logprob: -10.87551212310791
    4. '   ' → logprob: -12.50051212310791
    5. '    ' → logprob: -15.37551212310791
    6. ',
' → logprob: -15.62551212310791
    7. '‌,' → logprob: -16.000511169433594
    8. ' ' → logprob: -16.125511169433594
    9. 'n' → logprob: -16.375511169433594
    10. ',i' → logprob: -16.500511169433594

Token 81: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.281259149312973
    2. ' n' → logprob: -1.4062591791152954
    3. '   ' → logprob: -9.906259536743164
    4. '	n' → logprob: -10.781259536743164
    5. '    ' → logprob: -10.906259536743164
    6. '(n' → logprob: -11.906259536743164
    7. ' ' → logprob: -12.031259536743164
    8. ' ' → logprob: -13.156259536743164
    9. '(' → logprob: -13.906259536743164
    10. ')n' → logprob: -13.906259536743164

Token 82: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.40650296211242676
    2. ' -' → logprob: -1.5315029621124268
    3. '):' → logprob: -2.5315029621124268
    4. '//' → logprob: -4.156502723693848
    5. '):
' → logprob: -4.781502723693848
    6. ' //' → logprob: -5.781502723693848
    7. ' ):' → logprob: -5.781502723693848
    8. ')' → logprob: -5.906502723693848
    9. '   ' → logprob: -6.031502723693848
    10. ' ' → logprob: -6.531502723693848

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.635164754698053e-05
    2. '2' → logprob: -10.500066757202148
    3. '```' → logprob: -11.750066757202148
    4. '10' → logprob: -12.250066757202148
    5. '11' → logprob: -12.375066757202148
    6. '3' → logprob: -12.750066757202148
    7. '5' → logprob: -12.812566757202148
    8. '

' → logprob: -13.000066757202148
    9. '0' → logprob: -13.062566757202148
    10. '4' → logprob: -13.250066757202148

Token 84: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00859318021684885
    2. '):
' → logprob: -5.0085930824279785
    3. ' ):' → logprob: -6.7585930824279785
    4. ':' → logprob: -8.258593559265137
    5. '   ' → logprob: -8.883593559265137
    6. ')' → logprob: -9.008593559265137
    7. '+' → logprob: -9.008593559265137
    8. ',' → logprob: -10.508593559265137
    9. ' ):
' → logprob: -11.008593559265137
    10. '    ' → logprob: -11.758593559265137

Token 85: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37309426069259644
    2. ' ' → logprob: -1.7480943202972412
    3. ':' → logprob: -2.623094320297241
    4. '    ' → logprob: -3.248094320297241
    5. '<|end|>' → logprob: -4.498094081878662
    6. '   ' → logprob: -5.123094081878662
    7. ' :' → logprob: -5.748094081878662
    8. ' if' → logprob: -6.498094081878662
    9. '        ' → logprob: -6.998094081878662
    10. '  ' → logprob: -7.748094081878662

Token 86: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0393245220184326
    2. ' if' → logprob: -1.0393245220184326
    3. '       ' → logprob: -1.7893245220184326
    4. 'if' (adapté à ' if') → logprob: -2.9143245220184326
    5. '    ' → logprob: -3.5393245220184326
    6. '   ' → logprob: -4.164324760437012
    7. '<|end|>' → logprob: -4.414324760437012
    8. '        ' → logprob: -5.039324760437012
    9. ' 
' → logprob: -5.914324760437012
    10. '           ' → logprob: -6.414324760437012

Token 87: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.029800020158290863
    2. 'is' → logprob: -3.5297999382019043
    3. ' ' → logprob: -10.779800415039062
    4. '   ' → logprob: -12.154800415039062
    5. ' (' → logprob: -12.404800415039062
    6. '    ' → logprob: -12.404800415039062
    7. '	is' → logprob: -12.404800415039062
    8. ' i' → logprob: -12.779800415039062
    9. '(is' → logprob: -12.904800415039062
    10. '  ' → logprob: -13.842300415039062

Token 88: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.00036561701563186944
    2. '_' → logprob: -8.000365257263184
    3. ' _' → logprob: -10.625365257263184
    4. '_pr' → logprob: -13.125365257263184
    5. '_p' → logprob: -13.875365257263184
    6. ' ' → logprob: -14.000365257263184
    7. ''_' → logprob: -14.625365257263184
    8. 'prime' → logprob: -15.000365257263184
    9. '_pi' → logprob: -15.250365257263184
    10. ')_' → logprob: -15.500365257263184

Token 89: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00020449401927180588
    2. '(' → logprob: -8.500204086303711
    3. ' (' → logprob: -14.500204086303711
    4. ')' → logprob: -15.500204086303711
    5. '(
' → logprob: -15.750204086303711
    6. '((' → logprob: -16.75020408630371
    7. '(s' → logprob: -17.12520408630371
    8. ' ' → logprob: -17.25020408630371
    9. '(I' → logprob: -17.50020408630371
    10. '(ii' → logprob: -18.12520408630371

Token 90: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01398320309817791
    2. 'and' → logprob: -4.388983249664307
    3. ')' → logprob: -6.638983249664307
    4. ' )' → logprob: -9.263982772827148
    5. ' ' → logprob: -10.013982772827148
    6. '    ' → logprob: -10.888982772827148
    7. '   ' → logprob: -13.513982772827148
    8. '        ' → logprob: -14.138982772827148
    9. ' a' → logprob: -14.138982772827148
    10. '  ' → logprob: -14.763982772827148

Token 91: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0028427953366190195
    2. 'and' → logprob: -5.877842903137207
    3. ' ' → logprob: -10.877842903137207
    4. '    ' → logprob: -11.002842903137207
    5. ' a' → logprob: -14.252842903137207
    6. ' an' → logprob: -14.752842903137207
    7. ' ' → logprob: -15.377842903137207
    8. '   ' → logprob: -15.502842903137207
    9. '```' → logprob: -16.00284194946289
    10. '        ' → logprob: -16.00284194946289

Token 92: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0028448181692510843
    2. 'is' → logprob: -5.87784481048584
    3. ' ' → logprob: -10.87784481048584
    4. ' i' → logprob: -11.62784481048584
    5. '    ' → logprob: -13.12784481048584
    6. ' (' → logprob: -13.12784481048584
    7. '   ' → logprob: -13.37784481048584
    8. '<|end|>' → logprob: -13.75284481048584
    9. '  ' → logprob: -13.87784481048584
    10. '	is' → logprob: -14.25284481048584

Token 93: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -2.8206473871250637e-05
    2. 'prime' → logprob: -11.875028610229492
    3. '```' → logprob: -12.000028610229492
    4. '_pr' → logprob: -12.750028610229492
    5. '(i' → logprob: -13.000028610229492
    6. ''_' → logprob: -13.000028610229492
    7. '_' → logprob: -13.250028610229492
    8. '(_' → logprob: -13.750028610229492
    9. ' _' → logprob: -13.750028610229492
    10. ')_' → logprob: -14.375028610229492

Token 94: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0004216170927975327
    2. '(' → logprob: -7.875421524047852
    3. ' (' → logprob: -10.125421524047852
    4. ' i' → logprob: -15.000421524047852
    5. '<|end|>' → logprob: -15.000421524047852
    6. '(
' → logprob: -15.500421524047852
    7. 'i' → logprob: -15.750421524047852
    8. ')' → logprob: -15.875421524047852
    9. ' ' → logprob: -16.62542152404785
    10. '(I' → logprob: -17.25042152404785

Token 95: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2811731994152069
    2. ' +' → logprob: -1.4061732292175293
    3. ' ' → logprob: -11.281172752380371
    4. '+)' → logprob: -12.781172752380371
    5. '   ' → logprob: -13.156172752380371
    6. ')' → logprob: -13.406172752380371
    7. '  ' → logprob: -14.031172752380371
    8. '+i' → logprob: -14.156172752380371
    9. '+

' → logprob: -14.906172752380371
    10. ' +

' → logprob: -14.906172752380371

Token 96: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.872261317563243e-05
    2. ' ' → logprob: -9.750059127807617
    3. ')' → logprob: -15.500059127807617
    4. '1' → logprob: -17.500059127807617
    5. '   ' → logprob: -17.625059127807617
    6. '```' → logprob: -17.750059127807617
    7. '  ' → logprob: -17.875059127807617
    8. '_' → logprob: -18.875059127807617
    9. '۲' → logprob: -18.875059127807617
    10. '₂' → logprob: -19.187559127807617

Token 97: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0027686210814863443
    2. ')' → logprob: -6.377768516540527
    3. '):
' → logprob: -7.627768516540527
    4. ':' → logprob: -7.752768516540527
    5. ' ):' → logprob: -9.252768516540527
    6. ' and' → logprob: -10.752768516540527
    7. '       ' → logprob: -11.127768516540527
    8. '   ' → logprob: -11.752768516540527
    9. '):

' → logprob: -11.877768516540527
    10. ' )' → logprob: -14.377768516540527

Token 98: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022449782118201256
    2. ' and' → logprob: -3.8974497318267822
    3. ':
' → logprob: -6.522449970245361
    4. ' :' → logprob: -8.272449493408203
    5. '):' → logprob: -9.522449493408203
    6. '       ' → logprob: -10.022449493408203
    7. 'and' → logprob: -10.022449493408203
    8. ':

' → logprob: -12.147449493408203
    9. '):
' → logprob: -13.022449493408203
    10. ' :
' → logprob: -13.022449493408203

Token 99: ' (' (ID: 350)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07131893932819366
    2. 'i' → logprob: -2.6963188648223877
    3. ' (' → logprob: -6.946319103240967
    4. ' ' → logprob: -8.571318626403809
    5. '   ' → logprob: -9.321318626403809
    6. '(i' → logprob: -9.696318626403809
    7. '	i' → logprob: -10.071318626403809
    8. '(' → logprob: -10.946318626403809
    9. ' ' → logprob: -11.821318626403809
    10. '  ' → logprob: -12.883818626403809

Token 100: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03262082487344742
    2. ' i' → logprob: -3.782620906829834
    3. '(i' → logprob: -5.407620906829834
    4. ' (' → logprob: -5.907620906829834
    5. '   ' → logprob: -6.782620906829834
    6. ')' → logprob: -7.657620906829834
    7. ' ' → logprob: -8.782620429992676
    8. ')i' → logprob: -9.032620429992676
    9. '(' → logprob: -9.282620429992676
    10. '	i' → logprob: -10.407620429992676

Token 101: '+' (ID: 10)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3589608371257782
    2. '+' → logprob: -1.3589608669281006
    3. ' +' → logprob: -3.7339608669281006
    4. '>' → logprob: -3.9839608669281006
    5. ' ' → logprob: -7.7339606285095215
    6. '+n' → logprob: -8.35896110534668
    7. '+i' → logprob: -8.60896110534668
    8. ' >
' → logprob: -8.73396110534668
    9. ')>' → logprob: -8.98396110534668
    10. ' >

' → logprob: -8.98396110534668

Token 102: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6100426316261292
    2. 'n' → logprob: -1.7350425720214844
    3. '+' → logprob: -2.2350425720214844
    4. ' ' → logprob: -3.4850425720214844
    5. 'i' → logprob: -3.7350425720214844
    6. '   ' → logprob: -3.7350425720214844
    7. 'max' → logprob: -3.7350425720214844
    8. '(n' → logprob: -4.485042572021484
    9. ')' → logprob: -4.610042572021484
    10. '(' → logprob: -4.860042572021484

Token 103: ')' (ID: 8)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6618438363075256
    2. ')' → logprob: -0.7868438363075256
    3. '<=' → logprob: -3.911843776702881
    4. ' )' → logprob: -5.161843776702881
    5. ')<=' → logprob: -5.911843776702881
    6. ' ' → logprob: -8.911844253540039
    7. ' -' → logprob: -9.411844253540039
    8. '-' → logprob: -10.036844253540039
    9. '   ' → logprob: -10.661844253540039
    10. '```' → logprob: -11.411844253540039

Token 104: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.016124224290251732
    2. '<=' → logprob: -4.141124248504639
    3. ' ' → logprob: -9.89112377166748
    4. ' <' → logprob: -11.01612377166748
    5. '<' → logprob: -11.89112377166748
    6. ')' → logprob: -12.64112377166748
    7. '   ' → logprob: -12.89112377166748
    8. ')<=' → logprob: -13.26612377166748
    9. '-' → logprob: -13.89112377166748
    10. '  ' → logprob: -14.07862377166748

Token 105: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.12698626518249512
    2. 'n' → logprob: -2.126986265182495
    3. '   ' → logprob: -10.251986503601074
    4. '	n' → logprob: -11.001986503601074
    5. ' ' → logprob: -12.501986503601074
    6. '    ' → logprob: -13.626986503601074
    7. ' ' → logprob: -15.251986503601074
    8. ' 
' → logprob: -15.501986503601074
    9. '  ' → logprob: -15.626986503601074
    10. '<|end|>' → logprob: -16.001985549926758

Token 106: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18812787532806396
    2. ':
' → logprob: -1.813127875328064
    3. '       ' → logprob: -4.9381279945373535
    4. ' and' → logprob: -7.1881279945373535
    5. '):
' → logprob: -8.688127517700195
    6. '   ' → logprob: -9.813127517700195
    7. ':

' → logprob: -10.063127517700195
    8. '):' → logprob: -10.188127517700195
    9. '           ' → logprob: -10.313127517700195
    10. ' :
' → logprob: -10.438127517700195

Token 107: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07545369118452072
    2. ':' → logprob: -3.450453758239746
    3. ':
' → logprob: -3.700453758239746
    4. '       ' → logprob: -4.325453758239746
    5. '
' → logprob: -6.200453758239746
    6. '):
' → logprob: -8.325453758239746
    7. '            
' → logprob: -8.825453758239746
    8. '        
' → logprob: -9.325453758239746
    9. ' and' → logprob: -9.700453758239746
    10. '```' → logprob: -9.950453758239746

Token 108: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030570924282073975
    2. '           ' → logprob: -6.00305700302124
    3. '   ' → logprob: -8.128057479858398
    4. ' max' → logprob: -9.003057479858398
    5. '
' → logprob: -9.878057479858398
    6. '               ' → logprob: -9.878057479858398
    7. 'max' → logprob: -10.753057479858398
    8. '        
' → logprob: -10.878057479858398
    9. '      ' → logprob: -11.628057479858398
    10. ' ' → logprob: -13.253057479858398

Token 109: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4878671169281006
    2. 'i' → logprob: -1.2378671169281006
    3. ' (' → logprob: -2.6128671169281006
    4. '(i' → logprob: -3.8628671169281006
    5. '   ' → logprob: -6.73786735534668
    6. ' ' → logprob: -8.48786735534668
    7. '(' → logprob: -8.73786735534668
    8. ' max' → logprob: -10.36286735534668
    9. '	i' → logprob: -10.36286735534668
    10. '    ' → logprob: -10.73786735534668

Token 110: '+' (ID: 10)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.005720216315239668
    2. '>' → logprob: -6.005720138549805
    3. ' +' → logprob: -6.505720138549805
    4. '+' → logprob: -6.880720138549805
    5. ' ' → logprob: -8.005720138549805
    6. ' -' → logprob: -8.380720138549805
    7. '  ' → logprob: -10.255720138549805
    8. '   ' → logprob: -10.255720138549805
    9. ' >

' → logprob: -10.880720138549805
    10. '-' → logprob: -11.130720138549805

Token 111: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002193563850596547
    2. ' ' → logprob: -6.127193450927734
    3. '   ' → logprob: -12.502193450927734
    4. '+' → logprob: -13.502193450927734
    5. '  ' → logprob: -13.502193450927734
    6. '1' → logprob: -14.127193450927734
    7. 't' → logprob: -15.814693450927734
    8. '0' → logprob: -15.877193450927734
    9. '２' → logprob: -15.877193450927734
    10. '

' → logprob: -16.064693450927734

Token 112: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2788296341896057
    2. ' -' → logprob: -1.653829574584961
    3. '>' → logprob: -3.528829574584961
    4. '-' → logprob: -4.028829574584961
    5. ' ' → logprob: -5.653829574584961
    6. '   ' → logprob: -7.028829574584961
    7. '  ' → logprob: -8.403829574584961
    8. ')' → logprob: -9.403829574584961
    9. '    ' → logprob: -10.403829574584961
    10. '           ' → logprob: -10.653829574584961

Token 113: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3136053681373596
    2. ' max' → logprob: -1.3136053085327148
    3. '	max' → logprob: -8.813605308532715
    4. '(max' → logprob: -9.438605308532715
    5. ' ' → logprob: -10.188605308532715
    6. '   ' → logprob: -10.188605308532715
    7. '           ' → logprob: -11.063605308532715
    8. '<|end|>' → logprob: -12.438605308532715
    9. '  ' → logprob: -12.563605308532715
    10. '[max' → logprob: -12.688605308532715

Token 114: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -6.749814019713085e-06
    2. 't' → logprob: -12.250006675720215
    3. '_' → logprob: -14.500006675720215
    4. '   ' → logprob: -14.625006675720215
    5. ')' → logprob: -15.375006675720215
    6. 'max' → logprob: -15.750006675720215
    7. '	t' → logprob: -16.00000762939453
    8. '

' → logprob: -16.87500762939453
    9. '```' → logprob: -17.25000762939453
    10. ' ' → logprob: -17.37500762939453

Token 115: 'win' (ID: 11668)
  Prédit: 'win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.00892677716910839
    2. 'in' → logprob: -4.883926868438721
    3. '   ' → logprob: -7.883926868438721
    4. 'w' → logprob: -7.883926868438721
    5. 'ax' → logprob: -9.633926391601562
    6. 'max' → logprob: -10.008926391601562
    7. 'wi' → logprob: -10.196426391601562
    8. '    ' → logprob: -10.508926391601562
    9. 'wins' → logprob: -10.696426391601562
    10. '       ' → logprob: -10.758926391601562

Token 116: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006317427847534418
    2. ':' → logprob: -6.506317615509033
    3. '_t' → logprob: -6.506317615509033
    4. ':
' → logprob: -6.881317615509033
    5. '           ' → logprob: -7.131317615509033
    6. 'max' → logprob: -7.631317615509033
    7. '   ' → logprob: -7.756317615509033
    8. '       ' → logprob: -8.381317138671875
    9. ' ' → logprob: -9.506317138671875
    10. '               ' → logprob: -10.131317138671875

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.607391408877447e-05
    2. '0' → logprob: -10.750036239624023
    3. ' ' → logprob: -11.375036239624023
    4. '   ' → logprob: -13.500036239624023
    5. '

' → logprob: -15.437536239624023
    6. ']' → logprob: -15.562536239624023
    7. '  ' → logprob: -15.812536239624023
    8. '
' → logprob: -15.937536239624023
    9. '１' → logprob: -16.062536239624023
    10. '```' → logprob: -16.250036239624023

Token 118: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6890309453010559
    2. ':' → logprob: -1.0640308856964111
    3. '):
' → logprob: -2.064030885696411
    4. '       ' → logprob: -4.68903112411499
    5. ':
' → logprob: -4.68903112411499
    6. '           ' → logprob: -6.06403112411499
    7. '   ' → logprob: -6.31403112411499
    8. ']:' → logprob: -6.43903112411499
    9. ' ):' → logprob: -8.064030647277832
    10. ']:
' → logprob: -8.189030647277832

Token 119: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015829472104087472
    2. '           ' → logprob: -6.626583099365234
    3. '                
' → logprob: -9.376583099365234
    4. ' max' → logprob: -10.126583099365234
    5. '              ' → logprob: -10.501583099365234
    6. ':' → logprob: -10.626583099365234
    7. 'max' → logprob: -10.876583099365234
    8. '            
' → logprob: -11.376583099365234
    9. ':
' → logprob: -11.501583099365234
    10. '       ' → logprob: -12.251583099365234

Token 120: ' max' (ID: 2999)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5122344493865967
    2. '           ' → logprob: -1.1372344493865967
    3. ' max' → logprob: -2.8872344493865967
    4. '                   ' → logprob: -3.8872344493865967
    5. 'max' (adapté à ' max') → logprob: -6.512234687805176
    6. '       ' → logprob: -7.137234687805176
    7. '                ' → logprob: -7.762234687805176
    8. '
' → logprob: -8.387234687805176
    9. '                
' → logprob: -8.887234687805176
    10. ' 
' → logprob: -9.137234687805176

Token 121: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -6.034592388459714e-06
    2. '_' → logprob: -12.375005722045898
    3. 't' → logprob: -14.375005722045898
    4. '   ' → logprob: -15.500005722045898
    5. '<|end|>' → logprob: -15.625005722045898
    6. '<|end|>' → logprob: -16.0000057220459
    7. '\' → logprob: -16.2500057220459
    8. ' _' → logprob: -16.7500057220459
    9. ')_' → logprob: -17.2500057220459
    10. '```' → logprob: -17.2500057220459

Token 122: 'win' (ID: 11668)
  Prédit: 'win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.00016516048344783485
    2. 'w' → logprob: -9.500164985656738
    3. 'in' → logprob: -11.125164985656738
    4. '   ' → logprob: -11.125164985656738
    5. 'wi' → logprob: -11.625164985656738
    6. 'wins' → logprob: -12.375164985656738
    7. 'вин' → logprob: -12.625164985656738
    8. 'wing' → logprob: -12.875164985656738
    9. '       ' → logprob: -12.875164985656738
    10. 'wn' → logprob: -13.125164985656738

Token 123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008632649667561054
    2. '=' → logprob: -4.758632659912109
    3. ' =(' → logprob: -11.50863265991211
    4. ' ' → logprob: -12.88363265991211
    5. '=(' → logprob: -13.00863265991211
    6. '[' → logprob: -13.75863265991211
    7. ' (' → logprob: -14.13363265991211
    8. '(' → logprob: -14.50863265991211
    9. ',' → logprob: -14.88363265991211
    10. ')' → logprob: -15.25863265991211

Token 124: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.25223007798194885
    2. ' (' → logprob: -1.5022300481796265
    3. '(' → logprob: -8.127229690551758
    4. ' ' → logprob: -12.377229690551758
    5. '   ' → logprob: -15.252229690551758
    6. '(ii' → logprob: -15.252229690551758
    7. ' i' → logprob: -15.377229690551758
    8. '(
' → logprob: -15.627229690551758
    9. '  ' → logprob: -16.752229690551758
    10. '(I' → logprob: -16.877229690551758

Token 125: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.15441757265944e-05
    2. ' i' → logprob: -10.375031471252441
    3. '	i' → logprob: -16.000032424926758
    4. '   ' → logprob: -16.125032424926758
    5. ')i' → logprob: -18.125032424926758
    6. ',i' → logprob: -18.375032424926758
    7. ' ' → logprob: -19.375032424926758
    8. ',' → logprob: -19.750032424926758
    9. '  ' → logprob: -20.000032424926758
    10. '*i' → logprob: -20.125032424926758

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004002832865808159
    2. ' ,' → logprob: -8.25040054321289
    3. ',i' → logprob: -9.75040054321289
    4. '+' → logprob: -9.87540054321289
    5. ',
' → logprob: -11.87540054321289
    6. ' ' → logprob: -12.00040054321289
    7. '   ' → logprob: -13.00040054321289
    8. '<|end|>' → logprob: -13.00040054321289
    9. '‌,' → logprob: -13.25040054321289
    10. '+,' → logprob: -13.37540054321289

Token 127: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0549408495426178
    2. ' i' → logprob: -2.929940938949585
    3. '   ' → logprob: -10.554941177368164
    4. ' ' → logprob: -10.804941177368164
    5. '	i' → logprob: -11.929941177368164
    6. '  ' → logprob: -13.679941177368164
    7. ')i' → logprob: -13.929941177368164
    8. ' ' → logprob: -14.554941177368164
    9. '           ' → logprob: -14.554941177368164
    10. '       ' → logprob: -14.804941177368164

Token 128: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001175343873910606
    2. ' +' → logprob: -6.751175403594971
    3. '2' → logprob: -13.001174926757812
    4. '+
' → logprob: -13.626174926757812
    5. ')' → logprob: -14.626174926757812
    6. '+)' → logprob: -14.876174926757812
    7. ' ' → logprob: -15.126174926757812
    8. ')+' → logprob: -15.376174926757812
    9. '   ' → logprob: -16.126174926757812
    10. '＋' → logprob: -16.876174926757812

Token 129: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001427538663847372
    2. ' ' → logprob: -8.875143051147461
    3. ')' → logprob: -13.375143051147461
    4. '   ' → logprob: -14.500143051147461
    5. '  ' → logprob: -15.062643051147461
    6. '```' → logprob: -16.31264305114746
    7. '۲' → logprob: -16.62514305114746
    8. '0' → logprob: -17.06264305114746
    9. '২' → logprob: -17.12514305114746
    10. '
' → logprob: -17.12514305114746

Token 130: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.900034299585968e-05
    2. ')
' → logprob: -9.375088691711426
    3. ' )' → logprob: -13.375088691711426
    4. '   ' → logprob: -13.750088691711426
    5. '       ' → logprob: -14.500088691711426
    6. '           ' → logprob: -15.000088691711426
    7. ')
' → logprob: -15.500088691711426
    8. ')

' → logprob: -15.500088691711426
    9. '               ' → logprob: -16.375089645385742
    10. ')`' → logprob: -16.625089645385742

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2936270833015442
    2. '
' → logprob: -1.4186270236968994
    3. '    
' → logprob: -5.0436272621154785
    4. 'print' → logprob: -5.1686272621154785
    5. '  
' → logprob: -9.16862678527832
    6. '```' → logprob: -10.29362678527832
    7. '

' → logprob: -10.41862678527832
    8. '        
' → logprob: -10.66862678527832
    9. '<|end|>' → logprob: -10.91862678527832
    10. '
' → logprob: -11.16862678527832

Token 132: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.003857316682115197
    2. '   ' → logprob: -5.753857135772705
    3. '
' → logprob: -8.003857612609863
    4. 'if' → logprob: -8.128857612609863
    5. '    
' → logprob: -10.628857612609863
    6. ' print' → logprob: -10.753857612609863
    7. '  
' → logprob: -13.503857612609863
    8. '```' → logprob: -13.628857612609863
    9. ' if' → logprob: -14.378857612609863
    10. '
' → logprob: -14.628857612609863

Token 133: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.075498566031456
    2. '(' → logprob: -2.950498580932617
    3. '(f' → logprob: -3.950498580932617
    4. '("' → logprob: -7.325498580932617
    5. '('' → logprob: -7.950498580932617
    6. ' (' → logprob: -10.075498580932617
    7. '((' → logprob: -10.200498580932617
    8. '(*' → logprob: -11.075498580932617
    9. 'max' → logprob: -11.075498580932617
    10. '()' → logprob: -11.575498580932617

Token 134: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.0
    3. 't' → logprob: -17.25
    4. '_tw' → logprob: -18.25
    5. ')' → logprob: -18.625
    6. ')_' → logprob: -18.75
    7. '(_' → logprob: -19.0
    8. '   ' → logprob: -19.125
    9. '(' → logprob: -19.375
    10. '-t' → logprob: -19.75

Token 135: 'win' (ID: 11668)
  Prédit: 'win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.10030695050954819
    2. 'in' → logprob: -2.350306987762451
    3. 'w' → logprob: -9.975306510925293
    4. 'vin' → logprob: -11.100306510925293
    5. 'wins' → logprob: -11.725306510925293
    6. '   ' → logprob: -12.350306510925293
    7. 'ain' → logprob: -12.975306510925293
    8. 'вин' → logprob: -13.100306510925293
    9. 'inn' → logprob: -13.350306510925293
    10. ' twin' → logprob: -13.600306510925293

Token 136: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ' )' → logprob: -13.375001907348633
    3. '))' → logprob: -14.875001907348633
    4. ')`' → logprob: -15.625001907348633
    5. '[' → logprob: -15.750001907348633
    6. ')
' → logprob: -16.500001907348633
    7. ')}' → logprob: -17.500001907348633
    8. '())' → logprob: -18.000001907348633
    9. '()' → logprob: -18.250001907348633
    10. '),' → logprob: -18.750001907348633

Token 137: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022927559912204742
    2. '0' → logprob: -6.127292633056641
    3. '-' → logprob: -9.37729263305664
    4. ' ' → logprob: -11.81479263305664
    5. ']' → logprob: -12.50229263305664
    6. '```' → logprob: -12.81479263305664
    7. '   ' → logprob: -13.31479263305664
    8. ')' → logprob: -13.31479263305664
    9. ' -' → logprob: -14.31479263305664
    10. '
' → logprob: -14.37729263305664

Token 138: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008040833286941051
    2. ' ,' → logprob: -5.008040904998779
    3. ')' → logprob: -7.133040904998779
    4. ',end' → logprob: -7.883040904998779
    5. ',",' → logprob: -9.758040428161621
    6. ',
' → logprob: -10.508040428161621
    7. ',n' → logprob: -11.258040428161621
    8. ',)' → logprob: -11.383040428161621
    9. ' )' → logprob: -12.008040428161621
    10. ' ' → logprob: -12.008040428161621

Token 139: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.14286211133003235
    2. ' max' → logprob: -2.01786208152771
    3. ' ' → logprob: -9.267862319946289
    4. ',max' → logprob: -10.517862319946289
    5. '"' → logprob: -10.767862319946289
    6. '(max' → logprob: -11.517862319946289
    7. ''' → logprob: -11.642862319946289
    8. ')' → logprob: -11.892862319946289
    9. '    ' → logprob: -12.517862319946289
    10. ' )' → logprob: -12.767862319946289

Token 140: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -2.2200749754119897e-06
    2. 't' → logprob: -14.750001907348633
    3. 'in' → logprob: -14.750001907348633
    4. 'Twin' → logprob: -15.125001907348633
    5. '_' → logprob: -15.500001907348633
    6. '   ' → logprob: -15.625001907348633
    7. 'max' → logprob: -16.125001907348633
    8. 'ix' → logprob: -16.625001907348633
    9. ' twin' → logprob: -16.875001907348633
    10. ')' → logprob: -16.875001907348633

Token 141: 'win' (ID: 11668)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.4682203233242035
    2. 'win' → logprob: -1.0932203531265259
    3. 'in' → logprob: -3.3432202339172363
    4. 'w' → logprob: -5.718220233917236
    5. '[' → logprob: -10.593220710754395
    6. '1' → logprob: -10.593220710754395
    7. '2' → logprob: -11.593220710754395
    8. 'ow' → logprob: -11.593220710754395
    9. 'wn' → logprob: -11.593220710754395
    10. 'max' → logprob: -11.593220710754395

Token 142: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18102751672267914
    2. '[' → logprob: -1.8060275316238403
    3. '])' → logprob: -7.431027412414551
    4. ']' → logprob: -7.806027412414551
    5. '1' → logprob: -8.93102741241455
    6. ')
' → logprob: -9.80602741241455
    7. ' )' → logprob: -10.18102741241455
    8. ')]' → logprob: -11.05602741241455
    9. ')[' → logprob: -11.55602741241455
    10. ')])' → logprob: -12.30602741241455

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.500000953674316
    3. ')' → logprob: -16.125001907348633
    4. '])' → logprob: -16.375001907348633
    5. '0' → logprob: -16.750001907348633
    6. ']' → logprob: -17.000001907348633
    7. '```' → logprob: -17.000001907348633
    8. '   ' → logprob: -18.625001907348633
    9. '[' → logprob: -19.125001907348633
    10. '  ' → logprob: -19.500001907348633

Token 144: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -14.250000953674316
    3. ' )' → logprob: -16.125001907348633
    4. '))' → logprob: -16.500001907348633
    5. ')`' → logprob: -16.750001907348633
    6. '')' → logprob: -17.000001907348633
    7. '`)' → logprob: -17.500001907348633
    8. '")' → logprob: -17.875001907348633
    9. ')}' → logprob: -18.625001907348633
    10. '}' → logprob: -19.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 142
Tokens correctement prédits (1ère position, stricte): 80
Tokens correctement prédits (1ère position, avec adaptation): 84
Tokens correctement prédits (top 10): 131
Précision stricte (1ère position): 56.34%
Précision adaptée (1ère position): 59.15%
Précision (top 10): 92.25%
================================================================================
