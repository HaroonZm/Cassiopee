================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, t = map(int, input().split())
h = [int(input()) for _ in range(n)]

# cum_time[i] is the time when student i finishes all their checkups
cum_time = [0]*n
for i in range(n):
    if i == 0:
        cum_time[i] = h[i]
    else:
        cum_time[i] = cum_time[i-1] + h[i]

res = []
for i in range(n):
    # find how many items have been completed by student i at time t (starting from 0)
    # time spent on items up to item k = k * h[i]
    # we know student i starts their sequence after cum_time[i-1], but items are processed in order
    # total time spent up to item x for student i is x*h[i]
    # but must wait for earlier students; so the time offset is the maximum of previous students finish time
    # Actually, since items processed in order and students in order,
    # at any time the progress of student i can be determined by the following:
    # They start at the time when previous student finishes (cum_time[i-1]) if i>0 else 0
    start_time = cum_time[i-1] if i > 0 else 0
    elapsed = t + 0.5 - start_time  # how many minutes passed since this student started checking
    if elapsed < 0:
        # Not started yet, so item is 1
        item = 1
    else:
        item = int(elapsed // h[i]) + 1
    res.append(item)

for x in res:
    print(x)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' t' (ID: 260)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020275000482797623
    2. ' =' → logprob: -4.270275115966797
    3. ',' → logprob: -5.145275115966797
    4. ' ' → logprob: -9.645275115966797
    5. ';' → logprob: -10.145275115966797
    6. '+' → logprob: -10.520275115966797
    7. '*' → logprob: -10.520275115966797
    8. ')' → logprob: -10.520275115966797
    9. '[' → logprob: -10.895275115966797
    10. '.' → logprob: -11.270275115966797

Token 4: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.5535557270050049
    2. 'map' → logprob: -1.3035557270050049
    3. ' input' → logprob: -2.803555727005005
    4. 'input' → logprob: -2.928555727005005
    5. ' ' → logprob: -3.928555727005005
    6. '0' → logprob: -4.178555488586426
    7. ' n' → logprob: -6.678555488586426
    8. 'int' → logprob: -7.053555488586426
    9. ' int' → logprob: -7.053555488586426
    10. '10' → logprob: -8.053555488586426

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0430138073861599
    2. '<|end|>' → logprob: -3.79301381111145
    3. '(str' → logprob: -5.293013572692871
    4. '(lambda' → logprob: -5.418013572692871
    5. '(int' → logprob: -5.418013572692871
    6. '```' → logprob: -5.918013572692871
    7. '<|end|>' → logprob: -7.168013572692871
    8. ')' → logprob: -8.043013572692871
    9. '(range' → logprob: -8.543013572692871
    10. '(eval' → logprob: -8.918013572692871

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.022586027160286903
    2. ')' → logprob: -4.272585868835449
    3. '(' → logprob: -5.147585868835449
    4. '(user' → logprob: -7.522585868835449
    5. '```' → logprob: -8.02258586883545
    6. 'input' → logprob: -8.14758586883545
    7. '(int' → logprob: -8.27258586883545
    8. '(n' → logprob: -8.64758586883545
    9. '(str' → logprob: -8.64758586883545
    10. '`)' → logprob: -8.77258586883545

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07973959296941757
    2. ' input' → logprob: -2.579739570617676
    3. '(input' → logprob: -7.079739570617676
    4. ')' → logprob: -12.204739570617676
    5. ',input' → logprob: -13.329739570617676
    6. '=input' → logprob: -15.204739570617676
    7. '(' → logprob: -15.579739570617676
    8. '```' → logprob: -16.204740524291992
    9. ' (' → logprob: -16.829740524291992
    10. '[input' → logprob: -17.079740524291992

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -1.0564581155776978
    2. '()' → logprob: -1.1814581155776978
    3. '(' → logprob: -1.5564581155776978
    4. ')' → logprob: -2.431457996368408
    5. '```' → logprob: -4.931457996368408
    6. '`()' → logprob: -5.056457996368408
    7. '(token' → logprob: -5.431457996368408
    8. '().' → logprob: -5.681457996368408
    9. '('' → logprob: -5.681457996368408
    10. '`)' → logprob: -5.931457996368408

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.002498609945178032
    2. 'strip' → logprob: -6.002498626708984
    3. 'rstrip' → logprob: -11.627498626708984
    4. ' split' → logprob: -12.002498626708984
    5. 'read' → logprob: -12.627498626708984
    6. ')' → logprob: -12.752498626708984
    7. '(split' → logprob: -13.502498626708984
    8. 'spl' → logprob: -15.877498626708984
    9. 'startswith' → logprob: -17.127498626708984
    10. 'decode' → logprob: -17.127498626708984

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.231381356716156
    2. '())' → logprob: -2.231381416320801
    3. '))' → logprob: -2.356381416320801
    4. '()' → logprob: -6.231381416320801
    5. '()))' → logprob: -6.231381416320801
    6. '`)' → logprob: -8.6063814163208
    7. '(' → logprob: -9.4813814163208
    8. '('' → logprob: -9.7313814163208
    9. '')' → logprob: -9.9813814163208
    10. ''))' → logprob: -11.1063814163208

Token 11: 'h' (ID: 71)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3053218722343445
    2. 'for' → logprob: -2.4303219318389893
    3. 'x' → logprob: -3.5553219318389893
    4. 'if' → logprob: -3.5553219318389893
    5. 's' → logprob: -3.6803219318389893
    6. '\n' → logprob: -3.8053219318389893
    7. '#' → logprob: -4.18032169342041
    8. '
' → logprob: -4.80532169342041
    9. ')' → logprob: -5.30532169342041
    10. '`' → logprob: -5.43032169342041

Token 12: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.42937958240509033
    2. ' =' → logprob: -1.9293795824050903
    3. '[' → logprob: -2.429379463195801
    4. '[i' → logprob: -2.679379463195801
    5. '=' → logprob: -3.929379463195801
    6. 't' → logprob: -4.679379463195801
    7. '[e' → logprob: -5.304379463195801
    8. ',' → logprob: -5.804379463195801
    9. 'i' → logprob: -6.179379463195801
    10. ' ' → logprob: -6.429379463195801

Token 13: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.41141489148139954
    2. 'int' → logprob: -2.536414861679077
    3. '0' → logprob: -3.036414861679077
    4. ' int' → logprob: -3.161414861679077
    5. ' [' → logprob: -3.161414861679077
    6. '[]' → logprob: -3.661414861679077
    7. '[' → logprob: -4.036415100097656
    8. ' []' → logprob: -4.036415100097656
    9. ' list' → logprob: -4.286415100097656
    10. ' ' → logprob: -4.536415100097656

Token 14: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0025324986781924963
    2. '0' → logprob: -6.002532482147217
    3. '(int' → logprob: -10.377532958984375
    4. ' int' → logprob: -11.502532958984375
    5. ']int' → logprob: -12.002532958984375
    6. 'map' → logprob: -12.252532958984375
    7. ']' → logprob: -13.377532958984375
    8. 'i' → logprob: -13.752532958984375
    9. '1' → logprob: -14.502532958984375
    10. '[int' → logprob: -14.627532958984375

Token 15: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.646617591381073
    2. '(input' → logprob: -1.2716176509857178
    3. '(x' → logprob: -1.6466176509857178
    4. '(i' → logprob: -6.021617412567139
    5. '()]' → logprob: -8.646617889404297
    6. ']' → logprob: -9.021617889404297
    7. '(a' → logprob: -9.146617889404297
    8. '()' → logprob: -10.021617889404297
    9. '(s' → logprob: -10.021617889404297
    10. '(

' → logprob: -10.021617889404297

Token 16: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00014001218369230628
    2. '()]' → logprob: -9.500140190124512
    3. '()' → logprob: -9.875140190124512
    4. '()))' → logprob: -11.875140190124512
    5. '()),' → logprob: -12.500140190124512
    6. ' ())' → logprob: -13.875140190124512
    7. '())
' → logprob: -14.000140190124512
    8. '().' → logprob: -14.875140190124512
    9. '());' → logprob: -15.875140190124512
    10. '())

' → logprob: -15.875140190124512

Token 17: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0071832300163805485
    2. ')]' → logprob: -5.007183074951172
    3. '()' → logprob: -8.882183074951172
    4. '())' → logprob: -9.132183074951172
    5. ']' → logprob: -9.257183074951172
    6. 'for' → logprob: -10.382183074951172
    7. ' )' → logprob: -10.632183074951172
    8. ' for' → logprob: -10.757183074951172
    9. ')])' → logprob: -11.132183074951172
    10. '()]' → logprob: -11.632183074951172

Token 18: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04426327347755432
    2. '(' → logprob: -3.2942633628845215
    3. ' ' → logprob: -5.7942633628845215
    4. '(range' → logprob: -6.9192633628845215
    5. 'range' → logprob: -7.0442633628845215
    6. '_' → logprob: -7.0442633628845215
    7. ' _' → logprob: -8.294262886047363
    8. ' (' → logprob: -9.669262886047363
    9. '_range' → logprob: -9.794262886047363
    10. ' in' → logprob: -10.669262886047363

Token 19: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.24062229692935944
    2. 'range' → logprob: -1.7406222820281982
    3. ' in' → logprob: -3.4906222820281982
    4. '(range' → logprob: -5.240622520446777
    5. '(' → logprob: -6.990622520446777
    6. 'in' → logprob: -7.115622520446777
    7. '(n' → logprob: -7.990622520446777
    8. 'ange' → logprob: -8.865622520446777
    9. '_' → logprob: -8.990622520446777
    10. '	range' → logprob: -9.615622520446777

Token 20: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001502598519437015
    2. ' range' → logprob: -6.501502513885498
    3. '(range' → logprob: -16.376502990722656
    4. ' ' → logprob: -16.751502990722656
    5. '	range' → logprob: -17.751502990722656
    6. 'ran' → logprob: -18.001502990722656
    7. 'r' → logprob: -18.126502990722656
    8. '  ' → logprob: -18.501502990722656
    9. '   ' → logprob: -18.626502990722656
    10. 't' → logprob: -18.626502990722656

Token 21: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.039898309856653214
    2. '(t' → logprob: -3.28989839553833
    3. '(' → logprob: -6.28989839553833
    4. '(nt' → logprob: -16.539897918701172
    5. ' (' → logprob: -16.914897918701172
    6. 'n' → logprob: -17.164897918701172
    7. '(s' → logprob: -17.164897918701172
    8. 't' → logprob: -17.539897918701172
    9. '(
' → logprob: -18.164897918701172
    10. '(range' → logprob: -18.289897918701172

Token 22: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0003045994380954653
    2. ')' → logprob: -8.375304222106934
    3. ']' → logprob: -9.625304222106934
    4. ')])' → logprob: -12.375304222106934
    5. '])]' → logprob: -13.500304222106934
    6. ' )' → logprob: -14.250304222106934
    7. '])' → logprob: -14.375304222106934
    8. '')]' → logprob: -14.625304222106934
    9. '))' → logprob: -15.000304222106934
    10. ')]
' → logprob: -15.875304222106934

Token 23: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.919041097164154
    2. 'd' → logprob: -1.6690411567687988
    3. 'dp' → logprob: -2.169041156768799
    4. 's' → logprob: -2.544041156768799
    5. 'h' → logprob: -3.169041156768799
    6. 'count' → logprob: -3.294041156768799
    7. 'max' → logprob: -3.419041156768799
    8. 'result' → logprob: -4.044041156768799
    9. 'ans' → logprob: -4.544041156768799
    10. 'c' → logprob: -4.919041156768799

Token 24: ' cum' (ID: 10023)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2008402347564697
    2. 'h' → logprob: -1.8258402347564697
    3. 'dp' → logprob: -1.8258402347564697
    4. 't' → logprob: -2.5758402347564697
    5. 'd' → logprob: -2.8258402347564697
    6. 'max' → logprob: -3.0758402347564697
    7. 'ans' → logprob: -3.3258402347564697
    8. 'f' → logprob: -3.8258402347564697
    9. 'result' → logprob: -3.9508402347564697
    10. 's' → logprob: -4.200839996337891

Token 25: '_time' (ID: 6425)
  Prédit: 'ulative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ulative' → logprob: -0.0023083386477082968
    2. '_sum' → logprob: -6.752308368682861
    3. 'ul' → logprob: -7.252308368682861
    4. 'sum' → logprob: -8.877307891845703
    5. '_' → logprob: -9.252307891845703
    6. 'u' → logprob: -9.377307891845703
    7. 'ulate' → logprob: -10.627307891845703
    8. 'm' → logprob: -10.752307891845703
    9. 'mul' → logprob: -11.377307891845703
    10. 'ulat' → logprob: -11.377307891845703

Token 26: '[i' (ID: 1768)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.251988023519516
    2. ' =' → logprob: -1.5019880533218384
    3. '_' → logprob: -10.001988410949707
    4. 's' → logprob: -11.876988410949707
    5. ',' → logprob: -12.501988410949707
    6. '[' → logprob: -13.501988410949707
    7. ']' → logprob: -14.626988410949707
    8. ')' → logprob: -15.251988410949707
    9. '_=' → logprob: -15.251988410949707
    10. ' ' → logprob: -15.501988410949707

Token 27: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005305142258293927
    2. ' ]' → logprob: -7.62553071975708
    3. ']=' → logprob: -10.625530242919922
    4. ']:' → logprob: -12.125530242919922
    5. '_]' → logprob: -12.500530242919922
    6. ':]' → logprob: -13.375530242919922
    7. '],' → logprob: -14.000530242919922
    8. '=' → logprob: -14.000530242919922
    9. '][' → logprob: -14.250530242919922
    10. 's' → logprob: -14.375530242919922

Token 28: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34961628913879395
    2. '=' → logprob: -1.224616289138794
    3. ',' → logprob: -8.099616050720215
    4. ':' → logprob: -8.599616050720215
    5. ' ' → logprob: -8.724616050720215
    6. 's' → logprob: -9.099616050720215
    7. '_' → logprob: -9.224616050720215
    8. ' +=' → logprob: -9.349616050720215
    9. ')' → logprob: -10.099616050720215
    10. '<|end|>' → logprob: -10.099616050720215

Token 29: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.07303465157747269
    2. ' cumulative' → logprob: -3.6980347633361816
    3. 'the' → logprob: -4.198034763336182
    4. ' a' → logprob: -4.323034763336182
    5. ' ' → logprob: -4.698034763336182
    6. ' an' → logprob: -5.948034763336182
    7. '_' → logprob: -6.448034763336182
    8. '<|end|>' → logprob: -7.198034763336182
    9. 'a' → logprob: -7.698034763336182
    10. ' time' → logprob: -7.698034763336182

Token 30: ' time' (ID: 1058)
  Prédit: ' cumulative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cumulative' → logprob: -0.9554591774940491
    2. 'c' → logprob: -1.0804591178894043
    3. 'time' → logprob: -2.3304591178894043
    4. ' time' → logprob: -2.5804591178894043
    5. ' total' → logprob: -3.5804591178894043
    6. 'total' → logprob: -3.5804591178894043
    7. 'minimum' → logprob: -3.7054591178894043
    8. ' minimum' → logprob: -4.580459117889404
    9. ' accumulated' → logprob: -5.580459117889404
    10. 'i' → logprob: -5.580459117889404

Token 31: ' when' (ID: 1261)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6544395089149475
    2. ' it' → logprob: -1.1544394493103027
    3. ' taken' → logprob: -3.1544394493103027
    4. ' required' → logprob: -3.4044394493103027
    5. ' ' → logprob: -3.5294394493103027
    6. ' needed' → logprob: -3.6544394493103027
    7. ' =' → logprob: -4.779439449310303
    8. '=' → logprob: -5.279439449310303
    9. 's' → logprob: -5.779439449310303
    10. ' for' → logprob: -6.154439449310303

Token 32: ' student' (ID: 6760)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3037779629230499
    2. 'the' → logprob: -2.0537779331207275
    3. ' h' → logprob: -3.3037779331207275
    4. 'h' → logprob: -3.4287779331207275
    5. ' i' → logprob: -4.428778171539307
    6. 'he' → logprob: -4.428778171539307
    7. ' ith' → logprob: -4.803778171539307
    8. ' you' → logprob: -5.178778171539307
    9. 'i' → logprob: -5.678778171539307
    10. ' we' → logprob: -5.928778171539307

Token 33: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06316439062356949
    2. 'i' → logprob: -3.188164472579956
    3. 's' → logprob: -3.938164472579956
    4. ' ' → logprob: -9.188164710998535
    5. '_i' → logprob: -9.313164710998535
    6. '`' → logprob: -9.563164710998535
    7. '_' → logprob: -10.063164710998535
    8. '[i' → logprob: -10.188164710998535
    9. ' s' → logprob: -10.438164710998535
    10. '```' → logprob: -10.813164710998535

Token 34: ' finishes' (ID: 48473)
  Prédit: ' finishes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' finishes' → logprob: -0.7297873497009277
    2. 's' → logprob: -2.1047873497009277
    3. ''s' → logprob: -2.1047873497009277
    4. ' starts' → logprob: -2.3547873497009277
    5. ' completes' → logprob: -2.7297873497009277
    6. '+' → logprob: -3.6047873497009277
    7. ' is' → logprob: -3.9797873497009277
    8. ' has' → logprob: -4.854787349700928
    9. '<|end|>' → logprob: -4.854787349700928
    10. ' can' → logprob: -5.229787349700928

Token 35: ' all' (ID: 722)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9404467940330505
    2. ' i' → logprob: -2.3154468536376953
    3. ' solving' → logprob: -2.3154468536376953
    4. 'i' → logprob: -2.6904468536376953
    5. 's' → logprob: -2.8154468536376953
    6. '+' → logprob: -2.9404468536376953
    7. '=' → logprob: -2.9404468536376953
    8. '_' → logprob: -4.190446853637695
    9. ' their' → logprob: -4.190446853637695
    10. 'the' → logprob: -4.315446853637695

Token 36: ' their' (ID: 1043)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6208529472351074
    2. ' the' → logprob: -1.7458529472351074
    3. 'tasks' → logprob: -2.7458529472351074
    4. 'their' → logprob: -3.3708529472351074
    5. 't' → logprob: -3.6208529472351074
    6. ' their' → logprob: -3.7458529472351074
    7. 'lect' → logprob: -4.120852947235107
    8. 'his' → logprob: -4.370852947235107
    9. ' exams' → logprob: -4.620852947235107
    10. 'ex' → logprob: -4.620852947235107

Token 37: ' check' (ID: 2371)
  Prédit: 'tasks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tasks' → logprob: -1.2844611406326294
    2. 'ex' → logprob: -1.6594611406326294
    3. 't' → logprob: -2.03446102142334
    4. 'home' → logprob: -2.78446102142334
    5. 'tests' → logprob: -2.90946102142334
    6. 'h' → logprob: -3.03446102142334
    7. 'lect' → logprob: -3.40946102142334
    8. 'assign' → logprob: -3.40946102142334
    9. 'previous' → logprob: -4.03446102142334
    10. 'pro' → logprob: -4.03446102142334

Token 38: 'ups' (ID: 14409)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.21003948152065277
    2. 'ing' → logprob: -2.3350393772125244
    3. 'points' → logprob: -3.3350393772125244
    4. 'in' → logprob: -3.4600393772125244
    5. '-in' → logprob: -4.4600396156311035
    6. '_' → logprob: -5.7100396156311035
    7. '_in' → logprob: -6.2100396156311035
    8. '-' → logprob: -6.3350396156311035
    9. 'point' → logprob: -6.4600396156311035
    10. 'ins' → logprob: -6.4600396156311035

Token 39: '
' (ID: 198)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.012224004603922367
    2. 'c' → logprob: -4.887224197387695
    3. '_' → logprob: -6.637224197387695
    4. '_c' → logprob: -6.887224197387695
    5. ' cum' → logprob: -7.637224197387695
    6. ',' → logprob: -7.637224197387695
    7. '```' → logprob: -7.887224197387695
    8. '
' → logprob: -8.512224197387695
    9. ':' → logprob: -8.512224197387695
    10. '=' → logprob: -9.262224197387695

Token 40: 'cum' (ID: 89165)
  Prédit: 'cum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.0013197619700804353
    2. 'c' → logprob: -7.501319885253906
    3. '
' → logprob: -8.001319885253906
    4. '```' → logprob: -9.126319885253906
    5. '_' → logprob: -9.251319885253906
    6. ' cum' → logprob: -9.501319885253906
    7. '_c' → logprob: -9.626319885253906
    8. '\' → logprob: -10.501319885253906
    9. '\n' → logprob: -11.376319885253906
    10. ',' → logprob: -12.251319885253906

Token 41: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.8550976164988242e-05
    2. '_t' → logprob: -11.125018119812012
    3. '_times' → logprob: -13.375018119812012
    4. '_tim' → logprob: -13.625018119812012
    5. '_' → logprob: -14.125018119812012
    6. ' _' → logprob: -16.000019073486328
    7. '_value' → logprob: -17.875019073486328
    8. '_Time' → logprob: -18.000019073486328
    9. '_line' → logprob: -18.375019073486328
    10. '_sum' → logprob: -18.375019073486328

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11550206691026688
    2. '=' → logprob: -2.240502119064331
    3. '[' → logprob: -5.990501880645752
    4. 's' → logprob: -9.86550235748291
    5. ' ' → logprob: -10.49050235748291
    6. ' =[' → logprob: -10.99050235748291
    7. '=[]' → logprob: -11.11550235748291
    8. '[i' → logprob: -11.61550235748291
    9. ']' → logprob: -11.61550235748291
    10. '[:]' → logprob: -11.61550235748291

Token 43: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1294020563364029
    2. ' [' → logprob: -2.5044021606445312
    3. '[h' → logprob: -3.2544021606445312
    4. '[t' → logprob: -7.379402160644531
    5. '[]' → logprob: -8.629402160644531
    6. 'h' → logprob: -8.754402160644531
    7. '[i' → logprob: -10.754402160644531
    8. ' h' → logprob: -11.129402160644531
    9. '[n' → logprob: -11.254402160644531
    10. ' []' → logprob: -11.379402160644531

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008888612501323223
    2. 'h' → logprob: -4.7588887214660645
    3. 't' → logprob: -8.508888244628906
    4. ' ' → logprob: -10.133888244628906
    5. ' h' → logprob: -12.133888244628906
    6. ']' → logprob: -12.383888244628906
    7. 'sum' → logprob: -12.383888244628906
    8. '(' → logprob: -12.571388244628906
    9. ')' → logprob: -12.946388244628906
    10. '-' → logprob: -13.633888244628906

Token 45: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013748762430623174
    2. ']*' → logprob: -7.3763747215271
    3. ' for' → logprob: -8.251375198364258
    4. ' ]' → logprob: -8.751375198364258
    5. ']*(' → logprob: -8.876375198364258
    6. 'for' → logprob: -9.501375198364258
    7. ',' → logprob: -10.251375198364258
    8. ')' → logprob: -10.376375198364258
    9. ')]' → logprob: -11.251375198364258
    10. ']+' → logprob: -11.251375198364258

Token 46: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.028841620311141014
    2. '(n' → logprob: -3.653841733932495
    3. '(' → logprob: -6.028841495513916
    4. ' n' → logprob: -10.028841972351074
    5. 't' → logprob: -10.403841972351074
    6. ' (' → logprob: -10.778841972351074
    7. '(t' → logprob: -11.028841972351074
    8. '100' → logprob: -13.216341972351074
    9. '	n' → logprob: -13.591341972351074
    10. ' ' → logprob: -13.653841972351074

Token 47: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6234919428825378
    2. '
' → logprob: -2.1234920024871826
    3. 'cum' → logprob: -2.1234920024871826
    4. ' for' → logprob: -2.3734920024871826
    5. '```' → logprob: -3.2484920024871826
    6. 'time' → logprob: -3.9984920024871826
    7. '\n' → logprob: -3.9984920024871826
    8. 't' → logprob: -3.9984920024871826
    9. '
' → logprob: -4.2484917640686035
    10. '\' → logprob: -4.6234917640686035

Token 48: 'for' (ID: 1938)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.3901340961456299
    2. 'for' → logprob: -1.8901340961456299
    3. '
' → logprob: -2.39013409614563
    4. 'time' → logprob: -3.89013409614563
    5. ' for' → logprob: -3.89013409614563
    6. '
' → logprob: -4.765133857727051
    7. 't' → logprob: -4.765133857727051
    8. ' 
' → logprob: -5.265133857727051
    9. 'c' → logprob: -5.765133857727051
    10. '```' → logprob: -5.890133857727051

Token 49: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2813921272754669
    2. 'i' → logprob: -1.4063920974731445
    3. ' range' → logprob: -9.531392097473145
    4. ' n' → logprob: -9.906392097473145
    5. ' t' → logprob: -10.406392097473145
    6. ' ' → logprob: -10.406392097473145
    7. '_' → logprob: -11.156392097473145
    8. 'n' → logprob: -11.656392097473145
    9. 't' → logprob: -12.031392097473145
    10. '(i' → logprob: -12.156392097473145

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01835736073553562
    2. 'in' → logprob: -4.018357276916504
    3. ' ' → logprob: -9.143357276916504
    4. '+' → logprob: -9.893357276916504
    5. '	in' → logprob: -11.143357276916504
    6. '  ' → logprob: -11.643357276916504
    7. ')' → logprob: -11.893357276916504
    8. '=' → logprob: -12.518357276916504
    9. ',' → logprob: -12.893357276916504
    10. '   ' → logprob: -13.393357276916504

Token 51: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06197025999426842
    2. 'range' → logprob: -2.8119702339172363
    3. ' ' → logprob: -13.561970710754395
    4. '	range' → logprob: -14.436970710754395
    5. ' xrange' → logprob: -14.936970710754395
    6. '(range' → logprob: -15.311970710754395
    7. ' ran' → logprob: -17.186969757080078
    8. ')' → logprob: -17.436969757080078
    9. '  ' → logprob: -17.686969757080078
    10. ' r' → logprob: -17.936969757080078

Token 52: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3870603144168854
    2. '(' → logprob: -1.137060284614563
    3. ' (' → logprob: -8.637060165405273
    4. '(i' → logprob: -12.262060165405273
    5. 'n' → logprob: -13.262060165405273
    6. '(len' → logprob: -13.887060165405273
    7. '(
' → logprob: -13.887060165405273
    8. '(t' → logprob: -14.012060165405273
    9. ' n' → logprob: -14.137060165405273
    10. ' ' → logprob: -14.762060165405273

Token 53: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008086714660748839
    2. ')' → logprob: -8.000808715820312
    3. '):
' → logprob: -8.250808715820312
    4. '+' → logprob: -9.375808715820312
    5. '-' → logprob: -9.750808715820312
    6. ' ):' → logprob: -10.500808715820312
    7. ':' → logprob: -10.625808715820312
    8. ']:' → logprob: -11.875808715820312
    9. ' ' → logprob: -12.750808715820312
    10. '):
' → logprob: -13.625808715820312

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005784447304904461
    2. ' if' → logprob: -6.005784511566162
    3. ' cum' → logprob: -6.755784511566162
    4. '    ' → logprob: -7.630784511566162
    5. 'cum' → logprob: -7.755784511566162
    6. '```' → logprob: -8.130784034729004
    7. ' ' → logprob: -8.630784034729004
    8. '<|end|>' → logprob: -9.505784034729004
    9. '  ' → logprob: -9.630784034729004
    10. 'if' → logprob: -9.630784034729004

Token 55: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.19402533769607544
    2. '   ' → logprob: -2.9440252780914307
    3. 'h' → logprob: -3.0690252780914307
    4. ' if' → logprob: -3.1940252780914307
    5. 't' → logprob: -3.9440252780914307
    6. 'cum' → logprob: -4.44402551651001
    7. ' h' → logprob: -6.56902551651001
    8. ' t' → logprob: -6.56902551651001
    9. ' cum' → logprob: -7.19402551651001
    10. '```' → logprob: -8.194025039672852

Token 56: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0029242297168821096
    2. 'i' → logprob: -5.87792444229126
    3. '   ' → logprob: -9.127923965454102
    4. '	i' → logprob: -11.877923965454102
    5. '    ' → logprob: -13.627923965454102
    6. ' ' → logprob: -14.377923965454102
    7. '0' → logprob: -14.502923965454102
    8. '  ' → logprob: -14.627923965454102
    9. '>' → logprob: -15.002923965454102
    10. '(i' → logprob: -15.377923965454102

Token 57: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.634806752204895
    2. ' ==' → logprob: -0.759806752204895
    3. '>' → logprob: -6.6348066329956055
    4. ' >' → logprob: -7.5098066329956055
    5. '=' → logprob: -8.759806632995605
    6. '0' → logprob: -9.384806632995605
    7. '===' → logprob: -10.509806632995605
    8. ' =' → logprob: -11.009806632995605
    9. ' ' → logprob: -11.259806632995605
    10. ':' → logprob: -11.509806632995605

Token 58: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.57594233751297
    2. ' ' → logprob: -0.82594233751297
    3. 'n' → logprob: -14.450942039489746
    4. '   ' → logprob: -14.763442039489746
    5. '  ' → logprob: -15.138442039489746
    6. '<|end|>' → logprob: -15.325942039489746
    7. ' ' → logprob: -15.450942039489746
    8. 't' → logprob: -15.888442039489746
    9. ')' → logprob: -16.013442993164062
    10. ' t' → logprob: -16.075942993164062

Token 59: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004882152716163546
    2. ' ' → logprob: -7.62548828125
    3. '   ' → logprob: -16.50048828125
    4. 'n' → logprob: -17.18798828125
    5. '00' → logprob: -17.62548828125
    6. '۰' → logprob: -17.75048828125
    7. '  ' → logprob: -18.25048828125
    8. 't' → logprob: -18.31298828125
    9. ')' → logprob: -18.50048828125
    10. 'o' → logprob: -18.56298828125

Token 60: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015327129513025284
    2. ':
' → logprob: -6.501532554626465
    3. '):' → logprob: -11.001532554626465
    4. ':c' → logprob: -12.001532554626465
    5. '):
' → logprob: -13.501532554626465
    6. ':

' → logprob: -13.626532554626465
    7. '   ' → logprob: -13.876532554626465
    8. ')' → logprob: -14.126532554626465
    9. '=' → logprob: -14.126532554626465
    10. ' :' → logprob: -14.126532554626465

Token 61: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3917432725429535
    2. '       ' → logprob: -2.0167431831359863
    3. 'cum' → logprob: -2.6417431831359863
    4. '   ' → logprob: -2.7667431831359863
    5. ' cum' → logprob: -3.0167431831359863
    6. ':
' → logprob: -6.266743183135986
    7. '	c' → logprob: -6.516743183135986
    8. '    ' → logprob: -7.641743183135986
    9. '):' → logprob: -7.766743183135986
    10. ':c' → logprob: -7.891743183135986

Token 62: ' cum' (ID: 10023)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' (adapté à ' cum') → logprob: -0.6045033931732178
    2. 'h' → logprob: -0.8545033931732178
    3. ' cum' → logprob: -4.229503631591797
    4. ' h' → logprob: -4.979503631591797
    5. '   ' → logprob: -5.104503631591797
    6. 'c' → logprob: -8.729503631591797
    7. 't' → logprob: -9.229503631591797
    8. '       ' → logprob: -9.354503631591797
    9. '	h' → logprob: -10.479503631591797
    10. '=' → logprob: -10.729503631591797

Token 63: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -2.45848218582978e-06
    2. '_t' → logprob: -13.75000286102295
    3. '_' → logprob: -14.62500286102295
    4. '_tim' → logprob: -14.87500286102295
    5. '_times' → logprob: -15.87500286102295
    6. 'time' → logprob: -16.375001907348633
    7. '_TIME' → logprob: -17.375001907348633
    8. '_code' → logprob: -17.500001907348633
    9. ' _' → logprob: -17.500001907348633
    10. '_token' → logprob: -17.625001907348633

Token 64: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.23732390999794006
    2. '[' → logprob: -1.6123238801956177
    3. ' =' → logprob: -5.112323760986328
    4. '=' → logprob: -5.362323760986328
    5. ']' → logprob: -7.237323760986328
    6. ' [' → logprob: -8.987323760986328
    7. '[h' → logprob: -9.987323760986328
    8. ')' → logprob: -10.237323760986328
    9. '[s' → logprob: -10.237323760986328
    10. '][' → logprob: -10.487323760986328

Token 65: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14937637746334076
    2. '=' → logprob: -2.149376392364502
    3. ' =' → logprob: -4.149376392364502
    4. ']=' → logprob: -5.149376392364502
    5. ')' → logprob: -8.524375915527344
    6. ']+=' → logprob: -8.524375915527344
    7. ' ]' → logprob: -8.649375915527344
    8. ' +=' → logprob: -11.149375915527344
    9. '+=' → logprob: -11.274375915527344
    10. ']+' → logprob: -12.024375915527344

Token 66: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6329733729362488
    2. ' =' → logprob: -0.7579733729362488
    3. ' +=' → logprob: -8.257973670959473
    4. '+=' → logprob: -9.132973670959473
    5. '=h' → logprob: -12.507973670959473
    6. 'h' → logprob: -14.132973670959473
    7. '=int' → logprob: -14.382973670959473
    8. '+' → logprob: -14.757973670959473
    9. ')' → logprob: -15.757973670959473
    10. '>' → logprob: -15.882973670959473

Token 67: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0032034965697675943
    2. ' h' → logprob: -5.753203392028809
    3. '   ' → logprob: -11.128203392028809
    4. '+h' → logprob: -13.128203392028809
    5. '	h' → logprob: -13.253203392028809
    6. ' ' → logprob: -13.378203392028809
    7. 't' → logprob: -13.628203392028809
    8. 'max' → logprob: -14.628203392028809
    9. '  ' → logprob: -14.690703392028809
    10. '"h' → logprob: -14.815703392028809

Token 68: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.008617881685495377
    2. '[' → logprob: -4.758617877960205
    3. ' [' → logprob: -13.133618354797363
    4. 'i' → logprob: -15.008618354797363
    5. '[h' → logprob: -16.008617401123047
    6. '[I' → logprob: -16.008617401123047
    7. ' ' → logprob: -16.258617401123047
    8. '[t' → logprob: -16.383617401123047
    9. '```' → logprob: -16.508617401123047
    10. '\[' → logprob: -16.633617401123047

Token 69: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6890794634819031
    2. ' +' → logprob: -1.8140795230865479
    3. '+' → logprob: -1.9390795230865479
    4. ')' → logprob: -2.189079523086548
    5. ']+' → logprob: -3.439079523086548
    6. ' ]' → logprob: -3.689079523086548
    7. ' ' → logprob: -4.564079284667969
    8. ' )' → logprob: -5.314079284667969
    9. ')+' → logprob: -6.314079284667969
    10. '<|end|>' → logprob: -7.189079284667969

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5603860020637512
    2. ' else' → logprob: -1.0603859424591064
    3. 'else' → logprob: -2.5603859424591064
    4. '<|end|>' → logprob: -5.6853861808776855
    5. 'elif' → logprob: -7.4353861808776855
    6. ' elif' → logprob: -7.5603861808776855
    7. '	else' → logprob: -7.5603861808776855
    8. '	elif' → logprob: -9.810385704040527
    9. '  ' → logprob: -9.810385704040527
    10. '<|end|>' → logprob: -10.060385704040527

Token 71: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.13103190064430237
    2. ' else' → logprob: -2.1310319900512695
    3. 'elif' → logprob: -5.6310319900512695
    4. '   ' → logprob: -7.8810319900512695
    5. ' elif' → logprob: -9.00603199005127
    6. '	else' → logprob: -12.25603199005127
    7. ')' → logprob: -14.00603199005127
    8. ' ' → logprob: -14.13103199005127
    9. '```' → logprob: -14.38103199005127
    10. '_else' → logprob: -14.50603199005127

Token 72: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.041255686432123184
    2. ':
' → logprob: -3.4162557125091553
    3. ' cum' → logprob: -5.666255474090576
    4. '       ' → logprob: -5.916255474090576
    5. 'cum' → logprob: -7.166255474090576
    6. '   ' → logprob: -9.041255950927734
    7. ' :
' → logprob: -9.291255950927734
    8. ' :' → logprob: -9.416255950927734
    9. '<|end|>' → logprob: -9.416255950927734
    10. '):
' → logprob: -10.166255950927734

Token 73: '       ' (ID: 309)
  Prédit: ' cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cum' → logprob: -0.2476731240749359
    2. 'cum' → logprob: -1.6226731538772583
    3. ' max' → logprob: -3.9976730346679688
    4. 'max' → logprob: -6.372673034667969
    5. '       ' → logprob: -6.622673034667969
    6. ' min' → logprob: -7.747673034667969
    7. 'min' → logprob: -9.872673034667969
    8. 'c' → logprob: -10.747673034667969
    9. '        ' → logprob: -11.310173034667969
    10. ' cumulative' → logprob: -11.372673034667969

Token 74: ' cum' (ID: 10023)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5553086400032043
    2. ' max' → logprob: -1.5553085803985596
    3. 'cum' (adapté à ' cum') → logprob: -1.6803085803985596
    4. ' cum' → logprob: -3.5553085803985596
    5. 'min' → logprob: -9.80530834197998
    6. 'c' → logprob: -11.80530834197998
    7. ' min' → logprob: -11.80530834197998
    8. 'abs' → logprob: -12.18030834197998
    9. '   ' → logprob: -12.30530834197998
    10. '       ' → logprob: -12.55530834197998

Token 75: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -15.250000953674316
    3. '_tim' → logprob: -15.875000953674316
    4. '_t' → logprob: -17.0
    5. '_code' → logprob: -17.25
    6. '   ' → logprob: -17.625
    7. '_times' → logprob: -17.75
    8. 'time' → logprob: -17.875
    9. '_TIME' → logprob: -18.25
    10. '```' → logprob: -18.5

Token 76: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001422770437784493
    2. '[' → logprob: -8.875142097473145
    3. '[I' → logprob: -13.500142097473145
    4. ' [' → logprob: -15.875142097473145
    5. '[:]' → logprob: -15.875142097473145
    6. '[max' → logprob: -16.12514305114746
    7. '[j' → logprob: -16.12514305114746
    8. '```' → logprob: -16.37514305114746
    9. '\[' → logprob: -16.75014305114746
    10. '[ii' → logprob: -16.87514305114746

Token 77: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007810443174093962
    2. ' ]' → logprob: -5.507810592651367
    3. ']=' → logprob: -5.882810592651367
    4. '-' → logprob: -7.632810592651367
    5. '=' → logprob: -9.132810592651367
    6. ']+' → logprob: -9.632810592651367
    7. ']>=' → logprob: -9.632810592651367
    8. ']+=' → logprob: -10.132810592651367
    9. ']>' → logprob: -10.257810592651367
    10. ')]' → logprob: -10.507810592651367

Token 78: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12699352204799652
    2. ' =' → logprob: -2.126993417739868
    3. '=max' → logprob: -9.876993179321289
    4. '+=' → logprob: -11.626993179321289
    5. ' +=' → logprob: -13.251993179321289
    6. '=

' → logprob: -14.501993179321289
    7. '>' → logprob: -14.626993179321289
    8. '=min' → logprob: -14.751993179321289
    9. ' ' → logprob: -15.251993179321289
    10. '=
' → logprob: -15.251993179321289

Token 79: ' cum' (ID: 10023)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.17972013354301453
    2. 'max' → logprob: -1.929720163345337
    3. ' cum' → logprob: -4.304719924926758
    4. 'cum' → logprob: -5.179719924926758
    5. ' min' → logprob: -10.054719924926758
    6. 'min' → logprob: -10.429719924926758
    7. '	max' → logprob: -10.804719924926758
    8. ' ' → logprob: -10.804719924926758
    9. ' ' → logprob: -11.554719924926758
    10. 'c' → logprob: -11.742219924926758

Token 80: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -6.749814019713085e-06
    2. '_' → logprob: -12.500006675720215
    3. '_tim' → logprob: -13.375006675720215
    4. '_t' → logprob: -14.000006675720215
    5. '_times' → logprob: -15.625006675720215
    6. 'time' → logprob: -16.37500762939453
    7. ' _' → logprob: -16.62500762939453
    8. '_ut' → logprob: -17.37500762939453
    9. '_type' → logprob: -17.62500762939453
    10. '\' → logprob: -17.62500762939453

Token 81: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.869017852295656e-06
    2. '[' → logprob: -12.000006675720215
    3. 'i' → logprob: -15.750006675720215
    4. '[-' → logprob: -16.12500762939453
    5. '[j' → logprob: -16.62500762939453
    6. ' [' → logprob: -16.87500762939453
    7. '```' → logprob: -16.87500762939453
    8. '[I' → logprob: -17.12500762939453
    9. '\[' → logprob: -17.87500762939453
    10. '[idx' → logprob: -18.00000762939453

Token 82: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0023536451626569033
    2. '[i' → logprob: -6.252353668212891
    3. '[-' → logprob: -7.877353668212891
    4. ' -' → logprob: -10.87735366821289
    5. '[' → logprob: -11.12735366821289
    6. '−' → logprob: -12.62735366821289
    7. '1' → logprob: -12.87735366821289
    8. ']' → logprob: -13.50235366821289
    9. 'i' → logprob: -13.50235366821289
    10. '```' → logprob: -13.87735366821289

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8550976164988242e-05
    2. ']' → logprob: -11.000018119812012
    3. 'i' → logprob: -13.625018119812012
    4. ' ' → logprob: -14.625018119812012
    5. '```' → logprob: -16.125019073486328
    6. '   ' → logprob: -18.250019073486328
    7. ')' → logprob: -18.375019073486328
    8. ']+' → logprob: -18.562519073486328
    9. '2' → logprob: -19.062519073486328
    10. '１' → logprob: -19.312519073486328

Token 84: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.142722487449646
    2. ' +' → logprob: -2.0177226066589355
    3. '+t' → logprob: -11.142722129821777
    4. ' ' → logprob: -11.517722129821777
    5. ')' → logprob: -12.017722129821777
    6. '+h' → logprob: -12.392722129821777
    7. ' plus' → logprob: -12.767722129821777
    8. ')+' → logprob: -13.017722129821777
    9. ' )' → logprob: -14.142722129821777
    10. '+c' → logprob: -14.392722129821777

Token 85: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08926202356815338
    2. ' +' → logprob: -2.464262008666992
    3. '+h' → logprob: -8.214262008666992
    4. '+t' → logprob: -9.964262008666992
    5. ' plus' → logprob: -13.839262008666992
    6. '+
' → logprob: -13.964262008666992
    7. '+c' → logprob: -14.839262008666992
    8. ' ' → logprob: -14.839262008666992
    9. '+i' → logprob: -15.339262008666992
    10. '＋' → logprob: -15.339262008666992

Token 86: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.2568711042404175
    2. ' h' → logprob: -1.5068711042404175
    3. ' max' → logprob: -5.881871223449707
    4. 'max' → logprob: -6.756871223449707
    5. ' t' → logprob: -8.006871223449707
    6. 't' → logprob: -8.006871223449707
    7. ' ' → logprob: -8.756871223449707
    8. ' min' → logprob: -10.006871223449707
    9. 'min' → logprob: -11.131871223449707
    10. '"' → logprob: -11.256871223449707

Token 87: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00018458699923940003
    2. '[' → logprob: -8.625185012817383
    3. '```' → logprob: -12.500185012817383
    4. '[
' → logprob: -14.875185012817383
    5. '\[' → logprob: -15.250185012817383
    6. '[idx' → logprob: -16.375185012817383
    7. '[ii' → logprob: -16.750185012817383
    8. '[ind' → logprob: -17.000185012817383
    9. ' [' → logprob: -17.000185012817383
    10. '[j' → logprob: -17.125185012817383

Token 88: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6821357607841492
    2. '<|end|>' → logprob: -0.8071357607841492
    3. ']' → logprob: -3.182135820388794
    4. '}' → logprob: -5.807135581970215
    5. '<|end|>' → logprob: -5.807135581970215
    6. '```' → logprob: -8.307135581970215
    7. '
' → logprob: -8.432135581970215
    8. ' ' → logprob: -9.682135581970215
    9. '   ' → logprob: -9.807135581970215
    10. '+' → logprob: -10.182135581970215

Token 89: 'res' (ID: 430)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5024866461753845
    2. 'for' → logprob: -1.0024867057800293
    3. 'if' → logprob: -5.752486705780029
    4. '
' → logprob: -5.752486705780029
    5. '\n' → logprob: -5.877486705780029
    6. ' for' → logprob: -6.002486705780029
    7. 'while' → logprob: -6.002486705780029
    8. 'print' → logprob: -6.127486705780029
    9. 'i' → logprob: -6.127486705780029
    10. 't' → logprob: -6.252486705780029

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.015607744455337524
    2. '=' → logprob: -4.265607833862305
    3. '[' → logprob: -7.640607833862305
    4. 's' → logprob: -7.890607833862305
    5. ' ' → logprob: -8.640607833862305
    6. '_' → logprob: -8.765607833862305
    7. '[:]' → logprob: -9.015607833862305
    8. ' =[' → logprob: -10.515607833862305
    9. '[]' → logprob: -10.765607833862305
    10. '=[]' → logprob: -11.265607833862305

Token 91: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1259206533432007
    2. '[' → logprob: -1.1259206533432007
    3. '[]' → logprob: -1.3759206533432007
    4. 'cum' → logprob: -3.3759207725524902
    5. '[max' → logprob: -4.37592077255249
    6. '[c' → logprob: -5.12592077255249
    7. '[n' → logprob: -5.12592077255249
    8. '[t' → logprob: -5.37592077255249
    9. '[min' → logprob: -5.37592077255249
    10. '["' → logprob: -5.62592077255249

Token 92: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007179115782491863
    2. 'current' → logprob: -8.000718116760254
    3. 'wait' → logprob: -9.500718116760254
    4. 'start' → logprob: -9.625718116760254
    5. 'time' → logprob: -9.750718116760254
    6. 'last' → logprob: -10.375718116760254
    7. 'i' → logprob: -10.625718116760254
    8. 'while' → logprob: -11.000718116760254
    9. 'waiting' → logprob: -11.000718116760254
    10. 'curr' → logprob: -11.125718116760254

Token 93: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05010412260890007
    2. 'i' → logprob: -3.0501041412353516
    3. '_' → logprob: -7.300104141235352
    4. ' _' → logprob: -7.550104141235352
    5. ' ' → logprob: -8.800104141235352
    6. ' j' → logprob: -10.300104141235352
    7. '_i' → logprob: -10.425104141235352
    8. ' t' → logprob: -10.550104141235352
    9. ' student' → logprob: -11.425104141235352
    10. '	i' → logprob: -11.550104141235352

Token 94: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04052606597542763
    2. 'in' → logprob: -3.2905261516571045
    3. ' ' → logprob: -6.040525913238525
    4. '  ' → logprob: -9.915526390075684
    5. 'range' → logprob: -10.790526390075684
    6. 'n' → logprob: -11.790526390075684
    7. '	in' → logprob: -11.915526390075684
    8. ',' → logprob: -11.915526390075684
    9. '   ' → logprob: -13.290526390075684
    10. ' range' → logprob: -13.540526390075684

Token 95: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02057785540819168
    2. ' range' → logprob: -3.895577907562256
    3. '(range' → logprob: -10.520577430725098
    4. 'r' → logprob: -12.895577430725098
    5. ' ' → logprob: -13.145577430725098
    6. 'ran' → logprob: -13.895577430725098
    7. ')' → logprob: -13.895577430725098
    8. '   ' → logprob: -14.520577430725098
    9. '	range' → logprob: -14.770577430725098
    10. '  ' → logprob: -15.270577430725098

Token 96: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.016096075996756554
    2. '(' → logprob: -4.141096115112305
    3. ' (' → logprob: -9.891096115112305
    4. '(t' → logprob: -12.516096115112305
    5. ' n' → logprob: -12.766096115112305
    6. '(
' → logprob: -12.891096115112305
    7. 'n' → logprob: -14.266096115112305
    8. '(s' → logprob: -14.766096115112305
    9. '(len' → logprob: -15.391096115112305
    10. ')' → logprob: -16.141096115112305

Token 97: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001171056181192398
    2. ' ):' → logprob: -7.501171112060547
    3. '+' → logprob: -8.001171112060547
    4. '):
' → logprob: -8.751171112060547
    5. ')' → logprob: -9.376171112060547
    6. '-' → logprob: -10.501171112060547
    7. ':' → logprob: -12.126171112060547
    8. '   ' → logprob: -13.751171112060547
    9. ',' → logprob: -14.126171112060547
    10. '+n' → logprob: -14.251171112060547

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08543887734413147
    2. ' res' → logprob: -2.5854389667510986
    3. ' if' → logprob: -5.2104387283325195
    4. 'res' → logprob: -7.2104387283325195
    5. '    
' → logprob: -9.33543872833252
    6. ' ' → logprob: -9.58543872833252
    7. 'if' → logprob: -10.08543872833252
    8. '```' → logprob: -11.08543872833252
    9. '
' → logprob: -11.21043872833252
    10. '    ' → logprob: -11.33543872833252

Token 99: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0577139854431152
    2. 'res' → logprob: -1.1827139854431152
    3. '   ' → logprob: -1.6827139854431152
    4. ' if' → logprob: -2.4327139854431152
    5. ' res' → logprob: -3.3077139854431152
    6. 'time' → logprob: -4.557713985443115
    7. 'finish' → logprob: -5.557713985443115
    8. 'rest' → logprob: -5.932713985443115
    9. 'start' → logprob: -6.182713985443115
    10. ' time' → logprob: -6.182713985443115

Token 100: ' find' (ID: 1646)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8146533966064453
    2. 'res' → logprob: -1.1896533966064453
    3. 'finish' → logprob: -2.4396533966064453
    4. 'start' → logprob: -2.8146533966064453
    5. 'wait' → logprob: -3.1896533966064453
    6. 'time' → logprob: -4.064653396606445
    7. '   ' → logprob: -4.814653396606445
    8. 'end' → logprob: -5.314653396606445
    9. ' res' → logprob: -5.564653396606445
    10. ' if' → logprob: -5.689653396606445

Token 101: ' how' (ID: 1495)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -1.4768399000167847
    2. ' the' → logprob: -1.7268399000167847
    3. ' max' → logprob: -2.476840019226074
    4. 'j' → logprob: -2.726840019226074
    5. '(' → logprob: -2.851840019226074
    6. 'time' → logprob: -2.976840019226074
    7. 'the' → logprob: -3.351840019226074
    8. ' out' → logprob: -3.476840019226074
    9. ' earliest' → logprob: -3.601840019226074
    10. ' ' → logprob: -3.726840019226074

Token 102: ' many' (ID: 1991)
  Prédit: ' many'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' many' → logprob: -0.46780920028686523
    2. ' much' → logprob: -1.3428092002868652
    3. 'many' → logprob: -3.4678092002868652
    4. '   ' → logprob: -3.5928092002868652
    5. ' long' → logprob: -3.7178092002868652
    6. 'much' → logprob: -4.092809200286865
    7. ' far' → logprob: -5.342809200286865
    8. '    ' → logprob: -5.467809200286865
    9. 'long' → logprob: -5.967809200286865
    10. ' ' → logprob: -8.217809677124023

Token 103: ' items' (ID: 4732)
  Prédit: 'students'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'students' → logprob: -1.1545833349227905
    2. ' students' → logprob: -1.7795833349227905
    3. 'res' → logprob: -2.52958345413208
    4. ' can' → logprob: -2.65458345413208
    5. ' res' → logprob: -3.15458345413208
    6. ' cum' → logprob: -3.15458345413208
    7. 'cum' → logprob: -3.40458345413208
    8. 'times' → logprob: -3.65458345413208
    9. ' i' → logprob: -3.90458345413208
    10. 'i' → logprob: -4.02958345413208

Token 104: ' have' (ID: 679)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.207309603691101
    2. '_completed' → logprob: -1.457309603691101
    3. '   ' → logprob: -2.5823097229003906
    4. ' that' → logprob: -2.7073097229003906
    5. ' completed' → logprob: -2.7073097229003906
    6. 'completed' → logprob: -3.5823097229003906
    7. ' i' → logprob: -3.9573097229003906
    8. '_finished' → logprob: -3.9573097229003906
    9. ' if' → logprob: -4.082309722900391
    10. ' in' → logprob: -4.207309722900391

Token 105: ' been' (ID: 1339)
  Prédit: ' been'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' been' → logprob: -0.5383578538894653
    2. ' cum' → logprob: -1.9133578538894653
    3. 'cum' → logprob: -2.913357734680176
    4. ' res' → logprob: -3.163357734680176
    5. ' finished' → logprob: -3.663357734680176
    6. 'c' → logprob: -4.163357734680176
    7. 'been' → logprob: -4.163357734680176
    8. 't' → logprob: -4.288357734680176
    9. '```' → logprob: -4.413357734680176
    10. 'finished' → logprob: -4.850857734680176

Token 106: ' completed' (ID: 11121)
  Prédit: ' checked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' checked' → logprob: -1.235913872718811
    2. ' completed' → logprob: -1.360913872718811
    3. 'completed' → logprob: -1.735913872718811
    4. ' processed' → logprob: -2.4859137535095215
    5. 'checked' → logprob: -2.8609137535095215
    6. 'processed' → logprob: -3.1109137535095215
    7. 'finished' → logprob: -3.7359137535095215
    8. ' finished' → logprob: -4.3609137535095215
    9. 't' → logprob: -4.7359137535095215
    10. '```' → logprob: -5.3609137535095215

Token 107: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5730265974998474
    2. ' while' → logprob: -1.6980266571044922
    3. ' by' → logprob: -1.9480266571044922
    4. ' so' → logprob: -3.198026657104492
    5. ' completed' → logprob: -3.948026657104492
    6. 'while' → logprob: -4.323026657104492
    7. ' at' → logprob: -4.573026657104492
    8. ' before' → logprob: -4.823026657104492
    9. ' up' → logprob: -5.698026657104492
    10. 'completed' → logprob: -5.948026657104492

Token 108: ' student' (ID: 6760)
  Prédit: ' cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cum' → logprob: -0.4034356474876404
    2. 'cum' → logprob: -1.5284357070922852
    3. ' res' → logprob: -2.903435707092285
    4. ' i' → logprob: -4.153435707092285
    5. 'res' → logprob: -4.403435707092285
    6. 'i' → logprob: -4.778435707092285
    7. ' t' → logprob: -4.778435707092285
    8. ' the' → logprob: -6.153435707092285
    9. 't' → logprob: -6.153435707092285
    10. '   ' → logprob: -6.278435707092285

Token 109: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.47222083806991577
    2. '   ' → logprob: -2.2222208976745605
    3. 'i' → logprob: -2.8472208976745605
    4. ' t' → logprob: -2.9722208976745605
    5. ' j' → logprob: -3.8472208976745605
    6. 's' → logprob: -4.0972208976745605
    7. ' cum' → logprob: -4.2222208976745605
    8. 't' → logprob: -4.4722208976745605
    9. 'cum' → logprob: -4.5972208976745605
    10. 'res' → logprob: -4.7222208976745605

Token 110: ' at' (ID: 540)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07612590491771698
    2. '
' → logprob: -3.5761258602142334
    3. ' completed' → logprob: -4.2011260986328125
    4. ' while' → logprob: -4.3261260986328125
    5. '```' → logprob: -5.8261260986328125
    6. 'completed' → logprob: -6.4511260986328125
    7. ' for' → logprob: -6.5761260986328125
    8. ' at' → logprob: -6.8261260986328125
    9. ',' → logprob: -6.8261260986328125
    10. ' if' → logprob: -7.0761260986328125

Token 111: ' time' (ID: 1058)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.8437106609344482
    2. ' cum' → logprob: -1.0937106609344482
    3. 'cum' → logprob: -2.2187106609344482
    4. 't' → logprob: -2.7187106609344482
    5. ' max' → logprob: -3.5937106609344482
    6. ' res' → logprob: -4.843710899353027
    7. ' i' → logprob: -5.218710899353027
    8. 'max' → logprob: -5.968710899353027
    9. '0' → logprob: -6.093710899353027
    10. ' time' → logprob: -6.593710899353027

Token 112: ' t' (ID: 260)
  Prédit: ' cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cum' → logprob: -0.8057035207748413
    2. ' t' → logprob: -1.1807035207748413
    3. 'cum' → logprob: -2.055703639984131
    4. ' i' → logprob: -3.430703639984131
    5. 't' → logprob: -4.055703639984131
    6. '   ' → logprob: -4.055703639984131
    7. ' ' → logprob: -4.430703639984131
    8. ' (' → logprob: -5.180703639984131
    9. ' res' → logprob: -5.305703639984131
    10. ' '' → logprob: -5.430703639984131

Token 113: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17538808286190033
    2. '
' → logprob: -2.4253880977630615
    3. '    
' → logprob: -4.675387859344482
    4. '\n' → logprob: -4.675387859344482
    5. ' 
' → logprob: -4.925387859344482
    6. ' if' → logprob: -5.050387859344482
    7. ' ' → logprob: -5.050387859344482
    8. ':' → logprob: -5.300387859344482
    9. '    ' → logprob: -5.425387859344482
    10. '  
' → logprob: -5.800387859344482

Token 114: 'starting' (ID: 78149)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -1.2647793292999268
    2. ')' → logprob: -1.6397793292999268
    3. ' t' → logprob: -1.8897793292999268
    4. ' )' → logprob: -2.5147793292999268
    5. 't' → logprob: -2.6397793292999268
    6. 'min' → logprob: -2.7647793292999268
    7. ' ' → logprob: -3.2647793292999268
    8. '   ' → logprob: -3.6397793292999268
    9. ' if' → logprob: -4.264779090881348
    10. '1' → logprob: -4.639779090881348

Token 115: ' from' (ID: 591)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5270589590072632
    2. ')' → logprob: -1.4020589590072632
    3. ' =' → logprob: -2.0270590782165527
    4. ' )' → logprob: -5.277059078216553
    5. ' from' → logprob: -5.527059078216553
    6. 'from' → logprob: -5.652059078216553
    7. '   ' → logprob: -5.902059078216553
    8. ':' → logprob: -6.277059078216553
    9. '+' → logprob: -6.402059078216553
    10. ',' → logprob: -6.652059078216553

Token 116: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9142517447471619
    2. ' t' → logprob: -1.9142518043518066
    3. ' max' → logprob: -1.9142518043518066
    4. ' cum' → logprob: -2.9142518043518066
    5. ')' → logprob: -3.1642518043518066
    6. 't' → logprob: -3.2892518043518066
    7. 'cum' → logprob: -3.4142518043518066
    8. ' i' → logprob: -3.5392518043518066
    9. ' ' → logprob: -3.6642518043518066
    10. 'max' → logprob: -3.7892518043518066

Token 117: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5349980592727661
    2. 'max' → logprob: -1.6599980592727661
    3. 't' → logprob: -2.1599979400634766
    4. ' max' → logprob: -3.4099979400634766
    5. 'cum' → logprob: -3.5349979400634766
    6. 'i' → logprob: -4.409997940063477
    7. ' t' → logprob: -4.659997940063477
    8. ')' → logprob: -4.909997940063477
    9. ' cum' → logprob: -5.534997940063477
    10. ' i' → logprob: -6.034997940063477

Token 118: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4316597878932953
    2. ' )' → logprob: -1.1816598176956177
    3. '   ' → logprob: -4.306659698486328
    4. '):' → logprob: -4.431659698486328
    5. '+' → logprob: -4.556659698486328
    6. ' ' → logprob: -6.306659698486328
    7. ' ):' → logprob: -6.681659698486328
    8. ':' → logprob: -6.806659698486328
    9. ' +' → logprob: -7.431659698486328
    10. '  ' → logprob: -7.931659698486328

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03533486649394035
    2. '    ' → logprob: -4.660335063934326
    3. '[' → logprob: -4.785335063934326
    4. ' ' → logprob: -5.285335063934326
    5. ':' → logprob: -5.910335063934326
    6. '    
' → logprob: -6.035335063934326
    7. ' 
' → logprob: -6.285335063934326
    8. '     
' → logprob: -7.035335063934326
    9. '(' → logprob: -7.910335063934326
    10. ',' → logprob: -7.910335063934326

Token 120: ' #' (ID: 1069)
  Prédit: ' completed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' completed' → logprob: -0.5638454556465149
    2. 'completed' → logprob: -2.43884539604187
    3. ' if' → logprob: -2.93884539604187
    4. ' t' → logprob: -3.43884539604187
    5. ' res' → logprob: -3.43884539604187
    6. '   ' → logprob: -3.68884539604187
    7. ' time' → logprob: -3.81384539604187
    8. ' min' → logprob: -3.93884539604187
    9. ' j' → logprob: -4.063845634460449
    10. ' count' → logprob: -4.188845634460449

Token 121: ' time' (ID: 1058)
  Prédit: ' completed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' completed' → logprob: -1.0341535806655884
    2. 'completed' → logprob: -1.6591535806655884
    3. ' if' → logprob: -2.409153461456299
    4. ' time' → logprob: -2.534153461456299
    5. 'if' → logprob: -3.034153461456299
    6. ' count' → logprob: -3.284153461456299
    7. ' done' → logprob: -3.409153461456299
    8. 'done' → logprob: -3.534153461456299
    9. 'count' → logprob: -3.659153461456299
    10. 'time' → logprob: -3.909153461456299

Token 122: ' spent' (ID: 11228)
  Prédit: '_pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pass' → logprob: -0.5646728277206421
    2. '_elapsed' → logprob: -1.939672827720642
    3. '_sp' → logprob: -2.3146729469299316
    4. '_completed' → logprob: -3.0646729469299316
    5. '_needed' → logprob: -3.0646729469299316
    6. '_taken' → logprob: -3.6896729469299316
    7. ' =' → logprob: -4.564672946929932
    8. '_' → logprob: -4.564672946929932
    9. '_required' → logprob: -4.689672946929932
    10. '=' → logprob: -5.064672946929932

Token 123: ' on' (ID: 402)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48358413577079773
    2. '=' → logprob: -0.9835841655731201
    3. '_sp' → logprob: -5.483583927154541
    4. '_on' → logprob: -6.483583927154541
    5. '_so' → logprob: -6.733583927154541
    6. '_for' → logprob: -7.358583927154541
    7. '_by' → logprob: -7.983583927154541
    8. '_per' → logprob: -8.2335844039917
    9. '_needed' → logprob: -8.6085844039917
    10. '_until' → logprob: -8.8585844039917

Token 124: ' items' (ID: 4732)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.317169189453125
    2. 'i' → logprob: -1.942169189453125
    3. ' h' → logprob: -2.067169189453125
    4. 'each' → logprob: -2.192169189453125
    5. 'res' → logprob: -2.817169189453125
    6. 't' → logprob: -3.317169189453125
    7. ' res' → logprob: -3.317169189453125
    8. ' each' → logprob: -3.567169189453125
    9. 'range' → logprob: -3.817169189453125
    10. ' t' → logprob: -3.817169189453125

Token 125: ' up' (ID: 869)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26624247431755066
    2. '=' → logprob: -1.766242504119873
    3. '_sp' → logprob: -3.266242504119873
    4. '_per' → logprob: -4.516242504119873
    5. '_completed' → logprob: -5.766242504119873
    6. '_on' → logprob: -6.391242504119873
    7. '_needed' → logprob: -6.516242504119873
    8. 's' → logprob: -6.766242504119873
    9. '_so' → logprob: -7.016242504119873
    10. '_used' → logprob: -7.266242504119873

Token 126: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.11294923722743988
    2. 't' → logprob: -2.7379491329193115
    3. '=' → logprob: -4.112949371337891
    4. ' to' → logprob: -4.862949371337891
    5. '_to' → logprob: -5.487949371337891
    6. ' up' → logprob: -5.862949371337891
    7. '[i' → logprob: -6.487949371337891
    8. 'per' → logprob: -6.612949371337891
    9. ' =' → logprob: -6.987949371337891
    10. 'cum' → logprob: -7.112949371337891

Token 127: ' item' (ID: 2169)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10737448185682297
    2. ' i' → logprob: -2.482374429702759
    3. 'cum' → logprob: -4.357374668121338
    4. ' cum' → logprob: -6.232374668121338
    5. 't' → logprob: -6.482374668121338
    6. ' t' → logprob: -6.982374668121338
    7. 'res' → logprob: -8.85737419128418
    8. ' res' → logprob: -9.10737419128418
    9. '(i' → logprob: -9.23237419128418
    10. 'c' → logprob: -9.60737419128418

Token 128: ' k' (ID: 372)
  Prédit: ' cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cum' → logprob: -1.5447688102722168
    2. ' i' → logprob: -1.6697688102722168
    3. 'i' → logprob: -2.044768810272217
    4. ' =' → logprob: -2.044768810272217
    5. '_i' → logprob: -2.669768810272217
    6. 's' → logprob: -2.794768810272217
    7. '[i' → logprob: -2.919768810272217
    8. 'cum' → logprob: -3.169768810272217
    9. '=' → logprob: -3.544768810272217
    10. '   ' → logprob: -3.794768810272217

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4125349819660187
    2. '=' → logprob: -1.1625349521636963
    3. ' ' → logprob: -5.162535190582275
    4. 'for' → logprob: -5.662535190582275
    5. ' for' → logprob: -6.162535190582275
    6. '_' → logprob: -6.162535190582275
    7. ',' → logprob: -6.412535190582275
    8. 'k' → logprob: -6.537535190582275
    9. ')' → logprob: -6.912535190582275
    10. '+' → logprob: -7.037535190582275

Token 130: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.1324695348739624
    2. 'cum' → logprob: -1.3824695348739624
    3. 't' → logprob: -1.8824695348739624
    4. ' cum' → logprob: -2.632469654083252
    5. '0' → logprob: -2.882469654083252
    6. ' t' → logprob: -2.882469654083252
    7. 'h' → logprob: -3.382469654083252
    8. ' k' → logprob: -4.257469654083252
    9. 'c' → logprob: -4.382469654083252
    10. ' h' → logprob: -5.132469654083252

Token 131: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8797742128372192
    2. ' *' → logprob: -1.3797742128372192
    3. ' +' → logprob: -2.0047740936279297
    4. ' //' → logprob: -2.1297740936279297
    5. '//' → logprob: -3.2547740936279297
    6. '<|end|>' → logprob: -4.50477409362793
    7. '*t' → logprob: -4.87977409362793
    8. ' ' → logprob: -5.12977409362793
    9. '*' → logprob: -5.12977409362793
    10. ' t' → logprob: -6.00477409362793

Token 132: ' h' (ID: 312)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.1389293074607849
    2. 't' → logprob: -2.2639293670654297
    3. ' h' → logprob: -4.26392936706543
    4. ' ' → logprob: -5.13892936706543
    5. 'h' → logprob: -5.63892936706543
    6. ' (' → logprob: -6.88892936706543
    7. ' n' → logprob: -8.38892936706543
    8. '<|end|>' → logprob: -8.95142936706543
    9. '2' → logprob: -9.20142936706543
    10. ')' → logprob: -9.32642936706543

Token 133: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.07278408110141754
    2. '[' → logprob: -3.447784185409546
    3. '<|end|>' → logprob: -3.697784185409546
    4. ')' → logprob: -4.572783946990967
    5. ' ' → logprob: -7.197783946990967
    6. '_i' → logprob: -7.822783946990967
    7. '<|end|>' → logprob: -7.947783946990967
    8. ']' → logprob: -8.072784423828125
    9. 'i' → logprob: -8.572784423828125
    10. '   ' → logprob: -9.072784423828125

Token 134: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12461724132299423
    2. ' )' → logprob: -2.624617338180542
    3. '//' → logprob: -3.999617338180542
    4. '+' → logprob: -5.124617099761963
    5. ' //' → logprob: -5.124617099761963
    6. ' +' → logprob: -5.249617099761963
    7. ']' → logprob: -5.874617099761963
    8. ')//' → logprob: -6.374617099761963
    9. ' ' → logprob: -6.624617099761963
    10. ' *' → logprob: -7.249617099761963

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22255975008010864
    2. '<|end|>' → logprob: -1.9725596904754639
    3. ' ' → logprob: -3.847559690475464
    4. '
' → logprob: -4.597559928894043
    5. '  ' → logprob: -5.097559928894043
    6. ' for' → logprob: -5.847559928894043
    7. '<|end|>' → logprob: -6.222559928894043
    8. '*' → logprob: -6.347559928894043
    9. '+' → logprob: -6.347559928894043
    10. ')' → logprob: -6.472559928894043

Token 136: ' #' (ID: 1069)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.7564653158187866
    2. 'k' → logprob: -1.5064653158187866
    3. '   ' → logprob: -2.006465435028076
    4. ' left' → logprob: -2.756465435028076
    5. 'left' → logprob: -3.756465435028076
    6. ' l' → logprob: -3.756465435028076
    7. ' low' → logprob: -4.131465435028076
    8. ' for' → logprob: -4.756465435028076
    9. ' completed' → logprob: -5.006465435028076
    10. 'low' → logprob: -5.006465435028076

Token 137: ' we' (ID: 581)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.3732727766036987
    2. 'left' → logprob: -1.3732727766036987
    3. ' left' → logprob: -1.6232727766036987
    4. 'low' → logprob: -2.2482728958129883
    5. ' low' → logprob: -2.7482728958129883
    6. ' k' → logprob: -3.2482728958129883
    7. ' lo' → logprob: -3.4982728958129883
    8. 'l' → logprob: -3.9982728958129883
    9. ' l' → logprob: -4.623272895812988
    10. 'import' → logprob: -5.248272895812988

Token 138: ' know' (ID: 1761)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2232765108346939
    2. '=' → logprob: -2.3482766151428223
    3. ' can' → logprob: -3.2232766151428223
    4. ' ' → logprob: -3.9732766151428223
    5. ' need' → logprob: -4.848276615142822
    6. 'for' → logprob: -4.973276615142822
    7. 'can' → logprob: -5.223276615142822
    8. ' want' → logprob: -5.348276615142822
    9. '_' → logprob: -5.598276615142822
    10. ' #' → logprob: -6.098276615142822

Token 139: ' student' (ID: 6760)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.16769804060459137
    2. 'k' → logprob: -2.5426981449127197
    3. ' max' → logprob: -3.4176981449127197
    4. '   ' → logprob: -4.417697906494141
    5. ' that' → logprob: -4.542697906494141
    6. 'max' → logprob: -5.167697906494141
    7. ' how' → logprob: -5.292697906494141
    8. ' t' → logprob: -6.167697906494141
    9. '    ' → logprob: -6.292697906494141
    10. ' completed' → logprob: -6.792697906494141

Token 140: ' i' (ID: 575)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8202967047691345
    2. '_time' → logprob: -1.8202967643737793
    3. ' i' → logprob: -2.3202967643737793
    4. '_i' → logprob: -2.8202967643737793
    5. 'i' → logprob: -3.0702967643737793
    6. '_completed' → logprob: -3.3202967643737793
    7. '_' → logprob: -3.9452967643737793
    8. 's' → logprob: -3.9452967643737793
    9. ' can' → logprob: -4.445296764373779
    10. '[' → logprob: -4.820296764373779

Token 141: ' starts' (ID: 13217)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.8534505367279053
    2. '_' → logprob: -2.3534505367279053
    3. '_completed' → logprob: -2.4784505367279053
    4. ' has' → logprob: -2.9784505367279053
    5. '<|end|>' → logprob: -2.9784505367279053
    6. '_can' → logprob: -3.2284505367279053
    7. ' completed' → logprob: -3.3534505367279053
    8. ':' → logprob: -3.3534505367279053
    9. ',' → logprob: -3.4784505367279053
    10. '<|end|>' → logprob: -3.9784505367279053

Token 142: ' their' (ID: 1043)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.7999150156974792
    2. ' checking' → logprob: -1.549915075302124
    3. '_time' → logprob: -3.299915075302124
    4. ' with' → logprob: -3.424915075302124
    5. '=' → logprob: -3.924915075302124
    6. 'at' → logprob: -3.924915075302124
    7. ' the' → logprob: -4.049914836883545
    8. ' completing' → logprob: -4.049914836883545
    9. ' ' → logprob: -4.174914836883545
    10. 'from' → logprob: -4.174914836883545

Token 143: ' sequence' (ID: 16281)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.6514536738395691
    2. ' check' → logprob: -0.9014536738395691
    3. ' first' → logprob: -4.026453495025635
    4. 'first' → logprob: -4.276453495025635
    5. 'items' → logprob: -5.276453495025635
    6. 'tasks' → logprob: -5.401453495025635
    7. 'time' → logprob: -5.651453495025635
    8. 't' → logprob: -5.651453495025635
    9. 'work' → logprob: -6.151453495025635
    10. 'current' → logprob: -6.276453495025635

Token 144: ' after' (ID: 1934)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.23153172433376312
    2. 'at' → logprob: -2.7315316200256348
    3. 'from' → logprob: -3.3565316200256348
    4. ' from' → logprob: -3.6065316200256348
    5. '<|end|>' → logprob: -4.106531620025635
    6. 's' → logprob: -4.231531620025635
    7. ',' → logprob: -4.856531620025635
    8. '<|end|>' → logprob: -5.356531620025635
    9. '_time' → logprob: -5.481531620025635
    10. ' after' → logprob: -5.606531620025635

Token 145: ' cum' (ID: 10023)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.3570038080215454
    2. ' cum' → logprob: -1.2320038080215454
    3. 'i' → logprob: -6.607003688812256
    4. ' i' → logprob: -6.857003688812256
    5. ' res' → logprob: -6.982003688812256
    6. ' the' → logprob: -6.982003688812256
    7. 'res' → logprob: -7.357003688812256
    8. 'the' → logprob: -7.607003688812256
    9. 'sum' → logprob: -7.857003688812256
    10. 't' → logprob: -8.107004165649414

Token 146: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.000116655595775228
    2. '_' → logprob: -9.500116348266602
    3. '_t' → logprob: -11.125116348266602
    4. '   ' → logprob: -11.375116348266602
    5. '_tim' → logprob: -12.750116348266602
    6. ' _' → logprob: -12.875116348266602
    7. 'cum' → logprob: -13.125116348266602
    8. 'time' → logprob: -13.375116348266602
    9. 't' → logprob: -13.625116348266602
    10. '_times' → logprob: -14.625116348266602

Token 147: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0011524823494255543
    2. '[' → logprob: -7.501152515411377
    3. '[max' → logprob: -7.626152515411377
    4. 'max' → logprob: -9.751152038574219
    5. ' [' → logprob: -11.251152038574219
    6. '[k' → logprob: -12.001152038574219
    7. 'i' → logprob: -12.126152038574219
    8. '[j' → logprob: -12.376152038574219
    9. '[min' → logprob: -12.501152038574219
    10. '[
' → logprob: -12.876152038574219

Token 148: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001944461022503674
    2. ' -' → logprob: -6.251944541931152
    3. ']' → logprob: -11.251944541931152
    4. ' ' → logprob: -14.251944541931152
    5. '[-' → logprob: -14.876944541931152
    6. ']-' → logprob: -15.126944541931152
    7. '-i' → logprob: -15.251944541931152
    8. '[i' → logprob: -15.376944541931152
    9. '   ' → logprob: -15.626944541931152
    10. '1' → logprob: -15.751944541931152

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000253591249929741
    2. '2' → logprob: -8.875253677368164
    3. ' ' → logprob: -9.125253677368164
    4. '-' → logprob: -12.750253677368164
    5. ']' → logprob: -13.875253677368164
    6. '   ' → logprob: -14.375253677368164
    7. '```' → logprob: -16.375253677368164
    8. '  ' → logprob: -16.562753677368164
    9. 'i' → logprob: -16.875253677368164
    10. '
' → logprob: -17.625253677368164

Token 150: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02032206952571869
    2. ' ]' → logprob: -4.770321846008301
    3. ']+' → logprob: -4.770321846008301
    4. '[i' → logprob: -6.895321846008301
    5. '],' → logprob: -7.020321846008301
    6. '[' → logprob: -7.895321846008301
    7. '-' → logprob: -8.2703218460083
    8. 'if' → logprob: -9.1453218460083
    9. ' -' → logprob: -9.2703218460083
    10. ' if' → logprob: -9.6453218460083

Token 151: ' but' (ID: 889)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8008975386619568
    2. '    ' → logprob: -2.3008975982666016
    3. '   ' → logprob: -2.6758975982666016
    4. ' t' → logprob: -2.6758975982666016
    5. ' while' → logprob: -2.8008975982666016
    6. ' i' → logprob: -2.9258975982666016
    7. ' k' → logprob: -3.6758975982666016
    8. ' if' → logprob: -3.6758975982666016
    9. ' and' → logprob: -3.9258975982666016
    10. ' idx' → logprob: -4.800897598266602

Token 152: ' items' (ID: 4732)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7135826349258423
    2. ' t' → logprob: -1.8385826349258423
    3. 'i' → logprob: -2.8385825157165527
    4. 't' → logprob: -2.9635825157165527
    5. ' res' → logprob: -2.9635825157165527
    6. ' if' → logprob: -2.9635825157165527
    7. ' cum' → logprob: -3.5885825157165527
    8. ' not' → logprob: -4.213582515716553
    9. ' we' → logprob: -4.463582515716553
    10. 'if' → logprob: -4.713582515716553

Token 153: ' are' (ID: 553)
  Prédit: '_completed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_completed' → logprob: -1.2590126991271973
    2. '[i' → logprob: -1.5090126991271973
    3. '<|end|>' → logprob: -1.8840126991271973
    4. ')' → logprob: -3.0090126991271973
    5. ' are' → logprob: -3.0090126991271973
    6. ' completed' → logprob: -3.3840126991271973
    7. '[' → logprob: -3.5090126991271973
    8. ' i' → logprob: -4.009012699127197
    9. 'completed' → logprob: -4.009012699127197
    10. '<|end|>' → logprob: -4.009012699127197

Token 154: ' processed' (ID: 23478)
  Prédit: 'completed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'completed' → logprob: -1.630353569984436
    2. '0' → logprob: -1.755353569984436
    3. ' ' → logprob: -2.0053534507751465
    4. ' completed' → logprob: -2.2553534507751465
    5. ' processed' → logprob: -3.1303534507751465
    6. ' checked' → logprob: -3.2553534507751465
    7. 'processed' → logprob: -3.2553534507751465
    8. 'finished' → logprob: -3.7553534507751465
    9. 'checked' → logprob: -3.7553534507751465
    10. ' not' → logprob: -3.8803534507751465

Token 155: ' in' (ID: 306)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -1.2902570962905884
    2. ' in' → logprob: -1.6652570962905884
    3. ' until' → logprob: -2.165256977081299
    4. ' after' → logprob: -2.415256977081299
    5. ' up' → logprob: -2.915256977081299
    6. ' on' → logprob: -3.290256977081299
    7. '<|end|>' → logprob: -3.290256977081299
    8. ' ' → logprob: -3.665256977081299
    9. ' only' → logprob: -4.040256977081299
    10. ' from' → logprob: -4.040256977081299

Token 156: ' order' (ID: 2569)
  Prédit: ' parallel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parallel' → logprob: -0.5782219171524048
    2. 'parallel' → logprob: -1.2032219171524048
    3. ' order' → logprob: -2.7032217979431152
    4. 'order' → logprob: -4.578221797943115
    5. ' a' → logprob: -4.703221797943115
    6. 'sequence' → logprob: -5.078221797943115
    7. 'round' → logprob: -5.328221797943115
    8. 't' → logprob: -5.328221797943115
    9. ' sequence' → logprob: -5.578221797943115
    10. ' t' → logprob: -5.953221797943115

Token 157: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06613517552614212
    2. ' ' → logprob: -3.5661351680755615
    3. '<|end|>' → logprob: -4.066135406494141
    4. ',' → logprob: -5.691135406494141
    5. '    ' → logprob: -5.691135406494141
    6. '  ' → logprob: -5.816135406494141
    7. ':' → logprob: -6.066135406494141
    8. ' for' → logprob: -6.441135406494141
    9. ')' → logprob: -6.816135406494141
    10. '(' → logprob: -7.441135406494141

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3319549858570099
    2. ':' → logprob: -2.0819549560546875
    3. ' ' → logprob: -2.8319549560546875
    4. '<|end|>' → logprob: -2.9569549560546875
    5. '
' → logprob: -4.4569549560546875
    6. ',' → logprob: -5.2069549560546875
    7. '  ' → logprob: -5.3319549560546875
    8. ' for' → logprob: -5.3319549560546875
    9. ')' → logprob: -5.4569549560546875
    10. '    ' → logprob: -5.7069549560546875

Token 159: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.579418957233429
    2. ' time' → logprob: -2.454418897628784
    3. ' completed' → logprob: -2.579418897628784
    4. ' if' → logprob: -2.704418897628784
    5. ' k' → logprob: -2.704418897628784
    6. ' items' → logprob: -3.829418897628784
    7. ' max' → logprob: -4.329419136047363
    8. 'k' → logprob: -4.454419136047363
    9. 'completed' → logprob: -4.579419136047363
    10. ' x' → logprob: -4.704419136047363

Token 160: ' total' (ID: 3609)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' time' → logprob: -1.5034290552139282
    2. '   ' → logprob: -2.1284289360046387
    3. ' items' → logprob: -2.1284289360046387
    4. ' completed' → logprob: -2.2534289360046387
    5. ' k' → logprob: -2.5034289360046387
    6. 'time' → logprob: -3.2534289360046387
    7. 'completed' → logprob: -3.2534289360046387
    8. 'k' → logprob: -3.3784289360046387
    9. ' if' → logprob: -3.7534289360046387
    10. 'items' → logprob: -3.8784289360046387

Token 161: ' time' (ID: 1058)
  Prédit: '_items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_items' → logprob: -0.2785780429840088
    2. '_time' → logprob: -1.5285780429840088
    3. 'items' → logprob: -4.52857780456543
    4. '_completed' → logprob: -5.40357780456543
    5. ' =' → logprob: -5.90357780456543
    6. '=' → logprob: -6.02857780456543
    7. 'time' → logprob: -6.15357780456543
    8. '_processed' → logprob: -7.02857780456543
    9. '_t' → logprob: -7.52857780456543
    10. '_check' → logprob: -8.15357780456543

Token 162: ' spent' (ID: 11228)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6009188890457153
    2. '_sp' → logprob: -1.9759188890457153
    3. ' =' → logprob: -2.475918769836426
    4. '_pass' → logprob: -2.850918769836426
    5. '_needed' → logprob: -3.475918769836426
    6. '_elapsed' → logprob: -3.475918769836426
    7. '_per' → logprob: -4.350918769836426
    8. '_remaining' → logprob: -4.350918769836426
    9. '_completed' → logprob: -4.600918769836426
    10. '_left' → logprob: -4.600918769836426

Token 163: ' up' (ID: 869)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5501331686973572
    2. '=' → logprob: -1.175133228302002
    3. ')' → logprob: -3.675133228302002
    4. ' on' → logprob: -3.800133228302002
    5. ' >=' → logprob: -4.925133228302002
    6. '   ' → logprob: -4.925133228302002
    7. '>=' → logprob: -5.050133228302002
    8. ' +=' → logprob: -5.550133228302002
    9. '<|end|>' → logprob: -5.800133228302002
    10. 't' → logprob: -5.800133228302002

Token 164: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.03853873535990715
    2. 't' → logprob: -3.413538694381714
    3. ' to' → logprob: -6.413538932800293
    4. 'i' → logprob: -7.038538932800293
    5. '=' → logprob: -7.163538932800293
    6. 'o' → logprob: -8.038538932800293
    7. '   ' → logprob: -8.413538932800293
    8. '_to' → logprob: -8.663538932800293
    9. '1' → logprob: -9.038538932800293
    10. 'ntil' → logprob: -9.163538932800293

Token 165: ' item' (ID: 2169)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.924024224281311
    2. ' item' → logprob: -1.924024224281311
    3. 'i' → logprob: -2.1740241050720215
    4. 'k' → logprob: -2.5490241050720215
    5. ' k' → logprob: -2.6740241050720215
    6. 'item' → logprob: -3.4240241050720215
    7. ' t' → logprob: -3.6740241050720215
    8. ' the' → logprob: -4.0490241050720215
    9. ' res' → logprob: -4.0490241050720215
    10. ' now' → logprob: -4.2990241050720215

Token 166: ' x' (ID: 1215)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.546547532081604
    2. ' =' → logprob: -2.1715474128723145
    3. ' _' → logprob: -2.5465474128723145
    4. ' ' → logprob: -2.5465474128723145
    5. ' i' → logprob: -2.5465474128723145
    6. ' k' → logprob: -2.9215474128723145
    7. '_' → logprob: -3.0465474128723145
    8. '_k' → logprob: -3.1715474128723145
    9. 'k' → logprob: -3.5465474128723145
    10. '[i' → logprob: -3.6715474128723145

Token 167: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13543292880058289
    2. '=' → logprob: -2.7604329586029053
    3. ' ' → logprob: -4.010432720184326
    4. ' //' → logprob: -4.260432720184326
    5. '   ' → logprob: -4.635432720184326
    6. ')' → logprob: -5.635432720184326
    7. '_' → logprob: -6.010432720184326
    8. '//' → logprob: -6.135432720184326
    9. ' >=' → logprob: -6.135432720184326
    10. ',' → logprob: -6.510432720184326

Token 168: ' student' (ID: 6760)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5127074122428894
    2. ' student' → logprob: -1.7627074718475342
    3. 'i' → logprob: -2.012707471847534
    4. 'student' → logprob: -3.137707471847534
    5. ' res' → logprob: -5.137707233428955
    6. ' t' → logprob: -5.137707233428955
    7. ' the' → logprob: -5.262707233428955
    8. ' h' → logprob: -5.262707233428955
    9. ' n' → logprob: -5.387707233428955
    10. ' each' → logprob: -5.387707233428955

Token 169: ' i' (ID: 575)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7478604316711426
    2. ' i' → logprob: -1.2478604316711426
    3. 'i' → logprob: -1.7478604316711426
    4. '[' → logprob: -3.9978604316711426
    5. ' ' → logprob: -4.747860431671143
    6. ')' → logprob: -4.747860431671143
    7. '   ' → logprob: -5.247860431671143
    8. ']' → logprob: -5.747860431671143
    9. '_i' → logprob: -5.747860431671143
    10. ' =' → logprob: -5.872860431671143

Token 170: ' is' (ID: 382)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0248234272003174
    2. '=' → logprob: -1.2748234272003174
    3. ' =' → logprob: -1.5248234272003174
    4. '#' → logprob: -3.3998234272003174
    5. '   ' → logprob: -3.3998234272003174
    6. ':' → logprob: -3.8998234272003174
    7. ' #' → logprob: -4.524823188781738
    8. '[' → logprob: -4.899823188781738
    9. '<|end|>' → logprob: -4.899823188781738
    10. ')' → logprob: -4.899823188781738

Token 171: ' x' (ID: 1215)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.7974799871444702
    2. ' x' → logprob: -1.7974799871444702
    3. ' min' → logprob: -2.0474801063537598
    4. ' (' → logprob: -2.1724801063537598
    5. ' cum' → logprob: -3.5474801063537598
    6. ' h' → logprob: -3.6724801063537598
    7. 't' → logprob: -4.04748010635376
    8. 'x' → logprob: -4.17248010635376
    9. 'min' → logprob: -4.29748010635376
    10. 'cum' → logprob: -4.42248010635376

Token 172: '*h' (ID: 139295)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.16656039655208588
    2. '<|end|>' → logprob: -2.416560411453247
    3. ' //' → logprob: -3.791560411453247
    4. '*' → logprob: -4.666560173034668
    5. ' ' → logprob: -4.916560173034668
    6. '*t' → logprob: -5.541560173034668
    7. ')' → logprob: -5.541560173034668
    8. '//' → logprob: -5.916560173034668
    9. '+' → logprob: -6.041560173034668
    10. '   ' → logprob: -6.166560173034668

Token 173: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.062285952270030975
    2. '[' → logprob: -2.812285900115967
    3. '\[' → logprob: -9.562286376953125
    4. '[]' → logprob: -10.062286376953125
    5. '[
' → logprob: -10.437286376953125
    6. ']' → logprob: -10.562286376953125
    7. '[I' → logprob: -10.562286376953125
    8. 'i' → logprob: -10.687286376953125
    9. ')' → logprob: -11.187286376953125
    10. '[int' → logprob: -11.437286376953125

Token 174: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14599868655204773
    2. ']' → logprob: -3.39599871635437
    3. '   ' → logprob: -3.77099871635437
    4. ' )' → logprob: -4.020998477935791
    5. ' if' → logprob: -4.145998477935791
    6. '//' → logprob: -4.395998477935791
    7. ' //' → logprob: -5.020998477935791
    8. ' >=' → logprob: -5.395998477935791
    9. ' ' → logprob: -5.645998477935791
    10. '>' → logprob: -5.895998477935791

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21945351362228394
    2. ' ' → logprob: -2.0944535732269287
    3. '[' → logprob: -4.21945333480835
    4. '#' → logprob: -4.34445333480835
    5. 'x' → logprob: -4.71945333480835
    6. ':' → logprob: -4.71945333480835
    7. '(' → logprob: -6.09445333480835
    8. ')' → logprob: -6.21945333480835
    9. ']' → logprob: -6.21945333480835
    10. '  ' → logprob: -6.34445333480835

Token 176: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20975790917873383
    2. ' x' → logprob: -1.959757924079895
    3. ' if' → logprob: -4.4597578048706055
    4. 'x' → logprob: -4.7097578048706055
    5. ' max' → logprob: -4.8347578048706055
    6. ' k' → logprob: -5.4597578048706055
    7. ' items' → logprob: -6.4597578048706055
    8. ' time' → logprob: -6.5847578048706055
    9. ' completed' → logprob: -6.8347578048706055
    10. ' for' → logprob: -6.8347578048706055

Token 177: ' but' (ID: 889)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.0339587926864624
    2. ' max' → logprob: -2.033958911895752
    3. 'x' → logprob: -2.158958911895752
    4. ' completed' → logprob: -2.408958911895752
    5. 'max' → logprob: -3.283958911895752
    6. 'completed' → logprob: -3.283958911895752
    7. ' items' → logprob: -3.408958911895752
    8. ' time' → logprob: -3.658958911895752
    9. 'k' → logprob: -3.783958911895752
    10. 'import' → logprob: -3.783958911895752

Token 178: ' must' (ID: 2804)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.33107033371925354
    2. ' cum' → logprob: -2.0810704231262207
    3. 't' → logprob: -2.7060704231262207
    4. 'cum' → logprob: -2.9560704231262207
    5. ' res' → logprob: -4.331070423126221
    6. ' i' → logprob: -5.456070423126221
    7. 'res' → logprob: -5.831070423126221
    8. ' h' → logprob: -5.956070423126221
    9. ' time' → logprob: -6.331070423126221
    10. ' ' → logprob: -6.456070423126221

Token 179: ' wait' (ID: 5238)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.2604618966579437
    2. ' not' → logprob: -1.6354619264602661
    3. ' <=' → logprob: -4.885461807250977
    4. 'not' → logprob: -5.010461807250977
    5. 'n't' → logprob: -5.135461807250977
    6. '<=' → logprob: -5.260461807250977
    7. 'be' → logprob: -6.010461807250977
    8. 'consider' → logprob: -7.010461807250977
    9. '=' → logprob: -7.510461807250977
    10. ' consider' → logprob: -7.635461807250977

Token 180: ' for' (ID: 395)
  Prédit: ' until'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' until' → logprob: -1.142213225364685
    2. 'until' → logprob: -1.267213225364685
    3. '_until' → logprob: -1.517213225364685
    4. 'for' → logprob: -2.3922133445739746
    5. '_' → logprob: -3.7672133445739746
    6. '_time' → logprob: -3.8922133445739746
    7. ' for' → logprob: -4.642213344573975
    8. 'cum' → logprob: -5.017213344573975
    9. '   ' → logprob: -5.517213344573975
    10. 't' → logprob: -5.767213344573975

Token 181: ' earlier' (ID: 11965)
  Prédit: ' cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cum' → logprob: -0.31071481108665466
    2. 'cum' → logprob: -2.0607147216796875
    3. ' max' → logprob: -2.1857147216796875
    4. 'max' → logprob: -4.3107147216796875
    5. ' the' → logprob: -4.6857147216796875
    6. ' cumulative' → logprob: -6.9357147216796875
    7. 'the' → logprob: -7.3107147216796875
    8. 'c' → logprob: -7.4357147216796875
    9. ' ' → logprob: -7.6857147216796875
    10. ' i' → logprob: -8.060714721679688

Token 182: ' students' (ID: 4501)
  Prédit: ' students'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' students' → logprob: -0.1967158168554306
    2. 'students' → logprob: -1.9467158317565918
    3. ' cum' → logprob: -3.821715831756592
    4. 'cum' → logprob: -5.571715831756592
    5. ' cumulative' → logprob: -6.696715831756592
    6. '_students' → logprob: -6.696715831756592
    7. ' student' → logprob: -6.946715831756592
    8. ' items' → logprob: -7.071715831756592
    9. 'student' → logprob: -7.321715831756592
    10. ' i' → logprob: -7.321715831756592

Token 183: ';' (ID: 26)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4083553552627563
    2. '<|end|>' → logprob: -1.4083553552627563
    3. ' ' → logprob: -1.6583553552627563
    4. '_' → logprob: -2.658355236053467
    5. '
' → logprob: -3.283355236053467
    6. '   ' → logprob: -3.283355236053467
    7. ')' → logprob: -3.283355236053467
    8. ']' → logprob: -3.533355236053467
    9. '[i' → logprob: -3.658355236053467
    10. '#' → logprob: -4.408355236053467

Token 184: ' so' (ID: 813)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' time' → logprob: -1.2388306856155396
    2. 'time' → logprob: -1.9888306856155396
    3. ' x' → logprob: -2.36383056640625
    4. ' if' → logprob: -2.86383056640625
    5. ' while' → logprob: -3.23883056640625
    6. ' res' → logprob: -3.23883056640625
    7. '   ' → logprob: -3.73883056640625
    8. 'x' → logprob: -4.11383056640625
    9. ' t' → logprob: -4.11383056640625
    10. ' available' → logprob: -4.11383056640625

Token 185: ' the' (ID: 290)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.89911949634552
    2. ' x' → logprob: -2.0241193771362305
    3. ' time' → logprob: -2.1491193771362305
    4. ' res' → logprob: -2.5241193771362305
    5. ' pass' → logprob: -2.5241193771362305
    6. 'time' → logprob: -2.7741193771362305
    7. ' max' → logprob: -3.2741193771362305
    8. '   ' → logprob: -3.3991193771362305
    9. 'pass' → logprob: -3.3991193771362305
    10. 'if' → logprob: -3.5241193771362305

Token 186: ' time' (ID: 1058)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9037033319473267
    2. 'if' → logprob: -2.153703212738037
    3. 'time' → logprob: -2.153703212738037
    4. 'res' → logprob: -2.653703212738037
    5. ' for' → logprob: -3.028703212738037
    6. 'min' → logprob: -3.403703212738037
    7. 'max' → logprob: -3.403703212738037
    8. ' time' → logprob: -3.528703212738037
    9. ' res' → logprob: -3.528703212738037
    10. 'total' → logprob: -3.528703212738037

Token 187: ' offset' (ID: 8985)
  Prédit: '_pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pass' → logprob: -1.4462796449661255
    2. '_elapsed' → logprob: -1.5712796449661255
    3. '_sp' → logprob: -2.196279525756836
    4. 'passed' → logprob: -2.321279525756836
    5. '_needed' → logprob: -2.571279525756836
    6. '_left' → logprob: -3.071279525756836
    7. '_remaining' → logprob: -3.196279525756836
    8. '_available' → logprob: -3.321279525756836
    9. 'left' → logprob: -3.321279525756836
    10. '_wait' → logprob: -3.946279525756836

Token 188: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08266095817089081
    2. '=' → logprob: -2.5826609134674072
    3. ')' → logprob: -7.457661151885986
    4. ' +=' → logprob: -7.832661151885986
    5. ',' → logprob: -7.957661151885986
    6. '+' → logprob: -7.957661151885986
    7. ' >=' → logprob: -8.082660675048828
    8. ' +' → logprob: -8.707660675048828
    9. '_offset' → logprob: -8.707660675048828
    10. '   ' → logprob: -8.957660675048828

Token 189: ' the' (ID: 290)
  Prédit: ' cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cum' → logprob: -0.13091227412223816
    2. 'cum' → logprob: -2.2559123039245605
    3. ' max' → logprob: -4.1309123039245605
    4. 'max' → logprob: -6.7559123039245605
    5. 'c' → logprob: -9.193411827087402
    6. ' cumulative' → logprob: -9.380911827087402
    7. ' (' → logprob: -9.943411827087402
    8. '0' → logprob: -9.943411827087402
    9. ' c' → logprob: -10.130911827087402
    10. ' ' → logprob: -10.193411827087402

Token 190: ' maximum' (ID: 10562)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.583623468875885
    2. ' cum' → logprob: -0.958623468875885
    3. 'max' → logprob: -3.5836234092712402
    4. ' max' → logprob: -3.9586234092712402
    5. 'c' → logprob: -4.95862340927124
    6. ' cumulative' → logprob: -6.83362340927124
    7. 'sum' → logprob: -7.58362340927124
    8. ' previous' → logprob: -7.58362340927124
    9. 'i' → logprob: -7.83362340927124
    10. '0' → logprob: -8.333623886108398

Token 191: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01989222690463066
    2. '_' → logprob: -4.64489221572876
    3. '()' → logprob: -5.76989221572876
    4. ')' → logprob: -6.51989221572876
    5. '(max' → logprob: -6.51989221572876
    6. ' (' → logprob: -6.64489221572876
    7. '(
' → logprob: -7.39489221572876
    8. '<|end|>' → logprob: -7.76989221572876
    9. ' ' → logprob: -8.144892692565918
    10. 'of' → logprob: -8.644892692565918

Token 192: ' previous' (ID: 5880)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.6729099750518799
    2. ' cum' → logprob: -0.7979099750518799
    3. '0' → logprob: -3.54790997505188
    4. 'c' → logprob: -5.797909736633301
    5. ' ' → logprob: -6.172909736633301
    6. '(' → logprob: -6.297909736633301
    7. ' cumulative' → logprob: -6.797909736633301
    8. '(c' → logprob: -7.047909736633301
    9. ' previous' → logprob: -7.422909736633301
    10. ' (' → logprob: -8.4229097366333

Token 193: ' students' (ID: 4501)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.6954748034477234
    2. ' cum' → logprob: -1.1954748630523682
    3. ' completed' → logprob: -3.195474863052368
    4. ' cumulative' → logprob: -3.445474863052368
    5. 'completed' → logprob: -3.570474863052368
    6. 'c' → logprob: -3.695474863052368
    7. ' completion' → logprob: -4.070474624633789
    8. 'completion' → logprob: -4.445474624633789
    9. '(' → logprob: -5.195474624633789
    10. 'finished' → logprob: -5.570474624633789

Token 194: ' finish' (ID: 9115)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7731519341468811
    2. '<|end|>' → logprob: -1.5231518745422363
    3. '[' → logprob: -1.8981518745422363
    4. ')' → logprob: -2.8981518745422363
    5. '[i' → logprob: -2.8981518745422363
    6. '
' → logprob: -4.273151874542236
    7. '   ' → logprob: -5.023151874542236
    8. ' ' → logprob: -5.023151874542236
    9. ']' → logprob: -5.023151874542236
    10. '<|end|>' → logprob: -5.148151874542236

Token 195: ' time' (ID: 1058)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.23865357041358948
    2. '_' → logprob: -1.738653540611267
    3. 'time' → logprob: -4.238653659820557
    4. ']' → logprob: -4.988653659820557
    5. '_times' → logprob: -5.113653659820557
    6. 'ing' → logprob: -5.988653659820557
    7. '()' → logprob: -6.738653659820557
    8. 'times' → logprob: -7.113653659820557
    9. '[' → logprob: -7.113653659820557
    10. ' time' → logprob: -7.363653659820557

Token 196: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 197: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044654130935668945
    2. ' ' → logprob: -5.04465389251709
    3. '    ' → logprob: -5.04465389251709
    4. ')' → logprob: -5.41965389251709
    5. '<|end|>' → logprob: -5.41965389251709
    6. ' if' → logprob: -5.79465389251709
    7. '  ' → logprob: -6.04465389251709
    8. ' for' → logprob: -6.16965389251709
    9. '       ' → logprob: -6.41965389251709
    10. ',' → logprob: -6.66965389251709

Token 198: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12516003847122192
    2. '    ' → logprob: -3.875159978866577
    3. ' x' → logprob: -4.375160217285156
    4. ' ' → logprob: -4.750160217285156
    5. ' for' → logprob: -4.750160217285156
    6. ' max' → logprob: -4.750160217285156
    7. ' if' → logprob: -5.000160217285156
    8. ' t' → logprob: -5.250160217285156
    9. 'max' → logprob: -5.500160217285156
    10. ')' → logprob: -5.500160217285156

Token 199: ' Actually' (ID: 50557)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -1.9391545057296753
    2. ' time' → logprob: -2.064154624938965
    3. ' max' → logprob: -2.564154624938965
    4. ' x' → logprob: -2.564154624938965
    5. 'left' → logprob: -2.814154624938965
    6. ' low' → logprob: -2.939154624938965
    7. ' for' → logprob: -2.939154624938965
    8. 'time' → logprob: -2.939154624938965
    9. '   ' → logprob: -3.064154624938965
    10. ' l' → logprob: -3.564154624938965

Token 200: ',' (ID: 11)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -1.1890770196914673
    2. ' pass' → logprob: -1.6890770196914673
    3. ' ' → logprob: -2.3140769004821777
    4. ' for' → logprob: -2.4390769004821777
    5. ' i' → logprob: -2.8140769004821777
    6. '    ' → logprob: -3.3140769004821777
    7. ' if' → logprob: -3.5640769004821777
    8. ' continue' → logprob: -3.5640769004821777
    9. ' n' → logprob: -3.6890769004821777
    10. '   ' → logprob: -3.9390769004821777

Token 201: ' since' (ID: 3630)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.5690647959709167
    2. ' time' → logprob: -2.1940648555755615
    3. ' for' → logprob: -2.9440648555755615
    4. ' offset' → logprob: -3.0690648555755615
    5. 'pass' → logprob: -3.6940648555755615
    6. ' max' → logprob: -3.6940648555755615
    7. 'time' → logprob: -3.8190648555755615
    8. 'offset' → logprob: -3.8190648555755615
    9. 'for' → logprob: -4.069064617156982
    10. ' res' → logprob: -4.319064617156982

Token 202: ' items' (ID: 4732)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -1.15241277217865
    2. 't' → logprob: -1.27741277217865
    3. 'h' → logprob: -2.2774128913879395
    4. ' h' → logprob: -2.7774128913879395
    5. 'cum' → logprob: -3.1524128913879395
    6. ' cum' → logprob: -3.2774128913879395
    7. ' res' → logprob: -3.4024128913879395
    8. 'i' → logprob: -3.7774128913879395
    9. ' the' → logprob: -4.1524128913879395
    10. 'res' → logprob: -4.4024128913879395

Token 203: ' processed' (ID: 23478)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.4441104531288147
    2. '[i' → logprob: -1.69411039352417
    3. 'are' → logprob: -3.06911039352417
    4. ' can' → logprob: -3.44411039352417
    5. 'processed' → logprob: -3.69411039352417
    6. '   ' → logprob: -4.44411039352417
    7. 'can' → logprob: -4.94411039352417
    8. '[' → logprob: -5.19411039352417
    9. ' have' → logprob: -5.56911039352417
    10. 'completed' → logprob: -5.69411039352417

Token 204: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7486619353294373
    2. ' in' → logprob: -2.123661994934082
    3. ' are' → logprob: -2.373661994934082
    4. '[i' → logprob: -3.123661994934082
    5. ' +=' → logprob: -3.123661994934082
    6. '=' → logprob: -3.498661994934082
    7. ' up' → logprob: -3.998661994934082
    8. ' by' → logprob: -3.998661994934082
    9. ' at' → logprob: -4.373661994934082
    10. ')' → logprob: -4.373661994934082

Token 205: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.10721343010663986
    2. 'parallel' → logprob: -2.7322134971618652
    3. ' order' → logprob: -3.8572134971618652
    4. 'sequence' → logprob: -4.857213497161865
    5. 'series' → logprob: -6.232213497161865
    6. ' parallel' → logprob: -6.857213497161865
    7. 'serial' → logprob: -7.107213497161865
    8. 'time' → logprob: -7.607213497161865
    9. 'queue' → logprob: -7.607213497161865
    10. 'total' → logprob: -8.107213020324707

Token 206: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4364362955093384
    2. '   ' → logprob: -1.5614362955093384
    3. ')' → logprob: -1.8114362955093384
    4. ':' → logprob: -1.9364362955093384
    5. '):' → logprob: -2.061436176300049
    6. ' for' → logprob: -3.686436176300049
    7. ' and' → logprob: -4.186436176300049
    8. ' ,' → logprob: -4.561436176300049
    9. '<|end|>' → logprob: -4.561436176300049
    10. ' )' → logprob: -4.811436176300049

Token 207: ' students' (ID: 4501)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -1.2361782789230347
    2. 't' → logprob: -1.7361782789230347
    3. ' cum' → logprob: -1.9861782789230347
    4. 'cum' → logprob: -2.236178398132324
    5. ' res' → logprob: -2.986178398132324
    6. ' all' → logprob: -3.361178398132324
    7. ' students' → logprob: -3.486178398132324
    8. ' the' → logprob: -3.861178398132324
    9. 'students' → logprob: -3.861178398132324
    10. 'h' → logprob: -3.861178398132324

Token 208: ' in' (ID: 306)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -1.028472661972046
    2. 'are' → logprob: -2.403472661972046
    3. 'process' → logprob: -2.403472661972046
    4. ' process' → logprob: -2.528472661972046
    5. '   ' → logprob: -2.903472661972046
    6. ' finish' → logprob: -3.403472661972046
    7. ' must' → logprob: -3.653472661972046
    8. 'finish' → logprob: -3.778472661972046
    9. 'processed' → logprob: -4.153472900390625
    10. ' processed' → logprob: -4.153472900390625

Token 209: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.7885186672210693
    2. 'range' → logprob: -2.1635186672210693
    3. 'the' → logprob: -2.2885186672210693
    4. 'sequence' → logprob: -2.4135186672210693
    5. 'parallel' → logprob: -3.0385186672210693
    6. 'queue' → logprob: -3.1635186672210693
    7. 'a' → logprob: -3.6635186672210693
    8. 'series' → logprob: -3.7885186672210693
    9. 'index' → logprob: -4.288518905639648
    10. 'input' → logprob: -4.288518905639648

Token 210: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34215041995048523
    2. ':' → logprob: -1.4671504497528076
    3. ',' → logprob: -3.3421504497528076
    4. '):' → logprob: -4.7171502113342285
    5. ' for' → logprob: -5.8421502113342285
    6. ' and' → logprob: -6.4671502113342285
    7. ':
' → logprob: -6.5921502113342285
    8. 'for' → logprob: -6.5921502113342285
    9. ')' → logprob: -6.7171502113342285
    10. ' ' → logprob: -6.9671502113342285

Token 211: '   ' (ID: 271)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.7730376124382019
    2. ' ' → logprob: -1.5230376720428467
    3. '   ' → logprob: -1.8980376720428467
    4. ')' → logprob: -2.2730376720428467
    5. ' i' → logprob: -3.7730376720428467
    6. ' )' → logprob: -4.148037433624268
    7. ' t' → logprob: -5.648037433624268
    8. ' x' → logprob: -6.023037433624268
    9. ' for' → logprob: -6.023037433624268
    10. 'i' → logprob: -6.398037433624268

Token 212: ' #' (ID: 1069)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.9090126156806946
    2. '   ' → logprob: -1.1590125560760498
    3. ')' → logprob: -2.03401255607605
    4. ' ' → logprob: -3.28401255607605
    5. ' res' → logprob: -3.90901255607605
    6. ' t' → logprob: -3.90901255607605
    7. ' )' → logprob: -4.159012794494629
    8. ' for' → logprob: -4.409012794494629
    9. ' i' → logprob: -4.534012794494629
    10. '       ' → logprob: -5.159012794494629

Token 213: ' at' (ID: 540)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.5108695030212402
    2. ' t' → logprob: -1.7608695030212402
    3. ' ' → logprob: -2.6358695030212402
    4. ')' → logprob: -2.6358695030212402
    5. 'for' → logprob: -2.6358695030212402
    6. '   ' → logprob: -2.7608695030212402
    7. ' max' → logprob: -2.8858695030212402
    8. ' if' → logprob: -3.3858695030212402
    9. ' i' → logprob: -3.6358695030212402
    10. ' res' → logprob: -3.7608695030212402

Token 214: ' any' (ID: 1062)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.3750349283218384
    2. ' i' → logprob: -1.8750349283218384
    3. ' t' → logprob: -2.125034809112549
    4. 't' → logprob: -2.250034809112549
    5. ' least' → logprob: -2.625034809112549
    6. 'least' → logprob: -2.875034809112549
    7. 'each' → logprob: -3.000034809112549
    8. 'res' → logprob: -3.625034809112549
    9. ' most' → logprob: -3.750034809112549
    10. ' this' → logprob: -3.750034809112549

Token 215: ' time' (ID: 1058)
  Prédit: ' given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' given' → logprob: -0.49053770303726196
    2. ' time' → logprob: -1.7405376434326172
    3. 'time' → logprob: -2.740537643432617
    4. ' moment' → logprob: -3.615537643432617
    5. 'given' → logprob: -3.615537643432617
    6. ' t' → logprob: -3.865537643432617
    7. ')' → logprob: -3.990537643432617
    8. ' i' → logprob: -4.365537643432617
    9. 't' → logprob: -4.740537643432617
    10. '_' → logprob: -4.865537643432617

Token 216: ' the' (ID: 290)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3019593060016632
    2. ' ,' → logprob: -2.051959276199341
    3. ' t' → logprob: -2.801959276199341
    4. ')' → logprob: -4.30195951461792
    5. '   ' → logprob: -4.67695951461792
    6. '):' → logprob: -4.92695951461792
    7. ' >=' → logprob: -5.05195951461792
    8. '),' → logprob: -5.55195951461792
    9. ' i' → logprob: -5.67695951461792
    10. ':' → logprob: -5.67695951461792

Token 217: ' progress' (ID: 7408)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.6162911653518677
    2. 'res' → logprob: -1.8662911653518677
    3. ' res' → logprob: -2.241291046142578
    4. 'i' → logprob: -2.616291046142578
    5. ' t' → logprob: -2.616291046142578
    6. 'max' → logprob: -2.991291046142578
    7. ' max' → logprob: -3.491291046142578
    8. ' students' → logprob: -3.741291046142578
    9. 'for' → logprob: -3.741291046142578
    10. 'students' → logprob: -3.866291046142578

Token 218: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.222569227218628
    2. '_' → logprob: -1.472569227218628
    3. '=' → logprob: -1.722569227218628
    4. ' <=' → logprob: -2.722569227218628
    5. ' is' → logprob: -2.847569227218628
    6. '[i' → logprob: -3.347569227218628
    7. '[' → logprob: -3.972569227218628
    8. ' <' → logprob: -3.972569227218628
    9. '<=' → logprob: -3.972569227218628
    10. '   ' → logprob: -4.597569465637207

Token 219: ' student' (ID: 6760)
  Prédit: ' student'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' student' → logprob: -0.5095495581626892
    2. 'student' → logprob: -1.134549617767334
    3. ' the' → logprob: -4.134549617767334
    4. ' students' → logprob: -4.259549617767334
    5. 'i' → logprob: -4.259549617767334
    6. 'the' → logprob: -4.634549617767334
    7. 'students' → logprob: -4.759549617767334
    8. ' i' → logprob: -5.134549617767334
    9. 'each' → logprob: -6.259549617767334
    10. ' each' → logprob: -6.634549617767334

Token 220: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.19251202046871185
    2. 'i' → logprob: -1.942512035369873
    3. '[i' → logprob: -4.317512035369873
    4. '_' → logprob: -4.567512035369873
    5. '_i' → logprob: -5.817512035369873
    6. '[' → logprob: -6.442512035369873
    7. ' _' → logprob: -6.942512035369873
    8. ' ' → logprob: -7.067512035369873
    9. ' [' → logprob: -7.192512035369873
    10. ' is' → logprob: -8.067511558532715

Token 221: ' can' (ID: 665)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5496666431427002
    2. '   ' → logprob: -2.1746666431427
    3. '[i' → logprob: -2.5496666431427
    4. ')' → logprob: -2.7996666431427
    5. ' can' → logprob: -3.1746666431427
    6. ' =' → logprob: -4.174666404724121
    7. ':' → logprob: -4.549666404724121
    8. ' has' → logprob: -4.674666404724121
    9. ' ' → logprob: -4.799666404724121
    10. ']' → logprob: -4.799666404724121

Token 222: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.7237273454666138
    2. ' be' → logprob: -0.8487273454666138
    3. 'not' → logprob: -2.598727226257324
    4. ' not' → logprob: -4.598727226257324
    5. ' only' → logprob: -7.473727226257324
    6. 'only' → logprob: -7.848727226257324
    7. 'n't' → logprob: -8.348727226257324
    8. ' never' → logprob: -8.598727226257324
    9. 'continue' → logprob: -8.598727226257324
    10. 'at' → logprob: -9.098727226257324

Token 223: ' determined' (ID: 16817)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.21039481461048126
    2. '0' → logprob: -2.835394859313965
    3. 't' → logprob: -3.210394859313965
    4. '(min' → logprob: -3.710394859313965
    5. 'cal' → logprob: -3.710394859313965
    6. 'max' → logprob: -4.210394859313965
    7. ' min' → logprob: -4.585394859313965
    8. 'at' → logprob: -6.085394859313965
    9. '[min' → logprob: -6.085394859313965
    10. '(t' → logprob: -6.210394859313965

Token 224: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1256818324327469
    2. ' ' → logprob: -3.6256818771362305
    3. '    ' → logprob: -4.1256818771362305
    4. '(' → logprob: -4.1256818771362305
    5. ' =' → logprob: -4.1256818771362305
    6. ',' → logprob: -4.7506818771362305
    7. '=' → logprob: -5.0006818771362305
    8. ')' → logprob: -5.7506818771362305
    9. '<|end|>' → logprob: -5.7506818771362305
    10. '  ' → logprob: -6.0006818771362305

Token 225: ' the' (ID: 290)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.9952763319015503
    2. ' t' → logprob: -1.3702763319015503
    3. ' max' → logprob: -1.3702763319015503
    4. ' (' → logprob: -3.24527645111084
    5. 'max' → logprob: -3.49527645111084
    6. 't' → logprob: -3.99527645111084
    7. 'min' → logprob: -4.12027645111084
    8. ' int' → logprob: -5.24527645111084
    9. ' cum' → logprob: -6.24527645111084
    10. ''' → logprob: -6.37027645111084

Token 226: ' following' (ID: 3992)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.7165135145187378
    2. 'min' → logprob: -0.8415135145187378
    3. 'max' → logprob: -3.2165136337280273
    4. ' max' → logprob: -3.9665136337280273
    5. 't' → logprob: -4.466513633728027
    6. ' t' → logprob: -4.841513633728027
    7. ' (' → logprob: -7.841513633728027
    8. 'if' → logprob: -8.341513633728027
    9. ' ' → logprob: -8.466513633728027
    10. '(min' → logprob: -8.966513633728027

Token 227: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0240803956985474
    2. ' ' → logprob: -1.6490803956985474
    3. 'for' → logprob: -3.274080276489258
    4. ' i' → logprob: -3.399080276489258
    5. '  ' → logprob: -3.649080276489258
    6. 'i' → logprob: -3.649080276489258
    7. ':' → logprob: -3.774080276489258
    8. ')' → logprob: -3.774080276489258
    9. ' t' → logprob: -4.149080276489258
    10. '    ' → logprob: -4.149080276489258

Token 228: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15676003694534302
    2. ' t' → logprob: -2.7817599773406982
    3. ' time' → logprob: -4.031760215759277
    4. ' ' → logprob: -4.531760215759277
    5. ' remaining' → logprob: -4.531760215759277
    6. ' x' → logprob: -5.031760215759277
    7. 't' → logprob: -5.406760215759277
    8. 'time' → logprob: -5.781760215759277
    9. 'remaining' → logprob: -5.906760215759277
    10. ' 
' → logprob: -6.281760215759277

Token 229: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5240827798843384
    2. '   ' → logprob: -1.3990827798843384
    3. ' time' → logprob: -3.024082660675049
    4. 'if' → logprob: -3.274082660675049
    5. ' x' → logprob: -3.899082660675049
    6. 'time' → logprob: -4.774082660675049
    7. 'x' → logprob: -5.149082660675049
    8. ' t' → logprob: -5.274082660675049
    9. ' k' → logprob: -5.399082660675049
    10. ' max' → logprob: -5.524082660675049

Token 230: ' They' (ID: 3164)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.4244204759597778
    2. ' time' → logprob: -1.6744204759597778
    3. 'if' → logprob: -2.2994203567504883
    4. ' max' → logprob: -2.2994203567504883
    5. 'time' → logprob: -2.9244203567504883
    6. ' pass' → logprob: -3.4244203567504883
    7. ' completed' → logprob: -3.4244203567504883
    8. 'max' → logprob: -4.049420356750488
    9. ' items' → logprob: -4.049420356750488
    10. '   ' → logprob: -4.174420356750488

Token 231: ' start' (ID: 1604)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0239611864089966
    2. ' can' → logprob: -1.5239611864089966
    3. '=' → logprob: -2.023961067199707
    4. 'can' → logprob: -2.273961067199707
    5. '_time' → logprob: -3.648961067199707
    6. ' have' → logprob: -4.023961067199707
    7. '_completed' → logprob: -4.148961067199707
    8. 'have' → logprob: -4.523961067199707
    9. '_can' → logprob: -4.648961067199707
    10. '_start' → logprob: -4.648961067199707

Token 232: ' at' (ID: 540)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4961088001728058
    2. '_time' → logprob: -1.1211087703704834
    3. 'time' → logprob: -3.4961087703704834
    4. ' =' → logprob: -4.4961090087890625
    5. 'at' → logprob: -4.6211090087890625
    6. 'from' → logprob: -5.8711090087890625
    7. '=max' → logprob: -5.8711090087890625
    8. ' at' → logprob: -5.9961090087890625
    9. ')' → logprob: -7.1211090087890625
    10. ' time' → logprob: -7.1211090087890625

Token 233: ' the' (ID: 290)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.3333885669708252
    2. ' cum' → logprob: -1.4583885669708252
    3. ' max' → logprob: -3.583388566970825
    4. 'max' → logprob: -4.083388328552246
    5. '0' → logprob: -5.208388328552246
    6. ' ' → logprob: -8.208388328552246
    7. ' (' → logprob: -9.333388328552246
    8. 'c' → logprob: -9.645888328552246
    9. '1' → logprob: -9.833388328552246
    10. '(' → logprob: -10.208388328552246

Token 234: ' time' (ID: 1058)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.4404495656490326
    2. 'max' → logprob: -1.565449595451355
    3. ' cum' → logprob: -2.9404494762420654
    4. '0' → logprob: -3.0654494762420654
    5. ' max' → logprob: -3.1904494762420654
    6. 'i' → logprob: -5.6904497146606445
    7. ' ' → logprob: -6.8154497146606445
    8. ' i' → logprob: -7.6904497146606445
    9. ' (' → logprob: -8.190449714660645
    10. 'c' → logprob: -8.440449714660645

Token 235: ' when' (ID: 1261)
  Prédit: ' cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cum' → logprob: -0.8766772150993347
    2. ' max' → logprob: -1.5016772747039795
    3. ' =' → logprob: -1.7516772747039795
    4. 'cum' → logprob: -2.2516772747039795
    5. 'max' → logprob: -3.5016772747039795
    6. '=' → logprob: -3.7516772747039795
    7. ' if' → logprob: -4.8766770362854
    8. '   ' → logprob: -5.5016770362854
    9. 'if' → logprob: -5.6266770362854
    10. '0' → logprob: -5.8766770362854

Token 236: ' previous' (ID: 5880)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.13193126022815704
    2. 'i' → logprob: -2.5069313049316406
    3. ' cum' → logprob: -3.7569313049316406
    4. ' i' → logprob: -4.506931304931641
    5. 'c' → logprob: -6.506931304931641
    6. 't' → logprob: -6.631931304931641
    7. '(i' → logprob: -7.131931304931641
    8. 'max' → logprob: -7.506931304931641
    9. 'sum' → logprob: -7.506931304931641
    10. 'all' → logprob: -7.631931304931641

Token 237: ' student' (ID: 6760)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.24098435044288635
    2. ' student' → logprob: -2.4909844398498535
    3. 'student' → logprob: -2.7409844398498535
    4. '_student' → logprob: -3.6159844398498535
    5. ' students' → logprob: -4.7409844398498535
    6. 'students' → logprob: -4.8659844398498535
    7. ' _' → logprob: -4.9909844398498535
    8. '_students' → logprob: -5.3659844398498535
    9. '_c' → logprob: -6.2409844398498535
    10. ' student's' → logprob: -6.4909844398498535

Token 238: ' finishes' (ID: 48473)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -1.0805180072784424
    2. 'finished' → logprob: -1.0805180072784424
    3. ' finishes' → logprob: -1.8305180072784424
    4. 's' → logprob: -2.4555180072784424
    5. 'i' → logprob: -3.4555180072784424
    6. ' finished' → logprob: -3.9555180072784424
    7. 'finish' → logprob: -4.705517768859863
    8. ' i' → logprob: -4.955517768859863
    9. '[i' → logprob: -6.830517768859863
    10. 'ends' → logprob: -6.830517768859863

Token 239: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46342673897743225
    2. '+' → logprob: -2.4634268283843994
    3. ' and' → logprob: -2.4634268283843994
    4. ' if' → logprob: -2.5884268283843994
    5. ' +' → logprob: -3.3384268283843994
    6. ',' → logprob: -3.4634268283843994
    7. ')' → logprob: -4.21342658996582
    8. 'if' → logprob: -4.46342658996582
    9. '
' → logprob: -5.71342658996582
    10. 'and' → logprob: -5.96342658996582

Token 240: 'cum' (ID: 89165)
  Prédit: 'cum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.4966985285282135
    2. 'i' → logprob: -2.1216986179351807
    3. ')' → logprob: -2.2466986179351807
    4. ' cum' → logprob: -2.6216986179351807
    5. ' i' → logprob: -3.3716986179351807
    6. 'if' → logprob: -3.7466986179351807
    7. '),' → logprob: -5.121698379516602
    8. ' if' → logprob: -5.246698379516602
    9. '0' → logprob: -5.621698379516602
    10. ')
' → logprob: -5.996698379516602

Token 241: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -9.05499910004437e-05
    2. '_' → logprob: -10.000090599060059
    3. '[i' → logprob: -11.250090599060059
    4. ')' → logprob: -11.750090599060059
    5. '[_' → logprob: -11.875090599060059
    6. '[' → logprob: -12.625090599060059
    7. ')_' → logprob: -13.375090599060059
    8. 'time' → logprob: -13.625090599060059
    9. '_code' → logprob: -13.625090599060059
    10. '   ' → logprob: -14.000090599060059

Token 242: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01734187826514244
    2. '-' → logprob: -4.5173420906066895
    3. 'i' → logprob: -5.5173420906066895
    4. '[-' → logprob: -7.5173420906066895
    5. '   ' → logprob: -7.6423420906066895
    6. ']' → logprob: -7.7673420906066895
    7. '[' → logprob: -8.142341613769531
    8. ' -' → logprob: -8.767341613769531
    9. '][' → logprob: -9.142341613769531
    10. ']-' → logprob: -9.517341613769531

Token 243: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0008863262482918799
    2. ' -' → logprob: -8.125885963439941
    3. 'i' → logprob: -8.250885963439941
    4. '])' → logprob: -9.000885963439941
    5. '[i' → logprob: -9.250885963439941
    6. ']' → logprob: -9.625885963439941
    7. '   ' → logprob: -10.875885963439941
    8. ']-' → logprob: -12.125885963439941
    9. '1' → logprob: -12.500885963439941
    10. '-
' → logprob: -13.000885963439941

Token 244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.7888184528565034e-05
    2. ' ' → logprob: -9.8750581741333
    3. '   ' → logprob: -13.2500581741333
    4. ']' → logprob: -13.3750581741333
    5. '2' → logprob: -13.9375581741333
    6. '```' → logprob: -14.4375581741333
    7. 'i' → logprob: -15.2500581741333
    8. '])' → logprob: -15.3750581741333
    9. '-' → logprob: -15.8125581741333
    10. '...' → logprob: -16.000057220458984

Token 245: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.6532065868377686
    2. ']' → logprob: -0.7782065868377686
    3. ']+' → logprob: -4.403206825256348
    4. '])+' → logprob: -5.653206825256348
    5. '])
' → logprob: -6.528206825256348
    6. '-' → logprob: -7.153206825256348
    7. ')' → logprob: -7.403206825256348
    8. ' ])' → logprob: -7.528206825256348
    9. '],' → logprob: -8.278206825256348
    10. 'if' → logprob: -8.403206825256348

Token 246: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09579946100711823
    2. ' if' → logprob: -3.720799446105957
    3. ')' → logprob: -3.845799446105957
    4. '    
' → logprob: -4.345799446105957
    5. ',' → logprob: -5.345799446105957
    6. '+' → logprob: -5.470799446105957
    7. ' 
' → logprob: -5.720799446105957
    8. 'if' → logprob: -5.970799446105957
    9. '  
' → logprob: -6.220799446105957
    10. ' while' → logprob: -6.845799446105957

Token 247: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6936963200569153
    2. ' i' → logprob: -0.6936963200569153
    3. ' t' → logprob: -8.318696022033691
    4. 't' → logprob: -8.443696022033691
    5. '0' → logprob: -10.318696022033691
    6. '   ' → logprob: -10.443696022033691
    7. ' ' → logprob: -11.818696022033691
    8. 'cum' → logprob: -12.568696022033691
    9. ' cum' → logprob: -12.943696022033691
    10. '	i' → logprob: -12.943696022033691

Token 248: '>' (ID: 29)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3340385854244232
    2. ' ==' → logprob: -1.8340386152267456
    3. '>' → logprob: -2.709038496017456
    4. ' !=' → logprob: -3.209038496017456
    5. '==' → logprob: -4.459038734436035
    6. ' <' → logprob: -6.334038734436035
    7. ' else' → logprob: -7.084038734436035
    8. '+' → logprob: -7.084038734436035
    9. ' +' → logprob: -7.334038734436035
    10. '!=' → logprob: -7.334038734436035

Token 249: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005288900341838598
    2. ' ' → logprob: -5.255289077758789
    3. '=' → logprob: -10.755289077758789
    4. '```' → logprob: -11.505289077758789
    5. '>' → logprob: -11.630289077758789
    6. '-' → logprob: -12.130289077758789
    7. '   ' → logprob: -13.255289077758789
    8. ' -' → logprob: -13.255289077758789
    9. ' =' → logprob: -13.380289077758789
    10. 'i' → logprob: -14.130289077758789

Token 250: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043266814202070236
    2. ')' → logprob: -4.418266773223877
    3. ']' → logprob: -5.418266773223877
    4. ',' → logprob: -5.418266773223877
    5. ':' → logprob: -5.668266773223877
    6. ' and' → logprob: -5.793266773223877
    7. ' or' → logprob: -6.168266773223877
    8. '[' → logprob: -6.293266773223877
    9. '.' → logprob: -6.793266773223877
    10. ' ' → logprob: -6.793266773223877

Token 251: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006463141762651503
    2. ' ' → logprob: -7.375646114349365
    3. 't' → logprob: -11.125646591186523
    4. ' t' → logprob: -13.125646591186523
    5. '   ' → logprob: -13.250646591186523
    6. 'max' → logprob: -15.000646591186523
    7. '  ' → logprob: -15.750646591186523
    8. 'time' → logprob: -16.063146591186523
    9. ' ' → logprob: -16.188146591186523
    10. '    ' → logprob: -16.313146591186523

Token 252: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.03521392197581e-05
    2. ' ' → logprob: -10.500030517578125
    3. 't' → logprob: -13.125030517578125
    4. 'max' → logprob: -15.000030517578125
    5. '   ' → logprob: -16.000030517578125
    6. 'time' → logprob: -16.750030517578125
    7. ' t' → logprob: -17.125030517578125
    8. '
' → logprob: -17.312530517578125
    9. '  ' → logprob: -17.812530517578125
    10. '```' → logprob: -17.812530517578125

Token 253: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007040601689368486
    2. '    
' → logprob: -6.257040500640869
    3. '
' → logprob: -6.632040500640869
    4. ',' → logprob: -7.882040500640869
    5. 'time' → logprob: -7.882040500640869
    6. ' if' → logprob: -7.882040500640869
    7. 'for' → logprob: -8.007040977478027
    8. 'if' → logprob: -8.257040977478027
    9. ' for' → logprob: -8.257040977478027
    10. '  
' → logprob: -8.757040977478027

Token 254: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027445826679468155
    2. 'start' → logprob: -4.1524457931518555
    3. ' start' → logprob: -4.7774457931518555
    4. '    
' → logprob: -6.5274457931518555
    5. 'time' → logprob: -8.277445793151855
    6. ' time' → logprob: -8.527445793151855
    7. '    ' → logprob: -8.902445793151855
    8. ',' → logprob: -8.902445793151855
    9. '_start' → logprob: -9.027445793151855
    10. ' s' → logprob: -9.402445793151855

Token 255: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.842818021774292
    2. '   ' → logprob: -0.967818021774292
    3. ' start' → logprob: -1.717818021774292
    4. '    
' → logprob: -5.467818260192871
    5. '
' → logprob: -6.967818260192871
    6. '_start' → logprob: -7.217818260192871
    7. 'time' → logprob: -7.342818260192871
    8. ' time' → logprob: -7.717818260192871
    9. ' if' → logprob: -7.967818260192871
    10. ' s' → logprob: -8.092818260192871

Token 256: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.627982497215271
    2. '_' → logprob: -1.502982497215271
    3. ' =' → logprob: -1.502982497215271
    4. '=' → logprob: -3.8779826164245605
    5. '_times' → logprob: -8.252982139587402
    6. ' ' → logprob: -9.002982139587402
    7. '_t' → logprob: -9.252982139587402
    8. '_=' → logprob: -10.002982139587402
    9. ' _' → logprob: -10.252982139587402
    10. '_i' → logprob: -10.627982139587402

Token 257: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06996700167655945
    2. '=' → logprob: -2.694967031478882
    3. ' ' → logprob: -11.444967269897461
    4. ' if' → logprob: -11.819967269897461
    5. 'if' → logprob: -12.319967269897461
    6. '[i' → logprob: -13.194967269897461
    7. '=i' → logprob: -13.319967269897461
    8. '_' → logprob: -13.694967269897461
    9. '_time' → logprob: -14.069967269897461
    10. ')' → logprob: -14.069967269897461

Token 258: ' cum' (ID: 10023)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.906684160232544
    2. ' cum' → logprob: -1.031684160232544
    3. '0' → logprob: -1.531684160232544
    4. ' ' → logprob: -3.781684160232544
    5. '   ' → logprob: -8.344183921813965
    6. 'c' → logprob: -8.969183921813965
    7. ' cumulative' → logprob: -9.531683921813965
    8. '(' → logprob: -9.844183921813965
    9. '	c' → logprob: -9.906683921813965
    10. '  ' → logprob: -10.406683921813965

Token 259: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.0921942703134846e-05
    2. 'time' → logprob: -11.62501049041748
    3. '_' → logprob: -13.62501049041748
    4. 't' → logprob: -15.37501049041748
    5. '_t' → logprob: -16.000011444091797
    6. 'u' → logprob: -16.875011444091797
    7. '   ' → logprob: -16.875011444091797
    8. '_times' → logprob: -17.125011444091797
    9. 'cum' → logprob: -17.375011444091797
    10. '_TIME' → logprob: -18.000011444091797

Token 260: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001612267515156418
    2. '[max' → logprob: -9.250161170959473
    3. 'i' → logprob: -10.000161170959473
    4. '[' → logprob: -11.875161170959473
    5. 'max' → logprob: -12.625161170959473
    6. '-' → logprob: -12.625161170959473
    7. '   ' → logprob: -13.250161170959473
    8. ' [' → logprob: -13.250161170959473
    9. '[-' → logprob: -14.500161170959473
    10. ' i' → logprob: -14.500161170959473

Token 261: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.746380237629637e-05
    2. ' -' → logprob: -9.375097274780273
    3. 'i' → logprob: -12.000097274780273
    4. ']' → logprob: -12.625097274780273
    5. '1' → logprob: -13.500097274780273
    6. '   ' → logprob: -14.125097274780273
    7. '[i' → logprob: -15.500097274780273
    8. '-i' → logprob: -15.500097274780273
    9. '-
' → logprob: -16.000097274780273
    10. ' ' → logprob: -16.375097274780273

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.465036105713807e-06
    2. ' ' → logprob: -12.250007629394531
    3. '-' → logprob: -13.750007629394531
    4. ']' → logprob: -14.000007629394531
    5. '   ' → logprob: -15.000007629394531
    6. '2' → logprob: -16.37500762939453
    7. '```' → logprob: -16.50000762939453
    8. '0' → logprob: -17.75000762939453
    9. 'if' → logprob: -17.81250762939453
    10. '(' → logprob: -17.81250762939453

Token 263: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006000961875542998
    2. ']+' → logprob: -7.8755998611450195
    3. 'if' → logprob: -8.62559986114502
    4. ' ]' → logprob: -10.87559986114502
    5. ' if' → logprob: -10.87559986114502
    6. '+' → logprob: -13.75059986114502
    7. '])' → logprob: -14.50059986114502
    8. ']
' → logprob: -15.00059986114502
    9. ']*' → logprob: -15.25059986114502
    10. ')' → logprob: -15.37559986114502

Token 264: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1311899870634079
    2. 'if' → logprob: -2.131190061569214
    3. '+' → logprob: -5.631189823150635
    4. ' +' → logprob: -7.881189823150635
    5. '   ' → logprob: -8.381190299987793
    6. ' ' → logprob: -10.256190299987793
    7. '	if' → logprob: -10.881190299987793
    8. '
' → logprob: -12.381190299987793
    9. '  ' → logprob: -13.881190299987793
    10. ')' → logprob: -14.506190299987793

Token 265: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16022513806819916
    2. ' i' → logprob: -1.9102251529693604
    3. '0' → logprob: -14.660224914550781
    4. '   ' → logprob: -15.285224914550781
    5. '	i' → logprob: -15.535224914550781
    6. '(i' → logprob: -16.16022491455078
    7. ' ' → logprob: -16.66022491455078
    8. '  ' → logprob: -17.41022491455078
    9. ' ' → logprob: -18.16022491455078
    10. 'I' → logprob: -18.78522491455078

Token 266: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6365677118301392
    2. ' >' → logprob: -0.7615677118301392
    3. ' >=' → logprob: -6.13656759262085
    4. '>=' → logprob: -7.38656759262085
    5. ' !=' → logprob: -7.51156759262085
    6. '!=' → logprob: -8.761568069458008
    7. '0' → logprob: -8.886568069458008
    8. 'if' → logprob: -9.511568069458008
    9. ' ' → logprob: -10.136568069458008
    10. ' if' → logprob: -10.261568069458008

Token 267: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001730987336486578
    2. ' ' → logprob: -6.376730918884277
    3. '=' → logprob: -10.501730918884277
    4. '   ' → logprob: -15.251730918884277
    5. '```' → logprob: -15.251730918884277
    6. '-' → logprob: -15.376730918884277
    7. '  ' → logprob: -15.751730918884277
    8. '
' → logprob: -16.126731872558594
    9. 'i' → logprob: -16.314231872558594
    10. ' =' → logprob: -16.626731872558594

Token 268: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038074489566497505
    2. ' ' → logprob: -7.875380516052246
    3. '=' → logprob: -15.000380516052246
    4. '
' → logprob: -16.000381469726562
    5. '-' → logprob: -16.250381469726562
    6. '   ' → logprob: -16.250381469726562
    7. '  ' → logprob: -17.250381469726562
    8. '```' → logprob: -17.750381469726562
    9. ' -' → logprob: -17.812881469726562
    10. 'i' → logprob: -18.000381469726562

Token 269: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.05489864572882652
    2. 'else' → logprob: -2.929898738861084
    3. ' ' → logprob: -11.804898262023926
    4. '	else' → logprob: -12.179898262023926
    5. '<|end|>' → logprob: -13.929898262023926
    6. '+' → logprob: -14.179898262023926
    7. '   ' → logprob: -14.679898262023926
    8. ' ' → logprob: -15.429898262023926
    9. ',' → logprob: -15.554898262023926
    10. ' 
' → logprob: -15.679898262023926

Token 270: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0059287971816957
    2. ' ' → logprob: -5.130928993225098
    3. '   ' → logprob: -17.38092803955078
    4. ' ' → logprob: -17.63092803955078
    5. '  ' → logprob: -18.06842803955078
    6. 't' → logprob: -18.31842803955078
    7. ' t' → logprob: -18.63092803955078
    8. '    ' → logprob: -19.69342803955078
    9. '۰' → logprob: -19.94342803955078
    10. '00' → logprob: -20.00592803955078

Token 271: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. 't' → logprob: -17.00007438659668
    4. '   ' → logprob: -17.62507438659668
    5. '  ' → logprob: -18.75007438659668
    6. '00' → logprob: -19.43757438659668
    7. '
' → logprob: -19.81257438659668
    8. '۰' → logprob: -19.93757438659668
    9. ' ' → logprob: -20.12507438659668
    10. '```' → logprob: -20.18757438659668

Token 272: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02551458217203617
    2. '
' → logprob: -4.150514602661133
    3. '    
' → logprob: -5.650514602661133
    4. ',' → logprob: -6.775514602661133
    5. ' time' → logprob: -6.900514602661133
    6. ' completed' → logprob: -7.525514602661133
    7. '  
' → logprob: -7.525514602661133
    8. ' if' → logprob: -8.525514602661133
    9. 'completed' → logprob: -8.525514602661133
    10. '    ' → logprob: -8.775514602661133

Token 273: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03432449325919151
    2. '
' → logprob: -4.784324645996094
    3. '    
' → logprob: -4.909324645996094
    4. ' 
' → logprob: -5.284324645996094
    5. '  
' → logprob: -5.909324645996094
    6. ' time' → logprob: -6.034324645996094
    7. ' if' → logprob: -6.284324645996094
    8. ' t' → logprob: -6.909324645996094
    9. ' x' → logprob: -7.534324645996094
    10. ',' → logprob: -7.659324645996094

Token 274: ' elapsed' (ID: 56505)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.114344835281372
    2. ' if' → logprob: -1.364344835281372
    3. 'elapsed' (adapté à ' elapsed') → logprob: -1.614344835281372
    4. ' elapsed' → logprob: -2.364344835281372
    5. 'time' → logprob: -3.989344835281372
    6. 'completed' → logprob: -4.239344596862793
    7. 'available' → logprob: -4.239344596862793
    8. ' time' → logprob: -4.364344596862793
    9. 'passed' → logprob: -4.614344596862793
    10. '   ' → logprob: -5.239344596862793

Token 275: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17798107862472534
    2. '_time' → logprob: -2.05298113822937
    3. '=' → logprob: -3.42798113822937
    4. '_' → logprob: -6.302980899810791
    5. ' ' → logprob: -9.30298137664795
    6. '_t' → logprob: -9.55298137664795
    7. ' _' → logprob: -9.80298137664795
    8. 'time' → logprob: -9.80298137664795
    9. ')' → logprob: -10.80298137664795
    10. '_times' → logprob: -10.92798137664795

Token 276: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.34412848949432373
    2. 't' → logprob: -1.3441284894943237
    3. ' max' → logprob: -3.7191286087036133
    4. 'max' → logprob: -5.094128608703613
    5. ' ' → logprob: -12.969128608703613
    6. ' min' → logprob: -13.344128608703613
    7. '   ' → logprob: -13.719128608703613
    8. 'min' → logprob: -14.219128608703613
    9. ' ' → logprob: -14.344128608703613
    10. '	t' → logprob: -15.219128608703613

Token 277: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.00784297101199627
    2. '-' → logprob: -4.882843017578125
    3. '<|end|>' → logprob: -9.007843017578125
    4. ' ' → logprob: -9.632843017578125
    5. ')' → logprob: -10.882843017578125
    6. '   ' → logprob: -11.382843017578125
    7. '<|end|>' → logprob: -12.382843017578125
    8. '[' → logprob: -13.007843017578125
    9. ' -=' → logprob: -13.382843017578125
    10. '  ' → logprob: -13.507843017578125

Token 278: ' ' (ID: 220)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.6405518054962158
    2. '1' → logprob: -1.1405518054962158
    3. ' start' → logprob: -2.140551805496216
    4. ' ' → logprob: -3.515551805496216
    5. ' -' → logprob: -6.640551567077637
    6. '0' → logprob: -6.765551567077637
    7. 'h' → logprob: -6.765551567077637
    8. ' h' → logprob: -7.390551567077637
    9. '-' → logprob: -7.890551567077637
    10. '(start' → logprob: -7.890551567077637

Token 279: '0' (ID: 15)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.1455332636833191
    2. '1' → logprob: -2.145533323287964
    3. ' start' → logprob: -4.770533084869385
    4. '-' → logprob: -5.395533084869385
    5. '0' → logprob: -6.020533084869385
    6. '(start' → logprob: -6.895533084869385
    7. ' ' → logprob: -7.520533084869385
    8. ' -' → logprob: -7.645533084869385
    9. '(' → logprob: -8.395533561706543
    10. 'h' → logprob: -8.520533561706543

Token 280: '.' (ID: 13)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3300110399723053
    2. ' -' → logprob: -1.455011010169983
    3. '1' → logprob: -3.2050111293792725
    4. '-start' → logprob: -5.330010890960693
    5. 'start' → logprob: -6.955010890960693
    6. '
' → logprob: -7.955010890960693
    7. ' ' → logprob: -8.080011367797852
    8. ')' → logprob: -8.580011367797852
    9. ' start' → logprob: -8.705011367797852
    10. '   ' → logprob: -10.330011367797852

Token 281: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.02729421854019165
    2. '0' → logprob: -4.277294158935547
    3. '000' → logprob: -4.402294158935547
    4. '1' → logprob: -7.652294158935547
    5. '001' → logprob: -8.277294158935547
    6. '01' → logprob: -10.152294158935547
    7. '00' → logprob: -11.652294158935547
    8. '999' → logprob: -12.777294158935547
    9. '500' → logprob: -12.902294158935547
    10. '25' → logprob: -13.527294158935547

Token 282: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3300350308418274
    2. '-' → logprob: -1.9550349712371826
    3. '<|end|>' → logprob: -2.8300349712371826
    4. '
' → logprob: -3.2050349712371826
    5. ')' → logprob: -4.580035209655762
    6. ' //' → logprob: -5.205035209655762
    7. ' ' → logprob: -5.205035209655762
    8. '   ' → logprob: -5.580035209655762
    9. '//' → logprob: -5.705035209655762
    10. '#' → logprob: -5.705035209655762

Token 283: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.22541776299476624
    2. ' start' → logprob: -1.6004177331924438
    3. ' ' → logprob: -13.350418090820312
    4. '	start' → logprob: -14.225418090820312
    5. '-start' → logprob: -14.350418090820312
    6. '(start' → logprob: -14.475418090820312
    7. '[start' → logprob: -15.225418090820312
    8. '_start' → logprob: -15.350418090820312
    9. '   ' → logprob: -15.725418090820312
    10. '
' → logprob: -16.100418090820312

Token 284: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -3.531315314830863e-06
    2. 'time' → logprob: -12.875003814697266
    3. '_' → logprob: -15.000003814697266
    4. '_times' → logprob: -15.500003814697266
    5. '_tim' → logprob: -16.375003814697266
    6. '_t' → logprob: -16.375003814697266
    7. 'Time' → logprob: -16.750003814697266
    8. '_TIME' → logprob: -17.625003814697266
    9. ' time' → logprob: -18.000003814697266
    10. '_Time' → logprob: -18.125003814697266

Token 285: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07528963685035706
    2. '
' → logprob: -3.075289726257324
    3. ')' → logprob: -4.950289726257324
    4. ' if' → logprob: -5.450289726257324
    5. '    
' → logprob: -5.700289726257324
    6. ' 
' → logprob: -5.825289726257324
    7. '<|end|>' → logprob: -5.950289726257324
    8. ' //' → logprob: -6.325289726257324
    9. '  
' → logprob: -6.950289726257324
    10. ',' → logprob: -7.700289726257324

Token 286: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02943824790418148
    2. '
' → logprob: -4.279438018798828
    3. ')' → logprob: -5.029438018798828
    4. '    
' → logprob: -5.529438018798828
    5. ' if' → logprob: -6.779438018798828
    6. ' //' → logprob: -6.904438018798828
    7. ')
' → logprob: -7.529438018798828
    8. '//' → logprob: -7.779438018798828
    9. '<|end|>' → logprob: -8.029438018798828
    10. ' 
' → logprob: -8.279438018798828

Token 287: ' how' (ID: 1495)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.913985550403595
    2. ' ' → logprob: -1.1639854907989502
    3. '1' → logprob: -1.5389854907989502
    4. ' max' → logprob: -3.66398549079895
    5. '<|end|>' → logprob: -3.91398549079895
    6. 'int' → logprob: -5.038985729217529
    7. 'max' → logprob: -5.163985729217529
    8. ' int' → logprob: -6.038985729217529
    9. ' h' → logprob: -6.163985729217529
    10. ')' → logprob: -6.413985729217529

Token 288: ' many' (ID: 1991)
  Prédit: ' many'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' many' → logprob: -0.3326509892940521
    2. ' much' → logprob: -1.4576510190963745
    3. 'many' → logprob: -3.832650899887085
    4. ' far' → logprob: -4.582651138305664
    5. 'much' → logprob: -4.582651138305664
    6. '   ' → logprob: -6.082651138305664
    7. ' long' → logprob: -6.832651138305664
    8. 'max' → logprob: -6.957651138305664
    9. ' max' → logprob: -7.332651138305664
    10. '_many' → logprob: -7.582651138305664

Token 289: ' minutes' (ID: 5438)
  Prédit: ' items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' items' → logprob: -0.30599135160446167
    2. 'items' → logprob: -1.8059914112091064
    3. ' completed' → logprob: -2.9309914112091064
    4. '<|end|>' → logprob: -3.5559914112091064
    5. ' complete' → logprob: -4.930991172790527
    6. '_items' → logprob: -5.805991172790527
    7. 'completed' → logprob: -5.930991172790527
    8. ')' → logprob: -6.805991172790527
    9. '<|end|>' → logprob: -7.430991172790527
    10. ' ' → logprob: -7.430991172790527

Token 290: ' passed' (ID: 10292)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4883238971233368
    2. ' //' → logprob: -1.2383239269256592
    3. ')' → logprob: -3.238323926925659
    4. '//' → logprob: -3.613323926925659
    5. ' /' → logprob: -4.86332368850708
    6. '<|end|>' → logprob: -5.36332368850708
    7. '<|end|>' → logprob: -5.48832368850708
    8. ' ' → logprob: -5.61332368850708
    9. '    
' → logprob: -6.23832368850708
    10. '    ' → logprob: -6.73832368850708

Token 291: ' since' (ID: 3630)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07965581864118576
    2. ' //' → logprob: -2.954655885696411
    3. '//' → logprob: -5.079655647277832
    4. ')' → logprob: -5.204655647277832
    5. ' /' → logprob: -5.954655647277832
    6. '
' → logprob: -6.079655647277832
    7. ' if' → logprob: -6.579655647277832
    8. '<|end|>' → logprob: -6.579655647277832
    9. '<|end|>' → logprob: -6.704655647277832
    10. '    
' → logprob: -7.454655647277832

Token 292: ' this' (ID: 495)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7402510643005371
    2. 'start' → logprob: -2.115251064300537
    3. 'elapsed' → logprob: -2.240251064300537
    4. ' the' → logprob: -2.865251064300537
    5. ' ' → logprob: -2.865251064300537
    6. ' start' → logprob: -3.240251064300537
    7. 'the' → logprob: -3.365251064300537
    8. ' elapsed' → logprob: -3.865251064300537
    9. 'starting' → logprob: -4.365251064300537
    10. ' i' → logprob: -4.615251064300537

Token 293: ' student' (ID: 6760)
  Prédit: ' student'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' student' → logprob: -0.07561595737934113
    2. ' i' → logprob: -3.450615882873535
    3. ' elapsed' → logprob: -4.450615882873535
    4. 'student' → logprob: -5.200615882873535
    5. ' student's' → logprob: -5.325615882873535
    6. 'i' → logprob: -5.325615882873535
    7. ' item' → logprob: -5.700615882873535
    8. ' completed' → logprob: -5.950615882873535
    9. '   ' → logprob: -6.575615882873535
    10. 'elapsed' → logprob: -6.950615882873535

Token 294: ' started' (ID: 5424)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6110860705375671
    2. ')' → logprob: -1.236086130142212
    3. ' //' → logprob: -2.486086130142212
    4. '//' → logprob: -3.486086130142212
    5. '<|end|>' → logprob: -3.861086130142212
    6. '<|end|>' → logprob: -4.611085891723633
    7. ' if' → logprob: -6.111085891723633
    8. ' /' → logprob: -6.236085891723633
    9. ' )' → logprob: -6.236085891723633
    10. ' *' → logprob: -6.736085891723633

Token 295: ' checking' (ID: 19141)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038933036848902702
    2. '    
' → logprob: -6.5038933753967285
    3. ' if' → logprob: -7.3788933753967285
    4. ')' → logprob: -7.5038933753967285
    5. ',' → logprob: -7.7538933753967285
    6. '
' → logprob: -8.37889289855957
    7. '    ' → logprob: -9.25389289855957
    8. 'if' → logprob: -9.87889289855957
    9. '  
' → logprob: -10.25389289855957
    10. ' x' → logprob: -10.25389289855957

Token 296: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40511661767959595
    2. 'up' → logprob: -1.2801165580749512
    3. 'in' → logprob: -3.905116558074951
    4. 'items' → logprob: -4.780116558074951
    5. '_' → logprob: -5.155116558074951
    6. '=' → logprob: -5.780116558074951
    7. 'ups' → logprob: -5.905116558074951
    8. '_up' → logprob: -6.030116558074951
    9. 'out' → logprob: -6.530116558074951
    10. '_items' → logprob: -6.530116558074951

Token 297: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0171294454485178
    2. ' completed' → logprob: -4.767129421234131
    3. ' if' → logprob: -5.767129421234131
    4. 'completed' → logprob: -5.892129421234131
    5. ' items' → logprob: -7.392129421234131
    6. 'if' → logprob: -7.642129421234131
    7. 'items' → logprob: -8.142129898071289
    8. '    ' → logprob: -8.392129898071289
    9. 'count' → logprob: -8.642129898071289
    10. '    
' → logprob: -8.767129898071289

Token 298: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4671154022216797
    2. 'if' (adapté à ' if') → logprob: -1.7171154022216797
    3. 'completed' → logprob: -1.8421154022216797
    4. 'max' → logprob: -2.3421154022216797
    5. 'x' → logprob: -2.4671154022216797
    6. ' if' → logprob: -2.8421154022216797
    7. 'items' → logprob: -3.2171154022216797
    8. ' completed' → logprob: -3.2171154022216797
    9. ' max' → logprob: -3.5921154022216797
    10. ' x' → logprob: -3.7171154022216797

Token 299: ' elapsed' (ID: 56505)
  Prédit: ' elapsed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elapsed' → logprob: -0.11289556324481964
    2. 'elapsed' → logprob: -2.2378954887390137
    3. '   ' → logprob: -9.737895965576172
    4. 'el' → logprob: -12.862895965576172
    5. ' int' → logprob: -13.112895965576172
    6. ' ' → logprob: -13.112895965576172
    7. 'Elapsed' → logprob: -13.362895965576172
    8. '_elapsed' → logprob: -13.487895965576172
    9. ' el' → logprob: -13.612895965576172
    10. '	el' → logprob: -13.987895965576172

Token 300: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.4139862358570099
    2. '<=' → logprob: -1.5389862060546875
    3. ' <' → logprob: -2.9139862060546875
    4. '<' → logprob: -3.2889862060546875
    5. ' >' → logprob: -3.9139862060546875
    6. '>' → logprob: -4.7889862060546875
    7. ' >=' → logprob: -5.9139862060546875
    8. '>=' → logprob: -6.4139862060546875
    9. ' ' → logprob: -8.913986206054688
    10. '<int' → logprob: -9.913986206054688

Token 301: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21242038905620575
    2. '1' → logprob: -1.8374203443527222
    3. ' ' → logprob: -3.5874204635620117
    4. 'h' → logprob: -5.587420463562012
    5. ' h' → logprob: -7.462420463562012
    6. '=' → logprob: -9.087420463562012
    7. '   ' → logprob: -10.712420463562012
    8. '  ' → logprob: -12.337420463562012
    9. '=h' → logprob: -12.837420463562012
    10. ' =' → logprob: -12.962420463562012

Token 302: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03512898460030556
    2. '1' → logprob: -3.4101290702819824
    3. 'h' → logprob: -6.660129070281982
    4. ' ' → logprob: -8.535128593444824
    5. ' h' → logprob: -13.285128593444824
    6. '=' → logprob: -13.910128593444824
    7. '   ' → logprob: -14.785128593444824
    8. '-' → logprob: -15.160128593444824
    9. '```' → logprob: -15.785128593444824
    10. '=h' → logprob: -16.09762954711914

Token 303: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03971949219703674
    2. ':
' → logprob: -3.414719581604004
    3. '):' → logprob: -5.664719581604004
    4. '   ' → logprob: -6.539719581604004
    5. '):
' → logprob: -7.914719581604004
    6. '       ' → logprob: -8.164719581604004
    7. ')' → logprob: -8.289719581604004
    8. ' :' → logprob: -9.414719581604004
    9. ' or' → logprob: -9.664719581604004
    10. ':return' → logprob: -10.914719581604004

Token 304: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27349647879600525
    2. '   ' → logprob: -1.6484965085983276
    3. '0' → logprob: -3.398496389389038
    4. ' res' → logprob: -5.148496627807617
    5. 'res' → logprob: -5.648496627807617
    6. '
' → logprob: -6.773496627807617
    7. ' ' → logprob: -7.398496627807617
    8. ',' → logprob: -7.523496627807617
    9. '    
' → logprob: -7.898496627807617
    10. '    ' → logprob: -8.148496627807617

Token 305: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.14809229969978333
    2. ' res' → logprob: -2.273092269897461
    3. '   ' → logprob: -3.523092269897461
    4. '       ' → logprob: -6.273092269897461
    5. '0' → logprob: -6.398092269897461
    6. 'completed' → logprob: -7.648092269897461
    7. 'count' → logprob: -8.523092269897461
    8. 'items' → logprob: -8.773092269897461
    9. 'x' → logprob: -9.023092269897461
    10. '
' → logprob: -9.023092269897461

Token 306: ' Not' (ID: 4037)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.20885050296783447
    2. ' res' → logprob: -1.8338505029678345
    3. '   ' → logprob: -3.583850383758545
    4. '       ' → logprob: -7.958850383758545
    5. '0' → logprob: -8.333850860595703
    6. 'completed' → logprob: -9.458850860595703
    7. '    ' → logprob: -10.333850860595703
    8. '
' → logprob: -10.333850860595703
    9. '	res' → logprob: -10.458850860595703
    10. 'items' → logprob: -10.458850860595703

Token 307: ' started' (ID: 5424)
  Prédit: 'started'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'started' → logprob: -0.7250521779060364
    2. 'completed' → logprob: -1.8500521183013916
    3. 'a' → logprob: -2.8500521183013916
    4. ' a' → logprob: -2.9750521183013916
    5. 'done' → logprob: -2.9750521183013916
    6. ' started' → logprob: -3.1000521183013916
    7. 'finished' → logprob: -3.3500521183013916
    8. ' completed' → logprob: -3.3500521183013916
    9. '0' → logprob: -3.7250521183013916
    10. ' done' → logprob: -4.350052356719971

Token 308: ' yet' (ID: 5073)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5529266595840454
    2. 'res' → logprob: -1.1779266595840454
    3. ' res' → logprob: -2.427926540374756
    4. '       ' → logprob: -3.677926540374756
    5. ',' → logprob: -6.927926540374756
    6. ',res' → logprob: -7.802926540374756
    7. '0' → logprob: -7.927926540374756
    8. '           ' → logprob: -8.177927017211914
    9. ' ' → logprob: -8.552927017211914
    10. 'count' → logprob: -8.677927017211914

Token 309: ',' (ID: 11)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7716686129570007
    2. '   ' → logprob: -0.8966686129570007
    3. '       ' → logprob: -2.3966686725616455
    4. 'res' → logprob: -4.021668434143066
    5. ',' → logprob: -5.021668434143066
    6. ' res' → logprob: -5.271668434143066
    7. '
' → logprob: -5.521668434143066
    8. ' ' → logprob: -5.896668434143066
    9. '    
' → logprob: -7.521668434143066
    10. '        
' → logprob: -8.521668434143066

Token 310: ' so' (ID: 813)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5468254685401917
    2. ' res' → logprob: -1.2968254089355469
    3. '   ' → logprob: -1.9218254089355469
    4. '0' → logprob: -7.421825408935547
    5. '       ' → logprob: -8.671825408935547
    6. 'completed' → logprob: -8.921825408935547
    7. ' completed' → logprob: -9.046825408935547
    8. ' ' → logprob: -9.296825408935547
    9. 'count' → logprob: -9.671825408935547
    10. '	res' → logprob: -9.921825408935547

Token 311: ' item' (ID: 2169)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.6603212952613831
    2. 'res' → logprob: -0.7853212952613831
    3. '   ' → logprob: -4.285321235656738
    4. '0' → logprob: -4.410321235656738
    5. ' completed' → logprob: -7.660321235656738
    6. 'completed' → logprob: -7.785321235656738
    7. ' ' → logprob: -8.035321235656738
    8. '       ' → logprob: -10.035321235656738
    9. ' items' → logprob: -10.660321235656738
    10. 'count' → logprob: -10.785321235656738

Token 312: ' is' (ID: 382)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12038249522447586
    2. '0' → logprob: -2.49538254737854
    3. '_completed' → logprob: -3.87038254737854
    4. 'completed' → logprob: -5.745382308959961
    5. ' ' → logprob: -6.245382308959961
    6. ' s' → logprob: -6.870382308959961
    7. ' completed' → logprob: -7.120382308959961
    8. '=' → logprob: -7.495382308959961
    9. 'count' → logprob: -7.620382308959961
    10. '   ' → logprob: -7.745382308959961

Token 313: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007681751740165055
    2. ' ' → logprob: -7.250768184661865
    3. '   ' → logprob: -10.500767707824707
    4. 'not' → logprob: -10.750767707824707
    5. ' not' → logprob: -12.625767707824707
    6. 'completed' → logprob: -13.250767707824707
    7. '  ' → logprob: -14.375767707824707
    8. '000' → logprob: -14.875767707824707
    9. 'None' → logprob: -15.000767707824707
    10. '-' → logprob: -15.125767707824707

Token 314: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4881879400927573e-05
    2. ' ' → logprob: -10.375035285949707
    3. 'not' → logprob: -13.500035285949707
    4. '   ' → logprob: -14.375035285949707
    5. 'i' → logprob: -14.750035285949707
    6. '-' → logprob: -14.875035285949707
    7. 'None' → logprob: -15.500035285949707
    8. 'completed' → logprob: -15.625035285949707
    9. 'none' → logprob: -15.750035285949707
    10. '1' → logprob: -16.81253433227539

Token 315: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15624749660491943
    2. '<|end|>' → logprob: -2.531247615814209
    3. ' )' → logprob: -3.531247615814209
    4. ' ' → logprob: -4.781247615814209
    5. '
' → logprob: -5.031247615814209
    6. '0' → logprob: -5.156247615814209
    7. '1' → logprob: -5.781247615814209
    8. ']' → logprob: -5.906247615814209
    9. ',' → logprob: -6.156247615814209
    10. ' ,' → logprob: -7.156247615814209

Token 316: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00976387970149517
    2. ' res' → logprob: -5.259763717651367
    3. '1' → logprob: -5.884763717651367
    4. 'res' → logprob: -7.134763717651367
    5. 'print' → logprob: -8.259763717651367
    6. '0' → logprob: -8.884763717651367
    7. ' print' → logprob: -8.884763717651367
    8. ' ' → logprob: -9.259763717651367
    9. '    
' → logprob: -9.759763717651367
    10. ',' → logprob: -9.759763717651367

Token 317: ' item' (ID: 2169)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.11689428240060806
    2. ' res' → logprob: -2.366894245147705
    3. '   ' → logprob: -4.116894245147705
    4. 'print' → logprob: -8.991894721984863
    5. '1' → logprob: -9.991894721984863
    6. ' ' → logprob: -10.866894721984863
    7. '    
' → logprob: -11.241894721984863
    8. ' print' → logprob: -11.491894721984863
    9. '
' → logprob: -11.616894721984863
    10. '	res' → logprob: -11.866894721984863

Token 318: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28212159872055054
    2. '=' → logprob: -1.4071216583251953
    3. 's' → logprob: -7.282121658325195
    4. '_' → logprob: -9.907121658325195
    5. '_id' → logprob: -9.907121658325195
    6. '_idx' → logprob: -10.032121658325195
    7. '   ' → logprob: -10.157121658325195
    8. '_number' → logprob: -11.032121658325195
    9. ' ' → logprob: -11.032121658325195
    10. ')' → logprob: -11.407121658325195

Token 319: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000493937055580318
    2. '0' → logprob: -7.875494003295898
    3. ' ' → logprob: -9.125494003295898
    4. '   ' → logprob: -12.250494003295898
    5. '`' → logprob: -17.2504940032959
    6. '  ' → logprob: -17.6254940032959
    7. '```' → logprob: -17.6254940032959
    8. '
' → logprob: -18.2504940032959
    9. '<|end|>' → logprob: -18.8129940032959
    10. '[' → logprob: -19.0004940032959

Token 320: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004995359340682626
    2. '0' → logprob: -7.625499725341797
    3. ' ' → logprob: -11.375499725341797
    4. '   ' → logprob: -17.375499725341797
    5. '-' → logprob: -17.875499725341797
    6. '100' → logprob: -19.000499725341797
    7. 'i' → logprob: -19.125499725341797
    8. '2' → logprob: -19.250499725341797
    9. '`' → logprob: -19.250499725341797
    10. '(' → logprob: -19.250499725341797

Token 321: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016367007046937943
    2. '
' → logprob: -4.516366958618164
    3. 'else' → logprob: -5.766366958618164
    4. ' else' → logprob: -6.391366958618164
    5. '    
' → logprob: -8.016366958618164
    6. '  
' → logprob: -10.516366958618164
    7. '<|end|>' → logprob: -10.516366958618164
    8. '   
' → logprob: -11.016366958618164
    9. ')' → logprob: -11.391366958618164
    10. '\n' → logprob: -11.516366958618164

Token 322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0068624247796833515
    2. 'else' → logprob: -5.881862640380859
    3. ' else' → logprob: -6.006862640380859
    4. '
' → logprob: -6.756862640380859
    5. '    
' → logprob: -8.75686264038086
    6. '<|end|>' → logprob: -8.88186264038086
    7. 'elif' → logprob: -10.75686264038086
    8. '       ' → logprob: -10.75686264038086
    9. '  
' → logprob: -11.25686264038086
    10. ')' → logprob: -11.75686264038086

Token 323: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.18318375945091248
    2. '   ' → logprob: -1.9331837892532349
    3. ' else' → logprob: -3.9331836700439453
    4. 'elif' → logprob: -5.808183670043945
    5. ' elif' → logprob: -10.308183670043945
    6. ':' → logprob: -10.558183670043945
    7. '  ' → logprob: -11.183183670043945
    8. '	else' → logprob: -11.433183670043945
    9. ' ' → logprob: -12.058183670043945
    10. '_else' → logprob: -12.058183670043945

Token 324: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18910163640975952
    2. ':
' → logprob: -2.1891016960144043
    3. '       ' → logprob: -2.8141016960144043
    4. '   ' → logprob: -9.189101219177246
    5. ',' → logprob: -9.939101219177246
    6. '):
' → logprob: -10.314101219177246
    7. ':

' → logprob: -10.314101219177246
    8. '        
' → logprob: -11.314101219177246
    9. '):' → logprob: -11.564101219177246
    10. '     ' → logprob: -11.814101219177246

Token 325: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4464121162891388
    2. ' item' → logprob: -1.5714120864868164
    3. 'item' → logprob: -2.0714120864868164
    4. '   ' → logprob: -4.196412086486816
    5. 'int' → logprob: -5.571412086486816
    6. ' min' → logprob: -5.696412086486816
    7. ' int' → logprob: -5.946412086486816
    8. 'import' → logprob: -7.196412086486816
    9. 'min' → logprob: -8.321412086486816
    10. ' x' → logprob: -9.696412086486816

Token 326: ' item' (ID: 2169)
  Prédit: ' item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.5015199780464172
    2. 'item' (adapté à ' item') → logprob: -1.0015199184417725
    3. '       ' → logprob: -4.251520156860352
    4. ' int' → logprob: -5.126520156860352
    5. 'int' → logprob: -5.501520156860352
    6. ' min' → logprob: -7.251520156860352
    7. ' elapsed' → logprob: -7.376520156860352
    8. 'elapsed' → logprob: -8.001520156860352
    9. ' x' → logprob: -8.376520156860352
    10. 'import' → logprob: -8.376520156860352

Token 327: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31328830122947693
    2. ' =' → logprob: -1.3132883310317993
    3. '=int' → logprob: -11.313288688659668
    4. '   ' → logprob: -12.063288688659668
    5. '=item' → logprob: -12.938288688659668
    6. ' ' → logprob: -13.063288688659668
    7. '       ' → logprob: -14.188288688659668
    8. '＝' → logprob: -14.438288688659668
    9. ',' → logprob: -15.188288688659668
    10. ')' → logprob: -15.438288688659668

Token 328: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06094688922166824
    2. 'min' → logprob: -3.0609469413757324
    3. ' int' → logprob: -4.560946941375732
    4. ' min' → logprob: -6.310946941375732
    5. 'max' → logprob: -11.685946464538574
    6. '   ' → logprob: -13.185946464538574
    7. '(int' → logprob: -13.185946464538574
    8. '1' → logprob: -13.935946464538574
    9. ' ' → logprob: -14.185946464538574
    10. '	int' → logprob: -14.935946464538574

Token 329: '(el' (ID: 35872)
  Prédit: '(el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(el' → logprob: -9.13388703338569e-06
    2. '(' → logprob: -12.000009536743164
    3. '((' → logprob: -13.250009536743164
    4. '(min' → logprob: -14.625009536743164
    5. 'elapsed' → logprob: -14.625009536743164
    6. ' (' → logprob: -15.625009536743164
    7. '	el' → logprob: -17.375009536743164
    8. '(max' → logprob: -18.125009536743164
    9. '(ele' → logprob: -18.750009536743164
    10. '(
' → logprob: -18.875009536743164

Token 330: 'apsed' (ID: 16961)
  Prédit: 'apsed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apsed' → logprob: -0.0043871523812413216
    2. 'aps' → logprob: -5.879387378692627
    3. 'aped' → logprob: -7.004387378692627
    4. 'ap' → logprob: -7.754387378692627
    5. 'apse' → logprob: -9.379386901855469
    6. 'ed' → logprob: -9.629386901855469
    7. 'ps' → logprob: -10.754386901855469
    8. 'sed' → logprob: -10.754386901855469
    9. 'asp' → logprob: -11.629386901855469
    10. 'ased' → logprob: -11.754386901855469

Token 331: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.2709192633628845
    2. '//' → logprob: -2.0209193229675293
    3. ' /' → logprob: -3.1459193229675293
    4. '/' → logprob: -3.3959193229675293
    5. ')' → logprob: -3.7709193229675293
    6. ' ' → logprob: -5.645919322967529
    7. ' ' → logprob: -7.145919322967529
    8. '/h' → logprob: -8.395918846130371
    9. '	' → logprob: -9.520918846130371
    10. '`' → logprob: -9.645918846130371

Token 332: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0001410850090906024
    2. ' h' → logprob: -8.875141143798828
    3. '   ' → logprob: -14.250141143798828
    4. '(h' → logprob: -14.875141143798828
    5. '
' → logprob: -15.875141143798828
    6. '(' → logprob: -17.000141143798828
    7. '	h' → logprob: -17.250141143798828
    8. '1' → logprob: -17.750141143798828
    9. ' ' → logprob: -17.750141143798828
    10. '       ' → logprob: -18.000141143798828

Token 333: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.014684110297821e-06
    2. '[' → logprob: -11.875008583068848
    3. ')' → logprob: -13.375008583068848
    4. 'i' → logprob: -15.000008583068848
    5. ' [' → logprob: -16.875009536743164
    6. ']' → logprob: -17.750009536743164
    7. ')[' → logprob: -17.750009536743164
    8. '[I' → logprob: -18.000009536743164
    9. '   ' → logprob: -18.250009536743164
    10. '(i' → logprob: -18.375009536743164

Token 334: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012334455968812108
    2. ')+' → logprob: -6.7512335777282715
    3. '])' → logprob: -10.251233100891113
    4. ' )' → logprob: -11.126233100891113
    5. '）' → logprob: -11.751233100891113
    6. ']' → logprob: -13.126233100891113
    7. '])+' → logprob: -14.126233100891113
    8. '+' → logprob: -14.501233100891113
    9. '`)' → logprob: -14.751233100891113
    10. ']+' → logprob: -14.751233100891113

Token 335: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6932218074798584
    2. ' +' → logprob: -0.6932218074798584
    3. '   ' → logprob: -10.443222045898438
    4. '
' → logprob: -11.193222045898438
    5. '+
' → logprob: -11.443222045898438
    6. 'if' → logprob: -11.943222045898438
    7. ' if' → logprob: -12.943222045898438
    8. ')' → logprob: -13.068222045898438
    9. ' +
' → logprob: -13.068222045898438
    10. ')+' → logprob: -13.443222045898438

Token 336: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '0' → logprob: -15.750003814697266
    4. '   ' → logprob: -16.875003814697266
    5. '2' → logprob: -17.750003814697266
    6. '
' → logprob: -18.750003814697266
    7. '```' → logprob: -19.250003814697266
    8. '(' → logprob: -20.437503814697266
    9. '+' → logprob: -20.562503814697266
    10. '  ' → logprob: -20.750003814697266

Token 337: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.750000953674316
    3. '0' → logprob: -16.0
    4. '   ' → logprob: -18.5
    5. '```' → logprob: -19.75
    6. '(' → logprob: -20.25
    7. '2' → logprob: -20.625
    8. '
' → logprob: -20.625
    9. '`' → logprob: -20.875
    10. '１' → logprob: -21.875

Token 338: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0052808308973908424
    2. ' if' → logprob: -5.5052809715271
    3. '
' → logprob: -7.2552809715271
    4. 'if' → logprob: -8.005280494689941
    5. ' res' → logprob: -10.005280494689941
    6. 'res' → logprob: -10.630280494689941
    7. ',' → logprob: -10.880280494689941
    8. '  ' → logprob: -11.130280494689941
    9. '    
' → logprob: -11.380280494689941
    10. '	if' → logprob: -11.505280494689941

Token 339: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04455004632472992
    2. '
' → logprob: -3.7945499420166016
    3. ' if' → logprob: -4.169549942016602
    4. 'if' → logprob: -5.794549942016602
    5. '    
' → logprob: -7.294549942016602
    6. '<|end|>' → logprob: -7.544549942016602
    7. '  
' → logprob: -8.169549942016602
    8. ' res' → logprob: -8.169549942016602
    9. 'res' → logprob: -8.794549942016602
    10. '  ' → logprob: -8.794549942016602

Token 340: ' res' (ID: 694)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6465286612510681
    2. ' if' → logprob: -1.396528720855713
    3. 'res' (adapté à ' res') → logprob: -1.896528720855713
    4. ' res' → logprob: -3.146528720855713
    5. '   ' → logprob: -3.771528720855713
    6. 'item' → logprob: -4.521528720855713
    7. ' item' → logprob: -6.521528720855713
    8. '
' → logprob: -9.646528244018555
    9. '    
' → logprob: -9.896528244018555
    10. ' 
' → logprob: -10.146528244018555

Token 341: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008626867085695267
    2. '.' → logprob: -4.758626937866211
    3. '.extend' → logprob: -11.758626937866211
    4. '.app' → logprob: -13.258626937866211
    5. ' .' → logprob: -14.258626937866211
    6. '.push' → logprob: -14.383626937866211
    7. '.ap' → logprob: -14.383626937866211
    8. '.Append' → logprob: -15.133626937866211
    9. '.setdefault' → logprob: -15.258626937866211
    10. '.add' → logprob: -16.00862693786621

Token 342: '(item' (ID: 10016)
  Prédit: '(item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(item' → logprob: -2.5776860184123507e-06
    2. 'item' → logprob: -13.62500286102295
    3. '(' → logprob: -13.75000286102295
    4. '(i' → logprob: -16.375001907348633
    5. '(str' → logprob: -16.375001907348633
    6. '(items' → logprob: -19.125001907348633
    7. '[item' → logprob: -19.500001907348633
    8. ')item' → logprob: -19.500001907348633
    9. ' (' → logprob: -19.625001907348633
    10. '=item' → logprob: -19.625001907348633

Token 343: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.9875325708417222e-05
    2. ')
' → logprob: -10.750029563903809
    3. ' )' → logprob: -12.750029563903809
    4. '<|end|>' → logprob: -12.750029563903809
    5. ')return' → logprob: -14.750029563903809
    6. '   ' → logprob: -15.000029563903809
    7. ')}' → logprob: -15.500029563903809
    8. '),' → logprob: -15.625029563903809
    9. '```' → logprob: -15.625029563903809
    10. '}' → logprob: -16.000030517578125

Token 344: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 345: ' x' (ID: 1215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2832612693309784
    2. ' i' → logprob: -1.4082612991333008
    3. 'item' → logprob: -6.658261299133301
    4. ' item' → logprob: -8.1582612991333
    5. 'x' → logprob: -8.7832612991333
    6. '_' → logprob: -8.7832612991333
    7. ' x' → logprob: -9.5332612991333
    8. ' ' → logprob: -9.9082612991333
    9. '_i' → logprob: -10.2832612991333
    10. ' _' → logprob: -10.5332612991333

Token 346: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38687729835510254
    2. 'in' → logprob: -1.1368772983551025
    3. '_in' → logprob: -13.261877059936523
    4. 'n' → logprob: -13.386877059936523
    5. '	in' → logprob: -13.886877059936523
    6. 'i' → logprob: -14.136877059936523
    7. ' ' → logprob: -14.386877059936523
    8. 's' → logprob: -15.636877059936523
    9. 'x' → logprob: -15.886877059936523
    10. 'In' → logprob: -16.511877059936523

Token 347: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.0280383548888494e-06
    2. ' res' → logprob: -14.000000953674316
    3. 'range' → logprob: -16.000001907348633
    4. 're' → logprob: -19.750001907348633
    5. '(res' → logprob: -23.125001907348633
    6. '
' → logprob: -23.625001907348633
    7. 'r' → logprob: -23.875001907348633
    8. 'x' → logprob: -24.250001907348633
    9. '```' → logprob: -24.750001907348633
    10. '	res' → logprob: -24.750001907348633

Token 348: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009340574964880943
    2. 'print' → logprob: -5.134340763092041
    3. ':
' → logprob: -5.759340763092041
    4. ',' → logprob: -9.009340286254883
    5. '):' → logprob: -9.634340286254883
    6. '   ' → logprob: -10.884340286254883
    7. ' print' → logprob: -11.134340286254883
    8. ')' → logprob: -11.884340286254883
    9. '.print' → logprob: -12.009340286254883
    10. 'in' → logprob: -12.884340286254883

Token 349: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.035579830408096313
    2. '   ' → logprob: -3.5355799198150635
    3. ' print' → logprob: -5.160579681396484
    4. '```' → logprob: -10.285579681396484
    5. '    
' → logprob: -10.910579681396484
    6. '	print' → logprob: -11.285579681396484
    7. '
' → logprob: -12.160579681396484
    8. '\' → logprob: -13.785579681396484
    9. '``' → logprob: -13.910579681396484
    10. '.print' → logprob: -14.910579681396484

Token 350: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: 0.0
    2. ' print' → logprob: -16.75
    3. '   ' → logprob: -20.625
    4. 'pr' → logprob: -20.875
    5. '```' → logprob: -21.75
    6. 'prin' → logprob: -22.25
    7. 'printf' → logprob: -23.25
    8. 'prit' → logprob: -23.875
    9. '	print' → logprob: -24.5
    10. '#print' → logprob: -24.75

Token 351: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.3544423381972592e-05
    2. '(' → logprob: -11.25001335144043
    3. 'x' → logprob: -14.62501335144043
    4. '(
' → logprob: -18.37501335144043
    5. '()' → logprob: -20.62501335144043
    6. '(int' → logprob: -21.12501335144043
    7. '(f' → logprob: -21.62501335144043
    8. '((' → logprob: -22.12501335144043
    9. ' (' → logprob: -22.25001335144043
    10. ' x' → logprob: -23.12501335144043

Token 352: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. ' )' → logprob: -13.75000286102295
    3. '())' → logprob: -13.87500286102295
    4. '()' → logprob: -14.75000286102295
    5. '(' → logprob: -15.75000286102295
    6. ')
' → logprob: -16.750003814697266
    7. ')`' → logprob: -16.875003814697266
    8. ')#' → logprob: -17.000003814697266
    9. ',)' → logprob: -17.375003814697266
    10. '+' → logprob: -17.500003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 350
Tokens correctement prédits (1ère position, stricte): 108
Tokens correctement prédits (1ère position, avec adaptation): 114
Tokens correctement prédits (top 10): 227
Précision stricte (1ère position): 30.86%
Précision adaptée (1ère position): 32.57%
Précision (top 10): 64.86%
================================================================================
