================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def normalize_shape(points):
    """
    Normalize the shape of a polygonal line given by points list.
    The normalization involves:
    - Representing the polygonal line as a sequence of vectors (dx, dy)
      between consecutive vertices.
    - Rotating the shape to four possible orientations (0°, 90°, 180°, 270°)
      by applying rotation transformation to vectors.
    - Normalize each orientation by translating to start at (0,0).
    - Also consider the reversed order as valid.
    - Return the lexicographically smallest sequence of coordinates among all
      these transformations to uniquely identify the shape.
    """
    # Compute vector differences between consecutive points
    vectors = []
    for i in range(1, len(points)):
        dx = points[i][0] - points[i-1][0]
        dy = points[i][1] - points[i-1][1]
        vectors.append((dx, dy))
    
    # Function to reconstruct points from vectors starting at (0,0)
    def vectors_to_points(vs):
        pts = [(0, 0)]
        for dx, dy in vs:
            x, y = pts[-1]
            pts.append((x + dx, y + dy))
        return pts
    
    # Rotation functions (rotate vectors by 90°, 180°, 270°)
    def rotate_90(vs):
        # (x, y) -> (-y, x)
        return [(-dy, dx) for dx, dy in vs]
    def rotate_180(vs):
        # (x, y) -> (-x, -y)
        return [(-dx, -dy) for dx, dy in vs]
    def rotate_270(vs):
        # (x, y) -> (y, -x)
        return [(dy, -dx) for dx, dy in vs]
    
    # Generate all orientations of vectors: 0°, 90°, 180°, 270°
    orientations = [
        vectors,
        rotate_90(vectors),
        rotate_180(vectors),
        rotate_270(vectors)
    ]
    
    # For each orientation, also consider reversed vectors (reverse the vector list and negate vectors)
    # Because reversing means traversing in reverse order from end point to start point.
    def reverse_vectors(vs):
        # Reverse order and invert directions
        return [(-dx, -dy) for dx, dy in reversed(vs)]
    
    all_variants = []
    for ori in orientations:
        all_variants.append(orientation_points := vectors_to_points(ori))
        all_variants.append(reverse_points := vectors_to_points(reverse_vectors(ori)))
    
    # For each variant (list of points), translate so that first point is at (0,0)
    # Then get a tuple of coordinates to use as canonical representation
    def translate_to_zero(pts):
        x0, y0 = pts[0]
        return tuple((x - x0, y - y0) for x, y in pts)
    
    normalized_variants = [translate_to_zero(v) for v in all_variants]
    
    # Return lex smallest tuple to have a unique canonical representation of this polygonal line shape
    return min(normalized_variants)

def main():
    input_lines = sys.stdin.read().strip().split('\n')
    idx = 0
    while True:
        if idx >= len(input_lines):
            break
        n_line = input_lines[idx].strip()
        idx += 1
        if n_line == '0':
            # End of input
            break
        n = int(n_line)
        polygonal_lines = []
        for _ in range(n+1):
            m = int(input_lines[idx].strip())
            idx += 1
            coords = []
            for __ in range(m):
                x, y = map(int, input_lines[idx].split())
                idx += 1
                coords.append((x, y))
            polygonal_lines.append(coords)
        
        # polygonal_lines[0] is template
        template_shape = normalize_shape(polygonal_lines[0])
        
        results = []
        # Check which polygonal lines have the same shape as the template [1..n] with numbering 1..n
        for i in range(1, n+1):
            shape = normalize_shape(polygonal_lines[i])
            if shape == template_shape:
                results.append(i)
        
        # Output results in ascending order, one per line
        for r in sorted(results):
            print(r)
        print("+++++")

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12579083442687988
    2. 'import' → logprob: -3.25079083442688
    3. '\n' → logprob: -3.50079083442688
    4. '' → logprob: -4.250790596008301
    5. '<|end|>' → logprob: -4.625790596008301
    6. 'print' → logprob: -5.000790596008301
    7. '#' → logprob: -5.125790596008301
    8. '\' → logprob: -6.500790596008301
    9. ',' → logprob: -6.500790596008301
    10. '
' → logprob: -6.625790596008301

Token 4: ' normalize' (ID: 44464)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013927715830504894
    2. ' space' → logprob: -6.388927936553955
    3. ' main' → logprob: -6.388927936553955
    4. ' ' → logprob: -6.888927936553955
    5. '<|end|>' → logprob: -6.888927936553955
    6. ' process' → logprob: -7.013927936553955
    7. '  ' → logprob: -7.013927936553955
    8. ' a' → logprob: -7.263927936553955
    9. ' sys' → logprob: -7.513927936553955
    10. '_' → logprob: -7.763927936553955

Token 5: '_shape' (ID: 30261)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2309524118900299
    2. '_' → logprob: -1.6059523820877075
    3. '_name' → logprob: -5.855952262878418
    4. '_text' → logprob: -6.980952262878418
    5. '_:' → logprob: -7.855952262878418
    6. '(_' → logprob: -7.980952262878418
    7. '_data' → logprob: -8.480952262878418
    8. '_space' → logprob: -9.230952262878418
    9. '_string' → logprob: -9.480952262878418
    10. ' (' → logprob: -9.855952262878418

Token 6: '(points' (ID: 72131)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006198656628839672
    2. '_' → logprob: -8.125619888305664
    3. '(shape' → logprob: -8.750619888305664
    4. '(_' → logprob: -10.125619888305664
    5. '_shape' → logprob: -10.250619888305664
    6. ' (' → logprob: -10.500619888305664
    7. 's' → logprob: -12.000619888305664
    8. ':' → logprob: -12.125619888305664
    9. '(:' → logprob: -12.500619888305664
    10. '(s' → logprob: -12.625619888305664

Token 7: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006921819876879454
    2. ')' → logprob: -7.625692367553711
    3. ':' → logprob: -9.625692367553711
    4. ',' → logprob: -9.750692367553711
    5. '):
' → logprob: -10.125692367553711
    6. '[' → logprob: -11.250692367553711
    7. '   ' → logprob: -11.750692367553711
    8. ' ):' → logprob: -11.875692367553711
    9. ']:' → logprob: -13.125692367553711
    10. 's' → logprob: -13.250692367553711

Token 8: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11146958917379379
    2. '   ' → logprob: -2.4864695072174072
    3. '(' → logprob: -4.361469745635986
    4. '():' → logprob: -5.236469745635986
    5. ' :' → logprob: -6.986469745635986
    6. '):' → logprob: -7.236469745635986
    7. '[' → logprob: -7.986469745635986
    8. ':
' → logprob: -8.111469268798828
    9. '```' → logprob: -8.361469268798828
    10. '[:]' → logprob: -8.361469268798828

Token 9: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35336384177207947
    2. ' if' → logprob: -2.2283637523651123
    3. ' ' → logprob: -2.4783637523651123
    4. '    ' → logprob: -3.7283637523651123
    5. ':' → logprob: -4.228363990783691
    6. '[' → logprob: -4.228363990783691
    7. ' return' → logprob: -4.853363990783691
    8. '```' → logprob: -5.103363990783691
    9. 'if' → logprob: -5.228363990783691
    10. ''' → logprob: -5.478363990783691

Token 10: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25051119923591614
    2. 'Normalize' → logprob: -2.3755111694335938
    3. 'Returns' → logprob: -3.3755111694335938
    4. '"""' → logprob: -4.000511169433594
    5. '"""
' → logprob: -4.125511169433594
    6. 'Calculate' → logprob: -4.250511169433594
    7. ' """
' → logprob: -4.375511169433594
    8. ' Calculates' → logprob: -5.375511169433594
    9. '       ' → logprob: -5.500511169433594
    10. ' Normalize' → logprob: -5.500511169433594

Token 11: ' Normalize' (ID: 155762)
  Prédit: ' """
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' """
' → logprob: -0.7371836304664612
    2. '"""
' → logprob: -1.7371835708618164
    3. 'Normalize' (adapté à ' Normalize') → logprob: -1.7371835708618164
    4. '"""' → logprob: -2.8621835708618164
    5. ' Normalize' → logprob: -3.4871835708618164
    6. ' if' → logprob: -3.7371835708618164
    7. '   ' → logprob: -3.8621835708618164
    8. ' """' → logprob: -4.487183570861816
    9. 'Calculate' → logprob: -5.487183570861816
    10. 'Returns' → logprob: -5.612183570861816

Token 12: ' the' (ID: 290)
  Prédit: '(points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.7749758362770081
    2. ' points' → logprob: -1.0249757766723633
    3. ' the' → logprob: -2.1499757766723633
    4. '_shape' → logprob: -3.6499757766723633
    5. '_points' → logprob: -3.6499757766723633
    6. '_' → logprob: -5.274975776672363
    7. 'points' → logprob: -6.524975776672363
    8. '(' → logprob: -6.774975776672363
    9. ')' → logprob: -7.399975776672363
    10. ' shape' → logprob: -7.524975776672363

Token 13: ' shape' (ID: 9591)
  Prédit: ' shape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shape' → logprob: -0.6486688256263733
    2. ' points' → logprob: -0.7736688256263733
    3. 'points' → logprob: -5.2736687660217285
    4. 'shape' → logprob: -5.3986687660217285
    5. ' shapes' → logprob: -6.2736687660217285
    6. ' point' → logprob: -6.6486687660217285
    7. ' polygon' → logprob: -7.5236687660217285
    8. ' given' → logprob: -7.6486687660217285
    9. ' coordinates' → logprob: -7.6486687660217285
    10. ' input' → logprob: -8.273669242858887

Token 14: ' of' (ID: 328)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.39312052726745605
    2. '(points' → logprob: -1.893120527267456
    3. ' to' → logprob: -2.018120527267456
    4. '   ' → logprob: -3.643120527267456
    5. ' points' → logprob: -5.143120765686035
    6. '(' → logprob: -6.643120765686035
    7. 'points' → logprob: -6.643120765686035
    8. '```' → logprob: -6.643120765686035
    9. '_points' → logprob: -6.768120765686035
    10. ':' → logprob: -6.768120765686035

Token 15: ' a' (ID: 261)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.13076187670230865
    2. ' the' → logprob: -2.1307618618011475
    3. 'points' → logprob: -5.880762100219727
    4. ' a' → logprob: -7.630762100219727
    5. ' each' → logprob: -8.505762100219727
    6. 'the' → logprob: -8.630762100219727
    7. '(points' → logprob: -9.380762100219727
    8. ' ' → logprob: -11.005762100219727
    9. '	points' → logprob: -11.255762100219727
    10. ' an' → logprob: -11.630762100219727

Token 16: ' polygon' (ID: 65081)
  Prédit: ' shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shape' → logprob: -0.4564458727836609
    2. 'n' → logprob: -2.0814459323883057
    3. ' polygon' → logprob: -2.5814459323883057
    4. ' points' → logprob: -2.9564459323883057
    5. ' ' → logprob: -3.0814459323883057
    6. ' given' → logprob: -3.9564459323883057
    7. ' list' → logprob: -4.581445693969727
    8. 'shape' → logprob: -4.581445693969727
    9. 's' → logprob: -4.706445693969727
    10. ' array' → logprob: -5.456445693969727

Token 17: 'al' (ID: 280)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48613864183425903
    2. '(points' → logprob: -1.9861385822296143
    3. ':' → logprob: -2.2361385822296143
    4. '.' → logprob: -2.6111385822296143
    5. ' by' → logprob: -3.6111385822296143
    6. ' to' → logprob: -4.861138820648193
    7. '):' → logprob: -5.111138820648193
    8. '(' → logprob: -5.236138820648193
    9. '```' → logprob: -5.361138820648193
    10. ',' → logprob: -5.611138820648193

Token 18: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36540231108665466
    2. ' points' → logprob: -1.490402340888977
    3. ' shape' → logprob: -4.1154022216796875
    4. '   ' → logprob: -4.3654022216796875
    5. ' polygon' → logprob: -4.4904022216796875
    6. '  ' → logprob: -4.7404022216796875
    7. ''' → logprob: -5.2404022216796875
    8. '_points' → logprob: -5.4904022216796875
    9. 's' → logprob: -5.8654022216796875
    10. '```' → logprob: -6.1154022216796875

Token 19: ' given' (ID: 4335)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1083415225148201
    2. ':' → logprob: -3.1083414554595947
    3. '(' → logprob: -3.8583414554595947
    4. '```' → logprob: -3.8583414554595947
    5. '.' → logprob: -5.858341693878174
    6. '\n' → logprob: -5.983341693878174
    7. '`' → logprob: -6.733341693878174
    8. '(
' → logprob: -6.858341693878174
    9. '(p' → logprob: -6.983341693878174
    10. '(points' → logprob: -7.108341693878174

Token 20: ' by' (ID: 656)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.1074286699295044
    2. ' points' → logprob: -1.1074286699295044
    3. ' the' → logprob: -1.3574286699295044
    4. '   ' → logprob: -3.732428550720215
    5. 'points' → logprob: -4.107428550720215
    6. 'the' → logprob: -4.357428550720215
    7. '(points' → logprob: -5.232428550720215
    8. ' an' → logprob: -5.482428550720215
    9. ' by' → logprob: -5.482428550720215
    10. '```' → logprob: -5.982428550720215

Token 21: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.0211446862667799
    2. 'points' → logprob: -4.146144866943359
    3. ' the' → logprob: -5.646144866943359
    4. ' a' → logprob: -6.646144866943359
    5. '(points' → logprob: -9.27114486694336
    6. '   ' → logprob: -10.02114486694336
    7. 'the' → logprob: -10.14614486694336
    8. ' its' → logprob: -10.77114486694336
    9. '	points' → logprob: -11.02114486694336
    10. ' coordinates' → logprob: -11.39614486694336

Token 22: ' list' (ID: 1562)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22184698283672333
    2. '):' → logprob: -2.4718470573425293
    3. '   ' → logprob: -2.5968470573425293
    4. '.' → logprob: -3.8468470573425293
    5. '(' → logprob: -4.721847057342529
    6. ')' → logprob: -5.596847057342529
    7. ',' → logprob: -6.596847057342529
    8. ':
' → logprob: -7.096847057342529
    9. '```' → logprob: -7.096847057342529
    10. ' :' → logprob: -7.346847057342529

Token 23: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26152437925338745
    2. ':' → logprob: -1.5115244388580322
    3. '```' → logprob: -5.636524200439453
    4. '    
' → logprob: -6.636524200439453
    5. '.' → logprob: -6.886524200439453
    6. ':
' → logprob: -7.011524200439453
    7. '    ' → logprob: -7.636524200439453
    8. '(' → logprob: -7.636524200439453
    9. '):' → logprob: -8.261524200439453
    10. '\n' → logprob: -8.386524200439453

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008284528739750385
    2. '    
' → logprob: -5.883284568786621
    3. '```' → logprob: -6.383284568786621
    4. '    ' → logprob: -6.883284568786621
    5. 'n' → logprob: -7.258284568786621
    6. ' ' → logprob: -7.883284568786621
    7. ')' → logprob: -7.883284568786621
    8. '   
' → logprob: -8.633284568786621
    9. '`' → logprob: -8.633284568786621
    10. '"""' → logprob: -8.758284568786621

Token 25: ' The' (ID: 623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038019679486751556
    2. '    
' → logprob: -4.16301965713501
    3. '```' → logprob: -5.28801965713501
    4. '    ' → logprob: -5.53801965713501
    5. ' ' → logprob: -6.28801965713501
    6. 'n' → logprob: -6.28801965713501
    7. ' 
' → logprob: -6.41301965713501
    8. '   
' → logprob: -6.66301965713501
    9. '\n' → logprob: -6.91301965713501
    10. ')' → logprob: -7.03801965713501

Token 26: ' normalization' (ID: 115461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05686793476343155
    2. ' points' → logprob: -4.181868076324463
    3. ' shape' → logprob: -4.931868076324463
    4. '"' → logprob: -5.056868076324463
    5. ''' → logprob: -5.306868076324463
    6. '_' → logprob: -5.556868076324463
    7. '  ' → logprob: -5.681868076324463
    8. '"""' → logprob: -6.306868076324463
    9. ' "' → logprob: -6.681868076324463
    10. ' """' → logprob: -6.931868076324463

Token 27: ' involves' (ID: 23856)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.0264999866485596
    2. ' ' → logprob: -1.4014999866485596
    3. ' involves' → logprob: -1.6514999866485596
    4. '   ' → logprob: -2.1514999866485596
    5. ' consists' → logprob: -3.1514999866485596
    6. '(' → logprob: -5.2764997482299805
    7. '_' → logprob: -5.4014997482299805
    8. ',' → logprob: -5.4014997482299805
    9. ' to' → logprob: -5.5264997482299805
    10. '.' → logprob: -5.6514997482299805

Token 28: ':
' (ID: 734)
  Prédit: ' removing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' removing' → logprob: -0.4628303050994873
    2. ' converting' → logprob: -1.4628303050994873
    3. ' a' → logprob: -3.0878303050994873
    4. '   ' → logprob: -4.212830543518066
    5. ' making' → logprob: -4.212830543518066
    6. ' stripping' → logprob: -4.462830543518066
    7. ' ' → logprob: -4.712830543518066
    8. ' an' → logprob: -4.962830543518066
    9. ' the' → logprob: -4.962830543518066
    10. ' ensuring' → logprob: -5.587830543518066

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31771108508110046
    2. '    ' → logprob: -1.9427111148834229
    3. ' ' → logprob: -2.567711114883423
    4. '```' → logprob: -3.942711114883423
    5. ' ```' → logprob: -4.317710876464844
    6. '1' → logprob: -4.942710876464844
    7. ' )' → logprob: -5.692710876464844
    8. ''' → logprob: -6.442710876464844
    9. ' """' → logprob: -6.567710876464844
    10. ')' → logprob: -6.692710876464844

Token 30: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7461081743240356
    2. '1' → logprob: -1.7461081743240356
    3. '    ' → logprob: -2.246108055114746
    4. ')' → logprob: -2.871108055114746
    5. ' )' → logprob: -2.996108055114746
    6. ' ' → logprob: -3.371108055114746
    7. '```' → logprob: -3.996108055114746
    8. ' """' → logprob: -4.121108055114746
    9. ' ```' → logprob: -4.371108055114746
    10. ' """
' → logprob: -4.496108055114746

Token 31: ' Represent' (ID: 34617)
  Prédit: ' translating'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' translating' → logprob: -0.5239839553833008
    2. ' cent' → logprob: -2.273983955383301
    3. 'trans' → logprob: -2.398983955383301
    4. ' Transl' → logprob: -3.523983955383301
    5. ' scaling' → logprob: -3.523983955383301
    6. ' trans' → logprob: -3.898983955383301
    7. ' res' → logprob: -4.023983955383301
    8. 'sc' → logprob: -4.148983955383301
    9. ' removing' → logprob: -4.273983955383301
    10. ' computing' → logprob: -4.398983955383301

Token 32: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.015819085761904716
    2. 'a' → logprob: -4.515819072723389
    3. 'ation' → logprob: -5.890819072723389
    4. 's' → logprob: -7.265819072723389
    5. ' a' → logprob: -8.015819549560547
    6. 'ating' → logprob: -8.640819549560547
    7. 'at' → logprob: -8.890819549560547
    8. ')' → logprob: -9.390819549560547
    9. 'import' → logprob: -9.390819549560547
    10. '   ' → logprob: -9.640819549560547

Token 33: ' the' (ID: 290)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.6246551871299744
    2. ' the' → logprob: -0.8746551871299744
    3. 'points' → logprob: -3.999655246734619
    4. ' each' → logprob: -4.249655246734619
    5. 'the' → logprob: -5.124655246734619
    6. ' a' → logprob: -5.374655246734619
    7. '(points' → logprob: -6.624655246734619
    8. ' all' → logprob: -6.999655246734619
    9. '_points' → logprob: -7.499655246734619
    10. '<|end|>' → logprob: -7.624655246734619

Token 34: ' polygon' (ID: 65081)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.16558654606342316
    2. 'points' → logprob: -2.415586471557617
    3. ' shape' → logprob: -2.915586471557617
    4. 'shape' → logprob: -5.540586471557617
    5. ' polygon' → logprob: -7.040586471557617
    6. ' line' → logprob: -7.665586471557617
    7. ' coordinates' → logprob: -8.415586471557617
    8. 'import' → logprob: -8.540586471557617
    9. '	points' → logprob: -8.540586471557617
    10. ' normalized' → logprob: -8.665586471557617

Token 35: 'al' (ID: 280)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.026069432497024536
    2. 'as' → logprob: -4.151069641113281
    3. '_points' → logprob: -5.151069641113281
    4. ' points' → logprob: -6.151069641113281
    5. ' in' → logprob: -7.776069641113281
    6. ''s' → logprob: -8.026069641113281
    7. '(points' → logprob: -8.026069641113281
    8. ' with' → logprob: -8.026069641113281
    9. ' by' → logprob: -9.151069641113281
    10. 'points' → logprob: -9.151069641113281

Token 36: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.07116217911243439
    2. ' points' → logprob: -3.071162223815918
    3. 'line' → logprob: -4.571162223815918
    4. ' shape' → logprob: -5.446162223815918
    5. ' ' → logprob: -5.946162223815918
    6. ' as' → logprob: -6.196162223815918
    7. ' lines' → logprob: -6.446162223815918
    8. ' curve' → logprob: -8.446162223815918
    9. ' chain' → logprob: -8.446162223815918
    10. ' edges' → logprob: -8.696162223815918

Token 37: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.004657729994505644
    2. ' in' → logprob: -6.379657745361328
    3. 'as' → logprob: -6.629657745361328
    4. ' points' → logprob: -7.004657745361328
    5. ' by' → logprob: -8.379657745361328
    6. ' with' → logprob: -8.379657745361328
    7. ' using' → logprob: -9.004657745361328
    8. 'points' → logprob: -10.004657745361328
    9. 'in' → logprob: -11.129657745361328
    10. '(points' → logprob: -11.129657745361328

Token 38: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.045805204659700394
    2. ' the' → logprob: -3.4208052158355713
    3. ' an' → logprob: -5.920804977416992
    4. ' points' → logprob: -5.920804977416992
    5. ' its' → logprob: -5.920804977416992
    6. 'a' → logprob: -7.045804977416992
    7. ' unit' → logprob: -7.670804977416992
    8. ' translation' → logprob: -7.670804977416992
    9. ' ' → logprob: -8.045804977416992
    10. ' scaled' → logprob: -8.045804977416992

Token 39: ' sequence' (ID: 16281)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.02195822261273861
    2. 'list' → logprob: -4.146958351135254
    3. ' numpy' → logprob: -6.396958351135254
    4. ' translation' → logprob: -6.896958351135254
    5. ' sequence' → logprob: -7.146958351135254
    6. ' unit' → logprob: -7.396958351135254
    7. ' tuple' → logprob: -7.896958351135254
    8. ' vector' → logprob: -8.021958351135254
    9. 'translation' → logprob: -8.396958351135254
    10. ' [' → logprob: -8.896958351135254

Token 40: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.0072464304976165295
    2. '[' → logprob: -6.007246494293213
    3. '_' → logprob: -6.382246494293213
    4. 'of' → logprob: -6.507246494293213
    5. '<|end|>' → logprob: -7.132246494293213
    6. ')' → logprob: -9.007246017456055
    7. '_of' → logprob: -9.507246017456055
    8. '_tokens' → logprob: -9.507246017456055
    9. ' ' → logprob: -9.632246017456055
    10. '<|end|>' → logprob: -10.007246017456055

Token 41: ' vectors' (ID: 52254)
  Prédit: ' vectors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vectors' → logprob: -0.45951947569847107
    2. ' distances' → logprob: -2.334519386291504
    3. ' points' → logprob: -3.084519386291504
    4. ' unit' → logprob: -3.084519386291504
    5. ' relative' → logprob: -3.459519386291504
    6. ' ' → logprob: -3.959519386291504
    7. ' normalized' → logprob: -4.209519386291504
    8. ' angles' → logprob: -4.584519386291504
    9. ' segments' → logprob: -4.709519386291504
    10. 'vectors' → logprob: -5.084519386291504

Token 42: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1193534135818481
    2. ',' → logprob: -1.2443534135818481
    3. '_' → logprob: -2.1193532943725586
    4. '(' → logprob: -2.3693532943725586
    5. '   ' → logprob: -2.8693532943725586
    6. ''' → logprob: -3.8693532943725586
    7. '.' → logprob: -3.8693532943725586
    8. '\' → logprob: -4.119353294372559
    9. ')' → logprob: -4.744353294372559
    10. '```' → logprob: -4.869353294372559

Token 43: 'dx' (ID: 22100)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.342623770236969
    2. ' from' → logprob: -2.342623710632324
    3. ' between' → logprob: -2.842623710632324
    4. ' )' → logprob: -3.092623710632324
    5. 'from' → logprob: -3.842623710632324
    6. ' edges' → logprob: -4.717623710632324
    7. ' the' → logprob: -5.092623710632324
    8. '   ' → logprob: -5.092623710632324
    9. ' vectors' → logprob: -5.217623710632324
    10. ' relative' → logprob: -5.342623710632324

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010072785429656506
    2. 's' → logprob: -4.635072708129883
    3. ' ,' → logprob: -9.135072708129883
    4. '_,' → logprob: -9.760072708129883
    5. ')' → logprob: -10.135072708129883
    6. ',)' → logprob: -10.385072708129883
    7. 'dy' → logprob: -10.510072708129883
    8. ',y' → logprob: -11.260072708129883
    9. '=' → logprob: -11.260072708129883
    10. 'y' → logprob: -11.885072708129883

Token 45: ' dy' (ID: 11996)
  Prédit: ' dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.16023823618888855
    2. 'dy' → logprob: -1.910238265991211
    3. 'd' → logprob: -12.035238265991211
    4. ' ' → logprob: -12.660238265991211
    5. ' d' → logprob: -13.410238265991211
    6. 'Dy' → logprob: -14.410238265991211
    7. ' )' → logprob: -14.410238265991211
    8. '.dy' → logprob: -14.410238265991211
    9. '<|end|>' → logprob: -14.910238265991211
    10. ' ddy' → logprob: -15.035238265991211

Token 46: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014883324911352247
    2. '),' → logprob: -10.00014877319336
    3. ' )' → logprob: -10.50014877319336
    4. '):' → logprob: -10.87514877319336
    5. '=' → logprob: -11.00014877319336
    6. ').' → logprob: -11.25014877319336
    7. ',' → logprob: -11.62514877319336
    8. 's' → logprob: -12.37514877319336
    9. '   ' → logprob: -12.62514877319336
    10. ')**' → logprob: -12.87514877319336

Token 47: '     ' (ID: 530)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07131049036979675
    2. '   ' → logprob: -2.946310520172119
    3. '_' → logprob: -5.321310520172119
    4. ',' → logprob: -5.571310520172119
    5. '```' → logprob: -5.946310520172119
    6. ' )' → logprob: -6.946310520172119
    7. '[' → logprob: -7.071310520172119
    8. '.' → logprob: -7.946310520172119
    9. '\' → logprob: -8.071310043334961
    10. '),' → logprob: -8.196310043334961

Token 48: ' between' (ID: 2870)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.045112188905477524
    2. ',' → logprob: -3.920112133026123
    3. '   ' → logprob: -4.170112133026123
    4. '=' → logprob: -6.045112133026123
    5. '```' → logprob: -6.920112133026123
    6. '[' → logprob: -7.045112133026123
    7. 'from' → logprob: -7.045112133026123
    8. '.' → logprob: -7.045112133026123
    9. '),' → logprob: -7.295112133026123
    10. '_' → logprob: -8.170112609863281

Token 49: ' consecutive' (ID: 40840)
  Prédit: ' consecutive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' consecutive' → logprob: -0.03821074590086937
    2. ' adjacent' → logprob: -3.78821063041687
    3. 'con' → logprob: -5.038210868835449
    4. 'adj' → logprob: -5.788210868835449
    5. ' successive' → logprob: -6.038210868835449
    6. ' each' → logprob: -6.788210868835449
    7. ' points' → logprob: -7.038210868835449
    8. 'each' → logprob: -8.16321086883545
    9. 'points' → logprob: -8.53821086883545
    10. ' subsequent' → logprob: -8.66321086883545

Token 50: ' vertices' (ID: 38360)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.038133520632982254
    2. 'points' → logprob: -3.2881336212158203
    3. 'p' → logprob: -10.41313362121582
    4. '	points' → logprob: -11.53813362121582
    5. '(points' → logprob: -11.66313362121582
    6. ')' → logprob: -11.78813362121582
    7. ' ' → logprob: -11.91313362121582
    8. '_points' → logprob: -11.91313362121582
    9. ' p' → logprob: -11.91313362121582
    10. ',' → logprob: -12.53813362121582

Token 51: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6704782247543335
    2. ')' → logprob: -1.6704782247543335
    3. ',' → logprob: -2.170478343963623
    4. '.' → logprob: -2.670478343963623
    5. '\' → logprob: -3.170478343963623
    6. '\n' → logprob: -3.545478343963623
    7. '```' → logprob: -3.920478343963623
    8. '    
' → logprob: -5.170478343963623
    9. '
' → logprob: -5.295478343963623
    10. ',
' → logprob: -5.920478343963623

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01830925978720188
    2. '```' → logprob: -4.768309116363525
    3. '    
' → logprob: -6.143309116363525
    4. '\' → logprob: -6.268309116363525
    5. '\n' → logprob: -6.643309116363525
    6. ' ' → logprob: -7.143309116363525
    7. '`' → logprob: -7.143309116363525
    8. ')' → logprob: -7.393309116363525
    9. '    ' → logprob: -7.893309116363525
    10. '"""' → logprob: -8.393309593200684

Token 53: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06135304272174835
    2. '```' → logprob: -3.5613529682159424
    3. '\' → logprob: -4.6863532066345215
    4. 'n' → logprob: -5.4363532066345215
    5. '\n' → logprob: -5.4363532066345215
    6. ')' → logprob: -5.6863532066345215
    7. '`' → logprob: -5.9363532066345215
    8. ' ' → logprob: -6.1863532066345215
    9. '_' → logprob: -6.4363532066345215
    10. '    
' → logprob: -7.5613532066345215

Token 54: ' Rot' (ID: 20416)
  Prédit: ' Transl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Transl' → logprob: -0.7660912275314331
    2. ' Trans' → logprob: -2.1410913467407227
    3. ' Computing' → logprob: -2.1410913467407227
    4. ' Calcul' → logprob: -2.8910913467407227
    5. ' Removing' → logprob: -3.2660913467407227
    6. ' Represent' → logprob: -3.3910913467407227
    7. ' computing' → logprob: -3.5160913467407227
    8. 'Trans' → logprob: -4.016091346740723
    9. 'Calcul' → logprob: -4.141091346740723
    10. ' Con' → logprob: -4.266091346740723

Token 55: 'ating' (ID: 1365)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07651621848344803
    2. 'o' → logprob: -3.0765161514282227
    3. 'ot' → logprob: -4.451516151428223
    4. 'ate' → logprob: -4.951516151428223
    5. 'otate' → logprob: -5.576516151428223
    6. 'ating' → logprob: -5.701516151428223
    7. 'at' → logprob: -7.576516151428223
    8. 'e' → logprob: -8.201516151428223
    9. '```' → logprob: -8.451516151428223
    10. 'otation' → logprob: -9.326516151428223

Token 56: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.04366549476981163
    2. 'the' → logprob: -4.418665409088135
    3. ' each' → logprob: -4.668665409088135
    4. ' and' → logprob: -4.668665409088135
    5. ' to' → logprob: -6.293665409088135
    6. ' all' → logprob: -6.293665409088135
    7. ' points' → logprob: -6.418665409088135
    8. ' by' → logprob: -6.418665409088135
    9. ' them' → logprob: -6.918665409088135
    10. '<|end|>' → logprob: -7.043665409088135

Token 57: ' shape' (ID: 9591)
  Prédit: ' vectors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vectors' → logprob: -0.15464165806770325
    2. 'vectors' → logprob: -2.154641628265381
    3. ' first' → logprob: -4.779641628265381
    4. ' points' → logprob: -5.404641628265381
    5. 'v' → logprob: -5.529641628265381
    6. 'points' → logprob: -6.279641628265381
    7. ' shape' → logprob: -6.529641628265381
    8. ' sequence' → logprob: -6.529641628265381
    9. ' vector' → logprob: -6.779641628265381
    10. 'sequence' → logprob: -7.654641628265381

Token 58: ' to' (ID: 316)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.332194447517395
    2. ' ' → logprob: -1.457194447517395
    3. ' to' → logprob: -1.582194447517395
    4. ' so' → logprob: -2.0821943283081055
    5. ')' → logprob: -2.8321943283081055
    6. '(' → logprob: -3.4571943283081055
    7. ' by' → logprob: -3.8321943283081055
    8. ' _' → logprob: -4.2071943283081055
    9. ''' → logprob: -4.7071943283081055
    10. 's' → logprob: -4.7071943283081055

Token 59: ' four' (ID: 4242)
  Prédit: ' minimize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' minimize' → logprob: -0.5361703634262085
    2. ' align' → logprob: -1.2861703634262085
    3. ' make' → logprob: -3.036170482635498
    4. ' the' → logprob: -3.661170482635498
    5. ' have' → logprob: -3.786170482635498
    6. 'align' → logprob: -4.411170482635498
    7. 'make' → logprob: -4.411170482635498
    8. ' a' → logprob: -4.911170482635498
    9. 'a' → logprob: -6.411170482635498
    10. '0' → logprob: -6.536170482635498

Token 60: ' possible' (ID: 4149)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5878278613090515
    2. ' possible' → logprob: -1.7128279209136963
    3. '_' → logprob: -2.5878279209136963
    4. ' ' → logprob: -3.2128279209136963
    5. '-c' → logprob: -3.2128279209136963
    6. ' different' → logprob: -4.212827682495117
    7. '90' → logprob: -4.337827682495117
    8. '-fold' → logprob: -4.587827682495117
    9. ' spaces' → logprob: -4.712827682495117
    10. ' equal' → logprob: -4.837827682495117

Token 61: ' orientations' (ID: 149573)
  Prédit: ' orientations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' orientations' → logprob: -0.01627611555159092
    2. ' directions' → logprob: -5.016275882720947
    3. ' angles' → logprob: -5.641275882720947
    4. ' orientation' → logprob: -6.391275882720947
    5. ' rotations' → logprob: -7.141275882720947
    6. '90' → logprob: -7.516275882720947
    7. '```' → logprob: -7.766275882720947
    8. ' ' → logprob: -7.891275882720947
    9. ' different' → logprob: -8.141276359558105
    10. ' align' → logprob: -8.391276359558105

Token 62: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4969319701194763
    2. ',' → logprob: -1.246932029724121
    3. '   ' → logprob: -3.246932029724121
    4. '.' → logprob: -4.371932029724121
    5. ' (' → logprob: -4.371932029724121
    6. '```' → logprob: -4.996932029724121
    7. '(' → logprob: -5.246932029724121
    8. ',
' → logprob: -5.496932029724121
    9. ')' → logprob: -5.496932029724121
    10. 's' → logprob: -5.621932029724121

Token 63: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.37780529260635376
    2. '90' → logprob: -1.627805233001709
    3. ' ' → logprob: -2.252805233001709
    4. '   ' → logprob: -5.127805233001709
    5. ')' → logprob: -5.877805233001709
    6. '```' → logprob: -7.127805233001709
    7. ' )' → logprob: -7.502805233001709
    8. '45' → logprob: -7.627805233001709
    9. 'for' → logprob: -8.002805709838867
    10. '-' → logprob: -8.002805709838867

Token 64: '°,' (ID: 148177)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00890952069312334
    2. '°,' → logprob: -5.258909702301025
    3. ' ,' → logprob: -6.008909702301025
    4. '90' → logprob: -7.758909702301025
    5. ')' → logprob: -7.758909702301025
    6. '),' → logprob: -8.883909225463867
    7. '°' → logprob: -9.258909225463867
    8. '0' → logprob: -10.508909225463867
    9. '45' → logprob: -10.883909225463867
    10. ',
' → logprob: -11.008909225463867

Token 65: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.6592031717300415
    2. ' ' → logprob: -0.7842031717300415
    3. '90' → logprob: -3.659203052520752
    4. '4' → logprob: -8.65920352935791
    5. '1' → logprob: -9.53420352935791
    6. '45' → logprob: -9.65920352935791
    7. '  ' → logprob: -9.90920352935791
    8. '-' → logprob: -10.90920352935791
    9. '```' → logprob: -10.90920352935791
    10. ' ' → logprob: -11.03420352935791

Token 66: '90' (ID: 2744)
  Prédit: '90'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -0.015531336888670921
    2. ' ' → logprob: -4.765531539916992
    3. '9' → logprob: -5.015531539916992
    4. '45' → logprob: -8.515531539916992
    5. '```' → logprob: -10.640531539916992
    6. '-' → logprob: -12.015531539916992
    7. '4' → logprob: -12.453031539916992
    8. '1' → logprob: -12.578031539916992
    9. '
' → logprob: -12.578031539916992
    10. '   ' → logprob: -12.828031539916992

Token 67: '°,' (ID: 148177)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028482675552368164
    2. '°,' → logprob: -6.002848148345947
    3. '°' → logprob: -8.002848625183105
    4. ' ,' → logprob: -10.377848625183105
    5. '0' → logprob: -13.002848625183105
    6. ',
' → logprob: -13.752848625183105
    7. 'º' → logprob: -14.252848625183105
    8. '90' → logprob: -14.377848625183105
    9. ')' → logprob: -14.502848625183105
    10. '),' → logprob: -14.627848625183105

Token 68: ' ' (ID: 220)
  Prédit: '180'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '180' → logprob: -0.03835025429725647
    2. ' ' → logprob: -3.2883503437042236
    3. '1' → logprob: -8.913350105285645
    4. '-' → logprob: -10.038350105285645
    5. ',' → logprob: -10.163350105285645
    6. '```' → logprob: -10.288350105285645
    7. '135' → logprob: -10.663350105285645
    8. ')' → logprob: -11.913350105285645
    9. '  ' → logprob: -12.163350105285645
    10. '18' → logprob: -12.288350105285645

Token 69: '180' (ID: 7521)
  Prédit: '180'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '180' → logprob: -5.88418151892256e-05
    2. ' ' → logprob: -10.625059127807617
    3. '1' → logprob: -10.875059127807617
    4. '135' → logprob: -11.750059127807617
    5. '-' → logprob: -12.625059127807617
    6. '18' → logprob: -13.250059127807617
    7. '```' → logprob: -13.750059127807617
    8. '270' → logprob: -14.500059127807617
    9. 'and' → logprob: -14.875059127807617
    10. ',' → logprob: -15.250059127807617

Token 70: '°,' (ID: 148177)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14940789341926575
    2. '°,' → logprob: -2.0244078636169434
    3. '°' → logprob: -5.024407863616943
    4. ' ,' → logprob: -9.649408340454102
    5. ')' → logprob: -10.274408340454102
    6. '),' → logprob: -11.774408340454102
    7. ',
' → logprob: -12.149408340454102
    8. '°
' → logprob: -12.774408340454102
    9. 'º' → logprob: -12.774408340454102
    10. '‌,' → logprob: -12.899408340454102

Token 71: ' ' (ID: 220)
  Prédit: '270'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '270' → logprob: -0.030032789334654808
    2. ' ' → logprob: -3.5300328731536865
    3. ')' → logprob: -8.905033111572266
    4. ' and' → logprob: -10.030033111572266
    5. '```' → logprob: -10.405033111572266
    6. '27' → logprob: -10.530033111572266
    7. 'and' → logprob: -11.280033111572266
    8. '  ' → logprob: -12.280033111572266
    9. '90' → logprob: -12.405033111572266
    10. '
' → logprob: -12.530033111572266

Token 72: '270' (ID: 17820)
  Prédit: '270'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '270' → logprob: -0.0017455116612836719
    2. ' ' → logprob: -6.751745700836182
    3. 'and' → logprob: -7.751745700836182
    4. ' and' → logprob: -8.876745223999023
    5. '```' → logprob: -12.876745223999023
    6. 'or' → logprob: -13.376745223999023
    7. ' or' → logprob: -15.126745223999023
    8. '360' → logprob: -15.626745223999023
    9. '27' → logprob: -15.876745223999023
    10. '-' → logprob: -15.876745223999023

Token 73: '°' (ID: 6793)
  Prédit: '°'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '°' → logprob: -0.07021840661764145
    2. ')' → logprob: -2.695218324661255
    3. '°,' → logprob: -9.320218086242676
    4. '),' → logprob: -9.820218086242676
    5. '°
' → logprob: -10.820218086242676
    6. ').' → logprob: -10.820218086242676
    7. ')
' → logprob: -11.195218086242676
    8. ',' → logprob: -11.195218086242676
    9. '):' → logprob: -11.445218086242676
    10. ' ' → logprob: -11.570218086242676

Token 74: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011537346988916397
    2. '),' → logprob: -5.511537551879883
    3. ')
' → logprob: -5.636537551879883
    4. ').' → logprob: -5.761537551879883
    5. ' )' → logprob: -7.761537551879883
    6. '):' → logprob: -9.511537551879883
    7. ')

' → logprob: -10.261537551879883
    8. '):
' → logprob: -10.386537551879883
    9. ',' → logprob: -10.511537551879883
    10. ' )
' → logprob: -10.761537551879883

Token 75: '     ' (ID: 530)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1622922718524933
    2. ')' → logprob: -2.412292242050171
    3. '
' → logprob: -3.662292242050171
    4. '    
' → logprob: -3.787292242050171
    5. '  
' → logprob: -5.78729248046875
    6. ',' → logprob: -6.41229248046875
    7. '```' → logprob: -6.41229248046875
    8. '\' → logprob: -7.03729248046875
    9. ')
' → logprob: -7.41229248046875
    10. '\n' → logprob: -7.53729248046875

Token 76: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2937290370464325
    2. ')' → logprob: -1.7937290668487549
    3. ',' → logprob: -3.918729066848755
    4. '.' → logprob: -4.043728828430176
    5. ')
' → logprob: -4.418728828430176
    6. ' and' → logprob: -4.918728828430176
    7. '
' → logprob: -5.293728828430176
    8. 'and' → logprob: -5.293728828430176
    9. ' to' → logprob: -5.543728828430176
    10. ',
' → logprob: -5.918728828430176

Token 77: ' applying' (ID: 24667)
  Prédit: ' applying'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' applying' → logprob: -0.48489758372306824
    2. ' rotating' → logprob: -1.1098976135253906
    3. ' iter' → logprob: -4.109897613525391
    4. ' generating' → logprob: -4.484897613525391
    5. ' transforming' → logprob: -4.484897613525391
    6. ' multiplying' → logprob: -6.109897613525391
    7. ' converting' → logprob: -6.484897613525391
    8. ' a' → logprob: -6.484897613525391
    9. ' lambda' → logprob: -6.859897613525391
    10. ' analyzing' → logprob: -6.984897613525391

Token 78: ' rotation' (ID: 23769)
  Prédit: ' rotation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rotation' → logprob: -1.148267388343811
    2. ' rotations' → logprob: -1.273267388343811
    3. ' the' → logprob: -2.5232672691345215
    4. ' transformations' → logprob: -3.0232672691345215
    5. ' appropriate' → logprob: -3.2732672691345215
    6. ' a' → logprob: -3.2732672691345215
    7. '90' → logprob: -3.3982672691345215
    8. ' vector' → logprob: -3.3982672691345215
    9. 'rot' → logprob: -4.1482672691345215
    10. ' numpy' → logprob: -4.3982672691345215

Token 79: ' transformation' (ID: 26242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11731025576591492
    2. ' matrices' → logprob: -2.8673102855682373
    3. '_m' → logprob: -3.9923102855682373
    4. '_matrix' → logprob: -4.367310047149658
    5. 'mat' → logprob: -4.492310047149658
    6. '(' → logprob: -5.992310047149658
    7. '_mat' → logprob: -6.117310047149658
    8. ')' → logprob: -6.117310047149658
    9. '_' → logprob: -6.242310047149658
    10. ' matrix' → logprob: -6.992310047149658

Token 80: ' to' (ID: 316)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.35269302129745483
    2. '   ' → logprob: -1.4776930809020996
    3. '\' → logprob: -3.9776930809020996
    4. '.' → logprob: -4.4776930809021
    5. ' to' → logprob: -4.4776930809021
    6. ')' → logprob: -4.6026930809021
    7. ',' → logprob: -5.3526930809021
    8. '(' → logprob: -5.6026930809021
    9. 'def' → logprob: -6.7276930809021
    10. '\n' → logprob: -6.7276930809021

Token 81: ' vectors' (ID: 52254)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.06097032502293587
    2. ' the' → logprob: -3.1859703063964844
    3. 'each' → logprob: -4.560970306396484
    4. ' all' → logprob: -5.060970306396484
    5. 'the' → logprob: -7.685970306396484
    6. ' every' → logprob: -8.685970306396484
    7. ' vectors' → logprob: -8.810970306396484
    8. ' points' → logprob: -9.435970306396484
    9. 'all' → logprob: -9.685970306396484
    10. ' these' → logprob: -10.060970306396484

Token 82: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6112709641456604
    2. '   ' → logprob: -0.9862709641456604
    3. '\' → logprob: -3.4862709045410156
    4. '\n' → logprob: -3.9862709045410156
    5. ',' → logprob: -4.986270904541016
    6. '.
' → logprob: -5.236270904541016
    7. ')' → logprob: -5.361270904541016
    8. '```' → logprob: -5.486270904541016
    9. '    
' → logprob: -5.611270904541016
    10. '
' → logprob: -6.611270904541016

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0039673857390880585
    2. '```' → logprob: -6.62896728515625
    3. '    
' → logprob: -7.12896728515625
    4. '\' → logprob: -8.12896728515625
    5. '  
' → logprob: -8.25396728515625
    6. ')' → logprob: -8.25396728515625
    7. '    ' → logprob: -8.75396728515625
    8. '
' → logprob: -9.00396728515625
    9. '   
' → logprob: -9.37896728515625
    10. ' ' → logprob: -9.37896728515625

Token 84: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011574705131351948
    2. '    ' → logprob: -5.886574745178223
    3. ' ' → logprob: -6.011574745178223
    4. '    
' → logprob: -6.511574745178223
    5. 'n' → logprob: -7.011574745178223
    6. '  
' → logprob: -7.136574745178223
    7. ' 
' → logprob: -7.636574745178223
    8. '     ' → logprob: -7.761574745178223
    9. '```' → logprob: -7.761574745178223
    10. '  ' → logprob: -8.386574745178223

Token 85: ' Normalize' (ID: 155762)
  Prédit: 'Finding'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Finding' → logprob: -1.2869101762771606
    2. ' finding' → logprob: -1.9119101762771606
    3. ' Finding' → logprob: -2.411910057067871
    4. 'Selecting' → logprob: -2.536910057067871
    5. ' return' → logprob: -2.911910057067871
    6. ' returning' → logprob: -3.036910057067871
    7. ' computing' → logprob: -3.786910057067871
    8. '   ' → logprob: -3.786910057067871
    9. ' Selecting' → logprob: -4.036910057067871
    10. 'Choosing' → logprob: -4.286910057067871

Token 86: ' each' (ID: 2454)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.023183507844805717
    2. '_' → logprob: -4.648183345794678
    3. ' the' → logprob: -4.898183345794678
    4. 's' → logprob: -6.273183345794678
    5. 'e' → logprob: -6.523183345794678
    6. ' d' → logprob: -6.898183345794678
    7. '_d' → logprob: -7.898183345794678
    8. ' vectors' → logprob: -8.648183822631836
    9. 'ing' → logprob: -9.273183822631836
    10. ' ' → logprob: -9.273183822631836

Token 87: ' orientation' (ID: 29546)
  Prédit: ' vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vector' → logprob: -0.31407812237739563
    2. ' version' → logprob: -2.6890780925750732
    3. ' rotation' → logprob: -2.6890780925750732
    4. ' sequence' → logprob: -3.1890780925750732
    5. ' orientation' → logprob: -3.5640780925750732
    6. 'vector' → logprob: -4.564078330993652
    7. ' rotated' → logprob: -4.564078330993652
    8. ' shape' → logprob: -4.814078330993652
    9. ' of' → logprob: -4.939078330993652
    10. ' set' → logprob: -5.064078330993652

Token 88: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18774200975894928
    2. ':' → logprob: -2.937741994857788
    3. ')' → logprob: -3.562741994857788
    4. ' ' → logprob: -3.937741994857788
    5. '_' → logprob: -4.187742233276367
    6. ',' → logprob: -4.187742233276367
    7. 'def' → logprob: -4.687742233276367
    8. ' to' → logprob: -4.812742233276367
    9. '.' → logprob: -4.937742233276367
    10. 's' → logprob: -5.937742233276367

Token 89: ' translating' (ID: 122685)
  Prédit: ' sorting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorting' → logprob: -0.8372924327850342
    2. ' finding' → logprob: -1.5872924327850342
    3. ' taking' → logprob: -2.337292432785034
    4. ' choosing' → logprob: -2.712292432785034
    5. ' min' → logprob: -3.462292432785034
    6. ' selecting' → logprob: -3.462292432785034
    7. ' computing' → logprob: -3.837292432785034
    8. ' converting' → logprob: -4.087292671203613
    9. ' translating' → logprob: -4.212292671203613
    10. ' considering' → logprob: -4.712292671203613

Token 90: ' to' (ID: 316)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.18684862554073334
    2. ' all' → logprob: -2.3118486404418945
    3. ' points' → logprob: -3.6868486404418945
    4. 'the' → logprob: -4.0618486404418945
    5. ' so' → logprob: -4.5618486404418945
    6. ' vectors' → logprob: -4.8118486404418945
    7. ' each' → logprob: -5.5618486404418945
    8. 'all' → logprob: -5.8118486404418945
    9. ' to' → logprob: -6.9368486404418945
    10. 'points' → logprob: -6.9368486404418945

Token 91: ' start' (ID: 1604)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.17488299310207367
    2. ' origin' → logprob: -2.7998828887939453
    3. 'the' → logprob: -3.4248828887939453
    4. ' (' → logprob: -3.4248828887939453
    5. '(' → logprob: -4.049882888793945
    6. 'origin' → logprob: -4.674882888793945
    7. '[' → logprob: -6.299882888793945
    8. '0' → logprob: -6.424882888793945
    9. ' [' → logprob: -7.174882888793945
    10. ' points' → logprob: -7.674882888793945

Token 92: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.3546973168849945
    2. ' points' → logprob: -2.1046972274780273
    3. ' the' → logprob: -2.2296972274780273
    4. ' with' → logprob: -4.354697227478027
    5. 'ing' → logprob: -4.354697227478027
    6. 'points' → logprob: -4.479697227478027
    7. 'at' → logprob: -4.979697227478027
    8. ' by' → logprob: -5.479697227478027
    9. ' to' → logprob: -5.604697227478027
    10. ' (' → logprob: -5.854697227478027

Token 93: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.44039836525917053
    2. ' the' → logprob: -1.5653983354568481
    3. '(' → logprob: -2.0653984546661377
    4. 'the' → logprob: -4.815398216247559
    5. ' origin' → logprob: -5.065398216247559
    6. '0' → logprob: -5.315398216247559
    7. 'origin' → logprob: -7.315398216247559
    8. '[' → logprob: -8.440398216247559
    9. ' ' → logprob: -8.940398216247559
    10. ' [' → logprob: -9.940398216247559

Token 94: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029618220403790474
    2. ' ' → logprob: -4.154618263244629
    3. '(' → logprob: -4.654618263244629
    4. ' (' → logprob: -5.529618263244629
    5. ')' → logprob: -12.529618263244629
    6. '[' → logprob: -12.904618263244629
    7. 'origin' → logprob: -15.654618263244629
    8. ' [' → logprob: -15.904618263244629
    9. ' ' → logprob: -16.154617309570312
    10. '1' → logprob: -16.279617309570312

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.173704271830502e-06
    2. '0' → logprob: -13.37500286102295
    3. ')' → logprob: -14.25000286102295
    4. ' ,' → logprob: -14.50000286102295
    5. ',
' → logprob: -15.62500286102295
    6. ' ' → logprob: -16.750003814697266
    7. ',)' → logprob: -16.875003814697266
    8. 'a' → logprob: -17.125003814697266
    9. '```' → logprob: -17.250003814697266
    10. '‌,' → logprob: -17.250003814697266

Token 96: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0485873706638813
    2. ' ' → logprob: -3.0485873222351074
    3. '<|end|>' → logprob: -19.048587799072266
    4. ')' → logprob: -19.423587799072266
    5. '```' → logprob: -19.548587799072266
    6. '  ' → logprob: -19.673587799072266
    7. '    ' → logprob: -20.298587799072266
    8. 'y' → logprob: -20.298587799072266
    9. '   ' → logprob: -20.673587799072266
    10. ' ' → logprob: -20.673587799072266

Token 97: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0027329553849995136
    2. ')
' → logprob: -6.752732753753662
    3. '   ' → logprob: -7.127732753753662
    4. '),' → logprob: -8.12773323059082
    5. ').' → logprob: -8.37773323059082
    6. ',' → logprob: -8.87773323059082
    7. ' )' → logprob: -10.37773323059082
    8. '):
' → logprob: -10.62773323059082
    9. ' and' → logprob: -11.50273323059082
    10. '):' → logprob: -11.62773323059082

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001805130043067038
    2. '
' → logprob: -7.751805305480957
    3. '    
' → logprob: -7.751805305480957
    4. ')' → logprob: -8.251805305480957
    5. '    ' → logprob: -8.751805305480957
    6. '\' → logprob: -9.126805305480957
    7. '```' → logprob: -9.376805305480957
    8. '"' → logprob: -9.876805305480957
    9. '  
' → logprob: -10.001805305480957
    10. '     ' → logprob: -10.501805305480957

Token 99: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005738221574574709
    2. '"' → logprob: -6.755738258361816
    3. '    ' → logprob: -7.130738258361816
    4. '    
' → logprob: -7.130738258361816
    5. '
' → logprob: -7.255738258361816
    6. '"""' → logprob: -7.380738258361816
    7. ' ' → logprob: -8.130738258361816
    8. '  
' → logprob: -8.505738258361816
    9. ' """' → logprob: -8.630738258361816
    10. ' 
' → logprob: -8.880738258361816

Token 100: ' Also' (ID: 8820)
  Prédit: ' Return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Return' → logprob: -1.1359518766403198
    2. '   ' → logprob: -1.2609518766403198
    3. 'Return' → logprob: -2.2609519958496094
    4. ' Returning' → logprob: -2.8859519958496094
    5. ' return' → logprob: -3.0109519958496094
    6. ' returning' → logprob: -3.2609519958496094
    7. ' Find' → logprob: -3.7609519958496094
    8. 'Finding' → logprob: -3.8859519958496094
    9. ' Finding' → logprob: -4.010951995849609
    10. 'Returning' → logprob: -4.010951995849609

Token 101: ' consider' (ID: 3331)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.3638577461242676
    2. ' returning' → logprob: -1.4888577461242676
    3. ' computing' → logprob: -2.1138577461242676
    4. ' compute' → logprob: -2.1138577461242676
    5. ' find' → logprob: -2.7388577461242676
    6. ' considering' → logprob: -3.2388577461242676
    7. ' consider' → logprob: -3.3638577461242676
    8. '   ' → logprob: -3.4888577461242676
    9. ' checking' → logprob: -4.113857746124268
    10. ' finding' → logprob: -4.363857746124268

Token 102: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.27547046542167664
    2. ' reflections' → logprob: -2.900470495223999
    3. ' reverse' → logprob: -3.025470495223999
    4. ' reversing' → logprob: -3.150470495223999
    5. ' both' → logprob: -3.525470495223999
    6. ' flipping' → logprob: -4.15047025680542
    7. ' all' → logprob: -4.40047025680542
    8. ' its' → logprob: -4.40047025680542
    9. ' their' → logprob: -5.15047025680542
    10. 'the' → logprob: -5.27547025680542

Token 103: ' reversed' (ID: 57184)
  Prédit: ' reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reverse' → logprob: -0.49401888251304626
    2. ' reversed' → logprob: -1.7440189123153687
    3. 'reverse' → logprob: -2.244018793106079
    4. ' shape' → logprob: -2.994018793106079
    5. 're' → logprob: -3.744018793106079
    6. ' reflection' → logprob: -5.244019031524658
    7. ' reflections' → logprob: -5.744019031524658
    8. ' reflected' → logprob: -5.869019031524658
    9. ' original' → logprob: -5.994019031524658
    10. ' sequence' → logprob: -5.994019031524658

Token 104: ' order' (ID: 2569)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16453105211257935
    2. ' version' → logprob: -2.2895309925079346
    3. ' shape' → logprob: -3.7895309925079346
    4. ' points' → logprob: -4.164531230926514
    5. ' sequence' → logprob: -5.789531230926514
    6. 's' → logprob: -5.914531230926514
    7. '_points' → logprob: -6.539531230926514
    8. ' ' → logprob: -6.664531230926514
    9. '_shape' → logprob: -7.289531230926514
    10. ' versions' → logprob: -7.789531230926514

Token 105: ' as' (ID: 472)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.2160009145736694
    2. ')' → logprob: -1.7160009145736694
    3. ',' → logprob: -1.8410009145736694
    4. 's' → logprob: -1.9660009145736694
    5. '   ' → logprob: -2.466001033782959
    6. ' ,' → logprob: -3.341001033782959
    7. ' ' → logprob: -3.466001033782959
    8. ' to' → logprob: -3.966001033782959
    9. '  ' → logprob: -4.216001033782959
    10. 'def' → logprob: -5.216001033782959

Token 106: ' valid' (ID: 4529)
  Prédit: ' part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' part' → logprob: -0.15897062420845032
    2. ' a' → logprob: -2.908970594406128
    3. ' well' → logprob: -3.283970594406128
    4. ' another' → logprob: -3.408970594406128
    5. ' possible' → logprob: -4.783970832824707
    6. ' an' → logprob: -5.033970832824707
    7. ' additional' → logprob: -5.783970832824707
    8. ' potential' → logprob: -7.408970832824707
    9. ' rotations' → logprob: -7.408970832824707
    10. 'a' → logprob: -7.658970832824707

Token 107: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9244695901870728
    2. ',' → logprob: -1.4244695901870728
    3. ' ' → logprob: -2.049469470977783
    4. ')' → logprob: -2.924469470977783
    5. '.' → logprob: -2.924469470977783
    6. '_' → logprob: -3.424469470977783
    7. ' ,' → logprob: -4.049469470977783
    8. ':' → logprob: -4.299469470977783
    9. 's' → logprob: -4.549469470977783
    10. ' vectors' → logprob: -4.799469470977783

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008138752542436123
    2. ')' → logprob: -6.508138656616211
    3. '    ' → logprob: -6.758138656616211
    4. '"' → logprob: -7.133138656616211
    5. '"""' → logprob: -7.258138656616211
    6. ' 
' → logprob: -7.383138656616211
    7. '    
' → logprob: -7.383138656616211
    8. ' ' → logprob: -7.633138656616211
    9. '```' → logprob: -7.633138656616211
    10. '
' → logprob: -8.133138656616211

Token 109: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003324580378830433
    2. '    
' → logprob: -6.753324508666992
    3. '    ' → logprob: -7.128324508666992
    4. '"""' → logprob: -8.003324508666992
    5. '"' → logprob: -8.378324508666992
    6. '
' → logprob: -8.878324508666992
    7. ' 
' → logprob: -8.878324508666992
    8. '```' → logprob: -9.378324508666992
    9. ' """' → logprob: -9.503324508666992
    10. '     
' → logprob: -9.753324508666992

Token 110: ' Return' (ID: 6318)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02466461807489395
    2. ' def' → logprob: -4.399664402008057
    3. ' Return' → logprob: -6.149664402008057
    4. 'Return' → logprob: -6.399664402008057
    5. 'def' → logprob: -6.399664402008057
    6. ' return' → logprob: -6.524664402008057
    7. ' """
' → logprob: -6.899664402008057
    8. ' ' → logprob: -7.524664402008057
    9. 'Returns' → logprob: -7.524664402008057
    10. ' Returns' → logprob: -7.899664402008057

Token 111: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.19674870371818542
    2. ' all' → logprob: -2.446748733520508
    3. ' a' → logprob: -2.696748733520508
    4. ' max' → logprob: -4.071748733520508
    5. 'the' → logprob: -5.571748733520508
    6. ' ' → logprob: -7.071748733520508
    7. ' an' → logprob: -7.196748733520508
    8. ' min' → logprob: -7.571748733520508
    9. '[' → logprob: -8.196748733520508
    10. '   ' → logprob: -8.446748733520508

Token 112: ' lex' (ID: 37772)
  Prédit: ' minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -1.0576382875442505
    2. ' list' → logprob: -1.1826382875442505
    3. ' normalized' → logprob: -1.5576382875442505
    4. ' set' → logprob: -2.307638168334961
    5. ' canonical' → logprob: -4.682638168334961
    6. ' minimum' → logprob: -4.932638168334961
    7. 'normalized' → logprob: -5.557638168334961
    8. ' shape' → logprob: -5.682638168334961
    9. ' best' → logprob: -5.932638168334961
    10. ' ' → logprob: -6.432638168334961

Token 113: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.0008405959815718234
    2. 'i' → logprob: -7.250840663909912
    3. 'ical' → logprob: -10.625840187072754
    4. 'icon' → logprob: -10.750840187072754
    5. '_' → logprob: -11.125840187072754
    6. ' ' → logprob: -11.250840187072754
    7. 'ico' → logprob: -11.375840187072754
    8. 'ically' → logprob: -12.000840187072754
    9. 'e' → logprob: -12.000840187072754
    10. 'o' → logprob: -12.500840187072754

Token 114: 'ographically' (ID: 121004)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.00020425561524461955
    2. 'ally' → logprob: -8.625204086303711
    3. 'ographically' → logprob: -11.250204086303711
    4. ' al' → logprob: -12.250204086303711
    5. 'aly' → logprob: -13.250204086303711
    6. 'ographical' → logprob: -13.250204086303711
    7. '```' → logprob: -14.375204086303711
    8. ')' → logprob: -14.625204086303711
    9. 'alist' → logprob: -15.125204086303711
    10. 'a' → logprob: -15.375204086303711

Token 115: ' smallest' (ID: 42173)
  Prédit: ' smallest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' smallest' → logprob: -0.36428165435791016
    2. ' minimal' → logprob: -1.2392816543579102
    3. ' possible' → logprob: -5.48928165435791
    4. ' _' → logprob: -5.86428165435791
    5. ' sorted' → logprob: -5.86428165435791
    6. '_' → logprob: -7.11428165435791
    7. ' normalized' → logprob: -7.23928165435791
    8. ' first' → logprob: -7.36428165435791
    9. ' ' → logprob: -7.73928165435791
    10. ' next' → logprob: -7.86428165435791

Token 116: ' sequence' (ID: 16281)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -1.14860200881958
    2. ' vector' → logprob: -1.27360200881958
    3. ' sequence' → logprob: -1.77360200881958
    4. '_' → logprob: -1.77360200881958
    5. ' shape' → logprob: -4.14860200881958
    6. 'sequence' → logprob: -4.52360200881958
    7. ' string' → logprob: -5.52360200881958
    8. '```' → logprob: -5.64860200881958
    9. '_shape' → logprob: -5.77360200881958
    10. 'vector' → logprob: -5.89860200881958

Token 117: ' of' (ID: 328)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023967232555150986
    2. ' :' → logprob: -4.148967266082764
    3. '   ' → logprob: -5.773967266082764
    4. ':
' → logprob: -5.898967266082764
    5. ' ' → logprob: -6.773967266082764
    6. ' :
' → logprob: -7.648967266082764
    7. ',' → logprob: -9.273966789245605
    8. '\' → logprob: -9.898966789245605
    9. '):' → logprob: -9.898966789245605
    10. '.' → logprob: -10.023966789245605

Token 118: ' coordinates' (ID: 27933)
  Prédit: ' vectors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vectors' → logprob: -0.05904953181743622
    2. 'vectors' → logprob: -3.184049606323242
    3. ' points' → logprob: -4.309049606323242
    4. 'points' → logprob: -6.934049606323242
    5. ' tokens' → logprob: -7.559049606323242
    6. 'tokens' → logprob: -8.059049606323242
    7. ' the' → logprob: -8.184049606323242
    8. ' normalized' → logprob: -9.059049606323242
    9. ' ' → logprob: -10.059049606323242
    10. ' vector' → logprob: -10.059049606323242

Token 119: ' among' (ID: 6200)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.36016175150871277
    2. '   ' → logprob: -1.3601617813110352
    3. ' :' → logprob: -3.860161781311035
    4. '):' → logprob: -5.235161781311035
    5. ' ' → logprob: -5.485161781311035
    6. '\' → logprob: -5.735161781311035
    7. ':
' → logprob: -6.235161781311035
    8. ')' → logprob: -6.485161781311035
    9. '    ' → logprob: -6.610161781311035
    10. '    
' → logprob: -6.735161781311035

Token 120: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.059188637882471085
    2. ' the' → logprob: -3.0591886043548584
    3. 'all' → logprob: -5.0591888427734375
    4. 'the' → logprob: -5.9341888427734375
    5. ' these' → logprob: -6.6841888427734375
    6. '   ' → logprob: -8.559188842773438
    7. ' ' → logprob: -10.434188842773438
    8. '    ' → logprob: -11.434188842773438
    9. ' those' → logprob: -11.559188842773438
    10. '	all' → logprob: -11.809188842773438

Token 121: '
' (ID: 198)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.5602742433547974
    2. '   ' → logprob: -1.4352742433547974
    3. 'possible' → logprob: -2.435274124145508
    4. ' orientations' → logprob: -2.560274124145508
    5. 'poss' → logprob: -5.060274124145508
    6. ' rotations' → logprob: -5.310274124145508
    7. ' possibilities' → logprob: -5.935274124145508
    8. 'orient' → logprob: -6.185274124145508
    9. ' the' → logprob: -6.185274124145508
    10. '    ' → logprob: -6.810274124145508

Token 122: '     ' (ID: 530)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.2027806043624878
    2. '   ' → logprob: -2.4527807235717773
    3. 'possible' → logprob: -2.4527807235717773
    4. ' normalized' → logprob: -5.702780723571777
    5. ' sequences' → logprob: -6.702780723571777
    6. ' the' → logprob: -6.702780723571777
    7. ' orientations' → logprob: -6.702780723571777
    8. ' valid' → logprob: -6.952780723571777
    9. 'normalized' → logprob: -7.202780723571777
    10. '    ' → logprob: -7.577780723571777

Token 123: ' these' (ID: 1879)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.6280839443206787
    2. 'possible' → logprob: -0.8780839443206787
    3. 'poss' → logprob: -4.503084182739258
    4. '   ' → logprob: -5.128084182739258
    5. 'normalized' → logprob: -5.253084182739258
    6. ' valid' → logprob: -5.378084182739258
    7. ' normalized' → logprob: -5.378084182739258
    8. ' four' → logprob: -5.503084182739258
    9. ' sequences' → logprob: -5.878084182739258
    10. ' orientations' → logprob: -6.253084182739258

Token 124: ' transformations' (ID: 94732)
  Prédit: ' sequences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequences' → logprob: -0.5403216481208801
    2. ' possible' → logprob: -1.2903215885162354
    3. ' candidates' → logprob: -3.0403215885162354
    4. ' possibilities' → logprob: -3.6653215885162354
    5. ' transformations' → logprob: -4.1653218269348145
    6. 'possible' → logprob: -4.6653218269348145
    7. ')' → logprob: -4.6653218269348145
    8. ' orientations' → logprob: -5.0403218269348145
    9. 'poss' → logprob: -5.4153218269348145
    10. ' normalized' → logprob: -5.4153218269348145

Token 125: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02081361413002014
    2. '   ' → logprob: -4.520813465118408
    3. ':
' → logprob: -5.145813465118408
    4. '):' → logprob: -6.770813465118408
    5. ' :' → logprob: -7.145813465118408
    6. ',' → logprob: -7.520813465118408
    7. '.' → logprob: -8.020813941955566
    8. ')' → logprob: -8.145813941955566
    9. ' ' → logprob: -8.395813941955566
    10. '(' → logprob: -9.020813941955566

Token 126: ' uniquely' (ID: 64699)
  Prédit: ' represent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' represent' → logprob: -0.9650146961212158
    2. ' ensure' → logprob: -1.4650146961212158
    3. 'represent' → logprob: -1.9650146961212158
    4. 'return' → logprob: -2.465014696121216
    5. 'ensure' → logprob: -2.965014696121216
    6. ' return' → logprob: -3.215014696121216
    7. ' minimize' → logprob: -3.215014696121216
    8. ' complete' → logprob: -4.840014457702637
    9. ' guarantee' → logprob: -5.465014457702637
    10. 'complete' → logprob: -5.590014457702637

Token 127: ' identify' (ID: 11410)
  Prédit: ' represent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' represent' → logprob: -0.48502999544143677
    2. ' identify' → logprob: -1.235029935836792
    3. ' define' → logprob: -2.860029935836792
    4. 'identify' → logprob: -3.985029935836792
    5. 'represent' → logprob: -4.235030174255371
    6. 'define' → logprob: -6.110030174255371
    7. ' determine' → logprob: -7.735030174255371
    8. ' characterize' → logprob: -7.860030174255371
    9. ' describe' → logprob: -10.235030174255371
    10. '_ident' → logprob: -11.235030174255371

Token 128: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.0010634170612320304
    2. 'the' → logprob: -6.876063346862793
    3. ' a' → logprob: -10.751063346862793
    4. ' each' → logprob: -12.876063346862793
    5. ' it' → logprob: -13.251063346862793
    6. ' its' → logprob: -13.376063346862793
    7. ' shapes' → logprob: -13.376063346862793
    8. ' points' → logprob: -15.251063346862793
    9. ' them' → logprob: -15.501063346862793
    10. ' this' → logprob: -15.626063346862793

Token 129: ' shape' (ID: 9591)
  Prédit: ' shape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shape' → logprob: -0.03480470925569534
    2. 'shape' → logprob: -3.5348048210144043
    3. ' polygon' → logprob: -5.409804821014404
    4. 'polygon' → logprob: -8.284804344177246
    5. ' given' → logprob: -9.159804344177246
    6. ' normalized' → logprob: -9.909804344177246
    7. ' input' → logprob: -10.159804344177246
    8. ' shapes' → logprob: -10.409804344177246
    9. 'normalized' → logprob: -10.659804344177246
    10. '_shape' → logprob: -10.784804344177246

Token 130: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.057287126779556274
    2. '   ' → logprob: -3.1822872161865234
    3. ':
' → logprob: -4.932287216186523
    4. '):' → logprob: -5.932287216186523
    5. ')' → logprob: -6.807287216186523
    6. ' :' → logprob: -7.432287216186523
    7. ' ' → logprob: -7.807287216186523
    8. ',' → logprob: -7.807287216186523
    9. '
' → logprob: -7.807287216186523
    10. '.' → logprob: -8.057287216186523

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019288709154352546
    2. '"""' → logprob: -7.251928806304932
    3. ')' → logprob: -7.751928806304932
    4. '    
' → logprob: -8.25192928314209
    5. '    ' → logprob: -9.25192928314209
    6. ' """' → logprob: -9.37692928314209
    7. '```' → logprob: -9.50192928314209
    8. '"' → logprob: -9.50192928314209
    9. '\n' → logprob: -10.12692928314209
    10. '   
' → logprob: -10.75192928314209

Token 132: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04256003350019455
    2. ':' → logprob: -4.54256010055542
    3. ')' → logprob: -5.16756010055542
    4. '```' → logprob: -5.16756010055542
    5. '"""' → logprob: -5.41756010055542
    6. '
' → logprob: -5.41756010055542
    7. '\n' → logprob: -5.91756010055542
    8. '    
' → logprob: -6.04256010055542
    9. ' ' → logprob: -6.54256010055542
    10. '   
' → logprob: -7.41756010055542

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01281251572072506
    2. 'n' → logprob: -5.137812614440918
    3. '    
' → logprob: -5.887812614440918
    4. ' n' → logprob: -6.637812614440918
    5. ' points' → logprob: -7.512812614440918
    6. ' if' → logprob: -7.637812614440918
    7. '    ' → logprob: -7.762812614440918
    8. '
' → logprob: -8.012812614440918
    9. '#' → logprob: -8.137812614440918
    10. 'points' → logprob: -8.262812614440918

Token 134: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9638163447380066
    2. '   ' → logprob: -0.9638163447380066
    3. 'if' → logprob: -1.7138164043426514
    4. ' if' → logprob: -3.9638164043426514
    5. 'vectors' → logprob: -4.213816165924072
    6. ' n' → logprob: -4.713816165924072
    7. '#' (adapté à ' #') → logprob: -4.963816165924072
    8. ' vectors' → logprob: -5.713816165924072
    9. 'dx' → logprob: -6.838816165924072
    10. 'import' → logprob: -6.963816165924072

Token 135: ' Compute' (ID: 45438)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.802227258682251
    2. 'if' → logprob: -0.802227258682251
    3. '   ' → logprob: -2.677227258682251
    4. ' if' → logprob: -4.052227020263672
    5. 'vectors' → logprob: -4.927227020263672
    6. ' n' → logprob: -5.427227020263672
    7. '#' → logprob: -5.802227020263672
    8. 'vec' → logprob: -7.427227020263672
    9. 'import' → logprob: -7.427227020263672
    10. ' vectors' → logprob: -7.927227020263672

Token 136: ' vector' (ID: 9727)
  Prédit: ' vectors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vectors' → logprob: -0.19255134463310242
    2. 'vectors' → logprob: -1.8175513744354248
    3. 'n' → logprob: -5.317551136016846
    4. '   ' → logprob: -5.442551136016846
    5. ' n' → logprob: -7.067551136016846
    6. 'vec' → logprob: -7.067551136016846
    7. ' dif' → logprob: -7.317551136016846
    8. 'diff' → logprob: -7.692551136016846
    9. ' del' → logprob: -8.817551612854004
    10. ' ' → logprob: -9.442551612854004

Token 137: ' differences' (ID: 19504)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -4.203409844194539e-05
    2. ' s' → logprob: -10.125041961669922
    3. ' =' → logprob: -14.625041961669922
    4. '_vectors' → logprob: -14.625041961669922
    5. '_s' → logprob: -14.875041961669922
    6. 'vectors' → logprob: -15.125041961669922
    7. '   ' → logprob: -15.375041961669922
    8. '=' → logprob: -16.875041961669922
    9. '_' → logprob: -17.000041961669922
    10. '[' → logprob: -17.250041961669922

Token 138: ' between' (ID: 2870)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06871707737445831
    2. ' vectors' → logprob: -3.8187170028686523
    3. 'diff' → logprob: -4.443717002868652
    4. ' =' → logprob: -5.193717002868652
    5. ':' → logprob: -5.193717002868652
    6. 'vectors' → logprob: -5.568717002868652
    7. '    
' → logprob: -5.693717002868652
    8. '
' → logprob: -5.818717002868652
    9. 'd' → logprob: -6.193717002868652
    10. 'n' → logprob: -6.443717002868652

Token 139: ' consecutive' (ID: 40840)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.7056601643562317
    2. ' points' → logprob: -0.8306601643562317
    3. '(points' → logprob: -2.830660104751587
    4. '[i' → logprob: -4.955660343170166
    5. '[(' → logprob: -6.205660343170166
    6. '[' → logprob: -6.955660343170166
    7. '[p' → logprob: -8.205659866333008
    8. ' the' → logprob: -8.455659866333008
    9. 'the' → logprob: -8.580659866333008
    10. ' consecutive' → logprob: -9.080659866333008

Token 140: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.20584209263324738
    2. 'points' → logprob: -1.705842137336731
    3. ' vertices' → logprob: -6.455842018127441
    4. '   ' → logprob: -6.830842018127441
    5. 'vertices' → logprob: -7.080842018127441
    6. '(points' → logprob: -7.455842018127441
    7. '_points' → logprob: -8.580842018127441
    8. '	points' → logprob: -10.955842018127441
    9. ' ' → logprob: -11.330842018127441
    10. 'point' → logprob: -11.455842018127441

Token 141: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007783947046846151
    2. ' vectors' → logprob: -5.632783889770508
    3. 'vectors' → logprob: -6.382783889770508
    4. 'diff' → logprob: -7.007783889770508
    5. 'vec' → logprob: -7.382783889770508
    6. '
' → logprob: -7.882783889770508
    7. 'n' → logprob: -9.382783889770508
    8. ' dif' → logprob: -9.507783889770508
    9. 'v' → logprob: -9.507783889770508
    10. 'd' → logprob: -9.757783889770508

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004839385801460594
    2. ' vectors' → logprob: -8.500483512878418
    3. 'diff' → logprob: -9.125483512878418
    4. 'vectors' → logprob: -9.500483512878418
    5. 'vec' → logprob: -10.125483512878418
    6. ' dif' → logprob: -11.250483512878418
    7. 'v' → logprob: -11.750483512878418
    8. '    
' → logprob: -11.750483512878418
    9. 'n' → logprob: -12.125483512878418
    10. '
' → logprob: -12.375483512878418

Token 143: ' vectors' (ID: 52254)
  Prédit: ' vectors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vectors' → logprob: -0.7127863168716431
    2. '   ' → logprob: -0.9627863168716431
    3. 'vectors' (adapté à ' vectors') → logprob: -2.4627861976623535
    4. 'vec' → logprob: -4.0877861976623535
    5. ' dif' → logprob: -4.2127861976623535
    6. 'diff' → logprob: -5.2127861976623535
    7. ' vec' → logprob: -6.0877861976623535
    8. 'v' → logprob: -7.2127861976623535
    9. 'n' → logprob: -7.5877861976623535
    10. 'dif' → logprob: -7.7127861976623535

Token 144: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889188081026077
    2. '=' → logprob: -2.5788919925689697
    3. ' =[' → logprob: -13.82889175415039
    4. '=[]' → logprob: -15.32889175415039
    5. '=[' → logprob: -15.32889175415039
    6. ' ' → logprob: -15.45389175415039
    7. '[' → logprob: -15.57889175415039
    8. '   ' → logprob: -16.57889175415039
    9. ',' → logprob: -16.82889175415039
    10. ' =
' → logprob: -17.20389175415039

Token 145: ' []
' (ID: 8911)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.00945336278527975
    2. '[' → logprob: -5.009453296661377
    3. ' [(' → logprob: -6.009453296661377
    4. '[p' → logprob: -8.509453773498535
    5. '[
' → logprob: -9.759453773498535
    6. ' [' → logprob: -11.509453773498535
    7. '[]
' → logprob: -12.759453773498535
    8. ' ' → logprob: -13.509453773498535
    9. '[i' → logprob: -13.509453773498535
    10. '[len' → logprob: -14.259453773498535

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3881596624851227
    2. ' for' → logprob: -1.3881596326828003
    3. 'for' → logprob: -2.63815975189209
    4. '(points' → logprob: -9.26315975189209
    5. ' (' → logprob: -9.51315975189209
    6. 'n' → logprob: -9.88815975189209
    7. ':' → logprob: -10.01315975189209
    8. ' in' → logprob: -10.01315975189209
    9. ' =' → logprob: -10.13815975189209
    10. '	for' → logprob: -10.13815975189209

Token 147: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07890774309635162
    2. ' for' → logprob: -2.5789077281951904
    3. '   ' → logprob: -11.57890796661377
    4. 'n' → logprob: -11.82890796661377
    5. ' n' → logprob: -14.70390796661377
    6. '	for' → logprob: -15.57890796661377
    7. 'prev' → logprob: -15.70390796661377
    8. 'i' → logprob: -15.82890796661377
    9. ' ' → logprob: -16.453907012939453
    10. '
' → logprob: -16.578907012939453

Token 148: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.57594233751297
    2. 'i' → logprob: -0.82594233751297
    3. '	i' → logprob: -13.075942039489746
    4. ' ' → logprob: -14.200942039489746
    5. '_i' → logprob: -16.200942993164062
    6. '   ' → logprob: -16.950942993164062
    7. '  ' → logprob: -18.200942993164062
    8. '(i' → logprob: -18.200942993164062
    9. '_' → logprob: -19.075942993164062
    10. ' ' → logprob: -19.325942993164062

Token 149: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006135095376521349
    2. 'in' → logprob: -5.131134986877441
    3. ' ' → logprob: -8.631134986877441
    4. '   ' → logprob: -11.881134986877441
    5. '1' → logprob: -12.381134986877441
    6. '+' → logprob: -12.631134986877441
    7. '	in' → logprob: -12.631134986877441
    8. '=' → logprob: -12.881134986877441
    9. ',' → logprob: -13.631134986877441
    10. '  ' → logprob: -13.631134986877441

Token 150: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931696534156799
    2. 'range' → logprob: -0.6931696534156799
    3. ' ' → logprob: -11.693169593811035
    4. '   ' → logprob: -12.068169593811035
    5. ' xrange' → logprob: -13.068169593811035
    6. '	range' → logprob: -13.193169593811035
    7. '(range' → logprob: -13.693169593811035
    8. '  ' → logprob: -13.943169593811035
    9. ' in' → logprob: -14.068169593811035
    10. '```' → logprob: -15.068169593811035

Token 151: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04081449657678604
    2. '(len' → logprob: -3.2908143997192383
    3. '1' → logprob: -6.040814399719238
    4. 'len' → logprob: -8.165814399719238
    5. ' len' → logprob: -9.540814399719238
    6. ' ' → logprob: -10.915814399719238
    7. '   ' → logprob: -11.415814399719238
    8. ' (' → logprob: -12.415814399719238
    9. '[len' → logprob: -16.290815353393555
    10. '	len' → logprob: -16.540815353393555

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002815693849697709
    2. 'len' → logprob: -5.8778157234191895
    3. ' ' → logprob: -12.002815246582031
    4. ' len' → logprob: -12.627815246582031
    5. '   ' → logprob: -13.627815246582031
    6. '(len' → logprob: -15.502815246582031
    7. '0' → logprob: -17.50281524658203
    8. '(' → logprob: -18.25281524658203
    9. '```' → logprob: -19.00281524658203
    10. '-' → logprob: -19.06531524658203

Token 153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24092355370521545
    2. ',len' → logprob: -1.865923523902893
    3. '(len' → logprob: -3.4909236431121826
    4. ' ,' → logprob: -3.6159236431121826
    5. 'len' → logprob: -7.6159234046936035
    6. '   ' → logprob: -7.8659234046936035
    7. '(points' → logprob: -7.9909234046936035
    8. ' ' → logprob: -8.615923881530762
    9. '):' → logprob: -8.990923881530762
    10. ' len' → logprob: -8.990923881530762

Token 154: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.018152983859181404
    2. ' len' → logprob: -4.018153190612793
    3. '   ' → logprob: -13.018153190612793
    4. '(len' → logprob: -14.643153190612793
    5. ')' → logprob: -15.643153190612793
    6. 'points' → logprob: -15.893153190612793
    7. ' ' → logprob: -17.393152236938477
    8. '[len' → logprob: -17.893152236938477
    9. ' points' → logprob: -18.143152236938477
    10. ',len' → logprob: -18.143152236938477

Token 155: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -4.274932143744081e-05
    2. '(' → logprob: -10.375042915344238
    3. 'points' → logprob: -11.875042915344238
    4. ' points' → logprob: -12.750042915344238
    5. ')' → logprob: -14.125042915344238
    6. '	points' → logprob: -14.250042915344238
    7. '(
' → logprob: -16.250041961669922
    8. '_points' → logprob: -16.375041961669922
    9. ' (' → logprob: -16.625041961669922
    10. 'Points' → logprob: -17.500041961669922

Token 156: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6152088046073914
    2. '):' → logprob: -1.4902088642120361
    3. ')):
' → logprob: -1.6152088642120361
    4. ')):' → logprob: -3.365208864212036
    5. '   ' → logprob: -8.365208625793457
    6. ')' → logprob: -8.365208625793457
    7. ' ' → logprob: -9.990208625793457
    8. '))' → logprob: -10.240208625793457
    9. ']):
' → logprob: -10.365208625793457
    10. ' ):' → logprob: -10.365208625793457

Token 157: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024039584677666426
    2. '   ' → logprob: -6.752403736114502
    3. ' vectors' → logprob: -7.002403736114502
    4. 'vectors' → logprob: -8.62740421295166
    5. '_vectors' → logprob: -10.00240421295166
    6. '```' → logprob: -10.00240421295166
    7. ',' → logprob: -11.50240421295166
    8. ' dx' → logprob: -12.25240421295166
    9. '    ' → logprob: -12.25240421295166
    10. 'dx' → logprob: -12.37740421295166

Token 158: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' (adapté à ' dx') → logprob: -0.5122818350791931
    2. ' dx' → logprob: -1.512281894683838
    3. '       ' → logprob: -1.762281894683838
    4. 'x' → logprob: -5.262281894683838
    5. ' vectors' → logprob: -6.262281894683838
    6. ' x' → logprob: -7.137281894683838
    7. 'vectors' → logprob: -7.262281894683838
    8. '   ' → logprob: -9.51228141784668
    9. 'vx' → logprob: -9.76228141784668
    10. '_dx' → logprob: -10.51228141784668

Token 159: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5654106736183167
    2. ',' → logprob: -1.1904106140136719
    3. '=' → logprob: -2.065410614013672
    4. '   ' → logprob: -7.565410614013672
    5. ' ,' → logprob: -7.815410614013672
    6. '    ' → logprob: -10.565410614013672
    7. '       ' → logprob: -10.815410614013672
    8. ')' → logprob: -11.565410614013672
    9. '        ' → logprob: -12.065410614013672
    10. ' ' → logprob: -12.190410614013672

Token 160: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.5759440064430237
    2. 'points' → logprob: -0.8259440064430237
    3. '	points' → logprob: -12.950943946838379
    4. '(points' → logprob: -13.450943946838379
    5. '   ' → logprob: -14.200943946838379
    6. '    ' → logprob: -17.450944900512695
    7. '_points' → logprob: -17.450944900512695
    8. '.points' → logprob: -17.700944900512695
    9. 'point' → logprob: -18.200944900512695
    10. '       ' → logprob: -18.575944900512695

Token 161: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.537868779967539e-06
    2. '[' → logprob: -11.875008583068848
    3. 'i' → logprob: -14.625008583068848
    4. '][' → logprob: -14.625008583068848
    5. ' [' → logprob: -14.750008583068848
    6. '   ' → logprob: -16.12500762939453
    7. ')[' → logprob: -16.50000762939453
    8. ' i' → logprob: -17.12500762939453
    9. '```' → logprob: -17.25000762939453
    10. '[
' → logprob: -18.25000762939453

Token 162: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004662115126848221
    2. '[' → logprob: -5.379662036895752
    3. '   ' → logprob: -11.12966251373291
    4. ']' → logprob: -11.37966251373291
    5. '-' → logprob: -11.75466251373291
    6. ' ][' → logprob: -12.50466251373291
    7. '"][' → logprob: -13.87966251373291
    8. ''][' → logprob: -14.37966251373291
    9. '0' → logprob: -14.37966251373291
    10. ' ' → logprob: -15.00466251373291

Token 163: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -15.875000953674316
    4. '1' → logprob: -17.000001907348633
    5. '][' → logprob: -17.500001907348633
    6. '
' → logprob: -18.250001907348633
    7. ']' → logprob: -19.000001907348633
    8. '  ' → logprob: -19.875001907348633
    9. '    ' → logprob: -20.375001907348633
    10. '```' → logprob: -20.500001907348633

Token 164: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1440311223268509
    2. '-' → logprob: -2.019031047821045
    3. ']' → logprob: -6.644031047821045
    4. ']-' → logprob: -10.394031524658203
    5. ' ' → logprob: -11.644031524658203
    6. ')' → logprob: -11.894031524658203
    7. '<|end|>' → logprob: -13.394031524658203
    8. '   ' → logprob: -13.894031524658203
    9. ' -
' → logprob: -14.019031524658203
    10. '[' → logprob: -14.269031524658203

Token 165: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5759408473968506
    2. '-' → logprob: -0.8259408473968506
    3. ' ' → logprob: -14.20094108581543
    4. '-p' → logprob: -15.45094108581543
    5. '-point' → logprob: -15.95094108581543
    6. '   ' → logprob: -16.82594108581543
    7. ')' → logprob: -16.95094108581543
    8. ' –' → logprob: -17.20094108581543
    9. '<|end|>' → logprob: -17.32594108581543
    10. ' ' → logprob: -17.57594108581543

Token 166: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.10020741820335388
    2. ' points' → logprob: -2.3502073287963867
    3. '	points' → logprob: -14.600207328796387
    4. '(points' → logprob: -15.475207328796387
    5. '   ' → logprob: -16.475208282470703
    6. 'oints' → logprob: -18.600208282470703
    7. '       ' → logprob: -18.725208282470703
    8. '.points' → logprob: -18.975208282470703
    9. '_points' → logprob: -19.475208282470703
    10. ' ' → logprob: -19.725208282470703

Token 167: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00047094907495193183
    2. 'i' → logprob: -8.625471115112305
    3. '-' → logprob: -8.750471115112305
    4. '][' → logprob: -9.500471115112305
    5. '[' → logprob: -10.000471115112305
    6. 'points' → logprob: -12.250471115112305
    7. 's' → logprob: -13.125471115112305
    8. '(i' → logprob: -13.500471115112305
    9. '{i' → logprob: -13.875471115112305
    10. ' [' → logprob: -14.000471115112305

Token 168: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007127894787117839
    2. ' -' → logprob: -7.500712871551514
    3. '[' → logprob: -9.250712394714355
    4. '1' → logprob: -10.750712394714355
    5. '][' → logprob: -11.125712394714355
    6. 'i' → logprob: -11.625712394714355
    7. '[i' → logprob: -11.875712394714355
    8. 's' → logprob: -12.750712394714355
    9. '   ' → logprob: -12.750712394714355
    10. 'prev' → logprob: -13.500712394714355

Token 169: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2113979209971149e-05
    2. ' ' → logprob: -11.375012397766113
    3. '   ' → logprob: -15.250012397766113
    4. '0' → logprob: -16.500011444091797
    5. '```' → logprob: -17.312511444091797
    6. '  ' → logprob: -17.562511444091797
    7. ']' → logprob: -17.812511444091797
    8. '][' → logprob: -18.125011444091797
    9. '-' → logprob: -19.000011444091797
    10. '    ' → logprob: -19.375011444091797

Token 170: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0008828802965581417
    2. '[' → logprob: -7.250883102416992
    3. ' ][' → logprob: -9.125883102416992
    4. '0' → logprob: -10.625883102416992
    5. ']' → logprob: -10.875883102416992
    6. '1' → logprob: -11.750883102416992
    7. '   ' → logprob: -11.875883102416992
    8. ''][' → logprob: -13.375883102416992
    9. ' [' → logprob: -14.125883102416992
    10. '"][' → logprob: -14.250883102416992

Token 171: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.77627644513268e-06
    2. ' ' → logprob: -11.750008583068848
    3. '1' → logprob: -14.500008583068848
    4. '   ' → logprob: -16.000009536743164
    5. '][' → logprob: -16.750009536743164
    6. '[' → logprob: -17.000009536743164
    7. ']' → logprob: -18.062509536743164
    8. '  ' → logprob: -18.125009536743164
    9. '
' → logprob: -18.687509536743164
    10. 'i' → logprob: -18.812509536743164

Token 172: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002864200621843338
    2. ')
' → logprob: -6.877864360809326
    3. '<|end|>' → logprob: -6.877864360809326
    4. ']' → logprob: -7.877864360809326
    5. '       ' → logprob: -8.002863883972168
    6. '   ' → logprob: -10.127863883972168
    7. ',' → logprob: -11.252863883972168
    8. '<|end|>' → logprob: -11.377863883972168
    9. ' )' → logprob: -13.002863883972168
    10. '}' → logprob: -13.002863883972168

Token 173: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004610745701938868
    2. ',' → logprob: -5.629610538482666
    3. '<|end|>' → logprob: -7.379610538482666
    4. '        ' → logprob: -9.504611015319824
    5. '        
' → logprob: -9.504611015319824
    6. '      ' → logprob: -10.379611015319824
    7. ' ' → logprob: -10.504611015319824
    8. '   ' → logprob: -10.629611015319824
    9. '<|end|>' → logprob: -10.629611015319824
    10. ' ,' → logprob: -10.754611015319824

Token 174: ' dy' (ID: 11996)
  Prédit: ' dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.1773979216814041
    2. 'dy' (adapté à ' dy') → logprob: -2.1773979663848877
    3. '       ' → logprob: -3.5523979663848877
    4. 'points' → logprob: -4.927397727966309
    5. ' points' → logprob: -5.427397727966309
    6. '        ' → logprob: -5.677397727966309
    7. ' ' → logprob: -6.427397727966309
    8. '    ' → logprob: -7.177397727966309
    9. ' dx' → logprob: -7.427397727966309
    10. 'y' → logprob: -7.552397727966309

Token 175: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25472575426101685
    2. ' =' → logprob: -1.504725694656372
    3. '<|end|>' → logprob: -6.629725933074951
    4. '[' → logprob: -7.754725933074951
    5. '       ' → logprob: -8.379725456237793
    6. ')' → logprob: -8.629725456237793
    7. '(points' → logprob: -8.879725456237793
    8. ']' → logprob: -8.879725456237793
    9. ' ' → logprob: -9.629725456237793
    10. '   ' → logprob: -9.754725456237793

Token 176: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.029751643538475037
    2. 'points' → logprob: -3.5297515392303467
    3. '(points' → logprob: -13.779751777648926
    4. '	points' → logprob: -16.27975082397461
    5. '.points' → logprob: -17.77975082397461
    6. '_points' → logprob: -18.27975082397461
    7. 'oints' → logprob: -18.65475082397461
    8. 'Points' → logprob: -19.40475082397461
    9. ' puntos' → logprob: -20.02975082397461
    10. ' pontos' → logprob: -20.15475082397461

Token 177: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.250001907348633
    3. 'i' → logprob: -14.875001907348633
    4. ' [' → logprob: -17.375001907348633
    5. '[user' → logprob: -17.875001907348633
    6. '[
' → logprob: -18.125001907348633
    7. '```' → logprob: -18.625001907348633
    8. '][' → logprob: -18.875001907348633
    9. '{i' → logprob: -19.125001907348633
    10. '[-' → logprob: -19.250001907348633

Token 178: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.003933663945645094
    2. '[' → logprob: -5.753933429718018
    3. '-' → logprob: -7.378933429718018
    4. ' ][' → logprob: -9.878933906555176
    5. '   ' → logprob: -10.503933906555176
    6. '1' → logprob: -10.753933906555176
    7. ']' → logprob: -11.378933906555176
    8. '[i' → logprob: -11.878933906555176
    9. ' [' → logprob: -12.753933906555176
    10. ')[' → logprob: -13.253933906555176

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006671638693660498
    2. '-' → logprob: -7.625667095184326
    3. 'i' → logprob: -9.125667572021484
    4. '0' → logprob: -9.750667572021484
    5. '[' → logprob: -12.375667572021484
    6. '[i' → logprob: -12.375667572021484
    7. ' ' → logprob: -12.875667572021484
    8. '(i' → logprob: -15.125667572021484
    9. '][' → logprob: -15.750667572021484
    10. '   ' → logprob: -15.750667572021484

Token 180: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06697525829076767
    2. '-' → logprob: -2.9419753551483154
    3. ' -' → logprob: -4.941975116729736
    4. '[' → logprob: -5.566975116729736
    5. ' ]' → logprob: -8.066975593566895
    6. ']-' → logprob: -8.066975593566895
    7. '][' → logprob: -8.566975593566895
    8. '[i' → logprob: -9.191975593566895
    9. '       ' → logprob: -10.191975593566895
    10. ')' → logprob: -10.191975593566895

Token 181: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02331186644732952
    2. '-' → logprob: -3.7733118534088135
    3. '[' → logprob: -10.148311614990234
    4. ' ' → logprob: -10.648311614990234
    5. ')' → logprob: -13.273311614990234
    6. ']' → logprob: -14.023311614990234
    7. '   ' → logprob: -15.398311614990234
    8. ' -
' → logprob: -16.148311614990234
    9. '    ' → logprob: -16.648311614990234
    10. ' [' → logprob: -16.773311614990234

Token 182: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.12693557143211365
    2. ' points' → logprob: -2.1269354820251465
    3. '(points' → logprob: -12.001935958862305
    4. '	points' → logprob: -14.376935958862305
    5. '1' → logprob: -14.626935958862305
    6. ' ' → logprob: -16.251935958862305
    7. '.points' → logprob: -16.376935958862305
    8. '[' → logprob: -17.001935958862305
    9. '_points' → logprob: -17.001935958862305
    10. 'oints' → logprob: -17.376935958862305

Token 183: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06351427733898163
    2. '-' → logprob: -3.313514232635498
    3. '[' → logprob: -3.688514232635498
    4. '1' → logprob: -9.688514709472656
    5. '[-' → logprob: -10.313514709472656
    6. 'i' → logprob: -10.313514709472656
    7. '   ' → logprob: -12.563514709472656
    8. '```' → logprob: -12.938514709472656
    9. '][' → logprob: -13.063514709472656
    10. ' [' → logprob: -13.563514709472656

Token 184: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01250506192445755
    2. '[' → logprob: -4.637505054473877
    3. '1' → logprob: -6.012505054473877
    4. '][' → logprob: -8.512505531311035
    5. ' -' → logprob: -9.512505531311035
    6. '0' → logprob: -12.387505531311035
    7. '   ' → logprob: -12.512505531311035
    8. '-[' → logprob: -13.012505531311035
    9. '−' → logprob: -13.012505531311035
    10. ']' → logprob: -13.637505531311035

Token 185: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4881879400927573e-05
    2. ' ' → logprob: -10.375035285949707
    3. '-' → logprob: -13.375035285949707
    4. '```' → logprob: -14.500035285949707
    5. '0' → logprob: -14.750035285949707
    6. '   ' → logprob: -14.875035285949707
    7. 'prev' → logprob: -15.000035285949707
    8. '[' → logprob: -15.750035285949707
    9. ']' → logprob: -16.12503433227539
    10. 'def' → logprob: -17.00003433227539

Token 186: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14650464057922363
    2. '][' → logprob: -2.6465046405792236
    3. '[' → logprob: -3.6465046405792236
    4. '-' → logprob: -3.7715046405792236
    5. '1' → logprob: -4.6465044021606445
    6. '0' → logprob: -5.6465044021606445
    7. '])' → logprob: -6.7715044021606445
    8. ']
' → logprob: -7.2715044021606445
    9. ']-' → logprob: -8.146504402160645
    10. '   ' → logprob: -8.146504402160645

Token 187: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11312224715948105
    2. '0' → logprob: -2.2381222248077393
    3. ' ' → logprob: -8.61312198638916
    4. 'i' → logprob: -9.48812198638916
    5. '-' → logprob: -10.36312198638916
    6. '[' → logprob: -12.73812198638916
    7. '   ' → logprob: -13.48812198638916
    8. '[i' → logprob: -13.73812198638916
    9. ']' → logprob: -13.86312198638916
    10. '][' → logprob: -14.05062198638916

Token 188: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027854688465595245
    2. '       ' → logprob: -3.6528546810150146
    3. ')
' → logprob: -6.527854919433594
    4. '   ' → logprob: -9.527854919433594
    5. '<|end|>' → logprob: -12.027854919433594
    6. ' )' → logprob: -12.527854919433594
    7. '           ' → logprob: -13.652854919433594
    8. ')
' → logprob: -13.652854919433594
    9. '
' → logprob: -13.777854919433594
    10. ' ' → logprob: -14.152854919433594

Token 189: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07030696421861649
    2. '   ' → logprob: -2.9453070163726807
    3. ',' → logprob: -5.070306777954102
    4. ')' → logprob: -5.570306777954102
    5. 'vectors' → logprob: -6.570306777954102
    6. ' vectors' → logprob: -6.695306777954102
    7. '	v' → logprob: -8.070306777954102
    8. '    
' → logprob: -8.445306777954102
    9. '	' → logprob: -8.445306777954102
    10. '     ' → logprob: -8.570306777954102

Token 190: ' vectors' (ID: 52254)
  Prédit: ' vectors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vectors' → logprob: -0.6784437298774719
    2. '   ' → logprob: -1.3034436702728271
    3. 'vectors' (adapté à ' vectors') → logprob: -1.6784436702728271
    4. '       ' → logprob: -3.428443670272827
    5. 'v' → logprob: -6.803443908691406
    6. '
' → logprob: -8.803443908691406
    7. '	v' → logprob: -9.053443908691406
    8. ',v' → logprob: -9.303443908691406
    9. '_vectors' → logprob: -9.303443908691406
    10. '```' → logprob: -10.053443908691406

Token 191: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008617646060883999
    2. '.' → logprob: -4.758617877960205
    3. '.app' → logprob: -13.633617401123047
    4. '.ap' → logprob: -13.883617401123047
    5. '.extend' → logprob: -15.633617401123047
    6. ' .' → logprob: -15.633617401123047
    7. '.Append' → logprob: -15.758617401123047
    8. '.push' → logprob: -15.883617401123047
    9. ').' → logprob: -16.258617401123047
    10. '.add' → logprob: -16.258617401123047

Token 192: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.6663810014724731
    2. '(' → logprob: -1.4163810014724731
    3. '(dx' → logprob: -1.4163810014724731
    4. ' (' → logprob: -6.791380882263184
    5. '(v' → logprob: -9.041380882263184
    6. '(x' → logprob: -12.541380882263184
    7. ' ((' → logprob: -12.541380882263184
    8. '(dp' → logprob: -13.416380882263184
    9. '(d' → logprob: -13.666380882263184
    10. ' ' → logprob: -14.291380882263184

Token 193: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -1.688212614681106e-05
    2. ' dx' → logprob: -11.000017166137695
    3. '(dx' → logprob: -16.625017166137695
    4. '_dx' → logprob: -17.500017166137695
    5. ' ' → logprob: -18.750017166137695
    6. '   ' → logprob: -19.500017166137695
    7. '
' → logprob: -19.875017166137695
    8. '.dx' → logprob: -20.500017166137695
    9. ')' → logprob: -20.500017166137695
    10. 'Dx' → logprob: -20.500017166137695

Token 194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017505438881926239
    2. ' ,' → logprob: -9.125175476074219
    3. ',
' → logprob: -10.000175476074219
    4. '),' → logprob: -12.000175476074219
    5. ',d' → logprob: -12.125175476074219
    6. ')' → logprob: -13.000175476074219
    7. ',

' → logprob: -13.375175476074219
    8. ',y' → logprob: -13.625175476074219
    9. ',v' → logprob: -14.000175476074219
    10. '   ' → logprob: -14.375175476074219

Token 195: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.061967913061380386
    2. ' dy' → logprob: -2.8119678497314453
    3. 'Dy' → logprob: -16.686967849731445
    4. '.dy' → logprob: -16.936967849731445
    5. 'd' → logprob: -17.311967849731445
    6. ' ' → logprob: -17.436967849731445
    7. 'dx' → logprob: -17.686967849731445
    8. ')' → logprob: -17.811967849731445
    9. ' 
' → logprob: -18.311967849731445
    10. '-d' → logprob: -18.811967849731445

Token 196: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004111054353415966
    2. ')' → logprob: -5.504111289978027
    3. '))
' → logprob: -10.504111289978027
    4. '),' → logprob: -13.379111289978027
    5. '   ' → logprob: -13.629111289978027
    6. ')
' → logprob: -14.129111289978027
    7. ' ))' → logprob: -14.129111289978027
    8. ')))' → logprob: -14.629111289978027
    9. '));' → logprob: -15.629111289978027
    10. ' ' → logprob: -16.00411033630371

Token 197: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13658663630485535
    2. '   ' → logprob: -2.7615866661071777
    3. '    
' → logprob: -3.1365866661071777
    4. ' 
' → logprob: -5.011586666107178
    5. '  
' → logprob: -5.261586666107178
    6. '

' → logprob: -6.386586666107178
    7. ',' → logprob: -6.886586666107178
    8. '```' → logprob: -6.886586666107178
    9. '<|end|>' → logprob: -7.136586666107178
    10. '\n' → logprob: -7.136586666107178

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021359648555517197
    2. 'def' → logprob: -4.646359443664551
    3. 'all' → logprob: -5.896359443664551
    4. 'rot' → logprob: -6.521359443664551
    5. '
' → logprob: -6.646359443664551
    6. '    
' → logprob: -6.896359443664551
    7. 'orient' → logprob: -6.896359443664551
    8. 'best' → logprob: -7.146359443664551
    9. 'possible' → logprob: -7.396359443664551
    10. ' orientations' → logprob: -7.521359443664551

Token 199: ' #' (ID: 1069)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.3059955835342407
    2. 'def' → logprob: -1.3059955835342407
    3. 'orient' → logprob: -2.055995464324951
    4. 'c' → logprob: -2.180995464324951
    5. 'rot' → logprob: -2.430995464324951
    6. 'normalized' → logprob: -2.805995464324951
    7. '   ' → logprob: -3.430995464324951
    8. '#' (adapté à ' #') → logprob: -4.680995464324951
    9. 'norm' → logprob: -4.805995464324951
    10. 'possible' → logprob: -5.555995464324951

Token 200: ' Function' (ID: 11035)
  Prédit: 'orient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'orient' → logprob: -1.1643898487091064
    2. 'def' → logprob: -1.6643898487091064
    3. ' orientations' → logprob: -1.9143898487091064
    4. 'rot' → logprob: -2.0393898487091064
    5. 'c' → logprob: -3.2893898487091064
    6. 'all' → logprob: -3.5393898487091064
    7. '#' → logprob: -3.5393898487091064
    8. 'normalized' → logprob: -3.6643898487091064
    9. 'import' → logprob: -3.6643898487091064
    10. ' candidates' → logprob: -4.164389610290527

Token 201: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.059044137597084045
    2. ' to' → logprob: -3.559044122695923
    3. ' def' → logprob: -3.684044122695923
    4. '   ' → logprob: -6.559044361114502
    5. ' for' → logprob: -7.059044361114502
    6. 'to' → logprob: -7.809044361114502
    7. ' rotate' → logprob: -8.434043884277344
    8. 'normalize' → logprob: -8.684043884277344
    9. ' normalize' → logprob: -9.184043884277344
    10. 's' → logprob: -9.684043884277344

Token 202: ' reconstruct' (ID: 78298)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.31375738978385925
    2. ' rotate' → logprob: -1.3137574195861816
    3. 'apply' → logprob: -8.188756942749023
    4. ' apply' → logprob: -8.688756942749023
    5. 'def' → logprob: -10.188756942749023
    6. 'rot' → logprob: -12.063756942749023
    7. ' def' → logprob: -13.063756942749023
    8. '.rotate' → logprob: -14.063756942749023
    9. '_rotate' → logprob: -14.063756942749023
    10. '   ' → logprob: -14.688756942749023

Token 203: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.061553142964839935
    2. 'points' → logprob: -3.0615532398223877
    3. ' shape' → logprob: -4.436553001403809
    4. 'shape' → logprob: -7.686553001403809
    5. '(points' → logprob: -8.811553001403809
    6. '_points' → logprob: -9.311553001403809
    7. 'def' → logprob: -10.061553001403809
    8. ' a' → logprob: -10.061553001403809
    9. '	points' → logprob: -10.311553001403809
    10. ' new' → logprob: -10.436553001403809

Token 204: ' from' (ID: 591)
  Prédit: '(points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.27087563276290894
    2. 'from' → logprob: -2.0208756923675537
    3. 'def' → logprob: -2.5208756923675537
    4. ' from' → logprob: -4.645875453948975
    5. 'points' → logprob: -5.520875453948975
    6. ' points' → logprob: -5.645875453948975
    7. '(' → logprob: -5.895875453948975
    8. '   ' → logprob: -6.270875453948975
    9. '_from' → logprob: -7.020875453948975
    10. ' def' → logprob: -7.020875453948975

Token 205: ' vectors' (ID: 52254)
  Prédit: 'vectors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vectors' → logprob: -0.3946206271648407
    2. ' vectors' → logprob: -1.144620656967163
    3. 'vec' → logprob: -5.519620418548584
    4. 'v' → logprob: -6.644620418548584
    5. ' start' → logprob: -7.144620418548584
    6. 'start' → logprob: -7.644620418548584
    7. ' base' → logprob: -8.519620895385742
    8. 'vector' → logprob: -8.644620895385742
    9. 'base' → logprob: -8.644620895385742
    10. ' points' → logprob: -8.894620895385742

Token 206: ' starting' (ID: 8601)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05684766545891762
    2. '   ' → logprob: -3.43184757232666
    3. '(points' → logprob: -4.55684757232666
    4. ' def' → logprob: -5.18184757232666
    5. '
' → logprob: -5.30684757232666
    6. '(' → logprob: -7.68184757232666
    7. 'points' → logprob: -8.05684757232666
    8. ' (' → logprob: -8.55684757232666
    9. '(n' → logprob: -8.80684757232666
    10. '    
' → logprob: -8.80684757232666

Token 207: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.6113384962081909
    2. 'from' → logprob: -1.861338496208191
    3. 'at' → logprob: -1.986338496208191
    4. '_points' → logprob: -2.7363386154174805
    5. 'points' → logprob: -3.6113386154174805
    6. '(points' → logprob: -3.7363386154174805
    7. '=' → logprob: -4.4863386154174805
    8. 'with' → logprob: -4.6113386154174805
    9. '   ' → logprob: -5.1113386154174805
    10. ' from' → logprob: -5.2363386154174805

Token 208: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08682109415531158
    2. '[(' → logprob: -2.5868210792541504
    3. ' (' → logprob: -5.21182107925415
    4. '[' → logprob: -6.83682107925415
    5. '0' → logprob: -6.83682107925415
    6. ' [(' → logprob: -8.461821556091309
    7. 'origin' → logprob: -9.961821556091309
    8. 'points' → logprob: -11.211821556091309
    9. ' ' → logprob: -11.461821556091309
    10. '(points' → logprob: -12.586821556091309

Token 209: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0016725646564736962
    2. '(' → logprob: -6.626672744750977
    3. ' ' → logprob: -8.251672744750977
    4. '   ' → logprob: -9.876672744750977
    5. '[' → logprob: -11.001672744750977
    6. ' (' → logprob: -11.376672744750977
    7. ')' → logprob: -12.376672744750977
    8. '[(' → logprob: -14.376672744750977
    9. '    
' → logprob: -14.751672744750977
    10. '  ' → logprob: -15.376672744750977

Token 210: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010115911572938785
    2. ' ,' → logprob: -9.875101089477539
    3. '0' → logprob: -10.125101089477539
    4. ')' → logprob: -11.750101089477539
    5. '[' → logprob: -14.250101089477539
    6. '```' → logprob: -15.500101089477539
    7. '),' → logprob: -15.625101089477539
    8. ' ' → logprob: -15.750101089477539
    9. ',
' → logprob: -15.750101089477539
    10. '),(' → logprob: -16.50010108947754

Token 211: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00761218648403883
    2. ' ' → logprob: -4.882612228393555
    3. ',' → logprob: -12.132612228393555
    4. '   ' → logprob: -15.132612228393555
    5. '  ' → logprob: -15.507612228393555
    6. ')' → logprob: -15.632612228393555
    7. '
' → logprob: -17.382612228393555
    8. ' ,' → logprob: -17.882612228393555
    9. '[' → logprob: -18.007612228393555
    10. '    ' → logprob: -18.007612228393555

Token 212: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.45445626974105835
    2. '   ' → logprob: -2.204456329345703
    3. '):' → logprob: -2.204456329345703
    4. ')
' → logprob: -2.454456329345703
    5. ')' → logprob: -3.329456329345703
    6. 'def' → logprob: -3.829456329345703
    7. '):

' → logprob: -7.204456329345703
    8. '
' → logprob: -9.454456329345703
    9. ' def' → logprob: -9.579456329345703
    10. '):
' → logprob: -9.704456329345703

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5045593976974487
    2. '
' → logprob: -1.6295593976974487
    3. 'def' → logprob: -1.6295593976974487
    4. '    
' → logprob: -5.504559516906738
    5. ' def' → logprob: -9.754559516906738
    6. '  
' → logprob: -11.004559516906738
    7. ' 
' → logprob: -11.754559516906738
    8. '\n' → logprob: -11.754559516906738
    9. '   
' → logprob: -12.129559516906738
    10. '        
' → logprob: -12.129559516906738

Token 214: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.4783543348312378
    2. '   ' → logprob: -1.7283543348312378
    3. ' def' → logprob: -1.7283543348312378
    4. '
' → logprob: -3.7283544540405273
    5. '    
' → logprob: -7.103354454040527
    6. '    ' → logprob: -9.728354454040527
    7. ' 
' → logprob: -10.103354454040527
    8. '```' → logprob: -11.103354454040527
    9. '\' → logprob: -11.478354454040527
    10. '

' → logprob: -12.040854454040527

Token 215: ' vectors' (ID: 52254)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.00788993202149868
    2. ' reconstruct' → logprob: -4.882889747619629
    3. 'restore' → logprob: -9.382889747619629
    4. 'build' → logprob: -9.507889747619629
    5. 'points' → logprob: -9.507889747619629
    6. 'construct' → logprob: -11.132889747619629
    7. 'to' → logprob: -11.632889747619629
    8. ' rebuild' → logprob: -11.757889747619629
    9. ' points' → logprob: -12.257889747619629
    10. 'vectors' → logprob: -12.507889747619629

Token 216: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.0010949730640277267
    2. '_from' → logprob: -7.251094818115234
    3. '_re' → logprob: -8.251094818115234
    4. '_start' → logprob: -10.001094818115234
    5. '_points' → logprob: -11.126094818115234
    6. '_translate' → logprob: -11.126094818115234
    7. '_repr' → logprob: -11.626094818115234
    8. '_as' → logprob: -12.126094818115234
    9. 'to' → logprob: -12.251094818115234
    10. '_' → logprob: -12.376094818115234

Token 217: '_points' (ID: 30070)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.005243479739874601
    2. '_points' → logprob: -5.255243301391602
    3. ' points' → logprob: -12.130243301391602
    4. 'list' → logprob: -13.505243301391602
    5. 'coordinates' → logprob: -14.380243301391602
    6. '	points' → logprob: -14.505243301391602
    7. 'point' → logprob: -14.755243301391602
    8. '(points' → logprob: -14.880243301391602
    9. 'Points' → logprob: -15.130243301391602
    10. 'coords' → logprob: -15.505243301391602

Token 218: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -4.0126840758603066e-05
    2. ' (' → logprob: -10.250040054321289
    3. 'vectors' → logprob: -13.375040054321289
    4. '   ' → logprob: -13.625040054321289
    5. '(' → logprob: -13.750040054321289
    6. '(vec' → logprob: -15.250040054321289
    7. '(V' → logprob: -15.750040054321289
    8. ' vectors' → logprob: -15.750040054321289
    9. '(vector' → logprob: -16.37504005432129
    10. '```' → logprob: -16.50004005432129

Token 219: 's' (ID: 82)
  Prédit: 'ectors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ectors' → logprob: -0.00019388488726690412
    2. 'ector' → logprob: -8.62519359588623
    3. 'ec' → logprob: -11.75019359588623
    4. 'ecs' → logprob: -13.37519359588623
    5. 'ects' → logprob: -13.62519359588623
    6. 'e' → logprob: -13.87519359588623
    7. 'ect' → logprob: -14.25019359588623
    8. '(' → logprob: -14.37519359588623
    9. '[' → logprob: -14.87519359588623
    10. '{' → logprob: -15.37519359588623

Token 220: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12768539786338806
    2. '):
' → logprob: -2.127685308456421
    3. 'ectors' → logprob: -7.877685546875
    4. '):
' → logprob: -8.627685546875
    5. ',' → logprob: -9.502685546875
    6. '(v' → logprob: -10.002685546875
    7. ')' → logprob: -10.377685546875
    8. '):

' → logprob: -11.002685546875
    9. 'ector' → logprob: -11.877685546875
    10. 'v' → logprob: -12.127685546875

Token 221: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021594056859612465
    2. '\n' → logprob: -4.771594047546387
    3. '    
' → logprob: -4.771594047546387
    4. '   ' → logprob: -6.646594047546387
    5. '    ' → logprob: -7.271594047546387
    6. '
' → logprob: -7.521594047546387
    7. ' 
' → logprob: -7.896594047546387
    8. '        
' → logprob: -7.896594047546387
    9. '  
' → logprob: -8.771594047546387
    10. 'n' → logprob: -9.146594047546387

Token 222: ' pts' (ID: 66515)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44853854179382324
    2. ' points' → logprob: -1.5735385417938232
    3. 'points' → logprob: -2.1985385417938232
    4. ' pts' → logprob: -3.6985385417938232
    5. '   ' → logprob: -4.448538780212402
    6. 'pts' (adapté à ' pts') → logprob: -6.073538780212402
    7. ' p' → logprob: -6.698538780212402
    8. '    ' → logprob: -7.198538780212402
    9. 'p' → logprob: -7.323538780212402
    10. '	points' → logprob: -7.698538780212402

Token 223: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018591180443763733
    2. '=' → logprob: -4.018591403961182
    3. '   ' → logprob: -8.018590927124023
    4. '=[]' → logprob: -9.768590927124023
    5. '=[]
' → logprob: -10.393590927124023
    6. '       ' → logprob: -11.893590927124023
    7. '.append' → logprob: -12.268590927124023
    8. '=[' → logprob: -12.768590927124023
    9. ' ' → logprob: -12.893590927124023
    10. '    ' → logprob: -13.768590927124023

Token 224: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0007121934904716909
    2. ' [(' → logprob: -7.2507123947143555
    3. '[' → logprob: -13.250712394714355
    4. '[[' → logprob: -14.500712394714355
    5. ' ' → logprob: -16.62571144104004
    6. '   ' → logprob: -18.75071144104004
    7. ' [' → logprob: -19.62571144104004
    8. '[((' → logprob: -21.37571144104004
    9. '  ' → logprob: -21.62571144104004
    10. '([(' → logprob: -21.87571144104004

Token 225: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '(' → logprob: -15.875004768371582
    4. '   ' → logprob: -18.125003814697266
    5. ')' → logprob: -20.000003814697266
    6. '  ' → logprob: -20.500003814697266
    7. '۰' → logprob: -20.750003814697266
    8. '00' → logprob: -21.125003814697266
    9. '[' → logprob: -21.375003814697266
    10. '    ' → logprob: -21.750003814697266

Token 226: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.015305552864447e-05
    2. ' ,' → logprob: -10.250060081481934
    3. '0' → logprob: -10.750060081481934
    4. ',
' → logprob: -13.125060081481934
    5. ')' → logprob: -14.125060081481934
    6. ')]' → logprob: -15.375060081481934
    7. ' ' → logprob: -16.62506103515625
    8. '<|end|>' → logprob: -16.75006103515625
    9. '[' → logprob: -17.00006103515625
    10. '
' → logprob: -17.25006103515625

Token 227: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. ')' → logprob: -17.750045776367188
    4. '   ' → logprob: -18.375045776367188
    5. '  ' → logprob: -18.750045776367188
    6. '
' → logprob: -19.625045776367188
    7. '    ' → logprob: -20.750045776367188
    8. '۰' → logprob: -21.000045776367188
    9. '     ' → logprob: -21.437545776367188
    10. '

' → logprob: -21.562545776367188

Token 228: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. ')' → logprob: -16.87501335144043
    4. ')]' → logprob: -17.75001335144043
    5. '   ' → logprob: -17.87501335144043
    6. '  ' → logprob: -18.50001335144043
    7. '
' → logprob: -18.75001335144043
    8. '```' → logprob: -20.06251335144043
    9. '

' → logprob: -20.12501335144043
    10. '۰' → logprob: -20.31251335144043

Token 229: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.062219418585300446
    2. ')]
' → logprob: -2.8122193813323975
    3. ')' → logprob: -8.437219619750977
    4. ')
' → logprob: -11.187219619750977
    5. ']' → logprob: -11.937219619750977
    6. ')]
' → logprob: -12.312219619750977
    7. ')]

' → logprob: -12.437219619750977
    8. ']
' → logprob: -12.937219619750977
    9. '   ' → logprob: -13.562219619750977
    10. ' )' → logprob: -13.812219619750977

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009513703174889088
    2. ' for' → logprob: -5.509513854980469
    3. '   ' → logprob: -5.884513854980469
    4. '
' → logprob: -6.134513854980469
    5. 'for' → logprob: -7.884513854980469
    6. '	for' → logprob: -10.509513854980469
    7. '    
' → logprob: -11.009513854980469
    8. '        
' → logprob: -11.259513854980469
    9. '	   ' → logprob: -11.259513854980469
    10. '	' → logprob: -12.009513854980469

Token 231: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.31397879123687744
    2. '       ' → logprob: -1.5639787912368774
    3. ' for' → logprob: -2.813978672027588
    4. '   ' → logprob: -8.563979148864746
    5. '	for' → logprob: -12.563979148864746
    6. ' ' → logprob: -13.188979148864746
    7. '           ' → logprob: -14.563979148864746
    8. '    ' → logprob: -14.938979148864746
    9. '     ' → logprob: -15.563979148864746
    10. '      ' → logprob: -15.688979148864746

Token 232: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.11502593755722046
    2. 'vx' → logprob: -2.6150259971618652
    3. 'v' → logprob: -3.6150259971618652
    4. '(dx' → logprob: -5.115025997161865
    5. ' dx' → logprob: -6.365025997161865
    6. ' vx' → logprob: -7.865025997161865
    7. '(v' → logprob: -8.115025520324707
    8. 'x' → logprob: -9.365025520324707
    9. '   ' → logprob: -10.365025520324707
    10. 'vec' → logprob: -10.865025520324707

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.951771421066951e-05
    2. ' ,' → logprob: -10.625029563903809
    3. 'dy' → logprob: -13.125029563903809
    4. ',
' → logprob: -13.375029563903809
    5. '_,' → logprob: -15.125029563903809
    6. ',d' → logprob: -15.250029563903809
    7. 's' → logprob: -15.500029563903809
    8. ',

' → logprob: -15.875029563903809
    9. '‌,' → logprob: -16.375028610229492
    10. '```' → logprob: -16.375028610229492

Token 234: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0015023599844425917
    2. ' dy' → logprob: -6.501502513885498
    3. 'd' → logprob: -19.001502990722656
    4. '.dy' → logprob: -20.001502990722656
    5. 'Dy' → logprob: -20.376502990722656
    6. ' ' → logprob: -20.626502990722656
    7. '
' → logprob: -20.626502990722656
    8. 'ddy' → logprob: -20.876502990722656
    9. 'dym' → logprob: -21.001502990722656
    10. '   ' → logprob: -21.376502990722656

Token 235: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00197395752184093
    2. 'in' → logprob: -6.251974105834961
    3. '       ' → logprob: -11.001974105834961
    4. '   ' → logprob: -11.251974105834961
    5. '        ' → logprob: -12.501974105834961
    6. ')' → logprob: -13.001974105834961
    7. '    ' → logprob: -13.126974105834961
    8. 's' → logprob: -13.501974105834961
    9. ',' → logprob: -13.626974105834961
    10. ' ' → logprob: -13.876974105834961

Token 236: ' vs' (ID: 10217)
  Prédit: 'vs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vs' → logprob: -0.0019289902411401272
    2. ' vs' → logprob: -6.251928806304932
    3. ' ' → logprob: -15.75192928314209
    4. '   ' → logprob: -15.75192928314209
    5. 'v' → logprob: -16.751928329467773
    6. '_vs' → logprob: -17.876928329467773
    7. '
' → logprob: -18.001928329467773
    8. '[' → logprob: -18.626928329467773
    9. '    ' → logprob: -18.626928329467773
    10. 'pts' → logprob: -19.251928329467773

Token 237: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.17631137371063232
    2. ':' → logprob: -1.9263113737106323
    3. '           ' → logprob: -4.801311492919922
    4. '):
' → logprob: -5.176311492919922
    5. '       ' → logprob: -6.426311492919922
    6. '):' → logprob: -8.551311492919922
    7. ',' → logprob: -9.176311492919922
    8. '        ' → logprob: -10.926311492919922
    9. '.append' → logprob: -10.926311492919922
    10. '   ' → logprob: -10.926311492919922

Token 238: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009155054576694965
    2. ' pts' → logprob: -7.87591552734375
    3. '
' → logprob: -9.25091552734375
    4. ',' → logprob: -9.50091552734375
    5. '            
' → logprob: -9.62591552734375
    6. 'pts' → logprob: -9.75091552734375
    7. '	       ' → logprob: -9.87591552734375
    8. '          ' → logprob: -10.25091552734375
    9. '            ' → logprob: -10.50091552734375
    10. '         ' → logprob: -10.75091552734375

Token 239: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.12272075563669205
    2. 'x' (adapté à ' x') → logprob: -2.372720718383789
    3. ' pts' → logprob: -4.497720718383789
    4. ' last' → logprob: -5.247720718383789
    5. '           ' → logprob: -5.622720718383789
    6. 'pts' → logprob: -7.372720718383789
    7. ' ' → logprob: -7.747720718383789
    8. ' new' → logprob: -7.747720718383789
    9. '       ' → logprob: -8.872720718383789
    10. '               ' → logprob: -9.247720718383789

Token 240: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3350691795349121
    2. '=' → logprob: -1.460069179534912
    3. ' =' → logprob: -2.960069179534912
    4. ' ,' → logprob: -8.33506965637207
    5. 'new' → logprob: -8.83506965637207
    6. '   ' → logprob: -9.46006965637207
    7. '_new' → logprob: -9.83506965637207
    8. ',y' → logprob: -10.21006965637207
    9. 'pts' → logprob: -11.08506965637207
    10. 'prev' → logprob: -11.21006965637207

Token 241: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.014773892238736153
    2. ' y' → logprob: -4.389773845672607
    3. 'pts' → logprob: -6.264773845672607
    4. '   ' → logprob: -8.389774322509766
    5. ' pts' → logprob: -9.014774322509766
    6. 'pt' → logprob: -12.764774322509766
    7. '    ' → logprob: -13.264774322509766
    8. '  ' → logprob: -13.264774322509766
    9. ' ' → logprob: -14.014774322509766
    10. 'yt' → logprob: -14.764774322509766

Token 242: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407931089401245
    2. ' =' → logprob: -0.9740793108940125
    3. '   ' → logprob: -13.599079132080078
    4. '       ' → logprob: -14.724079132080078
    5. ',' → logprob: -14.974079132080078
    6. '    ' → logprob: -15.974079132080078
    7. ' ' → logprob: -16.724079132080078
    8. ')' → logprob: -16.974079132080078
    9. '           ' → logprob: -17.724079132080078
    10. '        ' → logprob: -17.974079132080078

Token 243: ' pts' (ID: 66515)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.01105878408998251
    2. ' pts' → logprob: -4.511058807373047
    3. 'pt' → logprob: -11.511058807373047
    4. '_pts' → logprob: -14.511058807373047
    5. '   ' → logprob: -15.386058807373047
    6. 'points' → logprob: -16.511058807373047
    7. 'pti' → logprob: -17.261058807373047
    8. ' ' → logprob: -17.261058807373047
    9. 'Pts' → logprob: -17.636058807373047
    10. 'ints' → logprob: -18.136058807373047

Token 244: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.7432603272027336e-06
    2. '-' → logprob: -13.375001907348633
    3. '   ' → logprob: -16.000001907348633
    4. ' [-' → logprob: -18.625001907348633
    5. '```' → logprob: -18.750001907348633
    6. '
' → logprob: -19.000001907348633
    7. '[' → logprob: -19.625001907348633
    8. '][-' → logprob: -19.625001907348633
    9. '       ' → logprob: -19.750001907348633
    10. ' -' → logprob: -20.500001907348633

Token 245: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0802738870552275e-05
    2. '-' → logprob: -11.50001049041748
    3. '   ' → logprob: -14.75001049041748
    4. ' ' → logprob: -15.62501049041748
    5. '```' → logprob: -16.125011444091797
    6. ' -' → logprob: -17.500011444091797
    7. '
' → logprob: -17.750011444091797
    8. '  ' → logprob: -18.562511444091797
    9. '``' → logprob: -18.625011444091797
    10. '[' → logprob: -19.062511444091797

Token 246: ']
' (ID: 1592)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7647324800491333
    2. '][' → logprob: -0.7647324800491333
    3. ']
' → logprob: -2.8897323608398438
    4. '   ' → logprob: -5.264732360839844
    5. '       ' → logprob: -6.014732360839844
    6. '           ' → logprob: -6.139732360839844
    7. '
' → logprob: -6.264732360839844
    8. '0' → logprob: -7.139732360839844
    9. ']' → logprob: -7.264732360839844
    10. 'x' → logprob: -9.639732360839844

Token 247: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010580805974313989
    2. '
' → logprob: -10.500105857849121
    3. '            
' → logprob: -10.625105857849121
    4. ',' → logprob: -11.125105857849121
    5. '       ' → logprob: -11.250105857849121
    6. ' 
' → logprob: -12.000105857849121
    7. ' pts' → logprob: -12.625105857849121
    8. '   ' → logprob: -13.250105857849121
    9. '    
' → logprob: -13.250105857849121
    10. '(' → logprob: -13.500105857849121

Token 248: ' pts' (ID: 66515)
  Prédit: ' pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pts' → logprob: -0.43260931968688965
    2. '           ' → logprob: -1.6826093196868896
    3. 'pts' (adapté à ' pts') → logprob: -1.8076093196868896
    4. 'points' → logprob: -7.682609558105469
    5. ' points' → logprob: -7.807609558105469
    6. '   ' → logprob: -9.182609558105469
    7. '       ' → logprob: -9.557609558105469
    8. 'pt' → logprob: -9.932609558105469
    9. '_pts' → logprob: -10.057609558105469
    10. ' pt' → logprob: -11.057609558105469

Token 249: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0004664193547796458
    2. '.' → logprob: -7.875466346740723
    3. 'append' → logprob: -10.375466346740723
    4. ' .' → logprob: -10.375466346740723
    5. '.app' → logprob: -11.250466346740723
    6. '=' → logprob: -13.000466346740723
    7. '+' → logprob: -13.375466346740723
    8. '_append' → logprob: -13.625466346740723
    9. ').' → logprob: -13.750466346740723
    10. 'Append' → logprob: -14.000466346740723

Token 250: '((' (ID: 2054)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.004182279109954834
    2. '(' → logprob: -5.5041823387146
    3. ' (' → logprob: -9.754181861877441
    4. '((' → logprob: -10.004181861877441
    5. '   ' → logprob: -15.004181861877441
    6. ' ' → logprob: -16.504182815551758
    7. '(
' → logprob: -16.504182815551758
    8. '(t' → logprob: -18.004182815551758
    9. '(input' → logprob: -18.754182815551758
    10. '  ' → logprob: -19.004182815551758

Token 251: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.848420551046729e-05
    2. ' x' → logprob: -9.7500581741333
    3. '   ' → logprob: -17.125059127807617
    4. '(x' → logprob: -17.625059127807617
    5. ' ' → logprob: -18.500059127807617
    6. '	x' → logprob: -19.875059127807617
    7. '  ' → logprob: -20.250059127807617
    8. ')x' → logprob: -20.500059127807617
    9. '    ' → logprob: -21.000059127807617
    10. '           ' → logprob: -21.250059127807617

Token 252: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07889121770858765
    2. '+' → logprob: -2.5788912773132324
    3. '+x' → logprob: -14.203890800476074
    4. 'dx' → logprob: -14.703890800476074
    5. ' dx' → logprob: -16.07889175415039
    6. ' ' → logprob: -16.57889175415039
    7. '   ' → logprob: -16.82889175415039
    8. 'x' → logprob: -17.32889175415039
    9. ' +
' → logprob: -17.57889175415039
    10. '+d' → logprob: -18.20389175415039

Token 253: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0004309076175559312
    2. ' dx' → logprob: -7.750431060791016
    3. '_dx' → logprob: -16.750431060791016
    4. '   ' → logprob: -17.750431060791016
    5. '(dx' → logprob: -18.000431060791016
    6. ' ' → logprob: -18.750431060791016
    7. '.dx' → logprob: -18.875431060791016
    8. '  ' → logprob: -20.375431060791016
    9. 'Dx' → logprob: -20.500431060791016
    10. '           ' → logprob: -20.625431060791016

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.602024900028482e-05
    2. ' ,' → logprob: -10.000085830688477
    3. ',
' → logprob: -10.250085830688477
    4. ',y' → logprob: -12.250085830688477
    5. ',

' → logprob: -15.500085830688477
    6. '),' → logprob: -16.500085830688477
    7. '   ' → logprob: -17.000085830688477
    8. '       ' → logprob: -17.250085830688477
    9. '‌,' → logprob: -17.250085830688477
    10. ',d' → logprob: -18.000085830688477

Token 255: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2519296407699585
    2. ' y' → logprob: -1.5019296407699585
    3. '   ' → logprob: -15.12692928314209
    4. '    ' → logprob: -16.126930236816406
    5. '  ' → logprob: -16.751930236816406
    6. '	y' → logprob: -16.876930236816406
    7. ' ' → logprob: -17.751930236816406
    8. 'dy' → logprob: -17.876930236816406
    9. '           ' → logprob: -18.876930236816406
    10. '       ' → logprob: -19.001930236816406

Token 256: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16698306798934937
    2. ' +' → logprob: -1.9169831275939941
    3. '))' → logprob: -5.041983127593994
    4. '[' → logprob: -9.166982650756836
    5. '+y' → logprob: -9.291982650756836
    6. '+
' → logprob: -11.291982650756836
    7. '   ' → logprob: -11.416982650756836
    8. ',' → logprob: -11.541982650756836
    9. ')' → logprob: -11.541982650756836
    10. 'dy' → logprob: -11.791982650756836

Token 257: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.005234121344983578
    2. ' dy' → logprob: -5.255234241485596
    3. ' ' → logprob: -16.505233764648438
    4. '   ' → logprob: -16.630233764648438
    5. '.dy' → logprob: -17.630233764648438
    6. 'y' → logprob: -17.880233764648438
    7. '  ' → logprob: -17.880233764648438
    8. 'ay' → logprob: -18.005233764648438
    9. 'Dy' → logprob: -18.255233764648438
    10. 'd' → logprob: -18.505233764648438

Token 258: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00862213596701622
    2. '))
' → logprob: -4.758622169494629
    3. ')' → logprob: -12.758622169494629
    4. '       ' → logprob: -12.883622169494629
    5. '   ' → logprob: -14.133622169494629
    6. '))

' → logprob: -14.508622169494629
    7. '))
' → logprob: -14.633622169494629
    8. ')))' → logprob: -15.133622169494629
    9. ' ))' → logprob: -15.633622169494629
    10. ')
' → logprob: -17.008621215820312

Token 259: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019936825265176594
    2. '	' → logprob: -9.250199317932129
    3. '   ' → logprob: -9.500199317932129
    4. '           ' → logprob: -12.000199317932129
    5. '	return' → logprob: -12.250199317932129
    6. ' return' → logprob: -12.375199317932129
    7. 'return' → logprob: -13.000199317932129
    8. '	   ' → logprob: -13.125199317932129
    9. '     ' → logprob: -13.375199317932129
    10. '      ' → logprob: -13.375199317932129

Token 260: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9322303533554077
    2. 'return' (adapté à ' return') → logprob: -0.9322303533554077
    3. '   ' → logprob: -1.6822303533554077
    4. ' return' → logprob: -3.6822304725646973
    5. '	return' → logprob: -7.057230472564697
    6. '
' → logprob: -7.557230472564697
    7. ' ' → logprob: -10.307229995727539
    8. '	' → logprob: -10.557229995727539
    9. '           ' → logprob: -10.807229995727539
    10. '     ' → logprob: -11.057229995727539

Token 261: ' pts' (ID: 66515)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.04858850687742233
    2. ' pts' → logprob: -3.048588514328003
    3. '_pts' → logprob: -14.923588752746582
    4. 'points' → logprob: -15.423588752746582
    5. '[' → logprob: -15.798588752746582
    6. ' ' → logprob: -15.923588752746582
    7. ' points' → logprob: -16.673587799072266
    8. 'pt' → logprob: -17.048587799072266
    9. 'Pts' → logprob: -17.173587799072266
    10. '   ' → logprob: -17.298587799072266

Token 262: '
    
' (ID: 15698)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.2425914704799652
    2. '   ' → logprob: -1.6175915002822876
    3. '
' → logprob: -4.242591381072998
    4. '

' → logprob: -7.242591381072998
    5. '<|end|>' → logprob: -7.742591381072998
    6. '    
    
' → logprob: -7.867591381072998
    7. ' rotations' → logprob: -8.117591857910156
    8. '        
' → logprob: -8.492591857910156
    9. ',' → logprob: -9.242591857910156
    10. '
    
' → logprob: -9.367591857910156

Token 263: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4791357219219208
    2. '
' → logprob: -1.3541357517242432
    3. '    
' → logprob: -2.104135751724243
    4. '```' → logprob: -8.729135513305664
    5. ' rotations' → logprob: -8.979135513305664
    6. 'def' → logprob: -8.979135513305664
    7. '

' → logprob: -10.479135513305664
    8. '#' → logprob: -10.479135513305664
    9. 'rot' → logprob: -10.604135513305664
    10. 'rotation' → logprob: -10.979135513305664

Token 264: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33685407042503357
    2. 'rot' → logprob: -1.586854100227356
    3. 'def' → logprob: -3.5868539810180664
    4. '#' (adapté à ' #') → logprob: -4.086853981018066
    5. '    
' → logprob: -4.461853981018066
    6. ' rotations' → logprob: -4.461853981018066
    7. '
' → logprob: -5.586853981018066
    8. 'best' → logprob: -6.336853981018066
    9. 'orient' → logprob: -6.586853981018066
    10. 'all' → logprob: -7.086853981018066

Token 265: ' Rotation' (ID: 98033)
  Prédit: 'rot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.10559925436973572
    2. 'def' → logprob: -2.9805991649627686
    3. '#' → logprob: -3.4805991649627686
    4. 'orient' → logprob: -4.730599403381348
    5. 'import' → logprob: -5.480599403381348
    6. ' rotations' → logprob: -6.105599403381348
    7. '   ' → logprob: -7.605599403381348
    8. 'rotation' → logprob: -7.605599403381348
    9. 'rotate' → logprob: -7.855599403381348
    10. ' rotated' → logprob: -8.355599403381348

Token 266: ' functions' (ID: 9964)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6069084405899048
    2. '_angles' → logprob: -1.1069084405899048
    3. 'angles' → logprob: -2.6069083213806152
    4. 'def' → logprob: -3.2319083213806152
    5. '_vectors' → logprob: -5.356908321380615
    6. '_m' → logprob: -6.731908321380615
    7. 'ations' → logprob: -6.981908321380615
    8. '_angle' → logprob: -7.481908321380615
    9. ' =' → logprob: -7.606908321380615
    10. '_transform' → logprob: -8.231908798217773

Token 267: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8522675633430481
    2. 'def' → logprob: -0.8522675633430481
    3. '
' → logprob: -2.1022675037384033
    4. '    
' → logprob: -3.8522675037384033
    5. ' def' → logprob: -6.477267742156982
    6. '  
' → logprob: -7.102267742156982
    7. ' 
' → logprob: -7.727267742156982
    8. '   
' → logprob: -8.102267265319824
    9. ':' → logprob: -8.852267265319824
    10. '[
' → logprob: -9.477267265319824

Token 268: 'rotate' (ID: 31296)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4920295476913452
    2. 'lambda' → logprob: -1.8670295476913452
    3. ' lambda' → logprob: -3.1170296669006348
    4. '   ' → logprob: -3.3670296669006348
    5. ' def' → logprob: -3.3670296669006348
    6. 'dx' → logprob: -3.6170296669006348
    7. '[
' → logprob: -3.8670296669006348
    8. '[(' → logprob: -3.8670296669006348
    9. '(dx' → logprob: -4.617029666900635
    10. 'v' → logprob: -4.867029666900635

Token 269: ' vectors' (ID: 52254)
  Prédit: '90'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -0.48567190766334534
    2. ' vectors' → logprob: -1.485671877861023
    3. '_vectors' → logprob: -3.1106719970703125
    4. ' by' → logprob: -3.2356719970703125
    5. '_' → logprob: -3.6106719970703125
    6. ' ' → logprob: -4.1106719970703125
    7. 'vectors' → logprob: -4.4856719970703125
    8. '_v' → logprob: -5.4856719970703125
    9. '(v' → logprob: -6.2356719970703125
    10. ')' → logprob: -6.3606719970703125

Token 270: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.6109519600868225
    2. '90' → logprob: -1.7359519004821777
    3. '(v' → logprob: -1.8609519004821777
    4. 'by' → logprob: -2.7359519004821777
    5. ')' → logprob: -3.7359519004821777
    6. '[v' → logprob: -4.860951900482178
    7. 'def' → logprob: -5.360951900482178
    8. '   ' → logprob: -5.360951900482178
    9. '):' → logprob: -5.485951900482178
    10. ' ' → logprob: -6.610951900482178

Token 271: ' ' (ID: 220)
  Prédit: '90'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -0.04454388841986656
    2. ' ' → logprob: -3.294543981552124
    3. ' (' → logprob: -6.419543743133545
    4. ')' → logprob: -6.544543743133545
    5. '(x' → logprob: -7.419543743133545
    6. '(' → logprob: -7.419543743133545
    7. '(lambda' → logprob: -7.419543743133545
    8. '(dx' → logprob: -7.794543743133545
    9. 'def' → logprob: -7.919543743133545
    10. ' lambda' → logprob: -8.419544219970703

Token 272: '90' (ID: 2744)
  Prédit: '90'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -0.0015074820257723331
    2. ' ' → logprob: -7.12650728225708
    3. 'def' → logprob: -8.001507759094238
    4. '(' → logprob: -8.876507759094238
    5. '(lambda' → logprob: -9.501507759094238
    6. '-' → logprob: -10.251507759094238
    7. '(x' → logprob: -10.376507759094238
    8. ' (' → logprob: -10.751507759094238
    9. ')' → logprob: -11.001507759094238
    10. ' def' → logprob: -11.376507759094238

Token 273: '°,' (ID: 148177)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1532355546951294
    2. ' degrees' → logprob: -1.4032355546951294
    3. 'degrees' → logprob: -1.6532355546951294
    4. 'deg' → logprob: -3.15323543548584
    5. '_degree' → logprob: -3.27823543548584
    6. '°' → logprob: -3.27823543548584
    7. '_de' → logprob: -3.90323543548584
    8. ',' → logprob: -3.90323543548584
    9. '_deg' → logprob: -4.02823543548584
    10. ' ' → logprob: -4.40323543548584

Token 274: ' ' (ID: 220)
  Prédit: '180'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '180' → logprob: -0.05986984446644783
    2. ' ' → logprob: -3.3098697662353516
    3. ')' → logprob: -5.059869766235352
    4. 'def' → logprob: -5.184869766235352
    5. ' def' → logprob: -5.309869766235352
    6. '-' → logprob: -6.684869766235352
    7. '0' → logprob: -6.684869766235352
    8. '90' → logprob: -7.309869766235352
    9. ' -' → logprob: -7.684869766235352
    10. ' )' → logprob: -7.809869766235352

Token 275: '180' (ID: 7521)
  Prédit: '180'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '180' → logprob: -0.12148293107748032
    2. '-' → logprob: -2.6214828491210938
    3. ' ' → logprob: -3.4964828491210938
    4. 'def' → logprob: -5.496482849121094
    5. '90' → logprob: -5.621482849121094
    6. ' -' → logprob: -6.496482849121094
    7. ')' → logprob: -6.746482849121094
    8. ' def' → logprob: -7.746482849121094
    9. ' )' → logprob: -9.121482849121094
    10. 'clock' → logprob: -9.496482849121094

Token 276: '°,' (ID: 148177)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2836730182170868
    2. '°,' → logprob: -1.4086730480194092
    3. '°' → logprob: -6.65867280960083
    4. '),' → logprob: -6.78367280960083
    5. ' ,' → logprob: -9.908673286437988
    6. 'def' → logprob: -11.658673286437988
    7. ',),' → logprob: -11.783673286437988
    8. ')' → logprob: -11.783673286437988
    9. '‌,' → logprob: -12.158673286437988
    10. ',
' → logprob: -12.533673286437988

Token 277: ' ' (ID: 220)
  Prédit: '270'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '270' → logprob: -0.018342381343245506
    2. ' ' → logprob: -4.2683424949646
    3. ' and' → logprob: -6.1433424949646
    4. 'and' → logprob: -6.2683424949646
    5. '   ' → logprob: -9.768342018127441
    6. ')' → logprob: -11.018342018127441
    7. ' def' → logprob: -11.643342018127441
    8. '     ' → logprob: -11.768342018127441
    9. ',' → logprob: -12.018342018127441
    10. '  ' → logprob: -12.143342018127441

Token 278: '270' (ID: 17820)
  Prédit: '270'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '270' → logprob: -0.0003218766360078007
    2. ' ' → logprob: -8.750322341918945
    3. 'and' → logprob: -9.000322341918945
    4. ' and' → logprob: -10.250322341918945
    5. '240' → logprob: -13.500322341918945
    6. '90' → logprob: -13.750322341918945
    7. '-' → logprob: -14.375322341918945
    8. '#' → logprob: -14.750322341918945
    9. '```' → logprob: -15.125322341918945
    10. 'def' → logprob: -15.250322341918945

Token 279: '°' (ID: 6793)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6652252674102783
    2. '):
' → logprob: -1.0402252674102783
    3. ',' → logprob: -2.1652252674102783
    4. '):

' → logprob: -5.290225028991699
    5. '°' → logprob: -5.415225028991699
    6. ')' → logprob: -5.415225028991699
    7. ' ):' → logprob: -6.665225028991699
    8. ')
' → logprob: -7.290225028991699
    9. ' ):
' → logprob: -7.415225028991699
    10. '°,' → logprob: -7.915225028991699

Token 280: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8893517255783081
    2. '):' → logprob: -1.139351725578308
    3. ')
' → logprob: -2.0143518447875977
    4. ',' → logprob: -2.7643518447875977
    5. ')' → logprob: -3.1393518447875977
    6. 'def' → logprob: -4.014351844787598
    7. '   ' → logprob: -5.514351844787598
    8. '):

' → logprob: -5.764351844787598
    9. ' and' → logprob: -6.889351844787598
    10. ')

' → logprob: -7.639351844787598

Token 281: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25846484303474426
    2. '
' → logprob: -2.133464813232422
    3. '   ' → logprob: -2.258464813232422
    4. ' def' → logprob: -6.008464813232422
    5. '    
' → logprob: -6.633464813232422
    6. '  
' → logprob: -8.383464813232422
    7. '```' → logprob: -8.758464813232422
    8. '_def' → logprob: -9.258464813232422
    9. ' 
' → logprob: -9.258464813232422
    10. '_' → logprob: -9.383464813232422

Token 282: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.8868668079376221
    2. '   ' → logprob: -1.011866807937622
    3. '
' → logprob: -1.886866807937622
    4. ' def' → logprob: -3.136866807937622
    5. '    
' → logprob: -3.636866807937622
    6. ' 
' → logprob: -6.761866569519043
    7. ' rotations' → logprob: -7.011866569519043
    8. '    ' → logprob: -8.511866569519043
    9. '     
' → logprob: -9.011866569519043
    10. '  
' → logprob: -9.136866569519043

Token 283: ' rotate' (ID: 31987)
  Prédit: ' rotate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rotate' → logprob: -0.5760025978088379
    2. 'rotate' → logprob: -0.8260025978088379
    3. 'rot' → logprob: -9.82600212097168
    4. ' rot' → logprob: -11.70100212097168
    5. '_rotate' → logprob: -15.07600212097168
    6. '.rotate' → logprob: -15.57600212097168
    7. 'def' → logprob: -15.70100212097168
    8. 'Rotate' → logprob: -16.45100212097168
    9. 'r' → logprob: -16.70100212097168
    10. '
' → logprob: -17.20100212097168

Token 284: '_' (ID: 62)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.6054010391235352
    2. '_' → logprob: -1.4804010391235352
    3. '90' → logprob: -1.8554010391235352
    4. '_vector' → logprob: -3.105401039123535
    5. '_vectors' → logprob: -4.355401039123535
    6. '(dx' → logprob: -5.980401039123535
    7. 'vectors' → logprob: -6.105401039123535
    8. '(vector' → logprob: -6.355401039123535
    9. 'vector' → logprob: -6.730401039123535
    10. ' vectors' → logprob: -6.855401039123535

Token 285: '90' (ID: 2744)
  Prédit: 'vectors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vectors' → logprob: -0.3381640315055847
    2. 'vector' → logprob: -1.3381640911102295
    3. '90' → logprob: -3.8381640911102295
    4. 'v' → logprob: -6.33816385269165
    5. 'dx' → logprob: -8.463164329528809
    6. 'vec' → logprob: -8.588164329528809
    7. '(v' → logprob: -8.588164329528809
    8. '(dx' → logprob: -8.838164329528809
    9. '_vectors' → logprob: -8.963164329528809
    10. 'vect' → logprob: -9.088164329528809

Token 286: '(v' (ID: 6932)
  Prédit: '(dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dx' → logprob: -0.2527834475040436
    2. '(v' → logprob: -1.5027834177017212
    3. '(x' → logprob: -8.00278377532959
    4. '(vector' → logprob: -8.12778377532959
    5. '(vec' → logprob: -9.12778377532959
    6. '((' → logprob: -10.50278377532959
    7. '(' → logprob: -10.75278377532959
    8. ' (' → logprob: -11.00278377532959
    9. '(d' → logprob: -11.00278377532959
    10. '   ' → logprob: -12.00278377532959

Token 287: 's' (ID: 82)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6756740212440491
    2. 'ectors' → logprob: -0.9256740212440491
    3. 'ector' → logprob: -2.5506739616394043
    4. 'ec' → logprob: -5.175673961639404
    5. '):
' → logprob: -5.425673961639404
    6. 'ect' → logprob: -6.050673961639404
    7. 'ecs' → logprob: -6.925673961639404
    8. ')' → logprob: -7.550673961639404
    9. '(x' → logprob: -7.800673961639404
    10. 'ects' → logprob: -8.050674438476562

Token 288: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2019283026456833
    2. '):' → logprob: -1.7019282579421997
    3. '):
' → logprob: -7.70192813873291
    4. '   ' → logprob: -10.32692813873291
    5. '       ' → logprob: -12.07692813873291
    6. ')' → logprob: -12.07692813873291
    7. ':' → logprob: -12.07692813873291
    8. '):

' → logprob: -12.57692813873291
    9. ',' → logprob: -13.07692813873291
    10. 'v' → logprob: -13.32692813873291

Token 289: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17516198754310608
    2. '[(' → logprob: -1.9251619577407837
    3. '[' → logprob: -4.925161838531494
    4. 'return' → logprob: -6.050161838531494
    5. '[
' → logprob: -6.425161838531494
    6. '       ' → logprob: -6.675161838531494
    7. ' [(' → logprob: -6.800161838531494
    8. ' return' → logprob: -6.925161838531494
    9. '[]' → logprob: -9.800162315368652
    10. '[((' → logprob: -10.300162315368652

Token 290: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.23801879584789276
    2. '   ' → logprob: -2.363018751144409
    3. '[(' → logprob: -2.363018751144409
    4. '[' → logprob: -4.238018989562988
    5. ' return' → logprob: -4.738018989562988
    6. '[((' → logprob: -8.863018989562988
    7. '[-' → logprob: -9.738018989562988
    8. '       ' → logprob: -10.488018989562988
    9. ' [(' → logprob: -10.488018989562988
    10. '	return' → logprob: -10.613018989562988

Token 291: ' (' (ID: 350)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.02296556532382965
    2. ' return' → logprob: -4.147965431213379
    3. '[' → logprob: -5.897965431213379
    4. '[(' → logprob: -5.897965431213379
    5. '   ' → logprob: -7.022965431213379
    6. 'def' → logprob: -7.897965431213379
    7. '[-' → logprob: -8.897965431213379
    8. ' [' → logprob: -12.522965431213379
    9. 'rot' → logprob: -12.647965431213379
    10. '	return' → logprob: -12.897965431213379

Token 292: 'x' (ID: 87)
  Prédit: '-d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-d' → logprob: -0.10432826727628708
    2. ' -' → logprob: -3.354328155517578
    3. 'dx' → logprob: -3.479328155517578
    4. '-v' → logprob: -4.479328155517578
    5. '-' → logprob: -4.729328155517578
    6. 'x' → logprob: -5.104328155517578
    7. '-x' → logprob: -5.229328155517578
    8. 'vx' → logprob: -7.854328155517578
    9. ' dx' → logprob: -8.104328155517578
    10. 'dy' → logprob: -8.604328155517578

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001960512949153781
    2. ',y' → logprob: -6.251960277557373
    3. 'y' → logprob: -11.001960754394531
    4. ' ,' → logprob: -11.626960754394531
    5. ',d' → logprob: -13.501960754394531
    6. ',
' → logprob: -13.751960754394531
    7. 'for' → logprob: -13.876960754394531
    8. ',v' → logprob: -14.251960754394531
    9. ')' → logprob: -15.126960754394531
    10. '_,' → logprob: -15.376960754394531

Token 294: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.018151583150029182
    2. ' y' → logprob: -4.018151760101318
    3. ',' → logprob: -14.51815128326416
    4. ',y' → logprob: -14.76815128326416
    5. '   ' → logprob: -15.01815128326416
    6. ' ' → logprob: -15.64315128326416
    7. '	y' → logprob: -16.018152236938477
    8. '  ' → logprob: -16.143152236938477
    9. '    ' → logprob: -16.893152236938477
    10. '-' → logprob: -17.893152236938477

Token 295: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035742921754717827
    2. ')=' → logprob: -5.878574371337891
    3. '=' → logprob: -8.50357437133789
    4. ' =' → logprob: -8.62857437133789
    5. '):' → logprob: -8.87857437133789
    6. ' )' → logprob: -10.00357437133789
    7. 'for' → logprob: -10.25357437133789
    8. '):
' → logprob: -10.62857437133789
    9. '   ' → logprob: -10.62857437133789
    10. ')=>' → logprob: -10.75357437133789

Token 296: ' ->' (ID: 2747)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1421358734369278
    2. ' =' → logprob: -2.1421358585357666
    3. ')' → logprob: -4.392136096954346
    4. ')=' → logprob: -6.267136096954346
    5. 'def' → logprob: -8.517135620117188
    6. '=
' → logprob: -9.392135620117188
    7. '   ' → logprob: -9.517135620117188
    8. '=(-' → logprob: -9.892135620117188
    9. ')->' → logprob: -10.017135620117188
    10. '=-' → logprob: -10.142135620117188

Token 297: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.028950240463018417
    2. '-y' → logprob: -4.278950214385986
    3. ' -' → logprob: -5.153950214385986
    4. '-' → logprob: -5.153950214385986
    5. ' (-' → logprob: -6.153950214385986
    6. '-d' → logprob: -7.403950214385986
    7. '-x' → logprob: -9.028950691223145
    8. '   ' → logprob: -9.403950691223145
    9. '[-' → logprob: -10.278950691223145
    10. '-v' → logprob: -10.403950691223145

Token 298: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0002492999192327261
    2. ' y' → logprob: -8.375248908996582
    3. 'yv' → logprob: -11.125248908996582
    4. 'dy' → logprob: -13.375248908996582
    5. '	y' → logprob: -14.375248908996582
    6. '   ' → logprob: -14.750248908996582
    7. 'v' → logprob: -14.750248908996582
    8. 'vy' → logprob: -14.750248908996582
    9. '```' → logprob: -15.000248908996582
    10. ')y' → logprob: -16.7502498626709

Token 299: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005115681560710073
    2. ' ,' → logprob: -8.125511169433594
    3. ',y' → logprob: -8.625511169433594
    4. ',x' → logprob: -10.500511169433594
    5. '[' → logprob: -12.625511169433594
    6. ')' → logprob: -13.625511169433594
    7. '),' → logprob: -14.000511169433594
    8. ',v' → logprob: -14.125511169433594
    9. 'x' → logprob: -14.500511169433594
    10. 'y' → logprob: -15.000511169433594

Token 300: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011048882268369198
    2. ' x' → logprob: -4.511048793792725
    3. 'dx' → logprob: -14.636049270629883
    4. '(x' → logprob: -15.011049270629883
    5. ',x' → logprob: -16.261049270629883
    6. '	x' → logprob: -16.761049270629883
    7. ' ' → logprob: -17.011049270629883
    8. ')x' → logprob: -17.011049270629883
    9. ')' → logprob: -17.136049270629883
    10. ' dx' → logprob: -17.761049270629883

Token 301: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8921695047756657e-05
    2. ')
' → logprob: -10.625028610229492
    3. ' )' → logprob: -12.750028610229492
    4. '   ' → logprob: -15.250028610229492
    5. ')
' → logprob: -15.375028610229492
    6. ')`' → logprob: -15.375028610229492
    7. '),' → logprob: -15.500028610229492
    8. '))' → logprob: -15.625028610229492
    9. ')\' → logprob: -15.625028610229492
    10. ')}' → logprob: -16.125028610229492

Token 302: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07955298572778702
    2. ')' → logprob: -3.5795528888702393
    3. '
' → logprob: -3.9545528888702393
    4. '       ' → logprob: -4.704553127288818
    5. '    
' → logprob: -5.079553127288818
    6. '\n' → logprob: -6.079553127288818
    7. '  
' → logprob: -6.204553127288818
    8. '):
' → logprob: -6.454553127288818
    9. ')
' → logprob: -6.579553127288818
    10. '[]' → logprob: -6.829553127288818

Token 303: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7006271481513977
    2. '[(' → logprob: -1.325627088546753
    3. ' return' → logprob: -2.200627088546753
    4. '   ' → logprob: -2.450627088546753
    5. '[
' → logprob: -4.325627326965332
    6. '[' → logprob: -4.450627326965332
    7. ' [(' → logprob: -4.575627326965332
    8. '       ' → logprob: -5.825627326965332
    9. 'result' → logprob: -7.200627326965332
    10. '[v' → logprob: -7.325627326965332

Token 304: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0017312256386503577
    2. ' [' → logprob: -6.7517313957214355
    3. '[(' → logprob: -7.5017313957214355
    4. '[((' → logprob: -11.876730918884277
    5. '   ' → logprob: -13.876730918884277
    6. '[-' → logprob: -14.376730918884277
    7. ' ' → logprob: -15.751730918884277
    8. ' [(' → logprob: -16.251731872558594
    9. '[v' → logprob: -17.876731872558594
    10. '[n' → logprob: -18.501731872558594

Token 305: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -2.935296834039036e-06
    2. ' (-' → logprob: -13.12500286102295
    3. '   ' → logprob: -14.75000286102295
    4. '(' → logprob: -15.12500286102295
    5. '((-' → logprob: -15.62500286102295
    6. '[-' → logprob: -17.750003814697266
    7. '-' → logprob: -18.125003814697266
    8. '  ' → logprob: -18.500003814697266
    9. ' ' → logprob: -19.000003814697266
    10. '-d' → logprob: -19.625003814697266

Token 306: 'dy' (ID: 7593)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4740896224975586
    2. 'dy' → logprob: -0.9740896224975586
    3. ' y' → logprob: -12.349089622497559
    4. ' dy' → logprob: -12.474089622497559
    5. 'v' → logprob: -12.724089622497559
    6. 'vy' → logprob: -14.224089622497559
    7. 'yv' → logprob: -15.099089622497559
    8. '   ' → logprob: -15.224089622497559
    9. '(y' → logprob: -16.224090576171875
    10. '```' → logprob: -17.224090576171875

Token 307: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001408686046488583
    2. ' ,' → logprob: -6.626408576965332
    3. ',y' → logprob: -9.751408576965332
    4. '[' → logprob: -12.126408576965332
    5. 'y' → logprob: -12.126408576965332
    6. ',d' → logprob: -12.376408576965332
    7. ',
' → logprob: -12.751408576965332
    8. ')' → logprob: -13.376408576965332
    9. ',x' → logprob: -14.001408576965332
    10. '),' → logprob: -14.126408576965332

Token 308: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.014164102263748646
    2. ' dx' → logprob: -4.264163970947266
    3. '_dx' → logprob: -15.264163970947266
    4. '(dx' → logprob: -15.514163970947266
    5. ')' → logprob: -16.889163970947266
    6. ' ' → logprob: -17.264163970947266
    7. 'x' → logprob: -17.514163970947266
    8. 'tx' → logprob: -18.514163970947266
    9. '.dx' → logprob: -18.639163970947266
    10. 'd' → logprob: -18.889163970947266

Token 309: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5213274309644476e-05
    2. ' )' → logprob: -11.125015258789062
    3. ')
' → logprob: -15.625015258789062
    4. 'for' → logprob: -16.125015258789062
    5. '   ' → logprob: -16.875015258789062
    6. 'dx' → logprob: -17.000015258789062
    7. ' for' → logprob: -17.375015258789062
    8. 'x' → logprob: -17.500015258789062
    9. 't' → logprob: -18.250015258789062
    10. ')]' → logprob: -18.375015258789062

Token 310: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1269964575767517
    2. 'for' → logprob: -2.1269965171813965
    3. '       ' → logprob: -10.376996040344238
    4. '   ' → logprob: -11.751996040344238
    5. ' ' → logprob: -11.876996040344238
    6. '    ' → logprob: -12.251996040344238
    7. ')' → logprob: -12.376996040344238
    8. '        ' → logprob: -12.376996040344238
    9. '	for' → logprob: -12.376996040344238
    10. '           ' → logprob: -13.501996040344238

Token 311: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.7040324807167053
    2. '(dx' → logprob: -1.0790324211120605
    3. 'vs' → logprob: -1.9540324211120605
    4. '(v' → logprob: -4.5790324211120605
    5. '[(' → logprob: -5.3290324211120605
    6. '(lambda' → logprob: -6.7040324211120605
    7. 'lambda' → logprob: -6.8290324211120605
    8. '(x' → logprob: -6.9540324211120605
    9. '((' → logprob: -7.0790324211120605
    10. ' (' → logprob: -7.0790324211120605

Token 312: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.988221684878226e-06
    2. ' ,' → logprob: -12.125006675720215
    3. ',d' → logprob: -13.875006675720215
    4. ',y' → logprob: -14.625006675720215
    5. 'dy' → logprob: -16.50000762939453
    6. ',
' → logprob: -17.75000762939453
    7. '‌,' → logprob: -18.62500762939453
    8. ' dy' → logprob: -19.62500762939453
    9. 'y' → logprob: -19.75000762939453
    10. ',_' → logprob: -19.75000762939453

Token 313: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.029910624027252197
    2. ' dy' → logprob: -3.5299105644226074
    3. 'vs' → logprob: -8.904911041259766
    4. 'vectors' → logprob: -11.279911041259766
    5. 'v' → logprob: -12.279911041259766
    6. 'vy' → logprob: -12.404911041259766
    7. '(v' → logprob: -13.904911041259766
    8. ' vectors' → logprob: -14.154911041259766
    9. '(' → logprob: -15.279911041259766
    10. ' vs' → logprob: -15.404911041259766

Token 314: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06994843482971191
    2. 'in' → logprob: -2.694948434829712
    3. ')' → logprob: -11.694948196411133
    4. ']' → logprob: -13.569948196411133
    5. 's' → logprob: -14.319948196411133
    6. ' ' → logprob: -14.444948196411133
    7. '	in' → logprob: -15.194948196411133
    8. '<|end|>' → logprob: -15.444948196411133
    9. 'v' → logprob: -15.569948196411133
    10. ' )' → logprob: -15.694948196411133

Token 315: ' vs' (ID: 10217)
  Prédit: 'vs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vs' → logprob: -0.0004889304982498288
    2. ' vs' → logprob: -7.625488758087158
    3. 'vectors' → logprob: -14.250489234924316
    4. ')' → logprob: -16.50048828125
    5. 'v' → logprob: -16.62548828125
    6. ']' → logprob: -17.75048828125
    7. '_vs' → logprob: -18.00048828125
    8. ' ' → logprob: -18.37548828125
    9. ' vectors' → logprob: -18.50048828125
    10. 'vsp' → logprob: -19.00048828125

Token 316: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.457669562427327e-05
    2. ' ]' → logprob: -9.75007438659668
    3. '       ' → logprob: -11.62507438659668
    4. '   ' → logprob: -12.25007438659668
    5. ']
' → logprob: -13.25007438659668
    6. ')]' → logprob: -15.37507438659668
    7. ']

' → logprob: -15.75007438659668
    8. ')' → logprob: -16.62507438659668
    9. '()]' → logprob: -16.62507438659668
    10. '    ' → logprob: -17.50007438659668

Token 317: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0978740453720093
    2. ')' → logprob: -1.5978740453720093
    3. '   ' → logprob: -1.5978740453720093
    4. '<|end|>' → logprob: -1.9728740453720093
    5. '
' → logprob: -2.597874164581299
    6. '    
' → logprob: -3.722874164581299
    7. '  
' → logprob: -4.472874164581299
    8. '[' → logprob: -6.222874164581299
    9. ',' → logprob: -6.222874164581299
    10. '<|end|>' → logprob: -6.472874164581299

Token 318: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.11029322445392609
    2. '
' → logprob: -2.48529314994812
    3. '   ' → logprob: -3.98529314994812
    4. ' def' → logprob: -6.610293388366699
    5. '    
' → logprob: -7.110293388366699
    6. '

' → logprob: -8.7352933883667
    7. '  
' → logprob: -9.9852933883667
    8. '```' → logprob: -10.1102933883667
    9. ' ' → logprob: -10.3602933883667
    10. ')' → logprob: -10.3602933883667

Token 319: ' rotate' (ID: 31987)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.28126364946365356
    2. ' rotate' → logprob: -1.4062635898590088
    3. '.rotate' → logprob: -10.28126335144043
    4. ' ' → logprob: -10.65626335144043
    5. '_rotate' → logprob: -11.15626335144043
    6. 'def' → logprob: -11.28126335144043
    7. '```' → logprob: -12.40626335144043
    8. 'rot' → logprob: -12.53126335144043
    9. '   ' → logprob: -12.78126335144043
    10. 'otate' → logprob: -13.15626335144043

Token 320: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.007607816252857447
    2. '180' → logprob: -4.882607936859131
    3. '90' → logprob: -14.132607460021973
    4. '```' → logprob: -15.132607460021973
    5. '_points' → logprob: -15.507607460021973
    6. '_v' → logprob: -16.00760841369629
    7. '__' → logprob: -16.75760841369629
    8. 'v' → logprob: -16.88260841369629
    9. '_vectors' → logprob: -17.00760841369629
    10. 'def' → logprob: -17.13260841369629

Token 321: '180' (ID: 7521)
  Prédit: '180'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '180' → logprob: -1.9361264946837764e-07
    2. '18' → logprob: -17.25
    3. '```' → logprob: -17.875
    4. '1' → logprob: -18.375
    5. '_' → logprob: -18.375
    6. 'def' → logprob: -19.5
    7. 'one' → logprob: -20.0
    8. 'rotate' → logprob: -20.125
    9. 'angle' → logprob: -20.375
    10. '
' → logprob: -20.875

Token 322: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -7.107425062713446e-06
    2. ' (' → logprob: -11.875006675720215
    3. '(' → logprob: -15.875006675720215
    4. ':' → logprob: -18.50000762939453
    5. '(V' → logprob: -18.75000762939453
    6. '   ' → logprob: -19.12500762939453
    7. '(s' → logprob: -19.25000762939453
    8. ',' → logprob: -19.50000762939453
    9. ' ' → logprob: -19.75000762939453
    10. '```' → logprob: -20.25000762939453

Token 323: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004107846412807703
    2. 'ectors' → logprob: -6.12910795211792
    3. '(v' → logprob: -6.62910795211792
    4. 'S' → logprob: -8.254107475280762
    5. '[(' → logprob: -8.629107475280762
    6. '(s' → logprob: -9.629107475280762
    7. 'ector' → logprob: -11.004107475280762
    8. '(' → logprob: -11.004107475280762
    9. '[v' → logprob: -11.129107475280762
    10. 'vs' → logprob: -11.504107475280762

Token 324: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.048739634454250336
    2. '):' → logprob: -3.0487396717071533
    3. '):
' → logprob: -9.173739433288574
    4. '(v' → logprob: -10.798739433288574
    5. '):

' → logprob: -11.548739433288574
    6. ':' → logprob: -12.173739433288574
    7. '   ' → logprob: -12.173739433288574
    8. ' ):
' → logprob: -12.548739433288574
    9. ':
' → logprob: -13.298739433288574
    10. ')' → logprob: -13.298739433288574

Token 325: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37998059391975403
    2. '   ' → logprob: -1.6299805641174316
    3. '[' → logprob: -2.2549805641174316
    4. 'return' → logprob: -4.879980564117432
    5. '[(' → logprob: -5.254980564117432
    6. ' return' → logprob: -6.879980564117432
    7. '[-' → logprob: -7.129980564117432
    8. ' [' → logprob: -8.25498104095459
    9. '[
' → logprob: -9.00498104095459
    10. '     ' → logprob: -9.87998104095459

Token 326: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7866738438606262
    2. '   ' → logprob: -1.1616737842559814
    3. '[' → logprob: -2.6616737842559814
    4. '       ' → logprob: -2.7866737842559814
    5. ' return' → logprob: -2.9116737842559814
    6. '[(' → logprob: -3.6616737842559814
    7. '[-' → logprob: -4.1616740226745605
    8. ' [(' → logprob: -6.0366740226745605
    9. ' [' → logprob: -6.4116740226745605
    10. '[v' → logprob: -8.411673545837402

Token 327: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4999871850013733
    2. 'return' → logprob: -1.1249871253967285
    3. ' return' → logprob: -3.3749871253967285
    4. ' [' → logprob: -3.7499871253967285
    5. '[-' → logprob: -5.1249871253967285
    6. '[(' → logprob: -5.3749871253967285
    7. 'def' → logprob: -8.374987602233887
    8. '   ' → logprob: -8.874987602233887
    9. ' [(' → logprob: -10.124987602233887
    10. ' ' → logprob: -10.499987602233887

Token 328: 'x' (ID: 87)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.7831597924232483
    2. '[-' → logprob: -1.5331597328186035
    3. '-d' → logprob: -1.7831597328186035
    4. '-' → logprob: -3.0331597328186035
    5. '(dx' → logprob: -3.5331597328186035
    6. '[' → logprob: -3.6581597328186035
    7. '(-' → logprob: -4.0331597328186035
    8. ' -' → logprob: -4.4081597328186035
    9. '[(' → logprob: -4.4081597328186035
    10. ' dx' → logprob: -4.9081597328186035

Token 329: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.1424973713001236e-05
    2. ' ,' → logprob: -11.125031471252441
    3. ',y' → logprob: -11.375031471252441
    4. ',d' → logprob: -13.125031471252441
    5. 'dx' → logprob: -14.625031471252441
    6. 'def' → logprob: -14.750031471252441
    7. '```' → logprob: -15.000031471252441
    8. 'dy' → logprob: -15.125031471252441
    9. 'for' → logprob: -15.375031471252441
    10. ',
' → logprob: -15.375031471252441

Token 330: ' y' (ID: 342)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.9679021835327148
    2. '-y' → logprob: -1.2179021835327148
    3. 'y' → logprob: -1.3429021835327148
    4. ' y' → logprob: -3.092902183532715
    5. '-d' → logprob: -4.967902183532715
    6. '-' → logprob: -5.592902183532715
    7. '-v' → logprob: -5.967902183532715
    8. ',' → logprob: -6.592902183532715
    9. ',y' → logprob: -6.592902183532715
    10. 'dy' → logprob: -6.717902183532715

Token 331: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007500501815229654
    2. ')->' → logprob: -5.507500648498535
    3. '):' → logprob: -6.632500648498535
    4. ' )' → logprob: -6.882500648498535
    5. ')=>' → logprob: -8.007500648498535
    6. '):
' → logprob: -8.882500648498535
    7. '       ' → logprob: -9.257500648498535
    8. '   ' → logprob: -9.257500648498535
    9. ')v' → logprob: -9.257500648498535
    10. ')=' → logprob: -9.632500648498535

Token 332: ' ->' (ID: 2747)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0437029600143433
    2. ' =' → logprob: -1.0437029600143433
    3. '       ' → logprob: -1.9187029600143433
    4. 'return' → logprob: -2.543703079223633
    5. ' return' → logprob: -3.668703079223633
    6. ':' → logprob: -4.168703079223633
    7. '   ' → logprob: -4.293703079223633
    8. ')' → logprob: -4.793703079223633
    9. ':return' → logprob: -5.918703079223633
    10. '=>' → logprob: -6.918703079223633

Token 333: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.004331964533776045
    2. '[' → logprob: -5.629332065582275
    3. '[-' → logprob: -7.754332065582275
    4. ' (-' → logprob: -8.129331588745117
    5. ' [' → logprob: -12.004331588745117
    6. '   ' → logprob: -14.129331588745117
    7. '((-' → logprob: -14.504331588745117
    8. '(dx' → logprob: -16.004331588745117
    9. '[(' → logprob: -16.004331588745117
    10. '(-(' → logprob: -16.504331588745117

Token 334: 'x' (ID: 87)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -1.6240566083070007e-06
    2. ' dx' → logprob: -13.875001907348633
    3. 'x' → logprob: -15.375001907348633
    4. '_dx' → logprob: -15.750001907348633
    5. '(dx' → logprob: -16.125001907348633
    6. 'vx' → logprob: -16.250001907348633
    7. '```' → logprob: -18.125001907348633
    8. 'Dx' → logprob: -19.375001907348633
    9. '   ' → logprob: -19.375001907348633
    10. ')' → logprob: -19.500001907348633

Token 335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002547832846175879
    2. ' ,' → logprob: -8.37525463104248
    3. ',v' → logprob: -11.00025463104248
    4. ',
' → logprob: -12.75025463104248
    5. ',y' → logprob: -13.87525463104248
    6. 'v' → logprob: -14.25025463104248
    7. 's' → logprob: -14.62525463104248
    8. ',-' → logprob: -15.00025463104248
    9. 'for' → logprob: -15.37525463104248
    10. ',d' → logprob: -15.50025463104248

Token 336: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.23089753091335297
    2. '-d' → logprob: -1.6058975458145142
    3. '-y' → logprob: -5.605897426605225
    4. '-' → logprob: -6.480897426605225
    5. ',' → logprob: -8.980897903442383
    6. ' ' → logprob: -10.980897903442383
    7. '-def' → logprob: -10.980897903442383
    8. '   ' → logprob: -11.105897903442383
    9. '-v' → logprob: -11.105897903442383
    10. '-ay' → logprob: -11.480897903442383

Token 337: 'y' (ID: 88)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.00020866614067927003
    2. 'dx' → logprob: -8.500208854675293
    3. ' dy' → logprob: -12.375208854675293
    4. 'y' → logprob: -13.875208854675293
    5. '```' → logprob: -18.750207901000977
    6. 'Dy' → logprob: -19.125207901000977
    7. 'vy' → logprob: -19.125207901000977
    8. '-d' → logprob: -19.375207901000977
    9. '.dy' → logprob: -19.625207901000977
    10. '   ' → logprob: -20.250207901000977

Token 338: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00308038666844368
    2. ')
' → logprob: -6.503080368041992
    3. '):
' → logprob: -7.378080368041992
    4. ')]' → logprob: -8.128080368041992
    5. '):' → logprob: -8.378080368041992
    6. ')v' → logprob: -8.628080368041992
    7. ' )' → logprob: -9.378080368041992
    8. '       ' → logprob: -9.503080368041992
    9. '   ' → logprob: -10.003080368041992
    10. ')]
' → logprob: -11.628080368041992

Token 339: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5077493190765381
    2. '   ' → logprob: -1.007749319076538
    3. ' return' → logprob: -4.132749557495117
    4. '[' → logprob: -5.007749557495117
    5. 'def' → logprob: -5.382749557495117
    6. 'return' → logprob: -5.632749557495117
    7. ')' → logprob: -7.632749557495117
    8. ' def' → logprob: -8.257749557495117
    9. '    ' → logprob: -8.507749557495117
    10. '[v' → logprob: -8.632749557495117

Token 340: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.26044508814811707
    2. ' return' → logprob: -2.0104451179504395
    3. '   ' → logprob: -2.5104451179504395
    4. '       ' → logprob: -4.2604451179504395
    5. '	return' → logprob: -12.010444641113281
    6. 'def' → logprob: -12.635444641113281
    7. ' ' → logprob: -13.385444641113281
    8. '    ' → logprob: -13.885444641113281
    9. '     ' → logprob: -14.510444641113281
    10. '  ' → logprob: -14.635444641113281

Token 341: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002096197713399306
    2. ' [' → logprob: -8.50020980834961
    3. '[(' → logprob: -12.37520980834961
    4. '[-' → logprob: -14.37520980834961
    5. '   ' → logprob: -14.62520980834961
    6. '[((' → logprob: -14.62520980834961
    7. ' ' → logprob: -16.87520980834961
    8. 'def' → logprob: -17.00020980834961
    9. '\[' → logprob: -17.12520980834961
    10. '[n' → logprob: -17.50020980834961

Token 342: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -1.0280383548888494e-06
    2. '((-' → logprob: -14.500000953674316
    3. '[' → logprob: -15.375000953674316
    4. ' (-' → logprob: -15.750000953674316
    5. '[-' → logprob: -16.750001907348633
    6. '(-(' → logprob: -17.500001907348633
    7. '   ' → logprob: -19.250001907348633
    8. '(' → logprob: -20.000001907348633
    9. ']' → logprob: -21.375001907348633
    10. '
' → logprob: -21.500001907348633

Token 343: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -4.008129963040119e-06
    2. ' dx' → logprob: -12.500003814697266
    3. '(dx' → logprob: -16.875003814697266
    4. '_dx' → logprob: -17.375003814697266
    5. '   ' → logprob: -17.625003814697266
    6. 'x' → logprob: -18.125003814697266
    7. ' ' → logprob: -18.500003814697266
    8. '
' → logprob: -19.500003814697266
    9. '  ' → logprob: -20.500003814697266
    10. '

' → logprob: -20.500003814697266

Token 344: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3902033970225602e-05
    2. ' ,' → logprob: -11.250014305114746
    3. ',-' → logprob: -14.500014305114746
    4. ',d' → logprob: -15.500014305114746
    5. ',
' → logprob: -16.62501335144043
    6. '),' → logprob: -18.00001335144043
    7. 's' → logprob: -18.37501335144043
    8. 'for' → logprob: -18.37501335144043
    9. ')' → logprob: -18.62501335144043
    10. ',y' → logprob: -19.00001335144043

Token 345: ' -' (ID: 533)
  Prédit: '-d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-d' → logprob: -0.01822591759264469
    2. ' -' → logprob: -4.018226146697998
    3. '-' → logprob: -9.64322566986084
    4. ' ' → logprob: -13.01822566986084
    5. '   ' → logprob: -13.14322566986084
    6. '(-' → logprob: -13.26822566986084
    7. '-D' → logprob: -14.51822566986084
    8. '-ay' → logprob: -14.51822566986084
    9. '-by' → logprob: -14.64322566986084
    10. '  ' → logprob: -14.64322566986084

Token 346: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -2.5776860184123507e-06
    2. ' dy' → logprob: -13.12500286102295
    3. 'dx' → logprob: -14.50000286102295
    4. ')' → logprob: -20.250001907348633
    5. '   ' → logprob: -20.750001907348633
    6. ' ' → logprob: -21.125001907348633
    7. '.dy' → logprob: -21.250001907348633
    8. 'y' → logprob: -21.375001907348633
    9. '```' → logprob: -21.500001907348633
    10. 'd' → logprob: -21.625001907348633

Token 347: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009526568464934826
    2. 'for' → logprob: -5.00952672958374
    3. ' for' → logprob: -5.88452672958374
    4. '   ' → logprob: -11.259526252746582
    5. ' )' → logprob: -11.634526252746582
    6. '       ' → logprob: -13.759526252746582
    7. '    ' → logprob: -14.259526252746582
    8. ' ' → logprob: -14.634526252746582
    9. '        ' → logprob: -14.884526252746582
    10. ',' → logprob: -15.634526252746582

Token 348: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02975395694375038
    2. 'for' → logprob: -3.5297539234161377
    3. ')' → logprob: -12.654753684997559
    4. '   ' → logprob: -15.779753684997559
    5. ' ' → logprob: -16.404754638671875
    6. '	for' → logprob: -16.529754638671875
    7. '    ' → logprob: -17.154754638671875
    8. '        ' → logprob: -18.529754638671875
    9. '       ' → logprob: -18.654754638671875
    10. '  ' → logprob: -19.529754638671875

Token 349: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.10049272328615189
    2. ' dx' → logprob: -2.3504927158355713
    3. 'vs' → logprob: -8.350492477416992
    4. '(dx' → logprob: -10.475492477416992
    5. ' vs' → logprob: -11.475492477416992
    6. 'v' → logprob: -12.225492477416992
    7. 'vx' → logprob: -13.225492477416992
    8. '_dx' → logprob: -13.600492477416992
    9. ',' → logprob: -13.725492477416992
    10. ' vx' → logprob: -14.225492477416992

Token 350: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.869639476761222e-05
    2. ' ,' → logprob: -10.875039100646973
    3. ',v' → logprob: -11.375039100646973
    4. ',d' → logprob: -12.000039100646973
    5. 'in' → logprob: -14.000039100646973
    6. ' in' → logprob: -14.125039100646973
    7. 'for' → logprob: -16.000038146972656
    8. 'dx' → logprob: -16.375038146972656
    9. ',y' → logprob: -16.750038146972656
    10. 'v' → logprob: -16.875038146972656

Token 351: ' dy' (ID: 11996)
  Prédit: 'vs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vs' → logprob: -0.0006426189211197197
    2. 'dy' → logprob: -7.875642776489258
    3. 'vectors' → logprob: -9.125642776489258
    4. ' vs' → logprob: -9.625642776489258
    5. 'dx' → logprob: -9.750642776489258
    6. '(v' → logprob: -11.000642776489258
    7. 'v' → logprob: -11.875642776489258
    8. '(dx' → logprob: -13.375642776489258
    9. 'vy' → logprob: -13.875642776489258
    10. ' dy' → logprob: -14.000642776489258

Token 352: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0067167943343520164
    2. 'in' → logprob: -5.006716728210449
    3. ')' → logprob: -14.38171672821045
    4. ']' → logprob: -14.88171672821045
    5. 's' → logprob: -16.006717681884766
    6. ' ' → logprob: -16.131717681884766
    7. 'v' → logprob: -16.381717681884766
    8. '	in' → logprob: -16.631717681884766
    9. 'import' → logprob: -17.006717681884766
    10. 'ins' → logprob: -17.819217681884766

Token 353: ' vs' (ID: 10217)
  Prédit: 'vs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vs' → logprob: -0.01816749945282936
    2. ' vs' → logprob: -4.018167495727539
    3. 'vectors' → logprob: -11.268167495727539
    4. ' vectors' → logprob: -12.768167495727539
    5. 'v' → logprob: -13.893167495727539
    6. ')' → logprob: -15.018167495727539
    7. '_vs' → logprob: -15.268167495727539
    8. ' versus' → logprob: -15.643167495727539
    9. 'vsp' → logprob: -16.01816749572754
    10. 'Vs' → logprob: -16.51816749572754

Token 354: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003716938430443406
    2. '   ' → logprob: -5.628716945648193
    3. ' ]' → logprob: -9.878716468811035
    4. ')]' → logprob: -10.503716468811035
    5. ']
' → logprob: -10.628716468811035
    6. ')' → logprob: -11.753716468811035
    7. '       ' → logprob: -12.628716468811035
    8. 'def' → logprob: -13.128716468811035
    9. '()]' → logprob: -15.128716468811035
    10. ']

' → logprob: -15.878716468811035

Token 355: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016646068543195724
    2. '   ' → logprob: -4.266645908355713
    3. ' def' → logprob: -6.016645908355713
    4. '
' → logprob: -11.141646385192871
    5. '	def' → logprob: -11.141646385192871
    6. '    
' → logprob: -12.266646385192871
    7. ' ' → logprob: -12.891646385192871
    8. '```' → logprob: -13.016646385192871
    9. '  ' → logprob: -13.266646385192871
    10. '  
' → logprob: -14.891646385192871

Token 356: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.004400921054184437
    2. '   ' → logprob: -6.004400730133057
    3. ' def' → logprob: -6.254400730133057
    4. '	def' → logprob: -14.129401206970215
    5. ' ' → logprob: -14.754401206970215
    6. '  ' → logprob: -16.0044002532959
    7. '    
' → logprob: -16.3794002532959
    8. '
' → logprob: -16.5044002532959
    9. '```' → logprob: -17.5044002532959
    10. '_def' → logprob: -19.3794002532959

Token 357: ' rotate' (ID: 31987)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.2519393861293793
    2. ' rotate' → logprob: -1.5019394159317017
    3. '   ' → logprob: -12.50193977355957
    4. '.rotate' → logprob: -13.00193977355957
    5. ' ' → logprob: -13.37693977355957
    6. 'def' → logprob: -13.50193977355957
    7. '_rotate' → logprob: -14.75193977355957
    8. 'rot' → logprob: -15.75193977355957
    9. '```' → logprob: -16.12693977355957
    10. '  ' → logprob: -16.25193977355957

Token 358: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00014001218369230628
    2. '270' → logprob: -8.875140190124512
    3. '90' → logprob: -16.125139236450195
    4. '```' → logprob: -17.125139236450195
    5. 'def' → logprob: -19.375139236450195
    6. '-' → logprob: -19.375139236450195
    7. ' ' → logprob: -19.625139236450195
    8. '(' → logprob: -20.625139236450195
    9. '360' → logprob: -20.875139236450195
    10. '
' → logprob: -21.000139236450195

Token 359: '270' (ID: 17820)
  Prédit: '270'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '270' → logprob: -3.650518920039758e-06
    2. '90' → logprob: -12.625003814697266
    3. 'rotate' → logprob: -15.375003814697266
    4. '240' → logprob: -17.750003814697266
    5. '27' → logprob: -18.000003814697266
    6. '225' → logprob: -18.625003814697266
    7. '```' → logprob: -19.125003814697266
    8. '180' → logprob: -19.250003814697266
    9. '2' → logprob: -19.875003814697266
    10. '230' → logprob: -20.875003814697266

Token 360: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -6.635164754698053e-05
    2. ' (' → logprob: -9.625066757202148
    3. '   ' → logprob: -17.00006675720215
    4. '(' → logprob: -17.50006675720215
    5. ' ' → logprob: -18.25006675720215
    6. '```' → logprob: -18.25006675720215
    7. '_' → logprob: -18.62506675720215
    8. '(V' → logprob: -19.00006675720215
    9. '(s' → logprob: -19.50006675720215
    10. '[v' → logprob: -19.62506675720215

Token 361: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0021079096477478743
    2. '(v' → logprob: -6.627108097076416
    3. 'ectors' → logprob: -7.252108097076416
    4. 'S' → logprob: -9.877107620239258
    5. 'ector' → logprob: -11.627107620239258
    6. '(s' → logprob: -12.252107620239258
    7. 'sv' → logprob: -13.377107620239258
    8. 'ects' → logprob: -13.502107620239258
    9. 'vs' → logprob: -13.627107620239258
    10. 'ect' → logprob: -13.752107620239258

Token 362: '):
' (ID: 1883)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.038254350423812866
    2. '):
' → logprob: -3.4132542610168457
    3. '):' → logprob: -5.538254261016846
    4. '   ' → logprob: -8.163254737854004
    5. ')(' → logprob: -9.038254737854004
    6. ',' → logprob: -9.538254737854004
    7. '):

' → logprob: -9.913254737854004
    8. '):
' → logprob: -10.038254737854004
    9. ')' → logprob: -10.538254737854004
    10. 'vs' → logprob: -11.413254737854004

Token 363: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5896008014678955
    2. 'def' → logprob: -1.2146008014678955
    3. '(v' → logprob: -2.3396008014678955
    4. '[v' → logprob: -3.3396008014678955
    5. '[' → logprob: -4.839600563049316
    6. '       ' → logprob: -5.339600563049316
    7. ' def' → logprob: -6.589600563049316
    8. 'vs' → logprob: -6.589600563049316
    9. 'return' → logprob: -7.339600563049316
    10. '(lambda' → logprob: -8.464600563049316

Token 364: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4038529098033905
    2. 'return' → logprob: -1.153852939605713
    3. ' return' → logprob: -5.278852939605713
    4. '[v' → logprob: -5.528852939605713
    5. '[(' → logprob: -5.778852939605713
    6. '[' → logprob: -5.903852939605713
    7. '   ' → logprob: -6.403852939605713
    8. ' def' → logprob: -8.528852462768555
    9. 'rotate' → logprob: -10.278852462768555
    10. '
' → logprob: -11.028852462768555

Token 365: ' (' (ID: 350)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2698400914669037
    2. 'rotate' → logprob: -2.0198400020599365
    3. 'def' → logprob: -2.6448400020599365
    4. ' return' → logprob: -4.144840240478516
    5. '(' → logprob: -5.519840240478516
    6. '[' → logprob: -5.644840240478516
    7. ' (' → logprob: -6.144840240478516
    8. '(d' → logprob: -6.269840240478516
    9. '[(' → logprob: -6.519840240478516
    10. '(dx' → logprob: -6.519840240478516

Token 366: 'x' (ID: 87)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.6901370286941528
    2. 'dx' → logprob: -1.0651370286941528
    3. 'rotate' → logprob: -2.4401369094848633
    4. 'x' → logprob: -3.6901369094848633
    5. 'vs' → logprob: -4.065136909484863
    6. '90' → logprob: -5.315136909484863
    7. ' dx' → logprob: -5.565136909484863
    8. ' dy' → logprob: -5.940136909484863
    9. 'def' → logprob: -6.065136909484863
    10. 'lambda' → logprob: -6.065136909484863

Token 367: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002076386474072933
    2. 'dy' → logprob: -6.252076148986816
    3. 'vs' → logprob: -10.377076148986816
    4. 'dx' → logprob: -10.377076148986816
    5. '90' → logprob: -11.002076148986816
    6. ' ,' → logprob: -11.002076148986816
    7. 'y' → logprob: -11.377076148986816
    8. 'def' → logprob: -11.877076148986816
    9. '```' → logprob: -12.127076148986816
    10. 'v' → logprob: -12.127076148986816

Token 368: ' y' (ID: 342)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.03233913332223892
    2. ' dy' → logprob: -3.907339096069336
    3. 'dx' → logprob: -4.657339096069336
    4. ' dx' → logprob: -7.407339096069336
    5. 'vs' → logprob: -7.532339096069336
    6. 'y' → logprob: -7.782339096069336
    7. '[' → logprob: -9.282339096069336
    8. 'x' → logprob: -9.407339096069336
    9. '-' → logprob: -9.407339096069336
    10. ' ' → logprob: -9.532339096069336

Token 369: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.60414821645827e-06
    2. ')v' → logprob: -14.000004768371582
    3. ')->' → logprob: -14.125004768371582
    4. '):' → logprob: -14.250004768371582
    5. ' )' → logprob: -14.250004768371582
    6. ')[' → logprob: -14.500004768371582
    7. ')=' → logprob: -15.125004768371582
    8. ')=>' → logprob: -15.625004768371582
    9. ')
' → logprob: -15.875004768371582
    10. '   ' → logprob: -16.000003814697266

Token 370: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.048603273928165436
    2. ' ->' → logprob: -3.0486032962799072
    3. ')' → logprob: -12.048603057861328
    4. ')->' → logprob: -12.548603057861328
    5. '=>' → logprob: -12.548603057861328
    6. 'def' → logprob: -13.298603057861328
    7. '>' → logprob: -15.173603057861328
    8. '->[' → logprob: -15.298603057861328
    9. 'return' → logprob: -15.673603057861328
    10. ' ' → logprob: -15.798603057861328

Token 371: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0007531665614806116
    2. '(' → logprob: -7.625753402709961
    3. ' (' → logprob: -8.250753402709961
    4. 'dy' → logprob: -13.750753402709961
    5. '   ' → logprob: -14.125753402709961
    6. '(dx' → logprob: -14.375753402709961
    7. '[' → logprob: -15.375753402709961
    8. '```' → logprob: -15.375753402709961
    9. '[(' → logprob: -15.625753402709961
    10. ' ' → logprob: -16.00075340270996

Token 372: 'y' (ID: 88)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.31334415078163147
    2. 'dy' → logprob: -1.313344120979309
    3. ' dy' → logprob: -10.06334400177002
    4. ' (' → logprob: -10.56334400177002
    5. '(' → logprob: -11.43834400177002
    6. 'd' → logprob: -13.06334400177002
    7. '	d' → logprob: -14.56334400177002
    8. '```' → logprob: -15.68834400177002
    9. '.dy' → logprob: -15.68834400177002
    10. '   ' → logprob: -15.93834400177002

Token 373: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022535098833031952
    2. 'dx' → logprob: -9.000225067138672
    3. ' ,' → logprob: -9.875225067138672
    4. ',-' → logprob: -10.625225067138672
    5. ',d' → logprob: -11.375225067138672
    6. ')' → logprob: -12.750225067138672
    7. ',
' → logprob: -13.000225067138672
    8. '_dx' → logprob: -13.375225067138672
    9. 'for' → logprob: -13.625225067138672
    10. ' dx' → logprob: -13.750225067138672

Token 374: ' -' (ID: 533)
  Prédit: '-d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-d' → logprob: -0.23414850234985352
    2. ' -' → logprob: -1.6091485023498535
    3. '-' → logprob: -4.8591485023498535
    4. 'dx' → logprob: -8.359148025512695
    5. '(-' → logprob: -8.609148025512695
    6. ')' → logprob: -9.234148025512695
    7. '
' → logprob: -9.859148025512695
    8. '-x' → logprob: -9.859148025512695
    9. ' ' → logprob: -9.984148025512695
    10. '_dx' → logprob: -10.109148025512695

Token 375: 'x' (ID: 87)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -1.0802738870552275e-05
    2. ' dx' → logprob: -11.50001049041748
    3. '_dx' → logprob: -14.75001049041748
    4. '
' → logprob: -16.500011444091797
    5. '(dx' → logprob: -16.500011444091797
    6. '```' → logprob: -18.375011444091797
    7. '   ' → logprob: -18.375011444091797
    8. '

' → logprob: -19.000011444091797
    9. ')' → logprob: -19.375011444091797
    10. '-d' → logprob: -19.500011444091797

Token 376: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04314454644918442
    2. ')
' → logprob: -3.168144464492798
    3. ' )' → logprob: -10.418144226074219
    4. ')

' → logprob: -10.668144226074219
    5. ')[' → logprob: -10.668144226074219
    6. '   ' → logprob: -11.293144226074219
    7. ')
' → logprob: -11.668144226074219
    8. 'def' → logprob: -11.668144226074219
    9. ')v' → logprob: -11.918144226074219
    10. 'for' → logprob: -12.043144226074219

Token 377: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8380658626556396
    2. ' return' → logprob: -1.2130658626556396
    3. 'def' → logprob: -2.0880658626556396
    4. '       ' → logprob: -2.4630658626556396
    5. 'return' → logprob: -2.8380658626556396
    6. ' def' → logprob: -6.088066101074219
    7. '[' → logprob: -9.713066101074219
    8. '    ' → logprob: -9.713066101074219
    9. '     ' → logprob: -10.213066101074219
    10. '  ' → logprob: -10.588066101074219

Token 378: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011489496566355228
    2. ' return' → logprob: -4.511489391326904
    3. 'def' → logprob: -8.136489868164062
    4. '[' → logprob: -9.261489868164062
    5. '   ' → logprob: -10.261489868164062
    6. '[(' → logprob: -11.386489868164062
    7. '[v' → logprob: -12.136489868164062
    8. '```' → logprob: -14.761489868164062
    9. 'v' → logprob: -15.136489868164062
    10. ' def' → logprob: -15.511489868164062

Token 379: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0007251793285831809
    2. ' [(' → logprob: -7.250725269317627
    3. '[' → logprob: -11.375724792480469
    4. '([(' → logprob: -12.500724792480469
    5. ' ' → logprob: -17.00072479248047
    6. '[((' → logprob: -18.00072479248047
    7. '   ' → logprob: -19.62572479248047
    8. '[d' → logprob: -19.62572479248047
    9. 'rotate' → logprob: -20.00072479248047
    10. '[y' → logprob: -20.00072479248047

Token 380: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.0006339243846014142
    2. ' dy' → logprob: -7.375633716583252
    3. '(d' → logprob: -11.87563419342041
    4. '.dy' → logprob: -15.87563419342041
    5. ' ' → logprob: -16.250633239746094
    6. '   ' → logprob: -16.750633239746094
    7. '(' → logprob: -17.000633239746094
    8. ' (' → logprob: -17.250633239746094
    9. '-d' → logprob: -17.375633239746094
    10. 'd' → logprob: -17.500633239746094

Token 381: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001617035741219297
    2. ' ,' → logprob: -9.125162124633789
    3. ',-' → logprob: -9.875162124633789
    4. ',
' → logprob: -14.625162124633789
    5. ' ,-' → logprob: -15.125162124633789
    6. ',d' → logprob: -15.375162124633789
    7. 'dx' → logprob: -15.875162124633789
    8. '   ' → logprob: -16.87516212463379
    9. '[' → logprob: -17.50016212463379
    10. ' ' → logprob: -17.50016212463379

Token 382: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.45723670721054077
    2. '-d' → logprob: -1.0822367668151855
    3. '-' → logprob: -3.5822367668151855
    4. '-x' → logprob: -8.707236289978027
    5. '   ' → logprob: -10.082236289978027
    6. '(-' → logprob: -10.832236289978027
    7. '-D' → logprob: -11.207236289978027
    8. '-digit' → logprob: -11.707236289978027
    9. '  ' → logprob: -12.207236289978027
    10. ' ' → logprob: -12.332236289978027

Token 383: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -6.392202976712724e-06
    2. ' dx' → logprob: -12.000006675720215
    3. '_dx' → logprob: -16.7500057220459
    4. '(dx' → logprob: -17.5000057220459
    5. '.dx' → logprob: -19.7500057220459
    6. ')' → logprob: -19.8750057220459
    7. '   ' → logprob: -20.3750057220459
    8. '
' → logprob: -21.0000057220459
    9. ' ' → logprob: -21.1250057220459
    10. 'DX' → logprob: -21.7500057220459

Token 384: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011033779446734115
    2. ' )' → logprob: -9.125110626220703
    3. ')]' → logprob: -14.375110626220703
    4. ')
' → logprob: -15.125110626220703
    5. '   ' → logprob: -15.375110626220703
    6. 'for' → logprob: -15.750110626220703
    7. ']' → logprob: -17.125110626220703
    8. '       ' → logprob: -18.000110626220703
    9. '}' → logprob: -18.125110626220703
    10. '    ' → logprob: -18.250110626220703

Token 385: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0789070799946785
    2. 'for' → logprob: -2.578907012939453
    3. ')' → logprob: -11.078907012939453
    4. ' ' → logprob: -13.828907012939453
    5. '   ' → logprob: -14.578907012939453
    6. '	for' → logprob: -15.203907012939453
    7. ']' → logprob: -15.453907012939453
    8. '  ' → logprob: -18.078907012939453
    9. '    ' → logprob: -18.453907012939453
    10. '
' → logprob: -18.453907012939453

Token 386: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0052360063418745995
    2. ' dx' → logprob: -5.2552361488342285
    3. '(dx' → logprob: -13.13023567199707
    4. '_dx' → logprob: -16.50523567199707
    5. ' ' → logprob: -16.88023567199707
    6. 'vx' → logprob: -18.00523567199707
    7. 'DX' → logprob: -18.50523567199707
    8. '   ' → logprob: -18.75523567199707
    9. ' (' → logprob: -19.00523567199707
    10. '.dx' → logprob: -19.13023567199707

Token 387: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.947715832618997e-05
    2. ' ,' → logprob: -9.375089645385742
    3. ',d' → logprob: -12.375089645385742
    4. ',
' → logprob: -15.625089645385742
    5. ',y' → logprob: -16.750089645385742
    6. '‌,' → logprob: -17.375089645385742
    7. '<|end|>' → logprob: -17.875089645385742
    8. ' dy' → logprob: -18.000089645385742
    9. 'dy' → logprob: -18.750089645385742
    10. ',v' → logprob: -18.937589645385742

Token 388: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.062178414314985275
    2. 'vs' → logprob: -3.062178373336792
    3. ' dy' → logprob: -4.312178611755371
    4. 'v' → logprob: -10.437178611755371
    5. ' vs' → logprob: -10.562178611755371
    6. 'vy' → logprob: -10.937178611755371
    7. 'dx' → logprob: -11.437178611755371
    8. 'ds' → logprob: -12.062178611755371
    9. 'd' → logprob: -13.562178611755371
    10. 'ys' → logprob: -13.687178611755371

Token 389: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10021023452281952
    2. 'in' → logprob: -2.350210189819336
    3. 'vs' → logprob: -12.975210189819336
    4. ' vs' → logprob: -14.600210189819336
    5. ')' → logprob: -15.225210189819336
    6. 'import' → logprob: -15.725210189819336
    7. ' ' → logprob: -15.725210189819336
    8. ']' → logprob: -16.350210189819336
    9. 'v' → logprob: -16.475210189819336
    10. '	in' → logprob: -17.475210189819336

Token 390: ' vs' (ID: 10217)
  Prédit: 'vs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vs' → logprob: -0.011874194256961346
    2. ' vs' → logprob: -4.511874198913574
    3. 'vectors' → logprob: -7.261874198913574
    4. ' vectors' → logprob: -9.011874198913574
    5. 'vsp' → logprob: -14.136874198913574
    6. '_vs' → logprob: -14.761874198913574
    7. 'v' → logprob: -15.261874198913574
    8. ' versus' → logprob: -15.511874198913574
    9. 'vers' → logprob: -15.511874198913574
    10. ')' → logprob: -15.886874198913574

Token 391: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00036679807817563415
    2. ' ]' → logprob: -8.250367164611816
    3. '   ' → logprob: -9.375367164611816
    4. ')]' → logprob: -11.500367164611816
    5. ']
' → logprob: -12.250367164611816
    6. '       ' → logprob: -13.125367164611816
    7. '<|end|>' → logprob: -13.250367164611816
    8. 'def' → logprob: -14.625367164611816
    9. ')' → logprob: -14.750367164611816
    10. ']

' → logprob: -14.875367164611816

Token 392: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20236724615097046
    2. '    
' → logprob: -1.7023673057556152
    3. '<|end|>' → logprob: -7.827367305755615
    4. '
' → logprob: -8.702366828918457
    5. '  
' → logprob: -8.827366828918457
    6. 'vectors' → logprob: -10.077366828918457
    7. 'def' → logprob: -10.202366828918457
    8. '        
' → logprob: -10.577366828918457
    9. '    
    
' → logprob: -10.702366828918457
    10. '   
' → logprob: -11.202366828918457

Token 393: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12749715149402618
    2. '    
' → logprob: -2.2524971961975098
    3. '
' → logprob: -4.50249719619751
    4. 'trans' → logprob: -6.37749719619751
    5. 'all' → logprob: -7.25249719619751
    6. 'transform' → logprob: -7.87749719619751
    7. '  
' → logprob: -9.002496719360352
    8. ' transformations' → logprob: -9.252496719360352
    9. 'possible' → logprob: -9.502496719360352
    10. '   
' → logprob: -9.752496719360352

Token 394: ' #' (ID: 1069)
  Prédit: 'orient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orient' → logprob: -0.4107274115085602
    2. '   ' → logprob: -1.6607273817062378
    3. 'rot' → logprob: -2.9107275009155273
    4. 'all' → logprob: -3.0357275009155273
    5. '#' (adapté à ' #') → logprob: -3.6607275009155273
    6. 'transform' → logprob: -5.410727500915527
    7. 'c' → logprob: -5.410727500915527
    8. 'trans' → logprob: -5.660727500915527
    9. 'or' → logprob: -5.660727500915527
    10. ' orientations' → logprob: -6.410727500915527

Token 395: ' Generate' (ID: 33886)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3151204288005829
    2. 'all' → logprob: -2.0651204586029053
    3. 'orient' → logprob: -2.1901204586029053
    4. 'trans' → logprob: -4.565120220184326
    5. 'transform' → logprob: -5.065120220184326
    6. '#' → logprob: -5.315120220184326
    7. 'or' → logprob: -6.065120220184326
    8. 'normalized' → logprob: -6.315120220184326
    9. 'sh' → logprob: -6.690120220184326
    10. 'candidate' → logprob: -6.815120220184326

Token 396: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.1645703315734863
    2. ' candidates' → logprob: -1.2895703315734863
    3. 'all' → logprob: -2.0395703315734863
    4. ' orientations' → logprob: -2.1645703315734863
    5. ' normalized' → logprob: -3.0395703315734863
    6. '   ' → logprob: -3.5395703315734863
    7. ' transformations' → logprob: -3.5395703315734863
    8. 'c' → logprob: -3.6645703315734863
    9. ' transformed' → logprob: -4.914570331573486
    10. 'normalized' → logprob: -4.914570331573486

Token 397: ' orientations' (ID: 149573)
  Prédit: ' orientations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' orientations' → logprob: -0.8102670311927795
    2. 'orient' → logprob: -2.0602669715881348
    3. ' transforms' → logprob: -2.3102669715881348
    4. ' transformations' → logprob: -2.9352669715881348
    5. 'trans' → logprob: -3.0602669715881348
    6. ' variants' → logprob: -3.3102669715881348
    7. '   ' → logprob: -3.4352669715881348
    8. '_or' → logprob: -3.5602669715881348
    9. ' transformed' → logprob: -3.6852669715881348
    10. 'transform' → logprob: -3.6852669715881348

Token 398: ' of' (ID: 328)
  Prédit: 'orient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'orient' → logprob: -0.5573968887329102
    2. ' orientations' → logprob: -1.6823968887329102
    3. '   ' → logprob: -1.9323968887329102
    4. 'all' → logprob: -2.80739688873291
    5. 'or' → logprob: -3.55739688873291
    6. ' all' → logprob: -5.43239688873291
    7. '    
' → logprob: -6.68239688873291
    8. 'orph' → logprob: -8.18239688873291
    9. '
' → logprob: -8.18239688873291
    10. ' orient' → logprob: -8.30739688873291

Token 399: ' vectors' (ID: 52254)
  Prédit: 'vectors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vectors' → logprob: -0.1977594643831253
    2. '[v' → logprob: -2.1977593898773193
    3. ' vectors' → logprob: -2.6977593898773193
    4. 'v' → logprob: -7.697759628295898
    5. '[' → logprob: -8.072759628295898
    6. ' [' → logprob: -8.572759628295898
    7. '   ' → logprob: -10.947759628295898
    8. '(v' → logprob: -11.197759628295898
    9. ' v' → logprob: -11.447759628295898
    10. ' the' → logprob: -11.947759628295898

Token 400: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6022000908851624
    2. 'orient' → logprob: -1.1022000312805176
    3. 'all' → logprob: -2.6022000312805176
    4. 'or' → logprob: -3.7272000312805176
    5. ' orientations' → logprob: -3.9772000312805176
    6. ' all' → logprob: -6.477200031280518
    7. '    
' → logprob: -6.852200031280518
    8. 'orph' → logprob: -8.602200508117676
    9. 'orientation' → logprob: -9.477200508117676
    10. '
' → logprob: -9.477200508117676

Token 401: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9444717764854431
    2. ' orientations' → logprob: -1.069471836090088
    3. 'orient' → logprob: -1.694471836090088
    4. 'or' → logprob: -3.069471836090088
    5. 'all' → logprob: -3.694471836090088
    6. ' all' → logprob: -4.694471836090088
    7. ' oriented' → logprob: -7.444471836090088
    8. ' or' → logprob: -7.444471836090088
    9. ' orientation' → logprob: -7.444471836090088
    10. ' orient' → logprob: -7.569471836090088

Token 402: '0' (ID: 15)
  Prédit: 'orient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'orient' → logprob: -0.24347569048404694
    2. 'all' → logprob: -1.8684756755828857
    3. 'or' → logprob: -3.4934756755828857
    4. '   ' → logprob: -4.743475914001465
    5. 'ori' → logprob: -4.743475914001465
    6. ' orientations' → logprob: -4.743475914001465
    7. 'original' → logprob: -6.243475914001465
    8. 'orig' → logprob: -6.993475914001465
    9. 'vectors' → logprob: -7.868475914001465
    10. 'rot' → logprob: -7.868475914001465

Token 403: '°,' (ID: 148177)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03282652422785759
    2. ' ,' → logprob: -3.7828264236450195
    3. '°,' → logprob: -5.2828264236450195
    4. ',v' → logprob: -5.7828264236450195
    5. '_,' → logprob: -7.2828264236450195
    6. '_vectors' → logprob: -9.28282642364502
    7. '°' → logprob: -9.40782642364502
    8. '_degree' → logprob: -9.53282642364502
    9. ',
' → logprob: -9.90782642364502
    10. '-,' → logprob: -10.15782642364502

Token 404: ' ' (ID: 220)
  Prédit: '90'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -0.38693946599960327
    2. ' ' → logprob: -1.136939525604248
    3. '180' → logprob: -10.38693904876709
    4. ' rotate' → logprob: -10.63693904876709
    5. 'rotate' → logprob: -12.26193904876709
    6. ' ninety' → logprob: -12.88693904876709
    7. ' rotated' → logprob: -13.51193904876709
    8. '   ' → logprob: -14.01193904876709
    9. '9' → logprob: -14.38693904876709
    10. ',' → logprob: -14.38693904876709

Token 405: '90' (ID: 2744)
  Prédit: '90'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -0.0007114782347343862
    2. ' ' → logprob: -7.250711441040039
    3. '   ' → logprob: -14.125711441040039
    4. 'rotate' → logprob: -15.125711441040039
    5. '180' → logprob: -15.500711441040039
    6. ' rotate' → logprob: -16.50071144104004
    7. '```' → logprob: -16.87571144104004
    8. '9' → logprob: -17.62571144104004
    9. ' ninety' → logprob: -17.75071144104004
    10. 'v' → logprob: -17.87571144104004

Token 406: '°,' (ID: 148177)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026622198056429625
    2. ' ,' → logprob: -6.877662181854248
    3. '°,' → logprob: -7.252662181854248
    4. '   ' → logprob: -7.752662181854248
    5. ',v' → logprob: -8.752662658691406
    6. '),' → logprob: -9.002662658691406
    7. ',
' → logprob: -9.627662658691406
    8. '`,' → logprob: -9.752662658691406
    9. '(),' → logprob: -10.252662658691406
    10. '_,' → logprob: -11.252662658691406

Token 407: ' ' (ID: 220)
  Prédit: '180'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '180' → logprob: -0.0015035520773380995
    2. ' ' → logprob: -6.5015034675598145
    3. '   ' → logprob: -14.376503944396973
    4. 'and' → logprob: -15.126503944396973
    5. '```' → logprob: -15.876503944396973
    6. ',' → logprob: -16.376502990722656
    7. '270' → logprob: -16.501502990722656
    8. ' and' → logprob: -18.126502990722656
    9. '  ' → logprob: -18.126502990722656
    10. '#' → logprob: -18.876502990722656

Token 408: '180' (ID: 7521)
  Prédit: '180'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '180' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -17.375
    4. ',' → logprob: -19.75
    5. '   ' → logprob: -19.875
    6. 'and' → logprob: -20.0
    7. '
' → logprob: -20.875
    8. '270' → logprob: -21.375
    9. '-' → logprob: -21.5
    10. '#' → logprob: -21.625

Token 409: '°,' (ID: 148177)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14342720806598663
    2. '°,' → logprob: -2.0184271335601807
    3. '(),' → logprob: -8.643426895141602
    4. '_,' → logprob: -9.018426895141602
    5. ',v' → logprob: -9.143426895141602
    6. '°' → logprob: -9.268426895141602
    7. '‌,' → logprob: -9.518426895141602
    8. '%,' → logprob: -9.768426895141602
    9. '(v' → logprob: -10.518426895141602
    10. ' ,' → logprob: -10.643426895141602

Token 410: ' ' (ID: 220)
  Prédit: '270'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '270' → logprob: -0.004715991672128439
    2. ' ' → logprob: -5.379715919494629
    3. 'and' → logprob: -9.879715919494629
    4. '   ' → logprob: -10.754715919494629
    5. ' and' → logprob: -11.754715919494629
    6. ',' → logprob: -11.754715919494629
    7. '```' → logprob: -12.504715919494629
    8. '360' → logprob: -14.004715919494629
    9. '#' → logprob: -14.379715919494629
    10. '271' → logprob: -15.004715919494629

Token 411: '270' (ID: 17820)
  Prédit: '270'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '270' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -16.500003814697266
    4. '```' → logprob: -17.125003814697266
    5. 'and' → logprob: -18.375003814697266
    6. '#' → logprob: -18.500003814697266
    7. ',' → logprob: -19.500003814697266
    8. '27' → logprob: -20.125003814697266
    9. 'def' → logprob: -20.625003814697266
    10. '
' → logprob: -20.625003814697266

Token 412: '°
' (ID: 71564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05549800023436546
    2. 'all' → logprob: -3.805497884750366
    3. 'orient' → logprob: -3.805497884750366
    4. 'or' → logprob: -5.430498123168945
    5. '    
' → logprob: -6.555498123168945
    6. ' all' → logprob: -6.805498123168945
    7. ' orientations' → logprob: -6.805498123168945
    8. '
' → logprob: -6.930498123168945
    9. ',' → logprob: -8.805498123168945
    10. '```' → logprob: -10.055498123168945

Token 413: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21916815638542175
    2. 'orient' → logprob: -1.8441681861877441
    3. ' orientations' → logprob: -4.094168186187744
    4. 'or' → logprob: -4.219168186187744
    5. 'all' → logprob: -5.094168186187744
    6. '    
' → logprob: -7.969168186187744
    7. ' all' → logprob: -8.469167709350586
    8. ',' → logprob: -9.219167709350586
    9. 'orientation' → logprob: -9.469167709350586
    10. 'orph' → logprob: -9.844167709350586

Token 414: ' orientations' (ID: 149573)
  Prédit: 'orient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orient' → logprob: -0.4007404148578644
    2. ' orientations' → logprob: -1.900740385055542
    3. '   ' → logprob: -2.025740385055542
    4. 'all' → logprob: -3.650740385055542
    5. 'or' → logprob: -4.025740623474121
    6. ' all' → logprob: -5.900740623474121
    7. 'vectors' → logprob: -7.150740623474121
    8. ' orient' → logprob: -7.900740623474121
    9. ' oriented' → logprob: -8.025740623474121
    10. ' or' → logprob: -9.150740623474121

Token 415: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006715370807796717
    2. '=' → logprob: -5.006715297698975
    3. ' =[' → logprob: -18.131715774536133
    4. ' ' → logprob: -19.131715774536133
    5. ')' → logprob: -20.256715774536133
    6. '=[]' → logprob: -20.381715774536133
    7. '   ' → logprob: -20.506715774536133
    8. '[' → logprob: -20.881715774536133
    9. ',' → logprob: -21.006715774536133
    10. '=[' → logprob: -21.131715774536133

Token 416: ' [
' (ID: 4240)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.4078778922557831
    2. '[
' → logprob: -1.1578779220581055
    3. '[' → logprob: -3.9078779220581055
    4. ' [
' → logprob: -8.032877922058105
    5. ' [' → logprob: -8.157877922058105
    6. '   ' → logprob: -9.407877922058105
    7. ' ' → logprob: -12.407877922058105
    8. '[]
' → logprob: -12.532877922058105
    9. '[var' → logprob: -14.407877922058105
    10. '  ' → logprob: -14.532877922058105

Token 417: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5374122858047485
    2. 'vectors' → logprob: -1.1624122858047485
    3. '   ' → logprob: -2.412412166595459
    4. ' vectors' → logprob: -4.412412166595459
    5. 'v' → logprob: -7.037412166595459
    6. '(v' → logprob: -8.662412643432617
    7. '[v' → logprob: -9.662412643432617
    8. '	v' → logprob: -9.912412643432617
    9. '    ' → logprob: -9.912412643432617
    10. '           ' → logprob: -10.787412643432617

Token 418: ' vectors' (ID: 52254)
  Prédit: 'vectors'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vectors' (adapté à ' vectors') → logprob: -0.0032288136426359415
    2. ' vectors' → logprob: -5.753228664398193
    3. '   ' → logprob: -10.503229141235352
    4. '       ' → logprob: -10.878229141235352
    5. 'v' → logprob: -12.628229141235352
    6. '           ' → logprob: -14.378229141235352
    7. '[v' → logprob: -14.878229141235352
    8. '(v' → logprob: -15.378229141235352
    9. '    ' → logprob: -16.87822914123535
    10. 'vec' → logprob: -17.00322914123535

Token 419: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06945856660604477
    2. ',
' → logprob: -2.819458484649658
    3. ',v' → logprob: -4.944458484649658
    4. '   ' → logprob: -8.319458961486816
    5. ' ,' → logprob: -9.444458961486816
    6. ' ,
' → logprob: -12.444458961486816
    7. 'v' → logprob: -12.694458961486816
    8. ',
' → logprob: -13.319458961486816
    9. 'vectors' → logprob: -13.319458961486816
    10. ')' → logprob: -13.569458961486816

Token 420: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33598753809928894
    2. 'rotate' → logprob: -1.3359875679016113
    3. ' rotate' → logprob: -3.9609875679016113
    4. '   ' → logprob: -5.710987567901611
    5. '        ' → logprob: -9.710987091064453
    6. '    ' → logprob: -10.335987091064453
    7. '      ' → logprob: -12.085987091064453
    8. '           ' → logprob: -12.210987091064453
    9. '     ' → logprob: -12.210987091064453
    10. '.rotate' → logprob: -12.460987091064453

Token 421: ' rotate' (ID: 31987)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotate' (adapté à ' rotate') → logprob: -0.00043579499470070004
    2. ' rotate' → logprob: -7.750435829162598
    3. '   ' → logprob: -12.500435829162598
    4. '       ' → logprob: -13.750435829162598
    5. '           ' → logprob: -15.750435829162598
    6. '    ' → logprob: -16.50043487548828
    7. 'rot' → logprob: -16.62543487548828
    8. '        ' → logprob: -17.00043487548828
    9. '     ' → logprob: -17.00043487548828
    10. '         ' → logprob: -17.87543487548828

Token 422: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.339278580620885e-06
    2. '90' → logprob: -13.000001907348633
    3. 'v' → logprob: -18.750001907348633
    4. '[' → logprob: -19.750001907348633
    5. '```' → logprob: -19.750001907348633
    6. '_vectors' → logprob: -19.875001907348633
    7. ' ' → logprob: -20.125001907348633
    8. ' _' → logprob: -20.625001907348633
    9. '(' → logprob: -20.625001907348633
    10. ')_' → logprob: -20.750001907348633

Token 423: '90' (ID: 2744)
  Prédit: '90'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -15.75
    3. 'vectors' → logprob: -18.75
    4. ' ' → logprob: -21.25
    5. '```' → logprob: -21.5
    6. '090' → logprob: -21.625
    7. '180' → logprob: -22.0
    8. ' vectors' → logprob: -22.375
    9. '900' → logprob: -22.75
    10. 'v' → logprob: -22.75

Token 424: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.3425219549390022e-05
    2. ' (' → logprob: -12.12501335144043
    3. ',' → logprob: -12.25001335144043
    4. '(' → logprob: -13.87501335144043
    5. 'vectors' → logprob: -13.87501335144043
    6. ',v' → logprob: -14.62501335144043
    7. '(points' → logprob: -15.25001335144043
    8. ')' → logprob: -15.62501335144043
    9. '   ' → logprob: -16.12501335144043
    10. ',
' → logprob: -16.87501335144043

Token 425: 'ectors' (ID: 27421)
  Prédit: 'ectors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ectors' → logprob: -1.2664456789934775e-06
    2. 'ctors' → logprob: -14.625000953674316
    3. 's' → logprob: -15.375000953674316
    4. 'ector' → logprob: -15.375000953674316
    5. 'vectors' → logprob: -16.000001907348633
    6. 'ec' → logprob: -16.375001907348633
    7. '(' → logprob: -17.000001907348633
    8. '[' → logprob: -17.125001907348633
    9. 'ect' → logprob: -17.375001907348633
    10. '{' → logprob: -17.875001907348633

Token 426: '),
' (ID: 2313)
  Prédit: '),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.2142639011144638
    2. '),' → logprob: -1.714263916015625
    3. ',' → logprob: -5.214263916015625
    4. ',
' → logprob: -5.589263916015625
    5. '   ' → logprob: -5.839263916015625
    6. '       ' → logprob: -7.839263916015625
    7. ')' → logprob: -8.714263916015625
    8. ',),
' → logprob: -9.339263916015625
    9. '),

' → logprob: -11.089263916015625
    10. ' ),
' → logprob: -11.714263916015625

Token 427: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07966011017560959
    2. 'rotate' → logprob: -2.579660177230835
    3. ' rotate' → logprob: -7.454659938812256
    4. '   ' → logprob: -8.579660415649414
    5. '      ' → logprob: -13.579660415649414
    6. '     ' → logprob: -14.204660415649414
    7. ' ' → logprob: -14.954660415649414
    8. '           ' → logprob: -15.204660415649414
    9. '.rotate' → logprob: -15.454660415649414
    10. '    ' → logprob: -15.454660415649414

Token 428: ' rotate' (ID: 31987)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotate' (adapté à ' rotate') → logprob: -0.003389329882338643
    2. ' rotate' → logprob: -6.128389358520508
    3. '       ' → logprob: -6.753389358520508
    4. '   ' → logprob: -10.253389358520508
    5. ' ' → logprob: -15.003389358520508
    6. '.rotate' → logprob: -15.128389358520508
    7. '     ' → logprob: -15.253389358520508
    8. '      ' → logprob: -15.503389358520508
    9. '    ' → logprob: -15.878389358520508
    10. '           ' → logprob: -16.753389358520508

Token 429: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -7.493430894101039e-05
    2. '180' → logprob: -9.500075340270996
    3. '```' → logprob: -17.12507438659668
    4. 'def' → logprob: -17.50007438659668
    5. '-' → logprob: -17.62507438659668
    6. '[' → logprob: -20.25007438659668
    7. '270' → logprob: -20.25007438659668
    8. ')' → logprob: -20.87507438659668
    9. '90' → logprob: -21.00007438659668
    10. ' ' → logprob: -21.00007438659668

Token 430: '180' (ID: 7521)
  Prédit: '180'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '180' → logprob: -4.320199877838604e-07
    2. '270' → logprob: -15.125
    3. '_' → logprob: -17.5
    4. '1' → logprob: -17.875
    5. '18' → logprob: -17.875
    6. '```' → logprob: -18.125
    7. ' ' → logprob: -18.875
    8. 'def' → logprob: -18.875
    9. '90' → logprob: -19.0
    10. 'rotate' → logprob: -19.75

Token 431: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.2664456789934775e-06
    2. 'vectors' → logprob: -14.000000953674316
    3. ' vectors' → logprob: -15.375000953674316
    4. '(' → logprob: -16.125001907348633
    5. 'v' → logprob: -17.875001907348633
    6. ')' → logprob: -17.875001907348633
    7. ' (' → logprob: -18.375001907348633
    8. '[v' → logprob: -18.375001907348633
    9. '(vector' → logprob: -18.625001907348633
    10. '_vectors' → logprob: -18.875001907348633

Token 432: 'ectors' (ID: 27421)
  Prédit: 'ectors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ectors' → logprob: -0.011770523153245449
    2. '(v' → logprob: -4.886770725250244
    3. 'vectors' → logprob: -5.511770725250244
    4. 'ector' → logprob: -9.886770248413086
    5. 'ect' → logprob: -11.011770248413086
    6. ' vectors' → logprob: -11.136770248413086
    7. 'ects' → logprob: -11.136770248413086
    8. 'ctors' → logprob: -12.136770248413086
    9. '_vectors' → logprob: -12.136770248413086
    10. '[v' → logprob: -12.511770248413086

Token 433: '),
' (ID: 2313)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.005400476977229118
    2. '),
' → logprob: -5.505400657653809
    3. '),' → logprob: -6.880400657653809
    4. ',' → logprob: -9.130400657653809
    5. '   ' → logprob: -9.630400657653809
    6. ',
' → logprob: -10.380400657653809
    7. ')' → logprob: -10.505400657653809
    8. '(' → logprob: -10.880400657653809
    9. ',v' → logprob: -11.255400657653809
    10. '       ' → logprob: -11.880400657653809

Token 434: '       ' (ID: 309)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.09285064786672592
    2. '       ' → logprob: -2.592850685119629
    3. '   ' → logprob: -4.592850685119629
    4. ' rotate' → logprob: -5.592850685119629
    5. '     ' → logprob: -12.342850685119629
    6. '.rotate' → logprob: -12.967850685119629
    7. '      ' → logprob: -12.967850685119629
    8. '    ' → logprob: -13.217850685119629
    9. ' ' → logprob: -13.467850685119629
    10. '           ' → logprob: -13.967850685119629

Token 435: ' rotate' (ID: 31987)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotate' (adapté à ' rotate') → logprob: -0.0009462343878112733
    2. ' rotate' → logprob: -7.000946044921875
    3. '       ' → logprob: -10.625946044921875
    4. '   ' → logprob: -11.500946044921875
    5. '     ' → logprob: -16.250946044921875
    6. '    ' → logprob: -16.375946044921875
    7. '      ' → logprob: -17.000946044921875
    8. ' ' → logprob: -17.000946044921875
    9. '.rotate' → logprob: -17.500946044921875
    10. '           ' → logprob: -17.625946044921875

Token 436: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0010331686353310943
    2. '270' → logprob: -6.876033306121826
    3. '```' → logprob: -15.626032829284668
    4. ' ' → logprob: -16.376033782958984
    5. '-' → logprob: -17.126033782958984
    6. 'def' → logprob: -17.501033782958984
    7. '   ' → logprob: -17.626033782958984
    8. '(' → logprob: -18.501033782958984
    9. '`' → logprob: -18.501033782958984
    10. 'rotate' → logprob: -18.626033782958984

Token 437: '270' (ID: 17820)
  Prédit: '270'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '270' → logprob: -3.173704271830502e-06
    2. '27' → logprob: -12.75000286102295
    3. '90' → logprob: -15.87500286102295
    4. 'rotate' → logprob: -16.875003814697266
    5. '273' → logprob: -18.125003814697266
    6. '275' → logprob: -18.250003814697266
    7. '```' → logprob: -18.250003814697266
    8. '271' → logprob: -18.625003814697266
    9. '_' → logprob: -18.625003814697266
    10. '[' → logprob: -19.250003814697266

Token 438: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -4.842555426876061e-06
    2. 'vectors' → logprob: -13.250004768371582
    3. '(' → logprob: -14.000004768371582
    4. ')(' → logprob: -14.125004768371582
    5. ')' → logprob: -14.250004768371582
    6. ' vectors' → logprob: -14.625004768371582
    7. ' (' → logprob: -15.500004768371582
    8. '```' → logprob: -17.2500057220459
    9. '_vectors' → logprob: -17.7500057220459
    10. '(points' → logprob: -17.8750057220459

Token 439: 'ectors' (ID: 27421)
  Prédit: 'ectors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ectors' → logprob: -0.0013634508941322565
    2. 'vectors' → logprob: -7.251363277435303
    3. 'ctors' → logprob: -7.376363277435303
    4. 'ector' → logprob: -11.376363754272461
    5. 'ect' → logprob: -12.751363754272461
    6. '_vectors' → logprob: -12.876363754272461
    7. ' vectors' → logprob: -13.126363754272461
    8. 's' → logprob: -13.126363754272461
    9. ')' → logprob: -13.251363754272461
    10. '```' → logprob: -14.376363754272461

Token 440: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6441279649734497
    2. ')' → logprob: -1.3941279649734497
    3. ']' → logprob: -1.6441279649734497
    4. ')]' → logprob: -3.39412784576416
    5. '])' → logprob: -9.89412784576416
    6. ' ]' → logprob: -11.89412784576416
    7. ' )' → logprob: -12.64412784576416
    8. ')])' → logprob: -12.76912784576416
    9. ')],' → logprob: -12.76912784576416
    10. '}' → logprob: -12.89412784576416

Token 441: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4741494953632355
    2. ']' → logprob: -0.9741494655609131
    3. ' ]' → logprob: -9.724149703979492
    4. ')' → logprob: -11.724149703979492
    5. ']
' → logprob: -13.224149703979492
    6. '}' → logprob: -14.474149703979492
    7. '```' → logprob: -14.974149703979492
    8. '.' → logprob: -15.099149703979492
    9. '<|end|>' → logprob: -15.099149703979492
    10. ',' → logprob: -15.349149703979492

Token 442: ' ]
' (ID: 10213)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.25236794352531433
    2. '   ' → logprob: -1.5023679733276367
    3. ' ]' → logprob: -8.127367973327637
    4. ',' → logprob: -9.127367973327637
    5. ')' → logprob: -10.627367973327637
    6. '    
' → logprob: -13.252367973327637
    7. ']
' (adapté à ' ]
') → logprob: -13.377367973327637
    8. '}' → logprob: -13.627367973327637
    9. ',
' → logprob: -13.627367973327637
    10. '<|end|>' → logprob: -13.877367973327637

Token 443: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07594747096300125
    2. 'all' → logprob: -3.4509475231170654
    3. 'normalized' → logprob: -3.7009475231170654
    4. '    
' → logprob: -4.325947284698486
    5. '
' → logprob: -6.450947284698486
    6. 'c' → logprob: -7.575947284698486
    7. 'results' → logprob: -8.075947761535645
    8. '```' → logprob: -8.200947761535645
    9. ' all' → logprob: -8.575947761535645
    10. '#' → logprob: -8.825947761535645

Token 444: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3908922076225281
    2. 'all' → logprob: -1.6408922672271729
    3. 'c' → logprob: -3.140892267227173
    4. 'normalized' → logprob: -3.140892267227173
    5. '#' → logprob: -3.515892267227173
    6. 'results' → logprob: -4.765892028808594
    7. 'result' → logprob: -6.515892028808594
    8. '    
' → logprob: -6.765892028808594
    9. 'norm' → logprob: -7.515892028808594
    10. 'min' → logprob: -7.765892028808594

Token 445: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4020613431930542
    2. 'all' → logprob: -1.9020613431930542
    3. 'normalized' → logprob: -2.0270614624023438
    4. '#' (adapté à ' #') → logprob: -3.5270614624023438
    5. 'results' → logprob: -4.527061462402344
    6. 'def' → logprob: -6.277061462402344
    7. 'norm' → logprob: -6.402061462402344
    8. '   ' → logprob: -6.777061462402344
    9. 'options' → logprob: -6.902061462402344
    10. 'candidate' → logprob: -7.152061462402344

Token 446: ' For' (ID: 2214)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6130810976028442
    2. 'all' → logprob: -1.2380810976028442
    3. 'normalized' → logprob: -1.9880810976028442
    4. '#' → logprob: -4.363080978393555
    5. 'results' → logprob: -4.613080978393555
    6. 'candidate' → logprob: -6.113080978393555
    7. 'def' → logprob: -6.363080978393555
    8. 'norm' → logprob: -6.738080978393555
    9. 'sh' → logprob: -6.863080978393555
    10. 'options' → logprob: -7.613080978393555

Token 447: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.7090365290641785
    2. 'each' → logprob: -2.0840365886688232
    3. ' ori' → logprob: -2.7090365886688232
    4. 'all' → logprob: -3.0840365886688232
    5. ' all' → logprob: -3.0840365886688232
    6. 'ori' → logprob: -3.2090365886688232
    7. 'or' → logprob: -3.7090365886688232
    8. ' pts' → logprob: -3.7090365886688232
    9. 'orientation' → logprob: -3.7090365886688232
    10. 'pts' → logprob: -3.9590365886688232

Token 448: ' orientation' (ID: 29546)
  Prédit: 'orientation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orientation' → logprob: -0.48404112458229065
    2. 'ori' → logprob: -1.4840410947799683
    3. ' orientation' → logprob: -2.609041213989258
    4. ' ori' → logprob: -3.109041213989258
    5. 'or' → logprob: -3.859041213989258
    6. 'orient' → logprob: -4.609041213989258
    7. ' oriented' → logprob: -6.609041213989258
    8. 'orien' → logprob: -7.234041213989258
    9. 'vs' → logprob: -7.359041213989258
    10. ' orient' → logprob: -7.484041213989258

Token 449: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5109401345252991
    2. ',' → logprob: -1.1359400749206543
    3. 'normalized' → logprob: -3.1359400749206543
    4. '
' → logprob: -5.260940074920654
    5. ':' → logprob: -5.635940074920654
    6. 'all' → logprob: -5.760940074920654
    7. 'results' → logprob: -5.760940074920654
    8. ':
' → logprob: -5.760940074920654
    9. ' normalized' → logprob: -6.010940074920654
    10. 'candidate' → logprob: -6.385940074920654

Token 450: ' also' (ID: 1217)
  Prédit: ' candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -1.3225831985473633
    2. 'c' → logprob: -1.8225831985473633
    3. 'normalized' → logprob: -1.9475831985473633
    4. ' normalized' → logprob: -2.0725831985473633
    5. 'all' → logprob: -2.6975831985473633
    6. '   ' → logprob: -2.8225831985473633
    7. ' all' → logprob: -2.8225831985473633
    8. ' sequences' → logprob: -3.8225831985473633
    9. ' results' → logprob: -3.9475831985473633
    10. ' points' → logprob: -3.9475831985473633

Token 451: ' consider' (ID: 3331)
  Prédit: 'consider'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'consider' → logprob: -0.762901246547699
    2. ' consider' → logprob: -1.1379013061523438
    3. ' include' → logprob: -2.8879013061523438
    4. ' add' → logprob: -3.3879013061523438
    5. '   ' → logprob: -3.7629013061523438
    6. '
' → logprob: -3.8879013061523438
    7. ' append' → logprob: -4.262901306152344
    8. ' check' → logprob: -4.262901306152344
    9. 'append' → logprob: -4.512901306152344
    10. 'include' → logprob: -4.512901306152344

Token 452: ' reversed' (ID: 57184)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.38056087493896484
    2. '[' → logprob: -1.7555608749389648
    3. 'vectors' → logprob: -3.130560874938965
    4. 'or' → logprob: -3.505560874938965
    5. '[
' → logprob: -3.880560874938965
    6. 'orient' → logprob: -4.130560874938965
    7. ' [' → logprob: -4.505560874938965
    8. ' vectors' → logprob: -4.880560874938965
    9. ' orientations' → logprob: -5.630560874938965
    10. '   ' → logprob: -5.755560874938965

Token 453: ' vectors' (ID: 52254)
  Prédit: ' orientations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' orientations' → logprob: -1.6891552209854126
    2. ' versions' → logprob: -1.8141552209854126
    3. 'orient' → logprob: -2.189155101776123
    4. ' orientation' → logprob: -2.439155101776123
    5. ' vectors' → logprob: -2.814155101776123
    6. ' version' → logprob: -2.939155101776123
    7. ' sequences' → logprob: -2.939155101776123
    8. 'vectors' → logprob: -3.064155101776123
    9. 'orientation' → logprob: -3.189155101776123
    10. ',' → logprob: -3.314155101776123

Token 454: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014443542808294296
    2. ' and' → logprob: -4.514443397521973
    3. 'and' → logprob: -6.639443397521973
    4. ',' → logprob: -6.889443397521973
    5. 'results' → logprob: -7.514443397521973
    6. ' results' → logprob: -8.764443397521973
    7. ' for' → logprob: -9.639443397521973
    8. ' =' → logprob: -9.889443397521973
    9. 'result' → logprob: -10.014443397521973
    10. ' with' → logprob: -10.514443397521973

Token 455: 'reverse' (ID: 53832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2755882740020752
    2. ' vs' → logprob: -1.6505882740020752
    3. ' vectors' → logprob: -2.275588274002075
    4. ')' → logprob: -2.775588274002075
    5. 'vectors' → logprob: -2.900588274002075
    6. ' orientations' → logprob: -3.150588274002075
    7. ' v' → logprob: -3.275588274002075
    8. ' orientation' → logprob: -3.400588274002075
    9. ' or' → logprob: -3.400588274002075
    10. 'vs' → logprob: -3.525588274002075

Token 456: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9300222992897034
    2. ' and' → logprob: -0.9300222992897034
    3. ',' → logprob: -3.3050222396850586
    4. ' vectors' → logprob: -3.5550222396850586
    5. '(),' → logprob: -3.6800222396850586
    6. 's' → logprob: -3.9300222396850586
    7. '()' → logprob: -3.9300222396850586
    8. 'd' → logprob: -4.055022239685059
    9. ' orientation' → logprob: -4.680022239685059
    10. ' orientations' → logprob: -4.680022239685059

Token 457: ' vector' (ID: 9727)
  Prédit: 'orientation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'orientation' → logprob: -1.5880720615386963
    2. '[(' → logprob: -1.8380720615386963
    3. 'vectors' → logprob: -2.0880720615386963
    4. 'sequence' → logprob: -2.3380720615386963
    5. ' vectors' → logprob: -2.7130720615386963
    6. '[' → logprob: -2.8380720615386963
    7. 'list' → logprob: -2.8380720615386963
    8. '[::-' → logprob: -2.9630720615386963
    9. 'vector' → logprob: -3.5880720615386963
    10. ' list' → logprob: -3.7130720615386963

Token 458: ' list' (ID: 1562)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14919504523277283
    2. 'sequence' → logprob: -2.5241949558258057
    3. 'list' → logprob: -3.1491949558258057
    4. ' sequence' → logprob: -5.274195194244385
    5. ' list' → logprob: -5.399195194244385
    6. '[::-' → logprob: -6.274195194244385
    7. '   ' → logprob: -6.649195194244385
    8. ')' → logprob: -7.024195194244385
    9. ' sequences' → logprob: -7.149195194244385
    10. ',' → logprob: -8.399194717407227

Token 459: ' and' (ID: 326)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.4442285895347595
    2. ')' → logprob: -1.5692286491394043
    3. ',' → logprob: -2.5692286491394043
    4. ' and' → logprob: -2.9442286491394043
    5. '   ' → logprob: -4.819228649139404
    6. 'and' → logprob: -4.819228649139404
    7. ' )' → logprob: -7.194228649139404
    8. ')
' → logprob: -7.444228649139404
    9. ' with' → logprob: -7.444228649139404
    10. '),' → logprob: -7.569228649139404

Token 460: ' negate' (ID: 163104)
  Prédit: 'invert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'invert' → logprob: -1.141004204750061
    2. ' invert' → logprob: -1.391004204750061
    3. '[(' → logprob: -1.891004204750061
    4. 'neg' → logprob: -2.2660040855407715
    5. 'reverse' → logprob: -2.8910040855407715
    6. ' negate' → logprob: -3.0160040855407715
    7. ' reverse' → logprob: -3.1410040855407715
    8. ' [(' → logprob: -4.1410040855407715
    9. '[' → logprob: -5.0160040855407715
    10. ' [' → logprob: -6.7660040855407715

Token 461: ' vectors' (ID: 52254)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.32418498396873474
    2. ' each' → logprob: -1.5741850137710571
    3. 'the' → logprob: -3.4491848945617676
    4. 'dx' → logprob: -4.449184894561768
    5. ')' → logprob: -4.824184894561768
    6. ' the' → logprob: -4.949184894561768
    7. 'them' → logprob: -5.324184894561768
    8. 'vectors' → logprob: -6.199184894561768
    9. '(dx' → logprob: -7.324184894561768
    10. '   ' → logprob: -7.449184894561768

Token 462: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25176432728767395
    2. ')
' → logprob: -1.8767642974853516
    3. '   ' → logprob: -4.376764297485352
    4. ',' → logprob: -4.751764297485352
    5. ' to' → logprob: -5.126764297485352
    6. ' for' → logprob: -5.126764297485352
    7. '):' → logprob: -5.251764297485352
    8. '):
' → logprob: -5.251764297485352
    9. '[::-' → logprob: -5.251764297485352
    10. ' with' → logprob: -5.626764297485352

Token 463: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007781483698636293
    2. 'results' → logprob: -5.507781505584717
    3. '
' → logprob: -6.757781505584717
    4. 'normalized' → logprob: -7.132781505584717
    5. ' results' → logprob: -7.382781505584717
    6. 'result' → logprob: -7.757781505584717
    7. '    
' → logprob: -8.257781028747559
    8. ' candidates' → logprob: -8.882781028747559
    9. ' normalized' → logprob: -9.757781028747559
    10. '```' → logprob: -9.757781028747559

Token 464: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00823050644248724
    2. 'all' → logprob: -5.383230686187744
    3. ' candidates' → logprob: -6.258230686187744
    4. ' all' → logprob: -7.508230686187744
    5. 'normalized' → logprob: -8.008230209350586
    6. 'results' → logprob: -8.883230209350586
    7. '
' → logprob: -9.008230209350586
    8. 'candidate' → logprob: -9.133230209350586
    9. 'def' → logprob: -9.883230209350586
    10. ' options' → logprob: -10.008230209350586

Token 465: ' Because' (ID: 13602)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0702129602432251
    2. 'all' → logprob: -3.8202128410339355
    3. ' candidates' → logprob: -4.4452128410339355
    4. ' all' → logprob: -4.5702128410339355
    5. 'c' → logprob: -4.5702128410339355
    6. 'normalized' → logprob: -4.9452128410339355
    7. ' normalized' → logprob: -5.6952128410339355
    8. 'def' → logprob: -7.4452128410339355
    9. ' def' → logprob: -7.6952128410339355
    10. ' transformed' → logprob: -8.070213317871094

Token 466: ' reversing' (ID: 156690)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -1.2354635000228882
    2. '   ' → logprob: -1.2354635000228882
    3. 'for' → logprob: -2.3604636192321777
    4. ' for' → logprob: -2.7354636192321777
    5. ' reversing' → logprob: -2.7354636192321777
    6. 'neg' → logprob: -3.4854636192321777
    7. ' vectors' → logprob: -3.4854636192321777
    8. ' when' → logprob: -3.6104636192321777
    9. 'vectors' → logprob: -3.7354636192321777
    10. ' the' → logprob: -3.8604636192321777

Token 467: ' means' (ID: 4748)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6833946108818054
    2. 'the' → logprob: -1.5583946704864502
    3. ' a' → logprob: -2.30839467048645
    4. 'vectors' → logprob: -2.43339467048645
    5. 'a' → logprob: -2.68339467048645
    6. ' vectors' → logprob: -3.80839467048645
    7. '[(' → logprob: -6.683394432067871
    8. ' revers' → logprob: -6.933394432067871
    9. ' involves' → logprob: -7.558394432067871
    10. '[::-' → logprob: -7.808394432067871

Token 468: ' travers' (ID: 26957)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.8999799489974976
    2. 're' → logprob: -1.7749799489974976
    3. ' reversing' → logprob: -2.524980068206787
    4. ' neg' → logprob: -3.024980068206787
    5. 'taking' → logprob: -3.024980068206787
    6. ' we' → logprob: -3.149980068206787
    7. ' taking' → logprob: -3.399980068206787
    8. '[(' → logprob: -3.774980068206787
    9. ' the' → logprob: -4.024980068206787
    10. 'app' → logprob: -4.149980068206787

Token 469: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -3.011373155459296e-05
    2. 'al' → logprob: -11.000030517578125
    3. '[' → logprob: -11.875030517578125
    4. '(' → logprob: -13.000030517578125
    5. '```' → logprob: -13.750030517578125
    6. 'eing' → logprob: -14.250030517578125
    7. 'e' → logprob: -14.875030517578125
    8. '   ' → logprob: -14.875030517578125
    9. '
' → logprob: -15.125030517578125
    10. '#' → logprob: -15.625030517578125

Token 470: ' in' (ID: 306)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.61104416847229
    2. ' the' → logprob: -0.86104416847229
    3. ' vectors' → logprob: -4.236043930053711
    4. 'vectors' → logprob: -4.486043930053711
    5. 'in' → logprob: -5.486043930053711
    6. ' in' → logprob: -5.986043930053711
    7. 'from' → logprob: -6.861043930053711
    8. 'back' → logprob: -8.111043930053711
    9. ' edges' → logprob: -8.736043930053711
    10. 'edges' → logprob: -8.736043930053711

Token 471: ' reverse' (ID: 18199)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.22869491577148438
    2. 'op' → logprob: -2.2286949157714844
    3. ' reverse' → logprob: -2.4786949157714844
    4. 'the' → logprob: -5.603694915771484
    5. ' the' → logprob: -6.103694915771484
    6. ' opposite' → logprob: -6.103694915771484
    7. ' reversed' → logprob: -6.353694915771484
    8. '[::-' → logprob: -6.603694915771484
    9. '[-' → logprob: -7.103694915771484
    10. 're' → logprob: -7.228694915771484

Token 472: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.3191313147544861
    2. ' order' → logprob: -1.4441313743591309
    3. 'direction' → logprob: -3.819131374359131
    4. ' direction' → logprob: -5.194131374359131
    5. 'vectors' → logprob: -5.944131374359131
    6. ' of' → logprob: -6.194131374359131
    7. 'of' → logprob: -6.694131374359131
    8. ' vectors' → logprob: -6.944131374359131
    9. 'and' → logprob: -7.569131374359131
    10. ',' → logprob: -7.694131374359131

Token 473: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08605103194713593
    2. ',' → logprob: -2.8360509872436523
    3. ' and' → logprob: -3.9610509872436523
    4. 'and' → logprob: -6.086050987243652
    5. ':' → logprob: -7.711050987243652
    6. 'vectors' → logprob: -7.836050987243652
    7. ' of' → logprob: -8.086050987243652
    8. 'def' → logprob: -8.461050987243652
    9. ' with' → logprob: -8.711050987243652
    10. ' ,' → logprob: -9.086050987243652

Token 474: ' end' (ID: 1268)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9134597182273865
    2. 'the' → logprob: -1.2884597778320312
    3. 'end' → logprob: -1.7884597778320312
    4. ' end' → logprob: -2.1634597778320312
    5. ' last' → logprob: -4.788459777832031
    6. 'last' → logprob: -4.913459777832031
    7. '(' → logprob: -5.538459777832031
    8. 'next' → logprob: -5.663459777832031
    9. '[(' → logprob: -5.788459777832031
    10. 'points' → logprob: -6.038459777832031

Token 475: ' point' (ID: 2438)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7361827492713928
    2. '   ' → logprob: -1.486182689666748
    3. 'to' → logprob: -2.111182689666748
    4. ' to' → logprob: -2.361182689666748
    5. 'and' → logprob: -3.736182689666748
    6. ' and' → logprob: -3.861182689666748
    7. 'points' → logprob: -4.986182689666748
    8. 'vectors' → logprob: -5.236182689666748
    9. ' of' → logprob: -5.361182689666748
    10. ')' → logprob: -5.736182689666748

Token 476: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06162397935986519
    2. ',' → logprob: -2.936624050140381
    3. ' to' → logprob: -6.311624050140381
    4. ' and' → logprob: -6.936624050140381
    5. ' for' → logprob: -7.311624050140381
    6. ':' → logprob: -7.561624050140381
    7. '.' → logprob: -7.561624050140381
    8. 'def' → logprob: -7.686624050140381
    9. 's' → logprob: -7.811624050140381
    10. 'for' → logprob: -8.061623573303223

Token 477: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.09089519828557968
    2. ' start' → logprob: -2.465895175933838
    3. 'begin' → logprob: -7.590895175933838
    4. 'the' → logprob: -7.590895175933838
    5. ' the' → logprob: -7.965895175933838
    6. 'end' → logprob: -8.465895652770996
    7. 'previous' → logprob: -9.090895652770996
    8. '(' → logprob: -9.590895652770996
    9. 'point' → logprob: -10.465895652770996
    10. '(start' → logprob: -11.090895652770996

Token 478: ' point' (ID: 2438)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009352154098451138
    2. ',' → logprob: -5.134352207183838
    3. ':' → logprob: -6.884352207183838
    4. '.' → logprob: -7.634352207183838
    5. ' and' → logprob: -8.00935173034668
    6. ' for' → logprob: -8.38435173034668
    7. 'vectors' → logprob: -8.50935173034668
    8. ' =' → logprob: -8.63435173034668
    9. ')' → logprob: -8.75935173034668
    10. 's' → logprob: -9.50935173034668

Token 479: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05037824064493179
    2. ',' → logprob: -3.6753783226013184
    3. ' and' → logprob: -4.925378322601318
    4. 'vectors' → logprob: -5.300378322601318
    5. 'def' → logprob: -5.675378322601318
    6. ' for' → logprob: -6.800378322601318
    7. ' reversed' → logprob: -6.925378322601318
    8. ' ,' → logprob: -7.050378322601318
    9. 're' → logprob: -7.175378322601318
    10. 'and' → logprob: -7.425378322601318

Token 480: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1439969539642334
    2. 'normalized' → logprob: -2.5189969539642334
    3. 'results' → logprob: -3.6439969539642334
    4. ' results' → logprob: -4.5189971923828125
    5. ' normalized' → logprob: -4.6439971923828125
    6. 'result' → logprob: -5.8939971923828125
    7. ' candidates' → logprob: -7.0189971923828125
    8. 'all' → logprob: -7.3939971923828125
    9. ' next' → logprob: -7.8939971923828125
    10. ' result' → logprob: -8.143997192382812

Token 481: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6165762543678284
    2. 'c' → logprob: -1.3665761947631836
    3. 'normalized' → logprob: -1.9915761947631836
    4. ' candidates' → logprob: -3.6165761947631836
    5. ' normalized' → logprob: -4.116576194763184
    6. 'canonical' → logprob: -5.241576194763184
    7. ' results' → logprob: -5.866576194763184
    8. 'results' → logprob: -5.991576194763184
    9. 'all' → logprob: -6.366576194763184
    10. ' next' → logprob: -6.366576194763184

Token 482: ' reverse' (ID: 18199)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.09298698604106903
    2. ' reverse' → logprob: -2.717987060546875
    3. 'neg' → logprob: -5.217987060546875
    4. ' reversed' → logprob: -5.467987060546875
    5. 'invert' → logprob: -5.467987060546875
    6. 're' → logprob: -5.842987060546875
    7. 'get' → logprob: -6.092987060546875
    8. 'normalize' → logprob: -6.217987060546875
    9. ' get' → logprob: -7.467987060546875
    10. 'inverse' → logprob: -7.592987060546875

Token 483: '_vectors' (ID: 129121)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.5694912075996399
    2. '_' → logprob: -1.5694911479949951
    3. '_vectors' → logprob: -1.6944911479949951
    4. '_(' → logprob: -4.069491386413574
    5. '_vs' → logprob: -4.069491386413574
    6. '_v' → logprob: -5.694491386413574
    7. 's' → logprob: -6.319491386413574
    8. 'vectors' → logprob: -6.944491386413574
    9. '(s' → logprob: -7.444491386413574
    10. ' vectors' → logprob: -7.819491386413574

Token 484: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0001673061487963423
    2. ' (' → logprob: -8.750166893005371
    3. '(' → logprob: -12.125166893005371
    4. '   ' → logprob: -13.875166893005371
    5. ' vs' → logprob: -14.625166893005371
    6. '(V' → logprob: -15.000166893005371
    7. '(s' → logprob: -15.250166893005371
    8. ',' → logprob: -15.375166893005371
    9. '(vec' → logprob: -15.625166893005371
    10. '(vector' → logprob: -15.750166893005371

Token 485: 's' (ID: 82)
  Prédit: 'ectors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ectors' → logprob: -0.4770216643810272
    2. 's' → logprob: -0.9770216941833496
    3. 'ecs' → logprob: -6.47702169418335
    4. '(v' → logprob: -7.85202169418335
    5. '[(' → logprob: -8.477021217346191
    6. 'ec' → logprob: -8.727021217346191
    7. ')' → logprob: -8.852021217346191
    8. '(s' → logprob: -8.977021217346191
    9. 'ector' → logprob: -9.352021217346191
    10. 'ects' → logprob: -9.477021217346191

Token 486: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01828678697347641
    2. '):' → logprob: -4.01828670501709
    3. '):
' → logprob: -9.39328670501709
    4. '   ' → logprob: -9.89328670501709
    5. '):

' → logprob: -13.64328670501709
    6. ')' → logprob: -14.51828670501709
    7. '       ' → logprob: -15.26828670501709
    8. ':' → logprob: -15.51828670501709
    9. ' ):
' → logprob: -15.51828670501709
    10. ' ' → logprob: -15.76828670501709

Token 487: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06265854090452194
    2. '   ' → logprob: -2.9376585483551025
    3. ' return' → logprob: -5.062658309936523
    4. '    ' → logprob: -7.812658309936523
    5. '[' → logprob: -8.062658309936523
    6. '[::-' → logprob: -8.312658309936523
    7. 'return' → logprob: -8.437658309936523
    8. '	   ' → logprob: -9.562658309936523
    9. ' [' → logprob: -9.937658309936523
    10. ' reverse' → logprob: -10.312658309936523

Token 488: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5322625041007996
    2. 'return' → logprob: -1.1572625637054443
    3. '   ' → logprob: -2.4072625637054443
    4. '[-' → logprob: -6.157262325286865
    5. '[' → logprob: -6.407262325286865
    6. '       ' → logprob: -6.532262325286865
    7. ' [' → logprob: -6.782262325286865
    8. '[(' → logprob: -7.907262325286865
    9. '[::-' → logprob: -8.032262802124023
    10. ' [-' → logprob: -8.407262802124023

Token 489: ' Reverse' (ID: 48128)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.49258357286453247
    2. ' return' → logprob: -1.3675835132598877
    3. 'rev' → logprob: -3.1175835132598877
    4. 're' → logprob: -3.8675835132598877
    5. 'vs' → logprob: -3.9925835132598877
    6. ' rev' → logprob: -4.117583751678467
    7. ' vs' → logprob: -4.742583751678467
    8. '[-' → logprob: -5.367583751678467
    9. '   ' → logprob: -5.492583751678467
    10. 'rv' → logprob: -6.117583751678467

Token 490: ' order' (ID: 2569)
  Prédit: 'vs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vs' → logprob: -0.08915887773036957
    2. '[(' → logprob: -3.464158773422241
    3. 'return' → logprob: -4.33915901184082
    4. '_vs' → logprob: -4.58915901184082
    5. ' vs' → logprob: -4.96415901184082
    6. '[' → logprob: -4.96415901184082
    7. '[-' → logprob: -5.58915901184082
    8. ' =' → logprob: -5.83915901184082
    9. '   ' → logprob: -6.71415901184082
    10. 'v' → logprob: -6.71415901184082

Token 491: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.771680474281311
    2. ' and' → logprob: -1.646680474281311
    3. ',' → logprob: -2.2716803550720215
    4. '   ' → logprob: -2.6466803550720215
    5. ' vs' → logprob: -3.1466803550720215
    6. '=' → logprob: -3.2716803550720215
    7. 'vs' → logprob: -3.8966803550720215
    8. '       ' → logprob: -4.1466803550720215
    9. '[::-' → logprob: -4.5216803550720215
    10. 'd' → logprob: -5.2716803550720215

Token 492: ' invert' (ID: 57364)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.12286635488271713
    2. '[' → logprob: -2.24786639213562
    3. ' negate' → logprob: -5.372866153717041
    4. 'return' → logprob: -6.247866153717041
    5. '[(' → logprob: -6.497866153717041
    6. '[-' → logprob: -6.622866153717041
    7. ' [' → logprob: -8.3728666305542
    8. 'reverse' → logprob: -8.9978666305542
    9. '_neg' → logprob: -10.3728666305542
    10. ' return' → logprob: -10.6228666305542

Token 493: ' directions' (ID: 24921)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.2946953773498535
    2. 'the' → logprob: -2.1696953773498535
    3. 'vs' → logprob: -2.1696953773498535
    4. '[' → logprob: -2.2946953773498535
    5. 'vectors' → logprob: -2.2946953773498535
    6. ' each' → logprob: -2.4196953773498535
    7. 'each' → logprob: -2.7946953773498535
    8. ' the' → logprob: -2.9196953773498535
    9. 'all' → logprob: -3.5446953773498535
    10. ' all' → logprob: -4.2946953773498535

Token 494: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7920063734054565
    2. '   ' → logprob: -1.2920063734054565
    3. '[(' → logprob: -2.667006492614746
    4. '=' → logprob: -3.417006492614746
    5. '       ' → logprob: -3.542006492614746
    6. ' return' → logprob: -3.792006492614746
    7. ' [(' → logprob: -3.792006492614746
    8. '([(' → logprob: -3.792006492614746
    9. 'return' → logprob: -4.417006492614746
    10. '=[' → logprob: -4.667006492614746

Token 495: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3322083055973053
    2. '       ' → logprob: -2.4572083950042725
    3. ' =' → logprob: -2.5822083950042725
    4. '(v' → logprob: -2.7072083950042725
    5. '=' → logprob: -3.4572083950042725
    6. ' return' → logprob: -4.582208156585693
    7. ' vs' → logprob: -6.207208156585693
    8. 'vs' → logprob: -6.207208156585693
    9. 'return' → logprob: -6.457208156585693
    10. ' (' → logprob: -6.832208156585693

Token 496: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5321778059005737
    2. 'return' (adapté à ' return') → logprob: -0.9071778059005737
    3. '   ' → logprob: -5.657177925109863
    4. '[-' → logprob: -6.782177925109863
    5. '[(' → logprob: -6.907177925109863
    6. '[' → logprob: -7.532177925109863
    7. '[::-' → logprob: -7.532177925109863
    8. ' [' → logprob: -8.157177925109863
    9. ' [(' → logprob: -8.282177925109863
    10. 'vs' → logprob: -8.282177925109863

Token 497: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004228104837238789
    2. ' [' → logprob: -5.754228115081787
    3. '[(' → logprob: -6.879228115081787
    4. '[((' → logprob: -11.129227638244629
    5. '[-' → logprob: -13.129227638244629
    6. '   ' → logprob: -13.504227638244629
    7. ' [(' → logprob: -13.879227638244629
    8. ' ' → logprob: -14.129227638244629
    9. '[v' → logprob: -14.754227638244629
    10. '[::-' → logprob: -15.629227638244629

Token 498: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -3.128163257315464e-07
    2. '((-' → logprob: -15.5
    3. '(-(' → logprob: -17.25
    4. ' (-' → logprob: -18.0
    5. '(' → logprob: -18.125
    6. '(dx' → logprob: -19.125
    7. '   ' → logprob: -19.75
    8. '[-' → logprob: -21.875
    9. '=(-' → logprob: -23.125
    10. '-' → logprob: -23.375

Token 499: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -4.127333340875339e-06
    2. 'vx' → logprob: -12.500003814697266
    3. ' dx' → logprob: -15.000003814697266
    4. '   ' → logprob: -16.750003814697266
    5. 'x' → logprob: -17.625003814697266
    6. 'v' → logprob: -18.625003814697266
    7. '_dx' → logprob: -18.625003814697266
    8. '```' → logprob: -18.625003814697266
    9. '(dx' → logprob: -18.875003814697266
    10. 'd' → logprob: -19.750003814697266

Token 500: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002263046189909801
    2. ' ,' → logprob: -8.875226020812988
    3. ',-' → logprob: -9.375226020812988
    4. ',
' → logprob: -14.000226020812988
    5. ' ,-' → logprob: -14.875226020812988
    6. 'dx' → logprob: -16.000226974487305
    7. ',d' → logprob: -16.625226974487305
    8. 'dy' → logprob: -17.625226974487305
    9. '   ' → logprob: -17.625226974487305
    10. '```' → logprob: -18.250226974487305

Token 501: ' -' (ID: 533)
  Prédit: '-d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-d' → logprob: -0.02997957542538643
    2. ' -' → logprob: -3.5299794673919678
    3. '-' → logprob: -8.404979705810547
    4. '-D' → logprob: -13.654979705810547
    5. 'dy' → logprob: -14.404979705810547
    6. '-dd' → logprob: -14.904979705810547
    7. '-by' → logprob: -15.029979705810547
    8. '-д' → logprob: -15.029979705810547
    9. '   ' → logprob: -15.154979705810547
    10. '-db' → logprob: -15.154979705810547

Token 502: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.000205566844670102
    2. 'dx' → logprob: -8.500205993652344
    3. ' dy' → logprob: -13.125205993652344
    4. 'd' → logprob: -16.625205993652344
    5. 'dz' → logprob: -18.000205993652344
    6. 'dp' → logprob: -18.625205993652344
    7. 'Dy' → logprob: -18.875205993652344
    8. 'dt' → logprob: -19.125205993652344
    9. ')' → logprob: -19.375205993652344
    10. 'ds' → logprob: -20.000205993652344

Token 503: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.688212614681106e-05
    2. ' )' → logprob: -11.125017166137695
    3. ')
' → logprob: -13.875017166137695
    4. 'for' → logprob: -14.625017166137695
    5. 'v' → logprob: -15.125017166137695
    6. '   ' → logprob: -16.125017166137695
    7. ')v' → logprob: -16.125017166137695
    8. '[::-' → logprob: -16.250017166137695
    9. ' for' → logprob: -17.500017166137695
    10. ')]' → logprob: -17.750017166137695

Token 504: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.023794956505298615
    2. 'for' → logprob: -3.7737948894500732
    3. ')' → logprob: -7.523795127868652
    4. '   ' → logprob: -12.023795127868652
    5. '       ' → logprob: -13.898795127868652
    6. '	for' → logprob: -14.148795127868652
    7. ' )' → logprob: -14.523795127868652
    8. ' ' → logprob: -14.773795127868652
    9. '    ' → logprob: -15.273795127868652
    10. '  ' → logprob: -16.398794174194336

Token 505: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.013412684202194214
    2. ' dx' → logprob: -5.5134124755859375
    3. '(dx' → logprob: -5.5134124755859375
    4. 'vs' → logprob: -5.6384124755859375
    5. 're' → logprob: -6.6384124755859375
    6. ' (' → logprob: -8.888412475585938
    7. '(re' → logprob: -9.138412475585938
    8. ' reversed' → logprob: -9.513412475585938
    9. ' vs' → logprob: -10.263412475585938
    10. 'vx' → logprob: -11.013412475585938

Token 506: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9743012671824545e-05
    2. 'dy' → logprob: -11.250020027160645
    3. ' ,' → logprob: -12.750020027160645
    4. 'in' → logprob: -13.250020027160645
    5. ',d' → logprob: -14.500020027160645
    6. 'vs' → logprob: -15.000020027160645
    7. '_,' → logprob: -15.250020027160645
    8. ',
' → logprob: -15.500020027160645
    9. ' in' → logprob: -16.000019073486328
    10. 's' → logprob: -16.250019073486328

Token 507: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.047491081058979034
    2. 're' → logprob: -3.4224910736083984
    3. 'vs' → logprob: -4.297491073608398
    4. ' dy' → logprob: -9.547491073608398
    5. ' reversed' → logprob: -10.672491073608398
    6. 'dx' → logprob: -10.922491073608398
    7. 'ds' → logprob: -11.297491073608398
    8. '(re' → logprob: -11.422491073608398
    9. ' vs' → logprob: -12.922491073608398
    10. ',' → logprob: -13.297491073608398

Token 508: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5231691002845764
    2. 'in' → logprob: -0.8981691002845764
    3. 'vs' → logprob: -10.77316951751709
    4. 'v' → logprob: -11.64816951751709
    5. ')' → logprob: -12.52316951751709
    6. 's' → logprob: -12.89816951751709
    7. '[::-' → logprob: -13.39816951751709
    8. ' ' → logprob: -13.52316951751709
    9. ',' → logprob: -13.52316951751709
    10. ']' → logprob: -14.27316951751709

Token 509: ' reversed' (ID: 57184)
  Prédit: 'vs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vs' → logprob: -0.10499551892280579
    2. 're' → logprob: -2.3549954891204834
    3. ' reversed' → logprob: -5.9799957275390625
    4. ' vs' → logprob: -6.1049957275390625
    5. '(re' → logprob: -12.354995727539062
    6. 'rev' → logprob: -12.729995727539062
    7. 'v' → logprob: -12.979995727539062
    8. '_vs' → logprob: -13.479995727539062
    9. 'Vs' → logprob: -13.979995727539062
    10. 'versed' → logprob: -14.104995727539062

Token 510: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.02379193902015686
    2. 'vs' → logprob: -3.773792028427124
    3. ' vs' → logprob: -7.523791790008545
    4. 'v' → logprob: -13.148792266845703
    5. '_vs' → logprob: -13.398792266845703
    6. '(' → logprob: -13.773792266845703
    7. ' (' → logprob: -13.898792266845703
    8. ']' → logprob: -15.273792266845703
    9. ')' → logprob: -15.273792266845703
    10. '.v' → logprob: -16.398792266845703

Token 511: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -6.957014556974173e-05
    2. ')s' → logprob: -10.000069618225098
    3. 'ectors' → logprob: -11.250069618225098
    4. ')' → logprob: -12.625069618225098
    5. 'vs' → logprob: -13.125069618225098
    6. '(s' → logprob: -13.500069618225098
    7. 'с' → logprob: -14.750069618225098
    8. '}s' → logprob: -14.750069618225098
    9. '   ' → logprob: -15.125069618225098
    10. '[s' → logprob: -15.250069618225098

Token 512: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.319370302458992e-06
    2. ')]
' → logprob: -13.375005722045898
    3. ')' → logprob: -13.875005722045898
    4. ' )' → logprob: -14.000005722045898
    5. '])]' → logprob: -14.625005722045898
    6. ')])' → logprob: -14.750005722045898
    7. '   ' → logprob: -15.000005722045898
    8. ']' → logprob: -15.250005722045898
    9. '')]' → logprob: -16.1250057220459
    10. '")]' → logprob: -16.3750057220459

Token 513: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18875949084758759
    2. '    
' → logprob: -2.1887595653533936
    3. '<|end|>' → logprob: -2.9387595653533936
    4. ')' → logprob: -5.9387593269348145
    5. '<|end|>' → logprob: -6.3137593269348145
    6. 'tokens' → logprob: -7.1887593269348145
    7. '
' → logprob: -7.9387593269348145
    8. 'return' → logprob: -8.063759803771973
    9. '  
' → logprob: -8.563759803771973
    10. ' points' → logprob: -8.813759803771973

Token 514: '   ' (ID: 271)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3034389913082123
    2. '   ' → logprob: -1.5534390211105347
    3. ' candidates' → logprob: -3.803438901901245
    4. 'all' → logprob: -4.178439140319824
    5. 'normalized' → logprob: -5.428439140319824
    6. 'best' → logprob: -5.553439140319824
    7. 'candidate' → logprob: -6.803439140319824
    8. '    
' → logprob: -7.178439140319824
    9. '#' → logprob: -7.428439140319824
    10. ' best' → logprob: -8.053439140319824

Token 515: ' all' (ID: 722)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4974585175514221
    2. 'all' (adapté à ' all') → logprob: -0.9974585175514221
    3. 'normalized' → logprob: -4.247458457946777
    4. '#' → logprob: -5.872458457946777
    5. 'candidate' → logprob: -6.122458457946777
    6. 'sh' → logprob: -6.747458457946777
    7. '   ' → logprob: -7.497458457946777
    8. ' candidates' → logprob: -7.622458457946777
    9. 'options' → logprob: -7.872458457946777
    10. 'trans' → logprob: -8.247458457946777

Token 516: '_vari' (ID: 94080)
  Prédit: '_or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_or' → logprob: -0.0681028738617897
    2. '_vectors' → logprob: -3.5681028366088867
    3. '_vari' → logprob: -4.318102836608887
    4. '_versions' → logprob: -5.068102836608887
    5. '_transform' → logprob: -5.193102836608887
    6. '_trans' → logprob: -5.318102836608887
    7. '_' → logprob: -5.568102836608887
    8. '_sequences' → logprob: -6.193102836608887
    9. ' =' → logprob: -7.693102836608887
    10. '_candidates' → logprob: -8.193102836608887

Token 517: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.3868849575519562
    2. 'ations' → logprob: -1.1368849277496338
    3. 'ANTS' → logprob: -12.136884689331055
    4. 'antes' → logprob: -12.761884689331055
    5. 'ATIONS' → logprob: -13.261884689331055
    6. 'ables' → logprob: -13.386884689331055
    7. 'ant' → logprob: -13.761884689331055
    8. ' ants' → logprob: -15.011884689331055
    9. 'ans' → logprob: -16.011884689331055
    10. '=' → logprob: -16.136884689331055

Token 518: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022665798664093
    2. '=' → logprob: -1.9102267026901245
    3. '=[]' → logprob: -13.410226821899414
    4. '   ' → logprob: -14.410226821899414
    5. ')' → logprob: -15.910226821899414
    6. ',' → logprob: -16.410226821899414
    7. ' =[' → logprob: -16.910226821899414
    8. ' ' → logprob: -17.035226821899414
    9. 's' → logprob: -17.035226821899414
    10. '[' → logprob: -17.410226821899414

Token 519: ' []
' (ID: 8911)
  Prédit: 'orient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orient' → logprob: -0.6747972965240479
    2. '[]
' → logprob: -1.1747972965240479
    3. '[]' → logprob: -2.299797296524048
    4. ' orientations' → logprob: -2.799797296524048
    5. '[' → logprob: -4.674797058105469
    6. 'or' → logprob: -5.424797058105469
    7. ' []
' → logprob: -5.674797058105469
    8. '[]

' → logprob: -6.924797058105469
    9. ' []' → logprob: -7.049797058105469
    10. '   ' → logprob: -7.299797058105469

Token 520: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20846396684646606
    2. 'for' → logprob: -1.7084639072418213
    3. 'all' → logprob: -5.5834641456604
    4. ' for' → logprob: -6.0834641456604
    5. '    
' → logprob: -7.5834641456604
    6. '
' → logprob: -7.8334641456604
    7. ' all' → logprob: -10.208463668823242
    8. '```' → logprob: -11.208463668823242
    9. '(all' → logprob: -12.083463668823242
    10. '[' → logprob: -12.458463668823242

Token 521: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0003488129877950996
    2. '   ' → logprob: -8.000349044799805
    3. ' for' → logprob: -12.000349044799805
    4. 'all' → logprob: -12.000349044799805
    5. '
' → logprob: -14.000349044799805
    6. '    
' → logprob: -16.375349044799805
    7. '	for' → logprob: -17.250349044799805
    8. '```' → logprob: -17.625349044799805
    9. '#' → logprob: -19.875349044799805
    10. '  
' → logprob: -20.500349044799805

Token 522: ' ori' (ID: 45973)
  Prédit: 'vs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vs' → logprob: -0.09037955850362778
    2. 'ori' → logprob: -2.840379476547241
    3. 'orientation' → logprob: -3.965379476547241
    4. 'vec' → logprob: -5.71537971496582
    5. 'or' → logprob: -6.21537971496582
    6. 'orient' → logprob: -6.34037971496582
    7. 'v' → logprob: -6.96537971496582
    8. 'orig' → logprob: -7.96537971496582
    9. ' ori' → logprob: -8.21537971496582
    10. ' vs' → logprob: -9.09037971496582

Token 523: ' in' (ID: 306)
  Prédit: 'entation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entation' → logprob: -0.5939757823944092
    2. 'ent' → logprob: -1.0939757823944092
    3. ' in' → logprob: -2.218975782394409
    4. 'nt' → logprob: -6.093976020812988
    5. 's' → logprob: -7.718976020812988
    6. 'n' → logprob: -7.718976020812988
    7. 'd' → logprob: -7.843976020812988
    8. 't' → logprob: -9.093976020812988
    9. 'ration' → logprob: -9.468976020812988
    10. 'in' → logprob: -9.718976020812988

Token 524: ' orientations' (ID: 149573)
  Prédit: 'orient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orient' → logprob: -0.0003391574718989432
    2. ' orientations' → logprob: -8.00033950805664
    3. '[' → logprob: -12.62533950805664
    4. 'or' → logprob: -15.12533950805664
    5. ' orient' → logprob: -17.00033950805664
    6. 'orientation' → logprob: -17.25033950805664
    7. 'Orient' → logprob: -17.25033950805664
    8. '(' → logprob: -17.87533950805664
    9. '   ' → logprob: -18.12533950805664
    10. ' [' → logprob: -19.00033950805664

Token 525: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0218343585729599
    2. ':
' → logprob: -4.146834373474121
    3. '       ' → logprob: -5.396834373474121
    4. '   ' → logprob: -7.521834373474121
    5. '):' → logprob: -7.896834373474121
    6. '):
' → logprob: -8.646834373474121
    7. ',' → logprob: -10.021834373474121
    8. ' =' → logprob: -10.521834373474121
    9. '=' → logprob: -10.646834373474121
    10. '[' → logprob: -10.896834373474121

Token 526: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018703153356909752
    2. '   ' → logprob: -4.393702983856201
    3. 'all' → logprob: -5.518702983856201
    4. ' all' → logprob: -6.268702983856201
    5. '
' → logprob: -9.14370346069336
    6. '```' → logprob: -9.51870346069336
    7. '	all' → logprob: -10.76870346069336
    8. ' for' → logprob: -10.89370346069336
    9. '):
' → logprob: -11.51870346069336
    10. 'for' → logprob: -11.51870346069336

Token 527: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' (adapté à ' all') → logprob: -0.29367226362228394
    2. '       ' → logprob: -2.1686723232269287
    3. ' all' → logprob: -2.5436723232269287
    4. '   ' → logprob: -2.7936723232269287
    5. 'for' → logprob: -9.543672561645508
    6. '
' → logprob: -9.543672561645508
    7. '           ' → logprob: -9.668672561645508
    8. '	all' → logprob: -9.918672561645508
    9. ' for' → logprob: -10.043672561645508
    10. ' ' → logprob: -10.918672561645508

Token 528: '_vari' (ID: 94080)
  Prédit: '_vari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vari' → logprob: -6.869017852295656e-06
    2. '.append' → logprob: -13.000006675720215
    3. '_versions' → logprob: -13.125006675720215
    4. '_variant' → logprob: -14.375006675720215
    5. '   ' → logprob: -14.750006675720215
    6. '_variables' → logprob: -15.000006675720215
    7. 'variants' → logprob: -15.125006675720215
    8. '_var' → logprob: -15.250006675720215
    9. '_vectors' → logprob: -15.375006675720215
    10. '.' → logprob: -16.37500762939453

Token 529: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.0044696396216750145
    2. 'ents' → logprob: -5.504469871520996
    3. 's' → logprob: -8.879469871520996
    4. 'nts' → logprob: -9.379469871520996
    5. 'ts' → logprob: -9.629469871520996
    6. 'onts' → logprob: -10.379469871520996
    7. 'ots' → logprob: -10.879469871520996
    8. 'ors' → logprob: -11.004469871520996
    9. 'ats' → logprob: -11.504469871520996
    10. 'orts' → logprob: -11.879469871520996

Token 530: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0032361785415560007
    2. '.' → logprob: -5.753236293792725
    3. '.extend' → logprob: -9.878235816955566
    4. ' .' → logprob: -12.128235816955566
    5. 'append' → logprob: -13.878235816955566
    6. '.app' → logprob: -14.503235816955566
    7. '.ap' → logprob: -15.878235816955566
    8. ').' → logprob: -16.378236770629883
    9. '.push' → logprob: -16.878236770629883
    10. '_append' → logprob: -17.378236770629883

Token 531: '(' (ID: 7)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.20977114140987396
    2. '(' → logprob: -1.7097711563110352
    3. 'vectors' → logprob: -4.834771156311035
    4. 'ori' → logprob: -8.584771156311035
    5. '(or' → logprob: -9.709771156311035
    6. '(vertices' → logprob: -10.959771156311035
    7. '(vector' → logprob: -11.084771156311035
    8. ' vectors' → logprob: -11.459771156311035
    9. '(orig' → logprob: -11.709771156311035
    10. '((' → logprob: -11.834771156311035

Token 532: 'orientation' (ID: 65957)
  Prédit: 'vectors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vectors' → logprob: -0.15269458293914795
    2. 'ori' → logprob: -2.0276947021484375
    3. ' vectors' → logprob: -4.7776947021484375
    4. ' ori' → logprob: -6.7776947021484375
    5. 'vector' → logprob: -9.652694702148438
    6. 'vec' → logprob: -9.777694702148438
    7. 'orient' → logprob: -9.902694702148438
    8. '   ' → logprob: -10.152694702148438
    9. 'Vectors' → logprob: -10.902694702148438
    10. 'vs' → logprob: -10.902694702148438

Token 533: '_points' (ID: 30070)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0001737431448418647
    2. 'r' → logprob: -10.125173568725586
    3. ')' → logprob: -10.250173568725586
    4. 'i' → logprob: -10.500173568725586
    5. '```' → logprob: -10.625173568725586
    6. 'n' → logprob: -11.875173568725586
    7. '[' → logprob: -12.125173568725586
    8. 'z' → logprob: -12.250173568725586
    9. '[i' → logprob: -12.250173568725586
    10. '[]' → logprob: -13.000173568725586

Token 534: ' :=' (ID: 3405)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05626805126667023
    2. '(' → logprob: -3.0562679767608643
    3. '=' → logprob: -5.306268215179443
    4. '_to' → logprob: -6.431268215179443
    5. ' =' → logprob: -8.181267738342285
    6. '[' → logprob: -8.556267738342285
    7. ')' → logprob: -8.931267738342285
    8. 'to' → logprob: -9.431267738342285
    9. 'To' → logprob: -9.431267738342285
    10. 'vectors' → logprob: -9.556267738342285

Token 535: ' vectors' (ID: 52254)
  Prédit: 'vectors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vectors' → logprob: -0.04889221861958504
    2. ' vectors' → logprob: -3.0488922595977783
    3. '   ' → logprob: -8.6738920211792
    4. '       ' → logprob: -9.2988920211792
    5. '[' → logprob: -11.2988920211792
    6. '[v' → logprob: -11.5488920211792
    7. '           ' → logprob: -12.2988920211792
    8. ' ' → logprob: -12.5488920211792
    9. '_vectors' → logprob: -13.2988920211792
    10. '    ' → logprob: -13.6738920211792

Token 536: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -8.625866030342877e-05
    2. 'to' → logprob: -9.500085830688477
    3. 'To' → logprob: -12.750085830688477
    4. ')' → logprob: -12.875085830688477
    5. '=' → logprob: -13.875085830688477
    6. '_points' → logprob: -14.375085830688477
    7. '   ' → logprob: -14.375085830688477
    8. ' to' → logprob: -14.375085830688477
    9. 'tolist' → logprob: -14.375085830688477
    10. 't' → logprob: -14.750085830688477

Token 537: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.06213931739330292
    2. 'points' → logprob: -2.8121392726898193
    3. 'oints' → logprob: -8.937139511108398
    4. ' points' → logprob: -10.687139511108398
    5. '(points' → logprob: -12.187139511108398
    6. '_pts' → logprob: -13.312139511108398
    7. '```' → logprob: -13.312139511108398
    8. 'Points' → logprob: -13.562139511108398
    9. 'pts' → logprob: -13.562139511108398
    10. '	points' → logprob: -13.937139511108398

Token 538: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.896309739408025e-07
    2. '((' → logprob: -15.000000953674316
    3. ' (' → logprob: -15.250000953674316
    4. ')' → logprob: -16.0
    5. '[' → logprob: -17.375
    6. '([' → logprob: -17.75
    7. ')(' → logprob: -18.375
    8. '(
' → logprob: -18.625
    9. '   ' → logprob: -19.375
    10. '`' → logprob: -19.625

Token 539: 'ori' (ID: 6510)
  Prédit: 'ori'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ori' → logprob: -0.03436100482940674
    2. '(' → logprob: -3.409360885620117
    3. ' ori' → logprob: -8.284360885620117
    4. 'orientation' → logprob: -8.909360885620117
    5. '[' → logprob: -9.034360885620117
    6. ')' → logprob: -9.034360885620117
    7. '   ' → logprob: -10.409360885620117
    8. '_ori' → logprob: -12.284360885620117
    9. '```' → logprob: -12.534360885620117
    10. ' ' → logprob: -12.659360885620117

Token 540: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8135731220245361
    2. '))' → logprob: -1.3135731220245361
    3. '))
' → logprob: -1.5635731220245361
    4. ')
' → logprob: -2.563573122024536
    5. '       ' → logprob: -6.563572883605957
    6. '   ' → logprob: -11.563572883605957
    7. '())
' → logprob: -12.063572883605957
    8. '))
' → logprob: -12.313572883605957
    9. '())' → logprob: -12.563572883605957
    10. ')
' → logprob: -12.688572883605957

Token 541: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02235594019293785
    2. ' all' → logprob: -4.397356033325195
    3. 'all' → logprob: -4.897356033325195
    4. '   ' → logprob: -6.147356033325195
    5. '(all' → logprob: -9.397356033325195
    6. '
' → logprob: -10.397356033325195
    7. '<|end|>' → logprob: -11.022356033325195
    8. ',' → logprob: -11.272356033325195
    9. ')' → logprob: -11.272356033325195
    10. '```' → logprob: -11.647356033325195

Token 542: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' (adapté à ' all') → logprob: -0.00013929695705883205
    2. '   ' → logprob: -9.500139236450195
    3. ' all' → logprob: -9.875139236450195
    4. '       ' → logprob: -11.625139236450195
    5. '
' → logprob: -12.625139236450195
    6. '	all' → logprob: -14.875139236450195
    7. '           ' → logprob: -16.750139236450195
    8. '    
' → logprob: -17.125139236450195
    9. '        
' → logprob: -17.125139236450195
    10. ' ' → logprob: -17.750139236450195

Token 543: '_vari' (ID: 94080)
  Prédit: '_vari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vari' → logprob: -0.00019328886992298067
    2. 'variants' → logprob: -8.62519359588623
    3. 'Variants' → logprob: -12.50019359588623
    4. '_versions' → logprob: -12.62519359588623
    5. 'vari' → logprob: -13.87519359588623
    6. 'var' → logprob: -14.00019359588623
    7. '_variables' → logprob: -15.12519359588623
    8. '_variant' → logprob: -15.12519359588623
    9. '.append' → logprob: -15.12519359588623
    10. '=' → logprob: -15.12519359588623

Token 544: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -3.774276774493046e-05
    2. 'ables' → logprob: -11.625038146972656
    3. 'ents' → logprob: -12.000038146972656
    4. 'ates' → logprob: -12.625038146972656
    5. 'nts' → logprob: -12.625038146972656
    6. 'ations' → logprob: -12.750038146972656
    7. 'ANTS' → logprob: -12.875038146972656
    8. 'ts' → logprob: -13.125038146972656
    9. ' ants' → logprob: -13.625038146972656
    10. 'ats' → logprob: -14.000038146972656

Token 545: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0012671363074332476
    2. '.' → logprob: -7.251266956329346
    3. '.extend' → logprob: -7.501266956329346
    4. '.app' → logprob: -12.751267433166504
    5. ').' → logprob: -14.001267433166504
    6. '.add' → logprob: -15.126267433166504
    7. ' .' → logprob: -15.501267433166504
    8. '.ap' → logprob: -15.876267433166504
    9. '.push' → logprob: -16.376266479492188
    10. 'append' → logprob: -17.376266479492188

Token 546: '(reverse' (ID: 110806)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.018158020451664925
    2. '(' → logprob: -4.018157958984375
    3. 'vectors' → logprob: -12.143157958984375
    4. 'orientation' → logprob: -13.643157958984375
    5. '(
' → logprob: -14.768157958984375
    6. ' (' → logprob: -15.143157958984375
    7. ' vectors' → logprob: -15.393157958984375
    8. '((' → logprob: -15.518157958984375
    9. '(vector' → logprob: -15.643157958984375
    10. 'v' → logprob: -16.268157958984375

Token 547: '_points' (ID: 30070)
  Prédit: '_vectors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vectors' → logprob: -0.0003273600013926625
    2. '_' → logprob: -8.250327110290527
    3. '_points' → logprob: -10.750327110290527
    4. '_orientation' → logprob: -11.000327110290527
    5. '```' → logprob: -12.250327110290527
    6. ')_' → logprob: -12.625327110290527
    7. 'vectors' → logprob: -12.750327110290527
    8. '_vector' → logprob: -13.125327110290527
    9. 's' → logprob: -13.250327110290527
    10. '_tokens' → logprob: -13.250327110290527

Token 548: ' :=' (ID: 3405)
  Prédit: ' :='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :=' → logprob: -0.25500163435935974
    2. ' =' → logprob: -2.3800015449523926
    3. '=' → logprob: -2.6300015449523926
    4. ':=' → logprob: -3.1300015449523926
    5. '(' → logprob: -4.255001544952393
    6. '(v' → logprob: -6.880001544952393
    7. '   ' → logprob: -7.380001544952393
    8. ' (' → logprob: -8.75500202178955
    9. ')' → logprob: -9.13000202178955
    10. '=(' → logprob: -9.25500202178955

Token 549: ' vectors' (ID: 52254)
  Prédit: 'vectors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vectors' → logprob: -0.47437793016433716
    2. ' vectors' → logprob: -0.9743779301643372
    3. '   ' → logprob: -8.599377632141113
    4. '       ' → logprob: -9.974377632141113
    5. ' ' → logprob: -10.974377632141113
    6. 'vector' → logprob: -11.474377632141113
    7. '           ' → logprob: -11.724377632141113
    8. '(v' → logprob: -12.224377632141113
    9. 'v' → logprob: -12.224377632141113
    10. '_vectors' → logprob: -12.599377632141113

Token 550: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -5.438573680294212e-06
    2. 'to' → logprob: -12.875005722045898
    3. 'To' → logprob: -13.000005722045898
    4. '(' → logprob: -16.0000057220459
    5. ')' → logprob: -16.2500057220459
    6. '=' → logprob: -16.8750057220459
    7. '```' → logprob: -17.2500057220459
    8. '
' → logprob: -17.3750057220459
    9. 'reverse' → logprob: -17.3750057220459
    10. '_TO' → logprob: -17.6250057220459

Token 551: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.008959861472249031
    2. 'points' → logprob: -4.758959770202637
    3. 'oints' → logprob: -8.008959770202637
    4. '_vectors' → logprob: -12.508959770202637
    5. 'vectors' → logprob: -12.633959770202637
    6. 'reverse' → logprob: -12.758959770202637
    7. ' points' → logprob: -14.008959770202637
    8. 'Points' → logprob: -14.133959770202637
    9. '(points' → logprob: -14.758959770202637
    10. '_POINTS' → logprob: -14.883959770202637

Token 552: '(reverse' (ID: 110806)
  Prédit: '(reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -2.093505099765025e-05
    2. '(' → logprob: -11.250020980834961
    3. 'reverse' → logprob: -12.500020980834961
    4. ' (' → logprob: -13.000020980834961
    5. '((' → logprob: -14.000020980834961
    6. ')' → logprob: -14.250020980834961
    7. '(return' → logprob: -16.50002098083496
    8. '   ' → logprob: -16.62502098083496
    9. '```' → logprob: -16.75002098083496
    10. ' reverse' → logprob: -17.50002098083496

Token 553: '_vectors' (ID: 129121)
  Prédit: '_vectors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vectors' → logprob: -5.073596548754722e-05
    2. '_' → logprob: -10.25005054473877
    3. 'vectors' → logprob: -11.50005054473877
    4. '_orientation' → logprob: -13.25005054473877
    5. 'orientation' → logprob: -13.37505054473877
    6. 'Vectors' → logprob: -14.25005054473877
    7. '_vertices' → logprob: -14.87505054473877
    8. '```' → logprob: -15.62505054473877
    9. '\' → logprob: -15.75005054473877
    10. '(' → logprob: -16.375051498413086

Token 554: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. ' (' → logprob: -18.25
    3. ')' → logprob: -18.375
    4. 'ori' → logprob: -19.5
    5. '(origin' → logprob: -20.25
    6. '((' → logprob: -20.5
    7. '(
' → logprob: -20.875
    8. ')(' → logprob: -21.375
    9. '```' → logprob: -21.875
    10. '(v' → logprob: -22.0

Token 555: 'ori' (ID: 6510)
  Prédit: 'ori'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ori' → logprob: -1.0206720617134124e-05
    2. 'orientation' → logprob: -12.12501049041748
    3. '(' → logprob: -12.87501049041748
    4. ')' → logprob: -13.87501049041748
    5. ' ori' → logprob: -14.37501049041748
    6. 'vs' → logprob: -15.62501049041748
    7. 'oro' → logprob: -16.125009536743164
    8. '[' → logprob: -16.625009536743164
    9. 'oi' → logprob: -16.875009536743164
    10. '```' → logprob: -17.125009536743164

Token 556: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0010438859462738037
    2. '))' → logprob: -6.876043796539307
    3. '))))' → logprob: -12.376044273376465
    4. ')))
' → logprob: -12.376044273376465
    5. ')' → logprob: -13.751044273376465
    6. '   ' → logprob: -14.251044273376465
    7. ' ' → logprob: -15.126044273376465
    8. '       ' → logprob: -15.251044273376465
    9. ')));' → logprob: -16.00104331970215
    10. ')))

' → logprob: -16.12604331970215

Token 557: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07463976740837097
    2. '
' → logprob: -3.1996397972106934
    3. '    
' → logprob: -3.8246397972106934
    4. 'return' → logprob: -5.199639797210693
    5. 'best' → logprob: -6.324639797210693
    6. '```' → logprob: -7.449639797210693
    7. ' return' → logprob: -8.199639320373535
    8. 'min' → logprob: -8.199639320373535
    9. 'result' → logprob: -8.449639320373535
    10. 'normalized' → logprob: -8.574639320373535

Token 558: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03316193446516991
    2. '
' → logprob: -4.1581621170043945
    3. 'return' → logprob: -4.1581621170043945
    4. '    
' → logprob: -7.1581621170043945
    5. 'best' → logprob: -8.908162117004395
    6. ' return' → logprob: -9.033162117004395
    7. 'result' → logprob: -9.533162117004395
    8. '```' → logprob: -9.533162117004395
    9. 'normalized' → logprob: -9.783162117004395
    10. '#' → logprob: -9.783162117004395

Token 559: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5723245739936829
    2. '   ' → logprob: -1.197324514389038
    3. '#' (adapté à ' #') → logprob: -2.197324514389038
    4. 'best' → logprob: -4.947324752807617
    5. 'normalized' → logprob: -5.322324752807617
    6. 'result' → logprob: -5.322324752807617
    7. 'min' → logprob: -5.947324752807617
    8. '
' → logprob: -6.072324752807617
    9. '    
' → logprob: -8.447324752807617
    10. ' return' → logprob: -8.447324752807617

Token 560: ' For' (ID: 2214)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8823742270469666
    2. 'return' → logprob: -0.8823742270469666
    3. 'normalized' → logprob: -2.0073742866516113
    4. 'min' → logprob: -4.007374286651611
    5. 'best' → logprob: -4.882374286651611
    6. 'result' → logprob: -5.632374286651611
    7. 'all' → logprob: -6.132374286651611
    8. 'Normalize' → logprob: -6.257374286651611
    9. 'normalize' → logprob: -6.507374286651611
    10. 'Return' → logprob: -7.257374286651611

Token 561: ' each' (ID: 2454)
  Prédit: 'variant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'variant' → logprob: -0.33723771572113037
    2. 'candidate' → logprob: -2.33723783493042
    3. 'normalized' → logprob: -3.08723783493042
    4. ' variant' → logprob: -3.08723783493042
    5. 'shape' → logprob: -3.58723783493042
    6. 'all' → logprob: -3.83723783493042
    7. 'norm' → logprob: -4.46223783493042
    8. 'pt' → logprob: -4.96223783493042
    9. 'p' → logprob: -5.33723783493042
    10. ' candidate' → logprob: -5.33723783493042

Token 562: ' variant' (ID: 16914)
  Prédit: 'variant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variant' → logprob: -0.8253058195114136
    2. 'seq' → logprob: -1.5753058195114136
    3. 'pts' → logprob: -1.8253058195114136
    4. 'shape' → logprob: -2.325305938720703
    5. 'points' → logprob: -2.950305938720703
    6. 'sequence' → logprob: -3.325305938720703
    7. ' variant' → logprob: -5.700305938720703
    8. 'candidate' → logprob: -6.825305938720703
    9. ' pts' → logprob: -7.325305938720703
    10. 'pt' → logprob: -7.450305938720703

Token 563: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7809737324714661
    2. 'in' → logprob: -1.4059736728668213
    3. '   ' → logprob: -2.0309736728668213
    4. ' in' → logprob: -2.4059736728668213
    5. '_points' → logprob: -3.0309736728668213
    6. ':' → logprob: -4.2809739112854
    7. 'sequence' → logprob: -5.5309739112854
    8. 'points' → logprob: -5.6559739112854
    9. '_pts' → logprob: -6.9059739112854
    10. ':
' → logprob: -7.2809739112854

Token 564: 'list' (ID: 2641)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.26295626163482666
    2. 'variant' → logprob: -1.7629562616348267
    3. 'points' → logprob: -3.262956142425537
    4. ' pts' → logprob: -4.387956142425537
    5. ' variant' → logprob: -5.387956142425537
    6. 'seq' → logprob: -7.012956142425537
    7. 'shape' → logprob: -7.137956142425537
    8. '   ' → logprob: -7.762956142425537
    9. 'coords' → logprob: -7.887956142425537
    10. ' points' → logprob: -8.137956619262695

Token 565: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.2748027443885803
    2. ' of' → logprob: -2.0248026847839355
    3. 'in' → logprob: -3.0248026847839355
    4. ' in' → logprob: -3.5248026847839355
    5. '_points' → logprob: -4.1498026847839355
    6. '   ' → logprob: -4.8998026847839355
    7. '_of' → logprob: -6.3998026847839355
    8. '=' → logprob: -6.5248026847839355
    9. ')' → logprob: -7.0248026847839355
    10. ' =' → logprob: -7.1498026847839355

Token 566: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0904838889837265
    2. '(points' → logprob: -2.5904839038848877
    3. '(' → logprob: -4.965483665466309
    4. ' points' → logprob: -5.590483665466309
    5. '(x' → logprob: -7.965483665466309
    6. ' (' → logprob: -8.840483665466309
    7. ' tuples' → logprob: -9.090483665466309
    8. '(int' → logprob: -9.590483665466309
    9. 'pts' → logprob: -10.215483665466309
    10. 'tu' → logprob: -10.590483665466309

Token 567: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.12925666570663452
    2. '   ' → logprob: -3.5042567253112793
    3. ' in' → logprob: -3.6292567253112793
    4. 'in' → logprob: -3.7542567253112793
    5. '):
' → logprob: -4.129256725311279
    6. '):' → logprob: -4.254256725311279
    7. ',' → logprob: -5.129256725311279
    8. ')' → logprob: -5.504256725311279
    9. ':' → logprob: -9.379256248474121
    10. ' ),' → logprob: -9.629256248474121

Token 568: ' translate' (ID: 24888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9207401275634766
    2. '#' → logprob: -1.6707401275634766
    3. 'min' → logprob: -1.6707401275634766
    4. 'normalized' → logprob: -2.0457401275634766
    5. 'candidate' → logprob: -3.7957401275634766
    6. 'all' → logprob: -4.045740127563477
    7. 'for' → logprob: -4.670740127563477
    8. 'sorted' → logprob: -4.795740127563477
    9. 'find' → logprob: -5.170740127563477
    10. 'choose' → logprob: -5.170740127563477

Token 569: ' so' (ID: 813)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.17662212252616882
    2. ' all' → logprob: -2.051622152328491
    3. '_points' → logprob: -4.301621913909912
    4. 'each' → logprob: -5.676621913909912
    5. 'to' → logprob: -5.801621913909912
    6. 's' → logprob: -6.176621913909912
    7. 'variant' → logprob: -6.676621913909912
    8. '_vari' → logprob: -6.676621913909912
    9. 'points' → logprob: -6.801621913909912
    10. '
' → logprob: -6.801621913909912

Token 570: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.4016359746456146
    2. ' that' → logprob: -1.151636004447937
    3. '   ' → logprob: -4.401636123657227
    4. 'min' → logprob: -7.776636123657227
    5. '[' → logprob: -7.901636123657227
    6. '[
' → logprob: -8.401636123657227
    7. 'to' → logprob: -8.776636123657227
    8. 'points' → logprob: -9.026636123657227
    9. ' to' → logprob: -9.026636123657227
    10. '_points' → logprob: -9.151636123657227

Token 571: ' first' (ID: 1577)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.41460129618644714
    2. '0' → logprob: -1.7896013259887695
    3. 'all' → logprob: -2.2896013259887695
    4. 'xmin' → logprob: -3.7896013259887695
    5. 'x' → logprob: -4.2896013259887695
    6. 'the' → logprob: -4.9146013259887695
    7. '   ' → logprob: -5.1646013259887695
    8. ' all' → logprob: -5.2896013259887695
    9. 'variant' → logprob: -5.5396013259887695
    10. ' min' → logprob: -5.6646013259887695

Token 572: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.4620632529258728
    2. '=' → logprob: -2.7120633125305176
    3. '_point' → logprob: -2.7120633125305176
    4. '_points' → logprob: -2.7120633125305176
    5. ' =' → logprob: -2.8370633125305176
    6. 'variant' → logprob: -3.8370633125305176
    7. 'all' → logprob: -3.9620633125305176
    8. 'x' → logprob: -4.212063312530518
    9. '_' → logprob: -4.712063312530518
    10. '_pts' → logprob: -4.962063312530518

Token 573: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14658495783805847
    2. ' =' → logprob: -2.646584987640381
    3. 'is' → logprob: -3.896584987640381
    4. '[' → logprob: -4.021584987640381
    5. '=[' → logprob: -4.021584987640381
    6. ' is' → logprob: -5.771584987640381
    7. '=(' → logprob: -6.396584987640381
    8. 's' → logprob: -6.896584987640381
    9. '   ' → logprob: -7.021584987640381
    10. '[:]' → logprob: -7.521584987640381

Token 574: ' at' (ID: 540)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002481127390637994
    2. ' (' → logprob: -6.002480983734131
    3. '   ' → logprob: -12.377481460571289
    4. '[' → logprob: -14.002481460571289
    5. '0' → logprob: -15.002481460571289
    6. '```' → logprob: -17.50248146057129
    7. ' ' → logprob: -18.50248146057129
    8. '[(' → logprob: -18.87748146057129
    9. '    
' → logprob: -19.00248146057129
    10. '
' → logprob: -19.25248146057129

Token 575: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0053129736334085464
    2. ' (' → logprob: -5.255312919616699
    3. '0' → logprob: -9.5053129196167
    4. '[' → logprob: -12.7553129196167
    5. '[(' → logprob: -13.5053129196167
    6. ' ' → logprob: -14.8803129196167
    7. 'all' → logprob: -18.130313873291016
    8. 'origin' → logprob: -18.380313873291016
    9. '```' → logprob: -18.505313873291016
    10. ' all' → logprob: -18.630313873291016

Token 576: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003060303395614028
    2. '(' → logprob: -6.003060340881348
    3. ' ' → logprob: -7.628060340881348
    4. ' (' → logprob: -9.503060340881348
    5. 'all' → logprob: -11.503060340881348
    6. ')' → logprob: -11.878060340881348
    7. '
' → logprob: -13.128060340881348
    8. ' all' → logprob: -13.378060340881348
    9. '   ' → logprob: -13.878060340881348
    10. '(all' → logprob: -14.503060340881348

Token 577: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.44312788406387e-05
    2. '0' → logprob: -10.000054359436035
    3. ' ,' → logprob: -12.375054359436035
    4. ',
' → logprob: -13.125054359436035
    5. ')' → logprob: -13.750054359436035
    6. '[' → logprob: -14.375054359436035
    7. '```' → logprob: -15.250054359436035
    8. '‌,' → logprob: -15.625054359436035
    9. '<|end|>' → logprob: -15.625054359436035
    10. 'x' → logprob: -16.50005531311035

Token 578: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002967320033349097
    2. ' ' → logprob: -8.125296592712402
    3. ',' → logprob: -15.375296592712402
    4. '   ' → logprob: -15.875296592712402
    5. '
' → logprob: -16.62529754638672
    6. '  ' → logprob: -16.75029754638672
    7. '    ' → logprob: -17.62529754638672
    8. ')' → logprob: -17.87529754638672
    9. '```' → logprob: -19.12529754638672
    10. '     ' → logprob: -19.37529754638672

Token 579: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09261118620634079
    2. ')
' → logprob: -3.092611074447632
    3. ')' → logprob: -3.467611074447632
    4. ',' → logprob: -5.217611312866211
    5. '):
' → logprob: -5.842611312866211
    6. '
' → logprob: -6.092611312866211
    7. ',
' → logprob: -7.592611312866211
    8. '[' → logprob: -8.717611312866211
    9. '):' → logprob: -9.092611312866211
    10. '    
' → logprob: -9.592611312866211

Token 580: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5866600275039673
    2. '
' → logprob: -0.8366600275039673
    3. '    
' → logprob: -4.711659908294678
    4. '```' → logprob: -7.086659908294678
    5. '  
' → logprob: -8.086660385131836
    6. ',' → logprob: -9.336660385131836
    7. ' for' → logprob: -9.461660385131836
    8. '\n' → logprob: -9.836660385131836
    9. ':' → logprob: -10.086660385131836
    10. '   
' → logprob: -10.211660385131836

Token 581: ' #' (ID: 1069)
  Prédit: 'normalized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normalized' → logprob: -0.5091709494590759
    2. '   ' → logprob: -1.2591710090637207
    3. 'for' → logprob: -3.0091710090637207
    4. 'final' → logprob: -3.5091710090637207
    5. 'result' → logprob: -4.009171009063721
    6. ' for' → logprob: -5.134171009063721
    7. 'min' → logprob: -5.634171009063721
    8. 'results' → logprob: -5.884171009063721
    9. ' normalized' → logprob: -6.134171009063721
    10. 'translated' → logprob: -7.259171009063721

Token 582: ' Then' (ID: 7801)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1110572814941406
    2. 'normalized' → logprob: -1.1110572814941406
    3. '   ' → logprob: -1.4860572814941406
    4. 'final' → logprob: -2.9860572814941406
    5. 'for' → logprob: -3.3610572814941406
    6. 'results' → logprob: -3.8610572814941406
    7. 'min' → logprob: -5.861057281494141
    8. ' result' → logprob: -6.486057281494141
    9. ' for' → logprob: -6.736057281494141
    10. ' normalized' → logprob: -7.236057281494141

Token 583: ' get' (ID: 717)
  Prédit: 'normalized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normalized' → logprob: -0.39819470047950745
    2. 'translated' → logprob: -2.2731947898864746
    3. 'for' → logprob: -2.3981947898864746
    4. '   ' → logprob: -3.0231947898864746
    5. 'all' → logprob: -3.2731947898864746
    6. 'min' → logprob: -4.398194789886475
    7. ' for' → logprob: -4.648194789886475
    8. ' translated' → logprob: -4.773194789886475
    9. ' normalized' → logprob: -5.023194789886475
    10. '
' → logprob: -5.898194789886475

Token 584: ' a' (ID: 261)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.6479611396789551
    2. 'min' → logprob: -1.647961139678955
    3. '[
' → logprob: -1.897961139678955
    4. '[min' → logprob: -2.522961139678955
    5. 'normalized' → logprob: -3.272961139678955
    6. 'translated' → logprob: -5.147961139678955
    7. ' [(' → logprob: -5.772961139678955
    8. '[' → logprob: -5.772961139678955
    9. ' min' → logprob: -5.897961139678955
    10. 'the' → logprob: -8.022960662841797

Token 585: ' tuple' (ID: 31311)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2571448087692261
    2. 'normalized' → logprob: -2.3821449279785156
    3. '[min' → logprob: -3.0071449279785156
    4. '[(' → logprob: -3.2571449279785156
    5. ' min' → logprob: -3.8821449279785156
    6. '[
' → logprob: -4.132144927978516
    7. '[' → logprob: -5.632144927978516
    8. ' [(' → logprob: -6.632144927978516
    9. '   ' → logprob: -6.632144927978516
    10. 'max' → logprob: -7.632144927978516

Token 586: ' of' (ID: 328)
  Prédit: '(tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tuple' → logprob: -0.28591519594192505
    2. '(
' → logprob: -2.2859151363372803
    3. '(point' → logprob: -3.1609151363372803
    4. '(' → logprob: -3.1609151363372803
    5. '(pt' → logprob: -3.7859151363372803
    6. ' of' → logprob: -4.660915374755859
    7. '([' → logprob: -4.785915374755859
    8. '(points' → logprob: -5.410915374755859
    9. 'tuple' → logprob: -5.535915374755859
    10. '(p' → logprob: -5.535915374755859

Token 587: ' coordinates' (ID: 27933)
  Prédit: '(pt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pt' → logprob: -1.009996771812439
    2. '(x' → logprob: -1.384996771812439
    3. '(p' → logprob: -2.0099968910217285
    4. '(' → logprob: -2.0099968910217285
    5. '((' → logprob: -2.7599968910217285
    6. '(point' → logprob: -3.6349968910217285
    7. ' (' → logprob: -4.7599968910217285
    8. '[(' → logprob: -4.7599968910217285
    9. '(px' → logprob: -5.2599968910217285
    10. '(points' → logprob: -6.6349968910217285

Token 588: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48833686113357544
    2. '
' → logprob: -1.8633368015289307
    3. 'normalized' → logprob: -2.2383368015289307
    4. ' =' → logprob: -2.3633368015289307
    5. '=' → logprob: -5.11333703994751
    6. ',' → logprob: -5.73833703994751
    7. 'translated' → logprob: -5.86333703994751
    8. 'variants' → logprob: -6.36333703994751
    9. 'for' → logprob: -6.48833703994751
    10. '(normal' → logprob: -6.86333703994751

Token 589: ' use' (ID: 1199)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.15758030116558075
    2. 'compare' → logprob: -2.1575803756713867
    3. ' min' → logprob: -4.782580375671387
    4. '
' → logprob: -5.157580375671387
    5. ' compare' → logprob: -5.282580375671387
    6. 'represent' → logprob: -5.782580375671387
    7. 'return' → logprob: -6.407580375671387
    8. ' represent' → logprob: -6.657580375671387
    9. '   ' → logprob: -6.782580375671387
    10. 'key' → logprob: -7.407580375671387

Token 590: ' as' (ID: 472)
  Prédit: 'normalized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normalized' → logprob: -0.7311238050460815
    2. '   ' → logprob: -1.1061238050460815
    3. ' for' → logprob: -2.731123924255371
    4. 'for' → logprob: -2.981123924255371
    5. ' normalized' → logprob: -3.856123924255371
    6. 'vari' → logprob: -4.231123924255371
    7. 'variants' → logprob: -4.606123924255371
    8. '_vari' → logprob: -5.606123924255371
    9. '
' → logprob: -5.731123924255371
    10. ' as' → logprob: -5.981123924255371

Token 591: ' canonical' (ID: 91323)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -1.105493426322937
    2. 'key' → logprob: -1.355493426322937
    3. 'a' → logprob: -1.980493426322937
    4. ' tuple' → logprob: -2.7304935455322266
    5. 'normalized' → logprob: -2.9804935455322266
    6. 'min' → logprob: -3.1054935455322266
    7. '(tuple' → logprob: -3.2304935455322266
    8. 'the' → logprob: -4.105493545532227
    9. '(key' → logprob: -4.355493545532227
    10. ' key' → logprob: -4.480493545532227

Token 592: ' representation' (ID: 22311)
  Prédit: 'form'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'form' → logprob: -0.34600526094436646
    2. 'representation' → logprob: -2.2210052013397217
    3. ' form' → logprob: -2.3460052013397217
    4. ' representation' → logprob: -2.8460052013397217
    5. 'key' → logprob: -4.596005439758301
    6. 'all' → logprob: -5.346005439758301
    7. 'forms' → logprob: -5.846005439758301
    8. 'points' → logprob: -6.221005439758301
    9. 'variant' → logprob: -6.221005439758301
    10. ' all' → logprob: -6.471005439758301

Token 593: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39502906799316406
    2. '
' → logprob: -1.645029067993164
    3. 'normalized' → logprob: -2.270029067993164
    4. 'for' → logprob: -4.270029067993164
    5. 'result' → logprob: -5.145029067993164
    6. ' for' → logprob: -6.395029067993164
    7. 'translated' → logprob: -6.395029067993164
    8. 'final' → logprob: -6.395029067993164
    9. '    
' → logprob: -6.520029067993164
    10. '```' → logprob: -6.895029067993164

Token 594: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04637527093291283
    2. '
' → logprob: -3.546375274658203
    3. 'result' → logprob: -5.046375274658203
    4. 'normalized' → logprob: -5.171375274658203
    5. '    
' → logprob: -6.046375274658203
    6. 'results' → logprob: -6.921375274658203
    7. 'for' → logprob: -7.921375274658203
    8. 'final' → logprob: -8.671375274658203
    9. 'trans' → logprob: -8.921375274658203
    10. '```' → logprob: -9.546375274658203

Token 595: ' def' (ID: 1056)
  Prédit: 'normalized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normalized' → logprob: -0.22871017456054688
    2. '   ' → logprob: -2.103710174560547
    3. 'result' → logprob: -3.603710174560547
    4. 'canonical' → logprob: -3.603710174560547
    5. ' normalized' → logprob: -3.978710174560547
    6. ' canonical' → logprob: -6.103710174560547
    7. ' result' → logprob: -6.478710174560547
    8. 'for' → logprob: -6.603710174560547
    9. '
' → logprob: -6.978710174560547
    10. 'final' → logprob: -7.478710174560547

Token 596: ' translate' (ID: 24888)
  Prédit: ' normalize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' normalize' → logprob: -0.7019850611686707
    2. 'normalize' → logprob: -0.9519850611686707
    3. ' canonical' → logprob: -2.9519851207733154
    4. 'canonical' → logprob: -3.2019851207733154
    5. ' translate' → logprob: -4.326984882354736
    6. 'translate' → logprob: -4.701984882354736
    7. ' get' → logprob: -7.076984882354736
    8. ' canon' → logprob: -7.576984882354736
    9. 'all' → logprob: -7.701984882354736
    10. 'normalized' → logprob: -7.951984882354736

Token 597: '_to' (ID: 5089)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.050752583891153336
    2. '(points' → logprob: -3.175752639770508
    3. '(' → logprob: -5.675752639770508
    4. 'def' → logprob: -6.425752639770508
    5. '_coords' → logprob: -7.550752639770508
    6. 'points' → logprob: -7.675752639770508
    7. '_coordinates' → logprob: -7.675752639770508
    8. '_pts' → logprob: -8.175752639770508
    9. '_shape' → logprob: -8.425752639770508
    10. '_variant' → logprob: -9.050752639770508

Token 598: '_zero' (ID: 53468)
  Prédit: '_origin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_origin' → logprob: -0.3658030927181244
    2. 'origin' → logprob: -1.3658031225204468
    3. '_points' → logprob: -4.240803241729736
    4. '_start' → logprob: -4.365803241729736
    5. 'start' → logprob: -4.865803241729736
    6. 'points' → logprob: -5.490803241729736
    7. '(points' → logprob: -5.490803241729736
    8. 'zero' → logprob: -6.240803241729736
    9. '_zero' → logprob: -6.615803241729736
    10. '0' → logprob: -6.615803241729736

Token 599: '(' (ID: 7)
  Prédit: '(points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.030761651694774628
    2. '(' → logprob: -3.53076171875
    3. '(point' → logprob: -7.40576171875
    4. '(p' → logprob: -9.03076171875
    5. '_points' → logprob: -9.53076171875
    6. '(lst' → logprob: -9.65576171875
    7. '(coords' → logprob: -9.65576171875
    8. '(pt' → logprob: -10.65576171875
    9. '(v' → logprob: -11.03076171875
    10. '(shape' → logprob: -11.28076171875

Token 600: 'pts' (ID: 24040)
  Prédit: 'pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.2521010637283325
    2. 'points' → logprob: -1.5021010637283325
    3. ' pts' → logprob: -9.752100944519043
    4. 'pt' → logprob: -10.252100944519043
    5. 'point' → logprob: -10.752100944519043
    6. '   ' → logprob: -10.877100944519043
    7. ')' → logprob: -12.002100944519043
    8. '(points' → logprob: -12.002100944519043
    9. ' points' → logprob: -12.377100944519043
    10. 'p' → logprob: -12.502100944519043

Token 601: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12827789783477783
    2. '):' → logprob: -2.1282777786254883
    3. '   ' → logprob: -7.378277778625488
    4. '(' → logprob: -8.003277778625488
    5. '):
' → logprob: -8.378277778625488
    6. ')' → logprob: -9.878277778625488
    7. '       ' → logprob: -10.003277778625488
    8. '):

' → logprob: -10.128277778625488
    9. '    ' → logprob: -12.628277778625488
    10. ',' → logprob: -12.753277778625488

Token 602: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20309463143348694
    2. '       ' → logprob: -1.9530946016311646
    3. 'pts' → logprob: -3.453094720840454
    4. '(' → logprob: -5.703094482421875
    5. 'points' → logprob: -5.953094482421875
    6. '(points' → logprob: -6.578094482421875
    7. 'def' → logprob: -7.453094482421875
    8. ' pts' → logprob: -7.703094482421875
    9. '    
' → logprob: -8.078094482421875
    10. '    ' → logprob: -8.078094482421875

Token 603: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.6555652022361755
    2. '   ' → logprob: -0.9055652022361755
    3. 'tx' → logprob: -3.2805652618408203
    4. '       ' → logprob: -3.7805652618408203
    5. 'dx' → logprob: -4.65556526184082
    6. 'ox' → logprob: -5.90556526184082
    7. ' x' → logprob: -5.90556526184082
    8. ' ox' → logprob: -8.15556526184082
    9. ' tx' → logprob: -8.28056526184082
    10. 'def' → logprob: -8.40556526184082

Token 604: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014567726291716099
    2. '0' → logprob: -5.389567852020264
    3. '_offset' → logprob: -5.389567852020264
    4. '_shift' → logprob: -6.264567852020264
    5. '=' → logprob: -6.639567852020264
    6. '_min' → logprob: -7.139567852020264
    7. 'offset' → logprob: -7.889567852020264
    8. '_,' → logprob: -8.639567375183105
    9. ',y' → logprob: -8.764567375183105
    10. ' =' → logprob: -8.889567375183105

Token 605: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018064413452520967
    2. '=' → logprob: -6.376806259155273
    3. ' =' → logprob: -9.376806259155273
    4. ' ,' → logprob: -11.626806259155273
    5. ',x' → logprob: -11.751806259155273
    6. ',y' → logprob: -13.876806259155273
    7. ',p' → logprob: -14.626806259155273
    8. '   ' → logprob: -14.876806259155273
    9. '_,' → logprob: -14.876806259155273
    10. '       ' → logprob: -15.126806259155273

Token 606: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0005530327325686812
    2. ' y' → logprob: -7.500553131103516
    3. '   ' → logprob: -17.875553131103516
    4. '	y' → logprob: -19.125553131103516
    5. '    ' → logprob: -20.750553131103516
    6. '       ' → logprob: -21.125553131103516
    7. '  ' → logprob: -21.625553131103516
    8. '_y' → logprob: -22.875553131103516
    9. ',y' → logprob: -23.000553131103516
    10. ' ' → logprob: -23.375553131103516

Token 607: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00039289999403990805
    2. '=' → logprob: -8.50039291381836
    3. ' =' → logprob: -8.62539291381836
    4. '_' → logprob: -11.75039291381836
    5. '```' → logprob: -14.12539291381836
    6. '   ' → logprob: -14.25039291381836
    7. ' ' → logprob: -14.75039291381836
    8. ')' → logprob: -15.75039291381836
    9. '\xe2\x82' → logprob: -17.12539291381836
    10. '  ' → logprob: -17.37539291381836

Token 608: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022981703281403
    2. ' =' → logprob: -1.9102298021316528
    3. '   ' → logprob: -12.535229682922363
    4. ')' → logprob: -13.660229682922363
    5. ')=' → logprob: -14.660229682922363
    6. '       ' → logprob: -15.660229682922363
    7. ',' → logprob: -15.785229682922363
    8. '    ' → logprob: -16.28523063659668
    9. ' ' → logprob: -17.03523063659668
    10. '	' → logprob: -17.16023063659668

Token 609: ' pts' (ID: 66515)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.014164221473038197
    2. ' pts' → logprob: -4.264164447784424
    3. 'pt' → logprob: -15.139163970947266
    4. '_pts' → logprob: -15.514163970947266
    5. 'Pts' → logprob: -16.639163970947266
    6. 'points' → logprob: -16.764163970947266
    7. '   ' → logprob: -17.139163970947266
    8. ' points' → logprob: -19.264163970947266
    9. ' pt' → logprob: -19.514163970947266
    10. 'plt' → logprob: -20.139163970947266

Token 610: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2663661539554596
    2. '=' → logprob: -1.5163661241531372
    3. ' =' → logprob: -4.266366004943848
    4. '0' → logprob: -8.266366004943848
    5. '   ' → logprob: -10.641366004943848
    6. '=[' → logprob: -11.891366004943848
    7. 'pts' → logprob: -12.266366004943848
    8. 'def' → logprob: -13.266366004943848
    9. '(' → logprob: -13.641366004943848
    10. '       ' → logprob: -13.891366004943848

Token 611: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.625
    3. ' ' → logprob: -16.0
    4. '   ' → logprob: -17.125
    5. '00' → logprob: -18.375
    6. '```' → logprob: -19.375
    7. '
' → logprob: -19.5
    8. '۰' → logprob: -20.375
    9. '  ' → logprob: -20.6875
    10. '000' → logprob: -21.0625

Token 612: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.22556161880493164
    2. ']
' → logprob: -1.6005616188049316
    3. '   ' → logprob: -9.975561141967773
    4. ')' → logprob: -10.100561141967773
    5. '[' → logprob: -11.725561141967773
    6. '()]' → logprob: -11.725561141967773
    7. ')]' → logprob: -11.975561141967773
    8. '       ' → logprob: -12.100561141967773
    9. ']
' → logprob: -12.100561141967773
    10. ']

' → logprob: -12.100561141967773

Token 613: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12812553346157074
    2. '
' → logprob: -2.1281254291534424
    3. '    
' → logprob: -7.1281256675720215
    4. 'return' → logprob: -8.753125190734863
    5. '[' → logprob: -10.253125190734863
    6. 'def' → logprob: -10.378125190734863
    7. ' return' → logprob: -10.628125190734863
    8. '[
' → logprob: -10.628125190734863
    9. '       ' → logprob: -11.003125190734863
    10. '  
' → logprob: -11.128125190734863

Token 614: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030969057232141495
    2. 'return' (adapté à ' return') → logprob: -3.5309691429138184
    3. ' return' → logprob: -6.780969142913818
    4. '[(' → logprob: -9.78096866607666
    5. '[
' → logprob: -11.03096866607666
    6. '       ' → logprob: -12.78096866607666
    7. '   ' → logprob: -12.78096866607666
    8. '[' → logprob: -13.28096866607666
    9. '```' → logprob: -13.78096866607666
    10. '	return' → logprob: -14.65596866607666

Token 615: ' tuple' (ID: 31311)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.003686413401737809
    2. 'tuple' → logprob: -5.753686428070068
    3. '[((' → logprob: -8.50368595123291
    4. ' [(' → logprob: -8.50368595123291
    5. '[' → logprob: -9.50368595123291
    6. ' tuple' → logprob: -10.50368595123291
    7. '(tuple' → logprob: -14.50368595123291
    8. '([(' → logprob: -15.12868595123291
    9. ' [' → logprob: -15.25368595123291
    10. '[
' → logprob: -15.87868595123291

Token 616: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.04914386197924614
    2. '(' → logprob: -3.0491437911987305
    3. '(x' → logprob: -7.6741437911987305
    4. '[(' → logprob: -9.92414379119873
    5. '(sorted' → logprob: -10.79914379119873
    6. ' (' → logprob: -12.04914379119873
    7. '(zip' → logprob: -12.17414379119873
    8. '   ' → logprob: -13.17414379119873
    9. '(y' → logprob: -13.42414379119873
    10. '(p' → logprob: -13.67414379119873

Token 617: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.000158842682139948
    2. '(x' → logprob: -8.75015926361084
    3. '[x' → logprob: -16.250158309936523
    4. ' x' → logprob: -16.375158309936523
    5. '   ' → logprob: -16.750158309936523
    6. ' (' → logprob: -18.125158309936523
    7. ')x' → logprob: -19.125158309936523
    8. '
' → logprob: -19.250158309936523
    9. '	x' → logprob: -19.375158309936523
    10. '(' → logprob: -19.625158309936523

Token 618: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3148045539855957
    2. ' -' → logprob: -1.3148045539855957
    3. '-x' → logprob: -6.564804553985596
    4. 'x' → logprob: -9.314804077148438
    5. '   ' → logprob: -10.689804077148438
    6. '-p' → logprob: -11.439804077148438
    7. '  ' → logprob: -12.689804077148438
    8. ' ' → logprob: -13.564804077148438
    9. 'p' → logprob: -13.814804077148438
    10. '[' → logprob: -13.814804077148438

Token 619: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2664456789934775e-06
    2. ' x' → logprob: -13.625000953674316
    3. '   ' → logprob: -20.625001907348633
    4. '<|end|>' → logprob: -21.125001907348633
    5. '```' → logprob: -21.125001907348633
    6. ')x' → logprob: -21.750001907348633
    7. '	x' → logprob: -22.375001907348633
    8. ' ' → logprob: -22.375001907348633
    9. '  ' → logprob: -22.875001907348633
    10. '(x' → logprob: -23.000001907348633

Token 620: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.875001907348633
    3. ',' → logprob: -14.500001907348633
    4. '[' → logprob: -15.000001907348633
    5. 'o' → logprob: -15.875001907348633
    6. ')' → logprob: -16.375001907348633
    7. '۰' → logprob: -17.000001907348633
    8. '_' → logprob: -17.750001907348633
    9. '```' → logprob: -17.875001907348633
    10. '
' → logprob: -18.187501907348633

Token 621: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.286852345103398e-05
    2. ' ,' → logprob: -10.375042915344238
    3. ',y' → logprob: -11.500042915344238
    4. '[' → logprob: -14.375042915344238
    5. 'y' → logprob: -15.375042915344238
    6. 'for' → logprob: -15.500042915344238
    7. ',
' → logprob: -15.750042915344238
    8. ')' → logprob: -16.125041961669922
    9. '   ' → logprob: -16.750041961669922
    10. '_,' → logprob: -17.125041961669922

Token 622: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.008621666580438614
    2. ' y' → logprob: -4.758621692657471
    3. '   ' → logprob: -12.258621215820312
    4. '    ' → logprob: -14.133621215820312
    5. '  ' → logprob: -14.383621215820312
    6. '       ' → logprob: -15.008621215820312
    7. '     ' → logprob: -15.508621215820312
    8. '      ' → logprob: -15.633621215820312
    9. ' ' → logprob: -15.883621215820312
    10. '	y' → logprob: -16.133621215820312

Token 623: ' -' (ID: 533)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.20262475311756134
    2. ' y' → logprob: -2.202624797821045
    3. '-' → logprob: -2.827624797821045
    4. ',' → logprob: -5.452624797821045
    5. ')' → logprob: -5.702624797821045
    6. '   ' → logprob: -6.327624797821045
    7. ' ' → logprob: -6.952624797821045
    8. ' -' → logprob: -6.952624797821045
    9. '[' → logprob: -7.077624797821045
    10. 'for' → logprob: -7.952624797821045

Token 624: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -9.627176768844947e-05
    2. ' y' → logprob: -9.250096321105957
    3. ')' → logprob: -17.00009536743164
    4. '	y' → logprob: -17.12509536743164
    5. '   ' → logprob: -17.25009536743164
    6. ')y' → logprob: -17.62509536743164
    7. 'x' → logprob: -18.37509536743164
    8. '```' → logprob: -18.50009536743164
    9. '_y' → logprob: -18.62509536743164
    10. '  ' → logprob: -18.62509536743164

Token 625: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ')' → logprob: -15.625000953674316
    3. 'o' → logprob: -16.25
    4. 'for' → logprob: -16.5
    5. '[' → logprob: -16.625
    6. '
' → logprob: -17.25
    7. '۰' → logprob: -18.125
    8. ' ' → logprob: -18.375
    9. 'y' → logprob: -18.375
    10. ' for' → logprob: -18.75

Token 626: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.2994620242971e-06
    2. ' )' → logprob: -12.375008583068848
    3. '   ' → logprob: -13.375008583068848
    4. 'for' → logprob: -13.500008583068848
    5. ')
' → logprob: -15.375008583068848
    6. '[' → logprob: -15.750008583068848
    7. ' for' → logprob: -16.12500762939453
    8. ' ' → logprob: -16.37500762939453
    9. 'y' → logprob: -16.50000762939453
    10. '  ' → logprob: -16.87500762939453

Token 627: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22826214134693146
    2. 'for' → logprob: -1.978262186050415
    3. ')' → logprob: -2.728262186050415
    4. '   ' → logprob: -8.353261947631836
    5. ' ' → logprob: -9.478261947631836
    6. '       ' → logprob: -9.728261947631836
    7. '        ' → logprob: -10.978261947631836
    8. ' )' → logprob: -11.228261947631836
    9. '    ' → logprob: -11.478261947631836
    10. '  ' → logprob: -11.728261947631836

Token 628: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.845798710244708e-05
    2. ' x' → logprob: -10.250038146972656
    3. '(x' → logprob: -12.750038146972656
    4. 'pts' → logprob: -18.125038146972656
    5. ' (' → logprob: -19.500038146972656
    6. '	x' → logprob: -19.750038146972656
    7. '
' → logprob: -20.250038146972656
    8. '   ' → logprob: -21.000038146972656
    9. 'points' → logprob: -21.000038146972656
    10. ')x' → logprob: -21.500038146972656

Token 629: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002812005812302232
    2. ',y' → logprob: -5.877811908721924
    3. ' ,' → logprob: -12.502812385559082
    4. ',x' → logprob: -12.877812385559082
    5. 'y' → logprob: -15.502812385559082
    6. ' in' → logprob: -15.627812385559082
    7. ',
' → logprob: -16.002811431884766
    8. 'in' → logprob: -16.127811431884766
    9. 'x' → logprob: -16.627811431884766
    10. '_,' → logprob: -16.877811431884766

Token 630: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0007112398743629456
    2. ' y' → logprob: -7.250711441040039
    3. 'pts' → logprob: -13.750711441040039
    4. 'points' → logprob: -16.62571144104004
    5. '
' → logprob: -17.87571144104004
    6. ' pts' → logprob: -18.25071144104004
    7. '   ' → logprob: -18.50071144104004
    8. 'ys' → logprob: -19.12571144104004
    9. ' ' → logprob: -19.75071144104004
    10. '	y' → logprob: -19.87571144104004

Token 631: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3915037512779236
    2. ' in' → logprob: -1.1415038108825684
    3. 'pts' → logprob: -5.516503810882568
    4. ',' → logprob: -7.516503810882568
    5. ' pts' → logprob: -10.14150333404541
    6. 'pt' → logprob: -12.26650333404541
    7. '   ' → logprob: -12.39150333404541
    8. ')' → logprob: -12.76650333404541
    9. '_pts' → logprob: -13.14150333404541
    10. 'points' → logprob: -13.64150333404541

Token 632: ' pts' (ID: 66515)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.00020389800192788243
    2. ' pts' → logprob: -8.500204086303711
    3. 'points' → logprob: -15.375204086303711
    4. '_pts' → logprob: -16.62520408630371
    5. 'pt' → logprob: -16.87520408630371
    6. 'Pts' → logprob: -17.75020408630371
    7. '   ' → logprob: -18.62520408630371
    8. '
' → logprob: -20.50020408630371
    9. 'nts' → logprob: -21.00020408630371
    10. '    ' → logprob: -21.12520408630371

Token 633: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009177703177556396
    2. '   ' → logprob: -7.000917911529541
    3. '       ' → logprob: -12.875917434692383
    4. ' )' → logprob: -13.000917434692383
    5. ')
' → logprob: -14.500917434692383
    6. '  ' → logprob: -15.125917434692383
    7. ' ' → logprob: -16.000917434692383
    8. '))' → logprob: -16.125917434692383
    9. '    ' → logprob: -16.500917434692383
    10. '[' → logprob: -16.750917434692383

Token 634: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09897305071353912
    2. '
' → logprob: -3.098973035812378
    3. '    
' → logprob: -3.348973035812378
    4. 'all' → logprob: -5.598973274230957
    5. 'return' → logprob: -5.598973274230957
    6. 'c' → logprob: -6.348973274230957
    7. 'min' → logprob: -6.598973274230957
    8. 'normalized' → logprob: -7.098973274230957
    9. 'best' → logprob: -7.848973274230957
    10. '_candidates' → logprob: -8.223973274230957

Token 635: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08256151527166367
    2. 'normalized' → logprob: -3.957561492919922
    3. 'all' → logprob: -4.207561492919922
    4. 'c' → logprob: -4.457561492919922
    5. 'return' → logprob: -4.457561492919922
    6. '    
' → logprob: -4.707561492919922
    7. '
' → logprob: -4.957561492919922
    8. 'canonical' → logprob: -5.582561492919922
    9. 'best' → logprob: -7.457561492919922
    10. 'candidate' → logprob: -7.832561492919922

Token 636: ' normalized' (ID: 59625)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5753917098045349
    2. 'normalized' (adapté à ' normalized') → logprob: -1.7003917694091797
    3. 'c' → logprob: -2.2003917694091797
    4. 'canonical' → logprob: -2.2003917694091797
    5. '   ' → logprob: -4.20039176940918
    6. 'all' → logprob: -4.57539176940918
    7. '#' → logprob: -6.32539176940918
    8. 'candidate' → logprob: -6.45039176940918
    9. 'result' → logprob: -6.57539176940918
    10. 'best' → logprob: -7.20039176940918

Token 637: '_vari' (ID: 94080)
  Prédit: '_shapes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_shapes' → logprob: -0.4293641746044159
    2. '_vari' → logprob: -1.4293642044067383
    3. '_sequences' → logprob: -3.5543642044067383
    4. '_forms' → logprob: -3.5543642044067383
    5. '=' → logprob: -3.8043642044067383
    6. 's' → logprob: -4.679364204406738
    7. '_points' → logprob: -4.804364204406738
    8. ' =' → logprob: -5.304364204406738
    9. '_versions' → logprob: -5.554364204406738
    10. '_shape' → logprob: -6.554364204406738

Token 638: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -1.318681188422488e-05
    2. ' ants' → logprob: -11.75001335144043
    3. 'ations' → logprob: -12.75001335144043
    4. 'ANTS' → logprob: -14.00001335144043
    5. 'ents' → logprob: -14.87501335144043
    6. 'ans' → logprob: -15.50001335144043
    7. 'ables' → logprob: -15.87501335144043
    8. 'ant' → logprob: -15.87501335144043
    9. '
' → logprob: -16.25001335144043
    10. 's' → logprob: -16.37501335144043

Token 639: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196768581867218
    2. ' =' → logprob: -2.811967611312866
    3. '=[' → logprob: -17.061967849731445
    4. '=[]' → logprob: -17.686967849731445
    5. '＝' → logprob: -18.436967849731445
    6. ' =[' → logprob: -18.811967849731445
    7. '=

' → logprob: -20.186967849731445
    8. '   ' → logprob: -20.311967849731445
    9. '=
' → logprob: -20.686967849731445
    10. '[' → logprob: -20.811967849731445

Token 640: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00013238313840702176
    2. ' [' → logprob: -9.00013256072998
    3. '[
' → logprob: -12.12513256072998
    4. '   ' → logprob: -12.75013256072998
    5. '[t' → logprob: -14.75013256072998
    6. '[list' → logprob: -16.625131607055664
    7. '[to' → logprob: -16.750131607055664
    8. '[]
' → logprob: -18.500131607055664
    9. ' ' → logprob: -18.875131607055664
    10. '[int' → logprob: -19.125131607055664

Token 641: 'translate' (ID: 27822)
  Prédit: 'translate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'translate' → logprob: -0.0010562685783952475
    2. '   ' → logprob: -6.87605619430542
    3. '       ' → logprob: -11.251056671142578
    4. ' translate' → logprob: -11.501056671142578
    5. '           ' → logprob: -15.626056671142578
    6. '.translate' → logprob: -17.001056671142578
    7. 'transpose' → logprob: -17.126056671142578
    8. 'normalize' → logprob: -17.876056671142578
    9. '    ' → logprob: -18.001056671142578
    10. ' ' → logprob: -18.001056671142578

Token 642: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.9361264946837764e-07
    2. 'd' → logprob: -17.25
    3. ')_' → logprob: -18.125
    4. 'to' → logprob: -18.125
    5. '   ' → logprob: -18.25
    6. 'To' → logprob: -18.375
    7. '```' → logprob: -18.75
    8. 'ed' → logprob: -19.375
    9. 't' → logprob: -19.375
    10. '_t' → logprob: -19.5

Token 643: '_zero' (ID: 53468)
  Prédit: '_zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_zero' → logprob: -0.020593157038092613
    2. 'zero' → logprob: -3.8955931663513184
    3. 'ze' → logprob: -10.39559268951416
    4. '(' → logprob: -12.52059268951416
    5. '0' → logprob: -13.39559268951416
    6. 'z' → logprob: -13.52059268951416
    7. '(z' → logprob: -13.64559268951416
    8. '(p' → logprob: -13.64559268951416
    9. '(point' → logprob: -13.89559268951416
    10. 'zer' → logprob: -13.89559268951416

Token 644: '(v' (ID: 6932)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02501440793275833
    2. '(v' → logprob: -4.525014400482178
    3. '(p' → logprob: -5.150014400482178
    4. '(points' → logprob: -5.275014400482178
    5. '(av' → logprob: -6.150014400482178
    6. '(var' → logprob: -7.400014400482178
    7. '(pt' → logprob: -8.650014877319336
    8. '(vars' → logprob: -12.275014877319336
    9. '(ap' → logprob: -12.400014877319336
    10. '(op' → logprob: -13.025014877319336

Token 645: ')' (ID: 8)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.17848531901836395
    2. 'ariant' → logprob: -2.17848539352417
    3. ')' → logprob: -3.42848539352417
    4. 'ari' → logprob: -4.05348539352417
    5. 'ariance' → logprob: -9.178484916687012
    6. 'arian' → logprob: -9.303484916687012
    7. 'ersion' → logprob: -10.053484916687012
    8. 'p' → logprob: -10.553484916687012
    9. 'points' → logprob: -10.678484916687012
    10. 'al' → logprob: -10.678484916687012

Token 646: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.011060908436775208
    2. 'for' → logprob: -4.51106071472168
    3. '   ' → logprob: -11.26106071472168
    4. '	for' → logprob: -15.88606071472168
    5. ')' → logprob: -16.26106071472168
    6. ' ' → logprob: -16.51106071472168
    7. ' in' → logprob: -17.51106071472168
    8. '
' → logprob: -18.76106071472168
    9. '       ' → logprob: -18.76106071472168
    10. '    ' → logprob: -18.76106071472168

Token 647: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.001086043776012957
    2. ' v' → logprob: -6.876086235046387
    3. 'all' → logprob: -10.126086235046387
    4. 'var' → logprob: -12.501086235046387
    5. ' all' → logprob: -12.626086235046387
    6. 'variant' → logprob: -13.626086235046387
    7. ' ' → logprob: -13.876086235046387
    8. '
' → logprob: -14.001086235046387
    9. '	v' → logprob: -14.126086235046387
    10. 'orientation' → logprob: -14.688586235046387

Token 648: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.000763287884183228
    2. 'ari' → logprob: -7.625763416290283
    3. 'in' → logprob: -8.875762939453125
    4. 'ar' → logprob: -9.250762939453125
    5. 'ariable' → logprob: -10.500762939453125
    6. 'ariant' → logprob: -13.250762939453125
    7. 'al' → logprob: -13.375762939453125
    8. 'v' → logprob: -13.375762939453125
    9. 'ARI' → logprob: -13.750762939453125
    10. 'aria' → logprob: -14.000762939453125

Token 649: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -5.836499985889532e-05
    2. ' all' → logprob: -9.7500581741333
    3. '	all' → logprob: -20.000059127807617
    4. '   ' → logprob: -20.500059127807617
    5. ' ' → logprob: -20.625059127807617
    6. '  ' → logprob: -21.875059127807617
    7. '(all' → logprob: -22.125059127807617
    8. ''all' → logprob: -22.875059127807617
    9. '
' → logprob: -23.500059127807617
    10. 'All' → logprob: -23.625059127807617

Token 650: '_vari' (ID: 94080)
  Prédit: '_vari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vari' → logprob: -0.00013119110371917486
    2. 'variants' → logprob: -9.125131607055664
    3. 'ari' → logprob: -11.375131607055664
    4. 'all' → logprob: -12.500131607055664
    5. '_points' → logprob: -13.125131607055664
    6. '_variant' → logprob: -13.500131607055664
    7. 'vari' → logprob: -13.750131607055664
    8. '_var' → logprob: -14.500131607055664
    9. '_variables' → logprob: -15.000131607055664
    10. 'ariant' → logprob: -15.000131607055664

Token 651: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -5.438573680294212e-06
    2. 'ables' → logprob: -13.500005722045898
    3. 'ANTS' → logprob: -14.000005722045898
    4. ' ants' → logprob: -14.125005722045898
    5. 'all' → logprob: -14.500005722045898
    6. 'ents' → logprob: -14.500005722045898
    7. 's' → logprob: -15.125005722045898
    8. '[' → logprob: -15.750005722045898
    9. 'ates' → logprob: -15.875005722045898
    10. '   ' → logprob: -16.1250057220459

Token 652: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011976092355325818
    2. '   ' → logprob: -6.751197814941406
    3. ' ]' → logprob: -10.626197814941406
    4. ']
' → logprob: -13.501197814941406
    5. ')' → logprob: -13.876197814941406
    6. ')]' → logprob: -14.626197814941406
    7. '()]' → logprob: -15.626197814941406
    8. '}' → logprob: -16.626197814941406
    9. ']

' → logprob: -17.251197814941406
    10. '  ' → logprob: -17.501197814941406

Token 653: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3903300166130066
    2. 'return' → logprob: -1.1403300762176514
    3. ' return' → logprob: -6.265329837799072
    4. '
' → logprob: -7.015329837799072
    5. 'normalized' → logprob: -7.765329837799072
    6. '    
' → logprob: -9.01533031463623
    7. '```' → logprob: -9.64033031463623
    8. 'result' → logprob: -11.01533031463623
    9. 'next' → logprob: -11.14033031463623
    10. 'sorted' → logprob: -13.76533031463623

Token 654: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5767250657081604
    2. 'return' → logprob: -0.8267250657081604
    3. ' return' → logprob: -7.201725006103516
    4. 'normalized' → logprob: -11.201725006103516
    5. '
' → logprob: -11.451725006103516
    6. 'result' → logprob: -12.076725006103516
    7. '    
' → logprob: -12.201725006103516
    8. '```' → logprob: -12.701725006103516
    9. 'best' → logprob: -14.076725006103516
    10. 'min' → logprob: -14.451725006103516

Token 655: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00012916464766021818
    2. '   ' → logprob: -9.000128746032715
    3. ' return' → logprob: -12.500128746032715
    4. 'normalized' → logprob: -13.625128746032715
    5. '
' → logprob: -14.750128746032715
    6. 'result' → logprob: -16.00012969970703
    7. 'best' → logprob: -16.12512969970703
    8. '#' (adapté à ' #') → logprob: -16.37512969970703
    9. '```' → logprob: -17.25012969970703
    10. '    
' → logprob: -17.25012969970703

Token 656: ' Return' (ID: 6318)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0005604196921922266
    2. '   ' → logprob: -8.125560760498047
    3. ' return' → logprob: -8.500560760498047
    4. 'normalized' → logprob: -10.375560760498047
    5. '#' → logprob: -11.125560760498047
    6. 'result' → logprob: -12.125560760498047
    7. 'best' → logprob: -12.250560760498047
    8. '
' → logprob: -12.750560760498047
    9. 'min' → logprob: -14.125560760498047
    10. 'answer' → logprob: -15.250560760498047

Token 657: ' lex' (ID: 37772)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.029750484973192215
    2. ' min' → logprob: -3.5297505855560303
    3. '(min' → logprob: -18.02975082397461
    4. '   ' → logprob: -18.27975082397461
    5. '	min' → logprob: -18.65475082397461
    6. 'max' → logprob: -20.02975082397461
    7. '=min' → logprob: -21.02975082397461
    8. ' ' → logprob: -21.15475082397461
    9. 'minimum' → logprob: -21.40475082397461
    10. '[min' → logprob: -21.40475082397461

Token 658: ' smallest' (ID: 42173)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.1469251662492752
    2. 'min' → logprob: -2.021925210952759
    3. 'max' → logprob: -5.77192497253418
    4. 'sorted' → logprob: -7.77192497253418
    5. '(min' → logprob: -7.89692497253418
    6. '(sorted' → logprob: -8.64692497253418
    7. '(max' → logprob: -10.64692497253418
    8. '(' → logprob: -10.77192497253418
    9. '_min' → logprob: -11.02192497253418
    10. 'normalized' → logprob: -11.52192497253418

Token 659: ' tuple' (ID: 31311)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03453308343887329
    2. 'normalized' → logprob: -4.0345330238342285
    3. ' return' → logprob: -5.2845330238342285
    4. '   ' → logprob: -5.2845330238342285
    5. 'min' → logprob: -5.4095330238342285
    6. '(min' → logprob: -7.1595330238342285
    7. '(normal' → logprob: -7.5345330238342285
    8. ' normalized' → logprob: -8.534533500671387
    9. 'sorted' → logprob: -9.909533500671387
    10. '(sorted' → logprob: -10.784533500671387

Token 660: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31743887066841125
    2. 'return' → logprob: -1.3174388408660889
    3. '
' → logprob: -6.192439079284668
    4. 'normalized' → logprob: -6.567439079284668
    5. ' return' → logprob: -8.317439079284668
    6. '(normal' → logprob: -8.442439079284668
    7. '    
' → logprob: -8.567439079284668
    8. ',' → logprob: -11.567439079284668
    9. ' normalized' → logprob: -11.942439079284668
    10. ')' → logprob: -12.192439079284668

Token 661: ' have' (ID: 679)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.27767321467399597
    2. 'min' → logprob: -1.7776732444763184
    3. ' return' → logprob: -3.4026732444763184
    4. 'identify' → logprob: -4.152673244476318
    5. 'normalize' → logprob: -4.527673244476318
    6. ' min' → logprob: -5.277673244476318
    7. 'ensure' → logprob: -5.652673244476318
    8. '   ' → logprob: -6.652673244476318
    9. ' identify' → logprob: -6.652673244476318
    10. 'represent' → logprob: -6.902673244476318

Token 662: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8150840997695923
    2. 'a' → logprob: -1.6900840997695923
    3. ' the' → logprob: -1.8150840997695923
    4. 'min' → logprob: -2.9400839805603027
    5. 'the' → logprob: -3.5650839805603027
    6. ' normalized' → logprob: -3.9400839805603027
    7. 'normalized' → logprob: -3.9400839805603027
    8. ' canonical' → logprob: -4.315083980560303
    9. ' return' → logprob: -4.440083980560303
    10. 'return' → logprob: -4.565083980560303

Token 663: ' unique' (ID: 5746)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.3420341908931732
    2. 'canonical' → logprob: -1.3420342206954956
    3. 'normalized' → logprob: -4.717034339904785
    4. 'consistent' → logprob: -5.217034339904785
    5. ' canonical' → logprob: -5.592034339904785
    6. 'def' → logprob: -6.092034339904785
    7. ' unique' → logprob: -6.342034339904785
    8. 'return' → logprob: -6.467034339904785
    9. 'uni' → logprob: -7.342034339904785
    10. 'immutable' → logprob: -7.467034339904785

Token 664: ' canonical' (ID: 91323)
  Prédit: 'representation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'representation' → logprob: -0.6616170406341553
    2. 'identifier' → logprob: -1.4116170406341553
    3. ' representation' → logprob: -2.2866170406341553
    4. 'canonical' → logprob: -2.7866170406341553
    5. 'return' → logprob: -3.5366170406341553
    6. 'normalized' → logprob: -3.5366170406341553
    7. ' identifier' → logprob: -4.786617279052734
    8. ' return' → logprob: -5.786617279052734
    9. 'key' → logprob: -6.036617279052734
    10. 'shape' → logprob: -6.661617279052734

Token 665: ' representation' (ID: 22311)
  Prédit: 'representation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'representation' → logprob: -0.27059608697891235
    2. ' representation' → logprob: -1.5205960273742676
    3. 'shape' → logprob: -4.520596027374268
    4. 'form' → logprob: -5.395596027374268
    5. 'return' → logprob: -6.395596027374268
    6. ' form' → logprob: -7.520596027374268
    7. 'identifier' → logprob: -8.270596504211426
    8. ' shape' → logprob: -8.520596504211426
    9. '_rep' → logprob: -9.270596504211426
    10. ' return' → logprob: -9.520596504211426

Token 666: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018279295414686203
    2. 'return' → logprob: -4.018279075622559
    3. ' return' → logprob: -9.393279075622559
    4. '
' → logprob: -10.643279075622559
    5. '    
' → logprob: -10.893279075622559
    6. ':return' → logprob: -13.768279075622559
    7. '	return' → logprob: -14.018279075622559
    8. '_return' → logprob: -15.143279075622559
    9. '{return' → logprob: -15.518279075622559
    10. ',' → logprob: -15.643279075622559

Token 667: ' this' (ID: 495)
  Prédit: 'normalized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normalized' → logprob: -0.1002335250377655
    2. ' normalized' → logprob: -2.850233554840088
    3. 'the' → logprob: -3.350233554840088
    4. ' the' → logprob: -6.100233554840088
    5. 'shape' → logprob: -8.60023307800293
    6. ' shape' → logprob: -11.47523307800293
    7. 'normal' → logprob: -11.47523307800293
    8. '   ' → logprob: -11.72523307800293
    9. 'normalize' → logprob: -12.60023307800293
    10. '(normal' → logprob: -12.60023307800293

Token 668: ' polygon' (ID: 65081)
  Prédit: ' normalized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' normalized' → logprob: -0.741657018661499
    2. ' shape' → logprob: -1.241657018661499
    3. 'normalized' → logprob: -1.991657018661499
    4. 'shape' → logprob: -2.366657018661499
    5. ' polygon' → logprob: -5.741657257080078
    6. '_shape' → logprob: -6.866657257080078
    7. 'polygon' → logprob: -9.116657257080078
    8. '_normal' → logprob: -10.366657257080078
    9. ' sequence' → logprob: -10.741657257080078
    10. 'normal' → logprob: -11.366657257080078

Token 669: 'al' (ID: 280)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08107157796621323
    2. 'return' → logprob: -2.706071615219116
    3. '
' → logprob: -4.956071376800537
    4. 'normalized' → logprob: -6.331071376800537
    5. ' return' → logprob: -6.456071376800537
    6. 'eturn' → logprob: -8.956071853637695
    7. '  ' → logprob: -9.081071853637695
    8. '    
' → logprob: -9.081071853637695
    9. ' normalized' → logprob: -9.206071853637695
    10. '(normal' → logprob: -9.706071853637695

Token 670: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.4870043992996216
    2. ' line' → logprob: -1.6120043992996216
    3. '_line' → logprob: -1.9870043992996216
    4. 'shape' → logprob: -3.487004280090332
    5. '_shape' → logprob: -4.487004280090332
    6. ' shape' → logprob: -5.112004280090332
    7. '   ' → logprob: -7.737004280090332
    8. ' ' → logprob: -8.112004280090332
    9. '
' → logprob: -9.612004280090332
    10. '_points' → logprob: -10.112004280090332

Token 671: ' shape' (ID: 9591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06211791932582855
    2. 'return' → logprob: -2.8121178150177
    3. '
' → logprob: -9.312117576599121
    4. ' return' → logprob: -10.437117576599121
    5. '    
' → logprob: -10.437117576599121
    6. '```' → logprob: -14.687117576599121
    7. ':return' → logprob: -15.187117576599121
    8. '	return' → logprob: -15.312117576599121
    9. '  
' → logprob: -16.812118530273438
    10. '_return' → logprob: -16.812118530273438

Token 672: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10035299509763718
    2. 'return' → logprob: -2.3503530025482178
    3. ' return' → logprob: -9.100353240966797
    4. '
' → logprob: -10.850353240966797
    5. '    
' → logprob: -11.600353240966797
    6. '```' → logprob: -13.100353240966797
    7. ':return' → logprob: -13.350353240966797
    8. '	return' → logprob: -13.725353240966797
    9. '<|end|>' → logprob: -15.100353240966797
    10. '{return' → logprob: -15.350353240966797

Token 673: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3133459687232971
    2. '   ' → logprob: -1.3133459091186523
    3. ' return' → logprob: -9.438345909118652
    4. ':return' → logprob: -13.688345909118652
    5. '```' → logprob: -13.813345909118652
    6. '
' → logprob: -13.813345909118652
    7. '	return' → logprob: -14.688345909118652
    8. '    
' → logprob: -14.688345909118652
    9. '{return' → logprob: -14.688345909118652
    10. '_return' → logprob: -16.93834686279297

Token 674: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.001936962129548192
    2. '   ' → logprob: -6.251936912536621
    3. ' return' → logprob: -11.751936912536621
    4. '
' → logprob: -14.626936912536621
    5. '```' → logprob: -17.626937866210938
    6. '    
' → logprob: -17.751937866210938
    7. '	return' → logprob: -18.126937866210938
    8. '  ' → logprob: -19.501937866210938
    9. '`' → logprob: -20.626937866210938
    10. '{return' → logprob: -20.876937866210938

Token 675: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.47407710552215576
    2. ' min' → logprob: -0.9740771055221558
    3. '(min' → logprob: -16.974077224731445
    4. '	min' → logprob: -18.349077224731445
    5. 'sorted' → logprob: -20.599077224731445
    6. '   ' → logprob: -20.974077224731445
    7. ' ' → logprob: -21.224077224731445
    8. 'max' → logprob: -21.349077224731445
    9. '_min' → logprob: -21.349077224731445
    10. '=min' → logprob: -21.474077224731445

Token 676: '(normal' (ID: 100011)
  Prédit: '(normal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(normal' → logprob: -6.704273118884885e-07
    2. 'normalized' → logprob: -14.250000953674316
    3. ' normalized' → logprob: -20.875
    4. '_normal' → logprob: -21.375
    5. '(' → logprob: -22.0
    6. 'normal' → logprob: -22.25
    7. '.normal' → logprob: -22.625
    8. '(
' → logprob: -22.75
    9. '(norm' → logprob: -23.25
    10. 'Normalized' → logprob: -24.125

Token 677: 'ized' (ID: 2110)
  Prédit: 'ized'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ized' → logprob: -4.320199877838604e-07
    2. 'ize' → logprob: -15.375
    3. 'IZED' → logprob: -16.625
    4. 'zed' → logprob: -19.875
    5. 'normalized' → logprob: -20.375
    6. 'iz' → logprob: -21.125
    7. '_normal' → logprob: -21.25
    8. '_' → logprob: -21.875
    9. 'ed' → logprob: -21.875
    10. '_vari' → logprob: -21.875

Token 678: '_vari' (ID: 94080)
  Prédit: '_vari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vari' → logprob: -9.372294698550832e-06
    2. '_normal' → logprob: -11.625009536743164
    3. '_variant' → logprob: -15.500009536743164
    4. 'variants' → logprob: -17.250009536743164
    5. '_var' → logprob: -18.250009536743164
    6. 'normalized' → logprob: -18.375009536743164
    7. '_versions' → logprob: -18.625009536743164
    8. '_vectors' → logprob: -18.750009536743164
    9. '_variables' → logprob: -18.875009536743164
    10. '_VARI' → logprob: -19.000009536743164

Token 679: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -6.704273118884885e-07
    2. 'nts' → logprob: -15.875000953674316
    3. 'ANTS' → logprob: -16.0
    4. 'ats' → logprob: -16.5
    5. 'ts' → logprob: -16.75
    6. 'ents' → logprob: -17.0
    7. ' ants' → logprob: -17.0
    8. 'a' → logprob: -17.625
    9. 'variants' → logprob: -18.0
    10. 's' → logprob: -18.0

Token 680: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. '   ' → logprob: -14.375001907348633
    3. ' )' → logprob: -14.625001907348633
    4. '())' → logprob: -14.875001907348633
    5. ')
' → logprob: -15.875001907348633
    6. '()' → logprob: -16.375001907348633
    7. '))' → logprob: -17.250001907348633
    8. '[' → logprob: -18.375001907348633
    9. ')`' → logprob: -18.375001907348633
    10. ' ' → logprob: -18.625001907348633

Token 681: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 682: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.001613173633813858
    2. 'main' → logprob: -6.501613140106201
    3. ' solve' → logprob: -9.50161361694336
    4. ' read' → logprob: -11.37661361694336
    5. ' process' → logprob: -11.50161361694336
    6. '_main' → logprob: -12.00161361694336
    7. ' input' → logprob: -13.50161361694336
    8. ' parse' → logprob: -13.62661361694336
    9. ' find' → logprob: -13.75161361694336
    10. 'solve' → logprob: -13.87661361694336

Token 683: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -8.160971628967673e-05
    2. '():
' → logprob: -10.375082015991211
    3. ' ():' → logprob: -10.500082015991211
    4. '(' → logprob: -11.625082015991211
    5. '()' → logprob: -12.125082015991211
    6. '(argv' → logprob: -12.625082015991211
    7. '(args' → logprob: -12.875082015991211
    8. '():
' → logprob: -14.250082015991211
    9. '()>' → logprob: -14.375082015991211
    10. '(argc' → logprob: -14.875082015991211

Token 684: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009550073184072971
    2. ' input' → logprob: -5.759550094604492
    3. ' lines' → logprob: -6.384550094604492
    4. '```' → logprob: -6.384550094604492
    5. 'import' → logprob: -7.134550094604492
    6. ' import' → logprob: -7.259550094604492
    7. ' line' → logprob: -7.884550094604492
    8. ' n' → logprob: -8.259550094604492
    9. ' readline' → logprob: -8.384550094604492
    10. 'input' → logprob: -8.884550094604492

Token 685: ' input' (ID: 3422)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.435977965593338
    2. ' input' → logprob: -1.3109779357910156
    3. '   ' → logprob: -2.8109779357910156
    4. 'n' → logprob: -4.185977935791016
    5. ' import' → logprob: -5.810977935791016
    6. ' lines' → logprob: -5.935977935791016
    7. 'input' (adapté à ' input') → logprob: -6.435977935791016
    8. ' line' → logprob: -8.060977935791016
    9. 'import' → logprob: -8.310977935791016
    10. ' for' → logprob: -8.435977935791016

Token 686: '_lines' (ID: 42980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5588559508323669
    2. '_line' → logprob: -1.1838560104370117
    3. '_data' → logprob: -2.6838560104370117
    4. '_lines' → logprob: -3.1838560104370117
    5. '=' → logprob: -5.308856010437012
    6. ' =' → logprob: -5.433856010437012
    7. '_' → logprob: -6.558856010437012
    8. 'line' → logprob: -7.933856010437012
    9. 'data' → logprob: -7.933856010437012
    10. '_points' → logprob: -8.058856010437012

Token 687: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06055797263979912
    2. '()' → logprob: -3.0605580806732178
    3. ' =' → logprob: -4.435557842254639
    4. '   ' → logprob: -10.310558319091797
    5. '=sys' → logprob: -11.935558319091797
    6. '=[]' → logprob: -13.435558319091797
    7. '_' → logprob: -13.435558319091797
    8. '[]' → logprob: -13.810558319091797
    9. '	' → logprob: -14.060558319091797
    10. '＝' → logprob: -14.185558319091797

Token 688: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0619756355881691
    2. ' sys' → logprob: -2.8119757175445557
    3. '[' → logprob: -11.936975479125977
    4. ' [' → logprob: -14.311975479125977
    5. '(sys' → logprob: -15.061975479125977
    6. '	sys' → logprob: -15.436975479125977
    7. '=sys' → logprob: -15.436975479125977
    8. 'list' → logprob: -16.311975479125977
    9. '   ' → logprob: -17.186975479125977
    10. ' ' → logprob: -19.186975479125977

Token 689: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -4.036524842376821e-05
    2. '.argv' → logprob: -11.000040054321289
    3. '.' → logprob: -11.125040054321289
    4. 'stdin' → logprob: -12.625040054321289
    5. '.stdout' → logprob: -13.000040054321289
    6. '.std' → logprob: -13.125040054321289
    7. '.readline' → logprob: -14.125040054321289
    8. '.st' → logprob: -15.250040054321289
    9. '(stdin' → logprob: -16.37504005432129
    10. '.input' → logprob: -16.50004005432129

Token 690: '.read' (ID: 7211)
  Prédit: '.readlines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.6175453662872314
    2. '.readline' → logprob: -1.1175453662872314
    3. '.read' → logprob: -2.4925453662872314
    4. 'read' → logprob: -2.9925453662872314
    5. '.' → logprob: -7.492545127868652
    6. '_read' → logprob: -8.617545127868652
    7. '_lines' → logprob: -10.492545127868652
    8. 'lines' → logprob: -11.617545127868652
    9. '=' → logprob: -12.992545127868652
    10. ' =' → logprob: -13.117545127868652

Token 691: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.023279840126633644
    2. '()' → logprob: -3.773279905319214
    3. '_lines' → logprob: -11.273280143737793
    4. 'lines' → logprob: -11.648280143737793
    5. '(' → logprob: -12.023280143737793
    6. '_line' → logprob: -13.023280143737793
    7. '()
' → logprob: -13.648280143737793
    8. '()

' → logprob: -14.023280143737793
    9. 'line' → logprob: -14.023280143737793
    10. '()\' → logprob: -14.523280143737793

Token 692: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.014163628220558167
    2. 'split' → logprob: -4.264163494110107
    3. 'rstrip' → logprob: -16.264163970947266
    4. 'decode' → logprob: -17.639163970947266
    5. ' strip' → logprob: -18.889163970947266
    6. 'str' → logprob: -20.639163970947266
    7. ' split' → logprob: -21.014163970947266
    8. '```' → logprob: -22.014163970947266
    9. 'read' → logprob: -22.264163970947266
    10. '(strip' → logprob: -22.514163970947266

Token 693: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0007107630372047424
    2. '()' → logprob: -7.250710964202881
    3. '()
' → logprob: -15.125710487365723
    4. '(' → logprob: -15.750710487365723
    5. 'split' → logprob: -15.875710487365723
    6. '.split' → logprob: -17.12571144104004
    7. ' ().' → logprob: -17.12571144104004
    8. '('' → logprob: -17.25071144104004
    9. '().'' → logprob: -17.37571144104004
    10. '()

' → logprob: -18.12571144104004

Token 694: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -17.25
    3. '(split' → logprob: -17.375
    4. 'spl' → logprob: -20.125
    5. 'strip' → logprob: -20.375
    6. '```' → logprob: -21.25
    7. 'rstrip' → logprob: -22.5
    8. 'plit' → logprob: -22.625
    9. 'decode' → logprob: -22.625
    10. 'sp' → logprob: -22.875

Token 695: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.6661757826805115
    2. '('' → logprob: -1.4161758422851562
    3. '()' → logprob: -1.6661758422851562
    4. 'lines' → logprob: -2.9161758422851562
    5. '("\' → logprob: -8.166175842285156
    6. '("("' → logprob: -9.291175842285156
    7. '(' → logprob: -9.541175842285156
    8. '()[' → logprob: -10.541175842285156
    9. '()\' → logprob: -10.541175842285156
    10. '('.')' → logprob: -10.791175842285156

Token 696: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.5776860184123507e-06
    2. '\n' → logprob: -13.00000286102295
    3. 'lines' → logprob: -15.25000286102295
    4. 'newline' → logprob: -18.250001907348633
    5. ' n' → logprob: -18.625001907348633
    6. '
' → logprob: -19.125001907348633
    7. ''\' → logprob: -19.750001907348633
    8. 'ndef' → logprob: -19.875001907348633
    9. '\' → logprob: -20.500001907348633
    10. 'nl' → logprob: -20.500001907348633

Token 697: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.47443199157714844
    2. ')' → logprob: -0.9744319915771484
    3. '')
' → logprob: -8.474431991577148
    4. '   ' → logprob: -9.099431991577148
    5. ')
' → logprob: -10.724431991577148
    6. ']' → logprob: -12.599431991577148
    7. '")' → logprob: -12.974431991577148
    8. '[' → logprob: -13.849431991577148
    9. ''' → logprob: -13.849431991577148
    10. '`)' → logprob: -13.849431991577148

Token 698: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.196103036403656
    2. 'n' → logprob: -2.446103096008301
    3. ' n' → logprob: -3.571103096008301
    4. 'idx' → logprob: -3.571103096008301
    5. 'i' → logprob: -3.946103096008301
    6. ' idx' → logprob: -5.071103096008301
    7. 'index' → logprob: -5.571103096008301
    8. ' i' → logprob: -6.071103096008301
    9. '```' → logprob: -6.321103096008301
    10. 'num' → logprob: -7.696103096008301

Token 699: ' idx' (ID: 14016)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18392597138881683
    2. 'idx' (adapté à ' idx') → logprob: -2.4339258670806885
    3. 't' → logprob: -2.9339258670806885
    4. 'i' → logprob: -3.9339258670806885
    5. 'num' → logprob: -5.558926105499268
    6. '   ' → logprob: -6.183926105499268
    7. 'index' → logprob: -6.558926105499268
    8. 'N' → logprob: -10.18392562866211
    9. ' idx' → logprob: -10.55892562866211
    10. 'line' → logprob: -10.80892562866211

Token 700: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07893528789281845
    2. '=' → logprob: -2.578935384750366
    3. '_' → logprob: -10.328935623168945
    4. ' +=' → logprob: -12.203935623168945
    5. '   ' → logprob: -12.578935623168945
    6. 's' → logprob: -13.953935623168945
    7. '0' → logprob: -14.453935623168945
    8. '+=' → logprob: -14.578935623168945
    9. ' ' → logprob: -14.703935623168945
    10. ')' → logprob: -15.078935623168945

Token 701: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06221359595656395
    2. '1' → logprob: -2.812213659286499
    3. ' ' → logprob: -8.312213897705078
    4. '   ' → logprob: -15.062213897705078
    5. '2' → logprob: -16.062213897705078
    6. '```' → logprob: -16.812213897705078
    7. '=' → logprob: -17.562213897705078
    8. '  ' → logprob: -18.874713897705078
    9. '[' → logprob: -18.937213897705078
    10. 'int' → logprob: -19.187213897705078

Token 702: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.038057904690504074
    2. '1' → logprob: -3.288057804107666
    3. ' ' → logprob: -11.038058280944824
    4. '   ' → logprob: -15.663058280944824
    5. '2' → logprob: -15.913058280944824
    6. '```' → logprob: -17.663057327270508
    7. '=' → logprob: -18.788057327270508
    8. 'int' → logprob: -18.913057327270508
    9. '  ' → logprob: -19.038057327270508
    10. '-' → logprob: -19.475557327270508

Token 703: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23410634696483612
    2. 'while' → logprob: -1.8591063022613525
    3. 'n' → logprob: -3.2341063022613525
    4. ' while' → logprob: -4.484106540679932
    5. 't' → logprob: -7.234106540679932
    6. 'num' → logprob: -7.484106540679932
    7. ' n' → logprob: -7.859106540679932
    8. '
' → logprob: -8.109106063842773
    9. 'N' → logprob: -9.234106063842773
    10. '```' → logprob: -10.359106063842773

Token 704: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6775690913200378
    2. 'n' → logprob: -1.1775691509246826
    3. ' n' → logprob: -2.8025691509246826
    4. ' while' → logprob: -2.8025691509246826
    5. 'while' → logprob: -3.0525691509246826
    6. 'num' → logprob: -5.0525689125061035
    7. 't' → logprob: -5.5525689125061035
    8. '```' → logprob: -5.8025689125061035
    9. ' t' → logprob: -7.4275689125061035
    10. ' T' → logprob: -7.4275689125061035

Token 705: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.7640787959098816
    2. 'n' → logprob: -1.2640788555145264
    3. ' while' → logprob: -2.2640788555145264
    4. '   ' → logprob: -2.7640788555145264
    5. 't' → logprob: -3.1390788555145264
    6. ' n' → logprob: -4.014078617095947
    7. 'num' → logprob: -4.264078617095947
    8. ' t' → logprob: -5.389078617095947
    9. 'T' → logprob: -5.889078617095947
    10. ' T' → logprob: -6.764078617095947

Token 706: ' True' (ID: 6432)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.5759546756744385
    2. ' idx' → logprob: -0.8259546756744385
    3. ' True' → logprob: -11.45095443725586
    4. 'True' → logprob: -13.07595443725586
    5. '(idx' → logprob: -13.70095443725586
    6. '	idx' → logprob: -14.07595443725586
    7. ' ' → logprob: -15.32595443725586
    8. 'int' → logprob: -16.57595443725586
    9. '_idx' → logprob: -16.57595443725586
    10. 'len' → logprob: -16.57595443725586

Token 707: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04337126761674881
    2. '       ' → logprob: -3.6683712005615234
    3. '   ' → logprob: -4.668371200561523
    4. ':
' → logprob: -5.043371200561523
    5. ',' → logprob: -8.168371200561523
    6. '[' → logprob: -8.543371200561523
    7. '<|end|>' → logprob: -8.668371200561523
    8. ' and' → logprob: -9.793371200561523
    9. '):' → logprob: -10.043371200561523
    10. '=' → logprob: -10.043371200561523

Token 708: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01779833622276783
    2. 'if' → logprob: -4.64279842376709
    3. ' if' → logprob: -5.26779842376709
    4. '       ' → logprob: -5.89279842376709
    5. 'n' → logprob: -10.26779842376709
    6. '```' → logprob: -10.76779842376709
    7. 'line' → logprob: -11.26779842376709
    8. ' n' → logprob: -11.64279842376709
    9. ' line' → logprob: -11.64279842376709
    10. 'try' → logprob: -13.01779842376709

Token 709: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5802489519119263
    2. 'if' (adapté à ' if') → logprob: -1.0802489519119263
    3. ' if' → logprob: -2.4552488327026367
    4. ' n' → logprob: -4.830248832702637
    5. '   ' → logprob: -5.205248832702637
    6. 'line' → logprob: -6.955248832702637
    7. ' line' → logprob: -7.830248832702637
    8. 'num' → logprob: -10.080248832702637
    9. 'count' → logprob: -11.955248832702637
    10. ' ' → logprob: -12.330248832702637

Token 710: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.5759562849998474
    2. 'idx' → logprob: -0.8259562849998474
    3. ' not' → logprob: -11.325956344604492
    4. '	idx' → logprob: -12.825956344604492
    5. 'not' → logprob: -14.450956344604492
    6. '   ' → logprob: -14.450956344604492
    7. ' ' → logprob: -14.700956344604492
    8. '(idx' → logprob: -14.950956344604492
    9. '_idx' → logprob: -15.700956344604492
    10. '  ' → logprob: -17.075956344604492

Token 711: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.281253844499588
    2. '>=' → logprob: -1.4062538146972656
    3. ']>=' → logprob: -10.156253814697266
    4. ')>=' → logprob: -10.281253814697266
    5. '==' → logprob: -11.031253814697266
    6. ' ==' → logprob: -11.656253814697266
    7. ' <' → logprob: -13.531253814697266
    8. '=' → logprob: -13.781253814697266
    9. ' ' → logprob: -13.906253814697266
    10. '   ' → logprob: -14.156253814697266

Token 712: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.935296834039036e-06
    2. ' len' → logprob: -12.75000286102295
    3. '(len' → logprob: -20.125003814697266
    4. 'input' → logprob: -20.625003814697266
    5. 'length' → logprob: -21.875003814697266
    6. '   ' → logprob: -22.000003814697266
    7. '
' → logprob: -22.625003814697266
    8. '=len' → logprob: -22.750003814697266
    9. ',len' → logprob: -22.875003814697266
    10. '[len' → logprob: -23.125003814697266

Token 713: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -3.5954712075181305e-05
    2. 'input' → logprob: -10.250036239624023
    3. ' input' → logprob: -14.875036239624023
    4. ' (' → logprob: -15.875036239624023
    5. '=input' → logprob: -16.875036239624023
    6. ',input' → logprob: -17.750036239624023
    7. '<input' → logprob: -19.250036239624023
    8. '[input' → logprob: -19.375036239624023
    9. '(' → logprob: -19.500036239624023
    10. '(inputs' → logprob: -20.000036239624023

Token 714: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -15.000000953674316
    3. ')' → logprob: -16.0
    4. '_)' → logprob: -16.375
    5. ')_' → logprob: -16.5
    6. 'lines' → logprob: -17.75
    7. '_line' → logprob: -17.75
    8. '```' → logprob: -17.75
    9. '_LINES' → logprob: -18.125
    10. '_
' → logprob: -18.25

Token 715: '):
' (ID: 1883)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.016980260610580444
    2. ':' → logprob: -5.016980171203613
    3. ':
' → logprob: -5.266980171203613
    4. 'or' → logprob: -5.391980171203613
    5. '   ' → logprob: -8.641980171203613
    6. '       ' → logprob: -9.141980171203613
    7. ')' → logprob: -9.266980171203613
    8. '	or' → logprob: -10.266980171203613
    9. ' and' → logprob: -10.891980171203613
    10. '):
' → logprob: -10.891980171203613

Token 716: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001875671005109325
    2. '       ' → logprob: -8.875187873840332
    3. '   ' → logprob: -10.500187873840332
    4. ' break' → logprob: -12.000187873840332
    5. '		' → logprob: -12.500187873840332
    6. 'break' → logprob: -13.125187873840332
    7. ',' → logprob: -13.250187873840332
    8. ':' → logprob: -13.375187873840332
    9. ':
' → logprob: -13.750187873840332
    10. ' ' → logprob: -14.250187873840332

Token 717: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0427892841398716
    2. '       ' → logprob: -3.5427892208099365
    3. ' break' → logprob: -4.542789459228516
    4. 'return' → logprob: -6.167789459228516
    5. '	break' → logprob: -9.167789459228516
    6. '           ' → logprob: -9.417789459228516
    7. ' return' → logprob: -11.292789459228516
    8. '   ' → logprob: -11.417789459228516
    9. '
' → logprob: -13.417789459228516
    10. '_break' → logprob: -13.542789459228516

Token 718: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0245469119399786
    2. '
' → logprob: -3.7745468616485596
    3. '        
' → logprob: -6.899547100067139
    4. '  
' → logprob: -9.39954662322998
    5. '   ' → logprob: -9.64954662322998
    6. '<|end|>' → logprob: -10.39954662322998
    7. '    
' → logprob: -10.52454662322998
    8. '	' → logprob: -10.77454662322998
    9. ',' → logprob: -10.77454662322998
    10. '
' → logprob: -11.64954662322998

Token 719: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01442438643425703
    2. '   ' → logprob: -4.5144243240356445
    3. '        
' → logprob: -6.6394243240356445
    4. '```' → logprob: -7.1394243240356445
    5. '    
' → logprob: -8.264424324035645
    6. 'n' → logprob: -8.639424324035645
    7. '<|end|>' → logprob: -8.639424324035645
    8. ' ' → logprob: -9.264424324035645
    9. '
' → logprob: -9.264424324035645
    10. '  
' → logprob: -9.389424324035645

Token 720: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.011013866402208805
    2. ' n' → logprob: -4.886013984680176
    3. '   ' → logprob: -6.761013984680176
    4. 'num' → logprob: -6.886013984680176
    5. 'line' → logprob: -7.386013984680176
    6. '       ' → logprob: -7.761013984680176
    7. 'count' → logprob: -9.136013984680176
    8. ' line' → logprob: -10.386013984680176
    9. 'N' → logprob: -11.136013984680176
    10. ' num' → logprob: -11.761013984680176

Token 721: '_line' (ID: 14418)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759560465812683
    2. ' =' → logprob: -0.8259560465812683
    3. '=int' → logprob: -11.450956344604492
    4. '_line' → logprob: -12.700956344604492
    5. '=line' → logprob: -12.950956344604492
    6. ')' → logprob: -15.575956344604492
    7. ' ' → logprob: -15.700956344604492
    8. '_str' → logprob: -16.825956344604492
    9. 'line' → logprob: -17.450956344604492
    10. '＝' → logprob: -17.575956344604492

Token 722: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022615134716034
    2. ' =' → logprob: -1.9102261066436768
    3. 's' → logprob: -13.535225868225098
    4. '=line' → logprob: -15.160225868225098
    5. '=n' → logprob: -16.285226821899414
    6. ',' → logprob: -16.285226821899414
    7. ' ' → logprob: -16.410226821899414
    8. '   ' → logprob: -16.410226821899414
    9. '=int' → logprob: -17.285226821899414
    10. ')' → logprob: -17.410226821899414

Token 723: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.000912774819880724
    2. ' input' → logprob: -7.000912666320801
    3. 'int' → logprob: -13.6259126663208
    4. '   ' → logprob: -18.625913619995117
    5. '(input' → logprob: -18.875913619995117
    6. ' ' → logprob: -19.125913619995117
    7. '=input' → logprob: -20.000913619995117
    8. ' int' → logprob: -20.625913619995117
    9. '<input' → logprob: -20.750913619995117
    10. 'output' → logprob: -21.250913619995117

Token 724: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.00029589756741188467
    2. 'lines' → logprob: -8.875295639038086
    3. '_line' → logprob: -10.125295639038086
    4. '()' → logprob: -10.750295639038086
    5. 's' → logprob: -10.875295639038086
    6. 'Lines' → logprob: -11.250295639038086
    7. '```' → logprob: -11.625295639038086
    8. 'ines' → logprob: -11.750295639038086
    9. '[' → logprob: -11.875295639038086
    10. '_tokens' → logprob: -12.625295639038086

Token 725: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.008457367308437824
    2. ' =' → logprob: -5.508457183837891
    3. '=' → logprob: -5.633457183837891
    4. 'idx' → logprob: -7.258457183837891
    5. '(idx' → logprob: -11.13345718383789
    6. 's' → logprob: -11.25845718383789
    7. '```' → logprob: -11.25845718383789
    8. '   ' → logprob: -11.38345718383789
    9. ']' → logprob: -12.00845718383789
    10. ' idx' → logprob: -12.25845718383789

Token 726: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.5795046091079712
    2. ']
' → logprob: -1.4545046091079712
    3. ']' → logprob: -1.5795046091079712
    4. '])
' → logprob: -9.57950496673584
    5. '];' → logprob: -10.57950496673584
    6. '])' → logprob: -10.57950496673584
    7. ']
' → logprob: -11.07950496673584
    8. '.strip' → logprob: -11.45450496673584
    9. ' ].' → logprob: -11.82950496673584
    10. ':].' → logprob: -11.95450496673584

Token 727: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: 0.0
    2. 'rstrip' → logprob: -19.75
    3. 'split' → logprob: -20.375
    4. ' strip' → logprob: -21.25
    5. 'str' → logprob: -22.125
    6. '_strip' → logprob: -22.5
    7. '.strip' → logprob: -23.0
    8. '(strip' → logprob: -23.125
    9. 'trim' → logprob: -23.5
    10. 'Strip' → logprob: -23.875

Token 728: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.2038394808769226
    2. '()' → logprob: -1.7038395404815674
    3. '       ' → logprob: -6.078839302062988
    4. '()
' → logprob: -10.453839302062988
    5. 'if' → logprob: -11.078839302062988
    6. '=' → logprob: -11.078839302062988
    7. '()\' → logprob: -11.078839302062988
    8. '
' → logprob: -11.703839302062988
    9. ' =' → logprob: -11.953839302062988
    10. 'def' → logprob: -12.078839302062988

Token 729: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3843464255332947
    2. 'if' → logprob: -1.5093464851379395
    3. '   ' → logprob: -3.0093464851379395
    4. ' if' → logprob: -3.8843464851379395
    5. 'idx' → logprob: -4.1343464851379395
    6. '        
' → logprob: -5.5093464851379395
    7. '
' → logprob: -6.3843464851379395
    8. '\n' → logprob: -6.5093464851379395
    9. '```' → logprob: -7.0093464851379395
    10. '  
' → logprob: -7.2593464851379395

Token 730: ' idx' (ID: 14016)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2520028352737427
    2. 'idx' (adapté à ' idx') → logprob: -1.5020028352737427
    3. ' if' → logprob: -9.877002716064453
    4. 'n' → logprob: -11.127002716064453
    5. ' idx' → logprob: -12.127002716064453
    6. '       ' → logprob: -13.752002716064453
    7. '   ' → logprob: -14.127002716064453
    8. '```' → logprob: -15.127002716064453
    9. '[idx' → logprob: -16.252002716064453
    10. '	idx' → logprob: -16.877002716064453

Token 731: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.011309645138680935
    2. ' +=' → logprob: -4.511309623718262
    3. '+' → logprob: -8.261309623718262
    4. '=' → logprob: -13.261309623718262
    5. '++' → logprob: -13.886309623718262
    6. ']+=' → logprob: -15.136309623718262
    7. '```' → logprob: -15.761309623718262
    8. '+="' → logprob: -15.886309623718262
    9. '+='' → logprob: -16.511310577392578
    10. '==' → logprob: -16.886310577392578

Token 732: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -20.75
    4. '
' → logprob: -21.0
    5. '   ' → logprob: -22.25
    6. '１' → logprob: -23.0
    7. 'int' → logprob: -23.625
    8. '``' → logprob: -23.75
    9. '0' → logprob: -24.0
    10. '`' → logprob: -24.125

Token 733: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '```' → logprob: -20.25
    4. '
' → logprob: -21.875
    5. '0' → logprob: -22.375
    6. '   ' → logprob: -22.75
    7. '１' → logprob: -22.75
    8. '``' → logprob: -23.25
    9. '`' → logprob: -23.625
    10. 'int' → logprob: -24.25

Token 734: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07048184424638748
    2. 'if' → logprob: -2.945481777191162
    3. ' if' → logprob: -4.195481777191162
    4. 'n' → logprob: -8.07048225402832
    5. '   ' → logprob: -9.94548225402832
    6. '```' → logprob: -10.82048225402832
    7. ' n' → logprob: -11.19548225402832
    8. '        
' → logprob: -12.57048225402832
    9. '<|end|>' → logprob: -12.57048225402832
    10. '
' → logprob: -12.69548225402832

Token 735: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13759151101112366
    2. '       ' → logprob: -2.137591600418091
    3. ' if' → logprob: -4.637591361999512
    4. 'n' → logprob: -7.012591361999512
    5. '   ' → logprob: -11.012591361999512
    6. '```' → logprob: -12.262591361999512
    7. ' n' → logprob: -12.762591361999512
    8. '	if' → logprob: -14.387591361999512
    9. '        
' → logprob: -15.512591361999512
    10. 'If' → logprob: -15.887591361999512

Token 736: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -2.2007883671903983e-05
    2. 'n' → logprob: -11.000021934509277
    3. ' if' → logprob: -12.250021934509277
    4. '       ' → logprob: -14.500021934509277
    5. '   ' → logprob: -18.250022888183594
    6. '```' → logprob: -18.375022888183594
    7. 'If' → logprob: -21.625022888183594
    8. 'try' → logprob: -22.000022888183594
    9. '
' → logprob: -22.125022888183594
    10. '	if' → logprob: -22.500022888183594

Token 737: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8247887492179871
    2. ' not' → logprob: -1.0747888088226318
    3. ' n' → logprob: -1.5747888088226318
    4. 'not' → logprob: -4.324788570404053
    5. 'n't' → logprob: -11.449789047241211
    6. ' ' → logprob: -13.324789047241211
    7. '   ' → logprob: -13.949789047241211
    8. '	n' → logprob: -14.574789047241211
    9. '!' → logprob: -14.949789047241211
    10. ' n't' → logprob: -15.574789047241211

Token 738: '_line' (ID: 14418)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1463642120361328
    2. ' ==' → logprob: -2.021364212036133
    3. '=' → logprob: -5.646364212036133
    4. '_' → logprob: -10.146364212036133
    5. '<=' → logprob: -10.271364212036133
    6. ' =' → logprob: -10.271364212036133
    7. '```' → logprob: -11.146364212036133
    8. ' ' → logprob: -12.396364212036133
    9. '===' → logprob: -12.521364212036133
    10. '_line' → logprob: -12.771364212036133

Token 739: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0789719671010971
    2. ' ==' → logprob: -2.5789718627929688
    3. '=' → logprob: -9.578971862792969
    4. '===' → logprob: -11.703971862792969
    5. '()==' → logprob: -12.828971862792969
    6. ']==' → logprob: -14.328971862792969
    7. '==
' → logprob: -14.828971862792969
    8. ' =' → logprob: -14.953971862792969
    9. '=='' → logprob: -15.328971862792969
    10. ')==' → logprob: -15.328971862792969

Token 740: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02091413363814354
    2. '"' → logprob: -4.520914077758789
    3. '''' → logprob: -4.645914077758789
    4. '""' → logprob: -8.770914077758789
    5. ' '' → logprob: -10.270914077758789
    6. '0' → logprob: -11.020914077758789
    7. '"":' → logprob: -13.270914077758789
    8. ''O' → logprob: -13.395914077758789
    9. ''end' → logprob: -13.395914077758789
    10. ''q' → logprob: -13.895914077758789

Token 741: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004115442745387554
    2. ''' → logprob: -5.504115581512451
    3. '"' → logprob: -10.629115104675293
    4. '':' → logprob: -11.879115104675293
    5. '''' → logprob: -12.379115104675293
    6. ' ' → logprob: -14.379115104675293
    7. '':
' → logprob: -14.879115104675293
    8. '""' → logprob: -15.129115104675293
    9. '\'' → logprob: -15.629115104675293
    10. '```' → logprob: -16.50411605834961

Token 742: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.2523828446865082
    2. '':' → logprob: -1.5023828744888306
    3. ''' → logprob: -8.0023832321167
    4. '':
' → logprob: -9.3773832321167
    5. '\n' → logprob: -10.6273832321167
    6. ''):
' → logprob: -11.8773832321167
    7. '":
' → logprob: -14.5023832321167
    8. ':
' → logprob: -14.6273832321167
    9. '':

' → logprob: -14.6273832321167
    10. ':' → logprob: -14.6273832321167

Token 743: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00012511172099038959
    2. '       ' → logprob: -9.12512493133545
    3. '		' → logprob: -12.37512493133545
    4. ':' → logprob: -12.75012493133545
    5. '          ' → logprob: -13.00012493133545
    6. '	       ' → logprob: -13.12512493133545
    7. '   ' → logprob: -13.37512493133545
    8. ':
' → logprob: -14.25012493133545
    9. '               ' → logprob: -14.37512493133545
    10. ' break' → logprob: -14.62512493133545

Token 744: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.22943466901779175
    2. '       ' → logprob: -1.9794347286224365
    3. ' break' → logprob: -2.9794347286224365
    4. '           ' → logprob: -4.479434490203857
    5. 'return' → logprob: -5.479434490203857
    6. '	break' → logprob: -7.729434490203857
    7. ' return' → logprob: -10.354434967041016
    8. '               ' → logprob: -10.479434967041016
    9. '   ' → logprob: -11.354434967041016
    10. '		' → logprob: -11.979434967041016

Token 745: ' End' (ID: 6437)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.002228525234386325
    2. 'return' → logprob: -6.502228736877441
    3. ' break' → logprob: -7.252228736877441
    4. '       ' → logprob: -11.002228736877441
    5. '           ' → logprob: -15.252228736877441
    6. '	break' → logprob: -15.752228736877441
    7. ' return' → logprob: -16.002227783203125
    8. 'Break' → logprob: -16.252227783203125
    9. '```' → logprob: -18.502227783203125
    10. '_break' → logprob: -19.627227783203125

Token 746: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5282641649246216
    2. '       ' → logprob: -0.9032641649246216
    3. 'break' → logprob: -5.653264045715332
    4. '               ' → logprob: -7.278264045715332
    5. 'if' → logprob: -8.778264045715332
    6. 'return' → logprob: -9.278264045715332
    7. '   ' → logprob: -9.403264045715332
    8. '          ' → logprob: -9.528264045715332
    9. ' of' → logprob: -9.653264045715332
    10. '        ' → logprob: -9.903264045715332

Token 747: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006834367755800486
    2. ' input' → logprob: -5.256834506988525
    3. 'program' → logprob: -6.506834506988525
    4. 'file' → logprob: -9.631834030151367
    5. 'processing' → logprob: -10.631834030151367
    6. ' program' → logprob: -11.381834030151367
    7. 'the' → logprob: -13.506834030151367
    8. '_input' → logprob: -14.131834030151367
    9. 'execution' → logprob: -14.381834030151367
    10. 'inputs' → logprob: -14.631834030151367

Token 748: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25200551748275757
    2. '       ' → logprob: -1.5020055770874023
    3. '               ' → logprob: -10.752005577087402
    4. '          ' → logprob: -11.377005577087402
    5. '		' → logprob: -11.502005577087402
    6. '\n' → logprob: -12.002005577087402
    7. '
' → logprob: -12.377005577087402
    8. '        ' → logprob: -12.502005577087402
    9. '      ' → logprob: -12.502005577087402
    10. '   ' → logprob: -12.627005577087402

Token 749: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002498609945178032
    2. '       ' → logprob: -6.002498626708984
    3. '		' → logprob: -11.252498626708984
    4. '          ' → logprob: -12.502498626708984
    5. '               ' → logprob: -13.002498626708984
    6. '   ' → logprob: -13.502498626708984
    7. ',' → logprob: -14.502498626708984
    8. '	       ' → logprob: -14.502498626708984
    9. '         ' → logprob: -14.627498626708984
    10. '        ' → logprob: -16.002498626708984

Token 750: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.04655608907341957
    2. ' break' → logprob: -3.796555995941162
    3. '           ' → logprob: -4.296555995941162
    4. '       ' → logprob: -4.796555995941162
    5. 'return' → logprob: -6.796555995941162
    6. '	break' → logprob: -10.17155647277832
    7. '               ' → logprob: -12.29655647277832
    8. ' return' → logprob: -12.42155647277832
    9. '		' → logprob: -13.42155647277832
    10. '   ' → logprob: -14.42155647277832

Token 751: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005039428360760212
    2. '        
' → logprob: -8.250503540039062
    3. 'n' → logprob: -9.375503540039062
    4. '<|end|>' → logprob: -9.500503540039062
    5. '```' → logprob: -10.375503540039062
    6. '
' → logprob: -10.500503540039062
    7. '   ' → logprob: -12.500503540039062
    8. '  
' → logprob: -12.750503540039062
    9. '           ' → logprob: -12.875503540039062
    10. ',' → logprob: -13.000503540039062

Token 752: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014263052493333817
    2. 'n' → logprob: -4.264263153076172
    3. ' n' → logprob: -10.389263153076172
    4. '```' → logprob: -10.514263153076172
    5. '        
' → logprob: -10.889263153076172
    6. '   ' → logprob: -11.389263153076172
    7. '<|end|>' → logprob: -12.764263153076172
    8. ',' → logprob: -13.264263153076172
    9. '           ' → logprob: -13.764263153076172
    10. ',n' → logprob: -13.889263153076172

Token 753: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.006036038976162672
    2. ' n' → logprob: -5.256035804748535
    3. '       ' → logprob: -7.131035804748535
    4. 'num' → logprob: -14.131035804748535
    5. '   ' → logprob: -14.256035804748535
    6. '```' → logprob: -14.881035804748535
    7. '        
' → logprob: -16.00603675842285
    8. '	n' → logprob: -16.25603675842285
    9. '           ' → logprob: -17.00603675842285
    10. ',n' → logprob: -18.13103675842285

Token 754: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31327277421951294
    2. '=' → logprob: -1.3132727146148682
    3. '=int' → logprob: -11.438272476196289
    4. ')' → logprob: -16.18827247619629
    5. ' ' → logprob: -16.43827247619629
    6. ',' → logprob: -16.93827247619629
    7. '_' → logprob: -17.06327247619629
    8. '＝' → logprob: -17.43827247619629
    9. ' =
' → logprob: -17.81327247619629
    10. '   ' → logprob: -18.06327247619629

Token 755: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011047814972698689
    2. ' int' → logprob: -4.511047840118408
    3. '(int' → logprob: -21.26104736328125
    4. '[int' → logprob: -22.38604736328125
    5. '	int' → logprob: -22.51104736328125
    6. '=int' → logprob: -22.88604736328125
    7. '       ' → logprob: -23.26104736328125
    8. '<int' → logprob: -24.13604736328125
    9. '   ' → logprob: -24.13604736328125
    10. '```' → logprob: -24.13604736328125

Token 756: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0001848254178185016
    2. 'n' → logprob: -8.625185012817383
    3. '(' → logprob: -12.500185012817383
    4. ' (' → logprob: -13.500185012817383
    5. ' n' → logprob: -16.250185012817383
    6. '(
' → logprob: -18.250185012817383
    7. '```' → logprob: -19.250185012817383
    8. ')n' → logprob: -19.375185012817383
    9. '	n' → logprob: -19.500185012817383
    10. '((' → logprob: -19.625185012817383

Token 757: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -2.7968066206085496e-05
    2. 'line' → logprob: -10.625027656555176
    3. '(n' → logprob: -13.125027656555176
    4. 'Line' → logprob: -14.500027656555176
    5. ')' → logprob: -14.750027656555176
    6. '(line' → logprob: -15.375027656555176
    7. 'n' → logprob: -15.875027656555176
    8. '_lines' → logprob: -16.000028610229492
    9. ')n' → logprob: -16.625028610229492
    10. '_n' → logprob: -16.750028610229492

Token 758: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00031508569372817874
    2. ')
' → logprob: -8.125314712524414
    3. '       ' → logprob: -11.250314712524414
    4. ' )' → logprob: -13.375314712524414
    5. '<|end|>' → logprob: -13.375314712524414
    6. '   ' → logprob: -13.875314712524414
    7. ')#' → logprob: -14.625314712524414
    8. '#' → logprob: -15.000314712524414
    9. '),' → logprob: -16.250314712524414
    10. '))' → logprob: -16.500314712524414

Token 759: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21096593141555786
    2. 'points' → logprob: -1.710965871810913
    3. ' points' → logprob: -4.960966110229492
    4. '	points' → logprob: -6.335966110229492
    5. '   ' → logprob: -8.210966110229492
    6. '```' → logprob: -8.335966110229492
    7. '(points' → logprob: -8.960966110229492
    8. '_points' → logprob: -10.085966110229492
    9. '        
' → logprob: -11.210966110229492
    10. '<|end|>' → logprob: -11.210966110229492

Token 760: ' polygon' (ID: 65081)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.015866952016949654
    2. ' points' → logprob: -4.265866756439209
    3. '       ' → logprob: -6.390866756439209
    4. '	points' → logprob: -11.015867233276367
    5. '_points' → logprob: -13.015867233276367
    6. '(points' → logprob: -13.015867233276367
    7. '   ' → logprob: -13.640867233276367
    8. 'pts' → logprob: -13.765867233276367
    9. 'shape' → logprob: -14.390867233276367
    10. '.points' → logprob: -14.515867233276367

Token 761: 'al' (ID: 280)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7872682809829712
    2. ' =' → logprob: -0.7872682809829712
    3. '_points' → logprob: -2.4122681617736816
    4. 'points' → logprob: -9.28726863861084
    5. '=[]' → logprob: -9.78726863861084
    6. 's' → logprob: -11.28726863861084
    7. '_pts' → logprob: -11.53726863861084
    8. '=[]
' → logprob: -11.91226863861084
    9. 'Points' → logprob: -12.16226863861084
    10. ' points' → logprob: -12.28726863861084

Token 762: '_lines' (ID: 42980)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.19523541629314423
    2. '=' → logprob: -2.07023549079895
    3. '_line' → logprob: -3.57023549079895
    4. '_lines' → logprob: -4.445235252380371
    5. ' =' → logprob: -4.945235252380371
    6. '=line' → logprob: -6.070235252380371
    7. 'points' → logprob: -6.945235252380371
    8. 'line' → logprob: -7.820235252380371
    9. '=[]' → logprob: -8.445235252380371
    10. '_shape' → logprob: -9.570235252380371

Token 763: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6328142285346985
    2. ' =' → logprob: -0.7578142285346985
    3. 's' → logprob: -9.132814407348633
    4. '=[]' → logprob: -9.757814407348633
    5. '_points' → logprob: -10.257814407348633
    6. '   ' → logprob: -11.882814407348633
    7. 'points' → logprob: -13.382814407348633
    8. '[]' → logprob: -14.132814407348633
    9. '=[]
' → logprob: -14.257814407348633
    10. '  ' → logprob: -14.257814407348633

Token 764: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.002853136509656906
    2. '[' → logprob: -6.002852916717529
    3. '[]
' → logprob: -8.252853393554688
    4. ' []' → logprob: -9.252853393554688
    5. '[input' → logprob: -11.252853393554688
    6. '[n' → logprob: -12.877853393554688
    7. '   ' → logprob: -14.252853393554688
    8. '[data' → logprob: -14.377853393554688
    9. '[array' → logprob: -14.627853393554688
    10. '[p' → logprob: -15.002853393554688

Token 765: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005911257583647966
    2. ' for' → logprob: -5.505911350250244
    3. '<|end|>' → logprob: -7.005911350250244
    4. 'for' → logprob: -7.630911350250244
    5. '	for' → logprob: -9.630910873413086
    6. '	   ' → logprob: -9.630910873413086
    7. '   ' → logprob: -9.755910873413086
    8. ',' → logprob: -9.880910873413086
    9. '	       ' → logprob: -9.880910873413086
    10. '```' → logprob: -10.005910873413086

Token 766: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0009707756689749658
    2. ' for' → logprob: -7.000970840454102
    3. '       ' → logprob: -9.750970840454102
    4. 'points' → logprob: -14.875970840454102
    5. '
' → logprob: -15.125970840454102
    6. '	for' → logprob: -15.375970840454102
    7. '```' → logprob: -16.0009708404541
    8. '   ' → logprob: -16.6259708404541
    9. '``' → logprob: -18.7509708404541
    10. '[' → logprob: -19.3759708404541

Token 767: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00011021859245374799
    2. '_i' → logprob: -9.375110626220703
    3. '_in' → logprob: -11.000110626220703
    4. '_range' → logprob: -12.375110626220703
    5. '_line' → logprob: -14.500110626220703
    6. ' _' → logprob: -14.500110626220703
    7. '_j' → logprob: -15.125110626220703
    8. '_points' → logprob: -15.375110626220703
    9. '_step' → logprob: -15.750110626220703
    10. '_input' → logprob: -15.875110626220703

Token 768: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008884357288479805
    2. 'in' → logprob: -5.008884429931641
    3. ' range' → logprob: -6.758884429931641
    4. ' in' → logprob: -7.133884429931641
    5. '_' → logprob: -8.50888442993164
    6. '_range' → logprob: -13.25888442993164
    7. 'i' → logprob: -13.50888442993164
    8. ' ' → logprob: -13.75888442993164
    9. '   ' → logprob: -14.00888442993164
    10. ')' → logprob: -14.50888442993164

Token 769: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.547789674485102e-05
    2. ' range' → logprob: -10.250035285949707
    3. '	range' → logprob: -19.875036239624023
    4. '   ' → logprob: -20.875036239624023
    5. '(range' → logprob: -20.875036239624023
    6. '_range' → logprob: -21.000036239624023
    7. '[' → logprob: -22.625036239624023
    8. ')' → logprob: -22.875036239624023
    9. '...' → logprob: -22.875036239624023
    10. 'Range' → logprob: -22.875036239624023

Token 770: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0002541872672736645
    2. 'n' → logprob: -8.37525463104248
    3. '(' → logprob: -10.75025463104248
    4. 'range' → logprob: -13.75025463104248
    5. '(range' → logprob: -15.00025463104248
    6. ' n' → logprob: -15.37525463104248
    7. ' (' → logprob: -15.62525463104248
    8. '   ' → logprob: -16.000253677368164
    9. ' ' → logprob: -16.875253677368164
    10. ' range' → logprob: -17.000253677368164

Token 771: '+' (ID: 10)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.09011857956647873
    2. '):' → logprob: -2.465118646621704
    3. '       ' → logprob: -7.340118408203125
    4. ':
' → logprob: -8.840118408203125
    5. '):
' → logprob: -9.090118408203125
    6. ':' → logprob: -9.340118408203125
    7. '           ' → logprob: -9.465118408203125
    8. '   ' → logprob: -9.965118408203125
    9. ',' → logprob: -10.965118408203125
    10. '():
' → logprob: -11.590118408203125

Token 772: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008152276859618723
    2. ' ' → logprob: -7.125815391540527
    3. '0' → logprob: -12.625815391540527
    4. '+' → logprob: -12.750815391540527
    5. '2' → logprob: -12.750815391540527
    6. '=' → logprob: -14.375815391540527
    7. '   ' → logprob: -14.375815391540527
    8. ')' → logprob: -15.750815391540527
    9. '  ' → logprob: -16.43831443786621
    10. 'n' → logprob: -16.75081443786621

Token 773: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5790622234344482
    2. '):' → logprob: -1.9540622234344482
    3. ':
' → logprob: -2.2040622234344482
    4. ':' → logprob: -2.3290622234344482
    5. '       ' → logprob: -2.7040622234344482
    6. '():
' → logprob: -4.704062461853027
    7. '   ' → logprob: -5.204062461853027
    8. '           ' → logprob: -6.079062461853027
    9. '<|end|>' → logprob: -6.079062461853027
    10. ',' → logprob: -6.204062461853027

Token 774: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011918721720576286
    2. ' line' → logprob: -4.886918544769287
    3. '	       ' → logprob: -6.636918544769287
    4. '   ' → logprob: -7.761918544769287
    5. ' points' → logprob: -7.886918544769287
    6. ' lines' → logprob: -8.011919021606445
    7. '       ' → logprob: -8.261919021606445
    8. 'points' → logprob: -8.261919021606445
    9. '```' → logprob: -8.261919021606445
    10. '<|end|>' → logprob: -8.261919021606445

Token 775: ' m' (ID: 284)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -1.2646842002868652
    2. '           ' → logprob: -1.6396842002868652
    3. 'point' → logprob: -1.8896842002868652
    4. 'line' → logprob: -2.2646842002868652
    5. ' point' → logprob: -2.5146842002868652
    6. 'points' → logprob: -2.8896842002868652
    7. ' points' → logprob: -3.3896842002868652
    8. 'coords' → logprob: -3.8896842002868652
    9. 'xy' → logprob: -4.264684200286865
    10. ' coords' → logprob: -4.264684200286865

Token 776: ' =' (ID: 314)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.00047261794679798186
    2. ' =' → logprob: -7.875472545623779
    3. '=line' → logprob: -10.125473022460938
    4. '=' → logprob: -11.250473022460938
    5. 'line' → logprob: -11.625473022460938
    6. '   ' → logprob: -11.750473022460938
    7. '_points' → logprob: -11.875473022460938
    8. '_lines' → logprob: -11.875473022460938
    9. '_tokens' → logprob: -13.500473022460938
    10. ',' → logprob: -13.875473022460938

Token 777: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0001234428636962548
    2. ' int' → logprob: -9.000123023986816
    3. '(int' → logprob: -18.375123977661133
    4. '=int' → logprob: -18.375123977661133
    5. '           ' → logprob: -18.625123977661133
    6. '[int' → logprob: -19.250123977661133
    7. '<int' → logprob: -19.750123977661133
    8. '   ' → logprob: -20.375123977661133
    9. '	int' → logprob: -20.625123977661133
    10. 'len' → logprob: -21.500123977661133

Token 778: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0009153862483799458
    2. 'input' → logprob: -7.00091552734375
    3. '(' → logprob: -12.50091552734375
    4. ' (' → logprob: -16.12591552734375
    5. '(
' → logprob: -16.87591552734375
    6. ' input' → logprob: -17.00091552734375
    7. '((' → logprob: -17.75091552734375
    8. '=input' → logprob: -17.87591552734375
    9. ',input' → logprob: -18.75091552734375
    10. '   ' → logprob: -19.50091552734375

Token 779: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.23522095382213593
    2. '_line' → logprob: -2.1102209091186523
    3. '(input' → logprob: -2.4852209091186523
    4. 'line' → logprob: -6.110220909118652
    5. 'lines' → logprob: -6.485220909118652
    6. '(lines' → logprob: -7.610220909118652
    7. '(line' → logprob: -8.610220909118652
    8. ')' → logprob: -8.610220909118652
    9. 'input' → logprob: -9.235220909118652
    10. '(_' → logprob: -9.485220909118652

Token 780: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00014132341311778873
    2. 'idx' → logprob: -9.000141143798828
    3. '(idx' → logprob: -11.125141143798828
    4. '   ' → logprob: -13.625141143798828
    5. ' idx' → logprob: -14.500141143798828
    6. ' [' → logprob: -14.750141143798828
    7. '[' → logprob: -15.500141143798828
    8. '```' → logprob: -15.625141143798828
    9. '[index' → logprob: -16.000141143798828
    10. '       ' → logprob: -16.375141143798828

Token 781: '].' (ID: 1651)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.3132808804512024
    2. '])' → logprob: -2.0632808208465576
    3. '].' → logprob: -2.1882808208465576
    4. '])
' → logprob: -4.188281059265137
    5. 'idx' → logprob: -4.688281059265137
    6. '(idx' → logprob: -5.688281059265137
    7. '][' → logprob: -7.063281059265137
    8. '   ' → logprob: -7.938281059265137
    9. '[' → logprob: -8.313281059265137
    10. ' idx' → logprob: -8.938281059265137

Token 782: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -3.214019307051785e-05
    2. 'idx' → logprob: -10.375032424926758
    3. '.strip' → logprob: -15.250032424926758
    4. ' strip' → logprob: -15.875032424926758
    5. ')' → logprob: -16.250032424926758
    6. 'split' → logprob: -16.500032424926758
    7. 'rstrip' → logprob: -16.500032424926758
    8. 'trim' → logprob: -16.875032424926758
    9. '_strip' → logprob: -17.000032424926758
    10. '(strip' → logprob: -17.000032424926758

Token 783: '())
' (ID: 4574)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.48968595266342163
    2. ')' → logprob: -0.9896859526634216
    3. '())
' → logprob: -4.364686012268066
    4. '())' → logprob: -5.989686012268066
    5. ')
' → logprob: -9.489686012268066
    6. '       ' → logprob: -10.114686012268066
    7. '])
' → logprob: -10.239686012268066
    8. '])' → logprob: -10.239686012268066
    9. '()' → logprob: -11.114686012268066
    10. '           ' → logprob: -11.989686012268066

Token 784: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023533938452601433
    2. '       ' → logprob: -4.648533821105957
    3. 'idx' → logprob: -4.648533821105957
    4. '<|end|>' → logprob: -6.148533821105957
    5. '[idx' → logprob: -7.773533821105957
    6. '   ' → logprob: -8.273533821105957
    7. '	idx' → logprob: -8.273533821105957
    8. ' idx' → logprob: -8.523533821105957
    9. '<|end|>' → logprob: -8.523533821105957
    10. '	       ' → logprob: -8.773533821105957

Token 785: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.0012368950992822647
    2. '           ' → logprob: -6.876236915588379
    3. ' idx' → logprob: -9.126236915588379
    4. '       ' → logprob: -10.001236915588379
    5. '	idx' → logprob: -10.251236915588379
    6. '   ' → logprob: -12.376236915588379
    7. 'index' → logprob: -12.626236915588379
    8. '_idx' → logprob: -12.876236915588379
    9. 'points' → logprob: -13.251236915588379
    10. '               ' → logprob: -14.376236915588379

Token 786: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.007638224400579929
    2. ' +=' → logprob: -4.882638454437256
    3. '   ' → logprob: -11.007637977600098
    4. '+' → logprob: -11.632637977600098
    5. '       ' → logprob: -12.882637977600098
    6. '```' → logprob: -13.382637977600098
    7. '           ' → logprob: -13.632637977600098
    8. ']+=' → logprob: -13.882637977600098
    9. '=' → logprob: -15.382637977600098
    10. '++' → logprob: -17.007638931274414

Token 787: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. 'm' → logprob: -18.875009536743164
    4. '+' → logprob: -18.875009536743164
    5. '```' → logprob: -18.875009536743164
    6. ' m' → logprob: -20.250009536743164
    7. '   ' → logprob: -21.000009536743164
    8. '(' → logprob: -21.500009536743164
    9. '１' → logprob: -21.500009536743164
    10. '0' → logprob: -21.625009536743164

Token 788: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '```' → logprob: -20.125
    4. '１' → logprob: -21.5
    5. '
' → logprob: -22.3125
    6. '   ' → logprob: -22.375
    7. 'm' → logprob: -22.375
    8. '0' → logprob: -22.375
    9. '۱' → logprob: -22.4375
    10. '2' → logprob: -22.6875

Token 789: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06749643385410309
    2. 'points' → logprob: -2.8174965381622314
    3. ' points' → logprob: -6.067496299743652
    4. '       ' → logprob: -6.567496299743652
    5. '(points' → logprob: -8.067496299743652
    6. '<|end|>' → logprob: -8.192496299743652
    7. 'tokens' → logprob: -8.317496299743652
    8. '	points' → logprob: -8.692496299743652
    9. '	       ' → logprob: -8.942496299743652
    10. '```' → logprob: -8.942496299743652

Token 790: '           ' (ID: 352)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.25102975964546204
    2. '           ' → logprob: -1.8760297298431396
    3. ' points' → logprob: -3.2510297298431396
    4. '       ' → logprob: -3.7510297298431396
    5. '	points' → logprob: -6.001029968261719
    6. '```' → logprob: -7.001029968261719
    7. '_points' → logprob: -7.376029968261719
    8. '(points' → logprob: -7.501029968261719
    9. 'lines' → logprob: -7.876029968261719
    10. ' lines' → logprob: -8.126029968261719

Token 791: ' coords' (ID: 53253)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.005489402916282415
    2. 'pts' → logprob: -5.630489349365234
    3. 'line' → logprob: -6.505489349365234
    4. ' points' → logprob: -8.630489349365234
    5. 'shape' → logprob: -9.255489349365234
    6. 'lines' → logprob: -10.505489349365234
    7. '       ' → logprob: -11.005489349365234
    8. 'poly' → logprob: -11.005489349365234
    9. 'coords' (adapté à ' coords') → logprob: -11.005489349365234
    10. ' pts' → logprob: -11.130489349365234

Token 792: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2023104727268219
    2. '=' → logprob: -1.7023104429244995
    3. '=[]' → logprob: -7.077310562133789
    4. 's' → logprob: -10.827310562133789
    5. '   ' → logprob: -11.327310562133789
    6. '=[]
' → logprob: -11.577310562133789
    7. '[]' → logprob: -12.702310562133789
    8. '_list' → logprob: -13.702310562133789
    9. '    ' → logprob: -14.077310562133789
    10. ':' → logprob: -14.077310562133789

Token 793: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2557221055030823
    2. '[]
' → logprob: -2.0057220458984375
    3. 'list' → logprob: -3.0057220458984375
    4. '[input' → logprob: -3.5057220458984375
    5. '[' → logprob: -4.7557220458984375
    6. '[list' → logprob: -6.3807220458984375
    7. 'input' → logprob: -7.2557220458984375
    8. '[]

' → logprob: -8.130722045898438
    9. '[line' → logprob: -9.255722045898438
    10. '[
' → logprob: -9.630722045898438

Token 794: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2870977520942688
    2. 'for' → logprob: -1.537097692489624
    3. '       ' → logprob: -3.912097692489624
    4. ' for' → logprob: -4.287097930908203
    5. '	       ' → logprob: -8.162097930908203
    6. '	for' → logprob: -8.537097930908203
    7. '   ' → logprob: -9.162097930908203
    8. '		' → logprob: -9.412097930908203
    9. '	   ' → logprob: -9.662097930908203
    10. '```' → logprob: -10.787097930908203

Token 795: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0016407847870141268
    2. ' for' → logprob: -6.501640796661377
    3. '	for' → logprob: -9.376640319824219
    4. '       ' → logprob: -9.876640319824219
    5. '           ' → logprob: -13.501640319824219
    6. '   ' → logprob: -14.751640319824219
    7. '
' → logprob: -15.876640319824219
    8. '	       ' → logprob: -16.12664031982422
    9. 'while' → logprob: -16.37664031982422
    10. '```' → logprob: -16.75164031982422

Token 796: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1960156261920929
    2. '_' → logprob: -1.9460155963897705
    3. '_j' → logprob: -4.19601583480835
    4. '_i' → logprob: -4.69601583480835
    5. '___' → logprob: -4.82101583480835
    6. ' __' → logprob: -6.19601583480835
    7. ' _' → logprob: -7.44601583480835
    8. 'i' → logprob: -8.821015357971191
    9. '_in' → logprob: -9.821015357971191
    10. 'j' → logprob: -10.321015357971191

Token 797: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013498765183612704
    2. 'in' → logprob: -6.626349925994873
    3. '_' → logprob: -10.876349449157715
    4. 'range' → logprob: -13.001349449157715
    5. ' ' → logprob: -14.126349449157715
    6. '_in' → logprob: -14.376349449157715
    7. ' _' → logprob: -15.126349449157715
    8. '   ' → logprob: -15.376349449157715
    9. '0' → logprob: -15.751349449157715
    10. 'i' → logprob: -15.751349449157715

Token 798: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007099286303855479
    2. ' range' → logprob: -7.2507100105285645
    3. '	range' → logprob: -18.000709533691406
    4. '_range' → logprob: -18.375709533691406
    5. '_' → logprob: -18.625709533691406
    6. '
' → logprob: -19.250709533691406
    7. '(range' → logprob: -19.625709533691406
    8. '0' → logprob: -19.750709533691406
    9. '[' → logprob: -20.125709533691406
    10. '   ' → logprob: -20.625709533691406

Token 799: '(m' (ID: 2145)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.007929784245789051
    2. 'int' → logprob: -4.882929801940918
    3. ' m' → logprob: -8.382929801940918
    4. '(int' → logprob: -10.382929801940918
    5. '(m' → logprob: -10.507929801940918
    6. ' int' → logprob: -10.507929801940918
    7. '           ' → logprob: -12.007929801940918
    8. '   ' → logprob: -13.757929801940918
    9. 'in' → logprob: -14.882929801940918
    10. '0' → logprob: -15.007929801940918

Token 800: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.09914213418960571
    2. '):' → logprob: -2.474142074584961
    3. '           ' → logprob: -4.974142074584961
    4. '               ' → logprob: -6.099142074584961
    5. '       ' → logprob: -7.474142074584961
    6. ':' → logprob: -9.099142074584961
    7. ':
' → logprob: -9.724142074584961
    8. '):
' → logprob: -9.974142074584961
    9. '():
' → logprob: -10.099142074584961
    10. '+' → logprob: -10.474142074584961

Token 801: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003697781648952514
    2. '	           ' → logprob: -9.000370025634766
    3. 'tokens' → logprob: -10.000370025634766
    4. '           ' → logprob: -10.000370025634766
    5. '<|end|>' → logprob: -10.625370025634766
    6. '```' → logprob: -11.000370025634766
    7. '			   ' → logprob: -11.375370025634766
    8. ' coordinates' → logprob: -11.500370025634766
    9. '		       ' → logprob: -11.500370025634766
    10. '   ' → logprob: -11.750370025634766

Token 802: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.31437259912490845
    2. ' x' → logprob: -1.3143725395202637
    3. ' line' → logprob: -7.439372539520264
    4. 'line' → logprob: -8.314373016357422
    5. '                   ' → logprob: -8.814373016357422
    6. '               ' → logprob: -9.564373016357422
    7. ' ' → logprob: -11.564373016357422
    8. '	x' → logprob: -11.564373016357422
    9. '   ' → logprob: -11.939373016357422
    10. ' parts' → logprob: -12.189373016357422

Token 803: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012707414105534554
    2. ',y' → logprob: -5.012707233428955
    3. ' ,' → logprob: -5.137707233428955
    4. '_,' → logprob: -10.137707710266113
    5. ' y' → logprob: -10.887707710266113
    6. '<|end|>' → logprob: -11.012707710266113
    7. 'y' → logprob: -11.262707710266113
    8. '<|end|>' → logprob: -11.887707710266113
    9. ',user' → logprob: -13.887707710266113
    10. ',line' → logprob: -14.137707710266113

Token 804: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0003357006062287837
    2. ' y' → logprob: -8.000335693359375
    3. ',y' → logprob: -15.875335693359375
    4. '	y' → logprob: -17.875335693359375
    5. ''y' → logprob: -17.875335693359375
    6. 'yj' → logprob: -17.875335693359375
    7. '_y' → logprob: -18.125335693359375
    8. ',' → logprob: -18.500335693359375
    9. ')y' → logprob: -18.625335693359375
    10. '
' → logprob: -18.625335693359375

Token 805: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141704380512238
    2. ' =' → logprob: -1.701417088508606
    3. '=line' → logprob: -13.701416969299316
    4. ',' → logprob: -14.576416969299316
    5. '=
' → logprob: -15.076416969299316
    6. '           ' → logprob: -15.201416969299316
    7. '=int' → logprob: -15.326416969299316
    8. ')' → logprob: -15.326416969299316
    9. ')=' → logprob: -15.576416969299316
    10. '=user' → logprob: -15.826416969299316

Token 806: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.00020389800192788243
    2. ' map' → logprob: -8.500204086303711
    3. '(map' → logprob: -14.750204086303711
    4. '   ' → logprob: -16.75020408630371
    5. '	map' → logprob: -17.37520408630371
    6. '
' → logprob: -17.87520408630371
    7. 'list' → logprob: -18.87520408630371
    8. 'input' → logprob: -19.50020408630371
    9. '.map' → logprob: -19.50020408630371
    10. 'm' → logprob: -19.62520408630371

Token 807: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0789082944393158
    2. 'int' → logprob: -2.5789082050323486
    3. '[int' → logprob: -11.32890796661377
    4. '(lambda' → logprob: -12.95390796661377
    5. '=int' → logprob: -13.20390796661377
    6. 'lambda' → logprob: -13.45390796661377
    7. '<int' → logprob: -15.20390796661377
    8. '(str' → logprob: -15.20390796661377
    9. ' int' → logprob: -15.70390796661377
    10. ':int' → logprob: -16.078908920288086

Token 808: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.007897501811385155
    2. ',input' → logprob: -5.13289737701416
    3. ',' → logprob: -6.50789737701416
    4. 'input' → logprob: -7.88289737701416
    5. '(' → logprob: -9.50789737701416
    6. ' (' → logprob: -11.38289737701416
    7. ')' → logprob: -12.13289737701416
    8. ' input' → logprob: -13.50789737701416
    9. ',(' → logprob: -13.63289737701416
    10. '=input' → logprob: -13.75789737701416

Token 809: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -2.15310683415737e-05
    2. ' input' → logprob: -10.750021934509277
    3. '(input' → logprob: -20.37502098083496
    4. '   ' → logprob: -23.75002098083496
    5. '	input' → logprob: -23.87502098083496
    6. ')' → logprob: -24.25002098083496
    7. '[input' → logprob: -24.37502098083496
    8. '<input' → logprob: -24.50002098083496
    9. ' ' → logprob: -24.75002098083496
    10. '=input' → logprob: -24.87502098083496

Token 810: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.27435922622680664
    2. 'input' → logprob: -1.5243592262268066
    3. '[input' → logprob: -4.274359226226807
    4. '(input' → logprob: -5.899359226226807
    5. '_inputs' → logprob: -6.149359226226807
    6. '=input' → logprob: -7.024359226226807
    7. '.readline' → logprob: -7.524359226226807
    8. '_.' → logprob: -8.024358749389648
    9. 'inputs' → logprob: -8.524358749389648
    10. 'lines' → logprob: -8.524358749389648

Token 811: '[idx' (ID: 25582)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.4113975763320923
    2. '(input' → logprob: -1.2863975763320923
    3. 'input' → logprob: -2.9113974571228027
    4. '[idx' → logprob: -6.036397457122803
    5. '.split' → logprob: -6.161397457122803
    6. ')' → logprob: -7.661397457122803
    7. ',input' → logprob: -7.911397457122803
    8. '.strip' → logprob: -8.036397933959961
    9. ' input' → logprob: -8.161397933959961
    10. '[line' → logprob: -9.411397933959961

Token 812: '].' (ID: 1651)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.12821194529533386
    2. '].' → logprob: -2.1282119750976562
    3. '.strip' → logprob: -7.628211975097656
    4. '][' → logprob: -7.878211975097656
    5. '[' → logprob: -8.378211975097656
    6. ']' → logprob: -9.628211975097656
    7. 'idx' → logprob: -10.628211975097656
    8. '   ' → logprob: -11.003211975097656
    9. '.split' → logprob: -11.003211975097656
    10. '().' → logprob: -11.128211975097656

Token 813: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.001502598519437015
    2. 'split' → logprob: -6.501502513885498
    3. '.strip' → logprob: -16.126502990722656
    4. ' strip' → logprob: -16.376502990722656
    5. 'rstrip' → logprob: -18.876502990722656
    6. '(strip' → logprob: -20.126502990722656
    7. '_strip' → logprob: -20.501502990722656
    8. '-strip' → logprob: -21.001502990722656
    9. ' split' → logprob: -23.001502990722656
    10. '_split' → logprob: -23.376502990722656

Token 814: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.008659012615680695
    2. '()' → logprob: -4.7586588859558105
    3. ')' → logprob: -10.883659362792969
    4. '()]' → logprob: -11.008659362792969
    5. '('' → logprob: -12.758659362792969
    6. '())
' → logprob: -13.383659362792969
    7. '()))' → logprob: -13.633659362792969
    8. ' ())' → logprob: -14.133659362792969
    9. '(' → logprob: -14.508659362792969
    10. '()),' → logprob: -14.633659362792969

Token 815: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09736421704292297
    2. '                
' → logprob: -3.0973641872406006
    3. 'idx' → logprob: -4.09736442565918
    4. '                    
' → logprob: -5.22236442565918
    5. '                               ' → logprob: -5.59736442565918
    6. '                   ' → logprob: -5.59736442565918
    7. '           ' → logprob: -5.97236442565918
    8. '<|end|>' → logprob: -5.97236442565918
    9. '                        
' → logprob: -6.09736442565918
    10. '            
' → logprob: -6.34736442565918

Token 816: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.004135153256356716
    2. '	idx' → logprob: -6.3791351318359375
    3. ' idx' → logprob: -7.1291351318359375
    4. '               ' → logprob: -7.2541351318359375
    5. 'coords' → logprob: -8.129135131835938
    6. 'x' → logprob: -8.129135131835938
    7. '                   ' → logprob: -8.879135131835938
    8. '           ' → logprob: -10.504135131835938
    9. '                ' → logprob: -10.754135131835938
    10. 'coordinates' → logprob: -11.504135131835938

Token 817: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004761668387800455
    2. ' +=' → logprob: -5.379761695861816
    3. '           ' → logprob: -9.754761695861816
    4. '=' → logprob: -10.004761695861816
    5. ']+=' → logprob: -10.504761695861816
    6. '+' → logprob: -12.879761695861816
    7. '```' → logprob: -13.129761695861816
    8. '       ' → logprob: -13.504761695861816
    9. '               ' → logprob: -13.504761695861816
    10. '          ' → logprob: -14.004761695861816

Token 818: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -18.750001907348633
    4. '(' → logprob: -19.375001907348633
    5. '１' → logprob: -20.875001907348633
    6. ')' → logprob: -21.000001907348633
    7. '('' → logprob: -21.125001907348633
    8. '   ' → logprob: -21.125001907348633
    9. '`' → logprob: -21.625001907348633
    10. '۱' → logprob: -21.625001907348633

Token 819: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '```' → logprob: -20.0
    4. '2' → logprob: -20.75
    5. '(' → logprob: -20.875
    6. '0' → logprob: -21.0
    7. '１' → logprob: -21.0
    8. '   ' → logprob: -21.875
    9. '3' → logprob: -22.875
    10. ''' → logprob: -23.0

Token 820: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00015419373812619597
    2. '<|end|>' → logprob: -9.375154495239258
    3. '           ' → logprob: -10.125154495239258
    4. '                   ' → logprob: -11.125154495239258
    5. '              ' → logprob: -12.500154495239258
    6. '       ' → logprob: -12.750154495239258
    7. '                       ' → logprob: -13.125154495239258
    8. ',' → logprob: -13.500154495239258
    9. 'coords' → logprob: -14.250154495239258
    10. '<|end|>' → logprob: -14.500154495239258

Token 821: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.077528764260933e-05
    2. '           ' → logprob: -10.000081062316895
    3. '                   ' → logprob: -10.500081062316895
    4. '              ' → logprob: -12.875081062316895
    5. '   ' → logprob: -13.500081062316895
    6. '       ' → logprob: -14.000081062316895
    7. '                       ' → logprob: -14.000081062316895
    8. 'coords' → logprob: -14.375081062316895
    9. '<|end|>' → logprob: -14.750081062316895
    10. '```' → logprob: -15.250081062316895

Token 822: ' coords' (ID: 53253)
  Prédit: 'coords'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coords' (adapté à ' coords') → logprob: -0.00011951648048125207
    2. ' coords' → logprob: -9.25011920928955
    3. '               ' → logprob: -11.00011920928955
    4. '   ' → logprob: -13.12511920928955
    5. '           ' → logprob: -13.12511920928955
    6. 'coordinates' → logprob: -13.12511920928955
    7. '                   ' → logprob: -14.62511920928955
    8. '       ' → logprob: -16.125120162963867
    9. '_coords' → logprob: -16.375120162963867
    10. '(coords' → logprob: -16.875120162963867

Token 823: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00025549851125106215
    2. '.' → logprob: -8.375255584716797
    3. ' .' → logprob: -11.625255584716797
    4. '           ' → logprob: -12.375255584716797
    5. ').' → logprob: -12.500255584716797
    6. '.extend' → logprob: -13.125255584716797
    7. 'append' → logprob: -13.375255584716797
    8. ' =' → logprob: -13.750255584716797
    9. '<|end|>' → logprob: -14.500255584716797
    10. '.app' → logprob: -14.500255584716797

Token 824: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0007248217007145286
    2. '(' → logprob: -7.250724792480469
    3. '(x' → logprob: -11.125724792480469
    4. '(tuple' → logprob: -16.25072479248047
    5. '(
' → logprob: -17.62572479248047
    6. ' (' → logprob: -18.25072479248047
    7. ' ((' → logprob: -19.12572479248047
    8. '  ' → logprob: -19.62572479248047
    9. '[(' → logprob: -20.37572479248047
    10. '   ' → logprob: -20.50072479248047

Token 825: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.339278580620885e-06
    2. ' x' → logprob: -13.000001907348633
    3. '(x' → logprob: -17.000001907348633
    4. 'int' → logprob: -18.625001907348633
    5. ')x' → logprob: -19.875001907348633
    6. '	x' → logprob: -20.500001907348633
    7. '   ' → logprob: -21.250001907348633
    8. '"x' → logprob: -22.375001907348633
    9. ' ' → logprob: -22.875001907348633
    10. '{x' → logprob: -23.125001907348633

Token 826: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013595925702247769
    2. ',y' → logprob: -9.125136375427246
    3. ' ,' → logprob: -11.000136375427246
    4. '<|end|>' → logprob: -12.000136375427246
    5. ',user' → logprob: -13.875136375427246
    6. ',
' → logprob: -14.125136375427246
    7. ',x' → logprob: -14.375136375427246
    8. ',n' → logprob: -15.250136375427246
    9. '<|end|>' → logprob: -15.500136375427246
    10. ',w' → logprob: -15.750136375427246

Token 827: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0002613358374219388
    2. ' y' → logprob: -8.250261306762695
    3. '	y' → logprob: -21.875261306762695
    4. ' ' → logprob: -22.500261306762695
    5. '   ' → logprob: -22.625261306762695
    6. ')y' → logprob: -22.750261306762695
    7. '       ' → logprob: -22.875261306762695
    8. ',y' → logprob: -23.625261306762695
    9. '    ' → logprob: -24.000261306762695
    10. ''y' → logprob: -24.000261306762695

Token 828: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.31460681557655334
    2. '))
' → logprob: -1.314606785774231
    3. '           ' → logprob: -7.189606666564941
    4. '               ' → logprob: -7.814606666564941
    5. ')' → logprob: -8.939606666564941
    6. '       ' → logprob: -10.189606666564941
    7. ')
' → logprob: -12.189606666564941
    8. '))

' → logprob: -12.439606666564941
    9. '))
' → logprob: -12.814606666564941
    10. ')))' → logprob: -13.564606666564941

Token 829: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05586184933781624
    2. '<|end|>' → logprob: -3.3058619499206543
    3. '        
' → logprob: -4.930861949920654
    4. '           ' → logprob: -5.305861949920654
    5. '
' → logprob: -5.430861949920654
    6. '<|end|>' → logprob: -8.305861473083496
    7. '```' → logprob: -8.680861473083496
    8. '#' → logprob: -9.055861473083496
    9. '   ' → logprob: -9.055861473083496
    10. '            
' → logprob: -9.555861473083496

Token 830: ' polygon' (ID: 65081)
  Prédit: 'shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shape' → logprob: -0.14648117125034332
    2. 'normalized' → logprob: -3.0214812755584717
    3. '   ' → logprob: -3.1464812755584717
    4. '       ' → logprob: -4.396481037139893
    5. ' shape' → logprob: -4.771481037139893
    6. 'polygon' (adapté à ' polygon') → logprob: -5.271481037139893
    7. '
' → logprob: -5.771481037139893
    8. 'points' → logprob: -5.771481037139893
    9. ' shapes' → logprob: -6.271481037139893
    10. 'line' → logprob: -6.271481037139893

Token 831: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -4.723352049040841e-06
    2. '_lines' → logprob: -12.625004768371582
    3. '           ' → logprob: -14.625004768371582
    4. 'alcon' → logprob: -15.250004768371582
    5. 'alist' → logprob: -15.750004768371582
    6. 'all' → logprob: -16.375003814697266
    7. 'l' → logprob: -16.625003814697266
    8. '_al' → logprob: -16.875003814697266
    9. 'ral' → logprob: -17.000003814697266
    10. '_points' → logprob: -17.125003814697266

Token 832: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -1.306760805164231e-05
    2. 'lines' → logprob: -11.62501335144043
    3. '_line' → logprob: -13.00001335144043
    4. '_points' → logprob: -14.00001335144043
    5. 's' → logprob: -15.25001335144043
    6. ' lines' → logprob: -15.62501335144043
    7. 'Lines' → logprob: -16.25001335144043
    8. '_shapes' → logprob: -16.25001335144043
    9. 'line' → logprob: -16.37501335144043
    10. '_LINES' → logprob: -16.75001335144043

Token 833: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.630610641877865e-06
    2. '.' → logprob: -12.125006675720215
    3. '.app' → logprob: -14.875006675720215
    4. '.ap' → logprob: -15.250006675720215
    5. ' .' → logprob: -15.625006675720215
    6. 'append' → logprob: -16.0000057220459
    7. '.extend' → logprob: -16.3750057220459
    8. '=' → logprob: -16.8750057220459
    9. ').' → logprob: -17.2500057220459
    10. ' =' → logprob: -17.7500057220459

Token 834: '(coords' (ID: 151745)
  Prédit: '(coords'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(coords' → logprob: -0.04004950821399689
    2. 'coords' → logprob: -3.7900495529174805
    3. '(normal' → logprob: -4.2900495529174805
    4. 'normalize' → logprob: -5.9150495529174805
    5. '(' → logprob: -9.91504955291748
    6. '(co' → logprob: -9.91504955291748
    7. '((' → logprob: -10.29004955291748
    8. ' coords' → logprob: -10.29004955291748
    9. '(coord' → logprob: -10.29004955291748
    10. '(tuple' → logprob: -11.04004955291748

Token 835: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007592433597892523
    2. '<|end|>' → logprob: -5.00759220123291
    3. '       ' → logprob: -7.38259220123291
    4. ')
' → logprob: -9.25759220123291
    5. '<|end|>' → logprob: -9.88259220123291
    6. '   ' → logprob: -10.00759220123291
    7. '
' → logprob: -10.25759220123291
    8. '")' → logprob: -12.50759220123291
    9. '')' → logprob: -12.63259220123291
    10. '())' → logprob: -13.50759220123291

Token 836: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16953110694885254
    2. '   ' → logprob: -2.4195311069488525
    3. '```' → logprob: -3.1695311069488525
    4. 'result' → logprob: -5.919530868530273
    5. 'best' → logprob: -5.919530868530273
    6. 'shape' → logprob: -5.919530868530273
    7. 'results' → logprob: -6.044530868530273
    8. '    
' → logprob: -6.169530868530273
    9. '
' → logprob: -6.544530868530273
    10. 'all' → logprob: -6.669530868530273

Token 837: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4079846739768982
    2. '       ' → logprob: -1.532984733581543
    3. 'sh' → logprob: -2.532984733581543
    4. 'shape' → logprob: -4.032984733581543
    5. 'counts' → logprob: -5.282984733581543
    6. '```' → logprob: -5.532984733581543
    7. 'unique' → logprob: -6.282984733581543
    8. 'normalized' → logprob: -6.282984733581543
    9. ' shapes' → logprob: -6.407984733581543
    10. 'results' → logprob: -6.657984733581543

Token 838: ' #' (ID: 1069)
  Prédit: 'sh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sh' → logprob: -0.1275729089975357
    2. 'normalized' → logprob: -2.752573013305664
    3. 'shape' → logprob: -3.627573013305664
    4. 'normal' → logprob: -5.502573013305664
    5. 'canonical' → logprob: -5.502573013305664
    6. 'norm' → logprob: -5.627573013305664
    7. 'unique' → logprob: -6.002573013305664
    8. '   ' → logprob: -6.252573013305664
    9. 'lines' → logprob: -6.502573013305664
    10. 'seen' → logprob: -6.502573013305664

Token 839: ' polygon' (ID: 65081)
  Prédit: 'sh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sh' → logprob: -0.5903770327568054
    2. 'normalized' → logprob: -0.9653770327568054
    3. 'norm' → logprob: -3.71537709236145
    4. 'shape' → logprob: -4.215376853942871
    5. 'normal' → logprob: -5.340376853942871
    6. '#' → logprob: -5.590376853942871
    7. 'canonical' → logprob: -5.590376853942871
    8. 'unique' → logprob: -6.090376853942871
    9. 'counts' → logprob: -6.590376853942871
    10. 'seen' → logprob: -6.840376853942871

Token 840: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.16934414207935333
    2. '_lines' → logprob: -2.919344186782837
    3. '_shapes' → logprob: -3.294344186782837
    4. '_id' → logprob: -3.794344186782837
    5. '_ids' → logprob: -4.044343948364258
    6. 's' → logprob: -5.169343948364258
    7. '_hash' → logprob: -5.544343948364258
    8. '_set' → logprob: -5.544343948364258
    9. 'als' → logprob: -6.169343948364258
    10. '_shape' → logprob: -6.294343948364258

Token 841: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.1767394244670868
    2. '_shapes' → logprob: -1.9267394542694092
    3. '_line' → logprob: -5.30173921585083
    4. 'lines' → logprob: -5.92673921585083
    5. 'sh' → logprob: -6.55173921585083
    6. '_shape' → logprob: -6.55173921585083
    7. '_ids' → logprob: -6.80173921585083
    8. '_set' → logprob: -7.05173921585083
    9. 'line' → logprob: -7.42673921585083
    10. 'shape' → logprob: -7.67673921585083

Token 842: '[' (ID: 58)
  Prédit: '_shapes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_shapes' → logprob: -0.5109729766845703
    2. ' =' → logprob: -2.1359729766845703
    3. '_normal' → logprob: -2.2609729766845703
    4. '.sort' → logprob: -2.7609729766845703
    5. '_set' → logprob: -3.3859729766845703
    6. '       ' → logprob: -3.6359729766845703
    7. '[' → logprob: -4.38597297668457
    8. '   ' → logprob: -4.88597297668457
    9. '_sorted' → logprob: -4.88597297668457
    10. '_norm' → logprob: -5.13597297668457

Token 843: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10156099498271942
    2. '1' → logprob: -2.7265610694885254
    3. '-' → logprob: -3.6015610694885254
    4. ']' → logprob: -6.351561069488525
    5. '
' → logprob: -7.476561069488525
    6. 'n' → logprob: -7.851561069488525
    7. ':]' → logprob: -8.351560592651367
    8. ':' → logprob: -8.476560592651367
    9. '[' → logprob: -8.476560592651367
    10. '][' → logprob: -8.726560592651367

Token 844: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7457666993141174
    2. '[' → logprob: -1.1207666397094727
    3. '][' → logprob: -2.6207666397094727
    4. ')' → logprob: -3.1207666397094727
    5. '#' → logprob: -4.120766639709473
    6. 'for' → logprob: -4.620766639709473
    7. ',' → logprob: -4.870766639709473
    8. '])' → logprob: -5.245766639709473
    9. ' represents' → logprob: -5.370766639709473
    10. '],' → logprob: -5.495766639709473

Token 845: ' is' (ID: 382)
  Prédit: '_shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_shape' → logprob: -0.9142343401908875
    2. '_normal' → logprob: -1.0392343997955322
    3. '_norm' → logprob: -2.6642343997955322
    4. '_ref' → logprob: -3.0392343997955322
    5. 'shape' → logprob: -3.4142343997955322
    6. ' =' → logprob: -3.4142343997955322
    7. '_set' → logprob: -4.289234161376953
    8. 'normalized' → logprob: -4.789234161376953
    9. '_base' → logprob: -5.289234161376953
    10. '_points' → logprob: -5.414234161376953

Token 846: ' template' (ID: 6894)
  Prédit: 'normalize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -0.27633288502693176
    2. 'the' → logprob: -2.0263328552246094
    3. 'polygon' → logprob: -2.5263328552246094
    4. 'normalized' → logprob: -4.526332855224609
    5. ' normalize' → logprob: -4.776332855224609
    6. ' the' → logprob: -5.651332855224609
    7. ' polygon' → logprob: -5.776332855224609
    8. 'reference' → logprob: -5.901332855224609
    9. ' normalized' → logprob: -8.52633285522461
    10. 'a' → logprob: -8.77633285522461

Token 847: '
' (ID: 198)
  Prédit: 'template'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'template' → logprob: -0.24421505630016327
    2. '       ' → logprob: -1.7442150115966797
    3. 'shape' → logprob: -3.9942150115966797
    4. 'for' → logprob: -3.9942150115966797
    5. 'target' → logprob: -6.61921501159668
    6. '
' → logprob: -6.61921501159668
    7. 'pattern' → logprob: -6.99421501159668
    8. '```' → logprob: -7.86921501159668
    9. '   ' → logprob: -8.86921501159668
    10. 'reference' → logprob: -8.99421501159668

Token 848: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6985347867012024
    2. 'template' → logprob: -0.6985347867012024
    3. 'shape' → logprob: -5.823534965515137
    4. 'for' → logprob: -6.823534965515137
    5. 'target' → logprob: -7.698534965515137
    6. '```' → logprob: -7.823534965515137
    7. 'pattern' → logprob: -8.948534965515137
    8. 'normalized' → logprob: -9.198534965515137
    9. 'reference' → logprob: -9.448534965515137
    10. ' template' → logprob: -9.948534965515137

Token 849: ' template' (ID: 6894)
  Prédit: 'template'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'template' (adapté à ' template') → logprob: -0.08630028367042542
    2. '       ' → logprob: -2.5863003730773926
    3. 'shape' → logprob: -5.836300373077393
    4. 'target' → logprob: -7.211300373077393
    5. 'normalized' → logprob: -7.461300373077393
    6. 'reference' → logprob: -7.711300373077393
    7. 'for' → logprob: -7.961300373077393
    8. 'is' → logprob: -7.961300373077393
    9. 'found' → logprob: -7.961300373077393
    10. '```' → logprob: -8.211299896240234

Token 850: '_shape' (ID: 30261)
  Prédit: '_shape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_shape' → logprob: -0.014792443253099918
    2. ' =' → logprob: -4.639792442321777
    3. '_normal' → logprob: -5.764792442321777
    4. '_points' → logprob: -7.014792442321777
    5. '_norm' → logprob: -7.139792442321777
    6. '=' → logprob: -8.764792442321777
    7. 'shape' → logprob: -11.389792442321777
    8. '_code' → logprob: -12.139792442321777
    9. '_signature' → logprob: -12.514792442321777
    10. '_vectors' → logprob: -13.014792442321777

Token 851: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016748767346143723
    2. '=' → logprob: -4.141748905181885
    3. '_shape' → logprob: -7.266748905181885
    4. '_normal' → logprob: -12.016748428344727
    5. '_norm' → logprob: -12.766748428344727
    6. '   ' → logprob: -13.016748428344727
    7. '=_' → logprob: -14.391748428344727
    8. '_points' → logprob: -14.516748428344727
    9. '_code' → logprob: -14.641748428344727
    10. 'shape' → logprob: -14.641748428344727

Token 852: ' normalize' (ID: 44464)
  Prédit: 'normalize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -0.0005542247672565281
    2. ' normalize' → logprob: -7.500554084777832
    3. 'normal' → logprob: -14.750554084777832
    4. 'polygon' → logprob: -15.125554084777832
    5. '(normal' → logprob: -15.125554084777832
    6. 'normalized' → logprob: -15.500554084777832
    7. '   ' → logprob: -16.25055503845215
    8. 'norm' → logprob: -18.25055503845215
    9. ' polygon' → logprob: -19.50055503845215
    10. ' ' → logprob: -20.25055503845215

Token 853: '_shape' (ID: 30261)
  Prédit: '_shape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_shape' → logprob: -6.869017852295656e-06
    2. 'shape' → logprob: -12.000006675720215
    3. 'Shape' → logprob: -15.000006675720215
    4. '_shapes' → logprob: -15.875006675720215
    5. '_' → logprob: -16.00000762939453
    6. '_points' → logprob: -17.00000762939453
    7. '(_' → logprob: -18.37500762939453
    8. 'template' → logprob: -18.37500762939453
    9. '"_' → logprob: -18.37500762939453
    10. 'normalize' → logprob: -18.37500762939453

Token 854: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00014215784904081374
    2. 'polygon' → logprob: -9.000142097473145
    3. '(poly' → logprob: -11.500142097473145
    4. '(pol' → logprob: -12.250142097473145
    5. ' polygon' → logprob: -13.250142097473145
    6. '(' → logprob: -14.125142097473145
    7. '(template' → logprob: -14.500142097473145
    8. ' (' → logprob: -14.750142097473145
    9. '_polygon' → logprob: -15.750142097473145
    10. 'p' → logprob: -16.12514305114746

Token 855: 'olygon' (ID: 80431)
  Prédit: 'olygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olygon' → logprob: -0.00016218038217630237
    2. 'polygon' → logprob: -8.875162124633789
    3. 'ol' → logprob: -10.875162124633789
    4. '[' → logprob: -13.375162124633789
    5. 'oly' → logprob: -13.375162124633789
    6. 'oints' → logprob: -16.12516212463379
    7. '(p' → logprob: -16.25016212463379
    8. '(' → logprob: -17.37516212463379
    9. ' polygon' → logprob: -17.62516212463379
    10. 'olar' → logprob: -18.00016212463379

Token 856: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.01259111799299717
    2. '_lines' → logprob: -4.3875908851623535
    3. '[' → logprob: -10.387591361999512
    4. 'l' → logprob: -10.637591361999512
    5. 'als' → logprob: -11.262591361999512
    6. 'ar' → logprob: -12.887591361999512
    7. ']' → logprob: -13.012591361999512
    8. 'lines' → logprob: -13.012591361999512
    9. 's' → logprob: -13.887591361999512
    10. '_l' → logprob: -14.012591361999512

Token 857: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.025123460218310356
    2. 'ines' → logprob: -4.150123596191406
    3. 'lines' → logprob: -5.025123596191406
    4. 'es' → logprob: -6.650123596191406
    5. 's' → logprob: -6.775123596191406
    6. '[' → logprob: -11.400123596191406
    7. 'ine' → logprob: -11.650123596191406
    8. 'template' → logprob: -12.525123596191406
    9. 'e' → logprob: -12.650123596191406
    10. 'Lines' → logprob: -12.650123596191406

Token 858: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2200749754119897e-06
    2. '```' → logprob: -14.375001907348633
    3. ')[' → logprob: -14.625001907348633
    4. '0' → logprob: -15.000001907348633
    5. '[
' → logprob: -15.500001907348633
    6. ' [' → logprob: -15.875001907348633
    7. '   ' → logprob: -16.125001907348633
    8. '][' → logprob: -16.125001907348633
    9. ')' → logprob: -16.750001907348633
    10. 's' → logprob: -17.250001907348633

Token 859: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -14.125000953674316
    3. ' ' → logprob: -14.750000953674316
    4. '```' → logprob: -16.125001907348633
    5. '   ' → logprob: -17.250001907348633
    6. '۰' → logprob: -18.937501907348633
    7. '`' → logprob: -19.187501907348633
    8. '1' → logprob: -19.187501907348633
    9. '``' → logprob: -19.375001907348633
    10. '(' → logprob: -19.500001907348633

Token 860: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029754776507616043
    2. ')
' → logprob: -3.529754877090454
    3. ')
' → logprob: -13.529754638671875
    4. '   ' → logprob: -14.279754638671875
    5. ')

' → logprob: -14.529754638671875
    6. '       ' → logprob: -14.654754638671875
    7. ')`' → logprob: -14.779754638671875
    8. ')`
' → logprob: -15.029754638671875
    9. ')[' → logprob: -15.404754638671875
    10. ')#' → logprob: -15.654754638671875

Token 861: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05930964648723602
    2. 'matches' → logprob: -3.059309720993042
    3. 'match' → logprob: -5.434309482574463
    4. '```' → logprob: -5.684309482574463
    5. 'count' → logprob: -6.809309482574463
    6. 'found' → logprob: -6.934309482574463
    7. 'matched' → logprob: -7.559309482574463
    8. 'matching' → logprob: -9.434309959411621
    9. 'all' → logprob: -9.559309959411621
    10. 'counts' → logprob: -9.684309959411621

Token 862: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013387154787778854
    2. 'matches' → logprob: -4.638387203216553
    3. 'count' → logprob: -6.013387203216553
    4. 'match' → logprob: -7.638387203216553
    5. '```' → logprob: -8.263386726379395
    6. 'counts' → logprob: -8.388386726379395
    7. 'found' → logprob: -9.513386726379395
    8. 'results' → logprob: -10.388386726379395
    9. 'matching' → logprob: -10.513386726379395
    10. 'matched' → logprob: -10.763386726379395

Token 863: ' results' (ID: 4376)
  Prédit: 'matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matches' → logprob: -0.06552106887102127
    2. 'count' → logprob: -3.065521001815796
    3. 'results' (adapté à ' results') → logprob: -5.065521240234375
    4. 'match' → logprob: -5.065521240234375
    5. 'matched' → logprob: -6.315521240234375
    6. 'matching' → logprob: -6.315521240234375
    7. 'counts' → logprob: -8.690521240234375
    8. 'result' → logprob: -8.815521240234375
    9. 'for' → logprob: -9.315521240234375
    10. '   ' → logprob: -9.690521240234375

Token 864: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0031855558045208454
    2. '=' → logprob: -5.753185749053955
    3. '=[]' → logprob: -12.128185272216797
    4. '   ' → logprob: -13.753185272216797
    5. '[]' → logprob: -14.378185272216797
    6. '.append' → logprob: -15.503185272216797
    7. '=[]
' → logprob: -16.378185272216797
    8. ':' → logprob: -16.378185272216797
    9. '    ' → logprob: -16.503185272216797
    10. '[:]' → logprob: -16.628185272216797

Token 865: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0036480571143329144
    2. '[]
' → logprob: -6.003648281097412
    3. ' []' → logprob: -6.753648281097412
    4. ' []
' → logprob: -12.878647804260254
    5. '[' → logprob: -13.128647804260254
    6. '   ' → logprob: -14.878647804260254
    7. '[]

' → logprob: -16.00364875793457
    8. '["' → logprob: -16.87864875793457
    9. '[]"' → logprob: -17.62864875793457
    10. '[
' → logprob: -17.87864875793457

Token 866: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03822578117251396
    2. 'for' → logprob: -3.2882258892059326
    3. ' for' → logprob: -9.288226127624512
    4. '   ' → logprob: -9.538226127624512
    5. '```' → logprob: -10.913226127624512
    6. '           ' → logprob: -13.788226127624512
    7. '	for' → logprob: -15.413226127624512
    8. '	   ' → logprob: -16.413225173950195
    9. '`' → logprob: -16.538225173950195
    10. '	' → logprob: -17.163225173950195

Token 867: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.429896944202483e-05
    2. '       ' → logprob: -10.250043869018555
    3. ' for' → logprob: -11.750043869018555
    4. '```' → logprob: -14.250043869018555
    5. '   ' → logprob: -15.000043869018555
    6. '	for' → logprob: -17.500043869018555
    7. '``' → logprob: -19.750043869018555
    8. '
' → logprob: -21.625043869018555
    9. 'For' → logprob: -22.500043869018555
    10. '           ' → logprob: -22.750043869018555

Token 868: ' Check' (ID: 6208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.747814349073451e-05
    2. '       ' → logprob: -11.000017166137695
    3. ' for' → logprob: -14.750017166137695
    4. '```' → logprob: -15.500017166137695
    5. '   ' → logprob: -15.750017166137695
    6. '
' → logprob: -20.375017166137695
    7. '	for' → logprob: -20.625017166137695
    8. '``' → logprob: -20.625017166137695
    9. '           ' → logprob: -21.750017166137695
    10. '        
' → logprob: -23.750017166137695

Token 869: ' which' (ID: 1118)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11699863523244858
    2. ' for' → logprob: -2.3669986724853516
    3. '       ' → logprob: -4.116998672485352
    4. '   ' → logprob: -8.491998672485352
    5. 'polygon' → logprob: -9.741998672485352
    6. ' polygon' → logprob: -9.991998672485352
    7. ' each' → logprob: -11.241998672485352
    8. 'each' → logprob: -11.616998672485352
    9. 'len' → logprob: -11.991998672485352
    10. 'if' → logprob: -12.866998672485352

Token 870: ' polygon' (ID: 65081)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.8605453968048096
    2. 'pl' → logprob: -2.1105453968048096
    3. 'poly' → logprob: -2.1105453968048096
    4. 'lines' → logprob: -2.3605453968048096
    5. 'other' → logprob: -2.6105453968048096
    6. 'polygon' → logprob: -2.9855453968048096
    7. 'for' → logprob: -3.2355453968048096
    8. 'shape' → logprob: -3.4855453968048096
    9. ' line' → logprob: -4.7355451583862305
    10. 'of' → logprob: -4.8605451583862305

Token 871: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.0751417949795723
    2. '_lines' → logprob: -3.3251419067382812
    3. '           ' → logprob: -4.700141906738281
    4. '       ' → logprob: -4.700141906738281
    5. '_line' → logprob: -4.700141906738281
    6. ' =' → logprob: -5.825141906738281
    7. 'for' → logprob: -6.450141906738281
    8. 'lines' → logprob: -6.700141906738281
    9. 'line' → logprob: -7.200141906738281
    10. 's' → logprob: -7.325141906738281

Token 872: ' lines' (ID: 8698)
  Prédit: '_lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.003929864149540663
    2. 'lines' → logprob: -5.87893009185791
    3. '_line' → logprob: -7.00393009185791
    4. 'line' → logprob: -8.50393009185791
    5. '_shapes' → logprob: -12.50393009185791
    6. '   ' → logprob: -12.75393009185791
    7. ' lines' → logprob: -13.12893009185791
    8. '```' → logprob: -13.75393009185791
    9. '
' → logprob: -14.25393009185791
    10. 'for' → logprob: -14.62893009185791

Token 873: ' have' (ID: 679)
  Prédit: ' match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.7021444439888
    2. 'match' → logprob: -1.5771443843841553
    3. ' are' → logprob: -2.7021443843841553
    4. ' for' → logprob: -2.9521443843841553
    5. ' in' → logprob: -3.0771443843841553
    6. 'are' → logprob: -3.3271443843841553
    7. 'for' → logprob: -3.3271443843841553
    8. '       ' → logprob: -3.8271443843841553
    9. '   ' → logprob: -4.827144622802734
    10. 'in' → logprob: -4.827144622802734

Token 874: ' the' (ID: 290)
  Prédit: 'normalize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -0.6009182929992676
    2. 'shape' → logprob: -1.1009182929992676
    3. ' shapes' → logprob: -3.6009182929992676
    4. ' normalize' → logprob: -3.8509182929992676
    5. 'a' → logprob: -4.100918292999268
    6. ' shape' → logprob: -4.350918292999268
    7. '
' → logprob: -4.475918292999268
    8. 'sh' → logprob: -4.850918292999268
    9. 'normalized' → logprob: -4.975918292999268
    10. '```' → logprob: -5.225918292999268

Token 875: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.0153573676943779
    2. 'shape' → logprob: -4.515357494354248
    3. ' same' → logprob: -5.515357494354248
    4. 'normalized' → logprob: -8.64035701751709
    5. ' shape' → logprob: -9.51535701751709
    6. '```' → logprob: -11.26535701751709
    7. '
' → logprob: -12.14035701751709
    8. 'for' → logprob: -12.51535701751709
    9. 'template' → logprob: -13.51535701751709
    10. ' normalized' → logprob: -14.14035701751709

Token 876: ' shape' (ID: 9591)
  Prédit: 'shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shape' → logprob: -0.03373686969280243
    2. ' shape' → logprob: -3.7837369441986084
    3. 'normalized' → logprob: -4.783736705780029
    4. '_shape' → logprob: -6.533736705780029
    5. ' normalized' → logprob: -8.033737182617188
    6. '```' → logprob: -9.158737182617188
    7. 'normalize' → logprob: -9.283737182617188
    8. 'canonical' → logprob: -9.783737182617188
    9. '   ' → logprob: -10.783737182617188
    10. '``' → logprob: -11.783737182617188

Token 877: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11400695890188217
    2. 'as' → logprob: -3.114006996154785
    3. ' as' → logprob: -3.364006996154785
    4. 'for' → logprob: -3.864006996154785
    5. '```' → logprob: -5.614006996154785
    6. '   ' → logprob: -5.989006996154785
    7. ' for' → logprob: -6.989006996154785
    8. '(' → logprob: -8.364006996154785
    9. '
' → logprob: -8.989006996154785
    10. ' (' → logprob: -9.114006996154785

Token 878: ' the' (ID: 290)
  Prédit: 'template'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'template' → logprob: -0.0005532711511477828
    2. ' template' → logprob: -7.500553131103516
    3. '(template' → logprob: -16.250553131103516
    4. '	template' → logprob: -16.625553131103516
    5. '```' → logprob: -17.000553131103516
    6. 'the' → logprob: -17.375553131103516
    7. '$template' → logprob: -18.375553131103516
    8. 'templates' → logprob: -20.000553131103516
    9. '   ' → logprob: -20.250553131103516
    10. 'emplate' → logprob: -20.375553131103516

Token 879: ' template' (ID: 6894)
  Prédit: 'template'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'template' → logprob: -8.506661833962426e-05
    2. ' template' → logprob: -9.37508487701416
    3. '	template' → logprob: -16.250085830688477
    4. '```' → logprob: -17.000085830688477
    5. '(template' → logprob: -17.750085830688477
    6. 'emplate' → logprob: -17.875085830688477
    7. '   ' → logprob: -17.875085830688477
    8. ' ' → logprob: -18.875085830688477
    9. '$template' → logprob: -18.875085830688477
    10. 'templates' → logprob: -20.000085830688477

Token 880: ' [' (ID: 723)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5319117903709412
    2. '       ' → logprob: -1.031911849975586
    3. ' for' → logprob: -2.906911849975586
    4. '```' → logprob: -7.156911849975586
    5. '   ' → logprob: -7.531911849975586
    6. '
' → logprob: -9.156911849975586
    7. ' as' → logprob: -10.031911849975586
    8. '        
' → logprob: -10.531911849975586
    9. '``' → logprob: -11.156911849975586
    10. ',' → logprob: -11.531911849975586

Token 881: '1' (ID: 16)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6299664378166199
    2. 'template' → logprob: -1.7549664974212646
    3. ' for' → logprob: -2.1299664974212646
    4. 'range' → logprob: -2.7549664974212646
    5. '       ' → logprob: -2.8799664974212646
    6. 'i' → logprob: -4.6299662590026855
    7. ' template' → logprob: -4.6299662590026855
    8. ']
' → logprob: -4.8799662590026855
    9. 'True' → logprob: -5.1299662590026855
    10. ' range' → logprob: -5.3799662590026855

Token 882: '..' (ID: 485)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.0012235627509653568
    2. ':' → logprob: -6.876223564147949
    3. ':].' → logprob: -8.87622356414795
    4. ']' → logprob: -10.50122356414795
    5. ':]
' → logprob: -11.75122356414795
    6. ':],' → logprob: -12.00122356414795
    7. ']:' → logprob: -12.12622356414795
    8. ' :]' → logprob: -13.25122356414795
    9. ':]

' → logprob: -14.12622356414795
    10. ':n' → logprob: -14.75122356414795

Token 883: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0022047359962016344
    2. ']' → logprob: -6.627204895019531
    3. ' n' → logprob: -8.252204895019531
    4. ':]' → logprob: -8.502204895019531
    5. ':' → logprob: -9.002204895019531
    6. '
' → logprob: -9.252204895019531
    7. ',' → logprob: -9.627204895019531
    8. ',n' → logprob: -10.127204895019531
    9. ':n' → logprob: -10.502204895019531
    10. ' ' → logprob: -11.127204895019531

Token 884: ']' (ID: 60)
  Prédit: ']:
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.20854969322681427
    2. 'for' → logprob: -2.458549737930298
    3. ':
' → logprob: -2.833549737930298
    4. '       ' → logprob: -3.708549737930298
    5. ']:' → logprob: -5.458549499511719
    6. '   ' → logprob: -5.458549499511719
    7. ']' → logprob: -5.958549499511719
    8. ':' → logprob: -6.083549499511719
    9. ']
' → logprob: -6.208549499511719
    10. ' for' → logprob: -6.333549499511719

Token 885: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3394094705581665
    2. 'for' → logprob: -1.3394094705581665
    3. ' for' → logprob: -3.714409351348877
    4. '   ' → logprob: -6.589409351348877
    5. '```' → logprob: -9.964409828186035
    6. '	for' → logprob: -12.589409828186035
    7. '<|end|>' → logprob: -12.839409828186035
    8. '           ' → logprob: -12.839409828186035
    9. ',' → logprob: -12.964409828186035
    10. '``' → logprob: -13.714409828186035

Token 886: ' numbering' (ID: 169570)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.18342292308807373
    2. ' range' → logprob: -2.6834230422973633
    3. '1' → logprob: -3.1834230422973633
    4. '
' → logprob: -4.433423042297363
    5. 'enumer' → logprob: -4.808423042297363
    6. '```' → logprob: -4.933423042297363
    7. 'i' → logprob: -5.183423042297363
    8. 'template' → logprob: -5.308423042297363
    9. 'same' → logprob: -5.683423042297363
    10. 'polygon' → logprob: -5.933423042297363

Token 887: ' ' (ID: 220)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7009670734405518
    2. 'for' → logprob: -1.0759670734405518
    3. '       ' → logprob: -1.8259670734405518
    4. '   ' → logprob: -6.450966835021973
    5. '```' → logprob: -9.325966835021973
    6. '1' → logprob: -10.200966835021973
    7. ' in' → logprob: -10.950966835021973
    8. '           ' → logprob: -10.950966835021973
    9. '``' → logprob: -10.950966835021973
    10. '
' → logprob: -11.200966835021973

Token 888: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.377713918685913
    2. 'from' → logprob: -1.377713918685913
    3. 'starting' → logprob: -1.377713918685913
    4. '(range' → logprob: -2.627713918685913
    5. '(start' → logprob: -2.752713918685913
    6. 'for' → logprob: -3.377713918685913
    7. '(i' → logprob: -4.002714157104492
    8. 'start' → logprob: -4.627714157104492
    9. '(from' → logprob: -4.752714157104492
    10. 'range' → logprob: -5.002714157104492

Token 889: '..' (ID: 485)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20908807218074799
    2. ' for' → logprob: -2.334088087081909
    3. '       ' → logprob: -2.459088087081909
    4. '   ' → logprob: -6.20908784866333
    5. '
' → logprob: -6.45908784866333
    6. ':
' → logprob: -6.95908784866333
    7. '```' → logprob: -7.70908784866333
    8. ',' → logprob: -7.83408784866333
    9. ':' → logprob: -8.084088325500488
    10. '           ' → logprob: -8.834088325500488

Token 890: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2177637815475464
    2. 'for' → logprob: -2.092763900756836
    3. 'range' → logprob: -3.717763900756836
    4. ' for' → logprob: -3.967763900756836
    5. 'f' → logprob: -5.717763900756836
    6. '`' → logprob: -5.717763900756836
    7. '```' → logprob: -5.717763900756836
    8. '_n' → logprob: -5.842763900756836
    9. ' n' → logprob: -5.967763900756836
    10. '(n' → logprob: -6.217763900756836

Token 891: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8025622367858887
    2. 'for' → logprob: -0.8025622367858887
    3. ' for' → logprob: -2.3025622367858887
    4. '   ' → logprob: -5.802562236785889
    5. '
' → logprob: -7.927562236785889
    6. '```' → logprob: -8.552562713623047
    7. '        
' → logprob: -10.427562713623047
    8. '           ' → logprob: -11.302562713623047
    9. '	for' → logprob: -12.177562713623047
    10. '``' → logprob: -12.552562713623047

Token 892: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08034645766019821
    2. 'for' → logprob: -2.5803463459014893
    3. ' for' → logprob: -6.705346584320068
    4. '```' → logprob: -8.45534610748291
    5. '   ' → logprob: -11.08034610748291
    6. '           ' → logprob: -13.45534610748291
    7. '	for' → logprob: -14.33034610748291
    8. '``' → logprob: -14.45534610748291
    9. '        
' → logprob: -15.95534610748291
    10. '	' → logprob: -16.455347061157227

Token 893: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.12867669761180878
    2. '       ' → logprob: -2.128676652908325
    3. ' for' → logprob: -6.378676891326904
    4. '   ' → logprob: -10.503676414489746
    5. '```' → logprob: -10.753676414489746
    6. '           ' → logprob: -14.878676414489746
    7. '	for' → logprob: -15.128676414489746
    8. ' ' → logprob: -16.628677368164062
    9. '``' → logprob: -17.128677368164062
    10. '`' → logprob: -18.003677368164062

Token 894: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015678303316235542
    2. ' i' → logprob: -6.876567840576172
    3. 'line' → logprob: -7.751567840576172
    4. 'j' → logprob: -9.501567840576172
    5. 'poly' → logprob: -11.251567840576172
    6. ' line' → logprob: -12.251567840576172
    7. 'shape' → logprob: -12.376567840576172
    8. 'k' → logprob: -12.501567840576172
    9. 'other' → logprob: -13.876567840576172
    10. 'candidate' → logprob: -14.751567840576172

Token 895: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10021670162677765
    2. 'in' → logprob: -2.3502166271209717
    3. ',' → logprob: -12.72521686553955
    4. ' ' → logprob: -13.47521686553955
    5. '```' → logprob: -13.60021686553955
    6. '	in' → logprob: -13.97521686553955
    7. '_in' → logprob: -14.10021686553955
    8. '   ' → logprob: -14.22521686553955
    9. '1' → logprob: -14.60021686553955
    10. 'In' → logprob: -14.72521686553955

Token 896: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018240200355648994
    2. ' range' → logprob: -4.018239974975586
    3. '1' → logprob: -9.643239974975586
    4. 'in' → logprob: -10.893239974975586
    5. '   ' → logprob: -12.893239974975586
    6. ' ' → logprob: -13.393239974975586
    7. ' in' → logprob: -13.393239974975586
    8. '```' → logprob: -14.518239974975586
    9. '(range' → logprob: -14.893239974975586
    10. '  ' → logprob: -15.768239974975586

Token 897: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5252596464706585e-05
    2. '(' → logprob: -10.125044822692871
    3. ' ' → logprob: -12.750044822692871
    4. '   ' → logprob: -13.125044822692871
    5. '       ' → logprob: -15.500044822692871
    6. '           ' → logprob: -16.875045776367188
    7. '```' → logprob: -19.125045776367188
    8. ' (' → logprob: -19.375045776367188
    9. '    ' → logprob: -19.375045776367188
    10. 'n' → logprob: -19.625045776367188

Token 898: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -14.125001907348633
    3. '   ' → logprob: -14.375001907348633
    4. 'n' → logprob: -15.750001907348633
    5. '
' → logprob: -18.000001907348633
    6. 'len' → logprob: -18.125001907348633
    7. '```' → logprob: -18.125001907348633
    8. '(' → logprob: -18.750001907348633
    9. '           ' → logprob: -18.875001907348633
    10. '       ' → logprob: -19.000001907348633

Token 899: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06271384656429291
    2. ',n' → logprob: -2.812713861465454
    3. 'n' → logprob: -7.937713623046875
    4. ',len' → logprob: -8.062713623046875
    5. ' ,' → logprob: -9.937713623046875
    6. '(n' → logprob: -11.437713623046875
    7. '           ' → logprob: -12.312713623046875
    8. '       ' → logprob: -12.562713623046875
    9. ' n' → logprob: -13.187713623046875
    10. 'len' → logprob: -13.562713623046875

Token 900: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -8.292095299111679e-05
    2. 'len' → logprob: -9.500082969665527
    3. ' n' → logprob: -11.750082969665527
    4. '   ' → logprob: -16.75008201599121
    5. '(n' → logprob: -17.25008201599121
    6. ' len' → logprob: -18.87508201599121
    7. '	n' → logprob: -19.00008201599121
    8. '       ' → logprob: -19.62508201599121
    9. '
' → logprob: -20.75008201599121
    10. '```' → logprob: -21.12508201599121

Token 901: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006408635526895523
    2. ',' → logprob: -6.00640869140625
    3. ' +' → logprob: -6.25640869140625
    4. '):
' → logprob: -6.75640869140625
    5. '):' → logprob: -7.38140869140625
    6. ',n' → logprob: -9.50640869140625
    7. '   ' → logprob: -10.75640869140625
    8. '       ' → logprob: -10.75640869140625
    9. '+n' → logprob: -10.88140869140625
    10. '```' → logprob: -11.13140869140625

Token 902: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4259644558478612e-05
    2. ' ' → logprob: -12.500014305114746
    3. 'n' → logprob: -12.500014305114746
    4. '+' → logprob: -12.750014305114746
    5. '   ' → logprob: -13.250014305114746
    6. ')' → logprob: -14.000014305114746
    7. '):
' → logprob: -14.375014305114746
    8. '```' → logprob: -15.375014305114746
    9. '(n' → logprob: -15.750014305114746
    10. ' n' → logprob: -16.37501335144043

Token 903: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03973071277141571
    2. ':
' → logprob: -3.5397307872772217
    3. '):' → logprob: -5.414730548858643
    4. ':' → logprob: -5.539730548858643
    5. '       ' → logprob: -6.664730548858643
    6. '():
' → logprob: -9.2897310256958
    7. '           ' → logprob: -9.7897310256958
    8. '):
' → logprob: -9.9147310256958
    9. '   ' → logprob: -10.1647310256958
    10. ']:
' → logprob: -11.2897310256958

Token 904: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05929986387491226
    2. '           ' → logprob: -2.934299945831299
    3. ' if' → logprob: -6.809299945831299
    4. '
' → logprob: -6.934299945831299
    5. '```' → logprob: -7.059299945831299
    6. '<|end|>' → logprob: -7.309299945831299
    7. '   ' → logprob: -8.30929946899414
    8. 'if' → logprob: -8.55929946899414
    9. '<|end|>' → logprob: -9.18429946899414
    10. ':
' → logprob: -10.05929946899414

Token 905: ' shape' (ID: 9591)
  Prédit: 'shape'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shape' (adapté à ' shape') → logprob: -0.9607323408126831
    2. ' shape' → logprob: -1.085732340812683
    3. ' if' → logprob: -2.0857324600219727
    4. 'if' → logprob: -2.3357324600219727
    5. '           ' → logprob: -3.3357324600219727
    6. ' line' → logprob: -5.085732460021973
    7. 'result' → logprob: -5.335732460021973
    8. '       ' → logprob: -5.835732460021973
    9. 'line' → logprob: -5.960732460021973
    10. ' result' → logprob: -6.835732460021973

Token 906: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4290362596511841
    2. ' =' → logprob: -1.054036259651184
    3. '==' → logprob: -8.554036140441895
    4. '_shape' → logprob: -9.804036140441895
    5. ' ==' → logprob: -10.304036140441895
    6. '   ' → logprob: -11.054036140441895
    7. ')' → logprob: -11.054036140441895
    8. 'shape' → logprob: -12.179036140441895
    9. '_' → logprob: -12.804036140441895
    10. '    ' → logprob: -13.179036140441895

Token 907: ' normalize' (ID: 44464)
  Prédit: 'normalize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -0.01815006136894226
    2. ' normalize' → logprob: -4.0181498527526855
    3. '(normal' → logprob: -16.268150329589844
    4. 'normal' → logprob: -16.893150329589844
    5. 'normalized' → logprob: -17.518150329589844
    6. '           ' → logprob: -18.393150329589844
    7. '.normalize' → logprob: -19.018150329589844
    8. ' normalized' → logprob: -20.393150329589844
    9. '   ' → logprob: -20.768150329589844
    10. ' normal' → logprob: -20.893150329589844

Token 908: '_shape' (ID: 30261)
  Prédit: '_shape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_shape' → logprob: -3.15441757265944e-05
    2. 'shape' → logprob: -10.625031471252441
    3. 'normalize' → logprob: -11.875031471252441
    4. '_' → logprob: -16.125032424926758
    5. '_shapes' → logprob: -16.125032424926758
    6. 'Shape' → logprob: -16.875032424926758
    7. '(normal' → logprob: -17.250032424926758
    8. 'reshape' → logprob: -18.625032424926758
    9. '   ' → logprob: -18.750032424926758
    10. '```' → logprob: -19.000032424926758

Token 909: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -8.537868779967539e-06
    2. 'polygon' → logprob: -11.750008583068848
    3. '(' → logprob: -15.375008583068848
    4. ' polygon' → logprob: -16.12500762939453
    5. '(pol' → logprob: -16.12500762939453
    6. '(poly' → logprob: -16.25000762939453
    7. 'p' → logprob: -17.00000762939453
    8. ' (' → logprob: -18.12500762939453
    9. '           ' → logprob: -18.37500762939453
    10. '   ' → logprob: -18.37500762939453

Token 910: 'olygon' (ID: 80431)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.10034005343914032
    2. 'olygon' → logprob: -2.3503401279449463
    3. 'pol' → logprob: -9.975339889526367
    4. 'ol' → logprob: -10.350339889526367
    5. ' polygon' → logprob: -10.600339889526367
    6. '(p' → logprob: -11.100339889526367
    7. 'poly' → logprob: -11.600339889526367
    8. '_polygon' → logprob: -12.975339889526367
    9. 'oly' → logprob: -13.350339889526367
    10. '(pol' → logprob: -13.975339889526367

Token 911: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.000283265660982579
    2. 'polygon' → logprob: -8.875283241271973
    3. 'l' → logprob: -9.625283241271973
    4. '_lines' → logprob: -10.625283241271973
    5. '_polygon' → logprob: -10.875283241271973
    6. 'als' → logprob: -10.875283241271973
    7. '[' → logprob: -12.500283241271973
    8. ' polygon' → logprob: -13.125283241271973
    9. 'olygon' → logprob: -13.500283241271973
    10. '_l' → logprob: -13.875283241271973

Token 912: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0006633530138060451
    2. 'lines' → logprob: -7.8756632804870605
    3. 'ines' → logprob: -8.375663757324219
    4. 'polygon' → logprob: -10.375663757324219
    5. 'al' → logprob: -12.500663757324219
    6. 'es' → logprob: -12.625663757324219
    7. 's' → logprob: -12.750663757324219
    8. '_polygon' → logprob: -13.250663757324219
    9. '_points' → logprob: -13.625663757324219
    10. ')' → logprob: -14.000663757324219

Token 913: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.8889261304575484e-06
    2. ')[' → logprob: -13.000003814697266
    3. '[' → logprob: -14.125003814697266
    4. '[
' → logprob: -15.625003814697266
    5. '   ' → logprob: -15.875003814697266
    6. '```' → logprob: -15.875003814697266
    7. ' [' → logprob: -16.125003814697266
    8. ')' → logprob: -16.750003814697266
    9. '[I' → logprob: -17.500003814697266
    10. '[u' → logprob: -17.875003814697266

Token 914: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3869723081588745
    2. ')
' → logprob: -1.1369723081588745
    3. '           ' → logprob: -10.386972427368164
    4. ')
' → logprob: -10.636972427368164
    5. '       ' → logprob: -11.011972427368164
    6. '))
' → logprob: -11.636972427368164
    7. '))' → logprob: -12.011972427368164
    8. ')`
' → logprob: -12.386972427368164
    9. '])' → logprob: -13.011972427368164
    10. '   ' → logprob: -13.011972427368164

Token 915: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00934565719217062
    2. 'if' → logprob: -5.009345531463623
    3. ' if' → logprob: -6.134345531463623
    4. '       ' → logprob: -8.259346008300781
    5. '   ' → logprob: -9.009346008300781
    6. '
' → logprob: -10.259346008300781
    7. '```' → logprob: -11.009346008300781
    8. '<|end|>' → logprob: -11.259346008300781
    9. '          ' → logprob: -12.884346008300781
    10. '<|end|>' → logprob: -13.009346008300781

Token 916: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.09728039801120758
    2. '           ' → logprob: -3.347280502319336
    3. ' if' → logprob: -3.347280502319336
    4. 'results' → logprob: -3.847280502319336
    5. ' results' → logprob: -7.472280502319336
    6. '       ' → logprob: -7.847280502319336
    7. '   ' → logprob: -10.597280502319336
    8. '```' → logprob: -11.972280502319336
    9. '
' → logprob: -12.097280502319336
    10. 'result' → logprob: -12.972280502319336

Token 917: ' shape' (ID: 9591)
  Prédit: 'shape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shape' → logprob: -0.3868710398674011
    2. ' shape' → logprob: -1.136871099472046
    3. '(shape' → logprob: -17.511871337890625
    4. '.shape' → logprob: -19.136871337890625
    5. '           ' → logprob: -19.761871337890625
    6. '_shape' → logprob: -20.011871337890625
    7. ' shapes' → logprob: -21.136871337890625
    8. 'Shape' → logprob: -22.136871337890625
    9. 'sh' → logprob: -22.136871337890625
    10. '形' → logprob: -22.261871337890625

Token 918: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5759463906288147
    2. ' ==' → logprob: -0.8259463906288147
    3. ')==' → logprob: -13.200946807861328
    4. '=' → logprob: -13.200946807861328
    5. '==
' → logprob: -13.450946807861328
    6. '===' → logprob: -13.825946807861328
    7. ']==' → logprob: -15.075946807861328
    8. '()==' → logprob: -15.450946807861328
    9. ' =' → logprob: -16.200946807861328
    10. ')' → logprob: -16.700946807861328

Token 919: ' template' (ID: 6894)
  Prédit: 'template'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'template' → logprob: -0.0004306692280806601
    2. ' template' → logprob: -7.750430583953857
    3. '	template' → logprob: -18.000431060791016
    4. '```' → logprob: -19.375431060791016
    5. '(template' → logprob: -19.750431060791016
    6. '$template' → logprob: -20.375431060791016
    7. '   ' → logprob: -21.375431060791016
    8. 'emplate' → logprob: -21.375431060791016
    9. '.template' → logprob: -21.500431060791016
    10. '           ' → logprob: -22.375431060791016

Token 920: '_shape' (ID: 30261)
  Prédit: '_shape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_shape' → logprob: -9.088346359931165e-07
    2. 'shape' → logprob: -14.250000953674316
    3. '_shapes' → logprob: -16.375
    4. '
' → logprob: -17.125
    5. ')' → logprob: -18.375
    6. '   ' → logprob: -19.0
    7. '\' → logprob: -19.0
    8. '```' → logprob: -19.5
    9. '_
' → logprob: -20.0
    10. '_' → logprob: -20.125

Token 921: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8773361444473267
    2. ':
' → logprob: -1.2523361444473267
    3. '               ' → logprob: -1.5023361444473267
    4. '           ' → logprob: -2.627336025238037
    5. '):
' → logprob: -6.252336025238037
    6. ')' → logprob: -8.252336502075195
    7. ' and' → logprob: -8.377336502075195
    8. '<|end|>' → logprob: -8.752336502075195
    9. '):' → logprob: -8.877336502075195
    10. ',' → logprob: -9.502336502075195

Token 922: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010167333530262113
    2. ' results' → logprob: -7.376016616821289
    3. 'results' → logprob: -8.501016616821289
    4. '           ' → logprob: -8.751016616821289
    5. '	results' → logprob: -11.876016616821289
    6. '
' → logprob: -12.626016616821289
    7. '       ' → logprob: -12.626016616821289
    8. '	       ' → logprob: -12.626016616821289
    9. '	           ' → logprob: -13.001016616821289
    10. '(results' → logprob: -13.001016616821289

Token 923: ' results' (ID: 4376)
  Prédit: ' results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' results' → logprob: -0.6976861357688904
    2. 'results' (adapté à ' results') → logprob: -0.6976861357688904
    3. '               ' → logprob: -5.447686195373535
    4. '	results' → logprob: -8.947686195373535
    5. '```' → logprob: -10.322686195373535
    6. '   ' → logprob: -10.572686195373535
    7. '                   ' → logprob: -11.322686195373535
    8. '           ' → logprob: -11.322686195373535
    9. '       ' → logprob: -12.197686195373535
    10. 'result' → logprob: -13.697686195373535

Token 924: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.02325328253209591
    2. '.' → logprob: -3.7732532024383545
    3. ' .' → logprob: -12.398253440856934
    4. 'append' → logprob: -13.773253440856934
    5. '   ' → logprob: -14.273253440856934
    6. '.Append' → logprob: -14.648253440856934
    7. '].' → logprob: -15.148253440856934
    8. '.push' → logprob: -15.273253440856934
    9. '.app' → logprob: -15.398253440856934
    10. '.extend' → logprob: -15.648253440856934

Token 925: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.006590316537767649
    2. '(str' → logprob: -5.256590366363525
    3. '(f' → logprob: -7.131590366363525
    4. 'i' → logprob: -8.006589889526367
    5. 'str' → logprob: -8.506589889526367
    6. 'f' → logprob: -11.631589889526367
    7. '(' → logprob: -11.881589889526367
    8. '((' → logprob: -12.631589889526367
    9. '('' → logprob: -14.006589889526367
    10. ' i' → logprob: -14.631589889526367

Token 926: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0564331205387134e-05
    2. ')
' → logprob: -11.62501049041748
    3. ' )' → logprob: -14.12501049041748
    4. '<|end|>' → logprob: -14.75001049041748
    5. ')return' → logprob: -15.75001049041748
    6. '       ' → logprob: -16.625011444091797
    7. '),' → logprob: -17.000011444091797
    8. ')}' → logprob: -17.125011444091797
    9. ')#' → logprob: -17.625011444091797
    10. '))' → logprob: -17.750011444091797

Token 927: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1357133537530899
    2. '
' → logprob: -2.1357133388519287
    3. '        
' → logprob: -5.010713577270508
    4. 'print' → logprob: -6.385713577270508
    5. '   ' → logprob: -8.385713577270508
    6. '    
' → logprob: -9.260713577270508
    7. '```' → logprob: -10.260713577270508
    8. '  
' → logprob: -11.135713577270508
    9. '
' → logprob: -12.260713577270508
    10. ' print' → logprob: -12.635713577270508

Token 928: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17294983565807343
    2. '       ' → logprob: -2.42294979095459
    3. 'print' → logprob: -2.67294979095459
    4. '```' → logprob: -6.92294979095459
    5. 'if' → logprob: -9.42294979095459
    6. '
' → logprob: -10.42294979095459
    7. ' print' → logprob: -12.29794979095459
    8. '    
' → logprob: -12.42294979095459
    9. '        
' → logprob: -12.67294979095459
    10. '``' → logprob: -13.54794979095459

Token 929: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08718203008174896
    2. 'if' → logprob: -2.58718204498291
    3. 'for' → logprob: -4.83718204498291
    4. '       ' → logprob: -8.08718204498291
    5. '```' → logprob: -11.33718204498291
    6. '   ' → logprob: -12.08718204498291
    7. 'results' → logprob: -13.08718204498291
    8. '
' → logprob: -14.21218204498291
    9. '        
' → logprob: -15.21218204498291
    10. ' print' → logprob: -15.33718204498291

Token 930: ' Output' (ID: 18315)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014167741872370243
    2. 'if' → logprob: -4.264167785644531
    3. 'for' → logprob: -12.764167785644531
    4. '       ' → logprob: -13.514167785644531
    5. '   ' → logprob: -17.01416778564453
    6. 'results' → logprob: -17.51416778564453
    7. ' print' → logprob: -17.51416778564453
    8. '#' → logprob: -19.26416778564453
    9. ' if' → logprob: -19.26416778564453
    10. '```' → logprob: -19.26416778564453

Token 931: ' results' (ID: 4376)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008784037083387375
    2. '       ' → logprob: -4.75878381729126
    3. 'if' → logprob: -9.008784294128418
    4. ' print' → logprob: -10.133784294128418
    5. '```' → logprob: -11.883784294128418
    6. ' if' → logprob: -15.383784294128418
    7. '   ' → logprob: -15.758784294128418
    8. '`' → logprob: -17.0087833404541
    9. 'for' → logprob: -17.1337833404541
    10. 'results' → logprob: -17.2587833404541

Token 932: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017145700985565782
    2. 'print' → logprob: -6.376714706420898
    3. ' print' → logprob: -12.751714706420898
    4. 'if' → logprob: -12.751714706420898
    5. '```' → logprob: -13.126714706420898
    6. '        
' → logprob: -13.251714706420898
    7. '   ' → logprob: -13.751714706420898
    8. '           ' → logprob: -14.126714706420898
    9. ',' → logprob: -14.626714706420898
    10. ' if' → logprob: -15.626714706420898

Token 933: ' ascending' (ID: 75564)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5522860288619995
    2. 'sorted' → logprob: -1.0522860288619995
    3. '"' → logprob: -2.802286148071289
    4. 'ascending' → logprob: -4.802286148071289
    5. 'print' → logprob: -5.927286148071289
    6. 'one' → logprob: -6.052286148071289
    7. 'space' → logprob: -8.177286148071289
    8. 'a' → logprob: -8.177286148071289
    9. ''s' → logprob: -8.427286148071289
    10. 'results' → logprob: -8.427286148071289

Token 934: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.023252815008163452
    2. ' order' → logprob: -3.7732527256011963
    3. '
' → logprob: -12.273252487182617
    4. 'sorted' → logprob: -12.898252487182617
    5. 'print' → logprob: -15.898252487182617
    6. '   ' → logprob: -17.398252487182617
    7. 'result' → logprob: -17.523252487182617
    8. '`' → logprob: -17.898252487182617
    9. 'space' → logprob: -18.148252487182617
    10. 'for' → logprob: -18.398252487182617

Token 935: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.490770548582077
    2. 'if' → logprob: -1.4907705783843994
    3. 'print' → logprob: -1.9907705783843994
    4. 'results' → logprob: -3.9907705783843994
    5. '```' → logprob: -5.24077033996582
    6. ' if' → logprob: -6.61577033996582
    7. 'for' → logprob: -7.49077033996582
    8. '
' → logprob: -8.74077033996582
    9. '``' → logprob: -9.49077033996582
    10. '`' → logprob: -10.36577033996582

Token 936: ' one' (ID: 1001)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002376365475356579
    2. ' print' → logprob: -6.252376556396484
    3. 'if' → logprob: -7.752376556396484
    4. ' if' → logprob: -11.752376556396484
    5. ''' → logprob: -11.877376556396484
    6. '       ' → logprob: -12.877376556396484
    7. '"' → logprob: -15.002376556396484
    8. '   ' → logprob: -16.002376556396484
    9. '```' → logprob: -16.752376556396484
    10. '
' → logprob: -17.252376556396484

Token 937: ' per' (ID: 777)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.07744976878166199
    2. '       ' → logprob: -3.5774497985839844
    3. ' per' → logprob: -3.9524497985839844
    4. 'line' → logprob: -4.202449798583984
    5. 'per' → logprob: -5.327449798583984
    6. ' space' → logprob: -6.702449798583984
    7. ' print' → logprob: -7.077449798583984
    8. 'for' → logprob: -7.077449798583984
    9. 'print' → logprob: -7.327449798583984
    10. 'space' → logprob: -7.327449798583984

Token 938: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.07908134162425995
    2. ' line' → logprob: -2.5790812969207764
    3. 'print' → logprob: -8.579081535339355
    4. '\n' → logprob: -12.954081535339355
    5. '```' → logprob: -14.829081535339355
    6. '
' → logprob: -14.954081535339355
    7. '_line' → logprob: -15.454081535339355
    8. ' print' → logprob: -15.954081535339355
    9. '   ' → logprob: -16.45408058166504
    10. '\' → logprob: -17.07908058166504

Token 939: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06111567094922066
    2. 'for' → logprob: -3.0611157417297363
    3. 'if' → logprob: -4.436115741729736
    4. ' for' → logprob: -7.686115741729736
    5. ' if' → logprob: -9.686115264892578
    6. '<|end|>' → logprob: -9.936115264892578
    7. '        
' → logprob: -10.936115264892578
    8. '```' → logprob: -11.436115264892578
    9. '
' → logprob: -12.436115264892578
    10. '   ' → logprob: -13.436115264892578

Token 940: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003650795202702284
    2. 'for' → logprob: -5.753650665283203
    3. '   ' → logprob: -8.378650665283203
    4. 'if' → logprob: -8.503650665283203
    5. ' for' → logprob: -11.003650665283203
    6. '```' → logprob: -11.503650665283203
    7. 'print' → logprob: -11.878650665283203
    8. '        
' → logprob: -13.003650665283203
    9. ' if' → logprob: -13.003650665283203
    10. '           ' → logprob: -13.753650665283203

Token 941: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004429289605468512
    2. 'if' → logprob: -5.754429340362549
    3. '       ' → logprob: -6.754429340362549
    4. ' for' → logprob: -9.87942886352539
    5. '```' → logprob: -10.87942886352539
    6. 'results' → logprob: -11.37942886352539
    7. 'print' → logprob: -13.12942886352539
    8. '   ' → logprob: -13.75442886352539
    9. '	for' → logprob: -15.12942886352539
    10. '``' → logprob: -16.12942886352539

Token 942: ' r' (ID: 428)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.39123573899269104
    2. 'r' → logprob: -1.1412357091903687
    3. 'result' → logprob: -5.891235828399658
    4. ' res' → logprob: -6.641235828399658
    5. 'num' → logprob: -9.1412353515625
    6. 'i' → logprob: -9.6412353515625
    7. 'idx' → logprob: -9.7662353515625
    8. ' r' → logprob: -9.8912353515625
    9. 'index' → logprob: -12.8912353515625
    10. 'ri' → logprob: -13.2662353515625

Token 943: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004084455315023661
    2. 'in' → logprob: -5.504084587097168
    3. 'r' → logprob: -12.504084587097168
    4. '   ' → logprob: -14.254084587097168
    5. ' r' → logprob: -14.504084587097168
    6. ' ' → logprob: -14.504084587097168
    7. 'e' → logprob: -15.754084587097168
    8. '```' → logprob: -16.00408363342285
    9. 'i' → logprob: -16.12908363342285
    10. 'n' → logprob: -16.50408363342285

Token 944: ' sorted' (ID: 20099)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.00015943869948387146
    2. ' results' → logprob: -9.00015926361084
    3. 'sorted' → logprob: -10.25015926361084
    4. 'result' → logprob: -15.00015926361084
    5. 'range' → logprob: -15.25015926361084
    6. '   ' → logprob: -16.625160217285156
    7. '(results' → logprob: -17.125160217285156
    8. '	results' → logprob: -18.250160217285156
    9. ' sorted' → logprob: -18.625160217285156
    10. 'r' → logprob: -19.000160217285156

Token 945: '(results' (ID: 42655)
  Prédit: '(results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(results' → logprob: -0.0007111206650733948
    2. 'results' → logprob: -7.250710964202881
    3. ' results' → logprob: -13.750711441040039
    4. '	results' → logprob: -16.00071144104004
    5. '(result' → logprob: -17.37571144104004
    6. 'Results' → logprob: -18.37571144104004
    7. '_results' → logprob: -20.00071144104004
    8. '.results' → logprob: -20.12571144104004
    9. ' (' → logprob: -20.50071144104004
    10. '(' → logprob: -20.62571144104004

Token 946: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.18227437138557434
    2. '):' → logprob: -1.807274341583252
    3. '           ' → logprob: -7.182274341583252
    4. ')' → logprob: -7.682274341583252
    5. '       ' → logprob: -7.682274341583252
    6. '):
' → logprob: -7.932274341583252
    7. ':' → logprob: -8.43227481842041
    8. '():
' → logprob: -8.93227481842041
    9. ':
' → logprob: -9.68227481842041
    10. '   ' → logprob: -10.18227481842041

Token 947: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03274289146065712
    2. 'print' → logprob: -3.532742977142334
    3. ' print' → logprob: -6.282742977142334
    4. '   ' → logprob: -6.907742977142334
    5. '```' → logprob: -9.157742500305176
    6. '       ' → logprob: -11.657742500305176
    7. '               ' → logprob: -13.282742500305176
    8. '	       ' → logprob: -13.282742500305176
    9. '	print' → logprob: -13.782742500305176
    10. ' ' → logprob: -14.782742500305176

Token 948: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.512236498361744e-07
    2. ' print' → logprob: -14.500000953674316
    3. '```' → logprob: -18.5
    4. '       ' → logprob: -19.0
    5. '           ' → logprob: -19.125
    6. '	print' → logprob: -20.625
    7. '   ' → logprob: -21.375
    8. 'sys' → logprob: -22.0
    9. 'println' → logprob: -22.0
    10. 'printf' → logprob: -23.125

Token 949: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -1.2664456789934775e-06
    2. 'r' → logprob: -13.875000953674316
    3. '(f' → logprob: -15.250000953674316
    4. '(' → logprob: -17.500001907348633
    5. '(i' → logprob: -21.625001907348633
    6. ' r' → logprob: -22.375001907348633
    7. '(str' → logprob: -22.625001907348633
    8. '((' → logprob: -22.875001907348633
    9. 'f' → logprob: -23.000001907348633
    10. '=r' → logprob: -23.125001907348633

Token 950: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. ')
' → logprob: -13.62500286102295
    3. '())' → logprob: -14.00000286102295
    4. ' )' → logprob: -14.87500286102295
    5. '()' → logprob: -15.87500286102295
    6. '<|end|>' → logprob: -16.250001907348633
    7. ')}' → logprob: -17.125001907348633
    8. '))' → logprob: -17.250001907348633
    9. '```' → logprob: -17.250001907348633
    10. '       ' → logprob: -17.500001907348633

Token 951: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004776022396981716
    2. '<|end|>' → logprob: -5.6297760009765625
    3. '```' → logprob: -7.3797760009765625
    4. ' if' → logprob: -7.7547760009765625
    5. '
' → logprob: -9.504776000976562
    6. '#' → logprob: -10.754776000976562
    7. '<|end|>' → logprob: -12.504776000976562
    8. '...' → logprob: -12.629776000976562
    9. '    
' → logprob: -13.004776000976562
    10. '[' → logprob: -13.129776000976562

Token 952: ' print' (ID: 2123)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11802977323532104
    2. '<|end|>' → logprob: -2.243029832839966
    3. ' if' → logprob: -6.368029594421387
    4. '       ' → logprob: -6.368029594421387
    5. 'print' (adapté à ' print') → logprob: -7.368029594421387
    6. '```' → logprob: -8.243029594421387
    7. '   ' → logprob: -8.368029594421387
    8. '#' → logprob: -8.493029594421387
    9. '<|end|>' → logprob: -8.868029594421387
    10. '	if' → logprob: -9.868029594421387

Token 953: '("' (ID: 568)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0004365102213341743
    2. '<|end|>' → logprob: -8.500436782836914
    3. '())' → logprob: -9.500436782836914
    4. '()\' → logprob: -9.625436782836914
    5. '()
' → logprob: -10.375436782836914
    6. ')' → logprob: -10.625436782836914
    7. '("")' → logprob: -11.625436782836914
    8. '```' → logprob: -11.625436782836914
    9. '\' → logprob: -12.625436782836914
    10. '<|end|>' → logprob: -12.750436782836914

Token 954: '++++' (ID: 20438)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.002511212369427085
    2. ')' → logprob: -7.127511024475098
    3. '<|end|>' → logprob: -7.127511024475098
    4. '"' → logprob: -7.627511024475098
    5. '""' → logprob: -8.627511024475098
    6. '0' → logprob: -9.502511024475098
    7. '#' → logprob: -10.002511024475098
    8. '```' → logprob: -10.502511024475098
    9. '')' → logprob: -10.627511024475098
    10. '")
' → logprob: -11.377511024475098

Token 955: '+"' (ID: 8626)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5909775495529175
    2. '")' → logprob: -0.8409775495529175
    3. '+")' → logprob: -4.590977668762207
    4. '++++' → logprob: -5.715977668762207
    5. '\n' → logprob: -7.465977668762207
    6. '+\' → logprob: -7.465977668762207
    7. '\' → logprob: -9.340977668762207
    8. '+++' → logprob: -9.465977668762207
    9. '+)' → logprob: -10.090977668762207
    10. '++' → logprob: -10.465977668762207

Token 956: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006982714403420687
    2. '")' → logprob: -5.131982803344727
    3. '<|end|>' → logprob: -6.881982803344727
    4. '```' → logprob: -11.506982803344727
    5. ')
' → logprob: -12.006982803344727
    6. '')' → logprob: -12.256982803344727
    7. '<|end|>' → logprob: -13.256982803344727
    8. '   ' → logprob: -13.881982803344727
    9. '`)' → logprob: -14.381982803344727
    10. '+)' → logprob: -15.131982803344727

Token 957: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 958: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.47431257367134094
    2. '__' → logprob: -0.9743125438690186
    3. ' main' → logprob: -9.099312782287598
    4. 'if' → logprob: -9.849312782287598
    5. ' if' → logprob: -10.474312782287598
    6. 'main' → logprob: -10.474312782287598
    7. '_' → logprob: -12.849312782287598
    8. ' sys' → logprob: -12.974312782287598
    9. '```' → logprob: -12.974312782287598
    10. '___' → logprob: -13.349312782287598

Token 959: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0820968970656395
    2. '==' → logprob: -2.832096815109253
    3. ' ==' → logprob: -4.082097053527832
    4. '=="' → logprob: -6.082097053527832
    5. 'name' → logprob: -8.332097053527832
    6. '=='' → logprob: -8.957097053527832
    7. '__.__' → logprob: -9.332097053527832
    8. ' __' → logprob: -9.582097053527832
    9. '```' → logprob: -10.207097053527832
    10. '[' → logprob: -10.332097053527832

Token 960: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.339278580620885e-06
    2. '__.__' → logprob: -13.875001907348633
    3. '==' → logprob: -14.500001907348633
    4. '____' → logprob: -15.500001907348633
    5. '___' → logprob: -15.500001907348633
    6. ' ==' → logprob: -16.125001907348633
    7. '__('' → logprob: -16.375001907348633
    8. '```' → logprob: -17.000001907348633
    9. '__
' → logprob: -17.250001907348633
    10. '__["' → logprob: -17.500001907348633

Token 961: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6810438632965088
    2. ' ==' → logprob: -1.3060438632965088
    3. '__' → logprob: -1.5560438632965088
    4. '=="' → logprob: -4.68104362487793
    5. '=='' → logprob: -5.93104362487793
    6. '==
' → logprob: -10.30604362487793
    7. '```' → logprob: -10.93104362487793
    8. '=' → logprob: -11.05604362487793
    9. '**' → logprob: -11.80604362487793
    10. '[' → logprob: -11.80604362487793

Token 962: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.47414180636405945
    2. ''' → logprob: -0.9741418361663818
    3. '__' → logprob: -9.724142074584961
    4. ' "__' → logprob: -12.474142074584961
    5. ' '__' → logprob: -13.974142074584961
    6. ''"' → logprob: -16.34914207458496
    7. '"'' → logprob: -16.72414207458496
    8. '   ' → logprob: -17.72414207458496
    9. ''_' → logprob: -17.84914207458496
    10. ''m' → logprob: -18.09914207458496

Token 963: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0016328091733157635
    2. '__' → logprob: -6.5016326904296875
    3. 'name' → logprob: -9.001632690429688
    4. '__':
' → logprob: -12.251632690429688
    5. '_main' → logprob: -13.126632690429688
    6. 'm' → logprob: -16.126632690429688
    7. '__.' → logprob: -17.126632690429688
    8. 'if' → logprob: -17.126632690429688
    9. '____' → logprob: -17.251632690429688
    10. '__":
' → logprob: -17.251632690429688

Token 964: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.03860124200582504
    2. '__' → logprob: -3.4136011600494385
    3. '__":
' → logprob: -5.413601398468018
    4. ':' → logprob: -8.16360092163086
    5. '__:' → logprob: -9.28860092163086
    6. '():
' → logprob: -9.91360092163086
    7. '':' → logprob: -10.78860092163086
    8. '('__' → logprob: -11.91360092163086
    9. '':
' → logprob: -12.16360092163086
    10. '_' → logprob: -12.16360092163086

Token 965: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.001557355048134923
    2. '   ' → logprob: -6.626557350158691
    3. ' main' → logprob: -8.501557350158691
    4. '```' → logprob: -11.251557350158691
    5. '	main' → logprob: -11.251557350158691
    6. 'if' → logprob: -14.501557350158691
    7. 'run' → logprob: -14.501557350158691
    8. '(main' → logprob: -15.126557350158691
    9. '__' → logprob: -15.126557350158691
    10. '`' → logprob: -15.376557350158691

Token 966: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.0
    3. '	main' → logprob: -21.25
    4. '   ' → logprob: -21.5
    5. '_main' → logprob: -25.125
    6. '(main' → logprob: -26.25
    7. 'sys' → logprob: -26.625
    8. '.main' → logprob: -26.875
    9. '```' → logprob: -27.375
    10. 'Main' → logprob: -27.875

Token 967: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 965
Tokens correctement prédits (1ère position, stricte): 379
Tokens correctement prédits (1ère position, avec adaptation): 417
Tokens correctement prédits (top 10): 767
Précision stricte (1ère position): 39.27%
Précision adaptée (1ère position): 43.21%
Précision (top 10): 79.48%
================================================================================
