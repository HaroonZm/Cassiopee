================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:58:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# On cherche le nombre de façons de choisir la hauteur d'un étage (entre A et B)
# telle que le nombre total d'étages (H divisé par la hauteur d'un étage) soit un entier.
# En effet, l'immeuble fait une hauteur H, chaque étage a une hauteur h (A <= h <= B),
# et H doit être divisible par h pour que la hauteur totale soit exactement H.
# On compte donc le nombre de diviseurs de H dans l'intervalle [A, B].

def count_floor_height_options(H, A, B):
    count = 0
    # Pour chaque hauteur possible entre A et B
    for h in range(A, B + 1):
        # On vérifie si h divise H
        if H % h == 0:
            count += 1
    return count

def main():
    # Lecture des données
    H, A, B = map(int, input().split())
    # Calcul et sortie du résultat
    print(count_floor_height_options(H, A, B))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' On' (ID: 2160)
  → Token d'amorce (pas de prédiction)

Token 2: ' cherche' (ID: 52345)
  → Token d'amorce (pas de prédiction)

Token 3: ' le' (ID: 505)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.6222814321517944
    2. ' ' → logprob: -0.8722814321517944
    3. 'à' → logprob: -4.122281551361084
    4. '_' → logprob: -4.247281551361084
    5. ' a' → logprob: -5.247281551361084
    6. ' #' → logprob: -6.247281551361084
    7. ' ```' → logprob: -6.372281551361084
    8. '#' → logprob: -6.622281551361084
    9. '  ' → logprob: -6.747281551361084
    10. '```' → logprob: -7.622281551361084

Token 4: ' nombre' (ID: 9733)
  Prédit: 'me'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'me' → logprob: -1.3445225954055786
    2. 's' → logprob: -1.8445225954055786
    3. '#' → logprob: -2.594522476196289
    4. 'c' → logprob: -2.719522476196289
    5. 'm' → logprob: -2.719522476196289
    6. 'd' → logprob: -3.219522476196289
    7. ' meilleur' → logprob: -3.219522476196289
    8. 't' → logprob: -3.469522476196289
    9. 'f' → logprob: -3.719522476196289
    10. 'r' → logprob: -3.844522476196289

Token 5: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.007246079854667187
    2. ' ' → logprob: -5.632246017456055
    3. '_de' → logprob: -6.382246017456055
    4. '_d' → logprob: -7.257246017456055
    5. 'd' → logprob: -7.382246017456055
    6. 's' → logprob: -8.632246017456055
    7. ' de' → logprob: -9.632246017456055
    8. ' _' → logprob: -10.007246017456055
    9. 'de' → logprob: -10.132246017456055
    10. ' d' → logprob: -10.382246017456055

Token 6: ' façons' (ID: 165958)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.1231008768081665
    2. 'l' → logprob: -1.4981008768081665
    3. '\n' → logprob: -1.7481008768081665
    4. ' ' → logprob: -3.623100757598877
    5. '\' → logprob: -3.748100757598877
    6. 'car' → logprob: -3.873100757598877
    7. 's' → logprob: -3.873100757598877
    8. '_' → logprob: -3.873100757598877
    9. 'd' → logprob: -3.998100757598877
    10. 'v' → logprob: -4.123100757598877

Token 7: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.020849227905273438
    2. 'd' → logprob: -4.770849227905273
    3. ' d' → logprob: -5.270849227905273
    4. ' de' → logprob: -5.395849227905273
    5. 'de' → logprob: -6.770849227905273
    6. '_' → logprob: -7.895849227905273
    7. '#' → logprob: -8.520849227905273
    8. ' ' → logprob: -8.645849227905273
    9. '  ' → logprob: -8.895849227905273
    10. ')' → logprob: -8.895849227905273

Token 8: ' choisir' (ID: 47004)
  Prédit: ' placer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' placer' → logprob: -1.012898564338684
    2. 'placer' → logprob: -1.262898564338684
    3. ' ' → logprob: -2.1378984451293945
    4. ' choisir' → logprob: -3.1378984451293945
    5. ' partition' → logprob: -3.8878984451293945
    6. ' faire' → logprob: -3.8878984451293945
    7. 'p' → logprob: -4.0128984451293945
    8. ' décou' → logprob: -4.2628984451293945
    9. ' réaliser' → logprob: -4.3878984451293945
    10. ' résoudre' → logprob: -4.7628984451293945

Token 9: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.017268415540456772
    2. '_' → logprob: -4.392268180847168
    3. 's' → logprob: -6.017268180847168
    4. '```' → logprob: -7.142268180847168
    5. ' ' → logprob: -7.642268180847168
    6. '  ' → logprob: -8.392268180847168
    7. ' d' → logprob: -8.892268180847168
    8. ' de' → logprob: -9.392268180847168
    9. ' ```' → logprob: -9.642268180847168
    10. 'u' → logprob: -9.892268180847168

Token 10: ' hauteur' (ID: 72987)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.031837768852710724
    2. 's' → logprob: -4.6568379402160645
    3. 'm' → logprob: -4.7818379402160645
    4. 'f' → logprob: -6.9068379402160645
    5. ' ' → logprob: -6.9068379402160645
    6. 'k' → logprob: -7.2818379402160645
    7. ' `' → logprob: -7.4068379402160645
    8. '_' → logprob: -7.4068379402160645
    9. ' m' → logprob: -7.4068379402160645
    10. ' man' → logprob: -7.4068379402160645

Token 11: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5687824487686157
    2. 's' → logprob: -1.5687824487686157
    3. ' d' → logprob: -2.693782329559326
    4. 'd' → logprob: -2.693782329559326
    5. '_' → logprob: -3.318782329559326
    6. ',' → logprob: -3.943782329559326
    7. '#' → logprob: -4.943782329559326
    8. ''' → logprob: -5.318782329559326
    9. ' de' → logprob: -5.818782329559326
    10. '=' → logprob: -6.068782329559326

Token 12: ''un' (ID: 9788)
  Prédit: ''une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.19796212017536163
    2. ''un' → logprob: -2.6979620456695557
    3. ''' → logprob: -2.8229620456695557
    4. 'e' → logprob: -3.9479620456695557
    5. 'u' → logprob: -3.9479620456695557
    6. ''u' → logprob: -5.072962284088135
    7. '’une' → logprob: -5.572962284088135
    8. 'une' → logprob: -6.947962284088135
    9. 'a' → logprob: -6.947962284088135
    10. '’un' → logprob: -7.697962284088135

Token 13: ' étage' (ID: 125215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1648869514465332
    2. '\n' → logprob: -3.164886951446533
    3. 's' → logprob: -4.164886951446533
    4. '\' → logprob: -4.789886951446533
    5. '```' → logprob: -4.914886951446533
    6. 'b' → logprob: -5.164886951446533
    7. ' \' → logprob: -5.164886951446533
    8. 'triangle' → logprob: -5.289886951446533
    9. 'bloc' → logprob: -5.289886951446533
    10. 'mur' → logprob: -5.414886951446533

Token 14: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0575906038284302
    2. ' ' → logprob: -1.4325906038284302
    3. ':' → logprob: -2.3075904846191406
    4. ''' → logprob: -2.5575904846191406
    5. '#' → logprob: -2.8075904846191406
    6. '_' → logprob: -2.9325904846191406
    7. ' :' → logprob: -3.4325904846191406
    8. 's' → logprob: -3.4325904846191406
    9. ' ,' → logprob: -4.557590484619141
    10. '```' → logprob: -4.932590484619141

Token 15: 'entre' (ID: 17935)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05294061452150345
    2. ' )' → logprob: -3.677940607070923
    3. ',' → logprob: -4.677940845489502
    4. ' en' → logprob: -5.302940845489502
    5. ' ' → logprob: -6.177940845489502
    6. ' d' → logprob: -6.302940845489502
    7. 'd' → logprob: -6.552940845489502
    8. ' pour' → logprob: -7.302940845489502
    9. ' entre' → logprob: -7.427940845489502
    10. 's' → logprob: -7.427940845489502

Token 16: ' A' (ID: 355)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2133716642856598
    2. ' ' → logprob: -2.213371753692627
    3. '2' → logprob: -2.588371753692627
    4. '0' → logprob: -4.963371753692627
    5. '3' → logprob: -8.713371276855469
    6. '```' → logprob: -8.838371276855469
    7. 'un' → logprob: -9.463371276855469
    8. '4' → logprob: -10.213371276855469
    9. '`' → logprob: -10.588371276855469
    10. '   ' → logprob: -10.838371276855469

Token 17: ' et' (ID: 859)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0678437948226929
    2. '_' → logprob: -1.1928437948226929
    3. '`' → logprob: -2.8178439140319824
    4. ''' → logprob: -2.9428439140319824
    5. '1' → logprob: -3.0678439140319824
    6. ',' → logprob: -3.0678439140319824
    7. ' ' → logprob: -3.4428439140319824
    8. 'u' → logprob: -3.6928439140319824
    9. 'e' → logprob: -4.192843914031982
    10. '0' → logprob: -4.567843914031982

Token 18: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.04722810164093971
    2. ' B' → logprob: -3.1722280979156494
    3. 'Z' → logprob: -5.9222283363342285
    4. 'H' → logprob: -7.1722283363342285
    5. 'C' → logprob: -8.67222785949707
    6. ' ' → logprob: -9.04722785949707
    7. 'A' → logprob: -9.29722785949707
    8. ' Z' → logprob: -9.42222785949707
    9. 'D' → logprob: -9.54722785949707
    10. 'N' → logprob: -10.29722785949707

Token 19: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006238049361854792
    2. ' )' → logprob: -5.256237983703613
    3. ',' → logprob: -8.381237983703613
    4. '),' → logprob: -8.631237983703613
    5. ').' → logprob: -8.881237983703613
    6. 's' → logprob: -9.756237983703613
    7. '):' → logprob: -9.881237983703613
    8. ' inclus' → logprob: -10.256237983703613
    9. ' et' → logprob: -10.381237983703613
    10. 'et' → logprob: -10.631237983703613

Token 20: '#' (ID: 2)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9458534121513367
    2. ',' → logprob: -1.5708534717559814
    3. ':' → logprob: -1.6958534717559814
    4. ' ' → logprob: -2.5708534717559814
    5. ' :' → logprob: -3.4458534717559814
    6. ''' → logprob: -3.4458534717559814
    7. 's' → logprob: -4.070853233337402
    8. '```' → logprob: -4.695853233337402
    9. '.' → logprob: -4.820853233337402
    10. 'e' → logprob: -4.820853233337402

Token 21: ' telle' (ID: 70904)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07666793465614319
    2. '_' → logprob: -4.451667785644531
    3. 'd' → logprob: -4.451667785644531
    4. ',' → logprob: -4.576667785644531
    5. 'e' → logprob: -4.826667785644531
    6. 'n' → logprob: -5.201667785644531
    7. 'i' → logprob: -5.576667785644531
    8. 'a' → logprob: -5.701667785644531
    9. ':' → logprob: -6.076667785644531
    10. 'f' → logprob: -6.201667785644531

Token 22: ' que' (ID: 661)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7142810821533203
    2. 's' → logprob: -1.0892810821533203
    3. ' ' → logprob: -1.8392810821533203
    4. '_s' → logprob: -4.58928108215332
    5. ' d' → logprob: -5.83928108215332
    6. ' de' → logprob: -8.21428108215332
    7. '#' → logprob: -8.71428108215332
    8. '  ' → logprob: -8.71428108215332
    9. ' _' → logprob: -8.71428108215332
    10. '_d' → logprob: -8.71428108215332

Token 23: ' le' (ID: 505)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ha' → logprob: -1.044364333152771
    2. ' la' → logprob: -1.169364333152771
    3. 'la' → logprob: -2.2943644523620605
    4. ' hauteur' → logprob: -2.5443644523620605
    5. ' A' → logprob: -2.6693644523620605
    6. 'A' → logprob: -3.2943644523620605
    7. 'h' → logprob: -4.7943644523620605
    8. ' h' → logprob: -4.9193644523620605
    9. 'height' → logprob: -5.2943644523620605
    10. 'le' → logprob: -5.5443644523620605

Token 24: ' nombre' (ID: 9733)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.0115920305252075
    2. ' hauteur' → logprob: -1.8865920305252075
    3. 'nombre' → logprob: -2.261591911315918
    4. 'ha' → logprob: -2.761591911315918
    5. ' h' → logprob: -2.886591911315918
    6. '#' → logprob: -2.886591911315918
    7. 'n' → logprob: -3.636591911315918
    8. 'height' → logprob: -3.636591911315918
    9. ' étage' → logprob: -4.136591911315918
    10. ' nombre' → logprob: -4.136591911315918

Token 25: ' total' (ID: 3609)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7441996932029724
    2. ' de' → logprob: -0.7441996932029724
    3. '_' → logprob: -4.369199752807617
    4. 'd' → logprob: -4.494199752807617
    5. '_de' → logprob: -4.994199752807617
    6. ' ' → logprob: -4.994199752807617
    7. 'de' → logprob: -5.494199752807617
    8. '_d' → logprob: -5.994199752807617
    9. '#' → logprob: -6.744199752807617
    10. '_total' → logprob: -6.869199752807617

Token 26: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.47757717967033386
    2. ' de' → logprob: -1.2275772094726562
    3. '_' → logprob: -2.9775772094726562
    4. ' ' → logprob: -4.852577209472656
    5. 'd' → logprob: -4.977577209472656
    6. ' des' → logprob: -5.227577209472656
    7. '_d' → logprob: -5.602577209472656
    8. 'de' → logprob: -5.727577209472656
    9. '_de' → logprob: -5.727577209472656
    10. '_total' → logprob: -6.727577209472656

Token 27: ''ét' (ID: 23771)
  Prédit: ''ét'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ét' → logprob: -0.012686104513704777
    2. '’ét' → logprob: -5.512686252593994
    3. ''' → logprob: -5.887686252593994
    4. ''é' → logprob: -6.512686252593994
    5. 'ét' → logprob: -6.762686252593994
    6. ''et' → logprob: -6.887686252593994
    7. ''#' → logprob: -7.262686252593994
    8. '#' → logprob: -8.137685775756836
    9. 'éta' → logprob: -8.387685775756836
    10. ''esp' → logprob: -8.762685775756836

Token 28: 'ages' (ID: 1461)
  Prédit: 'ages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ages' → logprob: -0.0034543105866760015
    2. 'age' → logprob: -5.878454208374023
    3. 'apes' → logprob: -8.878454208374023
    4. 'a' → logprob: -9.003454208374023
    5. 'ag' → logprob: -9.003454208374023
    6. 'agés' → logprob: -9.503454208374023
    7. '#' → logprob: -9.628454208374023
    8. '```' → logprob: -11.378454208374023
    9. 'agé' → logprob: -11.753454208374023
    10. 'ager' → logprob: -11.878454208374023

Token 29: ' (' (ID: 350)
  Prédit: ' soit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.18904589116573334
    2. 's' → logprob: -3.3140459060668945
    3. ' puisse' → logprob: -3.6890459060668945
    4. 'so' → logprob: -3.9390459060668945
    5. '*' → logprob: -4.3140459060668945
    6. ' s' → logprob: -4.4390459060668945
    7. ' soient' → logprob: -4.5640459060668945
    8. ' n' → logprob: -4.8140459060668945
    9. ' respecte' → logprob: -5.0640459060668945
    10. '#' → logprob: -5.1890459060668945

Token 30: 'H' (ID: 39)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15706796944141388
    2. 'so' → logprob: -2.5320680141448975
    3. ' soit' → logprob: -4.532067775726318
    4. 'entre' → logprob: -5.032067775726318
    5. 's' → logprob: -5.282067775726318
    6. '#' → logprob: -5.282067775726318
    7. 'n' → logprob: -5.407067775726318
    8. ' )' → logprob: -5.657067775726318
    9. '*' → logprob: -5.907067775726318
    10. ' entre' → logprob: -6.032067775726318

Token 31: ' div' (ID: 4223)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08321988582611084
    2. '-' → logprob: -4.0832200050354
    3. ' -' → logprob: -4.2082200050354
    4. '//' → logprob: -4.9582200050354
    5. ' )' → logprob: -5.0832200050354
    6. ' //' → logprob: -5.3332200050354
    7. ',' → logprob: -5.5832200050354
    8. '*' → logprob: -5.9582200050354
    9. '#' → logprob: -5.9582200050354
    10. 's' → logprob: -6.2082200050354

Token 32: 'isé' (ID: 30065)
  Prédit: 'isé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isé' → logprob: -0.2288690060377121
    2. 'ise' → logprob: -1.8538689613342285
    3. 'iseur' → logprob: -4.3538689613342285
    4. 'iser' → logprob: -4.4788689613342285
    5. 'isible' → logprob: -4.9788689613342285
    6. ')' → logprob: -5.1038689613342285
    7. 'ision' → logprob: -6.1038689613342285
    8. 'isée' → logprob: -6.2288689613342285
    9. 'is' → logprob: -6.2288689613342285
    10. 'isés' → logprob: -6.4788689613342285

Token 33: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.2283555120229721
    2. 'par' → logprob: -1.6033555269241333
    3. ' ' → logprob: -6.603355407714844
    4. ')' → logprob: -7.853355407714844
    5. '_par' → logprob: -8.103355407714844
    6. ' by' → logprob: -8.478355407714844
    7. 'au' → logprob: -9.478355407714844
    8. ' )' → logprob: -9.478355407714844
    9. 'e' → logprob: -9.603355407714844
    10. '```' → logprob: -9.728355407714844

Token 34: ' la' (ID: 557)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.4763582944869995
    2. ' la' → logprob: -2.226358413696289
    3. ' h' → logprob: -2.351358413696289
    4. 'ha' → logprob: -3.351358413696289
    5. 'la' → logprob: -3.476358413696289
    6. ' hauteur' → logprob: -3.601358413696289
    7. 'A' → logprob: -3.726358413696289
    8. 'a' → logprob: -4.101358413696289
    9. 'l' → logprob: -4.226358413696289
    10. 'i' → logprob: -5.101358413696289

Token 35: ' hauteur' (ID: 72987)
  Prédit: ' hauteur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hauteur' → logprob: -0.5948683619499207
    2. 'ha' → logprob: -0.8448683619499207
    3. 'h' → logprob: -5.344868183135986
    4. ' h' → logprob: -5.594868183135986
    5. ' taille' → logprob: -6.094868183135986
    6. 'height' → logprob: -6.344868183135986
    7. ' height' → logprob: -6.594868183135986
    8. ' ha' → logprob: -7.094868183135986
    9. 'Ha' → logprob: -7.219868183135986
    10. 'tail' → logprob: -7.219868183135986

Token 36: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03844857215881348
    2. ' )' → logprob: -3.9134485721588135
    3. ' chois' → logprob: -5.288448333740234
    4. ' de' → logprob: -5.538448333740234
    5. 'de' → logprob: -6.163448333740234
    6. ' d' → logprob: -6.163448333740234
    7. 'd' → logprob: -7.413448333740234
    8. ')#' → logprob: -7.788448333740234
    9. 'cho' → logprob: -8.163448333740234
    10. ' choisi' → logprob: -8.163448333740234

Token 37: ''un' (ID: 9788)
  Prédit: ''un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.07470536977052689
    2. 'un' → logprob: -3.8247053623199463
    3. ''une' → logprob: -3.9497053623199463
    4. ''' → logprob: -4.074705600738525
    5. ''ét' → logprob: -5.699705600738525
    6. '')' → logprob: -6.199705600738525
    7. 'e' → logprob: -6.199705600738525
    8. ' étage' → logprob: -6.324705600738525
    9. '’un' → logprob: -6.699705600738525
    10. 'u' → logprob: -6.699705600738525

Token 38: ' étage' (ID: 125215)
  Prédit: ' étage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' étage' → logprob: -0.16407477855682373
    2. 'ét' → logprob: -1.9140747785568237
    3. ' ' → logprob: -6.414074897766113
    4. 'é' → logprob: -7.414074897766113
    5. ')' → logprob: -7.539074897766113
    6. '#' → logprob: -8.039074897766113
    7. ' ' → logprob: -8.789074897766113
    8. ''ét' → logprob: -9.414074897766113
    9. 'élé' → logprob: -9.664074897766113
    10. '```' → logprob: -10.039074897766113

Token 39: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001995846861973405
    2. ' )' → logprob: -6.751996040344238
    3. '#' → logprob: -7.376996040344238
    4. ')#' → logprob: -9.876996040344238
    5. '')' → logprob: -10.001996040344238
    6. '`)' → logprob: -11.001996040344238
    7. '),' → logprob: -11.376996040344238
    8. '))' → logprob: -11.501996040344238
    9. 'so' → logprob: -11.501996040344238
    10. 'pour' → logprob: -12.001996040344238

Token 40: ' soit' (ID: 17293)
  Prédit: ' soit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.6306427121162415
    2. 'so' → logprob: -1.3806426525115967
    3. ' puisse' → logprob: -2.3806426525115967
    4. ')' → logprob: -3.1306426525115967
    5. '#' → logprob: -3.2556426525115967
    6. 's' → logprob: -5.005642890930176
    7. ' so' → logprob: -5.130642890930176
    8. 'div' → logprob: -5.505642890930176
    9. ' ' → logprob: -6.130642890930176
    10. '%' → logprob: -6.130642890930176

Token 41: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.41764476895332336
    2. ' exactement' → logprob: -2.792644739151001
    3. '>' → logprob: -3.167644739151001
    4. 'exact' → logprob: -3.542644739151001
    5. ' divisible' → logprob: -3.542644739151001
    6. 'égal' → logprob: -3.667644739151001
    7. 'un' → logprob: -3.792644739151001
    8. '```' → logprob: -3.792644739151001
    9. 'div' → logprob: -4.16764497756958
    10. ' exact' → logprob: -4.16764497756958

Token 42: ' entier' (ID: 80473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006124671082943678
    2. 'e' → logprob: -5.881124496459961
    3. '_' → logprob: -7.256124496459961
    4. ' ```' → logprob: -7.506124496459961
    5. ' espace' → logprob: -8.381124496459961
    6. '  ' → logprob: -8.756124496459961
    7. '=' → logprob: -8.881124496459961
    8. 's' → logprob: -8.881124496459961
    9. '```' → logprob: -8.881124496459961
    10. 'n' → logprob: -9.381124496459961

Token 43: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1006444692611694
    2. 'd' → logprob: -1.6006444692611694
    3. 'def' → logprob: -1.9756444692611694
    4. '#' → logprob: -2.850644588470459
    5. 'f' → logprob: -3.225644588470459
    6. '_' → logprob: -3.350644588470459
    7. 'for' → logprob: -3.350644588470459
    8. ',' → logprob: -3.475644588470459
    9. 'h' → logprob: -3.600644588470459
    10. 'i' → logprob: -3.975644588470459

Token 44: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5383023619651794
    2. 'd' → logprob: -2.163302421569824
    3. 'for' → logprob: -2.288302421569824
    4. 'f' → logprob: -3.413302421569824
    5. 'def' → logprob: -3.413302421569824
    6. '_' → logprob: -3.538302421569824
    7. ',' → logprob: -4.288302421569824
    8. '```' → logprob: -4.288302421569824
    9. 'i' → logprob: -4.538302421569824
    10. ' ' → logprob: -4.788302421569824

Token 45: ' En' (ID: 2130)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8375741243362427
    2. 'd' → logprob: -1.3375741243362427
    3. 'def' → logprob: -2.212574005126953
    4. 'f' → logprob: -2.837574005126953
    5. ':' → logprob: -3.587574005126953
    6. ' for' → logprob: -3.712574005126953
    7. ' ' → logprob: -4.462574005126953
    8. 'n' → logprob: -4.712574005126953
    9. '```' → logprob: -4.837574005126953
    10. 'A' → logprob: -4.837574005126953

Token 46: ' effet' (ID: 24342)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.376313328742981
    2. 'def' → logprob: -1.626313328742981
    3. 'suite' → logprob: -2.0013132095336914
    4. 'range' → logprob: -2.5013132095336914
    5. ' range' → logprob: -2.7513132095336914
    6. ' for' → logprob: -3.7513132095336914
    7. ' def' → logprob: -3.8763132095336914
    8. '#' → logprob: -3.8763132095336914
    9. ' somme' → logprob: -4.126313209533691
    10. 's' → logprob: -4.126313209533691

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09775444120168686
    2. ' ,' → logprob: -3.09775447845459
    3. 'for' → logprob: -4.22275447845459
    4. ' for' → logprob: -4.97275447845459
    5. 'def' → logprob: -5.22275447845459
    6. ' on' → logprob: -5.47275447845459
    7. ' ' → logprob: -5.84775447845459
    8. '#' → logprob: -6.47275447845459
    9. ':' → logprob: -6.47275447845459
    10. 'H' → logprob: -6.84775447845459

Token 48: ' l' (ID: 305)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.2851979732513428
    2. ' H' → logprob: -2.9101979732513428
    3. ' si' → logprob: -3.1601979732513428
    4. ' il' → logprob: -3.2851979732513428
    5. 'on' → logprob: -3.5351979732513428
    6. ' la' → logprob: -3.6601979732513428
    7. ' le' → logprob: -4.160198211669922
    8. 'le' → logprob: -4.535198211669922
    9. '#' → logprob: -5.410198211669922
    10. 'il' → logprob: -5.785198211669922

Token 49: ''im' (ID: 44488)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5575692057609558
    2. 'e' → logprob: -1.4325692653656006
    3. '#' → logprob: -2.6825692653656006
    4. ''' → logprob: -3.1825692653656006
    5. ' a' → logprob: -4.1825690269470215
    6. ''espace' → logprob: -4.6825690269470215
    7. ' hauteur' → logprob: -4.9325690269470215
    8. ' n' → logprob: -5.3075690269470215
    9. 'n' → logprob: -5.6825690269470215
    10. ' nombre' → logprob: -5.9325690269470215

Token 50: 'me' (ID: 1047)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'port' → logprob: -0.29606330394744873
    2. 'p' → logprob: -1.4210633039474487
    3. 'plement' → logprob: -5.421063423156738
    4. 'porte' → logprob: -5.796063423156738
    5. 'plan' → logprob: -6.296063423156738
    6. 'pl' → logprob: -6.421063423156738
    7. 'plant' → logprob: -6.671063423156738
    8. 'poss' → logprob: -6.796063423156738
    9. 'possible' → logprob: -8.296063423156738
    10. 'posé' → logprob: -8.671063423156738

Token 51: 'uble' (ID: 41480)
  Prédit: 'uble'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uble' → logprob: -0.0003501242317724973
    2. 'ubles' → logprob: -8.125349998474121
    3. 'ub' → logprob: -10.750349998474121
    4. 'u' → logprob: -11.375349998474121
    5. '#' → logprob: -12.125349998474121
    6. 'mble' → logprob: -12.750349998474121
    7. 'ueble' → logprob: -13.000349998474121
    8. 'ble' → logprob: -13.500349998474121
    9. 'ur' → logprob: -13.500349998474121
    10. 'n' → logprob: -14.125349998474121

Token 52: ' fait' (ID: 7473)
  Prédit: ' doit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' doit' → logprob: -0.6360903978347778
    2. ' est' → logprob: -1.5110903978347778
    3. ' peut' → logprob: -3.0110902786254883
    4. ' ' → logprob: -3.1360902786254883
    5. ' soit' → logprob: -3.3860902786254883
    6. '#' → logprob: -4.136090278625488
    7. 's' → logprob: -4.386090278625488
    8. ' n' → logprob: -4.511090278625488
    9. ' #' → logprob: -4.636090278625488
    10. ' sera' → logprob: -4.761090278625488

Token 53: ' une' (ID: 2463)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.8032058477401733
    2. ' H' → logprob: -1.4282058477401733
    3. ' hauteur' → logprob: -2.678205966949463
    4. 'une' → logprob: -3.303205966949463
    5. ' exactement' → logprob: -3.428205966949463
    6. '```' → logprob: -3.428205966949463
    7. ' une' → logprob: -3.428205966949463
    8. ' partie' → logprob: -4.678205966949463
    9. ' ' → logprob: -4.803205966949463
    10. ' que' → logprob: -4.803205966949463

Token 54: ' hauteur' (ID: 72987)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.11505856364965439
    2. ' hauteur' → logprob: -2.240058660507202
    3. 'Ha' → logprob: -7.365058422088623
    4. 'tail' → logprob: -8.115058898925781
    5. 'height' → logprob: -8.240058898925781
    6. 'h' → logprob: -8.615058898925781
    7. ' Ha' → logprob: -9.115058898925781
    8. 'div' → logprob: -9.240058898925781
    9. ' ha' → logprob: -9.490058898925781
    10. '```' → logprob: -9.802558898925781

Token 55: ' H' (ID: 487)
  Prédit: ' totale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' totale' → logprob: -0.06517132371664047
    2. 'H' → logprob: -4.065171241760254
    3. 'tot' → logprob: -4.440171241760254
    4. 'total' → logprob: -4.815171241760254
    5. ' H' → logprob: -5.065171241760254
    6. ' total' → logprob: -5.315171241760254
    7. ' de' → logprob: -5.565171241760254
    8. ' ' → logprob: -5.690171241760254
    9. ' tot' → logprob: -6.065171241760254
    10. ' divisible' → logprob: -6.315171241760254

Token 56: ',' (ID: 11)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.2967679500579834
    2. 'def' → logprob: -1.6717679500579834
    3. 'f' → logprob: -1.7967679500579834
    4. 'for' → logprob: -2.2967679500579834
    5. ':' → logprob: -2.9217679500579834
    6. '#' → logprob: -3.2967679500579834
    7. 'h' → logprob: -3.5467679500579834
    8. '_' → logprob: -3.5467679500579834
    9. 'n' → logprob: -3.9217679500579834
    10. ' ' → logprob: -4.0467681884765625

Token 57: ' chaque' (ID: 21194)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.902809739112854
    2. ' et' → logprob: -1.027809739112854
    3. 'et' → logprob: -2.2778096199035645
    4. ' h' → logprob: -3.6528096199035645
    5. ' la' → logprob: -3.9028096199035645
    6. ' #' → logprob: -4.0278096199035645
    7. ' and' → logprob: -4.4028096199035645
    8. ' on' → logprob: -5.0278096199035645
    9. ' ' → logprob: -5.2778096199035645
    10. ' il' → logprob: -5.2778096199035645

Token 58: ' étage' (ID: 125215)
  Prédit: ' étage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' étage' → logprob: -0.8061639666557312
    2. ' hauteur' → logprob: -1.306164026260376
    3. 'ha' → logprob: -1.931164026260376
    4. 'ét' → logprob: -2.431164026260376
    5. ' ' → logprob: -4.056163787841797
    6. ' étape' → logprob: -4.806163787841797
    7. '#' → logprob: -5.993663787841797
    8. 'é' → logprob: -5.993663787841797
    9. 'élé' → logprob: -6.806163787841797
    10. ' ' → logprob: -6.868663787841797

Token 59: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.20237590372562408
    2. ' doit' → logprob: -2.577375888824463
    3. 'a' → logprob: -2.827375888824463
    4. ' fait' → logprob: -3.952375888824463
    5. 'fait' → logprob: -5.077375888824463
    6. ' ayant' → logprob: -5.827375888824463
    7. ' peut' → logprob: -5.952375888824463
    8. ' ' → logprob: -6.202375888824463
    9. 'do' → logprob: -6.577375888824463
    10. ' possède' → logprob: -6.577375888824463

Token 60: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.20329368114471436
    2. 'une' → logprob: -1.7032936811447144
    3. ' ' → logprob: -8.078293800354004
    4. ''une' → logprob: -8.578293800354004
    5. 'au' → logprob: -8.703293800354004
    6. 'un' → logprob: -8.828293800354004
    7. 'sa' → logprob: -9.328293800354004
    8. ' ' → logprob: -9.328293800354004
    9. ' hauteur' → logprob: -9.328293800354004
    10. '```' → logprob: -9.328293800354004

Token 61: ' hauteur' (ID: 72987)
  Prédit: ' hauteur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hauteur' → logprob: -0.5247546434402466
    2. 'ha' → logprob: -0.8997546434402466
    3. ' ' → logprob: -7.024754524230957
    4. ' ha' → logprob: -8.899754524230957
    5. 'Ha' → logprob: -9.149754524230957
    6. '   ' → logprob: -9.149754524230957
    7. 'h' → logprob: -9.399754524230957
    8. ' valeur' → logprob: -10.274754524230957
    9. ' Ha' → logprob: -10.399754524230957
    10. 'height' → logprob: -10.649754524230957

Token 62: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.6203649044036865
    2. ' h' → logprob: -1.7453649044036865
    3. 'com' → logprob: -2.1203649044036865
    4. 'entre' → logprob: -2.3703649044036865
    5. ' entre' → logprob: -3.8703649044036865
    6. 'strict' → logprob: -4.495365142822266
    7. ' ' → logprob: -5.370365142822266
    8. 'd' → logprob: -5.370365142822266
    9. ' comprise' → logprob: -5.495365142822266
    10. 'cho' → logprob: -5.495365142822266

Token 63: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33864131569862366
    2. ',' → logprob: -1.4636412858963013
    3. ' ,' → logprob: -4.088641166687012
    4. '_' → logprob: -4.463641166687012
    5. 's' → logprob: -5.213641166687012
    6. ')' → logprob: -5.463641166687012
    7. ':' → logprob: -5.588641166687012
    8. '=' → logprob: -6.463641166687012
    9. ' :' → logprob: -6.588641166687012
    10. '#' → logprob: -7.088641166687012

Token 64: 'A' (ID: 32)
  Prédit: 'entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'entre' → logprob: -0.49876803159713745
    2. ')' → logprob: -1.8737680912017822
    3. 'com' → logprob: -1.9987680912017822
    4. '),' → logprob: -2.9987680912017822
    5. ' entre' → logprob: -4.498767852783203
    6. 'avec' → logprob: -4.623767852783203
    7. '   ' → logprob: -5.373767852783203
    8. ' ' → logprob: -5.998767852783203
    9. 'qui' → logprob: -6.123767852783203
    10. 'ent' → logprob: -6.373767852783203

Token 65: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.9128984212875366
    2. ' <=' → logprob: -1.5378984212875366
    3. ' ≤' → logprob: -1.7878984212875366
    4. '≤' → logprob: -2.287898540496826
    5. ' et' → logprob: -3.412898540496826
    6. ',' → logprob: -4.287898540496826
    7. ' à' → logprob: -4.287898540496826
    8. ' ' → logprob: -4.412898540496826
    9. ')' → logprob: -4.537898540496826
    10. 'et' → logprob: -5.037898540496826

Token 66: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.25207605957984924
    2. 'h' → logprob: -1.5020760297775269
    3. ' ' → logprob: -8.877076148986816
    4. ' ' → logprob: -13.752076148986816
    5. ' A' → logprob: -13.877076148986816
    6. '=' → logprob: -14.252076148986816
    7. 'ha' → logprob: -14.502076148986816
    8. 'A' → logprob: -14.502076148986816
    9. '	h' → logprob: -14.627076148986816
    10. '=h' → logprob: -14.752076148986816

Token 67: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6931915283203125
    2. '<=' → logprob: -0.6931915283203125
    3. ' and' → logprob: -11.318191528320312
    4. ')' → logprob: -11.693191528320312
    5. ' ' → logprob: -11.943191528320312
    6. '),' → logprob: -12.318191528320312
    7. 'and' → logprob: -12.818191528320312
    8. 'et' → logprob: -13.318191528320312
    9. 'le' → logprob: -13.818191528320312
    10. ' et' → logprob: -13.818191528320312

Token 68: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.34849658608436584
    2. 'B' → logprob: -1.2234965562820435
    3. ' ' → logprob: -9.973496437072754
    4. ' ' → logprob: -12.848496437072754
    5. '	B' → logprob: -13.973496437072754
    6. ')' → logprob: -14.098496437072754
    7. '>B' → logprob: -15.098496437072754
    8. '   ' → logprob: -15.598496437072754
    9. ',' → logprob: -15.848496437072754
    10. '  ' → logprob: -16.47349739074707

Token 69: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2125079184770584
    2. '),' → logprob: -1.712507963180542
    3. ').' → logprob: -5.962507724761963
    4. ' et' → logprob: -6.337507724761963
    5. ' )' → logprob: -6.337507724761963
    6. ',' → logprob: -6.337507724761963
    7. '#' → logprob: -7.087507724761963
    8. 'et' → logprob: -7.337507724761963
    9. '):' → logprob: -7.462507724761963
    10. ' ),' → logprob: -7.837507724761963

Token 70: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5100113153457642
    2. 'et' → logprob: -1.3850113153457642
    3. ' et' → logprob: -2.2600111961364746
    4. ' #' → logprob: -4.260011196136475
    5. ' and' → logprob: -4.510011196136475
    6. ',' → logprob: -5.010011196136475
    7. '```' → logprob: -6.135011196136475
    8. ' ' → logprob: -6.260011196136475
    9. 'and' → logprob: -6.885011196136475
    10. 't' → logprob: -7.135011196136475

Token 71: ' et' (ID: 859)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4374313950538635
    2. ' et' → logprob: -2.0624313354492188
    3. 'et' → logprob: -2.3124313354492188
    4. ' and' → logprob: -2.6874313354492188
    5. ' #' → logprob: -4.062431335449219
    6. 'and' → logprob: -4.437431335449219
    7. ' ' → logprob: -4.937431335449219
    8. 'def' → logprob: -5.812431335449219
    9. ',' → logprob: -6.187431335449219
    10. 'le' → logprob: -6.437431335449219

Token 72: ' H' (ID: 487)
  Prédit: ' H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.5608593821525574
    2. ' le' → logprob: -1.6858594417572021
    3. ' on' → logprob: -2.435859441757202
    4. 'le' → logprob: -2.560859441757202
    5. 'H' → logprob: -3.185859441757202
    6. ' h' → logprob: -4.310859203338623
    7. 'h' → logprob: -5.185859203338623
    8. ' il' → logprob: -5.435859203338623
    9. 'on' → logprob: -6.060859203338623
    10. ' ' → logprob: -6.560859203338623

Token 73: ' doit' (ID: 21822)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.049757786095142365
    2. '%' → logprob: -3.049757719039917
    3. ' ' → logprob: -7.549757957458496
    4. ' divisible' → logprob: -8.174757957458496
    5. ' mod' → logprob: -8.549757957458496
    6. ' doit' → logprob: -9.799757957458496
    7. ' ' → logprob: -10.299757957458496
    8. 'div' → logprob: -11.299757957458496
    9. ' modulo' → logprob: -11.299757957458496
    10. 'mod' → logprob: -11.549757957458496

Token 74: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.7895620465278625
    2. 'être' → logprob: -1.1645619869232178
    3. '%' → logprob: -1.7895619869232178
    4. ' divisible' → logprob: -4.414562225341797
    5. 'div' → logprob: -4.539562225341797
    6. ' %' → logprob: -4.539562225341797
    7. ' ' → logprob: -4.539562225341797
    8. ' etre' → logprob: -5.039562225341797
    9. ''être' → logprob: -5.664562225341797
    10. 's' → logprob: -6.039562225341797

Token 75: ' divisible' (ID: 167813)
  Prédit: ' divisible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divisible' → logprob: -0.04490763321518898
    2. 'div' → logprob: -3.169907569885254
    3. ' un' → logprob: -6.919907569885254
    4. 'un' → logprob: -8.794907569885254
    5. ' parfaitement' → logprob: -8.794907569885254
    6. ' divis' → logprob: -9.044907569885254
    7. ' div' → logprob: -9.169907569885254
    8. ' multiple' → logprob: -9.919907569885254
    9. 'égal' → logprob: -10.169907569885254
    10. 'multiple' → logprob: -10.169907569885254

Token 76: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.021080834791064262
    2. 'par' → logprob: -3.896080732345581
    3. ' by' → logprob: -8.27108097076416
    4. ' ' → logprob: -9.02108097076416
    5. '	par' → logprob: -9.64608097076416
    6. '<|end|>' → logprob: -10.52108097076416
    7. '_par' → logprob: -10.64608097076416
    8. 'by' → logprob: -11.77108097076416
    9. ')' → logprob: -12.14608097076416
    10. ' h' → logprob: -12.27108097076416

Token 77: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.2028917372226715
    2. 'h' → logprob: -1.7028917074203491
    3. ' ' → logprob: -6.577891826629639
    4. ' ' → logprob: -9.45289134979248
    5. '  ' → logprob: -13.07789134979248
    6. ' la' → logprob: -14.07789134979248
    7. 'space' → logprob: -14.20289134979248
    8. '```' → logprob: -14.32789134979248
    9. '<h' → logprob: -14.57789134979248
    10. '	h' → logprob: -14.82789134979248

Token 78: ' pour' (ID: 1930)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9115174412727356
    2. 'f' → logprob: -1.4115173816680908
    3. ':' → logprob: -1.7865173816680908
    4. '#' → logprob: -2.786517381668091
    5. 'def' → logprob: -3.161517381668091
    6. 'n' → logprob: -3.536517381668091
    7. 'for' → logprob: -4.78651762008667
    8. 'h' → logprob: -5.03651762008667
    9. 'c' → logprob: -5.41151762008667
    10. ',' → logprob: -5.53651762008667

Token 79: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.7694854140281677
    2. ' ce' → logprob: -1.1444854736328125
    3. ' avoir' → logprob: -3.1444854736328125
    4. 'que' → logprob: -3.2694854736328125
    5. 'avoir' → logprob: -3.2694854736328125
    6. 'ce' → logprob: -3.3944854736328125
    7. ' pouvoir' → logprob: -4.2694854736328125
    8. ' garantir' → logprob: -4.3944854736328125
    9. ' obtenir' → logprob: -4.5194854736328125
    10. '#' → logprob: -4.8944854736328125

Token 80: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.10871820151805878
    2. ' ' → logprob: -3.608718156814575
    3. ' le' → logprob: -3.608718156814575
    4. 'l' → logprob: -4.358718395233154
    5. ' chaque' → logprob: -4.358718395233154
    6. 'le' → logprob: -5.358718395233154
    7. ' que' → logprob: -5.483718395233154
    8. ' la' → logprob: -5.733718395233154
    9. ' ' → logprob: -6.483718395233154
    10. ' un' → logprob: -6.733718395233154

Token 81: ' hauteur' (ID: 72987)
  Prédit: ' division'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' division' → logprob: -0.8029950261116028
    2. ' bâtiment' → logprob: -2.302994966506958
    3. ' hauteur' → logprob: -2.427994966506958
    4. 'division' → logprob: -2.552994966506958
    5. 'nombre' → logprob: -2.677994966506958
    6. 'imme' → logprob: -3.177994966506958
    7. ' étage' → logprob: -3.302994966506958
    8. ' nombre' → logprob: -3.427994966506958
    9. ' construction' → logprob: -3.802994966506958
    10. 'div' → logprob: -3.927994966506958

Token 82: ' totale' (ID: 52898)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9497639536857605
    2. ' d' → logprob: -1.0747640132904053
    3. ' soit' → logprob: -1.4497640132904053
    4. 'de' → logprob: -4.449763774871826
    5. 'd' → logprob: -4.949763774871826
    6. ' totale' → logprob: -5.199763774871826
    7. ' puisse' → logprob: -5.574763774871826
    8. ' du' → logprob: -6.324763774871826
    9. ' f' → logprob: -6.949763774871826
    10. ' fasse' → logprob: -7.074763774871826

Token 83: ' soit' (ID: 17293)
  Prédit: ' soit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.0946015790104866
    2. ' de' → logprob: -3.344601631164551
    3. 'so' → logprob: -3.469601631164551
    4. ' fasse' → logprob: -5.094601631164551
    5. ' d' → logprob: -5.344601631164551
    6. 'de' → logprob: -5.844601631164551
    7. ' puisse' → logprob: -5.969601631164551
    8. 'd' → logprob: -6.594601631164551
    9. ' du' → logprob: -6.719601631164551
    10. ' corresponde' → logprob: -6.969601631164551

Token 84: ' exactement' (ID: 108701)
  Prédit: 'exact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exact' → logprob: -1.4858351945877075
    2. ' exactement' → logprob: -1.6108351945877075
    3. ' un' → logprob: -1.8608351945877075
    4. ' exacte' → logprob: -2.735835075378418
    5. 'un' → logprob: -2.985835075378418
    6. ' divisible' → logprob: -3.235835075378418
    7. ' une' → logprob: -3.610835075378418
    8. ' bien' → logprob: -3.735835075378418
    9. ' entière' → logprob: -3.860835075378418
    10. 'égal' → logprob: -3.860835075378418

Token 85: ' H' (ID: 487)
  Prédit: ' divisible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divisible' → logprob: -1.0697314739227295
    2. 'H' → logprob: -1.5697314739227295
    3. ' ég' → logprob: -1.6947314739227295
    4. ' H' → logprob: -2.1947314739227295
    5. 'ég' → logprob: -3.0697314739227295
    6. 'div' → logprob: -3.1947314739227295
    7. ' divis' → logprob: -4.694731712341309
    8. 'égal' → logprob: -5.069731712341309
    9. ' celle' → logprob: -5.444731712341309
    10. ' atte' → logprob: -5.569731712341309

Token 86: '.
' (ID: 558)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.0235464572906494
    2. ':' → logprob: -1.3985464572906494
    3. 'd' → logprob: -1.7735464572906494
    4. 'for' → logprob: -2.3985464572906494
    5. 'def' → logprob: -3.0235464572906494
    6. 'n' → logprob: -4.14854621887207
    7. '#' → logprob: -4.27354621887207
    8. 'h' → logprob: -5.02354621887207
    9. 'A' → logprob: -5.39854621887207
    10. ',' → logprob: -5.64854621887207

Token 87: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9485990405082703
    2. 'd' → logprob: -1.823599100112915
    3. 'def' → logprob: -1.823599100112915
    4. ' for' → logprob: -2.448599100112915
    5. 'f' → logprob: -2.698599100112915
    6. ':' → logprob: -2.948599100112915
    7. 'A' → logprob: -4.323598861694336
    8. 'n' → logprob: -4.448598861694336
    9. ' ' → logprob: -4.448598861694336
    10. 'h' → logprob: -5.073598861694336

Token 88: ' On' (ID: 2160)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7481102347373962
    2. 'f' → logprob: -1.248110294342041
    3. 'def' → logprob: -2.373110294342041
    4. 'for' → logprob: -2.873110294342041
    5. 'n' → logprob: -3.998110294342041
    6. '#' → logprob: -4.123110294342041
    7. 'c' → logprob: -4.873110294342041
    8. 'h' → logprob: -5.123110294342041
    9. 's' → logprob: -5.373110294342041
    10. 'count' → logprob: -5.498110294342041

Token 89: ' compte' (ID: 19657)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6902067065238953
    2. ' for' → logprob: -1.44020676612854
    3. ' =' → logprob: -1.94020676612854
    4. 'def' → logprob: -2.81520676612854
    5. '=' → logprob: -3.31520676612854
    6. '_' → logprob: -5.315206527709961
    7. ' def' → logprob: -5.440206527709961
    8. 'f' → logprob: -6.190206527709961
    9. 'range' → logprob: -6.565206527709961
    10. ' range' → logprob: -6.815206527709961

Token 90: ' donc' (ID: 14206)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.134487271308899
    2. 'le' → logprob: -1.634487271308899
    3. ' ' → logprob: -2.1344871520996094
    4. ' =' → logprob: -2.2594871520996094
    5. '=' → logprob: -2.7594871520996094
    6. 's' → logprob: -3.5094871520996094
    7. '_' → logprob: -3.5094871520996094
    8. 'n' → logprob: -3.7594871520996094
    9. 'l' → logprob: -4.384487152099609
    10. 'i' → logprob: -4.759487152099609

Token 91: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.02376307174563408
    2. 'le' → logprob: -4.023763179779053
    3. ' la' → logprob: -6.273763179779053
    4. ' les' → logprob: -6.648763179779053
    5. ' ' → logprob: -6.898763179779053
    6. ' len' → logprob: -7.898763179779053
    7. ' =' → logprob: -8.523762702941895
    8. '_le' → logprob: -8.523762702941895
    9. '=' → logprob: -8.773762702941895
    10. 'sum' → logprob: -9.148762702941895

Token 92: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.028085142374038696
    2. 'nombre' → logprob: -3.653085231781006
    3. ' nombres' → logprob: -7.278085231781006
    4. ' ' → logprob: -7.403085231781006
    5. 's' → logprob: -8.403084754943848
    6. ' nb' → logprob: -9.528084754943848
    7. 'n' → logprob: -9.778084754943848
    8. ' number' → logprob: -10.528084754943848
    9. ' n' → logprob: -10.778084754943848
    10. ' nbr' → logprob: -10.903084754943848

Token 93: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.19494383037090302
    2. '_' → logprob: -2.819943904876709
    3. ' ' → logprob: -3.069943904876709
    4. ' d' → logprob: -3.569943904876709
    5. '_de' → logprob: -3.569943904876709
    6. ' des' → logprob: -4.944943904876709
    7. 'de' → logprob: -5.944943904876709
    8. '_d' → logprob: -6.069943904876709
    9. '_des' → logprob: -6.694943904876709
    10. 'd' → logprob: -8.06994342803955

Token 94: ' div' (ID: 4223)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5132513642311096
    2. 'ha' → logprob: -1.5132513046264648
    3. 'ent' → logprob: -2.513251304626465
    4. 'val' → logprob: -2.888251304626465
    5. 'div' → logprob: -3.888251304626465
    6. ' valeurs' → logprob: -5.388251304626465
    7. '```' → logprob: -6.013251304626465
    8. 'man' → logprob: -6.138251304626465
    9. ' façons' → logprob: -6.263251304626465
    10. 'int' → logprob: -6.388251304626465

Token 95: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.018049495294690132
    2. 'i' → logprob: -4.768049716949463
    3. 'iseur' → logprob: -6.018049716949463
    4. '```' → logprob: -6.143049716949463
    5. '   ' → logprob: -6.518049716949463
    6. 'is' → logprob: -6.893049716949463
    7. '_' → logprob: -7.393049716949463
    8. 'isible' → logprob: -8.768049240112305
    9. '    ' → logprob: -8.893049240112305
    10. '`' → logprob: -9.018049240112305

Token 96: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -9.043078898685053e-05
    2. 'u' → logprob: -9.500090599060059
    3. '   ' → logprob: -13.000090599060059
    4. 'ur' → logprob: -13.125090599060059
    5. '```' → logprob: -13.375090599060059
    6. 'n' → logprob: -13.500090599060059
    7. 'rs' → logprob: -13.750090599060059
    8. 'urses' → logprob: -13.875090599060059
    9. 'urse' → logprob: -14.000090599060059
    10. '	' → logprob: -14.500090599060059

Token 97: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.908110499382019
    2. ':' → logprob: -1.033110499382019
    3. 'd' → logprob: -2.7831106185913086
    4. '=' → logprob: -3.4081106185913086
    5. 'A' → logprob: -3.4081106185913086
    6. ' :' → logprob: -4.283110618591309
    7. ',' → logprob: -4.408110618591309
    8. ' =' → logprob: -4.658110618591309
    9. 'H' → logprob: -4.783110618591309
    10. 'de' → logprob: -4.908110618591309

Token 98: ' H' (ID: 487)
  Prédit: ' H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.5763930082321167
    2. 'H' → logprob: -0.8263930082321167
    3. ' ' → logprob: -8.326393127441406
    4. ' ' → logprob: -9.076393127441406
    5. '`' → logprob: -10.451393127441406
    6. ''H' → logprob: -11.826393127441406
    7. 'l' → logprob: -11.951393127441406
    8. '"' → logprob: -11.951393127441406
    9. ' la' → logprob: -12.076393127441406
    10. ''' → logprob: -12.326393127441406

Token 99: ' dans' (ID: 2671)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19229044020175934
    2. 'd' → logprob: -2.8172905445098877
    3. ' ' → logprob: -3.6922905445098877
    4. ':' → logprob: -3.8172905445098877
    5. 'n' → logprob: -4.317290306091309
    6. '#' → logprob: -4.442290306091309
    7. '```' → logprob: -5.067290306091309
    8. 'for' → logprob: -5.192290306091309
    9. 'import' → logprob: -5.442290306091309
    10. '=' → logprob: -6.067290306091309

Token 100: ' l' (ID: 305)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6396040916442871
    2. ' range' → logprob: -0.7646040916442871
    3. ' la' → logprob: -5.139604091644287
    4. ' ' → logprob: -7.764604091644287
    5. 'la' → logprob: -8.514604568481445
    6. '"' → logprob: -9.639604568481445
    7. '```' → logprob: -9.639604568481445
    8. '	range' → logprob: -10.139604568481445
    9. '(range' → logprob: -10.389604568481445
    10. 'l' → logprob: -10.389604568481445

Token 101: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8630985617637634
    2. ''' → logprob: -0.9880985617637634
    3. 'a' → logprob: -1.8630986213684082
    4. 'range' → logprob: -3.738098621368408
    5. '[' → logprob: -4.988098621368408
    6. ''ensemble' → logprob: -5.238098621368408
    7. '['' → logprob: -5.488098621368408
    8. ' range' → logprob: -6.238098621368408
    9. ''inter' → logprob: -6.738098621368408
    10. ''entre' → logprob: -7.363098621368408

Token 102: 'interval' (ID: 37558)
  Prédit: 'interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.6617258787155151
    2. ''' → logprob: -0.9117258787155151
    3. '[' → logprob: -3.1617259979248047
    4. 'e' → logprob: -4.786725997924805
    5. ''ensemble' → logprob: -4.786725997924805
    6. ' interval' → logprob: -4.786725997924805
    7. 'range' → logprob: -5.536725997924805
    8. ''inter' → logprob: -6.286725997924805
    9. 'ensemble' → logprob: -6.286725997924805
    10. '['' → logprob: -6.786725997924805

Token 103: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.023260504007339478
    2. 'e' → logprob: -4.023260593414307
    3. 're' → logprob: -5.773260593414307
    4. '[' → logprob: -6.523260593414307
    5. '[A' → logprob: -8.648260116577148
    6. '[e' → logprob: -9.273260116577148
    7. 'v' → logprob: -9.648260116577148
    8. 'l' → logprob: -10.023260116577148
    9. 'val' → logprob: -10.273260116577148
    10. 've' → logprob: -10.648260116577148

Token 104: ' [' (ID: 723)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.055810809135437
    2. 'for' → logprob: -1.805810809135437
    3. 'def' → logprob: -2.4308109283447266
    4. '[' → logprob: -2.8058109283447266
    5. '```' → logprob: -3.0558109283447266
    6. 'range' → logprob: -3.0558109283447266
    7. ' ' → logprob: -3.1808109283447266
    8. ' for' → logprob: -3.3058109283447266
    9. ':' → logprob: -3.5558109283447266
    10. ' A' → logprob: -3.6808109283447266

Token 105: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.054988350719213486
    2. ' A' → logprob: -2.929988384246826
    3. ' ' → logprob: -9.804987907409668
    4. ''A' → logprob: -11.304987907409668
    5. ',' → logprob: -11.554987907409668
    6. '   ' → logprob: -11.804987907409668
    7. ',A' → logprob: -11.929987907409668
    8. '"A' → logprob: -12.179987907409668
    9. 'str' → logprob: -13.304987907409668
    10. '	A' → logprob: -13.429987907409668

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0063971420750021935
    2. ',B' → logprob: -5.631397247314453
    3. ';' → logprob: -6.381397247314453
    4. ' ,' → logprob: -6.881397247314453
    5. ',A' → logprob: -9.881397247314453
    6. ' ;' → logprob: -11.631397247314453
    7. ',b' → logprob: -12.881397247314453
    8. ' ' → logprob: -13.256397247314453
    9. ';,' → logprob: -14.006397247314453
    10. ',C' → logprob: -14.131397247314453

Token 107: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.4740963578224182
    2. 'B' → logprob: -0.9740963578224182
    3. ' ' → logprob: -11.224096298217773
    4. ',' → logprob: -12.724096298217773
    5. ',B' → logprob: -14.099096298217773
    6. ' ' → logprob: -14.224096298217773
    7. ' ,' → logprob: -14.849096298217773
    8. ''' → logprob: -15.099096298217773
    9. '"B' → logprob: -15.599096298217773
    10. ')' → logprob: -15.849096298217773

Token 108: '].

' (ID: 37441)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22337540984153748
    2. ']' → logprob: -1.8483754396438599
    3. 'def' → logprob: -3.2233753204345703
    4. ':' → logprob: -8.09837532043457
    5. '):' → logprob: -8.09837532043457
    6. 'e' → logprob: -8.09837532043457
    7. '#' → logprob: -8.09837532043457
    8. 'a' → logprob: -8.34837532043457
    9. ')]' → logprob: -8.47337532043457
    10. 'A' → logprob: -8.72337532043457

Token 109: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.26248490810394287
    2. 'count' → logprob: -2.2624850273132324
    3. 'n' → logprob: -2.8874850273132324
    4. '```' → logprob: -4.262485027313232
    5. 'for' → logprob: -4.387485027313232
    6. 'd' → logprob: -4.387485027313232
    7. 'nombre' → logprob: -5.262485027313232
    8. 'nb' → logprob: -5.262485027313232
    9. 'possible' → logprob: -5.387485027313232
    10. 'i' → logprob: -6.262485027313232

Token 110: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.21582132577896118
    2. ' nombre' → logprob: -2.0908212661743164
    3. 'count' → logprob: -3.2158212661743164
    4. ' compter' → logprob: -4.090821266174316
    5. 'nombre' → logprob: -4.590821266174316
    6. ' nb' → logprob: -6.465821266174316
    7. ' compte' → logprob: -7.090821266174316
    8. ' nombres' → logprob: -7.840821266174316
    9. 'nb' → logprob: -8.465821266174316
    10. ' compteur' → logprob: -9.215821266174316

Token 111: '_floor' (ID: 152330)
  Prédit: '_div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.02056594379246235
    2. '_floor' → logprob: -4.145565986633301
    3. '_' → logprob: -6.270565986633301
    4. '_f' → logprob: -6.645565986633301
    5. '_height' → logprob: -7.145565986633301
    6. '_valid' → logprob: -8.6455659866333
    7. '_possible' → logprob: -9.0205659866333
    8. '_factor' → logprob: -9.8955659866333
    9. '_et' → logprob: -10.6455659866333
    10. '_he' → logprob: -10.7705659866333

Token 112: '_height' (ID: 21576)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04358549788594246
    2. '_div' → logprob: -3.7935855388641357
    3. '_he' → logprob: -4.043585300445557
    4. '_height' → logprob: -6.668585300445557
    5. '_' → logprob: -7.168585300445557
    6. '_choices' → logprob: -8.043585777282715
    7. '_options' → logprob: -10.043585777282715
    8. 'ings' → logprob: -10.168585777282715
    9. '_s' → logprob: -10.418585777282715
    10. '_vari' → logprob: -11.043585777282715

Token 113: '_options' (ID: 19793)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02207600697875023
    2. '(' → logprob: -4.52207612991333
    3. '(A' → logprob: -4.89707612991333
    4. '(H' → logprob: -5.89707612991333
    5. '_s' → logprob: -7.77207612991333
    6. '(h' → logprob: -8.897075653076172
    7. '_' → logprob: -10.272075653076172
    8. '_between' → logprob: -10.522075653076172
    9. ' (' → logprob: -10.647075653076172
    10. '(a' → logprob: -11.022075653076172

Token 114: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.12720966339111328
    2. '(' → logprob: -2.1272096633911133
    3. '(h' → logprob: -8.877209663391113
    4. '(A' → logprob: -9.127209663391113
    5. ' (' → logprob: -10.502209663391113
    6. '((' → logprob: -14.002209663391113
    7. '(s' → logprob: -14.252209663391113
    8. '(n' → logprob: -14.252209663391113
    9. '(
' → logprob: -14.877209663391113
    10. '(def' → logprob: -14.877209663391113

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.688212614681106e-05
    2. ',A' → logprob: -11.625017166137695
    3. ' ,' → logprob: -11.750017166137695
    4. ',a' → logprob: -18.750017166137695
    5. 'A' → logprob: -18.875017166137695
    6. ',
' → logprob: -19.625017166137695
    7. ',H' → logprob: -19.875017166137695
    8. ',B' → logprob: -20.250017166137695
    9. ',int' → logprob: -20.375017166137695
    10. ' A' → logprob: -20.500017166137695

Token 116: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.04858794063329697
    2. ' A' → logprob: -3.0485880374908447
    3. '   ' → logprob: -15.548587799072266
    4. ' ' → logprob: -15.798587799072266
    5. '	A' → logprob: -16.048587799072266
    6. '```' → logprob: -16.798587799072266
    7. ',A' → logprob: -16.923587799072266
    8. '  ' → logprob: -16.923587799072266
    9. ')' → logprob: -17.173587799072266
    10. 'a' → logprob: -17.798587799072266

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.8351892473874614e-05
    2. ' ,' → logprob: -10.375048637390137
    3. ',B' → logprob: -11.000048637390137
    4. ',b' → logprob: -15.625048637390137
    5. ',
' → logprob: -17.62504768371582
    6. '‌,' → logprob: -17.62504768371582
    7. ',int' → logprob: -18.00004768371582
    8. '):' → logprob: -18.12504768371582
    9. ')' → logprob: -18.37504768371582
    10. '_,' → logprob: -18.50004768371582

Token 118: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.47407931089401245
    2. ' B' → logprob: -0.9740793108940125
    3. ' ' → logprob: -13.474079132080078
    4. ' ' → logprob: -15.224079132080078
    5. '   ' → logprob: -15.474079132080078
    6. ')' → logprob: -16.224079132080078
    7. '	B' → logprob: -16.224079132080078
    8. ',' → logprob: -16.349079132080078
    9. '```' → logprob: -16.349079132080078
    10. 'b' → logprob: -16.474079132080078

Token 119: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00023226479243021458
    2. ')' → logprob: -8.375232696533203
    3. ':' → logprob: -14.125232696533203
    4. '):
' → logprob: -14.875232696533203
    5. ' ):' → logprob: -14.875232696533203
    6. '   ' → logprob: -17.125232696533203
    7. '):
' → logprob: -17.625232696533203
    8. ')：' → logprob: -17.750232696533203
    9. 'def' → logprob: -18.000232696533203
    10. '}:' → logprob: -18.000232696533203

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008665744215250015
    2. ':' → logprob: -5.258665561676025
    3. '
' → logprob: -5.883665561676025
    4. ':
' → logprob: -8.508666038513184
    5. '    
' → logprob: -8.883666038513184
    6. '  
' → logprob: -9.633666038513184
    7. '```' → logprob: -9.758666038513184
    8. '   
' → logprob: -10.258666038513184
    9. '  ' → logprob: -10.633666038513184
    10. ' ' → logprob: -10.758666038513184

Token 121: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.029076116159558296
    2. ' count' → logprob: -3.654076099395752
    3. '   ' → logprob: -6.154076099395752
    4. 'counter' → logprob: -8.15407657623291
    5. 'result' → logprob: -8.90407657623291
    6. 'return' → logprob: -9.15407657623291
    7. 'cnt' → logprob: -9.90407657623291
    8. 'c' → logprob: -11.15407657623291
    9. 'comp' → logprob: -11.65407657623291
    10. ' compteur' → logprob: -12.27907657623291

Token 122: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07890014350414276
    2. '=' → logprob: -2.578900098800659
    3. ' +=' → logprob: -11.953900337219238
    4. ' ' → logprob: -12.828900337219238
    5. '   ' → logprob: -14.578900337219238
    6. 's' → logprob: -15.328900337219238
    7. ',' → logprob: -16.078899383544922
    8. ')' → logprob: -16.328899383544922
    9. '_' → logprob: -16.578899383544922
    10. '  ' → logprob: -16.578899383544922

Token 123: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009756204672157764
    2. ' ' → logprob: -4.634756088256836
    3. '   ' → logprob: -15.259756088256836
    4. '```' → logprob: -17.884756088256836
    5. ' ' → logprob: -18.759756088256836
    6. '  ' → logprob: -19.509756088256836
    7. 'sum' → logprob: -20.384756088256836
    8. '۰' → logprob: -20.822256088256836
    9. '=' → logprob: -21.009756088256836
    10. '1' → logprob: -21.259756088256836

Token 124: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -20.250001907348633
    4. 'sum' → logprob: -20.500001907348633
    5. '```' → logprob: -21.125001907348633
    6. 'len' → logprob: -22.750001907348633
    7. 'int' → logprob: -22.750001907348633
    8. '  ' → logprob: -23.000001907348633
    9. '۰' → logprob: -23.000001907348633
    10. '０' → logprob: -23.125001907348633

Token 125: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6406509280204773
    2. '
' → logprob: -0.7656509280204773
    3. ' for' → logprob: -5.265650749206543
    4. '    
' → logprob: -6.640650749206543
    5. 'for' → logprob: -7.265650749206543
    6. '\n' → logprob: -7.515650749206543
    7. '  
' → logprob: -9.140650749206543
    8. ' 
' → logprob: -9.390650749206543
    9. '
' → logprob: -10.015650749206543
    10. '   
' → logprob: -10.765650749206543

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005724824965000153
    2. ' for' → logprob: -5.755724906921387
    3. '
' → logprob: -6.380724906921387
    4. 'for' → logprob: -7.130724906921387
    5. '    
' → logprob: -10.255724906921387
    6. 'def' → logprob: -11.880724906921387
    7. '	for' → logprob: -12.255724906921387
    8. '\n' → logprob: -14.255724906921387
    9. '```' → logprob: -14.380724906921387
    10. '  
' → logprob: -15.005724906921387

Token 127: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0016395928105339408
    2. ' for' → logprob: -6.626639366149902
    3. 'import' → logprob: -8.751639366149902
    4. '   ' → logprob: -9.126639366149902
    5. 'h' → logprob: -10.126639366149902
    6. 'from' → logprob: -12.376639366149902
    7. ' ' → logprob: -14.001639366149902
    8. 'i' → logprob: -14.126639366149902
    9. ' import' → logprob: -16.00164031982422
    10. '  ' → logprob: -16.00164031982422

Token 128: ' Pour' (ID: 13931)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3489178419113159
    2. 'for' → logprob: -1.223917841911316
    3. 'import' → logprob: -8.598917961120605
    4. '   ' → logprob: -8.598917961120605
    5. ' import' → logprob: -9.723917961120605
    6. ' ' → logprob: -11.098917961120605
    7. 'range' → logprob: -11.473917961120605
    8. ' range' → logprob: -12.348917961120605
    9. ' h' → logprob: -12.473917961120605
    10. 'from' → logprob: -13.098917961120605

Token 129: ' chaque' (ID: 21194)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.576145589351654
    2. ' h' → logprob: -0.826145589351654
    3. ' hauteur' → logprob: -9.57614517211914
    4. ' i' → logprob: -10.57614517211914
    5. 'i' → logprob: -10.95114517211914
    6. ' ' → logprob: -11.20114517211914
    7. 'ha' → logprob: -11.26364517211914
    8. 'height' → logprob: -11.51364517211914
    9. 'a' → logprob: -11.70114517211914
    10. ' ' → logprob: -11.88864517211914

Token 130: ' hauteur' (ID: 72987)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.3137291669845581
    2. ' h' → logprob: -1.313729166984558
    3. ' hauteur' → logprob: -8.438729286193848
    4. 'height' → logprob: -9.813729286193848
    5. 'ha' → logprob: -9.938729286193848
    6. ' possible' → logprob: -10.063729286193848
    7. 'i' → logprob: -10.438729286193848
    8. ' i' → logprob: -10.563729286193848
    9. ' height' → logprob: -10.813729286193848
    10. 'possible' → logprob: -10.813729286193848

Token 131: ' possible' (ID: 4149)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.10234340280294418
    2. 'h' → logprob: -2.3523433208465576
    3. ' possible' → logprob: -6.602343559265137
    4. ' for' → logprob: -8.352343559265137
    5. '   ' → logprob: -8.477343559265137
    6. 'possible' → logprob: -8.977343559265137
    7. ' in' → logprob: -9.477343559265137
    8. 'for' → logprob: -10.227343559265137
    9. ' entre' → logprob: -11.477343559265137
    10. ' dans' → logprob: -11.602343559265137

Token 132: ' entre' (ID: 3853)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.0843769982457161
    2. ' in' → logprob: -2.7093770503997803
    3. ' for' → logprob: -4.834376811981201
    4. 'h' → logprob: -5.584376811981201
    5. '   ' → logprob: -6.459376811981201
    6. ' dans' → logprob: -8.45937728881836
    7. 'for' → logprob: -8.45937728881836
    8. ' en' → logprob: -8.83437728881836
    9. ',' → logprob: -8.95937728881836
    10. ' i' → logprob: -8.95937728881836

Token 133: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.07889474183320999
    2. ' A' → logprob: -2.578894853591919
    3. ' ' → logprob: -12.70389461517334
    4. '   ' → logprob: -13.45389461517334
    5. '	A' → logprob: -15.45389461517334
    6. ' ' → logprob: -16.703895568847656
    7. '  ' → logprob: -16.953895568847656
    8. 'a' → logprob: -17.203895568847656
    9. '
' → logprob: -17.953895568847656
    10. '_A' → logprob: -18.203895568847656

Token 134: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8167309761047363
    2. ' et' → logprob: -1.0667309761047363
    3. ',' → logprob: -1.6917309761047363
    4. 'and' → logprob: -3.6917309761047363
    5. 'et' → logprob: -6.191730976104736
    6. '   ' → logprob: -6.566730976104736
    7. ' ,' → logprob: -7.441730976104736
    8. ' ' → logprob: -7.566730976104736
    9. ' и' → logprob: -9.941730499267578
    10. 'for' → logprob: -10.066730499267578

Token 135: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.47409379482269287
    2. 'B' → logprob: -0.9740937948226929
    3. 'A' → logprob: -11.849093437194824
    4. ' A' → logprob: -12.224093437194824
    5. ' ' → logprob: -12.349093437194824
    6. ' ' → logprob: -15.724093437194824
    7. '   ' → logprob: -15.974093437194824
    8. '	B' → logprob: -17.72409439086914
    9. ',' → logprob: -17.84909439086914
    10. '```' → logprob: -18.34909439086914

Token 136: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46245723962783813
    2. ':' → logprob: -1.2124571800231934
    3. ',' → logprob: -3.0874571800231934
    4. ' for' → logprob: -3.8374571800231934
    5. ':
' → logprob: -5.962457180023193
    6. 'for' → logprob: -6.462457180023193
    7. ' ,' → logprob: -7.962457180023193
    8. '
' → logprob: -8.337457656860352
    9. ' :' → logprob: -8.337457656860352
    10. ' in' → logprob: -8.462457656860352

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024294927716255188
    2. ':' → logprob: -4.399294853210449
    3. ',' → logprob: -5.149294853210449
    4. ' for' → logprob: -5.399294853210449
    5. 'for' → logprob: -6.899294853210449
    6. ':
' → logprob: -8.52429485321045
    7. '
' → logprob: -9.77429485321045
    8. '    
' → logprob: -10.14929485321045
    9. ' ,' → logprob: -10.64929485321045
    10. '  ' → logprob: -11.14929485321045

Token 138: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.35772818326950073
    2. 'for' (adapté à ' for') → logprob: -1.4827282428741455
    3. '   ' → logprob: -2.6077282428741455
    4. '	for' → logprob: -11.732728004455566
    5. ' ' → logprob: -12.732728004455566
    6. '    ' → logprob: -13.357728004455566
    7. '  ' → logprob: -13.482728004455566
    8. '
' → logprob: -13.982728004455566
    9. '    
' → logprob: -14.357728004455566
    10. ' range' → logprob: -14.732728004455566

Token 139: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5762810111045837
    2. ' h' → logprob: -0.8262810111045837
    3. 'height' → logprob: -8.57628059387207
    4. ' height' → logprob: -9.07628059387207
    5. '   ' → logprob: -11.32628059387207
    6. ' ' → logprob: -12.07628059387207
    7. ' i' → logprob: -12.32628059387207
    8. '	h' → logprob: -12.57628059387207
    9. ' hauteur' → logprob: -12.57628059387207
    10. 'i' → logprob: -12.70128059387207

Token 140: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0015130772953853011
    2. 'in' → logprob: -6.5015130043029785
    3. ' ' → logprob: -11.876513481140137
    4. '   ' → logprob: -14.251513481140137
    5. '	in' → logprob: -14.251513481140137
    6. '    ' → logprob: -14.501513481140137
    7. 'd' → logprob: -15.626513481140137
    8. ',' → logprob: -15.751513481140137
    9. 'inth' → logprob: -15.751513481140137
    10. ' i' → logprob: -15.751513481140137

Token 141: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20142649114131927
    2. 'range' → logprob: -1.7014265060424805
    3. ' ' → logprob: -11.82642650604248
    4. 'A' → logprob: -13.20142650604248
    5. ' A' → logprob: -13.32642650604248
    6. '(range' → logprob: -14.07642650604248
    7. '	range' → logprob: -14.32642650604248
    8. '   ' → logprob: -14.70142650604248
    9. ' xrange' → logprob: -15.07642650604248
    10. '  ' → logprob: -16.326425552368164

Token 142: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0003528622619342059
    2. '(' → logprob: -8.00035285949707
    3. ' (' → logprob: -11.00035285949707
    4. 'A' → logprob: -15.25035285949707
    5. ')' → logprob: -15.25035285949707
    6. ' A' → logprob: -16.25035285949707
    7. '(
' → logprob: -16.50035285949707
    8. '(a' → logprob: -17.62535285949707
    9. '   ' → logprob: -17.75035285949707
    10. '((' → logprob: -18.00035285949707

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013774950057268143
    2. ' ,' → logprob: -6.751377582550049
    3. ',B' → logprob: -8.50137710571289
    4. '   ' → logprob: -12.75137710571289
    5. ',
' → logprob: -14.37637710571289
    6. 'B' → logprob: -15.87637710571289
    7. ',b' → logprob: -16.12637710571289
    8. ',A' → logprob: -16.62637710571289
    9. '```' → logprob: -16.62637710571289
    10. ' ' → logprob: -16.87637710571289

Token 144: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.12692968547344208
    2. ' B' → logprob: -2.126929759979248
    3. '   ' → logprob: -13.50192928314209
    4. '	B' → logprob: -15.87692928314209
    5. ' ' → logprob: -16.251930236816406
    6. '(B' → logprob: -17.126930236816406
    7. '    ' → logprob: -17.876930236816406
    8. '```' → logprob: -18.751930236816406
    9. ' ' → logprob: -19.001930236816406
    10. ',' → logprob: -19.376930236816406

Token 145: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47410476207733154
    2. ' +' → logprob: -0.9741047620773315
    3. '   ' → logprob: -11.099104881286621
    4. ',' → logprob: -11.474104881286621
    5. '+B' → logprob: -14.349104881286621
    6. ' ' → logprob: -14.724104881286621
    7. ' ,' → logprob: -14.974104881286621
    8. ')' → logprob: -15.224104881286621
    9. '1' → logprob: -15.474104881286621
    10. ' plus' → logprob: -15.849104881286621

Token 146: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026169343618676066
    2. ' ' → logprob: -8.250261306762695
    3. '   ' → logprob: -15.500261306762695
    4. ')' → logprob: -16.625261306762695
    5. '```' → logprob: -16.625261306762695
    6. '  ' → logprob: -19.000261306762695
    7. ' ' → logprob: -20.000261306762695
    8. '``' → logprob: -20.937761306762695
    9. '۱' → logprob: -21.375261306762695
    10. '(' → logprob: -21.375261306762695

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. ')' → logprob: -18.125001907348633
    4. '   ' → logprob: -18.750001907348633
    5. '```' → logprob: -19.000001907348633
    6. '۱' → logprob: -22.125001907348633
    7. '  ' → logprob: -22.250001907348633
    8. '``' → logprob: -22.250001907348633
    9. '１' → logprob: -22.375001907348633
    10. '):
' → logprob: -22.500001907348633

Token 148: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04896555095911026
    2. '):
' → logprob: -3.0489654541015625
    3. ':' → logprob: -7.9239654541015625
    4. '   ' → logprob: -11.673965454101562
    5. ')' → logprob: -12.423965454101562
    6. '):
' → logprob: -13.423965454101562
    7. ' ):' → logprob: -14.298965454101562
    8. '):

' → logprob: -14.673965454101562
    9. ':
' → logprob: -14.798965454101562
    10. '():' → logprob: -16.298965454101562

Token 149: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005342059303075075
    2. ' if' → logprob: -7.7505340576171875
    3. '   ' → logprob: -9.875534057617188
    4. '<|end|>' → logprob: -10.750534057617188
    5. 'if' → logprob: -11.000534057617188
    6. '```' → logprob: -12.750534057617188
    7. '        
' → logprob: -12.875534057617188
    8. ',' → logprob: -13.375534057617188
    9. ' ' → logprob: -13.875534057617188
    10. '      ' → logprob: -14.125534057617188

Token 150: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2830957770347595
    2. ' if' → logprob: -2.0330958366394043
    3. 'if' → logprob: -2.1580958366394043
    4. '   ' → logprob: -9.908095359802246
    5. '           ' → logprob: -11.658095359802246
    6. '        
' → logprob: -12.408095359802246
    7. '
' → logprob: -12.908095359802246
    8. ' ' → logprob: -13.158095359802246
    9. '      ' → logprob: -13.408095359802246
    10. '	if' → logprob: -13.783095359802246

Token 151: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3135894238948822
    2. ' if' → logprob: -1.3135894536972046
    3. '       ' → logprob: -8.063589096069336
    4. '   ' → logprob: -11.313589096069336
    5. '           ' → logprob: -15.563589096069336
    6. '	if' → logprob: -15.688589096069336
    7. ' ' → logprob: -16.063589096069336
    8. 'If' → logprob: -16.938589096069336
    9. '    ' → logprob: -17.063589096069336
    10. '```' → logprob: -17.063589096069336

Token 152: ' vér' (ID: 42524)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2811628580093384
    2. 'if' → logprob: -1.4061628580093384
    3. '%' → logprob: -12.781163215637207
    4. 's' → logprob: -12.781163215637207
    5. '   ' → logprob: -13.406163215637207
    6. ' continue' → logprob: -14.281163215637207
    7. '    ' → logprob: -14.531163215637207
    8. '       ' → logprob: -14.656163215637207
    9. '#' → logprob: -14.781163215637207
    10. ' s' → logprob: -14.906163215637207

Token 153: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -5.438573680294212e-06
    2. 'if' → logprob: -12.500005722045898
    3. 'ifié' → logprob: -14.250005722045898
    4. 'ifi' → logprob: -14.625005722045898
    5. 'ifier' → logprob: -16.1250057220459
    6. 'ifiez' → logprob: -16.1250057220459
    7. 'i' → logprob: -16.2500057220459
    8. 'ife' → logprob: -16.5000057220459
    9. '   ' → logprob: -17.3750057220459
    10. '_' → logprob: -17.6250057220459

Token 154: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.008234646171331406
    2. ' si' → logprob: -5.13323450088501
    3. 'if' → logprob: -6.25823450088501
    4. '       ' → logprob: -8.133234977722168
    5. ' ' → logprob: -10.383234977722168
    6. '   ' → logprob: -11.258234977722168
    7. ' ' → logprob: -11.258234977722168
    8. ' que' → logprob: -11.383234977722168
    9. '	if' → logprob: -12.008234977722168
    10. ' s' → logprob: -12.258234977722168

Token 155: ' h' (ID: 312)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.0024862384889274836
    2. 'H' → logprob: -6.002486228942871
    3. ' ' → logprob: -12.002486228942871
    4. ' ' → logprob: -13.127486228942871
    5. '   ' → logprob: -13.377486228942871
    6. '    ' → logprob: -15.127486228942871
    7. '  ' → logprob: -15.627486228942871
    8. '	H' → logprob: -15.627486228942871
    9. ' (' → logprob: -15.752486228942871
    10. '       ' → logprob: -16.377487182617188

Token 156: ' div' (ID: 4223)
  Prédit: ' divides'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' divides' → logprob: -1.2437732219696045
    2. 'div' → logprob: -1.3687732219696045
    3. '%' → logprob: -1.6187732219696045
    4. ' %' → logprob: -2.1187732219696045
    5. ' !=' → logprob: -3.2437732219696045
    6. '   ' → logprob: -3.8687732219696045
    7. '<|end|>' → logprob: -3.9937732219696045
    8. ' ==' → logprob: -4.743773460388184
    9. ')' → logprob: -4.743773460388184
    10. '!=' → logprob: -4.868773460388184

Token 157: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.003387314500287175
    2. 'isible' → logprob: -6.253387451171875
    3. 'ide' → logprob: -6.628387451171875
    4. '   ' → logprob: -9.753387451171875
    5. '```' → logprob: -10.253387451171875
    6. '       ' → logprob: -11.378387451171875
    7. 'is' → logprob: -12.128387451171875
    8. 'ize' → logprob: -12.753387451171875
    9. 'isable' → logprob: -12.878387451171875
    10. 'iseur' → logprob: -13.003387451171875

Token 158: ' H' (ID: 487)
  Prédit: ' H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.05034683644771576
    2. 'H' → logprob: -3.175346851348877
    3. ' ' → logprob: -5.550346851348877
    4. '   ' → logprob: -6.550346851348877
    5. ' exactement' → logprob: -7.425346851348877
    6. ' parfaitement' → logprob: -7.550346851348877
    7. ' ' → logprob: -8.300346374511719
    8. '	H' → logprob: -8.925346374511719
    9. ' exactly' → logprob: -9.800346374511719
    10. 'exact' → logprob: -9.800346374511719

Token 159: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013784871436655521
    2. ':' → logprob: -4.388784885406494
    3. ' :' → logprob: -7.638784885406494
    4. ' if' → logprob: -8.263784408569336
    5. ',' → logprob: -8.513784408569336
    6. '           ' → logprob: -8.888784408569336
    7. '   ' → logprob: -9.013784408569336
    8. 'if' → logprob: -11.138784408569336
    9. ' ' → logprob: -11.888784408569336
    10. '```' → logprob: -11.888784408569336

Token 160: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010163593105971813
    2. ':' → logprob: -9.875102043151855
    3. ' if' → logprob: -10.750102043151855
    4. '           ' → logprob: -11.500102043151855
    5. '   ' → logprob: -12.000102043151855
    6. ',' → logprob: -12.125102043151855
    7. 'if' → logprob: -13.125102043151855
    8. '      ' → logprob: -14.000102043151855
    9. ' :' → logprob: -14.125102043151855
    10. '```' → logprob: -14.250102043151855

Token 161: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.121259406208992
    2. 'if' (adapté à ' if') → logprob: -2.3712594509124756
    3. '       ' → logprob: -3.8712594509124756
    4. '   ' → logprob: -14.996259689331055
    5. '	if' → logprob: -15.621259689331055
    6. '           ' → logprob: -16.621259689331055
    7. 'If' → logprob: -17.746259689331055
    8. ' ' → logprob: -17.996259689331055
    9. ' ' → logprob: -17.996259689331055
    10. '```' → logprob: -18.246259689331055

Token 162: ' H' (ID: 487)
  Prédit: ' H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.023262133821845055
    2. 'H' → logprob: -3.7732620239257812
    3. ' ' → logprob: -11.398262023925781
    4. ' ' → logprob: -12.648262023925781
    5. ' (' → logprob: -13.773262023925781
    6. '(H' → logprob: -14.523262023925781
    7. '	H' → logprob: -15.148262023925781
    8. '   ' → logprob: -15.398262023925781
    9. '(' → logprob: -15.898262023925781
    10. '  ' → logprob: -17.52326202392578

Token 163: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.201422318816185
    2. '%' → logprob: -1.7014223337173462
    3. ' ' → logprob: -12.326422691345215
    4. ' ' → logprob: -12.451422691345215
    5. '%i' → logprob: -15.076422691345215
    6. '   ' → logprob: -16.3264217376709
    7. '%d' → logprob: -16.3264217376709
    8. '%s' → logprob: -16.9514217376709
    9. '%B' → logprob: -17.0764217376709
    10. '%A' → logprob: -17.2014217376709

Token 164: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.2519293427467346
    2. ' h' → logprob: -1.5019292831420898
    3. '	h' → logprob: -16.751930236816406
    4. ' ' → logprob: -16.876930236816406
    5. ' ' → logprob: -17.251930236816406
    6. '```' → logprob: -17.501930236816406
    7. '   ' → logprob: -18.001930236816406
    8. 's' → logprob: -18.751930236816406
    9. '_h' → logprob: -19.251930236816406
    10. '  ' → logprob: -19.751930236816406

Token 165: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3132671117782593
    2. ' ==' → logprob: -1.3132671117782593
    3. '=' → logprob: -12.81326675415039
    4. ')==' → logprob: -13.56326675415039
    5. '===' → logprob: -14.43826675415039
    6. ']==' → logprob: -15.56326675415039
    7. ')' → logprob: -15.81326675415039
    8. '()==' → logprob: -15.81326675415039
    9. '0' → logprob: -16.18826675415039
    10. ' ' → logprob: -16.68826675415039

Token 166: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006715370807796717
    2. ' ' → logprob: -5.006715297698975
    3. '   ' → logprob: -17.256715774536133
    4. ' ' → logprob: -18.631715774536133
    5. '  ' → logprob: -19.381715774536133
    6. '```' → logprob: -20.631715774536133
    7. '۰' → logprob: -20.631715774536133
    8. '  ' → logprob: -21.006715774536133
    9. ' ' → logprob: -21.131715774536133
    10. '00' → logprob: -21.256715774536133

Token 167: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -20.375001907348633
    4. '۰' → logprob: -21.125001907348633
    5. '00' → logprob: -22.500001907348633
    6. '```' → logprob: -22.625001907348633
    7. '  ' → logprob: -23.000001907348633
    8. '٠' → logprob: -23.125001907348633
    9. '  ' → logprob: -23.250001907348633
    10. ' ' → logprob: -23.375001907348633

Token 168: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02337079681456089
    2. ':
' → logprob: -3.7733707427978516
    3. '           ' → logprob: -9.273370742797852
    4. '       ' → logprob: -10.523370742797852
    5. '):
' → logprob: -13.648370742797852
    6. ' :' → logprob: -13.648370742797852
    7. '):' → logprob: -13.773370742797852
    8. ':
' → logprob: -15.148370742797852
    9. ' :
' → logprob: -15.523370742797852
    10. ',' → logprob: -15.773370742797852

Token 169: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013492840807884932
    2. 'count' → logprob: -6.626349449157715
    3. ' count' → logprob: -11.376349449157715
    4. '
' → logprob: -11.751349449157715
    5. '       ' → logprob: -13.126349449157715
    6. '```' → logprob: -14.501349449157715
    7. '[count' → logprob: -14.751349449157715
    8. '               ' → logprob: -15.001349449157715
    9. '	       ' → logprob: -15.376349449157715
    10. '          ' → logprob: -15.751349449157715

Token 170: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.4915708005428314
    2. '           ' → logprob: -0.9915708303451538
    3. ' count' → logprob: -4.241570949554443
    4. '       ' → logprob: -6.241570949554443
    5. '               ' → logprob: -6.991570949554443
    6. '
' → logprob: -9.366570472717285
    7. '   ' → logprob: -12.991570472717285
    8. '	count' → logprob: -14.116570472717285
    9. '```' → logprob: -14.866570472717285
    10. '
' → logprob: -15.491570472717285

Token 171: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10021496564149857
    2. ' +=' → logprob: -2.350214958190918
    3. '+' → logprob: -12.600214958190918
    4. '=' → logprob: -12.600214958190918
    5. ']+=' → logprob: -14.100214958190918
    6. '   ' → logprob: -14.225214958190918
    7. '```' → logprob: -17.350215911865234
    8. '+="' → logprob: -17.475215911865234
    9. '    ' → logprob: -17.725215911865234
    10. '+='' → logprob: -18.225215911865234

Token 172: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -19.750003814697266
    4. '```' → logprob: -21.750003814697266
    5. ' ' → logprob: -24.125003814697266
    6. '  ' → logprob: -24.375003814697266
    7. '１' → logprob: -25.000003814697266
    8. '       ' → logprob: -25.250003814697266
    9. '۱' → logprob: -25.375003814697266
    10. '<|end|>' → logprob: -25.500003814697266

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '```' → logprob: -20.75
    4. '   ' → logprob: -22.375
    5. '<|end|>' → logprob: -23.875
    6. '１' → logprob: -24.375
    7. '۱' → logprob: -25.0
    8. '१' → logprob: -25.75
    9. '
' → logprob: -25.875
    10. '  ' → logprob: -26.25

Token 174: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022698009852319956
    2. '
' → logprob: -6.752269744873047
    3. 'return' → logprob: -7.252269744873047
    4. ' return' → logprob: -7.877269744873047
    5. '    
' → logprob: -11.627269744873047
    6. '	return' → logprob: -13.502269744873047
    7. '```' → logprob: -15.252269744873047
    8. '
' → logprob: -15.377269744873047
    9. ':return' → logprob: -16.002269744873047
    10. '       ' → logprob: -16.377269744873047

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033028353936970234
    2. 'return' → logprob: -5.753303050994873
    3. ' return' → logprob: -9.003302574157715
    4. '
' → logprob: -13.753302574157715
    5. '    
' → logprob: -15.003302574157715
    6. '```' → logprob: -15.128302574157715
    7. '	return' → logprob: -15.253302574157715
    8. '       ' → logprob: -16.12830352783203
    9. ':return' → logprob: -17.12830352783203
    10. ' ' → logprob: -18.00330352783203

Token 176: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0026380838826298714
    2. '   ' → logprob: -6.25263786315918
    3. ' return' → logprob: -7.25263786315918
    4. '	return' → logprob: -14.62763786315918
    5. '
' → logprob: -15.12763786315918
    6. ' ' → logprob: -16.75263786315918
    7. '    
' → logprob: -17.00263786315918
    8. ':return' → logprob: -17.00263786315918
    9. '```' → logprob: -17.25263786315918
    10. '  ' → logprob: -17.75263786315918

Token 177: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.004078401252627373
    2. ' count' → logprob: -5.504078388214111
    3. '   ' → logprob: -19.504077911376953
    4. '[count' → logprob: -20.129077911376953
    5. '	count' → logprob: -20.254077911376953
    6. '(count' → logprob: -21.004077911376953
    7. 'counts' → logprob: -21.254077911376953
    8. '$count' → logprob: -22.129077911376953
    9. '_count' → logprob: -22.254077911376953
    10. 'counter' → logprob: -22.879077911376953

Token 178: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 179: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 180: ' main' (ID: 2758)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.7676534652709961
    2. ' main' → logprob: -1.017653465270996
    3. ' total' → logprob: -2.642653465270996
    4. ' number' → logprob: -3.767653465270996
    5. ' max' → logprob: -3.892653465270996
    6. ' find' → logprob: -4.767653465270996
    7. ' divis' → logprob: -4.767653465270996
    8. ' divisor' → logprob: -5.017653465270996
    9. ' gcd' → logprob: -5.392653465270996
    10. ' calculate' → logprob: -5.517653465270996

Token 181: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -6.392202976712724e-06
    2. '():
' → logprob: -12.875006675720215
    3. ' ():' → logprob: -13.125006675720215
    4. '()' → logprob: -13.875006675720215
    5. '(' → logprob: -14.250006675720215
    6. ':' → logprob: -16.1250057220459
    7. '():
' → logprob: -17.0000057220459
    8. '():

' → logprob: -17.8750057220459
    9. '_' → logprob: -18.0000057220459
    10. '(":' → logprob: -18.2500057220459

Token 182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023078618105500937
    2. ' H' → logprob: -6.127307891845703
    3. '```' → logprob: -10.002307891845703
    4. 'import' → logprob: -10.752307891845703
    5. '    
' → logprob: -11.002307891845703
    6. ' import' → logprob: -11.377307891845703
    7. 'H' → logprob: -11.752307891845703
    8. ' input' → logprob: -12.627307891845703
    9. '  ' → logprob: -13.252307891845703
    10. 'n' → logprob: -13.377307891845703

Token 183: ' #' (ID: 1069)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.4371925890445709
    2. 'H' → logprob: -1.0621925592422485
    3. '   ' → logprob: -5.187192440032959
    4. ' import' → logprob: -6.812192440032959
    5. ' n' → logprob: -6.937192440032959
    6. 'n' → logprob: -7.937192440032959
    7. 'import' → logprob: -8.062192916870117
    8. '#' (adapté à ' #') → logprob: -11.062192916870117
    9. ' #' → logprob: -11.062192916870117
    10. ' ' → logprob: -11.187192916870117

Token 184: ' Lecture' (ID: 106534)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.3240698277950287
    2. ' H' → logprob: -1.324069857597351
    3. '#' → logprob: -5.324069976806641
    4. '   ' → logprob: -5.449069976806641
    5. ' #' → logprob: -7.574069976806641
    6. 'import' → logprob: -8.32406997680664
    7. ' import' → logprob: -9.19906997680664
    8. ' ' → logprob: -9.32406997680664
    9. 'T' → logprob: -9.57406997680664
    10. 'A' → logprob: -9.69906997680664

Token 185: ' des' (ID: 731)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00286300852894783
    2. '   ' → logprob: -6.002862930297852
    3. ' des' → logprob: -8.377862930297852
    4. '<|end|>' → logprob: -10.377862930297852
    5. ' ()' → logprob: -11.377862930297852
    6. '    ' → logprob: -11.502862930297852
    7. '  ' → logprob: -11.502862930297852
    8. 'des' → logprob: -11.877862930297852
    9. 'import' → logprob: -11.877862930297852
    10. 's' → logprob: -12.002862930297852

Token 186: ' données' (ID: 30580)
  Prédit: ' données'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' données' → logprob: -0.4048655927181244
    2. ' valeurs' → logprob: -1.5298656225204468
    3. ' entr' → logprob: -3.1548655033111572
    4. 'val' → logprob: -3.9048655033111572
    5. ' inputs' → logprob: -4.279865741729736
    6. 'entr' → logprob: -4.404865741729736
    7. ' paramètres' → logprob: -4.529865741729736
    8. 'inputs' → logprob: -5.779865741729736
    9. 'entrée' → logprob: -5.904865741729736
    10. 'import' → logprob: -6.279865741729736

Token 187: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001280714524909854
    2. '    
' → logprob: -8.126280784606934
    3. '```' → logprob: -8.126280784606934
    4. ' H' → logprob: -9.001280784606934
    5. 'H' → logprob: -9.126280784606934
    6. 'import' → logprob: -9.376280784606934
    7. '  ' → logprob: -9.501280784606934
    8. '
' → logprob: -9.626280784606934
    9. 'n' → logprob: -10.001280784606934
    10. '(H' → logprob: -10.376280784606934

Token 188: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010235155932605267
    2. ' H' → logprob: -5.13523530960083
    3. 'H' → logprob: -5.63523530960083
    4. '    
' → logprob: -7.88523530960083
    5. 'import' → logprob: -8.510234832763672
    6. 'n' → logprob: -9.760234832763672
    7. '```' → logprob: -11.010234832763672
    8. '(H' → logprob: -11.135234832763672
    9. '	H' → logprob: -11.260234832763672
    10. 'def' → logprob: -11.635234832763672

Token 189: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' (adapté à ' H') → logprob: -0.6932985782623291
    2. ' H' → logprob: -0.6932985782623291
    3. '   ' → logprob: -8.94329833984375
    4. 'import' → logprob: -12.19329833984375
    5. ' import' → logprob: -12.31829833984375
    6. ' ' → logprob: -12.69329833984375
    7. ' n' → logprob: -12.94329833984375
    8. 'n' → logprob: -12.94329833984375
    9. '	H' → logprob: -14.19329833984375
    10. '```' → logprob: -14.56829833984375

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02901764214038849
    2. ' =' → logprob: -4.029017448425293
    3. '=' → logprob: -4.529017448425293
    4. '=int' → logprob: -11.404017448425293
    5. ' ,' → logprob: -12.529017448425293
    6. '=input' → logprob: -14.279017448425293
    7. ',A' → logprob: -14.779017448425293
    8. ')' → logprob: -15.279017448425293
    9. 's' → logprob: -15.654017448425293
    10. '.' → logprob: -15.779017448425293

Token 191: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.04300912097096443
    2. ' A' → logprob: -3.168009042739868
    3. ' ' → logprob: -11.793008804321289
    4. '  ' → logprob: -13.918008804321289
    5. ' =' → logprob: -14.543008804321289
    6. '   ' → logprob: -15.293008804321289
    7. '=' → logprob: -15.918008804321289
    8. 'a' → logprob: -16.04300880432129
    9. '<|end|>' → logprob: -16.41800880432129
    10. ')' → logprob: -16.66800880432129

Token 192: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.127333340875339e-06
    2. ' ,' → logprob: -13.000003814697266
    3. '=' → logprob: -14.000003814697266
    4. ' =' → logprob: -14.125003814697266
    5. ',B' → logprob: -15.250003814697266
    6. 'B' → logprob: -18.750003814697266
    7. '<|end|>' → logprob: -19.750003814697266
    8. '_,' → logprob: -20.375003814697266
    9. ',input' → logprob: -20.625003814697266
    10. '‌,' → logprob: -20.625003814697266

Token 193: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.011049943044781685
    2. ' B' → logprob: -4.511049747467041
    3. ' ' → logprob: -13.2610502243042
    4. '   ' → logprob: -15.2610502243042
    5. '  ' → logprob: -16.386049270629883
    6. '<|end|>' → logprob: -17.886049270629883
    7. ' and' → logprob: -18.136049270629883
    8. ' =' → logprob: -18.261049270629883
    9. '    ' → logprob: -18.886049270629883
    10. 'b' → logprob: -19.011049270629883

Token 194: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022615134716034
    2. ' =' → logprob: -1.9102261066436768
    3. '=input' → logprob: -13.285225868225098
    4. '=int' → logprob: -16.410226821899414
    5. '=list' → logprob: -16.535226821899414
    6. ' ' → logprob: -17.160226821899414
    7. ')' → logprob: -17.410226821899414
    8. ',' → logprob: -17.910226821899414
    9. '=line' → logprob: -18.035226821899414
    10. '   ' → logprob: -18.160226821899414

Token 195: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.6932410597801208
    2. ' map' → logprob: -0.6932410597801208
    3. ' ' → logprob: -10.818241119384766
    4. '10' → logprob: -10.818241119384766
    5. '0' → logprob: -11.318241119384766
    6. '[' → logprob: -11.443241119384766
    7. '1' → logprob: -11.943241119384766
    8. '	map' → logprob: -12.943241119384766
    9. '20' → logprob: -13.193241119384766
    10. '5' → logprob: -13.318241119384766

Token 196: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0004897649050690234
    2. '(input' → logprob: -8.000490188598633
    3. '(' → logprob: -9.125490188598633
    4. 'int' → logprob: -10.125490188598633
    5. 'input' → logprob: -12.625490188598633
    6. '(str' → logprob: -13.625490188598633
    7. '<int' → logprob: -15.000490188598633
    8. ' int' → logprob: -15.875490188598633
    9. '=int' → logprob: -16.250490188598633
    10. '(
' → logprob: -16.250490188598633

Token 197: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.43148884177207947
    2. '(input' → logprob: -1.1814888715744019
    3. ',input' → logprob: -3.1814887523651123
    4. ')' → logprob: -7.181488990783691
    5. ',' → logprob: -7.181488990783691
    6. ' input' → logprob: -7.681488990783691
    7. '=input' → logprob: -9.681488990783691
    8. '(' → logprob: -10.681488990783691
    9. '   ' → logprob: -11.056488990783691
    10. '<input' → logprob: -11.806488990783691

Token 198: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005233882926404476
    2. ' input' → logprob: -5.2552337646484375
    3. '   ' → logprob: -16.880233764648438
    4. '(input' → logprob: -17.880233764648438
    5. ' ' → logprob: -18.005233764648438
    6. '	input' → logprob: -18.755233764648438
    7. '=input' → logprob: -19.130233764648438
    8. ',input' → logprob: -19.630233764648438
    9. '```' → logprob: -20.130233764648438
    10. '<input' → logprob: -20.880233764648438

Token 199: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9266199160483666e-05
    2. '()' → logprob: -10.875019073486328
    3. ' ().' → logprob: -15.750019073486328
    4. '("' → logprob: -17.125019073486328
    5. '('' → logprob: -18.125019073486328
    6. '(' → logprob: -18.500019073486328
    7. '())' → logprob: -18.750019073486328
    8. '().'' → logprob: -19.250019073486328
    9. '()
' → logprob: -19.375019073486328
    10. '("").' → logprob: -19.500019073486328

Token 200: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020413640595506877
    2. 'strip' → logprob: -8.500204086303711
    3. ' split' → logprob: -15.000204086303711
    4. 'rstrip' → logprob: -16.12520408630371
    5. '(split' → logprob: -16.37520408630371
    6. '().' → logprob: -17.87520408630371
    7. 'read' → logprob: -18.50020408630371
    8. 'spl' → logprob: -19.37520408630371
    9. '_split' → logprob: -19.62520408630371
    10. '.split' → logprob: -19.87520408630371

Token 201: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0018384411232545972
    2. '()' → logprob: -6.751838207244873
    3. ')' → logprob: -7.501838207244873
    4. '('' → logprob: -9.626838684082031
    5. '()))' → logprob: -10.251838684082031
    6. '(' → logprob: -11.626838684082031
    7. '())
' → logprob: -13.376838684082031
    8. '("' → logprob: -13.626838684082031
    9. ' ())' → logprob: -13.876838684082031
    10. '))' → logprob: -14.001838684082031

Token 202: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004376597702503204
    2. 'print' → logprob: -6.379376411437988
    3. 'count' → logprob: -6.754376411437988
    4. '    
' → logprob: -7.129376411437988
    5. '
' → logprob: -7.879376411437988
    6. 'result' → logprob: -8.129376411437988
    7. '```' → logprob: -11.629376411437988
    8. '  
' → logprob: -11.879376411437988
    9. '<|end|>' → logprob: -12.629376411437988
    10. 'output' → logprob: -13.004376411437988

Token 203: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12533031404018402
    2. 'result' → logprob: -2.5003302097320557
    3. 'count' → logprob: -3.5003302097320557
    4. '   ' → logprob: -5.750330448150635
    5. ' print' → logprob: -6.625330448150635
    6. 'options' → logprob: -7.750330448150635
    7. 'n' → logprob: -8.625329971313477
    8. ' result' → logprob: -8.875329971313477
    9. 'res' → logprob: -9.125329971313477
    10. '    
' → logprob: -10.000329971313477

Token 204: ' Calcul' (ID: 57243)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004766411148011684
    2. 'result' → logprob: -5.754766464233398
    3. ' print' → logprob: -6.504766464233398
    4. 'options' → logprob: -9.504766464233398
    5. 'res' → logprob: -12.004766464233398
    6. ' result' → logprob: -12.129766464233398
    7. ' options' → logprob: -12.879766464233398
    8. '   ' → logprob: -14.504766464233398
    9. 'count' → logprob: -14.504766464233398
    10. 'option' → logprob: -14.879766464233398

Token 205: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004152599256485701
    2. 'result' → logprob: -5.629152774810791
    3. ' result' → logprob: -8.254152297973633
    4. 'count' → logprob: -8.754152297973633
    5. 'print' → logprob: -9.629152297973633
    6. '  ' → logprob: -11.004152297973633
    7. ' count' → logprob: -11.504152297973633
    8. ' print' → logprob: -11.629152297973633
    9. '<|end|>' → logprob: -12.254152297973633
    10. '    ' → logprob: -12.754152297973633

Token 206: ' sortie' (ID: 52761)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4741126298904419
    2. ' print' → logprob: -0.9741126298904419
    3. '   ' → logprob: -10.599112510681152
    4. ' affich' → logprob: -11.849112510681152
    5. 'aff' → logprob: -13.349112510681152
    6. 'r' → logprob: -14.599112510681152
    7. '    ' → logprob: -14.974112510681152
    8. ' impression' → logprob: -15.349112510681152
    9. '	print' → logprob: -16.22411346435547
    10. 'result' → logprob: -16.22411346435547

Token 207: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.31608128547668457
    2. '   ' → logprob: -1.3160812854766846
    3. 'result' → logprob: -6.5660810470581055
    4. ' print' → logprob: -6.6910810470581055
    5. 'count' → logprob: -9.566081047058105
    6. '(print' → logprob: -9.941081047058105
    7. '(' → logprob: -10.816081047058105
    8. '```' → logprob: -11.691081047058105
    9. '	print' → logprob: -12.316081047058105
    10. ' result' → logprob: -12.566081047058105

Token 208: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.38748899102211
    2. 'count' → logprob: -1.1374889612197876
    3. 'print' → logprob: -7.762488842010498
    4. 'nombre' → logprob: -9.137489318847656
    5. ' count' → logprob: -10.012489318847656
    6. ' résultat' → logprob: -10.762489318847656
    7. ' result' → logprob: -11.637489318847656
    8. ' resultat' → logprob: -12.762489318847656
    9. 'results' → logprob: -13.137489318847656
    10. ' nombre' → logprob: -13.387489318847656

Token 209: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0065732612274587154
    2. 'print' → logprob: -5.13157320022583
    3. ' print' → logprob: -7.38157320022583
    4. '```' → logprob: -11.381573677062988
    5. 'result' → logprob: -12.006573677062988
    6. '    
' → logprob: -13.256573677062988
    7. ' result' → logprob: -13.756573677062988
    8. '
' → logprob: -14.381573677062988
    9. '	print' → logprob: -15.631573677062988
    10. ')' → logprob: -15.631573677062988

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10248972475528717
    2. 'print' → logprob: -2.352489709854126
    3. ' print' → logprob: -6.102489948272705
    4. 'result' → logprob: -10.227489471435547
    5. '```' → logprob: -12.352489471435547
    6. ' result' → logprob: -12.977489471435547
    7. 'count' → logprob: -15.477489471435547
    8. '	print' → logprob: -16.102489471435547
    9. '    
' → logprob: -16.602489471435547
    10. '   ' → logprob: -17.227489471435547

Token 211: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.0445127372804563e-05
    2. ' print' → logprob: -11.50001049041748
    3. '   ' → logprob: -15.37501049041748
    4. 'result' → logprob: -19.000009536743164
    5. '```' → logprob: -20.000009536743164
    6. '
' → logprob: -20.750009536743164
    7. 'count' → logprob: -22.125009536743164
    8. '	print' → logprob: -22.125009536743164
    9. '    
' → logprob: -22.375009536743164
    10. '#print' → logprob: -24.000009536743164

Token 212: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.00020449401927180588
    2. '(' → logprob: -8.500204086303711
    3. 'count' → logprob: -13.875204086303711
    4. '(
' → logprob: -17.50020408630371
    5. '=count' → logprob: -19.37520408630371
    6. '(c' → logprob: -19.50020408630371
    7. '(

' → logprob: -19.75020408630371
    8. ' count' → logprob: -19.87520408630371
    9. ' (' → logprob: -20.37520408630371
    10. '<count' → logprob: -21.00020408630371

Token 213: '_floor' (ID: 152330)
  Prédit: '_floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_floor' → logprob: -4.320199877838604e-07
    2. 'floor' → logprob: -15.375
    3. '_' → logprob: -16.5
    4. ')_' → logprob: -17.25
    5. ')' → logprob: -17.375
    6. 'Floor' → logprob: -18.375
    7. ' floor' → logprob: -19.875
    8. '_f' → logprob: -20.375
    9. '_)' → logprob: -20.625
    10. '```' → logprob: -20.75

Token 214: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -0.20141607522964478
    2. '_floor' → logprob: -1.701416015625
    3. '_' → logprob: -13.451416015625
    4. 'height' → logprob: -13.951416015625
    5. 'floor' → logprob: -15.201416015625
    6. '_he' → logprob: -16.826416015625
    7. '_size' → logprob: -17.326416015625
    8. '_f' → logprob: -17.451416015625
    9. '_width' → logprob: -17.576416015625
    10. '_length' → logprob: -17.951416015625

Token 215: '_options' (ID: 19793)
  Prédit: '_options'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_options' → logprob: -0.0007363698096014559
    2. 'options' → logprob: -7.250736236572266
    3. 'Options' → logprob: -10.875736236572266
    4. ')' → logprob: -12.750736236572266
    5. '(H' → logprob: -13.375736236572266
    6. ' options' → logprob: -13.750736236572266
    7. '_choices' → logprob: -14.125736236572266
    8. 's' → logprob: -14.250736236572266
    9. '_OPTIONS' → logprob: -15.750736236572266
    10. ')_' → logprob: -16.375736236572266

Token 216: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -2.856408536899835e-05
    2. '(' → logprob: -10.500028610229492
    3. ')' → logprob: -14.000028610229492
    4. ' (' → logprob: -15.625028610229492
    5. '(
' → logprob: -17.500028610229492
    6. ')(' → logprob: -18.375028610229492
    7. '```' → logprob: -20.875028610229492
    8. '(C' → logprob: -20.875028610229492
    9. '((' → logprob: -21.000028610229492
    10. '(D' → logprob: -21.000028610229492

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.511406809295295e-06
    2. ' ,' → logprob: -12.375006675720215
    3. ',H' → logprob: -13.500006675720215
    4. ',A' → logprob: -14.375006675720215
    5. 'A' → logprob: -15.875006675720215
    6. 'H' → logprob: -16.8750057220459
    7. ',
' → logprob: -16.8750057220459
    8. ')' → logprob: -17.1250057220459
    9. '```' → logprob: -18.0000057220459
    10. '   ' → logprob: -18.3750057220459

Token 218: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.20141352713108063
    2. ' A' → logprob: -1.7014135122299194
    3. ' ' → logprob: -15.95141315460205
    4. ')' → logprob: -16.826414108276367
    5. '	A' → logprob: -16.951414108276367
    6. 'B' → logprob: -17.076414108276367
    7. '   ' → logprob: -17.451414108276367
    8. ',A' → logprob: -19.076414108276367
    9. '  ' → logprob: -19.201414108276367
    10. ' B' → logprob: -19.451414108276367

Token 219: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1994775377388578e-05
    2. ' ,' → logprob: -12.000012397766113
    3. ',B' → logprob: -12.125012397766113
    4. ',
' → logprob: -16.000011444091797
    5. '   ' → logprob: -16.375011444091797
    6. ')' → logprob: -16.625011444091797
    7. ',

' → logprob: -17.500011444091797
    8. ' ' → logprob: -18.562511444091797
    9. ',b' → logprob: -18.687511444091797
    10. '，' → logprob: -18.812511444091797

Token 220: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.04858759790658951
    2. ' B' → logprob: -3.0485875606536865
    3. ' ' → logprob: -16.048587799072266
    4. ')' → logprob: -17.173587799072266
    5. '   ' → logprob: -17.298587799072266
    6. ' ' → logprob: -17.673587799072266
    7. '	B' → logprob: -17.798587799072266
    8. '_B' → logprob: -18.923587799072266
    9. '```' → logprob: -19.173587799072266
    10. '>B' → logprob: -19.673587799072266

Token 221: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0067156096920371056
    2. ')' → logprob: -5.006715774536133
    3. ')))' → logprob: -15.631715774536133
    4. '))
' → logprob: -16.506715774536133
    5. '()))' → logprob: -18.506715774536133
    6. ')
' → logprob: -18.631715774536133
    7. ' ))' → logprob: -18.756715774536133
    8. ')}' → logprob: -19.131715774536133
    9. '),' → logprob: -19.131715774536133
    10. '})' → logprob: -19.506715774536133

Token 222: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.999452772201039e-05
    2. ' if' → logprob: -10.875029563903809
    3. '#' → logprob: -12.375029563903809
    4. '```' → logprob: -12.625029563903809
    5. '
' → logprob: -13.500029563903809
    6. '<|end|>' → logprob: -13.750029563903809
    7. 'main' → logprob: -14.375029563903809
    8. '\n' → logprob: -15.625029563903809
    9. '\' → logprob: -16.375030517578125
    10. 'print' → logprob: -17.000030517578125

Token 223: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.061476584523916245
    2. '__' → logprob: -2.936476469039917
    3. '_' → logprob: -5.186476707458496
    4. ' ' → logprob: -7.561476707458496
    5. '_name' → logprob: -8.436476707458496
    6. ' _' → logprob: -9.061476707458496
    7. ' ' → logprob: -10.186476707458496
    8. ' ' → logprob: -10.811476707458496
    9. '___' → logprob: -11.436476707458496
    10. 'name' → logprob: -11.561476707458496

Token 224: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.015912124887108803
    2. ' ==' → logprob: -4.515912055969238
    3. '==' → logprob: -5.515912055969238
    4. ' __' → logprob: -7.265912055969238
    5. '_' → logprob: -9.890912055969238
    6. '=="' → logprob: -9.890912055969238
    7. '__.__' → logprob: -11.765912055969238
    8. '=='' → logprob: -12.265912055969238
    9. '___' → logprob: -12.515912055969238
    10. ' =="' → logprob: -12.765912055969238

Token 225: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.696889623621246e-06
    2. '==' → logprob: -13.00000286102295
    3. ' ==' → logprob: -16.250001907348633
    4. '__.__' → logprob: -16.250001907348633
    5. '___' → logprob: -16.625001907348633
    6. '____' → logprob: -17.875001907348633
    7. ' __' → logprob: -18.500001907348633
    8. '__.' → logprob: -18.875001907348633
    9. '_' → logprob: -19.125001907348633
    10. '=="' → logprob: -19.375001907348633

Token 226: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25961267948150635
    2. '__' → logprob: -1.7596126794815063
    3. '==' → logprob: -2.884612560272217
    4. '=="' → logprob: -7.509612560272217
    5. '=='' → logprob: -9.759613037109375
    6. ' =="' → logprob: -10.759613037109375
    7. '_' → logprob: -11.134613037109375
    8. '___' → logprob: -11.634613037109375
    9. ' __' → logprob: -12.884613037109375
    10. ' =' → logprob: -13.384613037109375

Token 227: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10028549283742905
    2. ''' → logprob: -2.350285530090332
    3. ' "__' → logprob: -9.725285530090332
    4. '__' → logprob: -10.975285530090332
    5. ' '__' → logprob: -13.225285530090332
    6. '"_' → logprob: -16.725284576416016
    7. '"user' → logprob: -16.850284576416016
    8. '("__' → logprob: -17.350284576416016
    9. '('__' → logprob: -17.850284576416016
    10. '"name' → logprob: -17.850284576416016

Token 228: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0022166306152939796
    2. '__' → logprob: -6.127216815948486
    3. '_main' → logprob: -10.627216339111328
    4. 'name' → logprob: -12.127216339111328
    5. ' main' → logprob: -14.752216339111328
    6. 'm' → logprob: -15.127216339111328
    7. '__":
' → logprob: -15.252216339111328
    8. 'built' → logprob: -15.627216339111328
    9. '___' → logprob: -16.502216339111328
    10. 'python' → logprob: -16.502216339111328

Token 229: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3875117599964142
    2. '__":
' → logprob: -1.1375117301940918
    3. '__.' → logprob: -7.762511730194092
    4. '__["' → logprob: -8.76251220703125
    5. '__.__' → logprob: -10.38751220703125
    6. '__':
' → logprob: -11.01251220703125
    7. '__
' → logprob: -12.88751220703125
    8. '__:' → logprob: -13.26251220703125
    9. '__("' → logprob: -13.26251220703125
    10. '_' → logprob: -13.76251220703125

Token 230: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.05408269539475441
    2. '"' → logprob: -3.5540826320648193
    3. '__' → logprob: -3.8040826320648193
    4. ' main' → logprob: -6.804082870483398
    5. '   ' → logprob: -7.929082870483398
    6. ''' → logprob: -8.429082870483398
    7. '	main' → logprob: -9.929082870483398
    8. ' ' → logprob: -11.554082870483398
    9. ' "__' → logprob: -12.679082870483398
    10. '_main' → logprob: -12.679082870483398

Token 231: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.306760805164231e-05
    2. ' main' → logprob: -11.25001335144043
    3. '	main' → logprob: -18.37501335144043
    4. '   ' → logprob: -19.50001335144043
    5. '.main' → logprob: -23.37501335144043
    6. '_main' → logprob: -23.50001335144043
    7. 'mai' → logprob: -23.62501335144043
    8. '(main' → logprob: -23.75001335144043
    9. ' ' → logprob: -23.87501335144043
    10. 'ma' → logprob: -24.00001335144043

Token 232: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 230
Tokens correctement prédits (1ère position, stricte): 90
Tokens correctement prédits (1ère position, avec adaptation): 96
Tokens correctement prédits (top 10): 163
Précision stricte (1ère position): 39.13%
Précision adaptée (1ère position): 41.74%
Précision (top 10): 70.87%
================================================================================
