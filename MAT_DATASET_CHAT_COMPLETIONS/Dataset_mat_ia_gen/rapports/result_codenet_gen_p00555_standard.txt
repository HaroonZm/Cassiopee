================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:15:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N,M,D=map(int,input().split())
S=[input() for _ in range(N)]
res=0
if D==1:
    for i in range(N):
        for j in range(M):
            if S[i][j]=='.':
                res+=1
else:
    for i in range(N):
        count=0
        for j in range(M):
            if S[i][j]=='.':
                count+=1
            else:
                count=0
            if count>=D:
                res+=1
    for j in range(M):
        count=0
        for i in range(N):
            if S[i][j]=='.':
                count+=1
            else:
                count=0
            if count>=D:
                res+=1
print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',M' (ID: 54127)
  → Token d'amorce (pas de prédiction)

Token 2: ',D' (ID: 61507)
  → Token d'amorce (pas de prédiction)

Token 3: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07181055843830109
    2. ' =' → logprob: -3.071810483932495
    3. ',' → logprob: -3.821810483932495
    4. '```' → logprob: -7.071810722351074
    5. ')' → logprob: -10.071810722351074
    6. '[' → logprob: -10.571810722351074
    7. ';' → logprob: -10.571810722351074
    8. '<|end|>' → logprob: -10.821810722351074
    9. '=
' → logprob: -11.196810722351074
    10. ',
' → logprob: -11.571810722351074

Token 4: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.18869462609291077
    2. ' map' → logprob: -1.8136945962905884
    3. 'input' → logprob: -4.938694477081299
    4. '0' → logprob: -7.313694477081299
    5. '10' → logprob: -7.813694477081299
    6. 'list' → logprob: -8.313694953918457
    7. ' input' → logprob: -8.563694953918457
    8. 'int' → logprob: -9.188694953918457
    9. ' ' → logprob: -9.438694953918457
    10. ' list' → logprob: -10.938694953918457

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08090271055698395
    2. '<|end|>' → logprob: -3.0809028148651123
    3. '(int' → logprob: -3.9559028148651123
    4. '```' → logprob: -5.455902576446533
    5. '(lambda' → logprob: -5.580902576446533
    6. '(str' → logprob: -6.830902576446533
    7. '(input' → logprob: -7.205902576446533
    8. ')' → logprob: -7.955902576446533
    9. '(len' → logprob: -8.330903053283691
    10. '(eval' → logprob: -8.455903053283691

Token 6: ',input' (ID: 123014)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6343822479248047
    2. '(input' → logprob: -1.2593822479248047
    3. '(' → logprob: -1.7593822479248047
    4. '(int' → logprob: -5.634382247924805
    5. '(data' → logprob: -6.009382247924805
    6. ')(' → logprob: -6.384382247924805
    7. '(str' → logprob: -7.134382247924805
    8. '<|end|>' → logprob: -7.134382247924805
    9. '```' → logprob: -8.009382247924805
    10. '`)' → logprob: -8.009382247924805

Token 7: '().' (ID: 1454)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42047977447509766
    2. '())' → logprob: -1.2954797744750977
    3. '()' → logprob: -3.1704797744750977
    4. '<|end|>' → logprob: -5.170479774475098
    5. '(' → logprob: -5.545479774475098
    6. '`)' → logprob: -5.670479774475098
    7. '`()' → logprob: -6.045479774475098
    8. '().' → logprob: -6.670479774475098
    9. '();)' → logprob: -6.670479774475098
    10. '('' → logprob: -7.045479774475098

Token 8: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.5252596464706585e-05
    2. 'strip' → logprob: -10.250044822692871
    3. 'rstrip' → logprob: -12.375044822692871
    4. ')' → logprob: -12.500044822692871
    5. ' split' → logprob: -13.875044822692871
    6. '(split' → logprob: -14.625044822692871
    7. 'spl' → logprob: -15.000044822692871
    8. 'read' → logprob: -16.000045776367188
    9. '```' → logprob: -17.125045776367188
    10. 'startswith' → logprob: -17.500045776367188

Token 9: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002301674336194992
    2. '`)' → logprob: -6.8773016929626465
    3. '())' → logprob: -7.2523016929626465
    4. '(' → logprob: -8.252301216125488
    5. '))' → logprob: -8.877301216125488
    6. '()' → logprob: -10.502301216125488
    7. '')' → logprob: -10.752301216125488
    8. ')`' → logprob: -10.877301216125488
    9. '```' → logprob: -11.252301216125488
    10. '`' → logprob: -11.502301216125488

Token 10: 'S' (ID: 50)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.52715665102005
    2. 'for' → logprob: -1.4021565914154053
    3. '\n' → logprob: -2.9021565914154053
    4. 'a' → logprob: -3.2771565914154053
    5. '' → logprob: -4.277156829833984
    6. '```' → logprob: -4.402156829833984
    7. '[' → logprob: -4.527156829833984
    8. ' 
' → logprob: -5.652156829833984
    9. '`' → logprob: -5.652156829833984
    10. '#' → logprob: -5.777156829833984

Token 11: '=[' (ID: 13370)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3191150426864624
    2. '=' → logprob: -1.9441150426864624
    3. '.' → logprob: -2.319115161895752
    4. '_' → logprob: -4.694115161895752
    5. ' =' → logprob: -4.819115161895752
    6. ',' → logprob: -5.819115161895752
    7. 'u' → logprob: -6.569115161895752
    8. '[:]' → logprob: -6.819115161895752
    9. '[i' → logprob: -6.944115161895752
    10. 'p' → logprob: -7.194115161895752

Token 12: 'input' (ID: 2586)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07150474190711975
    2. 'list' → logprob: -2.821504831314087
    3. '0' → logprob: -5.571504592895508
    4. 'input' → logprob: -5.821504592895508
    5. 'tuple' → logprob: -6.446504592895508
    6. '[]' → logprob: -7.696504592895508
    7. 'map' → logprob: -8.071504592895508
    8. ']' → logprob: -8.946504592895508
    9. '(int' → logprob: -9.446504592895508
    10. ' int' → logprob: -10.071504592895508

Token 13: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.03852887079119682
    2. '()' → logprob: -3.4135289192199707
    3. '())' → logprob: -5.413528919219971
    4. '().' → logprob: -8.288528442382812
    5. '(' → logprob: -9.913528442382812
    6. '()].' → logprob: -10.538528442382812
    7. '()>' → logprob: -10.913528442382812
    8. ']()' → logprob: -11.038528442382812
    9. '()][' → logprob: -11.163528442382812
    10. '()}' → logprob: -12.038528442382812

Token 14: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2802148163318634
    2. ')' → logprob: -1.530214786529541
    3. '())' → logprob: -4.030214786529541
    4. '()]' → logprob: -5.030214786529541
    5. 'for' → logprob: -6.405214786529541
    6. ')]' → logprob: -6.530214786529541
    7. ' for' → logprob: -8.7802152633667
    8. ']' → logprob: -9.2802152633667
    9. '().' → logprob: -10.0302152633667
    10. '")' → logprob: -10.2802152633667

Token 15: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.000546718598343432
    2. '_' → logprob: -8.5005464553833
    3. ' _' → logprob: -8.7505464553833
    4. '_range' → logprob: -9.6255464553833
    5. ' i' → logprob: -10.0005464553833
    6. ' ' → logprob: -10.3755464553833
    7. 'range' → logprob: -11.0005464553833
    8. '(range' → logprob: -11.1255464553833
    9. ' in' → logprob: -12.5005464553833
    10. '	range' → logprob: -12.7505464553833

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14268869161605835
    2. 'in' → logprob: -2.142688751220703
    3. ' range' → logprob: -4.642688751220703
    4. 'range' → logprob: -5.142688751220703
    5. ' ' → logprob: -9.392688751220703
    6. '_' → logprob: -10.142688751220703
    7. '_range' → logprob: -11.517688751220703
    8. '	range' → logprob: -11.767688751220703
    9. '  ' → logprob: -12.517688751220703
    10. 'ange' → logprob: -13.017688751220703

Token 17: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008614808320999146
    2. ' range' → logprob: -4.758615016937256
    3. '(range' → logprob: -15.383614540100098
    4. '	range' → logprob: -18.258615493774414
    5. '.range' → logprob: -19.508615493774414
    6. '[' → logprob: -20.133615493774414
    7. '```' → logprob: -20.633615493774414
    8. 'N' → logprob: -20.633615493774414
    9. '[N' → logprob: -21.133615493774414
    10. ')' → logprob: -21.133615493774414

Token 18: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0024894531816244125
    2. '(' → logprob: -6.2524895668029785
    3. '(M' → logprob: -7.5024895668029785
    4. '(n' → logprob: -12.75248908996582
    5. '(D' → logprob: -12.87748908996582
    6. ' (' → logprob: -13.62748908996582
    7. 'N' → logprob: -14.12748908996582
    8. '(int' → logprob: -14.62748908996582
    9. '(len' → logprob: -14.87748908996582
    10. '(
' → logprob: -14.87748908996582

Token 19: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0003864630125463009
    2. ')' → logprob: -8.125386238098145
    3. ']' → logprob: -9.625386238098145
    4. ')])' → logprob: -11.125386238098145
    5. '])]' → logprob: -12.125386238098145
    6. '])' → logprob: -13.625386238098145
    7. '')]' → logprob: -13.875386238098145
    8. ' )' → logprob: -14.500386238098145
    9. ')],' → logprob: -15.000386238098145
    10. '）' → logprob: -15.500386238098145

Token 20: 'res' (ID: 430)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.027927836403250694
    2. 'result' → logprob: -4.777927875518799
    3. 'ans' → logprob: -5.152927875518799
    4. 'd' → logprob: -6.152927875518799
    5. '```' → logprob: -6.527927875518799
    6. 'count' → logprob: -6.777927875518799
    7. '
' → logprob: -7.277927875518799
    8. 'res' → logprob: -7.277927875518799
    9. 'answer' → logprob: -7.402927875518799
    10. 'dp' → logprob: -7.527927875518799

Token 21: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48069971799850464
    2. '=' → logprob: -0.9806997179985046
    3. '_' → logprob: -5.85569953918457
    4. ' ' → logprob: -6.23069953918457
    5. '=[]' → logprob: -6.98069953918457
    6. '.' → logprob: -7.85569953918457
    7. '[' → logprob: -9.23069953918457
    8. 's' → logprob: -9.23069953918457
    9. '[:]' → logprob: -9.98069953918457
    10. ',' → logprob: -10.48069953918457

Token 22: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2071569859981537
    2. '[]' → logprob: -2.3321568965911865
    3. '""' → logprob: -3.7071568965911865
    4. '[' → logprob: -3.8321568965911865
    5. '"' → logprob: -4.332157135009766
    6. '''' → logprob: -4.707157135009766
    7. 'set' → logprob: -4.957157135009766
    8. '["' → logprob: -5.332157135009766
    9. '['' → logprob: -6.082157135009766
    10. ''' → logprob: -6.332157135009766

Token 23: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5993290543556213
    2. '
' → logprob: -1.3493289947509766
    3. ' for' → logprob: -2.2243289947509766
    4. '\n' → logprob: -2.8493289947509766
    5. '<|end|>' → logprob: -3.9743289947509766
    6. '' → logprob: -6.224328994750977
    7. ' 
' → logprob: -6.349328994750977
    8. '\' → logprob: -6.974328994750977
    9. ' ' → logprob: -7.224328994750977
    10. '```' → logprob: -7.974328994750977

Token 24: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24057066440582275
    2. '\n' → logprob: -1.9905706644058228
    3. '
' → logprob: -2.990570545196533
    4. ' for' → logprob: -3.740570545196533
    5. '<|end|>' → logprob: -6.740570545196533
    6. '\' → logprob: -7.240570545196533
    7. '```' → logprob: -7.240570545196533
    8. ' 
' → logprob: -8.615571022033691
    9. '' → logprob: -8.990571022033691
    10. ' ' → logprob: -9.865571022033691

Token 25: ' D' (ID: 415)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.9764653444290161
    2. ' D' → logprob: -1.2264653444290161
    3. ' S' → logprob: -2.4764652252197266
    4. 'N' → logprob: -2.8514652252197266
    5. ' ' → logprob: -2.8514652252197266
    6. ' M' → logprob: -3.1014652252197266
    7. 'D' → logprob: -3.1014652252197266
    8. 'S' → logprob: -4.601465225219727
    9. ' res' → logprob: -4.851465225219727
    10. ' all' → logprob: -4.851465225219727

Token 26: '==' (ID: 560)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5381162762641907
    2. '>' → logprob: -1.913116216659546
    3. ' ==' → logprob: -2.288116216659546
    4. '==' → logprob: -2.913116216659546
    5. ' <' → logprob: -3.038116216659546
    6. ' <=' → logprob: -3.413116216659546
    7. ' >=' → logprob: -4.413116455078125
    8. '<=' → logprob: -5.038116455078125
    9. '<' → logprob: -5.538116455078125
    10. ' ' → logprob: -5.663116455078125

Token 27: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16712316870689392
    2. '1' → logprob: -1.9171231985092163
    3. ' ' → logprob: -5.542123317718506
    4. '2' → logprob: -6.292123317718506
    5. '3' → logprob: -7.667123317718506
    6. '7' → logprob: -8.542122840881348
    7. ''' → logprob: -9.542122840881348
    8. '4' → logprob: -9.792122840881348
    9. '5' → logprob: -10.042122840881348
    10. '-' → logprob: -10.104622840881348

Token 28: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004983438993804157
    2. ' :' → logprob: -7.875498294830322
    3. ':
' → logprob: -9.12549877166748
    4. ' and' → logprob: -12.12549877166748
    5. ':

' → logprob: -14.00049877166748
    6. ':return' → logprob: -14.00049877166748
    7. ' :
' → logprob: -14.37549877166748
    8. 'and' → logprob: -15.25049877166748
    9. ',' → logprob: -15.37549877166748
    10. ':def' → logprob: -15.50049877166748

Token 29: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8017207980155945
    2. ' res' → logprob: -1.3017208576202393
    3. '   ' → logprob: -2.3017208576202393
    4. '
' → logprob: -2.5517208576202393
    5. ':
' → logprob: -2.9267208576202393
    6. 'res' → logprob: -3.6767208576202393
    7. '\n' → logprob: -4.42672061920166
    8. '    
' → logprob: -5.80172061920166
    9. ' 
' → logprob: -6.67672061920166
    10. '	res' → logprob: -6.80172061920166

Token 30: ' for' (ID: 395)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.4362035095691681
    2. 'res' → logprob: -1.1862034797668457
    3. 'print' → logprob: -3.9362034797668457
    4. 'for' (adapté à ' for') → logprob: -4.561203479766846
    5. ' for' → logprob: -4.811203479766846
    6. ' print' → logprob: -4.936203479766846
    7. '\n' → logprob: -6.561203479766846
    8. '   ' → logprob: -7.811203479766846
    9. ' ' → logprob: -8.436203956604004
    10. ' \' → logprob: -8.686203956604004

Token 31: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.034925587475299835
    2. 'i' → logprob: -3.784925699234009
    3. ' ' → logprob: -5.28492546081543
    4. ' r' → logprob: -6.28492546081543
    5. ' _' → logprob: -6.40992546081543
    6. ' range' → logprob: -6.78492546081543
    7. '_' → logprob: -7.53492546081543
    8. ' s' → logprob: -7.53492546081543
    9. ' S' → logprob: -8.28492546081543
    10. 'r' → logprob: -8.28492546081543

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06468155235052109
    2. 'in' → logprob: -2.8146815299987793
    3. ' ' → logprob: -5.939681529998779
    4. 'n' → logprob: -10.814682006835938
    5. '  ' → logprob: -11.189682006835938
    6. '+' → logprob: -11.439682006835938
    7. '	in' → logprob: -12.064682006835938
    8. ' i' → logprob: -12.439682006835938
    9. ',' → logprob: -12.689682006835938
    10. 's' → logprob: -12.939682006835938

Token 33: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04859906807541847
    2. 'range' → logprob: -3.0485990047454834
    3. ' S' → logprob: -11.923599243164062
    4. 'S' → logprob: -12.548599243164062
    5. ' ' → logprob: -14.673599243164062
    6. ')' → logprob: -15.423599243164062
    7. '(range' → logprob: -16.048599243164062
    8. '	range' → logprob: -16.298599243164062
    9. ' ran' → logprob: -16.423599243164062
    10. '```' → logprob: -16.548599243164062

Token 34: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.18310512602329254
    2. '(' → logprob: -2.058105230331421
    3. '(M' → logprob: -3.433105230331421
    4. ' N' → logprob: -5.433104991912842
    5. 'N' → logprob: -7.058104991912842
    6. ' (' → logprob: -7.183104991912842
    7. ' M' → logprob: -7.683104991912842
    8. ' ' → logprob: -7.933104991912842
    9. '(D' → logprob: -8.55810546875
    10. 'M' → logprob: -8.80810546875

Token 35: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0034525298979133368
    2. ')' → logprob: -6.753452301025391
    3. '-' → logprob: -6.878452301025391
    4. '):
' → logprob: -7.003452301025391
    5. ' ):' → logprob: -8.25345230102539
    6. ':' → logprob: -9.62845230102539
    7. '+' → logprob: -12.50345230102539
    8. '):
' → logprob: -12.50345230102539
    9. ' ' → logprob: -13.37845230102539
    10. '   ' → logprob: -13.62845230102539

Token 36: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.571217954158783
    2. '       ' → logprob: -1.8212180137634277
    3. ' ' → logprob: -1.9462180137634277
    4. ' for' → logprob: -2.5712180137634277
    5. ' res' → logprob: -3.8212180137634277
    6. '    ' → logprob: -3.9462180137634277
    7. '<|end|>' → logprob: -5.821218013763428
    8. ' 
' → logprob: -6.071218013763428
    9. 'for' → logprob: -6.321218013763428
    10. '    
' → logprob: -6.946218013763428

Token 37: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.360838919878006
    2. ' res' → logprob: -1.6108388900756836
    3. 'for' (adapté à ' for') → logprob: -2.6108388900756836
    4. 'res' → logprob: -3.9858388900756836
    5. ' if' → logprob: -5.110838890075684
    6. '   ' → logprob: -5.610838890075684
    7. 'if' → logprob: -7.360838890075684
    8. ' ' → logprob: -8.485838890075684
    9. ' range' → logprob: -8.860838890075684
    10. ' S' → logprob: -9.610838890075684

Token 38: ' j' (ID: 441)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04990125074982643
    2. ' j' → logprob: -3.674901247024536
    3. 'range' → logprob: -3.799901247024536
    4. 'j' → logprob: -7.299901485443115
    5. ' ' → logprob: -8.549901008605957
    6. '(range' → logprob: -10.549901008605957
    7. ' M' → logprob: -11.174901008605957
    8. ' xrange' → logprob: -11.424901008605957
    9. '<|end|>' → logprob: -12.424901008605957
    10. ' for' → logprob: -12.674901008605957

Token 39: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007737466599792242
    2. 'in' → logprob: -5.007737636566162
    3. ' ' → logprob: -7.507737636566162
    4. '+' → logprob: -7.882737636566162
    5. '=' → logprob: -11.007737159729004
    6. '<|end|>' → logprob: -11.007737159729004
    7. '    ' → logprob: -12.007737159729004
    8. '	in' → logprob: -12.132737159729004
    9. '   ' → logprob: -12.257737159729004
    10. '(' → logprob: -12.382737159729004

Token 40: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.05489514768123627
    2. 'range' → logprob: -2.9298951625823975
    3. '(range' → logprob: -12.554895401000977
    4. ' ' → logprob: -12.679895401000977
    5. ' ran' → logprob: -13.804895401000977
    6. ' M' → logprob: -13.929895401000977
    7. ' rang' → logprob: -14.554895401000977
    8. '   ' → logprob: -14.804895401000977
    9. ' i' → logprob: -14.929895401000977
    10. '  ' → logprob: -15.054895401000977

Token 41: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.07483390718698502
    2. '(N' → logprob: -2.949833869934082
    3. '(' → logprob: -3.949833869934082
    4. '(i' → logprob: -8.074833869934082
    5. '(D' → logprob: -9.574833869934082
    6. ' (' → logprob: -10.824833869934082
    7. '(
' → logprob: -10.949833869934082
    8. '(S' → logprob: -11.324833869934082
    9. '(len' → logprob: -11.449833869934082
    10. 'M' → logprob: -11.574833869934082

Token 42: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01137223094701767
    2. '-' → logprob: -4.761372089385986
    3. '):
' → logprob: -6.011372089385986
    4. ')' → logprob: -9.261372566223145
    5. ' ):' → logprob: -9.511372566223145
    6. ':' → logprob: -10.261372566223145
    7. ' -' → logprob: -11.011372566223145
    8. 'if' → logprob: -11.136372566223145
    9. '       ' → logprob: -11.386372566223145
    10. '   ' → logprob: -11.636372566223145

Token 43: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1575354039669037
    2. ':' → logprob: -2.0325353145599365
    3. '       ' → logprob: -5.657535552978516
    4. 'if' → logprob: -5.782535552978516
    5. ':
' → logprob: -6.407535552978516
    6. ' if' → logprob: -6.907535552978516
    7. ' ' → logprob: -7.032535552978516
    8. '               ' → logprob: -7.157535552978516
    9. '            ' → logprob: -7.282535552978516
    10. 'res' → logprob: -7.657535552978516

Token 44: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.598726212978363
    2. 'res' → logprob: -1.7237262725830078
    3. ' if' → logprob: -1.7237262725830078
    4. ' res' → logprob: -2.598726272583008
    5. ' ' → logprob: -5.473726272583008
    6. '   ' → logprob: -5.473726272583008
    7. '           ' → logprob: -5.598726272583008
    8. '       ' → logprob: -6.848726272583008
    9. 'r' → logprob: -6.973726272583008
    10. '0' → logprob: -7.098726272583008

Token 45: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.42885518074035645
    2. 'S' → logprob: -1.0538551807403564
    3. ' ' → logprob: -9.928854942321777
    4. 'int' → logprob: -11.053854942321777
    5. ' int' → logprob: -11.678854942321777
    6. 'j' → logprob: -11.803854942321777
    7. ' i' → logprob: -11.803854942321777
    8. '   ' → logprob: -11.928854942321777
    9. '    ' → logprob: -12.053854942321777
    10. 'i' → logprob: -12.241354942321777

Token 46: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00025084958178922534
    2. '[j' → logprob: -8.500250816345215
    3. '[I' → logprob: -10.500250816345215
    4. '[' → logprob: -11.000250816345215
    5. '][' → logprob: -14.250250816345215
    6. ' [' → logprob: -14.750250816345215
    7. 'i' → logprob: -14.875250816345215
    8. '[
' → logprob: -15.500250816345215
    9. '[N' → logprob: -15.625250816345215
    10. '[x' → logprob: -16.12525177001953

Token 47: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.07562977075576782
    2. '][' → logprob: -2.825629711151123
    3. '[' → logprob: -4.575629711151123
    4. '[i' → logprob: -5.950629711151123
    5. ']' → logprob: -8.950630187988281
    6. ''[' → logprob: -9.075630187988281
    7. ' [' → logprob: -9.950630187988281
    8. ''][' → logprob: -10.200630187988281
    9. '[I' → logprob: -10.325630187988281
    10. '==' → logprob: -10.450630187988281

Token 48: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -8.65707261255011e-06
    2. ' j' → logprob: -11.875008583068848
    3. '0' → logprob: -14.500008583068848
    4. '	j' → logprob: -14.625008583068848
    5. ' ' → logprob: -15.500008583068848
    6. '_j' → logprob: -15.625008583068848
    7. '   ' → logprob: -16.625009536743164
    8. ']' → logprob: -16.625009536743164
    9. '```' → logprob: -16.625009536743164
    10. ':j' → logprob: -17.375009536743164

Token 49: ']==' (ID: 34128)
  Prédit: ']==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=='' → logprob: -0.595412015914917
    2. '=='' → logprob: -1.220412015914917
    3. ']==' → logprob: -2.220412015914917
    4. ']' → logprob: -3.845412015914917
    5. '==' → logprob: -4.345412254333496
    6. '']=='' → logprob: -5.220412254333496
    7. ']=="' → logprob: -5.970412254333496
    8. '=="' → logprob: -6.845412254333496
    9. ')=='' → logprob: -8.345412254333496
    10. ']!='' → logprob: -8.470412254333496

Token 50: ''.' (ID: 6120)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.19519059360027313
    2. ''*' → logprob: -3.195190668106079
    3. ''C' → logprob: -3.445190668106079
    4. ''O' → logprob: -3.695190668106079
    5. ''#' → logprob: -4.1951904296875
    6. ''A' → logprob: -4.1951904296875
    7. '"' → logprob: -4.5701904296875
    8. ''S' → logprob: -4.8201904296875
    9. ''o' → logprob: -4.9451904296875
    10. ''L' → logprob: -5.1951904296875

Token 51: '':
' (ID: 7669)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.1361150741577148
    2. '':' → logprob: -1.2611150741577148
    3. '.' → logprob: -1.3861150741577148
    4. '#' → logprob: -2.636115074157715
    5. ':' → logprob: -3.761115074157715
    6. '*' → logprob: -4.261115074157715
    7. ''.' → logprob: -4.511115074157715
    8. ''*' → logprob: -5.011115074157715
    9. ''#' → logprob: -5.261115074157715
    10. 'r' → logprob: -6.636115074157715

Token 52: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.33708158135414124
    2. 'res' → logprob: -1.3370815515518188
    3. '                   ' → logprob: -4.962081432342529
    4. ' res' → logprob: -5.462081432342529
    5. '           ' → logprob: -6.087081432342529
    6. ' ' → logprob: -6.712081432342529
    7. '                       ' → logprob: -6.962081432342529
    8. 'r' → logprob: -7.087081432342529
    9. '              ' → logprob: -7.087081432342529
    10. ':
' → logprob: -7.212081432342529

Token 53: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.004675761330872774
    2. ' res' → logprob: -5.37967586517334
    3. '                   ' → logprob: -10.62967586517334
    4. '   ' → logprob: -11.25467586517334
    5. '               ' → logprob: -12.62967586517334
    6. ' ' → logprob: -13.12967586517334
    7. '
' → logprob: -13.25467586517334
    8. 'for' → logprob: -13.25467586517334
    9. '                           ' → logprob: -13.75467586517334
    10. 'pass' → logprob: -13.75467586517334

Token 54: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0006719246739521623
    2. '=' → logprob: -7.500671863555908
    3. ' +=' → logprob: -9.125672340393066
    4. '+=(' → logprob: -12.125672340393066
    5. ']+=' → logprob: -12.875672340393066
    6. '+='' → logprob: -14.125672340393066
    7. '=max' → logprob: -14.750672340393066
    8. '+' → logprob: -14.750672340393066
    9. '+="' → logprob: -15.625672340393066
    10. '-=' → logprob: -15.875672340393066

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001487140398239717
    2. ' ' → logprob: -9.87514877319336
    3. '9' → logprob: -11.00014877319336
    4. '2' → logprob: -11.12514877319336
    5. '3' → logprob: -11.12514877319336
    6. '4' → logprob: -11.75014877319336
    7. '0' → logprob: -11.75014877319336
    8. 'N' → logprob: -12.12514877319336
    9. 'M' → logprob: -12.25014877319336
    10. '(' → logprob: -12.25014877319336

Token 56: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2746521234512329
    2. '
' → logprob: -2.6496520042419434
    3. 'else' → logprob: -2.6496520042419434
    4. '\n' → logprob: -2.7746520042419434
    5. 'elif' → logprob: -4.024652004241943
    6. ' else' → logprob: -4.524652004241943
    7. '```' → logprob: -6.524652004241943
    8. '<|end|>' → logprob: -6.524652004241943
    9. ' elif' → logprob: -7.399652004241943
    10. 'newline' → logprob: -7.649652004241943

Token 57: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5304840803146362
    2. 'print' → logprob: -1.4054840803146362
    3. 'elif' → logprob: -2.155484199523926
    4. ' else' → logprob: -3.155484199523926
    5. '
' → logprob: -5.530484199523926
    6. ' elif' → logprob: -6.280484199523926
    7. ' print' → logprob: -7.905484199523926
    8. '           ' → logprob: -7.905484199523926
    9. '               ' → logprob: -8.280484199523926
    10. '\n' → logprob: -8.530484199523926

Token 58: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003585840167943388
    2. ' :' → logprob: -8.000358581542969
    3. ':
' → logprob: -10.750358581542969
    4. '   ' → logprob: -14.250358581542969
    5. '<|end|>' → logprob: -16.00035858154297
    6. '：' → logprob: -16.12535858154297
    7. ' :
' → logprob: -16.12535858154297
    8. '):' → logprob: -16.37535858154297
    9. ':**' → logprob: -16.37535858154297
    10. ':return' → logprob: -16.37535858154297

Token 59: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.050096295773983
    2. 'for' → logprob: -3.800096273422241
    3. '   ' → logprob: -4.17509651184082
    4. '    ' → logprob: -5.30009651184082
    5. '```' → logprob: -5.92509651184082
    6. ' res' → logprob: -6.42509651184082
    7. ' ' → logprob: -6.92509651184082
    8. ' ```' → logprob: -8.67509651184082
    9. 'res' → logprob: -8.92509651184082
    10. ' if' → logprob: -9.05009651184082

Token 60: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2840604782104492
    2. ' for' → logprob: -1.4090604782104492
    3. 'res' → logprob: -6.784060478210449
    4. '   ' → logprob: -7.034060478210449
    5. ' res' → logprob: -7.909060478210449
    6. '```' → logprob: -9.03406047821045
    7. 'count' → logprob: -9.53406047821045
    8. 'i' → logprob: -9.65906047821045
    9. 'if' → logprob: -9.90906047821045
    10. ' i' → logprob: -10.03406047821045

Token 61: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.002572090830653906
    2. 'i' → logprob: -6.002572059631348
    3. ' _' → logprob: -10.002572059631348
    4. ' ' → logprob: -10.627572059631348
    5. ' ' → logprob: -11.502572059631348
    6. '_' → logprob: -12.127572059631348
    7. '_i' → logprob: -12.377572059631348
    8. ' range' → logprob: -12.752572059631348
    9. '	i' → logprob: -13.752572059631348
    10. '```' → logprob: -14.502572059631348

Token 62: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00537581043317914
    2. 'in' → logprob: -5.255375862121582
    3. ' ' → logprob: -9.130375862121582
    4. 'range' → logprob: -10.630375862121582
    5. ' range' → logprob: -12.630375862121582
    6. 'In' → logprob: -14.005375862121582
    7. '```' → logprob: -14.442875862121582
    8. '+' → logprob: -14.630375862121582
    9. '0' → logprob: -14.630375862121582
    10. '  ' → logprob: -14.630375862121582

Token 63: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0336519218981266
    2. 'range' → logprob: -3.408651828765869
    3. '(range' → logprob: -12.908652305603027
    4. ' ran' → logprob: -13.783652305603027
    5. ' xrange' → logprob: -13.908652305603027
    6. ' ' → logprob: -14.033652305603027
    7. ' ' → logprob: -15.533652305603027
    8. '	range' → logprob: -15.658652305603027
    9. '0' → logprob: -16.40865135192871
    10. 'rang' → logprob: -16.40865135192871

Token 64: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0012341608526185155
    2. '(' → logprob: -6.75123405456543
    3. ' range' → logprob: -11.00123405456543
    4. '(range' → logprob: -11.00123405456543
    5. '(M' → logprob: -11.25123405456543
    6. '(n' → logprob: -11.87623405456543
    7. 'range' → logprob: -12.25123405456543
    8. ' (' → logprob: -13.00123405456543
    9. '(
' → logprob: -14.25123405456543
    10. 'N' → logprob: -14.50123405456543

Token 65: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.40415099263191223
    2. '-' → logprob: -1.1541509628295898
    3. '):
' → logprob: -4.40415096282959
    4. ' -' → logprob: -6.15415096282959
    5. ' ):' → logprob: -6.77915096282959
    6. ')' → logprob: -6.90415096282959
    7. '   ' → logprob: -7.77915096282959
    8. '):
' → logprob: -9.40415096282959
    9. '       ' → logprob: -10.52915096282959
    10. ' ' → logprob: -10.52915096282959

Token 66: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6350959539413452
    2. ' for' → logprob: -0.7600959539413452
    3. 'for' → logprob: -6.635096073150635
    4. '       ' → logprob: -7.260096073150635
    5. '	for' → logprob: -8.510095596313477
    6. ' ' → logprob: -9.260095596313477
    7. '    ' → logprob: -10.010095596313477
    8. ' range' → logprob: -10.135095596313477
    9. ' and' → logprob: -10.760095596313477
    10. '	   ' → logprob: -11.385095596313477

Token 67: ' count' (ID: 3605)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09171201288700104
    2. 'for' → logprob: -2.46671199798584
    3. '   ' → logprob: -5.96671199798584
    4. ' range' → logprob: -9.34171199798584
    5. ' ' → logprob: -9.96671199798584
    6. '    ' → logprob: -10.34171199798584
    7. '       ' → logprob: -10.96671199798584
    8. ' j' → logprob: -12.09171199798584
    9. 'range' → logprob: -12.21671199798584
    10. '	for' → logprob: -13.21671199798584

Token 68: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023251185193657875
    2. ' =' → logprob: -3.7732512950897217
    3. '=count' → logprob: -13.2732515335083
    4. '+=' → logprob: -14.3982515335083
    5. '.=' → logprob: -14.7732515335083
    6. '=.' → logprob: -14.8982515335083
    7. ' ' → logprob: -15.0232515335083
    8. '_=' → logprob: -15.2732515335083
    9. '=j' → logprob: -15.2732515335083
    10. '=int' → logprob: -15.8982515335083

Token 69: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006706207641400397
    2. ' ' → logprob: -7.750670433044434
    3. '1' → logprob: -8.375670433044434
    4. 'S' → logprob: -11.875670433044434
    5. 'M' → logprob: -13.875670433044434
    6. 'res' → logprob: -14.688170433044434
    7. 'D' → logprob: -15.438170433044434
    8. ' S' → logprob: -16.12567138671875
    9. '-' → logprob: -16.18817138671875
    10. '```' → logprob: -16.43817138671875

Token 70: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4118615388870239
    2. '<|end|>' → logprob: -1.661861538887024
    3. '   ' → logprob: -2.2868614196777344
    4. ' for' → logprob: -3.1618614196777344
    5. '           ' → logprob: -6.411861419677734
    6. ' ' → logprob: -7.161861419677734
    7. 'for' → logprob: -7.661861419677734
    8. '<|end|>' → logprob: -8.036861419677734
    9. '```' → logprob: -8.911861419677734
    10. '  ' → logprob: -9.411861419677734

Token 72: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.47562918066978455
    2. ' for' → logprob: -0.9756292104721069
    3. '       ' → logprob: -6.7256293296813965
    4. '   ' → logprob: -8.225628852844238
    5. '<|end|>' → logprob: -9.850628852844238
    6. '           ' → logprob: -11.600628852844238
    7. ' ' → logprob: -11.725628852844238
    8. '	for' → logprob: -11.850628852844238
    9. '```' → logprob: -12.600628852844238
    10. '  ' → logprob: -14.225628852844238

Token 73: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.4743858277797699
    2. 'j' → logprob: -0.9743858575820923
    3. ' range' → logprob: -8.724386215209961
    4. 'range' → logprob: -9.099386215209961
    5. 'M' → logprob: -11.724386215209961
    6. ' ' → logprob: -11.849386215209961
    7. '<|end|>' → logprob: -12.224386215209961
    8. 'S' → logprob: -13.099386215209961
    9. '$j' → logprob: -13.661886215209961
    10. '   ' → logprob: -13.911886215209961

Token 74: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02326131984591484
    2. 'in' → logprob: -3.773261308670044
    3. ' ' → logprob: -11.523261070251465
    4. '<|end|>' → logprob: -13.398261070251465
    5. 'In' → logprob: -13.648261070251465
    6. 'range' → logprob: -14.648261070251465
    7. '```' → logprob: -14.898261070251465
    8. 'to' → logprob: -14.898261070251465
    9. '   ' → logprob: -15.023261070251465
    10. '    ' → logprob: -15.523261070251465

Token 75: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25199589133262634
    2. ' range' → logprob: -1.5019959211349487
    3. '(range' → logprob: -9.626996040344238
    4. '(M' → logprob: -14.626996040344238
    5. 'M' → logprob: -15.626996040344238
    6. ' ' → logprob: -16.626995086669922
    7. '	range' → logprob: -16.876995086669922
    8. '   ' → logprob: -17.126995086669922
    9. ' M' → logprob: -17.751995086669922
    10. '[M' → logprob: -17.751995086669922

Token 76: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0032462780363857746
    2. '(range' → logprob: -6.003246307373047
    3. ' range' → logprob: -7.753246307373047
    4. 'range' → logprob: -8.503246307373047
    5. '(' → logprob: -9.003246307373047
    6. '(D' → logprob: -12.503246307373047
    7. '(N' → logprob: -12.753246307373047
    8. ' (' → logprob: -12.878246307373047
    9. ')' → logprob: -13.128246307373047
    10. '(m' → logprob: -14.378246307373047

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3158033788204193
    2. '):
' → logprob: -1.3158034086227417
    3. ')' → logprob: -6.190803527832031
    4. 'if' → logprob: -8.940803527832031
    5. '           ' → logprob: -9.190803527832031
    6. ':' → logprob: -9.315803527832031
    7. '       ' → logprob: -10.440803527832031
    8. '):
' → logprob: -10.440803527832031
    9. '):

' → logprob: -10.440803527832031
    10. '+' → logprob: -11.440803527832031

Token 78: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003218587953597307
    2. ' if' → logprob: -6.003218650817871
    3. 'if' → logprob: -7.378218650817871
    4. '```' → logprob: -10.253218650817871
    5. '               ' → logprob: -10.753218650817871
    6. '<|end|>' → logprob: -11.003218650817871
    7. '   ' → logprob: -11.253218650817871
    8. '	       ' → logprob: -11.628218650817871
    9. '       ' → logprob: -11.878218650817871
    10. ' ' → logprob: -13.003218650817871

Token 79: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5511939525604248
    2. 'if' (adapté à ' if') → logprob: -0.9261939525604248
    3. '           ' → logprob: -3.801193952560425
    4. '               ' → logprob: -5.551194190979004
    5. '            ' → logprob: -7.801194190979004
    6. '```' → logprob: -7.801194190979004
    7. ' ' → logprob: -8.426194190979004
    8. '                ' → logprob: -9.051194190979004
    9. '       ' → logprob: -9.551194190979004
    10. '   ' → logprob: -9.676194190979004

Token 80: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.5231447219848633
    2. ' S' → logprob: -0.8981447219848633
    3. ' ' → logprob: -11.773144721984863
    4. '(S' → logprob: -13.148144721984863
    5. ' not' → logprob: -13.273144721984863
    6. '                   ' → logprob: -13.773144721984863
    7. 's' → logprob: -13.960644721984863
    8. ' ' → logprob: -14.148144721984863
    9. '           ' → logprob: -14.210644721984863
    10. '   ' → logprob: -14.398144721984863

Token 81: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.41866585687967e-06
    2. '[j' → logprob: -12.250008583068848
    3. '[I' → logprob: -13.125008583068848
    4. '[' → logprob: -14.125008583068848
    5. '][' → logprob: -15.000008583068848
    6. '```' → logprob: -16.12500762939453
    7. 'i' → logprob: -16.50000762939453
    8. ' [' → logprob: -17.50000762939453
    9. ')[' → logprob: -17.75000762939453
    10. '[][' → logprob: -17.87500762939453

Token 82: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.011554433964192867
    2. '[j' → logprob: -4.51155424118042
    3. ']' → logprob: -8.261554718017578
    4. '[i' → logprob: -8.511554718017578
    5. '[' → logprob: -10.636554718017578
    6. ')[' → logprob: -12.511554718017578
    7. ' ][' → logprob: -12.761554718017578
    8. '```' → logprob: -12.886554718017578
    9. '"][' → logprob: -13.261554718017578
    10. '[I' → logprob: -13.261554718017578

Token 83: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0002765902318060398
    2. ']' → logprob: -9.250276565551758
    3. '[j' → logprob: -9.250276565551758
    4. '][' → logprob: -9.875276565551758
    5. ' j' → logprob: -11.250276565551758
    6. 'i' → logprob: -11.625276565551758
    7. ']==' → logprob: -13.000276565551758
    8. '	j' → logprob: -13.500276565551758
    9. '```' → logprob: -13.500276565551758
    10. '_j' → logprob: -13.750276565551758

Token 84: ']==' (ID: 34128)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.041556037962436676
    2. '=='' → logprob: -3.4165561199188232
    3. ' ==' → logprob: -5.291555881500244
    4. ']==' → logprob: -6.166555881500244
    5. '.' → logprob: -8.541556358337402
    6. ']=='' → logprob: -8.666556358337402
    7. ')==' → logprob: -9.166556358337402
    8. ' =='' → logprob: -9.916556358337402
    9. '==
' → logprob: -10.041556358337402
    10. ')' → logprob: -10.416556358337402

Token 85: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.0001249925117008388
    2. ''' → logprob: -9.37512493133545
    3. '.' → logprob: -11.25012493133545
    4. ''#' → logprob: -11.37512493133545
    5. ''*' → logprob: -12.00012493133545
    6. ' '.'' → logprob: -12.12512493133545
    7. '"."' → logprob: -13.75012493133545
    8. ''o' → logprob: -14.37512493133545
    9. '','' → logprob: -15.25012493133545
    10. ''a' → logprob: -15.25012493133545

Token 86: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1360187828540802
    2. ':
' → logprob: -2.636018753051758
    3. '':' → logprob: -3.386018753051758
    4. ')' → logprob: -4.761018753051758
    5. '):' → logprob: -5.386018753051758
    6. '               ' → logprob: -6.011018753051758
    7. '):
' → logprob: -6.136018753051758
    8. '':
' → logprob: -7.136018753051758
    9. ''' → logprob: -7.261018753051758
    10. 'count' → logprob: -7.761018753051758

Token 87: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17863836884498596
    2. 'count' → logprob: -2.678638458251953
    3. ':' → logprob: -3.303638458251953
    4. ':
' → logprob: -3.678638458251953
    5. '                   ' → logprob: -3.928638458251953
    6. '                ' → logprob: -5.678638458251953
    7. '              ' → logprob: -5.803638458251953
    8. ' and' → logprob: -6.678638458251953
    9. ' count' → logprob: -6.678638458251953
    10. '           ' → logprob: -7.178638458251953

Token 88: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.00043162284418940544
    2. ' count' → logprob: -7.750431537628174
    3. '                   ' → logprob: -14.875432014465332
    4. '               ' → logprob: -15.500432014465332
    5. '	count' → logprob: -16.625431060791016
    6. '           ' → logprob: -17.125431060791016
    7. '$count' → logprob: -17.125431060791016
    8. '
' → logprob: -17.250431060791016
    9. '<count' → logprob: -17.250431060791016
    10. ' ' → logprob: -17.750431060791016

Token 89: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10233338922262192
    2. ' +=' → logprob: -2.4773333072662354
    3. '+' → logprob: -4.4773335456848145
    4. '==' → logprob: -6.6023335456848145
    5. '>=' → logprob: -8.352333068847656
    6. '=' → logprob: -8.852333068847656
    7. ']+=' → logprob: -9.352333068847656
    8. ' ==' → logprob: -10.352333068847656
    9. '>' → logprob: -10.602333068847656
    10. ' +' → logprob: -11.477333068847656

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4034345187828876e-05
    2. ' ' → logprob: -10.87502384185791
    3. '2' → logprob: -12.50002384185791
    4. 'D' → logprob: -13.62502384185791
    5. 'res' → logprob: -17.250024795532227
    6. ' D' → logprob: -17.750024795532227
    7. '１' → logprob: -18.250024795532227
    8. '4' → logprob: -19.125024795532227
    9. '3' → logprob: -19.125024795532227
    10. '

' → logprob: -19.437524795532227

Token 91: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9419480562210083
    2. ' else' → logprob: -0.9419480562210083
    3. 'else' → logprob: -1.8169480562210083
    4. '
' → logprob: -3.1919479370117188
    5. '               ' → logprob: -4.691947937011719
    6. ' elif' → logprob: -5.941947937011719
    7. 'elif' → logprob: -6.566947937011719
    8. '       ' → logprob: -6.816947937011719
    9. ' ' → logprob: -7.441947937011719
    10. '<|end|>' → logprob: -7.691947937011719

Token 92: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4183507561683655
    2. 'else' → logprob: -1.1683506965637207
    3. ' else' → logprob: -3.6683506965637207
    4. '       ' → logprob: -6.293350696563721
    5. '               ' → logprob: -6.918350696563721
    6. 'elif' → logprob: -6.918350696563721
    7. '```' → logprob: -7.168350696563721
    8. '<|end|>' → logprob: -7.793350696563721
    9. ' elif' → logprob: -9.293351173400879
    10. '          ' → logprob: -9.793351173400879

Token 93: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.16049829125404358
    2. ' else' → logprob: -1.9104982614517212
    3. '           ' → logprob: -8.78549861907959
    4. 'elif' → logprob: -9.66049861907959
    5. '       ' → logprob: -10.66049861907959
    6. ' elif' → logprob: -11.03549861907959
    7. '```' → logprob: -11.91049861907959
    8. '	else' → logprob: -12.03549861907959
    9. '   ' → logprob: -12.78549861907959
    10. '               ' → logprob: -13.66049861907959

Token 94: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010219813324511051
    2. '               ' → logprob: -4.760220050811768
    3. ':
' → logprob: -7.510220050811768
    4. '                   ' → logprob: -7.635220050811768
    5. '           ' → logprob: -8.38521957397461
    6. '                ' → logprob: -9.38521957397461
    7. ' :' → logprob: -9.88521957397461
    8. 'count' → logprob: -9.88521957397461
    9. '            ' → logprob: -10.51021957397461
    10. '{' → logprob: -11.01021957397461

Token 95: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004404482431709766
    2. 'count' → logprob: -5.879404544830322
    3. ' if' → logprob: -7.754404544830322
    4. '           ' → logprob: -8.004404067993164
    5. 'if' → logprob: -8.129404067993164
    6. '                   ' → logprob: -8.629404067993164
    7. '```' → logprob: -8.629404067993164
    8. '   ' → logprob: -10.379404067993164
    9. '       ' → logprob: -10.379404067993164
    10. ' ' → logprob: -10.629404067993164

Token 96: ' count' (ID: 3605)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4434756636619568
    2. 'res' → logprob: -1.0684757232666016
    3. 'count' (adapté à ' count') → logprob: -4.568475723266602
    4. '                   ' → logprob: -6.193475723266602
    5. ' if' → logprob: -6.443475723266602
    6. '               ' → logprob: -8.068475723266602
    7. '```' → logprob: -8.818475723266602
    8. ' res' → logprob: -9.068475723266602
    9. '           ' → logprob: -10.568475723266602
    10. '``' → logprob: -10.818475723266602

Token 97: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.5048530030981055e-06
    2. ' =' → logprob: -14.500001907348633
    3. '==' → logprob: -15.125001907348633
    4. '+=' → logprob: -15.500001907348633
    5. '=None' → logprob: -16.125001907348633
    6. '=max' → logprob: -16.375001907348633
    7. '=

' → logprob: -16.375001907348633
    8. '=
' → logprob: -16.625001907348633
    9. '0' → logprob: -17.250001907348633
    10. '=False' → logprob: -17.250001907348633

Token 98: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -21.5
    4. '۰' → logprob: -21.75
    5. '```' → logprob: -21.75
    6. '000' → logprob: -22.125
    7. '０' → logprob: -22.25
    8. '00' → logprob: -22.875
    9. '०' → logprob: -23.625
    10. ')' → logprob: -24.25

Token 99: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17184649407863617
    2. '           ' → logprob: -2.171846389770508
    3. '\n' → logprob: -3.921846389770508
    4. '       ' → logprob: -5.421846389770508
    5. '               ' → logprob: -5.546846389770508
    6. ' 
' → logprob: -5.546846389770508
    7. '```' → logprob: -5.546846389770508
    8. '<|end|>' → logprob: -6.296846389770508
    9. '  
' → logprob: -6.671846389770508
    10. '
' → logprob: -6.921846389770508

Token 100: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46118128299713135
    2. '               ' → logprob: -1.2111812829971313
    3. '       ' → logprob: -3.711181163787842
    4. '
' → logprob: -3.961181163787842
    5. '<|end|>' → logprob: -4.461181163787842
    6. '```' → logprob: -4.586181163787842
    7. '\n' → logprob: -6.211181163787842
    8. ' if' → logprob: -6.461181163787842
    9. ' else' → logprob: -8.211181640625
    10. '  
' → logprob: -8.336181640625

Token 101: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.28892982006073
    2. '           ' → logprob: -2.1639299392700195
    3. ' if' → logprob: -2.1639299392700195
    4. '       ' → logprob: -4.0389299392700195
    5. '```' → logprob: -6.4139299392700195
    6. '               ' → logprob: -6.9139299392700195
    7. '   ' → logprob: -8.03892993927002
    8. ' ' → logprob: -8.66392993927002
    9. 'res' → logprob: -8.78892993927002
    10. 'elif' → logprob: -9.16392993927002

Token 102: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.47414156794548035
    2. ' count' → logprob: -0.9741415977478027
    3. '(count' → logprob: -10.724141120910645
    4. ' ' → logprob: -11.224141120910645
    5. '	count' → logprob: -11.474141120910645
    6. 'res' → logprob: -12.224141120910645
    7. 'D' → logprob: -12.474141120910645
    8. ' res' → logprob: -13.099141120910645
    9. '<count' → logprob: -13.599141120910645
    10. '```' → logprob: -13.724141120910645

Token 103: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.0008827611454762518
    2. ' >=' → logprob: -7.625882625579834
    3. '==' → logprob: -7.875882625579834
    4. '>' → logprob: -12.125883102416992
    5. 'D' → logprob: -12.625883102416992
    6. ']>=' → logprob: -12.625883102416992
    7. '>D' → logprob: -13.875883102416992
    8. '≥' → logprob: -14.625883102416992
    9. ')>=' → logprob: -14.750883102416992
    10. ' ==' → logprob: -15.125883102416992

Token 104: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.20148944854736328
    2. '2' → logprob: -1.7014894485473633
    3. ' D' → logprob: -9.826489448547363
    4. ' ' → logprob: -11.701489448547363
    5. '1' → logprob: -12.701489448547363
    6. '<D' → logprob: -12.951489448547363
    7. '	D' → logprob: -13.201489448547363
    8. '   ' → logprob: -13.576489448547363
    9. '>D' → logprob: -13.576489448547363
    10. 'Д' → logprob: -14.576489448547363

Token 105: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08840547502040863
    2. ':
' → logprob: -2.5884053707122803
    3. 'and' → logprob: -5.463405609130859
    4. ' and' → logprob: -5.588405609130859
    5. '-' → logprob: -6.588405609130859
    6. 'res' → logprob: -10.58840560913086
    7. '           ' → logprob: -10.96340560913086
    8. '==' → logprob: -11.46340560913086
    9. ' :' → logprob: -11.58840560913086
    10. ' :
' → logprob: -11.96340560913086

Token 106: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05687885731458664
    2. 'res' → logprob: -2.9318788051605225
    3. ' res' → logprob: -6.931879043579102
    4. '                   ' → logprob: -7.056879043579102
    5. '                       ' → logprob: -9.681879043579102
    6. '           ' → logprob: -10.181879043579102
    7. '              ' → logprob: -10.681879043579102
    8. '                ' → logprob: -11.181879043579102
    9. '             ' → logprob: -12.556879043579102
    10. '       ' → logprob: -12.806879043579102

Token 107: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -3.4121114822482923e-06
    2. ' res' → logprob: -13.375003814697266
    3. '                   ' → logprob: -13.875003814697266
    4. '
' → logprob: -14.500003814697266
    5. '               ' → logprob: -15.875003814697266
    6. '   ' → logprob: -16.125003814697266
    7. '           ' → logprob: -16.375003814697266
    8. '	res' → logprob: -17.875003814697266
    9. '       ' → logprob: -18.500003814697266
    10. '```' → logprob: -18.625003814697266

Token 108: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -1.7432603272027336e-06
    2. '+=(' → logprob: -14.125001907348633
    3. ']+=' → logprob: -14.625001907348633
    4. ' +=' → logprob: -15.000001907348633
    5. '+='' → logprob: -16.750001907348633
    6. '+="' → logprob: -17.375001907348633
    7. '-=' → logprob: -17.375001907348633
    8. '+' → logprob: -17.500001907348633
    9. '=' → logprob: -18.000001907348633
    10. '```' → logprob: -19.125001907348633

Token 109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006775272195227444
    2. 'count' → logprob: -7.375677585601807
    3. '(count' → logprob: -10.500677108764648
    4. ' ' → logprob: -10.875677108764648
    5. '(' → logprob: -13.250677108764648
    6. ' count' → logprob: -13.875677108764648
    7. '   ' → logprob: -14.750677108764648
    8. ' (' → logprob: -15.875677108764648
    9. '```' → logprob: -15.875677108764648
    10. 'j' → logprob: -16.00067710876465

Token 110: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7101699709892273
    2. ' ' → logprob: -0.9601699709892273
    3. ' 
' → logprob: -3.085170030593872
    4. '<|end|>' → logprob: -3.210170030593872
    5. 'print' → logprob: -3.960170030593872
    6. '```' → logprob: -5.960169792175293
    7. '                ' → logprob: -6.835169792175293
    8. '0' → logprob: -6.960169792175293
    9. ' \' → logprob: -6.960169792175293
    10. '[' → logprob: -7.085169792175293

Token 111: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0010841365437954664
    2. '\n' → logprob: -8.001084327697754
    3. ' print' → logprob: -8.251084327697754
    4. '<|end|>' → logprob: -8.876084327697754
    5. '```' → logprob: -9.251084327697754
    6. 'return' → logprob: -9.751084327697754
    7. '+' → logprob: -10.626084327697754
    8. ' ' → logprob: -10.626084327697754
    9. ' 
' → logprob: -10.751084327697754
    10. ')' → logprob: -11.251084327697754

Token 112: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001549089647596702
    2. '           ' → logprob: -9.750154495239258
    3. '       ' → logprob: -10.125154495239258
    4. '               ' → logprob: -10.625154495239258
    5. '   ' → logprob: -10.875154495239258
    6. 'for' (adapté à ' for') → logprob: -11.875154495239258
    7. '                   ' → logprob: -13.125154495239258
    8. ' print' → logprob: -13.125154495239258
    9. 'if' → logprob: -14.375154495239258
    10. 'else' → logprob: -14.500154495239258

Token 113: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.11554720252752304
    2. 'j' → logprob: -2.3655471801757812
    3. ' i' → logprob: -4.365547180175781
    4. 'i' → logprob: -5.990547180175781
    5. ' ' → logprob: -11.865547180175781
    6. '_j' → logprob: -12.740547180175781
    7. '   ' → logprob: -14.365547180175781
    8. '	j' → logprob: -14.365547180175781
    9. ' range' → logprob: -14.490547180175781
    10. '```' → logprob: -14.865547180175781

Token 114: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002428098116070032
    2. ' range' → logprob: -6.12742805480957
    3. 'in' → logprob: -8.50242805480957
    4. 'range' → logprob: -10.50242805480957
    5. ' ' → logprob: -11.62742805480957
    6. '(range' → logprob: -13.12742805480957
    7. ' (' → logprob: -13.87742805480957
    8. ' for' → logprob: -15.37742805480957
    9. '  ' → logprob: -16.50242805480957
    10. '(' → logprob: -16.62742805480957

Token 115: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033558503491804004
    2. ' range' → logprob: -8.000335693359375
    3. '(range' → logprob: -16.375335693359375
    4. '	range' → logprob: -21.625335693359375
    5. ' ' → logprob: -22.375335693359375
    6. '[' → logprob: -22.750335693359375
    7. '(' → logprob: -23.000335693359375
    8. '0' → logprob: -23.250335693359375
    9. '```' → logprob: -23.250335693359375
    10. 'for' → logprob: -23.375335693359375

Token 116: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -4.060365608893335e-05
    2. '(' → logprob: -10.875041007995605
    3. 'range' → logprob: -11.375041007995605
    4. '(range' → logprob: -11.750041007995605
    5. ' range' → logprob: -13.875041007995605
    6. '(N' → logprob: -14.125041007995605
    7. ' (' → logprob: -15.000041007995605
    8. 'M' → logprob: -16.12504005432129
    9. '(m' → logprob: -16.50004005432129
    10. '(S' → logprob: -17.62504005432129

Token 117: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013491649879142642
    2. '):
' → logprob: -6.626348972320557
    3. ':' → logprob: -11.001349449157715
    4. ' ):' → logprob: -12.876349449157715
    5. ')' → logprob: -13.876349449157715
    6. ']:' → logprob: -14.126349449157715
    7. '}:' → logprob: -14.376349449157715
    8. '):
' → logprob: -14.376349449157715
    9. '   ' → logprob: -14.751349449157715
    10. '):

' → logprob: -15.626349449157715

Token 118: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37042316794395447
    2. 'count' → logprob: -1.2454231977462769
    3. '   ' → logprob: -3.8704230785369873
    4. ' count' → logprob: -7.870423316955566
    5. '     ' → logprob: -9.120423316955566
    6. '      ' → logprob: -9.495423316955566
    7. '```' → logprob: -9.745423316955566
    8. '    ' → logprob: -9.870423316955566
    9. '           ' → logprob: -10.120423316955566
    10. ' ' → logprob: -10.495423316955566

Token 119: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -3.054500666621607e-06
    2. ' count' → logprob: -12.75000286102295
    3. '   ' → logprob: -16.750003814697266
    4. '       ' → logprob: -18.375003814697266
    5. 'for' → logprob: -18.625003814697266
    6. ' ' → logprob: -19.750003814697266
    7. '	count' → logprob: -20.625003814697266
    8. '```' → logprob: -21.000003814697266
    9. '
' → logprob: -21.125003814697266
    10. '  ' → logprob: -22.250003814697266

Token 120: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.9361264946837764e-07
    2. ' =' → logprob: -16.75
    3. '0' → logprob: -18.375
    4. '+=' → logprob: -19.125
    5. '=
' → logprob: -21.0
    6. '=

' → logprob: -21.25
    7. '＝' → logprob: -21.75
    8. '.=' → logprob: -21.875
    9. '=}' → logprob: -21.875
    10. '=int' → logprob: -22.125

Token 121: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '<|end|>' → logprob: -22.0
    4. '   ' → logprob: -22.25
    5. '۰' → logprob: -22.25
    6. '０' → logprob: -22.75
    7. '```' → logprob: -22.75
    8. '000' → logprob: -23.625
    9. '00' → logprob: -23.75
    10. 'count' → logprob: -24.25

Token 122: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48734697699546814
    2. ' for' → logprob: -1.2373470067977905
    3. '<|end|>' → logprob: -2.862346887588501
    4. '0' → logprob: -3.487346887588501
    5. '       ' → logprob: -5.86234712600708
    6. ' ' → logprob: -5.98734712600708
    7. '   ' → logprob: -6.48734712600708
    8. '=' → logprob: -8.362346649169922
    9. '	for' → logprob: -8.362346649169922
    10. '<|end|>' → logprob: -8.737346649169922

Token 123: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03756718337535858
    2. ' for' → logprob: -4.037567138671875
    3. '       ' → logprob: -4.412567138671875
    4. '   ' → logprob: -5.162567138671875
    5. '<|end|>' → logprob: -6.787567138671875
    6. '0' → logprob: -9.162567138671875
    7. '	for' → logprob: -9.412567138671875
    8. ' ' → logprob: -10.662567138671875
    9. '```' → logprob: -11.787567138671875
    10. '    ' → logprob: -12.037567138671875

Token 124: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -5.872261317563243e-05
    2. ' for' → logprob: -9.750059127807617
    3. '0' → logprob: -15.375059127807617
    4. '```' → logprob: -16.375059127807617
    5. '   ' → logprob: -19.500059127807617
    6. '	for' → logprob: -20.500059127807617
    7. '       ' → logprob: -20.625059127807617
    8. '
' → logprob: -20.875059127807617
    9. ' ' → logprob: -21.000059127807617
    10. '<|end|>' → logprob: -21.125059127807617

Token 125: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.061975862830877304
    2. ' i' → logprob: -2.8119759559631348
    3. ' range' → logprob: -12.186975479125977
    4. 'range' → logprob: -13.311975479125977
    5. ' in' → logprob: -14.936975479125977
    6. '   ' → logprob: -15.061975479125977
    7. '_i' → logprob: -15.186975479125977
    8. '```' → logprob: -15.811975479125977
    9. '(i' → logprob: -16.186975479125977
    10. '	i' → logprob: -16.436975479125977

Token 126: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03804333135485649
    2. 'in' → logprob: -3.288043260574341
    3. ' ' → logprob: -13.788043022155762
    4. '	in' → logprob: -15.538043022155762
    5. 'range' → logprob: -16.038043975830078
    6. '        ' → logprob: -16.538043975830078
    7. '   ' → logprob: -16.663043975830078
    8. '    ' → logprob: -16.788043975830078
    9. ' range' → logprob: -16.788043975830078
    10. 'In' → logprob: -17.538043975830078

Token 127: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005235767923295498
    2. ' range' → logprob: -5.25523567199707
    3. '(range' → logprob: -13.13023567199707
    4. 'N' → logprob: -17.75523567199707
    5. '(N' → logprob: -20.50523567199707
    6. '
' → logprob: -20.88023567199707
    7. 'Range' → logprob: -21.38023567199707
    8. 'in' → logprob: -21.38023567199707
    9. '	range' → logprob: -21.50523567199707
    10. ' ' → logprob: -21.88023567199707

Token 128: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.004283415153622627
    2. 'range' → logprob: -5.879283428192139
    3. ' range' → logprob: -6.754283428192139
    4. '(range' → logprob: -8.37928295135498
    5. '(' → logprob: -10.12928295135498
    6. 'N' → logprob: -11.12928295135498
    7. ' (' → logprob: -11.25428295135498
    8. '(M' → logprob: -11.25428295135498
    9. 'Range' → logprob: -14.12928295135498
    10. '(R' → logprob: -15.62928295135498

Token 129: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.48380184173583984
    2. '):
' → logprob: -0.9838018417358398
    3. ':' → logprob: -4.73380184173584
    4. '       ' → logprob: -8.35880184173584
    5. ':
' → logprob: -8.85880184173584
    6. '           ' → logprob: -9.23380184173584
    7. '```' → logprob: -9.48380184173584
    8. '<|end|>' → logprob: -9.48380184173584
    9. '):

' → logprob: -9.98380184173584
    10. ')' → logprob: -9.98380184173584

Token 130: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03134990483522415
    2. 'if' → logprob: -3.5313498973846436
    3. ' if' → logprob: -6.531350135803223
    4. '       ' → logprob: -9.031350135803223
    5. '   ' → logprob: -11.031350135803223
    6. '```' → logprob: -13.906350135803223
    7. '               ' → logprob: -14.156350135803223
    8. '          ' → logprob: -14.156350135803223
    9. '         ' → logprob: -14.781350135803223
    10. '	       ' → logprob: -14.906350135803223

Token 131: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0010943770175799727
    2. '           ' → logprob: -7.001094341278076
    3. ' if' → logprob: -8.626094818115234
    4. '       ' → logprob: -13.501094818115234
    5. '               ' → logprob: -14.126094818115234
    6. '   ' → logprob: -14.376094818115234
    7. '```' → logprob: -14.626094818115234
    8. 'If' → logprob: -15.626094818115234
    9. '	if' → logprob: -17.251094818115234
    10. '          ' → logprob: -17.501094818115234

Token 132: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.3132631182670593
    2. ' S' → logprob: -1.313263177871704
    3. '<|end|>' → logprob: -14.188262939453125
    4. '(S' → logprob: -15.438262939453125
    5. ' ' → logprob: -15.563262939453125
    6. '```' → logprob: -16.813262939453125
    7. '           ' → logprob: -17.063262939453125
    8. '   ' → logprob: -17.188262939453125
    9. '	S' → logprob: -17.813262939453125
    10. '`' → logprob: -18.063262939453125

Token 133: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.723352049040841e-06
    2. '[j' → logprob: -13.250004768371582
    3. '[' → logprob: -13.500004768371582
    4. 'i' → logprob: -14.125004768371582
    5. '[I' → logprob: -14.500004768371582
    6. '```' → logprob: -15.250004768371582
    7. '[
' → logprob: -17.250003814697266
    8. ' [' → logprob: -17.625003814697266
    9. '][' → logprob: -17.750003814697266
    10. '[][' → logprob: -17.875003814697266

Token 134: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0019624168053269386
    2. '[j' → logprob: -6.251962184906006
    3. ']' → logprob: -10.751962661743164
    4. ' ][' → logprob: -12.376962661743164
    5. '[i' → logprob: -12.876962661743164
    6. '[' → logprob: -13.001962661743164
    7. '"][' → logprob: -13.626962661743164
    8. ']][' → logprob: -14.751962661743164
    9. ''][' → logprob: -14.751962661743164
    10. ')][' → logprob: -15.626962661743164

Token 135: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.36574100604048e-06
    2. ' j' → logprob: -12.625004768371582
    3. '[j' → logprob: -14.250004768371582
    4. '```' → logprob: -15.625004768371582
    5. '   ' → logprob: -17.000003814697266
    6. ' ' → logprob: -17.500003814697266
    7. '
' → logprob: -17.750003814697266
    8. 'M' → logprob: -18.375003814697266
    9. '0' → logprob: -18.500003814697266
    10. 'i' → logprob: -18.500003814697266

Token 136: ']==' (ID: 34128)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5763390064239502
    2. ']==' → logprob: -0.8263390064239502
    3. '']==' → logprob: -8.951338768005371
    4. ']' → logprob: -9.326338768005371
    5. ']=='' → logprob: -9.701338768005371
    6. ' ==' → logprob: -9.826338768005371
    7. '=='' → logprob: -10.076338768005371
    8. ')==' → logprob: -11.451338768005371
    9. '']=='' → logprob: -12.826338768005371
    10. '==
' → logprob: -12.826338768005371

Token 137: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -2.816093228830141e-06
    2. ' '.'' → logprob: -13.00000286102295
    3. '.' → logprob: -15.25000286102295
    4. ''' → logprob: -15.50000286102295
    5. ' '.' → logprob: -17.375001907348633
    6. '('.')' → logprob: -17.375001907348633
    7. '"."' → logprob: -17.500001907348633
    8. '".' → logprob: -17.625001907348633
    9. '('.' → logprob: -18.500001907348633
    10. '','' → logprob: -18.500001907348633

Token 138: '':
' (ID: 7669)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.060653433203697205
    2. ':' → logprob: -3.3106534481048584
    3. ':
' → logprob: -4.560653209686279
    4. ')' → logprob: -5.310653209686279
    5. 'count' → logprob: -6.435653209686279
    6. '<|end|>' → logprob: -6.435653209686279
    7. '              ' → logprob: -6.810653209686279
    8. '           ' → logprob: -7.310653209686279
    9. '```' → logprob: -8.060653686523438
    10. '):' → logprob: -8.435653686523438

Token 139: '               ' (ID: 506)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.10044539719820023
    2. '               ' → logprob: -2.350445508956909
    3. '           ' → logprob: -8.975445747375488
    4. ' count' → logprob: -9.600445747375488
    5. '              ' → logprob: -11.600445747375488
    6. '	count' → logprob: -12.100445747375488
    7. '```' → logprob: -12.350445747375488
    8. '[count' → logprob: -12.600445747375488
    9. '(count' → logprob: -12.600445747375488
    10. '                   ' → logprob: -12.850445747375488

Token 140: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -4.320199877838604e-07
    2. ' count' → logprob: -14.75
    3. '               ' → logprob: -18.875
    4. '	count' → logprob: -21.375
    5. '
' → logprob: -21.5
    6. '           ' → logprob: -21.5
    7. '[count' → logprob: -21.875
    8. ',count' → logprob: -22.875
    9. '.count' → logprob: -22.875
    10. '                   ' → logprob: -23.125

Token 141: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -1.7120533811976202e-05
    2. '+' → logprob: -11.375017166137695
    3. ']+=' → logprob: -12.500017166137695
    4. ' +=' → logprob: -13.750017166137695
    5. '1' → logprob: -14.750017166137695
    6. '```' → logprob: -15.375017166137695
    7. '+='' → logprob: -16.875017166137695
    8. '<|end|>' → logprob: -17.000017166137695
    9. '>=' → logprob: -17.375017166137695
    10. '+="' → logprob: -17.500017166137695

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '<|end|>' → logprob: -18.25
    4. '１' → logprob: -19.125
    5. '```' → logprob: -19.5
    6. '   ' → logprob: -20.9375
    7. '0' → logprob: -21.0
    8. '۱' → logprob: -21.1875
    9. '১' → logprob: -21.375
    10. '<|end|>' → logprob: -21.75

Token 143: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.35310760140419006
    2. '               ' → logprob: -1.6031075716018677
    3. '           ' → logprob: -2.9781076908111572
    4. ' else' → logprob: -3.1031076908111572
    5. '<|end|>' → logprob: -8.603107452392578
    6. '```' → logprob: -10.478107452392578
    7. '       ' → logprob: -10.603107452392578
    8. '                
' → logprob: -10.603107452392578
    9. '              ' → logprob: -10.728107452392578
    10. '                   ' → logprob: -10.728107452392578

Token 144: '           ' (ID: 352)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.04002957418560982
    2. '           ' → logprob: -3.540029525756836
    3. ' else' → logprob: -4.790029525756836
    4. '               ' → logprob: -6.290029525756836
    5. '0' → logprob: -10.790029525756836
    6. '       ' → logprob: -11.290029525756836
    7. '```' → logprob: -11.790029525756836
    8. '   ' → logprob: -12.665029525756836
    9. '
' → logprob: -12.915029525756836
    10. '\
' → logprob: -13.040029525756836

Token 145: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0019307781476527452
    2. ' else' → logprob: -6.2519307136535645
    3. '               ' → logprob: -13.626931190490723
    4. '           ' → logprob: -14.751931190490723
    5. 'elif' → logprob: -15.001931190490723
    6. '```' → logprob: -16.126930236816406
    7. '}else' → logprob: -16.876930236816406
    8. '	else' → logprob: -17.376930236816406
    9. '
' → logprob: -17.626930236816406
    10. 'count' → logprob: -18.626930236816406

Token 146: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009184551425278187
    2. 'count' → logprob: -5.13418436050415
    3. '                   ' → logprob: -5.88418436050415
    4. '=count' → logprob: -8.884184837341309
    5. '[count' → logprob: -9.759184837341309
    6. '=' → logprob: -9.759184837341309
    7. '           ' → logprob: -10.384184837341309
    8. '                ' → logprob: -10.384184837341309
    9. '<|end|>' → logprob: -10.509184837341309
    10. ':
' → logprob: -10.884184837341309

Token 147: '               ' (ID: 506)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.01821678690612316
    2. '               ' → logprob: -4.018216609954834
    3. ' count' → logprob: -10.018217086791992
    4. '                   ' → logprob: -10.893217086791992
    5. '           ' → logprob: -14.018217086791992
    6. '[count' → logprob: -14.393217086791992
    7. '	count' → logprob: -14.643217086791992
    8. '```' → logprob: -14.893217086791992
    9. '0' → logprob: -15.018217086791992
    10. '   ' → logprob: -15.143217086791992

Token 148: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -3.531315314830863e-06
    2. '0' → logprob: -12.750003814697266
    3. ' count' → logprob: -14.375003814697266
    4. 'break' → logprob: -16.750003814697266
    5. '               ' → logprob: -20.500003814697266
    6. ' ' → logprob: -21.500003814697266
    7. '	count' → logprob: -21.875003814697266
    8. '   ' → logprob: -21.875003814697266
    9. 'counter' → logprob: -22.500003814697266
    10. '[count' → logprob: -23.000003814697266

Token 149: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.9361264946837764e-07
    2. '0' → logprob: -15.625
    3. '=
' → logprob: -17.125
    4. '=

' → logprob: -17.375
    5. '=count' → logprob: -18.125
    6. ')=' → logprob: -18.75
    7. '=int' → logprob: -19.5
    8. ' =' → logprob: -19.625
    9. ']=' → logprob: -21.0
    10. '.=' → logprob: -21.875

Token 150: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '۰' → logprob: -19.75
    4. '012' → logprob: -20.375
    5. '```' → logprob: -20.625
    6. '０' → logprob: -20.875
    7. '00' → logprob: -21.125
    8. '000' → logprob: -21.375
    9. '014' → logprob: -21.625
    10. '<|end|>' → logprob: -21.75

Token 151: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01847708597779274
    2. '               ' → logprob: -4.143476963043213
    3. '       ' → logprob: -6.518476963043213
    4. '          ' → logprob: -8.143477439880371
    5. '		' → logprob: -8.268477439880371
    6. 'if' → logprob: -9.393477439880371
    7. '              ' → logprob: -9.518477439880371
    8. '            ' → logprob: -10.143477439880371
    9. '                   ' → logprob: -10.143477439880371
    10. ' if' → logprob: -10.768477439880371

Token 152: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026210537180304527
    2. 'if' → logprob: -4.401210308074951
    3. '       ' → logprob: -5.276210308074951
    4. '               ' → logprob: -5.276210308074951
    5. ' if' → logprob: -5.901210308074951
    6. '   ' → logprob: -8.02621078491211
    7. '          ' → logprob: -8.77621078491211
    8. '            ' → logprob: -9.90121078491211
    9. '              ' → logprob: -10.90121078491211
    10. '```' → logprob: -10.90121078491211

Token 153: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0008345239912159741
    2. ' if' → logprob: -7.2508344650268555
    3. '           ' → logprob: -9.000834465026855
    4. '               ' → logprob: -14.125834465026855
    5. '```' → logprob: -16.250835418701172
    6. '   ' → logprob: -16.375835418701172
    7. '       ' → logprob: -16.750835418701172
    8. 'If' → logprob: -17.000835418701172
    9. '            ' → logprob: -17.875835418701172
    10. ' ' → logprob: -18.000835418701172

Token 154: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3132660686969757
    2. ' count' → logprob: -1.3132660388946533
    3. '(count' → logprob: -13.688265800476074
    4. ' ' → logprob: -13.688265800476074
    5. '	count' → logprob: -14.563265800476074
    6. 'c' → logprob: -14.938265800476074
    7. '[count' → logprob: -15.188265800476074
    8. '<count' → logprob: -15.313265800476074
    9. ' coun' → logprob: -16.31326675415039
    10. 'co' → logprob: -16.31326675415039

Token 155: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -1.0280383548888494e-06
    2. ' >=' → logprob: -14.875000953674316
    3. '>' → logprob: -15.125000953674316
    4. ']>=' → logprob: -15.500000953674316
    5. ')>=' → logprob: -16.375001907348633
    6. '==' → logprob: -16.625001907348633
    7. '">' → logprob: -18.125001907348633
    8. '≥' → logprob: -18.375001907348633
    9. '```' → logprob: -19.625001907348633
    10. '[' → logprob: -19.875001907348633

Token 156: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.5690089639974758e-05
    2. ' D' → logprob: -11.125015258789062
    3. '   ' → logprob: -15.250015258789062
    4. '```' → logprob: -15.250015258789062
    5. '           ' → logprob: -15.750015258789062
    6. '               ' → logprob: -16.375015258789062
    7. '
' → logprob: -16.375015258789062
    8. '       ' → logprob: -16.750015258789062
    9. '                   ' → logprob: -17.625015258789062
    10. ' ' → logprob: -17.875015258789062

Token 157: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4800485074520111
    2. '               ' → logprob: -1.1050485372543335
    3. ':
' → logprob: -3.105048418045044
    4. '           ' → logprob: -5.605048656463623
    5. 'res' → logprob: -6.855048656463623
    6. '              ' → logprob: -8.105048179626465
    7. 'and' → logprob: -10.730048179626465
    8. '          ' → logprob: -10.855048179626465
    9. '       ' → logprob: -10.980048179626465
    10. ':

' → logprob: -10.980048179626465

Token 158: '               ' (ID: 506)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5769081115722656
    2. '               ' → logprob: -0.8269081115722656
    3. '           ' → logprob: -7.201908111572266
    4. ' res' → logprob: -8.701908111572266
    5. '              ' → logprob: -10.576908111572266
    6. '                   ' → logprob: -10.951908111572266
    7. '	res' → logprob: -12.826908111572266
    8. '       ' → logprob: -12.951908111572266
    9. '   ' → logprob: -13.076908111572266
    10. '             ' → logprob: -13.201908111572266

Token 159: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -3.128163257315464e-07
    2. ' res' → logprob: -15.5
    3. '   ' → logprob: -20.75
    4. '       ' → logprob: -21.25
    5. '           ' → logprob: -21.5
    6. '               ' → logprob: -21.875
    7. '1' → logprob: -22.125
    8. '                   ' → logprob: -22.25
    9. '	res' → logprob: -22.375
    10. '```' → logprob: -23.0

Token 160: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -1.0445127372804563e-05
    2. '+' → logprob: -11.62501049041748
    3. ']+=' → logprob: -13.87501049041748
    4. '```' → logprob: -15.50001049041748
    5. '+=(' → logprob: -16.000009536743164
    6. '+='' → logprob: -16.125009536743164
    7. '+="' → logprob: -16.625009536743164
    8. ' +=' → logprob: -16.750009536743164
    9. '=' → logprob: -18.625009536743164
    10. '++' → logprob: -18.625009536743164

Token 161: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '0' → logprob: -18.875
    4. '```' → logprob: -19.0
    5. '   ' → logprob: -19.875
    6. '
' → logprob: -20.0
    7. '+' → logprob: -20.5
    8. 'res' → logprob: -20.875
    9. '-' → logprob: -21.0
    10. '(' → logprob: -21.1875

Token 162: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.3596853831550106e-05
    2. ' print' → logprob: -9.875053405761719
    3. '
' → logprob: -13.375053405761719
    4. ')' → logprob: -15.875053405761719
    5. '```' → logprob: -15.875053405761719
    6. '<|end|>' → logprob: -16.25005340576172
    7. '(print' → logprob: -16.62505340576172
    8. '-print' → logprob: -17.25005340576172
    9. '.print' → logprob: -18.12505340576172
    10. '#print' → logprob: -18.75005340576172

Token 163: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.451116051815916e-05
    2. ' print' → logprob: -10.750024795532227
    3. ')' → logprob: -13.375024795532227
    4. '(print' → logprob: -14.500024795532227
    5. '#print' → logprob: -15.500024795532227
    6. '
' → logprob: -15.500024795532227
    7. '```' → logprob: -16.250024795532227
    8. '<|end|>' → logprob: -16.250024795532227
    9. '.print' → logprob: -16.500024795532227
    10. '-print' → logprob: -17.125024795532227

Token 164: '(res' (ID: 8331)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06200588867068291
    2. '(res' → logprob: -2.8120059967041016
    3. '('' → logprob: -10.437005996704102
    4. 'res' → logprob: -12.562005996704102
    5. ' (' → logprob: -13.312005996704102
    6. '(`' → logprob: -13.687005996704102
    7. '(
' → logprob: -14.062005996704102
    8. '()' → logprob: -14.312005996704102
    9. '("("' → logprob: -14.687005996704102
    10. '("' → logprob: -15.062005996704102

Token 165: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')`' → logprob: -15.625
    3. ' )' → logprob: -16.25
    4. '))' → logprob: -17.625
    5. '`)' → logprob: -18.375
    6. '')' → logprob: -18.625
    7. ')
' → logprob: -18.875
    8. '()' → logprob: -19.875
    9. '")' → logprob: -20.25
    10. ')}' → logprob: -20.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 163
Tokens correctement prédits (1ère position, stricte): 76
Tokens correctement prédits (1ère position, avec adaptation): 92
Tokens correctement prédits (top 10): 147
Précision stricte (1ère position): 46.63%
Précision adaptée (1ère position): 56.44%
Précision (top 10): 90.18%
================================================================================
