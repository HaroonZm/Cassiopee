================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:12:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

input = sys.stdin.readline

N = int(input())
for _ in range(N):
    s, d = map(int, input().split())
    diff = d - s
    # On cherche le plus grand n tel que 2^n divise diff
    # Ceci équivaut à la puissance de 2 maximale qui divise diff
    if diff == 0:
        print(0)
        continue
    # extraire la plus grande puissance de 2 qui divise diff
    # utiliser le fait que diff & (-diff) donne la plus petite puissance de 2 qui divise diff
    p = diff & (-diff)
    # p = 2^n, donc n = nombre de bits de p - 1
    n = p.bit_length() - 1
    print(n + 1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -17.000125885009766

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1524793654680252
    2. 'import' → logprob: -3.152479410171509
    3. '\' → logprob: -3.402479410171509
    4. '\n' → logprob: -3.777479410171509
    5. '
' → logprob: -4.02747917175293
    6. '

' → logprob: -5.02747917175293
    7. '```' → logprob: -5.27747917175293
    8. '<|end|>' → logprob: -5.40247917175293
    9. ',' → logprob: -5.90247917175293
    10. '<|end|>' → logprob: -6.90247917175293

Token 6: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.111208438873291
    2. '\' → logprob: -1.611208438873291
    3. 'import' → logprob: -1.861208438873291
    4. '.' → logprob: -1.861208438873291
    5. '```' → logprob: -2.611208438873291
    6. 'def' → logprob: -3.361208438873291
    7. '
' → logprob: -4.111208438873291
    8. ',' → logprob: -4.611208438873291
    9. '#' → logprob: -5.236208438873291
    10. '<|end|>' → logprob: -5.361208438873291

Token 7: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06226511299610138
    2. '.' → logprob: -2.812265157699585
    3. ' (' → logprob: -8.937265396118164
    4. ')' → logprob: -10.312265396118164
    5. '_' → logprob: -10.312265396118164
    6. ',' → logprob: -10.687265396118164
    7. '(
' → logprob: -11.062265396118164
    8. '()' → logprob: -11.687265396118164
    9. '(.)' → logprob: -11.687265396118164
    10. '[' → logprob: -11.812265396118164

Token 8: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.20753465592861176
    2. ' input' → logprob: -2.2075345516204834
    3. 'input' → logprob: -3.0825345516204834
    4. 'sys' → logprob: -3.4575345516204834
    5. ' ' → logprob: -10.207534790039062
    6. '=sys' → logprob: -10.457534790039062
    7. '	sys' → logprob: -11.707534790039062
    8. '(sys' → logprob: -12.082534790039062
    9. ' raw' → logprob: -12.957534790039062
    10. '=input' → logprob: -13.082534790039062

Token 9: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00018363336857873946
    2. '.stdin' → logprob: -9.125184059143066
    3. ' .' → logprob: -10.500184059143066
    4. '.import' → logprob: -11.250184059143066
    5. '.input' → logprob: -11.625184059143066
    6. '.readline' → logprob: -12.250184059143066
    7. '.argv' → logprob: -12.375184059143066
    8. '.stdout' → logprob: -12.875184059143066
    9. '.exit' → logprob: -13.250184059143066
    10. '.path' → logprob: -13.750184059143066

Token 10: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6558128595352173
    2. '.readline' → logprob: -0.7808128595352173
    3. '.read' → logprob: -3.7808127403259277
    4. 'read' → logprob: -10.030813217163086
    5. '.Read' → logprob: -10.280813217163086
    6. '.readlines' → logprob: -10.405813217163086
    7. '```' → logprob: -11.780813217163086
    8. ' .' → logprob: -12.530813217163086
    9. '.READ' → logprob: -13.030813217163086
    10. '.get' → logprob: -13.280813217163086

Token 11: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20942409336566925
    2. '(
' → logprob: -1.8344241380691528
    3. '()' → logprob: -4.209424018859863
    4. '
' → logprob: -4.709424018859863
    5. '(

' → logprob: -6.459424018859863
    6. '()
' → logprob: -7.209424018859863
    7. '\n' → logprob: -7.709424018859863
    8. '```' → logprob: -8.334424018859863
    9. '\' → logprob: -8.459424018859863
    10. '

' → logprob: -8.584424018859863

Token 12: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20349201560020447
    2. 'def' → logprob: -1.7034920454025269
    3. 'for' → logprob: -6.828492164611816
    4. 'N' → logprob: -8.203492164611816
    5. 't' → logprob: -8.703492164611816
    6. '(' → logprob: -9.328492164611816
    7. '(n' → logprob: -9.328492164611816
    8. 'num' → logprob: -9.328492164611816
    9. 'a' → logprob: -9.453492164611816
    10. 'data' → logprob: -9.953492164611816

Token 13: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.153968095779419
    2. ' =' → logprob: -1.153968095779419
    3. ' ' → logprob: -2.028968095779419
    4. ')' → logprob: -2.403968095779419
    5. '[' → logprob: -2.403968095779419
    6. ',' → logprob: -4.02896785736084
    7. '.' → logprob: -4.27896785736084
    8. '>' → logprob: -5.52896785736084
    9. '_' → logprob: -5.52896785736084
    10. ' )' → logprob: -5.77896785736084

Token 14: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.029773399233818054
    2. 'int' → logprob: -3.529773473739624
    3. ' ' → logprob: -11.279773712158203
    4. ' input' → logprob: -12.904773712158203
    5. '10' → logprob: -13.154773712158203
    6. '5' → logprob: -13.654773712158203
    7. '=int' → logprob: -13.904773712158203
    8. '0' → logprob: -14.029773712158203
    9. '(int' → logprob: -14.154773712158203
    10. ' map' → logprob: -14.404773712158203

Token 15: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07918785512447357
    2. '(input' → logprob: -2.5791878700256348
    3. '(N' → logprob: -8.954187393188477
    4. ' (' → logprob: -9.579187393188477
    5. '('' → logprob: -9.954187393188477
    6. '(`' → logprob: -10.829187393188477
    7. '()' → logprob: -12.204187393188477
    8. 'input' → logprob: -12.329187393188477
    9. '(sys' → logprob: -12.329187393188477
    10. '(
' → logprob: -12.704187393188477

Token 16: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.26615622639656067
    2. '()' → logprob: -1.8911561965942383
    3. ')' → logprob: -2.5161561965942383
    4. '(' → logprob: -6.266156196594238
    5. ' ())' → logprob: -9.891156196594238
    6. '('' → logprob: -11.141156196594238
    7. '`)' → logprob: -11.391156196594238
    8. '(
' → logprob: -12.266156196594238
    9. '()))' → logprob: -12.516156196594238
    10. '))' → logprob: -12.641156196594238

Token 17: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17605647444725037
    2. 'data' → logprob: -3.176056385040283
    3. 'result' → logprob: -3.426056385040283
    4. 's' → logprob: -3.801056385040283
    5. 'if' → logprob: -4.301056385040283
    6. 'factor' → logprob: -5.051056385040283
    7. ')' → logprob: -5.176056385040283
    8. 'arr' → logprob: -5.301056385040283
    9. 'a' → logprob: -5.676056385040283
    10. ' for' → logprob: -5.801056385040283

Token 18: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004198778886348009
    2. ' i' → logprob: -5.5041985511779785
    3. '  ' → logprob: -9.129199028015137
    4. ' _' → logprob: -12.379199028015137
    5. '_' → logprob: -12.879199028015137
    6. ' range' → logprob: -13.504199028015137
    7. ' N' → logprob: -13.629199028015137
    8. ' ' → logprob: -14.629199028015137
    9. ' ‌' → logprob: -14.629199028015137
    10. 'i' → logprob: -15.004199028015137

Token 19: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011281709186732769
    2. 'in' → logprob: -5.011281490325928
    3. 'range' → logprob: -6.011281490325928
    4. ' ' → logprob: -6.761281490325928
    5. ' range' → logprob: -7.261281490325928
    6. '_' → logprob: -9.261281967163086
    7. ' _' → logprob: -9.761281967163086
    8. ' i' → logprob: -10.636281967163086
    9. '  ' → logprob: -11.011281967163086
    10. 'n' → logprob: -11.511281967163086

Token 20: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2519364058971405
    2. ' range' → logprob: -1.501936435699463
    3. '	range' → logprob: -13.001935958862305
    4. '_' → logprob: -13.501935958862305
    5. '(range' → logprob: -13.501935958862305
    6. ' ' → logprob: -14.001935958862305
    7. '  ' → logprob: -15.126935958862305
    8. 'rang' → logprob: -15.376935958862305
    9. '```' → logprob: -15.751935958862305
    10. ')' → logprob: -15.751935958862305

Token 21: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08208294957876205
    2. ' (' → logprob: -2.707082986831665
    3. '(N' → logprob: -4.457082748413086
    4. ' N' → logprob: -8.957082748413086
    5. '(n' → logprob: -8.957082748413086
    6. ' ' → logprob: -9.332082748413086
    7. ' range' → logprob: -9.832082748413086
    8. '(range' → logprob: -9.957082748413086
    9. 'range' → logprob: -11.707082748413086
    10. '  ' → logprob: -11.957082748413086

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026480844244360924
    2. ')' → logprob: -3.6514809131622314
    3. ':' → logprob: -8.776480674743652
    4. '):
' → logprob: -11.026480674743652
    5. ' ):' → logprob: -12.026480674743652
    6. '+' → logprob: -14.526480674743652
    7. '():' → logprob: -14.901480674743652
    8. ' )' → logprob: -14.901480674743652
    9. ' ' → logprob: -15.151480674743652
    10. '   ' → logprob: -15.651480674743652

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14715206623077393
    2. '    ' → logprob: -2.3971519470214844
    3. ' ' → logprob: -3.3971519470214844
    4. '    
' → logprob: -4.772151947021484
    5. '     
' → logprob: -6.772151947021484
    6. ' 
' → logprob: -7.772151947021484
    7. 'a' → logprob: -8.147151947021484
    8. '(' → logprob: -8.147151947021484
    9. ' (' → logprob: -8.397151947021484
    10. ' s' → logprob: -8.897151947021484

Token 24: ' s' (ID: 265)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.4577686786651611
    2. 'x' → logprob: -1.9577686786651611
    3. ' data' → logprob: -1.9577686786651611
    4. ' x' → logprob: -2.082768678665161
    5. 'a' → logprob: -2.457768678665161
    6. 'num' → logprob: -2.582768678665161
    7. ' num' → logprob: -3.207768678665161
    8. ' a' → logprob: -3.457768678665161
    9. '   ' → logprob: -4.082768440246582
    10. ' number' → logprob: -4.082768440246582

Token 25: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15419535338878632
    2. 'tr' → logprob: -2.2791953086853027
    3. '=' → logprob: -4.029195308685303
    4. 'trip' → logprob: -5.154195308685303
    5. ',' → logprob: -5.529195308685303
    6. ' tr' → logprob: -5.654195308685303
    7. '=input' → logprob: -6.654195308685303
    8. 't' → logprob: -6.779195308685303
    9. 'entence' → logprob: -6.904195308685303
    10. 'core' → logprob: -7.404195308685303

Token 26: ' d' (ID: 272)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2773893177509308
    2. 'e' → logprob: -2.2773892879486084
    3. 'd' → logprob: -2.9023892879486084
    4. 'k' → logprob: -3.4023892879486084
    5. ' t' → logprob: -3.9023892879486084
    6. 'b' → logprob: -4.7773895263671875
    7. 'n' → logprob: -5.7773895263671875
    8. 'm' → logprob: -6.0273895263671875
    9. 'l' → logprob: -6.1523895263671875
    10. 'x' → logprob: -6.1523895263671875

Token 27: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5232271552085876
    2. ' =' → logprob: -0.8982271552085876
    3. '=input' → logprob: -10.523226737976074
    4. ',' → logprob: -10.648226737976074
    5. ' ' → logprob: -11.023226737976074
    6. '=int' → logprob: -11.273226737976074
    7. ')' → logprob: -11.523226737976074
    8. 'istance' → logprob: -13.398226737976074
    9. '=s' → logprob: -13.773226737976074
    10. '  ' → logprob: -14.023226737976074

Token 28: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.026014963164925575
    2. 'map' → logprob: -3.901015043258667
    3. ' input' → logprob: -5.276014804840088
    4. 'input' → logprob: -8.151015281677246
    5. ' ' → logprob: -10.526015281677246
    6. ' s' → logprob: -11.401015281677246
    7. ' list' → logprob: -11.526015281677246
    8. ' [' → logprob: -12.526015281677246
    9. '	map' → logprob: -13.151015281677246
    10. '[' → logprob: -14.276015281677246

Token 29: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.021150287240743637
    2. '(' → logprob: -4.3961501121521
    3. '(str' → logprob: -5.0211501121521
    4. '(lambda' → logprob: -6.2711501121521
    5. '(input' → logprob: -9.271150588989258
    6. 'int' → logprob: -12.396150588989258
    7. '(float' → logprob: -12.521150588989258
    8. '[int' → logprob: -12.646150588989258
    9. ' (' → logprob: -12.896150588989258
    10. '(eval' → logprob: -13.146150588989258

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03370309993624687
    2. ',input' → logprob: -3.408703088760376
    3. '(input' → logprob: -10.658702850341797
    4. 'input' → logprob: -10.783702850341797
    5. ' ,' → logprob: -11.908702850341797
    6. '(' → logprob: -12.408702850341797
    7. ')' → logprob: -14.033702850341797
    8. '(),' → logprob: -14.783702850341797
    9. ' input' → logprob: -15.033702850341797
    10. '[input' → logprob: -15.908702850341797

Token 31: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.25193002820014954
    2. 'input' → logprob: -1.5019299983978271
    3. ')' → logprob: -14.751930236816406
    4. '(input' → logprob: -16.001930236816406
    5. '=input' → logprob: -16.376930236816406
    6. ' )' → logprob: -16.501930236816406
    7. ',input' → logprob: -16.501930236816406
    8. ' s' → logprob: -16.626930236816406
    9. 's' → logprob: -16.751930236816406
    10. ' ' → logprob: -17.126930236816406

Token 32: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.512236498361744e-07
    2. '()' → logprob: -14.875000953674316
    3. '())' → logprob: -16.5
    4. ')' → logprob: -17.0
    5. ' ().' → logprob: -18.5
    6. '()
' → logprob: -19.875
    7. '(' → logprob: -21.625
    8. '()

' → logprob: -21.875
    9. '.split' → logprob: -22.0
    10. '.' → logprob: -22.0

Token 33: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001974788261577487
    2. 'strip' → logprob: -6.251974582672119
    3. 'rstrip' → logprob: -10.001975059509277
    4. ' split' → logprob: -14.126975059509277
    5. '(split' → logprob: -16.12697410583496
    6. ')' → logprob: -18.75197410583496
    7. 'spl' → logprob: -19.00197410583496
    8. '.split' → logprob: -19.00197410583496
    9. ' strip' → logprob: -19.37697410583496
    10. '```' → logprob: -19.37697410583496

Token 34: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07967078685760498
    2. '))' → logprob: -2.5796709060668945
    3. '())' → logprob: -7.4546709060668945
    4. '()' → logprob: -8.579670906066895
    5. '()))' → logprob: -12.079670906066895
    6. ')
' → logprob: -12.829670906066895
    7. '))
' → logprob: -13.579670906066895
    8. '),' → logprob: -13.829670906066895
    9. ')`' → logprob: -13.954670906066895
    10. ')))' → logprob: -14.204670906066895

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30833232402801514
    2. ' if' → logprob: -2.6833324432373047
    3. '    
' → logprob: -3.3083324432373047
    4. 'if' → logprob: -3.5583324432373047
    5. ' 
' → logprob: -3.6833324432373047
    6. ' ' → logprob: -3.6833324432373047
    7. ')' → logprob: -3.8083324432373047
    8. '    ' → logprob: -4.058332443237305
    9. '   
' → logprob: -4.808332443237305
    10. ',' → logprob: -5.058332443237305

Token 36: ' diff' (ID: 8868)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.2557682991027832
    2. 'if' → logprob: -2.005768299102783
    3. 'r' → logprob: -2.255768299102783
    4. ' print' → logprob: -2.505768299102783
    5. ' if' → logprob: -2.755768299102783
    6. 'dist' → logprob: -2.755768299102783
    7. 'distance' → logprob: -2.880768299102783
    8. 'x' → logprob: -3.505768299102783
    9. ' r' → logprob: -3.880768299102783
    10. '   ' → logprob: -4.255768299102783

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026325728744268417
    2. '=' → logprob: -3.6513257026672363
    3. '_' → logprob: -11.151326179504395
    4. '=s' → logprob: -12.401326179504395
    5. 'er' → logprob: -13.276326179504395
    6. 's' → logprob: -14.151326179504395
    7. ')' → logprob: -14.276326179504395
    8. ',' → logprob: -14.276326179504395
    9. 'ance' → logprob: -14.776326179504395
    10. ' ' → logprob: -14.901326179504395

Token 38: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.1018650531768799
    2. 'abs' → logprob: -1.2268650531768799
    3. ' abs' → logprob: -2.35186505317688
    4. 'math' → logprob: -2.35186505317688
    5. ' d' → logprob: -2.47686505317688
    6. ' math' → logprob: -2.60186505317688
    7. 's' → logprob: -4.226864814758301
    8. 'int' → logprob: -5.351864814758301
    9. ' s' → logprob: -5.976864814758301
    10. ' int' → logprob: -6.851864814758301

Token 39: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14577491581439972
    2. '-' → logprob: -2.7707748413085938
    3. '**' → logprob: -3.5207748413085938
    4. '*' → logprob: -3.7707748413085938
    5. ' *' → logprob: -4.395774841308594
    6. ' **' → logprob: -4.895774841308594
    7. ' /' → logprob: -8.395774841308594
    8. '-s' → logprob: -9.270774841308594
    9. ' ' → logprob: -9.395774841308594
    10. ' +' → logprob: -10.020774841308594

Token 40: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0017064863350242376
    2. ' s' → logprob: -6.626706600189209
    3. 'math' → logprob: -8.62670612335205
    4. ' math' → logprob: -8.87670612335205
    5. '2' → logprob: -11.75170612335205
    6. '(math' → logprob: -12.00170612335205
    7. '(s' → logprob: -12.25170612335205
    8. ' ' → logprob: -12.50170612335205
    9. '(' → logprob: -12.50170612335205
    10. '1' → logprob: -12.75170612335205

Token 41: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1444462686777115
    2. ' if' → logprob: -2.76944637298584
    3. 'if' → logprob: -3.51944637298584
    4. ' 
' → logprob: -3.89444637298584
    5. '    
' → logprob: -4.76944637298584
    6. '  
' → logprob: -5.14444637298584
    7. '   ' → logprob: -6.39444637298584
    8. 'print' → logprob: -7.26944637298584
    9. '**' → logprob: -7.39444637298584
    10. '
' → logprob: -7.51944637298584

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05724085494875908
    2. ' if' → logprob: -3.3072409629821777
    3. '    
' → logprob: -4.432240962982178
    4. 'if' → logprob: -5.682240962982178
    5. '
' → logprob: -6.807240962982178
    6. '    ' → logprob: -6.932240962982178
    7. ' 
' → logprob: -7.432240962982178
    8. '     
' → logprob: -7.557240962982178
    9. '  
' → logprob: -9.43224048614502
    10. '   
' → logprob: -9.55724048614502

Token 43: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4372914433479309
    2. '   ' → logprob: -1.8122913837432861
    3. 'if' → logprob: -2.062291383743286
    4. ' math' → logprob: -4.187291622161865
    5. 'abs' → logprob: -4.312291622161865
    6. ' abs' → logprob: -5.062291622161865
    7. '2' → logprob: -5.312291622161865
    8. 'print' → logprob: -5.437291622161865
    9. 'math' → logprob: -5.437291622161865
    10. ' ' → logprob: -6.187291622161865

Token 44: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6677547693252563
    2. ' if' → logprob: -0.9177547693252563
    3. 'abs' → logprob: -3.542754650115967
    4. 'print' → logprob: -4.417754650115967
    5. ' math' → logprob: -4.417754650115967
    6. ' abs' → logprob: -5.167754650115967
    7. 'math' → logprob: -5.417754650115967
    8. 'answer' → logprob: -5.542754650115967
    9. 'result' → logprob: -5.667754650115967
    10. ' print' → logprob: -6.042754650115967

Token 45: ' cherche' (ID: 52345)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.02471870183944702
    2. 'ly' → logprob: -3.774718761444092
    3. 'line' → logprob: -7.899718761444092
    4. 'eline' → logprob: -8.024718284606934
    5. 'l' → logprob: -9.149718284606934
    6. 'el' → logprob: -9.274718284606934
    7. ' e' → logprob: -9.399718284606934
    8. ' the' → logprob: -9.524718284606934
    9. 'ce' → logprob: -9.649718284606934
    10. 'elif' → logprob: -9.899718284606934

Token 46: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.1504379510879517
    2. ' le' → logprob: -1.9004379510879517
    3. ' à' → logprob: -2.025437831878662
    4. ' l' → logprob: -2.400437831878662
    5. 'le' → logprob: -2.525437831878662
    6. ' les' → logprob: -2.525437831878662
    7. 'les' → logprob: -3.275437831878662
    8. 'l' → logprob: -3.775437831878662
    9. ' a' → logprob: -4.275437831878662
    10. ' ' → logprob: -4.525437831878662

Token 47: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -1.2115167379379272
    2. 'nombre' → logprob: -1.5865167379379272
    3. 'minimum' → logprob: -1.5865167379379272
    4. ' nombre' → logprob: -2.211516857147217
    5. ' minimum' → logprob: -2.711516857147217
    6. ' plus' → logprob: -3.086516857147217
    7. ' minimal' → logprob: -4.586516857147217
    8. ' smallest' → logprob: -4.961516857147217
    9. 'prem' → logprob: -5.211516857147217
    10. 'min' → logprob: -5.211516857147217

Token 48: ' grand' (ID: 6363)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.204352006316185
    2. 'pro' → logprob: -2.2043519020080566
    3. 'grand' → logprob: -3.2043519020080566
    4. ' petit' → logprob: -3.9543519020080566
    5. 'court' → logprob: -5.079351902008057
    6. '```' → logprob: -5.454351902008057
    7. '   ' → logprob: -6.079351902008057
    8. 'small' → logprob: -7.329351902008057
    9. '  ' → logprob: -8.954352378845215
    10. '    
' → logprob: -8.954352378845215

Token 49: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8896360993385315
    2. 'ent' → logprob: -1.3896360397338867
    3. ' entier' → logprob: -2.6396360397338867
    4. 'nombre' → logprob: -2.8896360397338867
    5. ' k' → logprob: -3.3896360397338867
    6. 'n' → logprob: -3.6396360397338867
    7. 'i' → logprob: -3.8896360397338867
    8. 'div' → logprob: -3.8896360397338867
    9. ' ' → logprob: -4.014636039733887
    10. 'c' → logprob: -4.014636039733887

Token 50: ' tel' (ID: 10716)
  Prédit: ' tel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tel' → logprob: -0.8306306004524231
    2. ' such' → logprob: -2.2056305408477783
    3. 'tel' → logprob: -2.2056305408477783
    4. ' telle' → logprob: -2.3306305408477783
    5. 't' → logprob: -2.4556305408477783
    6. ' ' → logprob: -3.2056305408477783
    7. 's' → logprob: -4.080630779266357
    8. 'n' → logprob: -4.205630779266357
    9. 'such' → logprob: -4.205630779266357
    10. ' n' → logprob: -4.330630779266357

Token 51: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.7209488153457642
    2. 'n' → logprob: -2.0959486961364746
    3. '   ' → logprob: -2.8459486961364746
    4. '(n' → logprob: -2.8459486961364746
    5. '```' → logprob: -2.8459486961364746
    6. 'quel' → logprob: -3.0959486961364746
    7. 'qui' → logprob: -3.4709486961364746
    8. 'u' → logprob: -3.7209486961364746
    9. 'qu' → logprob: -3.8459486961364746
    10. '=n' → logprob: -3.8459486961364746

Token 52: ' ' (ID: 220)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5999734401702881
    2. 'n' → logprob: -0.8499734401702881
    3. '(n' → logprob: -3.849973440170288
    4. ' (' → logprob: -6.224973678588867
    5. '(' → logprob: -9.224973678588867
    6. '```' → logprob: -9.349973678588867
    7. '   ' → logprob: -9.849973678588867
    8. '0' → logprob: -10.349973678588867
    9. '	n' → logprob: -10.474973678588867
    10. ' \(' → logprob: -10.599973678588867

Token 53: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.19922535121440887
    2. ' n' → logprob: -2.199225425720215
    3. '(n' → logprob: -2.699225425720215
    4. ' (' → logprob: -6.324225425720215
    5. '(' → logprob: -8.574225425720215
    6. '   ' → logprob: -9.324225425720215
    7. 'frac' → logprob: -9.699225425720215
    8. '```' → logprob: -9.949225425720215
    9. ' ' → logprob: -10.199225425720215
    10. '2' → logprob: -10.199225425720215

Token 54: '^' (ID: 61)
  Prédit: '*n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*n' → logprob: -0.2720206081867218
    2. 'n' → logprob: -2.1470205783843994
    3. '*' → logprob: -2.3970205783843994
    4. ' *' → logprob: -4.0220208168029785
    5. '**' → logprob: -4.5220208168029785
    6. '<=' → logprob: -7.8970208168029785
    7. ' <=' → logprob: -8.02202033996582
    8. '<n' → logprob: -8.89702033996582
    9. ' +' → logprob: -9.27202033996582
    10. '+' → logprob: -9.52202033996582

Token 55: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011079533956944942
    2. '**' → logprob: -4.63607931137085
    3. '*n' → logprob: -7.76107931137085
    4. '^' → logprob: -7.88607931137085
    5. '(n' → logprob: -8.761079788208008
    6. '0' → logprob: -9.011079788208008
    7. ' n' → logprob: -9.636079788208008
    8. '<n' → logprob: -9.761079788208008
    9. '*' → logprob: -10.136079788208008
    10. '
' → logprob: -11.511079788208008

Token 56: ' div' (ID: 4223)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.41424164175987244
    2. '<=' → logprob: -1.6642416715621948
    3. ' -' → logprob: -2.6642415523529053
    4. '-' → logprob: -2.7892415523529053
    5. '+' → logprob: -4.539241790771484
    6. ' <' → logprob: -6.164241790771484
    7. '*' → logprob: -6.414241790771484
    8. '<' → logprob: -6.414241790771484
    9. ' *' → logprob: -7.289241790771484
    10. ' +' → logprob: -7.539241790771484

Token 57: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.026595894247293472
    2. 'ide' → logprob: -3.6515958309173584
    3. 'isible' → logprob: -9.651596069335938
    4. '   ' → logprob: -10.276596069335938
    5. '```' → logprob: -10.776596069335938
    6. '|' → logprob: -10.776596069335938
    7. 'isse' → logprob: -11.026596069335938
    8. 'iseur' → logprob: -11.276596069335938
    9. '1' → logprob: -11.651596069335938
    10. '**' → logprob: -11.651596069335938

Token 58: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.4289724826812744
    2. ' diff' → logprob: -1.0539724826812744
    3. '(diff' → logprob: -8.803972244262695
    4. '	diff' → logprob: -9.428972244262695
    5. ' la' → logprob: -11.678972244262695
    6. ' ' → logprob: -11.928972244262695
    7. ' ' → logprob: -11.928972244262695
    8. ' le' → logprob: -12.053972244262695
    9. '_diff' → logprob: -12.053972244262695
    10. ' the' → logprob: -13.928972244262695

Token 59: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8322912454605103
    2. '   ' → logprob: -1.3322912454605103
    3. ' 
' → logprob: -2.8322911262512207
    4. ' while' → logprob: -2.9572911262512207
    5. ' n' → logprob: -3.0822911262512207
    6. '
' → logprob: -3.2072911262512207
    7. '    
' → logprob: -4.082291126251221
    8. 'while' → logprob: -4.332291126251221
    9. ' ' → logprob: -4.457291126251221
    10. '    ' → logprob: -4.707291126251221

Token 60: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5095421671867371
    2. 'n' → logprob: -1.0095422267913818
    3. 'count' → logprob: -4.759541988372803
    4. '    
' → logprob: -5.134541988372803
    5. ' n' → logprob: -5.259541988372803
    6. 'i' → logprob: -6.134541988372803
    7. '=' → logprob: -6.759541988372803
    8. ' i' → logprob: -6.759541988372803
    9. 'while' → logprob: -6.759541988372803
    10. 'cnt' → logprob: -6.884541988372803

Token 61: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.45822250843048096
    2. 'count' → logprob: -1.208222508430481
    3. 'cnt' → logprob: -3.0832223892211914
    4. 'i' → logprob: -4.958222389221191
    5. ' n' → logprob: -5.583222389221191
    6. ' count' → logprob: -6.083222389221191
    7. '   ' → logprob: -6.458222389221191
    8. 'ans' → logprob: -6.458222389221191
    9. 'answer' → logprob: -7.333222389221191
    10. 'k' → logprob: -7.333222389221191

Token 62: ' Ceci' (ID: 144699)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7727462649345398
    2. 'n' → logprob: -1.0227463245391846
    3. 'cnt' → logprob: -2.5227463245391846
    4. 'i' → logprob: -3.2727463245391846
    5. 'for' → logprob: -4.5227460861206055
    6. 'while' → logprob: -4.8977460861206055
    7. ' n' → logprob: -5.0227460861206055
    8. 'k' → logprob: -5.1477460861206055
    9. ' count' → logprob: -5.3977460861206055
    10. ' i' → logprob: -5.5227460861206055

Token 63: ' équ' (ID: 18899)
  Prédit: ' revient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' revient' → logprob: -0.6619658470153809
    2. ' =' → logprob: -1.9119658470153809
    3. ' signifie' → logprob: -2.661965847015381
    4. ' veut' → logprob: -3.161965847015381
    5. ' n' → logprob: -3.286965847015381
    6. ' correspond' → logprob: -3.411965847015381
    7. 'n' → logprob: -4.036965847015381
    8. '=' → logprob: -4.161965847015381
    9. 's' → logprob: -4.286965847015381
    10. ' vaut' → logprob: -4.536965847015381

Token 64: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -2.8325677703833207e-05
    2. 'i' → logprob: -12.125028610229492
    3. 'ivalent' → logprob: -12.500028610229492
    4. 'ival' → logprob: -13.000028610229492
    5. 'iva' → logprob: -13.000028610229492
    6. 'v' → logprob: -13.375028610229492
    7. 'aut' → logprob: -13.625028610229492
    8. 'quiv' → logprob: -13.875028610229492
    9. 'ivar' → logprob: -13.875028610229492
    10. '%' → logprob: -14.125028610229492

Token 65: 'aut' (ID: 1828)
  Prédit: 'aut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aut' → logprob: -0.5804396271705627
    2. 'ale' → logprob: -1.205439567565918
    3. 'al' → logprob: -2.955439567565918
    4. 'aux' → logprob: -3.455439567565918
    5. 'alent' → logprob: -3.830439567565918
    6. 'a' → logprob: -4.705439567565918
    7. 'alet' → logprob: -4.955439567565918
    8. 'alt' → logprob: -5.455439567565918
    9. '**' → logprob: -6.455439567565918
    10. 'ault' → logprob: -6.830439567565918

Token 66: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5811741948127747
    2. 'à' → logprob: -0.8311741948127747
    3. ' to' → logprob: -6.206174373626709
    4. 'a' → logprob: -6.456174373626709
    5. ' a' → logprob: -7.081174373626709
    6. ''à' → logprob: -8.70617389678955
    7. ' ' → logprob: -8.83117389678955
    8. 'to' → logprob: -9.08117389678955
    9. '   ' → logprob: -9.33117389678955
    10. '  ' → logprob: -9.70617389678955

Token 67: ' la' (ID: 557)
  Prédit: '(diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(diff' → logprob: -0.35917869210243225
    2. ' (' → logprob: -1.7341786623001099
    3. 'diff' → logprob: -2.3591787815093994
    4. ' diff' → logprob: -3.6091787815093994
    5. ' ' → logprob: -6.60917854309082
    6. ' math' → logprob: -7.73417854309082
    7. '	diff' → logprob: -7.98417854309082
    8. '(' → logprob: -8.23417854309082
    9. '  ' → logprob: -8.48417854309082
    10. '(math' → logprob: -8.48417854309082

Token 68: ' puissance' (ID: 63494)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.35223323106765747
    2. 'diff' → logprob: -1.7272331714630127
    3. 'plus' → logprob: -3.1022331714630127
    4. 'fonction' → logprob: -3.7272331714630127
    5. 'valuation' → logprob: -3.8522331714630127
    6. 'nombre' → logprob: -5.227233409881592
    7. ' ' → logprob: -5.227233409881592
    8. 'v' → logprob: -5.852233409881592
    9. ' plus' → logprob: -6.102233409881592
    10. 'bin' → logprob: -6.227233409881592

Token 69: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.44788360595703125
    2. ' de' → logprob: -1.4478836059570312
    3. '2' → logprob: -2.3228836059570312
    4. 'd' → logprob: -4.447883605957031
    5. 'f' → logprob: -5.072883605957031
    6. ' ' → logprob: -6.197883605957031
    7. 'ex' → logprob: -6.322883605957031
    8. '```' → logprob: -6.947883605957031
    9. '_de' → logprob: -7.072883605957031
    10. 'e' → logprob: -7.572883605957031

Token 70: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02902713231742382
    2. ' ' → logprob: -3.654027223587036
    3. 'de' → logprob: -6.154026985168457
    4. ' deux' → logprob: -7.529026985168457
    5. ' two' → logprob: -10.279026985168457
    6. '  ' → logprob: -11.779026985168457
    7. 'two' → logprob: -12.154026985168457
    8. '```' → logprob: -12.529026985168457
    9. 'diff' → logprob: -13.279026985168457
    10. '

' → logprob: -13.529026985168457

Token 71: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.023274600505828857
    2. 'de' → logprob: -3.7732746601104736
    3. ' ' → logprob: -11.148274421691895
    4. 'two' → logprob: -11.898274421691895
    5. ' deux' → logprob: -12.273274421691895
    6. '```' → logprob: -13.898274421691895
    7. 'l' → logprob: -14.523274421691895
    8. 'la' → logprob: -15.148274421691895
    9. '

' → logprob: -15.398274421691895
    10. '`' → logprob: -15.648274421691895

Token 72: ' maximale' (ID: 76380)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.20721514523029327
    2. '(diff' → logprob: -2.3322150707244873
    3. 'dans' → logprob: -3.7072150707244873
    4. ' dans' → logprob: -4.332215309143066
    5. ' de' → logprob: -4.582215309143066
    6. '**' → logprob: -4.957215309143066
    7. 'de' → logprob: -5.457215309143066
    8. ' diff' → logprob: -5.832215309143066
    9. ''s' → logprob: -5.957215309143066
    10. ',' → logprob: -6.207215309143066

Token 73: ' qui' (ID: 2780)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.28110435605049133
    2. '(diff' → logprob: -2.406104326248169
    3. '(' → logprob: -2.781104326248169
    4. 'dans' → logprob: -3.531104326248169
    5. ' (' → logprob: -4.031104564666748
    6. ' dans' → logprob: -5.406104564666748
    7. '=' → logprob: -5.406104564666748
    8. ',' → logprob: -5.656104564666748
    9. '```' → logprob: -6.031104564666748
    10. 'de' → logprob: -6.031104564666748

Token 74: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.003067314624786377
    2. 'divide' → logprob: -6.128067493438721
    3. ' div' → logprob: -7.628067493438721
    4. '```' → logprob: -8.378067016601562
    5. 'n' → logprob: -10.003067016601562
    6. '_div' → logprob: -11.003067016601562
    7. '<div' → logprob: -11.128067016601562
    8. 'd' → logprob: -11.253067016601562
    9. '	div' → logprob: -11.253067016601562
    10. ' divides' → logprob: -11.378067016601562

Token 75: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.0006846757605671883
    2. 'ide' → logprob: -7.37568473815918
    3. '```' → logprob: -10.87568473815918
    4. 'isible' → logprob: -11.62568473815918
    5. 'isent' → logprob: -12.37568473815918
    6. 'is' → logprob: -12.50068473815918
    7. 'se' → logprob: -12.75068473815918
    8. '\' → logprob: -12.75068473815918
    9. 'ent' → logprob: -13.62568473815918
    10. 'e' → logprob: -13.75068473815918

Token 76: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.00976305641233921
    2. ' diff' → logprob: -4.634763240814209
    3. '	diff' → logprob: -12.63476276397705
    4. '(diff' → logprob: -12.88476276397705
    5. '```' → logprob: -15.13476276397705
    6. '`' → logprob: -15.75976276397705
    7. 'difference' → logprob: -15.75976276397705
    8. 'd' → logprob: -15.88476276397705
    9. ' ' → logprob: -16.009763717651367
    10. '_diff' → logprob: -16.009763717651367

Token 77: '
' (ID: 198)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.3521406650543213
    2. 'n' → logprob: -3.1021406650543213
    3. '_' → logprob: -3.3521406650543213
    4. 's' → logprob: -3.6021406650543213
    5. 'def' → logprob: -3.6021406650543213
    6. 'count' → logprob: -3.6021406650543213
    7. '=' → logprob: -3.9771406650543213
    8. '   ' → logprob: -4.102140426635742
    9. ',' → logprob: -4.352140426635742
    10. 't' → logprob: -4.602140426635742

Token 78: '   ' (ID: 271)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.0378605127334595
    2. 'n' → logprob: -1.2878605127334595
    3. '   ' → logprob: -1.4128605127334595
    4. 'diff' → logprob: -3.28786039352417
    5. 'if' → logprob: -3.91286039352417
    6. 'answer' → logprob: -4.28786039352417
    7. 'cnt' → logprob: -4.78786039352417
    8. 'result' → logprob: -5.03786039352417
    9. 'ans' → logprob: -5.41286039352417
    10. 'power' → logprob: -5.53786039352417

Token 79: ' if' (ID: 538)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.34655630588531494
    2. 'diff' → logprob: -2.0965561866760254
    3. 'n' → logprob: -2.4715561866760254
    4. 'cnt' → logprob: -3.3465561866760254
    5. 'ans' → logprob: -4.471556186676025
    6. 'answer' → logprob: -4.971556186676025
    7. 'power' → logprob: -5.221556186676025
    8. 'res' → logprob: -5.596556186676025
    9. 'pow' → logprob: -5.971556186676025
    10. 'c' → logprob: -6.096556186676025

Token 80: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.011199071072041988
    2. 'diff' → logprob: -4.511198997497559
    3. '(diff' → logprob: -9.386198997497559
    4. '	diff' → logprob: -10.011198997497559
    5. ' d' → logprob: -12.011198997497559
    6. ' ' → logprob: -12.261198997497559
    7. ' ' → logprob: -12.511198997497559
    8. ' dif' → logprob: -12.636198997497559
    9. ' (' → logprob: -13.511198997497559
    10. 'd' → logprob: -13.636198997497559

Token 81: ' ==' (ID: 951)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.8158144950866699
    2. ' ==' → logprob: -1.19081449508667
    3. '==' → logprob: -2.19081449508667
    4. '>' → logprob: -3.31581449508667
    5. ' %' → logprob: -3.44081449508667
    6. '%' → logprob: -3.69081449508667
    7. '&' → logprob: -3.69081449508667
    8. ' >' → logprob: -4.19081449508667
    9. ' !=' → logprob: -5.94081449508667
    10. ' ' → logprob: -6.06581449508667

Token 82: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1128225177526474
    2. '0' → logprob: -2.2378225326538086
    3. ' ' → logprob: -15.237822532653809
    4. '  ' → logprob: -17.237821578979492
    5. '```' → logprob: -19.300321578979492
    6. '1' → logprob: -19.425321578979492
    7. '   ' → logprob: -19.550321578979492
    8. '۰' → logprob: -20.050321578979492
    9. '00' → logprob: -20.237821578979492
    10. 's' → logprob: -20.425321578979492

Token 83: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001170460251159966
    2. ' ' → logprob: -6.751170635223389
    3. '1' → logprob: -16.751171112060547
    4. '  ' → logprob: -17.313671112060547
    5. '۰' → logprob: -17.313671112060547
    6. '   ' → logprob: -17.938671112060547
    7. '    ' → logprob: -18.251171112060547
    8. 's' → logprob: -18.438671112060547
    9. '00' → logprob: -18.626171112060547
    10. ' ' → logprob: -18.876171112060547

Token 84: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001017551330733113
    2. ':
' → logprob: -9.750102043151855
    3. ':return' → logprob: -11.000102043151855
    4. '   ' → logprob: -11.250102043151855
    5. ' :' → logprob: -11.625102043151855
    6. '       ' → logprob: -13.125102043151855
    7. '):' → logprob: -13.625102043151855
    8. ' or' → logprob: -14.500102043151855
    9. ',' → logprob: -15.750102043151855
    10. '.' → logprob: -16.00010108947754

Token 85: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020846420899033546
    2. '   ' → logprob: -4.395846366882324
    3. ':' → logprob: -5.270846366882324
    4. '    ' → logprob: -7.270846366882324
    5. ' print' → logprob: -7.645846366882324
    6. '0' → logprob: -8.145846366882324
    7. '\n' → logprob: -8.145846366882324
    8. ' :' → logprob: -8.395846366882324
    9. '    
' → logprob: -8.770846366882324
    10. ' continue' → logprob: -8.895846366882324

Token 86: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03878692910075188
    2. ' print' → logprob: -3.4137868881225586
    3. '   ' → logprob: -5.788786888122559
    4. '0' → logprob: -6.288786888122559
    5. '       ' → logprob: -9.288786888122559
    6. 'continue' → logprob: -10.163786888122559
    7. '1' → logprob: -10.913786888122559
    8. 'pr' → logprob: -11.038786888122559
    9. '```' → logprob: -11.788786888122559
    10. ' ' → logprob: -11.913786888122559

Token 87: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.32057496905326843
    2. '0' → logprob: -1.3205749988555908
    3. '(s' → logprob: -5.570574760437012
    4. '(-' → logprob: -6.695574760437012
    5. 's' → logprob: -6.945574760437012
    6. '("' → logprob: -7.320574760437012
    7. '('' → logprob: -8.695574760437012
    8. '(diff' → logprob: -8.820574760437012
    9. '-' → logprob: -9.445574760437012
    10. '(d' → logprob: -9.820574760437012

Token 88: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.032508671283721924
    2. 's' → logprob: -4.032508850097656
    3. '-' → logprob: -4.407508850097656
    4. 'd' → logprob: -7.282508850097656
    5. '1' → logprob: -7.532508850097656
    6. 'diff' → logprob: -8.157508850097656
    7. '"' → logprob: -9.157508850097656
    8. '-s' → logprob: -9.282508850097656
    9. '"s' → logprob: -9.657508850097656
    10. ' ' → logprob: -9.782508850097656

Token 89: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030204670503735542
    2. '   ' → logprob: -3.5302047729492188
    3. ')
' → logprob: -7.780204772949219
    4. ' )' → logprob: -10.780204772949219
    5. '       ' → logprob: -11.530204772949219
    6. ')return' → logprob: -13.530204772949219
    7. 'else' → logprob: -13.905204772949219
    8. '))' → logprob: -14.405204772949219
    9. '`)' → logprob: -14.780204772949219
    10. '')' → logprob: -15.280204772949219

Token 90: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16466867923736572
    2. 'else' → logprob: -1.9146686792373657
    3. ' else' → logprob: -5.539668560028076
    4. 'continue' → logprob: -8.414669036865234
    5. '       ' → logprob: -9.414669036865234
    6. 'elif' → logprob: -9.539669036865234
    7. ')' → logprob: -9.914669036865234
    8. ' continue' → logprob: -10.414669036865234
    9. '```' → logprob: -11.039669036865234
    10. '    
' → logprob: -11.664669036865234

Token 91: ' continue' (ID: 4901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32143712043762207
    2. '       ' → logprob: -1.446437120437622
    3. 'continue' (adapté à ' continue') → logprob: -3.321437120437622
    4. 'else' → logprob: -6.196436882019043
    5. ' continue' → logprob: -6.696436882019043
    6. '	continue' → logprob: -9.821436882019043
    7. ' else' → logprob: -10.196436882019043
    8. ' ' → logprob: -12.571436882019043
    9. 'contin' → logprob: -12.571436882019043
    10. '```' → logprob: -12.571436882019043

Token 92: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3249647319316864
    2. '    
' → logprob: -2.199964761734009
    3. 'n' → logprob: -3.324964761734009
    4. 'count' → logprob: -3.699964761734009
    5. '0' → logprob: -4.19996452331543
    6. '1' → logprob: -4.19996452331543
    7. 'while' → logprob: -4.32496452331543
    8. '
' → logprob: -4.57496452331543
    9. '   
' → logprob: -4.94996452331543
    10. '2' → logprob: -4.94996452331543

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7942765355110168
    2. '    
' → logprob: -0.7942765355110168
    3. '   
' → logprob: -3.669276475906372
    4. ' 
' → logprob: -4.169276714324951
    5. 'n' → logprob: -4.294276714324951
    6. '  
' → logprob: -4.669276714324951
    7. '
' → logprob: -4.669276714324951
    8. '```' → logprob: -5.294276714324951
    9. '     
' → logprob: -5.419276714324951
    10. '    

' → logprob: -5.919276714324951

Token 94: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.1342812329530716
    2. 'cnt' → logprob: -3.0092811584472656
    3. 'n' → logprob: -3.3842811584472656
    4. '   ' → logprob: -4.384281158447266
    5. 'ans' → logprob: -5.259281158447266
    6. ' count' → logprob: -5.759281158447266
    7. 'res' → logprob: -5.759281158447266
    8. 'diff' → logprob: -5.884281158447266
    9. 'power' → logprob: -6.009281158447266
    10. 'pow' → logprob: -6.134281158447266

Token 95: ' extra' (ID: 5018)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3018992841243744
    2. 'diff' → logprob: -2.9268991947174072
    3. 'cnt' → logprob: -3.1768991947174072
    4. 'n' → logprob: -3.5518991947174072
    5. ' count' → logprob: -3.6768991947174072
    6. '   ' → logprob: -3.9268991947174072
    7. 'power' → logprob: -4.051899433135986
    8. 'print' → logprob: -4.301899433135986
    9. 'res' → logprob: -4.426899433135986
    10. 'pow' → logprob: -4.551899433135986

Token 96: 'ire' (ID: 594)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.008513985201716423
    2. '=' → logprob: -5.758513927459717
    3. 't' → logprob: -6.508513927459717
    4. ' =' → logprob: -6.758513927459717
    5. '_bits' → logprob: -7.508513927459717
    6. 'ctions' → logprob: -7.633513927459717
    7. 'cts' → logprob: -8.633514404296875
    8. 'bits' → logprob: -9.008514404296875
    9. '_ct' → logprob: -9.008514404296875
    10. 'bit' → logprob: -9.133514404296875

Token 97: ' la' (ID: 557)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.862330436706543
    2. ' the' → logprob: -1.362330436706543
    3. 'diff' → logprob: -1.737330436706543
    4. 'lowest' → logprob: -3.362330436706543
    5. 'le' → logprob: -4.112330436706543
    6. ' lowest' → logprob: -4.362330436706543
    7. '(diff' → logprob: -4.362330436706543
    8. 's' → logprob: -4.487330436706543
    9. ' la' → logprob: -4.862330436706543
    10. ' ' → logprob: -5.112330436706543

Token 98: ' plus' (ID: 2932)
  Prédit: 'pu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pu' → logprob: -0.8190080523490906
    2. 'part' → logprob: -1.8190081119537354
    3. ' partie' → logprob: -2.0690081119537354
    4. 'diff' → logprob: -2.0690081119537354
    5. ' puissance' → logprob: -2.9440081119537354
    6. 'plus' → logprob: -3.4440081119537354
    7. 'val' → logprob: -4.819007873535156
    8. ' puiss' → logprob: -5.069007873535156
    9. 'pow' → logprob: -5.319007873535156
    10. ' plus' → logprob: -5.444007873535156

Token 99: ' grande' (ID: 10094)
  Prédit: ' faible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faible' → logprob: -0.573813796043396
    2. 'large' → logprob: -2.0738139152526855
    3. 'gr' → logprob: -2.6988139152526855
    4. 'pet' → logprob: -2.8238139152526855
    5. 'fa' → logprob: -3.5738139152526855
    6. 'pro' → logprob: -3.8238139152526855
    7. ' grande' → logprob: -4.1988139152526855
    8. 'b' → logprob: -4.3238139152526855
    9. 'bas' → logprob: -4.4488139152526855
    10. 'grand' → logprob: -4.6988139152526855

Token 100: ' puissance' (ID: 63494)
  Prédit: 'pu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pu' → logprob: -0.4077911674976349
    2. ' puissance' → logprob: -1.2827911376953125
    3. 'power' → logprob: -3.5327911376953125
    4. '2' → logprob: -4.6577911376953125
    5. 'pow' → logprob: -4.6577911376953125
    6. ' puiss' → logprob: -5.6577911376953125
    7. 'pot' → logprob: -6.6577911376953125
    8. ' ' → logprob: -6.7827911376953125
    9. ' power' → logprob: -6.7827911376953125
    10. 'p' → logprob: -6.9077911376953125

Token 101: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.08249685913324356
    2. '2' → logprob: -2.9574968814849854
    3. ' de' → logprob: -3.7074968814849854
    4. 'of' → logprob: -7.082496643066406
    5. ' ' → logprob: -7.207496643066406
    6. 'two' → logprob: -8.707496643066406
    7. '_de' → logprob: -8.707496643066406
    8. '   ' → logprob: -8.832496643066406
    9. 'div' → logprob: -9.082496643066406
    10. '  ' → logprob: -9.207496643066406

Token 102: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.016804099082946777
    2. 'de' → logprob: -4.266804218292236
    3. ' ' → logprob: -6.016804218292236
    4. ' deux' → logprob: -9.391803741455078
    5. 'two' → logprob: -9.391803741455078
    6. ' two' → logprob: -10.516803741455078
    7. '```' → logprob: -12.766803741455078
    8. 'div' → logprob: -15.141803741455078
    9. '_two' → logprob: -15.266803741455078
    10. '-' → logprob: -15.391803741455078

Token 103: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003610878484323621
    2. 'de' → logprob: -5.628611087799072
    3. 'two' → logprob: -12.253610610961914
    4. ' ' → logprob: -12.503610610961914
    5. '```' → logprob: -14.003610610961914
    6. ' deux' → logprob: -14.503610610961914
    7. '２' → logprob: -16.128610610961914
    8. '...' → logprob: -16.378610610961914
    9. '`' → logprob: -16.628610610961914
    10. 'diff' → logprob: -16.628610610961914

Token 104: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37825673818588257
    2. 'diff' → logprob: -1.6282567977905273
    3. 'while' → logprob: -3.1282567977905273
    4. 'count' → logprob: -4.253256797790527
    5. 'p' → logprob: -5.128256797790527
    6. '_' → logprob: -5.128256797790527
    7. 'power' → logprob: -5.253256797790527
    8. 't' → logprob: -5.503256797790527
    9. 'n' → logprob: -5.503256797790527
    10. '```' → logprob: -5.628256797790527

Token 105: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.005633320193737745
    2. 'diff' → logprob: -5.380633354187012
    3. 'divide' → logprob: -7.505633354187012
    4. ' div' → logprob: -8.130633354187012
    5. '```' → logprob: -9.630633354187012
    6. '  ' → logprob: -11.130633354187012
    7. '(div' → logprob: -11.130633354187012
    8. '<div' → logprob: -11.255633354187012
    9. '
' → logprob: -11.630633354187012
    10. '(diff' → logprob: -11.630633354187012

Token 106: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.01827249862253666
    2. 'ide' → logprob: -4.268272399902344
    3. 'se' → logprob: -6.018272399902344
    4. '```' → logprob: -7.518272399902344
    5. '   ' → logprob: -8.768272399902344
    6. 'sert' → logprob: -9.268272399902344
    7. 'iser' → logprob: -9.393272399902344
    8. 'ent' → logprob: -9.768272399902344
    9. 'de' → logprob: -10.018272399902344
    10. 'div' → logprob: -10.268272399902344

Token 107: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.0015339049277827144
    2. ' diff' → logprob: -7.2515339851379395
    3. '   ' → logprob: -7.6265339851379395
    4. '(diff' → logprob: -8.251533508300781
    5. '	diff' → logprob: -9.876533508300781
    6. 'la' → logprob: -12.251533508300781
    7. '```' → logprob: -12.501533508300781
    8. ' ' → logprob: -12.501533508300781
    9. 'the' → logprob: -13.001533508300781
    10. '  ' → logprob: -13.251533508300781

Token 108: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.732421875
    2. 'count' → logprob: -0.732421875
    3. 'cnt' → logprob: -4.607421875
    4. 'n' → logprob: -4.982421875
    5. 'diff' → logprob: -5.232421875
    6. '```' → logprob: -5.732421875
    7. 'while' → logprob: -6.357421875
    8. 'shift' → logprob: -6.482421875
    9. ' count' → logprob: -6.482421875
    10. '    
' → logprob: -6.982421875

Token 109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4096003770828247
    2. 'count' → logprob: -1.5346003770828247
    3. 'diff' → logprob: -2.784600257873535
    4. 'cnt' → logprob: -4.409600257873535
    5. 'lowest' → logprob: -4.909600257873535
    6. 'n' → logprob: -5.034600257873535
    7. 'ans' → logprob: -5.159600257873535
    8. 'power' → logprob: -5.534600257873535
    9. 'answer' → logprob: -5.659600257873535
    10. 'result' → logprob: -6.034600257873535

Token 110: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.8700185418128967
    2. 'power' → logprob: -0.9950185418128967
    3. '   ' → logprob: -2.995018482208252
    4. 'print' → logprob: -3.245018482208252
    5. 'pow' → logprob: -3.995018482208252
    6. 'ans' → logprob: -4.245018482208252
    7. 'res' → logprob: -4.370018482208252
    8. 'n' → logprob: -4.370018482208252
    9. 'cnt' → logprob: -4.370018482208252
    10. 'answer' → logprob: -4.620018482208252

Token 111: ' utiliser' (ID: 43227)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.1674549579620361
    2. 'power' → logprob: -1.1674549579620361
    3. 'print' → logprob: -2.417454957962036
    4. '   ' → logprob: -2.542454957962036
    5. ' power' → logprob: -3.167454957962036
    6. ' count' → logprob: -3.292454957962036
    7. 'pow' → logprob: -3.542454957962036
    8. ' print' → logprob: -4.292454719543457
    9. 'cnt' → logprob: -4.417454719543457
    10. 'p' → logprob: -4.667454719543457

Token 112: ' le' (ID: 505)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.024557266384363174
    2. '(diff' → logprob: -4.024557113647461
    3. ' diff' → logprob: -5.274557113647461
    4. ' ' → logprob: -8.024557113647461
    5. 'bit' → logprob: -8.149557113647461
    6. ' (' → logprob: -8.399557113647461
    7. 'math' → logprob: -9.149557113647461
    8. '(' → logprob: -9.524557113647461
    9. '	diff' → logprob: -9.899557113647461
    10. 'while' → logprob: -10.274557113647461

Token 113: ' fait' (ID: 7473)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.778298020362854
    2. 'bit' → logprob: -0.903298020362854
    3. 'math' → logprob: -4.1532979011535645
    4. 'operator' → logprob: -4.1532979011535645
    5. ' bit' → logprob: -4.1532979011535645
    6. 'right' → logprob: -4.2782979011535645
    7. ' ' → logprob: -4.6532979011535645
    8. 'while' → logprob: -5.0282979011535645
    9. '(diff' → logprob: -5.4032979011535645
    10. '&' → logprob: -5.4032979011535645

Token 114: ' que' (ID: 661)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.5710488557815552
    2. '   ' → logprob: -1.3210488557815552
    3. '(diff' → logprob: -2.4460487365722656
    4. ' que' → logprob: -2.6960487365722656
    5. ' that' → logprob: -5.696048736572266
    6. ' diff' → logprob: -6.071048736572266
    7. 'd' → logprob: -6.696048736572266
    8. '(' → logprob: -6.946048736572266
    9. '  ' → logprob: -7.071048736572266
    10. 'that' → logprob: -7.071048736572266

Token 115: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.020084679126739502
    2. ' diff' → logprob: -4.145084857940674
    3. '(diff' → logprob: -5.520084857940674
    4. '	diff' → logprob: -11.145084381103516
    5. '   ' → logprob: -11.395084381103516
    6. ' (' → logprob: -11.895084381103516
    7. '```' → logprob: -14.020084381103516
    8. 'd' → logprob: -14.020084381103516
    9. ' ' → logprob: -14.395084381103516
    10. '(' → logprob: -14.395084381103516

Token 116: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.12700402736663818
    2. ' &' → logprob: -2.1270041465759277
    3. '&amp' → logprob: -10.00200366973877
    4. '&nbsp' → logprob: -11.87700366973877
    5. ' ' → logprob: -11.87700366973877
    6. '&
' → logprob: -12.00200366973877
    7. ' &=' → logprob: -12.37700366973877
    8. '&A' → logprob: -13.50200366973877
    9. '＆' → logprob: -13.87700366973877
    10. ' ' → logprob: -14.12700366973877

Token 117: ' (-' (ID: 21382)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.400607705116272
    2. '(-' → logprob: -1.400607705116272
    3. ' -' → logprob: -2.6506075859069824
    4. '-d' → logprob: -4.650607585906982
    5. ' (-' → logprob: -7.025607585906982
    6. '-in' → logprob: -7.275607585906982
    7. '-f' → logprob: -7.775607585906982
    8. '-n' → logprob: -8.27560806274414
    9. '-inf' → logprob: -8.52560806274414
    10. '(' → logprob: -8.65060806274414

Token 118: 'diff' (ID: 31460)
  Prédit: 'diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.0028205662965774536
    2. ' diff' → logprob: -5.8778204917907715
    3. '	diff' → logprob: -11.25282096862793
    4. '(diff' → logprob: -13.12782096862793
    5. '<|end|>' → logprob: -16.00282096862793
    6. 'd' → logprob: -16.12782096862793
    7. '.diff' → logprob: -16.12782096862793
    8. ' ' → logprob: -16.25282096862793
    9. '   ' → logprob: -16.37782096862793
    10. '_diff' → logprob: -16.62782096862793

Token 119: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019595595076680183
    2. ' )' → logprob: -6.251959323883057
    3. ')==' → logprob: -11.501959800720215
    4. ' ' → logprob: -12.501959800720215
    5. ')!=' → logprob: -12.501959800720215
    6. ')`' → logprob: -13.251959800720215
    7. ')
' → logprob: -13.251959800720215
    8. '   ' → logprob: -13.876959800720215
    9. '))' → logprob: -13.876959800720215
    10. 'diff' → logprob: -13.876959800720215

Token 120: ' donne' (ID: 30004)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025530623272061348
    2. '<|end|>' → logprob: -5.025530815124512
    3. 'diff' → logprob: -5.150530815124512
    4. ' ' → logprob: -5.900530815124512
    5. '<|end|>' → logprob: -6.150530815124512
    6. '   ' → logprob: -6.525530815124512
    7. ' )' → logprob: -7.275530815124512
    8. ' &' → logprob: -7.650530815124512
    9. ' !=' → logprob: -7.775530815124512
    10. '),' → logprob: -7.775530815124512

Token 121: ' la' (ID: 557)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.16588996350765228
    2. ' la' → logprob: -2.1658899784088135
    3. ' diff' → logprob: -3.5408899784088135
    4. 'la' → logprob: -5.165889739990234
    5. ' the' → logprob: -6.915889739990234
    6. '	diff' → logprob: -7.290889739990234
    7. '<|end|>' → logprob: -7.540889739990234
    8. ' ' → logprob: -8.165889739990234
    9. 'le' → logprob: -8.165889739990234
    10. '(diff' → logprob: -8.290889739990234

Token 122: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.2320951372385025
    2. 'part' → logprob: -1.7320951223373413
    3. 'diff' → logprob: -3.857095241546631
    4. ' plus' → logprob: -5.482095241546631
    5. ' partie' → logprob: -5.982095241546631
    6. 'val' → logprob: -8.107094764709473
    7. 'moins' → logprob: -8.107094764709473
    8. '```' → logprob: -8.107094764709473
    9. 'largest' → logprob: -8.357094764709473
    10. 'distance' → logprob: -8.607094764709473

Token 123: ' petite' (ID: 28119)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.6209335327148438
    2. 'grand' → logprob: -1.7459335327148438
    3. 'large' → logprob: -1.7459335327148438
    4. '-' → logprob: -3.1209335327148438
    5. 'diff' → logprob: -3.8709335327148438
    6. '```' → logprob: -4.370933532714844
    7. ' faible' → logprob: -4.870933532714844
    8. ' grande' → logprob: -5.370933532714844
    9. 'fa' → logprob: -5.495933532714844
    10. 'pet' → logprob: -6.120933532714844

Token 124: ' puissance' (ID: 63494)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7705492973327637
    2. ' set' → logprob: -2.1455492973327637
    3. 'set' → logprob: -2.2705492973327637
    4. ' ' → logprob: -2.5205492973327637
    5. 'diff' → logprob: -2.6455492973327637
    6. 'power' → logprob: -3.3955492973327637
    7. '<|end|>' → logprob: -3.5205492973327637
    8. ' puissance' → logprob: -3.8955492973327637
    9. 'pow' → logprob: -4.270549297332764
    10. 'part' → logprob: -4.395549297332764

Token 125: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.32891350984573364
    2. 'diff' → logprob: -1.8289134502410889
    3. ' de' → logprob: -2.328913450241089
    4. '2' → logprob: -4.328913688659668
    5. ' ' → logprob: -5.578913688659668
    6. 'of' → logprob: -5.953913688659668
    7. ' diff' → logprob: -7.578913688659668
    8. ' of' → logprob: -7.703913688659668
    9. '  ' → logprob: -7.703913688659668
    10. 'div' → logprob: -7.953913688659668

Token 126: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.031145861372351646
    2. 'de' → logprob: -4.156146049499512
    3. 'diff' → logprob: -4.531146049499512
    4. 'two' → logprob: -6.156146049499512
    5. ' ' → logprob: -6.281146049499512
    6. ' deux' → logprob: -9.031146049499512
    7. ' two' → logprob: -9.406146049499512
    8. ' diff' → logprob: -11.281146049499512
    9. '```' → logprob: -11.406146049499512
    10. '_two' → logprob: -13.281146049499512

Token 127: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0061388881877064705
    2. 'de' → logprob: -5.131138801574707
    3. ' ' → logprob: -8.881138801574707
    4. 'two' → logprob: -10.256138801574707
    5. 'diff' → logprob: -11.131138801574707
    6. '```' → logprob: -11.256138801574707
    7. ' deux' → logprob: -12.256138801574707
    8. ' two' → logprob: -14.756138801574707
    9. '-' → logprob: -15.006138801574707
    10. '
' → logprob: -15.381138801574707

Token 128: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0288472175598145
    2. ' qui' → logprob: -1.1538472175598145
    3. 'diff' → logprob: -1.2788472175598145
    4. 'qui' → logprob: -4.2788472175598145
    5. '```' → logprob: -5.0288472175598145
    6. ' diff' → logprob: -5.4038472175598145
    7. ' ' → logprob: -6.0288472175598145
    8. ' that' → logprob: -6.1538472175598145
    9. 'print' → logprob: -6.2788472175598145
    10. ' de' → logprob: -6.5288472175598145

Token 129: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.03194527328014374
    2. 'divide' → logprob: -4.03194522857666
    3. 'diff' → logprob: -4.65694522857666
    4. ' div' → logprob: -5.65694522857666
    5. ' divide' → logprob: -8.40694522857666
    6. 'se' → logprob: -8.90694522857666
    7. 'part' → logprob: -10.40694522857666
    8. '...' → logprob: -10.65694522857666
    9. 'set' → logprob: -10.78194522857666
    10. '```' → logprob: -10.78194522857666

Token 130: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.10885902494192123
    2. 'ide' → logprob: -2.358859062194824
    3. 'div' → logprob: -5.983859062194824
    4. 'divide' → logprob: -6.108859062194824
    5. '```' → logprob: -6.608859062194824
    6. 'isible' → logprob: -7.483859062194824
    7. 'is' → logprob: -7.983859062194824
    8. '   ' → logprob: -8.358859062194824
    9. 'ides' → logprob: -8.983859062194824
    10. '<div' → logprob: -9.233859062194824

Token 131: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.001933397026732564
    2. ' diff' → logprob: -6.251933574676514
    3. '	diff' → logprob: -12.876933097839355
    4. '(diff' → logprob: -13.626933097839355
    5. '```' → logprob: -14.876933097839355
    6. ' ' → logprob: -15.126933097839355
    7. '   ' → logprob: -15.751933097839355
    8. ' ' → logprob: -16.251934051513672
    9. 'difference' → logprob: -17.501934051513672
    10. '`' → logprob: -17.751934051513672

Token 132: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09759292006492615
    2. 'print' → logprob: -2.972592830657959
    3. ')' → logprob: -4.597592830657959
    4. ' print' → logprob: -5.097592830657959
    5. ',' → logprob: -5.347592830657959
    6. 'diff' → logprob: -5.597592830657959
    7. '
' → logprob: -6.222592830657959
    8. ':' → logprob: -6.472592830657959
    9. 'n' → logprob: -6.597592830657959
    10. '  ' → logprob: -6.847592830657959

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11591576784849167
    2. 'print' → logprob: -2.3659157752990723
    3. ' print' → logprob: -5.490915775299072
    4. 'power' → logprob: -5.740915775299072
    5. 'pow' → logprob: -6.990915775299072
    6. 'result' → logprob: -7.115915775299072
    7. '    
' → logprob: -7.240915775299072
    8. 'diff' → logprob: -7.365915775299072
    9. 'res' → logprob: -7.615915775299072
    10. ')' → logprob: -7.740915775299072

Token 134: ' p' (ID: 275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6320565938949585
    2. 'print' → logprob: -1.0070565938949585
    3. ' print' → logprob: -3.007056713104248
    4. 'power' → logprob: -4.507056713104248
    5. 'result' → logprob: -5.132056713104248
    6. 'val' → logprob: -5.507056713104248
    7. 'pow' → logprob: -5.507056713104248
    8. 'res' → logprob: -5.632056713104248
    9. 'n' → logprob: -5.632056713104248
    10. 'ans' → logprob: -6.132056713104248

Token 135: ' =' (ID: 314)
  Prédit: 'ow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ow' → logprob: -0.7382527589797974
    2. ' =' → logprob: -1.4882527589797974
    3. 'ower' → logprob: -1.6132527589797974
    4. '=' → logprob: -2.363252639770508
    5. 'r' → logprob: -6.863252639770508
    6. 'pow' → logprob: -7.363252639770508
    7. '2' → logprob: -8.488252639770508
    8. 'wr' → logprob: -8.988252639770508
    9. 'os' → logprob: -9.113252639770508
    10. 'w' → logprob: -9.113252639770508

Token 136: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.10023579001426697
    2. ' diff' → logprob: -2.3502357006073
    3. '(diff' → logprob: -10.600235939025879
    4. '	diff' → logprob: -12.725235939025879
    5. ' ' → logprob: -14.100235939025879
    6. ' (' → logprob: -15.850235939025879
    7. '   ' → logprob: -16.350234985351562
    8. '  ' → logprob: -16.600234985351562
    9. 'd' → logprob: -17.475234985351562
    10. 'abs' → logprob: -17.600234985351562

Token 137: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.31333020329475403
    2. '&' → logprob: -1.3133301734924316
    3. '&p' → logprob: -10.18833065032959
    4. ' ' → logprob: -10.93833065032959
    5. '&nbsp' → logprob: -12.56333065032959
    6. '&amp' → logprob: -12.68833065032959
    7. ' ' → logprob: -13.06333065032959
    8. 'diff' → logprob: -13.81333065032959
    9. '.bit' → logprob: -14.06333065032959
    10. '&
' → logprob: -14.43833065032959

Token 138: ' (-' (ID: 21382)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.0757900476455688
    2. '(-' → logprob: -1.0757900476455688
    3. '-' → logprob: -1.5757900476455688
    4. ' (-' → logprob: -2.2007899284362793
    5. '-d' → logprob: -9.075790405273438
    6. ' (' → logprob: -9.325790405273438
    7. '-p' → logprob: -10.200790405273438
    8. '(' → logprob: -10.575790405273438
    9. ' ' → logprob: -10.950790405273438
    10. '-s' → logprob: -11.075790405273438

Token 139: 'diff' (ID: 31460)
  Prédit: 'diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -8.2994620242971e-06
    2. ' diff' → logprob: -11.750008583068848
    3. '	diff' → logprob: -14.875008583068848
    4. 'd' → logprob: -17.75000762939453
    5. '(diff' → logprob: -17.75000762939453
    6. 'difference' → logprob: -18.37500762939453
    7. 'dif' → logprob: -18.50000762939453
    8. '   ' → logprob: -18.50000762939453
    9. ' ' → logprob: -19.50000762939453
    10. '.diff' → logprob: -20.12500762939453

Token 140: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.836499985889532e-05
    2. ')
' → logprob: -9.8750581741333
    3. ' )' → logprob: -12.0000581741333
    4. '   ' → logprob: -15.2500581741333
    5. ')

' → logprob: -15.8750581741333
    6. '))' → logprob: -16.625059127807617
    7. ')#' → logprob: -17.125059127807617
    8. ' ' → logprob: -17.250059127807617
    9. ')
' → logprob: -17.375059127807617
    10. ')p' → logprob: -17.750059127807617

Token 141: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015886548906564713
    2. '
' → logprob: -4.3908867835998535
    3. '    
' → logprob: -6.2658867835998535
    4. 'print' → logprob: -7.0158867835998535
    5. '  
' → logprob: -8.515886306762695
    6. ')' → logprob: -8.765886306762695
    7. ')
' → logprob: -10.015886306762695
    8. ' 
' → logprob: -10.140886306762695
    9. '   
' → logprob: -10.265886306762695
    10. ',
' → logprob: -11.640886306762695

Token 142: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.019957784563302994
    2. '   ' → logprob: -4.019958019256592
    3. 'p' → logprob: -6.769958019256592
    4. ' print' → logprob: -8.394957542419434
    5. '
' → logprob: -9.144957542419434
    6. '    
' → logprob: -9.394957542419434
    7. '```' → logprob: -10.019957542419434
    8. '  ' → logprob: -10.644957542419434
    9. ')' → logprob: -10.769957542419434
    10. '0' → logprob: -11.144957542419434

Token 143: ' p' (ID: 275)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008735861047171056
    2. '   ' → logprob: -7.500873565673828
    3. ' print' → logprob: -8.375873565673828
    4. 'p' → logprob: -10.125873565673828
    5. 'while' → logprob: -10.875873565673828
    6. 'import' → logprob: -11.000873565673828
    7. 'from' → logprob: -13.125873565673828
    8. 'pow' → logprob: -13.125873565673828
    9. 'count' → logprob: -13.500873565673828
    10. 'power' → logprob: -13.750873565673828

Token 144: ' =' (ID: 314)
  Prédit: '.bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.bit' → logprob: -0.08434774726629257
    2. '<|end|>' → logprob: -3.834347724914551
    3. ')' → logprob: -4.334347724914551
    4. '.' → logprob: -4.459347724914551
    5. ').' → logprob: -4.834347724914551
    6. '=' → logprob: -5.334347724914551
    7. '**' → logprob: -5.334347724914551
    8. 'bit' → logprob: -5.584347724914551
    9. ' ' → logprob: -5.709347724914551
    10. '<|end|>' → logprob: -6.084347724914551

Token 145: ' ' (ID: 220)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5881849527359009
    2. 'int' → logprob: -0.9631849527359009
    3. 'math' → logprob: -3.7131848335266113
    4. ' p' → logprob: -3.9631848335266113
    5. ' int' → logprob: -4.213184833526611
    6. ' math' → logprob: -6.088184833526611
    7. 'diff' → logprob: -6.463184833526611
    8. '1' → logprob: -8.21318531036377
    9. ' ' → logprob: -8.96318531036377
    10. '2' → logprob: -9.33818531036377

Token 146: '2' (ID: 17)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.20865516364574432
    2. 'int' → logprob: -1.8336551189422607
    3. 'math' → logprob: -4.08365535736084
    4. 'diff' → logprob: -4.95865535736084
    5. '1' → logprob: -5.95865535736084
    6. '2' → logprob: -6.95865535736084
    7. 'abs' → logprob: -8.20865535736084
    8. 'bin' → logprob: -8.33365535736084
    9. ' p' → logprob: -8.83365535736084
    10. 'pow' → logprob: -9.20865535736084

Token 147: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.029766805469989777
    2. ' **' → logprob: -4.279767036437988
    3. '*' → logprob: -4.529767036437988
    4. '*p' → logprob: -5.779767036437988
    5. 'p' → logprob: -7.904767036437988
    6. ' *' → logprob: -8.404767036437988
    7. ' ' → logprob: -8.529767036437988
    8. '#' → logprob: -8.779767036437988
    9. '^' → logprob: -9.279767036437988
    10. '***' → logprob: -9.404767036437988

Token 148: 'n' (ID: 77)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.7101920247077942
    2. 'int' → logprob: -1.2101919651031494
    3. '(int' → logprob: -2.0851919651031494
    4. 'p' → logprob: -2.7101919651031494
    5. '(' → logprob: -4.7101922035217285
    6. '(math' → logprob: -4.8351922035217285
    7. '((' → logprob: -6.9601922035217285
    8. 'math' → logprob: -7.3351922035217285
    9. ' (' → logprob: -8.58519172668457
    10. '
' → logprob: -9.21019172668457

Token 149: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0691896304488182
    2. 'print' → logprob: -3.1941895484924316
    3. '   ' → logprob: -3.8191895484924316
    4. 'import' → logprob: -7.194189548492432
    5. '  
' → logprob: -7.319189548492432
    6. '    
' → logprob: -7.569189548492432
    7. 'n' → logprob: -8.19419002532959
    8. '
' → logprob: -8.44419002532959
    9. ' 
' → logprob: -8.44419002532959
    10. ',' → logprob: -8.44419002532959

Token 150: ' donc' (ID: 14206)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.415937602519989
    2. 'n' → logprob: -1.4159376621246338
    3. ' print' → logprob: -3.040937662124634
    4. ' n' → logprob: -3.540937662124634
    5. '   ' → logprob: -4.290937423706055
    6. 'import' → logprob: -5.790937423706055
    7. '
' → logprob: -6.540937423706055
    8. 'count' → logprob: -7.290937423706055
    9. 'ans' → logprob: -8.415937423706055
    10. '    
' → logprob: -8.665937423706055

Token 151: ' n' (ID: 297)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07602658122777939
    2. '   ' → logprob: -3.076026678085327
    3. 'n' → logprob: -3.701026678085327
    4. '
' → logprob: -6.326026439666748
    5. 'import' → logprob: -8.576026916503906
    6. ' print' → logprob: -8.701026916503906
    7. 'int' → logprob: -9.576026916503906
    8. 'math' → logprob: -10.326026916503906
    9. '    
' → logprob: -10.451026916503906
    10. 'p' → logprob: -10.826026916503906

Token 152: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193658471107483
    2. ' =' → logprob: -1.5019365549087524
    3. '=int' → logprob: -12.126936912536621
    4. ',' → logprob: -15.251936912536621
    5. '=
' → logprob: -15.251936912536621
    6. ' ' → logprob: -15.376936912536621
    7. '=}' → logprob: -15.376936912536621
    8. ' =
' → logprob: -15.501936912536621
    9. 's' → logprob: -15.876936912536621
    10. '=

' → logprob: -16.001935958862305

Token 153: ' nombre' (ID: 9733)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.03647952154278755
    2. 'int' → logprob: -3.7864794731140137
    3. ' p' → logprob: -4.411479473114014
    4. ' int' → logprob: -7.286479473114014
    5. 'math' → logprob: -8.411479949951172
    6. '(p' → logprob: -9.786479949951172
    7. '(int' → logprob: -10.911479949951172
    8. ' math' → logprob: -11.036479949951172
    9. ' (' → logprob: -12.161479949951172
    10. ' ' → logprob: -12.411479949951172

Token 154: ' de' (ID: 334)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.7947704195976257
    2. ' de' → logprob: -1.4197704792022705
    3. 'de' → logprob: -2.4197704792022705
    4. 'p' → logprob: -2.6697704792022705
    5. '_' → logprob: -3.0447704792022705
    6. ' p' → logprob: -3.4197704792022705
    7. '
' → logprob: -4.294770240783691
    8. '_p' → logprob: -4.419770240783691
    9. '_de' → logprob: -4.419770240783691
    10. ' of' → logprob: -5.294770240783691

Token 155: ' bits' (ID: 18189)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.3522743582725525
    2. 'p' → logprob: -1.2272744178771973
    3. '_' → logprob: -6.977274417877197
    4. '(p' → logprob: -7.102274417877197
    5. ' ' → logprob: -7.352274417877197
    6. ' trailing' → logprob: -7.602274417877197
    7. '0' → logprob: -8.227273941040039
    8. ' (' → logprob: -8.352273941040039
    9. '_p' → logprob: -9.602273941040039
    10. 'zeros' → logprob: -9.727273941040039

Token 156: ' de' (ID: 334)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6311448216438293
    2. ' p' → logprob: -1.1311447620391846
    3. '(p' → logprob: -2.0061447620391846
    4. ' (' → logprob: -6.131145000457764
    5. '   ' → logprob: -6.131145000457764
    6. 's' → logprob: -6.381145000457764
    7. '(' → logprob: -7.256145000457764
    8. ')' → logprob: -7.381145000457764
    9. '  ' → logprob: -7.631145000457764
    10. ' ' → logprob: -7.631145000457764

Token 157: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.041786547750234604
    2. ' p' → logprob: -3.2917864322662354
    3. 'bin' → logprob: -5.7917866706848145
    4. ' bin' → logprob: -7.5417866706848145
    5. '(p' → logprob: -9.791786193847656
    6. ' ' → logprob: -9.916786193847656
    7. '(bin' → logprob: -11.041786193847656
    8. '	p' → logprob: -11.916786193847656
    9. ' (' → logprob: -12.041786193847656
    10. 'int' → logprob: -12.041786193847656

Token 158: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12190639972686768
    2. '-' → logprob: -2.621906280517578
    3. ' ' → logprob: -3.871906280517578
    4. ' .' → logprob: -4.871906280517578
    5. '.bit' → logprob: -4.871906280517578
    6. '.' → logprob: -5.371906280517578
    7. ' p' → logprob: -7.121906280517578
    8. 'p' → logprob: -8.621906280517578
    9. ' ' → logprob: -9.871906280517578
    10. '  ' → logprob: -9.871906280517578

Token 159: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.033704373985528946
    2. ' ' → logprob: -3.4087042808532715
    3. ' p' → logprob: -9.90870475769043
    4. ' ' → logprob: -12.90870475769043
    5. 'p' → logprob: -13.03370475769043
    6. '```' → logprob: -13.65870475769043
    7. '
' → logprob: -13.78370475769043
    8. 'len' → logprob: -14.90870475769043
    9. '​' → logprob: -15.28370475769043
    10. '=' → logprob: -15.65870475769043

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004972710739821196
    2. ' ' → logprob: -7.625497341156006
    3. ' p' → logprob: -12.000496864318848
    4. 'p' → logprob: -13.125496864318848
    5. '
' → logprob: -14.750496864318848
    6. '```' → logprob: -15.250496864318848
    7. '2' → logprob: -15.625496864318848
    8. 'len' → logprob: -16.250497817993164
    9. ' ' → logprob: -16.812997817993164
    10. '

' → logprob: -17.562997817993164

Token 161: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09192570298910141
    2. ')' → logprob: -3.091925621032715
    3. ',' → logprob: -4.716925621032715
    4. 'print' → logprob: -4.966925621032715
    5. '   ' → logprob: -5.466925621032715
    6. '.' → logprob: -5.841925621032715
    7. 'p' → logprob: -5.841925621032715
    8. '.bit' → logprob: -5.841925621032715
    9. '    
' → logprob: -5.841925621032715
    10. 'n' → logprob: -5.966925621032715

Token 162: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1209182739257812
    2. 'print' → logprob: -1.1209182739257812
    3. '   ' → logprob: -1.8709182739257812
    4. 'p' → logprob: -1.9959182739257812
    5. 'n' → logprob: -3.7459182739257812
    6. '(p' → logprob: -4.870918273925781
    7. '    
' → logprob: -5.745918273925781
    8. ' p' → logprob: -5.745918273925781
    9. '.bit' → logprob: -5.745918273925781
    10. '  
' → logprob: -6.120918273925781

Token 163: ' n' (ID: 297)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7227806448936462
    2. 'print' → logprob: -0.7227806448936462
    3. ' p' → logprob: -4.472780704498291
    4. '   ' → logprob: -4.972780704498291
    5. 'int' → logprob: -5.472780704498291
    6. ' print' → logprob: -5.722780704498291
    7. 'n' (adapté à ' n') → logprob: -6.597780704498291
    8. '
' → logprob: -7.097780704498291
    9. 'math' → logprob: -7.472780704498291
    10. ' =' → logprob: -9.472780227661133

Token 164: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28117915987968445
    2. '=' → logprob: -1.4061791896820068
    3. '_' → logprob: -11.531179428100586
    4. '.' → logprob: -12.031179428100586
    5. ' ' → logprob: -12.281179428100586
    6. ' ' → logprob: -13.031179428100586
    7. '=int' → logprob: -13.531179428100586
    8. '=len' → logprob: -14.156179428100586
    9. '	' → logprob: -14.281179428100586
    10. '.=' → logprob: -14.781179428100586

Token 165: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00601056357845664
    2. ' p' → logprob: -5.13101053237915
    3. 'int' → logprob: -9.506011009216309
    4. ' int' → logprob: -12.506011009216309
    5. '(p' → logprob: -13.381011009216309
    6. 'math' → logprob: -13.506011009216309
    7. '	p' → logprob: -14.756011009216309
    8. ' math' → logprob: -15.256011009216309
    9. ' ' → logprob: -15.756011009216309
    10. ' (' → logprob: -16.881010055541992

Token 166: '.bit' (ID: 61866)
  Prédit: '.bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -0.0007106438861228526
    2. '.' → logprob: -7.250710487365723
    3. ' .' → logprob: -14.750710487365723
    4. ').' → logprob: -15.750710487365723
    5. '
' → logprob: -15.875710487365723
    6. 'bit' → logprob: -16.75071144104004
    7. '.
' → logprob: -17.50071144104004
    8. '.b' → logprob: -17.62571144104004
    9. '.n' → logprob: -18.12571144104004
    10. '​.' → logprob: -18.62571144104004

Token 167: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.00016265720478259027
    2. 'length' → logprob: -8.750163078308105
    3. 'ength' → logprob: -13.125163078308105
    4. 'len' → logprob: -14.125163078308105
    5. '_' → logprob: -14.375163078308105
    6. '_count' → logprob: -15.375163078308105
    7. 's' → logprob: -15.875163078308105
    8. '_size' → logprob: -16.00016212463379
    9. 'Length' → logprob: -16.37516212463379
    10. '_LENGTH' → logprob: -16.50016212463379

Token 168: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07898937165737152
    2. '()-' → logprob: -2.578989267349243
    3. '-' → logprob: -10.078989028930664
    4. '(' → logprob: -10.203989028930664
    5. ' ()' → logprob: -10.953989028930664
    6. '(-' → logprob: -13.703989028930664
    7. '()`' → logprob: -14.703989028930664
    8. ' -' → logprob: -15.328989028930664
    9. '()+' → logprob: -15.453989028930664
    10. '()
' → logprob: -15.578989028930664

Token 169: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1606222540140152
    2. ' -' → logprob: -1.910622239112854
    3. '()-' → logprob: -8.160622596740723
    4. '()' → logprob: -9.285622596740723
    5. ' ' → logprob: -11.160622596740723
    6. ')' → logprob: -13.535622596740723
    7. ' ' → logprob: -13.910622596740723
    8. '```' → logprob: -13.910622596740723
    9. '0' → logprob: -14.160622596740723
    10. '−' → logprob: -14.785622596740723

Token 170: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -19.375
    4. '۱' → logprob: -21.25
    5. '   ' → logprob: -22.0
    6. '１' → logprob: -22.25
    7. '<|end|>' → logprob: -22.375
    8. '
' → logprob: -23.125
    9. '‌' → logprob: -23.1875
    10. '১' → logprob: -23.25

Token 171: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '```' → logprob: -18.75
    4. '<|end|>' → logprob: -20.625
    5. '۱' → logprob: -20.75
    6. '   ' → logprob: -20.9375
    7. '
' → logprob: -21.8125
    8. '`' → logprob: -22.1875
    9. '１' → logprob: -22.5
    10. '2' → logprob: -22.75

Token 172: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029857974499464035
    2. 'print' → logprob: -3.529857873916626
    3. '
' → logprob: -9.904857635498047
    4. ' print' → logprob: -10.029857635498047
    5. '    
' → logprob: -12.154857635498047
    6. '	print' → logprob: -12.779857635498047
    7. '```' → logprob: -12.904857635498047
    8. '<|end|>' → logprob: -13.404857635498047
    9. '  
' → logprob: -15.404857635498047
    10. '   ' → logprob: -15.654857635498047

Token 173: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.31336498260498047
    2. '   ' → logprob: -1.3133649826049805
    3. ' print' → logprob: -9.31336498260498
    4. '```' → logprob: -11.43836498260498
    5. '	print' → logprob: -14.06336498260498
    6. '<|end|>' → logprob: -14.43836498260498
    7. '    
' → logprob: -14.81336498260498
    8. '
' → logprob: -15.43836498260498
    9. '#print' → logprob: -15.81336498260498
    10. '.print' → logprob: -16.813365936279297

Token 174: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.47417718172073364
    2. '   ' → logprob: -0.9741771817207336
    3. ' print' → logprob: -9.224177360534668
    4. '```' → logprob: -13.849177360534668
    5. '	print' → logprob: -14.974177360534668
    6. '    
' → logprob: -16.34917640686035
    7. '#print' → logprob: -16.47417640686035
    8. '       ' → logprob: -17.84917640686035
    9. ' ' → logprob: -18.09917640686035
    10. '  ' → logprob: -18.09917640686035

Token 175: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00017565040616318583
    2. '(' → logprob: -8.875175476074219
    3. 'n' → logprob: -10.250175476074219
    4. ' (' → logprob: -15.125175476074219
    5. ' n' → logprob: -17.50017547607422
    6. '((' → logprob: -17.75017547607422
    7. '()' → logprob: -17.87517547607422
    8. '(
' → logprob: -17.87517547607422
    9. '(s' → logprob: -18.62517547607422
    10. '(abs' → logprob: -18.75017547607422

Token 176: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.36574100604048e-06
    2. ' )' → logprob: -12.500004768371582
    3. ')
' → logprob: -14.375004768371582
    4. '))' → logprob: -18.375003814697266
    5. ')`' → logprob: -18.625003814697266
    6. '')' → logprob: -19.500003814697266
    7. '`)' → logprob: -20.000003814697266
    8. '）' → logprob: -20.250003814697266
    9. '```' → logprob: -20.500003814697266
    10. ')}' → logprob: -20.875003814697266

Token 177: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06248508021235466
    2. ' ' → logprob: -2.8124849796295166
    3. ')' → logprob: -8.187484741210938
    4. '2' → logprob: -9.562484741210938
    5. 's' → logprob: -9.812484741210938
    6. ' s' → logprob: -9.937484741210938
    7. ' )' → logprob: -10.562484741210938
    8. '"' → logprob: -11.062484741210938
    9. '7' → logprob: -12.437484741210938
    10. '10' → logprob: -12.812484741210938

Token 178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005395700572989881
    2. ' ' → logprob: -7.750539779663086
    3. '2' → logprob: -9.875539779663086
    4. 's' → logprob: -10.125539779663086
    5. '0' → logprob: -12.250539779663086
    6. ' s' → logprob: -12.375539779663086
    7. ')' → logprob: -13.125539779663086
    8. '3' → logprob: -13.750539779663086
    9. '10' → logprob: -14.000539779663086
    10. '7' → logprob: -14.625539779663086

Token 179: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.000000953674316
    3. ')
' → logprob: -17.000001907348633
    4. '))' → logprob: -18.000001907348633
    5. ')`' → logprob: -18.000001907348633
    6. '`)' → logprob: -19.125001907348633
    7. '')' → logprob: -19.875001907348633
    8. '```' → logprob: -20.000001907348633
    9. '）' → logprob: -20.250001907348633
    10. '   ' → logprob: -20.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 177
Tokens correctement prédits (1ère position, stricte): 54
Tokens correctement prédits (1ère position, avec adaptation): 56
Tokens correctement prédits (top 10): 130
Précision stricte (1ère position): 30.51%
Précision adaptée (1ère position): 31.64%
Précision (top 10): 73.45%
================================================================================
