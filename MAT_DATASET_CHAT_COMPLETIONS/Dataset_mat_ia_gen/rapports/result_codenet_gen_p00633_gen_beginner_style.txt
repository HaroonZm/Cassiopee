================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:57:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

def distance(x1, y1, x2, y2):
    return math.sqrt((x1 - x2)**2 + (y1 - y2)**2)

def angle_between_points(cx, cy, r, px, py):
    return math.atan2(py - cy, px - cx)

def normalize_angle(angle):
    while angle < 0:
        angle += 2 * math.pi
    while angle >= 2 * math.pi:
        angle -= 2 * math.pi
    return angle

def intervals_subtract(intervals, sub):
    result = []
    s_start, s_end = sub
    for (start, end) in intervals:
        if end <= s_start or start >= s_end:
            # no overlap
            result.append((start, end))
        else:
            # overlap exists, split
            if start < s_start:
                result.append((start, s_start))
            if end > s_end:
                result.append((s_end, end))
    return result

def merge_intervals(intervals):
    if not intervals:
        return []
    intervals.sort()
    merged = [intervals[0]]
    for current in intervals[1:]:
        last = merged[-1]
        if current[0] <= last[1]:
            merged[-1] = (last[0], max(last[1], current[1]))
        else:
            merged.append(current)
    return merged

def complement_intervals(intervals):
    # intervals inside [0, 2pi), return parts not covered
    result = []
    if not intervals:
        return [(0, 2 * math.pi)]
    intervals = merge_intervals(intervals)
    if intervals[0][0] > 0:
        result.append((0, intervals[0][0]))
    for i in range(len(intervals)-1):
        result.append((intervals[i][1], intervals[i+1][0]))
    if intervals[-1][1] < 2 * math.pi:
        result.append((intervals[-1][1], 2 * math.pi))
    return result

def main():
    while True:
        n = int(input())
        if n == 0:
            break
        circles = []
        for _ in range(n):
            x, y, r = map(float, input().split())
            circles.append((x, y, r))
        total_length = 0.0
        for i in range(n):
            cx, cy, cr = circles[i]
            covered_intervals = []
            for j in range(n):
                if i == j:
                    continue
                ox, oy, orr = circles[j]
                d = distance(cx, cy, ox, oy)
                if d >= cr + orr:
                    # no intersection
                    continue
                if d <= abs(cr - orr):
                    # one circle inside other
                    if cr <= orr:
                        # current circle completely inside other, no uncovered arc
                        covered_intervals = [(0, 2 * math.pi)]
                        break
                    else:
                        # other circle inside current, no effect on arc coverage
                        continue
                # calculate intersection angles on current circle
                # Law of cosines
                cos_angle = (cr*cr + d*d - orr*orr) / (2 * cr * d)
                if cos_angle < -1:
                    cos_angle = -1
                if cos_angle > 1:
                    cos_angle = 1
                angle_between_centers = math.atan2(oy - cy, ox - cx)
                angle_offset = math.acos(cos_angle)
                angle1 = normalize_angle(angle_between_centers - angle_offset)
                angle2 = normalize_angle(angle_between_centers + angle_offset)
                if angle2 < angle1:
                    # Interval crosses 0
                    covered_intervals.append((angle1, 2 * math.pi))
                    covered_intervals.append((0, angle2))
                else:
                    covered_intervals.append((angle1, angle2))
            # Merge intervals
            covered_intervals = merge_intervals(covered_intervals)
            # Calculate uncovered intervals
            uncovered_intervals = complement_intervals(covered_intervals)
            # Sum uncovered arcs length
            for start, end in uncovered_intervals:
                arc_length = cr * (end - start)
                total_length += arc_length
        print(total_length) 

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -6.158350151963532e-05
    2. 'import' → logprob: -11.625061988830566
    3. '```' → logprob: -11.625061988830566
    4. '\' → logprob: -12.000061988830566
    5. '<|end|>' → logprob: -12.375061988830566
    6. '.\' → logprob: -12.500061988830566
    7. '.pi' → logprob: -12.625061988830566
    8. '.e' → logprob: -12.625061988830566
    9. '\n' → logprob: -12.875061988830566
    10. 'def' → logprob: -13.250061988830566

Token 4: ' distance' (ID: 9324)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009838729165494442
    2. ' calculate' → logprob: -6.009838581085205
    3. ' math' → logprob: -6.009838581085205
    4. ' sqrt' → logprob: -6.134838581085205
    5. ' space' → logprob: -7.384838581085205
    6. '_' → logprob: -7.384838581085205
    7. ' factorial' → logprob: -7.384838581085205
    8. ' ' → logprob: -8.884839057922363
    9. ' f' → logprob: -9.134839057922363
    10. ' square' → logprob: -9.634839057922363

Token 5: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00025978617486543953
    2. '_' → logprob: -9.000259399414062
    3. ' (' → logprob: -9.500259399414062
    4. '<|end|>' → logprob: -11.250259399414062
    5. ')' → logprob: -11.500259399414062
    6. '(x' → logprob: -12.125259399414062
    7. '(user' → logprob: -12.375259399414062
    8. '<|end|>' → logprob: -12.500259399414062
    9. '```' → logprob: -12.750259399414062
    10. '('' → logprob: -12.875259399414062

Token 6: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03429962322115898
    2. '1' → logprob: -3.409299612045288
    3. ',y' → logprob: -7.534299850463867
    4. '_,' → logprob: -10.034299850463867
    5. ' ,' → logprob: -10.284299850463867
    6. '_' → logprob: -10.659299850463867
    7. '2' → logprob: -11.659299850463867
    8. 'y' → logprob: -13.534299850463867
    9. ' ' → logprob: -13.659299850463867
    10. '0' → logprob: -13.659299850463867

Token 7: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.684157026233152e-05
    2. ' ,' → logprob: -9.500077247619629
    3. ',x' → logprob: -13.375077247619629
    4. ',y' → logprob: -15.625077247619629
    5. '‌,' → logprob: -16.750076293945312
    6. ',
' → logprob: -17.000076293945312
    7. '_,' → logprob: -17.250076293945312
    8. ',

' → logprob: -17.500076293945312
    9. ' ' → logprob: -17.625076293945312
    10. '<|end|>' → logprob: -18.000076293945312

Token 8: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.2261544167995453
    2. 'y' → logprob: -1.6011544466018677
    3. ' ' → logprob: -7.351154327392578
    4. ',' → logprob: -10.351154327392578
    5. ' ,' → logprob: -10.351154327392578
    6. '<|end|>' → logprob: -10.976154327392578
    7. ')' → logprob: -12.226154327392578
    8. 'x' → logprob: -12.726154327392578
    9. ' )' → logprob: -12.976154327392578
    10. ' ' → logprob: -12.976154327392578

Token 9: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020789211615920067
    2. ',' → logprob: -3.89578914642334
    3. '2' → logprob: -9.27078914642334
    4. ' ' → logprob: -10.02078914642334
    5. '):' → logprob: -10.27078914642334
    6. ')' → logprob: -10.52078914642334
    7. '_' → logprob: -10.89578914642334
    8. ' ,' → logprob: -11.39578914642334
    9. '```' → logprob: -12.27078914642334
    10. '_,' → logprob: -12.39578914642334

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.180258191714529e-06
    2. ' ,' → logprob: -11.875008583068848
    3. ',x' → logprob: -14.500008583068848
    4. ')' → logprob: -15.250008583068848
    5. ',

' → logprob: -15.875008583068848
    6. ',
' → logprob: -16.12500762939453
    7. '),' → logprob: -16.75000762939453
    8. '```' → logprob: -17.12500762939453
    9. '   ' → logprob: -17.25000762939453
    10. '‌,' → logprob: -17.50000762939453

Token 11: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0067176250740885735
    2. 'x' → logprob: -5.006717681884766
    3. ',' → logprob: -13.631717681884766
    4. ' ' → logprob: -14.256717681884766
    5. ' ,' → logprob: -14.881717681884766
    6. ')' → logprob: -16.381717681884766
    7. '```' → logprob: -17.506717681884766
    8. ',x' → logprob: -17.756717681884766
    9. ' ' → logprob: -17.881717681884766
    10. ' )' → logprob: -18.006717681884766

Token 12: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018816311785485595
    2. ',' → logprob: -8.625187873840332
    3. '1' → logprob: -11.875187873840332
    4. ' ' → logprob: -13.875187873840332
    5. ' ,' → logprob: -15.500187873840332
    6. '₂' → logprob: -15.750187873840332
    7. '```' → logprob: -15.875187873840332
    8. '3' → logprob: -16.12518882751465
    9. ')' → logprob: -16.75018882751465
    10. '4' → logprob: -17.00018882751465

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.543733904138207e-05
    2. ' ,' → logprob: -9.37509536743164
    3. ')' → logprob: -12.50009536743164
    4. ',y' → logprob: -12.87509536743164
    5. '`,' → logprob: -13.37509536743164
    6. '‌,' → logprob: -14.12509536743164
    7. '<|end|>' → logprob: -14.62509536743164
    8. ' ' → logprob: -15.12509536743164
    9. '```' → logprob: -15.12509536743164
    10. '_,' → logprob: -15.75009536743164

Token 14: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.005602853838354349
    2. 'y' → logprob: -5.380602836608887
    3. ' x' → logprob: -7.630602836608887
    4. ' ' → logprob: -7.755602836608887
    5. ')' → logprob: -10.755602836608887
    6. ' )' → logprob: -10.880602836608887
    7. ' ' → logprob: -11.755602836608887
    8. 'x' → logprob: -12.005602836608887
    9. ' space' → logprob: -13.005602836608887
    10. ' ,' → logprob: -13.005602836608887

Token 15: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.2729995988775045e-06
    2. '1' → logprob: -13.125006675720215
    3. ')' → logprob: -13.500006675720215
    4. '₂' → logprob: -13.875006675720215
    5. '):' → logprob: -14.375006675720215
    6. ',' → logprob: -14.500006675720215
    7. '```' → logprob: -14.875006675720215
    8. ' ' → logprob: -16.2500057220459
    9. '²' → logprob: -16.5000057220459
    10. '3' → logprob: -16.6250057220459

Token 16: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0038165838923305273
    2. ')' → logprob: -5.628816604614258
    3. ':' → logprob: -8.503816604614258
    4. ''):' → logprob: -12.128816604614258
    5. '):
' → logprob: -12.253816604614258
    6. ' ):' → logprob: -14.253816604614258
    7. '"):' → logprob: -14.503816604614258
    8. '»:' → logprob: -15.503816604614258
    9. ')：' → logprob: -15.503816604614258
    10. '）：' → logprob: -15.503816604614258

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08066355437040329
    2. ':' → logprob: -2.5806634426116943
    3. ' ' → logprob: -6.955663681030273
    4. ' return' → logprob: -8.205663681030273
    5. ':return' → logprob: -9.080663681030273
    6. '    ' → logprob: -9.205663681030273
    7. ' :' → logprob: -9.705663681030273
    8. '):' → logprob: -10.080663681030273
    9. '  ' → logprob: -10.330663681030273
    10. ':
' → logprob: -10.455663681030273

Token 18: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20569556951522827
    2. 'return' (adapté à ' return') → logprob: -2.330695629119873
    3. ' return' → logprob: -2.830695629119873
    4. ' ' → logprob: -4.330695629119873
    5. ''' → logprob: -5.580695629119873
    6. '    ' → logprob: -5.580695629119873
    7. '"' → logprob: -5.955695629119873
    8. 'r' → logprob: -6.080695629119873
    9. '`' → logprob: -6.955695629119873
    10. ':' → logprob: -7.455695629119873

Token 19: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.02437206543982029
    2. ' ' → logprob: -4.024372100830078
    3. 'math' → logprob: -5.524372100830078
    4. ' (' → logprob: -6.524372100830078
    5. '(math' → logprob: -7.774372100830078
    6. ' ' → logprob: -9.274372100830078
    7. ' int' → logprob: -10.024372100830078
    8. ' ((' → logprob: -10.149372100830078
    9. ' m' → logprob: -10.399372100830078
    10. '   ' → logprob: -10.774372100830078

Token 20: '.sqrt' (ID: 38011)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.008631349541246891
    2. '.sqrt' → logprob: -4.758631229400635
    3. '.s' → logprob: -11.258631706237793
    4. ' .' → logprob: -13.758631706237793
    5. '.dist' → logprob: -14.383631706237793
    6. '.Sqrt' → logprob: -14.383631706237793
    7. '.atan' → logprob: -14.758631706237793
    8. '.pi' → logprob: -15.008631706237793
    9. '.square' → logprob: -16.383630752563477
    10. '.sin' → logprob: -16.508630752563477

Token 21: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03806249052286148
    2. '((' → logprob: -3.288062572479248
    3. '('' → logprob: -11.66306209564209
    4. '("("' → logprob: -12.03806209564209
    5. '(

' → logprob: -13.53806209564209
    6. '(
' → logprob: -13.53806209564209
    7. '(x' → logprob: -14.03806209564209
    8. '(((' → logprob: -14.16306209564209
    9. '(()' → logprob: -14.41306209564209
    10. ' (' → logprob: -15.03806209564209

Token 22: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.011383073404431343
    2. 'x' → logprob: -4.511383056640625
    3. ' (' → logprob: -8.011383056640625
    4. '(' → logprob: -13.761383056640625
    5. '   ' → logprob: -13.761383056640625
    6. ' x' → logprob: -13.886383056640625
    7. 'dx' → logprob: -16.261383056640625
    8. '(dx' → logprob: -16.636383056640625
    9. '_x' → logprob: -17.136383056640625
    10. '((' → logprob: -17.136383056640625

Token 23: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.22554467618465424
    2. '1' → logprob: -1.6005446910858154
    3. ' -' → logprob: -8.975544929504395
    4. '-' → logprob: -13.100544929504395
    5. '```' → logprob: -13.725544929504395
    6. ' ' → logprob: -13.975544929504395
    7. '_' → logprob: -14.850544929504395
    8. '₂' → logprob: -14.975544929504395
    9. '[' → logprob: -15.475544929504395
    10. '

' → logprob: -15.975544929504395

Token 24: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02324722334742546
    2. '-' → logprob: -3.773247241973877
    3. ' -
' → logprob: -14.523246765136719
    4. '<|end|>' → logprob: -14.773246765136719
    5. '-x' → logprob: -15.148246765136719
    6. ' ' → logprob: -15.523246765136719
    7. ' ' → logprob: -16.14824676513672
    8. ' –' → logprob: -16.52324676513672
    9. '-m' → logprob: -17.02324676513672
    10. ' -

' → logprob: -17.64824676513672

Token 25: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.38687366247177124
    2. 'x' → logprob: -1.136873722076416
    3. ' ' → logprob: -14.011873245239258
    4. '	x' → logprob: -14.011873245239258
    5. ')x' → logprob: -14.636873245239258
    6. '<|end|>' → logprob: -15.636873245239258
    7. ')' → logprob: -15.761873245239258
    8. '(x' → logprob: -16.761873245239258
    9. ''x' → logprob: -16.761873245239258
    10. '"x' → logprob: -17.011873245239258

Token 26: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002036595979006961
    2. ' ' → logprob: -8.500204086303711
    3. '```' → logprob: -16.87520408630371
    4. '   ' → logprob: -17.75020408630371
    5. '  ' → logprob: -18.00020408630371
    6. '₂' → logprob: -18.87520408630371
    7. '２' → logprob: -19.75020408630371
    8. '۲' → logprob: -19.75020408630371
    9. ' ```' → logprob: -20.00020408630371
    10. ')' → logprob: -20.37520408630371

Token 27: ')**' (ID: 80066)
  Prédit: ')**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.5761299133300781
    2. ')' → logprob: -0.8261299133300781
    3. ' )' → logprob: -8.576129913330078
    4. '**' → logprob: -15.076129913330078
    5. '`)' → logprob: -15.076129913330078
    6. ')`' → logprob: -15.201129913330078
    7. '```' → logprob: -15.451129913330078
    8. '   ' → logprob: -15.701129913330078
    9. ')*' → logprob: -15.951129913330078
    10. '）' → logprob: -16.076129913330078

Token 28: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.000045776367188
    3. '²' → logprob: -17.250045776367188
    4. '۲' → logprob: -17.250045776367188
    5. '```' → logprob: -17.750045776367188
    6. ' ' → logprob: -18.250045776367188
    7. '٢' → logprob: -18.500045776367188
    8. '  ' → logprob: -18.875045776367188
    9. '   ' → logprob: -18.875045776367188
    10. '２' → logprob: -19.000045776367188

Token 29: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20146167278289795
    2. '+' → logprob: -1.701461672782898
    3. ')' → logprob: -10.076461791992188
    4. ' ' → logprob: -13.701461791992188
    5. ' +
' → logprob: -13.701461791992188
    6. '+)' → logprob: -13.701461791992188
    7. ')+' → logprob: -14.201461791992188
    8. ' )' → logprob: -14.451461791992188
    9. '4' → logprob: -15.826461791992188
    10. '+(' → logprob: -15.826461791992188

Token 30: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.018188105896115303
    2. '(y' → logprob: -4.018187999725342
    3. '(' → logprob: -10.5181884765625
    4. '(x' → logprob: -11.5181884765625
    5. ' ' → logprob: -14.6431884765625
    6. '<|end|>' → logprob: -15.0181884765625
    7. '(s' → logprob: -15.3931884765625
    8. '(b' → logprob: -16.1431884765625
    9. '(Y' → logprob: -16.8931884765625
    10. '   ' → logprob: -16.8931884765625

Token 31: 'y' (ID: 88)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0008233297849074006
    2. 'y' → logprob: -7.500823497772217
    3. ' (' → logprob: -8.250823020935059
    4. '(' → logprob: -12.250823020935059
    5. '   ' → logprob: -13.500823020935059
    6. ' y' → logprob: -13.875823020935059
    7. ')' → logprob: -14.125823020935059
    8. ')(' → logprob: -14.625823020935059
    9. ')y' → logprob: -15.125823020935059
    10. ' ' → logprob: -15.750823020935059

Token 32: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025068165268749
    2. ' -' → logprob: -6.002506732940674
    3. '-' → logprob: -10.877507209777832
    4. ' ' → logprob: -11.377507209777832
    5. '   ' → logprob: -14.502507209777832
    6. '2' → logprob: -16.377506256103516
    7. '  ' → logprob: -16.627506256103516
    8. '```' → logprob: -16.877506256103516
    9. ' y' → logprob: -17.502506256103516
    10. '_' → logprob: -17.627506256103516

Token 33: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -9.758300438988954e-05
    2. '-' → logprob: -9.250097274780273
    3. '<|end|>' → logprob: -13.625097274780273
    4. ' ' → logprob: -16.125097274780273
    5. '<|end|>' → logprob: -17.375097274780273
    6. ')' → logprob: -17.875097274780273
    7. ' ' → logprob: -17.875097274780273
    8. ' –' → logprob: -18.000097274780273
    9. ' −' → logprob: -18.000097274780273
    10. ' -
' → logprob: -19.375097274780273

Token 34: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6931501030921936
    2. ' y' → logprob: -0.6931501030921936
    3. ' ' → logprob: -13.443150520324707
    4. '<|end|>' → logprob: -14.443150520324707
    5. '	y' → logprob: -14.568150520324707
    6. ')y' → logprob: -15.193150520324707
    7. ')' → logprob: -16.69314956665039
    8. '2' → logprob: -16.94314956665039
    9. '(y' → logprob: -17.81814956665039
    10. '   ' → logprob: -17.81814956665039

Token 35: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007202956476248801
    2. '1' → logprob: -7.250720500946045
    3. ' ' → logprob: -11.625720024108887
    4. '**' → logprob: -14.500720024108887
    5. '-' → logprob: -14.625720024108887
    6. ' -' → logprob: -16.375720977783203
    7. ')' → logprob: -16.500720977783203
    8. '```' → logprob: -16.500720977783203
    9. '₂' → logprob: -17.125720977783203
    10. '22' → logprob: -17.250720977783203

Token 36: ')**' (ID: 80066)
  Prédit: ')**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.016459181904792786
    2. '**' → logprob: -4.391458988189697
    3. ')' → logprob: -6.016458988189697
    4. ' )' → logprob: -6.516458988189697
    5. '**)' → logprob: -10.891459465026855
    6. ' **' → logprob: -12.891459465026855
    7. ' **)' → logprob: -13.766459465026855
    8. ' ' → logprob: -13.891459465026855
    9. '2' → logprob: -14.766459465026855
    10. '))' → logprob: -15.266459465026855

Token 37: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.153795766294934e-06
    2. ' ' → logprob: -12.125005722045898
    3. '**' → logprob: -15.750005722045898
    4. '```' → logprob: -16.0000057220459
    5. '²' → logprob: -16.2500057220459
    6. ')' → logprob: -16.5000057220459
    7. '۲' → logprob: -16.7500057220459
    8. '1' → logprob: -17.5625057220459
    9. '٢' → logprob: -17.6250057220459
    10. '22' → logprob: -17.9375057220459

Token 38: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -15.750000953674316
    3. ' )' → logprob: -15.750000953674316
    4. '')' → logprob: -16.625
    5. '`)' → logprob: -17.125
    6. '))' → logprob: -17.875
    7. ')`' → logprob: -18.25
    8. '}' → logprob: -18.5
    9. '```' → logprob: -19.0
    10. ')return' → logprob: -19.0

Token 39: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23432064056396484
    2. 'd' → logprob: -2.484320640563965
    3. '#' → logprob: -3.234320640563965
    4. 'r' → logprob: -4.359320640563965
    5. '

' → logprob: -4.484320640563965
    6. 'n' → logprob: -4.734320640563965
    7. ')' → logprob: -4.859320640563965
    8. '\n' → logprob: -5.109320640563965
    9. '' → logprob: -5.234320640563965
    10. '\' → logprob: -5.359320640563965

Token 40: ' angle' (ID: 16538)
  Prédit: ' space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' space' → logprob: -0.6383063197135925
    2. ' ' → logprob: -1.3883063793182373
    3. ' area' → logprob: -2.2633063793182373
    4. ' calculate' → logprob: -2.3883063793182373
    5. ' find' → logprob: -4.638306140899658
    6. ' compute' → logprob: -5.263306140899658
    7. ' add' → logprob: -6.138306140899658
    8. ' closest' → logprob: -6.263306140899658
    9. ' square' → logprob: -7.013306140899658
    10. ' ' → logprob: -7.138306140899658

Token 41: '_between' (ID: 124874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.030155286192893982
    2. '_' → logprob: -3.5301551818847656
    3. '_between' → logprob: -8.780155181884766
    4. '_to' → logprob: -10.905155181884766
    5. '_(' → logprob: -10.905155181884766
    6. '4' → logprob: -11.280155181884766
    7. ' (' → logprob: -11.280155181884766
    8. 's' → logprob: -11.405155181884766
    9. '("("' → logprob: -11.405155181884766
    10. '<|end|>' → logprob: -11.405155181884766

Token 42: '_points' (ID: 30070)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007594910915941
    2. '_vectors' → logprob: -5.882595062255859
    3. '_points' → logprob: -6.882595062255859
    4. ' (' → logprob: -7.132595062255859
    5. '_angles' → logprob: -7.257595062255859
    6. '(x' → logprob: -7.382595062255859
    7. '_spaces' → logprob: -7.882595062255859
    8. '_' → logprob: -8.13259506225586
    9. 's' → logprob: -8.50759506225586
    10. '_parent' → logprob: -9.50759506225586

Token 43: '(cx' (ID: 116103)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00027575582498684525
    2. '("("' → logprob: -9.250275611877441
    3. '<|end|>' → logprob: -9.250275611877441
    4. '(x' → logprob: -11.125275611877441
    5. ' (' → logprob: -11.250275611877441
    6. '('' → logprob: -11.750275611877441
    7. '(parent' → logprob: -11.875275611877441
    8. '(user' → logprob: -12.375275611877441
    9. '(
' → logprob: -12.375275611877441
    10. 's' → logprob: -12.750275611877441

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.101369894575328e-05
    2. ' ,' → logprob: -9.500081062316895
    3. ',)' → logprob: -13.125081062316895
    4. ',
' → logprob: -13.625081062316895
    5. ')' → logprob: -14.375081062316895
    6. ',y' → logprob: -14.500081062316895
    7. '_,' → logprob: -14.875081062316895
    8. 's' → logprob: -15.250081062316895
    9. ',

' → logprob: -15.375081062316895
    10. '‌,' → logprob: -15.625081062316895

Token 45: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.12718364596366882
    2. ' cy' → logprob: -2.127183675765991
    3. ' ' → logprob: -9.25218391418457
    4. 'c' → logprob: -9.87718391418457
    5. '<|end|>' → logprob: -10.50218391418457
    6. ' c' → logprob: -10.75218391418457
    7. ' ' → logprob: -10.75218391418457
    8. 'cyj' → logprob: -10.87718391418457
    9. '.cy' → logprob: -13.00218391418457
    10. 'y' → logprob: -13.00218391418457

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.9875325708417222e-05
    2. ' ,' → logprob: -10.500029563903809
    3. ')' → logprob: -13.500029563903809
    4. ',c' → logprob: -15.625029563903809
    5. ',

' → logprob: -15.750029563903809
    6. ',)' → logprob: -15.750029563903809
    7. '‌,' → logprob: -16.625030517578125
    8. '),' → logprob: -16.625030517578125
    9. ',
' → logprob: -16.875030517578125
    10. ',x' → logprob: -17.000030517578125

Token 47: ' r' (ID: 428)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10924769192934036
    2. ' x' → logprob: -2.4842476844787598
    3. 'px' → logprob: -4.60924768447876
    4. ' px' → logprob: -4.60924768447876
    5. ' ' → logprob: -9.234248161315918
    6. '   ' → logprob: -10.734248161315918
    7. 'cx' → logprob: -11.109248161315918
    8. 'tx' → logprob: -11.484248161315918
    9. '```' → logprob: -11.984248161315918
    10. '	x' → logprob: -12.234248161315918

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011706073768436909
    2. '):' → logprob: -5.0117058753967285
    3. ')' → logprob: -5.8867058753967285
    4. 'a' → logprob: -6.7617058753967285
    5. 'e' → logprob: -7.2617058753967285
    6. ' ,' → logprob: -9.761706352233887
    7. 'adius' → logprob: -10.136706352233887
    8. 'ad' → logprob: -10.136706352233887
    9. ' ):' → logprob: -10.386706352233887
    10. 'o' → logprob: -10.636706352233887

Token 49: ' px' (ID: 27003)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20262445509433746
    2. ' x' → logprob: -1.7026244401931763
    3. ' px' → logprob: -7.702624320983887
    4. ' ' → logprob: -8.077624320983887
    5. 'px' → logprob: -8.952624320983887
    6. ' p' → logprob: -9.452624320983887
    7. 'p' → logprob: -9.452624320983887
    8. ' angle' → logprob: -10.077624320983887
    9. '  ' → logprob: -10.202624320983887
    10. '	x' → logprob: -10.952624320983887

Token 50: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38822007179260254
    2. ',' → logprob: -1.3882200717926025
    3. ')' → logprob: -2.6382200717926025
    4. ' ):' → logprob: -7.513219833374023
    5. '):
' → logprob: -10.263219833374023
    6. ' )' → logprob: -10.388219833374023
    7. ' ,' → logprob: -10.638219833374023
    8. '),' → logprob: -10.638219833374023
    9. ',)' → logprob: -11.638219833374023
    10. '=' → logprob: -11.638219833374023

Token 51: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.4002509117126465
    2. ' py' → logprob: -1.1502509117126465
    3. 'p' → logprob: -4.5252509117126465
    4. ' p' → logprob: -6.1502509117126465
    5. 'ppy' → logprob: -9.150251388549805
    6. '<|end|>' → logprob: -9.150251388549805
    7. '.py' → logprob: -10.150251388549805
    8. '_py' → logprob: -10.400251388549805
    9. ' ' → logprob: -11.275251388549805
    10. ' ' → logprob: -12.025251388549805

Token 52: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007901760749518871
    2. ')' → logprob: -4.882901668548584
    3. ':' → logprob: -8.632902145385742
    4. ' ):' → logprob: -9.257902145385742
    5. ',' → logprob: -11.257902145385742
    6. '):
' → logprob: -13.132902145385742
    7. '   ' → logprob: -13.132902145385742
    8. ''):' → logprob: -13.382902145385742
    9. ' ' → logprob: -14.132902145385742
    10. ' :' → logprob: -14.507902145385742

Token 53: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08411182463169098
    2. '   ' → logprob: -3.0841119289398193
    3. ' 
' → logprob: -4.45911169052124
    4. '    ' → logprob: -4.83411169052124
    5. ' )' → logprob: -4.95911169052124
    6. 'r' → logprob: -5.95911169052124
    7. ')' → logprob: -6.70911169052124
    8. '     
' → logprob: -7.58411169052124
    9. 'd' → logprob: -7.83411169052124
    10. ' import' → logprob: -8.084112167358398

Token 54: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7840840220451355
    2. ' ' → logprob: -1.2840840816497803
    3. 'd' → logprob: -2.2840840816497803
    4. '    ' → logprob: -2.6590840816497803
    5. ' 
' → logprob: -3.6590840816497803
    6. ' )' → logprob: -3.7840840816497803
    7. 'r' → logprob: -5.659083843231201
    8. 'a' → logprob: -5.659083843231201
    9. ')' → logprob: -5.784083843231201
    10. ' return' → logprob: -5.909083843231201

Token 55: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.002811290556564927
    2. 'math' → logprob: -5.877811431884766
    3. '(math' → logprob: -12.877811431884766
    4. ' ' → logprob: -13.752811431884766
    5. '    ' → logprob: -14.127811431884766
    6. ' ' → logprob: -14.377811431884766
    7. ' m' → logprob: -14.502811431884766
    8. '   ' → logprob: -14.752811431884766
    9. '.math' → logprob: -15.877811431884766
    10. ' (' → logprob: -16.002811431884766

Token 56: '.atan' (ID: 157113)
  Prédit: '.atan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.atan' → logprob: -0.08310338854789734
    2. '.' → logprob: -2.5831034183502197
    3. '.ac' → logprob: -5.583103179931641
    4. '.as' → logprob: -7.958103179931641
    5. '.pi' → logprob: -9.70810317993164
    6. '.sqrt' → logprob: -11.83310317993164
    7. '.ar' → logprob: -12.33310317993164
    8. ' .' → logprob: -12.45810317993164
    9. '.ast' → logprob: -12.83310317993164
    10. '.sin' → logprob: -12.95810317993164

Token 57: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '۲' → logprob: -18.75
    3. '２' → logprob: -19.125
    4. '22' → logprob: -19.625
    5. '٢' → logprob: -20.25
    6. ' ' → logprob: -21.0
    7. '27' → logprob: -21.875
    8. '₂' → logprob: -22.125
    9. '20' → logprob: -22.5
    10. '23' → logprob: -22.875

Token 58: '(py' (ID: 139986)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.449320912361145
    2. '(py' → logprob: -1.199320912361145
    3. '((' → logprob: -2.8243207931518555
    4. '(Py' → logprob: -6.8243207931518555
    5. '(
' → logprob: -9.949320793151855
    6. '(

' → logprob: -10.699320793151855
    7. '2' → logprob: -11.824320793151855
    8. '(px' → logprob: -12.199320793151855
    9. '(p' → logprob: -12.574320793151855
    10. ' (' → logprob: -12.699320793151855

Token 59: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07086494565010071
    2. '-' → logprob: -2.6958649158477783
    3. ' ' → logprob: -7.070865154266357
    4. ' ' → logprob: -10.3208646774292
    5. ')' → logprob: -10.8208646774292
    6. ',' → logprob: -12.1958646774292
    7. ' -
' → logprob: -13.0708646774292
    8. '	' → logprob: -13.3208646774292
    9. ' –' → logprob: -13.3208646774292
    10. '   ' → logprob: -13.3208646774292

Token 60: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.38743358850479126
    2. ' cy' → logprob: -1.1374335289001465
    3. 'c' → logprob: -8.762434005737305
    4. '(c' → logprob: -9.262434005737305
    5. '	c' → logprob: -9.387434005737305
    6. ' c' → logprob: -9.637434005737305
    7. '.cy' → logprob: -9.762434005737305
    8. ' ' → logprob: -10.512434005737305
    9. ' ' → logprob: -11.137434005737305
    10. ' (' → logprob: -11.637434005737305

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006583464564755559
    2. ' ,' → logprob: -7.3756585121154785
    3. ')' → logprob: -10.87565803527832
    4. ',
' → logprob: -12.87565803527832
    5. ',y' → logprob: -12.87565803527832
    6. ',x' → logprob: -13.50065803527832
    7. ',)' → logprob: -13.62565803527832
    8. ',,' → logprob: -14.37565803527832
    9. ',r' → logprob: -14.37565803527832
    10. ',p' → logprob: -14.37565803527832

Token 62: ' px' (ID: 27003)
  Prédit: ' px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' px' → logprob: -0.02058498002588749
    2. 'px' → logprob: -3.895585060119629
    3. '(px' → logprob: -10.520585060119629
    4. ' ' → logprob: -12.395585060119629
    5. ')' → logprob: -12.520585060119629
    6. ' ' → logprob: -12.895585060119629
    7. ' )' → logprob: -13.645585060119629
    8. ' p' → logprob: -14.020585060119629
    9. '_px' → logprob: -14.020585060119629
    10. ':px' → logprob: -14.395585060119629

Token 63: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.012627365998923779
    2. '-' → logprob: -4.387627601623535
    3. ' ' → logprob: -9.137627601623535
    4. ')' → logprob: -12.012627601623535
    5. '-c' → logprob: -13.637627601623535
    6. ' -
' → logprob: -14.137627601623535
    7. ' ' → logprob: -14.512627601623535
    8. ' –' → logprob: -15.012627601623535
    9. '<|end|>' → logprob: -15.137627601623535
    10. ',' → logprob: -15.137627601623535

Token 64: ' cx' (ID: 44448)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' → logprob: -0.006827143952250481
    2. ' cx' → logprob: -5.006827354431152
    3. '(cx' → logprob: -10.131827354431152
    4. 'x' → logprob: -10.256827354431152
    5. 'r' → logprob: -10.881827354431152
    6. 'c' → logprob: -11.631827354431152
    7. '.cx' → logprob: -11.881827354431152
    8. ')' → logprob: -13.881827354431152
    9. ' ' → logprob: -14.381827354431152
    10. '1' → logprob: -15.756827354431152

Token 65: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2948405128554441e-05
    2. ' )' → logprob: -11.62501335144043
    3. ')
' → logprob: -13.37501335144043
    4. ')**' → logprob: -13.62501335144043
    5. '))' → logprob: -15.00001335144043
    6. ')*' → logprob: -15.62501335144043
    7. ')return' → logprob: -15.75001335144043
    8. ' ' → logprob: -16.62501335144043
    9. ')))' → logprob: -16.75001335144043
    10. '   ' → logprob: -16.75001335144043

Token 66: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26327595114707947
    2. '*' → logprob: -2.3882758617401123
    3. '
' → logprob: -3.2632758617401123
    4. '<|end|>' → logprob: -3.2632758617401123
    5. '+' → logprob: -4.138276100158691
    6. '#' → logprob: -4.513276100158691
    7. 'r' → logprob: -4.638276100158691
    8. ' ' → logprob: -5.013276100158691
    9. '\n' → logprob: -5.638276100158691
    10. '(' → logprob: -5.763276100158691

Token 67: ' normalize' (ID: 44464)
  Prédit: ' circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' circle' → logprob: -0.6733930706977844
    2. ' calculate' → logprob: -0.9233930706977844
    3. ' area' → logprob: -3.6733930110931396
    4. ' draw' → logprob: -4.548393249511719
    5. ' arc' → logprob: -4.798393249511719
    6. ' ' → logprob: -4.923393249511719
    7. ' compute' → logprob: -5.298393249511719
    8. ' space' → logprob: -5.423393249511719
    9. ' circumference' → logprob: -5.548393249511719
    10. ' convert' → logprob: -5.673393249511719

Token 68: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.013946055434644222
    2. '(' → logprob: -4.638946056365967
    3. '(angle' → logprob: -5.888946056365967
    4. '_vector' → logprob: -7.013946056365967
    5. '_' → logprob: -8.513945579528809
    6. '_angles' → logprob: -9.263945579528809
    7. '(value' → logprob: -9.513945579528809
    8. '(x' → logprob: -10.263945579528809
    9. '(vector' → logprob: -10.638945579528809
    10. '(_' → logprob: -11.263945579528809

Token 69: '(angle' (ID: 66047)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008672957308590412
    2. '(angle' → logprob: -4.758673191070557
    3. '(theta' → logprob: -11.008672714233398
    4. ' (' → logprob: -11.508672714233398
    5. '(x' → logprob: -12.133672714233398
    6. '(value' → logprob: -12.258672714233398
    7. '("("' → logprob: -12.758672714233398
    8. '<|end|>' → logprob: -13.008672714233398
    9. '((' → logprob: -13.633672714233398
    10. '(phi' → logprob: -13.633672714233398

Token 70: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2077987790107727
    2. '(angle' → logprob: -1.707798719406128
    3. ')' → logprob: -5.832798957824707
    4. ' ):' → logprob: -6.082798957824707
    5. '(' → logprob: -7.582798957824707
    6. 'angle' → logprob: -7.957798957824707
    7. '_angle' → logprob: -8.832798957824707
    8. ',' → logprob: -10.082798957824707
    9. '):
' → logprob: -10.207798957824707
    10. ' angle' → logprob: -10.457798957824707

Token 71: '   ' (ID: 271)
  Prédit: '(angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(angle' → logprob: -0.6802492141723633
    2. ' angle' → logprob: -1.1802492141723633
    3. ' (' → logprob: -2.1802492141723633
    4. ' return' → logprob: -3.3052492141723633
    5. 'angle' → logprob: -4.680249214172363
    6. '   ' → logprob: -5.180249214172363
    7. ' ' → logprob: -5.305249214172363
    8. '(' → logprob: -5.555249214172363
    9. ' )' → logprob: -6.055249214172363
    10. ' (
' → logprob: -6.180249214172363

Token 72: ' while' (ID: 2049)
  Prédit: ' angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' angle' → logprob: -0.09453248977661133
    2. 'angle' → logprob: -2.9695324897766113
    3. ' return' → logprob: -3.5945324897766113
    4. '(angle' → logprob: -4.594532489776611
    5. ' (' → logprob: -7.719532489776611
    6. 'return' → logprob: -7.969532489776611
    7. '   ' → logprob: -8.219532012939453
    8. '    ' → logprob: -9.469532012939453
    9. ' math' → logprob: -9.969532012939453
    10. ' ' → logprob: -10.344532012939453

Token 73: ' angle' (ID: 16538)
  Prédit: ' angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' angle' → logprob: -0.001950417528860271
    2. 'angle' → logprob: -6.251950263977051
    3. '(angle' → logprob: -11.00195026397705
    4. ' ' → logprob: -12.37695026397705
    5. '_angle' → logprob: -14.50195026397705
    6. ' ' → logprob: -15.50195026397705
    7. 'Angle' → logprob: -16.001951217651367
    8. ' abs' → logprob: -16.751951217651367
    9. '.angle' → logprob: -17.376951217651367
    10. '  ' → logprob: -18.251951217651367

Token 74: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.013544171117246151
    2. '<' → logprob: -4.388544082641602
    3. ' >' → logprob: -7.013544082641602
    4. '>' → logprob: -9.638544082641602
    5. ' <=' → logprob: -10.263544082641602
    6. ' ' → logprob: -10.763544082641602
    7. ' >=' → logprob: -11.513544082641602
    8. '<=' → logprob: -14.013544082641602
    9. '>=' → logprob: -14.763544082641602
    10. '<|end|>' → logprob: -14.763544082641602

Token 75: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07378876209259033
    2. '-' → logprob: -3.323788642883301
    3. ' -' → logprob: -3.698788642883301
    4. ' ' → logprob: -4.573788642883301
    5. '-M' → logprob: -11.0737886428833
    6. '-m' → logprob: -11.3237886428833
    7. '-c' → logprob: -12.6987886428833
    8. '-p' → logprob: -13.0737886428833
    9. '-\' → logprob: -13.6987886428833
    10. ' ' → logprob: -13.6987886428833

Token 76: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01254037581384182
    2. '-' → logprob: -4.387540340423584
    3. '-m' → logprob: -11.762540817260742
    4. '-M' → logprob: -11.762540817260742
    5. ' -' → logprob: -12.512540817260742
    6. ' ' → logprob: -12.637540817260742
    7. '-p' → logprob: -13.012540817260742
    8. '-c' → logprob: -13.512540817260742
    9. '-\' → logprob: -13.762540817260742
    10. '-python' → logprob: -15.012540817260742

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008353583980351686
    2. ':
' → logprob: -7.625835418701172
    3. ' :' → logprob: -8.125835418701172
    4. 'angle' → logprob: -10.375835418701172
    5. ' angle' → logprob: -11.250835418701172
    6. ' :
' → logprob: -12.875835418701172
    7. '   ' → logprob: -13.125835418701172
    8. '+:' → logprob: -14.250835418701172
    9. '_angle' → logprob: -14.875835418701172
    10. '):' → logprob: -14.875835418701172

Token 78: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.515101432800293
    2. ' angle' → logprob: -1.390101432800293
    3. 'angle' → logprob: -1.890101432800293
    4. '       ' → logprob: -6.765101432800293
    5. '    ' → logprob: -7.140101432800293
    6. ' 
' → logprob: -9.515101432800293
    7. '   ' → logprob: -9.640101432800293
    8. '    
' → logprob: -9.890101432800293
    9. ' +' → logprob: -9.890101432800293
    10. '<|end|>' → logprob: -10.015101432800293

Token 79: ' angle' (ID: 16538)
  Prédit: ' angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' angle' → logprob: -0.25476977229118347
    2. 'angle' (adapté à ' angle') → logprob: -1.5047698020935059
    3. '   ' → logprob: -5.879769802093506
    4. '    ' → logprob: -11.629769325256348
    5. '.angle' → logprob: -11.754769325256348
    6. '_angle' → logprob: -11.879769325256348
    7. ' ' → logprob: -12.254769325256348
    8. '(angle' → logprob: -12.504769325256348
    9. ' angles' → logprob: -13.379769325256348
    10. ' +' → logprob: -13.379769325256348

Token 80: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2843247056007385
    2. '+=' → logprob: -1.4093246459960938
    3. '+' → logprob: -5.784324645996094
    4. ' +' → logprob: -10.284324645996094
    5. ']+=' → logprob: -10.534324645996094
    6. '=' → logprob: -11.284324645996094
    7. '+='' → logprob: -11.909324645996094
    8. '+="' → logprob: -12.659324645996094
    9. '<|end|>' → logprob: -12.784324645996094
    10. ' ' → logprob: -12.784324645996094

Token 81: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0018710480071604252
    2. ' ' → logprob: -6.626871109008789
    3. '6' → logprob: -7.876871109008789
    4. '360' → logprob: -8.751871109008789
    5. 'math' → logprob: -12.126871109008789
    6. '3' → logprob: -13.876871109008789
    7. ' math' → logprob: -14.251871109008789
    8. '1' → logprob: -16.75187110900879
    9. '   ' → logprob: -17.00187110900879
    10. '0' → logprob: -17.00187110900879

Token 82: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.526570384972729e-05
    2. '360' → logprob: -10.250055313110352
    3. ' ' → logprob: -11.625055313110352
    4. '6' → logprob: -12.125055313110352
    5. 'math' → logprob: -12.125055313110352
    6. '   ' → logprob: -17.37505531311035
    7. '(' → logprob: -17.62505531311035
    8. 'import' → logprob: -18.00005531311035
    9. '3' → logprob: -18.12505531311035
    10. '```' → logprob: -18.12505531311035

Token 83: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.07662653177976608
    2. ' *' → logprob: -2.7016265392303467
    3. '*pi' → logprob: -5.076626300811768
    4. 'pi' → logprob: -9.076626777648926
    5. ' math' → logprob: -9.076626777648926
    6. '*Math' → logprob: -9.576626777648926
    7. 'math' → logprob: -9.826626777648926
    8. ' ' → logprob: -10.701626777648926
    9. ' ' → logprob: -11.201626777648926
    10. 'import' → logprob: -11.326626777648926

Token 84: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.3868767023086548
    2. ' math' → logprob: -1.1368767023086548
    3. '3' → logprob: -12.511877059936523
    4. '(math' → logprob: -13.261877059936523
    5. 'pi' → logprob: -16.386877059936523
    6. '.math' → logprob: -16.636877059936523
    7. ' ' → logprob: -17.136877059936523
    8. '```' → logprob: -17.386877059936523
    9. 'Math' → logprob: -17.761877059936523
    10. '_math' → logprob: -18.011877059936523

Token 85: '.pi' (ID: 55497)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12696579098701477
    2. '.pi' → logprob: -2.1269657611846924
    3. '.math' → logprob: -11.126965522766113
    4. '.PI' → logprob: -11.376965522766113
    5. ' .' → logprob: -12.876965522766113
    6. '.
' → logprob: -13.001965522766113
    7. '.py' → logprob: -13.001965522766113
    8. '.python' → logprob: -13.876965522766113
    9. '.p' → logprob: -14.001965522766113
    10. '.Math' → logprob: -14.626965522766113

Token 86: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07421751320362091
    2. ' ' → logprob: -3.1992175579071045
    3. ' 
' → logprob: -4.324217319488525
    4. ' while' → logprob: -5.324217319488525
    5. '
' → logprob: -5.449217319488525
    6. '    
' → logprob: -5.949217319488525
    7. '  
' → logprob: -6.324217319488525
    8. '  ' → logprob: -6.574217319488525
    9. ' return' → logprob: -7.324217319488525
    10. '   
' → logprob: -7.324217319488525

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11291739344596863
    2. ' ' → logprob: -2.987917423248291
    3. ' while' → logprob: -3.112917423248291
    4. ' return' → logprob: -5.112917423248291
    5. ' 
' → logprob: -6.362917423248291
    6. 'while' → logprob: -6.737917423248291
    7. '  ' → logprob: -7.237917423248291
    8. 'return' → logprob: -7.862917423248291
    9. '    ' → logprob: -7.862917423248291
    10. '    
' → logprob: -8.237916946411133

Token 88: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23925350606441498
    2. ' while' → logprob: -2.239253520965576
    3. ' return' → logprob: -2.489253520965576
    4. ' ' → logprob: -4.614253520965576
    5. 'return' → logprob: -5.114253520965576
    6. 'while' (adapté à ' while') → logprob: -5.239253520965576
    7. '    ' → logprob: -6.864253520965576
    8. '  ' → logprob: -7.489253520965576
    9. ' 
' → logprob: -8.864253044128418
    10. '    
' → logprob: -9.739253044128418

Token 89: ' angle' (ID: 16538)
  Prédit: ' angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' angle' → logprob: -0.005244668107479811
    2. 'angle' → logprob: -5.255244731903076
    3. '(angle' → logprob: -11.505244255065918
    4. ' ' → logprob: -15.005244255065918
    5. '_angle' → logprob: -15.755244255065918
    6. '.angle' → logprob: -16.255245208740234
    7. '   ' → logprob: -16.505245208740234
    8. 'Angle' → logprob: -16.880245208740234
    9. '<|end|>' → logprob: -17.880245208740234
    10. ' ang' → logprob: -18.130245208740234

Token 90: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5609958171844482
    2. ' >=' → logprob: -0.9359958171844482
    3. '>' → logprob: -3.5609958171844482
    4. '>=' → logprob: -4.810996055603027
    5. ' ' → logprob: -7.435996055603027
    6. '<|end|>' → logprob: -11.185996055603027
    7. ' >
' → logprob: -12.560996055603027
    8. ' ≥' → logprob: -13.935996055603027
    9. ')' → logprob: -13.935996055603027
    10. ' >

' → logprob: -14.310996055603027

Token 91: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2519436180591583
    2. '2' → logprob: -1.501943588256836
    3. '<|end|>' → logprob: -12.251943588256836
    4. ' math' → logprob: -12.501943588256836
    5. '   ' → logprob: -13.751943588256836
    6. 'math' → logprob: -13.876943588256836
    7. '  ' → logprob: -14.126943588256836
    8. ' ' → logprob: -14.251943588256836
    9. '1' → logprob: -14.251943588256836
    10. '```' → logprob: -15.126943588256836

Token 92: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0019289902411401272
    2. ' ' → logprob: -6.251928806304932
    3. '   ' → logprob: -15.12692928314209
    4. '  ' → logprob: -16.626928329467773
    5. '6' → logprob: -17.251928329467773
    6. 'math' → logprob: -17.751928329467773
    7. '```' → logprob: -18.001928329467773
    8. '`' → logprob: -18.001928329467773
    9. '(' → logprob: -18.251928329467773
    10. '1' → logprob: -19.001928329467773

Token 93: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.12695036828517914
    2. '*' → logprob: -2.126950263977051
    3. '*pi' → logprob: -11.25195026397705
    4. ' ' → logprob: -12.50195026397705
    5. ' ' → logprob: -13.00195026397705
    6. '*Math' → logprob: -13.12695026397705
    7. '**' → logprob: -15.12695026397705
    8. '.' → logprob: -15.62695026397705
    9. ' **' → logprob: -15.87695026397705
    10. '   ' → logprob: -16.001951217651367

Token 94: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.20142163336277008
    2. 'math' → logprob: -1.7014216184616089
    3. '(math' → logprob: -12.076421737670898
    4. ' ' → logprob: -13.451421737670898
    5. '.math' → logprob: -14.576421737670898
    6. '_math' → logprob: -15.201421737670898
    7. 'Math' → logprob: -15.701421737670898
    8. '/math' → logprob: -16.4514217376709
    9. 'cmath' → logprob: -17.3264217376709
    10. 'pi' → logprob: -17.3264217376709

Token 95: '.pi' (ID: 55497)
  Prédit: '.pi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pi' → logprob: -0.048643916845321655
    2. '.' → logprob: -3.0486438274383545
    3. '.p' → logprob: -10.173644065856934
    4. '.py' → logprob: -12.673644065856934
    5. '.PI' → logprob: -13.048644065856934
    6. ' .' → logprob: -13.048644065856934
    7. '‌.' → logprob: -13.173644065856934
    8. '.atan' → logprob: -13.298644065856934
    9. '<|end|>' → logprob: -14.423644065856934
    10. '.pyplot' → logprob: -14.548644065856934

Token 96: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005806732806377113
    2. ':
' → logprob: -7.625580787658691
    3. '   ' → logprob: -9.500580787658691
    4. '       ' → logprob: -12.000580787658691
    5. ' :' → logprob: -12.125580787658691
    6. 'angle' → logprob: -13.000580787658691
    7. '<|end|>' → logprob: -13.750580787658691
    8. ' angle' → logprob: -14.375580787658691
    9. '):' → logprob: -14.750580787658691
    10. '(angle' → logprob: -14.875580787658691

Token 97: '       ' (ID: 309)
  Prédit: ' angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' angle' → logprob: -0.4295254647731781
    2. '   ' → logprob: -1.8045254945755005
    3. '       ' → logprob: -1.8045254945755005
    4. 'angle' → logprob: -3.929525375366211
    5. '    ' → logprob: -8.304525375366211
    6. ' ' → logprob: -9.429525375366211
    7. ' ' → logprob: -10.929525375366211
    8. '  ' → logprob: -11.679525375366211
    9. '   ' → logprob: -11.679525375366211
    10. '(angle' → logprob: -11.804525375366211

Token 98: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' (adapté à ' angle') → logprob: -0.12716516852378845
    2. ' angle' → logprob: -2.1271650791168213
    3. '   ' → logprob: -8.377164840698242
    4. '       ' → logprob: -12.502164840698242
    5. ' ' → logprob: -13.377164840698242
    6. '    ' → logprob: -14.377164840698242
    7. '  ' → logprob: -14.877164840698242
    8. '(angle' → logprob: -15.502164840698242
    9. '_angle' → logprob: -15.752164840698242
    10. '.angle' → logprob: -16.002164840698242

Token 99: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.04871908575296402
    2. '-=' → logprob: -3.1737191677093506
    3. '-' → logprob: -5.1737189292907715
    4. ' -' → logprob: -10.29871940612793
    5. '=' → logprob: -12.42371940612793
    6. ' ' → logprob: -13.42371940612793
    7. '   ' → logprob: -14.67371940612793
    8. ')' → logprob: -15.79871940612793
    9. ' +=' → logprob: -16.04871940612793
    10. '+=' → logprob: -16.54871940612793

Token 100: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2519303858280182
    2. '2' → logprob: -1.5019303560256958
    3. '1' → logprob: -14.501930236816406
    4. ' math' → logprob: -14.751930236816406
    5. '   ' → logprob: -16.251930236816406
    6. '    ' → logprob: -16.626930236816406
    7. ' two' → logprob: -17.126930236816406
    8. '0' → logprob: -17.251930236816406
    9. ' ' → logprob: -17.251930236816406
    10. '```' → logprob: -17.251930236816406

Token 101: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0028048718813806772
    2. ' ' → logprob: -5.877804756164551
    3. '1' → logprob: -17.502805709838867
    4. '   ' → logprob: -17.877805709838867
    5. '```' → logprob: -18.127805709838867
    6. '(' → logprob: -19.002805709838867
    7. 'math' → logprob: -19.252805709838867
    8. '  ' → logprob: -19.502805709838867
    9. '0' → logprob: -19.565305709838867
    10. ' math' → logprob: -20.065305709838867

Token 102: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.012543675489723682
    2. '*' → logprob: -4.387543678283691
    3. ' ' → logprob: -10.512543678283691
    4. '*pi' → logprob: -12.887543678283691
    5. '*Math' → logprob: -13.762543678283691
    6. ' ' → logprob: -14.262543678283691
    7. '**' → logprob: -14.512543678283691
    8. ' **' → logprob: -14.637543678283691
    9. 'import' → logprob: -14.887543678283691
    10. '*object' → logprob: -15.012543678283691

Token 103: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.20141752064228058
    2. 'math' → logprob: -1.7014175653457642
    3. '(math' → logprob: -12.826417922973633
    4. ' ' → logprob: -14.326417922973633
    5. '.math' → logprob: -14.326417922973633
    6. 'pi' → logprob: -16.826417922973633
    7. '_math' → logprob: -16.951417922973633
    8. '/math' → logprob: -17.326417922973633
    9. '```' → logprob: -17.576417922973633
    10. ' pi' → logprob: -17.701417922973633

Token 104: '.pi' (ID: 55497)
  Prédit: '.pi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pi' → logprob: -0.004106065724045038
    2. '.' → logprob: -5.504106044769287
    3. '.p' → logprob: -11.129106521606445
    4. '.py' → logprob: -12.129106521606445
    5. '.psi' → logprob: -13.379106521606445
    6. '.PI' → logprob: -14.004106521606445
    7. ' .' → logprob: -14.129106521606445
    8. '.atan' → logprob: -14.254106521606445
    9. '.pc' → logprob: -14.504106521606445
    10. '.pkl' → logprob: -15.129106521606445

Token 105: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001429047784768045
    2. '    
' → logprob: -7.501429080963135
    3. ' return' → logprob: -8.001428604125977
    4. '
' → logprob: -8.251428604125977
    5. ' 
' → logprob: -9.376428604125977
    6. 'return' → logprob: -9.876428604125977
    7. '\n' → logprob: -10.001428604125977
    8. '\' → logprob: -10.626428604125977
    9. '	return' → logprob: -11.126428604125977
    10. '<|end|>' → logprob: -11.126428604125977

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033846991136670113
    2. ' return' → logprob: -5.878384590148926
    3. 'return' → logprob: -7.503384590148926
    4. '
' → logprob: -11.003384590148926
    5. '	return' → logprob: -12.628384590148926
    6. '    
' → logprob: -12.878384590148926
    7. ':return' → logprob: -13.128384590148926
    8. '```' → logprob: -13.378384590148926
    9. ' 
' → logprob: -13.628384590148926
    10. '<|end|>' → logprob: -15.378384590148926

Token 107: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.047617364674806595
    2. 'return' (adapté à ' return') → logprob: -3.4226174354553223
    3. ' return' → logprob: -4.297617435455322
    4. 'r' → logprob: -9.172616958618164
    5. '
' → logprob: -10.047616958618164
    6. '	return' → logprob: -10.172616958618164
    7. ':return' → logprob: -10.172616958618164
    8. '```' → logprob: -11.422616958618164
    9. '    
' → logprob: -11.922616958618164
    10. ' ' → logprob: -12.422616958618164

Token 108: ' angle' (ID: 16538)
  Prédit: ' angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' angle' → logprob: -0.25194093585014343
    2. 'angle' → logprob: -1.5019409656524658
    3. '(angle' → logprob: -11.876940727233887
    4. ' math' → logprob: -12.501940727233887
    5. ' ang' → logprob: -15.376940727233887
    6. ' ' → logprob: -15.501940727233887
    7. '_angle' → logprob: -15.626940727233887
    8. ' normalized' → logprob: -16.001941680908203
    9. ' ' → logprob: -16.251941680908203
    10. ' a' → logprob: -16.626941680908203

Token 109: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018061438575387
    2. '
' → logprob: -4.518061637878418
    3. '<|end|>' → logprob: -5.643061637878418
    4. '

' → logprob: -7.143061637878418
    5. '```' → logprob: -7.393061637878418
    6. '#' → logprob: -7.518061637878418
    7. '(' → logprob: -7.893061637878418
    8. ' def' → logprob: -8.018061637878418
    9. 'import' → logprob: -8.518061637878418
    10. '\' → logprob: -9.018061637878418

Token 110: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6447405815124512
    2. 'def' → logprob: -0.7697405815124512
    3. '#' → logprob: -5.019740581512451
    4. '(' → logprob: -5.644740581512451
    5. 'n' → logprob: -7.769740581512451
    6. 'r' → logprob: -8.39474105834961
    7. 'c' → logprob: -8.64474105834961
    8. '```' → logprob: -8.64474105834961
    9. 'i' → logprob: -9.14474105834961
    10. ')' → logprob: -9.14474105834961

Token 111: ' intervals' (ID: 49900)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -1.7504106760025024
    2. ' arc' → logprob: -1.7504106760025024
    3. ' sector' → logprob: -2.000410556793213
    4. ' is' → logprob: -2.250410556793213
    5. ' point' → logprob: -3.000410556793213
    6. '_arc' → logprob: -3.000410556793213
    7. '_sector' → logprob: -3.125410556793213
    8. ' chord' → logprob: -3.500410556793213
    9. '_point' → logprob: -3.875410556793213
    10. ' closest' → logprob: -3.875410556793213

Token 112: '_sub' (ID: 11572)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17577573657035828
    2. '(' → logprob: -2.9257757663726807
    3. '_between' → logprob: -2.9257757663726807
    4. '_split' → logprob: -4.425775527954102
    5. '_inter' → logprob: -4.550775527954102
    6. '_overlap' → logprob: -4.550775527954102
    7. '_to' → logprob: -5.925775527954102
    8. '_space' → logprob: -6.425775527954102
    9. '_equal' → logprob: -6.425775527954102
    10. '_contains' → logprob: -6.800775527954102

Token 113: 'tract' (ID: 2642)
  Prédit: 'tract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tract' → logprob: -3.392824874026701e-05
    2. 'stract' → logprob: -10.87503433227539
    3. '(interval' → logprob: -13.00003433227539
    4. '(a' → logprob: -13.12503433227539
    5. 'tracted' → logprob: -13.12503433227539
    6. ' tract' → logprob: -13.50003433227539
    7. 'tr' → logprob: -13.50003433227539
    8. '(' → logprob: -13.50003433227539
    9. '```' → logprob: -13.75003433227539
    10. 'traction' → logprob: -13.87503433227539

Token 114: '(interval' (ID: 100435)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1760684847831726
    2. '(interval' → logprob: -2.1760685443878174
    3. ' (' → logprob: -3.4260685443878174
    4. '(a' → logprob: -4.301068305969238
    5. '(s' → logprob: -7.926068305969238
    6. '(i' → logprob: -8.051068305969238
    7. '((' → logprob: -8.051068305969238
    8. '(start' → logprob: -8.801068305969238
    9. '(space' → logprob: -9.176068305969238
    10. '(open' → logprob: -9.301068305969238

Token 115: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.010076679289340973
    2. ',' → logprob: -4.635076522827148
    3. ' ,' → logprob: -8.510076522827148
    4. '(s' → logprob: -10.635076522827148
    5. '1' → logprob: -10.760076522827148
    6. '_list' → logprob: -10.885076522827148
    7. ')' → logprob: -10.885076522827148
    8. '):' → logprob: -11.510076522827148
    9. '(' → logprob: -11.885076522827148
    10. 'list' → logprob: -12.510076522827148

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010080150241265073
    2. ' ,' → logprob: -9.375101089477539
    3. '[],' → logprob: -12.750101089477539
    4. '‌,' → logprob: -13.000101089477539
    5. ',List' → logprob: -13.000101089477539
    6. '[' → logprob: -13.125101089477539
    7. ',[' → logprob: -13.375101089477539
    8. 's' → logprob: -14.375101089477539
    9. '(' → logprob: -14.500101089477539
    10. ')' → logprob: -14.625101089477539

Token 117: ' sub' (ID: 1543)
  Prédit: ' sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sub' → logprob: -0.7397293448448181
    2. 'sub' → logprob: -1.864729404449463
    3. ' to' → logprob: -2.239729404449463
    4. 'to' → logprob: -2.364729404449463
    5. 'interval' → logprob: -3.239729404449463
    6. 'subtract' → logprob: -3.239729404449463
    7. '[' → logprob: -3.864729404449463
    8. ' intervals' → logprob: -3.989729404449463
    9. ' subtract' → logprob: -4.364729404449463
    10. ' interval' → logprob: -4.614729404449463

Token 118: '):
' (ID: 1883)
  Prédit: 'tract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tract' → logprob: -1.0940369367599487
    2. ')' → logprob: -1.8440369367599487
    3. 'stract' → logprob: -1.8440369367599487
    4. 'tr' → logprob: -2.4690370559692383
    5. 'tracted' → logprob: -2.9690370559692383
    6. '_inter' → logprob: -3.7190370559692383
    7. 's' → logprob: -3.7190370559692383
    8. '```' → logprob: -3.8440370559692383
    9. ' ' → logprob: -3.9690370559692383
    10. '_' → logprob: -3.9690370559692383

Token 119: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007906011305749416
    2. ' :' → logprob: -4.882905960083008
    3. ':
' → logprob: -9.132905960083008
    4. '):' → logprob: -9.132905960083008
    5. ':**' → logprob: -11.132905960083008
    6. '[:]' → logprob: -11.132905960083008
    7. ' :
' → logprob: -11.382905960083008
    8. '():' → logprob: -11.632905960083008
    9. '   ' → logprob: -11.757905960083008
    10. ':list' → logprob: -12.382905960083008

Token 120: ' result' (ID: 1534)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.3563441336154938
    2. '[]' → logprob: -2.106344223022461
    3. '[' → logprob: -2.856344223022461
    4. ' result' → logprob: -3.106344223022461
    5. ' [' → logprob: -3.106344223022461
    6. '   ' → logprob: -3.981344223022461
    7. 'result' (adapté à ' result') → logprob: -5.106344223022461
    8. ' [
' → logprob: -5.856344223022461
    9. ' new' → logprob: -6.981344223022461
    10. ' ' → logprob: -7.106344223022461

Token 121: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014229914173483849
    2. '=' → logprob: -4.264229774475098
    3. ' ' → logprob: -9.889229774475098
    4. ' =
' → logprob: -12.514229774475098
    5. ' =[' → logprob: -13.014229774475098
    6. 's' → logprob: -13.389229774475098
    7. '=[]' → logprob: -13.514229774475098
    8. ',' → logprob: -13.764229774475098
    9. '_' → logprob: -13.889229774475098
    10. '[' → logprob: -14.264229774475098

Token 122: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.475333571434021
    2. '[]' → logprob: -0.975333571434021
    3. '[' → logprob: -6.7253336906433105
    4. ' [' → logprob: -9.975333213806152
    5. ' ' → logprob: -11.850333213806152
    6. '[]>' → logprob: -13.850333213806152
    7. ' []
' → logprob: -14.600333213806152
    8. '[]}' → logprob: -15.350333213806152
    9. '[]
' → logprob: -15.475333213806152
    10. '[],' → logprob: -16.72533416748047

Token 123: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03576652333140373
    2. '   ' → logprob: -3.9107666015625
    3. 'for' → logprob: -4.4107666015625
    4. ' ' → logprob: -6.1607666015625
    5. '    ' → logprob: -8.1607666015625
    6. ' i' → logprob: -8.7857666015625
    7. '	for' → logprob: -9.0357666015625
    8. '    
' → logprob: -9.1607666015625
    9. ' current' → logprob: -9.2857666015625
    10. ' 
' → logprob: -10.4107666015625

Token 124: ' s' (ID: 265)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1609034240245819
    2. 'for' → logprob: -1.9109034538269043
    3. ' i' → logprob: -7.535903453826904
    4. 'i' → logprob: -9.410902976989746
    5. ' current' → logprob: -9.910902976989746
    6. '   ' → logprob: -12.035902976989746
    7. 'current' → logprob: -12.785902976989746
    8. ' prev' → logprob: -13.785902976989746
    9. 'start' → logprob: -14.410902976989746
    10. ' ' → logprob: -14.535902976989746

Token 125: '_start' (ID: 10949)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0030757521744817495
    2. 'ub' → logprob: -5.87807559967041
    3. '_start' → logprob: -8.75307559967041
    4. 'start' → logprob: -10.25307559967041
    5. ',' → logprob: -10.75307559967041
    6. '=start' → logprob: -11.62807559967041
    7. '=' → logprob: -11.75307559967041
    8. '   ' → logprob: -11.75307559967041
    9. '_' → logprob: -12.00307559967041
    10. ' =' → logprob: -12.37807559967041

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7835754988482222e-05
    2. ',s' → logprob: -11.125018119812012
    3. ' ,' → logprob: -13.500018119812012
    4. 's' → logprob: -14.250018119812012
    5. ',start' → logprob: -14.500018119812012
    6. '=' → logprob: -15.375018119812012
    7. ',
' → logprob: -15.625018119812012
    8. ',end' → logprob: -16.625017166137695
    9. '_,' → logprob: -17.000017166137695
    10. '‌,' → logprob: -17.375017166137695

Token 127: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.061972059309482574
    2. 's' → logprob: -2.811972141265869
    3. '<|end|>' → logprob: -12.936971664428711
    4. '_s' → logprob: -13.811971664428711
    5. ' ' → logprob: -14.311971664428711
    6. 'sub' → logprob: -16.06197166442871
    7. '	s' → logprob: -16.56197166442871
    8. ' sub' → logprob: -16.81197166442871
    9. '<|end|>' → logprob: -17.18697166442871
    10. '(s' → logprob: -17.18697166442871

Token 128: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.002420725766569376
    2. '_' → logprob: -6.877420902252197
    3. '_start' → logprob: -7.627420902252197
    4. '_stop' → logprob: -8.252420425415039
    5. ',' → logprob: -8.752420425415039
    6. '_s' → logprob: -9.252420425415039
    7. 'end' → logprob: -9.377420425415039
    8. '_top' → logprob: -9.377420425415039
    9. '_sub' → logprob: -9.752420425415039
    10. 't' → logprob: -10.127420425415039

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16029825806617737
    2. '=' → logprob: -1.910298228263855
    3. ',' → logprob: -9.535298347473145
    4. ' ' → logprob: -13.785298347473145
    5. ' =
' → logprob: -14.785298347473145
    6. ' ,' → logprob: -16.535297393798828
    7. ')' → logprob: -16.535297393798828
    8. ' =)' → logprob: -16.785297393798828
    9. '<|end|>' → logprob: -17.160297393798828
    10. '=int' → logprob: -17.160297393798828

Token 130: ' sub' (ID: 1543)
  Prédit: ' sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sub' → logprob: -0.17977170646190643
    2. 'sub' → logprob: -1.8047716617584229
    3. ' intervals' → logprob: -11.679771423339844
    4. '	sub' → logprob: -12.054771423339844
    5. 's' → logprob: -12.679771423339844
    6. '=sub' → logprob: -12.929771423339844
    7. '_sub' → logprob: -13.179771423339844
    8. 'interval' → logprob: -13.429771423339844
    9. '[sub' → logprob: -13.929771423339844
    10. ' subv' → logprob: -14.054771423339844

Token 131: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 132: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 133: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.027831386774778366
    2. 'for' (adapté à ' for') → logprob: -3.6528313159942627
    3. '   ' → logprob: -6.527831554412842
    4. '	for' → logprob: -10.777831077575684
    5. ' ' → logprob: -11.152831077575684
    6. '<|end|>' → logprob: -11.402831077575684
    7. '    
' → logprob: -11.902831077575684
    8. '
' → logprob: -12.277831077575684
    9. ' 
' → logprob: -12.527831077575684
    10. '    ' → logprob: -13.777831077575684

Token 134: ' (' (ID: 350)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.27915647625923157
    2. 'i' → logprob: -2.529156446456909
    3. 'int' → logprob: -2.529156446456909
    4. ' start' → logprob: -3.279156446456909
    5. 'interval' → logprob: -3.279156446456909
    6. ' i' → logprob: -5.779156684875488
    7. '(start' → logprob: -6.404156684875488
    8. ' interval' → logprob: -7.154156684875488
    9. 'curr' → logprob: -7.279156684875488
    10. ' int' → logprob: -7.779156684875488

Token 135: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.031188730150461197
    2. 'i' → logprob: -3.656188726425171
    3. 'int' → logprob: -6.03118896484375
    4. ' start' → logprob: -6.15618896484375
    5. 'curr' → logprob: -8.90618896484375
    6. 'interval' → logprob: -9.40618896484375
    7. ' i' → logprob: -10.03118896484375
    8. 'a' → logprob: -10.15618896484375
    9. 'iv' → logprob: -11.78118896484375
    10. 'ival' → logprob: -11.78118896484375

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.394135612528771e-05
    2. ',end' → logprob: -10.625043869018555
    3. ' ,' → logprob: -11.000043869018555
    4. '<|end|>' → logprob: -13.625043869018555
    5. ',start' → logprob: -14.375043869018555
    6. '‌,' → logprob: -14.875043869018555
    7. ',
' → logprob: -15.625043869018555
    8. ',s' → logprob: -16.000043869018555
    9. ')' → logprob: -16.000043869018555
    10. '<|end|>' → logprob: -16.875043869018555

Token 137: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.47410595417022705
    2. 'end' → logprob: -0.974105954170227
    3. '<|end|>' → logprob: -11.724105834960938
    4. '	end' → logprob: -11.974105834960938
    5. ' ' → logprob: -12.599105834960938
    6. '_end' → logprob: -12.724105834960938
    7. ',end' → logprob: -13.224105834960938
    8. '[end' → logprob: -13.349105834960938
    9. '(end' → logprob: -13.974105834960938
    10. '   ' → logprob: -13.974105834960938

Token 138: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01391442958265543
    2. '),' → logprob: -4.513914585113525
    3. ',' → logprob: -6.013914585113525
    4. ' )' → logprob: -8.388914108276367
    5. ' in' → logprob: -9.513914108276367
    6. '),(' → logprob: -9.638914108276367
    7. ',)' → logprob: -10.763914108276367
    8. ' ),' → logprob: -10.888914108276367
    9. ' ,' → logprob: -12.263914108276367
    10. 'in' → logprob: -13.263914108276367

Token 139: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008822556585073471
    2. ',' → logprob: -5.633822441101074
    3. 'in' → logprob: -5.633822441101074
    4. ' ' → logprob: -6.633822441101074
    5. ' ,' → logprob: -8.508822441101074
    6. '<|end|>' → logprob: -9.383822441101074
    7. '	in' → logprob: -11.008822441101074
    8. '_in' → logprob: -13.133822441101074
    9. '<|end|>' → logprob: -13.133822441101074
    10. ',in' → logprob: -13.133822441101074

Token 140: ' intervals' (ID: 49900)
  Prédit: ' intervals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.038045622408390045
    2. 'interval' → logprob: -3.288045644760132
    3. '(interval' → logprob: -12.538045883178711
    4. ' interval' → logprob: -15.163045883178711
    5. ' ' → logprob: -16.28804588317871
    6. 'inter' → logprob: -16.53804588317871
    7. '<|end|>' → logprob: -16.91304588317871
    8. 'Intervals' → logprob: -18.03804588317871
    9. 'int' → logprob: -18.41304588317871
    10. ')' → logprob: -19.41304588317871

Token 141: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013361937599256635
    2. ':
' → logprob: -6.876336097717285
    3. ' :' → logprob: -8.501336097717285
    4. '):' → logprob: -9.626336097717285
    5. ',' → logprob: -10.876336097717285
    6. '):
' → logprob: -12.001336097717285
    7. '<|end|>' → logprob: -12.751336097717285
    8. ' :
' → logprob: -13.001336097717285
    9. ':

' → logprob: -13.876336097717285
    10. ':**' → logprob: -14.126336097717285

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3858267068862915
    2. ' ' → logprob: -1.7608267068862915
    3. '<|end|>' → logprob: -2.510826587677002
    4. ',' → logprob: -3.885826587677002
    5. ':' → logprob: -4.010826587677002
    6. '        ' → logprob: -4.135826587677002
    7. '    ' → logprob: -5.760826587677002
    8. '        
' → logprob: -6.010826587677002
    9. '<|end|>' → logprob: -6.010826587677002
    10. '   ' → logprob: -7.135826587677002

Token 143: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5751620531082153
    2. '       ' → logprob: -1.0751620531082153
    3. '        ' → logprob: -2.700161933898926
    4. ' if' → logprob: -4.700161933898926
    5. '<|end|>' → logprob: -4.825161933898926
    6. '    ' → logprob: -4.950161933898926
    7. '        
' → logprob: -6.950161933898926
    8. '   ' → logprob: -7.450161933898926
    9. 'if' (adapté à ' if') → logprob: -7.450161933898926
    10. ' 
' → logprob: -7.575161933898926

Token 144: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.972284734249115
    2. 'end' → logprob: -1.2222847938537598
    3. 's' → logprob: -1.5972847938537598
    4. ' s' → logprob: -2.0972847938537598
    5. 'e' → logprob: -6.97228479385376
    6. '   ' → logprob: -7.97228479385376
    7. ' e' → logprob: -8.097284317016602
    8. ' ' → logprob: -8.347284317016602
    9. '  ' → logprob: -9.597284317016602
    10. '	end' → logprob: -9.972284317016602

Token 145: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.10022640228271484
    2. ' <=' → logprob: -2.350226402282715
    3. '<' → logprob: -10.975226402282715
    4. ')<=' → logprob: -13.725226402282715
    5. ' ' → logprob: -14.725226402282715
    6. ']<=' → logprob: -14.850226402282715
    7. ' <' → logprob: -15.600226402282715
    8. '[' → logprob: -15.975226402282715
    9. '≤' → logprob: -15.975226402282715
    10. '```' → logprob: -16.35022735595703

Token 146: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0067156096920371056
    2. ' s' → logprob: -5.006715774536133
    3. '  ' → logprob: -16.006715774536133
    4. '<|end|>' → logprob: -16.506715774536133
    5. '	s' → logprob: -17.256715774536133
    6. '   ' → logprob: -17.256715774536133
    7. 'start' → logprob: -17.381715774536133
    8. ' ' → logprob: -17.381715774536133
    9. '_s' → logprob: -18.256715774536133
    10. 'sub' → logprob: -19.006715774536133

Token 147: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.00014334988372866064
    2. 'start' → logprob: -9.125143051147461
    3. '_' → logprob: -10.375143051147461
    4. '_end' → logprob: -13.500143051147461
    5. '_START' → logprob: -14.500143051147461
    6. ' _' → logprob: -14.750143051147461
    7. '_star' → logprob: -14.875143051147461
    8. '_s' → logprob: -15.375143051147461
    9. ' start' → logprob: -16.00014305114746
    10. '_sta' → logprob: -16.75014305114746

Token 148: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038505010306835175
    2. ' or' → logprob: -3.2885050773620605
    3. ':
' → logprob: -8.413504600524902
    4. '<|end|>' → logprob: -9.038504600524902
    5. ',' → logprob: -10.288504600524902
    6. ' :' → logprob: -10.538504600524902
    7. '       ' → logprob: -10.663504600524902
    8. '):' → logprob: -11.038504600524902
    9. ' ' → logprob: -12.038504600524902
    10. '<|end|>' → logprob: -12.413504600524902

Token 149: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.4744543135166168
    2. ' start' → logprob: -0.9744542837142944
    3. 's' → logprob: -8.724453926086426
    4. 'end' → logprob: -9.099453926086426
    5. ' end' → logprob: -10.099453926086426
    6. ' s' → logprob: -10.474453926086426
    7. '   ' → logprob: -11.474453926086426
    8. ' ' → logprob: -11.599453926086426
    9. '	start' → logprob: -12.724453926086426
    10. '    ' → logprob: -13.474453926086426

Token 150: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.3868997097015381
    2. '>=' → logprob: -1.136899709701538
    3. ' ' → logprob: -11.761899948120117
    4. ']>=' → logprob: -12.011899948120117
    5. ')>=' → logprob: -12.136899948120117
    6. '<|end|>' → logprob: -12.386899948120117
    7. '   ' → logprob: -13.011899948120117
    8. '≥' → logprob: -14.011899948120117
    9. '    ' → logprob: -14.136899948120117
    10. '  ' → logprob: -15.261899948120117

Token 151: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.061968810856342316
    2. 's' → logprob: -2.8119688034057617
    3. ' ' → logprob: -14.436968803405762
    4. '<|end|>' → logprob: -15.061968803405762
    5. '	s' → logprob: -15.811968803405762
    6. '_s' → logprob: -16.686969757080078
    7. '
' → logprob: -16.686969757080078
    8. '   ' → logprob: -17.436969757080078
    9. '<|end|>' → logprob: -17.811969757080078
    10. '(s' → logprob: -17.874469757080078

Token 152: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -2.1054253011243418e-05
    2. '_' → logprob: -11.750020980834961
    3. 'end' → logprob: -12.375020980834961
    4. '_s' → logprob: -12.625020980834961
    5. 's' → logprob: -12.750020980834961
    6. '_sub' → logprob: -13.250020980834961
    7. ' _' → logprob: -15.250020980834961
    8. '_start' → logprob: -15.500020980834961
    9. '_e' → logprob: -15.750020980834961
    10. '_END' → logprob: -16.37502098083496

Token 153: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011118912138044834
    2. ':
' → logprob: -4.5111188888549805
    3. '       ' → logprob: -9.88611888885498
    4. '):' → logprob: -11.38611888885498
    5. ':return' → logprob: -12.76111888885498
    6. ',' → logprob: -13.38611888885498
    7. '):
' → logprob: -13.63611888885498
    8. ' :' → logprob: -13.88611888885498
    9. ':
' → logprob: -14.26111888885498
    10. ':

' → logprob: -14.38611888885498

Token 154: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37133193016052246
    2. '       ' → logprob: -1.2463319301605225
    3. 'result' → logprob: -4.246332168579102
    4. ':' → logprob: -6.246332168579102
    5. '
' → logprob: -6.371332168579102
    6. ':
' → logprob: -6.496332168579102
    7. ' result' → logprob: -6.871332168579102
    8. ',' → logprob: -7.496332168579102
    9. '```' → logprob: -7.871332168579102
    10. 'continue' → logprob: -8.121332168579102

Token 155: ' #' (ID: 1069)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.4025816023349762
    2. 'result' → logprob: -1.1525815725326538
    3. '           ' → logprob: -4.402581691741943
    4. '               ' → logprob: -7.152581691741943
    5. '       ' → logprob: -7.152581691741943
    6. '        ' → logprob: -7.527581691741943
    7. ' ' → logprob: -7.777581691741943
    8. ' ' → logprob: -8.902581214904785
    9. '	result' → logprob: -8.902581214904785
    10. ' continue' → logprob: -9.027581214904785

Token 156: ' no' (ID: 860)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3142506182193756
    2. ' result' → logprob: -1.3142505884170532
    3. '           ' → logprob: -6.939250469207764
    4. '       ' → logprob: -11.939250946044922
    5. '   ' → logprob: -12.814250946044922
    6. '	result' → logprob: -13.314250946044922
    7. '            ' → logprob: -13.439250946044922
    8. '               ' → logprob: -13.439250946044922
    9. '        ' → logprob: -13.689250946044922
    10. '
' → logprob: -13.814250946044922

Token 157: ' overlap' (ID: 56631)
  Prédit: ' change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' change' → logprob: -0.3492114543914795
    2. ' overlap' → logprob: -2.0992114543914795
    3. ' action' → logprob: -2.8492114543914795
    4. 'change' → logprob: -2.9742114543914795
    5. ' subtraction' → logprob: -3.2242114543914795
    6. ' changes' → logprob: -4.474211692810059
    7. ' intersection' → logprob: -5.849211692810059
    8. ' need' → logprob: -6.099211692810059
    9. ' ' → logprob: -6.724211692810059
    10. ' space' → logprob: -6.974211692810059

Token 158: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7372719645500183
    2. '           ' → logprob: -1.362272024154663
    3. ',' → logprob: -1.487272024154663
    4. '<|end|>' → logprob: -4.112271785736084
    5. '               ' → logprob: -4.862271785736084
    6. ':' → logprob: -4.987271785736084
    7. '<|end|>' → logprob: -6.362271785736084
    8. '
' → logprob: -7.112271785736084
    9. ' or' → logprob: -7.237271785736084
    10. ')' → logprob: -7.487271785736084

Token 159: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32616278529167175
    2. '           ' → logprob: -1.9511628150939941
    3. ',' → logprob: -2.076162815093994
    4. '<|end|>' → logprob: -5.451162815093994
    5. '               ' → logprob: -6.826162815093994
    6. ':' → logprob: -6.951162815093994
    7. ',result' → logprob: -7.076162815093994
    8. 'result' → logprob: -7.701162815093994
    9. ' result' → logprob: -7.701162815093994
    10. '
' → logprob: -7.701162815093994

Token 160: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.16223236918449402
    2. 'result' (adapté à ' result') → logprob: -2.0372323989868164
    3. '           ' → logprob: -4.537232398986816
    4. '       ' → logprob: -4.787232398986816
    5. ',result' → logprob: -9.662232398986816
    6. '
' → logprob: -9.912232398986816
    7. '               ' → logprob: -10.037232398986816
    8. '        ' → logprob: -10.287232398986816
    9. '	result' → logprob: -10.662232398986816
    10. '        
' → logprob: -10.912232398986816

Token 161: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.024159947410225868
    2. '.' → logprob: -3.7741599082946777
    3. '.extend' → logprob: -7.149159908294678
    4. ' .' → logprob: -9.024160385131836
    5. ' +=' → logprob: -12.899160385131836
    6. '.app' → logprob: -13.149160385131836
    7. '.add' → logprob: -13.274160385131836
    8. '.ap' → logprob: -14.149160385131836
    9. '.push' → logprob: -14.899160385131836
    10. '.Append' → logprob: -15.774160385131836

Token 162: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.3566436171531677
    2. ' (' → logprob: -1.3566436767578125
    3. '(start' → logprob: -3.4816436767578125
    4. '(' → logprob: -4.4816436767578125
    5. ' ((' → logprob: -8.106643676757812
    6. '(end' → logprob: -10.106643676757812
    7. ' ' → logprob: -10.981643676757812
    8. '   ' → logprob: -11.981643676757812
    9. '(interval' → logprob: -12.356643676757812
    10. '(
' → logprob: -12.731643676757812

Token 163: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0002613358374219388
    2. ' start' → logprob: -8.250261306762695
    3. '(start' → logprob: -16.750261306762695
    4. '   ' → logprob: -17.000261306762695
    5. '_start' → logprob: -18.875261306762695
    6. '	start' → logprob: -19.000261306762695
    7. ')' → logprob: -19.125261306762695
    8. ' ' → logprob: -19.750261306762695
    9. '[start' → logprob: -19.750261306762695
    10. '  ' → logprob: -20.000261306762695

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.227250610711053e-05
    2. ',end' → logprob: -10.500041961669922
    3. ' ,' → logprob: -11.250041961669922
    4. ',
' → logprob: -13.500041961669922
    5. ',start' → logprob: -16.500041961669922
    6. ',

' → logprob: -17.125041961669922
    7. '‌,' → logprob: -17.250041961669922
    8. '<|end|>' → logprob: -17.250041961669922
    9. ',next' → logprob: -17.375041961669922
    10. ',s' → logprob: -17.500041961669922

Token 165: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.04858827963471413
    2. ' end' → logprob: -3.048588275909424
    3. ' ' → logprob: -15.048588752746582
    4. '   ' → logprob: -15.548588752746582
    5. '	end' → logprob: -16.173587799072266
    6. '
' → logprob: -17.173587799072266
    7. '       ' → logprob: -17.548587799072266
    8. '(end' → logprob: -17.798587799072266
    9. '    ' → logprob: -17.923587799072266
    10. '[end' → logprob: -17.923587799072266

Token 166: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0010143491672351956
    2. '))
' → logprob: -7.001014232635498
    3. ')' → logprob: -9.376014709472656
    4. '       ' → logprob: -11.251014709472656
    5. ' ))' → logprob: -13.126014709472656
    6. '   ' → logprob: -13.751014709472656
    7. '))
' → logprob: -14.501014709472656
    8. ')))' → logprob: -14.876014709472656
    9. '))

' → logprob: -14.876014709472656
    10. '));' → logprob: -14.876014709472656

Token 167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015272404998540878
    2. 'elif' → logprob: -6.751527309417725
    3. ' elif' → logprob: -8.376526832580566
    4. '<|end|>' → logprob: -9.751526832580566
    5. ')' → logprob: -11.001526832580566
    6. ' else' → logprob: -11.251526832580566
    7. ',' → logprob: -11.251526832580566
    8. 'else' → logprob: -11.376526832580566
    9. '	elif' → logprob: -12.501526832580566
    10. '```' → logprob: -13.126526832580566

Token 168: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.29266586899757385
    2. ' elif' → logprob: -1.5426658391952515
    3. '       ' → logprob: -3.292665958404541
    4. ' else' → logprob: -6.417665958404541
    5. 'else' (adapté à ' else') → logprob: -7.042665958404541
    6. '	elif' → logprob: -8.417665481567383
    7. ',' → logprob: -11.542665481567383
    8. '   ' → logprob: -11.792665481567383
    9. '<|end|>' → logprob: -12.292665481567383
    10. 'el' → logprob: -12.417665481567383

Token 169: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02095126174390316
    2. ':
' → logprob: -4.020951271057129
    3. '       ' → logprob: -6.395951271057129
    4. ' if' → logprob: -7.770951271057129
    5. ' :' → logprob: -7.895951271057129
    6. ',' → logprob: -8.645951271057129
    7. ' :
' → logprob: -9.520951271057129
    8. '        ' → logprob: -10.895951271057129
    9. '<|end|>' → logprob: -11.020951271057129
    10. 'if' → logprob: -11.270951271057129

Token 170: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4022276997566223
    2. ' if' → logprob: -1.4022276401519775
    3. '       ' → logprob: -2.9022276401519775
    4. 'if' → logprob: -3.5272276401519775
    5. '        ' → logprob: -8.027227401733398
    6. '   ' → logprob: -9.027227401733398
    7. ' ' → logprob: -9.652227401733398
    8. '	       ' → logprob: -9.777227401733398
    9. '            ' → logprob: -9.902227401733398
    10. '    ' → logprob: -9.902227401733398

Token 171: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.013228817842900753
    2. '           ' → logprob: -5.138228893280029
    3. 'if' → logprob: -5.138228893280029
    4. ' ' → logprob: -6.763228893280029
    5. '            ' → logprob: -8.763228416442871
    6. '       ' → logprob: -10.763228416442871
    7. '	if' → logprob: -10.888228416442871
    8. '               ' → logprob: -10.888228416442871
    9. '   ' → logprob: -11.638228416442871
    10. ' ' → logprob: -12.138228416442871

Token 172: ' overlap' (ID: 56631)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.32502734661102295
    2. ' if' → logprob: -1.325027346611023
    3. '           ' → logprob: -4.4500274658203125
    4. '            ' → logprob: -11.950027465820312
    5. '	if' → logprob: -12.325027465820312
    6. '       ' → logprob: -13.200027465820312
    7. '          ' → logprob: -13.450027465820312
    8. ' ' → logprob: -14.075027465820312
    9. '               ' → logprob: -14.325027465820312
    10. '   ' → logprob: -14.450027465820312

Token 173: ' exists' (ID: 13031)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38742077350616455
    2. ',' → logprob: -1.6374207735061646
    3. '<|end|>' → logprob: -2.762420654296875
    4. ' ,' → logprob: -3.762420654296875
    5. ' if' → logprob: -4.012420654296875
    6. '<|end|>' → logprob: -4.637420654296875
    7. ':' → logprob: -5.262420654296875
    8. ' =' → logprob: -6.262420654296875
    9. 's' → logprob: -6.887420654296875
    10. '       ' → logprob: -7.387420654296875

Token 174: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.253971666097641
    2. '<|end|>' → logprob: -2.378971576690674
    3. ',' → logprob: -2.503971576690674
    4. '       ' → logprob: -3.628971576690674
    5. '
' → logprob: -4.753971576690674
    6. '<|end|>' → logprob: -5.128971576690674
    7. ' if' → logprob: -6.003971576690674
    8. '   ' → logprob: -6.878971576690674
    9. ' ,' → logprob: -7.003971576690674
    10. ' ' → logprob: -7.253971576690674

Token 175: ' split' (ID: 12648)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.033911120146512985
    2. '           ' → logprob: -4.033911228179932
    3. 'if' → logprob: -4.158911228179932
    4. '   ' → logprob: -12.283910751342773
    5. '	if' → logprob: -12.783910751342773
    6. ' ' → logprob: -13.033910751342773
    7. '       ' → logprob: -13.283910751342773
    8. '	       ' → logprob: -14.908910751342773
    9. '          ' → logprob: -15.408910751342773
    10. ',' → logprob: -15.533910751342773

Token 176: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15358518064022064
    2. 'if' → logprob: -2.028585195541382
    3. ' into' → logprob: -4.903584957122803
    4. '           ' → logprob: -6.778584957122803
    5. ' intervals' → logprob: -7.403584957122803
    6. '(' → logprob: -7.778584957122803
    7. ' (' → logprob: -8.028585433959961
    8. '(start' → logprob: -8.403585433959961
    9. ' at' → logprob: -9.028585433959961
    10. ' the' → logprob: -9.153585433959961

Token 177: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15456557273864746
    2. 'if' → logprob: -2.2795655727386475
    3. '           ' → logprob: -3.6545655727386475
    4. ' into' → logprob: -4.654565811157227
    5. ' at' → logprob: -6.404565811157227
    6. ' intervals' → logprob: -6.404565811157227
    7. ' the' → logprob: -7.654565811157227
    8. ',' → logprob: -8.154565811157227
    9. 'interval' → logprob: -8.529565811157227
    10. '<|end|>' → logprob: -8.654565811157227

Token 178: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.23676027357578278
    2. ' if' → logprob: -1.7367602586746216
    3. '           ' → logprob: -3.361760377883911
    4. '	if' → logprob: -10.111760139465332
    5. '       ' → logprob: -12.736760139465332
    6. '		' → logprob: -12.861760139465332
    7. '   ' → logprob: -12.861760139465332
    8. ' ' → logprob: -13.486760139465332
    9. '          ' → logprob: -13.611760139465332
    10. '	       ' → logprob: -13.861760139465332

Token 179: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.3869961202144623
    2. ' start' → logprob: -1.1369961500167847
    3. 's' → logprob: -9.136996269226074
    4. ' s' → logprob: -11.136996269226074
    5. '(start' → logprob: -13.636996269226074
    6. 'end' → logprob: -14.761996269226074
    7. '_start' → logprob: -15.261996269226074
    8. ' ' → logprob: -15.386996269226074
    9. '[start' → logprob: -15.386996269226074
    10. ':start' → logprob: -15.761996269226074

Token 180: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.12740080058574677
    2. '<' → logprob: -2.1274008750915527
    3. '<s' → logprob: -8.252400398254395
    4. '<|end|>' → logprob: -9.627400398254395
    5. ' ' → logprob: -10.377400398254395
    6. ')<' → logprob: -10.752400398254395
    7. '[' → logprob: -11.127400398254395
    8. ' s' → logprob: -11.377400398254395
    9. ' less' → logprob: -11.502400398254395
    10. ')' → logprob: -11.877400398254395

Token 181: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0040785204619169235
    2. ' s' → logprob: -5.504078388214111
    3. '	s' → logprob: -17.629077911376953
    4. '_s' → logprob: -18.754077911376953
    5. '<s' → logprob: -19.129077911376953
    6. '   ' → logprob: -20.254077911376953
    7. '       ' → logprob: -20.379077911376953
    8. ' ' → logprob: -20.379077911376953
    9. '(s' → logprob: -20.504077911376953
    10. '           ' → logprob: -20.629077911376953

Token 182: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -1.5332478142227046e-05
    2. 'start' → logprob: -12.000015258789062
    3. '_s' → logprob: -12.500015258789062
    4. 's' → logprob: -12.875015258789062
    5. '_sub' → logprob: -13.500015258789062
    6. '_START' → logprob: -14.500015258789062
    7. '_end' → logprob: -14.750015258789062
    8. '_' → logprob: -15.250015258789062
    9. ' s' → logprob: -16.000015258789062
    10. '[start' → logprob: -16.750015258789062

Token 183: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09230295568704605
    2. ':
' → logprob: -2.7173030376434326
    3. '):' → logprob: -4.4673027992248535
    4. '):
' → logprob: -4.7173027992248535
    5. ',' → logprob: -6.8423027992248535
    6. ')' → logprob: -8.342303276062012
    7. '           ' → logprob: -8.842303276062012
    8. ' :' → logprob: -9.092303276062012
    9. ' :
' → logprob: -9.842303276062012
    10. '       ' → logprob: -10.467303276062012

Token 184: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05074362829327583
    2. '           ' → logprob: -3.425743579864502
    3. 'result' → logprob: -4.550743579864502
    4. ',' → logprob: -6.425743579864502
    5. ' result' → logprob: -6.675743579864502
    6. ',result' → logprob: -6.675743579864502
    7. '):
' → logprob: -7.800743579864502
    8. ':
' → logprob: -7.800743579864502
    9. '(result' → logprob: -8.05074405670166
    10. '                
' → logprob: -8.30074405670166

Token 185: ' result' (ID: 1534)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.006726975552737713
    2. '(' → logprob: -5.5067267417907715
    3. '(result' → logprob: -6.5067267417907715
    4. '               ' → logprob: -7.1317267417907715
    5. 'result' (adapté à ' result') → logprob: -8.38172721862793
    6. ' result' → logprob: -9.25672721862793
    7. '                   ' → logprob: -11.75672721862793
    8. '(s' → logprob: -11.75672721862793
    9. '           ' → logprob: -12.00672721862793
    10. '                ' → logprob: -12.88172721862793

Token 186: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008629233576357365
    2. '.' → logprob: -4.758629322052002
    3. ' .' → logprob: -11.758628845214844
    4. '.app' → logprob: -12.883628845214844
    5. '.ap' → logprob: -13.008628845214844
    6. '.Append' → logprob: -14.508628845214844
    7. ').' → logprob: -14.883628845214844
    8. '.extend' → logprob: -15.008628845214844
    9. '           ' → logprob: -15.633628845214844
    10. '.add' → logprob: -15.758628845214844

Token 187: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.10349274426698685
    2. '(' → logprob: -2.3534927368164062
    3. ' (' → logprob: -5.728492736816406
    4. ' ((' → logprob: -10.978492736816406
    5. '(start' → logprob: -11.478492736816406
    6. '(
' → logprob: -14.103492736816406
    7. ' ' → logprob: -15.353492736816406
    8. '   ' → logprob: -16.228492736816406
    9. '	' → logprob: -16.353492736816406
    10. '(end' → logprob: -16.478492736816406

Token 188: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -3.130576806142926e-05
    2. ' start' → logprob: -10.375031471252441
    3. '(start' → logprob: -17.500030517578125
    4. '[start' → logprob: -19.125030517578125
    5. ',start' → logprob: -20.500030517578125
    6. 'star' → logprob: -20.625030517578125
    7. ')' → logprob: -20.875030517578125
    8. '_start' → logprob: -20.875030517578125
    9. '	start' → logprob: -21.125030517578125
    10. 'end' → logprob: -21.125030517578125

Token 189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019269285257905722
    2. ',s' → logprob: -9.375192642211914
    3. ' ,' → logprob: -9.375192642211914
    4. 's' → logprob: -11.125192642211914
    5. ',
' → logprob: -11.875192642211914
    6. ' s' → logprob: -15.000192642211914
    7. '<|end|>' → logprob: -15.125192642211914
    8. '‌,' → logprob: -15.750192642211914
    9. ',

' → logprob: -15.750192642211914
    10. ' ' → logprob: -16.000192642211914

Token 190: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5759395360946655
    2. 's' → logprob: -0.8259395360946655
    3. '(s' → logprob: -17.700939178466797
    4. ')' → logprob: -17.950939178466797
    5. '	s' → logprob: -18.075939178466797
    6. '_s' → logprob: -18.325939178466797
    7. ' ' → logprob: -18.325939178466797
    8. '{s' → logprob: -18.450939178466797
    9. ' ' → logprob: -19.200939178466797
    10. ')s' → logprob: -19.450939178466797

Token 191: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.00015908108616713434
    2. 'start' → logprob: -9.00015926361084
    3. 't' → logprob: -10.37515926361084
    4. '_START' → logprob: -12.87515926361084
    5. '_end' → logprob: -14.12515926361084
    6. '_' → logprob: -14.87515926361084
    7. 'Start' → logprob: -15.37515926361084
    8. 'art' → logprob: -15.75015926361084
    9. '-start' → logprob: -15.75015926361084
    10. '[' → logprob: -16.750158309936523

Token 192: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0003175889723934233
    2. '))
' → logprob: -8.375317573547363
    3. ')' → logprob: -9.625317573547363
    4. ' ))' → logprob: -10.875317573547363
    5. '   ' → logprob: -14.250317573547363
    6. '))
' → logprob: -14.875317573547363
    7. '       ' → logprob: -14.875317573547363
    8. ')))' → logprob: -15.625317573547363
    9. '))

' → logprob: -15.875317573547363
    10. '()))' → logprob: -16.37531852722168

Token 193: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006050990778021514
    2. '            
' → logprob: -7.87560510635376
    3. '       ' → logprob: -8.875604629516602
    4. '
' → logprob: -10.625604629516602
    5. '<|end|>' → logprob: -10.750604629516602
    6. '          ' → logprob: -11.500604629516602
    7. '        
' → logprob: -12.000604629516602
    8. ' 
' → logprob: -12.000604629516602
    9. '    
' → logprob: -12.875604629516602
    10. '		' → logprob: -13.125604629516602

Token 194: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11171981692314148
    2. ' if' → logprob: -2.986719846725464
    3. 'if' (adapté à ' if') → logprob: -2.986719846725464
    4. '       ' → logprob: -5.361719608306885
    5. '   ' → logprob: -9.486720085144043
    6. '          ' → logprob: -11.611720085144043
    7. ' ' → logprob: -12.236720085144043
    8. '
' → logprob: -12.236720085144043
    9. '    ' → logprob: -12.736720085144043
    10. '     ' → logprob: -13.736720085144043

Token 195: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.6392067074775696
    2. ' end' → logprob: -0.7642067074775696
    3. 's' → logprob: -5.514206886291504
    4. ' s' → logprob: -6.764206886291504
    5. 'e' → logprob: -7.139206886291504
    6. ' e' → logprob: -8.264206886291504
    7. '(end' → logprob: -9.264206886291504
    8. '   ' → logprob: -9.514206886291504
    9. '_end' → logprob: -9.514206886291504
    10. '	end' → logprob: -10.139206886291504

Token 196: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.20143623650074005
    2. '>' → logprob: -1.7014362812042236
    3. ')' → logprob: -11.826436042785645
    4. ' ' → logprob: -12.201436042785645
    5. ' >
' → logprob: -13.076436042785645
    6. ')>' → logprob: -13.076436042785645
    7. '>s' → logprob: -13.576436042785645
    8. '>end' → logprob: -13.576436042785645
    9. '<|end|>' → logprob: -13.826436042785645
    10. 's' → logprob: -14.576436042785645

Token 197: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.1602243334054947
    2. 's' → logprob: -1.9102243185043335
    3. '<|end|>' → logprob: -15.785223960876465
    4. '_s' → logprob: -16.91022491455078
    5. '(s' → logprob: -17.53522491455078
    6. ' ' → logprob: -18.41022491455078
    7. '<|end|>' → logprob: -18.91022491455078
    8. '	s' → logprob: -19.03522491455078
    9. ',' → logprob: -19.16022491455078
    10. '#' → logprob: -19.28522491455078

Token 198: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -3.4121114822482923e-06
    2. 'end' → logprob: -12.875003814697266
    3. '_sub' → logprob: -14.750003814697266
    4. 's' → logprob: -15.875003814697266
    5. '_END' → logprob: -16.250003814697266
    6. '_' → logprob: -17.125003814697266
    7. 'End' → logprob: -17.375003814697266
    8. 'sub' → logprob: -18.000003814697266
    9. 'e' → logprob: -18.750003814697266
    10. '   ' → logprob: -19.000003814697266

Token 199: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9896175265312195
    2. '):
' → logprob: -1.6146175861358643
    3. ',' → logprob: -1.9896175861358643
    4. '):' → logprob: -2.2396175861358643
    5. ':
' → logprob: -2.2396175861358643
    6. '           ' → logprob: -2.9896175861358643
    7. '               ' → logprob: -3.7396175861358643
    8. '       ' → logprob: -5.739617347717285
    9. '   ' → logprob: -8.239617347717285
    10. ' :' → logprob: -8.364617347717285

Token 200: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1132611632347107
    2. ' (' → logprob: -2.3632612228393555
    3. ',' → logprob: -5.3632612228393555
    4. '(' → logprob: -5.3632612228393555
    5. '           ' → logprob: -6.1132612228393555
    6. '(result' → logprob: -7.1132612228393555
    7. ',result' → logprob: -8.738261222839355
    8. 'result' → logprob: -9.488261222839355
    9. ' result' → logprob: -9.863261222839355
    10. ' ,' → logprob: -10.238261222839355

Token 201: ' result' (ID: 1534)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.00526636466383934
    2. '(' → logprob: -5.255266189575195
    3. '                ' → logprob: -11.630266189575195
    4. '(end' → logprob: -12.005266189575195
    5. '(s' → logprob: -12.130266189575195
    6. '               ' → logprob: -12.130266189575195
    7. ' (,' → logprob: -12.505266189575195
    8. '            ' → logprob: -13.630266189575195
    9. ' ' → logprob: -14.880266189575195
    10. '(result' → logprob: -14.880266189575195

Token 202: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0024774393532425165
    2. '.' → logprob: -6.002477645874023
    3. '.extend' → logprob: -14.502477645874023
    4. 'append' → logprob: -14.752477645874023
    5. '.Append' → logprob: -15.002477645874023
    6. ' .' → logprob: -15.127477645874023
    7. ').' → logprob: -16.377477645874023
    8. '.app' → logprob: -16.627477645874023
    9. '_append' → logprob: -16.752477645874023
    10. '           ' → logprob: -17.127477645874023

Token 203: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0009161015041172504
    2. '(' → logprob: -7.000916004180908
    3. '(s' → logprob: -12.375916481018066
    4. '(('' → logprob: -15.875916481018066
    5. '(
' → logprob: -16.62591552734375
    6. ' (' → logprob: -17.12591552734375
    7. '(end' → logprob: -17.37591552734375
    8. ' ((' → logprob: -17.62591552734375
    9. '>((' → logprob: -18.25091552734375
    10. '(("' → logprob: -18.62591552734375

Token 204: 's' (ID: 82)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0009432652732357383
    2. 's' → logprob: -7.000943183898926
    3. '(' → logprob: -11.000943183898926
    4. ' (' → logprob: -11.625943183898926
    5. ' s' → logprob: -12.125943183898926
    6. '(sub' → logprob: -15.500943183898926
    7. ')' → logprob: -15.625943183898926
    8. '{s' → logprob: -15.875943183898926
    9. ')s' → logprob: -16.500944137573242
    10. '   ' → logprob: -18.000944137573242

Token 205: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -1.981667537620524e-06
    2. 'end' → logprob: -13.250001907348633
    3. '_END' → logprob: -16.875001907348633
    4. '_start' → logprob: -17.125001907348633
    5. '_' → logprob: -18.250001907348633
    6. '_sub' → logprob: -18.500001907348633
    7. 'End' → logprob: -19.000001907348633
    8. ' end' → logprob: -19.500001907348633
    9. '-end' → logprob: -19.500001907348633
    10. 's' → logprob: -19.750001907348633

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.661626634420827e-05
    2. ' ,' → logprob: -9.375086784362793
    3. ',end' → logprob: -14.000086784362793
    4. '),' → logprob: -14.750086784362793
    5. ',
' → logprob: -14.875086784362793
    6. '',' → logprob: -17.125085830688477
    7. '`,' → logprob: -17.250085830688477
    8. ')' → logprob: -17.375085830688477
    9. '‌,' → logprob: -17.375085830688477
    10. '<|end|>' → logprob: -18.250085830688477

Token 207: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.03804149478673935
    2. ' end' → logprob: -3.288041591644287
    3. '(end' → logprob: -18.913042068481445
    4. '	end' → logprob: -19.288042068481445
    5. '[end' → logprob: -20.538042068481445
    6. ''end' → logprob: -20.538042068481445
    7. ')' → logprob: -20.663042068481445
    8. '_end' → logprob: -20.788042068481445
    9. '=end' → logprob: -21.038042068481445
    10. '.end' → logprob: -21.288042068481445

Token 208: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16486875712871552
    2. ')' → logprob: -1.914868712425232
    3. '))
' → logprob: -5.4148688316345215
    4. ')
' → logprob: -8.664868354797363
    5. '       ' → logprob: -11.914868354797363
    6. '   ' → logprob: -13.539868354797363
    7. '           ' → logprob: -14.039868354797363
    8. ' ))' → logprob: -14.039868354797363
    9. ')))' → logprob: -14.039868354797363
    10. ' )' → logprob: -14.539868354797363

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01156892254948616
    2. 'return' → logprob: -5.011569023132324
    3. ' return' → logprob: -5.386569023132324
    4. '
' → logprob: -8.761569023132324
    5. '	return' → logprob: -9.386569023132324
    6. '    
' → logprob: -11.136569023132324
    7. ' ' → logprob: -12.886569023132324
    8. '       ' → logprob: -13.511569023132324
    9. ')' → logprob: -13.636569023132324
    10. ':return' → logprob: -14.136569023132324

Token 210: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.13648129999637604
    2. ' return' → logprob: -2.636481285095215
    3. '   ' → logprob: -2.886481285095215
    4. '	return' → logprob: -9.511481285095215
    5. '
' → logprob: -9.886481285095215
    6. ' ' → logprob: -10.136481285095215
    7. '    
' → logprob: -11.886481285095215
    8. '```' → logprob: -12.011481285095215
    9. ':return' → logprob: -12.136481285095215
    10. 'eturn' → logprob: -12.261481285095215

Token 211: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.1269282102584839
    2. ' result' → logprob: -2.1269283294677734
    3. '(result' → logprob: -17.001928329467773
    4. '[result' → logprob: -17.876928329467773
    5. '	result' → logprob: -20.501928329467773
    6. ' ' → logprob: -21.376928329467773
    7. '[]' → logprob: -22.376928329467773
    8. '_result' → logprob: -22.501928329467773
    9. 'results' → logprob: -23.001928329467773
    10. '=result' → logprob: -23.251928329467773

Token 212: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24479319155216217
    2. '<|end|>' → logprob: -1.619793176651001
    3. '(' → logprob: -4.36979341506958
    4. ' def' → logprob: -6.61979341506958
    5. '(def' → logprob: -6.99479341506958
    6. '
' → logprob: -6.99479341506958
    7. '[' → logprob: -6.99479341506958
    8. '#' → logprob: -7.24479341506958
    9. '<|end|>' → logprob: -7.49479341506958
    10. '

' → logprob: -8.119792938232422

Token 213: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.5332478142227046e-05
    2. ' def' → logprob: -11.500015258789062
    3. '(' → logprob: -13.875015258789062
    4. 'de' → logprob: -14.000015258789062
    5. '(def' → logprob: -14.500015258789062
    6. '

' → logprob: -14.500015258789062
    7. '```' → logprob: -14.625015258789062
    8. '
' → logprob: -14.750015258789062
    9. 'ndef' → logprob: -14.750015258789062
    10. '\' → logprob: -15.250015258789062

Token 214: ' merge' (ID: 20345)
  Prédit: 'visible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visible' → logprob: -0.6566948890686035
    2. ' visible' → logprob: -2.1566948890686035
    3. 'is' → logprob: -2.6566948890686035
    4. 'circle' → logprob: -2.6566948890686035
    5. 'arc' → logprob: -2.9066948890686035
    6. 'find' → logprob: -2.9066948890686035
    7. 'compute' → logprob: -3.6566948890686035
    8. 'get' → logprob: -4.0316948890686035
    9. ' find' → logprob: -4.6566948890686035
    10. 'calculate' → logprob: -4.9066948890686035

Token 215: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.0008046258008107543
    2. '_' → logprob: -7.375804424285889
    3. '_interval' → logprob: -9.625804901123047
    4. '_ranges' → logprob: -10.250804901123047
    5. '(_' → logprob: -11.125804901123047
    6. '_sorted' → logprob: -12.000804901123047
    7. '_two' → logprob: -12.125804901123047
    8. ' _' → logprob: -12.125804901123047
    9. '(' → logprob: -12.625804901123047
    10. '_segments' → logprob: -12.625804901123047

Token 216: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.0002868417650461197
    2. 'val' → logprob: -8.750287055969238
    3. 'als' → logprob: -9.375287055969238
    4. '```' → logprob: -11.750287055969238
    5. 'erv' → logprob: -12.125287055969238
    6. '=' → logprob: -12.375287055969238
    7. ' vals' → logprob: -12.500287055969238
    8. '   ' → logprob: -12.500287055969238
    9. '>' → logprob: -12.625287055969238
    10. '[' → logprob: -13.000287055969238

Token 217: '(interval' (ID: 100435)
  Prédit: '(interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(interval' → logprob: -0.0019769303034991026
    2. '(' → logprob: -6.75197696685791
    3. ' (' → logprob: -7.12697696685791
    4. '(inter' → logprob: -13.00197696685791
    5. ' intervals' → logprob: -14.37697696685791
    6. 'interval' → logprob: -16.251976013183594
    7. '((' → logprob: -16.376976013183594
    8. '(
' → logprob: -16.501976013183594
    9. '(in' → logprob: -17.376976013183594
    10. '(iter' → logprob: -17.626976013183594

Token 218: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.019607393071055412
    2. 'als' → logprob: -4.3946075439453125
    3. 'vals' → logprob: -5.2696075439453125
    4. ')' → logprob: -6.3946075439453125
    5. 'val' → logprob: -9.019607543945312
    6. '[' → logprob: -10.144607543945312
    7. '```' → logprob: -10.644607543945312
    8. 'ls' → logprob: -11.144607543945312
    9. ']' → logprob: -11.769607543945312
    10. '(' → logprob: -11.894607543945312

Token 219: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.222214937210083
    2. '(interval' → logprob: -2.097214937210083
    3. ',' → logprob: -2.597214937210083
    4. ' ):' → logprob: -7.097214698791504
    5. '):
' → logprob: -7.597214698791504
    6. 'interval' → logprob: -8.222214698791504
    7. '(inter' → logprob: -8.347214698791504
    8. '   ' → logprob: -9.972214698791504
    9. '(' → logprob: -10.472214698791504
    10. ' intervals' → logprob: -11.347214698791504

Token 220: '   ' (ID: 271)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.5833709836006165
    2. '   ' → logprob: -0.8333709836006165
    3. 'interval' → logprob: -5.833371162414551
    4. ' sorted' → logprob: -6.083371162414551
    5. ' if' → logprob: -6.208371162414551
    6. 'sorted' → logprob: -10.20837116241455
    7. '(interval' → logprob: -10.33337116241455
    8. ':' → logprob: -10.70837116241455
    9. 'if' → logprob: -10.83337116241455
    10. '    ' → logprob: -11.20837116241455

Token 221: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2559317350387573
    2. ' intervals' → logprob: -1.5059317350387573
    3. 'if' (adapté à ' if') → logprob: -6.255931854248047
    4. ' sorted' → logprob: -7.130931854248047
    5. '   ' → logprob: -7.255931854248047
    6. 'interval' → logprob: -7.505931854248047
    7. 'sorted' → logprob: -11.505931854248047
    8. ' interval' → logprob: -12.755931854248047
    9. ' []' → logprob: -13.005931854248047
    10. '[]' → logprob: -13.630931854248047

Token 222: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.006716555915772915
    2. 'not' → logprob: -5.006716728210449
    3. ' len' → logprob: -14.38171672821045
    4. '	not' → logprob: -15.25671672821045
    5. ' ' → logprob: -16.381715774536133
    6. '!' → logprob: -16.506715774536133
    7. ' no' → logprob: -16.631715774536133
    8. 'len' → logprob: -16.756715774536133
    9. 'n' → logprob: -17.631715774536133
    10. '
' → logprob: -17.631715774536133

Token 223: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.6931512355804443
    2. ' intervals' → logprob: -0.6931512355804443
    3. '(interval' → logprob: -13.443151473999023
    4. ' interval' → logprob: -13.693151473999023
    5. 'inter' → logprob: -14.068151473999023
    6. 'Intervals' → logprob: -15.193151473999023
    7. ' ' → logprob: -16.443151473999023
    8. '   ' → logprob: -16.693151473999023
    9. '```' → logprob: -16.818151473999023
    10. '
' → logprob: -17.443151473999023

Token 224: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011247373186051846
    2. ' :' → logprob: -7.501124858856201
    3. ':
' → logprob: -7.751124858856201
    4. ':return' → logprob: -8.876124382019043
    5. ':list' → logprob: -14.376124382019043
    6. ' :
' → logprob: -15.251124382019043
    7. '):' → logprob: -15.251124382019043
    8. ':def' → logprob: -16.37612533569336
    9. '.sort' → logprob: -16.62612533569336
    10. ':param' → logprob: -17.00112533569336

Token 225: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2557060718536377
    2. '       ' → logprob: -1.7557060718536377
    3. ' return' → logprob: -3.5057060718536377
    4. ':' → logprob: -4.255705833435059
    5. ':
' → logprob: -5.505705833435059
    6. ':return' → logprob: -6.005705833435059
    7. '    ' → logprob: -6.880705833435059
    8. 'return' → logprob: -7.630705833435059
    9. '[' → logprob: -8.380705833435059
    10. ',' → logprob: -8.880705833435059

Token 226: ' return' (ID: 622)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3695501387119293
    2. ' return' → logprob: -1.869550108909607
    3. ' []' → logprob: -2.4945502281188965
    4. ' []
' → logprob: -3.1195502281188965
    5. '[]
' → logprob: -4.4945502281188965
    6. ' None' → logprob: -4.8695502281188965
    7. 'return' (adapté à ' return') → logprob: -5.2445502281188965
    8. '   ' → logprob: -5.7445502281188965
    9. 'None' → logprob: -8.494549751281738
    10. '    ' → logprob: -8.619549751281738

Token 227: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.20142073929309845
    2. '[]' → logprob: -1.701420783996582
    3. ' []
' → logprob: -12.451420783996582
    4. ' []

' → logprob: -13.826420783996582
    5. '[]
' → logprob: -14.076420783996582
    6. ' intervals' → logprob: -14.701420783996582
    7. ' []
' → logprob: -15.076420783996582
    8. ' [])' → logprob: -15.576420783996582
    9. '[])' → logprob: -15.701420783996582
    10. ' [];' → logprob: -15.951420783996582

Token 228: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.928401529788971
    2. ' sorted' → logprob: -1.6784014701843262
    3. '
' → logprob: -1.9284014701843262
    4. '    
' → logprob: -2.178401470184326
    5. ' 
' → logprob: -2.303401470184326
    6. ' intervals' → logprob: -3.428401470184326
    7. '  
' → logprob: -4.303401470184326
    8. 'sorted' → logprob: -5.678401470184326
    9. '   
' → logprob: -6.053401470184326
    10. ' ' → logprob: -6.303401470184326

Token 229: ' intervals' (ID: 49900)
  Prédit: ' intervals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.06305135786533356
    2. 'interval' → logprob: -2.813051462173462
    3. ' 
' → logprob: -7.938051223754883
    4. '    
' → logprob: -8.438051223754883
    5. '   ' → logprob: -8.563051223754883
    6. ' sorted' → logprob: -8.813051223754883
    7. '(interval' → logprob: -9.563051223754883
    8. 'inter' → logprob: -9.938051223754883
    9. ' interval' → logprob: -10.563051223754883
    10. 'sorted' → logprob: -11.813051223754883

Token 230: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.20284560322761536
    2. '=' → logprob: -1.952845573425293
    3. ' =' → logprob: -3.202845573425293
    4. '_sorted' → logprob: -7.452845573425293
    5. '.' → logprob: -7.827845573425293
    6. 'sorted' → logprob: -9.827845573425293
    7. '.sorted' → logprob: -10.952845573425293
    8. ' ' → logprob: -11.577845573425293
    9. 'sort' → logprob: -12.077845573425293
    10. '[:]' → logprob: -12.827845573425293

Token 231: '()
' (ID: 1234)
  Prédit: '(key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.2519318461418152
    2. '()' → logprob: -1.50193190574646
    3. '(reverse' → logprob: -13.876932144165039
    4. '(' → logprob: -14.001932144165039
    5. '()
' → logprob: -14.251932144165039
    6. 'key' → logprob: -15.876932144165039
    7. '();' → logprob: -17.25193214416504
    8. ',key' → logprob: -17.37693214416504
    9. ' ()' → logprob: -17.62693214416504
    10. '(inplace' → logprob: -17.62693214416504

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13471317291259766
    2. ' merged' → logprob: -2.3847131729125977
    3. 'merged' → logprob: -3.3847131729125977
    4. ' result' → logprob: -11.009713172912598
    5. 'result' → logprob: -12.009713172912598
    6. '    
' → logprob: -12.134713172912598
    7. '   ' → logprob: -14.134713172912598
    8. 'Merged' → logprob: -14.134713172912598
    9. '    ' → logprob: -14.384713172912598
    10. '       ' → logprob: -15.509713172912598

Token 233: ' merged' (ID: 49536)
  Prédit: 'merged'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merged' (adapté à ' merged') → logprob: -0.0011732018319889903
    2. ' merged' → logprob: -6.75117301940918
    3. '   ' → logprob: -12.75117301940918
    4. 'result' → logprob: -16.75117301940918
    5. 'mer' → logprob: -19.12617301940918
    6. 'Merged' → logprob: -19.12617301940918
    7. 'merge' → logprob: -19.62617301940918
    8. '    
' → logprob: -20.37617301940918
    9. 'm' → logprob: -21.12617301940918
    10. '
' → logprob: -21.25117301940918

Token 234: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009885468520224094
    2. '=' → logprob: -5.384885311126709
    3. '_inter' → logprob: -5.384885311126709
    4. '_' → logprob: -8.509885787963867
    5. ' ' → logprob: -8.634885787963867
    6. '[' → logprob: -9.259885787963867
    7. '=[]' → logprob: -9.384885787963867
    8. '=[]
' → logprob: -11.009885787963867
    9. '   ' → logprob: -11.134885787963867
    10. '.append' → logprob: -11.134885787963867

Token 235: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.39843738079071045
    2. ' [' → logprob: -1.1484373807907104
    3. '[start' → logprob: -6.0234375
    4. '[ind' → logprob: -6.2734375
    5. '[int' → logprob: -6.5234375
    6. '[event' → logprob: -6.8984375
    7. '[array' → logprob: -7.1484375
    8. '[input' → logprob: -7.2734375
    9. '[token' → logprob: -7.6484375
    10. '[end' → logprob: -8.0234375

Token 236: 'interval' (ID: 37558)
  Prédit: 'interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -1.4855663721391466e-05
    2. ' intervals' → logprob: -11.250015258789062
    3. '(interval' → logprob: -13.625015258789062
    4. 'list' → logprob: -14.375015258789062
    5. '[' → logprob: -17.500015258789062
    6. '   ' → logprob: -17.750015258789062
    7. ' list' → logprob: -19.625015258789062
    8. '
' → logprob: -19.625015258789062
    9. ' interval' → logprob: -20.125015258789062
    10. ' [' → logprob: -20.375015258789062

Token 237: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -7.457669562427327e-05
    2. ' s' → logprob: -9.62507438659668
    3. '[' → logprob: -12.50007438659668
    4. 'interval' → logprob: -13.25007438659668
    5. '(interval' → logprob: -14.50007438659668
    6. ']' → logprob: -14.62507438659668
    7. '(s' → logprob: -14.75007438659668
    8. '(' → logprob: -14.87507438659668
    9. '0' → logprob: -14.87507438659668
    10. '   ' → logprob: -15.75007438659668

Token 238: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.026314932852983475
    2. '0' → logprob: -3.6513149738311768
    3. ' [' → logprob: -11.901314735412598
    4. ' ' → logprob: -12.651314735412598
    5. '
' → logprob: -13.151314735412598
    6. '   ' → logprob: -14.276314735412598
    7. '][' → logprob: -14.401314735412598
    8. '[
' → logprob: -14.526314735412598
    9. ']' → logprob: -14.651314735412598
    10. '```' → logprob: -15.651314735412598

Token 239: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '[' → logprob: -17.25
    4. '00' → logprob: -17.75
    5. '۰' → logprob: -18.25
    6. '   ' → logprob: -18.25
    7. '000' → logprob: -19.0
    8. '
' → logprob: -19.1875
    9. '٠' → logprob: -20.0
    10. '০' → logprob: -20.125

Token 240: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014325011288747191
    2. ']
' → logprob: -6.626432418823242
    3. ' ]' → logprob: -9.751432418823242
    4. ')]' → logprob: -10.001432418823242
    5. ']

' → logprob: -13.126432418823242
    6. ']
' → logprob: -15.001432418823242
    7. ')' → logprob: -15.251432418823242
    8. ' ]
' → logprob: -16.001432418823242
    9. '()]' → logprob: -16.001432418823242
    10. ']]' → logprob: -16.251432418823242

Token 241: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.552150309085846
    2. '   ' → logprob: -0.927150309085846
    3. ' for' → logprob: -4.052150249481201
    4. '    
' → logprob: -4.927150249481201
    5. ' 
' → logprob: -6.677150249481201
    6. '  
' → logprob: -6.927150249481201
    7. 'for' → logprob: -7.302150249481201
    8. '   
' → logprob: -8.30215072631836
    9. '\n' → logprob: -8.55215072631836
    10. '	
' → logprob: -8.80215072631836

Token 242: ' for' (ID: 395)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.36010679602622986
    2. '
' → logprob: -1.4851068258285522
    3. ' for' → logprob: -2.9851067066192627
    4. ' ' → logprob: -3.8601067066192627
    5. 'for' (adapté à ' for') → logprob: -6.110106945037842
    6. '  
' → logprob: -7.735106945037842
    7. '' → logprob: -8.110106468200684
    8. '	
' → logprob: -8.360106468200684
    9. ':' → logprob: -8.485106468200684
    10. '\n' → logprob: -8.735106468200684

Token 243: ' current' (ID: 2208)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.01971796713769436
    2. 'i' → logprob: -4.269718170166016
    3. 'interval' → logprob: -5.769718170166016
    4. ' start' → logprob: -7.019718170166016
    5. ' interval' → logprob: -7.769718170166016
    6. 'start' → logprob: -7.894718170166016
    7. ' current' → logprob: -8.019718170166016
    8. ' (' → logprob: -8.144718170166016
    9. '   ' → logprob: -10.269718170166016
    10. '(i' → logprob: -10.394718170166016

Token 244: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.040961313992738724
    2. '_start' → logprob: -3.415961265563965
    3. 'in' → logprob: -5.165961265563965
    4. '_' → logprob: -7.165961265563965
    5. ',' → logprob: -8.540961265563965
    6. ' ' → logprob: -8.665961265563965
    7. '_in' → logprob: -9.540961265563965
    8. 'start' → logprob: -9.790961265563965
    9. '_interval' → logprob: -9.915961265563965
    10. '_idx' → logprob: -10.165961265563965

Token 245: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.25194066762924194
    2. ' intervals' → logprob: -1.5019407272338867
    3. 'inter' → logprob: -12.751940727233887
    4. ' interval' → logprob: -12.751940727233887
    5. '(interval' → logprob: -13.126940727233887
    6. '   ' → logprob: -13.126940727233887
    7. ' ' → logprob: -13.876940727233887
    8. '
' → logprob: -15.751940727233887
    9. '	' → logprob: -16.12693977355957
    10. 'Intervals' → logprob: -16.12693977355957

Token 246: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47499966621398926
    2. ':' → logprob: -0.9749996662139893
    3. ' :' → logprob: -7.47499942779541
    4. ':
' → logprob: -8.34999942779541
    5. '1' → logprob: -9.09999942779541
    6. '(' → logprob: -12.84999942779541
    7. '):' → logprob: -13.59999942779541
    8. ' :
' → logprob: -14.47499942779541
    9. '2' → logprob: -14.59999942779541
    10. '>:' → logprob: -14.97499942779541

Token 247: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.375004768371582
    3. '[' → logprob: -14.500004768371582
    4. '   ' → logprob: -15.750004768371582
    5. 'range' → logprob: -16.3750057220459
    6. '
' → logprob: -17.3750057220459
    7. '(' → logprob: -17.5000057220459
    8. ')' → logprob: -17.7500057220459
    9. '```' → logprob: -18.3750057220459
    10. ':' → logprob: -19.1250057220459

Token 248: ':' (ID: 25)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.6726108193397522
    2. ':' → logprob: -0.7976108193397522
    3. ']:
' → logprob: -3.2976107597351074
    4. ' :' → logprob: -6.797610759735107
    5. ':]' → logprob: -7.297610759735107
    6. ' ]' → logprob: -8.672611236572266
    7. ']:
' → logprob: -8.922611236572266
    8. ':
' → logprob: -9.922611236572266
    9. ' :]' → logprob: -10.422611236572266
    10. ']' → logprob: -10.547611236572266

Token 249: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.5661440491676331
    2. ':' → logprob: -1.0661439895629883
    3. ']:
' → logprob: -2.5661439895629883
    4. ':
' → logprob: -4.691143989562988
    5. ']' → logprob: -6.941143989562988
    6. ' :' → logprob: -8.441143989562988
    7. '   ' → logprob: -8.566143989562988
    8. ']:
' → logprob: -8.566143989562988
    9. '):
' → logprob: -9.191143989562988
    10. ':]' → logprob: -9.691143989562988

Token 250: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04138379544019699
    2. ' if' → logprob: -3.666383743286133
    3. '    ' → logprob: -4.541383743286133
    4. '   ' → logprob: -5.791383743286133
    5. '        
' → logprob: -7.791383743286133
    6. ',' → logprob: -8.541383743286133
    7. ':' → logprob: -9.166383743286133
    8. '     ' → logprob: -9.291383743286133
    9. '	   ' → logprob: -9.666383743286133
    10. '     
' → logprob: -9.791383743286133

Token 251: ' last' (ID: 2174)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.027872076258063316
    2. 'if' → logprob: -3.652872085571289
    3. '    ' → logprob: -7.152872085571289
    4. ' start' → logprob: -7.652872085571289
    5. '        ' → logprob: -10.027872085571289
    6. 'start' → logprob: -10.277872085571289
    7. ' s' → logprob: -10.402872085571289
    8. ' current' → logprob: -10.527872085571289
    9. '   ' → logprob: -10.652872085571289
    10. ' ' → logprob: -10.777872085571289

Token 252: ' =' (ID: 314)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.27093660831451416
    2. ' =' → logprob: -1.7709366083145142
    3. '_end' → logprob: -3.3959364891052246
    4. '=' → logprob: -3.7709364891052246
    5. '_' → logprob: -4.895936489105225
    6. '[' → logprob: -6.770936489105225
    7. '_interval' → logprob: -7.520936489105225
    8. '_=' → logprob: -7.520936489105225
    9. '_idx' → logprob: -8.770936965942383
    10. 'start' → logprob: -9.395936965942383

Token 253: ' merged' (ID: 49536)
  Prédit: ' merged'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' merged' → logprob: -0.6931473612785339
    2. 'merged' → logprob: -0.6931473612785339
    3. ' ' → logprob: -16.818147659301758
    4. 'Merged' → logprob: -17.568147659301758
    5. 'mer' → logprob: -18.068147659301758
    6. 'm' → logprob: -18.943147659301758
    7. 'merge' → logprob: -18.943147659301758
    8. 'erged' → logprob: -19.818147659301758
    9. ' ' → logprob: -21.568147659301758
    10. '
' → logprob: -22.068147659301758

Token 254: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.029053423553705215
    2. '[' → logprob: -3.9040534496307373
    3. '
' → logprob: -4.904053211212158
    4. '[:-' → logprob: -7.529053211212158
    5. ' ' → logprob: -9.154053688049316
    6. ' [-' → logprob: -9.279053688049316
    7. ' 
' → logprob: -9.654053688049316
    8. '<|end|>' → logprob: -10.279053688049316
    9. '(-' → logprob: -10.654053688049316
    10. '[len' → logprob: -10.654053688049316

Token 255: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '
' → logprob: -15.62500286102295
    4. '   ' → logprob: -18.250003814697266
    5. '  ' → logprob: -18.500003814697266
    6. '

' → logprob: -18.875003814697266
    7. '0' → logprob: -19.375003814697266
    8. ']' → logprob: -19.750003814697266
    9. ' ' → logprob: -20.125003814697266
    10. ')' → logprob: -20.625003814697266

Token 256: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.1822817027568817
    2. ']' → logprob: -1.807281732559204
    3. ' ]
' → logprob: -6.307281494140625
    4. ' ]' → logprob: -7.807281494140625
    5. '[' → logprob: -8.932281494140625
    6. '   ' → logprob: -9.807281494140625
    7. '][' → logprob: -10.307281494140625
    8. '
' → logprob: -10.557281494140625
    9. ']
' → logprob: -10.557281494140625
    10. ']

' → logprob: -10.807281494140625

Token 257: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027934910729527473
    2. ' if' → logprob: -4.777935028076172
    3. '        
' → logprob: -4.902935028076172
    4. '[' → logprob: -5.652935028076172
    5. ' 
' → logprob: -6.652935028076172
    6. '
' → logprob: -6.902935028076172
    7. '        ' → logprob: -6.902935028076172
    8. ':' → logprob: -7.027935028076172
    9. ',' → logprob: -7.027935028076172
    10. ' ' → logprob: -7.527935028076172

Token 258: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07855229079723358
    2. 'if' (adapté à ' if') → logprob: -3.07855224609375
    3. '[' → logprob: -3.57855224609375
    4. '       ' → logprob: -7.20355224609375
    5. '        ' → logprob: -8.20355224609375
    6. '        
' → logprob: -8.82855224609375
    7. ',' → logprob: -9.07855224609375
    8. ' [' → logprob: -9.82855224609375
    9. ' ' → logprob: -10.20355224609375
    10. ' 
' → logprob: -10.20355224609375

Token 259: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.07889628410339355
    2. 'current' → logprob: -2.5788962841033936
    3. ' last' → logprob: -12.703896522521973
    4. '	current' → logprob: -13.203896522521973
    5. 'last' → logprob: -13.953896522521973
    6. '(current' → logprob: -15.203896522521973
    7. '$current' → logprob: -15.703896522521973
    8. ' ' → logprob: -16.578895568847656
    9. 'urrent' → logprob: -16.578895568847656
    10. '_current' → logprob: -16.703895568847656

Token 260: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. ' [' → logprob: -15.25
    3. ' ' → logprob: -20.25
    4. '0' → logprob: -20.25
    5. '[
' → logprob: -20.375
    6. '][' → logprob: -20.875
    7. '```' → logprob: -21.0
    8. '()[' → logprob: -21.125
    9. '<=' → logprob: -21.25
    10. ')[' → logprob: -21.625

Token 261: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '1' → logprob: -18.75
    4. '۰' → logprob: -18.75
    5. '
' → logprob: -19.0
    6. '[' → logprob: -19.25
    7. '   ' → logprob: -20.1875
    8. '00' → logprob: -20.6875
    9. '０' → logprob: -20.8125
    10. '٠' → logprob: -21.1875

Token 262: ']' (ID: 60)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.06693098694086075
    2. '<=' → logprob: -2.9419310092926025
    3. ']<=' → logprob: -4.566930770874023
    4. ']' → logprob: -6.566930770874023
    5. ')<=' → logprob: -9.191930770874023
    6. ' ]' → logprob: -9.941930770874023
    7. ')' → logprob: -10.816930770874023
    8. '<|end|>' → logprob: -12.816930770874023
    9. '}' → logprob: -12.941930770874023
    10. ' ' → logprob: -13.191930770874023

Token 263: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5759457349777222
    2. '<=' → logprob: -0.8259457349777222
    3. ')<=' → logprob: -12.575945854187012
    4. ']<=' → logprob: -12.825945854187012
    5. ')' → logprob: -17.075944900512695
    6. '[' → logprob: -17.700944900512695
    7. ' <=",' → logprob: -17.825944900512695
    8. ' ' → logprob: -18.450944900512695
    9. ' ' → logprob: -18.825944900512695
    10. '<|end|>' → logprob: -18.950944900512695

Token 264: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.011048054322600365
    2. ' last' → logprob: -4.511047840118408
    3. 'merged' → logprob: -16.38604736328125
    4. '
' → logprob: -16.76104736328125
    5. ' ' → logprob: -16.76104736328125
    6. '(last' → logprob: -17.01104736328125
    7. '	last' → logprob: -18.26104736328125
    8. 'l' → logprob: -19.38604736328125
    9. ' merged' → logprob: -19.51104736328125
    10. 'max' → logprob: -19.76104736328125

Token 265: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0013659505639225245
    2. '1' → logprob: -6.626366138458252
    3. ' ' → logprob: -10.251365661621094
    4. ' [' → logprob: -12.376365661621094
    5. '
' → logprob: -15.251365661621094
    6. '[
' → logprob: -16.876365661621094
    7. '```' → logprob: -17.376365661621094
    8. ',' → logprob: -17.501365661621094
    9. '(' → logprob: -17.501365661621094
    10. '   ' → logprob: -17.626365661621094

Token 266: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.069664333248511e-05
    2. '[' → logprob: -10.875020980834961
    3. ' ' → logprob: -13.375020980834961
    4. '
' → logprob: -15.750020980834961
    5. '   ' → logprob: -18.25002098083496
    6. '	' → logprob: -19.00002098083496
    7. '  ' → logprob: -19.62502098083496
    8. '

' → logprob: -19.75002098083496
    9. '```' → logprob: -19.75002098083496
    10. '3' → logprob: -20.37502098083496

Token 267: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09028293937444687
    2. ']:' → logprob: -2.465282917022705
    3. '):' → logprob: -7.340282917022705
    4. ' :' → logprob: -7.965282917022705
    5. '>:' → logprob: -9.340283393859863
    6. ':
' → logprob: -9.465283393859863
    7. ' ):' → logprob: -9.840283393859863
    8. '}:' → logprob: -10.590283393859863
    9. '+:' → logprob: -10.715283393859863
    10. ':return' → logprob: -10.840283393859863

Token 268: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14659082889556885
    2. ':
' → logprob: -2.7715907096862793
    3. '           ' → logprob: -2.7715907096862793
    4. '       ' → logprob: -4.646590709686279
    5. ' :' → logprob: -7.646590709686279
    6. '[' → logprob: -7.896590709686279
    7. ' :
' → logprob: -8.146591186523438
    8. ' and' → logprob: -9.021591186523438
    9. ',' → logprob: -9.646591186523438
    10. '):
' → logprob: -9.771591186523438

Token 269: ' merged' (ID: 49536)
  Prédit: ' merged'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' merged' → logprob: -0.4907331168651581
    2. 'merged' (adapté à ' merged') → logprob: -1.2407331466674805
    3. '       ' → logprob: -3.4907331466674805
    4. '           ' → logprob: -3.4907331466674805
    5. '[' → logprob: -4.1157331466674805
    6. '               ' → logprob: -4.9907331466674805
    7. ',' → logprob: -5.3657331466674805
    8. ' =' → logprob: -5.6157331466674805
    9. 'Merged' → logprob: -6.2407331466674805
    10. '
' → logprob: -7.1157331466674805

Token 270: '[-' (ID: 17503)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023212047293782234
    2. '=' → logprob: -4.02321195602417
    3. '=(' → logprob: -5.39821195602417
    4. '[' → logprob: -7.77321195602417
    5. ' =(' → logprob: -9.773212432861328
    6. '(' → logprob: -10.273212432861328
    7. '=(-' → logprob: -13.398212432861328
    8. '=[' → logprob: -13.523212432861328
    9. '
' → logprob: -13.523212432861328
    10. ' =
' → logprob: -13.648212432861328

Token 271: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014847563579678535
    2. ' ' → logprob: -8.87514877319336
    3. '   ' → logprob: -12.87514877319336
    4. ']' → logprob: -14.00014877319336
    5. '(' → logprob: -14.31264877319336
    6. '[' → logprob: -14.43764877319336
    7. ' (' → logprob: -14.75014877319336
    8. '0' → logprob: -14.81264877319336
    9. '  ' → logprob: -14.87514877319336
    10. '-' → logprob: -15.06264877319336

Token 272: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06423839926719666
    2. '=(' → logprob: -3.3142383098602295
    3. '(' → logprob: -4.564238548278809
    4. '=' → logprob: -5.064238548278809
    5. ']' → logprob: -5.189238548278809
    6. ')' → logprob: -6.564238548278809
    7. ' =(' → logprob: -6.939238548278809
    8. ']=(' → logprob: -7.439238548278809
    9. '[' → logprob: -8.064238548278809
    10. ' (' → logprob: -8.689238548278809

Token 273: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2035452127456665
    2. '=' → logprob: -1.7035452127456665
    3. '=(' → logprob: -6.203545093536377
    4. '(' → logprob: -9.453545570373535
    5. '[' → logprob: -10.703545570373535
    6. ' =(' → logprob: -12.203545570373535
    7. ' (' → logprob: -14.828545570373535
    8. '=
' → logprob: -15.578545570373535
    9. ')' → logprob: -15.953545570373535
    10. '=max' → logprob: -16.07854461669922

Token 274: ' (' (ID: 350)
  Prédit: '(last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(last' → logprob: -0.06905968487262726
    2. ' (' → logprob: -3.3190596103668213
    3. '(current' → logprob: -3.5690596103668213
    4. '(' → logprob: -6.8190598487854
    5. '(max' → logprob: -7.0690598487854
    6. '(start' → logprob: -7.8190598487854
    7. ' ' → logprob: -12.319059371948242
    8. '(first' → logprob: -12.694059371948242
    9. '(end' → logprob: -13.444059371948242
    10. '   ' → logprob: -13.819059371948242

Token 275: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -9.627176768844947e-05
    2. ' last' → logprob: -9.250096321105957
    3. '(last' → logprob: -15.875096321105957
    4. '	last' → logprob: -18.50009536743164
    5. 'min' → logprob: -18.62509536743164
    6. ',last' → logprob: -19.87509536743164
    7. 'max' → logprob: -20.00009536743164
    8. '[last' → logprob: -20.25009536743164
    9. 'lasti' → logprob: -21.87509536743164
    10. 'Last' → logprob: -22.12509536743164

Token 276: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25194206833839417
    2. '0' → logprob: -1.5019420385360718
    3. '(' → logprob: -12.001941680908203
    4. ' ' → logprob: -12.251941680908203
    5. '<|end|>' → logprob: -15.251941680908203
    6. '.' → logprob: -15.376941680908203
    7. '<|end|>' → logprob: -15.376941680908203
    8. ',' → logprob: -15.751941680908203
    9. '[
' → logprob: -15.751941680908203
    10. '```' → logprob: -15.751941680908203

Token 277: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -15.250000953674316
    3. '1' → logprob: -15.250000953674316
    4. ' ' → logprob: -15.625000953674316
    5. '
' → logprob: -16.75
    6. '۰' → logprob: -18.3125
    7. '   ' → logprob: -18.6875
    8. '```' → logprob: -19.125
    9. '
' → logprob: -19.1875
    10. '	' → logprob: -19.1875

Token 278: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.318681188422488e-05
    2. ' ,' → logprob: -11.87501335144043
    3. ',max' → logprob: -12.37501335144043
    4. ',current' → logprob: -13.25001335144043
    5. ',min' → logprob: -15.75001335144043
    6. ',
' → logprob: -16.87501335144043
    7. ',last' → logprob: -18.62501335144043
    8. '‌,' → logprob: -18.75001335144043
    9. 'max' → logprob: -19.50001335144043
    10. ',new' → logprob: -19.87501335144043

Token 279: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4740770161151886
    2. ' max' → logprob: -0.9740769863128662
    3. '	max' → logprob: -18.224077224731445
    4. '_max' → logprob: -19.974077224731445
    5. '(max' → logprob: -20.474077224731445
    6. ' current' → logprob: -22.099077224731445
    7. 'current' → logprob: -22.224077224731445
    8. '.max' → logprob: -22.849077224731445
    9. '[max' → logprob: -22.849077224731445
    10. ',max' → logprob: -22.974077224731445

Token 280: '(last' (ID: 39599)
  Prédit: '(last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(last' → logprob: -1.0921942703134846e-05
    2. '(current' → logprob: -11.62501049041748
    3. 'last' → logprob: -13.62501049041748
    4. '(' → logprob: -14.25001049041748
    5. '[last' → logprob: -16.750011444091797
    6. ',last' → logprob: -17.750011444091797
    7. '(
' → logprob: -18.125011444091797
    8. ')' → logprob: -19.500011444091797
    9. ' last' → logprob: -19.500011444091797
    10. ' (' → logprob: -19.500011444091797

Token 281: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5048530030981055e-06
    2. '1' → logprob: -13.500001907348633
    3. '(' → logprob: -18.125001907348633
    4. '[
' → logprob: -18.375001907348633
    5. '
' → logprob: -19.625001907348633
    6. '   ' → logprob: -20.375001907348633
    7. '	' → logprob: -21.000001907348633
    8. ' [' → logprob: -21.125001907348633
    9. '-' → logprob: -21.750001907348633
    10. '{' → logprob: -22.000001907348633

Token 282: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001463299704482779
    2. '[' → logprob: -8.87514591217041
    3. ' ' → logprob: -12.12514591217041
    4. '   ' → logprob: -14.25014591217041
    5. '
' → logprob: -15.87514591217041
    6. '(' → logprob: -17.375146865844727
    7. '  ' → logprob: -18.125146865844727
    8. ',' → logprob: -18.125146865844727
    9. '	' → logprob: -18.250146865844727
    10. ']' → logprob: -18.625146865844727

Token 283: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017755474895238876
    2. ',current' → logprob: -4.142755508422852
    3. ' ,' → logprob: -6.517755508422852
    4. 'current' → logprob: -8.517755508422852
    5. '],' → logprob: -10.642755508422852
    6. '[current' → logprob: -12.017755508422852
    7. '[' → logprob: -12.267755508422852
    8. '),' → logprob: -12.767755508422852
    9. ' current' → logprob: -12.892755508422852
    10. '   ' → logprob: -14.767755508422852

Token 284: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.6931471824645996
    2. 'current' → logprob: -0.6931471824645996
    3. '(current' → logprob: -17.943147659301758
    4. '	current' → logprob: -18.193147659301758
    5. '   ' → logprob: -19.318147659301758
    6. '[current' → logprob: -19.443147659301758
    7. ' ' → logprob: -19.943147659301758
    8. '_current' → logprob: -20.193147659301758
    9. '$current' → logprob: -20.318147659301758
    10. 'Current' → logprob: -20.318147659301758

Token 285: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3856492842023727e-06
    2. '1' → logprob: -14.000000953674316
    3. '][' → logprob: -15.000000953674316
    4. ')[' → logprob: -16.875001907348633
    5. ' [' → logprob: -17.250001907348633
    6. '(' → logprob: -17.250001907348633
    7. '2' → logprob: -17.375001907348633
    8. '   ' → logprob: -17.375001907348633
    9. '[
' → logprob: -18.625001907348633
    10. '()[' → logprob: -19.000001907348633

Token 286: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013326213229447603
    2. '[' → logprob: -6.626332759857178
    3. ' ' → logprob: -12.00133228302002
    4. '   ' → logprob: -15.00133228302002
    5. ' [' → logprob: -16.251333236694336
    6. ']' → logprob: -16.626333236694336
    7. '
' → logprob: -17.126333236694336
    8. '][' → logprob: -17.376333236694336
    9. ')' → logprob: -17.751333236694336
    10. '```' → logprob: -18.376333236694336

Token 287: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.03935864567756653
    2. '[' → logprob: -3.539358615875244
    3. '))' → logprob: -4.789358615875244
    4. ']' → logprob: -7.039358615875244
    5. ')' → logprob: -9.414359092712402
    6. ')))' → logprob: -9.539359092712402
    7. ']))
' → logprob: -9.789359092712402
    8. '])' → logprob: -10.039359092712402
    9. '}))' → logprob: -10.539359092712402
    10. '][' → logprob: -10.789359092712402

Token 288: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.154039204120636
    2. '<|end|>' → logprob: -2.529039144515991
    3. '   ' → logprob: -3.654039144515991
    4. ' else' → logprob: -3.904039144515991
    5. 'else' → logprob: -4.65403938293457
    6. ')' → logprob: -6.15403938293457
    7. '
' → logprob: -6.90403938293457
    8. ' ' → logprob: -7.15403938293457
    9. '    ' → logprob: -7.65403938293457
    10. '	' → logprob: -7.65403938293457

Token 289: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.08971860259771347
    2. 'else' (adapté à ' else') → logprob: -2.7147185802459717
    3. '       ' → logprob: -3.9647185802459717
    4. '   ' → logprob: -7.464718818664551
    5. '	else' → logprob: -10.71471881866455
    6. '    ' → logprob: -11.58971881866455
    7. ' elif' → logprob: -12.83971881866455
    8. 'elif' → logprob: -13.46471881866455
    9. '        ' → logprob: -13.58971881866455
    10. ')' → logprob: -14.08971881866455

Token 290: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1813908964395523
    2. ':
' → logprob: -2.0563910007476807
    3. '           ' → logprob: -3.3063910007476807
    4. '       ' → logprob: -6.806390762329102
    5. '{' → logprob: -9.181390762329102
    6. ' :' → logprob: -10.056390762329102
    7. ':
' → logprob: -11.181390762329102
    8. ' :
' → logprob: -11.181390762329102
    9. ',' → logprob: -11.806390762329102
    10. '[' → logprob: -12.056390762329102

Token 291: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004534334584604949
    2. ' merged' → logprob: -8.000452995300293
    3. 'merged' → logprob: -9.250452995300293
    4. '   ' → logprob: -11.500452995300293
    5. '       ' → logprob: -11.625452995300293
    6. '	       ' → logprob: -13.875452995300293
    7. '          ' → logprob: -14.750452995300293
    8. ' ' → logprob: -14.750452995300293
    9. '	   ' → logprob: -15.000452995300293
    10. '    	   ' → logprob: -15.500452995300293

Token 292: ' merged' (ID: 49536)
  Prédit: 'merged'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merged' (adapté à ' merged') → logprob: -0.47562840580940247
    2. ' merged' → logprob: -0.9756283760070801
    3. '   ' → logprob: -6.47562837600708
    4. '           ' → logprob: -11.850628852844238
    5. '       ' → logprob: -13.600628852844238
    6. 'merge' → logprob: -13.975628852844238
    7. ' ' → logprob: -15.100628852844238
    8. '  ' → logprob: -16.475627899169922
    9. '    ' → logprob: -16.725627899169922
    10. 'Merged' → logprob: -17.100627899169922

Token 293: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00033832306507974863
    2. '.' → logprob: -8.000338554382324
    3. '.app' → logprob: -13.000338554382324
    4. '.extend' → logprob: -14.875338554382324
    5. '.ap' → logprob: -16.000337600708008
    6. ' .' → logprob: -16.750337600708008
    7. '.push' → logprob: -17.625337600708008
    8. ').' → logprob: -17.750337600708008
    9. '.add' → logprob: -17.875337600708008
    10. 'append' → logprob: -18.250337600708008

Token 294: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -2.165027217415627e-05
    2. '(' → logprob: -10.750021934509277
    3. '(
' → logprob: -16.37502098083496
    4. '(cur' → logprob: -17.00002098083496
    5. '(curr' → logprob: -17.62502098083496
    6. 'current' → logprob: -18.00002098083496
    7. ' (' → logprob: -18.12502098083496
    8. '((' → logprob: -19.25002098083496
    9. '(Current' → logprob: -20.00002098083496
    10. ',current' → logprob: -20.62502098083496

Token 295: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.65707261255011e-06
    2. ')
' → logprob: -12.250008583068848
    3. ' )' → logprob: -12.875008583068848
    4. ')return' → logprob: -13.750008583068848
    5. '   ' → logprob: -17.500009536743164
    6. '<|end|>' → logprob: -17.625009536743164
    7. '}' → logprob: -18.625009536743164
    8. ')}' → logprob: -18.875009536743164
    9. ')}}' → logprob: -19.000009536743164
    10. '),' → logprob: -19.000009536743164

Token 296: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006794307846575975
    2. 'return' → logprob: -7.8756794929504395
    3. ' return' → logprob: -9.000679016113281
    4. '	return' → logprob: -9.125679016113281
    5. '    
' → logprob: -10.500679016113281
    6. '
' → logprob: -11.125679016113281
    7. '[' → logprob: -12.125679016113281
    8. '<|end|>' → logprob: -12.125679016113281
    9. '   ' → logprob: -12.875679016113281
    10. ':return' → logprob: -13.375679016113281

Token 297: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1313904970884323
    2. 'return' (adapté à ' return') → logprob: -2.1313905715942383
    3. ' return' → logprob: -5.756390571594238
    4. '
' → logprob: -6.756390571594238
    5. '	return' → logprob: -9.131390571594238
    6. '    
' → logprob: -11.381390571594238
    7. '```' → logprob: -13.381390571594238
    8. ':return' → logprob: -14.006390571594238
    9. '
' → logprob: -14.256390571594238
    10. ' ' → logprob: -14.506390571594238

Token 298: ' merged' (ID: 49536)
  Prédit: 'merged'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merged' → logprob: -0.001170225441455841
    2. ' merged' → logprob: -6.7511701583862305
    3. 'merge' → logprob: -19.876171112060547
    4. '[' → logprob: -20.626171112060547
    5. 'mer' → logprob: -21.126171112060547
    6. 'Merged' → logprob: -21.751171112060547
    7. 'm' → logprob: -21.876171112060547
    8. 'interval' → logprob: -22.251171112060547
    9. ' ' → logprob: -23.626171112060547
    10. 'sorted' → logprob: -24.501171112060547

Token 299: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24165329337120056
    2. '(' → logprob: -1.741653323173523
    3. '<|end|>' → logprob: -3.6166532039642334
    4. '(
' → logprob: -5.1166534423828125
    5. '[' → logprob: -6.2416534423828125
    6. '(

' → logprob: -6.3666534423828125
    7. '(def' → logprob: -7.4916534423828125
    8. ' def' → logprob: -7.6166534423828125
    9. '

' → logprob: -7.7416534423828125
    10. '()' → logprob: -8.116653442382812

Token 300: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00026884564431384206
    2. '
' → logprob: -9.250268936157227
    3. ' def' → logprob: -9.750268936157227
    4. 'class' → logprob: -10.000268936157227
    5. '

' → logprob: -10.125268936157227
    6. '```' → logprob: -12.000268936157227
    7. 'import' → logprob: -12.125268936157227
    8. '\' → logprob: -12.500268936157227
    9. 'de' → logprob: -12.875268936157227
    10. 'd' → logprob: -13.000268936157227

Token 301: ' complement' (ID: 21800)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.9724433422088623
    2. ' visible' → logprob: -0.9724433422088623
    3. ' compute' → logprob: -3.0974433422088623
    4. ' calculate' → logprob: -3.3474433422088623
    5. 'visible' → logprob: -3.4724433422088623
    6. 'find' → logprob: -3.5974433422088623
    7. ' get' → logprob: -3.7224433422088623
    8. 'compute' → logprob: -3.9724433422088623
    9. 'calculate' → logprob: -4.472443580627441
    10. ' is' → logprob: -4.722443580627441

Token 302: '_inter' (ID: 16818)
  Prédit: '(interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(interval' → logprob: -0.03567070886492729
    2. '(' → logprob: -3.660670757293701
    3. '_inter' → logprob: -4.785670757293701
    4. '(inter' → logprob: -7.785670757293701
    5. ' (' → logprob: -8.410670280456543
    6. '_' → logprob: -9.535670280456543
    7. '(angle' → logprob: -9.910670280456543
    8. '```' → logprob: -10.035670280456543
    9. '_angles' → logprob: -10.535670280456543
    10. '_(' → logprob: -10.535670280456543

Token 303: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.006742015480995178
    2. 'val' → logprob: -5.006742000579834
    3. 'ter' → logprob: -11.131742477416992
    4. 'erv' → logprob: -11.881742477416992
    5. 'r' → logprob: -14.256742477416992
    6. 'erval' → logprob: -14.256742477416992
    7. ' vals' → logprob: -14.256742477416992
    8. '[' → logprob: -14.256742477416992
    9. 't' → logprob: -14.506742477416992
    10. 'vel' → logprob: -15.256742477416992

Token 304: '(interval' (ID: 100435)
  Prédit: '(interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(interval' → logprob: -0.0011061598779633641
    2. '(' → logprob: -7.126106262207031
    3. ' (' → logprob: -8.126106262207031
    4. '((' → logprob: -13.251106262207031
    5. '(inter' → logprob: -13.251106262207031
    6. '(range' → logprob: -14.876106262207031
    7. '(total' → logprob: -15.126106262207031
    8. 'interval' → logprob: -15.251106262207031
    9. '(period' → logprob: -15.626106262207031
    10. '(r' → logprob: -15.751106262207031

Token 305: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.007892178371548653
    2. 'als' → logprob: -5.00789213180542
    3. 'vals' → logprob: -7.13289213180542
    4. ',' → logprob: -8.507892608642578
    5. ')' → logprob: -9.507892608642578
    6. '   ' → logprob: -10.882892608642578
    7. 'al' → logprob: -10.882892608642578
    8. 'val' → logprob: -11.132892608642578
    9. 'ls' → logprob: -11.507892608642578
    10. '):
' → logprob: -11.757892608642578

Token 306: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002997120900545269
    2. ' ,' → logprob: -8.125299453735352
    3. '):' → logprob: -13.125299453735352
    4. ',n' → logprob: -14.250299453735352
    5. ',size' → logprob: -15.750299453735352
    6. '(interval' → logprob: -15.750299453735352
    7. ',length' → logprob: -15.875299453735352
    8. ',start' → logprob: -16.12529945373535
    9. ',
' → logprob: -16.62529945373535
    10. ')' → logprob: -16.75029945373535

Token 307: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04213611036539078
    2. 'def' → logprob: -3.4171361923217773
    3. 'result' → logprob: -5.042136192321777
    4. 'interval' → logprob: -7.042136192321777
    5. 'full' → logprob: -7.292136192321777
    6. '[' → logprob: -9.167136192321777
    7. ' full' → logprob: -9.292136192321777
    8. 'com' → logprob: -9.542136192321777
    9. ' intervals' → logprob: -9.542136192321777
    10. ' result' → logprob: -11.042136192321777

Token 308: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.531133234500885
    2. 'full' → logprob: -2.0311331748962402
    3. 'com' → logprob: -2.1561331748962402
    4. '   ' → logprob: -2.4061331748962402
    5. 'interval' → logprob: -3.4061331748962402
    6. 'def' → logprob: -3.5311331748962402
    7. ' full' → logprob: -5.65613317489624
    8. 'compl' → logprob: -6.03113317489624
    9. 'max' → logprob: -6.53113317489624
    10. 'FULL' → logprob: -6.90613317489624

Token 309: ' intervals' (ID: 49900)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6499825119972229
    2. 'com' → logprob: -1.1499824523925781
    3. 'full' → logprob: -2.399982452392578
    4. 'interval' → logprob: -3.899982452392578
    5. 'def' → logprob: -4.024982452392578
    6. 'compl' → logprob: -4.649982452392578
    7. 'if' → logprob: -4.899982452392578
    8. 'FULL' → logprob: -5.274982452392578
    9. 'MAX' → logprob: -6.149982452392578
    10. 'res' → logprob: -6.399982452392578

Token 310: ' inside' (ID: 6772)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7819295525550842
    2. ' =' → logprob: -1.0319294929504395
    3. '.sort' → logprob: -1.7819294929504395
    4. ' are' → logprob: -4.9069294929504395
    5. '=[]' → logprob: -5.5319294929504395
    6. 'def' → logprob: -6.0319294929504395
    7. 'sort' → logprob: -6.9069294929504395
    8. 'are' → logprob: -7.5319294929504395
    9. 'sorted' → logprob: -7.9069294929504395
    10. '_sorted' → logprob: -7.9069294929504395

Token 311: ' [' (ID: 723)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0003346314188092947
    2. ' [(' → logprob: -8.125334739685059
    3. '[' → logprob: -10.875334739685059
    4. '[]' → logprob: -11.000334739685059
    5. '(' → logprob: -14.375334739685059
    6. 'interval' → logprob: -14.625334739685059
    7. '   ' → logprob: -14.875334739685059
    8. '0' → logprob: -15.000334739685059
    9. '[((' → logprob: -15.375334739685059
    10. '[]
' → logprob: -15.500334739685059

Token 312: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11289875954389572
    2. '(' → logprob: -2.237898826599121
    3. ' (' → logprob: -9.987898826599121
    4. ' ' → logprob: -10.487898826599121
    5. '[' → logprob: -13.862898826599121
    6. '2' → logprob: -13.862898826599121
    7. '   ' → logprob: -15.362898826599121
    8. ')' → logprob: -15.862898826599121
    9. '```' → logprob: -16.237897872924805
    10. ']' → logprob: -16.362897872924805

Token 313: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.6312321753939614e-05
    2. ' ,' → logprob: -10.500036239624023
    3. '2' → logprob: -11.750036239624023
    4. ' ' → logprob: -15.500036239624023
    5. '.' → logprob: -16.000036239624023
    6. '(' → logprob: -16.000036239624023
    7. '0' → logprob: -16.250036239624023
    8. '```' → logprob: -16.250036239624023
    9. ',
' → logprob: -16.375036239624023
    10. 'def' → logprob: -18.250036239624023

Token 314: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0019294669618830085
    2. ' ' → logprob: -6.25192928314209
    3. 'math' → logprob: -14.37692928314209
    4. '   ' → logprob: -15.62692928314209
    5. '(' → logprob: -16.751930236816406
    6. ' math' → logprob: -16.876930236816406
    7. '1' → logprob: -17.001930236816406
    8. '6' → logprob: -17.876930236816406
    9. '360' → logprob: -18.501930236816406
    10. '  ' → logprob: -18.626930236816406

Token 315: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00024013224174268544
    2. ' ' → logprob: -8.375240325927734
    3. '(' → logprob: -12.000240325927734
    4. 'math' → logprob: -12.750240325927734
    5. '1' → logprob: -15.625240325927734
    6. '   ' → logprob: -16.000240325927734
    7. '6' → logprob: -17.375240325927734
    8. '{' → logprob: -17.375240325927734
    9. '```' → logprob: -17.500240325927734
    10. ' math' → logprob: -17.625240325927734

Token 316: 'pi' (ID: 3455)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.47408726811408997
    2. ' *' → logprob: -0.9740872383117676
    3. 'math' → logprob: -12.099087715148926
    4. ' math' → logprob: -12.599087715148926
    5. '*pi' → logprob: -14.349087715148926
    6. ' ' → logprob: -14.849087715148926
    7. 'import' → logprob: -15.849087715148926
    8. '*Math' → logprob: -16.97408676147461
    9. ' ' → logprob: -16.97408676147461
    10. '   ' → logprob: -17.22408676147461

Token 317: '),' (ID: 936)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.27340424060821533
    2. ']:' → logprob: -2.273404121398926
    3. ']:
' → logprob: -2.898404121398926
    4. ']
' → logprob: -2.898404121398926
    5. ' ]' → logprob: -4.398404121398926
    6. '   ' → logprob: -4.898404121398926
    7. '):
' → logprob: -6.398404121398926
    8. 'def' → logprob: -6.898404121398926
    9. ' ]
' → logprob: -7.273404121398926
    10. ']:

' → logprob: -7.398404121398926

Token 318: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46526142954826355
    2. 'result' → logprob: -1.840261459350586
    3. 'com' → logprob: -2.090261459350586
    4. ' result' → logprob: -2.590261459350586
    5. 'def' → logprob: -4.965261459350586
    6. '[' → logprob: -5.840261459350586
    7. ' complement' → logprob: -6.840261459350586
    8. 'compl' → logprob: -7.090261459350586
    9. 'interval' → logprob: -7.340261459350586
    10. ' intervals' → logprob: -7.465261459350586

Token 319: ' parts' (ID: 7881)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.1036389097571373
    2. 'result' → logprob: -2.6036388874053955
    3. '[]' → logprob: -4.603639125823975
    4. 'com' → logprob: -4.978639125823975
    5. ' [(' → logprob: -6.103639125823975
    6. '[]
' → logprob: -6.353639125823975
    7. '[' → logprob: -6.478639125823975
    8. ' result' → logprob: -6.728639125823975
    9. 'interval' → logprob: -8.228638648986816
    10. '[
' → logprob: -8.853638648986816

Token 320: ' not' (ID: 625)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42544645071029663
    2. '[' → logprob: -2.0504465103149414
    3. ' that' → logprob: -2.1754465103149414
    4. ' of' → logprob: -3.6754465103149414
    5. 'that' → logprob: -3.8004465103149414
    6. 'of' → logprob: -4.425446510314941
    7. 'outside' → logprob: -4.800446510314941
    8. '[
' → logprob: -5.175446510314941
    9. ' outside' → logprob: -5.175446510314941
    10. '[]' → logprob: -5.300446510314941

Token 321: ' covered' (ID: 13083)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'covered' → logprob: -0.0004336493439041078
    2. ' covered' → logprob: -7.750433444976807
    3. 'cover' → logprob: -13.625433921813965
    4. 'included' → logprob: -15.000433921813965
    5. '   ' → logprob: -15.250433921813965
    6. '[' → logprob: -15.250433921813965
    7. ' ' → logprob: -15.375433921813965
    8. 'Covered' → logprob: -15.500433921813965
    9. 'coverage' → logprob: -15.625433921813965
    10. '(' → logprob: -16.25043296813965

Token 322: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05252116546034813
    2. 'def' → logprob: -4.177521228790283
    3. '(' → logprob: -4.302521228790283
    4. 'result' → logprob: -4.302521228790283
    5. ' by' → logprob: -5.802521228790283
    6. '[' → logprob: -6.552521228790283
    7. 'interval' → logprob: -6.552521228790283
    8. ',' → logprob: -7.677521228790283
    9. ' =' → logprob: -8.302520751953125
    10. ':' → logprob: -8.427520751953125

Token 323: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023657784331589937
    2. 'def' → logprob: -6.127365589141846
    3. 'result' → logprob: -10.002366065979004
    4. '(' → logprob: -10.627366065979004
    5. '
' → logprob: -10.877366065979004
    6. '    
' → logprob: -11.127366065979004
    7. ')' → logprob: -11.377366065979004
    8. '```' → logprob: -11.502366065979004
    9. ':' → logprob: -11.877366065979004
    10. '[' → logprob: -12.002366065979004

Token 324: ' result' (ID: 1534)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.33384302258491516
    2. 'result' (adapté à ' result') → logprob: -1.5838429927825928
    3. 'interval' → logprob: -2.9588429927825928
    4. 'compl' → logprob: -4.208843231201172
    5. '   ' → logprob: -5.458843231201172
    6. 'def' → logprob: -5.708843231201172
    7. 'covered' → logprob: -6.208843231201172
    8. 'full' → logprob: -7.083843231201172
    9. 'free' → logprob: -8.208843231201172
    10. 'comp' → logprob: -8.458843231201172

Token 325: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326815485954285
    2. '=' → logprob: -1.3132681846618652
    3. '=[]' → logprob: -12.063267707824707
    4. ' ' → logprob: -15.563267707824707
    5. ' =[' → logprob: -15.563267707824707
    6. ',' → logprob: -16.063268661499023
    7. '[' → logprob: -16.813268661499023
    8. '=[' → logprob: -16.813268661499023
    9. '=[]
' → logprob: -17.063268661499023
    10. '[:]' → logprob: -17.688268661499023

Token 326: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.048793330788612366
    2. '[(' → logprob: -3.048793315887451
    3. '[]
' → logprob: -9.04879379272461
    4. '[' → logprob: -9.42379379272461
    5. ' []' → logprob: -12.42379379272461
    6. '[]

' → logprob: -13.29879379272461
    7. ' [(' → logprob: -14.29879379272461
    8. '[]"' → logprob: -14.79879379272461
    9. '[]}' → logprob: -14.79879379272461
    10. '[])' → logprob: -15.17379379272461

Token 327: '   ' (ID: 271)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.09265551716089249
    2. 'last' → logprob: -3.0926554203033447
    3. 'current' → logprob: -3.5926554203033447
    4. '   ' → logprob: -4.842655658721924
    5. 'start' → logprob: -5.092655658721924
    6. ' prev' → logprob: -7.092655658721924
    7. 'curr' → logprob: -8.217655181884766
    8. 'cur' → logprob: -8.217655181884766
    9. 'previous' → logprob: -9.342655181884766
    10. ' last' → logprob: -10.467655181884766

Token 328: ' if' (ID: 538)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.26240676641464233
    2. 'start' → logprob: -1.512406826019287
    3. 'current' → logprob: -4.762406826019287
    4. 'last' → logprob: -6.512406826019287
    5. 'if' (adapté à ' if') → logprob: -8.512406349182129
    6. 'cur' → logprob: -9.262406349182129
    7. 'curr' → logprob: -10.012406349182129
    8. 'previous' → logprob: -10.512406349182129
    9. ' prev' → logprob: -10.762406349182129
    10. ' start' → logprob: -13.137406349182129

Token 329: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.006769722327589989
    2. ' not' → logprob: -5.00676965713501
    3. 'len' → logprob: -10.256770133972168
    4. 'interval' → logprob: -11.131770133972168
    5. '!' → logprob: -13.881770133972168
    6. '(not' → logprob: -14.131770133972168
    7. '0' → logprob: -14.631770133972168
    8. '
' → logprob: -14.756770133972168
    9. ')' → logprob: -14.881770133972168
    10. ' len' → logprob: -15.006770133972168

Token 330: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.014164329506456852
    2. ' intervals' → logprob: -4.264164447784424
    3. ' interval' → logprob: -14.639163970947266
    4. '(interval' → logprob: -14.889163970947266
    5. 'int' → logprob: -17.514163970947266
    6. 'inter' → logprob: -17.764163970947266
    7. '
' → logprob: -17.889163970947266
    8. ' ' → logprob: -18.514163970947266
    9. 'Intervals' → logprob: -18.889163970947266
    10. 'inte' → logprob: -19.576663970947266

Token 331: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06199738010764122
    2. ':
' → logprob: -2.811997413635254
    3. ':return' → logprob: -11.186997413635254
    4. '   ' → logprob: -11.936997413635254
    5. ' :' → logprob: -12.436997413635254
    6. '):' → logprob: -13.061997413635254
    7. '[' → logprob: -13.561997413635254
    8. ' or' → logprob: -14.811997413635254
    9. ':

' → logprob: -15.061997413635254
    10. '):
' → logprob: -15.186997413635254

Token 332: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005214786622673273
    2. 'result' → logprob: -5.630214691162109
    3. '       ' → logprob: -7.005214691162109
    4. ' result' → logprob: -7.380214691162109
    5. ':' → logprob: -10.75521469116211
    6. 'return' → logprob: -11.50521469116211
    7. '[' → logprob: -11.88021469116211
    8. ' ' → logprob: -12.00521469116211
    9. '  ' → logprob: -12.13021469116211
    10. ' return' → logprob: -12.13021469116211

Token 333: ' return' (ID: 622)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.25591152906417847
    2. 'return' (adapté à ' return') → logprob: -1.5059115886688232
    3. '   ' → logprob: -5.755911350250244
    4. ' result' → logprob: -7.505911350250244
    5. ' return' → logprob: -8.255911827087402
    6. '(result' → logprob: -15.380911827087402
    7. '
' → logprob: -15.505911827087402
    8. '	result' → logprob: -15.755911827087402
    9. '[result' → logprob: -16.630910873413086
    10. ' ' → logprob: -16.880910873413086

Token 334: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -4.453737710718997e-05
    2. ' [(' → logprob: -10.250044822692871
    3. '[' → logprob: -11.750044822692871
    4. '[((' → logprob: -13.625044822692871
    5. '[[' → logprob: -19.000043869018555
    6. '([(' → logprob: -19.125043869018555
    7. '[
' → logprob: -19.375043869018555
    8. '   ' → logprob: -19.750043869018555
    9. '[\' → logprob: -19.875043869018555
    10. '[-' → logprob: -20.250043869018555

Token 335: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.776898251497187e-05
    2. '(' → logprob: -10.1250581741333
    3. ' ' → logprob: -11.0000581741333
    4. '   ' → logprob: -14.2500581741333
    5. ' (' → logprob: -16.125057220458984
    6. ')' → logprob: -16.125057220458984
    7. '  ' → logprob: -17.250057220458984
    8. ',' → logprob: -17.875057220458984
    9. '    ' → logprob: -18.437557220458984
    10. '۰' → logprob: -18.437557220458984

Token 336: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007232757634483278
    2. '.' → logprob: -7.250723361968994
    3. ' ,' → logprob: -11.375722885131836
    4. '.,' → logprob: -14.375722885131836
    5. ',
' → logprob: -14.375722885131836
    6. '0' → logprob: -14.875722885131836
    7. ' ' → logprob: -15.875722885131836
    8. '2' → logprob: -17.250722885131836
    9. ',.' → logprob: -18.000722885131836
    10. ',float' → logprob: -18.000722885131836

Token 337: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0015029559144750237
    2. ' ' → logprob: -6.501502990722656
    3. 'math' → logprob: -14.876502990722656
    4. '   ' → logprob: -15.751502990722656
    5. '6' → logprob: -15.751502990722656
    6. ' math' → logprob: -16.876502990722656
    7. '  ' → logprob: -17.501502990722656
    8. '    ' → logprob: -18.376502990722656
    9. '(' → logprob: -18.501502990722656
    10. '```' → logprob: -19.251502990722656

Token 338: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -13.12500286102295
    3. 'math' → logprob: -14.12500286102295
    4. '(' → logprob: -15.50000286102295
    5. '6' → logprob: -16.000003814697266
    6. '   ' → logprob: -17.375003814697266
    7. '```' → logprob: -17.625003814697266
    8. '`' → logprob: -19.250003814697266
    9. '``' → logprob: -19.500003814697266
    10. 'import' → logprob: -20.000003814697266

Token 339: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4740859866142273
    2. ' *' → logprob: -0.9740859866142273
    3. ' math' → logprob: -12.849085807800293
    4. '*pi' → logprob: -12.974085807800293
    5. 'math' → logprob: -12.974085807800293
    6. '*Math' → logprob: -13.599085807800293
    7. 'import' → logprob: -15.724085807800293
    8. '*object' → logprob: -15.974085807800293
    9. ' ' → logprob: -16.72408676147461
    10. '*np' → logprob: -17.22408676147461

Token 340: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.001170225441455841
    2. ' math' → logprob: -6.7511701583862305
    3. '(math' → logprob: -19.251171112060547
    4. ' ' → logprob: -19.501171112060547
    5. 'python' → logprob: -19.751171112060547
    6. 'mat' → logprob: -19.751171112060547
    7. '   ' → logprob: -20.376171112060547
    8. '.math' → logprob: -20.501171112060547
    9. 'Math' → logprob: -20.876171112060547
    10. 'import' → logprob: -20.876171112060547

Token 341: '.pi' (ID: 55497)
  Prédit: '.pi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pi' → logprob: -0.00012487331696320325
    2. '.' → logprob: -9.00012493133545
    3. 'pi' → logprob: -14.00012493133545
    4. '.py' → logprob: -15.25012493133545
    5. '.p' → logprob: -16.000123977661133
    6. '*pi' → logprob: -16.500123977661133
    7. '.PI' → logprob: -16.500123977661133
    8. '.python' → logprob: -18.125123977661133
    9. '.psi' → logprob: -18.250123977661133
    10. ' .' → logprob: -18.375123977661133

Token 342: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0001601539261173457
    2. ')]
' → logprob: -9.125160217285156
    3. ' )' → logprob: -10.125160217285156
    4. ')' → logprob: -11.750160217285156
    5. '   ' → logprob: -13.625160217285156
    6. ')]
' → logprob: -14.000160217285156
    7. ')]

' → logprob: -15.000160217285156
    8. ' ' → logprob: -15.875160217285156
    9. '))' → logprob: -16.125160217285156
    10. ']' → logprob: -16.125160217285156

Token 343: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18675179779529572
    2. ' current' → logprob: -2.6867518424987793
    3. ' prev' → logprob: -3.4367518424987793
    4. 'current' → logprob: -3.8117518424987793
    5. ' last' → logprob: -3.9367518424987793
    6. 'prev' → logprob: -4.561751842498779
    7. 'last' → logprob: -5.061751842498779
    8. ' end' → logprob: -5.811751842498779
    9. '    
' → logprob: -5.936751842498779
    10. ' start' → logprob: -5.936751842498779

Token 344: ' intervals' (ID: 49900)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.7484928965568542
    2. 'interval' → logprob: -0.7484928965568542
    3. 'current' → logprob: -3.123492956161499
    4. 'if' → logprob: -5.49849271774292
    5. 'last' → logprob: -6.37349271774292
    6. 'curr' → logprob: -6.74849271774292
    7. 'cur' → logprob: -6.87349271774292
    8. 'start' → logprob: -7.12349271774292
    9. 'sorted' → logprob: -8.248493194580078
    10. '   ' → logprob: -8.373493194580078

Token 345: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01351901050657034
    2. ' =' → logprob: -4.513518810272217
    3. '.sort' → logprob: -6.013518810272217
    4. 'sort' → logprob: -11.263519287109375
    5. 'sorted' → logprob: -12.388519287109375
    6. '_sorted' → logprob: -12.388519287109375
    7. '[' → logprob: -14.763519287109375
    8. 'merged' → logprob: -15.013519287109375
    9. ' sort' → logprob: -16.263519287109375
    10. '=m' → logprob: -16.388519287109375

Token 346: ' merge' (ID: 20345)
  Prédit: 'merge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merge' → logprob: -2.176947600673884e-05
    2. ' merge' → logprob: -10.750021934509277
    3. 'normalize' → logprob: -16.00002098083496
    4. 'merged' → logprob: -16.62502098083496
    5. '[' → logprob: -17.37502098083496
    6. 'sorted' → logprob: -17.62502098083496
    7. '[(' → logprob: -17.75002098083496
    8. 'mer' → logprob: -18.62502098083496
    9. 'interval' → logprob: -18.87502098083496
    10. '.merge' → logprob: -19.87502098083496

Token 347: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.00018458699923940003
    2. 'interval' → logprob: -8.875185012817383
    3. '(interval' → logprob: -10.250185012817383
    4. '_interval' → logprob: -11.750185012817383
    5. 'Intervals' → logprob: -14.625185012817383
    6. 'inter' → logprob: -15.125185012817383
    7. ' intervals' → logprob: -15.500185012817383
    8. '(_' → logprob: -15.500185012817383
    9. '_' → logprob: -16.375185012817383
    10. '(inter' → logprob: -16.500185012817383

Token 348: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.39597228169441223
    2. 'als' → logprob: -1.1459722518920898
    3. 'erv' → logprob: -5.14597225189209
    4. 'val' → logprob: -7.02097225189209
    5. 'interval' → logprob: -7.39597225189209
    6. '[' → logprob: -7.77097225189209
    7. 'al' → logprob: -7.77097225189209
    8. '```' → logprob: -7.89597225189209
    9. 's' → logprob: -9.27097225189209
    10. '   ' → logprob: -9.77097225189209

Token 349: '(interval' (ID: 100435)
  Prédit: '(interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(interval' → logprob: -0.001730510382913053
    2. 'interval' → logprob: -6.751730442047119
    3. '([(' → logprob: -7.501730442047119
    4. '([' → logprob: -12.251730918884277
    5. '((' → logprob: -13.501730918884277
    6. '[(' → logprob: -13.626730918884277
    7. ' (' → logprob: -15.751730918884277
    8. ' intervals' → logprob: -16.12672996520996
    9. '([
' → logprob: -16.25172996520996
    10. '(' → logprob: -16.37672996520996

Token 350: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.008059044368565083
    2. ')' → logprob: -4.883059024810791
    3. 'vals' → logprob: -8.25805950164795
    4. 'val' → logprob: -9.63305950164795
    5. '[' → logprob: -10.13305950164795
    6. ')s' → logprob: -10.63305950164795
    7. 'als' → logprob: -10.75805950164795
    8. ')
' → logprob: -11.50805950164795
    9. ' s' → logprob: -11.88305950164795
    10. 'ls' → logprob: -12.38305950164795

Token 351: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1002512127161026
    2. ')
' → logprob: -2.3502511978149414
    3. ')

' → logprob: -10.100251197814941
    4. ')
' → logprob: -13.225251197814941
    5. '   ' → logprob: -13.725251197814941
    6. ' )' → logprob: -15.725251197814941
    7. ' )
' → logprob: -16.100252151489258
    8. ' ' → logprob: -16.475252151489258
    9. 'def' → logprob: -17.600252151489258
    10. '))' → logprob: -17.850252151489258

Token 352: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5029562711715698
    2. 'prev' → logprob: -1.0029562711715698
    3. 'current' → logprob: -4.502956390380859
    4. 'start' → logprob: -4.627956390380859
    5. ' prev' → logprob: -5.377956390380859
    6. 'last' → logprob: -6.127956390380859
    7. '    
' → logprob: -8.62795639038086
    8. ' current' → logprob: -8.75295639038086
    9. 'cur' → logprob: -9.00295639038086
    10. '	prev' → logprob: -9.25295639038086

Token 353: ' if' (ID: 538)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.03249054774641991
    2. 'start' → logprob: -3.7824904918670654
    3. 'if' (adapté à ' if') → logprob: -4.7824907302856445
    4. ' prev' → logprob: -8.282490730285645
    5. 'current' → logprob: -8.282490730285645
    6. 'last' → logprob: -8.282490730285645
    7. 'cur' → logprob: -10.532490730285645
    8. ' if' → logprob: -11.032490730285645
    9. 'previous' → logprob: -11.282490730285645
    10. 'curr' → logprob: -12.282490730285645

Token 354: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.00043102685594931245
    2. ' intervals' → logprob: -7.750431060791016
    3. '(interval' → logprob: -15.625431060791016
    4. ' interval' → logprob: -16.250431060791016
    5. '0' → logprob: -19.125431060791016
    6. '   ' → logprob: -19.375431060791016
    7. ' ' → logprob: -19.625431060791016
    8. '
' → logprob: -20.250431060791016
    9. 'not' → logprob: -20.250431060791016
    10. 'Intervals' → logprob: -20.625431060791016

Token 355: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '0' → logprob: -17.375
    3. '
' → logprob: -17.5
    4. ' [' → logprob: -17.625
    5. 'and' → logprob: -18.25
    6. '```' → logprob: -18.625
    7. '[
' → logprob: -18.875
    8. 'def' → logprob: -19.875
    9. '][' → logprob: -20.0
    10. '1' → logprob: -20.25

Token 356: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8193366486229934e-05
    2. ' ' → logprob: -11.500018119812012
    3. '-' → logprob: -11.875018119812012
    4. '[' → logprob: -14.375018119812012
    5. ' -' → logprob: -15.875018119812012
    6. '
' → logprob: -16.125019073486328
    7. '(' → logprob: -17.625019073486328
    8. '   ' → logprob: -17.687519073486328
    9. '#' → logprob: -17.937519073486328
    10. ':' → logprob: -18.062519073486328

Token 357: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20496268570423126
    2. '0' → logprob: -1.7049627304077148
    3. '(' → logprob: -6.204962730407715
    4. '>' → logprob: -6.829962730407715
    5. '][' → logprob: -8.454962730407715
    6. ' ' → logprob: -8.829962730407715
    7. '>[' → logprob: -10.579962730407715
    8. ' (' → logprob: -10.829962730407715
    9. ' >' → logprob: -12.079962730407715
    10. '>(' → logprob: -12.329962730407715

Token 358: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '[' → logprob: -19.000009536743164
    4. '>' → logprob: -19.125009536743164
    5. '   ' → logprob: -19.250009536743164
    6. '۰' → logprob: -19.375009536743164
    7. '
' → logprob: -20.125009536743164
    8. '  ' → logprob: -20.187509536743164
    9. '০' → logprob: -20.625009536743164
    10. '00' → logprob: -20.937509536743164

Token 359: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.08896477520465851
    2. ' >' → logprob: -2.4639647006988525
    3. ')>' → logprob: -11.963964462280273
    4. '()>' → logprob: -12.463964462280273
    5. ')' → logprob: -12.588964462280273
    6. '">' → logprob: -12.713964462280273
    7. ']>' → logprob: -12.963964462280273
    8. ' ' → logprob: -13.463964462280273
    9. '0' → logprob: -13.838964462280273
    10. ']' → logprob: -14.088964462280273

Token 360: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.014177965931594372
    2. ' >' → logprob: -4.2641777992248535
    3. '()>' → logprob: -11.764178276062012
    4. '">' → logprob: -13.514178276062012
    5. '>
' → logprob: -13.889178276062012
    6. ')>' → logprob: -14.139178276062012
    7. '[' → logprob: -14.389178276062012
    8. ')' → logprob: -14.639178276062012
    9. '!=' → logprob: -14.764178276062012
    10. '>

' → logprob: -14.889178276062012

Token 361: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -20.875051498413086
    4. '=' → logprob: -20.875051498413086
    5. '۰' → logprob: -21.000051498413086
    6. '  ' → logprob: -21.250051498413086
    7. '
' → logprob: -22.125051498413086
    8. '(' → logprob: -22.625051498413086
    9. '1' → logprob: -22.812551498413086
    10. '2' → logprob: -22.875051498413086

Token 362: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '۰' → logprob: -20.375001907348633
    4. '   ' → logprob: -20.625001907348633
    5. '=' → logprob: -21.250001907348633
    6. ')' → logprob: -22.500001907348633
    7. '(' → logprob: -22.750001907348633
    8. '2' → logprob: -22.875001907348633
    9. '  ' → logprob: -23.000001907348633
    10. '1' → logprob: -23.125001907348633

Token 363: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.08185296505689621
    2. ':' → logprob: -2.581852912902832
    3. '   ' → logprob: -6.456852912902832
    4. '       ' → logprob: -6.706852912902832
    5. '):
' → logprob: -9.206852912902832
    6. ' :
' → logprob: -10.331852912902832
    7. ',' → logprob: -10.831852912902832
    8. ' and' → logprob: -12.706852912902832
    9. ' :' → logprob: -13.081852912902832
    10. ':

' → logprob: -13.206852912902832

Token 364: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22447514533996582
    2. '   ' → logprob: -2.224475145339966
    3. ' result' → logprob: -2.724475145339966
    4. 'result' → logprob: -3.599475145339966
    5. ',result' → logprob: -11.849474906921387
    6. '	result' → logprob: -12.474474906921387
    7. ',' → logprob: -12.974474906921387
    8. '[' → logprob: -13.349474906921387
    9. '(result' → logprob: -13.724474906921387
    10. ' ' → logprob: -13.724474906921387

Token 365: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.004202463198453188
    2. ' result' → logprob: -5.504202365875244
    3. '   ' → logprob: -9.004202842712402
    4. '       ' → logprob: -13.754202842712402
    5. '	result' → logprob: -16.379201889038086
    6. '  ' → logprob: -18.254201889038086
    7. ',result' → logprob: -19.379201889038086
    8. '(result' → logprob: -19.754201889038086
    9. ' ' → logprob: -20.129201889038086
    10. 'results' → logprob: -20.629201889038086

Token 366: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.029751529917120934
    2. '.' → logprob: -3.5297515392303467
    3. ' .' → logprob: -14.654751777648926
    4. '.app' → logprob: -15.154751777648926
    5. '.ap' → logprob: -15.904751777648926
    6. ').' → logprob: -17.02975082397461
    7. '.extend' → logprob: -17.27975082397461
    8. '].' → logprob: -17.52975082397461
    9. '.add' → logprob: -17.65475082397461
    10. '().' → logprob: -17.90475082397461

Token 367: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009934930130839348
    2. '((' → logprob: -4.759934902191162
    3. ' (' → logprob: -6.634934902191162
    4. '   ' → logprob: -12.25993537902832
    5. '(
' → logprob: -14.25993537902832
    6. '  ' → logprob: -15.38493537902832
    7. ' ' → logprob: -15.63493537902832
    8. ' ((' → logprob: -16.13493537902832
    9. '    ' → logprob: -17.75993537902832
    10. '[(' → logprob: -18.13493537902832

Token 368: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.375000953674316
    3. '(' → logprob: -16.375
    4. '   ' → logprob: -19.375
    5. '۰' → logprob: -20.625
    6. ')' → logprob: -22.25
    7. ' (' → logprob: -23.0
    8. '０' → logprob: -23.0
    9. '  ' → logprob: -23.875
    10. '00' → logprob: -24.25

Token 369: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4140441635390744e-05
    2. ' ,' → logprob: -11.500014305114746
    3. ',
' → logprob: -13.500014305114746
    4. ',int' → logprob: -13.625014305114746
    5. '‌,' → logprob: -15.250014305114746
    6. '   ' → logprob: -15.375014305114746
    7. 'interval' → logprob: -15.750014305114746
    8. '0' → logprob: -16.25001335144043
    9. ',\
' → logprob: -16.25001335144043
    10. ',{
' → logprob: -16.75001335144043

Token 370: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.0001584850688232109
    2. ' intervals' → logprob: -8.750158309936523
    3. '   ' → logprob: -17.000158309936523
    4. ' interval' → logprob: -18.625158309936523
    5. '(interval' → logprob: -18.625158309936523
    6. ' ' → logprob: -21.250158309936523
    7. 'int' → logprob: -21.250158309936523
    8. '    ' → logprob: -21.375158309936523
    9. '       ' → logprob: -21.625158309936523
    10. '  ' → logprob: -22.375158309936523

Token 371: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3782830137643032e-05
    2. '0' → logprob: -11.25001335144043
    3. ' [' → logprob: -14.62501335144043
    4. '   ' → logprob: -15.87501335144043
    5. ')[' → logprob: -16.12501335144043
    6. '][' → logprob: -16.75001335144043
    7. ' ' → logprob: -17.87501335144043
    8. '```' → logprob: -17.87501335144043
    9. '[
' → logprob: -18.00001335144043
    10. '(' → logprob: -18.00001335144043

Token 372: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. '[' → logprob: -16.250001907348633
    4. '   ' → logprob: -16.500001907348633
    5. '00' → logprob: -18.875001907348633
    6. '  ' → logprob: -19.375001907348633
    7. '
' → logprob: -19.375001907348633
    8. '```' → logprob: -19.875001907348633
    9. '-' → logprob: -21.125001907348633
    10. '000' → logprob: -21.187501907348633

Token 373: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.006007956340909004
    2. '[' → logprob: -5.131008148193359
    3. '0' → logprob: -9.63100814819336
    4. ' ][' → logprob: -12.00600814819336
    5. ']' → logprob: -12.13100814819336
    6. ')[' → logprob: -14.75600814819336
    7. '(' → logprob: -15.25600814819336
    8. '1' → logprob: -15.38100814819336
    9. '"][' → logprob: -15.63100814819336
    10. '   ' → logprob: -15.63100814819336

Token 374: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '[' → logprob: -17.75
    4. '   ' → logprob: -19.125
    5. '
' → logprob: -19.375
    6. '(' → logprob: -19.75
    7. '۰' → logprob: -19.875
    8. '00' → logprob: -20.5625
    9. '```' → logprob: -20.625
    10. ')' → logprob: -20.875

Token 375: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00025037277373485267
    2. ' ))' → logprob: -8.375250816345215
    3. '))
' → logprob: -11.375250816345215
    4. '   ' → logprob: -12.250250816345215
    5. ')' → logprob: -12.875250816345215
    6. ')))' → logprob: -14.500250816345215
    7. ' ' → logprob: -15.125250816345215
    8. '()))' → logprob: -16.0002498626709
    9. '-' → logprob: -17.0002498626709
    10. ''))' → logprob: -18.0002498626709

Token 376: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40419191122055054
    2. 'for' → logprob: -1.1541919708251953
    3. ' for' → logprob: -4.154191970825195
    4. '
' → logprob: -6.654191970825195
    5. ',' → logprob: -8.779191970825195
    6. ')' → logprob: -12.029191970825195
    7. ' ' → logprob: -12.404191970825195
    8. 'prev' → logprob: -12.529191970825195
    9. ',
' → logprob: -12.904191970825195
    10. '[' → logprob: -12.904191970825195

Token 377: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -5.2762428822461516e-05
    2. '   ' → logprob: -10.500052452087402
    3. ' for' → logprob: -11.000052452087402
    4. 'prev' → logprob: -11.750052452087402
    5. 'last' → logprob: -14.875052452087402
    6. 'end' → logprob: -16.62505340576172
    7. 'n' → logprob: -17.12505340576172
    8. '    
' → logprob: -17.37505340576172
    9. 'previous' → logprob: -17.50005340576172
    10. '	for' → logprob: -18.00005340576172

Token 378: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06196802109479904
    2. ' i' → logprob: -2.8119680881500244
    3. 'idx' → logprob: -15.436967849731445
    4. 'index' → logprob: -16.061967849731445
    5. '(i' → logprob: -17.811967849731445
    6. 'in' → logprob: -18.436967849731445
    7. '	i' → logprob: -18.811967849731445
    8. '_i' → logprob: -19.311967849731445
    9. 'prev' → logprob: -19.436967849731445
    10. ' idx' → logprob: -19.436967849731445

Token 379: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06198852136731148
    2. 'in' → logprob: -2.811988592147827
    3. ' ' → logprob: -11.311988830566406
    4. ',' → logprob: -12.186988830566406
    5. ' i' → logprob: -14.061988830566406
    6. '	in' → logprob: -14.186988830566406
    7. '   ' → logprob: -14.436988830566406
    8. '_in' → logprob: -14.561988830566406
    9. 'i' → logprob: -14.936988830566406
    10. '  ' → logprob: -15.311988830566406

Token 380: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029750484973192215
    2. ' range' → logprob: -3.5297505855560303
    3. ' ' → logprob: -17.65475082397461
    4. '	range' → logprob: -19.65475082397461
    5. '(range' → logprob: -19.77975082397461
    6. '  ' → logprob: -19.90475082397461
    7. '   ' → logprob: -20.15475082397461
    8. 'ange' → logprob: -21.90475082397461
    9. '
' → logprob: -22.02975082397461
    10. ' xrange' → logprob: -22.15475082397461

Token 381: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.04859725013375282
    2. '(' → logprob: -3.0485973358154297
    3. 'len' → logprob: -11.54859733581543
    4. ' len' → logprob: -15.92359733581543
    5. '1' → logprob: -16.29859733581543
    6. ' (' → logprob: -17.29859733581543
    7. '   ' → logprob: -20.17359733581543
    8. ',len' → logprob: -20.17359733581543
    9. '[len' → logprob: -20.54859733581543
    10. ' ' → logprob: -21.29859733581543

Token 382: '(interval' (ID: 100435)
  Prédit: '(interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(interval' → logprob: -2.7610454708337784e-05
    2. 'interval' → logprob: -10.500027656555176
    3. '(' → logprob: -18.25002670288086
    4. ' intervals' → logprob: -19.75002670288086
    5. '(in' → logprob: -20.12502670288086
    6. '1' → logprob: -20.25002670288086
    7. '-' → logprob: -21.12502670288086
    8. ' (' → logprob: -21.50002670288086
    9. '   ' → logprob: -22.37502670288086
    10. '(indices' → logprob: -22.87502670288086

Token 383: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.011486080475151539
    2. 'als' → logprob: -5.261486053466797
    3. '-' → logprob: -5.386486053466797
    4. '(interval' → logprob: -6.636486053466797
    5. 'vals' → logprob: -9.386486053466797
    6. '(' → logprob: -9.386486053466797
    7. '1' → logprob: -10.386486053466797
    8. 'interval' → logprob: -10.511486053466797
    9. '[' → logprob: -10.761486053466797
    10. ')' → logprob: -10.886486053466797

Token 384: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0344393327832222
    2. '-' → logprob: -4.284439563751221
    3. ')-' → logprob: -4.284439563751221
    4. ' -' → logprob: -5.659439563751221
    5. '   ' → logprob: -6.284439563751221
    6. '(' → logprob: -7.784439563751221
    7. ' ' → logprob: -8.659439086914062
    8. '()' → logprob: -8.909439086914062
    9. '1' → logprob: -9.659439086914062
    10. ']' → logprob: -10.284439086914062

Token 385: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -19.0
    4. '2' → logprob: -20.75
    5. ')' → logprob: -20.875
    6. '```' → logprob: -21.0625
    7. '0' → logprob: -21.125
    8. 'def' → logprob: -21.1875
    9. '  ' → logprob: -21.3125
    10. '-' → logprob: -21.375

Token 386: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6936564445495605
    2. '):' → logprob: -0.6936564445495605
    3. '):
' → logprob: -8.318656921386719
    4. ':' → logprob: -8.943656921386719
    5. ' ):' → logprob: -9.693656921386719
    6. ' ):
' → logprob: -9.943656921386719
    7. '   ' → logprob: -11.568656921386719
    8. '():
' → logprob: -12.193656921386719
    9. '1' → logprob: -13.443656921386719
    10. ')' → logprob: -13.693656921386719

Token 387: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004460428317543119
    2. ' result' → logprob: -8.500446319580078
    3. '   ' → logprob: -8.750446319580078
    4. 'result' → logprob: -9.500446319580078
    5. '
' → logprob: -12.750446319580078
    6. ',' → logprob: -13.125446319580078
    7. '    ' → logprob: -13.875446319580078
    8. '	   ' → logprob: -13.875446319580078
    9. '        
' → logprob: -14.500446319580078
    10. '	result' → logprob: -15.000446319580078

Token 388: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.5863816142082214
    2. 'result' (adapté à ' result') → logprob: -0.8363816142082214
    3. '   ' → logprob: -4.586381435394287
    4. '       ' → logprob: -8.711381912231445
    5. '	result' → logprob: -10.836381912231445
    6. '    
' → logprob: -13.086381912231445
    7. ' ' → logprob: -13.336381912231445
    8. 'end' → logprob: -13.336381912231445
    9. '    ' → logprob: -13.461381912231445
    10. '
' → logprob: -13.711381912231445

Token 389: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011511300690472126
    2. '
' → logprob: -5.386511325836182
    3. 'append' → logprob: -5.886511325836182
    4. '.' → logprob: -6.261511325836182
    5. '   ' → logprob: -7.136511325836182
    6. '_append' → logprob: -8.136510848999023
    7. '+' → logprob: -8.261510848999023
    8. ').' → logprob: -8.511510848999023
    9. ',' → logprob: -9.136510848999023
    10. '].' → logprob: -9.261510848999023

Token 390: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0019402962643653154
    2. '(' → logprob: -6.2519402503967285
    3. '(interval' → logprob: -11.501940727233887
    4. '(
' → logprob: -13.376940727233887
    5. '   ' → logprob: -18.50193977355957
    6. '(("' → logprob: -18.75193977355957
    7. '("' → logprob: -19.12693977355957
    8. ' ((' → logprob: -19.12693977355957
    9. '(
' → logprob: -19.25193977355957
    10. '(('' → logprob: -19.37693977355957

Token 391: 'interval' (ID: 37558)
  Prédit: 'interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.0007854487630538642
    2. ' intervals' → logprob: -7.3757853507995605
    3. '(interval' → logprob: -8.750785827636719
    4. '   ' → logprob: -14.750785827636719
    5. ')' → logprob: -16.62578582763672
    6. ' (' → logprob: -16.75078582763672
    7. ' interval' → logprob: -18.00078582763672
    8. 'Intervals' → logprob: -18.37578582763672
    9. '(' → logprob: -18.87578582763672
    10. ' ' → logprob: -19.25078582763672

Token 392: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2338731437921524
    2. 'als' → logprob: -1.6088731288909912
    3. '[' → logprob: -5.73387336730957
    4. 'vals' → logprob: -5.73387336730957
    5. 'val' → logprob: -7.35887336730957
    6. 'al' → logprob: -7.48387336730957
    7. '
' → logprob: -9.10887336730957
    8. '[i' → logprob: -9.60887336730957
    9. '   ' → logprob: -9.60887336730957
    10. 'ls' → logprob: -9.73387336730957

Token 393: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000396826391806826
    2. '][' → logprob: -8.375396728515625
    3. ')[' → logprob: -8.875396728515625
    4. 'i' → logprob: -11.750396728515625
    5. ' [' → logprob: -12.125396728515625
    6. '[' → logprob: -12.250396728515625
    7. '   ' → logprob: -12.625396728515625
    8. '
' → logprob: -12.875396728515625
    9. ' ' → logprob: -14.750396728515625
    10. ' )[' → logprob: -14.875396728515625

Token 394: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.000556012790184468
    2. '1' → logprob: -7.625555992126465
    3. '[' → logprob: -10.250555992126465
    4. ']' → logprob: -11.125555992126465
    5. '   ' → logprob: -11.875555992126465
    6. ' ][' → logprob: -12.500555992126465
    7. ')[' → logprob: -12.750555992126465
    8. '"][' → logprob: -12.875555992126465
    9. ''][' → logprob: -14.250555992126465
    10. ' ' → logprob: -15.125555992126465

Token 395: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.75
    3. '
' → logprob: -16.5
    4. '   ' → logprob: -17.75
    5. '][' → logprob: -19.875
    6. '```' → logprob: -20.0
    7. '	' → logprob: -20.375
    8. '  ' → logprob: -20.5
    9. '[' → logprob: -20.75
    10. '...' → logprob: -20.875

Token 396: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010356683051213622
    2. ' ,' → logprob: -6.876035690307617
    3. '),' → logprob: -13.751035690307617
    4. '   ' → logprob: -14.376035690307617
    5. ',
' → logprob: -14.501035690307617
    6. '‌,' → logprob: -15.876035690307617
    7. ' ' → logprob: -16.126035690307617
    8. '       ' → logprob: -16.501035690307617
    9. ',i' → logprob: -16.751035690307617
    10. ')' → logprob: -17.001035690307617

Token 397: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.0015024791937321424
    2. ' intervals' → logprob: -6.501502513885498
    3. '(interval' → logprob: -16.126502990722656
    4. ' interval' → logprob: -17.626502990722656
    5. '   ' → logprob: -17.876502990722656
    6. '       ' → logprob: -19.126502990722656
    7. '    ' → logprob: -19.251502990722656
    8. 'int' → logprob: -19.501502990722656
    9. ' ' → logprob: -20.501502990722656
    10. '           ' → logprob: -20.751502990722656

Token 398: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.008650499396026134
    2. '+' → logprob: -4.758650302886963
    3. '[' → logprob: -10.758650779724121
    4. ' [' → logprob: -12.258650779724121
    5. '
' → logprob: -13.133650779724121
    6. '[
' → logprob: -13.133650779724121
    7. '```' → logprob: -13.508650779724121
    8. 'i' → logprob: -13.758650779724121
    9. ' +' → logprob: -14.383650779724121
    10. '1' → logprob: -14.383650779724121

Token 399: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.179569077678025e-05
    2. ' +' → logprob: -10.125041961669922
    3. '][' → logprob: -13.875041961669922
    4. '+i' → logprob: -14.750041961669922
    5. '1' → logprob: -15.625041961669922
    6. '[' → logprob: -16.875041961669922
    7. '   ' → logprob: -16.875041961669922
    8. '+[' → logprob: -17.250041961669922
    9. '＋' → logprob: -17.625041961669922
    10. '+
' → logprob: -18.000041961669922

Token 400: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1270957738161087
    2. '0' → logprob: -2.1270956993103027
    3. ' ' → logprob: -9.127096176147461
    4. '   ' → logprob: -10.627096176147461
    5. '][' → logprob: -10.752096176147461
    6. 'i' → logprob: -13.002096176147461
    7. '[' → logprob: -13.127096176147461
    8. '  ' → logprob: -13.627096176147461
    9. '```' → logprob: -13.627096176147461
    10. ']' → logprob: -14.002096176147461

Token 401: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006035494152456522
    2. '[' → logprob: -7.500603675842285
    3. ')[' → logprob: -10.625603675842285
    4. '0' → logprob: -11.375603675842285
    5. ' ][' → logprob: -11.500603675842285
    6. ']' → logprob: -13.125603675842285
    7. '   ' → logprob: -14.375603675842285
    8. '(' → logprob: -14.375603675842285
    9. '"][' → logprob: -14.750603675842285
    10. ''][' → logprob: -15.250603675842285

Token 402: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '[' → logprob: -17.375
    4. '۰' → logprob: -18.75
    5. '   ' → logprob: -19.0
    6. '][' → logprob: -19.125
    7. ')' → logprob: -19.625
    8. '
' → logprob: -19.875
    9. ']' → logprob: -20.4375
    10. '  ' → logprob: -20.875

Token 403: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0006191504653543234
    2. '))
' → logprob: -7.500618934631348
    3. '   ' → logprob: -10.125618934631348
    4. ' ))' → logprob: -10.750618934631348
    5. ')' → logprob: -12.625618934631348
    6. '       ' → logprob: -14.625618934631348
    7. ')))' → logprob: -14.750618934631348
    8. '()))' → logprob: -15.250618934631348
    9. ' ' → logprob: -15.625618934631348
    10. '))
' → logprob: -16.625619888305664

Token 404: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0434006042778492
    2. ' if' → logprob: -3.793400526046753
    3. 'if' → logprob: -3.918400526046753
    4. '
' → logprob: -10.168400764465332
    5. '	if' → logprob: -10.668400764465332
    6. 'for' → logprob: -11.418400764465332
    7. ' for' → logprob: -12.668400764465332
    8. '```' → logprob: -13.293400764465332
    9. '    
' → logprob: -13.418400764465332
    10. ' ' → logprob: -14.418400764465332

Token 405: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05616459995508194
    2. ' if' → logprob: -3.306164503097534
    3. 'last' → logprob: -4.056164741516113
    4. '   ' → logprob: -7.931164741516113
    5. ' last' → logprob: -8.306164741516113
    6. 'end' → logprob: -10.306164741516113
    7. '	if' → logprob: -13.056164741516113
    8. ' end' → logprob: -14.056164741516113
    9. '
' → logprob: -14.306164741516113
    10. '	last' → logprob: -14.931164741516113

Token 406: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.029755808413028717
    2. ' intervals' → logprob: -3.5297558307647705
    3. '(interval' → logprob: -12.529755592346191
    4. ' interval' → logprob: -13.779755592346191
    5. '   ' → logprob: -15.154755592346191
    6. ' ' → logprob: -15.279755592346191
    7. '2' → logprob: -16.654756546020508
    8. '  ' → logprob: -17.154756546020508
    9. 'int' → logprob: -17.529756546020508
    10. '	' → logprob: -17.779756546020508

Token 407: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.759734732331708e-05
    2. '[' → logprob: -12.125017166137695
    3. ' [-' → logprob: -12.250017166137695
    4. '
' → logprob: -12.500017166137695
    5. '   ' → logprob: -13.000017166137695
    6. '][-' → logprob: -14.375017166137695
    7. ' ' → logprob: -15.625017166137695
    8. '    ' → logprob: -15.750017166137695
    9. '[i' → logprob: -16.125017166137695
    10. '[
' → logprob: -16.250017166137695

Token 408: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.87500286102295
    3. ' ' → logprob: -13.87500286102295
    4. '
' → logprob: -16.000001907348633
    5. '-' → logprob: -16.375001907348633
    6. '][' → logprob: -16.500001907348633
    7. '[' → logprob: -16.750001907348633
    8. '0' → logprob: -16.750001907348633
    9. '   ' → logprob: -17.875001907348633
    10. '{' → logprob: -18.500001907348633

Token 409: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008712430484592915
    2. '][' → logprob: -5.258712291717529
    3. ')[' → logprob: -5.758712291717529
    4. '1' → logprob: -8.508712768554688
    5. ' [' → logprob: -10.633712768554688
    6. ')' → logprob: -11.008712768554688
    7. '()[' → logprob: -11.133712768554688
    8. ' )[' → logprob: -11.258712768554688
    9. '>[' → logprob: -11.258712768554688
    10. '(' → logprob: -12.258712768554688

Token 410: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.375000953674316
    3. '
' → logprob: -16.25
    4. '   ' → logprob: -17.375
    5. '۱' → logprob: -18.125
    6. ']' → logprob: -18.375
    7. '[' → logprob: -19.125
    8. '  ' → logprob: -19.25
    9. '

' → logprob: -19.375
    10. '0' → logprob: -19.5

Token 411: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3487451672554016
    2. ' <' → logprob: -1.2237451076507568
    3. ')' → logprob: -8.473745346069336
    4. ')<' → logprob: -9.473745346069336
    5. '()<' → logprob: -12.473745346069336
    6. '<|end|>' → logprob: -12.598745346069336
    7. ']' → logprob: -12.973745346069336
    8. ']<' → logprob: -13.473745346069336
    9. ' ' → logprob: -13.598745346069336
    10. '[' → logprob: -14.348745346069336

Token 412: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0028115289751440287
    2. ' <' → logprob: -5.877811431884766
    3. ')<' → logprob: -12.627811431884766
    4. ')' → logprob: -13.252811431884766
    5. '()<' → logprob: -14.627811431884766
    6. '<|end|>' → logprob: -15.002811431884766
    7. ',' → logprob: -15.377811431884766
    8. '<
' → logprob: -16.127811431884766
    9. '}<' → logprob: -16.252811431884766
    10. ' ' → logprob: -16.752811431884766

Token 413: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02975141443312168
    2. ' ' → logprob: -3.5297513008117676
    3. '   ' → logprob: -13.904751777648926
    4. '(' → logprob: -17.40475082397461
    5. '  ' → logprob: -18.02975082397461
    6. '    ' → logprob: -19.65475082397461
    7. '6' → logprob: -19.77975082397461
    8. ' (' → logprob: -20.40475082397461
    9. 'math' → logprob: -20.52975082397461
    10. ' ' → logprob: -21.40475082397461

Token 414: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -17.00006675720215
    4. '(' → logprob: -18.62506675720215
    5. '  ' → logprob: -20.62506675720215
    6. '6' → logprob: -20.75006675720215
    7. '
' → logprob: -22.50006675720215
    8. '```' → logprob: -22.62506675720215
    9. '`' → logprob: -22.75006675720215
    10. '    ' → logprob: -23.37506675720215

Token 415: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.25192955136299133
    2. '*' → logprob: -1.501929521560669
    3. '*Math' → logprob: -15.12692928314209
    4. '*pi' → logprob: -16.501930236816406
    5. ' ' → logprob: -16.626930236816406
    6. '*object' → logprob: -17.626930236816406
    7. ' math' → logprob: -18.001930236816406
    8. '   ' → logprob: -18.501930236816406
    9. 'import' → logprob: -18.626930236816406
    10. ' ' → logprob: -18.876930236816406

Token 416: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.16022412478923798
    2. ' math' → logprob: -1.9102240800857544
    3. '(math' → logprob: -17.28522491455078
    4. ' ' → logprob: -19.91022491455078
    5. '.math' → logprob: -19.91022491455078
    6. 'Math' → logprob: -20.41022491455078
    7. 'mat' → logprob: -20.53522491455078
    8. '_math' → logprob: -20.78522491455078
    9. 'python' → logprob: -21.16022491455078
    10. '   ' → logprob: -21.53522491455078

Token 417: '.pi' (ID: 55497)
  Prédit: '.pi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pi' → logprob: -0.0001817297888919711
    2. '.' → logprob: -8.625182151794434
    3. 'pi' → logprob: -13.625182151794434
    4. '.py' → logprob: -14.750182151794434
    5. '.PI' → logprob: -15.500182151794434
    6. '.p' → logprob: -16.000181198120117
    7. '*pi' → logprob: -16.875181198120117
    8. '\.' → logprob: -17.250181198120117
    9. '.atan' → logprob: -17.250181198120117
    10. '.psi' → logprob: -17.500181198120117

Token 418: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28356295824050903
    2. ':
' → logprob: -1.4085628986358643
    3. ' :
' → logprob: -6.783563137054443
    4. ' :' → logprob: -7.533563137054443
    5. '   ' → logprob: -8.283562660217285
    6. '):
' → logprob: -8.533562660217285
    7. '       ' → logprob: -8.908562660217285
    8. '):' → logprob: -9.408562660217285
    9. ':
' → logprob: -10.158562660217285
    10. ')' → logprob: -11.283562660217285

Token 419: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014287306112237275
    2. ' result' → logprob: -9.625143051147461
    3. '   ' → logprob: -9.625143051147461
    4. 'result' → logprob: -11.500143051147461
    5. '      ' → logprob: -16.00014305114746
    6. '     ' → logprob: -16.12514305114746
    7. '    ' → logprob: -16.37514305114746
    8. '	   ' → logprob: -16.50014305114746
    9. '           ' → logprob: -16.62514305114746
    10. '	' → logprob: -16.87514305114746

Token 420: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.048634033650159836
    2. ' result' → logprob: -3.0486340522766113
    3. '       ' → logprob: -10.298633575439453
    4. '   ' → logprob: -11.298633575439453
    5. '	result' → logprob: -14.423633575439453
    6. 'results' → logprob: -18.173633575439453
    7. ',result' → logprob: -18.548633575439453
    8. '    ' → logprob: -18.548633575439453
    9. '_result' → logprob: -19.048633575439453
    10. '  ' → logprob: -19.173633575439453

Token 421: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000912774819880724
    2. '.' → logprob: -7.000912666320801
    3. 'append' → logprob: -13.8759126663208
    4. '.app' → logprob: -16.250913619995117
    5. '.Append' → logprob: -16.750913619995117
    6. '.extend' → logprob: -17.125913619995117
    7. '.add' → logprob: -17.625913619995117
    8. ' .' → logprob: -17.875913619995117
    9. ').' → logprob: -18.750913619995117
    10. '.ap' → logprob: -19.125913619995117

Token 422: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00015908108616713434
    2. '(' → logprob: -8.75015926361084
    3. '(interval' → logprob: -14.87515926361084
    4. '(
' → logprob: -15.87515926361084
    5. ' ((' → logprob: -16.750158309936523
    6. '   ' → logprob: -17.625158309936523
    7. ' (' → logprob: -17.750158309936523
    8. ' ' → logprob: -17.875158309936523
    9. '(((' → logprob: -18.500158309936523
    10. '(("' → logprob: -19.000158309936523

Token 423: 'interval' (ID: 37558)
  Prédit: 'interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -1.5094070477061905e-05
    2. ' intervals' → logprob: -11.125015258789062
    3. '(interval' → logprob: -15.250015258789062
    4. '   ' → logprob: -18.250015258789062
    5. ' interval' → logprob: -20.000015258789062
    6. '	' → logprob: -20.625015258789062
    7. ' ' → logprob: -21.125015258789062
    8. 'int' → logprob: -21.375015258789062
    9. '
' → logprob: -21.500015258789062
    10. 'interrupt' → logprob: -21.750015258789062

Token 424: 's' (ID: 82)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.17113298177719116
    2. 's' → logprob: -2.046133041381836
    3. 'als' → logprob: -3.921133041381836
    4. '-' → logprob: -5.421133041381836
    5. 'vals' → logprob: -6.296133041381836
    6. '[' → logprob: -6.921133041381836
    7. '(-' → logprob: -7.171133041381836
    8. ',' → logprob: -9.796133041381836
    9. '(' → logprob: -10.296133041381836
    10. 'ts' → logprob: -10.921133041381836

Token 425: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.4617256056226324e-05
    2. '-' → logprob: -11.625014305114746
    3. '[' → logprob: -12.625014305114746
    4. '][-' → logprob: -13.625014305114746
    5. '1' → logprob: -14.375014305114746
    6. '
' → logprob: -15.000014305114746
    7. ']' → logprob: -16.375015258789062
    8. '[i' → logprob: -17.000015258789062
    9. '[
' → logprob: -17.250015258789062
    10. '(-' → logprob: -18.125015258789062

Token 426: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '-' → logprob: -16.375
    3. ' ' → logprob: -16.5
    4. ']' → logprob: -17.375
    5. '
' → logprob: -17.75
    6. '2' → logprob: -17.875
    7. '4' → logprob: -18.5625
    8. '```' → logprob: -19.0
    9. '   ' → logprob: -19.125
    10. '0' → logprob: -19.1875

Token 427: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6937757730484009
    2. '][' → logprob: -0.6937757730484009
    3. ')[' → logprob: -7.443775653839111
    4. '1' → logprob: -11.31877613067627
    5. ']' → logprob: -11.81877613067627
    6. ' ][' → logprob: -11.81877613067627
    7. ' [' → logprob: -12.94377613067627
    8. '"][' → logprob: -13.06877613067627
    9. '   ' → logprob: -13.06877613067627
    10. '()[' → logprob: -13.44377613067627

Token 428: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. '
' → logprob: -15.75001049041748
    4. '   ' → logprob: -16.000009536743164
    5. ']' → logprob: -18.000009536743164
    6. '  ' → logprob: -18.625009536743164
    7. '0' → logprob: -18.625009536743164
    8. '```' → logprob: -18.875009536743164
    9. ')' → logprob: -19.250009536743164
    10. '	' → logprob: -19.500009536743164

Token 429: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -2.47495681833243e-05
    2. ' ,' → logprob: -10.625024795532227
    3. ',
' → logprob: -15.250024795532227
    4. '),' → logprob: -16.250024795532227
    5. '‌,' → logprob: -17.750024795532227
    6. ')' → logprob: -18.000024795532227
    7. ',

' → logprob: -19.250024795532227
    8. '   ' → logprob: -19.625024795532227
    9. ' ' → logprob: -19.875024795532227
    10. '(),' → logprob: -20.500024795532227

Token 430: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.018150296062231064
    2. ' ' → logprob: -4.018150329589844
    3. '   ' → logprob: -15.268150329589844
    4. '  ' → logprob: -16.893150329589844
    5. '(' → logprob: -17.893150329589844
    6. '    ' → logprob: -18.393150329589844
    7. ' ' → logprob: -19.768150329589844
    8. ' (' → logprob: -20.393150329589844
    9. '
' → logprob: -20.768150329589844
    10. '     ' → logprob: -21.018150329589844

Token 431: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.518582762917504e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -15.50008487701416
    4. '  ' → logprob: -17.875085830688477
    5. '(' → logprob: -19.000085830688477
    6. '    ' → logprob: -20.250085830688477
    7. '       ' → logprob: -21.250085830688477
    8. '     ' → logprob: -21.250085830688477
    9. '
' → logprob: -21.750085830688477
    10. '```' → logprob: -21.875085830688477

Token 432: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.31326404213905334
    2. '*' → logprob: -1.313264012336731
    3. '*Math' → logprob: -13.813263893127441
    4. ' ' → logprob: -14.063263893127441
    5. '*pi' → logprob: -15.188263893127441
    6. ' ' → logprob: -15.438263893127441
    7. '*object' → logprob: -16.813264846801758
    8. '.' → logprob: -17.313264846801758
    9. '**' → logprob: -17.688264846801758
    10. '*np' → logprob: -18.313264846801758

Token 433: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.2519296407699585
    2. ' math' → logprob: -1.5019296407699585
    3. '(math' → logprob: -15.25192928314209
    4. '.math' → logprob: -16.001930236816406
    5. '_math' → logprob: -17.001930236816406
    6. 'python' → logprob: -17.751930236816406
    7. ' ' → logprob: -18.126930236816406
    8. 'Math' → logprob: -18.876930236816406
    9. 'mat' → logprob: -19.126930236816406
    10. '*' → logprob: -19.126930236816406

Token 434: '.pi' (ID: 55497)
  Prédit: '.pi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pi' → logprob: -6.778209353797138e-05
    2. '.' → logprob: -9.625067710876465
    3. '.py' → logprob: -13.875067710876465
    4. '.p' → logprob: -15.625067710876465
    5. '.PI' → logprob: -16.00006866455078
    6. 'pi' → logprob: -16.00006866455078
    7. '*pi' → logprob: -16.75006866455078
    8. '.atan' → logprob: -16.75006866455078
    9. '.psi' → logprob: -16.87506866455078
    10. ').' → logprob: -16.87506866455078

Token 435: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0017915592761710286
    2. ')' → logprob: -6.501791477203369
    3. '))
' → logprob: -8.251791954040527
    4. '   ' → logprob: -10.626791954040527
    5. ' ))' → logprob: -12.751791954040527
    6. ')
' → logprob: -14.001791954040527
    7. ')))' → logprob: -15.251791954040527
    8. ' ' → logprob: -16.62679100036621
    9. '))

' → logprob: -16.75179100036621
    10. ' )' → logprob: -17.12679100036621

Token 436: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015545538626611233
    2. 'return' → logprob: -4.51554536819458
    3. ' return' → logprob: -5.51554536819458
    4. '	return' → logprob: -8.140545845031738
    5. '
' → logprob: -8.890545845031738
    6. '    
' → logprob: -11.015545845031738
    7. ':return' → logprob: -11.265545845031738
    8. ')return' → logprob: -14.765545845031738
    9. 'eturn' → logprob: -14.765545845031738
    10. ' ' → logprob: -14.765545845031738

Token 437: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13054805994033813
    2. 'return' (adapté à ' return') → logprob: -2.1305480003356934
    3. ' return' → logprob: -5.630548000335693
    4. '	return' → logprob: -10.630548477172852
    5. '    
' → logprob: -13.755548477172852
    6. ':return' → logprob: -13.880548477172852
    7. '
' → logprob: -14.630548477172852
    8. '       ' → logprob: -16.25554847717285
    9. ' ' → logprob: -16.88054847717285
    10. '{return' → logprob: -17.13054847717285

Token 438: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.01814994215965271
    2. ' result' → logprob: -4.0181498527526855
    3. '(result' → logprob: -20.393150329589844
    4. '[result' → logprob: -20.518150329589844
    5. '	result' → logprob: -22.518150329589844
    6. 'results' → logprob: -23.893150329589844
    7. '=result' → logprob: -24.268150329589844
    8. '   ' → logprob: -24.268150329589844
    9. '$result' → logprob: -24.518150329589844
    10. '_result' → logprob: -24.643150329589844

Token 439: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006691903108730912
    2. '

' → logprob: -8.250669479370117
    3. '<|end|>' → logprob: -8.375669479370117
    4. '
' → logprob: -9.000669479370117
    5. ' def' → logprob: -11.000669479370117
    6. 'import' → logprob: -11.750669479370117
    7. '(' → logprob: -11.875669479370117
    8. '```' → logprob: -12.125669479370117
    9. '\' → logprob: -12.750669479370117
    10. '<|end|>' → logprob: -13.125669479370117

Token 440: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.110668618930504e-05
    2. 'class' → logprob: -10.50006103515625
    3. '```' → logprob: -11.25006103515625
    4. ' def' → logprob: -12.37506103515625
    5. 'import' → logprob: -12.75006103515625
    6. '\' → logprob: -12.75006103515625
    7. '
' → logprob: -13.12506103515625
    8. '

' → logprob: -13.12506103515625
    9. '(def' → logprob: -13.25006103515625
    10. '(' → logprob: -13.37506103515625

Token 441: ' main' (ID: 2758)
  Prédit: 'visible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visible' → logprob: -1.2816576957702637
    2. ' visible' → logprob: -1.6566576957702637
    3. 'compute' → logprob: -2.4066576957702637
    4. ' find' → logprob: -2.5316576957702637
    5. 'find' → logprob: -2.5316576957702637
    6. 'get' → logprob: -2.6566576957702637
    7. ' get' → logprob: -3.2816576957702637
    8. 'calculate' → logprob: -3.5316576957702637
    9. 'circle' → logprob: -3.6566576957702637
    10. 'blocked' → logprob: -4.156657695770264

Token 442: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0001254693343071267
    2. ' ():' → logprob: -9.375125885009766
    3. '():
' → logprob: -10.375125885009766
    4. '(' → logprob: -12.250125885009766
    5. '()' → logprob: -12.375125885009766
    6. '_' → logprob: -15.250125885009766
    7. '():
' → logprob: -16.250125885009766
    8. '(args' → logprob: -17.125125885009766
    9. '(:' → logprob: -17.125125885009766
    10. 'def' → logprob: -17.750125885009766

Token 443: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3478749990463257
    2. ' R' → logprob: -1.5978749990463257
    3. ' import' → logprob: -3.3478751182556152
    4. ' r' → logprob: -4.722875118255615
    5. 'import' → logprob: -4.847875118255615
    6. 'R' → logprob: -5.097875118255615
    7. ' radius' → logprob: -5.097875118255615
    8. ' visible' → logprob: -5.222875118255615
    9. ' circle' → logprob: -5.972875118255615
    10. ' n' → logprob: -5.972875118255615

Token 444: ' while' (ID: 2049)
  Prédit: ' R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' R' → logprob: -1.0136445760726929
    2. ' n' → logprob: -1.5136445760726929
    3. '   ' → logprob: -2.0136446952819824
    4. 'n' → logprob: -2.5136446952819824
    5. ' r' → logprob: -3.1386446952819824
    6. 'R' → logprob: -3.2636446952819824
    7. ' import' → logprob: -3.5136446952819824
    8. ' radius' → logprob: -3.5136446952819824
    9. 'r' → logprob: -4.263644695281982
    10. ' N' → logprob: -4.388644695281982

Token 445: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.026398995891213417
    2. 'True' → logprob: -3.6513988971710205
    3. '(True' → logprob: -9.276398658752441
    4. '=True' → logprob: -12.776398658752441
    5. '1' → logprob: -13.901398658752441
    6. ' ' → logprob: -14.526398658752441
    7. ' Tru' → logprob: -14.776398658752441
    8. '_true' → logprob: -15.776398658752441
    9. ' ' → logprob: -15.901398658752441
    10. ' input' → logprob: -17.026399612426758

Token 446: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.025428004562854767
    2. '():' → logprob: -3.900428056716919
    3. ':
' → logprob: -5.65042781829834
    4. '():
' → logprob: -7.77542781829834
    5. ' :' → logprob: -8.15042781829834
    6. '   ' → logprob: -8.52542781829834
    7. ',' → logprob: -8.65042781829834
    8. '):' → logprob: -9.15042781829834
    9. '       ' → logprob: -9.27542781829834
    10. '(' → logprob: -10.27542781829834

Token 447: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00266055460087955
    2. ' try' → logprob: -6.377660751342773
    3. ' line' → logprob: -7.877660751342773
    4. 'try' → logprob: -8.252660751342773
    5. '   ' → logprob: -8.502660751342773
    6. ' user' → logprob: -9.502660751342773
    7. 'user' → logprob: -11.502660751342773
    8. ' input' → logprob: -12.377660751342773
    9. 'line' → logprob: -12.502660751342773
    10. 'n' → logprob: -12.502660751342773

Token 448: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.34749484062194824
    2. ' try' → logprob: -1.9724948406219482
    3. 'line' → logprob: -2.3474948406219482
    4. '   ' → logprob: -3.3474948406219482
    5. 'try' → logprob: -3.8474948406219482
    6. 'n' (adapté à ' n') → logprob: -7.097495079040527
    7. ' n' → logprob: -7.347495079040527
    8. ' inp' → logprob: -7.847495079040527
    9. 'l' → logprob: -9.472495079040527
    10. 's' → logprob: -9.597495079040527

Token 449: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31332331895828247
    2. '=' → logprob: -1.3133232593536377
    3. ',' → logprob: -10.563323020935059
    4. '=int' → logprob: -11.313323020935059
    5. ' =
' → logprob: -11.438323020935059
    6. '=input' → logprob: -11.938323020935059
    7. '=
' → logprob: -13.063323020935059
    8. ' ' → logprob: -13.313323020935059
    9. 'space' → logprob: -14.813323020935059
    10. ' ,' → logprob: -15.063323020935059

Token 450: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.25291526317596436
    2. ' int' → logprob: -1.5029152631759644
    3. ' input' → logprob: -7.502915382385254
    4. 'input' → logprob: -7.752915382385254
    5. '=int' → logprob: -13.627915382385254
    6. ' ' → logprob: -14.002915382385254
    7. ' n' → logprob: -14.127915382385254
    8. ' 
' → logprob: -15.127915382385254
    9. 'len' → logprob: -15.252915382385254
    10. '   ' → logprob: -15.502915382385254

Token 451: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0009874384850263596
    2. '(' → logprob: -7.500987529754639
    3. 'input' → logprob: -7.750987529754639
    4. '()' → logprob: -12.75098705291748
    5. ' input' → logprob: -14.25098705291748
    6. '=input' → logprob: -15.62598705291748
    7. '(
' → logprob: -15.62598705291748
    8. ' (' → logprob: -16.125988006591797
    9. '(in' → logprob: -18.250988006591797
    10. '(

' → logprob: -18.625988006591797

Token 452: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0789937749505043
    2. '()' → logprob: -2.578993797302246
    3. '().' → logprob: -9.953993797302246
    4. '(' → logprob: -10.453993797302246
    5. ' ())' → logprob: -11.203993797302246
    6. '()>' → logprob: -12.203993797302246
    7. '())
' → logprob: -13.078993797302246
    8. '("' → logprob: -13.953993797302246
    9. '('' → logprob: -14.078993797302246
    10. ' ()' → logprob: -14.203993797302246

Token 453: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0076242536306381226
    2. ' if' → logprob: -5.25762414932251
    3. 'if' → logprob: -6.25762414932251
    4. '   ' → logprob: -7.75762414932251
    5. ' ' → logprob: -11.007624626159668
    6. '	if' → logprob: -11.132624626159668
    7. '<|end|>' → logprob: -12.132624626159668
    8. '	' → logprob: -12.382624626159668
    9. '        
' → logprob: -14.507624626159668
    10. '           ' → logprob: -14.757624626159668

Token 454: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.18414801359176636
    2. ' if' → logprob: -1.8091480731964111
    3. '       ' → logprob: -5.434147834777832
    4. '	if' → logprob: -10.934147834777832
    5. 'r' → logprob: -12.684147834777832
    6. '   ' → logprob: -13.184147834777832
    7. '[' → logprob: -13.809147834777832
    8. 'i' → logprob: -14.309147834777832
    9. 'points' → logprob: -14.434147834777832
    10. 'break' → logprob: -14.559147834777832

Token 455: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.02975245751440525
    2. 'n' → logprob: -3.529752492904663
    3. ' not' → logprob: -13.279752731323242
    4. '	n' → logprob: -15.279752731323242
    5. ' ' → logprob: -18.279752731323242
    6. ' ' → logprob: -18.404752731323242
    7. 'n't' → logprob: -19.529752731323242
    8. 'not' → logprob: -19.904752731323242
    9. '_n' → logprob: -20.404752731323242
    10. ' н' → logprob: -20.529752731323242

Token 456: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6955224275588989
    2. ' ==' → logprob: -0.6955224275588989
    3. '<=' → logprob: -6.195522308349609
    4. ' <=' → logprob: -8.07052230834961
    5. '=' → logprob: -11.19552230834961
    6. ' ' → logprob: -12.94552230834961
    7. ')==' → logprob: -13.82052230834961
    8. '===' → logprob: -14.07052230834961
    9. '()==' → logprob: -14.32052230834961
    10. ')' → logprob: -14.44552230834961

Token 457: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024756586644798517
    2. ' ' → logprob: -6.002475738525391
    3. ' ' → logprob: -19.00247573852539
    4. '   ' → logprob: -19.62747573852539
    5. '  ' → logprob: -19.87747573852539
    6. '-' → logprob: -20.37747573852539
    7. '=' → logprob: -20.50247573852539
    8. ' -' → logprob: -20.62747573852539
    9. '۰' → logprob: -21.25247573852539
    10. '```' → logprob: -22.00247573852539

Token 458: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4259644558478612e-05
    2. ' ' → logprob: -11.250014305114746
    3. '-' → logprob: -13.625014305114746
    4. ' -' → logprob: -19.75001335144043
    5. '=' → logprob: -21.87501335144043
    6. '   ' → logprob: -21.87501335144043
    7. '  ' → logprob: -22.62501335144043
    8. '```' → logprob: -22.62501335144043
    9. '
' → logprob: -23.37501335144043
    10. ')' → logprob: -23.50001335144043

Token 459: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2262495905160904
    2. ':
' → logprob: -1.6012495756149292
    3. '       ' → logprob: -7.601249694824219
    4. '           ' → logprob: -8.101249694824219
    5. '   ' → logprob: -11.101249694824219
    6. ':return' → logprob: -11.726249694824219
    7. ':
' → logprob: -12.976249694824219
    8. '):
' → logprob: -13.476249694824219
    9. ' :
' → logprob: -13.851249694824219
    10. ' :' → logprob: -13.976249694824219

Token 460: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.134509021649137e-05
    2. '       ' → logprob: -9.87506103515625
    3. '		' → logprob: -13.12506103515625
    4. '          ' → logprob: -13.12506103515625
    5. '   ' → logprob: -13.50006103515625
    6. ' break' → logprob: -13.75006103515625
    7. '	       ' → logprob: -13.75006103515625
    8. '               ' → logprob: -14.00006103515625
    9. '         ' → logprob: -15.50006103515625
    10. '     ' → logprob: -15.50006103515625

Token 461: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.3897649049758911
    2. ' break' → logprob: -1.1397649049758911
    3. '       ' → logprob: -6.264764785766602
    4. 'return' → logprob: -7.389764785766602
    5. '	break' → logprob: -8.639764785766602
    6. '           ' → logprob: -8.764764785766602
    7. ' return' → logprob: -10.764764785766602
    8. '               ' → logprob: -11.889764785766602
    9. '   ' → logprob: -12.264764785766602
    10. '_break' → logprob: -13.264764785766602

Token 462: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02506476268172264
    2. '
' → logprob: -4.400064945220947
    3. '        
' → logprob: -4.400064945220947
    4. '<|end|>' → logprob: -9.400064468383789
    5. '		
' → logprob: -11.150064468383789
    6. '   ' → logprob: -11.400064468383789
    7. 'coverage' → logprob: -11.775064468383789
    8. 'points' → logprob: -11.775064468383789
    9. '        
' → logprob: -11.900064468383789
    10. 's' → logprob: -11.900064468383789

Token 463: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03271796926856041
    2. '        
' → logprob: -3.5327179431915283
    3. '
' → logprob: -7.032718181610107
    4. '<|end|>' → logprob: -7.032718181610107
    5. '```' → logprob: -8.53271770477295
    6. '		
' → logprob: -9.40771770477295
    7. ' coverage' → logprob: -9.40771770477295
    8. 'points' → logprob: -9.40771770477295
    9. '        ' → logprob: -9.65771770477295
    10. 'coverage' → logprob: -9.78271770477295

Token 464: ' circles' (ID: 45131)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.30603015422821045
    2. 'points' → logprob: -2.4310302734375
    3. ' circles' → logprob: -2.9310302734375
    4. 'circle' → logprob: -3.4310302734375
    5. 'ob' → logprob: -3.5560302734375
    6. 's' → logprob: -4.1810302734375
    7. 'r' → logprob: -4.9310302734375
    8. '   ' → logprob: -5.1810302734375
    9. 'blocked' → logprob: -5.1810302734375
    10. ' points' → logprob: -5.6810302734375

Token 465: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0028752496000379324
    2. '=' → logprob: -5.877875328063965
    3. '_' → logprob: -9.877875328063965
    4. '_angles' → logprob: -11.502875328063965
    5. '=[]' → logprob: -12.752875328063965
    6. 's' → logprob: -13.002875328063965
    7. '_inter' → logprob: -14.127875328063965
    8. ')' → logprob: -14.627875328063965
    9. ' ' → logprob: -14.752875328063965
    10. 'angles' → logprob: -15.127875328063965

Token 466: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0797787681221962
    2. ' []' → logprob: -2.5797786712646484
    3. '[' → logprob: -7.079778671264648
    4. ' [' → logprob: -10.079778671264648
    5. '[]
' → logprob: -12.454778671264648
    6. '[n' → logprob: -15.329778671264648
    7. ' []
' → logprob: -16.57977867126465
    8. '[]}' → logprob: -16.70477867126465
    9. '[]

' → logprob: -16.82977867126465
    10. '[int' → logprob: -16.82977867126465

Token 467: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06303222477436066
    2. ' for' → logprob: -2.9380321502685547
    3. '	' → logprob: -5.438032150268555
    4. '	for' → logprob: -6.563032150268555
    5. 'for' → logprob: -6.688032150268555
    6. '<|end|>' → logprob: -8.563032150268555
    7. '
' → logprob: -8.688032150268555
    8. '   ' → logprob: -8.938032150268555
    9. '	   ' → logprob: -8.938032150268555
    10. '        
' → logprob: -9.063032150268555

Token 468: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.25202906131744385
    2. ' for' → logprob: -1.5020290613174438
    3. '	for' → logprob: -9.502029418945312
    4. '       ' → logprob: -10.627029418945312
    5. '   ' → logprob: -14.502029418945312
    6. '
' → logprob: -15.127029418945312
    7. '[' → logprob: -15.752029418945312
    8. '```' → logprob: -17.127029418945312
    9. ' ' → logprob: -18.002029418945312
    10. 'import' → logprob: -18.002029418945312

Token 469: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.5759420394897461
    2. '_' → logprob: -0.8259420394897461
    3. '_i' → logprob: -13.825942039489746
    4. ' i' → logprob: -13.950942039489746
    5. ' ' → logprob: -14.450942039489746
    6. ' ' → logprob: -16.075942993164062
    7. 'i' → logprob: -17.700942993164062
    8. ' _
' → logprob: -17.825942993164062
    9. '_=' → logprob: -17.950942993164062
    10. ' ‌' → logprob: -18.325942993164062

Token 470: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07911461591720581
    2. 'in' → logprob: -2.5791146755218506
    3. 'range' → logprob: -8.57911491394043
    4. ' ' → logprob: -10.32911491394043
    5. ' range' → logprob: -13.45411491394043
    6. '  ' → logprob: -13.70411491394043
    7. 'i' → logprob: -14.45411491394043
    8. '	in' → logprob: -14.57911491394043
    9. ' _' → logprob: -15.20411491394043
    10. ' i' → logprob: -15.57911491394043

Token 471: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033546582562848926
    2. ' range' → logprob: -8.000335693359375
    3. '	range' → logprob: -18.125335693359375
    4. 'in' → logprob: -18.875335693359375
    5. 'rang' → logprob: -19.750335693359375
    6. '(range' → logprob: -19.875335693359375
    7. 'input' → logprob: -19.875335693359375
    8. 'n' → logprob: -19.875335693359375
    9. 'ran' → logprob: -20.000335693359375
    10. '  ' → logprob: -20.000335693359375

Token 472: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00034511767444200814
    2. '(' → logprob: -8.250345230102539
    3. 'n' → logprob: -9.750345230102539
    4. ' n' → logprob: -11.125345230102539
    5. ' (' → logprob: -11.500345230102539
    6. '(range' → logprob: -14.625345230102539
    7. ' range' → logprob: -16.25034523010254
    8. 'range' → logprob: -16.37534523010254
    9. '(
' → logprob: -17.25034523010254
    10. '	n' → logprob: -18.75034523010254

Token 473: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2257399708032608
    2. '):
' → logprob: -1.6007399559020996
    3. ':' → logprob: -9.600740432739258
    4. ')' → logprob: -9.600740432739258
    5. '):
' → logprob: -9.850740432739258
    6. '       ' → logprob: -9.850740432739258
    7. '   ' → logprob: -10.100740432739258
    8. ',' → logprob: -11.225740432739258
    9. ' ):' → logprob: -11.475740432739258
    10. '):

' → logprob: -12.475740432739258

Token 474: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016933856531977654
    2. '   ' → logprob: -4.516933917999268
    3. ' line' → logprob: -6.766933917999268
    4. '       ' → logprob: -6.891933917999268
    5. ' x' → logprob: -7.266933917999268
    6. ' lines' → logprob: -7.516933917999268
    7. '	       ' → logprob: -7.766933917999268
    8. ' s' → logprob: -7.891933917999268
    9. '	   ' → logprob: -8.26693344116211
    10. '    	   ' → logprob: -8.89193344116211

Token 475: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.20165763795375824
    2. 'x' (adapté à ' x') → logprob: -1.7016576528549194
    3. ' r' → logprob: -8.82665729522705
    4. ' cx' → logprob: -10.07665729522705
    5. 'r' → logprob: -10.57665729522705
    6. ' parts' → logprob: -11.57665729522705
    7. 'cx' → logprob: -11.70165729522705
    8. '   ' → logprob: -12.45165729522705
    9. ' line' → logprob: -12.45165729522705
    10. '	x' → logprob: -14.07665729522705

Token 476: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026646157493814826
    2. ',y' → logprob: -8.625266075134277
    3. ' ,' → logprob: -9.375266075134277
    4. '_,' → logprob: -14.750266075134277
    5. ',input' → logprob: -15.375266075134277
    6. ',
' → logprob: -15.625266075134277
    7. '‌,' → logprob: -15.750266075134277
    8. ',user' → logprob: -15.750266075134277
    9. ',float' → logprob: -15.875266075134277
    10. 'y' → logprob: -16.125267028808594

Token 477: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.011048170737922192
    2. ' y' → logprob: -4.511048316955566
    3. ' ' → logprob: -15.761048316955566
    4. '=' → logprob: -15.761048316955566
    5. '	y' → logprob: -16.38604736328125
    6. ',y' → logprob: -17.38604736328125
    7. ' =' → logprob: -18.63604736328125
    8. '_y' → logprob: -19.26104736328125
    9. '=y' → logprob: -19.26104736328125
    10. '<|end|>' → logprob: -19.38604736328125

Token 478: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.017927029868588e-05
    2. ' ,' → logprob: -9.500080108642578
    3. '=' → logprob: -12.625080108642578
    4. ',w' → logprob: -15.000080108642578
    5. ',x' → logprob: -15.375080108642578
    6. '<|end|>' → logprob: -15.625080108642578
    7. ',float' → logprob: -15.875080108642578
    8. '_,' → logprob: -15.875080108642578
    9. '‌,' → logprob: -16.125080108642578
    10. ',input' → logprob: -16.250080108642578

Token 479: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0004092235758434981
    2. ' r' → logprob: -7.875409126281738
    3. 'd' → logprob: -11.125409126281738
    4. 'z' → logprob: -11.625409126281738
    5. 'R' → logprob: -12.500409126281738
    6. 'rr' → logprob: -14.375409126281738
    7. 'p' → logprob: -14.875409126281738
    8. 'radius' → logprob: -15.500409126281738
    9. '	r' → logprob: -16.250410079956055
    10. 's' → logprob: -16.500410079956055

Token 480: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4744233191013336
    2. ' =' → logprob: -0.9744232892990112
    3. ',' → logprob: -7.974423408508301
    4. ' ' → logprob: -14.4744234085083
    5. ')' → logprob: -14.8494234085083
    6. '=input' → logprob: -14.8494234085083
    7. '=int' → logprob: -15.5994234085083
    8. '<|end|>' → logprob: -16.099422454833984
    9. ')=' → logprob: -16.474422454833984
    10. '  ' → logprob: -16.724422454833984

Token 481: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.2519311308860779
    2. 'map' → logprob: -1.5019311904907227
    3. '	map' → logprob: -13.376931190490723
    4. '[' → logprob: -15.126931190490723
    5. ' ' → logprob: -16.376930236816406
    6. '(map' → logprob: -17.251930236816406
    7. ' list' → logprob: -17.751930236816406
    8. 'list' → logprob: -17.751930236816406
    9. ' [' → logprob: -18.126930236816406
    10. 'm' → logprob: -18.376930236816406

Token 482: '(float' (ID: 17830)
  Prédit: '(float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -0.1004193052649498
    2. '(int' → logprob: -2.350419282913208
    3. 'float' → logprob: -8.600419044494629
    4. '(' → logprob: -10.600419044494629
    5. 'int' → logprob: -12.975419044494629
    6. '(input' → logprob: -14.225419044494629
    7. '=float' → logprob: -15.475419044494629
    8. ' float' → logprob: -15.600419044494629
    9. ',float' → logprob: -15.600419044494629
    10. '<float' → logprob: -16.475419998168945

Token 483: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.3509907126426697
    2. ',' → logprob: -1.2259907722473145
    3. 'input' → logprob: -6.4759907722473145
    4. '(input' → logprob: -6.9759907722473145
    5. '(' → logprob: -10.350990295410156
    6. ' ,' → logprob: -11.100990295410156
    7. ' input' → logprob: -11.725990295410156
    8. '(),' → logprob: -12.225990295410156
    9. ')' → logprob: -13.475990295410156
    10. ',(' → logprob: -13.725990295410156

Token 484: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.004078401252627373
    2. ' input' → logprob: -5.504078388214111
    3. ')' → logprob: -17.129077911376953
    4. '=input' → logprob: -19.754077911376953
    5. '_input' → logprob: -20.004077911376953
    6. '
' → logprob: -20.504077911376953
    7. ',input' → logprob: -20.629077911376953
    8. 'x' → logprob: -20.879077911376953
    9. '   ' → logprob: -20.879077911376953
    10. '	input' → logprob: -20.879077911376953

Token 485: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9361264946837764e-07
    2. '()' → logprob: -16.0
    3. ' ().' → logprob: -18.0
    4. '.split' → logprob: -18.75
    5. '(' → logprob: -19.375
    6. '.' → logprob: -21.5
    7. '()
' → logprob: -22.375
    8. 'split' → logprob: -23.0
    9. '   ' → logprob: -23.0
    10. '('').' → logprob: -23.375

Token 486: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.7848862373502925e-05
    2. 'strip' → logprob: -10.500027656555176
    3. 'rstrip' → logprob: -15.375027656555176
    4. ' split' → logprob: -17.750028610229492
    5. '(split' → logprob: -17.875028610229492
    6. 'spl' → logprob: -18.625028610229492
    7. '.split' → logprob: -20.250028610229492
    8. 's' → logprob: -21.250028610229492
    9. '().' → logprob: -21.750028610229492
    10. '_split' → logprob: -22.000028610229492

Token 487: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00042054426739923656
    2. '()))' → logprob: -8.375420570373535
    3. '()' → logprob: -9.250420570373535
    4. ')' → logprob: -9.375420570373535
    5. '())
' → logprob: -12.000420570373535
    6. '(' → logprob: -13.250420570373535
    7. '))' → logprob: -14.375420570373535
    8. ' ())' → logprob: -15.500420570373535
    9. '()))
' → logprob: -16.50041961669922
    10. '())

' → logprob: -16.87541961669922

Token 488: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9347501397132874
    2. '<|end|>' → logprob: -1.0597500801086426
    3. '           ' → logprob: -1.5597500801086426
    4. '<|end|>' → logprob: -4.684750080108643
    5. '	       ' → logprob: -4.809750080108643
    6. '	c' → logprob: -4.809750080108643
    7. '   ' → logprob: -5.559750080108643
    8. 'cir' → logprob: -5.809750080108643
    9. ')' → logprob: -6.559750080108643
    10. ',' → logprob: -6.559750080108643

Token 489: ' circles' (ID: 45131)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.3144594728946686
    2. ' circles' → logprob: -1.3144594430923462
    3. '           ' → logprob: -6.939459323883057
    4. '       ' → logprob: -8.939459800720215
    5. '   ' → logprob: -9.814459800720215
    6. 'circle' → logprob: -11.314459800720215
    7. 'c' → logprob: -11.314459800720215
    8. 'circ' → logprob: -11.314459800720215
    9. '	c' → logprob: -12.689459800720215
    10. '
' → logprob: -14.189459800720215

Token 490: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.8670179997570813e-05
    2. '.' → logprob: -11.125019073486328
    3. '.ap' → logprob: -13.125019073486328
    4. ' .' → logprob: -14.000019073486328
    5. '.app' → logprob: -14.000019073486328
    6. ').' → logprob: -16.750019073486328
    7. 'append' → logprob: -18.125019073486328
    8. '.add' → logprob: -18.250019073486328
    9. '.push' → logprob: -18.625019073486328
    10. '.setdefault' → logprob: -18.625019073486328

Token 491: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0004307884373702109
    2. '(' → logprob: -7.750430583953857
    3. '(x' → logprob: -16.750431060791016
    4. '(((' → logprob: -18.250431060791016
    5. ' ((' → logprob: -18.750431060791016
    6. '({'' → logprob: -19.000431060791016
    7. '(('' → logprob: -19.500431060791016
    8. '([' → logprob: -19.750431060791016
    9. '(
' → logprob: -20.000431060791016
    10. '(("' → logprob: -20.375431060791016

Token 492: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.246537173457909e-06
    2. ' x' → logprob: -12.375003814697266
    3. '(x' → logprob: -18.125003814697266
    4. ')x' → logprob: -18.625003814697266
    5. '	x' → logprob: -19.375003814697266
    6. '   ' → logprob: -20.625003814697266
    7. ')' → logprob: -21.250003814697266
    8. '"x' → logprob: -22.000003814697266
    9. ',x' → logprob: -22.250003814697266
    10. '{x' → logprob: -22.500003814697266

Token 493: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00044068231363780797
    2. ' ,' → logprob: -8.12544059753418
    3. ',y' → logprob: -8.87544059753418
    4. '<|end|>' → logprob: -12.75044059753418
    5. ',
' → logprob: -14.12544059753418
    6. ',x' → logprob: -15.12544059753418
    7. ')' → logprob: -15.50044059753418
    8. '‌,' → logprob: -15.50044059753418
    9. ',user' → logprob: -15.87544059753418
    10. '),' → logprob: -16.37544059753418

Token 494: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0067167943343520164
    2. ' y' → logprob: -5.006716728210449
    3. '<|end|>' → logprob: -13.75671672821045
    4. '	y' → logprob: -15.75671672821045
    5. ' ' → logprob: -16.006717681884766
    6. '   ' → logprob: -18.006717681884766
    7. '
' → logprob: -18.256717681884766
    8. ',y' → logprob: -18.256717681884766
    9. ')y' → logprob: -18.256717681884766
    10. '    ' → logprob: -19.131717681884766

Token 495: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.338466093642637e-05
    2. ',r' → logprob: -9.625073432922363
    3. ' ,' → logprob: -12.000073432922363
    4. 'r' → logprob: -14.500073432922363
    5. ',
' → logprob: -14.875073432922363
    6. '),' → logprob: -16.125072479248047
    7. ')' → logprob: -17.250072479248047
    8. ' ' → logprob: -17.750072479248047
    9. '‌,' → logprob: -19.125072479248047
    10. '```' → logprob: -19.125072479248047

Token 496: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00760698551312089
    2. ' r' → logprob: -4.8826069831848145
    3. ' ' → logprob: -14.757607460021973
    4. '
' → logprob: -15.882607460021973
    5. '	r' → logprob: -16.007606506347656
    6. ')' → logprob: -16.132606506347656
    7. '   ' → logprob: -16.882606506347656
    8. '_r' → logprob: -17.882606506347656
    9. '    ' → logprob: -18.382606506347656
    10. '  ' → logprob: -18.507606506347656

Token 497: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -1.0087516784551553e-05
    2. '))
' → logprob: -11.75001049041748
    3. ' ))' → logprob: -13.62501049041748
    4. ')' → logprob: -14.00001049041748
    5. '))

' → logprob: -17.000009536743164
    6. ')))' → logprob: -17.500009536743164
    7. '));' → logprob: -18.125009536743164
    8. '   ' → logprob: -18.625009536743164
    9. '),' → logprob: -20.000009536743164
    10. ' ' → logprob: -20.000009536743164

Token 498: '       ' (ID: 309)
  Prédit: 'visible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visible' → logprob: -1.1911636590957642
    2. 'covered' → logprob: -1.1911636590957642
    3. '       ' → logprob: -1.8161636590957642
    4. 'coverage' → logprob: -2.3161635398864746
    5. '_visible' → logprob: -3.9411635398864746
    6. ' covered' → logprob: -4.441163539886475
    7. ' coverage' → logprob: -4.566163539886475
    8. '        
' → logprob: -4.566163539886475
    9. '   ' → logprob: -4.691163539886475
    10. '<|end|>' → logprob: -4.816163539886475

Token 499: ' total' (ID: 3609)
  Prédit: 'visible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visible' → logprob: -0.05392038822174072
    2. 'covered' → logprob: -4.178920269012451
    3. '       ' → logprob: -5.178920269012451
    4. 'total' (adapté à ' total') → logprob: -5.303920269012451
    5. 'coverage' → logprob: -5.303920269012451
    6. ' visible' → logprob: -5.553920269012451
    7. 'un' → logprob: -5.803920269012451
    8. 'ex' → logprob: -6.178920269012451
    9. 'vis' → logprob: -6.428920269012451
    10. 'visibility' → logprob: -6.553920269012451

Token 500: '_length' (ID: 11514)
  Prédit: '_visible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_visible' → logprob: -0.13417397439479828
    2. '_area' → logprob: -2.63417387008667
    3. '_' → logprob: -3.00917387008667
    4. '_angle' → logprob: -6.63417387008667
    5. ' =' → logprob: -6.75917387008667
    6. '_visibility' → logprob: -7.38417387008667
    7. '_un' → logprob: -8.259174346923828
    8. '_access' → logprob: -8.259174346923828
    9. '_ex' → logprob: -8.759174346923828
    10. '_view' → logprob: -9.259174346923828

Token 501: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004078758880496025
    2. '=' → logprob: -5.5040788650512695
    3. ' ' → logprob: -16.379077911376953
    4. 's' → logprob: -16.629077911376953
    5. '_' → logprob: -16.754077911376953
    6. ',' → logprob: -16.754077911376953
    7. ' ' → logprob: -17.879077911376953
    8. ')' → logprob: -18.129077911376953
    9. '  ' → logprob: -18.254077911376953
    10. '<|end|>' → logprob: -18.879077911376953

Token 502: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00219273311085999
    2. ' ' → logprob: -6.127192497253418
    3. '2' → logprob: -12.377192497253418
    4. 'cir' → logprob: -13.752192497253418
    5. 'sum' → logprob: -14.814692497253418
    6. '[' → logprob: -15.252192497253418
    7. '   ' → logprob: -15.377192497253418
    8. 'circle' → logprob: -15.439692497253418
    9. 'r' → logprob: -15.627192497253418
    10. ' ' → logprob: -15.752192497253418

Token 503: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.8087270038668066e-05
    2. ' ' → logprob: -10.500027656555176
    3. 'sum' → logprob: -15.000027656555176
    4. '2' → logprob: -16.375028610229492
    5. 'circle' → logprob: -17.500028610229492
    6. 'cir' → logprob: -17.875028610229492
    7. 'r' → logprob: -18.562528610229492
    8. '[' → logprob: -19.062528610229492
    9. '   ' → logprob: -19.187528610229492
    10. '1' → logprob: -19.437528610229492

Token 504: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.17565011978149414
    2. '
' → logprob: -1.9256501197814941
    3. '   ' → logprob: -5.175650119781494
    4. '<|end|>' → logprob: -5.675650119781494
    5. '    
' → logprob: -5.800650119781494
    6. '
' → logprob: -6.675650119781494
    7. '' → logprob: -7.550650119781494
    8. '       ' → logprob: -8.300649642944336
    9. '0' → logprob: -8.550649642944336
    10. '\' → logprob: -9.175649642944336

Token 505: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00031580092036165297
    2. '```' → logprob: -8.87531566619873
    3. 'def' → logprob: -9.12531566619873
    4. ' ' → logprob: -10.87531566619873
    5. '5' → logprob: -11.50031566619873
    6. '
' → logprob: -12.00031566619873
    7. 'for' → logprob: -12.37531566619873
    8. '+' → logprob: -12.50031566619873
    9. 'f' → logprob: -12.62531566619873
    10. '1' → logprob: -12.62531566619873

Token 506: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008808614686131477
    2. '<|end|>' → logprob: -5.008808612823486
    3. '       ' → logprob: -7.008808612823486
    4. '
' → logprob: -7.383808612823486
    5. '        
' → logprob: -9.133809089660645
    6. '' → logprob: -9.508809089660645
    7. '		
' → logprob: -9.508809089660645
    8. '<|end|>' → logprob: -9.883809089660645
    9. '    
' → logprob: -10.008809089660645
    10. '\n' → logprob: -10.258809089660645

Token 507: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.668153703212738
    2. '       ' → logprob: -0.793153703212738
    3. '<|end|>' → logprob: -4.168153762817383
    4. ' for' → logprob: -4.668153762817383
    5. '        
' → logprob: -5.918153762817383
    6. '\n' → logprob: -6.168153762817383
    7. 'for' → logprob: -6.918153762817383
    8. '' → logprob: -7.293153762817383
    9. '   ' → logprob: -7.543153762817383
    10. '	' → logprob: -7.543153762817383

Token 508: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0663343295454979
    2. ' for' → logprob: -2.8163342475891113
    3. '       ' → logprob: -5.441334247589111
    4. '	for' → logprob: -10.81633472442627
    5. '   ' → logprob: -13.44133472442627
    6. '```' → logprob: -14.19133472442627
    7. '
' → logprob: -14.69133472442627
    8. '	' → logprob: -15.31633472442627
    9. 'import' → logprob: -15.56633472442627
    10. ' ' → logprob: -16.441333770751953

Token 509: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.575942873954773
    2. 'i' → logprob: -0.825942873954773
    3. '	i' → logprob: -13.575942993164062
    4. '_i' → logprob: -14.325942993164062
    5. ' idx' → logprob: -14.700942993164062
    6. ' ' → logprob: -15.200942993164062
    7. 'idx' → logprob: -15.200942993164062
    8. '   ' → logprob: -15.325942993164062
    9. '  ' → logprob: -16.450942993164062
    10. '(i' → logprob: -16.700942993164062

Token 510: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005825821775943041
    2. 'in' → logprob: -5.630825996398926
    3. ',' → logprob: -6.130825996398926
    4. ' ,' → logprob: -10.380825996398926
    5. ' ' → logprob: -11.880825996398926
    6. 'n' → logprob: -12.505825996398926
    7. ' i' → logprob: -13.130825996398926
    8. '  ' → logprob: -14.005825996398926
    9. '	in' → logprob: -14.005825996398926
    10. '0' → logprob: -14.380825996398926

Token 511: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001170225441455841
    2. ' range' → logprob: -6.7511701583862305
    3. '   ' → logprob: -17.626171112060547
    4. 'ange' → logprob: -17.876171112060547
    5. '(range' → logprob: -18.376171112060547
    6. ' ' → logprob: -18.626171112060547
    7. '	range' → logprob: -19.001171112060547
    8. ')' → logprob: -19.376171112060547
    9. '  ' → logprob: -20.001171112060547
    10. 'r' → logprob: -20.126171112060547

Token 512: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0006342819542624056
    2. '(' → logprob: -7.75063419342041
    3. '(len' → logprob: -8.50063419342041
    4. ' (' → logprob: -16.000635147094727
    5. ' n' → logprob: -16.750635147094727
    6. 'n' → logprob: -17.000635147094727
    7. '(i' → logprob: -19.250635147094727
    8. '(
' → logprob: -19.375635147094727
    9. 'len' → logprob: -19.375635147094727
    10. '(num' → logprob: -21.000635147094727

Token 513: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4298610985279083
    2. '):' → logprob: -1.054861068725586
    3. '+' → logprob: -7.179861068725586
    4. '):
' → logprob: -8.679861068725586
    5. '   ' → logprob: -8.929861068725586
    6. '-' → logprob: -10.054861068725586
    7. ' +' → logprob: -11.429861068725586
    8. ')' → logprob: -11.554861068725586
    9. ' ):' → logprob: -11.554861068725586
    10. ' -' → logprob: -12.054861068725586

Token 514: '           ' (ID: 352)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.9477396607398987
    2. '           ' → logprob: -1.197739601135254
    3. 'x' → logprob: -1.822739601135254
    4. '   ' → logprob: -2.322739601135254
    5. ',' → logprob: -4.072739601135254
    6. '       ' → logprob: -4.197739601135254
    7. ' cx' → logprob: -5.197739601135254
    8. '(cx' → logprob: -5.822739601135254
    9. '(x' → logprob: -6.322739601135254
    10. 'cx' → logprob: -6.322739601135254

Token 515: ' cx' (ID: 44448)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' (adapté à ' cx') → logprob: -0.37939736247062683
    2. 'x' → logprob: -1.2543973922729492
    3. 'xi' → logprob: -4.504397392272949
    4. 'ci' → logprob: -4.504397392272949
    5. '(cx' → logprob: -5.254397392272949
    6. '   ' → logprob: -7.004397392272949
    7. ' cx' → logprob: -7.379397392272949
    8. 'covered' → logprob: -7.504397392272949
    9. '(x' → logprob: -8.12939739227295
    10. 'circ' → logprob: -9.25439739227295

Token 516: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7729658540920354e-05
    2. 'x' → logprob: -11.875027656555176
    3. '_,' → logprob: -12.625027656555176
    4. '=' → logprob: -12.625027656555176
    5. ',c' → logprob: -12.750027656555176
    6. ' ,' → logprob: -13.000027656555176
    7. ',x' → logprob: -13.125027656555176
    8. 'c' → logprob: -13.250027656555176
    9. '‌,' → logprob: -14.375027656555176
    10. 'i' → logprob: -14.500027656555176

Token 517: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.0062700361013412476
    2. ' cy' → logprob: -5.881269931793213
    3. 'cir' → logprob: -5.881269931793213
    4. 'cycles' → logprob: -7.881269931793213
    5. ' circles' → logprob: -8.381270408630371
    6. 'y' → logprob: -10.631270408630371
    7. ' cycles' → logprob: -11.756270408630371
    8. 'c' → logprob: -11.756270408630371
    9. '.cy' → logprob: -11.756270408630371
    10. 'yc' → logprob: -12.631270408630371

Token 518: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.153795766294934e-06
    2. ',c' → logprob: -12.500005722045898
    3. ' ,' → logprob: -13.125005722045898
    4. '=' → logprob: -15.250005722045898
    5. ',r' → logprob: -16.8750057220459
    6. ',i' → logprob: -17.3750057220459
    7. 'c' → logprob: -17.3750057220459
    8. '‌,' → logprob: -17.6250057220459
    9. ',x' → logprob: -18.2500057220459
    10. '_,' → logprob: -18.3750057220459

Token 519: ' cr' (ID: 1769)
  Prédit: 'cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.04273435100913048
    2. ' cr' → logprob: -4.042734146118164
    3. 'cir' → logprob: -4.167734146118164
    4. 'r' → logprob: -4.792734146118164
    5. ' circles' → logprob: -7.792734146118164
    6. 'rr' → logprob: -10.042734146118164
    7. 'rings' → logprob: -11.167734146118164
    8. ' r' → logprob: -11.292734146118164
    9. 'rc' → logprob: -11.417734146118164
    10. '	cr' → logprob: -12.792734146118164

Token 520: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6241519451141357
    2. ',' → logprob: -1.1241519451141357
    3. ' =' → logprob: -1.9991519451141357
    4. 'c' → logprob: -6.374152183532715
    5. 'adius' → logprob: -6.499152183532715
    6. 'cles' → logprob: -7.624152183532715
    7. 's' → logprob: -9.624152183532715
    8. 'ad' → logprob: -10.249152183532715
    9. 'adii' → logprob: -11.124152183532715
    10. '=c' → logprob: -11.624152183532715

Token 521: ' circles' (ID: 45131)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.20141607522964478
    2. ' circles' → logprob: -1.701416015625
    3. 'c' → logprob: -13.576416015625
    4. 'circle' → logprob: -14.076416015625
    5. 'circ' → logprob: -15.076416015625
    6. '	c' → logprob: -15.576416015625
    7. ' círc' → logprob: -16.451416015625
    8. 'Cir' → logprob: -16.951416015625
    9. ' circul' → logprob: -17.326416015625
    10. ' cir' → logprob: -17.576416015625

Token 522: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.8889261304575484e-06
    2. '[' → logprob: -13.000003814697266
    3. '[c' → logprob: -14.375003814697266
    4. ' [' → logprob: -15.500003814697266
    5. '   ' → logprob: -15.750003814697266
    6. '[x' → logprob: -15.750003814697266
    7. ' =' → logprob: -15.750003814697266
    8. '
' → logprob: -16.250003814697266
    9. '=' → logprob: -16.750003814697266
    10. 'i' → logprob: -16.750003814697266

Token 523: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17542870342731476
    2. ')' → logprob: -1.9254287481307983
    3. ']
' → logprob: -4.425428867340088
    4. '   ' → logprob: -7.050428867340088
    5. ')
' → logprob: -7.300428867340088
    6. '           ' → logprob: -7.425428867340088
    7. '       ' → logprob: -8.30042839050293
    8. '<|end|>' → logprob: -8.67542839050293
    9. '[' → logprob: -9.30042839050293
    10. '
' → logprob: -9.55042839050293

Token 524: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06407270580530167
    2. 'covered' → logprob: -3.939072608947754
    3. 'visible' → logprob: -4.189072608947754
    4. ' covered' → logprob: -4.814072608947754
    5. ' visible' → logprob: -5.314072608947754
    6. 'coverage' → logprob: -6.064072608947754
    7. '```' → logprob: -6.564072608947754
    8. ' coverage' → logprob: -6.939072608947754
    9. 'excluded' → logprob: -6.939072608947754
    10. 'segments' → logprob: -6.939072608947754

Token 525: ' covered' (ID: 13083)
  Prédit: 'visible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visible' → logprob: -0.6341375708580017
    2. 'covered' (adapté à ' covered') → logprob: -1.5091376304626465
    3. 'un' → logprob: -2.6341376304626465
    4. 'blocked' → logprob: -3.0091376304626465
    5. 'ex' → logprob: -3.3841376304626465
    6. '           ' → logprob: -3.6341376304626465
    7. 'interval' → logprob: -4.0091376304626465
    8. '               ' → logprob: -5.1341376304626465
    9. 'oc' → logprob: -5.1341376304626465
    10. 'excluded' → logprob: -5.2591376304626465

Token 526: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.3111567199230194
    2. ' =' → logprob: -1.4361567497253418
    3. '_angles' → logprob: -3.686156749725342
    4. '=' → logprob: -5.686156749725342
    5. '_segments' → logprob: -7.061156749725342
    6. '=[]' → logprob: -9.061156272888184
    7. '_ranges' → logprob: -10.061156272888184
    8. '_parts' → logprob: -11.311156272888184
    9. '=[]
' → logprob: -11.311156272888184
    10. 'Intervals' → logprob: -11.436156272888184

Token 527: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.0075973994098603725
    2. 'als' → logprob: -5.00759744644165
    3. 'val' → logprob: -7.50759744644165
    4. '=' → logprob: -8.757596969604492
    5. '   ' → logprob: -10.132596969604492
    6. ' vals' → logprob: -10.382596969604492
    7. '```' → logprob: -10.507596969604492
    8. '[' → logprob: -11.007596969604492
    9. ' =' → logprob: -12.007596969604492
    10. 's' → logprob: -12.757596969604492

Token 528: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11282911896705627
    2. '=' → logprob: -2.2378292083740234
    3. '=[]' → logprob: -12.487829208374023
    4. ',' → logprob: -14.237829208374023
    5. ')' → logprob: -14.487829208374023
    6. ' ' → logprob: -14.612829208374023
    7. 's' → logprob: -14.987829208374023
    8. '[' → logprob: -15.237829208374023
    9. '[]' → logprob: -15.487829208374023
    10. '  ' → logprob: -15.612829208374023

Token 529: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -2.935296834039036e-06
    2. ' []' → logprob: -13.00000286102295
    3. '[]
' → logprob: -15.00000286102295
    4. '[]}' → logprob: -15.50000286102295
    5. '[' → logprob: -16.750003814697266
    6. '[])' → logprob: -17.625003814697266
    7. '[]>' → logprob: -18.250003814697266
    8. '[]"' → logprob: -18.250003814697266
    9. '[]

' → logprob: -18.875003814697266
    10. '[(' → logprob: -19.250003814697266

Token 530: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0031418318394571543
    2. ' for' → logprob: -6.0031418800354
    3. '   ' → logprob: -8.253141403198242
    4. '       ' → logprob: -9.003141403198242
    5. '
' → logprob: -9.503141403198242
    6. '	       ' → logprob: -9.628141403198242
    7. '		' → logprob: -10.378141403198242
    8. 'for' → logprob: -10.503141403198242
    9. '<|end|>' → logprob: -10.628141403198242
    10. '	   ' → logprob: -10.753141403198242

Token 531: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7064936757087708
    2. 'for' (adapté à ' for') → logprob: -0.7064936757087708
    3. '           ' → logprob: -4.331493854522705
    4. '   ' → logprob: -9.706493377685547
    5. ' ' → logprob: -10.581493377685547
    6. '       ' → logprob: -10.956493377685547
    7. '	for' → logprob: -12.581493377685547
    8. '
' → logprob: -14.581493377685547
    9. '	   ' → logprob: -14.581493377685547
    10. '  ' → logprob: -14.956493377685547

Token 532: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.16023945808410645
    2. ' j' → logprob: -1.9102394580841064
    3. 'range' → logprob: -11.410239219665527
    4. '	j' → logprob: -13.410239219665527
    5. '   ' → logprob: -14.285239219665527
    6. '$j' → logprob: -14.285239219665527
    7. '_j' → logprob: -14.785239219665527
    8. '[j' → logprob: -15.535239219665527
    9. ':j' → logprob: -16.410240173339844
    10. '```' → logprob: -16.410240173339844

Token 533: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005965414922684431
    2. 'in' → logprob: -5.130965232849121
    3. ' ' → logprob: -10.380965232849121
    4. ' i' → logprob: -13.255965232849121
    5. '	in' → logprob: -13.630965232849121
    6. '<|end|>' → logprob: -13.880965232849121
    7. 'range' → logprob: -15.755965232849121
    8. 'In' → logprob: -15.880965232849121
    9. 'i' → logprob: -15.880965232849121
    10. ')' → logprob: -15.880965232849121

Token 534: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07890553772449493
    2. ' range' → logprob: -2.5789055824279785
    3. '(range' → logprob: -11.07890510559082
    4. '	range' → logprob: -15.57890510559082
    5. ' ' → logprob: -16.20390510559082
    6. '   ' → logprob: -18.07890510559082
    7. ' xrange' → logprob: -18.32890510559082
    8. ' in' → logprob: -18.32890510559082
    9. 'in' → logprob: -18.70390510559082
    10. 'ange' → logprob: -18.82890510559082

Token 535: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0005593468667939305
    2. 'n' → logprob: -7.500559329986572
    3. '(' → logprob: -12.37555980682373
    4. '(i' → logprob: -14.00055980682373
    5. ' (' → logprob: -14.12555980682373
    6. ' n' → logprob: -14.50055980682373
    7. '	n' → logprob: -17.375558853149414
    8. '(
' → logprob: -18.125558853149414
    9. '   ' → logprob: -18.375558853149414
    10. '
' → logprob: -18.500558853149414

Token 536: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3497866690158844
    2. '):
' → logprob: -1.224786639213562
    3. '           ' → logprob: -6.974786758422852
    4. '):
' → logprob: -9.474786758422852
    5. ':' → logprob: -9.724786758422852
    6. ')' → logprob: -9.724786758422852
    7. '       ' → logprob: -10.474786758422852
    8. '               ' → logprob: -10.974786758422852
    9. '   ' → logprob: -11.224786758422852
    10. '{' → logprob: -11.474786758422852

Token 537: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10906194150447845
    2. '           ' → logprob: -2.3590619564056396
    3. '	           ' → logprob: -5.6090617179870605
    4. '	       ' → logprob: -6.6090617179870605
    5. ' ' → logprob: -6.7340617179870605
    6. ' if' → logprob: -6.9840617179870605
    7. '		       ' → logprob: -7.9840617179870605
    8. ' ' → logprob: -8.734062194824219
    9. '            ' → logprob: -8.734062194824219
    10. '   ' → logprob: -8.734062194824219

Token 538: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.26859840750694275
    2. ' if' → logprob: -1.5185984373092651
    3. '               ' → logprob: -4.143598556518555
    4. '	           ' → logprob: -8.143598556518555
    5. '           ' → logprob: -8.393598556518555
    6. '   ' → logprob: -9.768598556518555
    7. '	if' → logprob: -10.518598556518555
    8. ' ' → logprob: -10.893598556518555
    9. '		       ' → logprob: -11.018598556518555
    10. '	       ' → logprob: -12.018598556518555

Token 539: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01513242069631815
    2. ' i' → logprob: -4.515132427215576
    3. 'j' → logprob: -5.515132427215576
    4. ' j' → logprob: -9.890131950378418
    5. '	i' → logprob: -15.390131950378418
    6. '   ' → logprob: -16.015132904052734
    7. '    ' → logprob: -18.890132904052734
    8. '                   ' → logprob: -19.140132904052734
    9. ' ' → logprob: -19.265132904052734
    10. ' ' → logprob: -19.515132904052734

Token 540: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.8060752749443054
    2. ' ==' → logprob: -1.0560753345489502
    3. '==' → logprob: -1.9310753345489502
    4. '!=' → logprob: -2.80607533454895
    5. ' ' → logprob: -9.806075096130371
    6. '=' → logprob: -10.431075096130371
    7. '   ' → logprob: -11.056075096130371
    8. ')' → logprob: -11.806075096130371
    9. ')==' → logprob: -12.306075096130371
    10. '()!=' → logprob: -12.556075096130371

Token 541: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.165027217415627e-05
    2. ' j' → logprob: -10.750021934509277
    3. '	j' → logprob: -16.62502098083496
    4. '0' → logprob: -18.50002098083496
    5. ' ' → logprob: -19.25002098083496
    6. '   ' → logprob: -19.25002098083496
    7. 'i' → logprob: -20.87502098083496
    8. '    ' → logprob: -21.37502098083496
    9. '_j' → logprob: -21.50002098083496
    10. '
' → logprob: -21.75002098083496

Token 542: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2592380940914154
    2. ':
' → logprob: -1.5092381238937378
    3. 'continue' → logprob: -5.634238243103027
    4. ' continue' → logprob: -6.509238243103027
    5. '                   ' → logprob: -7.634238243103027
    6. '               ' → logprob: -7.884238243103027
    7. '   ' → logprob: -7.884238243103027
    8. ' or' → logprob: -8.009238243103027
    9. '           ' → logprob: -8.759238243103027
    10. '	continue' → logprob: -8.884238243103027

Token 543: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9595630764961243
    2. '                   ' → logprob: -1.7095630168914795
    3. ' continue' → logprob: -1.9595630168914795
    4. ':
' → logprob: -2.4595630168914795
    5. '           ' → logprob: -2.7095630168914795
    6. ':' → logprob: -2.8345630168914795
    7. '   ' → logprob: -2.8345630168914795
    8. 'continue' → logprob: -3.9595630168914795
    9. '	continue' → logprob: -6.209563255310059
    10. ' ' → logprob: -6.334563255310059

Token 544: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.39004555344581604
    2. 'continue' (adapté à ' continue') → logprob: -1.1400455236434937
    3. '               ' → logprob: -6.265045642852783
    4. '                   ' → logprob: -7.140045642852783
    5. '                       ' → logprob: -8.015045166015625
    6. '   ' → logprob: -9.390045166015625
    7. '	continue' → logprob: -10.265045166015625
    8. '           ' → logprob: -11.765045166015625
    9. 'contin' → logprob: -11.890045166015625
    10. '_continue' → logprob: -12.765045166015625

Token 545: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18312260508537292
    2. '               ' → logprob: -1.8081226348876953
    3. '  
' → logprob: -6.558122634887695
    4. ' 
' → logprob: -7.058122634887695
    5. '                
' → logprob: -7.433122634887695
    6. '<|end|>' → logprob: -8.683122634887695
    7. '           ' → logprob: -9.808122634887695
    8. '            
' → logprob: -9.933122634887695
    9. ',
' → logprob: -10.058122634887695
    10. '    
' → logprob: -10.433122634887695

Token 546: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05208864435553551
    2. '           ' → logprob: -3.177088737487793
    3. '	           ' → logprob: -5.927088737487793
    4. '                
' → logprob: -6.302088737487793
    5. '            
' → logprob: -6.927088737487793
    6. '			' → logprob: -7.552088737487793
    7. ',' → logprob: -7.927088737487793
    8. '                   ' → logprob: -8.302088737487793
    9. 'cx' → logprob: -8.302088737487793
    10. '	       ' → logprob: -8.427088737487793

Token 547: ' ox' (ID: 20241)
  Prédit: ' ox'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ox' → logprob: -0.34522977471351624
    2. 'ox' (adapté à ' ox') → logprob: -1.5952297449111938
    3. 'x' → logprob: -2.8452298641204834
    4. ' x' → logprob: -4.345229625701904
    5. 'cx' → logprob: -5.095229625701904
    6. 'jx' → logprob: -5.720229625701904
    7. '   ' → logprob: -6.220229625701904
    8. ' cx' → logprob: -6.845229625701904
    9. 'other' → logprob: -6.970229625701904
    10. 'dx' → logprob: -7.095229625701904

Token 548: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018960176035761833
    2. 'x' → logprob: -4.018959999084473
    3. ' ,' → logprob: -8.268959999084473
    4. 'cx' → logprob: -8.518959999084473
    5. 'c' → logprob: -9.268959999084473
    6. ',x' → logprob: -9.768959999084473
    7. '_x' → logprob: -9.768959999084473
    8. ',c' → logprob: -10.268959999084473
    9. ',
' → logprob: -10.393959999084473
    10. '=' → logprob: -11.018959999084473

Token 549: ' oy' (ID: 26603)
  Prédit: 'oy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oy' → logprob: -0.4740782678127289
    2. ' oy' → logprob: -0.9740782976150513
    3. 'oyu' → logprob: -14.724078178405762
    4. 'oya' → logprob: -15.599078178405762
    5. 'ow' → logprob: -16.224079132080078
    6. 'ay' → logprob: -16.224079132080078
    7. 'oyer' → logprob: -16.724079132080078
    8. 'oyle' → logprob: -16.724079132080078
    9. 'oys' → logprob: -16.974079132080078
    10. ' ow' → logprob: -17.099079132080078

Token 550: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1756367712223437e-05
    2. ' ,' → logprob: -11.375011444091797
    3. '_,' → logprob: -16.125011444091797
    4. ',o' → logprob: -16.500011444091797
    5. ',
' → logprob: -17.625011444091797
    6. '‌,' → logprob: -17.875011444091797
    7. 'import' → logprob: -18.250011444091797
    8. 'c' → logprob: -18.500011444091797
    9. 'o' → logprob: -18.875011444091797
    10. 'os' → logprob: -19.250011444091797

Token 551: ' or' (ID: 503)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.014251415617763996
    2. ' or' → logprob: -4.264251232147217
    3. '	or' → logprob: -10.014251708984375
    4. 'orr' → logprob: -11.264251708984375
    5. '_or' → logprob: -11.389251708984375
    6. '
' → logprob: -12.639251708984375
    7. 'ocr' → logprob: -12.889251708984375
    8. '   ' → logprob: -13.139251708984375
    9. '(or' → logprob: -13.264251708984375
    10. 'os' → logprob: -13.264251708984375

Token 552: 'r' (ID: 81)
  Prédit: 'ad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ad' → logprob: -0.3847106993198395
    2. '=' → logprob: -1.634710669517517
    3. 'adius' → logprob: -2.7597107887268066
    4. 'r' → logprob: -3.7597107887268066
    5. ' =' → logprob: -4.509710788726807
    6. '_=' → logprob: -4.884710788726807
    7. '_,' → logprob: -5.009710788726807
    8. '_' → logprob: -5.634710788726807
    9. 'adi' → logprob: -6.384710788726807
    10. '1' → logprob: -6.384710788726807

Token 553: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2028273046016693
    2. ' =' → logprob: -1.7028273344039917
    3. ',' → logprob: -6.577827453613281
    4. 'r' → logprob: -11.077827453613281
    5. 'adius' → logprob: -13.702827453613281
    6. 'a' → logprob: -13.702827453613281
    7. ' ' → logprob: -13.952827453613281
    8. '_=' → logprob: -14.077827453613281
    9. 'ad' → logprob: -14.452827453613281
    10. 'c' → logprob: -14.702827453613281

Token 554: ' circles' (ID: 45131)
  Prédit: ' circles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' circles' → logprob: -0.3132835030555725
    2. 'cir' → logprob: -1.3132834434509277
    3. 'c' → logprob: -10.813283920288086
    4. 'circle' → logprob: -14.438283920288086
    5. 'circ' → logprob: -14.438283920288086
    6. '	c' → logprob: -15.188283920288086
    7. '   ' → logprob: -16.063283920288086
    8. ' círc' → logprob: -16.688283920288086
    9. ' ' → logprob: -17.313283920288086
    10. 'Cir' → logprob: -18.063283920288086

Token 555: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.07068058848381042
    2. ' =' → logprob: -2.945680618286133
    3. '=' → logprob: -4.570680618286133
    4. '=j' → logprob: -5.695680618286133
    5. 'j' → logprob: -6.320680618286133
    6. '[' → logprob: -9.945680618286133
    7. '   ' → logprob: -10.945680618286133
    8. ' j' → logprob: -11.195680618286133
    9. '[i' → logprob: -11.320680618286133
    10. ']' → logprob: -11.320680618286133

Token 556: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010669062845408916
    2. '           ' → logprob: -5.385669231414795
    3. ',' → logprob: -6.385669231414795
    4. ')
' → logprob: -6.635669231414795
    5. '),' → logprob: -7.260669231414795
    6. '
' → logprob: -7.385669231414795
    7. ']' → logprob: -7.635669231414795
    8. '):
' → logprob: -7.635669231414795
    9. '               ' → logprob: -8.385668754577637
    10. '       ' → logprob: -9.135668754577637

Token 557: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5934551358222961
    2. '           ' → logprob: -0.8434551358222961
    3. '            
' → logprob: -4.7184553146362305
    4. '<|end|>' → logprob: -6.5934553146362305
    5. '
' → logprob: -6.7184553146362305
    6. '                
' → logprob: -6.8434553146362305
    7. '	           ' → logprob: -7.0934553146362305
    8. ' 
' → logprob: -7.3434553146362305
    9. '                   ' → logprob: -7.4684553146362305
    10. '  
' → logprob: -7.5934553146362305

Token 558: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0011365237878635526
    2. 'dist' → logprob: -7.126136302947998
    3. ' d' → logprob: -8.376136779785156
    4. 'dx' → logprob: -9.751136779785156
    5. 'dc' → logprob: -11.126136779785156
    6. ' dist' → logprob: -11.751136779785156
    7. 'D' → logprob: -12.126136779785156
    8. '```' → logprob: -12.376136779785156
    9. 'distance' → logprob: -13.126136779785156
    10. '   ' → logprob: -13.251136779785156

Token 559: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47514471411705017
    2. ' =' → logprob: -0.9751447439193726
    3. 'istance' → logprob: -7.100144863128662
    4. 'ist' → logprob: -8.475144386291504
    5. 'x' → logprob: -11.350144386291504
    6. '   ' → logprob: -12.225144386291504
    7. ' ' → logprob: -12.475144386291504
    8. '	' → logprob: -13.225144386291504
    9. 'is' → logprob: -13.225144386291504
    10. ',' → logprob: -13.350144386291504

Token 560: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.06204140558838844
    2. ' distance' → logprob: -2.8120415210723877
    3. ' math' → logprob: -10.062041282653809
    4. 'math' → logprob: -10.562041282653809
    5. '(distance' → logprob: -12.312041282653809
    6. 'dist' → logprob: -15.062041282653809
    7. '.distance' → logprob: -16.312042236328125
    8. '   ' → logprob: -16.812042236328125
    9. 'd' → logprob: -17.187042236328125
    10. ' distancia' → logprob: -17.312042236328125

Token 561: '(cx' (ID: 116103)
  Prédit: '(cx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cx' → logprob: -3.5954712075181305e-05
    2. '(' → logprob: -10.250036239624023
    3. '(
' → logprob: -14.875036239624023
    4. ' (' → logprob: -16.500036239624023
    5. '(

' → logprob: -17.625036239624023
    6. '.cx' → logprob: -17.750036239624023
    7. 'cx' → logprob: -18.375036239624023
    8. '(ci' → logprob: -20.000036239624023
    9. '(nx' → logprob: -20.250036239624023
    10. ' cx' → logprob: -20.375036239624023

Token 562: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.868328920158092e-05
    2. ' ,' → logprob: -10.625028610229492
    3. ',
' → logprob: -12.625028610229492
    4. '‌,' → logprob: -14.875028610229492
    5. '<|end|>' → logprob: -14.875028610229492
    6. ',c' → logprob: -15.750028610229492
    7. ',

' → logprob: -16.875028610229492
    8. 'cy' → logprob: -17.375028610229492
    9. '(),' → logprob: -17.500028610229492
    10. '_,' → logprob: -17.750028610229492

Token 563: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.00010950337309623137
    2. ' cy' → logprob: -9.125109672546387
    3. 'cyj' → logprob: -15.250109672546387
    4. ' ' → logprob: -16.87510871887207
    5. '.cy' → logprob: -16.87510871887207
    6. 'cych' → logprob: -17.62510871887207
    7. 'c' → logprob: -18.37510871887207
    8. 'ocy' → logprob: -19.00010871887207
    9. ' ' → logprob: -19.25010871887207
    10. 'cycl' → logprob: -19.25010871887207

Token 564: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.014684110297821e-06
    2. ' ,' → logprob: -11.750008583068848
    3. ',
' → logprob: -13.750008583068848
    4. '‌,' → logprob: -18.125009536743164
    5. '(),' → logprob: -18.625009536743164
    6. ',

' → logprob: -19.250009536743164
    7. '_,' → logprob: -19.375009536743164
    8. ',
' → logprob: -19.625009536743164
    9. '```' → logprob: -20.250009536743164
    10. '`,' → logprob: -20.500009536743164

Token 565: ' ox' (ID: 20241)
  Prédit: 'ox'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ox' → logprob: -0.00020354038861114532
    2. ' ox' → logprob: -8.500203132629395
    3. 'oy' → logprob: -17.62520408630371
    4. 'oxo' → logprob: -18.00020408630371
    5. 'oxide' → logprob: -18.37520408630371
    6. 'oxy' → logprob: -18.50020408630371
    7. 'oz' → logprob: -18.50020408630371
    8. 'ow' → logprob: -19.62520408630371
    9. 'ol' → logprob: -19.87520408630371
    10. 'og' → logprob: -20.25020408630371

Token 566: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5048530030981055e-06
    2. ' ,' → logprob: -13.500001907348633
    3. '_,' → logprob: -18.875001907348633
    4. ',
' → logprob: -20.000001907348633
    5. 'oy' → logprob: -20.375001907348633
    6. '‌,' → logprob: -20.375001907348633
    7. '(),' → logprob: -21.500001907348633
    8. '   ' → logprob: -21.750001907348633
    9. '`,' → logprob: -21.875001907348633
    10. 'cy' → logprob: -22.000001907348633

Token 567: ' oy' (ID: 26603)
  Prédit: 'oy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oy' → logprob: -0.0015029559144750237
    2. ' oy' → logprob: -6.501502990722656
    3. 'oys' → logprob: -15.501502990722656
    4. 'uy' → logprob: -16.251502990722656
    5. 'oya' → logprob: -16.626502990722656
    6. 'ay' → logprob: -17.001502990722656
    7. 'oyu' → logprob: -17.251502990722656
    8. 'oi' → logprob: -17.251502990722656
    9. 'oyo' → logprob: -17.376502990722656
    10. ' ' → logprob: -17.876502990722656

Token 568: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02325444668531418
    2. ')
' → logprob: -3.77325439453125
    3. ')
' → logprob: -12.14825439453125
    4. ' )' → logprob: -13.02325439453125
    5. ')

' → logprob: -14.89825439453125
    6. ')`' → logprob: -15.27325439453125
    7. ' )
' → logprob: -15.52325439453125
    8. '))' → logprob: -15.89825439453125
    9. ')`
' → logprob: -16.02325439453125
    10. ')#' → logprob: -16.52325439453125

Token 569: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 570: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6454256176948547
    2. ' if' → logprob: -0.7704256176948547
    3. '           ' → logprob: -5.145425796508789
    4. '               ' → logprob: -5.520425796508789
    5. '       ' → logprob: -6.395425796508789
    6. ' ' → logprob: -7.145425796508789
    7. '        ' → logprob: -9.270425796508789
    8. '```' → logprob: -9.395425796508789
    9. '                ' → logprob: -10.020425796508789
    10. ' ' → logprob: -10.145425796508789

Token 571: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.002012740820646286
    2. ' d' → logprob: -6.252012729644775
    3. 'cr' → logprob: -10.252013206481934
    4. '   ' → logprob: -10.502013206481934
    5. 'or' → logprob: -12.127013206481934
    6. '	d' → logprob: -12.377013206481934
    7. ' cr' → logprob: -12.752013206481934
    8. ' ' → logprob: -13.377013206481934
    9. '>=' → logprob: -13.377013206481934
    10. '```' → logprob: -13.877013206481934

Token 572: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.04188932478427887
    2. ' >=' → logprob: -3.2918894290924072
    3. '<' → logprob: -6.166889190673828
    4. '<=' → logprob: -6.791889190673828
    5. '>' → logprob: -8.291889190673828
    6. ' <' → logprob: -8.791889190673828
    7. '==' → logprob: -9.791889190673828
    8. '```' → logprob: -9.916889190673828
    9. ')>=' → logprob: -10.791889190673828
    10. ' ' → logprob: -10.916889190673828

Token 573: ' cr' (ID: 1769)
  Prédit: 'cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -1.5048530030981055e-06
    2. '(cr' → logprob: -14.000001907348633
    3. ' cr' → logprob: -14.500001907348633
    4. '(' → logprob: -17.250001907348633
    5. 'or' → logprob: -18.125001907348633
    6. '	cr' → logprob: -18.375001907348633
    7. '```' → logprob: -18.750001907348633
    8. 'c' → logprob: -19.250001907348633
    9. '
' → logprob: -19.500001907348633
    10. '   ' → logprob: -20.500001907348633

Token 574: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011088619939982891
    2. ' +' → logprob: -4.511088848114014
    3. ' ' → logprob: -11.261088371276855
    4. '```' → logprob: -11.386088371276855
    5. '+r' → logprob: -11.511088371276855
    6. '1' → logprob: -12.886088371276855
    7. '   ' → logprob: -14.511088371276855
    8. '`' → logprob: -14.636088371276855
    9. '	' → logprob: -15.011088371276855
    10. '
' → logprob: -15.261088371276855

Token 575: ' or' (ID: 503)
  Prédit: 'orr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orr' → logprob: -1.9862216504407115e-05
    2. ' or' → logprob: -10.875020027160645
    3. 'or' → logprob: -14.000020027160645
    4. 'rr' → logprob: -18.125019073486328
    5. 'urr' → logprob: -19.000019073486328
    6. 'irr' → logprob: -19.000019073486328
    7. ' Orr' → logprob: -19.000019073486328
    8. ' ' → logprob: -19.375019073486328
    9. '```' → logprob: -19.375019073486328
    10. 'corr' → logprob: -19.500019073486328

Token 576: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.002076386474072933
    2. 'rr' → logprob: -6.377076148986816
    3. 'orr' → logprob: -8.002076148986816
    4. '_' → logprob: -11.752076148986816
    5. '_r' → logprob: -11.877076148986816
    6. 'or' → logprob: -12.252076148986816
    7. '_rr' → logprob: -12.502076148986816
    8. 'р' → logprob: -12.877076148986816
    9. '
' → logprob: -13.252076148986816
    10. '```' → logprob: -13.627076148986816

Token 577: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3250699043273926
    2. ' or' → logprob: -1.3250699043273926
    3. ':
' → logprob: -4.700069904327393
    4. 'or' → logprob: -6.325069904327393
    5. '   ' → logprob: -7.825069904327393
    6. '               ' → logprob: -8.700069427490234
    7. '           ' → logprob: -9.075069427490234
    8. '                   ' → logprob: -9.700069427490234
    9. '       ' → logprob: -10.200069427490234
    10. ':return' → logprob: -10.950069427490234

Token 578: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22043827176094055
    2. ' continue' → logprob: -1.9704382419586182
    3. 'continue' → logprob: -3.470438241958618
    4. '           ' → logprob: -3.845438241958618
    5. '                   ' → logprob: -5.970438480377197
    6. ':' → logprob: -6.095438480377197
    7. ':
' → logprob: -7.595438480377197
    8. ' or' → logprob: -8.470438003540039
    9. '	continue' → logprob: -9.470438003540039
    10. ' continues' → logprob: -9.595438003540039

Token 579: ' #' (ID: 1069)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.034518808126449585
    2. '               ' → logprob: -4.034518718719482
    3. 'continue' → logprob: -4.409518718719482
    4. '           ' → logprob: -5.784518718719482
    5. '                   ' → logprob: -7.409518718719482
    6. ' ' → logprob: -9.15951919555664
    7. '	continue' → logprob: -9.15951919555664
    8. ' continues' → logprob: -9.78451919555664
    9. ' ' → logprob: -10.28451919555664
    10. '_continue' → logprob: -10.40951919555664

Token 580: ' no' (ID: 860)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.38728323578834534
    2. 'continue' → logprob: -1.137283205986023
    3. '	continue' → logprob: -7.8872833251953125
    4. '               ' → logprob: -11.637283325195312
    5. 'contin' → logprob: -11.887283325195312
    6. '           ' → logprob: -12.137283325195312
    7. '_continue' → logprob: -12.512283325195312
    8. 'Continue' → logprob: -13.012283325195312
    9. '                   ' → logprob: -13.012283325195312
    10. ' Continue' → logprob: -13.137283325195312

Token 581: ' intersection' (ID: 42002)
  Prédit: ' overlap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' overlap' → logprob: -0.011316951364278793
    2. 'over' → logprob: -5.636316776275635
    3. ' coverage' → logprob: -5.636316776275635
    4. 'coverage' → logprob: -5.886316776275635
    5. 'cover' → logprob: -6.886316776275635
    6. '_overlap' → logprob: -8.761317253112793
    7. ' cover' → logprob: -9.761317253112793
    8. 'continue' → logprob: -10.261317253112793
    9. 'space' → logprob: -10.636317253112793
    10. ' continue' → logprob: -11.136317253112793

Token 582: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7565615177154541
    2. '           ' → logprob: -1.506561517715454
    3. '                   ' → logprob: -1.631561517715454
    4. ' continue' → logprob: -2.631561517715454
    5. 'continue' → logprob: -3.756561517715454
    6. '\n' → logprob: -4.631561279296875
    7. '
' → logprob: -5.881561279296875
    8. '	continue' → logprob: -6.756561279296875
    9. '<|end|>' → logprob: -7.256561279296875
    10. ' continues' → logprob: -7.256561279296875

Token 583: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6369122266769409
    2. '                   ' → logprob: -1.136912226676941
    3. '           ' → logprob: -2.6369123458862305
    4. ' continue' → logprob: -2.8869123458862305
    5. 'continue' → logprob: -4.2619123458862305
    6. '\n' → logprob: -5.7619123458862305
    7. '   ' → logprob: -7.0119123458862305
    8. '       ' → logprob: -7.0119123458862305
    9. '	continue' → logprob: -7.1369123458862305
    10. '                       ' → logprob: -7.6369123458862305

Token 584: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.6381075978279114
    2. ' continue' → logprob: -0.8881075978279114
    3. '               ' → logprob: -2.8881075382232666
    4. '                   ' → logprob: -5.763107776641846
    5. '	continue' → logprob: -7.013107776641846
    6. '           ' → logprob: -7.638107776641846
    7. '_continue' → logprob: -11.513107299804688
    8. '                       ' → logprob: -11.638107299804688
    9. 'contin' → logprob: -11.638107299804688
    10. '   ' → logprob: -11.638107299804688

Token 585: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004775430075824261
    2. '                
' → logprob: -5.754775524139404
    3. '
' → logprob: -7.379775524139404
    4. '  
' → logprob: -8.004775047302246
    5. '<|end|>' → logprob: -8.379775047302246
    6. ' 
' → logprob: -9.879775047302246
    7. '           ' → logprob: -10.004775047302246
    8. '            
' → logprob: -10.129775047302246
    9. '    
' → logprob: -10.129775047302246
    10. '               
' → logprob: -10.629775047302246

Token 586: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004676592070609331
    2. '                
' → logprob: -5.629676818847656
    3. '
' → logprob: -7.629676818847656
    4. 'elif' → logprob: -8.754676818847656
    5. '           ' → logprob: -9.754676818847656
    6. '                ' → logprob: -9.879676818847656
    7. '\n' → logprob: -10.254676818847656
    8. ' 
' → logprob: -10.254676818847656
    9. ' elif' → logprob: -10.504676818847656
    10. '            
' → logprob: -10.504676818847656

Token 587: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2840099632740021
    2. ' if' → logprob: -1.9090099334716797
    3. '               ' → logprob: -2.6590099334716797
    4. 'elif' → logprob: -3.6590099334716797
    5. ' elif' → logprob: -6.03400993347168
    6. '                
' → logprob: -7.78400993347168
    7. 'import' → logprob: -8.78400993347168
    8. '           ' → logprob: -9.90900993347168
    9. 'from' → logprob: -10.40900993347168
    10. '                ' → logprob: -10.40900993347168

Token 588: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.18094903230667114
    2. ' d' → logprob: -1.8059489727020264
    3. 'cr' → logprob: -7.4309492111206055
    4. ' cr' → logprob: -8.305949211120605
    5. 'or' → logprob: -8.680949211120605
    6. ' or' → logprob: -9.805949211120605
    7. '   ' → logprob: -10.305949211120605
    8. ' ' → logprob: -11.055949211120605
    9. '	d' → logprob: -11.180949211120605
    10. 'c' → logprob: -11.680949211120605

Token 589: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.7756496071815491
    2. '<=' → logprob: -0.7756496071815491
    3. '==' → logprob: -2.9006495475769043
    4. ' ==' → logprob: -3.7756495475769043
    5. ' <' → logprob: -7.400649547576904
    6. '<' → logprob: -7.525649547576904
    7. '=' → logprob: -10.150650024414062
    8. '```' → logprob: -10.400650024414062
    9. ' ' → logprob: -11.150650024414062
    10. '+' → logprob: -11.525650024414062

Token 590: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.032398805022239685
    2. 'orr' → logprob: -3.5323987007141113
    3. 'or' → logprob: -6.032398700714111
    4. ' abs' → logprob: -8.90739917755127
    5. 'ors' → logprob: -10.53239917755127
    6. 'max' → logprob: -10.65739917755127
    7. ' or' → logprob: -11.15739917755127
    8. '   ' → logprob: -11.78239917755127
    9. '(abs' → logprob: -11.90739917755127
    10. '0' → logprob: -12.15739917755127

Token 591: '(cr' (ID: 46462)
  Prédit: '(cr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cr' → logprob: -0.00048620346933603287
    2. '(' → logprob: -7.750486373901367
    3. 'cr' → logprob: -10.500486373901367
    4. '(or' → logprob: -10.750486373901367
    5. '	cr' → logprob: -12.250486373901367
    6. '(c' → logprob: -14.000486373901367
    7. 'or' → logprob: -15.875486373901367
    8. '(
' → logprob: -15.875486373901367
    9. '(cx' → logprob: -16.250486373901367
    10. ' cr' → logprob: -16.250486373901367

Token 592: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12797911465168
    2. '-' → logprob: -2.127979040145874
    3. ' ' → logprob: -7.127979278564453
    4. '   ' → logprob: -9.377979278564453
    5. 'or' → logprob: -9.502979278564453
    6. 'orr' → logprob: -10.627979278564453
    7. '  ' → logprob: -11.127979278564453
    8. ' or' → logprob: -11.252979278564453
    9. '-or' → logprob: -11.377979278564453
    10. 'r' → logprob: -12.127979278564453

Token 593: ' or' (ID: 503)
  Prédit: 'orr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orr' → logprob: -0.0019555140752345324
    2. ' or' → logprob: -6.251955509185791
    3. 'or' → logprob: -10.75195598602295
    4. ' ' → logprob: -13.37695598602295
    5. 'urr' → logprob: -14.50195598602295
    6. '   ' → logprob: -15.00195598602295
    7. ' Orr' → logprob: -15.12695598602295
    8. '```' → logprob: -15.25195598602295
    9. 'orre' → logprob: -15.37695598602295
    10. 'irr' → logprob: -15.50195598602295

Token 594: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00011200665176147595
    2. 'rr' → logprob: -9.12511157989502
    3. 'orr' → logprob: -13.37511157989502
    4. 'or' → logprob: -14.50011157989502
    5. '_r' → logprob: -15.25011157989502
    6. '_rr' → logprob: -15.87511157989502
    7. '_' → logprob: -16.125112533569336
    8. ')' → logprob: -16.500112533569336
    9. ' ' → logprob: -17.000112533569336
    10. ']' → logprob: -17.000112533569336

Token 595: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4741232693195343
    2. '):' → logprob: -0.9741232395172119
    3. '):
' → logprob: -10.849123001098633
    4. ')' → logprob: -11.224123001098633
    5. '):

' → logprob: -12.224123001098633
    6. ':' → logprob: -12.974123001098633
    7. ' ):
' → logprob: -13.474123001098633
    8. '   ' → logprob: -13.724123001098633
    9. ' ):' → logprob: -13.849123001098633
    10. '                   ' → logprob: -13.974123001098633

Token 596: '                   ' (ID: 699)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2193533033132553
    2. '                   ' → logprob: -1.7193533182144165
    3. '               ' → logprob: -4.219353199005127
    4. ':' → logprob: -6.719353199005127
    5. '```' → logprob: -7.969353199005127
    6. ',' → logprob: -8.094353675842285
    7. ':
' → logprob: -8.719353675842285
    8. '<|end|>' → logprob: -8.844353675842285
    9. ' covered' → logprob: -8.969353675842285
    10. '		           ' → logprob: -9.094353675842285

Token 597: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5176218748092651
    2. '                   ' → logprob: -1.3926218748092651
    3. ' if' → logprob: -2.1426219940185547
    4. '               ' → logprob: -3.5176219940185547
    5. '           ' → logprob: -5.017621994018555
    6. '   ' → logprob: -7.017621994018555
    7. '#' (adapté à ' #') → logprob: -7.892621994018555
    8. 'continue' → logprob: -8.017621994018555
    9. '```' → logprob: -9.017621994018555
    10. ' ' → logprob: -9.642621994018555

Token 598: ' one' (ID: 1001)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0038542284164577723
    2. ' if' → logprob: -6.878854274749756
    3. 'continue' → logprob: -6.878854274749756
    4. '#' → logprob: -7.128854274749756
    5. '                   ' → logprob: -7.378854274749756
    6. '               ' → logprob: -8.503853797912598
    7. '           ' → logprob: -9.503853797912598
    8. '   ' → logprob: -10.128853797912598
    9. '```' → logprob: -10.503853797912598
    10. ' continue' → logprob: -12.378853797912598

Token 599: ' circle' (ID: 22005)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4889366924762726
    2. ' continue' → logprob: -1.8639366626739502
    3. ' continues' → logprob: -2.48893666267395
    4. ' of' → logprob: -3.61393666267395
    5. '   ' → logprob: -3.73893666267395
    6. '           ' → logprob: -3.98893666267395
    7. 'contin' → logprob: -3.98893666267395
    8. '               ' → logprob: -4.738936901092529
    9. ' if' → logprob: -4.863936901092529
    10. 'if' → logprob: -5.113936901092529

Token 600: ' inside' (ID: 6772)
  Prédit: ' covers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' covers' → logprob: -0.7960001826286316
    2. '               ' → logprob: -1.7960002422332764
    3. ' continues' → logprob: -1.7960002422332764
    4. 'covers' → logprob: -3.2960002422332764
    5. '           ' → logprob: -3.4210002422332764
    6. ' is' → logprob: -3.5460002422332764
    7. '```' → logprob: -3.9210002422332764
    8. ':' → logprob: -3.9210002422332764
    9. '                   ' → logprob: -4.296000003814697
    10. 'contin' → logprob: -4.296000003814697

Token 601: ' other' (ID: 1273)
  Prédit: 'another'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'another' → logprob: -0.38726168870925903
    2. ' another' → logprob: -1.7622616291046143
    3. 'the' → logprob: -2.8872616291046143
    4. ' the' → logprob: -3.1372616291046143
    5. 'other' → logprob: -4.512261867523193
    6. '(' → logprob: -4.762261867523193
    7. '               ' → logprob: -5.387261867523193
    8. '                   ' → logprob: -5.387261867523193
    9. 'or' → logprob: -5.387261867523193
    10. 'if' → logprob: -5.512261867523193

Token 602: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.050930462777614594
    2. '               ' → logprob: -3.0509305000305176
    3. 'continue' → logprob: -7.300930500030518
    4. '           ' → logprob: -7.425930500030518
    5. ' continue' → logprob: -7.550930500030518
    6. ',' → logprob: -8.42593002319336
    7. ' if' → logprob: -9.42593002319336
    8. '                       ' → logprob: -9.67593002319336
    9. ' and' → logprob: -10.30093002319336
    10. ':' → logprob: -10.80093002319336

Token 603: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8190260529518127
    2. '                   ' → logprob: -0.8190260529518127
    3. '           ' → logprob: -2.194025993347168
    4. 'continue' → logprob: -6.319025993347168
    5. ' continue' → logprob: -6.444025993347168
    6. ' if' → logprob: -6.444025993347168
    7. '                       ' → logprob: -6.694025993347168
    8. 'if' → logprob: -9.069025993347168
    9. '       ' → logprob: -9.069025993347168
    10. '   ' → logprob: -9.319025993347168

Token 604: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0023040547966957092
    2. ' if' → logprob: -7.1273040771484375
    3. 'continue' → logprob: -7.2523040771484375
    4. '                   ' → logprob: -7.6273040771484375
    5. '               ' → logprob: -9.002304077148438
    6. '   ' → logprob: -9.252304077148438
    7. '           ' → logprob: -9.877304077148438
    8. '```' → logprob: -11.627304077148438
    9. '                       ' → logprob: -12.002304077148438
    10. 'covered' → logprob: -12.127304077148438

Token 605: ' cr' (ID: 1769)
  Prédit: 'orr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orr' → logprob: -0.027719495818018913
    2. ' or' → logprob: -4.527719497680664
    3. 'cr' → logprob: -4.777719497680664
    4. 'or' → logprob: -4.902719497680664
    5. ' cr' → logprob: -8.777719497680664
    6. '(or' → logprob: -8.777719497680664
    7. '(' → logprob: -8.902719497680664
    8. ' (' → logprob: -9.527719497680664
    9. '(cr' → logprob: -10.027719497680664
    10. '   ' → logprob: -10.152719497680664

Token 606: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.011062316596508026
    2. ' <=' → logprob: -4.511062145233154
    3. '>=' → logprob: -11.886062622070312
    4. '<' → logprob: -12.386062622070312
    5. '```' → logprob: -13.636062622070312
    6. ')<=' → logprob: -14.261062622070312
    7. '>' → logprob: -14.386062622070312
    8. ']<=' → logprob: -15.011062622070312
    9. '==' → logprob: -15.386062622070312
    10. '   ' → logprob: -16.011062622070312

Token 607: ' or' (ID: 503)
  Prédit: 'orr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orr' → logprob: -0.0009311101748608053
    2. ' or' → logprob: -7.000931262969971
    3. 'or' → logprob: -11.000930786132812
    4. 'orre' → logprob: -14.750930786132812
    5. ' Orr' → logprob: -14.750930786132812
    6. 'abs' → logprob: -14.875930786132812
    7. 'irr' → logprob: -15.375930786132812
    8. ' ' → logprob: -15.375930786132812
    9. '
' → logprob: -15.875930786132812
    10. 'orrent' → logprob: -16.000930786132812

Token 608: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -6.630610641877865e-06
    2. 'rr' → logprob: -12.750006675720215
    3. ' ' → logprob: -13.875006675720215
    4. ' r' → logprob: -14.625006675720215
    5. 'orr' → logprob: -14.750006675720215
    6. '
' → logprob: -15.125006675720215
    7. 'or' → logprob: -15.375006675720215
    8. '[r' → logprob: -15.625006675720215
    9. ' or' → logprob: -15.750006675720215
    10. '[' → logprob: -15.875006675720215

Token 609: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.18040911853313446
    2. ':' → logprob: -1.8054090738296509
    3. '               ' → logprob: -8.05540943145752
    4. '):
' → logprob: -9.30540943145752
    5. '                       ' → logprob: -9.43040943145752
    6. ' and' → logprob: -9.93040943145752
    7. '                   ' → logprob: -10.05540943145752
    8. '           ' → logprob: -10.55540943145752
    9. ':

' → logprob: -11.43040943145752
    10. '():
' → logprob: -11.55540943145752

Token 610: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.24128268659114838
    2. '               ' → logprob: -1.9912827014923096
    3. '                       ' → logprob: -2.7412827014923096
    4. 'continue' → logprob: -5.2412824630737305
    5. 'covered' → logprob: -5.7412824630737305
    6. ' covered' → logprob: -5.9912824630737305
    7. ' continue' → logprob: -7.2412824630737305
    8. '	               ' → logprob: -8.11628246307373
    9. '                           ' → logprob: -8.49128246307373
    10. '0' → logprob: -8.49128246307373

Token 611: ' #' (ID: 1069)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'covered' → logprob: -0.01629101112484932
    2. ' covered' → logprob: -4.26629114151001
    3. 'break' → logprob: -6.76629114151001
    4. '                   ' → logprob: -7.76629114151001
    5. 'continue' → logprob: -8.516290664672852
    6. '                       ' → logprob: -9.141290664672852
    7. '   ' → logprob: -9.766290664672852
    8. ' break' → logprob: -9.891290664672852
    9. '               ' → logprob: -10.016290664672852
    10. '           ' → logprob: -10.391290664672852

Token 612: ' current' (ID: 2208)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'covered' → logprob: -0.002926591783761978
    2. 'continue' → logprob: -6.627926826477051
    3. ' covered' → logprob: -6.752926826477051
    4. 'break' → logprob: -8.37792682647705
    5. '#' → logprob: -8.62792682647705
    6. '   ' → logprob: -11.62792682647705
    7. ' #' → logprob: -12.75292682647705
    8. ' continue' → logprob: -12.75292682647705
    9. 'cover' → logprob: -12.87792682647705
    10. 'total' → logprob: -13.62792682647705

Token 613: ' circle' (ID: 22005)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.3870640993118286
    2. 'covered' → logprob: -2.512063980102539
    3. 'break' → logprob: -2.762063980102539
    4. 'length' → logprob: -3.137063980102539
    5. 'total' → logprob: -3.512063980102539
    6. '#' → logprob: -4.137063980102539
    7. 'continue' → logprob: -4.637063980102539
    8. '_' → logprob: -4.762063980102539
    9. 'interval' → logprob: -4.762063980102539
    10. '           ' → logprob: -4.887063980102539

Token 614: ' completely' (ID: 9141)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6799397468566895
    2. 'covered' → logprob: -0.9299397468566895
    3. 'is' → logprob: -3.6799397468566895
    4. ' =' → logprob: -3.9299397468566895
    5. '_length' → logprob: -4.0549397468566895
    6. ' is' → logprob: -5.0549397468566895
    7. '0' → logprob: -5.1799397468566895
    8. ' covered' → logprob: -5.6799397468566895
    9. 'length' → logprob: -5.8049397468566895
    10. '                   ' → logprob: -5.9299397468566895

Token 615: ' inside' (ID: 6772)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'covered' → logprob: -0.010053426027297974
    2. ' covered' → logprob: -4.635053634643555
    3. 'hidden' → logprob: -9.885053634643555
    4. 'inside' → logprob: -10.010053634643555
    5. '               ' → logprob: -10.635053634643555
    6. 'blocked' → logprob: -10.635053634643555
    7. 'continue' → logprob: -11.010053634643555
    8. '           ' → logprob: -11.010053634643555
    9. 'contained' → logprob: -11.010053634643555
    10. '                       ' → logprob: -11.635053634643555

Token 616: ' other' (ID: 1273)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'covered' → logprob: -0.8657265305519104
    2. '(' → logprob: -0.9907265305519104
    3. 'continue' → logprob: -1.7407264709472656
    4. ' covered' → logprob: -4.990726470947266
    5. ' (' → logprob: -5.115726470947266
    6. ' continue' → logprob: -5.865726470947266
    7. 'or' → logprob: -5.865726470947266
    8. '0' → logprob: -5.990726470947266
    9. 'True' → logprob: -6.240726470947266
    10. '((' → logprob: -6.865726470947266

Token 617: ',' (ID: 11)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.6246779561042786
    2. '                           ' → logprob: -1.2496778964996338
    3. '                   ' → logprob: -2.624677896499634
    4. '               ' → logprob: -2.874677896499634
    5. '           ' → logprob: -3.874677896499634
    6. ' continue' → logprob: -4.124678134918213
    7. 'continue' → logprob: -4.624678134918213
    8. '                               ' → logprob: -6.749678134918213
    9. ':
' → logprob: -8.624677658081055
    10. ':' → logprob: -8.749677658081055

Token 618: ' no' (ID: 860)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'covered' → logprob: -0.09762946516275406
    2. ' covered' → logprob: -2.8476295471191406
    3. 'continue' → logprob: -3.8476295471191406
    4. '                       ' → logprob: -5.097629547119141
    5. ' continue' → logprob: -5.972629547119141
    6. '                   ' → logprob: -6.222629547119141
    7. 'break' → logprob: -6.972629547119141
    8. '   ' → logprob: -8.09762954711914
    9. 'total' → logprob: -8.09762954711914
    10. ' break' → logprob: -8.22262954711914

Token 619: ' uncovered' (ID: 81941)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'covered' → logprob: -1.0928200483322144
    2. 'coverage' → logprob: -1.7178200483322144
    3. 'con' → logprob: -1.8428200483322144
    4. 'break' → logprob: -2.217820167541504
    5. 'visible' → logprob: -2.467820167541504
    6. 'length' → logprob: -3.217820167541504
    7. 'continue' → logprob: -3.467820167541504
    8. ' contribution' → logprob: -3.842820167541504
    9. 'output' → logprob: -4.592820167541504
    10. 'outer' → logprob: -5.342820167541504

Token 620: ' arc' (ID: 26922)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.37701866030693054
    2. ' segments' → logprob: -2.377018690109253
    3. 'arc' → logprob: -2.627018690109253
    4. ' arcs' → logprob: -2.627018690109253
    5. ' arc' → logprob: -4.127018451690674
    6. 'interval' → logprob: -4.252018451690674
    7. 'segment' → logprob: -4.752018451690674
    8. 'angles' → logprob: -5.002018451690674
    9. 'circle' → logprob: -5.752018451690674
    10. '_segments' → logprob: -5.752018451690674

Token 621: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -1.1988391876220703
    2. '                   ' → logprob: -1.3238391876220703
    3. '               ' → logprob: -1.8238391876220703
    4. 'continue' → logprob: -1.8238391876220703
    5. ' continue' → logprob: -2.8238391876220703
    6. '                           ' → logprob: -3.5738391876220703
    7. '           ' → logprob: -4.19883918762207
    8. ',' → logprob: -6.57383918762207
    9. '	continue' → logprob: -7.19883918762207
    10. ' continues' → logprob: -7.44883918762207

Token 622: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.004173491150140762
    2. '                   ' → logprob: -6.004173278808594
    3. '               ' → logprob: -6.629173278808594
    4. '           ' → logprob: -8.879173278808594
    5. 'continue' → logprob: -9.129173278808594
    6. ' continue' → logprob: -9.629173278808594
    7. '                           ' → logprob: -10.004173278808594
    8. '
' → logprob: -12.129173278808594
    9. ',' → logprob: -12.629173278808594
    10. '                        
' → logprob: -13.379173278808594

Token 623: ' covered' (ID: 13083)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.04285404831171036
    2. 'covered' (adapté à ' covered') → logprob: -3.917854070663452
    3. ' continue' → logprob: -3.917854070663452
    4. ' covered' → logprob: -6.667853832244873
    5. '           ' → logprob: -8.167854309082031
    6. '                   ' → logprob: -8.417854309082031
    7. '               ' → logprob: -8.542854309082031
    8. '   ' → logprob: -9.167854309082031
    9. '                       ' → logprob: -10.167854309082031
    10. '	continue' → logprob: -10.542854309082031

Token 624: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.001175820711068809
    2. ' =' → logprob: -7.751175880432129
    3. '.append' → logprob: -7.876175880432129
    4. '=' → logprob: -9.251175880432129
    5. '_' → logprob: -9.251175880432129
    6. '_angles' → logprob: -10.251175880432129
    7. '_ranges' → logprob: -10.876175880432129
    8. '.' → logprob: -10.876175880432129
    9. '_tokens' → logprob: -11.001175880432129
    10. '_lengths' → logprob: -11.626175880432129

Token 625: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.01885209232568741
    2. 'als' → logprob: -4.268852233886719
    3. 'val' → logprob: -6.018852233886719
    4. '   ' → logprob: -7.768852233886719
    5. '=' → logprob: -8.143852233886719
    6. '[' → logprob: -8.643852233886719
    7. '```' → logprob: -8.643852233886719
    8. '       ' → logprob: -8.768852233886719
    9. '           ' → logprob: -9.143852233886719
    10. 'erv' → logprob: -9.143852233886719

Token 626: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16559170186519623
    2. ' =' → logprob: -1.9155917167663574
    3. '.append' → logprob: -5.415591716766357
    4. '.' → logprob: -7.790591716766357
    5. '.extend' → logprob: -7.915591716766357
    6. '+=' → logprob: -9.7905912399292
    7. '.=' → logprob: -10.1655912399292
    8. '[:]' → logprob: -11.4155912399292
    9. ' +=' → logprob: -11.9155912399292
    10. '=[]' → logprob: -12.5405912399292

Token 627: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -3.0948158382670954e-05
    2. '[((' → logprob: -10.500030517578125
    3. ' [(' → logprob: -13.250030517578125
    4. '[' → logprob: -13.375030517578125
    5. '([(' → logprob: -18.375030517578125
    6. '[]' → logprob: -20.875030517578125
    7. '[[' → logprob: -21.500030517578125
    8. '[-' → logprob: -22.125030517578125
    9. '   ' → logprob: -22.250030517578125
    10. '["' → logprob: -22.375030517578125

Token 628: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -16.375001907348633
    4. '2' → logprob: -16.625001907348633
    5. '(' → logprob: -16.750001907348633
    6. 'math' → logprob: -17.750001907348633
    7. '    ' → logprob: -18.125001907348633
    8. '
' → logprob: -18.500001907348633
    9. '	' → logprob: -19.000001907348633
    10. ')' → logprob: -19.250001907348633

Token 629: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1994775377388578e-05
    2. ',
' → logprob: -11.750012397766113
    3. '<|end|>' → logprob: -13.625012397766113
    4. '2' → logprob: -13.875012397766113
    5. '0' → logprob: -14.125012397766113
    6. '```' → logprob: -14.875012397766113
    7. ' ,' → logprob: -15.000012397766113
    8. '‌,' → logprob: -16.625011444091797
    9. '.' → logprob: -16.750011444091797
    10. '360' → logprob: -17.125011444091797

Token 630: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00015991552209015936
    2. ' ' → logprob: -8.750160217285156
    3. '0' → logprob: -14.625160217285156
    4. '   ' → logprob: -14.750160217285156
    5. 'math' → logprob: -15.375160217285156
    6. '6' → logprob: -15.625160217285156
    7. '(' → logprob: -17.375160217285156
    8. '360' → logprob: -17.500160217285156
    9. '  ' → logprob: -17.625160217285156
    10. ' math' → logprob: -17.750160217285156

Token 631: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.64708495605737e-05
    2. ' ' → logprob: -9.625066757202148
    3. '   ' → logprob: -15.375066757202148
    4. '6' → logprob: -17.00006675720215
    5. '0' → logprob: -17.12506675720215
    6. 'math' → logprob: -17.25006675720215
    7. '(' → logprob: -17.50006675720215
    8. '  ' → logprob: -18.00006675720215
    9. '```' → logprob: -18.50006675720215
    10. '`' → logprob: -19.37506675720215

Token 632: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.14273571968078613
    2. '*' → logprob: -2.017735719680786
    3. '*pi' → logprob: -10.142735481262207
    4. '*Math' → logprob: -11.517735481262207
    5. ' math' → logprob: -12.142735481262207
    6. ' ' → logprob: -12.642735481262207
    7. '*object' → logprob: -14.017735481262207
    8. 'math' → logprob: -14.642735481262207
    9. ')' → logprob: -14.892735481262207
    10. ',' → logprob: -15.267735481262207

Token 633: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.2014141082763672
    2. ' math' → logprob: -1.7014141082763672
    3. '(math' → logprob: -15.076414108276367
    4. '.math' → logprob: -15.451414108276367
    5. 'import' → logprob: -16.326414108276367
    6. 'python' → logprob: -16.576414108276367
    7. 'Math' → logprob: -16.576414108276367
    8. '_math' → logprob: -17.201414108276367
    9. ' ' → logprob: -17.326414108276367
    10. '```' → logprob: -17.576414108276367

Token 634: '.pi' (ID: 55497)
  Prédit: '.pi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pi' → logprob: -0.000913370808120817
    2. '.' → logprob: -7.000913143157959
    3. '.p' → logprob: -14.125913619995117
    4. '.py' → logprob: -15.250913619995117
    5. '*pi' → logprob: -15.250913619995117
    6. '.PI' → logprob: -15.375913619995117
    7. '.python' → logprob: -16.125913619995117
    8. 'pi' → logprob: -16.375913619995117
    9. '.psi' → logprob: -16.875913619995117
    10. '.math' → logprob: -17.125913619995117

Token 635: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.014252358116209507
    2. ')]
' → logprob: -4.264252185821533
    3. ')' → logprob: -10.139252662658691
    4. '                       ' → logprob: -10.764252662658691
    5. ')]
' → logprob: -10.889252662658691
    6. ')]

' → logprob: -13.139252662658691
    7. '           ' → logprob: -13.139252662658691
    8. '               ' → logprob: -13.764252662658691
    9. '                   ' → logprob: -13.764252662658691
    10. ' )' → logprob: -14.014252662658691

Token 636: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0003124632057733834
    2. '                   ' → logprob: -8.875312805175781
    3. '               ' → logprob: -9.375312805175781
    4. 'continue' → logprob: -10.250312805175781
    5. ' continue' → logprob: -10.875312805175781
    6. '           ' → logprob: -11.375312805175781
    7. '                           ' → logprob: -12.375312805175781
    8. '	continue' → logprob: -12.875312805175781
    9. '	                   ' → logprob: -13.000312805175781
    10. '       ' → logprob: -13.000312805175781

Token 637: ' break' (ID: 2338)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.05074816197156906
    2. 'break' (adapté à ' break') → logprob: -3.050748109817505
    3. '                   ' → logprob: -7.175748348236084
    4. '	break' → logprob: -7.550748348236084
    5. ' break' → logprob: -7.800748348236084
    6. '               ' → logprob: -8.300747871398926
    7. '					' → logprob: -9.675747871398926
    8. '	                   ' → logprob: -10.175747871398926
    9. '		               ' → logprob: -10.800747871398926
    10. '           ' → logprob: -11.300747871398926

Token 638: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008614808320999146
    2. '                   ' → logprob: -4.883615016937256
    3. '                       ' → logprob: -8.008614540100098
    4. '           ' → logprob: -8.008614540100098
    5. 'continue' → logprob: -8.883614540100098
    6. ')' → logprob: -9.508614540100098
    7. ' continue' → logprob: -10.508614540100098
    8. '                           ' → logprob: -11.383614540100098
    9. '.' → logprob: -11.633614540100098
    10. '                ' → logprob: -11.883614540100098

Token 639: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014622616581618786
    2. '                   ' → logprob: -6.751462459564209
    3. '                       ' → logprob: -9.25146198272705
    4. ')' → logprob: -9.62646198272705
    5. '           ' → logprob: -10.12646198272705
    6. '                ' → logprob: -11.37646198272705
    7. 'continue' → logprob: -11.62646198272705
    8. '              ' → logprob: -11.75146198272705
    9. ' continue' → logprob: -11.75146198272705
    10. ' ' → logprob: -12.25146198272705

Token 640: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08697332441806793
    2. 'continue' → logprob: -2.5869734287261963
    3. 'else' (adapté à ' else') → logprob: -5.461973190307617
    4. '           ' → logprob: -6.586973190307617
    5. '                   ' → logprob: -6.711973190307617
    6. 'elif' → logprob: -7.961973190307617
    7. 'if' → logprob: -8.336973190307617
    8. ' continue' → logprob: -8.336973190307617
    9. '#' → logprob: -8.836973190307617
    10. '
' → logprob: -9.461973190307617

Token 641: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.09625809639692307
    2. '               ' → logprob: -2.8462581634521484
    3. ':' → logprob: -4.346258163452148
    4. '                   ' → logprob: -4.471258163452148
    5. ':
' → logprob: -5.471258163452148
    6. 'continue' → logprob: -5.721258163452148
    7. ' continue' → logprob: -7.846258163452148
    8. '           ' → logprob: -8.221258163452148
    9. ',' → logprob: -8.596258163452148
    10. '                        
' → logprob: -8.721258163452148

Token 642: '                       ' (ID: 968)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'covered' → logprob: -0.4958176016807556
    2. 'continue' → logprob: -1.3708176612854004
    3. '#' → logprob: -2.6208176612854004
    4. '               ' → logprob: -3.2458176612854004
    5. '                       ' → logprob: -4.2458176612854
    6. ' covered' → logprob: -5.2458176612854
    7. '                   ' → logprob: -5.7458176612854
    8. ' continue' → logprob: -6.2458176612854
    9. '   ' → logprob: -8.370817184448242
    10. ' #' → logprob: -9.120817184448242

Token 643: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.24843531847000122
    2. 'covered' → logprob: -1.8734352588653564
    3. ' continue' → logprob: -2.8734352588653564
    4. ' covered' → logprob: -4.9984354972839355
    5. '   ' → logprob: -6.3734354972839355
    6. '                   ' → logprob: -7.8734354972839355
    7. '               ' → logprob: -7.9984354972839355
    8. '                       ' → logprob: -7.9984354972839355
    9. '#' (adapté à ' #') → logprob: -9.123435020446777
    10. '           ' → logprob: -9.373435020446777

Token 644: ' other' (ID: 1273)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'covered' → logprob: -0.3890689015388489
    2. 'continue' → logprob: -1.139068841934204
    3. '#' → logprob: -6.264069080352783
    4. ' covered' → logprob: -8.889068603515625
    5. ' continue' → logprob: -9.389068603515625
    6. '   ' → logprob: -11.139068603515625
    7. 'cover' → logprob: -11.139068603515625
    8. 'pass' → logprob: -11.764068603515625
    9. 'contin' → logprob: -12.264068603515625
    10. 'interval' → logprob: -12.639068603515625

Token 645: ' circle' (ID: 22005)
  Prédit: ' circle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' circle' → logprob: -0.8052173852920532
    2. '_circle' → logprob: -1.1802173852920532
    3. 'circle' → logprob: -2.3052172660827637
    4. '_inter' → logprob: -2.5552172660827637
    5. 'cir' → logprob: -3.8052172660827637
    6. ' =' → logprob: -5.055217266082764
    7. 'continue' → logprob: -5.555217266082764
    8. '_c' → logprob: -5.805217266082764
    9. ')' → logprob: -5.930217266082764
    10. '               ' → logprob: -5.930217266082764

Token 646: ' inside' (ID: 6772)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.24308238923549652
    2. ' completely' → logprob: -2.368082284927368
    3. 'covers' → logprob: -3.118082284927368
    4. 'is' → logprob: -3.493082284927368
    5. ' is' → logprob: -4.118082523345947
    6. 'covered' → logprob: -4.618082523345947
    7. ' covers' → logprob: -5.118082523345947
    8. '               ' → logprob: -5.618082523345947
    9. '                       ' → logprob: -5.743082523345947
    10. 'inside' → logprob: -6.118082523345947

Token 647: ' current' (ID: 2208)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -1.2284928560256958
    2. ' other' → logprob: -1.7284928560256958
    3. ' current' → logprob: -2.1034927368164062
    4. ' (' → logprob: -2.2284927368164062
    5. 'current' → logprob: -2.3534927368164062
    6. '(' → logprob: -2.7284927368164062
    7. '(i' → logprob: -2.9784927368164062
    8. '(cr' → logprob: -4.103492736816406
    9. '(current' → logprob: -4.228492736816406
    10. 'cr' → logprob: -4.478492736816406

Token 648: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014510281383991241
    2. 'circle' → logprob: -4.889510154724121
    3. ' circle' → logprob: -6.139510154724121
    4. ')' → logprob: -6.139510154724121
    5. ' ,' → logprob: -6.514510154724121
    6. '),' → logprob: -8.264510154724121
    7. '                       ' → logprob: -8.514510154724121
    8. 'continue' → logprob: -8.639510154724121
    9. ' one' → logprob: -9.889510154724121
    10. 'covered' → logprob: -10.014510154724121

Token 649: ' no' (ID: 860)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5855186581611633
    2. ' continue' → logprob: -0.8355186581611633
    3. '                       ' → logprob: -5.335518836975098
    4. '   ' → logprob: -6.335518836975098
    5. '                   ' → logprob: -7.335518836975098
    6. '	continue' → logprob: -7.460518836975098
    7. '                           ' → logprob: -7.710518836975098
    8. ' ' → logprob: -8.335518836975098
    9. 'covered' → logprob: -8.335518836975098
    10. 'angle' → logprob: -8.835518836975098

Token 650: ' effect' (ID: 3159)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.41319265961647034
    2. 'covered' → logprob: -1.163192629814148
    3. 'coverage' → logprob: -4.7881927490234375
    4. 'cover' → logprob: -5.4131927490234375
    5. 'change' → logprob: -5.5381927490234375
    6. 'need' → logprob: -6.1631927490234375
    7. ' covered' → logprob: -6.2881927490234375
    8. ' continue' → logprob: -6.5381927490234375
    9. 'contin' → logprob: -7.6631927490234375
    10. 'code' → logprob: -7.7881927490234375

Token 651: ' on' (ID: 402)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2706102728843689
    2. '                       ' → logprob: -1.8956103324890137
    3. '                   ' → logprob: -2.7706103324890137
    4. ' continue' → logprob: -4.770610332489014
    5. '           ' → logprob: -5.395610332489014
    6. 'continue' → logprob: -6.145610332489014
    7. '	continue' → logprob: -6.770610332489014
    8. '		       ' → logprob: -6.895610332489014
    9. '			' → logprob: -7.020610332489014
    10. '			       ' → logprob: -7.020610332489014

Token 652: ' arc' (ID: 26922)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'covered' → logprob: -0.26297464966773987
    2. ' covered' → logprob: -1.5129746198654175
    3. ' coverage' → logprob: -5.262974739074707
    4. 'coverage' → logprob: -5.637974739074707
    5. ' the' → logprob: -7.262974739074707
    6. 'the' → logprob: -7.637974739074707
    7. ' current' → logprob: -8.387974739074707
    8. 'current' → logprob: -8.637974739074707
    9. 'cover' → logprob: -8.762974739074707
    10. ' total' → logprob: -9.137974739074707

Token 653: ' coverage' (ID: 13422)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6538192629814148
    2. '           ' → logprob: -1.7788193225860596
    3. ' coverage' → logprob: -2.2788193225860596
    4. 'continue' → logprob: -2.6538193225860596
    5. 'coverage' → logprob: -3.1538193225860596
    6. '                       ' → logprob: -3.2788193225860596
    7. '                   ' → logprob: -3.5288193225860596
    8. 's' → logprob: -4.0288190841674805
    9. ' continue' → logprob: -6.1538190841674805
    10. '                           ' → logprob: -7.1538190841674805

Token 654: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.7306730151176453
    2. '               ' → logprob: -1.23067307472229
    3. '                   ' → logprob: -2.35567307472229
    4. ' continue' → logprob: -2.73067307472229
    5. 'continue' → logprob: -3.60567307472229
    6. '           ' → logprob: -4.105672836303711
    7. '	continue' → logprob: -5.230672836303711
    8. '<|end|>' → logprob: -5.730672836303711
    9. '                           ' → logprob: -5.980672836303711
    10. '		' → logprob: -6.105672836303711

Token 655: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.7540509700775146
    2. '               ' → logprob: -1.1290509700775146
    3. '                   ' → logprob: -2.7540509700775146
    4. ' continue' → logprob: -2.8790509700775146
    5. 'continue' → logprob: -3.0040509700775146
    6. '           ' → logprob: -4.379051208496094
    7. '	continue' → logprob: -4.504051208496094
    8. '		' → logprob: -6.004051208496094
    9. '<|end|>' → logprob: -6.754051208496094
    10. '       ' → logprob: -6.879051208496094

Token 656: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.005257714539766312
    2. ' continue' → logprob: -5.255257606506348
    3. '                       ' → logprob: -11.505257606506348
    4. '	continue' → logprob: -12.255257606506348
    5. '           ' → logprob: -12.505257606506348
    6. 'pass' → logprob: -12.880257606506348
    7. '   ' → logprob: -13.755257606506348
    8. '                   ' → logprob: -14.130257606506348
    9. '               ' → logprob: -15.130257606506348
    10. '                           ' → logprob: -15.130257606506348

Token 657: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007693672669120133
    2. '                
' → logprob: -7.625769138336182
    3. '                   ' → logprob: -9.62576961517334
    4. '           ' → logprob: -10.00076961517334
    5. '  
' → logprob: -10.62576961517334
    6. '<|end|>' → logprob: -10.87576961517334
    7. '                        
' → logprob: -11.00076961517334
    8. '                ' → logprob: -11.12576961517334
    9. '```' → logprob: -11.12576961517334
    10. ',' → logprob: -11.50076961517334

Token 658: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005314635578542948
    2. 'd' → logprob: -6.380314826965332
    3. 'import' → logprob: -6.630314826965332
    4. '                   ' → logprob: -7.505314826965332
    5. '                
' → logprob: -7.755314826965332
    6. 'if' → logprob: -7.880314826965332
    7. '```' → logprob: -8.255314826965332
    8. '                       ' → logprob: -8.880314826965332
    9. 'angle' → logprob: -9.380314826965332
    10. '
' → logprob: -9.755314826965332

Token 659: ' #' (ID: 1069)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.10397367924451828
    2. 'else' → logprob: -3.228973627090454
    3. 'theta' → logprob: -3.228973627090454
    4. 'try' → logprob: -4.478973865509033
    5. 'import' → logprob: -5.228973865509033
    6. 'ang' → logprob: -6.728973865509033
    7. 'if' → logprob: -7.353973865509033
    8. 'acos' → logprob: -8.478973388671875
    9. 'cos' → logprob: -8.603973388671875
    10. 'a' → logprob: -9.103973388671875

Token 660: ' calculate' (ID: 17950)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.11934970319271088
    2. 'theta' → logprob: -2.619349718093872
    3. 'try' → logprob: -4.369349479675293
    4. 'ang' → logprob: -4.369349479675293
    5. 'a' → logprob: -5.244349479675293
    6. 'alpha' → logprob: -6.119349479675293
    7. 'delta' → logprob: -6.494349479675293
    8. '#' → logprob: -6.494349479675293
    9. 'cos' → logprob: -6.619349479675293
    10. 'if' → logprob: -7.494349479675293

Token 661: ' intersection' (ID: 42002)
  Prédit: 'theta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'theta' → logprob: -0.5012528896331787
    2. 'angle' → logprob: -1.0012528896331787
    3. 'alpha' → logprob: -4.001253128051758
    4. 'phi' → logprob: -5.251253128051758
    5. 'ang' → logprob: -6.501253128051758
    6. 'delta' → logprob: -7.001253128051758
    7. ' theta' → logprob: -8.251253128051758
    8. 'try' → logprob: -8.626253128051758
    9. 'a' → logprob: -8.626253128051758
    10. ' angle' → logprob: -9.126253128051758

Token 662: ' angles' (ID: 43448)
  Prédit: '_angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.08604611456394196
    2. 'angle' → logprob: -2.7110462188720703
    3. 'theta' → logprob: -5.46104621887207
    4. ' angle' → logprob: -5.58604621887207
    5. '_angles' → logprob: -5.71104621887207
    6. '_theta' → logprob: -6.33604621887207
    7. 'angles' → logprob: -6.46104621887207
    8. ' angles' → logprob: -7.33604621887207
    9. '_' → logprob: -9.21104621887207
    10. '=' → logprob: -9.21104621887207

Token 663: ' on' (ID: 402)
  Prédit: ' theta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' theta' → logprob: -0.5117129683494568
    2. 'theta' → logprob: -1.1367130279541016
    3. '               ' → logprob: -3.8867130279541016
    4. ' angle' → logprob: -4.511713027954102
    5. 'angle' → logprob: -4.636713027954102
    6. '   ' → logprob: -4.761713027954102
    7. 'import' → logprob: -4.761713027954102
    8. ',' → logprob: -4.761713027954102
    9. 'phi' → logprob: -6.511713027954102
    10. ' acos' → logprob: -6.511713027954102

Token 664: ' current' (ID: 2208)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7888851761817932
    2. 'current' → logprob: -1.5388851165771484
    3. ' the' → logprob: -1.7888851165771484
    4. 'circle' → logprob: -2.2888851165771484
    5. 'cx' → logprob: -3.6638851165771484
    6. ' current' → logprob: -3.7888851165771484
    7. ' circle' → logprob: -5.163885116577148
    8. 'this' → logprob: -5.538885116577148
    9. ' cx' → logprob: -6.663885116577148
    10. 'circ' → logprob: -6.663885116577148

Token 665: ' circle' (ID: 22005)
  Prédit: ' circle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' circle' → logprob: -0.4240935146808624
    2. 'circle' → logprob: -1.17409348487854
    3. 'angle' → logprob: -4.424093723297119
    4. 'arc' → logprob: -4.424093723297119
    5. ' arc' → logprob: -5.299093723297119
    6. '_circle' → logprob: -6.174093723297119
    7. 'theta' → logprob: -6.424093723297119
    8. ' angle' → logprob: -7.424093723297119
    9. 'import' → logprob: -7.674093723297119
    10. ' theta' → logprob: -7.924093723297119

Token 666: '
' (ID: 198)
  Prédit: 'theta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'theta' → logprob: -0.5200797915458679
    2. ' theta' → logprob: -1.2700798511505127
    3. '               ' → logprob: -3.2700798511505127
    4. 'angle' → logprob: -3.3950798511505127
    5. 'import' → logprob: -4.145079612731934
    6. ' angle' → logprob: -4.395079612731934
    7. 'a' → logprob: -5.145079612731934
    8. '```' → logprob: -5.770079612731934
    9. 'phi' → logprob: -5.895079612731934
    10. 'h' → logprob: -6.145079612731934

Token 667: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3796426057815552
    2. ' theta' → logprob: -1.2546426057815552
    3. 'theta' → logprob: -4.004642486572266
    4. '   ' → logprob: -6.004642486572266
    5. ' angle' → logprob: -6.129642486572266
    6. '           ' → logprob: -6.379642486572266
    7. ',' → logprob: -7.004642486572266
    8. 'angle' → logprob: -7.379642486572266
    9. '       ' → logprob: -7.504642486572266
    10. ' a' → logprob: -7.504642486572266

Token 668: ' #' (ID: 1069)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.3494831323623657
    2. 'theta' → logprob: -1.7244831323623657
    3. 'a' → logprob: -2.724483013153076
    4. 'cos' → logprob: -3.849483013153076
    5. 'alpha' → logprob: -4.599483013153076
    6. 'try' → logprob: -4.599483013153076
    7. 'phi' → logprob: -5.599483013153076
    8. 'delta' → logprob: -5.974483013153076
    9. 'ang' → logprob: -6.349483013153076
    10. 'acos' → logprob: -7.599483013153076

Token 669: ' Law' (ID: 9740)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.2657974362373352
    2. 'theta' → logprob: -2.2657973766326904
    3. 'alpha' → logprob: -2.6407973766326904
    4. 'cos' → logprob: -3.5157973766326904
    5. 'a' → logprob: -4.2657976150512695
    6. 'phi' → logprob: -4.6407976150512695
    7. 'ang' → logprob: -6.2657976150512695
    8. 'try' → logprob: -6.8907976150512695
    9. 'delta' → logprob: -7.1407976150512695
    10. 'acos' → logprob: -7.8907976150512695

Token 670: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.08872774988412857
    2. '=' → logprob: -3.3387277126312256
    3. 'of' → logprob: -4.588727951049805
    4. ')' → logprob: -4.588727951049805
    5. '(' → logprob: -5.213727951049805
    6. ' acos' → logprob: -5.463727951049805
    7. 's' → logprob: -5.963727951049805
    8. ' ' → logprob: -5.963727951049805
    9. ' =' → logprob: -6.088727951049805
    10. '_of' → logprob: -6.713727951049805

Token 671: ' cos' (ID: 8974)
  Prédit: 'cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cos' → logprob: -6.170270353322849e-05
    2. ' cos' → logprob: -9.750061988830566
    3. '   ' → logprob: -13.000061988830566
    4. 'acos' → logprob: -14.000061988830566
    5. ' cosine' → logprob: -16.12506103515625
    6. ' ' → logprob: -16.87506103515625
    7. 'Cos' → logprob: -17.12506103515625
    8. '
' → logprob: -17.25006103515625
    9. '_cos' → logprob: -17.25006103515625
    10. '*cos' → logprob: -18.50006103515625

Token 672: 'ines' (ID: 2028)
  Prédit: 'ines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ines' → logprob: -0.5793646574020386
    2. 'ine' → logprob: -0.8293646574020386
    3. 'a' → logprob: -7.454364776611328
    4. 'theta' → logprob: -7.579364776611328
    5. 'acos' → logprob: -7.579364776611328
    6. 'e' → logprob: -7.704364776611328
    7. 'cos' → logprob: -8.079364776611328
    8. 'angle' → logprob: -8.454364776611328
    9. 'in' → logprob: -8.704364776611328
    10. '   ' → logprob: -8.829364776611328

Token 673: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8902320265769958
    2. ':' → logprob: -2.2652320861816406
    3. ')' → logprob: -2.6402320861816406
    4. '(' → logprob: -2.6402320861816406
    5. ' theta' → logprob: -2.6402320861816406
    6. ' (' → logprob: -3.1402320861816406
    7. '           ' → logprob: -3.1402320861816406
    8. '               ' → logprob: -3.2652320861816406
    9. ' angle' → logprob: -3.6402320861816406
    10. ',' → logprob: -3.7652320861816406

Token 674: '               ' (ID: 506)
  Prédit: ' theta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' theta' → logprob: -0.5464706420898438
    2. '               ' → logprob: -2.0464706420898438
    3. '   ' → logprob: -2.2964706420898438
    4. ':' → logprob: -2.2964706420898438
    5. 'theta' → logprob: -3.6714706420898438
    6. ' angle' → logprob: -4.421470642089844
    7. '           ' → logprob: -4.421470642089844
    8. ')' → logprob: -4.671470642089844
    9. ',' → logprob: -4.796470642089844
    10. '                   ' → logprob: -5.546470642089844

Token 675: ' cos' (ID: 8974)
  Prédit: 'theta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'theta' → logprob: -0.5597134232521057
    2. ' theta' → logprob: -1.434713363647461
    3. 'angle' → logprob: -2.809713363647461
    4. 'cos' (adapté à ' cos') → logprob: -2.934713363647461
    5. 'a' → logprob: -3.809713363647461
    6. ' cos' → logprob: -3.934713363647461
    7. ' angle' → logprob: -4.309713363647461
    8. ' acos' → logprob: -5.059713363647461
    9. ' a' → logprob: -5.434713363647461
    10. '               ' → logprob: -6.059713363647461

Token 676: '_angle' (ID: 51505)
  Prédit: '_theta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_theta' → logprob: -0.5780341625213623
    2. '_angle' → logprob: -0.8280341625213623
    3. '_a' → logprob: -7.328034400939941
    4. '_phi' → logprob: -7.578034400939941
    5. '_value' → logprob: -8.328034400939941
    6. 'theta' → logprob: -8.578034400939941
    7. '_val' → logprob: -8.953034400939941
    8. 'A' → logprob: -9.578034400939941
    9. 'θ' → logprob: -9.578034400939941
    10. '_alpha' → logprob: -9.578034400939941

Token 677: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7656359076499939
    2. '=' → logprob: -1.2656359672546387
    3. '_theta' → logprob: -1.5156359672546387
    4. '_angle' → logprob: -3.7656359672546387
    5. 'theta' → logprob: -5.265635967254639
    6. '_' → logprob: -6.640635967254639
    7. 'Theta' → logprob: -7.265635967254639
    8. ' ' → logprob: -7.390635967254639
    9. '_a' → logprob: -7.765635967254639
    10. ')' → logprob: -8.01563549041748

Token 678: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.011746253818273544
    2. ' (' → logprob: -5.136746406555176
    3. '(max' → logprob: -5.511746406555176
    4. '((' → logprob: -6.886746406555176
    5. '(min' → logprob: -7.511746406555176
    6. '(' → logprob: -9.761746406555176
    7. '(math' → logprob: -9.886746406555176
    8. '(dx' → logprob: -10.261746406555176
    9. '   ' → logprob: -11.136746406555176
    10. '(round' → logprob: -11.261746406555176

Token 679: 'cr' (ID: 798)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.009364073164761066
    2. 'cr' → logprob: -4.759364128112793
    3. ' d' → logprob: -8.009364128112793
    4. '(d' → logprob: -8.134364128112793
    5. '(cr' → logprob: -9.384364128112793
    6. ' cr' → logprob: -10.509364128112793
    7. 'r' → logprob: -13.259364128112793
    8. '(' → logprob: -13.259364128112793
    9. '	d' → logprob: -13.259364128112793
    10. ' (' → logprob: -13.259364128112793

Token 680: '*' (ID: 9)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.002830673009157181
    2. '2' → logprob: -6.002830505371094
    3. '²' → logprob: -8.002830505371094
    4. '*' → logprob: -11.877830505371094
    5. ' ' → logprob: -12.752830505371094
    6. ' **' → logprob: -12.752830505371094
    7. '^' → logprob: -12.752830505371094
    8. '_squared' → logprob: -13.002830505371094
    9. '***' → logprob: -14.377830505371094
    10. 'd' → logprob: -15.002830505371094

Token 681: 'cr' (ID: 798)
  Prédit: 'cr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.004973778035491705
    2. '*' → logprob: -5.879973888397217
    3. '2' → logprob: -6.254973888397217
    4. ' cr' → logprob: -8.754973411560059
    5. '**' → logprob: -10.379973411560059
    6. '	cr' → logprob: -10.879973411560059
    7. 'cos' → logprob: -11.129973411560059
    8. '(cr' → logprob: -12.254973411560059
    9. 'c' → logprob: -12.254973411560059
    10. 'd' → logprob: -12.754973411560059

Token 682: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3132686913013458
    2. '+' → logprob: -1.3132686614990234
    3. ' ' → logprob: -12.438268661499023
    4. ' plus' → logprob: -14.563268661499023
    5. '+c' → logprob: -14.813268661499023
    6. ',' → logprob: -14.938268661499023
    7. '+d' → logprob: -14.938268661499023
    8. ' +
' → logprob: -15.063268661499023
    9. '   ' → logprob: -15.563268661499023
    10. '+
' → logprob: -15.688268661499023

Token 683: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.016058770939707756
    2. ' d' → logprob: -4.141058921813965
    3. '	d' → logprob: -11.391058921813965
    4. ')d' → logprob: -12.641058921813965
    5. '   ' → logprob: -12.891058921813965
    6. '(d' → logprob: -13.641058921813965
    7. ' ' → logprob: -14.016058921813965
    8. '  ' → logprob: -14.016058921813965
    9. '<|end|>' → logprob: -14.016058921813965
    10. ''d' → logprob: -14.141058921813965

Token 684: '*d' (ID: 81685)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6278874278068542
    2. '**' → logprob: -1.377887487411499
    3. '*' → logprob: -1.752887487411499
    4. '*d' → logprob: -4.25288724899292
    5. ' -' → logprob: -4.87788724899292
    6. ' ' → logprob: -5.12788724899292
    7. 'd' → logprob: -5.12788724899292
    8. '<|end|>' → logprob: -6.37788724899292
    9. '<|end|>' → logprob: -6.37788724899292
    10. '-' → logprob: -6.87788724899292

Token 685: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6931666731834412
    2. ' -' → logprob: -0.6931666731834412
    3. ' ' → logprob: -11.443166732788086
    4. '```' → logprob: -12.818166732788086
    5. ')' → logprob: -13.193166732788086
    6. '1' → logprob: -13.818166732788086
    7. '   ' → logprob: -15.068166732788086
    8. '2' → logprob: -15.193166732788086
    9. '"' → logprob: -15.318166732788086
    10. '0' → logprob: -15.443166732788086

Token 686: ' or' (ID: 503)
  Prédit: 'orr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orr' → logprob: -0.02056548185646534
    2. ' or' → logprob: -3.8955655097961426
    3. 'or' → logprob: -11.020565032958984
    4. ' ' → logprob: -13.520565032958984
    5. 'orrent' → logprob: -14.020565032958984
    6. 'orror' → logprob: -14.145565032958984
    7. '   ' → logprob: -14.270565032958984
    8. 'orre' → logprob: -14.270565032958984
    9. '  ' → logprob: -14.895565032958984
    10. '`' → logprob: -14.895565032958984

Token 687: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -9.491498531133402e-06
    2. '*r' → logprob: -12.875009536743164
    3. 'ror' → logprob: -13.500009536743164
    4. '*' → logprob: -14.000009536743164
    5. '**' → logprob: -14.125009536743164
    6. ' r' → logprob: -14.500009536743164
    7. '2' → logprob: -14.750009536743164
    8. 'rr' → logprob: -14.875009536743164
    9. '^' → logprob: -14.875009536743164
    10. '_' → logprob: -15.125009536743164

Token 688: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.017355702817440033
    2. '**' → logprob: -4.517355918884277
    3. ')' → logprob: -5.392355918884277
    4. ')/(' → logprob: -7.017355918884277
    5. '*r' → logprob: -7.517355918884277
    6. '2' → logprob: -8.892355918884277
    7. ' ' → logprob: -9.892355918884277
    8. 'r' → logprob: -10.642355918884277
    9. 'cr' → logprob: -10.642355918884277
    10. ' *' → logprob: -11.017355918884277

Token 689: 'orr' (ID: 4761)
  Prédit: 'orr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orr' → logprob: -4.417976379045285e-05
    2. 'or' → logprob: -10.750043869018555
    3. ' or' → logprob: -11.750043869018555
    4. 'rr' → logprob: -12.000043869018555
    5. '2' → logprob: -13.000043869018555
    6. 'orre' → logprob: -13.250043869018555
    7. 'j' → logprob: -13.750043869018555
    8. '*' → logprob: -13.875043869018555
    9. 'o' → logprob: -15.000043869018555
    10. 'rror' → logprob: -15.125043869018555

Token 690: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015333088813349605
    2. ')/(' → logprob: -6.626533508300781
    3. ' )' → logprob: -8.501533508300781
    4. ')/' → logprob: -13.376533508300781
    5. '   ' → logprob: -13.751533508300781
    6. '```' → logprob: -14.126533508300781
    7. ')
' → logprob: -15.376533508300781
    8. ' ' → logprob: -16.12653350830078
    9. '')' → logprob: -16.75153350830078
    10. '")' → logprob: -16.75153350830078

Token 691: ' /' (ID: 820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22045491635799408
    2. ')/(' → logprob: -2.3454549312591553
    3. ' /' → logprob: -2.7204549312591553
    4. ' )' → logprob: -3.4704549312591553
    5. '/(' → logprob: -6.220454692840576
    6. '/' → logprob: -6.345454692840576
    7. ')/' → logprob: -7.345454692840576
    8. '   ' → logprob: -7.970454692840576
    9. ' ' → logprob: -8.970455169677734
    10. ' /(' → logprob: -9.095455169677734

Token 692: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005543439765460789
    2. ' (' → logprob: -7.50055456161499
    3. '2' → logprob: -13.875554084777832
    4. '   ' → logprob: -15.750554084777832
    5. ' ' → logprob: -16.12555503845215
    6. '(
' → logprob: -16.87555503845215
    7. '(float' → logprob: -17.25055503845215
    8. '(int' → logprob: -17.87555503845215
    9. '  ' → logprob: -18.12555503845215
    10. '(double' → logprob: -18.25055503845215

Token 693: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1799587458372116
    2. '(' → logprob: -1.804958701133728
    3. ' (' → logprob: -9.05495834350586
    4. ' ' → logprob: -9.30495834350586
    5. '   ' → logprob: -12.80495834350586
    6. '```' → logprob: -13.80495834350586
    7. ')' → logprob: -14.92995834350586
    8. '[' → logprob: -15.42995834350586
    9. '  ' → logprob: -15.55495834350586
    10. '
' → logprob: -15.67995834350586

Token 694: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2014227956533432
    2. '*' → logprob: -1.7014228105545044
    3. ' ' → logprob: -12.326422691345215
    4. '   ' → logprob: -13.326422691345215
    5. '*object' → logprob: -14.326422691345215
    6. '*d' → logprob: -14.451422691345215
    7. '*c' → logprob: -14.826422691345215
    8. '	cr' → logprob: -15.201422691345215
    9. '    ' → logprob: -15.451422691345215
    10. 'cr' → logprob: -15.576422691345215

Token 695: ' cr' (ID: 1769)
  Prédit: 'cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.00016146517009474337
    2. ' cr' → logprob: -8.750161170959473
    3. '	cr' → logprob: -12.750161170959473
    4. '   ' → logprob: -17.00016212463379
    5. 'c' → logprob: -19.37516212463379
    6. '```' → logprob: -20.12516212463379
    7. '(cr' → logprob: -20.37516212463379
    8. 'cur' → logprob: -20.87516212463379
    9. '_cr' → logprob: -21.00016212463379
    10. 'crt' → logprob: -21.00016212463379

Token 696: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.257160484790802
    2. ' *' → logprob: -1.5071604251861572
    3. '*d' → logprob: -5.257160663604736
    4. '*object' → logprob: -12.632160186767578
    5. 'd' → logprob: -14.632160186767578
    6. '   ' → logprob: -14.882160186767578
    7. ' ' → logprob: -14.882160186767578
    8. '**' → logprob: -15.007160186767578
    9. '*c' → logprob: -15.132160186767578
    10. '*f' → logprob: -15.132160186767578

Token 697: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.001327499165199697
    2. ' d' → logprob: -6.6263275146484375
    3. '	d' → logprob: -14.001327514648438
    4. '   ' → logprob: -15.501327514648438
    5. ' ' → logprob: -15.876327514648438
    6. '*d' → logprob: -15.876327514648438
    7. ')d' → logprob: -16.376327514648438
    8. '
' → logprob: -16.626327514648438
    9. '  ' → logprob: -17.126327514648438
    10. '>d' → logprob: -18.126327514648438

Token 698: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015177152818068862
    2. ')
' → logprob: -6.6265177726745605
    3. ' )' → logprob: -8.626517295837402
    4. ')
' → logprob: -12.376517295837402
    5. '   ' → logprob: -13.126517295837402
    6. ' )
' → logprob: -13.251517295837402
    7. ')`' → logprob: -14.376517295837402
    8. '           ' → logprob: -14.626517295837402
    9. ' ' → logprob: -14.751517295837402
    10. '               ' → logprob: -15.001517295837402

Token 699: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08792893588542938
    2. ' if' → logprob: -3.3379290103912354
    3. 'if' → logprob: -3.5879290103912354
    4. '   ' → logprob: -4.087928771972656
    5. 'cos' → logprob: -6.212928771972656
    6. ')
' → logprob: -7.712928771972656
    7. '<|end|>' → logprob: -8.337928771972656
    8. 'cl' → logprob: -8.462928771972656
    9. '
' → logprob: -8.462928771972656
    10. '       ' → logprob: -8.962928771972656

Token 700: ' if' (ID: 538)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.9226053953170776
    2. ')' → logprob: -1.2976053953170776
    3. 'max' → logprob: -1.9226053953170776
    4. '1' → logprob: -2.297605514526367
    5. 'cos' → logprob: -3.172605514526367
    6. ' min' → logprob: -4.547605514526367
    7. '               ' → logprob: -5.297605514526367
    8. ' max' → logprob: -5.547605514526367
    9. ',' → logprob: -5.547605514526367
    10. 'if' (adapté à ' if') → logprob: -5.547605514526367

Token 701: ' cos' (ID: 8974)
  Prédit: 'cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cos' → logprob: -0.003705062437802553
    2. ' cos' → logprob: -5.628705024719238
    3. 'abs' → logprob: -9.253705024719238
    4. '   ' → logprob: -12.128705024719238
    5. ' abs' → logprob: -13.128705024719238
    6. ' ' → logprob: -13.503705024719238
    7. '  ' → logprob: -15.378705024719238
    8. '    ' → logprob: -17.003705978393555
    9. '1' → logprob: -17.253705978393555
    10. '     ' → logprob: -17.378705978393555

Token 702: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -6.869017852295656e-06
    2. 'angle' → logprob: -12.625006675720215
    3. '_' → logprob: -13.250006675720215
    4. '_ang' → logprob: -13.750006675720215
    5. '_cos' → logprob: -15.625006675720215
    6. '_a' → logprob: -16.37500762939453
    7. '_angles' → logprob: -16.75000762939453
    8. 'cos' → logprob: -16.75000762939453
    9. '(angle' → logprob: -16.87500762939453
    10. '_age' → logprob: -17.00000762939453

Token 703: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5759934186935425
    2. '>' → logprob: -0.8259934186935425
    3. ' <' → logprob: -10.325993537902832
    4. '<' → logprob: -11.700993537902832
    5. '=' → logprob: -12.325993537902832
    6. ')' → logprob: -13.200993537902832
    7. ')>' → logprob: -13.200993537902832
    8. '[' → logprob: -13.450993537902832
    9. ' ' → logprob: -13.575993537902832
    10. ' =' → logprob: -14.450993537902832

Token 704: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.6087021473795176e-05
    2. ' -' → logprob: -10.000045776367188
    3. '1' → logprob: -15.250045776367188
    4. '   ' → logprob: -15.375045776367188
    5. ' ' → logprob: -16.250045776367188
    6. '  ' → logprob: -17.750045776367188
    7. '```' → logprob: -18.000045776367188
    8. '0' → logprob: -18.625045776367188
    9. '       ' → logprob: -19.125045776367188
    10. '
' → logprob: -19.125045776367188

Token 705: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.875000953674316
    3. '0' → logprob: -16.500001907348633
    4. '```' → logprob: -17.125001907348633
    5. '   ' → logprob: -18.000001907348633
    6. '  ' → logprob: -18.500001907348633
    7. '
' → logprob: -18.750001907348633
    8. '

' → logprob: -18.937501907348633
    9. '           ' → logprob: -19.687501907348633
    10. '-' → logprob: -19.687501907348633

Token 706: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005330520682036877
    2. '.' → logprob: -5.630330562591553
    3. ' or' → logprob: -6.755330562591553
    4. '):' → logprob: -8.005330085754395
    5. ':
' → logprob: -9.505330085754395
    6. '<|end|>' → logprob: -9.755330085754395
    7. 'or' → logprob: -10.505330085754395
    8. ' :' → logprob: -10.505330085754395
    9. '   ' → logprob: -11.755330085754395
    10. '       ' → logprob: -12.380330085754395

Token 707: '                   ' (ID: 699)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.25137054920196533
    2. '-' → logprob: -1.8763705492019653
    3. '1' → logprob: -2.751370429992676
    4. ' ' → logprob: -5.376370429992676
    5. ' =' → logprob: -8.126370429992676
    6. '   ' → logprob: -9.251370429992676
    7. ')' → logprob: -10.001370429992676
    8. '=' → logprob: -10.251370429992676
    9. '                   ' → logprob: -10.251370429992676
    10. '           ' → logprob: -10.751370429992676

Token 708: ' cos' (ID: 8974)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0053176009096205235
    2. ' -' → logprob: -5.255317687988281
    3. '                   ' → logprob: -10.130317687988281
    4. '1' → logprob: -10.255317687988281
    5. '                       ' → logprob: -12.755317687988281
    6. '               ' → logprob: -13.130317687988281
    7. '           ' → logprob: -13.755317687988281
    8. '                               ' → logprob: -14.380317687988281
    9. ' ' → logprob: -14.630317687988281
    10. '   ' → logprob: -15.005317687988281

Token 709: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -9.722539834911004e-05
    2. '_' → logprob: -9.375097274780273
    3. '_ang' → logprob: -12.500097274780273
    4. 'angle' → logprob: -12.875097274780273
    5. '_angles' → logprob: -13.125097274780273
    6. 'Angle' → logprob: -13.500097274780273
    7. '-angle' → logprob: -13.875097274780273
    8. '(angle' → logprob: -15.000097274780273
    9. '(' → logprob: -15.250097274780273
    10. ')' → logprob: -15.750097274780273

Token 710: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048587486147880554
    2. ' =' → logprob: -3.0485875606536865
    3. '＝' → logprob: -17.173587799072266
    4. '<|end|>' → logprob: -17.173587799072266
    5. '=}' → logprob: -17.548587799072266
    6. ')=' → logprob: -17.798587799072266
    7. ')' → logprob: -17.923587799072266
    8. '=None' → logprob: -18.298587799072266
    9. ',' → logprob: -18.298587799072266
    10. '=

' → logprob: -18.298587799072266

Token 711: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00029601677670143545
    2. ' -' → logprob: -8.125295639038086
    3. '1' → logprob: -16.750295639038086
    4. '   ' → logprob: -17.500295639038086
    5. ' ' → logprob: -18.000295639038086
    6. '−' → logprob: -19.500295639038086
    7. '  ' → logprob: -19.750295639038086
    8. '(-' → logprob: -21.250295639038086
    9. '‌' → logprob: -21.375295639038086
    10. '```' → logprob: -21.500295639038086

Token 712: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '0' → logprob: -18.75
    4. '```' → logprob: -19.75
    5. 'math' → logprob: -20.0
    6. '   ' → logprob: -20.125
    7. '.' → logprob: -20.9375
    8. 'import' → logprob: -21.5625
    9. '2' → logprob: -21.8125
    10. '１' → logprob: -21.9375

Token 713: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4771505296230316
    2. ' elif' → logprob: -1.477150559425354
    3. 'elif' → logprob: -2.1021504402160645
    4. '<|end|>' → logprob: -3.7271504402160645
    5. ')' → logprob: -6.3521504402160645
    6. '	elif' → logprob: -7.9771504402160645
    7. '                   ' → logprob: -8.102150917053223
    8. '           ' → logprob: -8.102150917053223
    9. ' else' → logprob: -8.227150917053223
    10. '<|end|>' → logprob: -8.352150917053223

Token 714: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0313849076628685
    2. ' elif' → logprob: -3.6563849449157715
    3. 'elif' → logprob: -5.4063849449157715
    4. '<|end|>' → logprob: -8.406384468078613
    5. ' else' → logprob: -9.281384468078613
    6. ')' → logprob: -9.906384468078613
    7. ' if' → logprob: -10.531384468078613
    8. '                ' → logprob: -10.656384468078613
    9. '                   ' → logprob: -10.906384468078613
    10. '           ' → logprob: -10.906384468078613

Token 715: ' if' (ID: 538)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.691511869430542
    2. ' elif' → logprob: -1.066511869430542
    3. '1' → logprob: -2.566511869430542
    4. ' if' → logprob: -3.191511869430542
    5. '               ' → logprob: -4.191512107849121
    6. ' ' → logprob: -4.566512107849121
    7. 'if' (adapté à ' if') → logprob: -4.816512107849121
    8. ')' → logprob: -6.441512107849121
    9. '<|end|>' → logprob: -7.941512107849121
    10. '0' → logprob: -8.066512107849121

Token 716: ' cos' (ID: 8974)
  Prédit: ' cos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cos' → logprob: -0.38691046833992004
    2. 'cos' → logprob: -1.1369104385375977
    3. '1' → logprob: -10.636910438537598
    4. ' ' → logprob: -12.011910438537598
    5. '   ' → logprob: -12.386910438537598
    6. '_cos' → logprob: -14.136910438537598
    7. '  ' → logprob: -14.136910438537598
    8. ' cosine' → logprob: -14.136910438537598
    9. '	c' → logprob: -14.261910438537598
    10. '    ' → logprob: -15.261910438537598

Token 717: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -3.273621405242011e-05
    2. 'angle' → logprob: -10.375032424926758
    3. 'Angle' → logprob: -14.625032424926758
    4. '-angle' → logprob: -14.625032424926758
    5. '_ang' → logprob: -15.875032424926758
    6. ' angle' → logprob: -16.375032424926758
    7. '_age' → logprob: -16.500032424926758
    8. '_' → logprob: -16.875032424926758
    9. '```' → logprob: -17.000032424926758
    10. 'cos' → logprob: -17.500032424926758

Token 718: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6934661269187927
    2. ' >' → logprob: -0.6934661269187927
    3. '<|end|>' → logprob: -8.193466186523438
    4. ' ' → logprob: -11.068466186523438
    5. ')>' → logprob: -11.818466186523438
    6. ')' → logprob: -12.193466186523438
    7. '<|end|>' → logprob: -12.193466186523438
    8. ',' → logprob: -13.568466186523438
    9. '">' → logprob: -13.943466186523438
    10. ' ' → logprob: -14.318466186523438

Token 719: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004079112783074379
    2. ' ' → logprob: -5.504079341888428
    3. '   ' → logprob: -14.37907886505127
    4. '  ' → logprob: -15.87907886505127
    5. '+' → logprob: -18.629079818725586
    6. '<|end|>' → logprob: -18.754079818725586
    7. '    ' → logprob: -18.879079818725586
    8. '```' → logprob: -19.504079818725586
    9. '	' → logprob: -19.879079818725586
    10. '                               ' → logprob: -20.441579818725586

Token 720: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -18.75000762939453
    4. '  ' → logprob: -20.00000762939453
    5. '+' → logprob: -21.12500762939453
    6. '
' → logprob: -21.25000762939453
    7. '```' → logprob: -21.37500762939453
    8. '<|end|>' → logprob: -21.62500762939453
    9. '    ' → logprob: -22.12500762939453
    10. '{' → logprob: -22.50000762939453

Token 721: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2146526575088501
    2. '=' → logprob: -2.0896525382995605
    3. ':' → logprob: -3.3396525382995605
    4. '<|end|>' → logprob: -3.5896525382995605
    5. ')' → logprob: -5.7146525382995605
    6. '               ' → logprob: -6.5896525382995605
    7. '<|end|>' → logprob: -7.8396525382995605
    8. ' ' → logprob: -8.214653015136719
    9. '           ' → logprob: -8.589653015136719
    10. '=True' → logprob: -8.839653015136719

Token 722: '                   ' (ID: 699)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17404255270957947
    2. '1' → logprob: -2.1740424633026123
    3. '                   ' → logprob: -3.1740424633026123
    4. '               ' → logprob: -5.674042701721191
    5. '                    ' → logprob: -8.299042701721191
    6. ' cos' → logprob: -8.549042701721191
    7. '                ' → logprob: -8.799042701721191
    8. '   ' → logprob: -10.549042701721191
    9. ' c' → logprob: -10.799042701721191
    10. '                       ' → logprob: -10.924042701721191

Token 723: ' cos' (ID: 8974)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3132690191268921
    2. ' ' → logprob: -1.313269019126892
    3. '                   ' → logprob: -11.938268661499023
    4. '               ' → logprob: -14.813268661499023
    5. '   ' → logprob: -16.063268661499023
    6. '                       ' → logprob: -16.688268661499023
    7. '                    ' → logprob: -16.813268661499023
    8. 'cos' (adapté à ' cos') → logprob: -16.813268661499023
    9. '           ' → logprob: -17.813268661499023
    10. '                ' → logprob: -17.813268661499023

Token 724: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -1.3856492842023727e-06
    2. '_' → logprob: -13.875000953674316
    3. 'angle' → logprob: -15.625000953674316
    4. '_ang' → logprob: -15.750000953674316
    5. '_cos' → logprob: -16.750001907348633
    6. 'Angle' → logprob: -16.875001907348633
    7. ' _' → logprob: -17.000001907348633
    8. '   ' → logprob: -17.375001907348633
    9. ' angle' → logprob: -19.000001907348633
    10. '_age' → logprob: -19.125001907348633

Token 725: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692810595035553
    2. ' =' → logprob: -2.1269280910491943
    3. ' ' → logprob: -19.126928329467773
    4. '<|end|>' → logprob: -19.376928329467773
    5. ' =)' → logprob: -19.751928329467773
    6. ')' → logprob: -19.751928329467773
    7. '＝' → logprob: -20.001928329467773
    8. '=}' → logprob: -20.001928329467773
    9. '.=' → logprob: -20.126928329467773
    10. '   ' → logprob: -20.251928329467773

Token 726: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009115827269852161
    2. ' ' → logprob: -7.000911712646484
    3. '   ' → logprob: -16.375911712646484
    4. '                   ' → logprob: -17.500911712646484
    5. '           ' → logprob: -19.000911712646484
    6. '  ' → logprob: -19.125911712646484
    7. '                       ' → logprob: -19.375911712646484
    8. '               ' → logprob: -20.000911712646484
    9. '                               ' → logprob: -20.125911712646484
    10. '```' → logprob: -20.250911712646484

Token 727: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -19.000009536743164
    4. '  ' → logprob: -20.625009536743164
    5. '    ' → logprob: -22.250009536743164
    6. '
' → logprob: -22.375009536743164
    7. '```' → logprob: -22.375009536743164
    8. '           ' → logprob: -22.500009536743164
    9. '<|end|>' → logprob: -22.500009536743164
    10. '       ' → logprob: -22.500009536743164

Token 728: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6149786710739136
    2. ')' → logprob: -0.8649786710739136
    3. '           ' → logprob: -4.989978790283203
    4. ',' → logprob: -5.239978790283203
    5. ' )' → logprob: -5.239978790283203
    6. '<|end|>' → logprob: -5.864978790283203
    7. '   ' → logprob: -5.989978790283203
    8. '  
' → logprob: -6.114978790283203
    9. '                
' → logprob: -6.489978790283203
    10. ' ' → logprob: -6.614978790283203

Token 729: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6142035722732544
    2. ' angle' → logprob: -1.4892035722732544
    3. '   ' → logprob: -3.114203453063965
    4. ',' → logprob: -3.489203453063965
    5. '               ' → logprob: -3.739203453063965
    6. ' 
' → logprob: -3.864203453063965
    7. ' theta' → logprob: -3.864203453063965
    8. 'angle' → logprob: -4.114203453063965
    9. '
' → logprob: -4.364203453063965
    10. '  
' → logprob: -4.739203453063965

Token 730: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' (adapté à ' angle') → logprob: -0.4007486402988434
    2. 'theta' → logprob: -1.150748610496521
    3. ' angle' → logprob: -5.9007487297058105
    4. 'alpha' → logprob: -6.0257487297058105
    5. ' theta' → logprob: -6.0257487297058105
    6. 'delta' → logprob: -6.0257487297058105
    7. 'arc' → logprob: -6.5257487297058105
    8. 'ang' → logprob: -6.7757487297058105
    9. 'phi' → logprob: -7.5257487297058105
    10. 'acos' → logprob: -8.775748252868652

Token 731: '_between' (ID: 124874)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30975162982940674
    2. '=' → logprob: -2.309751510620117
    3. '_offset' → logprob: -2.434751510620117
    4. '_center' → logprob: -2.809751510620117
    5. '_start' → logprob: -5.309751510620117
    6. '_diff' → logprob: -5.684751510620117
    7. '_between' → logprob: -5.934751510620117
    8. 's' → logprob: -6.059751510620117
    9. '1' → logprob: -6.559751510620117
    10. '_' → logprob: -6.809751510620117

Token 732: '_cent' (ID: 108147)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.0315777026116848
    2. 'points' → logprob: -4.1565775871276855
    3. '_cent' → logprob: -5.2815775871276855
    4. 's' → logprob: -5.6565775871276855
    5. ' =' → logprob: -6.0315775871276855
    6. '_pts' → logprob: -6.1565775871276855
    7. '=' → logprob: -7.0315775871276855
    8. '_tokens' → logprob: -7.2815775871276855
    9. '_c' → logprob: -9.031578063964844
    10. 'cent' → logprob: -9.031578063964844

Token 733: 'ers' (ID: 409)
  Prédit: 'ers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ers' → logprob: -0.0003886086633428931
    2. 'er' → logprob: -8.500388145446777
    3. '   ' → logprob: -10.125388145446777
    4. 'e' → logprob: -10.500388145446777
    5. '(' → logprob: -10.625388145446777
    6. ')' → logprob: -11.500388145446777
    7. '```' → logprob: -11.625388145446777
    8. '       ' → logprob: -11.875388145446777
    9. ',' → logprob: -12.000388145446777
    10. '     ' → logprob: -12.375388145446777

Token 734: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006716913543641567
    2. '=' → logprob: -5.006716728210449
    3. ' ' → logprob: -13.88171672821045
    4. ',' → logprob: -15.13171672821045
    5. ')' → logprob: -15.75671672821045
    6. '(' → logprob: -16.256717681884766
    7. ' =(' → logprob: -17.006717681884766
    8. ' =
' → logprob: -17.256717681884766
    9. ' )' → logprob: -17.506717681884766
    10. '  ' → logprob: -18.006717681884766

Token 735: ' math' (ID: 13324)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.09882944077253342
    2. ' angle' → logprob: -2.473829507827759
    3. ' math' → logprob: -4.97382926940918
    4. 'math' → logprob: -5.84882926940918
    5. 'normalize' → logprob: -11.09882926940918
    6. '   ' → logprob: -11.59882926940918
    7. ' ' → logprob: -12.09882926940918
    8. ' normalize' → logprob: -12.34882926940918
    9. 'distance' → logprob: -13.09882926940918
    10. '(angle' → logprob: -13.47382926940918

Token 736: '.atan' (ID: 157113)
  Prédit: '.atan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.atan' → logprob: -0.0008059371029958129
    2. '.ac' → logprob: -7.125805854797363
    3. '.' → logprob: -13.750805854797363
    4. 'atan' → logprob: -15.875805854797363
    5. '```' → logprob: -15.875805854797363
    6. '.sqrt' → logprob: -17.12580680847168
    7. '.as' → logprob: -17.75080680847168
    8. '.cos' → logprob: -18.37580680847168
    9. '.dist' → logprob: -18.37580680847168
    10. '.pi' → logprob: -19.00080680847168

Token 737: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '((' → logprob: -16.875
    3. ' ' → logprob: -17.375
    4. '(' → logprob: -17.875
    5. '۲' → logprob: -18.125
    6. '₂' → logprob: -18.125
    7. '(py' → logprob: -18.75
    8. '<|end|>' → logprob: -18.875
    9. 'd' → logprob: -19.0
    10. '２' → logprob: -19.125

Token 738: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.319370302458992e-06
    2. 'oy' → logprob: -12.375005722045898
    3. '((' → logprob: -14.375005722045898
    4. '(py' → logprob: -15.500005722045898
    5. ' oy' → logprob: -16.1250057220459
    6. '(o' → logprob: -16.8750057220459
    7. ' (' → logprob: -18.1250057220459
    8. '```' → logprob: -18.8750057220459
    9. '(y' → logprob: -19.0000057220459
    10. 'Oy' → logprob: -19.2500057220459

Token 739: 'oy' (ID: 1107)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4290066063404083
    2. 'oy' → logprob: -1.054006576538086
    3. ' oy' → logprob: -8.304006576538086
    4. ' (' → logprob: -10.429006576538086
    5. '   ' → logprob: -12.679006576538086
    6. 'Oy' → logprob: -12.804006576538086
    7. 'oyer' → logprob: -12.929006576538086
    8. 'ay' → logprob: -12.929006576538086
    9. 'oys' → logprob: -13.554006576538086
    10. 'ey' → logprob: -13.554006576538086

Token 740: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1269930899143219
    2. '-' → logprob: -2.126993179321289
    3. ' ' → logprob: -10.751993179321289
    4. '   ' → logprob: -10.876993179321289
    5. '-
' → logprob: -12.251993179321289
    6. 'y' → logprob: -12.626993179321289
    7. '-c' → logprob: -12.626993179321289
    8. ' -
' → logprob: -12.876993179321289
    9. '    ' → logprob: -13.001993179321289
    10. ',' → logprob: -13.251993179321289

Token 741: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.014169031754136086
    2. ' cy' → logprob: -4.264169216156006
    3. ' ' → logprob: -13.139168739318848
    4. 'cyj' → logprob: -13.889168739318848
    5. '.cy' → logprob: -14.139168739318848
    6. '   ' → logprob: -15.014168739318848
    7. '	c' → logprob: -15.639168739318848
    8. '  ' → logprob: -15.889168739318848
    9. ')' → logprob: -16.014169692993164
    10. ',' → logprob: -16.139169692993164

Token 742: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.7159857786027715e-05
    2. ' ,' → logprob: -10.000046730041504
    3. ',
' → logprob: -13.500046730041504
    4. ',c' → logprob: -15.750046730041504
    5. ')' → logprob: -17.25004768371582
    6. ' ' → logprob: -17.50004768371582
    7. '   ' → logprob: -17.62504768371582
    8. '‌,' → logprob: -17.75004768371582
    9. '```' → logprob: -18.00004768371582
    10. '0' → logprob: -18.00004768371582

Token 743: ' ox' (ID: 20241)
  Prédit: 'ox'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ox' → logprob: -0.011048408225178719
    2. ' ox' → logprob: -4.511048316955566
    3. 'oxo' → logprob: -15.636048316955566
    4. '   ' → logprob: -16.011049270629883
    5. 'Ox' → logprob: -16.386049270629883
    6. 'x' → logprob: -17.386049270629883
    7. ' ' → logprob: -17.386049270629883
    8. '  ' → logprob: -17.636049270629883
    9. '    ' → logprob: -18.261049270629883
    10. '```' → logprob: -18.261049270629883

Token 744: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0004971518646925688
    2. '-' → logprob: -7.625497341156006
    3. ',' → logprob: -12.000496864318848
    4. ' ' → logprob: -13.250496864318848
    5. '	' → logprob: -15.125496864318848
    6. '-c' → logprob: -15.375496864318848
    7. ')' → logprob: -15.500496864318848
    8. '<|end|>' → logprob: -16.000497817993164
    9. 'y' → logprob: -16.125497817993164
    10. ' -
' → logprob: -16.875497817993164

Token 745: ' cx' (ID: 44448)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.018333015963435173
    2. 'cx' → logprob: -4.0183329582214355
    3. 'y' → logprob: -9.018333435058594
    4. ' cy' → logprob: -10.018333435058594
    5. ' ' → logprob: -12.018333435058594
    6. 'yc' → logprob: -12.893333435058594
    7. '   ' → logprob: -13.018333435058594
    8. 'ct' → logprob: -14.018333435058594
    9. '    ' → logprob: -14.143333435058594
    10. 'ey' → logprob: -14.393333435058594

Token 746: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015186689561232924
    2. ')
' → logprob: -6.501518726348877
    3. ' )' → logprob: -11.876518249511719
    4. '               ' → logprob: -12.501518249511719
    5. '           ' → logprob: -13.501518249511719
    6. ')
' → logprob: -13.626518249511719
    7. ')

' → logprob: -14.376518249511719
    8. '   ' → logprob: -14.751518249511719
    9. '       ' → logprob: -15.126518249511719
    10. '                   ' → logprob: -15.626518249511719

Token 747: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 748: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' (adapté à ' angle') → logprob: -0.2762320339679718
    2. 'delta' → logprob: -1.5262320041656494
    3. 'alpha' → logprob: -4.4012322425842285
    4. 'offset' → logprob: -5.1512322425842285
    5. 'theta' → logprob: -6.1512322425842285
    6. 'arc' → logprob: -7.0262322425842285
    7. 'ang' → logprob: -7.1512322425842285
    8. ' delta' → logprob: -7.2762322425842285
    9. 'diff' → logprob: -7.7762322425842285
    10. 'try' → logprob: -8.15123176574707

Token 749: '_offset' (ID: 15447)
  Prédit: '_offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_offset' → logprob: -0.0762670636177063
    2. '_span' → logprob: -3.5762670040130615
    3. '_diff' → logprob: -3.5762670040130615
    4. '_range' → logprob: -4.201267242431641
    5. '_delta' → logprob: -6.451267242431641
    6. '_gap' → logprob: -8.70126724243164
    7. '_between' → logprob: -8.82626724243164
    8. '1' → logprob: -9.45126724243164
    9. '_difference' → logprob: -9.82626724243164
    10. '_interval' → logprob: -9.82626724243164

Token 750: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00861456897109747
    2. '=' → logprob: -4.758614540100098
    3. ' ' → logprob: -17.633615493774414
    4. 's' → logprob: -18.508615493774414
    5. ')' → logprob: -18.883615493774414
    6. ',' → logprob: -19.008615493774414
    7. ' =
' → logprob: -19.133615493774414
    8. '  ' → logprob: -19.258615493774414
    9. ' =)' → logprob: -19.633615493774414
    10. ' ' → logprob: -20.133615493774414

Token 751: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.6931478977203369
    2. 'math' → logprob: -0.6931478977203369
    3. '   ' → logprob: -15.068147659301758
    4. '(math' → logprob: -15.193147659301758
    5. ' ' → logprob: -17.068147659301758
    6. '.math' → logprob: -17.443147659301758
    7. 'abs' → logprob: -17.943147659301758
    8. 'Math' → logprob: -18.068147659301758
    9. '    ' → logprob: -18.193147659301758
    10. 'm' → logprob: -18.568147659301758

Token 752: '.ac' (ID: 25905)
  Prédit: '.ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ac' → logprob: -4.620622712536715e-05
    2. '.cos' → logprob: -10.375045776367188
    3. '.' → logprob: -11.625045776367188
    4. 'acos' → logprob: -12.750045776367188
    5. ' acos' → logprob: -13.250045776367188
    6. '.atan' → logprob: -13.750045776367188
    7. '_ac' → logprob: -16.750045776367188
    8. '```' → logprob: -17.750045776367188
    9. '	ac' → logprob: -18.000045776367188
    10. '.as' → logprob: -18.375045776367188

Token 753: 'os' (ID: 365)
  Prédit: 'os'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -4.320199877838604e-07
    2. '(os' → logprob: -15.875
    3. 'cos' → logprob: -16.25
    4. 'ос' → logprob: -16.625
    5. 's' → logprob: -17.125
    6. '	os' → logprob: -18.375
    7. '```' → logprob: -18.5
    8. '
' → logprob: -18.625
    9. 'o' → logprob: -18.75
    10. '``' → logprob: -19.25

Token 754: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00035727277281694114
    2. 'cos' → logprob: -8.000357627868652
    3. '(' → logprob: -10.875357627868652
    4. '(
' → logprob: -13.625357627868652
    5. '(cost' → logprob: -14.500357627868652
    6. '_cos' → logprob: -15.125357627868652
    7. '(abs' → logprob: -15.375357627868652
    8. ' cos' → logprob: -15.625357627868652
    9. '*cos' → logprob: -15.875357627868652
    10. '.cos' → logprob: -16.125356674194336

Token 755: 'os' (ID: 365)
  Prédit: 'os'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.0013574945041909814
    2. 'angle' → logprob: -7.376357555389404
    3. '_angle' → logprob: -7.751357555389404
    4. 'cos' → logprob: -8.626357078552246
    5. '(angle' → logprob: -10.001357078552246
    6. 'ose' → logprob: -11.251357078552246
    7. ')' → logprob: -11.376357078552246
    8. '
' → logprob: -11.501357078552246
    9. 'o' → logprob: -11.626357078552246
    10. '```' → logprob: -12.126357078552246

Token 756: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -1.0280383548888494e-06
    2. 'angle' → logprob: -14.000000953674316
    3. '(angle' → logprob: -15.750000953674316
    4. 'cos' → logprob: -18.375001907348633
    5. '_ang' → logprob: -18.500001907348633
    6. 'Angle' → logprob: -18.875001907348633
    7. '_age' → logprob: -19.125001907348633
    8. ' angle' → logprob: -19.375001907348633
    9. '_cos' → logprob: -19.875001907348633
    10. '_' → logprob: -19.875001907348633

Token 757: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.9040898880339228e-05
    2. ')
' → logprob: -11.125028610229492
    3. ' )' → logprob: -11.500028610229492
    4. '   ' → logprob: -12.875028610229492
    5. ' ' → logprob: -15.625028610229492
    6. '       ' → logprob: -15.750028610229492
    7. '<|end|>' → logprob: -15.750028610229492
    8. '),' → logprob: -16.000028610229492
    9. '               ' → logprob: -16.125028610229492
    10. ')`' → logprob: -16.250028610229492

Token 758: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.36677780747413635
    2. '           ' → logprob: -1.866777777671814
    3. ')' → logprob: -3.3667778968811035
    4. '<|end|>' → logprob: -3.7417778968811035
    5. '       ' → logprob: -4.2417778968811035
    6. ' 
' → logprob: -4.4917778968811035
    7. ',' → logprob: -4.7417778968811035
    8. '  
' → logprob: -4.9917778968811035
    9. ' covered' → logprob: -5.1167778968811035
    10. '                
' → logprob: -5.2417778968811035

Token 759: ' angle' (ID: 16538)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.003102138638496399
    2. 'left' → logprob: -6.2531023025512695
    3. ' start' → logprob: -7.6281023025512695
    4. 'interval' → logprob: -8.50310230255127
    5. 'arc' → logprob: -8.62810230255127
    6. 'a' → logprob: -9.25310230255127
    7. 'cover' → logprob: -9.50310230255127
    8. 's' → logprob: -10.50310230255127
    9. 'angle' (adapté à ' angle') → logprob: -10.75310230255127
    10. 'from' → logprob: -11.00310230255127

Token 760: '1' (ID: 16)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.008783683180809021
    2. '1' → logprob: -4.75878381729126
    3. 's' → logprob: -9.883783340454102
    4. '_left' → logprob: -10.008783340454102
    5. '_range' → logprob: -10.133783340454102
    6. '_center' → logprob: -11.508783340454102
    7. 'start' → logprob: -11.508783340454102
    8. '_min' → logprob: -11.883783340454102
    9. '_' → logprob: -13.133783340454102
    10. '_s' → logprob: -13.508783340454102

Token 761: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804333135485649
    2. '=' → logprob: -3.288043260574341
    3. ',' → logprob: -13.538043022155762
    4. ' ' → logprob: -14.663043022155762
    5. 's' → logprob: -17.038043975830078
    6. '  ' → logprob: -17.788043975830078
    7. '_' → logprob: -18.038043975830078
    8. ' =
' → logprob: -18.163043975830078
    9. '<|end|>' → logprob: -18.288043975830078
    10. ' =(' → logprob: -18.413043975830078

Token 762: ' normalize' (ID: 44464)
  Prédit: 'normalize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -0.1686823070049286
    2. ' normalize' → logprob: -2.043682336807251
    3. 'angle' → logprob: -3.918682336807251
    4. ' angle' → logprob: -5.168682098388672
    5. '(angle' → logprob: -9.918682098388672
    6. '(normal' → logprob: -10.418682098388672
    7. ' (' → logprob: -11.793682098388672
    8. '   ' → logprob: -12.043682098388672
    9. ' ' → logprob: -12.668682098388672
    10. '(' → logprob: -13.293682098388672

Token 763: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: 0.0
    2. '(angle' → logprob: -17.125
    3. 'angle' → logprob: -17.625
    4. '_' → logprob: -17.75
    5. ' _' → logprob: -19.625
    6. 'Angle' → logprob: -19.625
    7. '_angles' → logprob: -19.75
    8. '_ang' → logprob: -20.25
    9. '(_' → logprob: -20.5
    10. ' angle' → logprob: -21.0

Token 764: '(angle' (ID: 66047)
  Prédit: '(angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(angle' → logprob: -3.054500666621607e-06
    2. '(' → logprob: -13.00000286102295
    3. 'angle' → logprob: -14.25000286102295
    4. '(
' → logprob: -16.500003814697266
    5. '((' → logprob: -16.625003814697266
    6. ' (' → logprob: -17.750003814697266
    7. '(amount' → logprob: -19.875003814697266
    8. '(age' → logprob: -20.000003814697266
    9. '(interval' → logprob: -20.625003814697266
    10. '(abs' → logprob: -21.000003814697266

Token 765: '_between' (ID: 124874)
  Prédit: '_between'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_between' → logprob: -0.0006619225605390966
    2. 'between' → logprob: -7.375661849975586
    3. '-between' → logprob: -11.500661849975586
    4. '(angle' → logprob: -11.875661849975586
    5. 'Between' → logprob: -11.875661849975586
    6. '(' → logprob: -12.500661849975586
    7. ')' → logprob: -12.875661849975586
    8. '[' → logprob: -13.375661849975586
    9. ' between' → logprob: -14.250661849975586
    10. 's' → logprob: -14.250661849975586

Token 766: '_cent' (ID: 108147)
  Prédit: '_cent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cent' → logprob: -0.002196409972384572
    2. '1' → logprob: -6.627196311950684
    3. 'cent' → logprob: -7.252196311950684
    4. '_between' → logprob: -9.502196311950684
    5. ' centers' → logprob: -10.002196311950684
    6. '_offsets' → logprob: -12.127196311950684
    7. 'Centers' → logprob: -12.127196311950684
    8. ')' → logprob: -12.252196311950684
    9. '_angles' → logprob: -12.502196311950684
    10. '_center' → logprob: -12.502196311950684

Token 767: 'ers' (ID: 409)
  Prédit: 'ers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ers' → logprob: -0.04620853438973427
    2. 'ters' → logprob: -3.171208620071411
    3. 'er' → logprob: -6.421208381652832
    4. 'ter' → logprob: -6.921208381652832
    5. '   ' → logprob: -9.421208381652832
    6. '_points' → logprob: -9.546208381652832
    7. '_angle' → logprob: -9.671208381652832
    8. '
' → logprob: -9.796208381652832
    9. 'rs' → logprob: -9.796208381652832
    10. '```' → logprob: -9.796208381652832

Token 768: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07241225987672806
    2. '-' → logprob: -2.9474122524261475
    3. '-angle' → logprob: -4.072412490844727
    4. ')' → logprob: -8.322412490844727
    5. ' angle' → logprob: -10.197412490844727
    6. ' -
' → logprob: -10.322412490844727
    7. '-
' → logprob: -11.322412490844727
    8. '-)' → logprob: -12.197412490844727
    9. ' )' → logprob: -12.947412490844727
    10. 'angle' → logprob: -13.072412490844727

Token 769: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.005233763717114925
    2. ' angle' → logprob: -5.2552337646484375
    3. ' ' → logprob: -19.255233764648438
    4. '_angle' → logprob: -20.005233764648438
    5. '(angle' → logprob: -20.005233764648438
    6. 'answer' → logprob: -20.255233764648438
    7. 'offset' → logprob: -21.130233764648438
    8. '   ' → logprob: -21.630233764648438
    9. '.angle' → logprob: -22.505233764648438
    10. 'age' → logprob: -22.505233764648438

Token 770: '_offset' (ID: 15447)
  Prédit: '_offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_offset' → logprob: -7.3458322731312364e-06
    2. 'offset' → logprob: -11.875007629394531
    3. '_off' → logprob: -15.250007629394531
    4. 'Offset' → logprob: -17.00000762939453
    5. ' offset' → logprob: -17.50000762939453
    6. '_' → logprob: -18.12500762939453
    7. '_offsets' → logprob: -18.25000762939453
    8. '_OFFSET' → logprob: -18.62500762939453
    9. 'ffset' → logprob: -18.75000762939453
    10. '	offset' → logprob: -19.00000762939453

Token 771: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023894020705483854
    2. ')
' → logprob: -8.625239372253418
    3. '<|end|>' → logprob: -10.000239372253418
    4. ' )' → logprob: -11.750239372253418
    5. '),' → logprob: -13.000239372253418
    6. '<|end|>' → logprob: -13.875239372253418
    7. '   ' → logprob: -14.500239372253418
    8. ')
' → logprob: -14.500239372253418
    9. ')

' → logprob: -14.750239372253418
    10. ')\
' → logprob: -15.000239372253418

Token 772: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32115694880485535
    2. '(' → logprob: -2.4461569786071777
    3. '(angle' → logprob: -2.8211569786071777
    4. 'angle' → logprob: -3.0711569786071777
    5. ' angle' → logprob: -3.8211569786071777
    6. '               ' → logprob: -4.196156978607178
    7. '(
' → logprob: -4.321156978607178
    8. ' ' → logprob: -4.821156978607178
    9. '<|end|>' → logprob: -5.196156978607178
    10. ' )' → logprob: -5.446156978607178

Token 773: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' (adapté à ' angle') → logprob: -0.5813228487968445
    2. ' angle' → logprob: -0.8313228487968445
    3. '(angle' → logprob: -6.20632266998291
    4. ')' → logprob: -6.70632266998291
    5. ',' → logprob: -7.20632266998291
    6. ' ' → logprob: -7.83132266998291
    7. ' 
' → logprob: -8.45632266998291
    8. '(' → logprob: -8.95632266998291
    9. ',
' → logprob: -9.08132266998291
    10. ' ,' → logprob: -9.58132266998291

Token 774: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.000000953674316
    3. '_' → logprob: -15.250000953674316
    4. '```' → logprob: -16.625001907348633
    5. ',' → logprob: -17.125001907348633
    6. '₂' → logprob: -17.375001907348633
    7. '۲' → logprob: -18.000001907348633
    8. 's' → logprob: -18.375001907348633
    9. '  ' → logprob: -18.437501907348633
    10. '
' → logprob: -18.562501907348633

Token 775: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11376909911632538
    2. ' =' → logprob: -2.238769054412842
    3. '<|end|>' → logprob: -7.113769054412842
    4. ',' → logprob: -9.61376953125
    5. ' ' → logprob: -10.48876953125
    6. ')' → logprob: -11.11376953125
    7. '<|end|>' → logprob: -11.23876953125
    8. 's' → logprob: -14.11376953125
    9. '=True' → logprob: -14.23876953125
    10. ':' → logprob: -14.23876953125

Token 776: ' normalize' (ID: 44464)
  Prédit: ' normalize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' normalize' → logprob: -0.07889000326395035
    2. 'normalize' → logprob: -2.578890085220337
    3. '(normal' → logprob: -16.453889846801758
    4. ' normal' → logprob: -16.578889846801758
    5. '.normalize' → logprob: -16.703889846801758
    6. 'normal' → logprob: -18.203889846801758
    7. ' normalized' → logprob: -19.453889846801758
    8. ' ' → logprob: -20.203889846801758
    9. 'norm' → logprob: -20.203889846801758
    10. '_normal' → logprob: -20.453889846801758

Token 777: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -1.2664456789934775e-06
    2. 'angle' → logprob: -14.250000953674316
    3. 'Angle' → logprob: -15.375000953674316
    4. '(angle' → logprob: -16.125001907348633
    5. '_' → logprob: -16.250001907348633
    6. '_code' → logprob: -16.500001907348633
    7. '```' → logprob: -17.875001907348633
    8. '_token' → logprob: -18.875001907348633
    9. '_interval' → logprob: -19.000001907348633
    10. '_theta' → logprob: -19.125001907348633

Token 778: '(angle' (ID: 66047)
  Prédit: '(angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(angle' → logprob: -3.292907877039397e-06
    2. 'angle' → logprob: -12.75000286102295
    3. '(' → logprob: -15.00000286102295
    4. '(
' → logprob: -19.875003814697266
    5. '(interval' → logprob: -20.375003814697266
    6. ' angle' → logprob: -20.500003814697266
    7. '(age' → logprob: -20.500003814697266
    8. '(amount' → logprob: -21.375003814697266
    9. ' (' → logprob: -21.875003814697266
    10. '.angle' → logprob: -22.250003814697266

Token 779: '_between' (ID: 124874)
  Prédit: '_between'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_between' → logprob: -0.5928959846496582
    2. '(angle' → logprob: -1.4678959846496582
    3. 'angle' → logprob: -1.5928959846496582
    4. 'between' → logprob: -4.342895984649658
    5. '[' → logprob: -8.5928955078125
    6. 'Between' → logprob: -8.7178955078125
    7. '_angle' → logprob: -9.4678955078125
    8. ' angle' → logprob: -10.8428955078125
    9. '1' → logprob: -11.2178955078125
    10. 's' → logprob: -11.3428955078125

Token 780: '_cent' (ID: 108147)
  Prédit: '_cent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cent' → logprob: -0.00018161057960242033
    2. 'cent' → logprob: -8.625181198120117
    3. '_c' → logprob: -14.375181198120117
    4. '1' → logprob: -14.375181198120117
    5. 'angle' → logprob: -15.750181198120117
    6. 'Centers' → logprob: -15.750181198120117
    7. '_center' → logprob: -16.000181198120117
    8. '```' → logprob: -16.375181198120117
    9. '_angles' → logprob: -16.500181198120117
    10. '
' → logprob: -17.000181198120117

Token 781: 'ers' (ID: 409)
  Prédit: 'ers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ers' → logprob: -0.0621718093752861
    2. 'er' → logprob: -3.562171697616577
    3. 'ters' → logprob: -4.062171936035156
    4. 'ter' → logprob: -4.312171936035156
    5. '1' → logprob: -7.937171936035156
    6. 'rs' → logprob: -8.187171936035156
    7. '_angle' → logprob: -9.562171936035156
    8. '```' → logprob: -9.562171936035156
    9. 'gers' → logprob: -9.687171936035156
    10. '   ' → logprob: -9.812171936035156

Token 782: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5234354734420776
    2. '+' → logprob: -0.8984354734420776
    3. ' -' → logprob: -8.273435592651367
    4. '-' → logprob: -10.023435592651367
    5. '+
' → logprob: -12.273435592651367
    6. ' +
' → logprob: -13.023435592651367
    7. ' plus' → logprob: -13.273435592651367
    8. ' ' → logprob: -13.398435592651367
    9. '<|end|>' → logprob: -14.148435592651367
    10. ')' → logprob: -14.523435592651367

Token 783: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.10020806640386581
    2. ' angle' → logprob: -2.350208044052124
    3. '(angle' → logprob: -13.850208282470703
    4. '_angle' → logprob: -15.475208282470703
    5. ' ' → logprob: -16.475208282470703
    6. '1' → logprob: -16.725208282470703
    7. '.angle' → logprob: -17.475208282470703
    8. 'offset' → logprob: -17.600208282470703
    9. ')' → logprob: -17.975208282470703
    10. 'Angle' → logprob: -18.600208282470703

Token 784: '_offset' (ID: 15447)
  Prédit: '_offset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_offset' → logprob: -0.0003361774142831564
    2. 'offset' → logprob: -8.000336647033691
    3. 'Offset' → logprob: -15.250336647033691
    4. 'ffset' → logprob: -15.625336647033691
    5. ' offset' → logprob: -16.250335693359375
    6. '_offsets' → logprob: -16.875335693359375
    7. '_OFFSET' → logprob: -17.000335693359375
    8. '	offset' → logprob: -17.125335693359375
    9. '-offset' → logprob: -17.375335693359375
    10. 'o' → logprob: -18.875335693359375

Token 785: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006461950251832604
    2. ')
' → logprob: -7.500646114349365
    3. '<|end|>' → logprob: -9.500646591186523
    4. '   ' → logprob: -12.000646591186523
    5. ' )' → logprob: -12.875646591186523
    6. '       ' → logprob: -12.875646591186523
    7. '<|end|>' → logprob: -13.625646591186523
    8. '),' → logprob: -14.125646591186523
    9. '           ' → logprob: -14.250646591186523
    10. ')\
' → logprob: -14.625646591186523

Token 786: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5254470109939575
    2. '       ' → logprob: -2.025446891784668
    3. ' if' → logprob: -2.025446891784668
    4. '
' → logprob: -3.025446891784668
    5. '<|end|>' → logprob: -3.025446891784668
    6. '  
' → logprob: -5.150446891784668
    7. '   ' → logprob: -5.275446891784668
    8. ',' → logprob: -5.400446891784668
    9. 'if' → logprob: -5.400446891784668
    10. '	       ' → logprob: -5.650446891784668

Token 787: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03208588808774948
    2. ' if' → logprob: -3.78208589553833
    3. 'covered' → logprob: -4.78208589553833
    4. '           ' → logprob: -8.157085418701172
    5. ' covered' → logprob: -9.532085418701172
    6. '```' → logprob: -10.782085418701172
    7. 'cover' → logprob: -10.907085418701172
    8. '               ' → logprob: -11.907085418701172
    9. 'coverage' → logprob: -12.782085418701172
    10. 'interval' → logprob: -12.907085418701172

Token 788: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.014166681095957756
    2. ' angle' → logprob: -4.264166831970215
    3. 'interval' → logprob: -13.889166831970215
    4. '(angle' → logprob: -14.014166831970215
    5. '   ' → logprob: -14.139166831970215
    6. 'angular' → logprob: -15.014166831970215
    7. ' ' → logprob: -16.2641658782959
    8. 'angles' → logprob: -16.6391658782959
    9. '  ' → logprob: -16.7641658782959
    10. 'Angle' → logprob: -16.8891658782959

Token 789: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5231728553771973
    2. '1' → logprob: -0.8981728553771973
    3. '```' → logprob: -11.023172378540039
    4. '[' → logprob: -11.398172378540039
    5. 's' → logprob: -11.898172378540039
    6. '_' → logprob: -12.273172378540039
    7. ')' → logprob: -13.460672378540039
    8. '
' → logprob: -13.523172378540039
    9. ' ' → logprob: -13.648172378540039
    10. '`' → logprob: -14.210672378540039

Token 790: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.002019524574279785
    2. '<' → logprob: -6.37701940536499
    3. ' <=' → logprob: -8.752019882202148
    4. ' >=' → logprob: -9.002019882202148
    5. '<|end|>' → logprob: -10.752019882202148
    6. ' >' → logprob: -12.377019882202148
    7. ' ' → logprob: -13.002019882202148
    8. '<=' → logprob: -13.627019882202148
    9. '[' → logprob: -13.752019882202148
    10. '>=' → logprob: -13.877019882202148

Token 791: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.00014084660506341606
    2. ' angle' → logprob: -8.875141143798828
    3. '=' → logprob: -14.500141143798828
    4. '   ' → logprob: -15.750141143798828
    5. 'ang' → logprob: -17.000141143798828
    6. 'answer' → logprob: -17.000141143798828
    7. ' ' → logprob: -17.125141143798828
    8. '(angle' → logprob: -17.375141143798828
    9. 'angler' → logprob: -17.750141143798828
    10. 'angular' → logprob: -17.750141143798828

Token 792: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. 'angle' → logprob: -13.375003814697266
    3. ' ' → logprob: -13.500003814697266
    4. '_' → logprob: -15.875003814697266
    5. '   ' → logprob: -16.250003814697266
    6. '<|end|>' → logprob: -16.875003814697266
    7. 's' → logprob: -17.125003814697266
    8. '
' → logprob: -17.250003814697266
    9. '_angle' → logprob: -17.250003814697266
    10. 'interval' → logprob: -17.500003814697266

Token 793: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2814679741859436
    2. ':
' → logprob: -1.4064679145812988
    3. '   ' → logprob: -9.281468391418457
    4. '):
' → logprob: -9.531468391418457
    5. '               ' → logprob: -10.406468391418457
    6. ':
' → logprob: -10.656468391418457
    7. '):' → logprob: -10.781468391418457
    8. '                   ' → logprob: -11.156468391418457
    9. '<|end|>' → logprob: -11.281468391418457
    10. ',' → logprob: -11.281468391418457

Token 794: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20980621874332428
    2. '                   ' → logprob: -1.834806203842163
    3. '           ' → logprob: -4.709806442260742
    4. ')' → logprob: -4.959806442260742
    5. '):
' → logprob: -6.209806442260742
    6. ':
' → logprob: -6.209806442260742
    7. '<|end|>' → logprob: -6.209806442260742
    8. '                       ' → logprob: -6.334806442260742
    9. ',' → logprob: -6.334806442260742
    10. '   ' → logprob: -6.459806442260742

Token 795: ' #' (ID: 1069)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'covered' → logprob: -0.017753485590219498
    2. ' covered' → logprob: -4.392753601074219
    3. '               ' → logprob: -5.392753601074219
    4. '                   ' → logprob: -7.767753601074219
    5. 'cover' → logprob: -9.392753601074219
    6. '           ' → logprob: -9.892753601074219
    7. '   ' → logprob: -10.017753601074219
    8. 'interval' → logprob: -10.142753601074219
    9. 'coverage' → logprob: -11.392753601074219
    10. '#' (adapté à ' #') → logprob: -12.142753601074219

Token 796: ' Interval' (ID: 80693)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'covered' → logprob: -0.0005499334656633437
    2. ' covered' → logprob: -7.625549793243408
    3. '               ' → logprob: -10.375550270080566
    4. 'interval' → logprob: -11.375550270080566
    5. '           ' → logprob: -11.750550270080566
    6. 'cover' → logprob: -12.000550270080566
    7. '   ' → logprob: -13.375550270080566
    8. '                   ' → logprob: -13.500550270080566
    9. 'coverage' → logprob: -14.125550270080566
    10. '#' → logprob: -14.875550270080566

Token 797: ' crosses' (ID: 95853)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.7126375436782837
    2. 's' → logprob: -1.0876375436782837
    3. ' =' → logprob: -2.587637424468994
    4. '[' → logprob: -4.087637424468994
    5. ' intervals' → logprob: -4.212637424468994
    6. '=' → logprob: -4.712637424468994
    7. '1' → logprob: -4.837637424468994
    8. ')' → logprob: -4.962637424468994
    9. '               ' → logprob: -5.212637424468994
    10. '(s' → logprob: -5.462637424468994

Token 798: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00587072130292654
    2. ' (' → logprob: -5.380870819091797
    3. '2' → logprob: -7.630870819091797
    4. '0' → logprob: -7.755870819091797
    5. 'angle' → logprob: -8.255870819091797
    6. '```' → logprob: -11.380870819091797
    7. 'two' → logprob: -11.505870819091797
    8. ' ' → logprob: -11.630870819091797
    9. '((' → logprob: -11.880870819091797
    10. '               ' → logprob: -12.005870819091797

Token 799: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4470456838607788
    2. '0' → logprob: -1.0720456838607788
    3. '2' → logprob: -4.447045803070068
    4. ' (' → logprob: -5.322045803070068
    5. 'zero' → logprob: -7.572045803070068
    6. 'math' → logprob: -8.19704532623291
    7. 'angle' → logprob: -8.44704532623291
    8. ' ' → logprob: -9.07204532623291
    9. '(
' → logprob: -9.32204532623291
    10. 'the' → logprob: -9.82204532623291

Token 800: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07923267781734467
    2. 'covered' → logprob: -3.954232692718506
    3. '           ' → logprob: -4.454232692718506
    4. '                   ' → logprob: -4.454232692718506
    5. ',' → logprob: -4.829232692718506
    6. ' covered' → logprob: -4.954232692718506
    7. ' intervals' → logprob: -5.204232692718506
    8. ':
' → logprob: -5.579232692718506
    9. 'interval' → logprob: -5.579232692718506
    10. ')' → logprob: -7.079232692718506

Token 801: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3285748362541199
    2. '                   ' → logprob: -1.4535748958587646
    3. '           ' → logprob: -3.9535748958587646
    4. ',' → logprob: -4.8285746574401855
    5. '       ' → logprob: -5.3285746574401855
    6. '   ' → logprob: -5.4535746574401855
    7. '                       ' → logprob: -5.9535746574401855
    8. 'covered' → logprob: -5.9535746574401855
    9. ':
' → logprob: -7.0785746574401855
    10. ')' → logprob: -7.2035746574401855

Token 802: ' covered' (ID: 13083)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'covered' (adapté à ' covered') → logprob: -0.0005284877843223512
    2. ' covered' → logprob: -7.875528335571289
    3. '               ' → logprob: -8.875528335571289
    4. '   ' → logprob: -12.875528335571289
    5. '                   ' → logprob: -13.000528335571289
    6. 'cover' → logprob: -13.375528335571289
    7. '           ' → logprob: -13.500528335571289
    8. 'coverage' → logprob: -14.875528335571289
    9. 'interval' → logprob: -15.125528335571289
    10. '             ' → logprob: -17.12552833557129

Token 803: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -6.704273118884885e-07
    2. 'Intervals' → logprob: -15.250000953674316
    3. 'interval' → logprob: -16.75
    4. '_interval' → logprob: -16.75
    5. 'inter' → logprob: -17.125
    6. '```' → logprob: -17.25
    7. 's' → logprob: -17.5
    8. '_ranges' → logprob: -17.5
    9. '_angles' → logprob: -18.25
    10. '_sub' → logprob: -18.375

Token 804: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.005753510631620884
    2. 'als' → logprob: -5.255753517150879
    3. 'val' → logprob: -8.255753517150879
    4. '```' → logprob: -9.255753517150879
    5. '   ' → logprob: -10.005753517150879
    6. 'interval' → logprob: -11.005753517150879
    7. 'erv' → logprob: -11.505753517150879
    8. '_' → logprob: -11.755753517150879
    9. 's' → logprob: -11.755753517150879
    10. ' vals' → logprob: -11.880753517150879

Token 805: '.append' (ID: 3709)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.03775569424033165
    2. '.append' → logprob: -4.162755489349365
    3. '+=' → logprob: -4.537755489349365
    4. ' +=' → logprob: -5.287755489349365
    5. '=' → logprob: -5.787755489349365
    6. ' =' → logprob: -6.412755489349365
    7. '.' → logprob: -6.912755489349365
    8. ' .' → logprob: -10.537755966186523
    9. '.=' → logprob: -12.537755966186523
    10. '+' → logprob: -13.537755966186523

Token 806: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.6211527585983276
    2. '(' → logprob: -0.8711527585983276
    3. '(angle' → logprob: -3.121152877807617
    4. '(interval' → logprob: -9.246152877807617
    5. '   ' → logprob: -13.621152877807617
    6. ' (' → logprob: -13.746152877807617
    7. '[(' → logprob: -14.996152877807617
    8. '(
' → logprob: -15.621152877807617
    9. 'angle' → logprob: -16.121152877807617
    10. '(answer' → logprob: -16.246152877807617

Token 807: 'angle' (ID: 7140)
  Prédit: 'angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -1.259079363080673e-05
    2. '(angle' → logprob: -11.625012397766113
    3. '0' → logprob: -13.125012397766113
    4. ' angle' → logprob: -13.500012397766113
    5. '(' → logprob: -15.375012397766113
    6. ')' → logprob: -17.50001335144043
    7. 'interval' → logprob: -17.75001335144043
    8. '-angle' → logprob: -18.75001335144043
    9. '.angle' → logprob: -18.87501335144043
    10. '_angle' → logprob: -19.25001335144043

Token 808: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1426916867494583
    2. '2' → logprob: -2.0176916122436523
    3. ',' → logprob: -12.267691612243652
    4. ')' → logprob: -12.267691612243652
    5. 'angle' → logprob: -13.517691612243652
    6. '```' → logprob: -13.642691612243652
    7. '[' → logprob: -13.767691612243652
    8. ' ' → logprob: -14.142691612243652
    9. '(' → logprob: -14.142691612243652
    10. '_angle' → logprob: -15.017691612243652

Token 809: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.688212614681106e-05
    2. ' ,' → logprob: -11.125017166137695
    3. ',
' → logprob: -13.375017166137695
    4. '‌,' → logprob: -16.625017166137695
    5. ',float' → logprob: -16.750017166137695
    6. ',(' → logprob: -17.000017166137695
    7. '1' → logprob: -17.000017166137695
    8. '2' → logprob: -17.500017166137695
    9. '```' → logprob: -17.500017166137695
    10. '0' → logprob: -17.750017166137695

Token 810: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.583550642360933e-05
    2. ' ' → logprob: -10.375036239624023
    3. 'math' → logprob: -12.375036239624023
    4. '   ' → logprob: -16.250036239624023
    5. '(' → logprob: -16.875036239624023
    6. '```' → logprob: -17.125036239624023
    7. ' math' → logprob: -17.375036239624023
    8. '  ' → logprob: -18.500036239624023
    9. '`' → logprob: -19.250036239624023
    10. '
' → logprob: -19.250036239624023

Token 811: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.107425062713446e-06
    2. 'math' → logprob: -12.375006675720215
    3. ' ' → logprob: -12.875006675720215
    4. '(' → logprob: -15.750006675720215
    5. '```' → logprob: -17.25000762939453
    6. '   ' → logprob: -17.50000762939453
    7. '6' → logprob: -18.62500762939453
    8. '

' → logprob: -18.75000762939453
    9. '
' → logprob: -19.00000762939453
    10. '360' → logprob: -19.25000762939453

Token 812: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04860122874379158
    2. '*' → logprob: -3.0486011505126953
    3. '*Math' → logprob: -11.673601150512695
    4. ' ' → logprob: -13.673601150512695
    5. '*pi' → logprob: -14.298601150512695
    6. ' math' → logprob: -14.423601150512695
    7. '.' → logprob: -14.423601150512695
    8. ' ' → logprob: -14.423601150512695
    9. ' **' → logprob: -14.548601150512695
    10. ')' → logprob: -14.548601150512695

Token 813: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.3868737816810608
    2. ' math' → logprob: -1.136873722076416
    3. '(math' → logprob: -14.136874198913574
    4. '*' → logprob: -14.386874198913574
    5. '.math' → logprob: -14.386874198913574
    6. ' *' → logprob: -15.011874198913574
    7. 'Math' → logprob: -15.511874198913574
    8. ')' → logprob: -16.261873245239258
    9. '_math' → logprob: -16.511873245239258
    10. '```' → logprob: -16.636873245239258

Token 814: '.pi' (ID: 55497)
  Prédit: '.pi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pi' → logprob: -0.0011736786691471934
    2. '.' → logprob: -6.751173496246338
    3. '*pi' → logprob: -14.001173973083496
    4. '.PI' → logprob: -14.126173973083496
    5. 'pi' → logprob: -14.501173973083496
    6. '.p' → logprob: -14.626173973083496
    7. '.atan' → logprob: -14.751173973083496
    8. '.py' → logprob: -15.876173973083496
    9. '<|end|>' → logprob: -16.62617301940918
    10. ' .' → logprob: -16.62617301940918

Token 815: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.034378405660390854
    2. ')' → logprob: -3.4093782901763916
    3. '))
' → logprob: -7.284378528594971
    4. '),' → logprob: -11.034378051757812
    5. ')}' → logprob: -11.784378051757812
    6. ' ))' → logprob: -12.409378051757812
    7. ')))' → logprob: -12.659378051757812
    8. '));' → logprob: -12.659378051757812
    9. ')),' → logprob: -13.159378051757812
    10. ')
' → logprob: -13.409378051757812

Token 816: '                   ' (ID: 699)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5586255192756653
    2. '(' → logprob: -1.1836254596710205
    3. ')' → logprob: -2.4336254596710205
    4. '),' → logprob: -4.5586256980896
    5. ',
' → logprob: -5.5586256980896
    6. '),(' → logprob: -5.6836256980896
    7. ',(' → logprob: -6.1836256980896
    8. '               ' → logprob: -6.4336256980896
    9. '```' → logprob: -6.4336256980896
    10. '<|end|>' → logprob: -6.4336256980896

Token 817: ' covered' (ID: 13083)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00014096579980105162
    2. ' (' → logprob: -9.375141143798828
    3. 'covered' (adapté à ' covered') → logprob: -9.875141143798828
    4. '(
' → logprob: -13.500141143798828
    5. 'cover' → logprob: -14.500141143798828
    6. '((' → logprob: -14.875141143798828
    7. '   ' → logprob: -14.875141143798828
    8. '('' → logprob: -15.125141143798828
    9. '(True' → logprob: -15.250141143798828
    10. ' covered' → logprob: -15.875141143798828

Token 818: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -1.7432603272027336e-06
    2. '.append' → logprob: -14.125001907348633
    3. 'interval' → logprob: -14.875001907348633
    4. 'inter' → logprob: -15.750001907348633
    5. 's' → logprob: -16.250001907348633
    6. '_' → logprob: -16.375001907348633
    7. '_interval' → logprob: -16.625001907348633
    8. 'Intervals' → logprob: -17.125001907348633
    9. '```' → logprob: -17.500001907348633
    10. '	' → logprob: -18.125001907348633

Token 819: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.049060676246881485
    2. 'als' → logprob: -3.049060583114624
    3. 'val' → logprob: -8.049060821533203
    4. '```' → logprob: -10.049060821533203
    5. 'al' → logprob: -10.674060821533203
    6. 'interval' → logprob: -10.924060821533203
    7. 'erv' → logprob: -11.299060821533203
    8. '_' → logprob: -11.549060821533203
    9. 's' → logprob: -11.549060821533203
    10. '[' → logprob: -11.924060821533203

Token 820: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.02327168732881546
    2. '.' → logprob: -3.7732717990875244
    3. '.extend' → logprob: -11.148271560668945
    4. ').' → logprob: -12.023271560668945
    5. ' .' → logprob: -12.898271560668945
    6. 'append' → logprob: -14.148271560668945
    7. '.app' → logprob: -14.523271560668945
    8. '.setdefault' → logprob: -14.773271560668945
    9. '.Append' → logprob: -14.898271560668945
    10. '.add' → logprob: -15.398271560668945

Token 821: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.01816258206963539
    2. '(' → logprob: -4.018162727355957
    3. ' (' → logprob: -11.518162727355957
    4. ' ' → logprob: -13.393162727355957
    5. ' ((' → logprob: -14.393162727355957
    6. '(
' → logprob: -15.268162727355957
    7. '(('' → logprob: -15.768162727355957
    8. ')((' → logprob: -16.14316177368164
    9. '>((' → logprob: -16.89316177368164
    10. ')' → logprob: -17.39316177368164

Token 822: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3485436737537384
    2. '0' → logprob: -1.223543643951416
    3. ' (' → logprob: -10.223544120788574
    4. ' ' → logprob: -10.348544120788574
    5. ')' → logprob: -10.598544120788574
    6. '   ' → logprob: -12.973544120788574
    7. '(
' → logprob: -14.098544120788574
    8. ')(' → logprob: -14.473544120788574
    9. '```' → logprob: -14.723544120788574
    10. '  ' → logprob: -14.848544120788574

Token 823: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.849109119386412e-06
    2. ' ,' → logprob: -11.875009536743164
    3. ',
' → logprob: -13.125009536743164
    4. '‌,' → logprob: -15.125009536743164
    5. ')' → logprob: -16.000009536743164
    6. '<|end|>' → logprob: -16.375009536743164
    7. '),' → logprob: -17.000009536743164
    8. ' ' → logprob: -17.375009536743164
    9. ',\
' → logprob: -17.375009536743164
    10. ',(' → logprob: -17.375009536743164

Token 824: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.01814994215965271
    2. ' angle' → logprob: -4.0181498527526855
    3. '(angle' → logprob: -18.268150329589844
    4. '_angle' → logprob: -19.768150329589844
    5. 'Angle' → logprob: -20.893150329589844
    6. '.angle' → logprob: -21.393150329589844
    7. 'angular' → logprob: -22.143150329589844
    8. 'interval' → logprob: -22.893150329589844
    9. '-angle' → logprob: -23.018150329589844
    10. '   ' → logprob: -23.143150329589844

Token 825: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '۲' → logprob: -17.5
    4. ')' → logprob: -18.75
    5. '₂' → logprob: -18.875
    6. '   ' → logprob: -19.0
    7. '２' → logprob: -19.25
    8. '```' → logprob: -19.875
    9. '
' → logprob: -20.125
    10. '২' → logprob: -20.125

Token 826: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06208520755171776
    2. ')' → logprob: -2.8120851516723633
    3. '))
' → logprob: -9.937085151672363
    4. ' ))' → logprob: -10.312085151672363
    5. ' )' → logprob: -10.812085151672363
    6. ')}' → logprob: -12.187085151672363
    7. ')
' → logprob: -12.562085151672363
    8. '   ' → logprob: -13.187085151672363
    9. ')))' → logprob: -13.312085151672363
    10. '       ' → logprob: -14.062085151672363

Token 827: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.041283365339040756
    2. ')' → logprob: -3.416283369064331
    3. 'else' → logprob: -5.916283130645752
    4. ' else' → logprob: -6.166283130645752
    5. '                   ' → logprob: -7.291283130645752
    6. '           ' → logprob: -7.291283130645752
    7. '<|end|>' → logprob: -7.916283130645752
    8. '   ' → logprob: -8.16628360748291
    9. '(' → logprob: -8.79128360748291
    10. '       ' → logprob: -8.91628360748291

Token 828: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4203351140022278
    2. 'else' (adapté à ' else') → logprob: -1.420335054397583
    3. ' else' → logprob: -2.295335054397583
    4. '           ' → logprob: -7.670335292816162
    5. '	else' → logprob: -9.170334815979004
    6. ')' → logprob: -9.670334815979004
    7. '	           ' → logprob: -10.045334815979004
    8. '			' → logprob: -10.795334815979004
    9. '		       ' → logprob: -10.795334815979004
    10. '	       ' → logprob: -11.045334815979004

Token 829: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03800326585769653
    2. '               ' → logprob: -4.038003444671631
    3. '           ' → logprob: -5.788003444671631
    4. '   ' → logprob: -5.788003444671631
    5. '(' → logprob: -5.913003444671631
    6. '                       ' → logprob: -6.038003444671631
    7. '		           ' → logprob: -6.163003444671631
    8. '	               ' → logprob: -6.538003444671631
    9. ':
' → logprob: -7.038003444671631
    10. ':' → logprob: -7.663003444671631

Token 830: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.13444110751152039
    2. '               ' → logprob: -2.5094411373138428
    3. 'covered' → logprob: -3.3844411373138428
    4. '   ' → logprob: -5.259440898895264
    5. ' covered' → logprob: -5.384440898895264
    6. '           ' → logprob: -7.759440898895264
    7. '                       ' → logprob: -9.009441375732422
    8. '       ' → logprob: -9.384441375732422
    9. '-covered' → logprob: -9.759441375732422
    10. 'cover' → logprob: -10.259441375732422

Token 831: ' covered' (ID: 13083)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'covered' (adapté à ' covered') → logprob: -0.029812397435307503
    2. ' covered' → logprob: -3.5298123359680176
    3. '                   ' → logprob: -9.904812812805176
    4. '               ' → logprob: -11.529812812805176
    5. 'cover' → logprob: -14.154812812805176
    6. 'Covered' → logprob: -14.779812812805176
    7. '-covered' → logprob: -14.779812812805176
    8. '   ' → logprob: -15.279812812805176
    9. '           ' → logprob: -15.654812812805176
    10. '(' → logprob: -15.779812812805176

Token 832: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -1.9361264946837764e-07
    2. '.append' → logprob: -17.0
    3. '_' → logprob: -17.25
    4. '_interval' → logprob: -17.5
    5. '```' → logprob: -18.0
    6. '_tokens' → logprob: -18.875
    7. 'Intervals' → logprob: -19.0
    8. 'interval' → logprob: -19.375
    9. '
' → logprob: -19.375
    10. '   ' → logprob: -19.625

Token 833: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.007479310967028141
    2. 'als' → logprob: -5.757479190826416
    3. 'val' → logprob: -5.882479190826416
    4. '_inter' → logprob: -6.757479190826416
    5. 's' → logprob: -8.757479667663574
    6. '.append' → logprob: -9.632479667663574
    7. 'interval' → logprob: -10.132479667663574
    8. '   ' → logprob: -10.882479667663574
    9. '```' → logprob: -11.382479667663574
    10. 'erv' → logprob: -11.632479667663574

Token 834: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00023131117632146925
    2. '.' → logprob: -8.375231742858887
    3. '.app' → logprob: -15.125231742858887
    4. ' .' → logprob: -15.250231742858887
    5. 'append' → logprob: -16.75023078918457
    6. '.setdefault' → logprob: -17.12523078918457
    7. ').' → logprob: -17.87523078918457
    8. '.add' → logprob: -18.00023078918457
    9. '​.' → logprob: -18.00023078918457
    10. '.Append' → logprob: -18.00023078918457

Token 835: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00020413640595506877
    2. '(' → logprob: -8.500204086303711
    3. '(
' → logprob: -14.625204086303711
    4. ' (' → logprob: -17.50020408630371
    5. ' ((' → logprob: -17.87520408630371
    6. '(angle' → logprob: -18.12520408630371
    7. ' ' → logprob: -18.87520408630371
    8. '(('' → logprob: -19.50020408630371
    9. '   ' → logprob: -20.12520408630371
    10. '(("' → logprob: -20.50020408630371

Token 836: 'angle' (ID: 7140)
  Prédit: 'angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -2.975612187583465e-05
    2. ' angle' → logprob: -11.000029563903809
    3. '(angle' → logprob: -11.250029563903809
    4. '(' → logprob: -18.125030517578125
    5. '.angle' → logprob: -18.875030517578125
    6. '   ' → logprob: -19.875030517578125
    7. '-angle' → logprob: -20.250030517578125
    8. 'angles' → logprob: -20.750030517578125
    9. '_angle' → logprob: -20.750030517578125
    10. ')' → logprob: -20.875030517578125

Token 837: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '   ' → logprob: -18.5
    3. ',' → logprob: -18.75
    4. ' ' → logprob: -18.875
    5. '```' → logprob: -19.0
    6. '[' → logprob: -19.25
    7. '
' → logprob: -19.25
    8. '(' → logprob: -19.375
    9. ')' → logprob: -19.8125
    10. '۱' → logprob: -20.125

Token 838: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.054500666621607e-06
    2. ' ,' → logprob: -13.50000286102295
    3. ',
' → logprob: -13.62500286102295
    4. '‌,' → logprob: -15.25000286102295
    5. '<|end|>' → logprob: -16.250003814697266
    6. ',

' → logprob: -17.125003814697266
    7. '',' → logprob: -17.750003814697266
    8. '),' → logprob: -19.125003814697266
    9. ',user' → logprob: -19.125003814697266
    10. ',end' → logprob: -19.125003814697266

Token 839: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.023245595395565033
    2. ' angle' → logprob: -3.7732455730438232
    3. '(angle' → logprob: -16.773244857788086
    4. '_angle' → logprob: -18.898244857788086
    5. '   ' → logprob: -19.148244857788086
    6. 'Angle' → logprob: -19.523244857788086
    7. ' ' → logprob: -20.148244857788086
    8. '.angle' → logprob: -20.273244857788086
    9. 'angular' → logprob: -20.398244857788086
    10. 'interval' → logprob: -20.523244857788086

Token 840: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '۲' → logprob: -17.625
    4. '₂' → logprob: -18.125
    5. '```' → logprob: -18.875
    6. '   ' → logprob: -18.9375
    7. '২' → logprob: -19.25
    8. '[' → logprob: -19.6875
    9. ')' → logprob: -19.75
    10. '２' → logprob: -19.8125

Token 841: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2471589798224159e-05
    2. '))' → logprob: -11.625012397766113
    3. ')
' → logprob: -13.000012397766113
    4. ' )' → logprob: -13.625012397766113
    5. '   ' → logprob: -17.62501335144043
    6. ')}' → logprob: -18.50001335144043
    7. ')#' → logprob: -19.00001335144043
    8. '())' → logprob: -19.25001335144043
    9. ')`' → logprob: -19.25001335144043
    10. ')
' → logprob: -19.50001335144043

Token 842: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8578091859817505
    2. '<|end|>' → logprob: -1.1078091859817505
    3. '           ' → logprob: -1.4828091859817505
    4. '
' → logprob: -5.482809066772461
    5. '```' → logprob: -5.857809066772461
    6. '<|end|>' → logprob: -5.982809066772461
    7. '        
' → logprob: -6.482809066772461
    8. ')' → logprob: -6.607809066772461
    9. '   ' → logprob: -7.107809066772461
    10. ' covered' → logprob: -7.232809066772461

Token 843: ' #' (ID: 1069)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.27257633209228516
    2. '       ' → logprob: -1.7725763320922852
    3. ' uncovered' → logprob: -3.022576332092285
    4. '           ' → logprob: -5.272576332092285
    5. 'covered' → logprob: -5.522576332092285
    6. '   ' → logprob: -5.522576332092285
    7. '```' → logprob: -6.897576332092285
    8. 'available' → logprob: -6.897576332092285
    9. 'visible' → logprob: -7.022576332092285
    10. '
' → logprob: -7.147576332092285

Token 844: ' Merge' (ID: 71009)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'covered' → logprob: -0.33748528361320496
    2. 'un' → logprob: -1.4624853134155273
    3. 'merged' → logprob: -3.0874853134155273
    4. ' uncovered' → logprob: -5.087485313415527
    5. ' covered' → logprob: -7.337485313415527
    6. '       ' → logprob: -7.587485313415527
    7. '           ' → logprob: -7.837485313415527
    8. '   ' → logprob: -8.087485313415527
    9. '#' → logprob: -8.337485313415527
    10. 'available' → logprob: -8.962485313415527

Token 845: ' intervals' (ID: 49900)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'covered' → logprob: -0.06229390576481819
    2. ' covered' → logprob: -2.8122940063476562
    3. ' intervals' → logprob: -8.187294006347656
    4. 'interval' → logprob: -10.687294006347656
    5. 'coverage' → logprob: -11.812294006347656
    6. 'cover' → logprob: -12.062294006347656
    7. 'merged' → logprob: -12.687294006347656
    8. '           ' → logprob: -12.937294006347656
    9. '-covered' → logprob: -13.437294006347656
    10. ' coverage' → logprob: -13.437294006347656

Token 846: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4293391704559326
    2. '=' → logprob: -1.3043391704559326
    3. '           ' → logprob: -3.0543391704559326
    4. 'covered' → logprob: -4.304339408874512
    5. '       ' → logprob: -5.179339408874512
    6. '(' → logprob: -5.304339408874512
    7. ' covered' → logprob: -5.929339408874512
    8. '   ' → logprob: -6.179339408874512
    9. ')' → logprob: -7.679339408874512
    10. '<|end|>' → logprob: -7.804339408874512

Token 847: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19043488800525665
    2. ' uncovered' → logprob: -2.5654349327087402
    3. ' covered' → logprob: -3.1904349327087402
    4. 'covered' → logprob: -3.5654349327087402
    5. '       ' → logprob: -4.81543493270874
    6. ' un' → logprob: -5.44043493270874
    7. 'un' → logprob: -5.69043493270874
    8. ' available' → logprob: -6.56543493270874
    9. ' =' → logprob: -6.69043493270874
    10. ' visible' → logprob: -7.06543493270874

Token 848: ' covered' (ID: 13083)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'covered' (adapté à ' covered') → logprob: -0.8103557825088501
    2. 'un' → logprob: -1.06035578250885
    3. 'merged' → logprob: -2.0603556632995605
    4. ' uncovered' → logprob: -2.8103556632995605
    5. ' merged' → logprob: -5.3103556632995605
    6. ' covered' → logprob: -5.5603556632995605
    7. 'visible' → logprob: -5.5603556632995605
    8. '       ' → logprob: -6.1853556632995605
    9. 'cover' → logprob: -6.3103556632995605
    10. '           ' → logprob: -6.8103556632995605

Token 849: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -4.4849443838757e-06
    2. ' =' → logprob: -13.500004768371582
    3. 'interval' → logprob: -13.500004768371582
    4. '_' → logprob: -13.875004768371582
    5. '=' → logprob: -14.750004768371582
    6. 'inter' → logprob: -16.125003814697266
    7. '_interval' → logprob: -16.375003814697266
    8. '_angles' → logprob: -17.375003814697266
    9. 'Intervals' → logprob: -17.375003814697266
    10. ' intervals' → logprob: -17.500003814697266

Token 850: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.3872699439525604
    2. 'als' → logprob: -1.1372699737548828
    3. '   ' → logprob: -9.512269973754883
    4. 'val' → logprob: -9.512269973754883
    5. '```' → logprob: -9.762269973754883
    6. '[' → logprob: -10.387269973754883
    7. 'al' → logprob: -10.887269973754883
    8. ' vals' → logprob: -11.012269973754883
    9. '=' → logprob: -11.262269973754883
    10. 'erv' → logprob: -11.512269973754883

Token 851: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192907452583313
    2. ' =' → logprob: -1.5019290447235107
    3. ' ' → logprob: -18.626928329467773
    4. '＝' → logprob: -18.751928329467773
    5. ',' → logprob: -19.376928329467773
    6. ')' → logprob: -20.376928329467773
    7. '   ' → logprob: -20.376928329467773
    8. '.=' → logprob: -20.626928329467773
    9. ' =
' → logprob: -21.126928329467773
    10. '=
' → logprob: -21.376928329467773

Token 852: ' merge' (ID: 20345)
  Prédit: 'merge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'merge' → logprob: -0.0031786637846380472
    2. ' merge' → logprob: -5.753178596496582
    3. 'merged' → logprob: -14.628178596496582
    4. 'mer' → logprob: -15.378178596496582
    5. '   ' → logprob: -16.0031795501709
    6. 'com' → logprob: -16.1281795501709
    7. '.merge' → logprob: -17.0031795501709
    8. ' ' → logprob: -17.8781795501709
    9. 'combine' → logprob: -18.0031795501709
    10. 'cover' → logprob: -18.5031795501709

Token 853: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -3.173704271830502e-06
    2. '_' → logprob: -13.12500286102295
    3. '_interval' → logprob: -14.25000286102295
    4. '(_' → logprob: -15.25000286102295
    5. '(interval' → logprob: -16.500003814697266
    6. '(' → logprob: -16.625003814697266
    7. 'interval' → logprob: -16.750003814697266
    8. 'Intervals' → logprob: -17.000003814697266
    9. ' intervals' → logprob: -18.500003814697266
    10. '_(' → logprob: -18.750003814697266

Token 854: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.033133573830127716
    2. 'als' → logprob: -3.5331335067749023
    3. 'val' → logprob: -6.283133506774902
    4. '_' → logprob: -7.283133506774902
    5. '_inter' → logprob: -8.283133506774902
    6. 'al' → logprob: -8.408133506774902
    7. 'erv' → logprob: -9.408133506774902
    8. '(' → logprob: -9.533133506774902
    9. '```' → logprob: -9.783133506774902
    10. '[' → logprob: -10.033133506774902

Token 855: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.704273118884885e-07
    2. ' (' → logprob: -14.875000953674316
    3. '(
' → logprob: -15.625000953674316
    4. '((' → logprob: -16.375
    5. '([' → logprob: -17.5
    6. 'covered' → logprob: -18.0
    7. '[' → logprob: -18.75
    8. '(co' → logprob: -18.875
    9. '(interval' → logprob: -19.0
    10. '([...' → logprob: -19.0

Token 856: 'covered' (ID: 32827)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16024230420589447
    2. 'covered' → logprob: -1.9102423191070557
    3. 'cover' → logprob: -11.535242080688477
    4. ' covered' → logprob: -12.285242080688477
    5. ')' → logprob: -13.160242080688477
    6. ' (' → logprob: -14.285242080688477
    7. '   ' → logprob: -14.910242080688477
    8. 'coverage' → logprob: -15.035242080688477
    9. '-covered' → logprob: -16.160242080688477
    10. 'Covered' → logprob: -16.410242080688477

Token 857: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -2.45848218582978e-06
    2. '_' → logprob: -13.12500286102295
    3. 'interval' → logprob: -16.000001907348633
    4. '_interval' → logprob: -16.625001907348633
    5. ' intervals' → logprob: -16.875001907348633
    6. '_in' → logprob: -16.875001907348633
    7. '(_' → logprob: -17.250001907348633
    8. '(interval' → logprob: -17.625001907348633
    9. '_int' → logprob: -17.875001907348633
    10. '```' → logprob: -17.875001907348633

Token 858: 'vals' (ID: 44567)
  Prédit: 'als'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.038440994918346405
    2. 'vals' → logprob: -3.2884409427642822
    3. 'al' → logprob: -9.038440704345703
    4. '```' → logprob: -9.413440704345703
    5. 'val' → logprob: -10.288440704345703
    6. '   ' → logprob: -10.413440704345703
    7. 's' → logprob: -10.663440704345703
    8. 'ls' → logprob: -11.538440704345703
    9. '{' → logprob: -11.788440704345703
    10. '[' → logprob: -11.788440704345703

Token 859: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006613265140913427
    2. ')
' → logprob: -8.37566089630127
    3. '<|end|>' → logprob: -8.62566089630127
    4. '       ' → logprob: -8.75066089630127
    5. '           ' → logprob: -10.87566089630127
    6. '[' → logprob: -11.37566089630127
    7. '   ' → logprob: -11.37566089630127
    8. '()' → logprob: -11.75066089630127
    9. ' )' → logprob: -12.00066089630127
    10. ',' → logprob: -12.00066089630127

Token 860: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9037339687347412
    2. '       ' → logprob: -1.4037339687347412
    3. '<|end|>' → logprob: -1.6537339687347412
    4. '           ' → logprob: -2.528733968734741
    5. '        
' → logprob: -3.028733968734741
    6. '            
' → logprob: -5.02873420715332
    7. '  
' → logprob: -5.77873420715332
    8. '    
' → logprob: -5.77873420715332
    9. '```' → logprob: -5.90373420715332
    10. ',' → logprob: -6.15373420715332

Token 861: ' #' (ID: 1069)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.08993969857692719
    2. 'com' → logprob: -3.089939594268799
    3. '       ' → logprob: -3.339939594268799
    4. ' uncovered' → logprob: -6.464939594268799
    5. '   ' → logprob: -7.089939594268799
    6. 'open' → logprob: -7.339939594268799
    7. 'visible' → logprob: -7.964939594268799
    8. '           ' → logprob: -8.339940071105957
    9. 'available' → logprob: -8.589940071105957
    10. 'valid' → logprob: -8.714940071105957

Token 862: ' Calculate' (ID: 38942)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.03499294072389603
    2. ' uncovered' → logprob: -4.0349931716918945
    3. 'com' → logprob: -4.2849931716918945
    4. 'open' → logprob: -7.9099931716918945
    5. 'available' → logprob: -7.9099931716918945
    6. 'visible' → logprob: -8.034993171691895
    7. 'free' → logprob: -8.284993171691895
    8. '   ' → logprob: -8.534993171691895
    9. 'length' → logprob: -8.784993171691895
    10. 'covered' → logprob: -8.909993171691895

Token 863: ' uncovered' (ID: 81941)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.04349864646792412
    2. 'com' → logprob: -3.4184987545013428
    3. ' uncovered' → logprob: -5.543498516082764
    4. '           ' → logprob: -6.293498516082764
    5. '   ' → logprob: -6.668498516082764
    6. '       ' → logprob: -7.543498516082764
    7. 'visible' → logprob: -7.918498516082764
    8. 'open' → logprob: -8.293498992919922
    9. '```' → logprob: -8.418498992919922
    10. 'remaining' → logprob: -8.418498992919922

Token 864: ' intervals' (ID: 49900)
  Prédit: '_inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.006445949897170067
    2. 'ar' → logprob: -6.50644588470459
    3. 'interval' → logprob: -6.50644588470459
    4. '_ar' → logprob: -6.63144588470459
    5. '_angles' → logprob: -7.50644588470459
    6. ' =' → logprob: -7.63144588470459
    7. '_parts' → logprob: -7.75644588470459
    8. '_length' → logprob: -8.63144588470459
    9. '_segments' → logprob: -9.25644588470459
    10. '=' → logprob: -9.25644588470459

Token 865: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.058067042380571365
    2. 'un' → logprob: -2.9330670833587646
    3. '       ' → logprob: -6.3080668449401855
    4. '   ' → logprob: -7.0580668449401855
    5. ',' → logprob: -8.933067321777344
    6. '<|end|>' → logprob: -9.683067321777344
    7. ' un' → logprob: -10.558067321777344
    8. '
' → logprob: -10.558067321777344
    9. '```' → logprob: -10.683067321777344
    10. '<|end|>' → logprob: -10.683067321777344

Token 866: '           ' (ID: 352)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.520359992980957
    2. '       ' → logprob: -1.145359992980957
    3. '           ' → logprob: -2.520359992980957
    4. '   ' → logprob: -5.395359992980957
    5. ' uncovered' → logprob: -7.145359992980957
    6. ',' → logprob: -7.895359992980957
    7. ' un' → logprob: -7.895359992980957
    8. '	un' → logprob: -8.145359992980957
    9. '```' → logprob: -8.895359992980957
    10. '<|end|>' → logprob: -9.020359992980957

Token 867: ' uncovered' (ID: 81941)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.002204262651503086
    2. ' uncovered' → logprob: -6.502204418182373
    3. '   ' → logprob: -7.627204418182373
    4. '       ' → logprob: -9.002203941345215
    5. 'open' → logprob: -11.252203941345215
    6. 'free' → logprob: -11.252203941345215
    7. '```' → logprob: -11.502203941345215
    8. 'for' → logprob: -11.502203941345215
    9. 'visible' → logprob: -11.627203941345215
    10. '           ' → logprob: -11.752203941345215

Token 868: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.13529257476329803
    2. ' =' → logprob: -2.5102925300598145
    3. '=' → logprob: -3.1352925300598145
    4. '_' → logprob: -6.5102925300598145
    5. '_angles' → logprob: -8.760293006896973
    6. 's' → logprob: -9.010293006896973
    7. '=_' → logprob: -11.260293006896973
    8. '_ranges' → logprob: -11.385293006896973
    9. '_tokens' → logprob: -12.510293006896973
    10. 'Intervals' → logprob: -13.010293006896973

Token 869: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.13120420277118683
    2. 'als' → logprob: -2.131204128265381
    3. 'erv' → logprob: -6.256204128265381
    4. '=' → logprob: -7.256204128265381
    5. 's' → logprob: -7.756204128265381
    6. 'val' → logprob: -8.131204605102539
    7. ' =' → logprob: -8.256204605102539
    8. '   ' → logprob: -8.506204605102539
    9. '```' → logprob: -9.006204605102539
    10. ' vals' → logprob: -10.006204605102539

Token 870: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192928314208984
    2. '=' → logprob: -1.5019292831420898
    3. ' =
' → logprob: -16.501930236816406
    4. ' ' → logprob: -17.501930236816406
    5. '＝' → logprob: -17.751930236816406
    6. ',' → logprob: -18.501930236816406
    7. '=
' → logprob: -18.626930236816406
    8. 's' → logprob: -18.876930236816406
    9. ')' → logprob: -19.501930236816406
    10. '  ' → logprob: -19.751930236816406

Token 871: ' complement' (ID: 21800)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.08896716684103012
    2. ' complement' → logprob: -2.4639670848846436
    3. 'compl' → logprob: -10.838967323303223
    4. ' complementary' → logprob: -13.213967323303223
    5. '	com' → logprob: -13.338967323303223
    6. ' comple' → logprob: -13.963967323303223
    7. ' com' → logprob: -14.088967323303223
    8. 'Complement' → logprob: -14.088967323303223
    9. ' compliment' → logprob: -14.338967323303223
    10. '(com' → logprob: -14.463967323303223

Token 872: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -2.816093228830141e-06
    2. '_' → logprob: -13.12500286102295
    3. '(' → logprob: -15.00000286102295
    4. '(interval' → logprob: -15.25000286102295
    5. '_interval' → logprob: -16.125001907348633
    6. '(_' → logprob: -16.625001907348633
    7. '_in' → logprob: -16.875001907348633
    8. '(inter' → logprob: -17.125001907348633
    9. '_(' → logprob: -17.750001907348633
    10. 'interval' → logprob: -17.750001907348633

Token 873: 'vals' (ID: 44567)
  Prédit: '_inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.33646485209465027
    2. 'ter' → logprob: -2.4614648818969727
    3. 'erv' → logprob: -2.4614648818969727
    4. 'vals' → logprob: -2.9614648818969727
    5. 'als' → logprob: -3.5864648818969727
    6. 'erval' → logprob: -3.9614648818969727
    7. 'val' → logprob: -5.086464881896973
    8. 'al' → logprob: -5.836464881896973
    9. 'interval' → logprob: -5.961464881896973
    10. 'er' → logprob: -6.336464881896973

Token 874: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. ' (' → logprob: -17.5
    3. '((' → logprob: -18.625
    4. '(
' → logprob: -19.75
    5. 'covered' → logprob: -20.375
    6. '(`' → logprob: -22.25
    7. '(com' → logprob: -22.375
    8. '(interval' → logprob: -22.625
    9. '(c' → logprob: -23.375
    10. '(co' → logprob: -23.375

Token 875: 'covered' (ID: 32827)
  Prédit: 'covered'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'covered' → logprob: -0.12693378329277039
    2. '(' → logprob: -2.1269338130950928
    3. 'cover' → logprob: -12.876934051513672
    4. ' covered' → logprob: -13.126934051513672
    5. 'coverage' → logprob: -14.126934051513672
    6. ')' → logprob: -15.876934051513672
    7. '-covered' → logprob: -16.501934051513672
    8. 'Covered' → logprob: -16.751934051513672
    9. '[' → logprob: -17.001934051513672
    10. 'covers' → logprob: -17.251934051513672

Token 876: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -2.1008713702030946e-06
    2. 'interval' → logprob: -13.250001907348633
    3. 'inter' → logprob: -16.250001907348633
    4. '_' → logprob: -16.625001907348633
    5. '(interval' → logprob: -16.875001907348633
    6. '```' → logprob: -17.125001907348633
    7. '_in' → logprob: -17.500001907348633
    8. '_interval' → logprob: -18.250001907348633
    9. ' intervals' → logprob: -18.250001907348633
    10. 's' → logprob: -18.250001907348633

Token 877: 'vals' (ID: 44567)
  Prédit: 'als'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.011218646541237831
    2. 'vals' → logprob: -4.511218547821045
    3. '```' → logprob: -10.011219024658203
    4. 'al' → logprob: -10.511219024658203
    5. 'ls' → logprob: -11.386219024658203
    6. 'val' → logprob: -11.386219024658203
    7. '   ' → logprob: -11.511219024658203
    8. 's' → logprob: -11.511219024658203
    9. '[' → logprob: -11.636219024658203
    10. 'erv' → logprob: -12.948719024658203

Token 878: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04864005371928215
    2. ')
' → logprob: -3.048640012741089
    3. '   ' → logprob: -10.423640251159668
    4. ')
' → logprob: -11.298640251159668
    5. '       ' → logprob: -12.173640251159668
    6. ')

' → logprob: -13.798640251159668
    7. '           ' → logprob: -13.923640251159668
    8. ' ' → logprob: -14.048640251159668
    9. '<|end|>' → logprob: -14.548640251159668
    10. ' )' → logprob: -15.048640251159668

Token 879: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7040579319000244
    2. 'for' → logprob: -1.0790579319000244
    3. '       ' → logprob: -2.4540579319000244
    4. ' for' → logprob: -2.5790579319000244
    5. '   ' → logprob: -6.204057693481445
    6. '	       ' → logprob: -7.454057693481445
    7. '	   ' → logprob: -7.829057693481445
    8. '	for' → logprob: -8.079057693481445
    9. '		' → logprob: -9.204057693481445
    10. '<|end|>' → logprob: -9.329057693481445

Token 880: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10240957885980606
    2. '           ' → logprob: -2.352409601211548
    3. ' for' → logprob: -6.352409362792969
    4. '       ' → logprob: -7.727409362792969
    5. '   ' → logprob: -12.352409362792969
    6. 'length' → logprob: -12.852409362792969
    7. '	       ' → logprob: -12.977409362792969
    8. 'import' → logprob: -13.102409362792969
    9. '	for' → logprob: -13.352409362792969
    10. '               ' → logprob: -13.727409362792969

Token 881: ' Sum' (ID: 34138)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.333223139634356e-05
    2. ' for' → logprob: -11.000033378601074
    3. 'import' → logprob: -11.625033378601074
    4. '           ' → logprob: -12.125033378601074
    5. 'length' → logprob: -13.125033378601074
    6. 'from' → logprob: -15.625033378601074
    7. '       ' → logprob: -16.875032424926758
    8. '   ' → logprob: -17.750032424926758
    9. '	for' → logprob: -17.875032424926758
    10. '               ' → logprob: -18.750032424926758

Token 882: ' uncovered' (ID: 81941)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6812314391136169
    2. 'length' → logprob: -1.6812314987182617
    3. 'un' → logprob: -1.8062314987182617
    4. 'total' → logprob: -2.8062314987182617
    5. '+=' → logprob: -3.5562314987182617
    6. '_length' → logprob: -3.9312314987182617
    7. ' for' → logprob: -4.681231498718262
    8. '           ' → logprob: -5.181231498718262
    9. '               ' → logprob: -5.306231498718262
    10. ' +=' → logprob: -5.306231498718262

Token 883: ' arcs' (ID: 150448)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0084003871306777
    2. ' +=' → logprob: -6.2584004402160645
    3. '_lengths' → logprob: -6.2584004402160645
    4. '_arc' → logprob: -6.6334004402160645
    5. ' =' → logprob: -7.0084004402160645
    6. '+=' → logprob: -7.7584004402160645
    7. 'length' → logprob: -7.8834004402160645
    8. 'ar' → logprob: -7.8834004402160645
    9. '_' → logprob: -8.258399963378906
    10. '=' → logprob: -8.508399963378906

Token 884: ' length' (ID: 5517)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004532181192189455
    2. '       ' → logprob: -5.629532337188721
    3. 'for' → logprob: -7.129532337188721
    4. ' for' → logprob: -9.754531860351562
    5. '		' → logprob: -10.254531860351562
    6. '               ' → logprob: -11.504531860351562
    7. '   ' → logprob: -11.879531860351562
    8. ',' → logprob: -12.004531860351562
    9. '	       ' → logprob: -12.004531860351562
    10. '          ' → logprob: -13.254531860351562

Token 885: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03317553922533989
    2. 'for' → logprob: -4.033175468444824
    3. '       ' → logprob: -4.658175468444824
    4. ' for' → logprob: -5.283175468444824
    5. ',' → logprob: -9.283175468444824
    6. '		' → logprob: -9.908175468444824
    7. '   ' → logprob: -10.033175468444824
    8. '               ' → logprob: -10.283175468444824
    9. '	       ' → logprob: -10.408175468444824
    10. '
' → logprob: -10.783175468444824

Token 886: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009084022603929043
    2. '       ' → logprob: -5.509084224700928
    3. 'for' → logprob: -5.509084224700928
    4. ' for' → logprob: -7.009084224700928
    5. '               ' → logprob: -11.13408374786377
    6. '		' → logprob: -11.50908374786377
    7. '   ' → logprob: -12.13408374786377
    8. ',' → logprob: -12.75908374786377
    9. '	       ' → logprob: -12.88408374786377
    10. '                   ' → logprob: -14.13408374786377

Token 887: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0005716211744584143
    2. ' for' → logprob: -8.250571250915527
    3. '           ' → logprob: -8.625571250915527
    4. 'total' → logprob: -9.000571250915527
    5. '       ' → logprob: -12.750571250915527
    6. '   ' → logprob: -12.875571250915527
    7. 'length' → logprob: -13.875571250915527
    8. '               ' → logprob: -14.375571250915527
    9. '	for' → logprob: -14.750571250915527
    10. ' ' → logprob: -17.250572204589844

Token 888: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.38192224502563477
    2. '(start' → logprob: -1.2569222450256348
    3. 'interval' → logprob: -4.006922245025635
    4. ' start' → logprob: -5.256922245025635
    5. '(interval' → logprob: -5.881922245025635
    6. ' (' → logprob: -6.256922245025635
    7. '(' → logprob: -6.381922245025635
    8. '(u' → logprob: -6.756922245025635
    9. '(un' → logprob: -7.256922245025635
    10. 'un' → logprob: -7.256922245025635

Token 889: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009220616775564849
    2. ',start' → logprob: -7.750922203063965
    3. ',end' → logprob: -7.750922203063965
    4. ' ,' → logprob: -10.500922203063965
    5. ',length' → logprob: -11.500922203063965
    6. ',
' → logprob: -12.250922203063965
    7. ',last' → logprob: -13.250922203063965
    8. ',s' → logprob: -13.500922203063965
    9. ' in' → logprob: -13.625922203063965
    10. '<|end|>' → logprob: -13.625922203063965

Token 890: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.011047814972698689
    2. ' end' → logprob: -4.511047840118408
    3. '	end' → logprob: -18.63604736328125
    4. '_end' → logprob: -20.26104736328125
    5. '=end' → logprob: -20.76104736328125
    6. '(end' → logprob: -21.01104736328125
    7. ' ' → logprob: -21.13604736328125
    8. 'End' → logprob: -21.51104736328125
    9. '[end' → logprob: -21.63604736328125
    10. ',end' → logprob: -22.01104736328125

Token 891: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.015484847128391266
    2. 'in' → logprob: -4.265484809875488
    3. ',' → logprob: -6.890484809875488
    4. '	in' → logprob: -8.890484809875488
    5. '_in' → logprob: -10.265484809875488
    6. '   ' → logprob: -10.390484809875488
    7. '  ' → logprob: -11.140484809875488
    8. ' ' → logprob: -11.390484809875488
    9. '<|end|>' → logprob: -11.390484809875488
    10. ':' → logprob: -11.765484809875488

Token 892: ' uncovered' (ID: 81941)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -1.5332478142227046e-05
    2. ' uncovered' → logprob: -11.125015258789062
    3. '	un' → logprob: -14.625015258789062
    4. '_un' → logprob: -17.875015258789062
    5. '(un' → logprob: -18.125015258789062
    6. ' un' → logprob: -18.500015258789062
    7. ' ' → logprob: -18.500015258789062
    8. 'uned' → logprob: -18.625015258789062
    9. 'unp' → logprob: -19.125015258789062
    10. 'unchecked' → logprob: -19.125015258789062

Token 893: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.000321995816193521
    2. '_' → logprob: -8.375322341918945
    3. '_interval' → logprob: -9.875322341918945
    4. '_
' → logprob: -11.375322341918945
    5. 'interval' → logprob: -11.375322341918945
    6. '_:' → logprob: -12.500322341918945
    7. ':' → logprob: -13.125322341918945
    8. 'inter' → logprob: -13.250322341918945
    9. '```' → logprob: -13.250322341918945
    10. ':
' → logprob: -13.500322341918945

Token 894: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.16320310533046722
    2. 'als' → logprob: -2.288203001022339
    3. 'val' → logprob: -3.413203001022339
    4. 'al' → logprob: -4.288203239440918
    5. '```' → logprob: -7.163203239440918
    6. 'erval' → logprob: -8.163203239440918
    7. 'erv' → logprob: -8.163203239440918
    8. '   ' → logprob: -8.163203239440918
    9. '       ' → logprob: -8.663203239440918
    10. 's' → logprob: -9.788203239440918

Token 895: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01058872789144516
    2. ':
' → logprob: -4.760588645935059
    3. '               ' → logprob: -7.010588645935059
    4. '           ' → logprob: -7.385588645935059
    5. ',' → logprob: -8.635588645935059
    6. '       ' → logprob: -9.635588645935059
    7. '<|end|>' → logprob: -9.885588645935059
    8. '=' → logprob: -10.135588645935059
    9. '   ' → logprob: -10.760588645935059
    10. '):
' → logprob: -10.885588645935059

Token 896: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0034353004302829504
    2. '           ' → logprob: -5.753435134887695
    3. ' total' → logprob: -10.003435134887695
    4. '   ' → logprob: -10.253435134887695
    5. '                   ' → logprob: -10.378435134887695
    6. '<|end|>' → logprob: -10.378435134887695
    7. '       ' → logprob: -10.878435134887695
    8. '	       ' → logprob: -10.878435134887695
    9. '(total' → logprob: -11.128435134887695
    10. '```' → logprob: -11.503435134887695

Token 897: ' arc' (ID: 26922)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5009088516235352
    2. ' total' → logprob: -1.5009088516235352
    3. '               ' → logprob: -2.500908851623535
    4. '                   ' → logprob: -2.500908851623535
    5. '   ' → logprob: -5.000908851623535
    6. '           ' → logprob: -9.000908851623535
    7. ' ' → logprob: -9.625908851623535
    8. '	total' → logprob: -9.625908851623535
    9. '                       ' → logprob: -10.250908851623535
    10. '       ' → logprob: -10.750908851623535

Token 898: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.005540731828659773
    2. '_len' → logprob: -5.50554084777832
    3. ' =' → logprob: -7.50554084777832
    4. '=' → logprob: -7.63054084777832
    5. '_l' → logprob: -8.88054084777832
    6. 'length' → logprob: -9.00554084777832
    7. '_angle' → logprob: -10.13054084777832
    8. '_' → logprob: -10.25554084777832
    9. 'len' → logprob: -10.38054084777832
    10. 's' → logprob: -11.63054084777832

Token 899: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.43042728304862976
    2. '+=' → logprob: -1.0554273128509521
    3. '=' → logprob: -6.930427074432373
    4. '+' → logprob: -8.055427551269531
    5. ' =' → logprob: -8.305427551269531
    6. ']+=' → logprob: -9.430427551269531
    7. ')' → logprob: -11.055427551269531
    8. '<|end|>' → logprob: -11.180427551269531
    9. '               ' → logprob: -11.430427551269531
    10. ' ' → logprob: -11.430427551269531

Token 900: ' cr' (ID: 1769)
  Prédit: 'cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.16098034381866455
    2. ' cr' → logprob: -2.160980224609375
    3. '(cr' → logprob: -3.410980224609375
    4. ' (' → logprob: -8.410980224609375
    5. '(end' → logprob: -8.535980224609375
    6. 'end' → logprob: -10.035980224609375
    7. '	cr' → logprob: -12.660980224609375
    8. '(' → logprob: -13.160980224609375
    9. '   ' → logprob: -13.535980224609375
    10. '_cr' → logprob: -14.785980224609375

Token 901: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6933924555778503
    2. ' *' → logprob: -0.6933924555778503
    3. '*(' → logprob: -8.318392753601074
    4. '   ' → logprob: -14.318392753601074
    5. '*object' → logprob: -15.318392753601074
    6. ' ' → logprob: -15.943392753601074
    7. '**' → logprob: -17.068391799926758
    8. '```' → logprob: -17.943391799926758
    9. '*((' → logprob: -18.068391799926758
    10. '*Math' → logprob: -18.068391799926758

Token 902: ' (' (ID: 350)
  Prédit: '(end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(end' → logprob: -0.011383545584976673
    2. ' (' → logprob: -4.511383533477783
    3. '(abs' → logprob: -8.011384010314941
    4. '(' → logprob: -13.261384010314941
    5. '[end' → logprob: -14.011384010314941
    6. '=end' → logprob: -15.011384010314941
    7. '(start' → logprob: -15.136384010314941
    8. '(max' → logprob: -15.386384010314941
    9. '(ent' → logprob: -16.261383056640625
    10. '(e' → logprob: -16.636383056640625

Token 903: 'end' (ID: 419)
  Prédit: 'end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -4.5491004129871726e-05
    2. ' end' → logprob: -10.000045776367188
    3. '(end' → logprob: -16.750045776367188
    4. '_end' → logprob: -20.375045776367188
    5. '	end' → logprob: -20.875045776367188
    6. '=end' → logprob: -21.375045776367188
    7. '[end' → logprob: -21.500045776367188
    8. ''end' → logprob: -22.000045776367188
    9. 'End' → logprob: -22.125045776367188
    10. '   ' → logprob: -23.000045776367188

Token 904: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.31327277421951294
    2. '-' → logprob: -1.3132727146148682
    3. '-start' → logprob: -11.438272476196289
    4. ' ' → logprob: -16.43827247619629
    5. '-
' → logprob: -16.56327247619629
    6. '   ' → logprob: -17.31327247619629
    7. '−' → logprob: -17.43827247619629
    8. ' -
' → logprob: -17.43827247619629
    9. '```' → logprob: -17.43827247619629
    10. '-token' → logprob: -18.31327247619629

Token 905: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.005233763717114925
    2. ' start' → logprob: -5.2552337646484375
    3. '	start' → logprob: -22.130233764648438
    4. ' ' → logprob: -23.755233764648438
    5. '[start' → logprob: -23.880233764648438
    6. '   ' → logprob: -24.505233764648438
    7. '=start' → logprob: -24.505233764648438
    8. '_start' → logprob: -24.755233764648438
    9. '(start' → logprob: -25.255233764648438
    10. 'Start' → logprob: -25.505233764648438

Token 906: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011935919523239136
    2. ')
' → logprob: -4.761935710906982
    3. '               ' → logprob: -5.886935710906982
    4. '<|end|>' → logprob: -8.26193618774414
    5. '           ' → logprob: -8.51193618774414
    6. '                   ' → logprob: -10.51193618774414
    7. ' )' → logprob: -11.76193618774414
    8. '       ' → logprob: -12.01193618774414
    9. ')
' → logprob: -12.26193618774414
    10. '),' → logprob: -12.38693618774414

Token 907: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004192330234218389
    2. '           ' → logprob: -8.375419616699219
    3. 'total' → logprob: -9.125419616699219
    4. ' total' → logprob: -10.625419616699219
    5. '                   ' → logprob: -11.625419616699219
    6. '       ' → logprob: -11.625419616699219
    7. '   ' → logprob: -11.625419616699219
    8. '			' → logprob: -11.750419616699219
    9. '		       ' → logprob: -12.500419616699219
    10. ' ' → logprob: -12.625419616699219

Token 908: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.1480720490217209
    2. ' total' → logprob: -2.1480720043182373
    3. '               ' → logprob: -3.8980720043182373
    4. '           ' → logprob: -8.148072242736816
    5. '   ' → logprob: -8.898072242736816
    6. '       ' → logprob: -9.273072242736816
    7. '	total' → logprob: -9.648072242736816
    8. ' ' → logprob: -10.648072242736816
    9. '			' → logprob: -11.773072242736816
    10. '	' → logprob: -12.523072242736816

Token 909: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.8624639324116288e-06
    2. '_l' → logprob: -13.875001907348633
    3. '_' → logprob: -14.625001907348633
    4. '_le' → logprob: -16.125001907348633
    5. 'length' → logprob: -16.875001907348633
    6. '_len' → logprob: -17.000001907348633
    7. '+' → logprob: -17.250001907348633
    8. '+=' → logprob: -17.500001907348633
    9. 'Length' → logprob: -17.750001907348633
    10. ' +=' → logprob: -18.500001907348633

Token 910: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20163464546203613
    2. ' +=' → logprob: -1.7016346454620361
    3. '+' → logprob: -8.576634407043457
    4. ']+=' → logprob: -10.451634407043457
    5. '+=(' → logprob: -13.451634407043457
    6. '+="' → logprob: -13.576634407043457
    7. '+='' → logprob: -13.826634407043457
    8. ' +' → logprob: -16.076635360717773
    9. '<|end|>' → logprob: -17.201635360717773
    10. '=' → logprob: -17.576635360717773

Token 911: ' arc' (ID: 26922)
  Prédit: 'arc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arc' → logprob: -0.018150178715586662
    2. ' arc' → logprob: -4.018150329589844
    3. 'ar' → logprob: -15.518150329589844
    4. '_arc' → logprob: -18.143150329589844
    5. ' ' → logprob: -18.268150329589844
    6. 'ark' → logprob: -18.643150329589844
    7. '.arc' → logprob: -18.643150329589844
    8. '   ' → logprob: -18.768150329589844
    9. 'arp' → logprob: -19.143150329589844
    10. ' ' → logprob: -19.143150329589844

Token 912: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -9.088346359931165e-07
    2. 'length' → logprob: -14.750000953674316
    3. '_lengths' → logprob: -15.125000953674316
    4. '_l' → logprob: -16.375
    5. '_LENGTH' → logprob: -17.625
    6. 'Length' → logprob: -17.75
    7. '-length' → logprob: -18.5
    8. '_distance' → logprob: -18.5
    9. '_arc' → logprob: -18.5
    10. 'ength' → logprob: -19.0

Token 913: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1627286970615387
    2. '       ' → logprob: -2.037728786468506
    3. '   ' → logprob: -4.037728786468506
    4. '\n' → logprob: -7.662728786468506
    5. '<|end|>' → logprob: -7.912728786468506
    6. '        
' → logprob: -8.037728309631348
    7. '    
' → logprob: -8.162728309631348
    8. '           ' → logprob: -8.662728309631348
    9. '
' → logprob: -9.037728309631348
    10. ' return' → logprob: -9.412728309631348

Token 914: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2004566788673401
    2. '   ' → logprob: -1.8254566192626953
    3. '
' → logprob: -3.9504566192626953
    4. '```' → logprob: -7.825456619262695
    5. '        
' → logprob: -8.200456619262695
    6. '    
' → logprob: -8.450456619262695
    7. ' return' → logprob: -9.200456619262695
    8. '	' → logprob: -9.825456619262695
    9. '<|end|>' → logprob: -9.950456619262695
    10. '\n' → logprob: -10.075456619262695

Token 915: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.004222997464239597
    2. '   ' → logprob: -5.504222869873047
    3. '       ' → logprob: -9.129222869873047
    4. ' print' → logprob: -10.879222869873047
    5. '```' → logprob: -11.629222869873047
    6. '
' → logprob: -11.754222869873047
    7. '	print' → logprob: -15.504222869873047
    8. '    
' → logprob: -15.879222869873047
    9. '#print' → logprob: -16.379222869873047
    10. '        
' → logprob: -17.004222869873047

Token 916: '(total' (ID: 39744)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.5212832093238831
    2. '(' → logprob: -1.6462831497192383
    3. '(round' → logprob: -2.2712831497192383
    4. '()' → logprob: -2.5212831497192383
    5. '(total' → logprob: -3.6462831497192383
    6. '("{' → logprob: -6.271283149719238
    7. '("%.' → logprob: -7.271283149719238
    8. '(int' → logprob: -7.521283149719238
    9. '("")' → logprob: -8.896283149719238
    10. '(math' → logprob: -8.896283149719238

Token 917: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.23522594571113586
    2. '_' → logprob: -1.6102259159088135
    3. ')' → logprob: -5.235226154327393
    4. '_line' → logprob: -6.110226154327393
    5. '_)' → logprob: -7.235226154327393
    6. '```' → logprob: -7.860226154327393
    7. '_len' → logprob: -8.110225677490234
    8. ')_' → logprob: -8.360225677490234
    9. ' _' → logprob: -9.735225677490234
    10. '\' → logprob: -10.110225677490234

Token 918: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24000611901283264
    2. '()' → logprob: -2.2400062084198
    3. '())' → logprob: -2.2400062084198
    4. '(' → logprob: -8.115006446838379
    5. ' )' → logprob: -9.615006446838379
    6. '*' → logprob: -9.865006446838379
    7. ' ())' → logprob: -11.115006446838379
    8. ' ()' → logprob: -11.865006446838379
    9. '**' → logprob: -12.365006446838379
    10. '()*' → logprob: -12.490006446838379

Token 919: ' 

' (ID: 1202)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 920: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 921: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 919
Tokens correctement prédits (1ère position, stricte): 428
Tokens correctement prédits (1ère position, avec adaptation): 459
Tokens correctement prédits (top 10): 801
Précision stricte (1ère position): 46.57%
Précision adaptée (1ère position): 49.95%
Précision (top 10): 87.16%
================================================================================
