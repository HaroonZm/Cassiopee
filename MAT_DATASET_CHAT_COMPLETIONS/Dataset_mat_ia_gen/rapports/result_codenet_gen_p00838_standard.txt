================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin

# Face order: [top, front, right, back, left, bottom]
# We'll represent cubes as tuples of 6 colors.

# 24 rotations of the cube:
# Each rotation returns a new orientation of the cube faces in the order [top, front, right, back, left, bottom].
# Reference: https://stackoverflow.com/questions/33177115/how-to-get-all-the-24-orientations-of-a-cube
def rotations(c):
    t,f,r,b,l,d = c
    # The 24 orientations are obtained by orienting the cube in 6 directions (top face), and rotating it 4 times around vertical axis.

    def roll(cube): # rotate cube to get new top
        t,f,r,b,l,d = cube
        return (f, d, r, t, l, b)
    def turn(cube): # rotate cube 90° around vertical axis
        t,f,r,b,l,d = cube
        return (t, l, f, r, b, d)
    rots = []
    cur = c
    for _ in range(6):
        for _ in range(4):
            rots.append(cur)
            cur = turn(cur)
        if _%2==0:
            cur = roll(cur)
        else:
            # for 2nd and 4th rolls, do roll thrice (roll^-1)
            cur = roll(roll(roll(cur)))
    # unique orientations only (should be 24)
    uniq = []
    seen = set()
    for r in rots:
        if r not in seen:
            seen.add(r)
            uniq.append(r)
    return uniq

def min_repaints(cubes):
    n = len(cubes)
    all_rots = [rotations(cube) for cube in cubes]  # list of list of 24 tuples
    min_cost = float('inf')
    # Choose for each cube an orientation (24^n <= 24^4 = 331,776 manageable)
    # For each orientation combination, compute minimal repaint cost:
    # Find for each face position the most common color, repaint other faces
    from collections import Counter
    import itertools
    for orientation_indices in itertools.product(range(24), repeat=n):
        faces = [all_rots[i][orientation_indices[i]] for i in range(n)]
        cost = 0
        for face_pos in range(6):
            colors = [faces[i][face_pos] for i in range(n)]
            cnt = Counter(colors)
            most_common = cnt.most_common(1)[0][1]
            cost += n - most_common
            if cost >= min_cost:
                break
        if cost < min_cost:
            min_cost = cost
    return min_cost

def main():
    lines = stdin.read().strip('\n ').split('\n')
    idx = 0
    while True:
        if idx >= len(lines):
            break
        n = lines[idx].strip()
        idx += 1
        if n == '0':
            break
        n = int(n)
        cubes = []
        for _ in range(n):
            cube_colors = lines[idx].strip().split()
            idx += 1
            cubes.append(tuple(cube_colors))
        print(min_repaints(cubes))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.16436803340911865
    2. ' argv' → logprob: -2.289368152618408
    3. 'exit' → logprob: -3.539368152618408
    4. ' exit' → logprob: -4.039368152618408
    5. 'stdout' → logprob: -6.664368152618408
    6. 'import' → logprob: -6.789368152618408
    7. 'path' → logprob: -7.914368152618408
    8. 'stdin' → logprob: -8.03936767578125
    9. ' import' → logprob: -8.91436767578125
    10. '.argv' → logprob: -9.28936767578125

Token 4: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05420396849513054
    2. '.readline' → logprob: -3.804203987121582
    3. '\n' → logprob: -3.929203987121582
    4. '
' → logprob: -5.554203987121582
    5. '```' → logprob: -6.054203987121582
    6. '.read' → logprob: -6.929203987121582
    7. 'import' → logprob: -6.929203987121582
    8. 'newline' → logprob: -7.429203987121582
    9. '\' → logprob: -7.679203987121582
    10. '' → logprob: -8.304203987121582

Token 5: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06790920346975327
    2. '.readline' → logprob: -3.0679092407226562
    3. 'for' → logprob: -4.817909240722656
    4. '\n' → logprob: -5.567909240722656
    5. '.read' → logprob: -5.817909240722656
    6. 'import' → logprob: -6.692909240722656
    7. '' → logprob: -7.442909240722656
    8. 'read' → logprob: -7.817909240722656
    9. 'print' → logprob: -8.067909240722656
    10. '
' → logprob: -8.067909240722656

Token 6: ' Face' (ID: 29049)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7987072467803955
    2. 'stdin' → logprob: -1.0487072467803955
    3. 'import' → logprob: -3.5487072467803955
    4. ' stdin' → logprob: -3.7987072467803955
    5. 'stdout' → logprob: -3.7987072467803955
    6. '.stdin' → logprob: -3.9237072467803955
    7. ' input' → logprob: -4.048707008361816
    8. 'print' → logprob: -4.423707008361816
    9. 'def' → logprob: -4.673707008361816
    10. 'read' → logprob: -4.673707008361816

Token 7: ' order' (ID: 2569)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.979067325592041
    2. ' =' → logprob: -1.479067325592041
    3. ' ' → logprob: -1.604067325592041
    4. 's' → logprob: -2.729067325592041
    5. '=' → logprob: -3.604067325592041
    6. '  ' → logprob: -3.604067325592041
    7. ',' → logprob: -4.354067325592041
    8. '#' → logprob: -4.979067325592041
    9. '   ' → logprob: -5.479067325592041
    10. ' #' → logprob: -5.854067325592041

Token 8: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08000294864177704
    2. '=' → logprob: -3.455003023147583
    3. ':' → logprob: -3.705003023147583
    4. 's' → logprob: -4.580002784729004
    5. ',' → logprob: -5.955002784729004
    6. 'faces' → logprob: -5.955002784729004
    7. '[:]' → logprob: -6.330002784729004
    8. '_' → logprob: -6.955002784729004
    9. '_faces' → logprob: -6.955002784729004
    10. ' :' → logprob: -7.705002784729004

Token 9: ' [' (ID: 723)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -0.48761263489723206
    2. '["' → logprob: -1.9876126050949097
    3. ' ['' → logprob: -2.237612724304199
    4. ''' → logprob: -3.737612724304199
    5. ' ["' → logprob: -3.862612724304199
    6. '[' → logprob: -4.112612724304199
    7. 'T' → logprob: -4.737612724304199
    8. 'top' → logprob: -4.737612724304199
    9. '"' → logprob: -5.362612724304199
    10. 'U' → logprob: -5.487612724304199

Token 10: 'top' (ID: 8169)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.43932220339775085
    2. '"' → logprob: -2.5643222332000732
    3. ']' → logprob: -2.6893222332000732
    4. '[' → logprob: -3.5643222332000732
    5. ''n' → logprob: -3.5643222332000732
    6. ''N' → logprob: -3.5643222332000732
    7. ''L' → logprob: -4.439321994781494
    8. '(' → logprob: -4.689321994781494
    9. ''T' → logprob: -4.689321994781494
    10. ''H' → logprob: -4.814321994781494

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07491663098335266
    2. ']' → logprob: -2.6999166011810303
    3. ' ]' → logprob: -6.074916839599609
    4. ' ,' → logprob: -6.449916839599609
    5. '_face' → logprob: -7.949916839599609
    6. ',
' → logprob: -8.32491683959961
    7. 'face' → logprob: -9.57491683959961
    8. '`]' → logprob: -9.82491683959961
    9. ' face' → logprob: -10.07491683959961
    10. '']' → logprob: -10.44991683959961

Token 12: ' front' (ID: 5567)
  Prédit: ' bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bottom' → logprob: -0.6278432011604309
    2. ' front' → logprob: -1.2528431415557861
    3. 'bottom' → logprob: -2.377843141555786
    4. ' right' → logprob: -3.502843141555786
    5. 'front' → logprob: -3.627843141555786
    6. ' left' → logprob: -3.877843141555786
    7. 'left' → logprob: -5.127843379974365
    8. 'right' → logprob: -5.502843379974365
    9. 'bot' → logprob: -9.377842903137207
    10. ',' → logprob: -9.502842903137207

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001249925117008388
    2. ']' → logprob: -9.25012493133545
    3. ' ,' → logprob: -10.87512493133545
    4. ',
' → logprob: -12.75012493133545
    5. 'face' → logprob: -13.50012493133545
    6. 'bottom' → logprob: -13.75012493133545
    7. ' face' → logprob: -13.87512493133545
    8. '_face' → logprob: -14.50012493133545
    9. ',

' → logprob: -14.62512493133545
    10. '```' → logprob: -15.00012493133545

Token 14: ' right' (ID: 1849)
  Prédit: ' bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bottom' → logprob: -0.20491179823875427
    2. 'bottom' → logprob: -1.9549118280410767
    3. ' right' → logprob: -3.329911708831787
    4. 'right' → logprob: -5.329911708831787
    5. ' left' → logprob: -6.329911708831787
    6. ' back' → logprob: -7.329911708831787
    7. 'left' → logprob: -7.579911708831787
    8. 'down' → logprob: -10.704912185668945
    9. '#' → logprob: -10.829912185668945
    10. 'back' → logprob: -10.954912185668945

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1004871279001236
    2. ']' → logprob: -2.350487232208252
    3. 'face' → logprob: -9.850486755371094
    4. '_face' → logprob: -9.850486755371094
    5. 's' → logprob: -10.725486755371094
    6. '']' → logprob: -10.725486755371094
    7. '`]' → logprob: -10.725486755371094
    8. '],' → logprob: -10.850486755371094
    9. ' ,' → logprob: -11.100486755371094
    10. ' face' → logprob: -11.225486755371094

Token 16: ' back' (ID: 1602)
  Prédit: ' bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bottom' → logprob: -0.5892708897590637
    2. 'bottom' → logprob: -0.8392708897590637
    3. ' left' → logprob: -4.839271068572998
    4. 'left' → logprob: -5.839271068572998
    5. ' back' → logprob: -6.464271068572998
    6. 'down' → logprob: -7.964271068572998
    7. ' down' → logprob: -8.71427059173584
    8. ',' → logprob: -8.83927059173584
    9. 'back' → logprob: -8.83927059173584
    10. 'bot' → logprob: -10.33927059173584

Token 17: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004375830467324704
    2. ']' → logprob: -7.7504377365112305
    3. ' ,' → logprob: -12.12543773651123
    4. '#' → logprob: -15.25043773651123
    5. ',
' → logprob: -15.50043773651123
    6. '`]' → logprob: -15.87543773651123
    7. 'top' → logprob: -16.125436782836914
    8. 'face' → logprob: -16.375436782836914
    9. '```' → logprob: -16.375436782836914
    10. '],' → logprob: -16.625436782836914

Token 18: ' left' (ID: 3561)
  Prédit: ' bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bottom' → logprob: -0.44041234254837036
    2. 'bottom' → logprob: -1.5654122829437256
    3. ' left' → logprob: -2.0654122829437256
    4. 'left' → logprob: -3.9404122829437256
    5. ',' → logprob: -7.815412521362305
    6. ' down' → logprob: -7.940412521362305
    7. 'down' → logprob: -8.565412521362305
    8. 'bot' → logprob: -11.065412521362305
    9. ' ' → logprob: -11.690412521362305
    10. 'top' → logprob: -11.815412521362305

Token 19: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16024149954319
    2. ']' → logprob: -1.9102414846420288
    3. '`]' → logprob: -12.66024112701416
    4. ' ,' → logprob: -12.91024112701416
    5. ' ]' → logprob: -13.03524112701416
    6. '#' → logprob: -13.41024112701416
    7. '_faces' → logprob: -14.03524112701416
    8. ')' → logprob: -14.16024112701416
    9. '```' → logprob: -14.16024112701416
    10. 's' → logprob: -14.28524112701416

Token 20: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.31396475434303284
    2. ' bottom' → logprob: -1.3139647245407104
    3. 'down' → logprob: -7.56396484375
    4. ' down' → logprob: -8.93896484375
    5. 'bot' → logprob: -9.93896484375
    6. ' bot' → logprob: -12.81396484375
    7. '_bottom' → logprob: -14.43896484375
    8. ']' → logprob: -14.68896484375
    9. 'b' → logprob: -15.56396484375
    10. '#' → logprob: -16.43896484375

Token 21: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.47626737493556e-05
    2. ' ]' → logprob: -11.25003433227539
    3. ',' → logprob: -11.87503433227539
    4. ']
' → logprob: -12.50003433227539
    5. '`]' → logprob: -12.62503433227539
    6. ']
' → logprob: -13.37503433227539
    7. '```' → logprob: -13.50003433227539
    8. '']' → logprob: -13.50003433227539
    9. '#' → logprob: -13.62503433227539
    10. ']

' → logprob: -14.00003433227539

Token 22: '#' (ID: 2)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.2423805445432663
    2. 'cube' → logprob: -2.2423806190490723
    3. 'dice' → logprob: -2.4923806190490723
    4. 'face' → logprob: -4.117380619049072
    5. 'colors' → logprob: -5.117380619049072
    6. ' faces' → logprob: -6.992380619049072
    7. '```' → logprob: -7.617380619049072
    8. 'def' → logprob: -7.867380619049072
    9. ' cube' → logprob: -7.867380619049072
    10. 'cub' → logprob: -8.617380142211914

Token 23: ' We'll' (ID: 46830)
  Prédit: 'faces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.8169757127761841
    2. 'dice' → logprob: -0.9419757127761841
    3. 'cube' → logprob: -3.0669755935668945
    4. ' dice' → logprob: -3.3169755935668945
    5. ' faces' → logprob: -3.8169755935668945
    6. 'colors' → logprob: -4.0669755935668945
    7. ' cube' → logprob: -4.1919755935668945
    8. 'face' → logprob: -4.8169755935668945
    9. 'def' → logprob: -5.0669755935668945
    10. ' colors' → logprob: -6.3169755935668945

Token 24: ' represent' (ID: 5188)
  Prédit: ' define'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' define' → logprob: -0.8377521634101868
    2. ' simulate' → logprob: -1.962752103805542
    3. ' assume' → logprob: -2.087752103805542
    4. 'simulate' → logprob: -2.462752103805542
    5. ' use' → logprob: -3.087752103805542
    6. ' keep' → logprob: -3.087752103805542
    7. 'define' → logprob: -3.462752103805542
    8. ' implement' → logprob: -3.962752103805542
    9. ' continue' → logprob: -4.712752342224121
    10. ' be' → logprob: -4.962752342224121

Token 25: ' cubes' (ID: 88455)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4396936595439911
    2. ' each' → logprob: -1.4396936893463135
    3. ' a' → logprob: -3.0646936893463135
    4. ' dice' → logprob: -3.4396936893463135
    5. ' faces' → logprob: -4.314693450927734
    6. 'the' → logprob: -5.314693450927734
    7. 'dice' → logprob: -5.314693450927734
    8. 'each' → logprob: -5.439693450927734
    9. ' cube' → logprob: -5.689693450927734
    10. ' die' → logprob: -5.814693450927734

Token 26: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.08953846991062164
    2. 'as' → logprob: -2.58953857421875
    3. ' =' → logprob: -5.58953857421875
    4. '[' → logprob: -5.96453857421875
    5. ' with' → logprob: -6.83953857421875
    6. '_faces' → logprob: -6.83953857421875
    7. '```' → logprob: -8.08953857421875
    8. '_face' → logprob: -8.21453857421875
    9. 'with' → logprob: -8.33953857421875
    10. 'faces' → logprob: -8.33953857421875

Token 27: ' tuples' (ID: 112464)
  Prédit: ' lists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lists' → logprob: -0.1674998253583908
    2. ' a' → logprob: -2.2924997806549072
    3. 'lists' → logprob: -3.5424997806549072
    4. 'a' → logprob: -4.667500019073486
    5. '[' → logprob: -5.667500019073486
    6. ' arrays' → logprob: -5.917500019073486
    7. ' six' → logprob: -6.042500019073486
    8. ' [' → logprob: -6.167500019073486
    9. ' nested' → logprob: -6.792500019073486
    10. ' ' → logprob: -7.042500019073486

Token 28: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21504449844360352
    2. ',' → logprob: -2.4650444984436035
    3. ' (' → logprob: -2.8400444984436035
    4. '\' → logprob: -4.3400444984436035
    5. '(
' → logprob: -4.4650444984436035
    6. ' =' → logprob: -5.4650444984436035
    7. '[' → logprob: -5.8400444984436035
    8. '```' → logprob: -5.8400444984436035
    9. ':' → logprob: -6.3400444984436035
    10. 'newline' → logprob: -6.5900444984436035

Token 29: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.5102866888046265
    2. ' ' → logprob: -2.135286808013916
    3. ' strings' → logprob: -2.385286808013916
    4. ' int' → logprob: -3.010286808013916
    5. ' length' → logprob: -3.260286808013916
    6. ' six' → logprob: -3.385286808013916
    7. ' integers' → logprob: -3.760286808013916
    8. '(int' → logprob: -4.635286808013916
    9. ' ints' → logprob: -4.635286808013916
    10. 'strings' → logprob: -5.510286808013916

Token 30: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.1939501166343689
    2. 'int' → logprob: -2.9439501762390137
    3. 'ints' → logprob: -3.0689501762390137
    4. 'inte' → logprob: -3.5689501762390137
    5. 'six' → logprob: -4.193950176239014
    6. 'str' → logprob: -4.693950176239014
    7. '(int' → logprob: -4.943950176239014
    8. 'strings' → logprob: -5.068950176239014
    9. 'length' → logprob: -5.318950176239014
    10. 'faces' → logprob: -6.068950176239014

Token 31: ' colors' (ID: 10803)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 32: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8073704242706299
    2. '\' → logprob: -1.8073704242706299
    3. ',' → logprob: -2.18237042427063
    4. '#' → logprob: -2.55737042427063
    5. '

' → logprob: -3.30737042427063
    6. '```' → logprob: -3.55737042427063
    7. '(' → logprob: -3.80737042427063
    8. 'newline' → logprob: -4.182370185852051
    9. '' → logprob: -4.432370185852051
    10. '\n' → logprob: -4.432370185852051

Token 33: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09333647787570953
    2. 'cube' → logprob: -2.968336582183838
    3. 'd' → logprob: -3.968336582183838
    4. 'c' → logprob: -4.718336582183838
    5. '```' → logprob: -6.093336582183838
    6. 'colors' → logprob: -6.218336582183838
    7. '
' → logprob: -6.343336582183838
    8. '\' → logprob: -6.968336582183838
    9. 'n' → logprob: -7.468336582183838
    10. '#' → logprob: -7.468336582183838

Token 34: ' ' (ID: 220)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5165982246398926
    2. 'def' → logprob: -1.0165982246398926
    3. '#' → logprob: -4.266598224639893
    4. 'c' → logprob: -4.391598224639893
    5. 'D' → logprob: -4.641598224639893
    6. 'C' → logprob: -5.766598224639893
    7. '```' → logprob: -7.766598224639893
    8. 'de' → logprob: -8.016597747802734
    9. 'cube' → logprob: -8.141597747802734
    10. 'class' → logprob: -8.641597747802734

Token 35: '24' (ID: 1494)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.033113155514001846
    2. '#' → logprob: -4.1581130027771
    3. 'c' → logprob: -5.2831130027771
    4. 'd' → logprob: -5.4081130027771
    5. 'cube' → logprob: -5.9081130027771
    6. 'C' → logprob: -6.2831130027771
    7. 'class' → logprob: -7.4081130027771
    8. 'from' → logprob: -7.6581130027771
    9. 'D' → logprob: -8.158113479614258
    10. 'colors' → logprob: -8.283113479614258

Token 36: ' rotations' (ID: 141136)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16741029918193817
    2. ':' → logprob: -2.542410373687744
    3. 'rot' → logprob: -3.042410373687744
    4. '=' → logprob: -4.542410373687744
    5. '_rot' → logprob: -5.292410373687744
    6. 's' → logprob: -6.167410373687744
    7. ' rotations' → logprob: -6.542410373687744
    8. 'ROT' → logprob: -6.667410373687744
    9. ' :' → logprob: -6.667410373687744
    10. ' ' → logprob: -6.792410373687744

Token 38: ' the' (ID: 290)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.14649054408073425
    2. ' the' → logprob: -2.1464905738830566
    3. ' cube' → logprob: -4.271490573883057
    4. 'a' → logprob: -6.146490573883057
    5. 'the' → logprob: -6.271490573883057
    6. ' cubes' → logprob: -7.021490573883057
    7. 'cube' → logprob: -8.021490097045898
    8. ' Cube' → logprob: -10.396490097045898
    9. ' ' → logprob: -10.771490097045898
    10. ' Rub' → logprob: -10.896490097045898

Token 39: ' cube' (ID: 46822)
  Prédit: ' cube'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cube' → logprob: -0.00858454778790474
    2. 'cube' → logprob: -4.883584499359131
    3. ' Rub' → logprob: -7.133584499359131
    4. '_cube' → logprob: -9.508584976196289
    5. 'Rub' → logprob: -10.758584976196289
    6. 'c' → logprob: -10.883584976196289
    7. ' Cube' → logprob: -11.258584976196289
    8. ' cubes' → logprob: -11.633584976196289
    9. ' ' → logprob: -12.008584976196289
    10. 'Cube' → logprob: -12.133584976196289

Token 40: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2648334801197052
    2. 'rot' → logprob: -2.389833450317383
    3. '_rot' → logprob: -3.514833450317383
    4. 'cube' → logprob: -3.639833450317383
    5. ' rotations' → logprob: -3.889833450317383
    6. ':' → logprob: -4.389833450317383
    7. 'ROT' → logprob: -4.639833450317383
    8. '=' → logprob: -5.014833450317383
    9. '_' → logprob: -5.014833450317383
    10. ' :' → logprob: -5.264833450317383

Token 41: '#' (ID: 2)
  Prédit: 'rot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.661988377571106
    2. 'cube' → logprob: -1.161988377571106
    3. 'c' → logprob: -2.9119882583618164
    4. '[
' → logprob: -3.2869882583618164
    5. ' rotations' → logprob: -3.4119882583618164
    6. ' cube' → logprob: -4.286988258361816
    7. '[' → logprob: -4.661988258361816
    8. 'ROT' → logprob: -4.911988258361816
    9. ' [
' → logprob: -5.411988258361816
    10. 'C' → logprob: -6.036988258361816

Token 42: ' Each' (ID: 11555)
  Prédit: 'cube'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cube' → logprob: -0.8927667737007141
    2. 'rot' → logprob: -1.0177667140960693
    3. 'c' → logprob: -2.1427667140960693
    4. 'ROT' → logprob: -3.2677667140960693
    5. 'C' → logprob: -3.6427667140960693
    6. '[
' → logprob: -3.8927667140960693
    7. ' rotations' → logprob: -4.517766952514648
    8. ' cube' → logprob: -5.267766952514648
    9. '[' → logprob: -5.767766952514648
    10. ' C' → logprob: -6.767766952514648

Token 43: ' rotation' (ID: 23769)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014722208492457867
    2. '=' → logprob: -5.0147223472595215
    3. ' ' → logprob: -5.0147223472595215
    4. '_' → logprob: -6.8897223472595215
    5. ' ,' → logprob: -10.264721870422363
    6. '_face' → logprob: -10.639721870422363
    7. ' _' → logprob: -10.639721870422363
    8. '_cube' → logprob: -10.889721870422363
    9. 'space' → logprob: -11.014721870422363
    10. ',' → logprob: -11.014721870422363

Token 44: ' returns' (ID: 7377)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42829152941703796
    2. ' is' → logprob: -1.1782915592193604
    3. ' ' → logprob: -3.4282915592193604
    4. ':' → logprob: -6.178291320800781
    5. '=' → logprob: -6.178291320800781
    6. 'is' → logprob: -6.303291320800781
    7. ' :' → logprob: -7.678291320800781
    8. 's' → logprob: -8.178291320800781
    9. ' represents' → logprob: -8.428291320800781
    10. ' can' → logprob: -8.428291320800781

Token 45: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.00891247857362032
    2. 'a' → logprob: -5.633912563323975
    3. ' ' → logprob: -5.883912563323975
    4. ' an' → logprob: -6.133912563323975
    5. ' new' → logprob: -9.258912086486816
    6. ' the' → logprob: -9.633912086486816
    7. ' lambda' → logprob: -9.633912086486816
    8. '<|end|>' → logprob: -10.508912086486816
    9. '  ' → logprob: -10.633912086486816
    10. ' (' → logprob: -10.758912086486816

Token 46: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.14430998265743256
    2. ' cube' → logprob: -2.3943099975585938
    3. ' tuple' → logprob: -3.7693099975585938
    4. 'new' → logprob: -4.019309997558594
    5. ' function' → logprob: -7.394309997558594
    6. ' ' → logprob: -7.519309997558594
    7. 'cube' → logprob: -7.894309997558594
    8. 'tuple' → logprob: -8.644309997558594
    9. ' rotated' → logprob: -9.019309997558594
    10. '_cube' → logprob: -10.019309997558594

Token 47: ' orientation' (ID: 29546)
  Prédit: ' cube'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cube' → logprob: -0.21607059240341187
    2. ' ' → logprob: -1.9660706520080566
    3. '_cube' → logprob: -4.091070652008057
    4. '_' → logprob: -4.216070652008057
    5. 'cube' → logprob: -4.966070652008057
    6. '(' → logprob: -5.716070652008057
    7. ')' → logprob: -5.716070652008057
    8. ' tuple' → logprob: -5.841070652008057
    9. ' (' → logprob: -5.966070652008057
    10. 'space' → logprob: -7.341070652008057

Token 48: ' of' (ID: 328)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7962818145751953
    2. ' =' → logprob: -1.9212818145751953
    3. '_cube' → logprob: -2.2962818145751953
    4. 'cube' → logprob: -2.5462818145751953
    5. 'def' → logprob: -2.9212818145751953
    6. 's' → logprob: -3.5462818145751953
    7. '(' → logprob: -3.7962818145751953
    8. '_rot' → logprob: -3.9212818145751953
    9. '_' → logprob: -4.171281814575195
    10. 'rot' → logprob: -4.796281814575195

Token 49: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6546229720115662
    2. 'the' → logprob: -0.7796229720115662
    3. 'cube' → logprob: -4.529623031616211
    4. 'faces' → logprob: -5.279623031616211
    5. ' cube' → logprob: -5.779623031616211
    6. ' faces' → logprob: -6.404623031616211
    7. 'c' → logprob: -7.904623031616211
    8. ' a' → logprob: -8.529623031616211
    9. 'a' → logprob: -8.529623031616211
    10. 'colors' → logprob: -8.779623031616211

Token 50: ' cube' (ID: 46822)
  Prédit: 'cube'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cube' → logprob: -0.1325109302997589
    2. ' cube' → logprob: -2.1325109004974365
    3. 'faces' → logprob: -5.632511138916016
    4. ' faces' → logprob: -6.882511138916016
    5. 'face' → logprob: -9.007511138916016
    6. 'colors' → logprob: -9.132511138916016
    7. 'tuple' → logprob: -9.257511138916016
    8. 'c' → logprob: -9.257511138916016
    9. '_faces' → logprob: -9.257511138916016
    10. '_cube' → logprob: -9.507511138916016

Token 51: ' faces' (ID: 22060)
  Prédit: 'cube'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cube' → logprob: -1.1696524620056152
    2. '_cube' → logprob: -1.9196524620056152
    3. '[
' → logprob: -2.0446524620056152
    4. '_' → logprob: -2.2946524620056152
    5. 'def' → logprob: -2.5446524620056152
    6. '```' → logprob: -2.6696524620056152
    7. '
' → logprob: -3.0446524620056152
    8. '[' → logprob: -3.4196524620056152
    9. '\' → logprob: -3.7946524620056152
    10. ':' → logprob: -3.7946524620056152

Token 52: ' in' (ID: 306)
  Prédit: 'cube'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cube' → logprob: -0.8586767911911011
    2. 'def' → logprob: -1.858676791191101
    3. '
' → logprob: -2.6086769104003906
    4. '_cube' → logprob: -2.6086769104003906
    5. 'rot' → logprob: -2.7336769104003906
    6. '```' → logprob: -2.8586769104003906
    7. '_' → logprob: -3.2336769104003906
    8. '_rot' → logprob: -3.2336769104003906
    9. 'face' → logprob: -4.233676910400391
    10. '[
' → logprob: -4.483676910400391

Token 53: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.319216251373291
    2. ' the' → logprob: -1.694216251373291
    3. '[' → logprob: -1.819216251373291
    4. '[
' → logprob: -1.944216251373291
    5. ' a' → logprob: -2.194216251373291
    6. 'a' → logprob: -3.069216251373291
    7. ' cube' → logprob: -4.069216251373291
    8. ' [
' → logprob: -4.444216251373291
    9. ' terms' → logprob: -4.569216251373291
    10. 'terms' → logprob: -4.694216251373291

Token 54: ' order' (ID: 2569)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8669555187225342
    2. '[
' → logprob: -0.9919555187225342
    3. 'cube' → logprob: -2.366955518722534
    4. ' cube' → logprob: -3.116955518722534
    5. ' list' → logprob: -3.866955518722534
    6. 'list' → logprob: -4.366955757141113
    7. '(' → logprob: -5.116955757141113
    8. ' tuple' → logprob: -5.491955757141113
    9. 'tuple' → logprob: -5.741955757141113
    10. ' [
' → logprob: -5.741955757141113

Token 55: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1019655466079712
    2. '[
' → logprob: -1.8519655466079712
    3. ' =' → logprob: -1.9769655466079712
    4. ' (' → logprob: -2.4769654273986816
    5. ':' → logprob: -2.8519654273986816
    6. ' [' → logprob: -3.2269654273986816
    7. ' [
' → logprob: -3.2269654273986816
    8. '=' → logprob: -3.6019654273986816
    9. '(' → logprob: -3.6019654273986816
    10. '[top' → logprob: -4.101965427398682

Token 56: 'top' (ID: 8169)
  Prédit: 'top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.048740316182374954
    2. ' top' → logprob: -3.0487403869628906
    3. '   ' → logprob: -9.54874038696289
    4. '0' → logprob: -10.29874038696289
    5. ']' → logprob: -11.79874038696289
    6. 't' → logprob: -11.79874038696289
    7. ''t' → logprob: -12.17374038696289
    8. '[top' → logprob: -12.29874038696289
    9. ' ' → logprob: -12.42374038696289
    10. '	top' → logprob: -12.79874038696289

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013333676906768233
    2. ' ,' → logprob: -9.000133514404297
    3. ',
' → logprob: -12.125133514404297
    4. '[' → logprob: -14.000133514404297
    5. ']' → logprob: -14.375133514404297
    6. '`,' → logprob: -15.250133514404297
    7. ',

' → logprob: -15.250133514404297
    8. ',
' → logprob: -15.375133514404297
    9. ',right' → logprob: -15.375133514404297
    10. ',",' → logprob: -15.625133514404297

Token 58: ' front' (ID: 5567)
  Prédit: ' front'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' front' → logprob: -0.005260083824396133
    2. 'front' → logprob: -5.255259990692139
    3. ' bottom' → logprob: -11.130260467529297
    4. ' right' → logprob: -12.130260467529297
    5. ',' → logprob: -12.880260467529297
    6. ' face' → logprob: -13.880260467529297
    7. ' ' → logprob: -14.255260467529297
    8. ' back' → logprob: -14.880260467529297
    9. '_front' → logprob: -15.130260467529297
    10. 'bottom' → logprob: -15.630260467529297

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.1080467781284824e-05
    2. ' ,' → logprob: -10.625041007995605
    3. ']' → logprob: -11.375041007995605
    4. ',
' → logprob: -12.875041007995605
    5. ',right' → logprob: -13.875041007995605
    6. '```' → logprob: -14.625041007995605
    7. ')' → logprob: -16.000041961669922
    8. 'right' → logprob: -16.250041961669922
    9. '`,' → logprob: -16.375041961669922
    10. 's' → logprob: -16.375041961669922

Token 60: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.0380457378923893
    2. 'right' → logprob: -3.288045644760132
    3. ',right' → logprob: -13.288045883178711
    4. ' ' → logprob: -14.163045883178711
    5. ' back' → logprob: -14.538045883178711
    6. ' left' → logprob: -14.788045883178711
    7. ' bottom' → logprob: -15.038045883178711
    8. ',' → logprob: -15.288045883178711
    9. '	right' → logprob: -15.538045883178711
    10. 'left' → logprob: -16.41304588317871

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.590104698669165e-05
    2. ']' → logprob: -9.500085830688477
    3. ' ,' → logprob: -11.750085830688477
    4. 's' → logprob: -14.750085830688477
    5. ',right' → logprob: -14.875085830688477
    6. 'faces' → logprob: -15.000085830688477
    7. ',
' → logprob: -15.000085830688477
    8. 'right' → logprob: -15.250085830688477
    9. '_faces' → logprob: -15.750085830688477
    10. ' ' → logprob: -15.875085830688477

Token 62: ' back' (ID: 1602)
  Prédit: ' back'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' back' → logprob: -0.0789070799946785
    2. 'back' → logprob: -2.578907012939453
    3. ',' → logprob: -12.078907012939453
    4. ' left' → logprob: -12.453907012939453
    5. ' bottom' → logprob: -13.328907012939453
    6. ' ' → logprob: -13.328907012939453
    7. 'bottom' → logprob: -13.578907012939453
    8. ' right' → logprob: -13.953907012939453
    9. 'left' → logprob: -13.953907012939453
    10. '```' → logprob: -14.703907012939453

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010432900162413716
    2. ']' → logprob: -6.876043319702148
    3. ' ,' → logprob: -12.251043319702148
    4. '   ' → logprob: -13.751043319702148
    5. '```' → logprob: -13.876043319702148
    6. ',
' → logprob: -14.126043319702148
    7. ',

' → logprob: -15.126043319702148
    8. ')' → logprob: -15.376043319702148
    9. ' ]' → logprob: -15.501043319702148
    10. ' ' → logprob: -15.501043319702148

Token 64: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.1002451702952385
    2. 'left' → logprob: -2.350245237350464
    3. ' right' → logprob: -11.600245475769043
    4. 'right' → logprob: -11.725245475769043
    5. 'bottom' → logprob: -11.975245475769043
    6. ' bottom' → logprob: -11.975245475769043
    7. ',left' → logprob: -12.725245475769043
    8. '   ' → logprob: -13.475245475769043
    9. ' ' → logprob: -13.600245475769043
    10. ',' → logprob: -13.725245475769043

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034023032640106976
    2. ']' → logprob: -8.000340461730957
    3. ' ,' → logprob: -13.250340461730957
    4. '```' → logprob: -13.875340461730957
    5. 'import' → logprob: -14.125340461730957
    6. ',
' → logprob: -15.125340461730957
    7. ')' → logprob: -16.00033950805664
    8. 's' → logprob: -16.00033950805664
    9. '#' → logprob: -16.25033950805664
    10. ',

' → logprob: -16.37533950805664

Token 66: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.6326499581336975
    2. ' bottom' → logprob: -0.7576499581336975
    3. '```' → logprob: -10.632650375366211
    4. ' ' → logprob: -12.132650375366211
    5. 'top' → logprob: -12.257650375366211
    6. 'right' → logprob: -12.382650375366211
    7. '   ' → logprob: -12.632650375366211
    8. '(bottom' → logprob: -13.257650375366211
    9. ',' → logprob: -13.757650375366211
    10. ' top' → logprob: -13.882650375366211

Token 67: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.843177233240567e-05
    2. ']
' → logprob: -11.875018119812012
    3. ']:' → logprob: -12.500018119812012
    4. ']
' → logprob: -12.750018119812012
    5. ']

' → logprob: -13.375018119812012
    6. '].' → logprob: -14.375018119812012
    7. '```' → logprob: -14.500018119812012
    8. ')' → logprob: -14.625018119812012
    9. ',' → logprob: -14.750018119812012
    10. ']

' → logprob: -14.875018119812012

Token 68: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5079508423805237
    2. 'rot' → logprob: -1.132950782775879
    3. '_rot' → logprob: -3.507950782775879
    4. 'cube' → logprob: -3.882950782775879
    5. '[
' → logprob: -5.007950782775879
    6. '_' → logprob: -5.507950782775879
    7. 'ROT' → logprob: -5.507950782775879
    8. '```' → logprob: -5.632950782775879
    9. '
' → logprob: -5.882950782775879
    10. '_cube' → logprob: -6.632950782775879

Token 69: ' Reference' (ID: 30716)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12506546080112457
    2. 'rot' → logprob: -2.500065565109253
    3. '_rot' → logprob: -4.500065326690674
    4. 'cube' → logprob: -4.625065326690674
    5. '_' → logprob: -5.375065326690674
    6. '[
' → logprob: -5.750065326690674
    7. 'ROT' → logprob: -6.750065326690674
    8. 'd' → logprob: -6.875065326690674
    9. '```' → logprob: -6.875065326690674
    10. '_cube' → logprob: -7.250065326690674

Token 70: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3211018741130829
    2. 'def' → logprob: -2.8211019039154053
    3. ' =' → logprob: -2.9461019039154053
    4. 's' → logprob: -3.1961019039154053
    5. '=' → logprob: -3.4461019039154053
    6. '[' → logprob: -3.6961019039154053
    7. '_' → logprob: -3.8211019039154053
    8. '_cube' → logprob: -4.196101665496826
    9. '_face' → logprob: -5.196101665496826
    10. '_faces' → logprob: -5.321101665496826

Token 71: ' https' (ID: 5918)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.30293333530426025
    2. 'def' → logprob: -1.8029333353042603
    3. '[' → logprob: -3.6779332160949707
    4. '#' → logprob: -3.8029332160949707
    5. ' [
' → logprob: -3.8029332160949707
    6. ' def' → logprob: -5.302933216094971
    7. 'cube' → logprob: -5.427933216094971
    8. 'https' → logprob: -6.177933216094971
    9. ' [' → logprob: -6.302933216094971
    10. ' #' → logprob: -6.302933216094971

Token 72: '://' (ID: 1684)
  Prédit: '://'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '://' → logprob: -6.635164754698053e-05
    2. ':' → logprob: -9.625066757202148
    3. 's' → logprob: -16.12506675720215
    4. ':#' → logprob: -16.62506675720215
    5. '#' → logprob: -16.75006675720215
    6. ':\/\/' → logprob: -17.87506675720215
    7. ':///' → logprob: -19.50006675720215
    8. ' :' → logprob: -19.62506675720215
    9. 'from' → logprob: -20.50006675720215
    10. ':/' → logprob: -20.50006675720215

Token 73: 'stackoverflow' (ID: 99294)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.004306683782488108
    2. 'www' → logprob: -6.004306793212891
    3. 'stackoverflow' → logprob: -7.379306793212891
    4. 'math' → logprob: -7.629306793212891
    5. 'docs' → logprob: -8.62930679321289
    6. 'paste' → logprob: -8.87930679321289
    7. 'leetcode' → logprob: -9.00430679321289
    8. 'upload' → logprob: -10.25430679321289
    9. 'w' → logprob: -10.62930679321289
    10. ' en' → logprob: -10.62930679321289

Token 74: '.com' (ID: 1136)
  Prédit: '.com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.com' → logprob: -0.00014406509581021965
    2. 'usercontent' → logprob: -10.000144004821777
    3. '.' → logprob: -10.125144004821777
    4. 'com' → logprob: -10.750144004821777
    5. '.co' → logprob: -11.625144004821777
    6. '```' → logprob: -12.500144004821777
    7. '.org' → logprob: -12.625144004821777
    8. '.io' → logprob: -12.625144004821777
    9. '.com's' → logprob: -12.875144004821777
    10. '.ai' → logprob: -13.000144004821777

Token 75: '/questions' (ID: 100087)
  Prédit: '/questions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/questions' → logprob: -0.1725156605243683
    2. '/' → logprob: -1.922515630722046
    3. '/users' → logprob: -4.922515869140625
    4. '/code' → logprob: -6.047515869140625
    5. '/posts' → logprob: -6.672515869140625
    6. '/comments' → logprob: -8.047515869140625
    7. 'questions' → logprob: -8.422515869140625
    8. '/a' → logprob: -8.422515869140625
    9. '/articles' → logprob: -8.797515869140625
    10. '.com' → logprob: -8.922515869140625

Token 76: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -3.531315314830863e-06
    2. '#' → logprob: -13.750003814697266
    3. '/questions' → logprob: -13.875003814697266
    4. '/code' → logprob: -15.125003814697266
    5. '1' → logprob: -15.250003814697266
    6. '```' → logprob: -15.750003814697266
    7. '.com' → logprob: -15.750003814697266
    8. '?' → logprob: -15.875003814697266
    9. 'questions' → logprob: -17.125003814697266
    10. '?q' → logprob: -17.125003814697266

Token 77: '331' (ID: 29839)
  Prédit: '156'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '156' → logprob: -2.6002707481384277
    2. '610' → logprob: -2.8502707481384277
    3. 'ask' → logprob: -2.9752707481384277
    4. '644' → logprob: -3.1002707481384277
    5. '310' → logprob: -3.2252707481384277
    6. '641' → logprob: -3.6002707481384277
    7. '383' → logprob: -3.7252707481384277
    8. '408' → logprob: -4.225270748138428
    9. '538' → logprob: -4.225270748138428
    10. '117' → logprob: -4.350270748138428

Token 78: '771' (ID: 46340)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.6873657703399658
    2. 'questions' → logprob: -2.937365770339966
    3. '231' → logprob: -4.562365531921387
    4. 'com' → logprob: -4.937365531921387
    5. '726' → logprob: -5.249865531921387
    6. '682' → logprob: -5.249865531921387
    7. '481' → logprob: -5.312365531921387
    8. '.com' → logprob: -5.312365531921387
    9. '855' → logprob: -5.624865531921387
    10. '494' → logprob: -5.812365531921387

Token 79: '15' (ID: 1055)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.6676231026649475
    2. '9' → logprob: -3.7926230430603027
    3. '1' → logprob: -4.042623043060303
    4. '23' → logprob: -4.042623043060303
    5. '3' → logprob: -4.167623043060303
    6. '6' → logprob: -4.417623043060303
    7. '43' → logprob: -4.417623043060303
    8. '7' → logprob: -4.667623043060303
    9. '42' → logprob: -4.667623043060303
    10. '27' → logprob: -4.792623043060303

Token 80: '/how' (ID: 89541)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004419674631208181
    2. '
' → logprob: -6.379419803619385
    3. 'cube' → logprob: -6.879419803619385
    4. '```' → logprob: -7.504419803619385
    5. 'rot' → logprob: -7.629419803619385
    6. 'import' → logprob: -8.629419326782227
    7. '_rot' → logprob: -9.379419326782227
    8. '[
' → logprob: -9.504419326782227
    9. ' def' → logprob: -10.129419326782227
    10. '_cube' → logprob: -10.254419326782227

Token 81: '-to' (ID: 6487)
  Prédit: '-to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-to' → logprob: -0.167393758893013
    2. 'to' → logprob: -1.9173938035964966
    3. ' to' → logprob: -5.542393684387207
    4. '-do' → logprob: -6.417393684387207
    5. '-' → logprob: -6.667393684387207
    6. 'To' → logprob: -9.292393684387207
    7. ' -' → logprob: -9.667393684387207
    8. '-can' → logprob: -9.667393684387207
    9. 'do' → logprob: -10.292393684387207
    10. '_to' → logprob: -10.417393684387207

Token 82: '-get' (ID: 51101)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.29254150390625
    2. 'rotate' → logprob: -2.54254150390625
    3. 'apply' → logprob: -3.54254150390625
    4. 'represent' → logprob: -3.66754150390625
    5. ' rotate' → logprob: -3.79254150390625
    6. '-re' → logprob: -3.79254150390625
    7. 'generate' → logprob: -4.54254150390625
    8. '-g' → logprob: -4.66754150390625
    9. ' represent' → logprob: -5.16754150390625
    10. '-do' → logprob: -5.41754150390625

Token 83: '-all' (ID: 38483)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.352560043334961
    2. '-all' → logprob: -1.477560043334961
    3. '-' → logprob: -1.727560043334961
    4. '-the' → logprob: -2.227560043334961
    5. '-a' → logprob: -2.977560043334961
    6. ' all' → logprob: -3.102560043334961
    7. '-c' → logprob: -3.227560043334961
    8. 'the' → logprob: -3.602560043334961
    9. 'cube' → logprob: -4.227560043334961
    10. ' cube' → logprob: -4.352560043334961

Token 84: '-the' (ID: 13037)
  Prédit: '-to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-to' → logprob: -0.6550499200820923
    2. '-' → logprob: -0.7800499200820923
    3. '-c' → logprob: -4.155049800872803
    4. 'to' → logprob: -5.405049800872803
    5. '-the' → logprob: -7.780049800872803
    6. 'rotate' → logprob: -7.905049800872803
    7. 'cube' → logprob: -8.655050277709961
    8. '-or' → logprob: -9.405050277709961
    9. ' -' → logprob: -9.655050277709961
    10. ' to' → logprob: -9.655050277709961

Token 85: '-' (ID: 12)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.09369626641273499
    2. 's' → logprob: -3.218696355819702
    3. 'r' → logprob: -3.968696355819702
    4. 'f' → logprob: -4.343696117401123
    5. '-' → logprob: -5.718696117401123
    6. '6' → logprob: -6.218696117401123
    7. '2' → logprob: -6.468696117401123
    8. 'a' → logprob: -6.718696117401123
    9. '-c' → logprob: -6.718696117401123
    10. 'o' → logprob: -6.843696117401123

Token 86: '24' (ID: 1494)
  Prédit: 'cube'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cube' → logprob: -0.8273434638977051
    2. 'rotate' → logprob: -1.077343463897705
    3. 'possible' → logprob: -2.577343463897705
    4. 'orient' → logprob: -2.827343463897705
    5. 'all' → logprob: -3.452343463897705
    6. 'rot' → logprob: -3.702343463897705
    7. '24' → logprob: -4.202343463897705
    8. 'c' → logprob: -6.327343463897705
    9. 'list' → logprob: -6.327343463897705
    10. 'rotation' → logprob: -6.327343463897705

Token 87: '-or' (ID: 24277)
  Prédit: '_rot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_rot' → logprob: -0.24305874109268188
    2. 'rot' → logprob: -2.118058681488037
    3. ' rotations' → logprob: -3.368058681488037
    4. '_cube' → logprob: -4.243058681488037
    5. '_or' → logprob: -4.368058681488037
    6. 'cube' → logprob: -4.993058681488037
    7. 'orient' → logprob: -5.118058681488037
    8. '#' → logprob: -5.743058681488037
    9. '-c' → logprob: -5.993058681488037
    10. '_faces' → logprob: -6.243058681488037

Token 88: 'ient' (ID: 773)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.0838711261749268
    2. 'ient' → logprob: -1.4588711261749268
    3. 'ientation' → logprob: -1.5838711261749268
    4. 'bit' → logprob: -1.7088711261749268
    5. 'b' → logprob: -3.4588711261749268
    6. 'i' → logprob: -5.333870887756348
    7. 'iginal' → logprob: -6.333870887756348
    8. 'th' → logprob: -6.833870887756348
    9. 'ent' → logprob: -7.583870887756348
    10. 'e' → logprob: -7.583870887756348

Token 89: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.00038360210601240396
    2. 'ation' → logprob: -8.250383377075195
    3. 'a' → logprob: -9.250383377075195
    4. '```' → logprob: -11.625383377075195
    5. 'e' → logprob: -11.875383377075195
    6. '#' → logprob: -12.375383377075195
    7. 'at' → logprob: -13.125383377075195
    8. 's' → logprob: -14.125383377075195
    9. 'ati' → logprob: -14.625383377075195
    10. ' at' → logprob: -14.625383377075195

Token 90: '-of' (ID: 13108)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.019600845873355865
    2. '
' → logprob: -4.644600868225098
    3. '_' → logprob: -6.269600868225098
    4. 'd' → logprob: -6.394600868225098
    5. ' 
' → logprob: -6.894600868225098
    6. '\' → logprob: -6.894600868225098
    7. '```' → logprob: -7.019600868225098
    8. 'cube' → logprob: -7.144600868225098
    9. '

' → logprob: -7.644600868225098
    10. 'import' → logprob: -8.269600868225098

Token 91: '-a' (ID: 8575)
  Prédit: '-a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-a' → logprob: -0.1012827679514885
    2. 'a' → logprob: -2.976282835006714
    3. '-c' → logprob: -3.851282835006714
    4. '-the' → logprob: -4.601282596588135
    5. 'rub' → logprob: -5.601282596588135
    6. '-' → logprob: -5.726282596588135
    7. ' a' → logprob: -5.976282596588135
    8. 'cube' → logprob: -6.476282596588135
    9. '-r' → logprob: -6.726282596588135
    10. 'the' → logprob: -6.851282596588135

Token 92: '-c' (ID: 3452)
  Prédit: 'cube'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cube' → logprob: -0.19776669144630432
    2. 'c' → logprob: -2.3227667808532715
    3. ' cube' → logprob: -3.1977667808532715
    4. 'rub' → logprob: -4.0727667808532715
    5. '-c' → logprob: -4.4477667808532715
    6. '2' → logprob: -5.9477667808532715
    7. ' ' → logprob: -6.1977667808532715
    8. '3' → logprob: -6.1977667808532715
    9. 'dice' → logprob: -6.6977667808532715
    10. '-' → logprob: -6.9477667808532715

Token 93: 'ube' (ID: 4502)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2781538665294647
    2. 'u' → logprob: -2.528153896331787
    3. 'ube' → logprob: -3.278153896331787
    4. 'def' → logprob: -3.403153896331787
    5. '#' → logprob: -4.028153896331787
    6. 'ub' → logprob: -4.153153896331787
    7. ':' → logprob: -4.278153896331787
    8. '=' → logprob: -4.528153896331787
    9. '(' → logprob: -5.278153896331787
    10. ')' → logprob: -5.778153896331787

Token 94: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16115042567253113
    2. '
' → logprob: -2.1611504554748535
    3. 'd' → logprob: -4.1611504554748535
    4. '_' → logprob: -4.6611504554748535
    5. '\' → logprob: -6.2861504554748535
    6. '```' → logprob: -6.4111504554748535
    7. '

' → logprob: -6.6611504554748535
    8. 'import' → logprob: -6.9111504554748535
    9. ' 
' → logprob: -7.4111504554748535
    10. '_
' → logprob: -7.6611504554748535

Token 95: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008116515236906707
    2. '
' → logprob: -7.750811576843262
    3. '```' → logprob: -8.500811576843262
    4. 'cube' → logprob: -9.875811576843262
    5. 'import' → logprob: -10.375811576843262
    6. ' 
' → logprob: -10.875811576843262
    7. '[
' → logprob: -11.250811576843262
    8. 'de' → logprob: -11.500811576843262
    9. 'd' → logprob: -11.875811576843262
    10. '\' → logprob: -11.875811576843262

Token 96: ' rotations' (ID: 141136)
  Prédit: ' rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rotate' → logprob: -0.15696436166763306
    2. ' rotations' → logprob: -2.6569643020629883
    3. ' all' → logprob: -2.7819643020629883
    4. ' generate' → logprob: -5.156964302062988
    5. 'rotate' → logprob: -5.531964302062988
    6. ' cube' → logprob: -6.406964302062988
    7. 'all' → logprob: -7.156964302062988
    8. ' get' → logprob: -7.781964302062988
    9. 'rot' → logprob: -8.406964302062988
    10. ' roll' → logprob: -8.781964302062988

Token 97: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013314292300492525
    2. '(c' → logprob: -6.751331329345703
    3. '(:' → logprob: -10.001331329345703
    4. '(C' → logprob: -10.751331329345703
    5. ' (' → logprob: -11.126331329345703
    6. '(face' → logprob: -11.126331329345703
    7. '((' → logprob: -11.376331329345703
    8. ':' → logprob: -11.626331329345703
    9. '():' → logprob: -12.126331329345703
    10. '_cube' → logprob: -12.251331329345703

Token 98: '):
' (ID: 1883)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.13276711106300354
    2. 'ube' → logprob: -2.3827672004699707
    3. 'ubes' → logprob: -4.632767200469971
    4. ')' → logprob: -5.007767200469971
    5. '):' → logprob: -5.507767200469971
    6. 'ub' → logprob: -5.507767200469971
    7. '(' → logprob: -5.632767200469971
    8. '(u' → logprob: -6.632767200469971
    9. 'o' → logprob: -6.757767200469971
    10. ':' → logprob: -8.757766723632812

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012524133548140526
    2. '    
' → logprob: -5.012524127960205
    3. '    ' → logprob: -6.637524127960205
    4. '[' → logprob: -7.512524127960205
    5. ' 
' → logprob: -8.012524604797363
    6. '\' → logprob: -8.137524604797363
    7. ' return' → logprob: -8.137524604797363
    8. ' ' → logprob: -8.262524604797363
    9. '(' → logprob: -8.387524604797363
    10. ' c' → logprob: -8.637524604797363

Token 100: ' t' (ID: 260)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09249468892812729
    2. ' [
' → logprob: -3.3424947261810303
    3. '[' → logprob: -3.7174947261810303
    4. '[
' → logprob: -3.9674947261810303
    5. ' [' → logprob: -6.092494487762451
    6. ' c' → logprob: -6.342494487762451
    7. '
' → logprob: -6.467494487762451
    8. ' yield' → logprob: -7.092494487762451
    9. ' (' → logprob: -7.217494487762451
    10. '    
' → logprob: -7.342494487762451

Token 101: ',f' (ID: 38733)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04209506884217262
    2. ',' → logprob: -3.917095184326172
    3. '=' → logprob: -4.042095184326172
    4. ' ' → logprob: -6.042095184326172
    5. 'o' → logprob: -7.792095184326172
    6. 'op' → logprob: -8.042095184326172
    7. ',c' → logprob: -9.167095184326172
    8. 'c' → logprob: -9.292095184326172
    9. '=c' → logprob: -9.542095184326172
    10. ' ,' → logprob: -9.542095184326172

Token 102: ',r' (ID: 33654)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.46949806809425354
    2. ',r' → logprob: -1.7194980382919312
    3. ',l' → logprob: -1.8444980382919312
    4. ',b' → logprob: -3.8444981575012207
    5. '=' → logprob: -5.344498157501221
    6. ',f' → logprob: -5.469498157501221
    7. ',c' → logprob: -5.844498157501221
    8. ',o' → logprob: -6.219498157501221
    9. ' =' → logprob: -6.969498157501221
    10. ',a' → logprob: -8.344497680664062

Token 103: ',b' (ID: 17568)
  Prédit: ',f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',f' → logprob: -0.9068898558616638
    2. ',b' → logprob: -1.1568899154663086
    3. ',' → logprob: -2.1568899154663086
    4. ' =' → logprob: -2.7818899154663086
    5. ',l' → logprob: -3.1568899154663086
    6. ',r' → logprob: -3.6568899154663086
    7. '=' → logprob: -4.406889915466309
    8. ',c' → logprob: -4.781889915466309
    9. ',u' → logprob: -5.031889915466309
    10. ',e' → logprob: -5.656889915466309

Token 104: ',l' (ID: 45198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9550144672393799
    2. ',f' → logprob: -1.7050144672393799
    3. '=' → logprob: -1.9550144672393799
    4. ',c' → logprob: -2.08001446723938
    5. ' =' → logprob: -2.33001446723938
    6. ',b' → logprob: -3.20501446723938
    7. ',r' → logprob: -4.080014228820801
    8. ' ,' → logprob: -5.705014228820801
    9. ',l' → logprob: -5.705014228820801
    10. ',e' → logprob: -6.455014228820801

Token 105: ',d' (ID: 26159)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3195044994354248
    2. ' =' → logprob: -1.3195044994354248
    3. ',' → logprob: -5.194504737854004
    4. ',c' → logprob: -7.944504737854004
    5. '=c' → logprob: -8.319504737854004
    6. '=(' → logprob: -10.944504737854004
    7. ' ,' → logprob: -11.444504737854004
    8. 'c' → logprob: -11.444504737854004
    9. ' =(' → logprob: -11.444504737854004
    10. ' ' → logprob: -12.819504737854004

Token 106: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20157189667224884
    2. ' =' → logprob: -1.7015719413757324
    3. ',' → logprob: -9.201571464538574
    4. '=c' → logprob: -9.951571464538574
    5. ',c' → logprob: -12.951571464538574
    6. '=(' → logprob: -13.201571464538574
    7. '=

' → logprob: -13.201571464538574
    8. ' =(' → logprob: -13.701571464538574
    9. '=
' → logprob: -14.076571464538574
    10. 'c' → logprob: -14.951571464538574

Token 107: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.0485910028219223
    2. 'c' → logprob: -3.048590898513794
    3. '	c' → logprob: -13.423590660095215
    4. ' ' → logprob: -13.673590660095215
    5. '   ' → logprob: -14.423590660095215
    6. ' ' → logprob: -15.298590660095215
    7. ')c' → logprob: -16.17359161376953
    8. '  ' → logprob: -17.67359161376953
    9. '(c' → logprob: -18.29859161376953
    10. '*c' → logprob: -19.61109161376953

Token 108: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02037615329027176
    2. '   ' → logprob: -4.645376205444336
    3. '\n' → logprob: -5.770376205444336
    4. '
' → logprob: -6.145376205444336
    5. '' → logprob: -6.395376205444336
    6. '    
' → logprob: -7.020376205444336
    7. '	
' → logprob: -7.395376205444336
    8. '  
' → logprob: -7.645376205444336
    9. 'n' → logprob: -7.895376205444336
    10. ',' → logprob: -8.145376205444336

Token 109: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6517840027809143
    2. '   ' → logprob: -0.7767840027809143
    3. '    
' → logprob: -4.6517839431762695
    4. '  
' → logprob: -6.5267839431762695
    5. ',' → logprob: -6.6517839431762695
    6. '\n' → logprob: -6.6517839431762695
    7. 'yield' → logprob: -7.5267839431762695
    8. 'n' → logprob: -7.6517839431762695
    9. '
' → logprob: -7.7767839431762695
    10. ' 
' → logprob: -7.7767839431762695

Token 110: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31406307220458984
    2. 'yield' → logprob: -1.8140630722045898
    3. 'return' → logprob: -2.43906307220459
    4. ' yield' → logprob: -4.68906307220459
    5. ' return' → logprob: -5.18906307220459
    6. '[
' → logprob: -5.68906307220459
    7. '[' → logprob: -7.93906307220459
    8. '[(' → logprob: -8.18906307220459
    9. '	yield' → logprob: -8.56406307220459
    10. ' yields' → logprob: -10.06406307220459

Token 111: ' The' (ID: 623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053188636898994446
    2. ' return' → logprob: -3.6781885623931885
    3. 'return' → logprob: -4.678188800811768
    4. ' yield' → logprob: -4.803188800811768
    5. 'yield' → logprob: -5.928188800811768
    6. ' rotations' → logprob: -6.928188800811768
    7. '[
' → logprob: -7.053188800811768
    8. ' for' → logprob: -7.428188800811768
    9. ' r' → logprob: -7.928188800811768
    10. 'r' → logprob: -7.928188800811768

Token 112: ' ' (ID: 220)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.16420386731624603
    2. 'return' → logprob: -2.1642038822174072
    3. ' rotations' → logprob: -4.414203643798828
    4. ' result' → logprob: -5.164203643798828
    5. '   ' → logprob: -5.789203643798828
    6. ' yield' → logprob: -6.039203643798828
    7. 'r' → logprob: -6.164203643798828
    8. ' res' → logprob: -6.539203643798828
    9. 'rot' → logprob: -6.539203643798828
    10. ' orientations' → logprob: -6.789203643798828

Token 113: '24' (ID: 1494)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0873948410153389
    2. '[
' → logprob: -2.587394952774048
    3. '[' → logprob: -5.462394714355469
    4. '[(' → logprob: -6.837394714355469
    5. 'rot' → logprob: -6.962394714355469
    6. 'yield' → logprob: -7.212394714355469
    7. 'def' → logprob: -8.087394714355469
    8. 'result' → logprob: -8.212394714355469
    9. '[t' → logprob: -8.587394714355469
    10. ' return' → logprob: -8.837394714355469

Token 114: ' orientations' (ID: 149573)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.0480842590332031
    2. ' orientations' → logprob: -1.2980842590332031
    3. 'return' → logprob: -1.5480842590332031
    4. ' rotations' → logprob: -2.423084259033203
    5. 'rot' → logprob: -3.923084259033203
    6. 'orient' → logprob: -4.173084259033203
    7. ' lines' → logprob: -5.048084259033203
    8. 'def' → logprob: -5.548084259033203
    9. ' ' → logprob: -5.673084259033203
    10. '   ' → logprob: -5.673084259033203

Token 115: ' are' (ID: 553)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012052885256707668
    2. ':' → logprob: -5.1370530128479
    3. '
' → logprob: -5.6370530128479
    4. ':
' → logprob: -7.3870530128479
    5. '    
' → logprob: -7.5120530128479
    6. ' =' → logprob: -8.262052536010742
    7. 'return' → logprob: -8.387052536010742
    8. 'yield' → logprob: -8.762052536010742
    9. ' return' → logprob: -8.887052536010742
    10. '    ' → logprob: -9.887052536010742

Token 116: ' obtained' (ID: 17747)
  Prédit: ' [
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [
' → logprob: -0.7254347205162048
    2. '[
' → logprob: -0.7254347205162048
    3. ' [' → logprob: -3.9754347801208496
    4. '[' → logprob: -4.35043478012085
    5. ' ' → logprob: -9.850434303283691
    6. '   ' → logprob: -11.225434303283691
    7. 'return' → logprob: -11.350434303283691
    8. ' [

' → logprob: -12.475434303283691
    9. ' [
' → logprob: -12.475434303283691
    10. '[]' → logprob: -12.975434303283691

Token 117: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48977896571159363
    2. ' by' → logprob: -1.114778995513916
    3. '    ' → logprob: -3.989778995513916
    4. ' ' → logprob: -4.239778995513916
    5. '    
' → logprob: -4.739778995513916
    6. ' =' → logprob: -5.364778995513916
    7. '[
' → logprob: -6.489778995513916
    8. '  ' → logprob: -6.614778995513916
    9. '  
' → logprob: -6.864778995513916
    10. '[' → logprob: -6.864778995513916

Token 118: ' orient' (ID: 13198)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.08595937490463257
    2. '[' → logprob: -2.5859594345092773
    3. ' [
' → logprob: -5.085959434509277
    4. ' [' → logprob: -7.460959434509277
    5. '[t' → logprob: -9.085959434509277
    6. 'yield' → logprob: -9.960959434509277
    7. '[]' → logprob: -10.710959434509277
    8. 'return' → logprob: -10.835959434509277
    9. '[r' → logprob: -10.960959434509277
    10. '[c' → logprob: -11.210959434509277

Token 119: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.026276845484972
    2. '   ' → logprob: -4.5262770652771
    3. ' c' → logprob: -5.6512770652771
    4. ' ' → logprob: -5.7762770652771
    5. 'c' → logprob: -6.1512770652771
    6. 'a' → logprob: -6.2762770652771
    7. 'i' → logprob: -6.9012770652771
    8. 't' → logprob: -7.1512770652771
    9. ' t' → logprob: -7.7762770652771
    10. 'ating' → logprob: -7.7762770652771

Token 120: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.15294669568538666
    2. 'the' → logprob: -2.527946710586548
    3. 'c' → logprob: -4.152946472167969
    4. 't' → logprob: -4.152946472167969
    5. ' c' → logprob: -4.152946472167969
    6. ' t' → logprob: -4.777946472167969
    7. 'd' → logprob: -6.527946472167969
    8. ' each' → logprob: -6.652946472167969
    9. 'ing' → logprob: -7.152946472167969
    10. 'top' → logprob: -7.777946472167969

Token 121: ' cube' (ID: 46822)
  Prédit: ' top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.7675852179527283
    2. 'cube' → logprob: -1.517585277557373
    3. ' cube' → logprob: -2.017585277557373
    4. 'top' → logprob: -2.142585277557373
    5. 't' → logprob: -3.392585277557373
    6. 'c' → logprob: -4.142585277557373
    7. 'd' → logprob: -5.017585277557373
    8. ' t' → logprob: -5.892585277557373
    9. '[t' → logprob: -6.767585277557373
    10. ' c' → logprob: -7.142585277557373

Token 122: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8770263195037842
    2. ' as' → logprob: -2.127026319503784
    3. 's' → logprob: -2.252026319503784
    4. ' t' → logprob: -2.627026319503784
    5. ' =' → logprob: -2.877026319503784
    6. 'def' → logprob: -3.002026319503784
    7. ' and' → logprob: -3.377026319503784
    8. ' c' → logprob: -4.002026557922363
    9. ' around' → logprob: -4.127026557922363
    10. ' along' → logprob: -4.377026557922363

Token 123: ' ' (ID: 220)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.10721215605735779
    2. '[' → logprob: -2.8572120666503906
    3. ' [
' → logprob: -3.3572120666503906
    4. ' different' → logprob: -5.982212066650391
    5. ' all' → logprob: -5.982212066650391
    6. ' [' → logprob: -6.482212066650391
    7. 'different' → logprob: -7.107212066650391
    8. ' six' → logprob: -7.857212066650391
    9. 'all' → logprob: -8.35721206665039
    10. '[t' → logprob: -8.48221206665039

Token 124: '6' (ID: 21)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.2038402408361435
    2. '[' → logprob: -2.0788402557373047
    3. 'different' → logprob: -3.5788402557373047
    4. 'all' → logprob: -4.578840255737305
    5. '[t' → logprob: -4.828840255737305
    6. 'six' → logprob: -5.328840255737305
    7. '6' → logprob: -5.578840255737305
    8. '[(' → logprob: -6.703840255737305
    9. '[top' → logprob: -7.703840255737305
    10. ' [
' → logprob: -7.953840255737305

Token 125: ' directions' (ID: 24921)
  Prédit: ' ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ways' → logprob: -0.2462446540594101
    2. ' different' → logprob: -1.7462446689605713
    3. 'different' → logprob: -3.7462446689605713
    4. ' directions' → logprob: -4.621244430541992
    5. 'ways' → logprob: -5.621244430541992
    6. 'dire' → logprob: -5.871244430541992
    7. 'possible' → logprob: -6.871244430541992
    8. ' faces' → logprob: -7.121244430541992
    9. 'def' → logprob: -7.621244430541992
    10. ' possible' → logprob: -7.621244430541992

Token 126: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050254229456186295
    2. ' and' → logprob: -3.3002543449401855
    3. ',' → logprob: -4.9252543449401855
    4. '
' → logprob: -6.0502543449401855
    5. '    
' → logprob: -7.0502543449401855
    6. ':' → logprob: -7.9252543449401855
    7. 'and' → logprob: -7.9252543449401855
    8. 'def' → logprob: -9.175253868103027
    9. ' (' → logprob: -9.550253868103027
    10. ',
' → logprob: -9.550253868103027

Token 127: 'top' (ID: 8169)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.1029323861002922
    2. '[(' → logprob: -3.6029324531555176
    3. '   ' → logprob: -3.7279324531555176
    4. ' [
' → logprob: -3.8529324531555176
    5. '[' → logprob: -4.352932453155518
    6. 'return' → logprob: -6.352932453155518
    7. ')' → logprob: -6.602932453155518
    8. ' [' → logprob: -6.602932453155518
    9. ' return' → logprob: -6.727932453155518
    10. '
' → logprob: -6.852932453155518

Token 128: ' face' (ID: 4950)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5387445092201233
    2. '),' → logprob: -1.5387444496154785
    3. ',' → logprob: -2.9137444496154785
    4. '   ' → logprob: -3.0387444496154785
    5. '):' → logprob: -3.5387444496154785
    6. 'and' → logprob: -4.0387444496154785
    7. ')
' → logprob: -4.2887444496154785
    8. ' and' → logprob: -4.4137444496154785
    9. '),
' → logprob: -5.4137444496154785
    10. ' )' → logprob: -5.6637444496154785

Token 129: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6841777563095093
    2. '),' → logprob: -1.0591777563095093
    3. ',' → logprob: -2.684177875518799
    4. ' and' → logprob: -4.309177875518799
    5. 'and' → logprob: -4.559177875518799
    6. '):' → logprob: -4.809177875518799
    7. '   ' → logprob: -5.309177875518799
    8. ')
' → logprob: -5.309177875518799
    9. '=' → logprob: -5.309177875518799
    10. ' )' → logprob: -5.434177875518799

Token 130: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022215448319911957
    2. '    
' → logprob: -5.397215366363525
    3. '
' → logprob: -5.772215366363525
    4. ' [
' → logprob: -6.147215366363525
    5. '[
' → logprob: -6.147215366363525
    6. '    ' → logprob: -6.522215366363525
    7. ' rotations' → logprob: -6.647215366363525
    8. ' 
' → logprob: -6.897215366363525
    9. ' r' → logprob: -7.022215366363525
    10. ' return' → logprob: -7.522215366363525

Token 131: ' rotating' (ID: 65441)
  Prédit: ' then'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' then' → logprob: -0.15030530095100403
    2. 'then' → logprob: -2.5253052711486816
    3. ' rotating' → logprob: -3.5253052711486816
    4. '   ' → logprob: -4.275305271148682
    5. 'rot' → logprob: -5.275305271148682
    6. '#' → logprob: -5.775305271148682
    7. ' ' → logprob: -6.275305271148682
    8. 'return' → logprob: -6.275305271148682
    9. '[
' → logprob: -6.775305271148682
    10. ' #' → logprob: -7.400305271148682

Token 132: ' it' (ID: 480)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3370082974433899
    2. ' it' → logprob: -2.087008237838745
    3. 'the' → logprob: -2.087008237838745
    4. 'it' → logprob: -4.587008476257324
    5. ' each' → logprob: -4.712008476257324
    6. ' through' → logprob: -5.587008476257324
    7. ' around' → logprob: -5.712008476257324
    8. ' in' → logprob: -6.337008476257324
    9. 't' → logprob: -6.337008476257324
    10. 'd' → logprob: -6.462008476257324

Token 133: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5090217590332031
    2. ',' → logprob: -2.384021759033203
    3. ':' → logprob: -2.384021759033203
    4. ' ' → logprob: -3.259021759033203
    5. 'def' → logprob: -3.384021759033203
    6. ',
' → logprob: -4.134021759033203
    7. ':
' → logprob: -4.509021759033203
    8. 's' → logprob: -4.759021759033203
    9. ' around' → logprob: -4.759021759033203
    10. 'c' → logprob: -4.884021759033203

Token 134: '4' (ID: 19)
  Prédit: 'around'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'around' → logprob: -0.35389241576194763
    2. 'through' → logprob: -2.2288923263549805
    3. 'in' → logprob: -2.3538923263549805
    4. '4' → logprob: -3.2288923263549805
    5. 'four' → logprob: -4.2288923263549805
    6. '3' → logprob: -4.9788923263549805
    7. 'three' → logprob: -4.9788923263549805
    8. ' ' → logprob: -5.4788923263549805
    9. 'over' → logprob: -5.9788923263549805
    10. 'to' → logprob: -6.1038923263549805

Token 135: ' times' (ID: 4238)
  Prédit: ' times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.007654900196939707
    2. 'times' → logprob: -5.007654666900635
    3. ' ' → logprob: -8.007655143737793
    4. ')' → logprob: -9.257655143737793
    5. ' more' → logprob: -9.257655143737793
    6. ' directions' → logprob: -9.632655143737793
    7. ' different' → logprob: -9.882655143737793
    8. '<|end|>' → logprob: -9.882655143737793
    9. ' ways' → logprob: -10.132655143737793
    10. ' lines' → logprob: -10.507655143737793

Token 136: ' around' (ID: 2846)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027906285598874092
    2. '    
' → logprob: -4.15290641784668
    3. '
' → logprob: -5.77790641784668
    4. '\n' → logprob: -5.77790641784668
    5. ',' → logprob: -6.02790641784668
    6. '  
' → logprob: -6.65290641784668
    7. ':' → logprob: -7.77790641784668
    8. '   
' → logprob: -8.02790641784668
    9. '\' → logprob: -8.27790641784668
    10. ' ' → logprob: -8.40290641784668

Token 137: ' vertical' (ID: 17679)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3695527911186218
    2. 'the' → logprob: -1.2445528507232666
    3. 't' → logprob: -4.7445526123046875
    4. ''' → logprob: -5.1195526123046875
    5. 'd' → logprob: -6.7445526123046875
    6. ' each' → logprob: -6.7445526123046875
    7. '`' → logprob: -7.6195526123046875
    8. 'f' → logprob: -7.8695526123046875
    9. 'each' → logprob: -7.8695526123046875
    10. ' t' → logprob: -7.9945526123046875

Token 138: ' axis' (ID: 16300)
  Prédit: 'axis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'axis' → logprob: -0.22827979922294617
    2. ' axis' → logprob: -1.6032798290252686
    3. '-axis' → logprob: -6.7282795906066895
    4. 'axes' → logprob: -7.3532795906066895
    5. '   ' → logprob: -8.353280067443848
    6. ' axes' → logprob: -8.478280067443848
    7. '_axis' → logprob: -8.978280067443848
    8. 'ax' → logprob: -9.353280067443848
    9. ',' → logprob: -9.478280067443848
    10. ')' → logprob: -9.978280067443848

Token 139: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6521162986755371
    2. '
' → logprob: -0.9021162986755371
    3. '    
' → logprob: -2.777116298675537
    4. '  
' → logprob: -5.277116298675537
    5. '\n' → logprob: -6.027116298675537
    6. '   
' → logprob: -6.902116298675537
    7. '\' → logprob: -7.652116298675537
    8. ',' → logprob: -7.652116298675537
    9. ' 
' → logprob: -7.777116298675537
    10. 'newline' → logprob: -8.902116775512695

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049382053315639496
    2. '    
' → logprob: -3.924381971359253
    3. '
' → logprob: -4.799382209777832
    4. ' result' → logprob: -5.549382209777832
    5. ' orientations' → logprob: -5.549382209777832
    6. 'result' → logprob: -6.174382209777832
    7. ' 
' → logprob: -6.674382209777832
    8. 'r' → logprob: -6.799382209777832
    9. ' for' → logprob: -7.174382209777832
    10. ' results' → logprob: -7.299382209777832

Token 141: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3574056327342987
    2. 'return' → logprob: -2.357405662536621
    3. 'for' → logprob: -3.107405662536621
    4. 'or' → logprob: -3.357405662536621
    5. 'orient' → logprob: -3.482405662536621
    6. 'rot' → logprob: -3.607405662536621
    7. ' orientations' → logprob: -3.857405662536621
    8. ' for' → logprob: -4.482405662536621
    9. ' return' → logprob: -4.482405662536621
    10. 'result' → logprob: -4.732405662536621

Token 142: ' roll' (ID: 8465)
  Prédit: ' rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rotate' → logprob: -0.33781808614730835
    2. 'rotate' → logprob: -2.087818145751953
    3. ' roll' → logprob: -2.337818145751953
    4. ' rot' → logprob: -3.837818145751953
    5. 'roll' → logprob: -4.087818145751953
    6. 'rot' → logprob: -4.212818145751953
    7. ' turn' → logprob: -5.712818145751953
    8. 'orient' → logprob: -6.212818145751953
    9. ' orient' → logprob: -6.837818145751953
    10. 'turn' → logprob: -7.212818145751953

Token 143: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.024527715519070625
    2. '():' → logprob: -4.774527549743652
    3. '(face' → logprob: -4.774527549743652
    4. '(x' → logprob: -6.399527549743652
    5. '(' → logprob: -6.899527549743652
    6. '(s' → logprob: -7.149527549743652
    7. '(a' → logprob: -7.274527549743652
    8. '((' → logprob: -7.524527549743652
    9. '(t' → logprob: -7.774527549743652
    10. '(axis' → logprob: -8.274527549743652

Token 144: 'ube' (ID: 4502)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0057958317920565605
    2. '):
' → logprob: -5.505795955657959
    3. ')' → logprob: -6.755795955657959
    4. ' ):' → logprob: -8.3807954788208
    5. ',' → logprob: -8.6307954788208
    6. '(c' → logprob: -9.1307954788208
    7. ',c' → logprob: -11.5057954788208
    8. '   ' → logprob: -11.7557954788208
    9. '):
' → logprob: -12.3807954788208
    10. '(' → logprob: -13.0057954788208

Token 145: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006917838007211685
    2. '):
' → logprob: -5.006917953491211
    3. ')' → logprob: -8.756917953491211
    4. '   ' → logprob: -10.756917953491211
    5. ' ):' → logprob: -11.506917953491211
    6. '):
' → logprob: -12.506917953491211
    7. ',' → logprob: -12.506917953491211
    8. '(c' → logprob: -13.256917953491211
    9. '  ' → logprob: -14.131917953491211
    10. ' ' → logprob: -14.256917953491211

Token 146: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3478165864944458
    2. '
' → logprob: -1.8478165864944458
    3. ' return' → logprob: -3.4728164672851562
    4. 't' → logprob: -3.5978164672851562
    5. ' f' → logprob: -4.222816467285156
    6. ' t' → logprob: -4.222816467285156
    7. 'return' → logprob: -4.347816467285156
    8. 'f' → logprob: -4.597816467285156
    9. '    
' → logprob: -5.472816467285156
    10. 'c' → logprob: -5.597816467285156

Token 147: ' rotate' (ID: 31987)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.0371288061141968
    2. '   ' → logprob: -1.1621288061141968
    3. ' t' → logprob: -1.4121288061141968
    4. 't' → logprob: -3.1621289253234863
    5. ' r' → logprob: -4.662128925323486
    6. ' c' → logprob: -4.662128925323486
    7. 'return' → logprob: -4.912128925323486
    8. ' f' → logprob: -5.412128925323486
    9. ' d' → logprob: -6.037128925323486
    10. '
' → logprob: -6.162128925323486

Token 148: ' cube' (ID: 46822)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.850577712059021
    2. '(t' → logprob: -2.3505778312683105
    3. '(lambda' → logprob: -2.3505778312683105
    4. 't' → logprob: -2.7255778312683105
    5. ' (' → logprob: -2.7255778312683105
    6. '(
' → logprob: -3.1005778312683105
    7. 'c' → logprob: -3.1005778312683105
    8. 'cube' → logprob: -3.2255778312683105
    9. ' cube' → logprob: -3.4755778312683105
    10. '(' → logprob: -4.1005778312683105

Token 149: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.5063315629959106
    2. '(' → logprob: -1.7563315629959106
    3. '(c' → logprob: -2.131331443786621
    4. '[' → logprob: -2.506331443786621
    5. '   ' → logprob: -2.756331443786621
    6. ')' → logprob: -3.131331443786621
    7. '):' → logprob: -3.256331443786621
    8. ' =' → logprob: -3.506331443786621
    9. ',' → logprob: -3.631331443786621
    10. '
' → logprob: -3.631331443786621

Token 150: ' get' (ID: 717)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.8636552095413208
    2. 'front' → logprob: -1.2386552095413208
    3. ' the' → logprob: -1.7386552095413208
    4. 'left' → logprob: -3.6136550903320312
    5. ' front' → logprob: -3.8636550903320312
    6. '(front' → logprob: -4.238655090332031
    7. 'top' → logprob: -4.988655090332031
    8. 'r' → logprob: -5.113655090332031
    9. '[' → logprob: -5.238655090332031
    10. 'f' → logprob: -5.863655090332031

Token 151: ' new' (ID: 620)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -2.0488364696502686
    2. ' (' → logprob: -2.0488364696502686
    3. ' cube' → logprob: -2.2988364696502686
    4. ' front' → logprob: -2.4238364696502686
    5. 'front' → logprob: -2.5488364696502686
    6. ' f' → logprob: -2.6738364696502686
    7. 'cube' → logprob: -2.7988364696502686
    8. ' the' → logprob: -2.9238364696502686
    9. '(l' → logprob: -3.0488364696502686
    10. '(c' → logprob: -3.2988364696502686

Token 152: ' top' (ID: 2344)
  Prédit: ' cube'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cube' → logprob: -1.0477888584136963
    2. 'cube' → logprob: -1.4227888584136963
    3. ' (' → logprob: -1.9227888584136963
    4. '(' → logprob: -1.9227888584136963
    5. ' top' → logprob: -3.5477888584136963
    6. 'c' → logprob: -4.047788619995117
    7. 'top' → logprob: -4.172788619995117
    8. '_cube' → logprob: -4.297788619995117
    9. ' faces' → logprob: -5.422788619995117
    10. ' face' → logprob: -5.547788619995117

Token 153: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.44878649711608887
    2. ':' → logprob: -1.8237864971160889
    3. '):' → logprob: -2.323786497116089
    4. '   ' → logprob: -3.198786497116089
    5. '=' → logprob: -4.323786735534668
    6. ' =' → logprob: -4.573786735534668
    7. ')' → logprob: -4.698786735534668
    8. ' and' → logprob: -5.198786735534668
    9. '):
' → logprob: -5.323786735534668
    10. ':
' → logprob: -5.573786735534668

Token 154: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07630626857280731
    2. ' 
' → logprob: -3.4513063430786133
    3. '   ' → logprob: -4.326306343078613
    4. '  
' → logprob: -5.201306343078613
    5. '    
' → logprob: -5.701306343078613
    6. 'r' → logprob: -6.076306343078613
    7. 't' → logprob: -6.201306343078613
    8. '' → logprob: -6.451306343078613
    9. 'return' → logprob: -6.576306343078613
    10. 'n' → logprob: -6.701306343078613

Token 155: ' t' (ID: 260)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9029431343078613
    2. 'return' → logprob: -1.4029431343078613
    3. '   ' → logprob: -1.6529431343078613
    4. 't' (adapté à ' t') → logprob: -2.5279431343078613
    5. ' t' → logprob: -3.2779431343078613
    6. 'd' → logprob: -4.527943134307861
    7. 'f' → logprob: -4.527943134307861
    8. 'c' → logprob: -4.902943134307861
    9. ' f' → logprob: -5.902943134307861
    10. ' d' → logprob: -6.152943134307861

Token 156: ',f' (ID: 38733)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05874204263091087
    2. ',f' → logprob: -3.433742046356201
    3. ',l' → logprob: -4.683742046356201
    4. ',d' → logprob: -4.933742046356201
    5. ',b' → logprob: -5.308742046356201
    6. ',r' → logprob: -6.183742046356201
    7. ',c' → logprob: -7.183742046356201
    8. '=' → logprob: -8.808741569519043
    9. ' ,' → logprob: -8.933741569519043
    10. ',n' → logprob: -9.433741569519043

Token 157: ',r' (ID: 33654)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19791565835475922
    2. ',l' → logprob: -2.322915554046631
    3. ',r' → logprob: -3.322915554046631
    4. ',b' → logprob: -3.447915554046631
    5. ',d' → logprob: -4.822915554046631
    6. ',f' → logprob: -5.822915554046631
    7. ',c' → logprob: -6.697915554046631
    8. '=' → logprob: -7.697915554046631
    9. ' ,' → logprob: -8.822916030883789
    10. 'l' → logprob: -9.197916030883789

Token 158: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.47805407643318176
    2. ',' → logprob: -0.9780540466308594
    3. ',l' → logprob: -5.728054046630859
    4. ',d' → logprob: -7.978054046630859
    5. 'b' → logprob: -8.35305404663086
    6. ' ,' → logprob: -9.72805404663086
    7. ',c' → logprob: -10.35305404663086
    8. ',f' → logprob: -11.35305404663086
    9. ',r' → logprob: -12.22805404663086
    10. ',a' → logprob: -12.60305404663086

Token 159: ',l' (ID: 45198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12799254059791565
    2. ',l' → logprob: -2.127992630004883
    3. '=' → logprob: -7.502992630004883
    4. ',c' → logprob: -8.502992630004883
    5. ' ,' → logprob: -9.627992630004883
    6. 'l' → logprob: -9.752992630004883
    7. ',f' → logprob: -10.252992630004883
    8. ',d' → logprob: -10.377992630004883
    9. ',r' → logprob: -10.502992630004883
    10. ',b' → logprob: -10.752992630004883

Token 160: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1358436644077301
    2. '=' → logprob: -2.2608437538146973
    3. ',c' → logprob: -4.510843753814697
    4. ',l' → logprob: -5.135843753814697
    5. ',d' → logprob: -6.135843753814697
    6. ' =' → logprob: -6.135843753814697
    7. ',b' → logprob: -6.760843753814697
    8. ',f' → logprob: -9.135843276977539
    9. ',r' → logprob: -9.885843276977539
    10. ' ,' → logprob: -10.135843276977539

Token 161: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.054003745317459106
    2. ' =' → logprob: -3.4290037155151367
    3. ',' → logprob: -3.9290037155151367
    4. ',c' → logprob: -8.804003715515137
    5. ',d' → logprob: -9.179003715515137
    6. '=
' → logprob: -9.429003715515137
    7. '=d' → logprob: -10.804003715515137
    8. '=c' → logprob: -10.929003715515137
    9. ',l' → logprob: -11.054003715515137
    10. 'd' → logprob: -11.304003715515137

Token 162: ' cube' (ID: 46822)
  Prédit: ' cube'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cube' → logprob: -0.3869372010231018
    2. 'cube' → logprob: -1.136937141418457
    3. 'c' → logprob: -10.011937141418457
    4. 'cub' → logprob: -12.011937141418457
    5. ' c' → logprob: -12.136937141418457
    6. ' ' → logprob: -13.136937141418457
    7. ' cub' → logprob: -13.136937141418457
    8. ' cubes' → logprob: -13.511937141418457
    9. '_cube' → logprob: -13.511937141418457
    10. '	c' → logprob: -14.261937141418457

Token 163: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2452632188796997
    2. 'd' → logprob: -1.2452632188796997
    3. '
' → logprob: -1.4952632188796997
    4. '   ' → logprob: -2.49526309967041
    5. 't' → logprob: -3.74526309967041
    6. ' 
' → logprob: -4.24526309967041
    7. '\' → logprob: -4.24526309967041
    8. ',
' → logprob: -4.37026309967041
    9. '\n' → logprob: -4.87026309967041
    10. 'f' → logprob: -4.99526309967041

Token 164: '       ' (ID: 309)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2986573278903961
    2. 'f' → logprob: -2.1736574172973633
    3. 'return' → logprob: -2.9236574172973633
    4. ' return' → logprob: -3.6736574172973633
    5. '   ' → logprob: -3.6736574172973633
    6. ' d' → logprob: -3.9236574172973633
    7. ' (' → logprob: -5.173657417297363
    8. ' f' → logprob: -5.548657417297363
    9. 'b' → logprob: -5.923657417297363
    10. '(' → logprob: -6.048657417297363

Token 165: ' return' (ID: 622)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.48198074102401733
    2. 'f' → logprob: -1.356980800628662
    3. 't' → logprob: -2.481980800628662
    4. 'return' (adapté à ' return') → logprob: -3.856980800628662
    5. 'l' → logprob: -5.106980800628662
    6. ' d' → logprob: -5.856980800628662
    7. ' return' → logprob: -6.106980800628662
    8. '   ' → logprob: -6.106980800628662
    9. 'b' → logprob: -6.231980800628662
    10. ' f' → logprob: -6.356980800628662

Token 166: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.5359185338020325
    2. '(f' → logprob: -1.0359184741973877
    3. 'f' → logprob: -3.7859184741973877
    4. 'd' → logprob: -4.410918712615967
    5. '(b' → logprob: -4.535918712615967
    6. '(l' → logprob: -4.535918712615967
    7. '(' → logprob: -6.285918712615967
    8. 'b' → logprob: -6.785918712615967
    9. '(t' → logprob: -8.410918235778809
    10. 'l' → logprob: -8.535918235778809

Token 167: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.005392057355493307
    2. 'b' → logprob: -5.255392074584961
    3. ' f' → logprob: -9.130392074584961
    4. '   ' → logprob: -10.755392074584961
    5. 'd' → logprob: -11.255392074584961
    6. '
' → logprob: -12.505392074584961
    7. 'l' → logprob: -12.505392074584961
    8. '	f' → logprob: -13.005392074584961
    9. ' ' → logprob: -13.255392074584961
    10. ' b' → logprob: -13.880392074584961

Token 168: ',' (ID: 11)
  Prédit: ',d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.10697074234485626
    2. ',' → logprob: -2.35697078704834
    3. ',t' → logprob: -5.85697078704834
    4. ',b' → logprob: -6.23197078704834
    5. 'd' → logprob: -6.48197078704834
    6. ' ,' → logprob: -8.85697078704834
    7. ',l' → logprob: -9.23197078704834
    8. 't' → logprob: -10.35697078704834
    9. ',r' → logprob: -10.60697078704834
    10. '	d' → logprob: -11.10697078704834

Token 169: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0009930337546393275
    2. ' d' → logprob: -7.000993251800537
    3. 'b' → logprob: -9.500992774963379
    4. '	d' → logprob: -12.250992774963379
    5. '   ' → logprob: -14.250992774963379
    6. '_d' → logprob: -15.000992774963379
    7. '6' → logprob: -15.625992774963379
    8. ',d' → logprob: -16.000993728637695
    9. ')d' → logprob: -16.000993728637695
    10. ' b' → logprob: -16.500993728637695

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1452634185552597
    2. ',b' → logprob: -2.020263433456421
    3. ' ,' → logprob: -7.020263195037842
    4. ',r' → logprob: -7.020263195037842
    5. ',l' → logprob: -7.770263195037842
    6. 'b' → logprob: -8.520263671875
    7. ',t' → logprob: -8.895263671875
    8. ',s' → logprob: -11.270263671875
    9. ',f' → logprob: -11.770263671875
    10. ',d' → logprob: -12.145263671875

Token 171: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00016837897419463843
    2. ' r' → logprob: -8.750168800354004
    3. '	r' → logprob: -12.250168800354004
    4. ' ' → logprob: -12.625168800354004
    5. '   ' → logprob: -13.750168800354004
    6. ',r' → logprob: -15.625168800354004
    7. '
' → logprob: -15.625168800354004
    8. '  ' → logprob: -16.250167846679688
    9. ''r' → logprob: -16.500167846679688
    10. '    ' → logprob: -16.750167846679688

Token 172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015069954097270966
    2. ',b' → logprob: -4.265069961547852
    3. ',t' → logprob: -7.140069961547852
    4. ' ,' → logprob: -9.890069961547852
    5. ',l' → logprob: -10.140069961547852
    6. 'b' → logprob: -10.890069961547852
    7. ',f' → logprob: -13.390069961547852
    8. 't' → logprob: -13.390069961547852
    9. ',d' → logprob: -15.015069961547852
    10. ',a' → logprob: -15.265069961547852

Token 173: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00011760921915993094
    2. ' t' → logprob: -9.250117301940918
    3. 'l' → logprob: -11.250117301940918
    4. 'b' → logprob: -12.250117301940918
    5. 'top' → logprob: -13.875117301940918
    6. '	t' → logprob: -14.000117301940918
    7. '(t' → logprob: -14.250117301940918
    8. '   ' → logprob: -15.125117301940918
    9. '`t' → logprob: -15.250117301940918
    10. ' ' → logprob: -15.750117301940918

Token 174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00041398804751224816
    2. ' ,' → logprob: -8.50041389465332
    3. ',l' → logprob: -8.50041389465332
    4. ',b' → logprob: -12.25041389465332
    5. ',s' → logprob: -14.87541389465332
    6. 'l' → logprob: -15.00041389465332
    7. ')' → logprob: -15.12541389465332
    8. ',d' → logprob: -15.37541389465332
    9. ',ll' → logprob: -15.37541389465332
    10. ',
' → logprob: -15.50041389465332

Token 175: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.004623203072696924
    2. ' l' → logprob: -5.3796234130859375
    3. 'b' → logprob: -13.254623413085938
    4. ' ' → logprob: -14.504623413085938
    5. '   ' → logprob: -15.254623413085938
    6. '	l' → logprob: -15.504623413085938
    7. '    ' → logprob: -16.004623413085938
    8. '  ' → logprob: -16.629623413085938
    9. ',l' → logprob: -17.254623413085938
    10. ' b' → logprob: -17.379623413085938

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004143456753809005
    2. ',b' → logprob: -8.37541389465332
    3. ',d' → logprob: -9.12541389465332
    4. ' ,' → logprob: -9.62541389465332
    5. ',f' → logprob: -12.50041389465332
    6. 'b' → logprob: -13.62541389465332
    7. ')' → logprob: -13.75041389465332
    8. ',
' → logprob: -14.37541389465332
    9. ',c' → logprob: -14.87541389465332
    10. ',s' → logprob: -14.87541389465332

Token 177: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -9.014684110297821e-06
    2. ' b' → logprob: -11.625008583068848
    3. '	b' → logprob: -18.250009536743164
    4. 'f' → logprob: -18.500009536743164
    5. '   ' → logprob: -20.125009536743164
    6. ')b' → logprob: -20.625009536743164
    7. '
' → logprob: -20.750009536743164
    8. 'l' → logprob: -21.500009536743164
    9. '    ' → logprob: -21.875009536743164
    10. ')' → logprob: -22.125009536743164

Token 178: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012654215970542282
    2. ' )' → logprob: -9.000126838684082
    3. ')
' → logprob: -12.750126838684082
    4. ')

' → logprob: -15.875126838684082
    5. '   ' → logprob: -17.000125885009766
    6. ')d' → logprob: -17.375125885009766
    7. ' ' → logprob: -17.625125885009766
    8. ')
' → logprob: -18.250125885009766
    9. ')}' → logprob: -18.500125885009766
    10. '),' → logprob: -18.750125885009766

Token 179: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6314143538475037
    2. '<|end|>' → logprob: -1.3814144134521484
    3. '   ' → logprob: -1.7564144134521484
    4. ')' → logprob: -3.3814144134521484
    5. 'def' → logprob: -5.631414413452148
    6. ' ' → logprob: -6.256414413452148
    7. '    
' → logprob: -6.381414413452148
    8. '<|end|>' → logprob: -7.006414413452148
    9. '  
' → logprob: -7.756414413452148
    10. ' 
' → logprob: -7.881414413452148

Token 180: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3036871552467346
    2. 'def' (adapté à ' def') → logprob: -1.4286870956420898
    3. ' 
' → logprob: -5.30368709564209
    4. '    
' → logprob: -5.42868709564209
    5. '  
' → logprob: -5.42868709564209
    6. '   ' → logprob: -6.05368709564209
    7. ' def' → logprob: -6.05368709564209
    8. ' ' → logprob: -6.80368709564209
    9. ')' → logprob: -7.42868709564209
    10. '<|end|>' → logprob: -7.55368709564209

Token 181: ' turn' (ID: 3716)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.059451520442962646
    2. ' turn' → logprob: -3.8094515800476074
    3. 'pitch' → logprob: -3.9344515800476074
    4. 'spin' → logprob: -4.309451580047607
    5. 'pivot' → logprob: -6.309451580047607
    6. ' spin' → logprob: -8.43445110321045
    7. 'rotate' → logprob: -8.43445110321045
    8. ' pitch' → logprob: -9.18445110321045
    9. 'yaw' → logprob: -9.55945110321045
    10. 'pit' → logprob: -10.68445110321045

Token 182: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.000429596402682364
    2. '(' → logprob: -8.375429153442383
    3. ' (' → logprob: -8.625429153442383
    4. 'left' → logprob: -12.250429153442383
    5. '(clock' → logprob: -12.875429153442383
    6. '90' → logprob: -13.000429153442383
    7. '(C' → logprob: -13.125429153442383
    8. '(
' → logprob: -13.750429153442383
    9. '(left' → logprob: -13.750429153442383
    10. '_left' → logprob: -14.250429153442383

Token 183: 'ube' (ID: 4502)
  Prédit: 'ube'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ube' → logprob: -0.1888749748468399
    2. '(c' → logprob: -1.8138749599456787
    3. 'u' → logprob: -5.563875198364258
    4. '(u' → logprob: -5.688875198364258
    5. 'ub' → logprob: -7.063875198364258
    6. '(' → logprob: -7.063875198364258
    7. '(b' → logprob: -10.813875198364258
    8. 'c' → logprob: -11.063875198364258
    9. 'ubes' → logprob: -11.063875198364258
    10. ' (' → logprob: -11.313875198364258

Token 184: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00039158877916634083
    2. '(c' → logprob: -8.625391960144043
    3. ' ):' → logprob: -8.750391960144043
    4. ')' → logprob: -10.500391960144043
    5. '):
' → logprob: -10.875391960144043
    6. '):(' → logprob: -13.500391960144043
    7. '   ' → logprob: -14.000391960144043
    8. ':' → logprob: -14.000391960144043
    9. '):
' → logprob: -14.125391960144043
    10. '):

' → logprob: -14.125391960144043

Token 185: ' #' (ID: 1069)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6537313461303711
    2. '(t' → logprob: -1.528731346130371
    3. ' t' → logprob: -2.278731346130371
    4. '   ' → logprob: -2.903731346130371
    5. 'c' → logprob: -3.653731346130371
    6. '	t' → logprob: -3.778731346130371
    7. '(c' → logprob: -4.028731346130371
    8. ' c' → logprob: -4.653731346130371
    9. '(' → logprob: -4.903731346130371
    10. '	c' → logprob: -5.028731346130371

Token 186: ' rotate' (ID: 31987)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.47916799783706665
    2. ' t' → logprob: -0.9791679978370667
    3. '   ' → logprob: -5.479167938232422
    4. '(t' → logprob: -7.979167938232422
    5. ' (' → logprob: -8.729167938232422
    6. ' ' → logprob: -9.354167938232422
    7. ' c' → logprob: -9.479167938232422
    8. 'c' → logprob: -10.104167938232422
    9. '	t' → logprob: -10.354167938232422
    10. 'def' → logprob: -10.479167938232422

Token 187: ' cube' (ID: 46822)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.05514912307262421
    2. 'cube' → logprob: -3.5551490783691406
    3. ' cube' → logprob: -4.430149078369141
    4. ' (' → logprob: -4.555149078369141
    5. 'the' → logprob: -7.055149078369141
    6. ' the' → logprob: -7.680149078369141
    7. 'left' → logprob: -8.43014907836914
    8. '(' → logprob: -8.55514907836914
    9. ' ' → logprob: -8.68014907836914
    10. ' clockwise' → logprob: -8.68014907836914

Token 188: ' ' (ID: 220)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.1299484223127365
    2. ' clockwise' → logprob: -2.629948377609253
    3. ' to' → logprob: -4.379948616027832
    4. ' ' → logprob: -4.504948616027832
    5. ' around' → logprob: -4.629948616027832
    6. '90' → logprob: -5.504948616027832
    7. 'to' → logprob: -5.629948616027832
    8. ' (' → logprob: -5.754948616027832
    9. '(clock' → logprob: -6.504948616027832
    10. '(' → logprob: -6.504948616027832

Token 189: '90' (ID: 2744)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.7329109311103821
    2. '(c' → logprob: -0.9829109311103821
    3. 'to' → logprob: -2.6079108715057373
    4. '(' → logprob: -3.1079108715057373
    5. '(f' → logprob: -4.857911109924316
    6. ' (' → logprob: -5.607911109924316
    7. '90' → logprob: -5.732911109924316
    8. 't' → logprob: -6.107911109924316
    9. 'around' → logprob: -6.107911109924316
    10. ' ' → logprob: -6.482911109924316

Token 190: '°' (ID: 6793)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.19178937375545502
    2. ')' → logprob: -1.9417893886566162
    3. ' (' → logprob: -4.066789150238037
    4. '(' → logprob: -5.316789150238037
    5. ' clockwise' → logprob: -5.941789150238037
    6. ' )' → logprob: -6.566789150238037
    7. '(clock' → logprob: -7.316789150238037
    8. ' ' → logprob: -7.566789150238037
    9. ',' → logprob: -7.816789150238037
    10. '(counter' → logprob: -7.941789150238037

Token 191: ' around' (ID: 2846)
  Prédit: ' clockwise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clockwise' → logprob: -0.05642839893698692
    2. 'clock' → logprob: -3.3064284324645996
    3. '(c' → logprob: -4.9314284324646
    4. ' around' → logprob: -5.0564284324646
    5. '(clock' → logprob: -6.0564284324646
    6. 'around' → logprob: -7.9314284324646
    7. '_clock' → logprob: -7.9314284324646
    8. ' to' → logprob: -7.9314284324646
    9. ' cube' → logprob: -8.681427955627441
    10. 'cw' → logprob: -8.806427955627441

Token 192: ' vertical' (ID: 17679)
  Prédit: ' vertical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vertical' → logprob: -0.7818480730056763
    2. 'vertical' → logprob: -1.0318480730056763
    3. 'c' → logprob: -2.7818479537963867
    4. 'd' → logprob: -3.1568479537963867
    5. 't' → logprob: -3.2818479537963867
    6. '(' → logprob: -4.656847953796387
    7. ' (' → logprob: -4.781847953796387
    8. '(c' → logprob: -5.156847953796387
    9. ' t' → logprob: -5.906847953796387
    10. ' the' → logprob: -6.156847953796387

Token 193: ' axis' (ID: 16300)
  Prédit: 'axis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'axis' → logprob: -0.12734602391719818
    2. ' axis' → logprob: -2.1273460388183594
    3. '_axis' → logprob: -8.87734603881836
    4. '   ' → logprob: -9.37734603881836
    5. '-axis' → logprob: -9.87734603881836
    6. 'c' → logprob: -10.25234603881836
    7. ' (' → logprob: -10.62734603881836
    8. ' ' → logprob: -10.75234603881836
    9. '(' → logprob: -10.75234603881836
    10. '(axis' → logprob: -11.00234603881836

Token 194: '
' (ID: 198)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.015961168333888054
    2. '   ' → logprob: -4.765961170196533
    3. '       ' → logprob: -5.890961170196533
    4. ':' → logprob: -6.015961170196533
    5. '(' → logprob: -6.640961170196533
    6. ' (' → logprob: -7.515961170196533
    7. '(
' → logprob: -9.640960693359375
    8. '(t' → logprob: -9.890960693359375
    9. ',' → logprob: -10.765960693359375
    10. '(space' → logprob: -10.765960693359375

Token 195: '       ' (ID: 309)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.3888658881187439
    2. '(t' → logprob: -2.0138659477233887
    3. '   ' → logprob: -2.1388659477233887
    4. '       ' → logprob: -2.7638659477233887
    5. '(' → logprob: -6.263865947723389
    6. 't' → logprob: -6.388865947723389
    7. ' (' → logprob: -6.638865947723389
    8. '
' → logprob: -7.138865947723389
    9. '(
' → logprob: -7.763865947723389
    10. '(n' → logprob: -8.26386547088623

Token 196: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.011180450208485126
    2. ' t' → logprob: -4.761180400848389
    3. '(t' → logprob: -6.011180400848389
    4. ' (' → logprob: -10.261180877685547
    5. '(' → logprob: -10.511180877685547
    6. '   ' → logprob: -10.886180877685547
    7. 'return' → logprob: -11.261180877685547
    8. '	t' → logprob: -11.636180877685547
    9. '       ' → logprob: -12.761180877685547
    10. ' ' → logprob: -13.261180877685547

Token 197: ',f' (ID: 38733)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15124106407165527
    2. ',f' → logprob: -2.0262410640716553
    3. ',c' → logprob: -4.776241302490234
    4. ' ,' → logprob: -9.401241302490234
    5. ',t' → logprob: -11.401241302490234
    6. ',(' → logprob: -13.901241302490234
    7. ',F' → logprob: -13.901241302490234
    8. ',p' → logprob: -14.401241302490234
    9. '	' → logprob: -14.526241302490234
    10. ',l' → logprob: -14.776241302490234

Token 198: ',r' (ID: 33654)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1101607158780098
    2. ',c' → logprob: -2.6101608276367188
    3. ',r' → logprob: -3.4851608276367188
    4. ',f' → logprob: -9.985160827636719
    5. 'c' → logprob: -10.110160827636719
    6. ' ,' → logprob: -10.860160827636719
    7. ',l' → logprob: -11.360160827636719
    8. ',t' → logprob: -12.485160827636719
    9. ',d' → logprob: -12.985160827636719
    10. ',b' → logprob: -12.985160827636719

Token 199: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8076399564743042
    2. ',b' → logprob: -0.8076399564743042
    3. ',c' → logprob: -2.3076400756835938
    4. ',l' → logprob: -4.807640075683594
    5. ',d' → logprob: -7.932640075683594
    6. ' ,' → logprob: -9.807640075683594
    7. 'b' → logprob: -10.432640075683594
    8. ',f' → logprob: -10.807640075683594
    9. 'c' → logprob: -10.932640075683594
    10. ',t' → logprob: -11.307640075683594

Token 200: ',l' (ID: 45198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05656381696462631
    2. ',l' → logprob: -3.1815638542175293
    3. ',t' → logprob: -4.931563854217529
    4. ',c' → logprob: -5.181563854217529
    5. ' ,' → logprob: -8.056563377380371
    6. ',k' → logprob: -10.056563377380371
    7. ',d' → logprob: -10.056563377380371
    8. ',f' → logprob: -10.306563377380371
    9. ',b' → logprob: -10.431563377380371
    10. ',r' → logprob: -10.681563377380371

Token 201: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.033116500824689865
    2. ',c' → logprob: -3.658116579055786
    3. '=' → logprob: -5.033116340637207
    4. ' =' → logprob: -8.658116340637207
    5. ' ,' → logprob: -9.658116340637207
    6. 'c' → logprob: -11.033116340637207
    7. ',l' → logprob: -13.033116340637207
    8. '=c' → logprob: -13.158116340637207
    9. ',b' → logprob: -13.408116340637207
    10. ')' → logprob: -13.533116340637207

Token 202: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.313268780708313
    2. '=' → logprob: -1.313268780708313
    3. '   ' → logprob: -12.188268661499023
    4. '=c' → logprob: -14.438268661499023
    5. ',' → logprob: -15.438268661499023
    6. '=
' → logprob: -15.563268661499023
    7. '=(' → logprob: -15.813268661499023
    8. ' ' → logprob: -15.938268661499023
    9. ')' → logprob: -16.063268661499023
    10. '=

' → logprob: -16.188268661499023

Token 203: ' cube' (ID: 46822)
  Prédit: 'cube'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cube' → logprob: -0.5759523510932922
    2. ' cube' → logprob: -0.8259523510932922
    3. 'c' → logprob: -11.325952529907227
    4. ' ' → logprob: -14.825952529907227
    5. '(c' → logprob: -15.700952529907227
    6. '_cube' → logprob: -16.075952529907227
    7. 'cake' → logprob: -16.325952529907227
    8. 'cub' → logprob: -16.325952529907227
    9. ' c' → logprob: -16.825952529907227
    10. 'Cube' → logprob: -17.700952529907227

Token 204: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005305027589201927
    2. '       ' → logprob: -5.50530481338501
    3. '
' → logprob: -7.63030481338501
    4. '        
' → logprob: -7.75530481338501
    5. '<|end|>' → logprob: -8.880305290222168
    6. '  
' → logprob: -9.380305290222168
    7. '    
' → logprob: -10.755305290222168
    8. 'return' → logprob: -11.505305290222168
    9. ' 
' → logprob: -11.630305290222168
    10. '		
' → logprob: -11.755305290222168

Token 205: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.523293673992157
    2. '       ' → logprob: -1.2732937335968018
    3. '(t' → logprob: -2.8982937335968018
    4. '(' → logprob: -3.2732937335968018
    5. 'return' → logprob: -4.648293495178223
    6. 't' → logprob: -5.398293495178223
    7. ' (' → logprob: -5.523293495178223
    8. '    
' → logprob: -5.648293495178223
    9. '
' → logprob: -5.773293495178223
    10. '        
' → logprob: -5.898293495178223

Token 206: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.8592861890792847
    2. '(t' → logprob: -1.2342861890792847
    3. 't' → logprob: -1.3592861890792847
    4. '   ' → logprob: -4.359286308288574
    5. ' return' → logprob: -4.734286308288574
    6. ' t' → logprob: -5.609286308288574
    7. '       ' → logprob: -6.359286308288574
    8. ' (' → logprob: -7.109286308288574
    9. '(' → logprob: -7.359286308288574
    10. ' ' → logprob: -10.109286308288574

Token 207: ' (' (ID: 350)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.003607436316087842
    2. ' (' → logprob: -5.753607273101807
    3. '(' → logprob: -7.753607273101807
    4. ' ' → logprob: -15.628607749938965
    5. '(
' → logprob: -16.25360679626465
    6. '   ' → logprob: -16.37860679626465
    7. 't' → logprob: -17.00360679626465
    8. '  ' → logprob: -17.87860679626465
    9. '(T' → logprob: -18.50360679626465
    10. ' ' → logprob: -19.00360679626465

Token 208: 't' (ID: 83)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.6361992955207825
    2. 't' → logprob: -0.7611992955207825
    3. ' t' → logprob: -6.136199474334717
    4. '(' → logprob: -7.136199474334717
    5. ' (' → logprob: -7.386199474334717
    6. '	t' → logprob: -12.136198997497559
    7. ')' → logprob: -13.136198997497559
    8. '   ' → logprob: -13.261198997497559
    9. '(
' → logprob: -13.386198997497559
    10. ' ' → logprob: -13.386198997497559

Token 209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12350872904062271
    2. ',f' → logprob: -2.2485086917877197
    3. ',l' → logprob: -5.248508930206299
    4. ',b' → logprob: -5.873508930206299
    5. ' ,' → logprob: -5.998508930206299
    6. ',s' → logprob: -10.87350845336914
    7. 'f' → logprob: -11.24850845336914
    8. ',r' → logprob: -11.49850845336914
    9. ',c' → logprob: -11.62350845336914
    10. ',
' → logprob: -11.87350845336914

Token 210: ' l' (ID: 305)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.001935065840370953
    2. 'l' → logprob: -6.251935005187988
    3. ' r' → logprob: -12.626935005187988
    4. 'b' → logprob: -12.751935005187988
    5. '	r' → logprob: -16.251935958862305
    6. ',r' → logprob: -16.251935958862305
    7. '   ' → logprob: -17.001935958862305
    8. ' l' → logprob: -18.126935958862305
    9. '```' → logprob: -18.126935958862305
    10. '
' → logprob: -18.376935958862305

Token 211: ',' (ID: 11)
  Prédit: ',b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.12722362577915192
    2. ',' → logprob: -2.1272237300872803
    3. ',f' → logprob: -8.25222396850586
    4. ' ,' → logprob: -10.87722396850586
    5. 'b' → logprob: -11.37722396850586
    6. ',d' → logprob: -13.25222396850586
    7. ',r' → logprob: -13.25222396850586
    8. ' b' → logprob: -15.12722396850586
    9. 'f' → logprob: -15.25222396850586
    10. ',a' → logprob: -16.50222396850586

Token 212: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.003189597511664033
    2. 't' → logprob: -6.003189563751221
    3. ' f' → logprob: -7.378189563751221
    4. 'r' → logprob: -10.003190040588379
    5. 'b' → logprob: -11.253190040588379
    6. ' t' → logprob: -11.378190040588379
    7. '
' → logprob: -12.253190040588379
    8. ',' → logprob: -12.753190040588379
    9. '   ' → logprob: -13.003190040588379
    10. ' ' → logprob: -13.003190040588379

Token 213: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000597712118178606
    2. ',r' → logprob: -7.8755974769592285
    3. ',b' → logprob: -8.500597953796387
    4. ' ,' → logprob: -11.375597953796387
    5. 'r' → logprob: -13.250597953796387
    6. ',d' → logprob: -14.500597953796387
    7. 'b' → logprob: -15.750597953796387
    8. ',s' → logprob: -16.12559700012207
    9. ',t' → logprob: -16.37559700012207
    10. ',
' → logprob: -17.00059700012207

Token 214: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.2127087504486553e-05
    2. ' r' → logprob: -10.875021934509277
    3. ',r' → logprob: -12.875021934509277
    4. '	r' → logprob: -14.500021934509277
    5. ' ' → logprob: -18.750022888183594
    6. ',' → logprob: -19.250022888183594
    7. '(r' → logprob: -20.375022888183594
    8. '_r' → logprob: -20.500022888183594
    9. '   ' → logprob: -20.875022888183594
    10. '.r' → logprob: -21.375022888183594

Token 215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001752295414917171
    2. ',b' → logprob: -6.3767523765563965
    3. ' ,' → logprob: -10.001751899719238
    4. 'b' → logprob: -12.501751899719238
    5. ')' → logprob: -14.501751899719238
    6. ',
' → logprob: -15.626751899719238
    7. ',d' → logprob: -16.126752853393555
    8. ' b' → logprob: -16.251752853393555
    9. ',l' → logprob: -17.001752853393555
    10. ',s' → logprob: -17.251752853393555

Token 216: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0052350712940096855
    2. ' b' → logprob: -5.255235195159912
    3. ',' → logprob: -14.005234718322754
    4. ',b' → logprob: -15.380234718322754
    5. '	b' → logprob: -15.755234718322754
    6. '   ' → logprob: -16.38023567199707
    7. ')b' → logprob: -17.88023567199707
    8. ' ' → logprob: -18.13023567199707
    9. ' ,' → logprob: -18.13023567199707
    10. 'back' → logprob: -18.25523567199707

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008529895567335188
    2. ')' → logprob: -7.500853061676025
    3. ' ,' → logprob: -8.375852584838867
    4. ',l' → logprob: -9.625852584838867
    5. ' )' → logprob: -14.000852584838867
    6. ',)' → logprob: -14.500852584838867
    7. ' ' → logprob: -14.625852584838867
    8. ',
' → logprob: -14.875852584838867
    9. 'l' → logprob: -15.375852584838867
    10. ',d' → logprob: -15.500852584838867

Token 218: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.014222975820302963
    2. ' d' → logprob: -4.264223098754883
    3. ')' → logprob: -10.764223098754883
    4. ')d' → logprob: -10.889223098754883
    5. '	d' → logprob: -11.014223098754883
    6. ',d' → logprob: -14.014223098754883
    7. '_d' → logprob: -14.139223098754883
    8. ' ' → logprob: -14.764223098754883
    9. '(d' → logprob: -15.014223098754883
    10. '   ' → logprob: -15.389223098754883

Token 219: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.796184723294573e-06
    2. ')
' → logprob: -12.500005722045898
    3. ' )' → logprob: -13.250005722045898
    4. '<|end|>' → logprob: -16.7500057220459
    5. '}' → logprob: -17.1250057220459
    6. '   ' → logprob: -17.1250057220459
    7. ')}' → logprob: -17.2500057220459
    8. ')

' → logprob: -17.5000057220459
    9. ')return' → logprob: -18.5000057220459
    10. ')#' → logprob: -18.7500057220459

Token 220: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 221: ' ro' (ID: 974)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0480583980679512
    2. 'c' → logprob: -3.79805850982666
    3. '    
' → logprob: -5.42305850982666
    4. 'result' → logprob: -5.42305850982666
    5. ' result' → logprob: -5.67305850982666
    6. ' c' → logprob: -6.04805850982666
    7. ' orientations' → logprob: -6.67305850982666
    8. ' res' → logprob: -6.92305850982666
    9. 'cube' → logprob: -7.17305850982666
    10. 'def' → logprob: -7.17305850982666

Token 222: 'ts' (ID: 1561)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00630617281422019
    2. 'ts' → logprob: -5.131306171417236
    3. 'tat' → logprob: -9.006306648254395
    4. 'tas' → logprob: -9.131306648254395
    5. 's' → logprob: -10.506306648254395
    6. 'ta' → logprob: -11.256306648254395
    7. 'ots' → logprob: -11.506306648254395
    8. '=' → logprob: -11.631306648254395
    9. 'ot' → logprob: -11.881306648254395
    10. 'ations' → logprob: -12.131306648254395

Token 223: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6661059260368347
    2. '=' → logprob: -1.1661059856414795
    3. 's' → logprob: -1.7911059856414795
    4. 'ations' → logprob: -4.9161057472229
    5. '   ' → logprob: -8.416106224060059
    6. '=[]' → logprob: -8.416106224060059
    7. '=c' → logprob: -9.666106224060059
    8. '=[]
' → logprob: -10.291106224060059
    9. ' ' → logprob: -10.541106224060059
    10. 't' → logprob: -11.916106224060059

Token 224: ' []
' (ID: 8911)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.12192603200674057
    2. '[]' → logprob: -2.6219260692596436
    3. '[' → logprob: -3.7469260692596436
    4. ' [' → logprob: -4.2469258308410645
    5. '{' → logprob: -5.9969258308410645
    6. '[t' → logprob: -7.2469258308410645
    7. '[]
' → logprob: -8.121926307678223
    8. ' []' → logprob: -8.496926307678223
    9. '[(' → logprob: -8.621926307678223
    10. 'set' → logprob: -9.371926307678223

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12335319817066193
    2. ' c' → logprob: -2.8733532428741455
    3. 'c' → logprob: -3.6233532428741455
    4. ' cube' → logprob: -4.123353004455566
    5. ' current' → logprob: -4.498353004455566
    6. 'cube' → logprob: -5.623353004455566
    7. 'current' → logprob: -6.623353004455566
    8. ' for' → logprob: -8.248353004455566
    9. ' curr' → logprob: -9.498353004455566
    10. '    
' → logprob: -9.748353004455566

Token 226: ' cur' (ID: 4396)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.8030613660812378
    2. 'current' → logprob: -1.6780613660812378
    3. 'cube' → logprob: -1.9280613660812378
    4. ' cube' → logprob: -3.0530614852905273
    5. ' q' → logprob: -3.1780614852905273
    6. ' for' → logprob: -3.8030614852905273
    7. 'q' → logprob: -4.053061485290527
    8. 'for' → logprob: -4.178061485290527
    9. 'c' → logprob: -4.178061485290527
    10. ' c' → logprob: -4.303061485290527

Token 227: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07024139910936356
    2. '=' → logprob: -2.6952414512634277
    3. '=c' → logprob: -8.19524097442627
    4. '_' → logprob: -11.82024097442627
    5. ',' → logprob: -12.07024097442627
    6. '_c' → logprob: -12.69524097442627
    7. ' ' → logprob: -12.94524097442627
    8. '  ' → logprob: -13.57024097442627
    9. ' =
' → logprob: -13.82024097442627
    10. ')' → logprob: -13.82024097442627

Token 228: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.018177097663283348
    2. ' c' → logprob: -4.018177032470703
    3. '(c' → logprob: -10.893177032470703
    4. '   ' → logprob: -12.393177032470703
    5. '(' → logprob: -13.018177032470703
    6. ' (' → logprob: -13.643177032470703
    7. 'tuple' → logprob: -15.018177032470703
    8. ')c' → logprob: -15.268177032470703
    9. ' ' → logprob: -15.518177032470703
    10. 't' → logprob: -16.518177032470703

Token 229: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26311853528022766
    2. ')' → logprob: -2.5131185054779053
    3. '<|end|>' → logprob: -2.7631185054779053
    4. 'for' → logprob: -3.0131185054779053
    5. ' for' → logprob: -4.388118743896484
    6. '<|end|>' → logprob: -4.763118743896484
    7. '  
' → logprob: -4.888118743896484
    8. ')
' → logprob: -6.138118743896484
    9. '[' → logprob: -6.513118743896484
    10. ' 
' → logprob: -6.888118743896484

Token 230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1460968405008316
    2. ' for' → logprob: -2.27109694480896
    3. '
' → logprob: -4.021096706390381
    4. 'for' → logprob: -4.521096706390381
    5. '    
' → logprob: -6.396096706390381
    6. '<|end|>' → logprob: -6.771096706390381
    7. '	for' → logprob: -7.896096706390381
    8. '  
' → logprob: -7.896096706390381
    9. '<|end|>' → logprob: -9.271097183227539
    10. ' 
' → logprob: -9.896097183227539

Token 231: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.002005364978685975
    2. ' for' → logprob: -6.252005577087402
    3. '   ' → logprob: -9.627005577087402
    4. '
' → logprob: -11.877005577087402
    5. '	for' → logprob: -12.627005577087402
    6. '    
' → logprob: -15.127005577087402
    7. '```' → logprob: -16.627004623413086
    8. ' 
' → logprob: -16.752004623413086
    9. '  
' → logprob: -17.002004623413086
    10. ' ' → logprob: -17.252004623413086

Token 232: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.04358048364520073
    2. ' i' → logprob: -3.5435805320739746
    3. '_' → logprob: -4.543580532073975
    4. 'i' → logprob: -5.793580532073975
    5. '_i' → logprob: -10.668580055236816
    6. ' ' → logprob: -11.293580055236816
    7. '   ' → logprob: -12.668580055236816
    8. ' top' → logprob: -12.918580055236816
    9. ' __' → logprob: -13.293580055236816
    10. ' x' → logprob: -13.668580055236816

Token 233: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009779464453458786
    2. 'in' → logprob: -4.634779453277588
    3. ' ' → logprob: -10.759779930114746
    4. 'import' → logprob: -14.009779930114746
    5. '  ' → logprob: -15.134779930114746
    6. 'range' → logprob: -15.134779930114746
    7. '	in' → logprob: -15.759779930114746
    8. ' ,' → logprob: -16.63477897644043
    9. 'n' → logprob: -16.63477897644043
    10. '    ' → logprob: -16.75977897644043

Token 234: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868839740753174
    2. 'range' → logprob: -1.1368839740753174
    3. '[' → logprob: -12.011883735656738
    4. ' ' → logprob: -12.011883735656738
    5. '   ' → logprob: -14.886883735656738
    6. '  ' → logprob: -16.261884689331055
    7. '(range' → logprob: -16.261884689331055
    8. '    ' → logprob: -17.011884689331055
    9. '	range' → logprob: -17.011884689331055
    10. '(' → logprob: -17.261884689331055

Token 235: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12895599007606506
    2. '6' → logprob: -2.3789560794830322
    3. ' ' → logprob: -3.8789560794830322
    4. '4' → logprob: -5.003955841064453
    5. ' (' → logprob: -7.003955841064453
    6. '3' → logprob: -10.378955841064453
    7. '(
' → logprob: -12.128955841064453
    8. '   ' → logprob: -12.378955841064453
    9. '1' → logprob: -13.628955841064453
    10. ')' → logprob: -13.753955841064453

Token 236: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.00601222226396203
    2. '4' → logprob: -5.256012439727783
    3. '3' → logprob: -7.756012439727783
    4. ' ' → logprob: -8.006011962890625
    5. '2' → logprob: -11.506011962890625
    6. '
' → logprob: -12.756011962890625
    7. '   ' → logprob: -13.256011962890625
    8. ')' → logprob: -14.381011962890625
    9. '1' → logprob: -14.756011962890625
    10. '

' → logprob: -15.381011962890625

Token 237: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20173101127147675
    2. '):
' → logprob: -1.7017309665679932
    3. ':' → logprob: -8.826730728149414
    4. ' ):' → logprob: -9.076730728149414
    5. ' ):
' → logprob: -10.701730728149414
    6. '   ' → logprob: -10.701730728149414
    7. ':
' → logprob: -12.576730728149414
    8. '):
' → logprob: -12.576730728149414
    9. ')' → logprob: -13.326730728149414
    10. '):

' → logprob: -13.576730728149414

Token 238: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006892616394907236
    2. '
' → logprob: -5.631892681121826
    3. '   ' → logprob: -6.381892681121826
    4. '        
' → logprob: -7.631892681121826
    5. '  
' → logprob: -8.506892204284668
    6. '	' → logprob: -8.756892204284668
    7. '    
' → logprob: -8.881892204284668
    8. '<|end|>' → logprob: -8.881892204284668
    9. '[' → logprob: -9.381892204284668
    10. '```' → logprob: -10.381892204284668

Token 239: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5971973538398743
    2. ' ro' → logprob: -1.3471972942352295
    3. ' for' → logprob: -2.3471972942352295
    4. 'rots' → logprob: -3.3471972942352295
    5. 'for' (adapté à ' for') → logprob: -3.7221972942352295
    6. 'cur' → logprob: -4.347197532653809
    7. ' cur' → logprob: -4.847197532653809
    8. 'ro' → logprob: -5.097197532653809
    9. ' if' → logprob: -5.472197532653809
    10. ' rot' → logprob: -7.472197532653809

Token 240: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1548011749982834
    2. ' _' → logprob: -2.1548011302948
    3. ' i' → logprob: -4.529801368713379
    4. 'i' → logprob: -4.904801368713379
    5. ' ' → logprob: -5.529801368713379
    6. '__' → logprob: -6.529801368713379
    7. '4' → logprob: -6.529801368713379
    8. '_i' → logprob: -7.029801368713379
    9. ' in' → logprob: -7.654801368713379
    10. ' rot' → logprob: -8.279801368713379

Token 241: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.020120898261666298
    2. ' in' → logprob: -4.270121097564697
    3. 'range' → logprob: -5.395121097564697
    4. '(' → logprob: -6.645121097564697
    5. '4' → logprob: -10.270120620727539
    6. ' ' → logprob: -10.395120620727539
    7. ' range' → logprob: -11.145120620727539
    8. ' (' → logprob: -12.020120620727539
    9. '   ' → logprob: -12.270120620727539
    10. '1' → logprob: -13.020120620727539

Token 242: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007566197891719639
    2. ' range' → logprob: -7.250756740570068
    3. '4' → logprob: -10.00075626373291
    4. '(' → logprob: -13.62575626373291
    5. ' ' → logprob: -17.125757217407227
    6. '(range' → logprob: -17.375757217407227
    7. '[' → logprob: -17.500757217407227
    8. '	range' → logprob: -19.500757217407227
    9. '   ' → logprob: -20.500757217407227
    10. '{' → logprob: -20.625757217407227

Token 243: '(' (ID: 7)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.25195884704589844
    2. '(' → logprob: -1.5019588470458984
    3. ' ' → logprob: -10.626958847045898
    4. ' (' → logprob: -12.751958847045898
    5. '(
' → logprob: -13.501958847045898
    6. '   ' → logprob: -14.501958847045898
    7. '{' → logprob: -15.626958847045898
    8. '```' → logprob: -16.2519588470459
    9. ')' → logprob: -16.8769588470459
    10. '=' → logprob: -16.9394588470459

Token 244: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.3750057220459
    4. '
' → logprob: -18.0000057220459
    5. '۴' → logprob: -18.0000057220459
    6. '' → logprob: -18.2500057220459
    7. '４' → logprob: -18.5625057220459
    8. '٤' → logprob: -19.0625057220459
    9. '```' → logprob: -19.6875057220459
    10. ')' → logprob: -20.0000057220459

Token 245: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3048686683177948
    2. '):' → logprob: -1.4298686981201172
    3. '       ' → logprob: -4.179868698120117
    4. ':' → logprob: -5.554868698120117
    5. ':
' → logprob: -6.054868698120117
    6. '   ' → logprob: -6.429868698120117
    7. '():
' → logprob: -9.304868698120117
    8. '           ' → logprob: -10.304868698120117
    9. ' ):
' → logprob: -10.304868698120117
    10. ',' → logprob: -10.679868698120117

Token 246: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005465809255838394
    2. 'rots' → logprob: -5.505465984344482
    3. ' ro' → logprob: -7.130465984344482
    4. 'ro' → logprob: -8.005465507507324
    5. '       ' → logprob: -8.880465507507324
    6. 'rets' → logprob: -10.255465507507324
    7. 'rops' → logprob: -11.505465507507324
    8. ' rot' → logprob: -11.880465507507324
    9. '   ' → logprob: -12.005465507507324
    10. '	       ' → logprob: -12.255465507507324

Token 247: ' ro' (ID: 974)
  Prédit: 'rots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rots' → logprob: -0.015971962362527847
    2. '           ' → logprob: -4.390972137451172
    3. 'rops' → logprob: -6.140972137451172
    4. 'rost' → logprob: -7.890972137451172
    5. ' ro' → logprob: -8.140972137451172
    6. '       ' → logprob: -8.515972137451172
    7. '               ' → logprob: -8.515972137451172
    8. 'rets' → logprob: -8.765972137451172
    9. 'ro' (adapté à ' ro') → logprob: -10.640972137451172
    10. 'rot' → logprob: -10.765972137451172

Token 248: 'ts' (ID: 1561)
  Prédit: 'ts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -2.7133641196996905e-05
    2. 't' → logprob: -10.87502670288086
    3. 'tsx' → logprob: -12.25002670288086
    4. 'tts' → logprob: -13.62502670288086
    5. ' ts' → logprob: -14.75002670288086
    6. 'tsy' → logprob: -15.00002670288086
    7. '	ts' → logprob: -15.12502670288086
    8. '```' → logprob: -15.62502670288086
    9. 'tsa' → logprob: -15.62502670288086
    10. 'tsi' → logprob: -15.75002670288086

Token 249: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009132515988312662
    2. '.' → logprob: -7.000913143157959
    3. ' .' → logprob: -13.875913619995117
    4. '.app' → logprob: -14.875913619995117
    5. 'append' → logprob: -15.000913619995117
    6. '.Append' → logprob: -16.500913619995117
    7. '.extend' → logprob: -16.875913619995117
    8. '​.' → logprob: -17.750913619995117
    9. '_append' → logprob: -17.875913619995117
    10. '.push' → logprob: -18.125913619995117

Token 250: '(cur' (ID: 34723)
  Prédit: '(cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cur' → logprob: -3.531315314830863e-06
    2. 'cur' → logprob: -13.000003814697266
    3. '(' → logprob: -14.000003814697266
    4. '(c' → logprob: -15.875003814697266
    5. '(current' → logprob: -16.000003814697266
    6. '(curr' → logprob: -16.250003814697266
    7. '(tuple' → logprob: -17.375003814697266
    8. '((' → logprob: -18.625003814697266
    9. '[cur' → logprob: -18.875003814697266
    10. ' (' → logprob: -19.250003814697266

Token 251: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06386908143758774
    2. ')
' → logprob: -2.813868999481201
    3. ' )' → logprob: -6.438868999481201
    4. ' )
' → logprob: -8.18886947631836
    5. ')
' → logprob: -11.68886947631836
    6. '           ' → logprob: -12.43886947631836
    7. ',)' → logprob: -13.43886947631836
    8. '),' → logprob: -13.56386947631836
    9. ')

' → logprob: -13.81386947631836
    10. '))' → logprob: -13.93886947631836

Token 252: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0040312642231583595
    2. '       ' → logprob: -5.754031181335449
    3. '
' → logprob: -8.37903118133545
    4. '		' → logprob: -8.75403118133545
    5. '            
' → logprob: -8.75403118133545
    6. 'cur' → logprob: -8.87903118133545
    7. '	' → logprob: -10.25403118133545
    8. '        
' → logprob: -10.50403118133545
    9. '    
' → logprob: -11.12903118133545
    10. '[' → logprob: -11.37903118133545

Token 253: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -2.7729658540920354e-05
    2. ' cur' → logprob: -10.500027656555176
    3. '           ' → logprob: -15.750027656555176
    4. '	cur' → logprob: -18.500028610229492
    5. 'curr' → logprob: -19.500028610229492
    6. '   ' → logprob: -20.625028610229492
    7. '.cur' → logprob: -21.500028610229492
    8. '       ' → logprob: -21.500028610229492
    9. '_cur' → logprob: -21.625028610229492
    10. '(cur' → logprob: -22.500028610229492

Token 254: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005530327325686812
    2. ' =' → logprob: -7.500553131103516
    3. '=

' → logprob: -20.875553131103516
    4. '＝' → logprob: -21.000553131103516
    5. '=}' → logprob: -21.875553131103516
    6. ' ' → logprob: -22.500553131103516
    7. ')=' → logprob: -23.375553131103516
    8. ')' → logprob: -23.500553131103516
    9. '=
' → logprob: -23.875553131103516
    10. ',' → logprob: -23.875553131103516

Token 255: ' turn' (ID: 3716)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.018152514472603798
    2. ' turn' → logprob: -4.018152713775635
    3. ' ' → logprob: -13.518152236938477
    4. '   ' → logprob: -14.518152236938477
    5. '(turn' → logprob: -14.643152236938477
    6. 'roll' → logprob: -16.393152236938477
    7. '  ' → logprob: -16.643152236938477
    8. '.turn' → logprob: -18.018152236938477
    9. 't' → logprob: -18.518152236938477
    10. '
' → logprob: -18.643152236938477

Token 256: '(cur' (ID: 34723)
  Prédit: '(cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cur' → logprob: -0.002008933573961258
    2. '(' → logprob: -6.25200891494751
    3. 'cur' → logprob: -9.877009391784668
    4. '[cur' → logprob: -10.627009391784668
    5. ' (' → logprob: -12.877009391784668
    6. '(c' → logprob: -13.752009391784668
    7. '(
' → logprob: -14.752009391784668
    8. ' cur' → logprob: -15.127009391784668
    9. '	cur' → logprob: -15.877009391784668
    10. '.cur' → logprob: -16.50200843811035

Token 257: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.554343366995454e-05
    2. ')
' → logprob: -9.500085830688477
    3. ' )' → logprob: -11.750085830688477
    4. '<|end|>' → logprob: -13.000085830688477
    5. '<|end|>' → logprob: -16.000085830688477
    6. '   ' → logprob: -16.125085830688477
    7. ')

' → logprob: -16.625085830688477
    8. '),' → logprob: -17.000085830688477
    9. '       ' → logprob: -17.125085830688477
    10. ')}' → logprob: -17.250085830688477

Token 258: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002270039403811097
    2. '<|end|>' → logprob: -6.127270221710205
    3. '<|end|>' → logprob: -10.377269744873047
    4. '   ' → logprob: -10.502269744873047
    5. '	' → logprob: -12.127269744873047
    6. '```' → logprob: -12.502269744873047
    7. '​' → logprob: -12.627269744873047
    8. ',' → logprob: -13.002269744873047
    9. ')' → logprob: -13.627269744873047
    10. '        
' → logprob: -13.627269744873047

Token 259: ' if' (ID: 538)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.000630947935860604
    2. '       ' → logprob: -7.750630855560303
    3. ' cur' → logprob: -9.000631332397461
    4. '   ' → logprob: -9.500631332397461
    5. 'curr' → logprob: -13.750631332397461
    6. '	cur' → logprob: -14.625631332397461
    7. ' ' → logprob: -15.375631332397461
    8. 'current' → logprob: -16.00063133239746
    9. 'roll' → logprob: -16.37563133239746
    10. 'if' (adapté à ' if') → logprob: -17.62563133239746

Token 260: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10057014226913452
    2. ' _' → logprob: -2.3505702018737793
    3. '_=' → logprob: -8.350569725036621
    4. 'cur' → logprob: -10.475569725036621
    5. ' ' → logprob: -10.850569725036621
    6. ' t' → logprob: -10.975569725036621
    7. 't' → logprob: -10.975569725036621
    8. '_)' → logprob: -11.475569725036621
    9. ' _)' → logprob: -12.475569725036621
    10. '(_' → logprob: -12.475569725036621

Token 261: '%' (ID: 4)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6352241039276123
    2. ' ==' → logprob: -0.7602241039276123
    3. '%' → logprob: -6.260224342346191
    4. ' %' → logprob: -8.260224342346191
    5. '=' → logprob: -8.385224342346191
    6. ' ' → logprob: -9.260224342346191
    7. ' =' → logprob: -10.135224342346191
    8. '0' → logprob: -10.885224342346191
    9. ' !=' → logprob: -11.260224342346191
    10. '   ' → logprob: -11.385224342346191

Token 262: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011307948443572968
    2. '4' → logprob: -9.375113487243652
    3. ' ' → logprob: -10.625113487243652
    4. '3' → logprob: -12.500113487243652
    5. '6' → logprob: -16.500112533569336
    6. '
' → logprob: -16.875112533569336
    7. '5' → logprob: -17.500112533569336
    8. '1' → logprob: -17.875112533569336
    9. '

' → logprob: -18.000112533569336
    10. '```' → logprob: -18.000112533569336

Token 263: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20151078701019287
    2. ' ==' → logprob: -1.7015107870101929
    3. '=' → logprob: -9.951510429382324
    4. '==
' → logprob: -10.451510429382324
    5. ' ' → logprob: -12.076510429382324
    6. ' =' → logprob: -12.201510429382324
    7. '===' → logprob: -12.701510429382324
    8. '0' → logprob: -12.951510429382324
    9. '!=' → logprob: -13.326510429382324
    10. '()==' → logprob: -13.701510429382324

Token 264: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02980939857661724
    2. '1' → logprob: -3.5298094749450684
    3. ' ' → logprob: -9.77980899810791
    4. '
' → logprob: -13.40480899810791
    5. '   ' → logprob: -15.27980899810791
    6. '01' → logprob: -16.154809951782227
    7. '

' → logprob: -16.404809951782227
    8. '  ' → logprob: -16.654809951782227
    9. '```' → logprob: -16.779809951782227
    10. '==' → logprob: -17.154809951782227

Token 265: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.22549882531166077
    2. ':' → logprob: -1.6004987955093384
    3. '=' → logprob: -10.725499153137207
    4. '):
' → logprob: -10.975499153137207
    5. '==' → logprob: -11.100499153137207
    6. '   ' → logprob: -11.850499153137207
    7. '       ' → logprob: -11.850499153137207
    8. ' :
' → logprob: -12.100499153137207
    9. ':
' → logprob: -12.600499153137207
    10. ':

' → logprob: -13.225499153137207

Token 266: '           ' (ID: 352)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.17593930661678314
    2. '       ' → logprob: -2.0509393215179443
    3. ' cur' → logprob: -3.4259393215179443
    4. '   ' → logprob: -9.300939559936523
    5. '	cur' → logprob: -9.675939559936523
    6. '           ' → logprob: -10.550939559936523
    7. ' ' → logprob: -11.425939559936523
    8. '[cur' → logprob: -13.050939559936523
    9. '(cur' → logprob: -13.800939559936523
    10. '.cur' → logprob: -14.050939559936523

Token 267: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.005390041507780552
    2. ' cur' → logprob: -5.380390167236328
    3. '   ' → logprob: -7.505390167236328
    4. '       ' → logprob: -8.755390167236328
    5. '           ' → logprob: -10.005390167236328
    6. '	cur' → logprob: -11.380390167236328
    7. ' ' → logprob: -13.130390167236328
    8. 'curr' → logprob: -14.130390167236328
    9. 'roll' → logprob: -14.255390167236328
    10. '  ' → logprob: -14.755390167236328

Token 268: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047814972698689
    2. ' =' → logprob: -4.511047840118408
    3. '=

' → logprob: -19.13604736328125
    4. ',' → logprob: -19.38604736328125
    5. '=
' → logprob: -19.76104736328125
    6. ' ' → logprob: -19.88604736328125
    7. '=}' → logprob: -19.88604736328125
    8. '＝' → logprob: -20.63604736328125
    9. ')' → logprob: -21.07354736328125
    10. 'roll' → logprob: -21.26104736328125

Token 269: ' roll' (ID: 8465)
  Prédit: 'roll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roll' → logprob: -0.0015024791937321424
    2. ' roll' → logprob: -6.501502513885498
    3. 'rol' → logprob: -16.001502990722656
    4. ' ' → logprob: -18.876502990722656
    5. 'rollback' → logprob: -19.001502990722656
    6. 'rolling' → logprob: -19.501502990722656
    7. '   ' → logprob: -19.751502990722656
    8. '  ' → logprob: -20.376502990722656
    9. 'roller' → logprob: -20.376502990722656
    10. '(' → logprob: -20.501502990722656

Token 270: '(cur' (ID: 34723)
  Prédit: '(cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cur' → logprob: -0.004079112783074379
    2. 'cur' → logprob: -5.504079341888428
    3. '(' → logprob: -14.62907886505127
    4. ' cur' → logprob: -15.50407886505127
    5. '[cur' → logprob: -17.004079818725586
    6. '(c' → logprob: -17.879079818725586
    7. ' (' → logprob: -17.879079818725586
    8. '(curr' → logprob: -17.879079818725586
    9. '	cur' → logprob: -18.504079818725586
    10. '.cur' → logprob: -20.629079818725586

Token 271: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004892880679108202
    2. ')
' → logprob: -7.625489234924316
    3. ' )' → logprob: -14.125489234924316
    4. ')c' → logprob: -15.125489234924316
    5. ')

' → logprob: -16.125490188598633
    6. ')
' → logprob: -16.625490188598633
    7. '   ' → logprob: -17.750490188598633
    8. '))' → logprob: -18.125490188598633
    9. ')}' → logprob: -18.375490188598633
    10. ')return' → logprob: -18.625490188598633

Token 272: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04632348567247391
    2. 'else' → logprob: -3.671323537826538
    3. ' else' → logprob: -4.546323299407959
    4. '<|end|>' → logprob: -4.796323299407959
    5. 'cur' → logprob: -7.796323299407959
    6. ' cur' → logprob: -9.421323776245117
    7. '<|end|>' → logprob: -9.546323776245117
    8. '   ' → logprob: -9.546323776245117
    9. 'return' → logprob: -9.921323776245117
    10. ')' → logprob: -10.046323776245117

Token 273: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.6366785168647766
    2. ' else' → logprob: -0.7616785168647766
    3. '       ' → logprob: -5.511678695678711
    4. '<|end|>' → logprob: -11.386678695678711
    5. '	else' → logprob: -11.636678695678711
    6. ' ' → logprob: -13.011678695678711
    7. '   ' → logprob: -13.136678695678711
    8. '<|end|>' → logprob: -13.761678695678711
    9. '}else' → logprob: -14.261678695678711
    10. '_else' → logprob: -14.261678695678711

Token 274: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34870612621307373
    2. ':
' → logprob: -1.2237061262130737
    3. '           ' → logprob: -8.348706245422363
    4. ':

' → logprob: -11.473706245422363
    5. '       ' → logprob: -11.723706245422363
    6. ':
' → logprob: -13.098706245422363
    7. '   ' → logprob: -14.098706245422363
    8. '          ' → logprob: -14.473706245422363
    9. '{
' → logprob: -14.598706245422363
    10. ' :
' → logprob: -14.723706245422363

Token 275: '           ' (ID: 352)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.3109093904495239
    2. '           ' → logprob: -1.435909390449524
    3. ' cur' → logprob: -3.9359092712402344
    4. '       ' → logprob: -4.810909271240234
    5. '   ' → logprob: -6.685909271240234
    6. '	cur' → logprob: -8.060909271240234
    7. '[cur' → logprob: -10.810909271240234
    8. '```' → logprob: -10.935909271240234
    9. ' ' → logprob: -11.185909271240234
    10. '
' → logprob: -11.560909271240234

Token 276: ' #' (ID: 1069)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.0012084494810551405
    2. ' cur' → logprob: -6.751208305358887
    3. '   ' → logprob: -10.376208305358887
    4. '           ' → logprob: -12.251208305358887
    5. '	cur' → logprob: -14.251208305358887
    6. 'curr' → logprob: -14.376208305358887
    7. '       ' → logprob: -15.126208305358887
    8. 'roll' → logprob: -15.376208305358887
    9. ' ' → logprob: -15.876208305358887
    10. 'curl' → logprob: -16.251209259033203

Token 277: ' for' (ID: 395)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.05492088198661804
    2. ' cur' → logprob: -2.9299209117889404
    3. '   ' → logprob: -11.05492115020752
    4. '           ' → logprob: -11.67992115020752
    5. '	cur' → logprob: -12.55492115020752
    6. 'curr' → logprob: -12.92992115020752
    7. 'roll' → logprob: -13.05492115020752
    8. ' ' → logprob: -13.55492115020752
    9. ' roll' → logprob: -14.17992115020752
    10. 'current' → logprob: -14.55492115020752

Token 278: ' ' (ID: 220)
  Prédit: 'roll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'roll' → logprob: -1.1205509901046753
    2. 'cur' → logprob: -1.1205509901046753
    3. ' roll' → logprob: -1.8705509901046753
    4. ' cur' → logprob: -2.120551109313965
    5. '_' → logprob: -2.870551109313965
    6. ' _' → logprob: -5.245551109313965
    7. 'rot' → logprob: -5.995551109313965
    8. '(cur' → logprob: -5.995551109313965
    9. '(' → logprob: -6.495551109313965
    10. ' rot' → logprob: -6.995551109313965

Token 279: '2' (ID: 17)
  Prédit: 'roll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'roll' → logprob: -0.15216846764087677
    2. ' roll' → logprob: -2.4021685123443604
    3. '_' → logprob: -3.2771685123443604
    4. 'cur' → logprob: -4.777168273925781
    5. 'rot' → logprob: -6.902168273925781
    6. ' _' → logprob: -7.027168273925781
    7. '_roll' → logprob: -7.277168273925781
    8. 'i' → logprob: -8.402168273925781
    9. ' cur' → logprob: -8.527168273925781
    10. ' i' → logprob: -8.652168273925781

Token 280: 'nd' (ID: 301)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.20564743876457214
    2. ' cur' → logprob: -1.9556474685668945
    3. '_' → logprob: -4.0806474685668945
    4. '(cur' → logprob: -4.7056474685668945
    5. ' _' → logprob: -5.5806474685668945
    6. 'roll' → logprob: -5.7056474685668945
    7. ' roll' → logprob: -5.8306474685668945
    8. ' ' → logprob: -6.4556474685668945
    9. '=' → logprob: -6.7056474685668945
    10. '   ' → logprob: -6.7056474685668945

Token 281: ' and' (ID: 326)
  Prédit: 'roll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roll' → logprob: -0.07114086300134659
    2. ' roll' → logprob: -2.946140766143799
    3. 'cur' → logprob: -4.196140766143799
    4. ' cur' → logprob: -8.321141242980957
    5. ' ' → logprob: -8.821141242980957
    6. '_roll' → logprob: -9.071141242980957
    7. ',' → logprob: -9.196141242980957
    8. '   ' → logprob: -9.446141242980957
    9. ' and' → logprob: -9.696141242980957
    10. '(cur' → logprob: -9.821141242980957

Token 282: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.7711753845214844
    2. '_' → logprob: -1.2711753845214844
    3. '5' → logprob: -1.7711753845214844
    4. 'roll' → logprob: -3.5211753845214844
    5. ' ' → logprob: -3.8961753845214844
    6. ' _' → logprob: -4.146175384521484
    7. ' roll' → logprob: -5.021175384521484
    8. 'cur' → logprob: -5.271175384521484
    9. '   ' → logprob: -6.271175384521484
    10. ' cur' → logprob: -6.646175384521484

Token 283: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.6381454467773438
    2. '5' → logprob: -0.7631454467773438
    3. '_' → logprob: -5.513145446777344
    4. 'roll' → logprob: -7.513145446777344
    5. '3' → logprob: -8.013145446777344
    6. ' ' → logprob: -8.638145446777344
    7. '#' → logprob: -8.888145446777344
    8. ' fifth' → logprob: -9.763145446777344
    9. 'four' → logprob: -10.888145446777344
    10. '(' → logprob: -11.013145446777344

Token 284: 'th' (ID: 404)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.34302160143852234
    2. '(cur' → logprob: -1.8430216312408447
    3. '_' → logprob: -2.5930216312408447
    4. '_cur' → logprob: -4.093021392822266
    5. '(' → logprob: -4.343021392822266
    6. ' cur' → logprob: -5.093021392822266
    7. '_roll' → logprob: -5.343021392822266
    8. ' (' → logprob: -5.468021392822266
    9. '(
' → logprob: -6.093021392822266
    10. '   ' → logprob: -6.093021392822266

Token 285: ' rolls' (ID: 46838)
  Prédit: 'roll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'roll' → logprob: -0.3114708364009857
    2. ' roll' → logprob: -1.686470866203308
    3. 'cur' → logprob: -2.5614707469940186
    4. ' cur' → logprob: -5.936470985412598
    5. '(cur' → logprob: -7.061470985412598
    6. '_roll' → logprob: -7.311470985412598
    7. ' ' → logprob: -8.311470985412598
    8. ' (' → logprob: -9.061470985412598
    9. '(' → logprob: -9.061470985412598
    10. ' rollover' → logprob: -9.436470985412598

Token 286: ',' (ID: 11)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.04128485545516014
    2. '           ' → logprob: -3.9162847995758057
    3. ' cur' → logprob: -4.291285037994385
    4. '(cur' → logprob: -5.791285037994385
    5. '[cur' → logprob: -6.291285037994385
    6. '
' → logprob: -7.416285037994385
    7. ' =' → logprob: -7.541285037994385
    8. '       ' → logprob: -8.416284561157227
    9. '	cur' → logprob: -8.541284561157227
    10. '   ' → logprob: -9.041284561157227

Token 287: ' do' (ID: 621)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.13119804859161377
    2. ' cur' → logprob: -2.131197929382324
    3. '   ' → logprob: -5.756197929382324
    4. '       ' → logprob: -7.631197929382324
    5. '           ' → logprob: -7.881197929382324
    6. '	cur' → logprob: -8.756197929382324
    7. ' ' → logprob: -10.506197929382324
    8. '    ' → logprob: -11.381197929382324
    9. '[cur' → logprob: -12.131197929382324
    10. ' curt' → logprob: -12.256197929382324

Token 288: ' roll' (ID: 8465)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.18504698574543
    2. ' cur' → logprob: -1.9350470304489136
    3. 'roll' → logprob: -4.185047149658203
    4. ' roll' → logprob: -5.060047149658203
    5. '(cur' → logprob: -6.060047149658203
    6. ' ' → logprob: -8.560047149658203
    7. '	cur' → logprob: -9.310047149658203
    8. '   ' → logprob: -9.560047149658203
    9. '[cur' → logprob: -9.685047149658203
    10. ' a' → logprob: -9.935047149658203

Token 289: ' thr' (ID: 11622)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4367702603340149
    2. '(cur' → logprob: -1.4367702007293701
    3. 'roll' → logprob: -2.68677020072937
    4. 'cur' → logprob: -3.43677020072937
    5. '(turn' → logprob: -4.686770439147949
    6. ' =' → logprob: -5.936770439147949
    7. '=' → logprob: -6.811770439147949
    8. 'turn' → logprob: -7.186770439147949
    9. ' (' → logprob: -7.561770439147949
    10. '(reverse' → logprob: -7.936770439147949

Token 290: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.3869052827358246
    2. 'ee' → logprob: -1.136905312538147
    3. 'eee' → logprob: -10.761905670166016
    4. 'ece' → logprob: -12.386905670166016
    5. 'ree' → logprob: -12.511905670166016
    6. 'ees' → logprob: -13.511905670166016
    7. 'e' → logprob: -14.136905670166016
    8. 'ow' → logprob: -14.261905670166016
    9. 'ough' → logprob: -14.511905670166016
    10. 'ce' → logprob: -14.636905670166016

Token 291: ' (' (ID: 350)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.0931684821844101
    2. '           ' → logprob: -2.9681684970855713
    3. '(cur' → logprob: -3.4681684970855713
    4. ' cur' → logprob: -5.718168258666992
    5. ' =' → logprob: -6.843168258666992
    6. '=' → logprob: -7.343168258666992
    7. '       ' → logprob: -7.468168258666992
    8. '[cur' → logprob: -8.343168258666992
    9. '   ' → logprob: -8.593168258666992
    10. '(' → logprob: -9.093168258666992

Token 292: 'roll' (ID: 1484)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.1754278987646103
    2. 'roll' → logprob: -2.3004279136657715
    3. ' cur' → logprob: -3.3004279136657715
    4. ' roll' → logprob: -3.8004279136657715
    5. '   ' → logprob: -8.300427436828613
    6. ')' → logprob: -8.425427436828613
    7. '(cur' → logprob: -8.550427436828613
    8. 'cube' → logprob: -8.550427436828613
    9. '           ' → logprob: -8.800427436828613
    10. '       ' → logprob: -9.425427436828613

Token 293: '^-' (ID: 85848)
  Prédit: '(cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cur' → logprob: -0.022265467792749405
    2. ')' → logprob: -4.272265434265137
    3. 'cur' → logprob: -5.147265434265137
    4. '=' → logprob: -6.772265434265137
    5. '[cur' → logprob: -8.022265434265137
    6. ' =' → logprob: -8.147265434265137
    7. '(' → logprob: -8.772265434265137
    8. 's' → logprob: -9.772265434265137
    9. ' )' → logprob: -10.022265434265137
    10. ' cur' → logprob: -10.022265434265137

Token 294: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.654270350933075
    2. '3' → logprob: -1.1542704105377197
    3. ')' → logprob: -1.9042704105377197
    4. '(' → logprob: -4.904270172119141
    5. ' ' → logprob: -6.779270172119141
    6. '2' → logprob: -6.779270172119141
    7. '()' → logprob: -7.029270172119141
    8. '```' → logprob: -7.029270172119141
    9. 'e' → logprob: -7.154270172119141
    10. '(
' → logprob: -7.279270172119141

Token 295: ')
' (ID: 446)
  Prédit: '(cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cur' → logprob: -0.20453187823295593
    2. ')
' → logprob: -1.9545319080352783
    3. ')' → logprob: -3.2045319080352783
    4. 'cur' → logprob: -6.954531669616699
    5. ' )
' → logprob: -7.204531669616699
    6. '(
' → logprob: -8.4545316696167
    7. '(' → logprob: -8.5795316696167
    8. '):
' → logprob: -8.7045316696167
    9. ' )' → logprob: -9.2045316696167
    10. ')

' → logprob: -9.4545316696167

Token 296: '           ' (ID: 352)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.31408825516700745
    2. '           ' → logprob: -1.314088225364685
    3. ' cur' → logprob: -7.689088344573975
    4. '(cur' → logprob: -8.314087867736816
    5. '       ' → logprob: -10.314087867736816
    6. '[cur' → logprob: -10.314087867736816
    7. '	cur' → logprob: -11.189087867736816
    8. '   ' → logprob: -11.314087867736816
    9. '               ' → logprob: -11.939087867736816
    10. '          ' → logprob: -12.439087867736816

Token 297: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.0056661562994122505
    2. ' cur' → logprob: -5.505666255950928
    3. 'for' → logprob: -7.130666255950928
    4. 'roll' → logprob: -7.755666255950928
    5. '           ' → logprob: -8.38066577911377
    6. ' for' → logprob: -9.50566577911377
    7. ' roll' → logprob: -11.00566577911377
    8. '   ' → logprob: -11.13066577911377
    9. '[cur' → logprob: -12.13066577911377
    10. '	cur' → logprob: -12.38066577911377

Token 298: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740770161151886
    2. '=' → logprob: -0.9740769863128662
    3. ' ' → logprob: -17.724077224731445
    4. '＝' → logprob: -18.224077224731445
    5. '=
' → logprob: -19.474077224731445
    6. ',' → logprob: -19.599077224731445
    7. ')' → logprob: -19.724077224731445
    8. ' =)' → logprob: -20.349077224731445
    9. '=

' → logprob: -20.474077224731445
    10. '=}' → logprob: -20.724077224731445

Token 299: ' roll' (ID: 8465)
  Prédit: 'roll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roll' → logprob: -0.07039185613393784
    2. ' roll' → logprob: -2.695391893386841
    3. '(' → logprob: -7.945391654968262
    4. 'rol' → logprob: -10.570391654968262
    5. ' (' → logprob: -10.820391654968262
    6. 'tuple' → logprob: -11.570391654968262
    7. 'rollback' → logprob: -12.195391654968262
    8. 'lambda' → logprob: -12.320391654968262
    9. ' ' → logprob: -12.445391654968262
    10. '(
' → logprob: -12.632891654968262

Token 300: '(' (ID: 7)
  Prédit: '(cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cur' → logprob: -0.03824138641357422
    2. '(' → logprob: -3.288241386413574
    3. 'cur' → logprob: -8.788241386413574
    4. '(
' → logprob: -11.163241386413574
    5. '(c' → logprob: -11.288241386413574
    6. '(curr' → logprob: -11.413241386413574
    7. ' (' → logprob: -12.538241386413574
    8. '[cur' → logprob: -13.413241386413574
    9. ' cur' → logprob: -13.663241386413574
    10. 'roll' → logprob: -14.038241386413574

Token 301: 'roll' (ID: 1484)
  Prédit: 'roll'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roll' → logprob: -0.010734744369983673
    2. 'cur' → logprob: -4.760734558105469
    3. '(' → logprob: -6.510734558105469
    4. ' roll' → logprob: -7.510734558105469
    5. 'rol' → logprob: -10.010734558105469
    6. ')' → logprob: -11.635734558105469
    7. '(cur' → logprob: -11.760734558105469
    8. 'curl' → logprob: -12.760734558105469
    9. ' cur' → logprob: -12.885734558105469
    10. 'rollback' → logprob: -13.010734558105469

Token 302: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004331725067459047
    2. '(cur' → logprob: -8.000432968139648
    3. 'roll' → logprob: -10.000432968139648
    4. 'cur' → logprob: -10.750432968139648
    5. ')' → logprob: -11.125432968139648
    6. '(
' → logprob: -11.250432968139648
    7. ' (' → logprob: -13.875432968139648
    8. '(curr' → logprob: -14.125432968139648
    9. '(

' → logprob: -14.250432968139648
    10. ')(' → logprob: -15.625432968139648

Token 303: 'roll' (ID: 1484)
  Prédit: 'roll'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roll' → logprob: -0.008647306822240353
    2. 'cur' → logprob: -4.758647441864014
    3. ' roll' → logprob: -10.633646965026855
    4. '(' → logprob: -12.508646965026855
    5. 'rol' → logprob: -12.758646965026855
    6. '(cur' → logprob: -14.633646965026855
    7. 'cube' → logprob: -15.008646965026855
    8. ' cur' → logprob: -15.508646965026855
    9. 'rollback' → logprob: -15.508646965026855
    10. 'rolling' → logprob: -15.633646965026855

Token 304: '(cur' (ID: 34723)
  Prédit: '(cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cur' → logprob: -2.339278580620885e-06
    2. ')(' → logprob: -13.875001907348633
    3. ' (' → logprob: -14.250001907348633
    4. 'cur' → logprob: -14.750001907348633
    5. '(c' → logprob: -15.625001907348633
    6. '(curr' → logprob: -16.375001907348633
    7. '[cur' → logprob: -16.750001907348633
    8. '(' → logprob: -18.000001907348633
    9. ')' → logprob: -18.250001907348633
    10. ' cur' → logprob: -18.500001907348633

Token 305: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.4806673526763916
    2. '))' → logprob: -0.9806673526763916
    3. '(cur' → logprob: -5.1056671142578125
    4. 'cur' → logprob: -7.7306671142578125
    5. '))))' → logprob: -10.855667114257812
    6. '(c' → logprob: -10.980667114257812
    7. ' ' → logprob: -11.855667114257812
    8. ')))
' → logprob: -12.355667114257812
    9. ' ))' → logprob: -12.355667114257812
    10. '))
' → logprob: -12.605667114257812

Token 306: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016195995267480612
    2. 'return' → logprob: -6.876619815826416
    3. '<|end|>' → logprob: -7.626619815826416
    4. ' return' → logprob: -9.751619338989258
    5. '	return' → logprob: -11.376619338989258
    6. ')' → logprob: -11.626619338989258
    7. '       ' → logprob: -12.376619338989258
    8. '```' → logprob: -12.626619338989258
    9. '<|end|>' → logprob: -12.876619338989258
    10. '{return' → logprob: -13.376619338989258

Token 307: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029927168041467667
    2. 'return' → logprob: -3.5299272537231445
    3. ' return' → logprob: -9.029927253723145
    4. '	return' → logprob: -9.904927253723145
    5. '<|end|>' → logprob: -12.779927253723145
    6. ' ' → logprob: -14.279927253723145
    7. ')' → logprob: -14.279927253723145
    8. ')return' → logprob: -14.779927253723145
    9. '    
' → logprob: -14.779927253723145
    10. '       ' → logprob: -14.779927253723145

Token 308: ' unique' (ID: 5746)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5778288245201111
    2. 'return' → logprob: -0.8278288245201111
    3. ' return' → logprob: -6.327828884124756
    4. '```' → logprob: -9.702828407287598
    5. '	return' → logprob: -10.952828407287598
    6. ':return' → logprob: -11.452828407287598
    7. ' ' → logprob: -12.952828407287598
    8. '{return' → logprob: -13.327828407287598
    9. '       ' → logprob: -13.327828407287598
    10. '    
' → logprob: -13.952828407287598

Token 309: ' orientations' (ID: 149573)
  Prédit: '_ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ro' → logprob: -0.631120502948761
    2. '_' → logprob: -1.6311204433441162
    3. '_c' → logprob: -1.7561204433441162
    4. '_set' → logprob: -3.256120443344116
    5. '_rot' → logprob: -3.631120443344116
    6. 's' → logprob: -4.381120681762695
    7. ' =' → logprob: -4.631120681762695
    8. '_faces' → logprob: -5.131120681762695
    9. '_or' → logprob: -5.256120681762695
    10. '=' → logprob: -8.756120681762695

Token 310: ' only' (ID: 1606)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007003904785960913
    2. ' return' → logprob: -5.1320037841796875
    3. 'return' → logprob: -7.1320037841796875
    4. ' =' → logprob: -9.132003784179688
    5. '    
' → logprob: -10.007003784179688
    6. '
' → logprob: -10.507003784179688
    7. ')' → logprob: -11.132003784179688
    8. ',' → logprob: -11.257003784179688
    9. ' rot' → logprob: -11.632003784179688
    10. ' seen' → logprob: -11.757003784179688

Token 311: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035570659674704075
    2. ' return' → logprob: -6.003557205200195
    3. '
' → logprob: -7.503557205200195
    4. 'return' → logprob: -7.628557205200195
    5. '    
' → logprob: -10.253557205200195
    6. ')' → logprob: -13.253557205200195
    7. '	return' → logprob: -13.628557205200195
    8. ',' → logprob: -13.878557205200195
    9. '```' → logprob: -14.128557205200195
    10. '<|end|>' → logprob: -14.503557205200195

Token 312: 'should' (ID: 10618)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5899419784545898
    2. ' return' → logprob: -1.0899419784545898
    3. ' ro' → logprob: -3.08994197845459
    4. 'rots' → logprob: -3.21494197845459
    5. ')' → logprob: -4.71494197845459
    6. 'rets' → logprob: -5.71494197845459
    7. '   ' → logprob: -5.83994197845459
    8. ' rot' → logprob: -5.83994197845459
    9. 'rot' → logprob: -5.96494197845459
    10. 'ro' → logprob: -6.46494197845459

Token 313: ' be' (ID: 413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7448258996009827
    2. 'return' → logprob: -0.7448258996009827
    3. 'rots' → logprob: -4.244825839996338
    4. ' =' → logprob: -4.369825839996338
    5. ' return' → logprob: -4.619825839996338
    6. ')' → logprob: -4.744825839996338
    7. '   ' → logprob: -5.994825839996338
    8. 'eturn' → logprob: -7.369825839996338
    9. ')=' → logprob: -7.994825839996338
    10. ' be' → logprob: -8.244826316833496

Token 314: ' ' (ID: 220)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.03405354171991348
    2. ' list' → logprob: -3.6590535640716553
    3. 'len' → logprob: -5.159053325653076
    4. 'set' → logprob: -6.284053325653076
    5. '   ' → logprob: -9.659053802490234
    6. ' set' → logprob: -10.784053802490234
    7. ' len' → logprob: -11.659053802490234
    8. 'sorted' → logprob: -11.784053802490234
    9. ')' → logprob: -12.534053802490234
    10. '```' → logprob: -13.159053802490234

Token 315: '24' (ID: 1494)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.21350984275341034
    2. 'set' → logprob: -1.9635097980499268
    3. 'len' → logprob: -2.9635097980499268
    4. ' list' → logprob: -8.463509559631348
    5. '24' → logprob: -10.963509559631348
    6. ' set' → logprob: -11.338509559631348
    7. 'sorted' → logprob: -12.088509559631348
    8. '{' → logprob: -13.088509559631348
    9. '   ' → logprob: -13.588509559631348
    10. ' len' → logprob: -14.088509559631348

Token 316: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1282171756029129
    2. ')' → logprob: -2.1282172203063965
    3. '   ' → logprob: -6.8782172203063965
    4. ')
' → logprob: -9.253216743469238
    5. ' )
' → logprob: -9.378216743469238
    6. 'return' → logprob: -10.378216743469238
    7. '    
' → logprob: -12.378216743469238
    8. ' ' → logprob: -12.503216743469238
    9. ' )' → logprob: -12.503216743469238
    10. ' =' → logprob: -12.628216743469238

Token 317: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01044669933617115
    2. ' return' → logprob: -5.260446548461914
    3. 'return' → logprob: -5.260446548461914
    4. '```' → logprob: -12.385446548461914
    5. '	return' → logprob: -15.135446548461914
    6. '    
' → logprob: -15.385446548461914
    7. ')return' → logprob: -15.385446548461914
    8. '
' → logprob: -15.510446548461914
    9. ')' → logprob: -15.635446548461914
    10. ',' → logprob: -15.760446548461914

Token 318: ' uniq' (ID: 130316)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.18182213604450226
    2. '   ' → logprob: -2.1818220615386963
    3. ' return' → logprob: -2.9318220615386963
    4. 'rets' → logprob: -9.431821823120117
    5. '```' → logprob: -10.931821823120117
    6. 'rots' → logprob: -12.681821823120117
    7. '
' → logprob: -12.806821823120117
    8. 'seen' → logprob: -13.056821823120117
    9. 'eturn' → logprob: -13.181821823120117
    10. 'unique' → logprob: -13.806821823120117

Token 319: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34379854798316956
    2. '_or' → logprob: -1.8437985181808472
    3. 'ue' → logprob: -2.4687986373901367
    4. '=' → logprob: -3.8437986373901367
    5. 'ues' → logprob: -4.843798637390137
    6. 's' → logprob: -5.093798637390137
    7. 'es' → logprob: -5.343798637390137
    8. 'e' → logprob: -5.843798637390137
    9. '_' → logprob: -5.843798637390137
    10. '_ro' → logprob: -7.343798637390137

Token 320: ' []
' (ID: 8911)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0032466354314237833
    2. 'set' → logprob: -5.753246784210205
    3. ' list' → logprob: -10.253246307373047
    4. '[]
' → logprob: -10.503246307373047
    5. '{' → logprob: -12.503246307373047
    6. '[]' → logprob: -13.503246307373047
    7. '{}
' → logprob: -14.878246307373047
    8. '{}' → logprob: -15.003246307373047
    9. 'sorted' → logprob: -15.003246307373047
    10. '[list' → logprob: -16.253246307373047

Token 321: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4797927737236023
    2. ' for' → logprob: -1.479792833328247
    3. 'seen' → logprob: -1.979792833328247
    4. ' seen' → logprob: -4.229792594909668
    5. '   ' → logprob: -7.229792594909668
    6. '_seen' → logprob: -10.979792594909668
    7. 'visited' → logprob: -12.354792594909668
    8. 's' → logprob: -13.854792594909668
    9. '	for' → logprob: -14.104792594909668
    10. '
' → logprob: -14.979792594909668

Token 322: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' (adapté à ' seen') → logprob: -0.07018650323152542
    2. 'for' → logprob: -2.6951866149902344
    3. ' seen' → logprob: -8.570186614990234
    4. ' for' → logprob: -10.820186614990234
    5. '_seen' → logprob: -11.445186614990234
    6. 'visited' → logprob: -11.570186614990234
    7. 'se' → logprob: -12.195186614990234
    8. 's' → logprob: -12.195186614990234
    9. '   ' → logprob: -12.320186614990234
    10. 'faces' → logprob: -13.445186614990234

Token 323: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04957367479801178
    2. ' =' → logprob: -3.0495736598968506
    3. '=set' → logprob: -6.92457389831543
    4. 'set' → logprob: -13.17457389831543
    5. '_set' → logprob: -15.17457389831543
    6. '={}' → logprob: -16.17457389831543
    7. '=[]' → logprob: -17.17457389831543
    8. '=

' → logprob: -17.29957389831543
    9. 's' → logprob: -17.92457389831543
    10. ' ={' → logprob: -18.17457389831543

Token 324: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -6.015305552864447e-05
    2. ' set' → logprob: -9.750060081481934
    3. '{' → logprob: -13.250060081481934
    4. '=set' → logprob: -16.50006103515625
    5. '	set' → logprob: -17.62506103515625
    6. '   ' → logprob: -18.87506103515625
    7. ' ' → logprob: -19.25006103515625
    8. '(set' → logprob: -19.37506103515625
    9. '{}' → logprob: -19.75006103515625
    10. ')set' → logprob: -20.62506103515625

Token 325: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.37339842319488525
    2. '()' → logprob: -1.2483984231948853
    3. '(' → logprob: -3.9983983039855957
    4. '   ' → logprob: -5.498398303985596
    5. '(
' → logprob: -6.998398303985596
    6. '(cur' → logprob: -7.498398303985596
    7. ')' → logprob: -8.498398780822754
    8. '()

' → logprob: -8.998398780822754
    9. '(c' → logprob: -9.623398780822754
    10. ')
' → logprob: -10.123398780822754

Token 326: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1564669907093048
    2. 'for' → logprob: -2.4064669609069824
    3. '   ' → logprob: -3.0314669609069824
    4. ' 
' → logprob: -5.281466960906982
    5. '    
' → logprob: -8.03146743774414
    6. ' ' → logprob: -8.15646743774414
    7. '\' → logprob: -8.40646743774414
    8. '
' → logprob: -8.53146743774414
    9. '  
' → logprob: -9.15646743774414
    10. '\n' → logprob: -9.53146743774414

Token 327: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.049457844346761703
    2. ' for' → logprob: -3.0494577884674072
    3. '   ' → logprob: -7.049458026885986
    4. '	for' → logprob: -13.299457550048828
    5. ' 
' → logprob: -16.049457550048828
    6. '
' → logprob: -16.299457550048828
    7. ' ' → logprob: -16.299457550048828
    8. '    
' → logprob: -16.299457550048828
    9. '<|end|>' → logprob: -18.549457550048828
    10. '  ' → logprob: -18.799457550048828

Token 328: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.777908205986023
    2. 'o' → logprob: -1.277908205986023
    3. 'x' → logprob: -1.402908205986023
    4. 'rot' → logprob: -5.0279083251953125
    5. 'orient' → logprob: -5.4029083251953125
    6. 'ori' → logprob: -6.5279083251953125
    7. 'c' → logprob: -7.1529083251953125
    8. ' r' → logprob: -7.1529083251953125
    9. ' x' → logprob: -7.4029083251953125
    10. ' o' → logprob: -8.027908325195312

Token 329: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038080859929323196
    2. 'in' → logprob: -3.288080930709839
    3. ' ' → logprob: -10.788081169128418
    4. 'n' → logprob: -12.288081169128418
    5. 'r' → logprob: -12.913081169128418
    6. ')' → logprob: -13.038081169128418
    7. '	in' → logprob: -13.288081169128418
    8. '_' → logprob: -13.788081169128418
    9. '_in' → logprob: -14.163081169128418
    10. 'i' → logprob: -14.163081169128418

Token 330: ' ro' (ID: 974)
  Prédit: 'rots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rots' → logprob: -0.009884879924356937
    2. ' ro' → logprob: -4.634884834289551
    3. 'rot' → logprob: -10.00988483428955
    4. 'ro' → logprob: -10.25988483428955
    5. 'rops' → logprob: -10.75988483428955
    6. 'rets' → logprob: -11.25988483428955
    7. '   ' → logprob: -12.13488483428955
    8. 'rost' → logprob: -13.38488483428955
    9. ' ' → logprob: -13.63488483428955
    10. 'rott' → logprob: -14.00988483428955

Token 331: 'ts' (ID: 1561)
  Prédit: 'ts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -1.0683535037969705e-05
    2. 'tsx' → logprob: -11.62501049041748
    3. 't' → logprob: -14.37501049041748
    4. 'tts' → logprob: -15.37501049041748
    5. ' ts' → logprob: -15.62501049041748
    6. '```' → logprob: -16.250011444091797
    7. 'tsy' → logprob: -16.500011444091797
    8. '{' → logprob: -16.875011444091797
    9. 'tsa' → logprob: -17.000011444091797
    10. '(ts' → logprob: -17.000011444091797

Token 332: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28475743532180786
    2. ':
' → logprob: -1.409757375717163
    3. '       ' → logprob: -6.034757614135742
    4. '   ' → logprob: -7.159757614135742
    5. '):
' → logprob: -8.659757614135742
    6. '():
' → logprob: -9.159757614135742
    7. ' if' → logprob: -10.159757614135742
    8. ',' → logprob: -10.159757614135742
    9. ' in' → logprob: -11.034757614135742
    10. ':

' → logprob: -11.659757614135742

Token 333: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031145168468356133
    2. ' if' → logprob: -3.5311450958251953
    3. '   ' → logprob: -6.781145095825195
    4. 'if' → logprob: -8.906145095825195
    5. '<|end|>' → logprob: -9.531145095825195
    6. '```' → logprob: -11.281145095825195
    7. ',' → logprob: -11.656145095825195
    8. '<|end|>' → logprob: -12.281145095825195
    9. '[' → logprob: -12.656145095825195
    10. '	   ' → logprob: -12.656145095825195

Token 334: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.13676059246063232
    2. ' if' → logprob: -2.136760711669922
    3. '       ' → logprob: -4.636760711669922
    4. '   ' → logprob: -9.511760711669922
    5. 'key' → logprob: -11.511760711669922
    6. ' key' → logprob: -12.136760711669922
    7. '	if' → logprob: -12.261760711669922
    8. 'token' → logprob: -15.261760711669922
    9. ' ' → logprob: -15.636760711669922
    10. '           ' → logprob: -16.011760711669922

Token 335: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.474077433347702
    2. 'r' → logprob: -0.9740774631500244
    3. ' not' → logprob: -14.599077224731445
    4. 'not' → logprob: -17.474077224731445
    5. ' tuple' → logprob: -17.849077224731445
    6. ' ' → logprob: -18.099077224731445
    7. '(r' → logprob: -18.849077224731445
    8. 'tuple' → logprob: -19.099077224731445
    9. ' ' → logprob: -19.724077224731445
    10. '	r' → logprob: -19.724077224731445

Token 336: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.12692978978157043
    2. 'not' → logprob: -2.126929759979248
    3. '	not' → logprob: -14.126930236816406
    4. ')' → logprob: -14.501930236816406
    5. ' in' → logprob: -15.626930236816406
    6. 'in' → logprob: -16.126930236816406
    7. '_not' → logprob: -16.376930236816406
    8. ':not' → logprob: -16.751930236816406
    9. '<|end|>' → logprob: -17.626930236816406
    10. '(not' → logprob: -18.001930236816406

Token 337: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2519724369049072
    2. 'in' → logprob: -1.5019724369049072
    3. 'seen' → logprob: -10.626972198486328
    4. ' seen' → logprob: -11.001972198486328
    5. '   ' → logprob: -14.126972198486328
    6. ' ' → logprob: -14.626972198486328
    7. '	in' → logprob: -15.001972198486328
    8. ')' → logprob: -15.501972198486328
    9. '_seen' → logprob: -15.501972198486328
    10. 'to' → logprob: -16.376972198486328

Token 338: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' → logprob: -0.0059289163909852505
    2. ' seen' → logprob: -5.130928993225098
    3. '   ' → logprob: -16.38092803955078
    4. '
' → logprob: -16.50592803955078
    5. ' ' → logprob: -17.25592803955078
    6. 'see' → logprob: -17.25592803955078
    7. 'se' → logprob: -17.63092803955078
    8. '_seen' → logprob: -18.25592803955078
    9. 'visited' → logprob: -18.50592803955078
    10. 'shown' → logprob: -18.88092803955078

Token 339: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.0847570076584816
    2. ':' → logprob: -2.584757089614868
    3. '           ' → logprob: -5.334756851196289
    4. '):
' → logprob: -7.459756851196289
    5. '       ' → logprob: -8.334756851196289
    6. ',' → logprob: -9.709756851196289
    7. ' :
' → logprob: -10.459756851196289
    8. '   ' → logprob: -10.959756851196289
    9. ':
' → logprob: -11.084756851196289
    10. '):' → logprob: -11.209756851196289

Token 340: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.3458322731312364e-06
    2. 'se' → logprob: -13.250007629394531
    3. '	       ' → logprob: -13.375007629394531
    4. '<|end|>' → logprob: -14.375007629394531
    5. '               ' → logprob: -14.500007629394531
    6. '            
' → logprob: -14.500007629394531
    7. '          ' → logprob: -15.000007629394531
    8. 'seen' → logprob: -15.125007629394531
    9. '
' → logprob: -15.250007629394531
    10. '```' → logprob: -15.250007629394531

Token 341: ' seen' (ID: 6177)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8156178593635559
    2. ' seen' → logprob: -0.8156178593635559
    3. 'seen' (adapté à ' seen') → logprob: -2.690617799758911
    4. '               ' → logprob: -3.065617799758911
    5. 'se' → logprob: -8.315617561340332
    6. '_seen' → logprob: -8.690617561340332
    7. '       ' → logprob: -9.065617561340332
    8. ' unseen' → logprob: -9.815617561340332
    9. ' uniq' → logprob: -9.815617561340332
    10. '```' → logprob: -10.565617561340332

Token 342: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0001831565605243668
    2. '.' → logprob: -8.62518310546875
    3. 'add' → logprob: -12.75018310546875
    4. ' .' → logprob: -14.75018310546875
    5. ' add' → logprob: -15.62518310546875
    6. '.Add' → logprob: -16.75018310546875
    7. '_add' → logprob: -17.50018310546875
    8. ')add' → logprob: -17.50018310546875
    9. '           ' → logprob: -17.62518310546875
    10. ':add' → logprob: -18.37518310546875

Token 343: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -12.87500286102295
    3. '(
' → logprob: -16.625001907348633
    4. ' (' → logprob: -19.500001907348633
    5. '((' → logprob: -20.500001907348633
    6. '(

' → logprob: -21.750001907348633
    7. '(re' → logprob: -22.625001907348633
    8. ' r' → logprob: -23.250001907348633
    9. '(s' → logprob: -23.375001907348633
    10. 'r' → logprob: -23.500001907348633

Token 344: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2079973816871643
    2. '           ' → logprob: -1.8329973220825195
    3. ')' → logprob: -3.5829973220825195
    4. ')
' → logprob: -10.58299732208252
    5. '       ' → logprob: -10.70799732208252
    6. ',' → logprob: -12.70799732208252
    7. 'r' → logprob: -13.20799732208252
    8. '               ' → logprob: -13.20799732208252
    9. '')
' → logprob: -13.33299732208252
    10. '   ' → logprob: -13.58299732208252

Token 345: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004444931691978127
    2. 'uniq' → logprob: -9.000444412231445
    3. '```' → logprob: -9.000444412231445
    4. ' uniq' → logprob: -9.500444412231445
    5. '       ' → logprob: -10.500444412231445
    6. '	       ' → logprob: -10.625444412231445
    7. '		' → logprob: -10.750444412231445
    8. '<|end|>' → logprob: -11.250444412231445
    9. ',' → logprob: -12.000444412231445
    10. '<|end|>' → logprob: -12.375444412231445

Token 346: ' uniq' (ID: 130316)
  Prédit: 'uniq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uniq' (adapté à ' uniq') → logprob: -0.13968336582183838
    2. ' uniq' → logprob: -2.264683246612549
    3. '           ' → logprob: -3.889683246612549
    4. '   ' → logprob: -5.639683246612549
    5. '       ' → logprob: -6.389683246612549
    6. '               ' → logprob: -7.389683246612549
    7. 'uni' → logprob: -9.014683723449707
    8. ' unique' → logprob: -11.139683723449707
    9. '```' → logprob: -11.139683723449707
    10. 'unique' → logprob: -11.764683723449707

Token 347: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.006720347795635462
    2. '.' → logprob: -5.006720542907715
    3. '.app' → logprob: -12.506720542907715
    4. '.ap' → logprob: -14.756720542907715
    5. 'append' → logprob: -14.881720542907715
    6. '.Append' → logprob: -15.381720542907715
    7. '.extend' → logprob: -16.3817195892334
    8. ' .' → logprob: -16.3817195892334
    9. '.
' → logprob: -18.0067195892334
    10. '.APP' → logprob: -18.0067195892334

Token 348: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -12.625003814697266
    3. '(
' → logprob: -18.000003814697266
    4. '((' → logprob: -21.750003814697266
    5. ' (' → logprob: -22.000003814697266
    6. '(re' → logprob: -22.500003814697266
    7. 'r' → logprob: -23.000003814697266
    8. '(

' → logprob: -23.375003814697266
    9. '[r' → logprob: -23.750003814697266
    10. '=r' → logprob: -23.750003814697266

Token 349: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010950337309623137
    2. ')
' → logprob: -9.125109672546387
    3. ')return' → logprob: -14.625109672546387
    4. '   ' → logprob: -16.87510871887207
    5. ' )' → logprob: -17.37510871887207
    6. '       ' → logprob: -17.62510871887207
    7. ')

' → logprob: -18.00010871887207
    8. ')
' → logprob: -18.25010871887207
    9. '),' → logprob: -19.00010871887207
    10. '`)' → logprob: -19.12510871887207

Token 350: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.723973582556937e-05
    2. 'return' → logprob: -11.500017166137695
    3. '	return' → logprob: -13.250017166137695
    4. '<|end|>' → logprob: -13.375017166137695
    5. '    
' → logprob: -13.875017166137695
    6. ' return' → logprob: -14.000017166137695
    7. '
' → logprob: -14.500017166137695
    8. '```' → logprob: -14.750017166137695
    9. ':return' → logprob: -15.000017166137695
    10. '       ' → logprob: -15.000017166137695

Token 351: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06202986463904381
    2. 'return' (adapté à ' return') → logprob: -2.8120298385620117
    3. ' return' → logprob: -9.937029838562012
    4. '```' → logprob: -12.187029838562012
    5. ':return' → logprob: -12.812029838562012
    6. '	return' → logprob: -12.937029838562012
    7. '    
' → logprob: -13.812029838562012
    8. '       ' → logprob: -14.187029838562012
    9. '{return' → logprob: -15.187029838562012
    10. '<|end|>' → logprob: -15.187029838562012

Token 352: ' uniq' (ID: 130316)
  Prédit: 'uniq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uniq' → logprob: -0.0011765359668061137
    2. ' uniq' → logprob: -6.751176357269287
    3. 'uni' → logprob: -12.001176834106445
    4. 'unique' → logprob: -16.251176834106445
    5. ' ' → logprob: -16.751176834106445
    6. '   ' → logprob: -17.751176834106445
    7. 'unic' → logprob: -18.001176834106445
    8. 'unik' → logprob: -18.376176834106445
    9. 'unk' → logprob: -18.626176834106445
    10. '  ' → logprob: -19.126176834106445

Token 353: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 354: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0034783126320689917
    2. '#' → logprob: -6.003478527069092
    3. '
' → logprob: -7.878478527069092
    4. '<|end|>' → logprob: -8.503478050231934
    5. '```' → logprob: -9.503478050231934
    6. 'for' → logprob: -9.878478050231934
    7. '    
' → logprob: -10.003478050231934
    8. 'n' → logprob: -10.128478050231934
    9. '  
' → logprob: -10.503478050231934
    10. '\n' → logprob: -10.753478050231934

Token 355: ' min' (ID: 1349)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.9558846950531006
    2. ' is' → logprob: -1.8308846950531006
    3. ' solve' → logprob: -1.8308846950531006
    4. ' all' → logprob: -2.8308846950531006
    5. ' color' → logprob: -2.8308846950531006
    6. ' cube' → logprob: -3.3308846950531006
    7. ' get' → logprob: -3.4558846950531006
    8. ' check' → logprob: -3.5808846950531006
    9. ' compare' → logprob: -3.8308846950531006
    10. ' find' → logprob: -4.33088493347168

Token 356: '_re' (ID: 3067)
  Prédit: '_orientation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_orientation' → logprob: -0.09896419942378998
    2. '_cube' → logprob: -2.973964214324951
    3. '_face' → logprob: -4.348964214324951
    4. '_rotation' → logprob: -4.723964214324951
    5. 'imal' → logprob: -5.348964214324951
    6. '_config' → logprob: -5.598964214324951
    7. '_configuration' → logprob: -5.973964214324951
    8. '_or' → logprob: -6.348964214324951
    9. '_color' → logprob: -6.723964214324951
    10. '_hash' → logprob: -6.973964214324951

Token 357: 'pa' (ID: 3899)
  Prédit: 'presentation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'presentation' → logprob: -0.7299731373786926
    2. 'pr' → logprob: -0.8549731373786926
    3. 'orientation' → logprob: -3.354973077774048
    4. 'p' → logprob: -3.354973077774048
    5. 'present' → logprob: -3.854973077774048
    6. 'pres' → logprob: -7.229973316192627
    7. 'm' → logprob: -8.354972839355469
    8. 'r' → logprob: -8.729972839355469
    9. '_orientation' → logprob: -8.729972839355469
    10. 'orient' → logprob: -9.104972839355469

Token 358: 'ints' (ID: 20448)
  Prédit: 'ir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.016384124755859375
    2. 'r' → logprob: -4.766384124755859
    3. 'ck' → logprob: -5.016384124755859
    4. 'cker' → logprob: -8.76638412475586
    5. 'resentation' → logprob: -8.89138412475586
    6. 're' → logprob: -9.01638412475586
    7. 'ired' → logprob: -9.51638412475586
    8. 't' → logprob: -9.64138412475586
    9. 'irm' → logprob: -9.76638412475586
    10. 'ction' → logprob: -9.76638412475586

Token 359: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0045136697590351105
    2. '(' → logprob: -5.504513740539551
    3. '(color' → logprob: -9.12951374053955
    4. '(s' → logprob: -9.25451374053955
    5. '(face' → logprob: -9.25451374053955
    6. '(a' → logprob: -10.62951374053955
    7. '(state' → logprob: -11.25451374053955
    8. '(colors' → logprob: -11.25451374053955
    9. '((' → logprob: -11.37951374053955
    10. '(tuple' → logprob: -11.75451374053955

Token 360: 'ubes' (ID: 68551)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47438907623291016
    2. '):
' → logprob: -0.9743890762329102
    3. '(c' → logprob: -8.47438907623291
    4. '):
' → logprob: -9.84938907623291
    5. '):

' → logprob: -11.47438907623291
    6. 'c' → logprob: -11.59938907623291
    7. ',c' → logprob: -11.59938907623291
    8. '   ' → logprob: -11.59938907623291
    9. ':' → logprob: -12.59938907623291
    10. ')' → logprob: -12.97438907623291

Token 361: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.028848448768258095
    2. '):
' → logprob: -4.028848648071289
    3. ' ):' → logprob: -4.903848648071289
    4. ',' → logprob: -6.528848648071289
    5. ',c' → logprob: -6.903848648071289
    6. '(c' → logprob: -7.528848648071289
    7. '   ' → logprob: -9.278848648071289
    8. ' ):
' → logprob: -9.778848648071289
    9. ')' → logprob: -10.528848648071289
    10. '):
' → logprob: -11.153848648071289

Token 362: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018361835973337293
    2. '```' → logprob: -7.00183629989624
    3. '    ' → logprob: -7.75183629989624
    4. ' n' → logprob: -9.126835823059082
    5. ' rep' → logprob: -9.376835823059082
    6. '
' → logprob: -10.126835823059082
    7. '    
' → logprob: -10.251835823059082
    8. ' count' → logprob: -10.376835823059082
    9. '``' → logprob: -10.501835823059082
    10. ' counts' → logprob: -10.501835823059082

Token 363: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49266430735588074
    2. ' n' → logprob: -1.6176643371582031
    3. ' min' → logprob: -1.8676643371582031
    4. 'min' → logprob: -4.367664337158203
    5. 'n' (adapté à ' n') → logprob: -4.617664337158203
    6. ' best' → logprob: -4.742664337158203
    7. ' res' → logprob: -6.367664337158203
    8. ' all' → logprob: -6.867664337158203
    9. 'best' → logprob: -7.242664337158203
    10. 'all' → logprob: -8.742664337158203

Token 364: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11290397495031357
    2. '=' → logprob: -2.2379040718078613
    3. ' ' → logprob: -9.987903594970703
    4. ',' → logprob: -11.237903594970703
    5. '=len' → logprob: -12.487903594970703
    6. '  ' → logprob: -12.612903594970703
    7. ')' → logprob: -12.612903594970703
    8. '=int' → logprob: -12.737903594970703
    9. ' ,' → logprob: -12.987903594970703
    10. '   ' → logprob: -12.987903594970703

Token 365: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.029751179739832878
    2. 'len' → logprob: -3.5297510623931885
    3. '(len' → logprob: -14.40475082397461
    4. '=len' → logprob: -16.65475082397461
    5. '	len' → logprob: -18.02975082397461
    6. '[len' → logprob: -18.02975082397461
    7. ' cubes' → logprob: -19.40475082397461
    8. ',len' → logprob: -19.65475082397461
    9. '   ' → logprob: -20.15475082397461
    10. ' ' → logprob: -20.40475082397461

Token 366: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -7.707997428951785e-05
    2. '(' → logprob: -9.875077247619629
    3. 'c' → logprob: -10.625077247619629
    4. ' (' → logprob: -14.000077247619629
    5. ')c' → logprob: -15.375077247619629
    6. '(n' → logprob: -16.125076293945312
    7. ' cubes' → logprob: -17.375076293945312
    8. '(
' → logprob: -17.375076293945312
    9. ')' → logprob: -18.000076293945312
    10. '	c' → logprob: -18.125076293945312

Token 367: 'ubes' (ID: 68551)
  Prédit: 'ubes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ubes' → logprob: -0.0026188241317868233
    2. 'c' → logprob: -6.127618789672852
    3. ')' → logprob: -8.252618789672852
    4. '   ' → logprob: -9.752618789672852
    5. ' cubes' → logprob: -10.127618789672852
    6. '(c' → logprob: -11.002618789672852
    7. 'ub' → logprob: -11.127618789672852
    8. 'ube' → logprob: -11.377618789672852
    9. ')c' → logprob: -12.002618789672852
    10. '```' → logprob: -12.127618789672852

Token 368: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027449538931250572
    2. ')
' → logprob: -3.652449607849121
    3. '   ' → logprob: -6.777449607849121
    4. ' )' → logprob: -12.527449607849121
    5. '):
' → logprob: -13.527449607849121
    6. ')n' → logprob: -14.027449607849121
    7. 'def' → logprob: -14.152449607849121
    8. ')
' → logprob: -14.652449607849121
    9. ')c' → logprob: -14.777449607849121
    10. ' ' → logprob: -14.777449607849121

Token 369: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.4153549020411447e-05
    2. '    
' → logprob: -11.50002384185791
    3. '```' → logprob: -12.75002384185791
    4. '   ' → logprob: -12.87502384185791
    5. '
' → logprob: -13.12502384185791
    6. 'min' → logprob: -14.00002384185791
    7. 'dp' → logprob: -14.25002384185791
    8. 'colors' → logprob: -14.37502384185791
    9. 'max' → logprob: -14.37502384185791
    10. 'total' → logprob: -14.50002384185791

Token 370: ' all' (ID: 722)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.10541658103466034
    2. 'dp' → logprob: -3.4804165363311768
    3. 'res' → logprob: -3.6054165363311768
    4. '   ' → logprob: -4.230416774749756
    5. 'best' → logprob: -4.605416774749756
    6. 'colors' → logprob: -5.355416774749756
    7. 'total' → logprob: -5.980416774749756
    8. ' min' → logprob: -6.105416774749756
    9. 'all' (adapté à ' all') → logprob: -6.730416774749756
    10. ' res' → logprob: -6.730416774749756

Token 371: '_ro' (ID: 65472)
  Prédit: '_or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_or' → logprob: -0.7432162761688232
    2. '_rot' → logprob: -1.4932162761688232
    3. '_c' → logprob: -2.1182162761688232
    4. '_faces' → logprob: -2.4932162761688232
    5. '_colors' → logprob: -2.8682162761688232
    6. ' =' → logprob: -4.118216514587402
    7. '=' → logprob: -4.243216514587402
    8. '   ' → logprob: -6.493216514587402
    9. '_re' → logprob: -6.743216514587402
    10. 'c' → logprob: -6.868216514587402

Token 372: 'ts' (ID: 1561)
  Prédit: 'ts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.005965414922684431
    2. 't' → logprob: -5.130965232849121
    3. 'tsx' → logprob: -10.755965232849121
    4. 'tts' → logprob: -11.255965232849121
    5. 'ots' → logprob: -14.380965232849121
    6. 'tas' → logprob: -14.380965232849121
    7. '_ts' → logprob: -15.130965232849121
    8. 'tx' → logprob: -15.130965232849121
    9. '```' → logprob: -15.755965232849121
    10. '=' → logprob: -15.755965232849121

Token 373: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05880408734083176
    2. ' =' → logprob: -2.9338040351867676
    3. '=[]' → logprob: -5.558804035186768
    4. 's' → logprob: -11.183804512023926
    5. '   ' → logprob: -11.808804512023926
    6. ')' → logprob: -11.808804512023926
    7. '(' → logprob: -12.058804512023926
    8. '[]' → logprob: -12.183804512023926
    9. '=[]
' → logprob: -12.308804512023926
    10. ']' → logprob: -12.558804512023926

Token 374: ' [' (ID: 723)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.3157269060611725
    2. '[' → logprob: -1.31572687625885
    3. '[list' → logprob: -6.5657267570495605
    4. '[]
' → logprob: -7.0657267570495605
    5. ' [' → logprob: -10.065727233886719
    6. '[[' → logprob: -10.565727233886719
    7. '[i' → logprob: -10.815727233886719
    8. '[array' → logprob: -11.065727233886719
    9. '[n' → logprob: -11.440727233886719
    10. '[class' → logprob: -11.815727233886719

Token 375: 'rot' (ID: 8150)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3927525281906128
    2. 'rot' → logprob: -1.1427525281906128
    3. '[]' → logprob: -6.142752647399902
    4. ' [' → logprob: -6.517752647399902
    5. '[c' → logprob: -7.142752647399902
    6. '[r' → logprob: -8.142752647399902
    7. 'list' → logprob: -8.767752647399902
    8. '[i' → logprob: -8.892752647399902
    9. '[]
' → logprob: -9.142752647399902
    10. ']' → logprob: -9.142752647399902

Token 376: 'ations' (ID: 929)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.19549594819545746
    2. 'ations' → logprob: -2.195495843887329
    3. '[c' → logprob: -2.945495843887329
    4. '[' → logprob: -5.070496082305908
    5. ' for' → logprob: -5.945496082305908
    6. '(c' → logprob: -6.320496082305908
    7. '[[' → logprob: -7.570496082305908
    8. ' =' → logprob: -7.945496082305908
    9. 'set' → logprob: -8.32049560546875
    10. 'ation' → logprob: -8.32049560546875

Token 377: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00011367550177965313
    2. 'cube' → logprob: -10.000113487243652
    3. '](' → logprob: -10.500113487243652
    4. ']' → logprob: -11.500113487243652
    5. ' (' → logprob: -11.750113487243652
    6. '(' → logprob: -11.875113487243652
    7. '(ci' → logprob: -11.875113487243652
    8. '(x' → logprob: -12.625113487243652
    9. ' cube' → logprob: -13.500113487243652
    10. ')(' → logprob: -14.625113487243652

Token 378: 'ube' (ID: 4502)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007331287022680044
    2. 'c' → logprob: -5.632331371307373
    3. '(c' → logprob: -6.507331371307373
    4. 'cube' → logprob: -6.757331371307373
    5. ' cubes' → logprob: -7.257331371307373
    6. ')c' → logprob: -8.382330894470215
    7. ' cube' → logprob: -9.882330894470215
    8. '[c' → logprob: -10.257330894470215
    9. ' )' → logprob: -11.007330894470215
    10. 'cub' → logprob: -12.132330894470215

Token 379: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.451116051815916e-05
    2. '[i' → logprob: -10.750024795532227
    3. '[' → logprob: -13.125024795532227
    4. ')
' → logprob: -14.875024795532227
    5. ' )' → logprob: -15.000024795532227
    6. '[c' → logprob: -16.250024795532227
    7. ')[' → logprob: -16.500024795532227
    8. '   ' → logprob: -16.625024795532227
    9. '))' → logprob: -17.125024795532227
    10. ')]' → logprob: -17.250024795532227

Token 380: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.00438549043610692
    2. '   ' → logprob: -6.004385471343994
    3. 'for' → logprob: -6.379385471343994
    4. '	for' → logprob: -9.254385948181152
    5. ')' → logprob: -10.129385948181152
    6. '[' → logprob: -10.754385948181152
    7. '[:]' → logprob: -11.004385948181152
    8. '    ' → logprob: -11.379385948181152
    9. ']' → logprob: -11.504385948181152
    10. ' ' → logprob: -11.504385948181152

Token 381: ' cube' (ID: 46822)
  Prédit: ' cube'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cube' → logprob: -0.31327563524246216
    2. 'cube' → logprob: -1.3132755756378174
    3. 'c' → logprob: -11.438275337219238
    4. '_cube' → logprob: -13.438275337219238
    5. 'cub' → logprob: -14.688275337219238
    6. ' cubes' → logprob: -14.938275337219238
    7. ' ' → logprob: -15.063275337219238
    8. ' ' → logprob: -15.938275337219238
    9. ' cubic' → logprob: -16.063276290893555
    10. 'Cube' → logprob: -16.438276290893555

Token 382: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029773863032460213
    2. 'in' → logprob: -3.5297739505767822
    3. 'cube' → logprob: -11.904773712158203
    4. ')' → logprob: -12.029773712158203
    5. '	in' → logprob: -12.779773712158203
    6. ' ' → logprob: -13.154773712158203
    7. 's' → logprob: -13.654773712158203
    8. ' cube' → logprob: -13.904773712158203
    9. 'import' → logprob: -14.154773712158203
    10. 'n' → logprob: -14.404773712158203

Token 383: ' cubes' (ID: 88455)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10020828247070312
    2. ' cubes' → logprob: -2.350208282470703
    3. 'cube' → logprob: -13.850208282470703
    4. 'cub' → logprob: -15.350208282470703
    5. '   ' → logprob: -15.725208282470703
    6. ' ' → logprob: -15.850208282470703
    7. ')c' → logprob: -16.725208282470703
    8. '	c' → logprob: -17.225208282470703
    9. 'range' → logprob: -17.225208282470703
    10. '(c' → logprob: -17.225208282470703

Token 384: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004724987084046006
    2. '   ' → logprob: -7.875472545623779
    3. ']
' → logprob: -9.500472068786621
    4. ' ]' → logprob: -11.125472068786621
    5. ')]' → logprob: -13.625472068786621
    6. ')' → logprob: -13.875472068786621
    7. '`]' → logprob: -15.750472068786621
    8. '
' → logprob: -15.750472068786621
    9. ']
' → logprob: -16.000473022460938
    10. ']

' → logprob: -16.875473022460938

Token 385: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.058869052678346634
    2. '   ' → logprob: -2.9338691234588623
    3. '    
' → logprob: -5.683868885040283
    4. '   
' → logprob: -9.058869361877441
    5. ' 
' → logprob: -9.058869361877441
    6. '```' → logprob: -9.058869361877441
    7. '  
' → logprob: -9.308869361877441
    8. '
' → logprob: -10.183869361877441
    9. '<|end|>' → logprob: -10.683869361877441
    10. ',
' → logprob: -11.433869361877441

Token 386: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006818146910518408
    2. '   ' → logprob: -5.1318182945251465
    3. '    
' → logprob: -7.2568182945251465
    4. ',
' → logprob: -10.256817817687988
    5. '  
' → logprob: -10.381817817687988
    6. ' 
' → logprob: -10.506817817687988
    7. '   
' → logprob: -10.631817817687988
    8. '
' → logprob: -10.881817817687988
    9. '```' → logprob: -11.381817817687988
    10. ',' → logprob: -11.631817817687988

Token 387: ' list' (ID: 1562)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.5556484460830688
    2. 'all' → logprob: -1.8056484460830688
    3. '#' → logprob: -1.9306484460830688
    4. ' min' → logprob: -2.1806483268737793
    5. ' res' → logprob: -2.5556483268737793
    6. '   ' → logprob: -3.0556483268737793
    7. ' repaint' → logprob: -3.1806483268737793
    8. 'min' → logprob: -3.4306483268737793
    9. ' #' → logprob: -3.5556483268737793
    10. ' total' → logprob: -4.055648326873779

Token 388: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5988104343414307
    2. '[' → logprob: -0.9738104343414307
    3. 'of' → logprob: -3.7238104343414307
    4. '=' → logprob: -4.223810195922852
    5. '[]' → logprob: -4.973810195922852
    6. '=[]' → logprob: -5.473810195922852
    7. ')' → logprob: -5.473810195922852
    8. '(' → logprob: -5.473810195922852
    9. '<|end|>' → logprob: -6.223810195922852
    10. '   ' → logprob: -6.348810195922852

Token 389: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2860189974308014
    2. '[[' → logprob: -2.9110190868377686
    3. '[list' → logprob: -3.0360190868377686
    4. ' lists' → logprob: -3.2860190868377686
    5. 'lists' → logprob: -3.4110190868377686
    6. 'all' → logprob: -3.4110190868377686
    7. ' list' → logprob: -3.9110190868377686
    8. 'rot' → logprob: -4.6610188484191895
    9. '[' → logprob: -5.5360188484191895
    10. '[]' → logprob: -6.0360188484191895

Token 390: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.3080558180809021
    2. '[' → logprob: -1.5580558776855469
    3. 'of' → logprob: -3.683055877685547
    4. '[
' → logprob: -5.183055877685547
    5. '[int' → logprob: -5.683055877685547
    6. '_of' → logprob: -5.683055877685547
    7. '[List' → logprob: -5.933055877685547
    8. '<|end|>' → logprob: -6.183055877685547
    9. '[list' → logprob: -6.308055877685547
    10. ')' → logprob: -6.433055877685547

Token 391: ' ' (ID: 220)
  Prédit: 'rot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.873879075050354
    2. 'orient' → logprob: -1.373879075050354
    3. 'tu' → logprob: -2.3738789558410645
    4. 'c' → logprob: -2.7488789558410645
    5. 'cube' → logprob: -2.8738789558410645
    6. 'tuple' → logprob: -3.1238789558410645
    7. ' tuples' → logprob: -3.7488789558410645
    8. 'all' → logprob: -3.8738789558410645
    9. 'or' → logprob: -4.3738789558410645
    10. ' orientations' → logprob: -4.9988789558410645

Token 392: '24' (ID: 1494)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.2169833183288574
    2. 'orient' → logprob: -1.5919833183288574
    3. 'tu' → logprob: -1.7169833183288574
    4. 'cube' → logprob: -1.8419833183288574
    5. 'tuple' → logprob: -2.3419833183288574
    6. 'rot' → logprob: -2.9669833183288574
    7. 'or' → logprob: -4.966983318328857
    8. ' tuples' → logprob: -5.341983318328857
    9. ' orientations' → logprob: -6.966983318328857
    10. 'all' → logprob: -7.591983318328857

Token 393: ' tuples' (ID: 112464)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3000543713569641
    2. 'c' → logprob: -2.5500543117523193
    3. 'orient' → logprob: -3.0500543117523193
    4. 's' → logprob: -3.4250543117523193
    5. ' tuples' → logprob: -3.4250543117523193
    6. ')c' → logprob: -3.9250543117523193
    7. 'or' → logprob: -4.175054550170898
    8. ' orientations' → logprob: -4.800054550170898
    9. '_rot' → logprob: -5.800054550170898
    10. 'rot' → logprob: -5.800054550170898

Token 394: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02846304327249527
    2. '
' → logprob: -3.653463125228882
    3. '    
' → logprob: -6.278462886810303
    4. '```' → logprob: -9.903463363647461
    5. 'total' → logprob: -10.403463363647461
    6. 'min' → logprob: -10.528463363647461
    7. ',' → logprob: -10.653463363647461
    8. ' total' → logprob: -11.028463363647461
    9. '   
' → logprob: -11.028463363647461
    10. '<|end|>' → logprob: -11.028463363647461

Token 395: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04436008259654045
    2. '
' → logprob: -3.1693601608276367
    3. 'min' → logprob: -7.669360160827637
    4. '```' → logprob: -8.044360160827637
    5. ' min' → logprob: -8.669360160827637
    6. '    
' → logprob: -8.794360160827637
    7. 'max' → logprob: -9.919360160827637
    8. 'dp' → logprob: -10.544360160827637
    9. ' max' → logprob: -10.544360160827637
    10. ' res' → logprob: -10.669360160827637

Token 396: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.8461856245994568
    2. 'dp' → logprob: -1.0961856842041016
    3. '   ' → logprob: -1.5961856842041016
    4. 'res' → logprob: -4.471185684204102
    5. ' min' → logprob: -5.096185684204102
    6. ' res' → logprob: -5.221185684204102
    7. 'best' → logprob: -5.346185684204102
    8. ' dp' → logprob: -5.846185684204102
    9. 'cost' → logprob: -6.721185684204102
    10. 'ans' → logprob: -7.596185684204102

Token 397: '_cost' (ID: 36820)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.15704433619976044
    2. '_cost' → logprob: -2.0320444107055664
    3. '_' → logprob: -5.407044410705566
    4. '_total' → logprob: -5.532044410705566
    5. '_p' → logprob: -6.032044410705566
    6. '_rep' → logprob: -6.407044410705566
    7. '_changes' → logprob: -7.407044410705566
    8. '_count' → logprob: -7.532044410705566
    9. '_diff' → logprob: -9.157044410705566
    10. '_ops' → logprob: -9.157044410705566

Token 398: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.313268780708313
    2. ' =' → logprob: -1.313268780708313
    3. 's' → logprob: -11.938268661499023
    4. '_' → logprob: -15.563268661499023
    5. '=[]' → logprob: -16.188268661499023
    6. '   ' → logprob: -16.438268661499023
    7. ',' → logprob: -16.813268661499023
    8. ' ' → logprob: -17.063268661499023
    9. '  ' → logprob: -17.438268661499023
    10. '=int' → logprob: -17.688268661499023

Token 399: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.037118617445230484
    2. '10' → logprob: -3.787118673324585
    3. ' float' → logprob: -4.287118434906006
    4. 'int' → logprob: -11.412118911743164
    5. ' ' → logprob: -11.537118911743164
    6. 'n' → logprob: -11.537118911743164
    7. '1' → logprob: -14.037118911743164
    8. 'sum' → logprob: -14.287118911743164
    9. ' n' → logprob: -14.912118911743164
    10. '100' → logprob: -15.662118911743164

Token 400: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.5523618459701538
    2. ''in' → logprob: -1.0523618459701538
    3. ''' → logprob: -2.8023619651794434
    4. ''inc' → logprob: -5.552361965179443
    5. ''import' → logprob: -6.677361965179443
    6. ''s' → logprob: -7.052361965179443
    7. ''op' → logprob: -7.177361965179443
    8. ''il' → logprob: -7.552361965179443
    9. ''ins' → logprob: -7.677361965179443
    10. ''ap' → logprob: -7.927361965179443

Token 401: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.2664456789934775e-06
    2. ''in' → logprob: -13.875000953674316
    3. ''' → logprob: -15.625000953674316
    4. ' inf' → logprob: -17.250001907348633
    5. 'info' → logprob: -17.625001907348633
    6. 'in' → logprob: -18.000001907348633
    7. '.inf' → logprob: -18.375001907348633
    8. '_inf' → logprob: -18.375001907348633
    9. '-inf' → logprob: -18.500001907348633
    10. 'INF' → logprob: -20.375001907348633

Token 402: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003663212701212615
    2. ' )' → logprob: -8.3753662109375
    3. ')
' → logprob: -9.1253662109375
    4. '   ' → logprob: -11.0003662109375
    5. '')' → logprob: -11.6253662109375
    6. ' )
' → logprob: -14.7503662109375
    7. ' ' → logprob: -15.8753662109375
    8. 'def' → logprob: -16.1253662109375
    9. ')
' → logprob: -16.2503662109375
    10. 'for' → logprob: -16.5003662109375

Token 403: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005194028373807669
    2. '
' → logprob: -5.880194187164307
    3. '    
' → logprob: -6.130194187164307
    4. ' for' → logprob: -8.880193710327148
    5. 'for' → logprob: -10.130193710327148
    6. '   
' → logprob: -11.505193710327148
    7. ' 
' → logprob: -12.255193710327148
    8. '  
' → logprob: -12.380193710327148
    9. '<|end|>' → logprob: -12.630193710327148
    10. '	
' → logprob: -13.505193710327148

Token 404: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25443679094314575
    2. '
' → logprob: -2.379436731338501
    3. '   ' → logprob: -2.629436731338501
    4. 'for' → logprob: -2.879436731338501
    5. ' 
' → logprob: -6.25443696975708
    6. '    
' → logprob: -6.37943696975708
    7. '   
' → logprob: -9.504436492919922
    8. '     
' → logprob: -11.254436492919922
    9. '```' → logprob: -11.629436492919922
    10. '  
' → logprob: -11.754436492919922

Token 405: ' Choose' (ID: 25151)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0014789171982556581
    2. '   ' → logprob: -6.626479148864746
    3. ' for' → logprob: -9.001479148864746
    4. '#' → logprob: -11.126479148864746
    5. 'from' → logprob: -12.001479148864746
    6. 'colors' → logprob: -12.251479148864746
    7. 'faces' → logprob: -13.126479148864746
    8. '
' → logprob: -14.376479148864746
    9. 'color' → logprob: -14.751479148864746
    10. 'face' → logprob: -14.876479148864746

Token 406: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3916932344436646
    2. ' for' → logprob: -2.391693115234375
    3. ' top' → logprob: -2.516693115234375
    4. ' color' → logprob: -2.516693115234375
    5. 'top' → logprob: -2.891693115234375
    6. 'color' → logprob: -2.891693115234375
    7. '   ' → logprob: -3.141693115234375
    8. ' center' → logprob: -3.266693115234375
    9. ' base' → logprob: -3.391693115234375
    10. 'i' → logprob: -3.516693115234375

Token 407: ' each' (ID: 2454)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -1.1812835931777954
    2. 'i' → logprob: -2.056283473968506
    3. 'center' → logprob: -2.181283473968506
    4. 'base' → logprob: -2.556283473968506
    5. 'face' → logprob: -2.556283473968506
    6. ' top' → logprob: -2.806283473968506
    7. 'target' → logprob: -3.056283473968506
    8. ' center' → logprob: -3.181283473968506
    9. 'color' → logprob: -3.556283473968506
    10. '   ' → logprob: -4.056283473968506

Token 408: ' cube' (ID: 46822)
  Prédit: 'cube'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cube' → logprob: -0.1671779453754425
    2. ' cube' → logprob: -1.9171779155731201
    3. 'i' → logprob: -5.167178153991699
    4. ' i' → logprob: -6.792178153991699
    5. '_cube' → logprob: -10.6671781539917
    6. 'c' → logprob: -11.1671781539917
    7. '   ' → logprob: -11.4171781539917
    8. 'index' → logprob: -11.5421781539917
    9. 'color' → logprob: -11.9171781539917
    10. 'cub' → logprob: -11.9171781539917

Token 409: ' an' (ID: 448)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.225193738937378
    2. '   ' → logprob: -1.600193738937378
    3. ' for' → logprob: -1.850193738937378
    4. ' i' → logprob: -1.975193738937378
    5. ' an' → logprob: -3.100193738937378
    6. ',' → logprob: -3.225193738937378
    7. ' in' → logprob: -3.475193738937378
    8. ' one' → logprob: -3.975193738937378
    9. ' rotation' → logprob: -4.600193977355957
    10. ' ' → logprob: -4.975193977355957

Token 410: ' orientation' (ID: 29546)
  Prédit: ' orientation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' orientation' → logprob: -0.16091538965702057
    2. 'orientation' → logprob: -1.9109153747558594
    3. ' index' → logprob: -7.910915374755859
    4. 'index' → logprob: -9.41091537475586
    5. 'or' → logprob: -9.41091537475586
    6. '_orientation' → logprob: -10.28591537475586
    7. ' assignment' → logprob: -10.66091537475586
    8. ' oriented' → logprob: -10.91091537475586
    9. 'rotation' → logprob: -11.28591537475586
    10. 'assignment' → logprob: -11.66091537475586

Token 411: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36517995595932007
    2. '
' → logprob: -2.240180015563965
    3. ' for' → logprob: -3.115180015563965
    4. 'from' → logprob: -3.365180015563965
    5. ' and' → logprob: -3.865180015563965
    6. ' in' → logprob: -4.115180015563965
    7. ' from' → logprob: -4.115180015563965
    8. ',' → logprob: -4.115180015563965
    9. 'import' → logprob: -4.365180015563965
    10. ' to' → logprob: -4.490180015563965

Token 412: '24' (ID: 1494)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.453461766242981
    2. ' range' → logprob: -1.703461766242981
    3. 'i' → logprob: -1.828461766242981
    4. '   ' → logprob: -2.3284616470336914
    5. 'range' → logprob: -2.3284616470336914
    6. ')' → logprob: -2.4534616470336914
    7. ' for' → logprob: -3.3284616470336914
    8. 'for' → logprob: -3.7034616470336914
    9. ' in' → logprob: -4.203461647033691
    10. '
' → logprob: -4.203461647033691

Token 413: '^' (ID: 61)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006239945534616709
    2. '):
' → logprob: -6.131239891052246
    3. '):' → logprob: -6.131239891052246
    4. ')
' → logprob: -6.881239891052246
    5. 'for' → logprob: -7.881239891052246
    6. ' for' → logprob: -9.006239891052246
    7. ' )' → logprob: -9.131239891052246
    8. '   ' → logprob: -9.506239891052246
    9. ']' → logprob: -9.631239891052246
    10. '**' → logprob: -10.756239891052246

Token 414: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.47421932220458984
    2. ' n' → logprob: -0.9742193222045898
    3. '(n' → logprob: -9.97421932220459
    4. ' ' → logprob: -10.72421932220459
    5. ')n' → logprob: -10.72421932220459
    6. '
' → logprob: -11.47421932220459
    7. ')' → logprob: -11.47421932220459
    8. '1' → logprob: -12.09921932220459
    9. ' (' → logprob: -12.22421932220459
    10. '-n' → logprob: -12.59921932220459

Token 415: ' <=' (ID: 5017)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004087066277861595
    2. ' )' → logprob: -5.504086971282959
    3. ')
' → logprob: -13.129087448120117
    4. '),' → logprob: -13.754087448120117
    5. ')**' → logprob: -13.879087448120117
    6. '')' → logprob: -14.629087448120117
    7. ' ' → logprob: -14.879087448120117
    8. ')^' → logprob: -15.004087448120117
    9. '`)' → logprob: -15.254087448120117
    10. ')`' → logprob: -15.254087448120117

Token 416: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9200658798217773
    2. '10' → logprob: -1.6700658798217773
    3. '1' → logprob: -2.0450658798217773
    4. ' n' → logprob: -2.2950658798217773
    5. '100' → logprob: -2.6700658798217773
    6. ' ' → logprob: -2.7950658798217773
    7. 'float' → logprob: -4.795065879821777
    8. 'min' → logprob: -5.170065879821777
    9. '20' → logprob: -5.170065879821777
    10. '2' → logprob: -5.420065879821777

Token 417: '24' (ID: 1494)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.9694987535476685
    2. 'n' → logprob: -1.4694987535476685
    3. '10' → logprob: -1.5944987535476685
    4. '4' → logprob: -3.469498634338379
    5. 'float' → logprob: -3.469498634338379
    6. '6' → logprob: -3.969498634338379
    7. '1' → logprob: -4.344498634338379
    8. '(' → logprob: -4.469498634338379
    9. '(n' → logprob: -4.719498634338379
    10. '25' → logprob: -4.719498634338379

Token 418: '^' (ID: 61)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3921535015106201
    2. ' )' → logprob: -1.5171535015106201
    3. '**' → logprob: -2.39215350151062
    4. ' **' → logprob: -4.517153739929199
    5. ')**' → logprob: -6.767153739929199
    6. '**)' → logprob: -7.267153739929199
    7. '^' → logprob: -8.2671537399292
    8. ' **)' → logprob: -8.7671537399292
    9. '```' → logprob: -9.6421537399292
    10. ' ' → logprob: -9.8921537399292

Token 419: '4' (ID: 19)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14464972913265228
    2. ' n' → logprob: -2.0196497440338135
    3. '1' → logprob: -6.894649505615234
    4. ' ' → logprob: -7.394649505615234
    5. '
' → logprob: -9.394649505615234
    6. '(n' → logprob: -9.894649505615234
    7. ' 
' → logprob: -10.644649505615234
    8. ')' → logprob: -10.769649505615234
    9. ' )' → logprob: -10.894649505615234
    10. '2' → logprob: -11.019649505615234

Token 420: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0039657242596149445
    2. ' )' → logprob: -5.753965854644775
    3. '),' → logprob: -7.753965854644775
    4. ')
' → logprob: -9.003965377807617
    5. ' for' → logprob: -9.753965377807617
    6. '**' → logprob: -10.128965377807617
    7. ',' → logprob: -10.878965377807617
    8. ').' → logprob: -11.128965377807617
    9. ' if' → logprob: -11.128965377807617
    10. '):' → logprob: -11.378965377807617

Token 421: ' ' (ID: 220)
  Prédit: '331'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '331' → logprob: -0.19263187050819397
    2. '207' → logprob: -1.8176318407058716
    3. ' ' → logprob: -5.817631721496582
    4. '100' → logprob: -5.817631721496582
    5. '(' → logprob: -6.942631721496582
    6. '332' → logprob: -7.067631721496582
    7. '167' → logprob: -7.192631721496582
    8. 'int' → logprob: -7.567631721496582
    9. '104' → logprob: -7.692631721496582
    10. '
' → logprob: -7.942631721496582

Token 422: '331' (ID: 29839)
  Prédit: '331'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '331' → logprob: -0.016608785837888718
    2. '24' → logprob: -4.516608715057373
    3. '332' → logprob: -6.391608715057373
    4. '(' → logprob: -6.766608715057373
    5. '207' → logprob: -7.516608715057373
    6. ' ' → logprob: -8.016609191894531
    7. '333' → logprob: -8.016609191894531
    8. '100' → logprob: -8.516609191894531
    9. '
' → logprob: -8.516609191894531
    10. '   ' → logprob: -9.016609191894531

Token 423: ',' (ID: 11)
  Prédit: '776'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '776' → logprob: -0.3899877667427063
    2. '8' → logprob: -1.3899877071380615
    3. '77' → logprob: -4.514987945556641
    4. '7' → logprob: -4.514987945556641
    5. ',' → logprob: -4.639987945556641
    6. '^' → logprob: -5.014987945556641
    7. '6' → logprob: -5.264987945556641
    8. '{' → logprob: -5.389987945556641
    9. '5' → logprob: -5.639987945556641
    10. '2' → logprob: -5.639987945556641

Token 424: '776' (ID: 45242)
  Prédit: '776'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '776' → logprob: -0.001835706876590848
    2. ' ' → logprob: -7.126835823059082
    3. '
' → logprob: -8.251835823059082
    4. '

' → logprob: -8.626835823059082
    5. '775' → logprob: -9.626835823059082
    6. '```' → logprob: -9.626835823059082
    7. '{' → logprob: -9.876835823059082
    8. '   ' → logprob: -10.376835823059082
    9. '  ' → logprob: -10.626835823059082
    10. '``' → logprob: -10.751835823059082

Token 425: ' manageable' (ID: 105350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003867896506562829
    2. ')
' → logprob: -6.503868103027344
    3. ' )' → logprob: -7.128868103027344
    4. ' for' → logprob: -7.628868103027344
    5. '   ' → logprob: -7.878868103027344
    6. '),' → logprob: -8.878868103027344
    7. '
' → logprob: -8.878868103027344
    8. ',' → logprob: -9.378868103027344
    9. '^' → logprob: -10.003868103027344
    10. '):
' → logprob: -10.503868103027344

Token 426: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03779850900173187
    2. '   ' → logprob: -3.6627984046936035
    3. ' for' → logprob: -4.9127984046936035
    4. ')
' → logprob: -6.9127984046936035
    5. 'for' → logprob: -7.1627984046936035
    6. ' )' → logprob: -7.4127984046936035
    7. '
' → logprob: -7.5377984046936035
    8. ',' → logprob: -8.037798881530762
    9. '):' → logprob: -8.912798881530762
    10. ' if' → logprob: -8.912798881530762

Token 427: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31570184230804443
    2. ' from' → logprob: -1.6907018423080444
    3. 'from' → logprob: -2.690701961517334
    4. '
' → logprob: -4.440701961517334
    5. 'import' → logprob: -6.065701961517334
    6. ' for' → logprob: -6.690701961517334
    7. 'def' → logprob: -6.690701961517334
    8. '    
' → logprob: -6.940701961517334
    9. ' def' → logprob: -7.565701961517334
    10. ',' → logprob: -9.065701484680176

Token 428: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.11646117269992828
    2. '   ' → logprob: -2.8664612770080566
    3. 'def' → logprob: -3.6164612770080566
    4. 'import' → logprob: -4.241461277008057
    5. ' from' → logprob: -4.491461277008057
    6. 'dp' → logprob: -8.116460800170898
    7. '
' → logprob: -8.866460800170898
    8. ' def' → logprob: -9.616460800170898
    9. 'for' → logprob: -10.491460800170898
    10. 'indices' → logprob: -11.366460800170898

Token 429: ' For' (ID: 2214)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.07637540996074677
    2. 'def' → logprob: -3.2013754844665527
    3. 'import' → logprob: -4.076375484466553
    4. '   ' → logprob: -4.451375484466553
    5. ' from' → logprob: -5.576375484466553
    6. 'dp' → logprob: -8.326375007629395
    7. '
' → logprob: -9.076375007629395
    8. ' def' → logprob: -11.076375007629395
    9. '#' → logprob: -11.951375007629395
    10. 'DP' → logprob: -11.951375007629395

Token 430: ' each' (ID: 2454)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.14205002784729004
    2. 'i' → logprob: -2.39205002784729
    3. ' cube' → logprob: -3.64205002784729
    4. ' _' → logprob: -5.392049789428711
    5. ' def' → logprob: -5.642049789428711
    6. ' d' → logprob: -6.892049789428711
    7. '_' → logprob: -7.142049789428711
    8. ' faces' → logprob: -7.642049789428711
    9. 'def' → logprob: -7.767049789428711
    10. ' face' → logprob: -7.892049789428711

Token 431: ' orientation' (ID: 29546)
  Prédit: ' orientation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' orientation' → logprob: -1.503722071647644
    2. 'cube' → logprob: -1.628722071647644
    3. ' cube' → logprob: -1.878722071647644
    4. 'i' → logprob: -1.878722071647644
    5. ' i' → logprob: -1.878722071647644
    6. 'orientation' → logprob: -2.7537221908569336
    7. '   ' → logprob: -4.628722190856934
    8. 'c' → logprob: -5.503722190856934
    9. 'cost' → logprob: -5.628722190856934
    10. 'combo' → logprob: -5.753722190856934

Token 432: ' combination' (ID: 14083)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7593275904655457
    2. ',' → logprob: -1.0093276500701904
    3. '   ' → logprob: -2.3843276500701904
    4. 'import' → logprob: -4.259327411651611
    5. ' combination' → logprob: -4.634327411651611
    6. ' for' → logprob: -4.634327411651611
    7. 'in' → logprob: -4.884327411651611
    8. 'for' → logprob: -5.134327411651611
    9. 'from' → logprob: -5.259327411651611
    10. ':' → logprob: -5.384327411651611

Token 433: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3128508925437927
    2. ':' → logprob: -1.6878509521484375
    3. '   ' → logprob: -3.1878509521484375
    4. 'from' → logprob: -3.9378509521484375
    5. 'import' → logprob: -4.4378509521484375
    6. ':
' → logprob: -5.3128509521484375
    7. ' from' → logprob: -5.9378509521484375
    8. ',
' → logprob: -6.8128509521484375
    9. '):' → logprob: -7.3128509521484375
    10. '):
' → logprob: -8.187850952148438

Token 434: ' compute' (ID: 23864)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7182392477989197
    2. 'for' → logprob: -1.8432393074035645
    3. 'from' → logprob: -2.3432393074035645
    4. '   ' → logprob: -2.3432393074035645
    5. 'import' → logprob: -2.8432393074035645
    6. ' from' → logprob: -3.0932393074035645
    7. 'indices' → logprob: -3.8432393074035645
    8. ' import' → logprob: -4.0932393074035645
    9. ' indices' → logprob: -4.5932393074035645
    10. '    ' → logprob: -6.5932393074035645

Token 435: ' minimal' (ID: 19957)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.7980555295944214
    2. ' the' → logprob: -1.5480555295944214
    3. ' cost' → logprob: -2.173055648803711
    4. ' repaint' → logprob: -2.423055648803711
    5. ' total' → logprob: -2.673055648803711
    6. 'the' → logprob: -3.548055648803711
    7. 'total' → logprob: -3.548055648803711
    8. '   ' → logprob: -6.048055648803711
    9. ' rep' → logprob: -6.173055648803711
    10. 're' → logprob: -6.798055648803711

Token 436: ' repaint' (ID: 133657)
  Prédit: ' rep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rep' → logprob: -0.4269062876701355
    2. ' repaint' → logprob: -1.6769063472747803
    3. 're' → logprob: -2.6769063472747803
    4. '_re' → logprob: -3.6769063472747803
    5. 'cost' → logprob: -3.8019063472747803
    6. ' cost' → logprob: -4.051906108856201
    7. ' total' → logprob: -4.551906108856201
    8. '_cost' → logprob: -5.426906108856201
    9. 'total' → logprob: -5.926906108856201
    10. 'rep' → logprob: -5.926906108856201

Token 437: ' cost' (ID: 3097)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.4334205985069275
    2. 'cost' → logprob: -1.8084206581115723
    3. 'ings' → logprob: -2.0584206581115723
    4. 's' → logprob: -3.6834206581115723
    5. '_count' → logprob: -3.9334206581115723
    6. ' cost' → logprob: -4.808420658111572
    7. 'count' → logprob: -5.308420658111572
    8. '   ' → logprob: -6.933420658111572
    9. 'def' → logprob: -7.558420658111572
    10. ' count' → logprob: -8.558420181274414

Token 438: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09687243402004242
    2. 'from' → logprob: -3.346872329711914
    3. ' from' → logprob: -3.596872329711914
    4. '
' → logprob: -4.221872329711914
    5. '<|end|>' → logprob: -4.846872329711914
    6. 'import' → logprob: -5.596872329711914
    7. '    
' → logprob: -6.471872329711914
    8. ',' → logprob: -7.596872329711914
    9. 'def' → logprob: -7.596872329711914
    10. '<|end|>' → logprob: -7.971872329711914

Token 439: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006227982696145773
    2. '    
' → logprob: -6.131227970123291
    3. '    ' → logprob: -6.881227970123291
    4. '
' → logprob: -7.131227970123291
    5. ' 
' → logprob: -7.631227970123291
    6. ' from' → logprob: -7.756227970123291
    7. 'from' → logprob: -7.881227970123291
    8. '<|end|>' → logprob: -8.63122844696045
    9. ' ' → logprob: -8.75622844696045
    10. '       ' → logprob: -8.88122844696045

Token 440: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.44525372982025146
    2. '   ' → logprob: -1.6952537298202515
    3. ' from' → logprob: -1.9452537298202515
    4. 'for' → logprob: -3.945253849029541
    5. ' for' → logprob: -4.695253849029541
    6. 'import' → logprob: -5.570253849029541
    7. 'def' → logprob: -8.195253372192383
    8. '
' → logprob: -8.820253372192383
    9. ' import' → logprob: -10.070253372192383
    10. ' def' → logprob: -10.570253372192383

Token 441: ' Find' (ID: 9764)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.4917260408401489
    2. 'from' → logprob: -1.491726040840149
    3. ' for' → logprob: -2.4917259216308594
    4. '   ' → logprob: -2.8667259216308594
    5. 'for' → logprob: -4.366725921630859
    6. 'import' → logprob: -5.241725921630859
    7. ' def' → logprob: -6.116725921630859
    8. ' import' → logprob: -6.491725921630859
    9. 'def' → logprob: -6.491725921630859
    10. '
' → logprob: -7.741725921630859

Token 442: ' for' (ID: 395)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.1794874221086502
    2. ' min' → logprob: -3.179487466812134
    3. ' a' → logprob: -3.679487466812134
    4. ' for' → logprob: -3.929487466812134
    5. ' all' → logprob: -4.179487228393555
    6. 'the' → logprob: -4.429487228393555
    7. ' best' → logprob: -4.429487228393555
    8. 'min' → logprob: -5.054487228393555
    9. ' common' → logprob: -5.054487228393555
    10. ' color' → logprob: -5.804487228393555

Token 443: ' each' (ID: 2454)
  Prédit: ' color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.5346822738647461
    2. 'color' → logprob: -1.659682273864746
    3. ' face' → logprob: -3.659682273864746
    4. ' target' → logprob: -3.784682273864746
    5. ' col' → logprob: -3.909682273864746
    6. 'face' → logprob: -3.909682273864746
    7. ' i' → logprob: -4.159682273864746
    8. ' center' → logprob: -4.159682273864746
    9. ' common' → logprob: -4.659682273864746
    10. 'col' → logprob: -4.784682273864746

Token 444: ' face' (ID: 4950)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.8536379337310791
    2. 'cube' → logprob: -1.353637933731079
    3. 'face' → logprob: -1.978637933731079
    4. ' color' → logprob: -2.478637933731079
    5. ' cube' → logprob: -3.228637933731079
    6. ' face' → logprob: -3.728637933731079
    7. 'i' → logprob: -4.3536376953125
    8. ' i' → logprob: -5.6036376953125
    9. 'target' → logprob: -6.1036376953125
    10. 'position' → logprob: -6.1036376953125

Token 445: ' position' (ID: 4010)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4662574529647827
    2. ' color' → logprob: -1.2162574529647827
    3. ' i' → logprob: -3.8412575721740723
    4. 'color' → logprob: -3.9662575721740723
    5. ' a' → logprob: -4.466257572174072
    6. 'the' → logprob: -5.716257572174072
    7. ',' → logprob: -5.841257572174072
    8. ' position' → logprob: -5.966257572174072
    9. ' index' → logprob: -6.216257572174072
    10. ' (' → logprob: -6.341257572174072

Token 446: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.20270895957946777
    2. ',' → logprob: -2.4527089595794678
    3. 'the' → logprob: -2.7027089595794678
    4. ' i' → logprob: -4.452709197998047
    5. ' (' → logprob: -4.952709197998047
    6. ' all' → logprob: -6.327709197998047
    7. ' in' → logprob: -6.577709197998047
    8. ' a' → logprob: -6.952709197998047
    9. ' how' → logprob: -6.952709197998047
    10. ' j' → logprob: -6.952709197998047

Token 447: ' most' (ID: 1645)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.0094165802001953
    2. ' min' → logprob: -1.5094165802001953
    3. 'colors' → logprob: -2.2594165802001953
    4. 'best' → logprob: -2.6344165802001953
    5. ' best' → logprob: -2.7594165802001953
    6. ' minimal' → logprob: -3.5094165802001953
    7. 'color' → logprob: -3.5094165802001953
    8. 'minimum' → logprob: -4.134416580200195
    9. 'set' → logprob: -4.259416580200195
    10. ' colors' → logprob: -4.509416580200195

Token 448: ' common' (ID: 5355)
  Prédit: '_common'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -0.5667333602905273
    2. 'common' → logprob: -1.0667333602905273
    3. ' common' → logprob: -2.4417333602905273
    4. 'fre' → logprob: -7.316733360290527
    5. ' frequent' → logprob: -7.316733360290527
    6. '_f' → logprob: -10.441733360290527
    7. '	common' → logprob: -10.441733360290527
    8. ')' → logprob: -10.566733360290527
    9. '-common' → logprob: -10.691733360290527
    10. '(common' → logprob: -11.441733360290527

Token 449: ' color' (ID: 3089)
  Prédit: ' color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.25932925939559937
    2. 'color' → logprob: -1.5093293190002441
    3. ' colors' → logprob: -5.884329319000244
    4. 'colors' → logprob: -6.134329319000244
    5. '_color' → logprob: -6.134329319000244
    6. '_colors' → logprob: -9.009328842163086
    7. 'face' → logprob: -9.884328842163086
    8. ' face' → logprob: -10.884328842163086
    9. '	color' → logprob: -11.759328842163086
    10. 'token' → logprob: -11.759328842163086

Token 450: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9537272453308105
    2. '   ' → logprob: -1.0787272453308105
    3. ' counts' → logprob: -2.3287272453308105
    4. ',' → logprob: -2.7037272453308105
    5. '_counts' → logprob: -3.0787272453308105
    6. 'counts' → logprob: -4.4537272453308105
    7. '(s' → logprob: -4.7037272453308105
    8. ')' → logprob: -5.0787272453308105
    9. ' s' → logprob: -5.5787272453308105
    10. ':' → logprob: -5.5787272453308105

Token 451: ' repaint' (ID: 133657)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7141714692115784
    2. '   ' → logprob: -1.7141714096069336
    3. 'and' → logprob: -2.2141714096069336
    4. '#' → logprob: -2.5891714096069336
    5. ' then' → logprob: -2.5891714096069336
    6. ' which' → logprob: -3.9641714096069336
    7. ' #' → logprob: -4.214171409606934
    8. 'which' → logprob: -4.839171409606934
    9. ' leading' → logprob: -5.214171409606934
    10. '           ' → logprob: -5.714171409606934

Token 452: ' other' (ID: 1273)
  Prédit: ' counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' counts' → logprob: -1.1647882461547852
    2. ' cost' → logprob: -1.5397882461547852
    3. ' count' → logprob: -2.039788246154785
    4. 'count' → logprob: -2.289788246154785
    5. 'cost' → logprob: -2.414788246154785
    6. '   ' → logprob: -2.539788246154785
    7. ' costs' → logprob: -3.289788246154785
    8. 'counts' → logprob: -4.039788246154785
    9. '_count' → logprob: -5.164788246154785
    10. '_cost' → logprob: -5.539788246154785

Token 453: ' faces' (ID: 22060)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8824306726455688
    2. ' cubes' → logprob: -1.5074306726455688
    3. 'c' → logprob: -2.5074305534362793
    4. '_c' → logprob: -2.8824305534362793
    5. '_count' → logprob: -2.8824305534362793
    6. 'cost' → logprob: -3.0074305534362793
    7. '_cost' → logprob: -3.1324305534362793
    8. 'faces' → logprob: -4.257430553436279
    9. 'count' → logprob: -4.507430553436279
    10. '_faces' → logprob: -4.757430553436279

Token 454: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04627886787056923
    2. 'from' → logprob: -4.046278953552246
    3. ' from' → logprob: -4.671278953552246
    4. ' for' → logprob: -4.921278953552246
    5. '
' → logprob: -5.671278953552246
    6. ',' → logprob: -6.171278953552246
    7. 'import' → logprob: -6.546278953552246
    8. 'for' → logprob: -7.546278953552246
    9. '<|end|>' → logprob: -7.671278953552246
    10. ' faces' → logprob: -7.796278953552246

Token 455: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10974100232124329
    2. 'from' → logprob: -2.609740972518921
    3. ' from' → logprob: -3.609740972518921
    4. 'import' → logprob: -6.4847412109375
    5. ',' → logprob: -7.7347412109375
    6. '<|end|>' → logprob: -7.8597412109375
    7. ' for' → logprob: -8.2347412109375
    8. 'def' → logprob: -8.6097412109375
    9. '
' → logprob: -8.9847412109375
    10. '#' → logprob: -9.4847412109375

Token 456: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013603432103991508
    2. 'from' (adapté à ' from') → logprob: -5.013603210449219
    3. ' from' → logprob: -5.263603210449219
    4. '
' → logprob: -7.638603210449219
    5. 'import' → logprob: -7.888603210449219
    6. '    
' → logprob: -7.888603210449219
    7. ' for' → logprob: -8.013603210449219
    8. 'for' → logprob: -10.513603210449219
    9. 'def' → logprob: -10.638603210449219
    10. ',' → logprob: -11.138603210449219

Token 457: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.04863050952553749
    2. ' collections' → logprob: -3.048630475997925
    3. ' itertools' → logprob: -10.173630714416504
    4. 'it' → logprob: -12.298630714416504
    5. 'math' → logprob: -15.673630714416504
    6. 'collection' → logprob: -16.423629760742188
    7. '_' → logprob: -16.798629760742188
    8. ' math' → logprob: -17.048629760742188
    9. '   ' → logprob: -17.423629760742188
    10. ' collection' → logprob: -18.298629760742188

Token 458: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0053801992908120155
    2. ' import' → logprob: -5.255380153656006
    3. '.Counter' → logprob: -9.880380630493164
    4. 'Counter' → logprob: -10.005380630493164
    5. ' Counter' → logprob: -11.130380630493164
    6. '```' → logprob: -11.505380630493164
    7. '_counter' → logprob: -11.630380630493164
    8. 'counter' → logprob: -12.630380630493164
    9. 'ounter' → logprob: -12.630380630493164
    10. 'from' → logprob: -13.130380630493164

Token 459: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.028171373531222343
    2. 'default' → logprob: -3.7781713008880615
    3. ' Counter' → logprob: -5.528171539306641
    4. ' defaultdict' → logprob: -7.278171539306641
    5. 'counter' → logprob: -9.15317153930664
    6. 'collections' → logprob: -9.27817153930664
    7. '_counter' → logprob: -10.40317153930664
    8. '.Counter' → logprob: -11.15317153930664
    9. 'import' → logprob: -12.27817153930664
    10. 'deque' → logprob: -13.77817153930664

Token 460: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4327305853366852
    2. '   ' → logprob: -1.1827305555343628
    3. '    
' → logprob: -3.9327306747436523
    4. '<|end|>' → logprob: -4.932730674743652
    5. 'import' → logprob: -5.182730674743652
    6. ' 
' → logprob: -5.932730674743652
    7. ' from' → logprob: -6.182730674743652
    8. 'from' → logprob: -6.432730674743652
    9. ',' → logprob: -6.932730674743652
    10. 'min' → logprob: -7.557730674743652

Token 461: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36093729734420776
    2. '
' → logprob: -1.2359373569488525
    3. '    
' → logprob: -4.735937118530273
    4. 'import' → logprob: -6.485937118530273
    5. 'from' → logprob: -8.110937118530273
    6. ' for' → logprob: -8.110937118530273
    7. ' 
' → logprob: -8.610937118530273
    8. 'def' → logprob: -8.610937118530273
    9. ' cost' → logprob: -9.110937118530273
    10. ' from' → logprob: -9.360937118530273

Token 462: ' import' (ID: 1588)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048540014773607254
    2. 'from' → logprob: -4.423540115356445
    3. ' for' → logprob: -4.673540115356445
    4. 'import' (adapté à ' import') → logprob: -4.798540115356445
    5. 'def' → logprob: -4.923540115356445
    6. 'for' → logprob: -5.423540115356445
    7. ' from' → logprob: -5.673540115356445
    8. 'res' → logprob: -7.798540115356445
    9. '
' → logprob: -7.923540115356445
    10. '    
' → logprob: -8.048540115356445

Token 463: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.004786937963217497
    2. ' math' → logprob: -5.879786968231201
    3. 'math' → logprob: -6.879786968231201
    4. 'it' → logprob: -7.754786968231201
    5. 'sys' → logprob: -8.379786491394043
    6. ' sys' → logprob: -8.754786491394043
    7. ' functools' → logprob: -9.629786491394043
    8. 'operator' → logprob: -10.004786491394043
    9. 'heap' → logprob: -11.254786491394043
    10. ' operator' → logprob: -11.879786491394043

Token 464: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06650969386100769
    2. '
' → logprob: -2.94150972366333
    3. ' for' → logprob: -5.31650972366333
    4. '    
' → logprob: -5.31650972366333
    5. 'for' → logprob: -7.31650972366333
    6. ' choices' → logprob: -7.94150972366333
    7. ' combinations' → logprob: -8.191509246826172
    8. '   
' → logprob: -9.316509246826172
    9. 'choices' → logprob: -9.941509246826172
    10. '  
' → logprob: -10.316509246826172

Token 465: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012306547723710537
    2. '
' → logprob: -4.7623066902160645
    3. ' for' → logprob: -6.8873066902160645
    4. 'for' → logprob: -7.0123066902160645
    5. '    
' → logprob: -7.1373066902160645
    6. ' choices' → logprob: -8.262306213378906
    7. 'choices' → logprob: -8.262306213378906
    8. 'colors' → logprob: -9.637306213378906
    9. ' comb' → logprob: -9.887306213378906
    10. 'faces' → logprob: -10.012306213378906

Token 466: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7078886032104492
    2. 'min' → logprob: -2.082888603210449
    3. ' min' → logprob: -2.582888603210449
    4. 'for' (adapté à ' for') → logprob: -2.707888603210449
    5. ' for' → logprob: -2.832888603210449
    6. 'best' → logprob: -2.957888603210449
    7. ' res' → logprob: -3.207888603210449
    8. ' best' → logprob: -3.207888603210449
    9. 'res' → logprob: -3.707888603210449
    10. 'result' → logprob: -5.582888603210449

Token 467: ' orientation' (ID: 29546)
  Prédit: ' orientations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' orientations' → logprob: -0.5984225869178772
    2. ' orientation' → logprob: -1.3484225273132324
    3. 'orient' → logprob: -2.3484225273132324
    4. ' orient' → logprob: -3.7234225273132324
    5. ' combo' → logprob: -3.8484225273132324
    6. 'orientation' → logprob: -4.098422527313232
    7. 'combo' → logprob: -4.848422527313232
    8. ' chosen' → logprob: -5.098422527313232
    9. ' or' → logprob: -5.973422527313232
    10. 'rot' → logprob: -6.098422527313232

Token 468: '_indices' (ID: 43508)
  Prédit: '_combo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_combo' → logprob: -1.0607081651687622
    2. 's' → logprob: -1.1857081651687622
    3. '_comb' → logprob: -1.1857081651687622
    4. '_choices' → logprob: -3.5607080459594727
    5. '_indices' → logprob: -5.060708045959473
    6. ' in' → logprob: -5.560708045959473
    7. '_choice' → logprob: -6.935708045959473
    8. '_idxs' → logprob: -6.935708045959473
    9. 'combo' → logprob: -7.685708045959473
    10. '_options' → logprob: -7.810708045959473

Token 469: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008630522526800632
    2. 'in' → logprob: -4.758630752563477
    3. ',' → logprob: -12.133630752563477
    4. ' ' → logprob: -12.133630752563477
    5. '_in' → logprob: -13.383630752563477
    6. 's' → logprob: -14.133630752563477
    7. ' ,' → logprob: -14.133630752563477
    8. '	in' → logprob: -14.758630752563477
    9. '0' → logprob: -15.008630752563477
    10. 'In' → logprob: -15.383630752563477

Token 470: ' itertools' (ID: 103178)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0019311357755213976
    2. ' itertools' → logprob: -6.251931190490723
    3. 'iter' → logprob: -14.251931190490723
    4. '   ' → logprob: -14.626931190490723
    5. ' it' → logprob: -15.001931190490723
    6. '(it' → logprob: -15.126931190490723
    7. 'import' → logprob: -15.501931190490723
    8. '
' → logprob: -16.626930236816406
    9. 'range' → logprob: -16.876930236816406
    10. '  ' → logprob: -17.001930236816406

Token 471: '.product' (ID: 21166)
  Prédit: '.product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.product' → logprob: -7.941850526549388e-06
    2. 'product' → logprob: -12.375007629394531
    3. ' product' → logprob: -13.500007629394531
    4. '.' → logprob: -13.750007629394531
    5. '	product' → logprob: -14.625007629394531
    6. ' .' → logprob: -15.000007629394531
    7. 'import' → logprob: -15.125007629394531
    8. '_product' → logprob: -16.87500762939453
    9. '.prod' → logprob: -17.00000762939453
    10. '.com' → logprob: -17.37500762939453

Token 472: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.023248855024576187
    2. 'range' → logprob: -3.7732489109039307
    3. '(' → logprob: -13.273248672485352
    4. ' range' → logprob: -13.523248672485352
    5. '   ' → logprob: -16.27324867248535
    6. '	range' → logprob: -16.89824867248535
    7. '(*' → logprob: -17.27324867248535
    8. '=' → logprob: -17.89824867248535
    9. '```' → logprob: -18.02324867248535
    10. '([' → logprob: -18.14824867248535

Token 473: '(' (ID: 7)
  Prédit: '24'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '24' → logprob: -0.020543988794088364
    2. '(' → logprob: -3.8955440521240234
    3. ' ' → logprob: -13.895544052124023
    4. ')' → logprob: -14.520544052124023
    5. ' (' → logprob: -15.645544052124023
    6. '   ' → logprob: -16.020544052124023
    7. '(
' → logprob: -16.145544052124023
    8. '```' → logprob: -16.145544052124023
    9. '{' → logprob: -16.270544052124023
    10. '25' → logprob: -17.270544052124023

Token 474: '24' (ID: 1494)
  Prédit: '24'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '24' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '
' → logprob: -20.75
    4. '   ' → logprob: -20.875
    5. '25' → logprob: -21.125
    6. 'len' → logprob: -21.25
    7. '```' → logprob: -21.625
    8. ')' → logprob: -21.875
    9. '26' → logprob: -22.0
    10. '2' → logprob: -22.125

Token 475: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -5.657694418914616e-05
    2. ')' → logprob: -10.000056266784668
    3. ' ),' → logprob: -11.875056266784668
    4. '),(' → logprob: -13.125056266784668
    5. ',' → logprob: -14.125056266784668
    6. ',),' → logprob: -14.750056266784668
    7. '),
' → logprob: -15.000056266784668
    8. '   ' → logprob: -15.250056266784668
    9. '},' → logprob: -15.625056266784668
    10. ' ' → logprob: -16.000057220458984

Token 476: ' repeat' (ID: 22962)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.004078401252627373
    2. ' repeat' → logprob: -5.504078388214111
    3. 'reverse' → logprob: -18.629077911376953
    4. '_repeat' → logprob: -18.754077911376953
    5. 'r' → logprob: -19.504077911376953
    6. 'Repeat' → logprob: -20.004077911376953
    7. 're' → logprob: -20.379077911376953
    8. '.repeat' → logprob: -20.504077911376953
    9. '   ' → logprob: -21.504077911376953
    10. '-repeat' → logprob: -22.129077911376953

Token 477: '=n' (ID: 47985)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3285367786884308
    2. 'n' → logprob: -1.3285367488861084
    3. ' n' → logprob: -4.3285369873046875
    4. '=n' → logprob: -6.8285369873046875
    5. ' (' → logprob: -7.8285369873046875
    6. '(' → logprob: -7.9535369873046875
    7. ')n' → logprob: -9.453536987304688
    8. ')' → logprob: -10.078536987304688
    9. '=' → logprob: -11.203536987304688
    10. '	n' → logprob: -13.203536987304688

Token 478: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03805446997284889
    2. '):
' → logprob: -3.2880544662475586
    3. '   ' → logprob: -12.288054466247559
    4. '):
' → logprob: -12.538054466247559
    5. ')' → logprob: -12.663054466247559
    6. ' ):' → logprob: -14.038054466247559
    7. ':' → logprob: -14.413054466247559
    8. '):

' → logprob: -15.538054466247559
    9. '       ' → logprob: -16.663055419921875
    10. '}:' → logprob: -17.538055419921875

Token 479: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007036144379526377
    2. ':' → logprob: -8.000703811645508
    3. '        
' → logprob: -8.375703811645508
    4. '<|end|>' → logprob: -9.625703811645508
    5. ',' → logprob: -11.125703811645508
    6. ':
' → logprob: -11.625703811645508
    7. '<|end|>' → logprob: -11.625703811645508
    8. '):
' → logprob: -12.000703811645508
    9. '```' → logprob: -12.125703811645508
    10. '
' → logprob: -12.250703811645508

Token 480: ' faces' (ID: 22060)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15649187564849854
    2. 'colors' → logprob: -2.406491756439209
    3. '           ' → logprob: -4.031491756439209
    4. 'faces' (adapté à ' faces') → logprob: -4.781491756439209
    5. 'counts' → logprob: -4.781491756439209
    6. 'cost' → logprob: -4.906491756439209
    7. 'face' → logprob: -5.156491756439209
    8. 'color' → logprob: -5.281491756439209
    9. '#' → logprob: -7.906491756439209
    10. 'count' → logprob: -8.281492233276367

Token 481: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22831973433494568
    2. ' =' → logprob: -1.603319764137268
    3. '_colors' → logprob: -7.1033196449279785
    4. '_positions' → logprob: -7.3533196449279785
    5. '_faces' → logprob: -7.9783196449279785
    6. 's' → logprob: -8.103320121765137
    7. '_per' → logprob: -8.103320121765137
    8. '=[' → logprob: -8.228320121765137
    9. '_counts' → logprob: -9.478320121765137
    10. '=[]' → logprob: -10.728320121765137

Token 482: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0289866104722023
    2. ' [' → logprob: -3.778986692428589
    3. '[]
' → logprob: -6.02898645401001
    4. '[list' → logprob: -6.02898645401001
    5. '[n' → logprob: -8.028986930847168
    6. '[]' → logprob: -8.778986930847168
    7. '[i' → logprob: -9.278986930847168
    8. '[x' → logprob: -10.278986930847168
    9. '[
' → logprob: -10.403986930847168
    10. '   ' → logprob: -10.528986930847168

Token 483: 'all' (ID: 586)
  Prédit: 'all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.014175502583384514
    2. ' all' → logprob: -4.2641754150390625
    3. '   ' → logprob: -11.514175415039062
    4. '       ' → logprob: -14.139175415039062
    5. '           ' → logprob: -14.764175415039062
    6. ' ' → logprob: -14.889175415039062
    7. '	all' → logprob: -15.514175415039062
    8. 'All' → logprob: -16.639175415039062
    9. '  ' → logprob: -17.014175415039062
    10. ''all' → logprob: -17.389175415039062

Token 484: '_ro' (ID: 65472)
  Prédit: '_ro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ro' → logprob: -0.0001502636878285557
    2. '_rot' → logprob: -9.125150680541992
    3. 'rots' → logprob: -10.250150680541992
    4. '_r' → logprob: -13.625150680541992
    5. '_' → logprob: -14.250150680541992
    6. ' _' → logprob: -14.500150680541992
    7. '\' → logprob: -14.500150680541992
    8. '_re' → logprob: -14.625150680541992
    9. '_ros' → logprob: -14.625150680541992
    10. '   ' → logprob: -15.250150680541992

Token 485: 'ts' (ID: 1561)
  Prédit: 'ts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.010528572835028172
    2. 'ots' → logprob: -4.635528564453125
    3. 't' → logprob: -7.885528564453125
    4. '[' → logprob: -8.760528564453125
    5. 'tsx' → logprob: -9.760528564453125
    6. '_ts' → logprob: -9.885528564453125
    7. 'rots' → logprob: -10.510528564453125
    8. 's' → logprob: -11.385528564453125
    9. 'tts' → logprob: -11.635528564453125
    10. 'sts' → logprob: -12.260528564453125

Token 486: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00026574634830467403
    2. '[c' → logprob: -8.250266075134277
    3. '[j' → logprob: -13.875266075134277
    4. '[' → logprob: -14.000266075134277
    5. 'cube' → logprob: -14.125266075134277
    6. 'i' → logprob: -14.250266075134277
    7. '[idx' → logprob: -14.250266075134277
    8. 'c' → logprob: -14.500266075134277
    9. '[k' → logprob: -17.25026512145996
    10. '[index' → logprob: -17.37526512145996

Token 487: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02986248955130577
    2. '][' → logprob: -3.529862403869629
    3. '[i' → logprob: -10.154862403869629
    4. '[ind' → logprob: -10.154862403869629
    5. ' [' → logprob: -11.779862403869629
    6. '[
' → logprob: -12.404862403869629
    7. ' ][' → logprob: -12.404862403869629
    8. '
' → logprob: -12.404862403869629
    9. '[o' → logprob: -12.779862403869629
    10. '[idx' → logprob: -13.029862403869629

Token 488: 'orientation' (ID: 65957)
  Prédit: 'orientation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orientation' → logprob: -3.054500666621607e-06
    2. ' orientation' → logprob: -12.75000286102295
    3. '
' → logprob: -16.625003814697266
    4. ' ' → logprob: -19.500003814697266
    5. '

' → logprob: -20.000003814697266
    6. '   ' → logprob: -20.125003814697266
    7. 'o' → logprob: -20.625003814697266
    8. 'ori' → logprob: -21.000003814697266
    9. 'orient' → logprob: -21.000003814697266
    10. '
' → logprob: -21.250003814697266

Token 489: '_indices' (ID: 43508)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.06197631359100342
    2. '_indices' → logprob: -2.811976432800293
    3. ' indices' → logprob: -12.436976432800293
    4. 'Indices' → logprob: -13.186976432800293
    5. '"indices' → logprob: -13.436976432800293
    6. '(indices' → logprob: -14.686976432800293
    7. '[' → logprob: -15.311976432800293
    8. '   ' → logprob: -15.561976432800293
    9. 'idx' → logprob: -16.186975479125977
    10. 'index' → logprob: -16.561975479125977

Token 490: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1637164789135568e-05
    2. 'i' → logprob: -11.750011444091797
    3. ']' → logprob: -13.000011444091797
    4. '[' → logprob: -14.500011444091797
    5. '[
' → logprob: -14.875011444091797
    6. '
' → logprob: -15.625011444091797
    7. '(i' → logprob: -16.125011444091797
    8. ' [' → logprob: -16.875011444091797
    9. '])' → logprob: -17.375011444091797
    10. '{i' → logprob: -17.500011444091797

Token 491: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015750672668218613
    2. '][' → logprob: -4.390750885009766
    3. ']]' → logprob: -5.765750885009766
    4. ']][' → logprob: -9.515750885009766
    5. '][:' → logprob: -11.640750885009766
    6. '])' → logprob: -12.015750885009766
    7. ']
' → logprob: -12.640750885009766
    8. ' ]' → logprob: -13.140750885009766
    9. ']]
' → logprob: -13.765750885009766
    10. ']])' → logprob: -13.890750885009766

Token 492: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04382273554801941
    2. '       ' → logprob: -3.168822765350342
    3. 'for' → logprob: -7.168822765350342
    4. '        ' → logprob: -10.543822288513184
    5. ']' → logprob: -12.043822288513184
    6. '           ' → logprob: -12.418822288513184
    7. '               ' → logprob: -13.043822288513184
    8. '	for' → logprob: -13.043822288513184
    9. '      ' → logprob: -13.168822288513184
    10. ' ' → logprob: -13.168822288513184

Token 493: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011048170737922192
    2. ' i' → logprob: -4.511048316955566
    3. ' ' → logprob: -15.511048316955566
    4. '	i' → logprob: -16.13604736328125
    5. ' ' → logprob: -17.13604736328125
    6. '  ' → logprob: -18.01104736328125
    7. ' in' → logprob: -18.13604736328125
    8. '   ' → logprob: -18.26104736328125
    9. 'in' → logprob: -19.51104736328125
    10. '
' → logprob: -19.76104736328125

Token 494: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3920188248157501
    2. 'in' → logprob: -1.1420187950134277
    3. 'i' → logprob: -5.392018795013428
    4. ' i' → logprob: -7.517018795013428
    5. ' ' → logprob: -11.017019271850586
    6. ']' → logprob: -11.892019271850586
    7. ')' → logprob: -12.142019271850586
    8. 'range' → logprob: -12.767019271850586
    9. ' range' → logprob: -12.892019271850586
    10. '
' → logprob: -14.017019271850586

Token 495: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033558503491804004
    2. ' range' → logprob: -8.000335693359375
    3. ' ' → logprob: -17.250335693359375
    4. 'n' → logprob: -17.500335693359375
    5. '   ' → logprob: -18.375335693359375
    6. '
' → logprob: -18.500335693359375
    7. '(range' → logprob: -19.125335693359375
    8. '  ' → logprob: -19.375335693359375
    9. '	range' → logprob: -20.250335693359375
    10. 'r' → logprob: -20.375335693359375

Token 496: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04971376806497574
    2. '(n' → logprob: -3.0497138500213623
    3. ' n' → logprob: -6.799713611602783
    4. '(' → logprob: -11.924714088439941
    5. ' (' → logprob: -12.674714088439941
    6. '	n' → logprob: -14.049714088439941
    7. '   ' → logprob: -14.674714088439941
    8. ')n' → logprob: -14.924714088439941
    9. '
' → logprob: -15.799714088439941
    10. '_n' → logprob: -16.424713134765625

Token 497: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1803828328847885
    2. ')]' → logprob: -1.9303828477859497
    3. ')' → logprob: -4.05538272857666
    4. '       ' → logprob: -6.05538272857666
    5. ']
' → logprob: -8.55538272857666
    6. ' ]' → logprob: -9.80538272857666
    7. '   ' → logprob: -11.43038272857666
    8. ')]
' → logprob: -11.55538272857666
    9. '           ' → logprob: -12.80538272857666
    10. '])' → logprob: -12.93038272857666

Token 498: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.888114098226652e-05
    2. '   ' → logprob: -11.000088691711426
    3. 'colors' → logprob: -11.250088691711426
    4. 'counter' → logprob: -11.250088691711426
    5. '        
' → logprob: -11.750088691711426
    6. '```' → logprob: -11.875088691711426
    7. ' counter' → logprob: -12.000088691711426
    8. 'counts' → logprob: -12.250088691711426
    9. '           ' → logprob: -12.625088691711426
    10. ' counts' → logprob: -12.625088691711426

Token 499: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.6772605776786804
    2. 'counts' → logprob: -1.3022606372833252
    3. '       ' → logprob: -2.302260637283325
    4. 'count' → logprob: -3.427260637283325
    5. 'colors' → logprob: -3.802260637283325
    6. 'counter' → logprob: -3.927260637283325
    7. 'total' → logprob: -4.552260398864746
    8. 'color' → logprob: -4.677260398864746
    9. 'face' → logprob: -5.052260398864746
    10. 'cnt' → logprob: -5.052260398864746

Token 500: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022484004497528
    2. '=' → logprob: -1.9102247953414917
    3. '   ' → logprob: -15.035224914550781
    4. ' ' → logprob: -15.535224914550781
    5. ' +=' → logprob: -16.91022491455078
    6. ' ' → logprob: -17.41022491455078
    7. '=sum' → logprob: -17.78522491455078
    8. ' =
' → logprob: -17.91022491455078
    9. '=int' → logprob: -18.53522491455078
    10. '	' → logprob: -18.53522491455078

Token 501: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.8802491215174086e-05
    2. ' ' → logprob: -10.625028610229492
    3. 'sum' → logprob: -12.500028610229492
    4. '   ' → logprob: -14.125028610229492
    5. 'n' → logprob: -17.625028610229492
    6. ' sum' → logprob: -18.125028610229492
    7. '```' → logprob: -18.500028610229492
    8. '  ' → logprob: -18.500028610229492
    9. '
' → logprob: -19.000028610229492
    10. '``' → logprob: -19.812528610229492

Token 502: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.249780638725497e-05
    2. 'sum' → logprob: -10.375032424926758
    3. ' ' → logprob: -13.750032424926758
    4. 'n' → logprob: -16.000032424926758
    5. '   ' → logprob: -17.625032424926758
    6. ' sum' → logprob: -18.750032424926758
    7. '
' → logprob: -19.250032424926758
    8. '```' → logprob: -19.500032424926758
    9. '1' → logprob: -20.000032424926758
    10. '

' → logprob: -20.125032424926758

Token 503: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002840537577867508
    2. '
' → logprob: -6.127840518951416
    3. '<|end|>' → logprob: -7.877840518951416
    4. ' for' → logprob: -9.002840995788574
    5. ')' → logprob: -10.127840995788574
    6. '        
' → logprob: -10.377840995788574
    7. '   ' → logprob: -10.752840995788574
    8. ',' → logprob: -11.127840995788574
    9. '           ' → logprob: -11.752840995788574
    10. '  
' → logprob: -12.127840995788574

Token 504: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000954694114625454
    2. '
' → logprob: -7.875954627990723
    3. '<|end|>' → logprob: -8.500954627990723
    4. ' for' → logprob: -9.000954627990723
    5. '        
' → logprob: -9.375954627990723
    6. '   ' → logprob: -9.875954627990723
    7. '           ' → logprob: -10.125954627990723
    8. ')' → logprob: -11.250954627990723
    9. '  
' → logprob: -11.500954627990723
    10. 'for' → logprob: -11.625954627990723

Token 505: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01871544122695923
    2. '       ' → logprob: -4.2687153816223145
    3. ' for' → logprob: -5.8937153816223145
    4. 'faces' → logprob: -6.5187153816223145
    5. 'face' → logprob: -8.893715858459473
    6. '   ' → logprob: -10.018715858459473
    7. 'counter' → logprob: -10.768715858459473
    8. 'colors' → logprob: -10.768715858459473
    9. 'positions' → logprob: -10.893715858459473
    10. 'counts' → logprob: -10.893715858459473

Token 506: ' face' (ID: 4950)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.22434864938259125
    2. 'face' → logprob: -1.7243486642837524
    3. 'j' → logprob: -3.974348545074463
    4. 'i' → logprob: -5.724348545074463
    5. 'f' → logprob: -7.724348545074463
    6. ' pos' → logprob: -9.849349021911621
    7. 'idx' → logprob: -9.974349021911621
    8. 'k' → logprob: -10.224349021911621
    9. 'position' → logprob: -11.224349021911621
    10. 'faces' → logprob: -11.849349021911621

Token 507: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.4335228502750397
    2. '_idx' → logprob: -1.6835228204727173
    3. 'pos' → logprob: -1.9335228204727173
    4. '_index' → logprob: -4.683522701263428
    5. ' in' → logprob: -4.808522701263428
    6. '_position' → logprob: -6.683522701263428
    7. '_i' → logprob: -7.058522701263428
    8. 'idx' → logprob: -7.058522701263428
    9. 'i' → logprob: -7.683522701263428
    10. 's' → logprob: -8.808523178100586

Token 508: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011122338473796844
    2. 'in' → logprob: -4.511122226715088
    3. ' ' → logprob: -10.386122703552246
    4. ',' → logprob: -11.261122703552246
    5. '0' → logprob: -11.261122703552246
    6. ')' → logprob: -12.261122703552246
    7. '<|end|>' → logprob: -12.886122703552246
    8. '=' → logprob: -13.011122703552246
    9. '	in' → logprob: -13.636122703552246
    10. ' ,' → logprob: -13.636122703552246

Token 509: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004306692280806601
    2. ' range' → logprob: -7.750430583953857
    3. '   ' → logprob: -19.125431060791016
    4. ' ' → logprob: -20.250431060791016
    5. '(range' → logprob: -20.500431060791016
    6. '[' → logprob: -20.625431060791016
    7. '	range' → logprob: -20.625431060791016
    8. '  ' → logprob: -22.000431060791016
    9. '0' → logprob: -22.875431060791016
    10. '
' → logprob: -23.500431060791016

Token 510: '(' (ID: 7)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.002485884353518486
    2. '(' → logprob: -6.002485752105713
    3. ' ' → logprob: -11.502486228942871
    4. ' (' → logprob: -17.127485275268555
    5. '   ' → logprob: -17.252485275268555
    6. '=' → logprob: -18.002485275268555
    7. ')' → logprob: -18.377485275268555
    8. ',' → logprob: -18.752485275268555
    9. '```' → logprob: -18.752485275268555
    10. '(len' → logprob: -19.377485275268555

Token 511: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. 'len' → logprob: -17.875
    4. '   ' → logprob: -20.125
    5. '0' → logprob: -20.5
    6. ')' → logprob: -20.75
    7. '1' → logprob: -21.0
    8. '```' → logprob: -21.375
    9. '
' → logprob: -21.875
    10. '۶' → logprob: -22.6875

Token 512: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.38816601037979126
    2. '):' → logprob: -1.1381659507751465
    3. ':' → logprob: -7.0131659507751465
    4. '       ' → logprob: -8.638166427612305
    5. ':
' → logprob: -9.138166427612305
    6. '):
' → logprob: -9.513166427612305
    7. '   ' → logprob: -11.138166427612305
    8. ')' → logprob: -11.888166427612305
    9. ',' → logprob: -12.638166427612305
    10. '           ' → logprob: -12.763166427612305

Token 513: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.031014123931527138
    2. 'colors' → logprob: -3.6560142040252686
    3. 'counts' → logprob: -6.2810139656066895
    4. 'counter' → logprob: -6.9060139656066895
    5. ' colors' → logprob: -7.6560139656066895
    6. 'faces' → logprob: -8.031014442443848
    7. '       ' → logprob: -8.031014442443848
    8. 'count' → logprob: -8.406014442443848
    9. 'c' → logprob: -9.281014442443848
    10. ' counter' → logprob: -9.531014442443848

Token 514: ' colors' (ID: 10803)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' (adapté à ' colors') → logprob: -0.005062856711447239
    2. '           ' → logprob: -6.130063056945801
    3. 'counts' → logprob: -6.630063056945801
    4. 'counter' → logprob: -7.255063056945801
    5. ' colors' → logprob: -7.755063056945801
    6. 'faces' → logprob: -8.8800630569458
    7. 'col' → logprob: -9.2550630569458
    8. 'face' → logprob: -9.6300630569458
    9. 'count' → logprob: -10.0050630569458
    10. 'cnt' → logprob: -10.7550630569458

Token 515: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10041531175374985
    2. ' =' → logprob: -2.3504152297973633
    3. '_counter' → logprob: -9.725415229797363
    4. '_colors' → logprob: -9.975415229797363
    5. '   ' → logprob: -10.600415229797363
    6. '_counts' → logprob: -10.975415229797363
    7. '=[' → logprob: -10.975415229797363
    8. 'counter' → logprob: -11.975415229797363
    9. '_faces' → logprob: -12.100415229797363
    10. 's' → logprob: -12.600415229797363

Token 516: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11555910110473633
    2. ' [' → logprob: -2.6155591011047363
    3. '[color' → logprob: -3.8655591011047363
    4. '[f' → logprob: -4.990559101104736
    5. '[counter' → logprob: -5.240559101104736
    6. '[col' → logprob: -6.365559101104736
    7. '[c' → logprob: -7.240559101104736
    8. '[count' → logprob: -8.615558624267578
    9. '   ' → logprob: -9.365558624267578
    10. '[cnt' → logprob: -10.240558624267578

Token 517: 'faces' (ID: 11952)
  Prédit: 'faces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faces' → logprob: -0.28855130076408386
    2. 'face' → logprob: -1.4135513305664062
    3. 'cube' → logprob: -5.288551330566406
    4. 'f' → logprob: -6.538551330566406
    5. ' face' → logprob: -7.788551330566406
    6. ' faces' → logprob: -7.913551330566406
    7. ' cube' → logprob: -10.163551330566406
    8. 'c' → logprob: -10.663551330566406
    9. 'fc' → logprob: -11.663551330566406
    10. ' f' → logprob: -11.663551330566406

Token 518: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000984935206361115
    2. '[' → logprob: -7.125985145568848
    3. '[pos' → logprob: -9.375985145568848
    4. '[j' → logprob: -9.750985145568848
    5. 'i' → logprob: -10.875985145568848
    6. 'face' → logprob: -12.125985145568848
    7. '[color' → logprob: -12.625985145568848
    8. '][' → logprob: -13.125985145568848
    9. '[c' → logprob: -13.875985145568848
    10. ' [' → logprob: -14.000985145568848

Token 519: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6946991086006165
    2. '][' → logprob: -0.6946991086006165
    3. ' ][' → logprob: -7.319699287414551
    4. ' [' → logprob: -7.444699287414551
    5. ']' → logprob: -8.94469928741455
    6. 'face' → logprob: -9.81969928741455
    7. '
' → logprob: -9.81969928741455
    8. '(face' → logprob: -10.94469928741455
    9. ' face' → logprob: -11.19469928741455
    10. ')[' → logprob: -11.31969928741455

Token 520: 'face' (ID: 2300)
  Prédit: 'face'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -4.5491004129871726e-05
    2. ' face' → logprob: -10.000045776367188
    3. '(face' → logprob: -17.250045776367188
    4. '
' → logprob: -19.500045776367188
    5. 'faces' → logprob: -19.625045776367188
    6. '_face' → logprob: -20.250045776367188
    7. '[' → logprob: -20.375045776367188
    8. '   ' → logprob: -20.625045776367188
    9. 'fac' → logprob: -21.500045776367188
    10. '.face' → logprob: -21.750045776367188

Token 521: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0001239196863025427
    2. 'pos' → logprob: -9.000123977661133
    3. 'face' → logprob: -15.875123977661133
    4. 's' → logprob: -16.000123977661133
    5. 'Pos' → logprob: -16.500123977661133
    6. '[pos' → logprob: -17.375123977661133
    7. '[' → logprob: -17.875123977661133
    8. '	pos' → logprob: -18.750123977661133
    9. 'positions' → logprob: -18.875123977661133
    10. '_positions' → logprob: -19.125123977661133

Token 522: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02742737904191017
    2. ' for' → logprob: -4.2774271965026855
    3. ' ]' → logprob: -4.4024271965026855
    4. 'for' → logprob: -7.7774271965026855
    5. ')' → logprob: -8.152427673339844
    6. '           ' → logprob: -9.652427673339844
    7. ')]' → logprob: -9.652427673339844
    8. '       ' → logprob: -10.652427673339844
    9. '   ' → logprob: -11.277427673339844
    10. ']
' → logprob: -11.277427673339844

Token 523: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.008685367181897163
    2. 'for' → logprob: -4.75868558883667
    3. '           ' → logprob: -10.133685111999512
    4. ')' → logprob: -11.508685111999512
    5. ' ' → logprob: -12.133685111999512
    6. '       ' → logprob: -12.508685111999512
    7. '               ' → logprob: -12.633685111999512
    8. '          ' → logprob: -13.133685111999512
    9. '            ' → logprob: -13.383685111999512
    10. '        ' → logprob: -14.258685111999512

Token 524: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02630564197897911
    2. ' i' → logprob: -3.651305675506592
    3. ' ' → logprob: -12.526305198669434
    4. ' in' → logprob: -15.026305198669434
    5. '
' → logprob: -15.401305198669434
    6. '   ' → logprob: -15.401305198669434
    7. '	i' → logprob: -15.401305198669434
    8. ' faces' → logprob: -15.401305198669434
    9. 'faces' → logprob: -15.651305198669434
    10. '  ' → logprob: -15.901305198669434

Token 525: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04300820827484131
    2. 'in' → logprob: -3.168008327484131
    3. 'i' → logprob: -12.793007850646973
    4. 'n' → logprob: -12.793007850646973
    5. 'range' → logprob: -13.793007850646973
    6. ' ' → logprob: -14.043007850646973
    7. ')' → logprob: -15.043007850646973
    8. '
' → logprob: -15.293007850646973
    9. ' range' → logprob: -15.418007850646973
    10. 'import' → logprob: -15.418007850646973

Token 526: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014163628220558167
    2. ' range' → logprob: -4.264163494110107
    3. ' ' → logprob: -16.139163970947266
    4. '   ' → logprob: -18.139163970947266
    5. '
' → logprob: -18.264163970947266
    6. '0' → logprob: -18.639163970947266
    7. '	range' → logprob: -18.639163970947266
    8. 'faces' → logprob: -18.889163970947266
    9. '  ' → logprob: -18.889163970947266
    10. '(range' → logprob: -19.014163970947266

Token 527: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0006004538154229522
    2. 'range' → logprob: -7.500600337982178
    3. ' n' → logprob: -10.375600814819336
    4. ' range' → logprob: -11.125600814819336
    5. '(n' → logprob: -14.125600814819336
    6. '
' → logprob: -14.875600814819336
    7. '   ' → logprob: -15.000600814819336
    8. ' ' → logprob: -16.375600814819336
    9. ')' → logprob: -18.125600814819336
    10. '       ' → logprob: -18.250600814819336

Token 528: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.21410302817821503
    2. ']
' → logprob: -1.7141029834747314
    3. ')]' → logprob: -4.5891032218933105
    4. ')' → logprob: -7.2141032218933105
    5. ')]
' → logprob: -7.5891032218933105
    6. '       ' → logprob: -8.089102745056152
    7. '           ' → logprob: -8.089102745056152
    8. ' ]' → logprob: -8.464102745056152
    9. '])' → logprob: -8.839102745056152
    10. ' ]
' → logprob: -9.214102745056152

Token 529: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017049367306753993
    2. '       ' → logprob: -6.751705169677734
    3. 'counter' → logprob: -8.501705169677734
    4. 'count' → logprob: -8.876705169677734
    5. ' counter' → logprob: -9.501705169677734
    6. 'counts' → logprob: -9.626705169677734
    7. ' counts' → logprob: -10.751705169677734
    8. ' counters' → logprob: -12.126705169677734
    9. '_counter' → logprob: -12.501705169677734
    10. 'Counter' → logprob: -12.626705169677734

Token 530: ' cnt' (ID: 27340)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04693162068724632
    2. 'count' → logprob: -3.921931505203247
    3. 'counter' → logprob: -4.171931743621826
    4. 'counts' → logprob: -5.046931743621826
    5. 'cnt' (adapté à ' cnt') → logprob: -6.421931743621826
    6. '       ' → logprob: -7.046931743621826
    7. ' counter' → logprob: -7.171931743621826
    8. 'c' → logprob: -7.546931743621826
    9. ' counts' → logprob: -9.171931266784668
    10. ' c' → logprob: -9.546931266784668

Token 531: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0898117795586586
    2. ' =' → logprob: -2.4648118019104004
    3. 'er' → logprob: -7.3398118019104
    4. 'r' → logprob: -8.464811325073242
    5. ' ' → logprob: -13.214811325073242
    6. '=color' → logprob: -13.464811325073242
    7. '=C' → logprob: -13.714811325073242
    8. '.' → logprob: -13.839811325073242
    9. 'Counter' → logprob: -14.089811325073242
    10. '=count' → logprob: -14.214811325073242

Token 532: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.008616935461759567
    2. ' Counter' → logprob: -4.758616924285889
    3. 'Color' → logprob: -13.008617401123047
    4. 'Counters' → logprob: -16.133617401123047
    5. '.Counter' → logprob: -16.633617401123047
    6. 'counter' → logprob: -17.758617401123047
    7. ' ' → logprob: -18.008617401123047
    8. '   ' → logprob: -18.133617401123047
    9. ' counter' → logprob: -18.258617401123047
    10. '_counter' → logprob: -18.633617401123047

Token 533: '(colors' (ID: 131922)
  Prédit: '(colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(colors' → logprob: -5.5577775128767826e-06
    2. 'colors' → logprob: -12.125005722045898
    3. '(' → logprob: -17.7500057220459
    4. ' colors' → logprob: -18.3750057220459
    5. ' (' → logprob: -18.5000057220459
    6. '/colors' → logprob: -18.6250057220459
    7. '(chars' → logprob: -19.1250057220459
    8. '(
' → logprob: -19.1250057220459
    9. '.colors' → logprob: -19.2500057220459
    10. '(color' → logprob: -19.3750057220459

Token 534: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.33801400661468506
    2. ')' → logprob: -1.338014006614685
    3. ').' → logprob: -3.7130141258239746
    4. ')
' → logprob: -10.338013648986816
    5. '           ' → logprob: -11.838013648986816
    6. '),' → logprob: -13.838013648986816
    7. '       ' → logprob: -13.963013648986816
    8. ')

' → logprob: -14.088013648986816
    9. ')**' → logprob: -14.463013648986816
    10. '   ' → logprob: -14.713013648986816

Token 535: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007884251535870135
    2. ' cost' → logprob: -8.125788688659668
    3. ' most' → logprob: -8.250788688659668
    4. ' color' → logprob: -9.750788688659668
    5. '```' → logprob: -10.125788688659668
    6. '
' → logprob: -10.750788688659668
    7. ' max' → logprob: -10.875788688659668
    8. 'cost' → logprob: -11.250788688659668
    9. 'color' → logprob: -11.750788688659668
    10. 'max' → logprob: -11.875788688659668

Token 536: ' most' (ID: 1645)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3450455963611603
    2. 'most' (adapté à ' most') → logprob: -1.720045566558838
    3. '           ' → logprob: -2.845045566558838
    4. ' max' → logprob: -3.720045566558838
    5. 'best' → logprob: -4.345045566558838
    6. ' most' → logprob: -4.470045566558838
    7. 'cost' → logprob: -5.595045566558838
    8. 'common' → logprob: -6.845045566558838
    9. ' best' → logprob: -7.345045566558838
    10. ' cost' → logprob: -8.595046043395996

Token 537: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -0.014177493751049042
    2. 'common' → logprob: -4.264177322387695
    3. ' common' → logprob: -11.389177322387695
    4. '=' → logprob: -13.889177322387695
    5. '_color' → logprob: -14.389177322387695
    6. '	common' → logprob: -14.389177322387695
    7. ' =' → logprob: -16.014177322387695
    8. 'Common' → logprob: -16.014177322387695
    9. '_COMMON' → logprob: -16.264177322387695
    10. 'color' → logprob: -16.889177322387695

Token 538: ' =' (ID: 314)
  Prédit: '_color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.05691051110625267
    2. 'color' → logprob: -3.556910514831543
    3. ',' → logprob: -4.181910514831543
    4. ' =' → logprob: -5.181910514831543
    5. '=' → logprob: -6.181910514831543
    6. ',color' → logprob: -6.556910514831543
    7. ',_' → logprob: -7.556910514831543
    8. '[' → logprob: -7.931910514831543
    9. '=color' → logprob: -8.181910514831543
    10. 'Color' → logprob: -8.181910514831543

Token 539: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.00861528143286705
    2. ' cnt' → logprob: -4.758615493774414
    3. '[cnt' → logprob: -15.133615493774414
    4. '	cnt' → logprob: -15.383615493774414
    5. '(cnt' → logprob: -15.508615493774414
    6. 'counter' → logprob: -18.383615493774414
    7. '_cnt' → logprob: -18.633615493774414
    8. 'Cnt' → logprob: -19.383615493774414
    9. 'ct' → logprob: -19.633615493774414
    10. 'cn' → logprob: -20.133615493774414

Token 540: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -3.9292415749514475e-05
    2. '.' → logprob: -10.875039100646973
    3. '[' → logprob: -11.000039100646973
    4. ' .' → logprob: -13.625039100646973
    5. '.iloc' → logprob: -14.125039100646973
    6. 'most' → logprob: -15.500039100646973
    7. '=' → logprob: -15.625039100646973
    8. '   ' → logprob: -16.00004005432129
    9. '.max' → logprob: -16.00004005432129
    10. ').' → logprob: -16.12504005432129

Token 541: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -6.988221684878226e-06
    2. 'most' → logprob: -11.875006675720215
    3. ' ost' → logprob: -17.75000762939453
    4. ' most' → logprob: -19.12500762939453
    5. 'cost' → logprob: -19.75000762939453
    6. 'Most' → logprob: -19.87500762939453
    7. 'ост' → logprob: -20.25000762939453
    8. 'odel' → logprob: -21.37500762939453
    9. 'o' → logprob: -21.62500762939453
    10. '[' → logprob: -21.75000762939453

Token 542: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -0.34863927960395813
    2. 'common' → logprob: -1.2236392498016357
    3. '[' → logprob: -8.973639488220215
    4. ' common' → logprob: -11.223639488220215
    5. 'color' → logprob: -11.973639488220215
    6. 'ost' → logprob: -11.973639488220215
    7. 'count' → logprob: -12.348639488220215
    8. 'commons' → logprob: -12.598639488220215
    9. 'Common' → logprob: -12.973639488220215
    10. '```' → logprob: -12.973639488220215

Token 543: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0024839844554662704
    2. '1' → logprob: -6.00248384475708
    3. '()[' → logprob: -12.252484321594238
    4. '()' → logprob: -13.502484321594238
    5. '```' → logprob: -14.252484321594238
    6. ' (' → logprob: -14.502484321594238
    7. '[' → logprob: -15.002484321594238
    8. 'n' → logprob: -16.252483367919922
    9. 'def' → logprob: -16.502483367919922
    10. '(
' → logprob: -16.627483367919922

Token 544: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.180258191714529e-06
    2. '(' → logprob: -11.750008583068848
    3. ')' → logprob: -16.37500762939453
    4. ' ' → logprob: -16.62500762939453
    5. '```' → logprob: -17.75000762939453
    6. ')[' → logprob: -18.75000762939453
    7. '[' → logprob: -18.87500762939453
    8. '
' → logprob: -19.00000762939453
    9. '2' → logprob: -19.12500762939453
    10. 'n' → logprob: -19.37500762939453

Token 545: ')[' (ID: 13637)
  Prédit: '()['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()[' → logprob: -0.011815758422017097
    2. '()' → logprob: -5.386815547943115
    3. ')[' → logprob: -5.636815547943115
    4. '())[' → logprob: -5.886815547943115
    5. '[' → logprob: -7.261815547943115
    6. '(' → logprob: -9.636816024780273
    7. '()][' → logprob: -10.011816024780273
    8. '```' → logprob: -12.136816024780273
    9. ')' → logprob: -12.761816024780273
    10. '())' → logprob: -13.511816024780273

Token 546: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14317496120929718
    2. '0' → logprob: -3.143174886703491
    3. '[' → logprob: -3.393174886703491
    4. ')[' → logprob: -4.01817512512207
    5. '()[' → logprob: -4.14317512512207
    6. '(' → logprob: -4.39317512512207
    7. '][' → logprob: -4.64317512512207
    8. '```' → logprob: -7.76817512512207
    9. ' ' → logprob: -8.39317512512207
    10. '   ' → logprob: -10.14317512512207

Token 547: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4763828217983246
    2. '[' → logprob: -0.976382851600647
    3. ')[' → logprob: -6.726382732391357
    4. ' ][' → logprob: -7.976382732391357
    5. '()[' → logprob: -8.101383209228516
    6. '<|end|>' → logprob: -9.726383209228516
    7. '0' → logprob: -9.851383209228516
    8. 'import' → logprob: -10.101383209228516
    9. '```' → logprob: -10.101383209228516
    10. ' [' → logprob: -10.226383209228516

Token 548: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '0' → logprob: -15.125
    3. ' ' → logprob: -16.0
    4. '```' → logprob: -18.375
    5. '
' → logprob: -19.875
    6. '[' → logprob: -20.0
    7. '01' → logprob: -20.0
    8. '-' → logprob: -20.25
    9. '::-' → logprob: -20.625
    10. 'count' → logprob: -20.875

Token 549: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14887450635433197
    2. ')' → logprob: -2.148874521255493
    3. '           ' → logprob: -5.023874282836914
    4. ')]' → logprob: -5.023874282836914
    5. '       ' → logprob: -5.648874282836914
    6. '<|end|>' → logprob: -5.648874282836914
    7. ' ]' → logprob: -7.523874282836914
    8. ']
' → logprob: -8.023874282836914
    9. '<|end|>' → logprob: -9.023874282836914
    10. ']+' → logprob: -9.898874282836914

Token 550: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003634713648352772
    2. '       ' → logprob: -8.37536334991455
    3. ' cost' → logprob: -9.50036334991455
    4. 'cost' → logprob: -10.25036334991455
    5. '
' → logprob: -11.37536334991455
    6. '   ' → logprob: -12.12536334991455
    7. '```' → logprob: -12.75036334991455
    8. '               ' → logprob: -13.12536334991455
    9. '            
' → logprob: -15.75036334991455
    10. ',' → logprob: -15.87536334991455

Token 551: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.005319850519299507
    2. ' cost' → logprob: -5.255320072174072
    3. '           ' → logprob: -9.505319595336914
    4. '       ' → logprob: -11.505319595336914
    5. '   ' → logprob: -13.505319595336914
    6. 'color' → logprob: -16.755319595336914
    7. '               ' → logprob: -17.880319595336914
    8. '_cost' → logprob: -18.255319595336914
    9. '
' → logprob: -18.380319595336914
    10. '     ' → logprob: -18.505319595336914

Token 552: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5760183334350586
    2. '+=' → logprob: -0.8260183334350586
    3. '=' → logprob: -9.826018333435059
    4. '+=(' → logprob: -11.201018333435059
    5. ' =' → logprob: -12.451018333435059
    6. '   ' → logprob: -12.576018333435059
    7. '+' → logprob: -13.326018333435059
    8. ']+=' → logprob: -14.201018333435059
    9. '       ' → logprob: -14.701018333435059
    10. '           ' → logprob: -15.201018333435059

Token 553: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00031186718842945993
    2. ' n' → logprob: -8.500311851501465
    3. '(n' → logprob: -9.250311851501465
    4. 'len' → logprob: -11.375311851501465
    5. '   ' → logprob: -14.875311851501465
    6. ' (' → logprob: -15.500311851501465
    7. '(' → logprob: -16.00031280517578
    8. '(len' → logprob: -16.12531280517578
    9. ' ' → logprob: -17.12531280517578
    10. '	n' → logprob: -18.37531280517578

Token 554: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01251271367073059
    2. '-' → logprob: -4.387512683868408
    3. ' ' → logprob: -13.262513160705566
    4. ' ' → logprob: -13.637513160705566
    5. '‌' → logprob: -18.13751220703125
    6. ' minus' → logprob: -18.51251220703125
    7. '-cost' → logprob: -18.63751220703125
    8. '   ' → logprob: -18.76251220703125
    9. '<|end|>' → logprob: -18.76251220703125
    10. ' -
' → logprob: -19.01251220703125

Token 555: ' most' (ID: 1645)
  Prédit: 'most'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -0.0007099286303855479
    2. ' most' → logprob: -7.2507100105285645
    3. 'Most' → logprob: -19.000709533691406
    4. '   ' → logprob: -19.375709533691406
    5. '-most' → logprob: -20.000709533691406
    6. '
' → logprob: -20.000709533691406
    7. ' ' → logprob: -20.250709533691406
    8. '```' → logprob: -20.375709533691406
    9. ' ' → logprob: -21.375709533691406
    10. 'm' → logprob: -21.500709533691406

Token 556: '_common' (ID: 49800)
  Prédit: '_common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -1.4974866644479334e-05
    2. 'common' → logprob: -11.125015258789062
    3. '_cost' → logprob: -16.250015258789062
    4. '_comm' → logprob: -17.000015258789062
    5. 'Common' → logprob: -17.250015258789062
    6. '_m' → logprob: -17.625015258789062
    7. ' common' → logprob: -17.625015258789062
    8. '_' → logprob: -18.500015258789062
    9. '_COMMON' → logprob: -18.500015258789062
    10. '-common' → logprob: -18.500015258789062

Token 557: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6936164498329163
    2. '
' → logprob: -1.0686163902282715
    3. '   ' → logprob: -1.9436163902282715
    4. ' return' → logprob: -5.1936163902282715
    5. '    
' → logprob: -5.9436163902282715
    6. '        
' → logprob: -6.1936163902282715
    7. '           ' → logprob: -6.9436163902282715
    8. '  
' → logprob: -7.1936163902282715
    9. '
' → logprob: -8.06861686706543
    10. ' 
' → logprob: -8.56861686706543

Token 558: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3957761228084564
    2. '   ' → logprob: -1.5207761526107788
    3. '    
' → logprob: -3.6457760334014893
    4. '       ' → logprob: -3.8957760334014893
    5. ' return' → logprob: -3.8957760334014893
    6. ' if' → logprob: -4.270776271820068
    7. 'return' → logprob: -4.395776271820068
    8. 'if' → logprob: -5.145776271820068
    9. '  
' → logprob: -5.645776271820068
    10. '        
' → logprob: -6.020776271820068

Token 559: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08537177741527557
    2. '   ' → logprob: -3.835371732711792
    3. 'if' (adapté à ' if') → logprob: -3.960371732711792
    4. 'return' → logprob: -4.085371971130371
    5. ' if' → logprob: -4.335371971130371
    6. ' return' → logprob: -5.085371971130371
    7. '           ' → logprob: -5.335371971130371
    8. '
' → logprob: -9.210371971130371
    9. '```' → logprob: -9.210371971130371
    10. ' ' → logprob: -10.710371971130371

Token 560: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.00033593899570405483
    2. ' cost' → logprob: -8.000335693359375
    3. '   ' → logprob: -14.625335693359375
    4. ' ' → logprob: -17.125335693359375
    5. '  ' → logprob: -17.625335693359375
    6. '    ' → logprob: -17.875335693359375
    7. '(cost' → logprob: -18.875335693359375
    8. 'min' → logprob: -19.500335693359375
    9. '     ' → logprob: -19.750335693359375
    10. '
' → logprob: -20.875335693359375

Token 561: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.10021983087062836
    2. ' >=' → logprob: -2.3502197265625
    3. '>' → logprob: -11.6002197265625
    4. ' >' → logprob: -13.8502197265625
    5. '≥' → logprob: -14.1002197265625
    6. ']>=' → logprob: -14.2252197265625
    7. ')>=' → logprob: -14.3502197265625
    8. '   ' → logprob: -14.9752197265625
    9. ' ' → logprob: -15.3502197265625
    10. ' ' → logprob: -15.6002197265625

Token 562: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: 0.0
    2. ' min' → logprob: -18.75
    3. '   ' → logprob: -23.125
    4. '_min' → logprob: -23.875
    5. '	min' → logprob: -24.0
    6. 'max' → logprob: -25.125
    7. '```' → logprob: -26.0
    8. '=min' → logprob: -26.25
    9. 'minimum' → logprob: -26.875
    10. 'm' → logprob: -27.25

Token 563: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -9.088346359931165e-07
    2. 'cost' → logprob: -14.000000953674316
    3. 'ost' → logprob: -19.25
    4. '_COST' → logprob: -20.5
    5. ' cost' → logprob: -20.625
    6. 'Cost' → logprob: -20.75
    7. '-cost' → logprob: -22.625
    8. '_code' → logprob: -23.125
    9. '_min' → logprob: -24.5
    10. '_color' → logprob: -24.625

Token 564: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014196648262441158
    2. ':' → logprob: -4.764196872711182
    3. '           ' → logprob: -5.264196872711182
    4. ':
' → logprob: -8.889196395874023
    5. 'break' → logprob: -9.389196395874023
    6. ':return' → logprob: -9.889196395874023
    7. '	           ' → logprob: -10.764196395874023
    8. '                   ' → logprob: -10.764196395874023
    9. ' break' → logprob: -11.014196395874023
    10. '              ' → logprob: -11.514196395874023

Token 565: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4073866903781891
    2. 'break' → logprob: -1.1573866605758667
    3. '           ' → logprob: -3.9073867797851562
    4. ' break' → logprob: -8.532386779785156
    5. '	break' → logprob: -12.032386779785156
    6. '       ' → logprob: -12.407386779785156
    7. '                   ' → logprob: -13.032386779785156
    8. '```' → logprob: -13.407386779785156
    9. '   ' → logprob: -13.532386779785156
    10. '_break' → logprob: -14.782386779785156

Token 566: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0002671768015716225
    2. ' break' → logprob: -8.250267028808594
    3. '               ' → logprob: -12.750267028808594
    4. '                   ' → logprob: -12.750267028808594
    5. '	break' → logprob: -16.125267028808594
    6. '_break' → logprob: -18.125267028808594
    7. '```' → logprob: -18.250267028808594
    8. '                       ' → logprob: -18.250267028808594
    9. '           ' → logprob: -19.000267028808594
    10. 'return' → logprob: -20.125267028808594

Token 567: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02816152572631836
    2. '   ' → logprob: -4.153161525726318
    3. '
' → logprob: -5.778161525726318
    4. '<|end|>' → logprob: -6.153161525726318
    5. '           ' → logprob: -6.278161525726318
    6. '        
' → logprob: -6.403161525726318
    7. ' return' → logprob: -6.778161525726318
    8. '    
' → logprob: -7.403161525726318
    9. '+' → logprob: -8.528162002563477
    10. '            
' → logprob: -8.653162002563477

Token 568: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16882812976837158
    2. '   ' → logprob: -1.9188281297683716
    3. '           ' → logprob: -5.293828010559082
    4. ' return' → logprob: -6.418828010559082
    5. ' else' → logprob: -7.668828010559082
    6. ' ' → logprob: -8.293828010559082
    7. '```' → logprob: -8.293828010559082
    8. '               ' → logprob: -8.793828010559082
    9. 'else' → logprob: -8.918828010559082
    10. '+' → logprob: -9.418828010559082

Token 569: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09017827361822128
    2. ' if' → logprob: -3.4651782512664795
    3. 'if' (adapté à ' if') → logprob: -3.9651782512664795
    4. '       ' → logprob: -4.215178489685059
    5. ' return' → logprob: -5.090178489685059
    6. 'else' → logprob: -5.215178489685059
    7. 'return' → logprob: -5.465178489685059
    8. ' ' → logprob: -5.715178489685059
    9. ' else' → logprob: -6.715178489685059
    10. '
' → logprob: -8.715178489685059

Token 570: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.02324605919420719
    2. 'cost' → logprob: -3.7732460498809814
    3. '   ' → logprob: -14.398245811462402
    4. '    ' → logprob: -17.02324676513672
    5. '       ' → logprob: -18.64824676513672
    6. '(cost' → logprob: -18.64824676513672
    7. '_cost' → logprob: -19.64824676513672
    8. ' ' → logprob: -20.14824676513672
    9. '     ' → logprob: -20.39824676513672
    10. 'Cost' → logprob: -20.39824676513672

Token 571: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0548928864300251
    2. '<' → logprob: -2.9298927783966064
    3. '<|end|>' → logprob: -12.679892539978027
    4. ' >=' → logprob: -13.304892539978027
    5. ' ' → logprob: -13.304892539978027
    6. '   ' → logprob: -14.179892539978027
    7. '<int' → logprob: -14.679892539978027
    8. '<size' → logprob: -14.679892539978027
    9. ' ' → logprob: -14.929892539978027
    10. '<num' → logprob: -15.179892539978027

Token 572: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.01814994215965271
    2. ' min' → logprob: -4.0181498527526855
    3. '	min' → logprob: -17.643150329589844
    4. '=min' → logprob: -18.393150329589844
    5. '_min' → logprob: -18.518150329589844
    6. '(min' → logprob: -19.143150329589844
    7. '   ' → logprob: -19.643150329589844
    8. '[min' → logprob: -20.893150329589844
    9. '           ' → logprob: -20.893150329589844
    10. '.min' → logprob: -21.393150329589844

Token 573: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.9361264946837764e-07
    2. 'cost' → logprob: -16.875
    3. '_COST' → logprob: -18.375
    4. 'Cost' → logprob: -19.125
    5. '_code' → logprob: -21.125
    6. ' cost' → logprob: -21.125
    7. '-cost' → logprob: -21.625
    8. '_' → logprob: -22.5
    9. '_cos' → logprob: -22.625
    10. '_c' → logprob: -22.875

Token 574: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13255372643470764
    2. ':
' → logprob: -2.132553815841675
    3. '           ' → logprob: -6.132553577423096
    4. '=' → logprob: -6.257553577423096
    5. '       ' → logprob: -6.882553577423096
    6. '<|end|>' → logprob: -8.757554054260254
    7. ' =' → logprob: -9.507554054260254
    8. '   ' → logprob: -10.007554054260254
    9. '<|end|>' → logprob: -10.382554054260254
    10. '):
' → logprob: -10.507554054260254

Token 575: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008240316063165665
    2. '       ' → logprob: -5.383240222930908
    3. ' min' → logprob: -5.758240222930908
    4. 'min' → logprob: -7.758240222930908
    5. '               ' → logprob: -11.508240699768066
    6. '```' → logprob: -11.633240699768066
    7. '	min' → logprob: -12.383240699768066
    8. '   ' → logprob: -13.258240699768066
    9. '	       ' → logprob: -13.633240699768066
    10. '[min' → logprob: -13.883240699768066

Token 576: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.3896482288837433
    2. 'min' (adapté à ' min') → logprob: -1.139648199081421
    3. '           ' → logprob: -5.8896484375
    4. '	min' → logprob: -13.0146484375
    5. '       ' → logprob: -14.0146484375
    6. '_min' → logprob: -14.1396484375
    7. '               ' → logprob: -14.2646484375
    8. ',min' → logprob: -14.8896484375
    9. '[min' → logprob: -15.3896484375
    10. '(min' → logprob: -15.6396484375

Token 577: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -3.128163257315464e-07
    2. 'Cost' → logprob: -15.875
    3. '_code' → logprob: -16.625
    4. '_COST' → logprob: -16.75
    5. 'cost' → logprob: -17.0
    6. '_val' → logprob: -18.5
    7. '_' → logprob: -19.125
    8. '_value' → logprob: -19.875
    9. '_min' → logprob: -20.0
    10. '_score' → logprob: -20.125

Token 578: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163628220558167
    2. ' =' → logprob: -4.264163494110107
    3. '＝' → logprob: -16.639163970947266
    4. '=
' → logprob: -16.889163970947266
    5. '=

' → logprob: -17.139163970947266
    6. '=cut' → logprob: -18.264163970947266
    7. '=min' → logprob: -18.264163970947266
    8. '.=' → logprob: -20.014163970947266
    9. '=create' → logprob: -20.139163970947266
    10. '           ' → logprob: -20.264163970947266

Token 579: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0485873706638813
    2. ' cost' → logprob: -3.0485873222351074
    3. '_cost' → logprob: -19.423587799072266
    4. '(cost' → logprob: -20.298587799072266
    5. 'Cost' → logprob: -20.923587799072266
    6. 'code' → logprob: -21.298587799072266
    7. '   ' → logprob: -22.673587799072266
    8. 'score' → logprob: -22.923587799072266
    9. 'price' → logprob: -23.298587799072266
    10. 'color' → logprob: -23.298587799072266

Token 580: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13877803087234497
    2. '
' → logprob: -2.3887779712677
    3. 'return' → logprob: -3.3887779712677
    4. '    
' → logprob: -6.263778209686279
    5. '           ' → logprob: -6.763778209686279
    6. ' return' → logprob: -7.513778209686279
    7. '            
' → logprob: -8.638777732849121
    8. '```' → logprob: -8.763777732849121
    9. '       ' → logprob: -10.263777732849121
    10. '        
' → logprob: -10.638777732849121

Token 581: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20852909982204437
    2. 'return' → logprob: -2.208528995513916
    3. '
' → logprob: -2.583528995513916
    4. ' return' → logprob: -6.333528995513916
    5. '    
' → logprob: -7.333528995513916
    6. '           ' → logprob: -8.333529472351074
    7. '```' → logprob: -9.208529472351074
    8. '            
' → logprob: -10.708529472351074
    9. '       ' → logprob: -10.833529472351074
    10. '
' → logprob: -11.083529472351074

Token 582: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04088728502392769
    2. ' return' → logprob: -3.5408873558044434
    3. '   ' → logprob: -4.540887355804443
    4. '
' → logprob: -8.415886878967285
    5. '	return' → logprob: -9.040886878967285
    6. '```' → logprob: -9.790886878967285
    7. ':return' → logprob: -12.040886878967285
    8. '    
' → logprob: -12.665886878967285
    9. ')return' → logprob: -13.165886878967285
    10. '_return' → logprob: -13.665886878967285

Token 583: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.06196768581867218
    2. ' min' → logprob: -2.811967611312866
    3. '(min' → logprob: -19.936967849731445
    4. '	min' → logprob: -20.061967849731445
    5. '_min' → logprob: -20.061967849731445
    6. '[min' → logprob: -21.436967849731445
    7. 'max' → logprob: -22.186967849731445
    8. ',min' → logprob: -23.561967849731445
    9. '.min' → logprob: -24.061967849731445
    10. '=min' → logprob: -24.061967849731445

Token 584: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -7.896309739408025e-07
    2. 'cost' → logprob: -14.375000953674316
    3. '_min' → logprob: -16.5
    4. '_COST' → logprob: -17.375
    5. 'Cost' → logprob: -17.75
    6. '_' → logprob: -19.0
    7. '_code' → logprob: -19.25
    8. '_count' → logprob: -20.125
    9. '\' → logprob: -20.5
    10. '```' → logprob: -20.875

Token 585: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.950715184211731
    2. '<|end|>' → logprob: -1.075715184211731
    3. 'n' → logprob: -2.0757150650024414
    4. 'def' → logprob: -3.2007150650024414
    5. '\n' → logprob: -3.5757150650024414
    6. 'if' → logprob: -3.9507150650024414
    7. '#' → logprob: -4.325715065002441
    8. '```' → logprob: -4.450715065002441
    9. 'for' → logprob: -4.700715065002441
    10. '  
' → logprob: -5.200715065002441

Token 586: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25036922097206116
    2. 'def' → logprob: -1.8753691911697388
    3. '```' → logprob: -3.2503693103790283
    4. 'for' → logprob: -4.125369071960449
    5. '#' → logprob: -5.250369071960449
    6. 'n' → logprob: -5.625369071960449
    7. '<|end|>' → logprob: -6.125369071960449
    8. 'data' → logprob: -7.000369071960449
    9. ' if' → logprob: -7.250369071960449
    10. 'print' → logprob: -8.75036907196045

Token 587: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.00011880126112373546
    2. 'main' → logprob: -9.12511920928955
    3. ' solve' → logprob: -11.62511920928955
    4. '	main' → logprob: -15.37511920928955
    5. ' process' → logprob: -15.50011920928955
    6. ' parse' → logprob: -15.87511920928955
    7. ' input' → logprob: -16.125118255615234
    8. ' read' → logprob: -16.625118255615234
    9. '_main' → logprob: -16.625118255615234
    10. 'solve' → logprob: -16.750118255615234

Token 588: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00013369438238441944
    2. '():
' → logprob: -9.375133514404297
    3. ' ():' → logprob: -10.000133514404297
    4. '()' → logprob: -13.375133514404297
    5. '()>' → logprob: -14.125133514404297
    6. '(' → logprob: -14.500133514404297
    7. '():
' → logprob: -15.000133514404297
    8. '():

' → logprob: -15.875133514404297
    9. '()">' → logprob: -17.500133514404297
    10. '_' → logprob: -17.750133514404297

Token 589: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5685429573059082
    2. ' lines' → logprob: -1.1935429573059082
    3. 'import' → logprob: -3.693542957305908
    4. '	lines' → logprob: -3.943542957305908
    5. 'input' → logprob: -4.068542957305908
    6. '```' → logprob: -4.318542957305908
    7. ' readline' → logprob: -4.568542957305908
    8. ' input' → logprob: -4.568542957305908
    9. 'lines' → logprob: -4.943542957305908
    10. ' line' → logprob: -4.943542957305908

Token 590: ' lines' (ID: 8698)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.17647844552993774
    2. 'n' → logprob: -2.426478385925293
    3. ' t' → logprob: -3.301478385925293
    4. ' import' → logprob: -3.676478385925293
    5. '   ' → logprob: -5.176478385925293
    6. ' T' → logprob: -5.926478385925293
    7. 'import' → logprob: -6.426478385925293
    8. 't' → logprob: -7.051478385925293
    9. ' input' → logprob: -8.676478385925293
    10. ' num' → logprob: -8.676478385925293

Token 591: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2330930382013321
    2. ' =' → logprob: -1.608093023300171
    3. '()' → logprob: -4.98309326171875
    4. '   ' → logprob: -7.73309326171875
    5. '_' → logprob: -8.85809326171875
    6. '=[]' → logprob: -9.23309326171875
    7. '[]' → logprob: -9.60809326171875
    8. '[:]' → logprob: -11.10809326171875
    9. '[' → logprob: -11.35809326171875
    10. '(' → logprob: -12.35809326171875

Token 592: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.10205130279064178
    2. ' stdin' → logprob: -2.352051258087158
    3. '(stdin' → logprob: -6.977051258087158
    4. '[' → logprob: -7.477051258087158
    5. ' [' → logprob: -8.602051734924316
    6. 'list' → logprob: -9.602051734924316
    7. '.stdin' → logprob: -9.852051734924316
    8. '[]' → logprob: -10.602051734924316
    9. ' list' → logprob: -12.352051734924316
    10. 'sys' → logprob: -12.977051734924316

Token 593: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.4653470814228058
    2. '.readlines' → logprob: -1.4653470516204834
    3. '.readline' → logprob: -1.9653470516204834
    4. 'read' → logprob: -6.9653472900390625
    5. '.' → logprob: -10.590347290039062
    6. '().' → logprob: -11.965347290039062
    7. '_read' → logprob: -13.590347290039062
    8. '	read' → logprob: -15.215347290039062
    9. ' .' → logprob: -15.590347290039062
    10. ' read' → logprob: -15.715347290039062

Token 594: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0019349466310814023
    2. '()' → logprob: -6.251935005187988
    3. 'lines' → logprob: -12.376935005187988
    4. ' ().' → logprob: -14.001935005187988
    5. '_lines' → logprob: -14.501935005187988
    6. '(' → logprob: -14.876935005187988
    7. '()\' → logprob: -15.876935005187988
    8. '()
' → logprob: -16.126934051513672
    9. 'line' → logprob: -16.251934051513672
    10. '()`' → logprob: -17.126934051513672

Token 595: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.2519315779209137
    2. 'split' → logprob: -1.5019315481185913
    3. 'decode' → logprob: -13.001931190490723
    4. 'rstrip' → logprob: -15.376931190490723
    5. 'read' → logprob: -17.50193214416504
    6. ' split' → logprob: -18.87693214416504
    7. '(split' → logprob: -19.25193214416504
    8. ' strip' → logprob: -19.37693214416504
    9. '.strip' → logprob: -19.75193214416504
    10. '(strip' → logprob: -20.00193214416504

Token 596: '('\' (ID: 24345)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0007111206650733948
    2. '()' → logprob: -7.250710964202881
    3. 'split' → logprob: -14.375711441040039
    4. ' ().' → logprob: -16.00071144104004
    5. '()
' → logprob: -16.12571144104004
    6. '(' → logprob: -16.25071144104004
    7. '.split' → logprob: -16.75071144104004
    8. '().'' → logprob: -17.12571144104004
    9. '('\' → logprob: -17.25071144104004
    10. '()\' → logprob: -17.62571144104004

Token 597: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02399994246661663
    2. '\n' → logprob: -3.7739999294281006
    3. ' \' → logprob: -8.27400016784668
    4. '\' → logprob: -8.39900016784668
    5. ')' → logprob: -9.52400016784668
    6. 'r' → logprob: -10.14900016784668
    7. ''\' → logprob: -10.52400016784668
    8. '```' → logprob: -10.77400016784668
    9. 'input' → logprob: -11.02400016784668
    10. '')' → logprob: -11.02400016784668

Token 598: ' ').' (ID: 114765)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ').' → logprob: -0.6719138026237488
    2. '()).' → logprob: -1.0469138622283936
    3. '()' → logprob: -2.1719138622283936
    4. ')' → logprob: -3.9219138622283936
    5. '').' → logprob: -5.9219136238098145
    6. '())' → logprob: -7.0469136238098145
    7. '().' → logprob: -7.2969136238098145
    8. '(' → logprob: -9.671914100646973
    9. '").' → logprob: -10.171914100646973
    10. '()\' → logprob: -10.296914100646973

Token 599: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.2664456789934775e-06
    2. 'strip' → logprob: -13.750000953674316
    3. ' split' → logprob: -16.125001907348633
    4. 'rstrip' → logprob: -17.625001907348633
    5. '(split' → logprob: -19.000001907348633
    6. 'lines' → logprob: -20.875001907348633
    7. 'spl' → logprob: -21.375001907348633
    8. '.split' → logprob: -22.500001907348633
    9. '```' → logprob: -22.625001907348633
    10. 's' → logprob: -23.000001907348633

Token 600: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.22546875476837158
    2. '()' → logprob: -1.7254687547683716
    3. 'lines' → logprob: -4.225468635559082
    4. '('' → logprob: -4.725468635559082
    5. '(['' → logprob: -9.100468635559082
    6. '(' → logprob: -9.100468635559082
    7. '("\' → logprob: -10.475468635559082
    8. '()\' → logprob: -11.225468635559082
    9. '()[' → logprob: -11.975468635559082
    10. '('.')' → logprob: -12.850468635559082

Token 601: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008622966706752777
    2. '\n' → logprob: -4.758623123168945
    3. 'newline' → logprob: -13.008623123168945
    4. ' \' → logprob: -13.133623123168945
    5. '
' → logprob: -13.883623123168945
    6. ' n' → logprob: -13.883623123168945
    7. '')' → logprob: -14.008623123168945
    8. 'lines' → logprob: -14.633623123168945
    9. ' ')' → logprob: -14.758623123168945
    10. ''n' → logprob: -15.758623123168945

Token 602: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0518774650990963
    2. ')' → logprob: -3.051877498626709
    3. '')
' → logprob: -5.801877498626709
    4. '   ' → logprob: -9.17687702178955
    5. ')
' → logprob: -9.55187702178955
    6. '")' → logprob: -10.42687702178955
    7. '()' → logprob: -10.55187702178955
    8. ']' → logprob: -11.80187702178955
    9. '')
' → logprob: -12.17687702178955
    10. '[' → logprob: -12.55187702178955

Token 603: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.29756805300712585
    2. '   ' → logprob: -1.6725680828094482
    3. ' n' → logprob: -3.2975680828094482
    4. 't' → logprob: -3.9225680828094482
    5. 'num' → logprob: -5.297567844390869
    6. 'i' → logprob: -5.422567844390869
    7. ' t' → logprob: -6.047567844390869
    8. '```' → logprob: -7.797567844390869
    9. ' i' → logprob: -8.422568321228027
    10. ' num' → logprob: -9.047568321228027

Token 604: ' idx' (ID: 14016)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1713590919971466
    2. 'n' → logprob: -2.671359062194824
    3. 'i' → logprob: -2.796359062194824
    4. 'T' → logprob: -4.421359062194824
    5. 'num' → logprob: -5.046359062194824
    6. ' t' → logprob: -5.421359062194824
    7. '   ' → logprob: -6.046359062194824
    8. 'q' → logprob: -7.421359062194824
    9. 'idx' (adapté à ' idx') → logprob: -7.671359062194824
    10. 'if' → logprob: -7.796359062194824

Token 605: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.386891633272171
    2. ' =' → logprob: -1.1368916034698486
    3. 's' → logprob: -11.88689136505127
    4. '_' → logprob: -12.38689136505127
    5. ',' → logprob: -13.38689136505127
    6. ')' → logprob: -13.51189136505127
    7. ' ' → logprob: -13.51189136505127
    8. '(' → logprob: -14.13689136505127
    9. ' =
' → logprob: -14.38689136505127
    10. '   ' → logprob: -14.51189136505127

Token 606: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.281485836254433e-05
    2. '1' → logprob: -9.375092506408691
    3. ' ' → logprob: -11.750092506408691
    4. 'int' → logprob: -18.750093460083008
    5. '   ' → logprob: -19.750093460083008
    6. '2' → logprob: -20.375093460083008
    7. 'len' → logprob: -20.500093460083008
    8. '```' → logprob: -21.000093460083008
    9. '[' → logprob: -21.500093460083008
    10. '
' → logprob: -21.625093460083008

Token 607: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.12500286102295
    3. '1' → logprob: -14.12500286102295
    4. '=' → logprob: -20.625001907348633
    5. '   ' → logprob: -20.875001907348633
    6. 'int' → logprob: -21.375001907348633
    7. 'len' → logprob: -21.625001907348633
    8. '2' → logprob: -21.625001907348633
    9. 'idx' → logprob: -22.375001907348633
    10. '```' → logprob: -22.500001907348633

Token 608: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4248417913913727
    2. '   ' → logprob: -1.5498417615890503
    3. ' n' → logprob: -2.54984188079834
    4. 't' → logprob: -3.67484188079834
    5. 'while' → logprob: -4.17484188079834
    6. ' while' → logprob: -4.67484188079834
    7. ' t' → logprob: -5.79984188079834
    8. 'num' → logprob: -6.79984188079834
    9. '	n' → logprob: -6.92484188079834
    10. '```' → logprob: -8.92484188079834

Token 609: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6143602728843689
    2. ' n' → logprob: -1.1143603324890137
    3. '   ' → logprob: -2.7393603324890137
    4. 't' → logprob: -3.9893603324890137
    5. ' while' → logprob: -3.9893603324890137
    6. 'while' → logprob: -4.239360332489014
    7. ' t' → logprob: -4.364360332489014
    8. 'num' → logprob: -6.739360332489014
    9. '```' → logprob: -8.239359855651855
    10. '	n' → logprob: -8.364359855651855

Token 610: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.21060027182102203
    2. 't' → logprob: -1.7106002569198608
    3. ' while' → logprob: -5.21060037612915
    4. 'T' → logprob: -5.96060037612915
    5. 'q' → logprob: -8.085599899291992
    6. ' t' → logprob: -8.085599899291992
    7. '   ' → logprob: -8.210599899291992
    8. 'n' → logprob: -8.710599899291992
    9. ' T' → logprob: -10.710599899291992
    10. 'num' → logprob: -10.960599899291992

Token 611: ' True' (ID: 6432)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.1299353539943695
    2. ' idx' → logprob: -2.1299352645874023
    3. 'True' → logprob: -6.504935264587402
    4. ' True' → logprob: -6.504935264587402
    5. '(idx' → logprob: -12.379935264587402
    6. ' lines' → logprob: -13.129935264587402
    7. '	idx' → logprob: -13.504935264587402
    8. 'lines' → logprob: -13.629935264587402
    9. ' ' → logprob: -14.129935264587402
    10. '   ' → logprob: -14.504935264587402

Token 612: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08484943956136703
    2. '       ' → logprob: -3.0848493576049805
    3. ':
' → logprob: -3.9598493576049805
    4. '   ' → logprob: -4.3348493576049805
    5. '<|end|>' → logprob: -6.4598493576049805
    6. ',' → logprob: -7.0848493576049805
    7. '<|end|>' → logprob: -8.45984935760498
    8. 'and' → logprob: -8.58484935760498
    9. ' and' → logprob: -8.83484935760498
    10. '```' → logprob: -9.33484935760498

Token 613: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15844395756721497
    2. '       ' → logprob: -2.4084439277648926
    3. ' if' → logprob: -3.1584439277648926
    4. 'if' → logprob: -4.283443927764893
    5. '	if' → logprob: -8.90844440460205
    6. '```' → logprob: -9.78344440460205
    7. '<|end|>' → logprob: -10.15844440460205
    8. ' ' → logprob: -11.28344440460205
    9. '	' → logprob: -11.90844440460205
    10. '	   ' → logprob: -12.03344440460205

Token 614: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07401783764362335
    2. ' if' → logprob: -3.0740177631378174
    3. 'n' → logprob: -4.0740180015563965
    4. '   ' → logprob: -4.8240180015563965
    5. ' n' → logprob: -10.324017524719238
    6. '	if' → logprob: -11.199017524719238
    7. 'l' → logprob: -11.324017524719238
    8. 'line' → logprob: -12.699017524719238
    9. '       ' → logprob: -13.074017524719238
    10. '```' → logprob: -14.449017524719238

Token 615: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.008620604872703552
    2. ' idx' → logprob: -4.758620738983154
    3. '   ' → logprob: -13.008620262145996
    4. '	idx' → logprob: -13.508620262145996
    5. '(idx' → logprob: -14.383620262145996
    6. ' ' → logprob: -14.633620262145996
    7. 'lines' → logprob: -14.758620262145996
    8. ' not' → logprob: -14.883620262145996
    9. 'not' → logprob: -15.008620262145996
    10. '_idx' → logprob: -15.383620262145996

Token 616: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.28189411759376526
    2. ' >=' → logprob: -1.4068940877914429
    3. '==' → logprob: -7.406894207000732
    4. ' ==' → logprob: -9.281893730163574
    5. ']>=' → logprob: -10.781893730163574
    6. ')>=' → logprob: -11.406893730163574
    7. '<' → logprob: -13.156893730163574
    8. '<len' → logprob: -13.156893730163574
    9. ' <' → logprob: -13.281893730163574
    10. '=' → logprob: -13.781893730163574

Token 617: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -3.054500666621607e-06
    2. ' len' → logprob: -12.75000286102295
    3. 'lines' → logprob: -15.87500286102295
    4. '(len' → logprob: -19.375003814697266
    5. 'length' → logprob: -20.000003814697266
    6. '=len' → logprob: -20.625003814697266
    7. '<len' → logprob: -21.000003814697266
    8. 'line' → logprob: -21.250003814697266
    9. '	len' → logprob: -21.250003814697266
    10. 'int' → logprob: -21.625003814697266

Token 618: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.030076507478952408
    2. 'lines' → logprob: -3.530076503753662
    3. ' lines' → logprob: -8.03007698059082
    4. '	lines' → logprob: -14.90507698059082
    5. '(' → logprob: -15.65507698059082
    6. '_lines' → logprob: -17.15507698059082
    7. '-lines' → logprob: -17.90507698059082
    8. '.lines' → logprob: -18.03007698059082
    9. 'Lines' → logprob: -18.03007698059082
    10. '(line' → logprob: -19.15507698059082

Token 619: '):
' (ID: 1883)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.15735310316085815
    2. ':' → logprob: -2.032353162765503
    3. ':
' → logprob: -4.907352924346924
    4. 'or' → logprob: -5.407352924346924
    5. '   ' → logprob: -7.032352924346924
    6. ')' → logprob: -7.032352924346924
    7. '       ' → logprob: -7.782352924346924
    8. '):' → logprob: -9.282353401184082
    9. ':return' → logprob: -9.282353401184082
    10. '	or' → logprob: -9.282353401184082

Token 620: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00479796901345253
    2. '       ' → logprob: -5.37979793548584
    3. '   ' → logprob: -9.12979793548584
    4. '		' → logprob: -10.50479793548584
    5. 'break' → logprob: -11.37979793548584
    6. ' ' → logprob: -12.37979793548584
    7. '<|end|>' → logprob: -12.37979793548584
    8. ' break' → logprob: -12.50479793548584
    9. '	   ' → logprob: -12.50479793548584
    10. '	       ' → logprob: -12.50479793548584

Token 621: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.7263498902320862
    2. '           ' → logprob: -0.9763498902320862
    3. 'return' → logprob: -2.4763498306274414
    4. '       ' → logprob: -3.2263498306274414
    5. ' break' → logprob: -4.226349830627441
    6. ' return' → logprob: -7.226349830627441
    7. '	break' → logprob: -8.351349830627441
    8. '   ' → logprob: -8.476349830627441
    9. '```' → logprob: -10.101349830627441
    10. '               ' → logprob: -10.976349830627441

Token 622: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001576044363901019
    2. '   ' → logprob: -7.376575946807861
    3. '<|end|>' → logprob: -7.626575946807861
    4. '```' → logprob: -8.75157642364502
    5. '        
' → logprob: -9.37657642364502
    6. '	' → logprob: -9.87657642364502
    7. '
' → logprob: -9.87657642364502
    8. ',' → logprob: -11.12657642364502
    9. ' ' → logprob: -11.12657642364502
    10. '    
' → logprob: -11.25157642364502

Token 623: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011324850842356682
    2. '   ' → logprob: -4.886324882507324
    3. '```' → logprob: -6.011324882507324
    4. '<|end|>' → logprob: -7.761324882507324
    5. ' ' → logprob: -8.386324882507324
    6. '        
' → logprob: -8.386324882507324
    7. '	' → logprob: -9.261324882507324
    8. '  
' → logprob: -9.886324882507324
    9. '    
' → logprob: -10.011324882507324
    10. '``' → logprob: -10.636324882507324

Token 624: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.27488183975219727
    2. '   ' → logprob: -2.0248818397521973
    3. ' n' → logprob: -3.6498818397521973
    4. 'line' → logprob: -3.7748818397521973
    5. 'num' → logprob: -3.7748818397521973
    6. 'count' → logprob: -3.8998818397521973
    7. '       ' → logprob: -5.149881839752197
    8. ' line' → logprob: -6.149881839752197
    9. 'cnt' → logprob: -6.274881839752197
    10. 't' → logprob: -6.399881839752197

Token 625: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31341174244880676
    2. '=' → logprob: -1.3134117126464844
    3. '=int' → logprob: -8.813411712646484
    4. ',' → logprob: -14.688411712646484
    5. '   ' → logprob: -15.438411712646484
    6. ' =
' → logprob: -15.813411712646484
    7. '=line' → logprob: -16.188411712646484
    8. '＝' → logprob: -16.313411712646484
    9. '	' → logprob: -16.438411712646484
    10. '=n' → logprob: -16.813411712646484

Token 626: ' lines' (ID: 8698)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00033546582562848926
    2. ' int' → logprob: -8.000335693359375
    3. ' ' → logprob: -20.500335693359375
    4. '(int' → logprob: -21.000335693359375
    5. '[int' → logprob: -22.375335693359375
    6. '	int' → logprob: -22.625335693359375
    7. '  ' → logprob: -22.625335693359375
    8. '=int' → logprob: -22.625335693359375
    9. '   ' → logprob: -22.875335693359375
    10. '
' → logprob: -22.875335693359375

Token 627: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -8.2994620242971e-06
    2. '[' → logprob: -11.875008583068848
    3. '```' → logprob: -14.500008583068848
    4. '[int' → logprob: -15.125008583068848
    5. ' [' → logprob: -15.750008583068848
    6. 'idx' → logprob: -15.875008583068848
    7. '[index' → logprob: -17.12500762939453
    8. '   ' → logprob: -17.12500762939453
    9. '[token' → logprob: -17.37500762939453
    10. '[id' → logprob: -17.50000762939453

Token 628: '].' (ID: 1651)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.32337191700935364
    2. '].' → logprob: -1.3233718872070312
    3. ']
' → logprob: -4.698371887207031
    4. ']+' → logprob: -7.948371887207031
    5. '];' → logprob: -8.323371887207031
    6. ' ].' → logprob: -9.823371887207031
    7. '.strip' → logprob: -9.823371887207031
    8. ' ]' → logprob: -10.448371887207031
    9. '[idx' → logprob: -10.448371887207031
    10. '][' → logprob: -10.448371887207031

Token 629: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.9361264946837764e-07
    2. 'split' → logprob: -15.75
    3. 'rstrip' → logprob: -16.875
    4. ' strip' → logprob: -18.5
    5. '.strip' → logprob: -19.875
    6. '_strip' → logprob: -19.875
    7. '(strip' → logprob: -21.125
    8. 'str' → logprob: -21.125
    9. '```' → logprob: -21.375
    10. '-strip' → logprob: -21.875

Token 630: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00048596507986076176
    2. '().' → logprob: -8.000486373901367
    3. '()
' → logprob: -9.625486373901367
    4. '('' → logprob: -10.000486373901367
    5. '(' → logprob: -11.250486373901367
    6. '()='' → logprob: -12.375486373901367
    7. ' ()' → logprob: -12.625486373901367
    8. '()\' → logprob: -13.125486373901367
    9. '('.')' → logprob: -13.125486373901367
    10. '()

' → logprob: -13.375486373901367

Token 631: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6398468613624573
    2. ' =' → logprob: -1.7648468017578125
    3. '<|end|>' → logprob: -2.2648468017578125
    4. '=' → logprob: -2.3898468017578125
    5. 'if' → logprob: -3.0148468017578125
    6. ' if' → logprob: -4.3898468017578125
    7. '        
' → logprob: -4.7648468017578125
    8. '
' → logprob: -4.8898468017578125
    9. '<|end|>' → logprob: -4.8898468017578125
    10. '```' → logprob: -5.2648468017578125

Token 632: ' idx' (ID: 14016)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09340183436870575
    2. ' if' → logprob: -3.0934019088745117
    3. 'idx' (adapté à ' idx') → logprob: -3.4684019088745117
    4. '
' → logprob: -4.968401908874512
    5. '       ' → logprob: -5.468401908874512
    6. '```' → logprob: -7.968401908874512
    7. '[idx' → logprob: -8.343401908874512
    8. '\n' → logprob: -8.343401908874512
    9. 'n' → logprob: -8.843401908874512
    10. '        
' → logprob: -9.093401908874512

Token 633: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.001516173011623323
    2. ' +=' → logprob: -6.501516342163086
    3. '+' → logprob: -11.251516342163086
    4. '=' → logprob: -14.626516342163086
    5. ']+=' → logprob: -15.376516342163086
    6. '```' → logprob: -16.876516342163086
    7. '+="' → logprob: -17.001516342163086
    8. '++' → logprob: -17.376516342163086
    9. '+='' → logprob: -17.376516342163086
    10. '+=(' → logprob: -18.501516342163086

Token 634: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '```' → logprob: -23.250017166137695
    4. '0' → logprob: -24.125017166137695
    5. '１' → logprob: -24.875017166137695
    6. '+' → logprob: -25.000017166137695
    7. '`' → logprob: -25.250017166137695
    8. '
' → logprob: -25.375017166137695
    9. ' 
' → logprob: -25.375017166137695
    10. '   ' → logprob: -25.625017166137695

Token 635: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.875
    3. '```' → logprob: -22.5
    4. '
' → logprob: -25.125
    5. '``' → logprob: -25.75
    6. '0' → logprob: -25.875
    7. '   ' → logprob: -26.0
    8. '１' → logprob: -26.125
    9. 'int' → logprob: -26.25
    10. '`' → logprob: -26.75

Token 636: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40763065218925476
    2. 'if' → logprob: -1.5326306819915771
    3. ' if' → logprob: -2.282630681991577
    4. '
' → logprob: -5.407630443572998
    5. '```' → logprob: -5.407630443572998
    6. '<|end|>' → logprob: -6.032630443572998
    7. 'n' → logprob: -6.407630443572998
    8. '        
' → logprob: -6.907630443572998
    9. '   ' → logprob: -7.657630443572998
    10. 'If' → logprob: -8.157630920410156

Token 637: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005837318487465382
    2. ' if' → logprob: -5.505837440490723
    3. '       ' → logprob: -6.380837440490723
    4. '```' → logprob: -10.005837440490723
    5. 'n' → logprob: -11.505837440490723
    6. '   ' → logprob: -12.005837440490723
    7. '	if' → logprob: -13.255837440490723
    8. 'try' → logprob: -15.880837440490723
    9. 'If' → logprob: -16.380836486816406
    10. '``' → logprob: -16.505836486816406

Token 638: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.3782830137643032e-05
    2. ' if' → logprob: -11.25001335144043
    3. '       ' → logprob: -14.12501335144043
    4. 'If' → logprob: -18.50001335144043
    5. '```' → logprob: -19.50001335144043
    6. '   ' → logprob: -19.62501335144043
    7. '	if' → logprob: -20.12501335144043
    8. 'try' → logprob: -21.00001335144043
    9. 'i' → logprob: -21.37501335144043
    10. '           ' → logprob: -22.37501335144043

Token 639: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11416330188512802
    2. ' not' → logprob: -2.614163398742676
    3. 'not' → logprob: -3.614163398742676
    4. ' n' → logprob: -4.864163398742676
    5. 'n't' → logprob: -13.989163398742676
    6. ' ' → logprob: -17.23916244506836
    7. '!' → logprob: -17.36416244506836
    8. '	n' → logprob: -17.61416244506836
    9. '   ' → logprob: -17.86416244506836
    10. 'len' → logprob: -18.23916244506836

Token 640: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1130446344614029
    2. '==' → logprob: -2.2380447387695312
    3. '=' → logprob: -9.488044738769531
    4. '.strip' → logprob: -9.613044738769531
    5. ' =' → logprob: -10.238044738769531
    6. '()==' → logprob: -10.863044738769531
    7. ')==' → logprob: -12.238044738769531
    8. '=='' → logprob: -12.613044738769531
    9. ' ===' → logprob: -12.863044738769531
    10. '[' → logprob: -12.988044738769531

Token 641: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0029651038348674774
    2. '"' → logprob: -6.002964973449707
    3. '''' → logprob: -7.752964973449707
    4. '0' → logprob: -9.752964973449707
    5. '""' → logprob: -14.002964973449707
    6. ''A' → logprob: -15.377964973449707
    7. ''O' → logprob: -15.627964973449707
    8. ' '' → logprob: -15.627964973449707
    9. ''''' → logprob: -15.877964973449707
    10. '`' → logprob: -16.377965927124023

Token 642: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1270114779472351
    2. ''' → logprob: -2.12701153755188
    3. '''' → logprob: -9.7520112991333
    4. '"' → logprob: -11.3770112991333
    5. '':' → logprob: -11.8770112991333
    6. '':
' → logprob: -13.3770112991333
    7. '```' → logprob: -14.0020112991333
    8. ''''' → logprob: -14.1270112991333
    9. ' ' → logprob: -14.2520112991333
    10. ''\' → logprob: -14.6270112991333

Token 643: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.39833134412765503
    2. '':' → logprob: -1.1483314037322998
    3. '\n' → logprob: -4.648331165313721
    4. ''' → logprob: -6.898331165313721
    5. '':
' → logprob: -7.398331165313721
    6. ':' → logprob: -9.398331642150879
    7. ''):
' → logprob: -9.773331642150879
    8. ':
' → logprob: -10.773331642150879
    9. '       ' → logprob: -12.023331642150879
    10. ':return' → logprob: -12.773331642150879

Token 644: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006844374001957476
    2. '       ' → logprob: -7.5006842613220215
    3. '		' → logprob: -9.62568473815918
    4. '   ' → logprob: -11.00068473815918
    5. '	       ' → logprob: -11.00068473815918
    6. '               ' → logprob: -12.12568473815918
    7. '          ' → logprob: -12.12568473815918
    8. '```' → logprob: -12.12568473815918
    9. '	   ' → logprob: -13.00068473815918
    10. '	' → logprob: -13.25068473815918

Token 645: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06703858077526093
    2. 'break' (adapté à ' break') → logprob: -2.8170385360717773
    3. ' break' → logprob: -6.067038536071777
    4. 'return' → logprob: -6.317038536071777
    5. '	break' → logprob: -8.067038536071777
    6. '		' → logprob: -8.067038536071777
    7. '       ' → logprob: -9.067038536071777
    8. '               ' → logprob: -9.317038536071777
    9. '	       ' → logprob: -9.567038536071777
    10. ' return' → logprob: -10.817038536071777

Token 646: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07265006750822067
    2. 'n' → logprob: -2.6976499557495117
    3. ' n' → logprob: -6.072649955749512
    4. '```' → logprob: -8.322649955749512
    5. '	n' → logprob: -10.572649955749512
    6. '   ' → logprob: -10.572649955749512
    7. '<|end|>' → logprob: -10.822649955749512
    8. '        
' → logprob: -10.947649955749512
    9. ',' → logprob: -11.447649955749512
    10. ',n' → logprob: -11.697649955749512

Token 647: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40447983145713806
    2. 'n' → logprob: -1.1544798612594604
    3. '```' → logprob: -4.52947998046875
    4. ' n' → logprob: -5.15447998046875
    5. '   ' → logprob: -7.65447998046875
    6. '	n' → logprob: -9.40447998046875
    7. '<|end|>' → logprob: -9.52947998046875
    8. '`' → logprob: -9.77947998046875
    9. 'num' → logprob: -9.90447998046875
    10. '``' → logprob: -10.90447998046875

Token 648: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.04486467316746712
    2. 'c' → logprob: -3.4198646545410156
    3. '       ' → logprob: -5.294864654541016
    4. ' n' → logprob: -5.669864654541016
    5. 'colors' → logprob: -6.294864654541016
    6. ' cubes' → logprob: -7.419864654541016
    7. '   ' → logprob: -9.044864654541016
    8. '```' → logprob: -9.544864654541016
    9. 'num' → logprob: -11.044864654541016
    10. '	n' → logprob: -11.544864654541016

Token 649: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12703803181648254
    2. ' =' → logprob: -2.12703800201416
    3. '=int' → logprob: -9.12703800201416
    4. 'int' → logprob: -13.75203800201416
    5. 'n' → logprob: -16.252038955688477
    6. '=n' → logprob: -17.002038955688477
    7. '=
' → logprob: -17.002038955688477
    8. '＝' → logprob: -17.127038955688477
    9. '```' → logprob: -17.752038955688477
    10. ' ' → logprob: -18.002038955688477

Token 650: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00033546582562848926
    2. ' int' → logprob: -8.000335693359375
    3. '[int' → logprob: -23.500335693359375
    4. '(int' → logprob: -23.875335693359375
    5. '	int' → logprob: -25.000335693359375
    6. '=int' → logprob: -25.625335693359375
    7. '<int' → logprob: -26.500335693359375
    8. ':int' → logprob: -28.375335693359375
    9. '_int' → logprob: -28.375335693359375
    10. '   ' → logprob: -28.375335693359375

Token 651: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005256526172161102
    2. '(lines' → logprob: -5.255256652832031
    3. 'n' → logprob: -10.755256652832031
    4. '(' → logprob: -14.255256652832031
    5. 'lines' → logprob: -14.255256652832031
    6. ' lines' → logprob: -16.63025665283203
    7. ' n' → logprob: -17.75525665283203
    8. '[n' → logprob: -18.63025665283203
    9. ' (' → logprob: -18.75525665283203
    10. ')n' → logprob: -18.75525665283203

Token 652: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002601438027340919
    2. '<|end|>' → logprob: -8.875260353088379
    3. ')
' → logprob: -9.500260353088379
    4. '       ' → logprob: -10.500260353088379
    5. '<|end|>' → logprob: -11.375260353088379
    6. '#' → logprob: -14.125260353088379
    7. '   ' → logprob: -14.125260353088379
    8. ' )' → logprob: -14.500260353088379
    9. '),' → logprob: -14.500260353088379
    10. '[' → logprob: -14.750260353088379

Token 653: '       ' (ID: 309)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07625292241573334
    2. '       ' → logprob: -2.7012529373168945
    3. '   ' → logprob: -5.8262529373168945
    4. '```' → logprob: -5.8262529373168945
    5. ' cubes' → logprob: -8.326252937316895
    6. '``' → logprob: -9.826252937316895
    7. '	c' → logprob: -9.951252937316895
    8. 'cub' → logprob: -11.076252937316895
    9. 'cube' → logprob: -11.451252937316895
    10. 'colors' → logprob: -11.826252937316895

Token 654: ' cubes' (ID: 88455)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0002158146962756291
    2. ' cubes' → logprob: -8.500215530395508
    3. '       ' → logprob: -11.875215530395508
    4. '   ' → logprob: -12.500215530395508
    5. '```' → logprob: -14.250215530395508
    6. 'colors' → logprob: -14.625215530395508
    7. 'cube' → logprob: -14.750215530395508
    8. 'cub' → logprob: -15.625215530395508
    9. '        
' → logprob: -17.000215530395508
    10. '``' → logprob: -17.750215530395508

Token 655: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16028839349746704
    2. '=' → logprob: -1.9102883338928223
    3. 'colors' → logprob: -10.78528881072998
    4. '_colors' → logprob: -11.03528881072998
    5. 's' → logprob: -11.16028881072998
    6. '=[]' → logprob: -11.41028881072998
    7. '_list' → logprob: -14.41028881072998
    8. '   ' → logprob: -14.53528881072998
    9. '[]' → logprob: -15.28528881072998
    10. '=[]
' → logprob: -15.66028881072998

Token 656: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3460654020309448
    2. '[]' → logprob: -1.3460654020309448
    3. '[]
' → logprob: -3.5960655212402344
    4. '[c' → logprob: -6.096065521240234
    5. '[line' → logprob: -6.596065521240234
    6. '[str' → logprob: -8.346065521240234
    7. '[
' → logprob: -9.221065521240234
    8. '[n' → logprob: -9.221065521240234
    9. '[int' → logprob: -9.221065521240234
    10. ' [' → logprob: -9.596065521240234

Token 657: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03707944229245186
    2. 'for' → logprob: -3.912079334259033
    3. ' for' → logprob: -4.162079334259033
    4. '<|end|>' → logprob: -7.662079334259033
    5. '	for' → logprob: -8.662079811096191
    6. '   ' → logprob: -9.162079811096191
    7. '```' → logprob: -10.537079811096191
    8. ',' → logprob: -11.662079811096191
    9. ' ' → logprob: -11.787079811096191
    10. '<|end|>' → logprob: -11.787079811096191

Token 658: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00019710339256562293
    2. '       ' → logprob: -9.250197410583496
    3. ' for' → logprob: -9.250197410583496
    4. '	for' → logprob: -12.750197410583496
    5. '   ' → logprob: -13.125197410583496
    6. 'while' → logprob: -16.75019645690918
    7. ' ' → logprob: -18.37519645690918
    8. '```' → logprob: -18.62519645690918
    9. '	' → logprob: -20.62519645690918
    10. 'For' → logprob: -21.00019645690918

Token 659: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.015683086588978767
    2. '_i' → logprob: -4.265683174133301
    3. ' _' → logprob: -6.515683174133301
    4. 'i' → logprob: -10.6406831741333
    5. '_j' → logprob: -12.2656831741333
    6. '_in' → logprob: -12.2656831741333
    7. ' i' → logprob: -12.3906831741333
    8. '_range' → logprob: -14.8906831741333
    9. '__' → logprob: -16.015682220458984
    10. ' ' → logprob: -16.140682220458984

Token 660: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.08512789011001587
    2. 'range' → logprob: -2.585127830505371
    3. ' in' → logprob: -5.335127830505371
    4. '_' → logprob: -7.210127830505371
    5. ' range' → logprob: -7.335127830505371
    6. 'n' → logprob: -12.085127830505371
    7. '(range' → logprob: -14.085127830505371
    8. 'c' → logprob: -15.210127830505371
    9. '[' → logprob: -15.210127830505371
    10. '0' → logprob: -15.585127830505371

Token 661: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.7610454708337784e-05
    2. ' range' → logprob: -10.500027656555176
    3. '(range' → logprob: -18.62502670288086
    4. '	range' → logprob: -19.37502670288086
    5. '_' → logprob: -20.50002670288086
    6. '```' → logprob: -20.87502670288086
    7. '
' → logprob: -21.62502670288086
    8. ')' → logprob: -21.87502670288086
    9. '`' → logprob: -22.00002670288086
    10. '[' → logprob: -22.12502670288086

Token 662: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04887665808200836
    2. 'n' → logprob: -3.0488767623901367
    3. ' n' → logprob: -8.173876762390137
    4. '(' → logprob: -12.673876762390137
    5. ' (' → logprob: -12.923876762390137
    6. '	n' → logprob: -14.548876762390137
    7. 'range' → logprob: -14.673876762390137
    8. '   ' → logprob: -15.423876762390137
    9. '_n' → logprob: -15.423876762390137
    10. '(range' → logprob: -16.54887580871582

Token 663: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.15752246975898743
    2. '):' → logprob: -2.032522439956665
    3. '       ' → logprob: -5.407522678375244
    4. ':
' → logprob: -5.657522678375244
    5. '           ' → logprob: -6.032522678375244
    6. ':' → logprob: -6.032522678375244
    7. '():
' → logprob: -6.907522678375244
    8. '   ' → logprob: -7.782522678375244
    9. '):
' → logprob: -9.157522201538086
    10. ',' → logprob: -9.282522201538086

Token 664: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.046746768057346344
    2. ' line' → logprob: -3.2967467308044434
    3. '	       ' → logprob: -6.171746730804443
    4. 'line' → logprob: -6.421746730804443
    5. ' lines' → logprob: -6.921746730804443
    6. '	   ' → logprob: -7.296746730804443
    7. '   ' → logprob: -7.421746730804443
    8. 'colors' → logprob: -7.921746730804443
    9. ' c' → logprob: -8.171747207641602
    10. ' cube' → logprob: -8.171747207641602

Token 665: ' cube' (ID: 46822)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8272420763969421
    2. 'cube' (adapté à ' cube') → logprob: -0.9522420763969421
    3. 'line' → logprob: -2.452242136001587
    4. 'colors' → logprob: -3.202242136001587
    5. ' cubes' → logprob: -3.702242136001587
    6. 'color' → logprob: -5.202241897583008
    7. ' line' → logprob: -5.327241897583008
    8. '   ' → logprob: -5.327241897583008
    9. ' cube' → logprob: -5.577241897583008
    10. 'faces' → logprob: -6.077241897583008

Token 666: '_colors' (ID: 79137)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5257343053817749
    2. '_colors' → logprob: -1.525734305381775
    3. '_line' → logprob: -2.5257344245910645
    4. '=' → logprob: -3.4007344245910645
    5. 'colors' → logprob: -3.6507344245910645
    6. '.append' → logprob: -4.4007344245910645
    7. '_c' → logprob: -4.5257344245910645
    8. '_color' → logprob: -4.7757344245910645
    9. '_cube' → logprob: -5.1507344245910645
    10. '_faces' → logprob: -5.2757344245910645

Token 667: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16026881337165833
    2. '=' → logprob: -1.910268783569336
    3. '.append' → logprob: -10.160268783569336
    4. '=line' → logprob: -12.660268783569336
    5. '   ' → logprob: -14.660268783569336
    6. '+=' → logprob: -14.910268783569336
    7. '.extend' → logprob: -15.035268783569336
    8. ' +=' → logprob: -15.035268783569336
    9. '           ' → logprob: -15.410268783569336
    10. ' ' → logprob: -15.410268783569336

Token 668: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.010985334403812885
    2. 'tuple' → logprob: -4.760985374450684
    3. ' lines' → logprob: -6.260985374450684
    4. 'list' → logprob: -8.135985374450684
    5. '(lines' → logprob: -9.510985374450684
    6. 'stdin' → logprob: -10.010985374450684
    7. ' tuple' → logprob: -10.260985374450684
    8. '[' → logprob: -12.385985374450684
    9. '   ' → logprob: -13.135985374450684
    10. 'line' → logprob: -13.385985374450684

Token 669: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.1424973713001236e-05
    2. 'idx' → logprob: -10.375031471252441
    3. ' idx' → logprob: -15.875031471252441
    4. '(idx' → logprob: -16.750030517578125
    5. '```' → logprob: -17.375030517578125
    6. '	idx' → logprob: -17.625030517578125
    7. '   ' → logprob: -18.750030517578125
    8. '[index' → logprob: -18.750030517578125
    9. '_idx' → logprob: -19.375030517578125
    10. '[' → logprob: -19.375030517578125

Token 670: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00458202650770545
    2. '[idx' → logprob: -5.629581928253174
    3. '.strip' → logprob: -7.754581928253174
    4. '][_' → logprob: -8.504582405090332
    5. '][' → logprob: -9.004582405090332
    6. '           ' → logprob: -9.254582405090332
    7. '.split' → logprob: -10.754582405090332
    8. ']' → logprob: -10.879582405090332
    9. '[_' → logprob: -10.879582405090332
    10. '[' → logprob: -11.629582405090332

Token 671: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.02975083328783512
    2. 'split' → logprob: -3.5297508239746094
    3. '.strip' → logprob: -15.65475082397461
    4. ' strip' → logprob: -16.15475082397461
    5. 'rstrip' → logprob: -16.52975082397461
    6. '```' → logprob: -17.90475082397461
    7. '_strip' → logprob: -19.40475082397461
    8. ' split' → logprob: -19.52975082397461
    9. '(strip' → logprob: -19.52975082397461
    10. '.split' → logprob: -20.27975082397461

Token 672: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.2525957524776459
    2. '()' → logprob: -1.5025957822799683
    3. '('' → logprob: -7.627595901489258
    4. '().'' → logprob: -9.627595901489258
    5. '()
' → logprob: -9.877595901489258
    6. '()='' → logprob: -10.502595901489258
    7. '(' → logprob: -12.252595901489258
    8. '()[' → logprob: -12.502595901489258
    9. '()['' → logprob: -12.752595901489258
    10. '.split' → logprob: -13.002595901489258

Token 673: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. '(split' → logprob: -15.5
    3. ' split' → logprob: -16.5
    4. '()' → logprob: -17.75
    5. 'rstrip' → logprob: -17.75
    6. '.split' → logprob: -18.0
    7. '_split' → logprob: -18.625
    8. 'spl' → logprob: -18.75
    9. 'lower' → logprob: -18.875
    10. 'strip' → logprob: -18.875

Token 674: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009836276294663548
    2. '('' → logprob: -7.375983715057373
    3. '(' → logprob: -8.625983238220215
    4. '()
' → logprob: -9.125983238220215
    5. '<|end|>' → logprob: -11.250983238220215
    6. '())' → logprob: -11.625983238220215
    7. '()[' → logprob: -11.750983238220215
    8. '('.')' → logprob: -12.250983238220215
    9. '()='' → logprob: -12.500983238220215
    10. '()\' → logprob: -12.500983238220215

Token 675: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024829884991049767
    2. '       ' → logprob: -4.524829864501953
    3. 'idx' → logprob: -4.649829864501953
    4. '   ' → logprob: -7.274829864501953
    5. '<|end|>' → logprob: -7.274829864501953
    6. '[idx' → logprob: -7.524829864501953
    7. '```' → logprob: -7.524829864501953
    8. '	       ' → logprob: -7.774829864501953
    9. 'tokens' → logprob: -8.274829864501953
    10. '	idx' → logprob: -8.649829864501953

Token 676: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.000559108448214829
    2. 'c' → logprob: -7.750559329986572
    3. '       ' → logprob: -9.250558853149414
    4. '   ' → logprob: -11.375558853149414
    5. '	idx' → logprob: -11.875558853149414
    6. ' idx' → logprob: -12.125558853149414
    7. '           ' → logprob: -12.500558853149414
    8. 'cube' → logprob: -12.625558853149414
    9. ' cubes' → logprob: -14.125558853149414
    10. 'index' → logprob: -14.875558853149414

Token 677: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00250217504799366
    2. ' +=' → logprob: -6.002501964569092
    3. '=' → logprob: -11.25250244140625
    4. ']+=' → logprob: -11.87750244140625
    5. '```' → logprob: -12.87750244140625
    6. '   ' → logprob: -13.25250244140625
    7. '+' → logprob: -14.37750244140625
    8. '++' → logprob: -14.37750244140625
    9. '       ' → logprob: -14.87750244140625
    10. '           ' → logprob: -15.37750244140625

Token 678: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.875000953674316
    3. '6' → logprob: -16.0
    4. '(' → logprob: -20.125
    5. '```' → logprob: -20.375
    6. '0' → logprob: -20.875
    7. '   ' → logprob: -21.625
    8. '4' → logprob: -21.875
    9. '１' → logprob: -21.875
    10. '۱' → logprob: -22.125

Token 679: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '6' → logprob: -13.750000953674316
    3. ' ' → logprob: -18.250001907348633
    4. '```' → logprob: -21.000001907348633
    5. '(' → logprob: -22.375001907348633
    6. '0' → logprob: -22.375001907348633
    7. '=' → logprob: -22.500001907348633
    8. '_' → logprob: -22.625001907348633
    9. '１' → logprob: -22.875001907348633
    10. '3' → logprob: -23.250001907348633

Token 680: '
' (ID: 198)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9081640839576721
    2. '           ' → logprob: -0.9081640839576721
    3. '       ' → logprob: -1.6581640243530273
    4. ' cubes' → logprob: -6.658164024353027
    5. '   ' → logprob: -6.783164024353027
    6. 'cube' → logprob: -8.033164024353027
    7. '```' → logprob: -9.283164024353027
    8. 'cub' → logprob: -10.283164024353027
    9. ',c' → logprob: -10.408164024353027
    10. '	c' → logprob: -10.658164024353027

Token 681: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4880044460296631
    2. 'c' → logprob: -0.9880044460296631
    3. '           ' → logprob: -4.613004684448242
    4. ' cubes' → logprob: -6.363004684448242
    5. 'cube' → logprob: -6.863004684448242
    6. '   ' → logprob: -7.238004684448242
    7. '```' → logprob: -8.863004684448242
    8. '	c' → logprob: -8.988004684448242
    9. 'cub' → logprob: -9.738004684448242
    10. ',c' → logprob: -10.363004684448242

Token 682: ' cubes' (ID: 88455)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.9875325708417222e-05
    2. 'cube' → logprob: -10.625029563903809
    3. '   ' → logprob: -13.125029563903809
    4. '       ' → logprob: -13.625029563903809
    5. ' cubes' → logprob: -13.750029563903809
    6. 'colors' → logprob: -14.375029563903809
    7. 'assert' → logprob: -15.250029563903809
    8. '#' → logprob: -15.875029563903809
    9. '           ' → logprob: -16.000030517578125
    10. 'cub' → logprob: -16.375030517578125

Token 683: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0001266613689949736
    2. '.' → logprob: -9.125126838684082
    3. '.extend' → logprob: -11.375126838684082
    4. '.app' → logprob: -12.250126838684082
    5. ' .' → logprob: -14.375126838684082
    6. ').' → logprob: -15.375126838684082
    7. '.ap' → logprob: -16.000125885009766
    8. 'append' → logprob: -16.000125885009766
    9. '.Append' → logprob: -16.625125885009766
    10. '.add' → logprob: -16.625125885009766

Token 684: '(tuple' (ID: 133029)
  Prédit: '(tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tuple' → logprob: -0.0015216453466564417
    2. 'tuple' → logprob: -6.501521587371826
    3. '(' → logprob: -11.251522064208984
    4. '(c' → logprob: -12.126522064208984
    5. ' tuple' → logprob: -14.251522064208984
    6. '((' → logprob: -15.751522064208984
    7. '(t' → logprob: -17.876522064208984
    8. '(*' → logprob: -18.001522064208984
    9. '(
' → logprob: -18.251522064208984
    10. 'cube' → logprob: -18.876522064208984

Token 685: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.000712670327629894
    2. 'cube' → logprob: -7.250712871551514
    3. 'c' → logprob: -13.250712394714355
    4. ')c' → logprob: -14.750712394714355
    5. '[c' → logprob: -15.500712394714355
    6. ' cube' → logprob: -16.500713348388672
    7. '(' → logprob: -16.750713348388672
    8. '(map' → logprob: -16.750713348388672
    9. '([' → logprob: -17.000713348388672
    10. '(
' → logprob: -17.250713348388672

Token 686: 'ube' (ID: 4502)
  Prédit: 'ube'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ube' → logprob: -0.00044401636114344
    2. 'cube' → logprob: -8.125444412231445
    3. '[c' → logprob: -9.500444412231445
    4. '[' → logprob: -10.125444412231445
    5. '[u' → logprob: -11.750444412231445
    6. '(c' → logprob: -12.000444412231445
    7. ' cube' → logprob: -12.500444412231445
    8. 'ubes' → logprob: -12.500444412231445
    9. 'ude' → logprob: -13.250444412231445
    10. 'b' → logprob: -13.375444412231445

Token 687: '_colors' (ID: 79137)
  Prédit: '_colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_colors' → logprob: -0.004588195588439703
    2. '_cube' → logprob: -5.8795881271362305
    3. '[c' → logprob: -6.5045881271362305
    4. 'cube' → logprob: -8.37958812713623
    5. '_c' → logprob: -10.75458812713623
    6. '(c' → logprob: -11.12958812713623
    7. '[' → logprob: -12.62958812713623
    8. ')' → logprob: -12.75458812713623
    9. ' cube' → logprob: -13.00458812713623
    10. 'colors' → logprob: -13.25458812713623

Token 688: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06198964640498161
    2. ')' → logprob: -2.8119895458221436
    3. ')))' → logprob: -11.686989784240723
    4. '))
' → logprob: -11.811989784240723
    5. '       ' → logprob: -12.811989784240723
    6. '()))' → logprob: -13.811989784240723
    7. '           ' → logprob: -13.936989784240723
    8. '   ' → logprob: -14.186989784240723
    9. ')}' → logprob: -15.561989784240723
    10. ')
' → logprob: -15.686989784240723

Token 689: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5474671125411987
    2. '       ' → logprob: -1.5474671125411987
    3. '   ' → logprob: -1.6724671125411987
    4. '<|end|>' → logprob: -4.672467231750488
    5. 'next' → logprob: -5.547467231750488
    6. '
' → logprob: -6.672467231750488
    7. 'rest' → logprob: -6.797467231750488
    8. '        
' → logprob: -6.922467231750488
    9. '``' → logprob: -7.172467231750488
    10. '    
' → logprob: -7.422467231750488

Token 690: ' print' (ID: 2123)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.808728039264679
    2. 'result' → logprob: -1.5587279796600342
    3. 'print' (adapté à ' print') → logprob: -1.5587279796600342
    4. '   ' → logprob: -3.183727979660034
    5. 'ans' → logprob: -3.683727979660034
    6. '```' → logprob: -3.933727979660034
    7. 'cost' → logprob: -4.058728218078613
    8. ' res' → logprob: -4.308728218078613
    9. 'answer' → logprob: -5.558728218078613
    10. ' result' → logprob: -5.683728218078613

Token 691: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -2.5776860184123507e-06
    2. '(' → logprob: -13.50000286102295
    3. 'min' → logprob: -13.75000286102295
    4. '(f' → logprob: -19.875001907348633
    5. '(m' → logprob: -19.875001907348633
    6. '(max' → logprob: -20.250001907348633
    7. '=min' → logprob: -20.750001907348633
    8. ' min' → logprob: -20.875001907348633
    9. ',min' → logprob: -21.375001907348633
    10. '[min' → logprob: -22.125001907348633

Token 692: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -6.2729995988775045e-06
    2. '_cost' → logprob: -12.125006675720215
    3. 're' → logprob: -15.250006675720215
    4. '_c' → logprob: -15.875006675720215
    5. '_' → logprob: -16.5000057220459
    6. '_min' → logprob: -16.6250057220459
    7. '(re' → logprob: -16.7500057220459
    8. ')' → logprob: -16.8750057220459
    9. '_rep' → logprob: -16.8750057220459
    10. ')_' → logprob: -17.1250057220459

Token 693: 'pa' (ID: 3899)
  Prédit: 'pa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pa' → logprob: -0.00014287306112237275
    2. 'paint' → logprob: -9.375143051147461
    3. 'p' → logprob: -10.625143051147461
    4. 'pants' → logprob: -11.125143051147461
    5. 'prints' → logprob: -11.750143051147461
    6. 'aints' → logprob: -12.000143051147461
    7. 'pain' → logprob: -13.375143051147461
    8. '_p' → logprob: -14.375143051147461
    9. 'patch' → logprob: -14.500143051147461
    10. '```' → logprob: -14.875143051147461

Token 694: 'ints' (ID: 20448)
  Prédit: 'ints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ints' → logprob: -0.3143593668937683
    2. 'aints' → logprob: -1.314359426498413
    3. 'ants' → logprob: -6.939359188079834
    4. 'a' → logprob: -10.564359664916992
    5. '_' → logprob: -10.939359664916992
    6. 'aint' → logprob: -11.314359664916992
    7. 'unts' → logprob: -11.314359664916992
    8. 'nts' → logprob: -11.439359664916992
    9. 'r' → logprob: -11.939359664916992
    10. '(' → logprob: -11.939359664916992

Token 695: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -9.221884101862088e-05
    2. '(' → logprob: -9.375092506408691
    3. ' (' → logprob: -11.875092506408691
    4. ')' → logprob: -15.625092506408691
    5. '((' → logprob: -16.500091552734375
    6. '   ' → logprob: -17.000091552734375
    7. '(
' → logprob: -17.375091552734375
    8. '(n' → logprob: -17.500091552734375
    9. '(s' → logprob: -17.875091552734375
    10. ',c' → logprob: -17.875091552734375

Token 696: 'ubes' (ID: 68551)
  Prédit: 'ubes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ubes' → logprob: -0.003062088042497635
    2. 'c' → logprob: -6.3780622482299805
    3. '(c' → logprob: -7.3780622482299805
    4. 'bes' → logprob: -8.37806224822998
    5. ')' → logprob: -8.75306224822998
    6. '[' → logprob: -9.50306224822998
    7. '(' → logprob: -9.50306224822998
    8. 'ub' → logprob: -9.62806224822998
    9. 'b' → logprob: -10.75306224822998
    10. '(b' → logprob: -11.00306224822998

Token 697: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5774491429328918
    2. '())' → logprob: -0.8274491429328918
    3. '))' → logprob: -7.077449321746826
    4. '()' → logprob: -7.327449321746826
    5. '()))' → logprob: -12.827448844909668
    6. ' )' → logprob: -13.952448844909668
    7. '})' → logprob: -14.452448844909668
    8. ')))' → logprob: -14.577448844909668
    9. ' ())' → logprob: -14.577448844909668
    10. '])' → logprob: -14.827448844909668

Token 698: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00018077615823131055
    2. '```' → logprob: -9.125181198120117
    3. ' if' → logprob: -9.625181198120117
    4. '<|end|>' → logprob: -12.500181198120117
    5. '#' → logprob: -14.125181198120117
    6. '
' → logprob: -15.250181198120117
    7. '``' → logprob: -15.625181198120117
    8. 'main' → logprob: -15.750181198120117
    9. 'for' → logprob: -15.875181198120117
    10. '    
' → logprob: -16.000181198120117

Token 699: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.17982549965381622
    2. ' __' → logprob: -1.8048255443572998
    3. '_' → logprob: -10.679825782775879
    4. 'name' → logprob: -10.804825782775879
    5. '_name' → logprob: -11.304825782775879
    6. 'Name' → logprob: -11.929825782775879
    7. '___' → logprob: -12.054825782775879
    8. ' ' → logprob: -12.304825782775879
    9. ' name' → logprob: -13.429825782775879
    10. ' ' → logprob: -13.804825782775879

Token 700: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.29222044348716736
    2. '==' → logprob: -1.6672204732894897
    3. ' ==' → logprob: -2.9172203540802
    4. '=="' → logprob: -4.917220592498779
    5. '=='' → logprob: -6.167220592498779
    6. '```' → logprob: -8.167220115661621
    7. '__.__' → logprob: -8.292220115661621
    8. 'name' → logprob: -8.917220115661621
    9. '[' → logprob: -10.167220115661621
    10. '()==' → logprob: -10.167220115661621

Token 701: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0005240809405222535
    2. '__.__' → logprob: -8.000524520874023
    3. '==' → logprob: -8.625524520874023
    4. '=="' → logprob: -12.500524520874023
    5. ' ==' → logprob: -13.125524520874023
    6. '__.' → logprob: -14.000524520874023
    7. '=='' → logprob: -14.000524520874023
    8. '__["' → logprob: -14.500524520874023
    9. '__
' → logprob: -15.375524520874023
    10. '___' → logprob: -15.375524520874023

Token 702: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.21831275522708893
    2. '==' → logprob: -1.7183127403259277
    3. ' ==' → logprob: -4.718312740325928
    4. '=="' → logprob: -4.968312740325928
    5. '=='' → logprob: -7.093312740325928
    6. '__.__' → logprob: -11.593313217163086
    7. '=' → logprob: -11.843313217163086
    8. '==
' → logprob: -11.968313217163086
    9. '===' → logprob: -12.593313217163086
    10. '_' → logprob: -12.718313217163086

Token 703: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.38688310980796814
    2. ''' → logprob: -1.1368831396102905
    3. '__' → logprob: -11.511882781982422
    4. ' "__' → logprob: -14.011882781982422
    5. ' '__' → logprob: -15.136882781982422
    6. ''"' → logprob: -15.386882781982422
    7. ''name' → logprob: -15.761882781982422
    8. '('__' → logprob: -16.386882781982422
    9. '"name' → logprob: -16.511882781982422
    10. ''post' → logprob: -16.511882781982422

Token 704: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.002002865308895707
    2. '__' → logprob: -6.252002716064453
    3. '"' → logprob: -10.127002716064453
    4. 'name' → logprob: -10.502002716064453
    5. '_main' → logprob: -13.377002716064453
    6. ''' → logprob: -13.502002716064453
    7. '__":
' → logprob: -13.752002716064453
    8. 'python' → logprob: -13.877002716064453
    9. '```' → logprob: -14.377002716064453
    10. ' main' → logprob: -15.252002716064453

Token 705: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.0919734388589859
    2. '__' → logprob: -2.4669735431671143
    3. '__':
' → logprob: -5.841973304748535
    4. '__["' → logprob: -9.841973304748535
    5. '__:' → logprob: -10.466973304748535
    6. '__.__' → logprob: -10.716973304748535
    7. '__.' → logprob: -11.341973304748535
    8. '__
' → logprob: -12.841973304748535
    9. '__
' → logprob: -13.466973304748535
    10. '__[' → logprob: -13.591973304748535

Token 706: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00043972869752906263
    2. '__' → logprob: -7.750439643859863
    3. ' main' → logprob: -11.750439643859863
    4. '_main' → logprob: -14.375439643859863
    5. '	main' → logprob: -15.375439643859863
    6. '```' → logprob: -15.500439643859863
    7. '(main' → logprob: -16.50044059753418
    8. 'run' → logprob: -17.00044059753418
    9. 'Main' → logprob: -17.50044059753418
    10. 'if' → logprob: -17.50044059753418

Token 707: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -5.512236498361744e-07
    2. ' main' → logprob: -14.500000953674316
    3. '	main' → logprob: -18.25
    4. '   ' → logprob: -20.0
    5. '(main' → logprob: -24.625
    6. '_main' → logprob: -24.75
    7. '.main' → logprob: -24.875
    8. 'import' → logprob: -25.625
    9. '
' → logprob: -27.375
    10. 'Main' → logprob: -27.5

Token 708: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 706
Tokens correctement prédits (1ère position, stricte): 256
Tokens correctement prédits (1ère position, avec adaptation): 283
Tokens correctement prédits (top 10): 555
Précision stricte (1ère position): 36.26%
Précision adaptée (1ère position): 40.08%
Précision (top 10): 78.61%
================================================================================
