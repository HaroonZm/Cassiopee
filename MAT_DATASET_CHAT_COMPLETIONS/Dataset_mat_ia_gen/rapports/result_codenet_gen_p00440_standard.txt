================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:59:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

while True:
    n,k = map(int,input().split())
    if n==0 and k==0:
        break
    cards = [int(input()) for _ in range(k)]
    known = set()
    blanks = 0
    for c in cards:
        if c == 0:
            blanks += 1
        else:
            known.add(c)
    arr = sorted(known)
    if not arr:
        print(blanks if blanks<=n else n)
        continue
    maxlen = 0
    # Check from left before first known card
    maxlen = arr[0]-1+blanks if arr[0]-1+blanks>maxlen else maxlen
    # Check gaps between known cards
    for i in range(len(arr)-1):
        gap = arr[i+1]-arr[i]-1
        if gap <= blanks:
            length = arr[i+1]-arr[i]+blanks
            if length > maxlen:
                maxlen = length
        else:
            length = blanks +1
            if length > maxlen:
                maxlen = length
    # Check after last known card
    tail = n - arr[-1]
    tail_len = tail + blanks
    if tail_len > maxlen:
        maxlen = tail_len
    # Also check pure blanks if no known cards or maxlen < blanks
    if blanks > maxlen:
        maxlen = blanks
    # Maximum length cannot exceed n
    if maxlen > n:
        maxlen = n
    print(maxlen)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975533962249756
    2. '\n' → logprob: -0.8225533962249756
    3. '<|end|>' → logprob: -3.5725533962249756
    4. '\' → logprob: -4.322553634643555
    5. 'newline' → logprob: -5.072553634643555
    6. 'import' → logprob: -5.322553634643555
    7. '<|end|>' → logprob: -5.947553634643555
    8. '```' → logprob: -6.572553634643555
    9. '' → logprob: -6.822553634643555
    10. '
' → logprob: -6.947553634643555

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02687920443713665
    2. '.' → logprob: -3.65187931060791
    3. '(
' → logprob: -8.52687931060791
    4. ')' → logprob: -9.27687931060791
    5. '()' → logprob: -9.40187931060791
    6. ' (' → logprob: -10.40187931060791
    7. '=' → logprob: -10.40187931060791
    8. '(

' → logprob: -10.52687931060791
    9. '```' → logprob: -10.65187931060791
    10. ''s' → logprob: -11.27687931060791

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.018457891419529915
    2. 'sys' → logprob: -4.018457889556885
    3. ' input' → logprob: -8.268458366394043
    4. 'input' → logprob: -10.018458366394043
    5. '	sys' → logprob: -13.018458366394043
    6. ' ' → logprob: -13.268458366394043
    7. '=sys' → logprob: -13.393458366394043
    8. '(sys' → logprob: -13.768458366394043
    9. ' system' → logprob: -15.393458366394043
    10. ' lambda' → logprob: -17.268457412719727

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0005094261723570526
    2. '.readline' → logprob: -8.875509262084961
    3. '.stdin' → logprob: -9.125509262084961
    4. '.import' → logprob: -9.375509262084961
    5. ' .' → logprob: -10.000509262084961
    6. '.input' → logprob: -10.500509262084961
    7. '[' → logprob: -11.250509262084961
    8. '.`' → logprob: -11.625509262084961
    9. '.argv' → logprob: -12.000509262084961
    10. '.user' → logprob: -12.125509262084961

Token 7: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.01961463876068592
    2. '.read' → logprob: -4.5196146965026855
    3. '.' → logprob: -4.7696146965026855
    4. '.readlines' → logprob: -10.519614219665527
    5. 'read' → logprob: -11.519614219665527
    6. '.Read' → logprob: -12.394614219665527
    7. '.buffer' → logprob: -13.769614219665527
    8. '<|end|>' → logprob: -14.019614219665527
    9. ' .' → logprob: -14.269614219665527
    10. ' readline' → logprob: -14.644614219665527

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12663522362709045
    2. '(' → logprob: -2.3766353130340576
    3. '(
' → logprob: -4.2516350746154785
    4. '()
' → logprob: -5.0016350746154785
    5. '
' → logprob: -5.6266350746154785
    6. '\n' → logprob: -8.126635551452637
    7. '()\' → logprob: -8.251635551452637
    8. '()

' → logprob: -8.501635551452637
    9. '().' → logprob: -8.626635551452637
    10. '(

' → logprob: -9.126635551452637

Token 9: 'while' (ID: 7032)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.34941408038139343
    2. '(' → logprob: -1.2244141101837158
    3. '().' → logprob: -7.849413871765137
    4. '(
' → logprob: -8.599413871765137
    5. '()
' → logprob: -8.724413871765137
    6. '()

' → logprob: -10.474413871765137
    7. 'a' → logprob: -10.599413871765137
    8. ')' → logprob: -10.849413871765137
    9. '.' → logprob: -10.849413871765137
    10. '#' → logprob: -11.224413871765137

Token 10: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0004878723411820829
    2. ' True' → logprob: -8.12548828125
    3. '  ' → logprob: -9.25048828125
    4. ' (' → logprob: -9.87548828125
    5. '    ' → logprob: -12.12548828125
    6. '(' → logprob: -12.50048828125
    7. ' "' → logprob: -12.62548828125
    8. ' )' → logprob: -12.62548828125
    9. ''' → logprob: -13.00048828125
    10. '   ' → logprob: -13.12548828125

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017741884803399444
    2. '():' → logprob: -7.001774311065674
    3. ' :' → logprob: -7.126774311065674
    4. ':**' → logprob: -10.626773834228516
    5. '):' → logprob: -11.876773834228516
    6. '   ' → logprob: -12.126773834228516
    7. '(:' → logprob: -12.501773834228516
    8. ':
' → logprob: -12.626773834228516
    9. ' ():' → logprob: -12.876773834228516
    10. ':return' → logprob: -12.876773834228516

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013129756785929203
    2. '    
' → logprob: -4.888129711151123
    3. '    ' → logprob: -6.138129711151123
    4. '(' → logprob: -6.513129711151123
    5. ':' → logprob: -7.638129711151123
    6. '  
' → logprob: -8.513130187988281
    7. '():' → logprob: -8.888130187988281
    8. 'input' → logprob: -8.888130187988281
    9. ' 
' → logprob: -9.263130187988281
    10. ' (' → logprob: -9.263130187988281

Token 13: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.08590534329414368
    2. 'line' → logprob: -3.0859053134918213
    3. 'user' → logprob: -4.5859055519104
    4. ' user' → logprob: -4.5859055519104
    5. '   ' → logprob: -4.9609055519104
    6. 'data' → logprob: -5.3359055519104
    7. ' data' → logprob: -6.4609055519104
    8. ' inp' → logprob: -7.2109055519104
    9. '    ' → logprob: -7.3359055519104
    10. ' ' → logprob: -7.7109055519104

Token 14: ',k' (ID: 35155)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11967328190803528
    2. ' ==' → logprob: -2.619673252105713
    3. '=' → logprob: -3.869673252105713
    4. ' ' → logprob: -4.119673252105713
    5. ' >' → logprob: -6.869673252105713
    6. '==' → logprob: -7.244673252105713
    7. '>' → logprob: -8.619673728942871
    8. ' :=' → logprob: -8.744673728942871
    9. ' !=' → logprob: -8.869673728942871
    10. ' <' → logprob: -8.994673728942871

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133028447628021
    2. '=' → logprob: -1.3133028745651245
    3. ',' → logprob: -10.563302993774414
    4. '=input' → logprob: -11.813302993774414
    5. ' ' → logprob: -12.063302993774414
    6. ' ,' → logprob: -14.688302993774414
    7. ')' → logprob: -14.938302993774414
    8. '=int' → logprob: -15.188302993774414
    9. '   ' → logprob: -15.688302993774414
    10. '    ' → logprob: -15.688302993774414

Token 16: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.4821799397468567
    2. ' map' → logprob: -0.9821799397468567
    3. 'input' → logprob: -5.107180118560791
    4. ' input' → logprob: -6.232180118560791
    5. 'list' → logprob: -10.732179641723633
    6. ' list' → logprob: -11.232179641723633
    7. ' ' → logprob: -11.482179641723633
    8. '	map' → logprob: -12.857179641723633
    9. '[' → logprob: -13.857179641723633
    10. '(map' → logprob: -14.107179641723633

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.023630816489458084
    2. '(' → logprob: -3.7736308574676514
    3. '(str' → logprob: -8.52363109588623
    4. '(lambda' → logprob: -8.64863109588623
    5. 'int' → logprob: -12.39863109588623
    6. '(input' → logprob: -12.77363109588623
    7. '[int' → logprob: -13.64863109588623
    8. '<int' → logprob: -14.02363109588623
    9. ' (' → logprob: -14.52363109588623
    10. '(
' → logprob: -14.64863109588623

Token 18: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.38503625988960266
    2. ',' → logprob: -1.3850362300872803
    3. '(input' → logprob: -3.0100362300872803
    4. ')' → logprob: -4.260036468505859
    5. 'input' → logprob: -5.385036468505859
    6. '(' → logprob: -7.135036468505859
    7. ' input' → logprob: -8.26003646850586
    8. '=input' → logprob: -9.88503646850586
    9. '),' → logprob: -10.01003646850586
    10. ' ,' → logprob: -10.01003646850586

Token 19: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.990154047845863e-05
    2. '()' → logprob: -10.500049591064453
    3. '())' → logprob: -10.750049591064453
    4. ' ().' → logprob: -14.875049591064453
    5. ')' → logprob: -15.375049591064453
    6. '()))' → logprob: -15.625049591064453
    7. '(' → logprob: -16.625049591064453
    8. '()
' → logprob: -16.750049591064453
    9. '()?.' → logprob: -18.750049591064453
    10. ' ())' → logprob: -18.750049591064453

Token 20: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.01220646034926176
    2. 'strip' → logprob: -4.512206554412842
    3. 'rstrip' → logprob: -6.762206554412842
    4. '(split' → logprob: -14.262206077575684
    5. ' split' → logprob: -15.137206077575684
    6. 'read' → logprob: -16.26220703125
    7. 'rs' → logprob: -17.01220703125
    8. 'plit' → logprob: -17.26220703125
    9. ')' → logprob: -17.51220703125
    10. '_split' → logprob: -17.88720703125

Token 21: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009535547345876694
    2. '())' → logprob: -5.134535312652588
    3. '))' → logprob: -5.759535312652588
    4. '()' → logprob: -7.759535312652588
    5. '()))' → logprob: -11.884535789489746
    6. '(' → logprob: -12.259535789489746
    7. ')
' → logprob: -12.634535789489746
    8. '),' → logprob: -13.634535789489746
    9. ')`' → logprob: -14.134535789489746
    10. ')))' → logprob: -14.509535789489746

Token 22: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5698819160461426
    2. '   ' → logprob: -1.1948819160461426
    3. ' ' → logprob: -2.6948819160461426
    4. '<|end|>' → logprob: -3.5698819160461426
    5. ')' → logprob: -4.819881916046143
    6. '\n' → logprob: -5.069881916046143
    7. 'if' → logprob: -5.194881916046143
    8. '  ' → logprob: -5.319881916046143
    9. ' 
' → logprob: -6.194881916046143
    10. '    ' → logprob: -6.319881916046143

Token 23: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3135087490081787
    2. '   ' → logprob: -1.6885087490081787
    3. ' ' → logprob: -3.4385087490081787
    4. 'if' (adapté à ' if') → logprob: -3.9385087490081787
    5. '<|end|>' → logprob: -4.188508987426758
    6. '    ' → logprob: -4.813508987426758
    7. ' 
' → logprob: -5.313508987426758
    8. '  ' → logprob: -6.313508987426758
    9. '    
' → logprob: -7.188508987426758
    10. '\n' → logprob: -7.563508987426758

Token 24: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.008065075613558292
    2. 'n' → logprob: -5.008065223693848
    3. ' not' → logprob: -6.633065223693848
    4. 'not' → logprob: -10.508065223693848
    5. ' ' → logprob: -12.258065223693848
    6. '	n' → logprob: -15.008065223693848
    7. ' ' → logprob: -15.508065223693848
    8. ' (' → logprob: -17.00806427001953
    9. '(n' → logprob: -17.25806427001953
    10. '   ' → logprob: -17.75806427001953

Token 25: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5763504505157471
    2. ' ==' → logprob: -0.8263504505157471
    3. '<' → logprob: -8.826350212097168
    4. '=' → logprob: -9.076350212097168
    5. ' ' → logprob: -9.951350212097168
    6. ')' → logprob: -10.701350212097168
    7. ' <' → logprob: -10.826350212097168
    8. ' =' → logprob: -11.826350212097168
    9. '<=' → logprob: -11.826350212097168
    10. ')==' → logprob: -11.826350212097168

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03367336094379425
    2. ' ' → logprob: -3.4086732864379883
    3. 'k' → logprob: -11.283673286437988
    4. '   ' → logprob: -12.658673286437988
    5. ' k' → logprob: -13.033673286437988
    6. '  ' → logprob: -13.158673286437988
    7. '```' → logprob: -14.033673286437988
    8. '-' → logprob: -14.096173286437988
    9. '    ' → logprob: -14.658673286437988
    10. '=' → logprob: -14.658673286437988

Token 27: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.015407484024763107
    2. 'and' → logprob: -4.265407562255859
    3. ':' → logprob: -7.515407562255859
    4. ' or' → logprob: -7.765407562255859
    5. ' ' → logprob: -8.26540756225586
    6. '	and' → logprob: -12.14040756225586
    7. '   ' → logprob: -12.39040756225586
    8. ' a' → logprob: -12.64040756225586
    9. ' ' → logprob: -13.76540756225586
    10. '  ' → logprob: -14.14040756225586

Token 28: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.043020084500312805
    2. 'k' → logprob: -3.168020009994507
    3. '	k' → logprob: -10.918020248413086
    4. ' ' → logprob: -13.293020248413086
    5. '<|end|>' → logprob: -14.918020248413086
    6. ' ' → logprob: -15.418020248413086
    7. ',k' → logprob: -15.543020248413086
    8. '   ' → logprob: -15.668020248413086
    9. ' к' → logprob: -16.668020248413086
    10. ' ‌' → logprob: -17.043020248413086

Token 29: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5773842334747314
    2. '==' → logprob: -0.8273842334747314
    3. ' ' → logprob: -7.327383995056152
    4. '=' → logprob: -7.952383995056152
    5. '<|end|>' → logprob: -8.827383995056152
    6. '0' → logprob: -9.077383995056152
    7. '  ' → logprob: -9.577383995056152
    8. '<|end|>' → logprob: -10.577383995056152
    9. ' ' → logprob: -10.702383995056152
    10. ' =' → logprob: -11.702383995056152

Token 30: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '<|end|>' → logprob: -19.000139236450195
    4. '  ' → logprob: -19.250139236450195
    5. '۰' → logprob: -19.250139236450195
    6. '   ' → logprob: -19.250139236450195
    7. '০' → logprob: -20.875139236450195
    8. '०' → logprob: -21.000139236450195
    9. '```' → logprob: -21.062639236450195
    10. '    ' → logprob: -21.187639236450195

Token 31: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002334855031222105
    2. '   ' → logprob: -6.627335071563721
    3. ':
' → logprob: -7.002335071563721
    4. '       ' → logprob: -9.752334594726562
    5. ' :' → logprob: -10.377334594726562
    6. '.' → logprob: -13.002334594726562
    7. ':return' → logprob: -13.502334594726562
    8. '	break' → logprob: -13.627334594726562
    9. '    ' → logprob: -13.752334594726562
    10. ',' → logprob: -14.502334594726562

Token 32: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008123667794279754
    2. '   ' → logprob: -7.250812530517578
    3. ':' → logprob: -10.125812530517578
    4. '	break' → logprob: -11.125812530517578
    5. '\n' → logprob: -11.250812530517578
    6. '	' → logprob: -11.250812530517578
    7. '    ' → logprob: -12.375812530517578
    8. ' break' → logprob: -12.750812530517578
    9. '	   ' → logprob: -13.000812530517578
    10. ':
' → logprob: -13.500812530517578

Token 33: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.197776198387146
    2. '       ' → logprob: -2.1977763175964355
    3. 'break' (adapté à ' break') → logprob: -3.3227763175964355
    4. '   ' → logprob: -3.4477763175964355
    5. '	break' → logprob: -7.5727763175964355
    6. '```' → logprob: -12.697775840759277
    7. '           ' → logprob: -12.947775840759277
    8. '_break' → logprob: -13.322775840759277
    9. ' ' → logprob: -13.447775840759277
    10. '\n' → logprob: -14.322775840759277

Token 34: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06429450958967209
    2. '    
' → logprob: -2.9392945766448975
    3. '\n' → logprob: -6.439294338226318
    4. '<|end|>' → logprob: -6.439294338226318
    5. '    ' → logprob: -6.564294338226318
    6. ' ' → logprob: -6.564294338226318
    7. '   
' → logprob: -7.689294338226318
    8. ')' → logprob: -8.064294815063477
    9. '  
' → logprob: -8.064294815063477
    10. 'n' → logprob: -8.064294815063477

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09628136456012726
    2. '    
' → logprob: -2.5962812900543213
    3. '\n' → logprob: -4.5962815284729
    4. '  
' → logprob: -6.7212815284729
    5. ' 
' → logprob: -6.8462815284729
    6. '    ' → logprob: -6.8462815284729
    7. '<|end|>' → logprob: -7.2212815284729
    8. ' ' → logprob: -7.3462815284729
    9. '   
' → logprob: -7.3462815284729
    10. '\r' → logprob: -8.346281051635742

Token 36: ' cards' (ID: 10541)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10858646035194397
    2. 'result' → logprob: -3.733586549758911
    3. 'count' → logprob: -3.858586549758911
    4. '    ' → logprob: -4.858586311340332
    5. 's' → logprob: -5.108586311340332
    6. 'counts' → logprob: -5.108586311340332
    7. 'pairs' → logprob: -5.358586311340332
    8. '    
' → logprob: -5.983586311340332
    9. 'print' → logprob: -6.108586311340332
    10. 'dp' → logprob: -6.233586311340332

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023413995280861855
    2. '=' → logprob: -3.773413896560669
    3. '_' → logprob: -9.89841365814209
    4. '[' → logprob: -10.52341365814209
    5. ' ' → logprob: -10.64841365814209
    6. '=[]' → logprob: -11.02341365814209
    7. '_count' → logprob: -11.14841365814209
    8. '_counts' → logprob: -11.89841365814209
    9. '   ' → logprob: -12.14841365814209
    10. '.' → logprob: -12.39841365814209

Token 38: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.48003751039505005
    2. 'list' → logprob: -1.2300374507904053
    3. ' [' → logprob: -3.1050374507904053
    4. '[list' → logprob: -4.105037689208984
    5. '[' → logprob: -4.480037689208984
    6. '[]' → logprob: -4.980037689208984
    7. ' []' → logprob: -5.480037689208984
    8. '[input' → logprob: -5.980037689208984
    9. '['' → logprob: -7.230037689208984
    10. 'input' → logprob: -8.355037689208984

Token 39: 'int' (ID: 491)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7855464816093445
    2. 'int' → logprob: -0.9105464816093445
    3. '0' → logprob: -2.4105465412139893
    4. '*' → logprob: -3.9105465412139893
    5. 'False' → logprob: -4.03554630279541
    6. 'list' → logprob: -5.03554630279541
    7. '*i' → logprob: -5.78554630279541
    8. ']' → logprob: -6.03554630279541
    9. 'input' → logprob: -7.78554630279541
    10. 'x' → logprob: -7.91054630279541

Token 40: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.033470142632722855
    2. '(x' → logprob: -4.533470153808594
    3. '(' → logprob: -4.658470153808594
    4. '()' → logprob: -5.408470153808594
    5. '(i' → logprob: -5.408470153808594
    6. ']' → logprob: -6.283470153808594
    7. '()]' → logprob: -6.408470153808594
    8. 'input' → logprob: -9.783470153808594
    9. '(a' → logprob: -10.658470153808594
    10. ']()' → logprob: -10.908470153808594

Token 41: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005318192765116692
    2. '().' → logprob: -5.2553181648254395
    3. '()' → logprob: -9.755318641662598
    4. '())
' → logprob: -11.755318641662598
    5. '()]' → logprob: -11.880318641662598
    6. '()),' → logprob: -12.380318641662598
    7. ')' → logprob: -12.505318641662598
    8. '()))' → logprob: -13.880318641662598
    9. ' ())' → logprob: -13.880318641662598
    10. '()
' → logprob: -14.630318641662598

Token 42: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5513908267021179
    2. 'for' → logprob: -1.3013908863067627
    3. ')' → logprob: -2.4263908863067627
    4. '()' → logprob: -2.8013908863067627
    5. '	for' → logprob: -6.551390647888184
    6. ')]' → logprob: -8.176390647888184
    7. ' ' → logprob: -8.301390647888184
    8. ']' → logprob: -8.426390647888184
    9. '()]' → logprob: -9.176390647888184
    10. '   ' → logprob: -9.176390647888184

Token 43: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1616985946893692
    2. ' ' → logprob: -2.411698579788208
    3. '_' → logprob: -3.536698579788208
    4. ' _' → logprob: -3.786698579788208
    5. 'range' → logprob: -4.911698818206787
    6. '	range' → logprob: -8.536698341369629
    7. '_range' → logprob: -8.661698341369629
    8. ' in' → logprob: -10.161698341369629
    9. ' xrange' → logprob: -10.286698341369629
    10. '  ' → logprob: -10.286698341369629

Token 44: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.34861066937446594
    2. 'range' → logprob: -1.3486106395721436
    3. ' range' → logprob: -3.8486106395721436
    4. 'in' → logprob: -4.348610877990723
    5. ' ' → logprob: -7.723610877990723
    6. '  ' → logprob: -10.473610877990723
    7. '	range' → logprob: -11.223610877990723
    8. '   ' → logprob: -12.473610877990723
    9. '(range' → logprob: -13.223610877990723
    10. ' _' → logprob: -13.223610877990723

Token 45: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00408801669254899
    2. ' range' → logprob: -5.504087924957275
    3. ' ' → logprob: -12.879088401794434
    4. '   ' → logprob: -13.379088401794434
    5. '(range' → logprob: -13.879088401794434
    6. '  ' → logprob: -14.004088401794434
    7. '	range' → logprob: -14.004088401794434
    8. 'rang' → logprob: -14.129088401794434
    9. 'ran' → logprob: -14.254088401794434
    10. 'r' → logprob: -14.379088401794434

Token 46: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.4749327003955841
    2. '(n' → logprob: -0.9749326705932617
    3. '(' → logprob: -7.099932670593262
    4. ' (' → logprob: -10.599932670593262
    5. 'k' → logprob: -12.724932670593262
    6. ' k' → logprob: -13.974932670593262
    7. 'n' → logprob: -13.974932670593262
    8. ' n' → logprob: -16.224933624267578
    9. '(cards' → logprob: -16.724933624267578
    10. ',k' → logprob: -16.849933624267578

Token 47: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0024321437813341618
    2. ')' → logprob: -6.502432346343994
    3. ']' → logprob: -7.002432346343994
    4. ' )' → logprob: -11.752431869506836
    5. ')]
' → logprob: -13.377431869506836
    6. ' ]' → logprob: -13.502431869506836
    7. ' ' → logprob: -13.502431869506836
    8. '])]' → logprob: -14.002431869506836
    9. ')])' → logprob: -14.127431869506836
    10. '')]' → logprob: -14.252431869506836

Token 48: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5591161847114563
    2. '<|end|>' → logprob: -1.1841161251068115
    3. ' 
' → logprob: -3.3091161251068115
    4. '  
' → logprob: -3.8091161251068115
    5. '   ' → logprob: -3.9341161251068115
    6. ' ' → logprob: -4.059116363525391
    7. '    
' → logprob: -4.809116363525391
    8. '   
' → logprob: -5.184116363525391
    9. '<|end|>' → logprob: -5.684116363525391
    10. '  ' → logprob: -6.309116363525391

Token 49: ' known' (ID: 5542)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3101890087127686
    2. '   ' → logprob: -1.8101890087127686
    3. ' ' → logprob: -1.8101890087127686
    4. ' 
' → logprob: -1.8101890087127686
    5. '    
' → logprob: -3.0601890087127686
    6. 'cards' → logprob: -3.0601890087127686
    7. '\n' → logprob: -3.8101890087127686
    8. ' cards' → logprob: -3.8101890087127686
    9. '<|end|>' → logprob: -4.185189247131348
    10. '  
' → logprob: -4.560189247131348

Token 50: ' =' (ID: 314)
  Prédit: '_cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.6040478944778442
    2. ' =' → logprob: -0.9790478944778442
    3. '_' → logprob: -2.9790477752685547
    4. '=' → logprob: -4.479047775268555
    5. 's' → logprob: -5.729047775268555
    6. '_counts' → logprob: -5.854047775268555
    7. '_set' → logprob: -6.229047775268555
    8. '_numbers' → logprob: -6.229047775268555
    9. '_sets' → logprob: -6.604047775268555
    10. ' ' → logprob: -6.979047775268555

Token 51: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.9682657718658447
    2. '{}' → logprob: -0.9682657718658447
    3. '[' → logprob: -2.3432657718658447
    4. '{' → logprob: -2.9682657718658447
    5. ' set' → logprob: -3.2182657718658447
    6. '[]' → logprob: -3.9682657718658447
    7. ' [' → logprob: -4.093265533447266
    8. ' {}' → logprob: -4.968265533447266
    9. ' []' → logprob: -5.468265533447266
    10. ' {' → logprob: -6.593265533447266

Token 52: '()
' (ID: 1234)
  Prédit: '(cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cards' → logprob: -0.5281027555465698
    2. '()' → logprob: -1.2781027555465698
    3. '(' → logprob: -2.0281028747558594
    4. '(card' → logprob: -10.15310287475586
    5. '(c' → logprob: -10.77810287475586
    6. ' ()' → logprob: -11.15310287475586
    7. '([]' → logprob: -11.27810287475586
    8. '([' → logprob: -11.77810287475586
    9. '()]' → logprob: -11.77810287475586
    10. '()}' → logprob: -12.90310287475586

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15461194515228271
    2. '    
' → logprob: -2.2796120643615723
    3. ' 
' → logprob: -4.154612064361572
    4. '    ' → logprob: -5.404612064361572
    5. '     
' → logprob: -5.904612064361572
    6. '```' → logprob: -5.904612064361572
    7. ' for' → logprob: -6.029612064361572
    8. '\n' → logprob: -6.279612064361572
    9. '<|end|>' → logprob: -6.529612064361572
    10. ' ' → logprob: -6.779612064361572

Token 54: ' blanks' (ID: 160898)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46470439434051514
    2. 'count' → logprob: -2.9647045135498047
    3. 'possible' → logprob: -3.0897045135498047
    4. 'answer' → logprob: -3.4647045135498047
    5. 'result' → logprob: -3.4647045135498047
    6. '    
' → logprob: -3.8397045135498047
    7. 'found' → logprob: -3.9647045135498047
    8. 'valid' → logprob: -4.089704513549805
    9. ' valid' → logprob: -4.339704513549805
    10. ' answer' → logprob: -4.464704513549805

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008681939914822578
    2. '=' → logprob: -4.758681774139404
    3. ',' → logprob: -10.258682250976562
    4. '<|end|>' → logprob: -11.508682250976562
    5. ' ' → logprob: -11.758682250976562
    6. '   ' → logprob: -12.883682250976562
    7. '  ' → logprob: -13.133682250976562
    8. '=[]' → logprob: -13.383682250976562
    9. ')' → logprob: -13.758682250976562
    10. '    ' → logprob: -14.133682250976562

Token 56: ' ' (ID: 220)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.7031591534614563
    2. ' ' → logprob: -1.5781590938568115
    3. ' n' → logprob: -2.0781590938568115
    4. '0' → logprob: -2.7031590938568115
    5. '[]' → logprob: -2.9531590938568115
    6. ' k' → logprob: -3.4531590938568115
    7. ' cards' → logprob: -4.953159332275391
    8. ' [' → logprob: -5.078159332275391
    9. 'n' → logprob: -5.578159332275391
    10. 'k' → logprob: -6.578159332275391

Token 57: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7678381204605103
    2. '0' → logprob: -1.5178381204605103
    3. 'k' → logprob: -1.7678381204605103
    4. 'n' → logprob: -2.2678380012512207
    5. '[n' → logprob: -4.392838001251221
    6. '[k' → logprob: -5.017838001251221
    7. 'cards' → logprob: -5.017838001251221
    8. ' []' → logprob: -5.517838001251221
    9. '[' → logprob: -5.517838001251221
    10. 'set' → logprob: -5.892838001251221

Token 58: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8024744391441345
    2. '   ' → logprob: -1.3024744987487793
    3. '<|end|>' → logprob: -1.4274744987487793
    4. ' for' → logprob: -4.427474498748779
    5. 'for' → logprob: -4.677474498748779
    6. '    
' → logprob: -4.927474498748779
    7. '<|end|>' → logprob: -5.677474498748779
    8. ' 
' → logprob: -5.927474498748779
    9. '  
' → logprob: -6.302474498748779
    10. '\n' → logprob: -6.302474498748779

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11215916275978088
    2. '<|end|>' → logprob: -2.362159252166748
    3. '
' → logprob: -5.362159252166748
    4. 'for' → logprob: -5.862159252166748
    5. ' for' → logprob: -5.987159252166748
    6. '    
' → logprob: -7.237159252166748
    7. '<|end|>' → logprob: -7.862159252166748
    8. ' ' → logprob: -8.61215877532959
    9. '  ' → logprob: -9.11215877532959
    10. '	for' → logprob: -9.86215877532959

Token 60: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2989777624607086
    2. ' for' → logprob: -1.4239777326583862
    3. '   ' → logprob: -4.048977851867676
    4. '	for' → logprob: -9.798977851867676
    5. 'result' → logprob: -10.298977851867676
    6. ' ' → logprob: -10.673977851867676
    7. 'answer' → logprob: -10.673977851867676
    8. '    ' → logprob: -10.923977851867676
    9. 'found' → logprob: -11.673977851867676
    10. 'count' → logprob: -11.673977851867676

Token 61: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.7185823917388916
    2. ' card' → logprob: -1.0935823917388916
    3. 'c' → logprob: -2.3435823917388916
    4. ' i' → logprob: -3.3435823917388916
    5. 'card' → logprob: -3.7185823917388916
    6. 'i' → logprob: -5.3435821533203125
    7. ' ' → logprob: -5.4685821533203125
    8. ' _' → logprob: -5.7185821533203125
    9. ' x' → logprob: -5.8435821533203125
    10. '_' → logprob: -6.0935821533203125

Token 62: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03410296142101288
    2. 'in' → logprob: -3.4091029167175293
    3. ' ' → logprob: -8.284103393554688
    4. 'i' → logprob: -9.909103393554688
    5. 's' → logprob: -9.909103393554688
    6. '   ' → logprob: -10.409103393554688
    7. '  ' → logprob: -10.534103393554688
    8. ' i' → logprob: -11.409103393554688
    9. ',' → logprob: -11.659103393554688
    10. 'n' → logprob: -11.909103393554688

Token 63: ' cards' (ID: 10541)
  Prédit: ' cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.03381766378879547
    2. 'cards' → logprob: -3.408817768096924
    3. ' range' → logprob: -9.533817291259766
    4. 'range' → logprob: -10.408817291259766
    5. '(cards' → logprob: -10.408817291259766
    6. ' ' → logprob: -11.033817291259766
    7. 'card' → logprob: -12.408817291259766
    8. 'c' → logprob: -12.408817291259766
    9. ' card' → logprob: -12.408817291259766
    10. '   ' → logprob: -12.908817291259766

Token 64: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005468378076329827
    2. ' :' → logprob: -7.875546932220459
    3. ':
' → logprob: -9.2505464553833
    4. ' in' → logprob: -10.7505464553833
    5. '=' → logprob: -11.2505464553833
    6. '   ' → logprob: -11.8755464553833
    7. ' if' → logprob: -12.0005464553833
    8. '<|end|>' → logprob: -12.1255464553833
    9. ':**' → logprob: -12.7505464553833
    10. '):' → logprob: -12.8755464553833

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39449334144592285
    2. ':' → logprob: -1.6444933414459229
    3. '   ' → logprob: -2.644493341445923
    4. '<|end|>' → logprob: -3.144493341445923
    5. ' if' → logprob: -4.644493103027344
    6. '    ' → logprob: -5.269493103027344
    7. '<|end|>' → logprob: -6.394493103027344
    8. ':
' → logprob: -7.394493103027344
    9. '```' → logprob: -7.769493103027344
    10. ',' → logprob: -8.394493103027344

Token 66: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.01466464251279831
    2. 'if' (adapté à ' if') → logprob: -4.264664649963379
    3. '    ' → logprob: -7.764664649963379
    4. '   ' → logprob: -10.014664649963379
    5. ' ' → logprob: -10.764664649963379
    6. '```' → logprob: -12.639664649963379
    7. '       ' → logprob: -12.764664649963379
    8. '        ' → logprob: -13.639664649963379
    9. '	if' → logprob: -14.014664649963379
    10. '<|end|>' → logprob: -14.764664649963379

Token 67: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.2521152198314667
    2. 'c' → logprob: -1.502115249633789
    3. ' ' → logprob: -9.377115249633789
    4. ' not' → logprob: -10.002115249633789
    5. '   ' → logprob: -11.502115249633789
    6. 'n' → logprob: -11.752115249633789
    7. ' n' → logprob: -11.877115249633789
    8. 'not' → logprob: -12.002115249633789
    9. '  ' → logprob: -12.127115249633789
    10. '    ' → logprob: -13.002115249633789

Token 68: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6623435020446777
    2. '==' → logprob: -0.9123435020446777
    3. ' in' → logprob: -2.7873435020446777
    4. '>' → logprob: -4.912343502044678
    5. ' >' → logprob: -5.787343502044678
    6. ' not' → logprob: -6.162343502044678
    7. '!=' → logprob: -6.162343502044678
    8. ' !=' → logprob: -6.287343502044678
    9. '==-' → logprob: -6.287343502044678
    10. 'in' → logprob: -6.787343502044678

Token 69: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6389352083206177
    2. '0' → logprob: -0.7639352083206177
    3. '-' → logprob: -5.388935089111328
    4. ' -' → logprob: -7.138935089111328
    5. '1' → logprob: -7.388935089111328
    6. '7' → logprob: -10.201435089111328
    7. 'n' → logprob: -10.326435089111328
    8. '   ' → logprob: -10.388935089111328
    9. '2' → logprob: -11.013935089111328
    10. '  ' → logprob: -11.013935089111328

Token 70: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007451272569596767
    2. '-' → logprob: -5.007451057434082
    3. ' ' → logprob: -7.632451057434082
    4. '1' → logprob: -8.757451057434082
    5. ' -' → logprob: -11.069951057434082
    6. 'o' → logprob: -11.194951057434082
    7. '```' → logprob: -11.569951057434082
    8. '#' → logprob: -12.069951057434082
    9. '`' → logprob: -12.257451057434082
    10. '000' → logprob: -12.319951057434082

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00681909266859293
    2. ':
' → logprob: -5.006819248199463
    3. ' or' → logprob: -9.631818771362305
    4. ' :' → logprob: -11.256818771362305
    5. '<|end|>' → logprob: -11.756818771362305
    6. ' and' → logprob: -11.881818771362305
    7. ':

' → logprob: -12.881818771362305
    8. ':
' → logprob: -13.381818771362305
    9. '):' → logprob: -13.881818771362305
    10. ')' → logprob: -14.131818771362305

Token 72: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.49834099411964417
    2. '       ' → logprob: -0.9983409643173218
    3. ' blanks' → logprob: -3.9983410835266113
    4. '           ' → logprob: -6.498341083526611
    5. '   ' → logprob: -6.748341083526611
    6. '```' → logprob: -7.123341083526611
    7. '        
' → logprob: -7.248341083526611
    8. '
' → logprob: -7.873341083526611
    9. '    
' → logprob: -8.373340606689453
    10. '

' → logprob: -8.748340606689453

Token 73: ' blanks' (ID: 160898)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.6350188255310059
    2. ' blanks' → logprob: -0.7600188255310059
    3. 'blank' → logprob: -6.385018825531006
    4. '   ' → logprob: -8.010019302368164
    5. '       ' → logprob: -8.760019302368164
    6. ' blank' → logprob: -9.010019302368164
    7. ' bl' → logprob: -10.010019302368164
    8. '    ' → logprob: -11.010019302368164
    9. '```' → logprob: -11.385019302368164
    10. '     ' → logprob: -11.635019302368164

Token 74: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.47408926486968994
    2. ' +=' → logprob: -0.9740892648696899
    3. '+' → logprob: -11.474089622497559
    4. ']+=' → logprob: -13.974089622497559
    5. '=' → logprob: -14.349089622497559
    6. ' ' → logprob: -15.974089622497559
    7. '+='' → logprob: -16.599088668823242
    8. '   ' → logprob: -16.599088668823242
    9. '+=(' → logprob: -17.349088668823242
    10. ' =' → logprob: -17.474088668823242

Token 75: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.875045776367188
    4. '<|end|>' → logprob: -18.500045776367188
    5. '  ' → logprob: -20.000045776367188
    6. '１' → logprob: -20.375045776367188
    7. '۱' → logprob: -21.000045776367188
    8. '```' → logprob: -21.125045776367188
    9. '    ' → logprob: -21.375045776367188
    10. ' ' → logprob: -21.750045776367188

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '<|end|>' → logprob: -16.875009536743164
    4. '   ' → logprob: -17.750009536743164
    5. '  ' → logprob: -19.625009536743164
    6. '۱' → logprob: -20.250009536743164
    7. '```' → logprob: -20.250009536743164
    8. '１' → logprob: -20.562509536743164
    9. '-' → logprob: -20.625009536743164
    10. '+' → logprob: -20.750009536743164

Token 77: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08998861163854599
    2. '<|end|>' → logprob: -2.9649887084960938
    3. ' else' → logprob: -4.214988708496094
    4. '
' → logprob: -4.714988708496094
    5. '   ' → logprob: -5.464988708496094
    6. ' elif' → logprob: -5.839988708496094
    7. ' ' → logprob: -7.214988708496094
    8. 'else' → logprob: -7.339988708496094
    9. 'elif' → logprob: -7.964988708496094
    10. '    ' → logprob: -7.964988708496094

Token 78: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16693717241287231
    2. ' else' → logprob: -2.2919371128082275
    3. '   ' → logprob: -3.5419371128082275
    4. ' elif' → logprob: -4.541937351226807
    5. '
' → logprob: -5.166937351226807
    6. 'else' → logprob: -5.916937351226807
    7. '<|end|>' → logprob: -6.291937351226807
    8. ' ' → logprob: -6.916937351226807
    9. 'elif' → logprob: -7.291937351226807
    10. '```' → logprob: -8.291936874389648

Token 79: ' else' (ID: 1203)
  Prédit: ' elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.7071136236190796
    2. ' else' → logprob: -0.8321136236190796
    3. 'elif' → logprob: -3.332113742828369
    4. 'else' (adapté à ' else') → logprob: -3.832113742828369
    5. '       ' → logprob: -4.332113742828369
    6. '<|end|>' → logprob: -7.582113742828369
    7. '	elif' → logprob: -8.457113265991211
    8. '   ' → logprob: -8.457113265991211
    9. ' ' → logprob: -8.832113265991211
    10. '        ' → logprob: -9.457113265991211

Token 80: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03372039273381233
    2. ':
' → logprob: -3.4087204933166504
    3. ' if' → logprob: -10.533720016479492
    4. ':

' → logprob: -11.408720016479492
    5. '       ' → logprob: -11.658720016479492
    6. ' :' → logprob: -11.908720016479492
    7. '<|end|>' → logprob: -12.033720016479492
    8. ',' → logprob: -12.533720016479492
    9. '           ' → logprob: -12.658720016479492
    10. ' :
' → logprob: -13.533720016479492

Token 81: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2605820596218109
    2. '
' → logprob: -2.0105819702148438
    3. ' if' → logprob: -2.6355819702148438
    4. '       ' → logprob: -4.635581970214844
    5. ' known' → logprob: -4.635581970214844
    6. '   ' → logprob: -6.635581970214844
    7. '
' → logprob: -7.385581970214844
    8. '    
' → logprob: -7.635581970214844
    9. 'if' → logprob: -8.135581970214844
    10. '```' → logprob: -8.135581970214844

Token 82: ' known' (ID: 5542)
  Prédit: ' known'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' known' → logprob: -0.43241849541664124
    2. 'known' (adapté à ' known') → logprob: -1.0574184656143188
    3. ' if' → logprob: -6.307418346405029
    4. 'if' → logprob: -6.557418346405029
    5. '   ' → logprob: -7.807418346405029
    6. ' ' → logprob: -11.682418823242188
    7. '           ' → logprob: -11.807418823242188
    8. '    ' → logprob: -11.807418823242188
    9. 'unknown' → logprob: -11.807418823242188
    10. '_known' → logprob: -12.057418823242188

Token 83: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0015105740167200565
    2. '.' → logprob: -6.5015106201171875
    3. '.update' → logprob: -12.501510620117188
    4. ' .' → logprob: -13.001510620117188
    5. '.setdefault' → logprob: -13.251510620117188
    6. '.append' → logprob: -16.251510620117188
    7. '.Add' → logprob: -16.501510620117188
    8. '.dis' → logprob: -16.876510620117188
    9. 'add' → logprob: -16.876510620117188
    10. '.insert' → logprob: -17.251510620117188

Token 84: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.023248620331287384
    2. '(' → logprob: -3.7732486724853516
    3. '((' → logprob: -13.648248672485352
    4. ' (' → logprob: -13.648248672485352
    5. '(
' → logprob: -15.273248672485352
    6. '()' → logprob: -16.39824867248535
    7. '(C' → logprob: -16.89824867248535
    8. '(

' → logprob: -16.89824867248535
    9. ')' → logprob: -17.39824867248535
    10. '(int' → logprob: -17.52324867248535

Token 85: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.9292415749514475e-05
    2. ' )' → logprob: -10.500039100646973
    3. ')
' → logprob: -11.375039100646973
    4. ')#' → logprob: -16.75004005432129
    5. ')return' → logprob: -17.12504005432129
    6. '())' → logprob: -17.25004005432129
    7. ')

' → logprob: -17.37504005432129
    8. '))' → logprob: -17.87504005432129
    9. ')`' → logprob: -17.87504005432129
    10. ')
' → logprob: -18.62504005432129

Token 86: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: ' arr' (ID: 1724)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.008306622505188
    2. '<|end|>' → logprob: -1.383306622505188
    3. 'possible' → logprob: -1.758306622505188
    4. '
' → logprob: -3.2583065032958984
    5. ' possible' → logprob: -3.5083065032958984
    6. '```' → logprob: -4.008306503295898
    7. '    
' → logprob: -4.008306503295898
    8. '?' → logprob: -4.008306503295898
    9. ' unknown' → logprob: -4.508306503295898
    10. ' if' → logprob: -4.633306503295898

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.058335043489933014
    2. '=' → logprob: -2.933335065841675
    3. 'angement' → logprob: -6.558334827423096
    4. 'anged' → logprob: -7.058334827423096
    5. 'angements' → logprob: -7.683334827423096
    6. '=[]' → logprob: -8.308335304260254
    7. 'anging' → logprob: -8.933335304260254
    8. 'ays' → logprob: -9.183335304260254
    9. 's' → logprob: -10.058335304260254
    10. 'ay' → logprob: -10.308335304260254

Token 89: ' sorted' (ID: 20099)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.7348083853721619
    2. '[' → logprob: -0.9848083853721619
    3. '[]' → logprob: -2.6098084449768066
    4. ' []' → logprob: -4.109808444976807
    5. '[list' → logprob: -4.109808444976807
    6. ' list' → logprob: -4.484808444976807
    7. '[len' → logprob: -4.734808444976807
    8. ' sorted' → logprob: -5.359808444976807
    9. 'list' → logprob: -5.609808444976807
    10. '[n' → logprob: -5.984808444976807

Token 90: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13846522569656372
    2. '(cards' → logprob: -2.888465166091919
    3. '(list' → logprob: -3.138465166091919
    4. '([' → logprob: -4.013465404510498
    5. '(set' → logprob: -4.763465404510498
    6. '((' → logprob: -7.138465404510498
    7. 'known' → logprob: -7.388465404510498
    8. '({' → logprob: -7.638465404510498
    9. '(range' → logprob: -7.638465404510498
    10. '([(' → logprob: -8.13846492767334

Token 91: 'known' (ID: 8520)
  Prédit: 'known'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'known' → logprob: -0.11067503690719604
    2. 'list' → logprob: -2.610675096511841
    3. '[' → logprob: -4.485674858093262
    4. 'set' → logprob: -5.235674858093262
    5. '(' → logprob: -5.360674858093262
    6. '(list' → logprob: -6.110674858093262
    7. '{' → logprob: -6.235674858093262
    8. '(set' → logprob: -6.860674858093262
    9. ' known' → logprob: -6.985674858093262
    10. '[k' → logprob: -7.110674858093262

Token 92: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014823668170720339
    2. ' )' → logprob: -6.8764824867248535
    3. ',' → logprob: -8.376482009887695
    4. ')
' → logprob: -9.626482009887695
    5. '.union' → logprob: -10.001482009887695
    6. '())' → logprob: -10.501482009887695
    7. '))' → logprob: -10.876482009887695
    8. ')+' → logprob: -11.001482009887695
    9. '|' → logprob: -11.376482009887695
    10. ' ,' → logprob: -11.876482009887695

Token 93: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: ' if' (ID: 538)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -1.7860558032989502
    2. 'max' → logprob: -1.9110558032989502
    3. 'if' (adapté à ' if') → logprob: -2.41105580329895
    4. 'answer' → logprob: -2.91105580329895
    5. ' if' → logprob: -2.91105580329895
    6. 'missing' → logprob: -3.03605580329895
    7. 'count' → logprob: -3.16105580329895
    8. 'idx' → logprob: -3.53605580329895
    9. 'min' → logprob: -3.66105580329895
    10. ' missing' → logprob: -3.66105580329895

Token 95: ' not' (ID: 625)
  Prédit: ' blanks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' blanks' → logprob: -0.44380465149879456
    2. ' len' → logprob: -1.0688046216964722
    3. 'len' → logprob: -4.693804740905762
    4. ' k' → logprob: -6.443804740905762
    5. ' ' → logprob: -6.818804740905762
    6. 'bl' → logprob: -7.193804740905762
    7. ' blank' → logprob: -7.693804740905762
    8. ' known' → logprob: -7.693804740905762
    9. ' arr' → logprob: -7.943804740905762
    10. ' n' → logprob: -8.068804740905762

Token 96: ' arr' (ID: 1724)
  Prédit: ' blanks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blanks' → logprob: -0.1759612113237381
    2. ' arr' → logprob: -2.1759612560272217
    3. 'arr' → logprob: -3.5509612560272217
    4. ' known' → logprob: -5.175961017608643
    5. ' cards' → logprob: -5.300961017608643
    6. 'bl' → logprob: -5.550961017608643
    7. ' blank' → logprob: -6.800961017608643
    8. ' len' → logprob: -6.925961017608643
    9. 'cards' → logprob: -7.550961017608643
    10. 'known' → logprob: -7.675961017608643

Token 97: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.04720047488808632
    2. 'or' → logprob: -3.6722004413604736
    3. ':' → logprob: -4.047200679779053
    4. '[' → logprob: -5.797200679779053
    5. ' ' → logprob: -9.797200202941895
    6. '==' → logprob: -10.547200202941895
    7. ':
' → logprob: -10.922200202941895
    8. '[:]' → logprob: -11.047200202941895
    9. ' and' → logprob: -11.172200202941895
    10. '	or' → logprob: -11.297200202941895

Token 98: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38029175996780396
    2. ':' → logprob: -1.2552917003631592
    3. '   ' → logprob: -4.255291938781738
    4. ':
' → logprob: -4.380291938781738
    5. ' or' → logprob: -6.380291938781738
    6. ' continue' → logprob: -7.380291938781738
    7. '\n' → logprob: -8.005291938781738
    8. '.' → logprob: -8.380291938781738
    9. ' print' → logprob: -8.630291938781738
    10. ' and' → logprob: -8.630291938781738

Token 99: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.26126545667648315
    2. 'print' (adapté à ' print') → logprob: -2.136265516281128
    3. ' continue' → logprob: -2.761265516281128
    4. '   ' → logprob: -4.386265277862549
    5. '       ' → logprob: -4.761265277862549
    6. '
' → logprob: -4.761265277862549
    7. '\n' → logprob: -5.261265277862549
    8. '    ' → logprob: -5.261265277862549
    9. 'continue' → logprob: -6.011265277862549
    10. ' 
' → logprob: -6.136265277862549

Token 100: '(bl' (ID: 110427)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5342586040496826
    2. '(k' → logprob: -2.0342586040496826
    3. '("' → logprob: -2.2842586040496826
    4. '(bl' → logprob: -2.4092586040496826
    5. '(n' → logprob: -3.5342586040496826
    6. '('' → logprob: -4.159258842468262
    7. '("?' → logprob: -4.409258842468262
    8. '((' → logprob: -4.659258842468262
    9. '(max' → logprob: -5.284258842468262
    10. '(blank' → logprob: -5.409258842468262

Token 101: 'anks' (ID: 4096)
  Prédit: 'anks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anks' → logprob: -0.021652966737747192
    2. 'an' → logprob: -4.396653175354004
    3. 'ank' → logprob: -5.146653175354004
    4. 'a' → logprob: -5.771653175354004
    5. 'acks' → logprob: -9.646653175354004
    6. '"' → logprob: -10.396653175354004
    7. ''' → logprob: -11.396653175354004
    8. '```' → logprob: -11.396653175354004
    9. '(' → logprob: -11.646653175354004
    10. 'anc' → logprob: -12.271653175354004

Token 102: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006069579161703587
    2. '*' → logprob: -5.631069660186768
    3. ' )' → logprob: -7.006069660186768
    4. '+' → logprob: -7.256069660186768
    5. ' *' → logprob: -7.631069660186768
    6. ' +' → logprob: -9.00606918334961
    7. ',' → logprob: -9.63106918334961
    8. '*)' → logprob: -9.75606918334961
    9. '-' → logprob: -10.75606918334961
    10. '')' → logprob: -11.13106918334961

Token 103: ' blanks' (ID: 160898)
  Prédit: ' blanks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blanks' → logprob: -0.8190888166427612
    2. ' k' → logprob: -1.0690888166427612
    3. 'k' → logprob: -2.194088935852051
    4. 'bl' → logprob: -3.319088935852051
    5. ' n' → logprob: -3.319088935852051
    6. ' True' → logprob: -4.944088935852051
    7. 'n' → logprob: -5.069088935852051
    8. ' cards' → logprob: -5.194088935852051
    9. ' ' → logprob: -5.694088935852051
    10. '0' → logprob: -6.069088935852051

Token 104: '<=' (ID: 16672)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5088712573051453
    2. ' >' → logprob: -1.38387131690979
    3. ' >=' → logprob: -3.00887131690979
    4. '>=' → logprob: -3.00887131690979
    5. '==' → logprob: -4.008871078491211
    6. ' else' → logprob: -4.258871078491211
    7. ' ==' → logprob: -5.133871078491211
    8. 'else' → logprob: -5.383871078491211
    9. ' <' → logprob: -6.008871078491211
    10. '<' → logprob: -6.508871078491211

Token 105: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01938105747103691
    2. 'k' → logprob: -4.394381046295166
    3. ' n' → logprob: -6.019381046295166
    4. '1' → logprob: -6.144381046295166
    5. '0' → logprob: -7.519381046295166
    6. '26' → logprob: -7.644381046295166
    7. '52' → logprob: -8.144381523132324
    8. '2' → logprob: -8.519381523132324
    9. ' ' → logprob: -9.269381523132324
    10. '13' → logprob: -9.394381523132324

Token 106: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.10025228559970856
    2. 'else' → logprob: -2.350252389907837
    3. '-' → logprob: -10.850252151489258
    4. '+' → logprob: -11.600252151489258
    5. ')' → logprob: -12.475252151489258
    6. '	else' → logprob: -12.850252151489258
    7. ' and' → logprob: -12.850252151489258
    8. 'and' → logprob: -12.850252151489258
    9. ' ' → logprob: -13.350252151489258
    10. '```' → logprob: -13.975252151489258

Token 107: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5444711446762085
    2. ' n' → logprob: -1.1694711446762085
    3. '"' → logprob: -3.669471263885498
    4. '-' → logprob: -3.794471263885498
    5. '0' → logprob: -4.294471263885498
    6. ''' → logprob: -4.419471263885498
    7. ''n' → logprob: -4.544471263885498
    8. ' ' → logprob: -5.044471263885498
    9. ' -' → logprob: -5.169471263885498
    10. '?' → logprob: -5.544471263885498

Token 108: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. ')
' → logprob: -13.12500286102295
    3. ' )' → logprob: -14.62500286102295
    4. '))' → logprob: -15.50000286102295
    5. '),' → logprob: -17.375001907348633
    6. '+' → logprob: -17.750001907348633
    7. ')`' → logprob: -17.750001907348633
    8. ')}' → logprob: -18.125001907348633
    9. ')n' → logprob: -18.125001907348633
    10. '')' → logprob: -18.250001907348633

Token 109: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4958321452140808
    2. '   ' → logprob: -1.1208322048187256
    3. ' else' → logprob: -3.1208322048187256
    4. 'elif' → logprob: -3.9958322048187256
    5. ')' → logprob: -6.8708319664001465
    6. ' elif' → logprob: -8.495832443237305
    7. '    
' → logprob: -8.495832443237305
    8. '	else' → logprob: -8.495832443237305
    9. '<|end|>' → logprob: -8.620832443237305
    10. '...' → logprob: -8.995832443237305

Token 110: ' continue' (ID: 4901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0829729363322258
    2. 'continue' (adapté à ' continue') → logprob: -2.582973003387451
    3. ' continue' → logprob: -5.582973003387451
    4. '	continue' → logprob: -8.457972526550293
    5. 'else' → logprob: -9.832972526550293
    6. 'contin' → logprob: -10.832972526550293
    7. '       ' → logprob: -11.332972526550293
    8. '_continue' → logprob: -11.957972526550293
    9. '```' → logprob: -13.582972526550293
    10. ' else' → logprob: -13.832972526550293

Token 111: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29984143376350403
    2. 'max' → logprob: -2.6748414039611816
    3. 'arr' → logprob: -3.4248414039611816
    4. 'possible' → logprob: -3.9248414039611816
    5. 'idx' → logprob: -4.049841403961182
    6. '    
' → logprob: -4.049841403961182
    7. 'min' → logprob: -4.174841403961182
    8. 'rest' → logprob: -4.549841403961182
    9. 'else' → logprob: -4.924841403961182
    10. 'result' → logprob: -5.049841403961182

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3222782611846924
    2. 'arr' → logprob: -2.5722782611846924
    3. 'max' → logprob: -2.6972782611846924
    4. 'possible' → logprob: -3.9472782611846924
    5. 'min' → logprob: -4.072278022766113
    6. '    
' → logprob: -4.197278022766113
    7. '```' → logprob: -4.447278022766113
    8. 'idx' → logprob: -4.697278022766113
    9. 'rest' → logprob: -4.947278022766113
    10. 'remaining' → logprob: -5.072278022766113

Token 113: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -1.0294897556304932
    2. 'min' → logprob: -1.5294897556304932
    3. 'idx' → logprob: -2.154489755630493
    4. 'possible' → logprob: -3.279489755630493
    5. 'prev' → logprob: -3.654489755630493
    6. 'res' → logprob: -3.654489755630493
    7. 'answer' → logprob: -3.654489755630493
    8. 'result' → logprob: -4.029489517211914
    9. 'low' → logprob: -4.154489517211914
    10. ' min' → logprob: -4.154489517211914

Token 114: 'len' (ID: 3303)
  Prédit: '_gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_gap' → logprob: -0.1772037297487259
    2. '_diff' → logprob: -2.80220365524292
    3. '_possible' → logprob: -3.42720365524292
    4. '_' → logprob: -4.17720365524292
    5. '_missing' → logprob: -4.17720365524292
    6. '_blank' → logprob: -4.42720365524292
    7. '_g' → logprob: -5.05220365524292
    8. '_val' → logprob: -5.17720365524292
    9. '_pos' → logprob: -5.55220365524292
    10. '_num' → logprob: -6.30220365524292

Token 115: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5826958417892456
    2. ' =' → logprob: -0.8326958417892456
    3. '_' → logprob: -5.082695960998535
    4. ',' → logprob: -7.707695960998535
    5. '_=' → logprob: -10.207695960998535
    6. '_idx' → logprob: -10.832695960998535
    7. ' ' → logprob: -11.832695960998535
    8. '=max' → logprob: -12.707695960998535
    9. 'idx' → logprob: -13.457695960998535
    10. '   ' → logprob: -13.582695960998535

Token 116: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02917187660932541
    2. ' ' → logprob: -4.029171943664551
    3. '0' → logprob: -4.529171943664551
    4. 'max' → logprob: -9.52917194366455
    5. 'len' → logprob: -10.65417194366455
    6. 'tmp' → logprob: -11.27917194366455
    7. '[' → logprob: -11.52917194366455
    8. 'ans' → logprob: -12.02917194366455
    9. 'temp' → logprob: -12.27917194366455
    10. ' max' → logprob: -12.27917194366455

Token 117: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17807307839393616
    2. '0' → logprob: -1.9280730485916138
    3. 'arr' → logprob: -4.303072929382324
    4. ' ' → logprob: -5.678072929382324
    5. 'len' → logprob: -7.553072929382324
    6. 'max' → logprob: -9.803072929382324
    7. 'ans' → logprob: -10.178072929382324
    8. '-' → logprob: -10.678072929382324
    9. 'current' → logprob: -11.428072929382324
    10. ' arr' → logprob: -11.678072929382324

Token 118: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7159339189529419
    2. '<|end|>' → logprob: -0.7159339189529419
    3. '   ' → logprob: -4.965933799743652
    4. ',' → logprob: -5.590933799743652
    5. '<|end|>' → logprob: -5.840933799743652
    6. ' for' → logprob: -6.465933799743652
    7. '    
' → logprob: -6.715933799743652
    8. 'idx' → logprob: -6.715933799743652
    9. 'current' → logprob: -6.840933799743652
    10. 'for' → logprob: -7.465933799743652

Token 119: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6284068822860718
    2. '   ' → logprob: -1.8784068822860718
    3. ' for' → logprob: -2.1284070014953613
    4. '
' → logprob: -2.6284070014953613
    5. 'i' → logprob: -3.6284070014953613
    6. '<|end|>' → logprob: -3.6284070014953613
    7. 'arr' → logprob: -4.003407001495361
    8. 'prev' → logprob: -4.003407001495361
    9. ' i' → logprob: -4.753407001495361
    10. 'idx' → logprob: -5.253407001495361

Token 120: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.037928447127342224
    2. 'start' → logprob: -4.037928581237793
    3. 'current' → logprob: -5.537928581237793
    4. 'prev' → logprob: -5.537928581237793
    5. 'l' → logprob: -5.912928581237793
    6. 'left' → logprob: -6.037928581237793
    7. 'max' → logprob: -6.037928581237793
    8. 'cur' → logprob: -6.912928581237793
    9. 'temp' → logprob: -7.162928581237793
    10. 'i' → logprob: -7.412928581237793

Token 121: ' Check' (ID: 6208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012071494944393635
    2. ' for' → logprob: -5.51207160949707
    3. 'start' → logprob: -5.63707160949707
    4. 'left' → logprob: -6.38707160949707
    5. 'l' → logprob: -6.76207160949707
    6. 'prev' → logprob: -7.13707160949707
    7. 'i' → logprob: -7.63707160949707
    8. 'from' → logprob: -9.01207160949707
    9. '   ' → logprob: -10.63707160949707
    10. '```' → logprob: -11.26207160949707

Token 122: ' from' (ID: 591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2858293950557709
    2. ' for' → logprob: -1.9108294248580933
    3. 'from' → logprob: -2.7858293056488037
    4. 'i' → logprob: -4.910829544067383
    5. 'arr' → logprob: -5.160829544067383
    6. 'the' → logprob: -5.160829544067383
    7. ' the' → logprob: -5.160829544067383
    8. ' from' → logprob: -6.160829544067383
    9. ' i' → logprob: -6.410829544067383
    10. 'between' → logprob: -6.535829544067383

Token 123: ' left' (ID: 3561)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.21709679067134857
    2. '0' → logprob: -1.8420968055725098
    3. 'i' → logprob: -4.09209680557251
    4. '1' → logprob: -4.71709680557251
    5. 'the' → logprob: -5.34209680557251
    6. 'index' → logprob: -6.09209680557251
    7. ' ' → logprob: -6.46709680557251
    8. ' arr' → logprob: -6.96709680557251
    9. 'len' → logprob: -8.217096328735352
    10. ' i' → logprob: -8.217096328735352

Token 124: ' before' (ID: 2254)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5791950225830078
    2. '=' → logprob: -1.4541950225830078
    3. 'arr' → logprob: -2.454195022583008
    4. ' for' → logprob: -2.829195022583008
    5. 'to' → logprob: -4.829195022583008
    6. ' to' → logprob: -4.829195022583008
    7. 'i' → logprob: -4.829195022583008
    8. ',' → logprob: -4.829195022583008
    9. ' =' → logprob: -4.954195022583008
    10. 'max' → logprob: -5.329195022583008

Token 125: ' first' (ID: 1577)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.00020890454470645636
    2. ' arr' → logprob: -8.500208854675293
    3. 'the' → logprob: -12.625208854675293
    4. ' the' → logprob: -14.500208854675293
    5. '(arr' → logprob: -14.625208854675293
    6. 'first' → logprob: -15.250208854675293
    7. '	arr' → logprob: -15.375208854675293
    8. 'a' → logprob: -15.625208854675293
    9. '```' → logprob: -15.750208854675293
    10. '[arr' → logprob: -16.37520980834961

Token 126: ' known' (ID: 5542)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.17580562829971313
    2. ' element' → logprob: -2.6758055686950684
    3. 'card' → logprob: -3.4258055686950684
    4. 'element' → logprob: -3.5508055686950684
    5. ' card' → logprob: -4.300805568695068
    6. ' arr' → logprob: -4.925805568695068
    7. ' number' → logprob: -6.550805568695068
    8. 'number' → logprob: -6.800805568695068
    9. 'index' → logprob: -7.175805568695068
    10. '_arr' → logprob: -7.175805568695068

Token 127: ' card' (ID: 4766)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -2.3792693614959717
    2. 'card' → logprob: -2.5042693614959717
    3. 'if' → logprob: -2.6292693614959717
    4. '_num' → logprob: -2.6292693614959717
    5. ' if' → logprob: -2.8792693614959717
    6. 'idx' → logprob: -3.0042693614959717
    7. 'number' → logprob: -3.0042693614959717
    8. '_number' → logprob: -3.1292693614959717
    9. '_gap' → logprob: -3.2542693614959717
    10. 'gap' → logprob: -3.3792693614959717

Token 128: '
' (ID: 198)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0969338417053223
    2. ',' → logprob: -1.7219338417053223
    3. ' to' → logprob: -2.2219338417053223
    4. '   ' → logprob: -2.5969338417053223
    5. ' =' → logprob: -2.5969338417053223
    6. ' max' → logprob: -3.0969338417053223
    7. ' if' → logprob: -3.3469338417053223
    8. '=' → logprob: -3.5969338417053223
    9. 'to' → logprob: -3.7219338417053223
    10. ':' → logprob: -3.9719338417053223

Token 129: '   ' (ID: 271)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.006859824061393738
    2. 'if' → logprob: -5.50685977935791
    3. '```' → logprob: -7.13185977935791
    4. 'bl' → logprob: -7.50685977935791
    5. ' max' → logprob: -8.13185977935791
    6. 'for' → logprob: -8.25685977935791
    7. 'blank' → logprob: -8.63185977935791
    8. '(max' → logprob: -9.00685977935791
    9. '   ' → logprob: -9.50685977935791
    10. 'to' → logprob: -9.63185977935791

Token 130: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.0020207129418849945
    2. 'if' → logprob: -6.377020835876465
    3. ' max' → logprob: -9.002020835876465
    4. 'blank' → logprob: -9.877020835876465
    5. '(max' → logprob: -10.002020835876465
    6. '   ' → logprob: -10.502020835876465
    7. '```' → logprob: -10.877020835876465
    8. 'min' → logprob: -11.627020835876465
    9. 'bl' → logprob: -11.627020835876465
    10. 'first' → logprob: -12.127020835876465

Token 131: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.069664333248511e-05
    2. 'max' → logprob: -11.000020980834961
    3. 'left' → logprob: -13.000020980834961
    4. 'le' → logprob: -15.375020980834961
    5. 'length' → logprob: -15.375020980834961
    6. '_possible' → logprob: -15.500020980834961
    7. '_len' → logprob: -15.750020980834961
    8. 'if' → logprob: -16.12502098083496
    9. 'l' → logprob: -16.12502098083496
    10. '_' → logprob: -16.37502098083496

Token 132: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47918957471847534
    2. ' =' → logprob: -0.9791895747184753
    3. ' +=' → logprob: -5.979189395904541
    4. '+=' → logprob: -6.354189395904541
    5. '=max' → logprob: -7.104189395904541
    6. ' ' → logprob: -13.2291898727417
    7. '+=(' → logprob: -13.7291898727417
    8. '=len' → logprob: -13.9791898727417
    9. '	' → logprob: -14.6041898727417
    10. ' ' → logprob: -14.7291898727417

Token 133: ' arr' (ID: 1724)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5787370800971985
    2. ' max' → logprob: -0.8287370800971985
    3. 'arr' → logprob: -6.203737258911133
    4. ' arr' → logprob: -7.703737258911133
    5. ' blanks' → logprob: -8.828737258911133
    6. 'cards' → logprob: -10.078737258911133
    7. 'min' → logprob: -10.453737258911133
    8. ' blank' → logprob: -10.703737258911133
    9. ' cards' → logprob: -10.953737258911133
    10. '(max' → logprob: -11.203737258911133

Token 134: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.060365608893335e-05
    2. '0' → logprob: -10.375041007995605
    3. '[-' → logprob: -12.875041007995605
    4. 'index' → logprob: -13.750041007995605
    5. '1' → logprob: -14.000041007995605
    6. '
' → logprob: -14.125041007995605
    7. '[len' → logprob: -14.625041007995605
    8. '```' → logprob: -14.875041007995605
    9. '[
' → logprob: -15.250041007995605
    10. '[max' → logprob: -15.250041007995605

Token 135: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.500005722045898
    3. '[' → logprob: -13.750005722045898
    4. '
' → logprob: -15.625005722045898
    5. '   ' → logprob: -16.3750057220459
    6. '(' → logprob: -17.0000057220459
    7. '000' → logprob: -17.2500057220459
    8. '۰' → logprob: -17.4375057220459
    9. '1' → logprob: -17.5625057220459
    10. '```' → logprob: -17.8750057220459

Token 136: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1880016326904297
    2. ' -' → logprob: -2.0630016326904297
    3. ')' → logprob: -3.5630016326904297
    4. '<|end|>' → logprob: -4.18800163269043
    5. ']' → logprob: -7.68800163269043
    6. ' )' → logprob: -9.43800163269043
    7. ')-' → logprob: -9.56300163269043
    8. '+' → logprob: -10.06300163269043
    9. '<|end|>' → logprob: -10.43800163269043
    10. '[' → logprob: -10.56300163269043

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7372048862162046e-05
    2. ' ' → logprob: -10.625027656555176
    3. '0' → logprob: -12.750027656555176
    4. '   ' → logprob: -16.25002670288086
    5. '<|end|>' → logprob: -17.50002670288086
    6. '[' → logprob: -18.12502670288086
    7. '       ' → logprob: -18.87502670288086
    8. '-' → logprob: -19.25002670288086
    9. '  ' → logprob: -19.87502670288086
    10. '           ' → logprob: -19.93752670288086

Token 138: '+' (ID: 10)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 139: 'bl' (ID: 1751)
  Prédit: 'bl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.11643718928098679
    2. 'min' → logprob: -2.2414371967315674
    3. ' blanks' → logprob: -6.116436958312988
    4. 'blank' → logprob: -6.991436958312988
    5. ' min' → logprob: -7.866436958312988
    6. 'max' → logprob: -10.116436958312988
    7. '   ' → logprob: -11.241436958312988
    8. '1' → logprob: -11.866436958312988
    9. ' blank' → logprob: -12.116436958312988
    10. 'b' → logprob: -12.241436958312988

Token 140: 'anks' (ID: 4096)
  Prédit: 'anks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anks' → logprob: -0.0010674663353711367
    2. 'an' → logprob: -7.501067638397217
    3. 'ank' → logprob: -8.751067161560059
    4. 'n' → logprob: -9.126067161560059
    5. '```' → logprob: -10.251067161560059
    6. 'a' → logprob: -10.501067161560059
    7. 'anc' → logprob: -10.501067161560059
    8. 'acks' → logprob: -10.626067161560059
    9. 'asks' → logprob: -10.751067161560059
    10. '
' → logprob: -10.751067161560059

Token 141: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 142: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.4609376788139343
    2. ' arr' → logprob: -1.460937738418579
    3. 'bl' → logprob: -2.710937738418579
    4. ' blanks' → logprob: -2.710937738418579
    5. ' bl' → logprob: -6.5859375
    6. '(arr' → logprob: -6.7109375
    7. ' (' → logprob: -6.8359375
    8. 'max' → logprob: -8.8359375
    9. 'blank' → logprob: -9.4609375
    10. ' blank' → logprob: -9.7109375

Token 143: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '0' → logprob: -15.5
    3. '<|end|>' → logprob: -16.625
    4. '(' → logprob: -17.5
    5. '[
' → logprob: -17.75
    6. '<|end|>' → logprob: -17.75
    7. '#' → logprob: -17.75
    8. '{' → logprob: -18.0
    9. '```' → logprob: -18.375
    10. '...' → logprob: -18.5

Token 144: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008203497272916138
    2. '[' → logprob: -7.125820159912109
    3. ' ' → logprob: -11.25082015991211
    4. '<|end|>' → logprob: -13.50082015991211
    5. '...' → logprob: -15.62582015991211
    6. '(' → logprob: -15.62582015991211
    7. '{' → logprob: -15.75082015991211
    8. '   ' → logprob: -16.00082015991211
    9. '
' → logprob: -16.25082015991211
    10. '>' → logprob: -16.31332015991211

Token 145: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.031088778749108315
    2. ' -' → logprob: -3.5310888290405273
    3. '>' → logprob: -7.156088829040527
    4. ' >' → logprob: -8.281088829040527
    5. '<|end|>' → logprob: -9.281088829040527
    6. '[' → logprob: -9.781088829040527
    7. ' ' → logprob: -10.406088829040527
    8. ')' → logprob: -10.531088829040527
    9. '1' → logprob: -10.656088829040527
    10. '>-' → logprob: -10.781088829040527

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016384923947043717
    2. ' ' → logprob: -8.750164031982422
    3. '<|end|>' → logprob: -12.875164031982422
    4. '0' → logprob: -13.875164031982422
    5. '-' → logprob: -14.750164031982422
    6. '   ' → logprob: -15.375164031982422
    7. '```' → logprob: -15.500164031982422
    8. '...' → logprob: -15.562664031982422
    9. '>' → logprob: -15.625164031982422
    10. '[' → logprob: -16.125164031982422

Token 147: '+' (ID: 10)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.944940447807312
    2. '<|end|>' → logprob: -1.444940447807312
    3. '>' → logprob: -2.1949405670166016
    4. '+' → logprob: -2.1949405670166016
    5. '<=' → logprob: -2.6949405670166016
    6. ' >=' → logprob: -2.8199405670166016
    7. ' <=' → logprob: -4.444940567016602
    8. '=' → logprob: -5.694940567016602
    9. ' >' → logprob: -6.069940567016602
    10. ' ' → logprob: -6.444940567016602

Token 148: 'bl' (ID: 1751)
  Prédit: 'bl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.05518905818462372
    2. ' blanks' → logprob: -2.9301891326904297
    3. 'blank' → logprob: -8.68018913269043
    4. ' bl' → logprob: -10.18018913269043
    5. '0' → logprob: -10.43018913269043
    6. 'blocks' → logprob: -10.80518913269043
    7. 'br' → logprob: -11.43018913269043
    8. 'b' → logprob: -12.43018913269043
    9. 'cards' → logprob: -12.55518913269043
    10. '```' → logprob: -12.68018913269043

Token 149: 'anks' (ID: 4096)
  Prédit: 'anks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anks' → logprob: -0.002293352037668228
    2. 'ank' → logprob: -7.377293586730957
    3. 'inks' → logprob: -8.002293586730957
    4. 'an' → logprob: -8.877293586730957
    5. 'acks' → logprob: -9.002293586730957
    6. 'aks' → logprob: -9.127293586730957
    7. 's' → logprob: -9.127293586730957
    8. 'n' → logprob: -9.127293586730957
    9. 'ks' → logprob: -9.127293586730957
    10. ' ' → logprob: -9.502293586730957

Token 150: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5914964079856873
    2. ' >' → logprob: -1.091496467590332
    3. '>=' → logprob: -2.841496467590332
    4. ' >=' → logprob: -2.966496467590332
    5. '<=' → logprob: -7.591496467590332
    6. ' <=' → logprob: -7.966496467590332
    7. '<n' → logprob: -10.091496467590332
    8. '<' → logprob: -10.966496467590332
    9. ' <' → logprob: -11.091496467590332
    10. ' ' → logprob: -11.841496467590332

Token 151: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.003179259831085801
    2. ' max' → logprob: -5.75317907333374
    3. '	max' → logprob: -14.628179550170898
    4. '=max' → logprob: -14.878179550170898
    5. '   ' → logprob: -15.128179550170898
    6. 'maxlength' → logprob: -15.378179550170898
    7. '0' → logprob: -16.6281795501709
    8. ' ' → logprob: -17.0031795501709
    9. 'n' → logprob: -17.0031795501709
    10. '>' → logprob: -17.2531795501709

Token 152: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.5776860184123507e-06
    2. 'en' → logprob: -13.25000286102295
    3. 'max' → logprob: -15.25000286102295
    4. '[len' → logprob: -15.75000286102295
    5. ' len' → logprob: -16.250001907348633
    6. 'Len' → logprob: -16.625001907348633
    7. '_len' → logprob: -16.875001907348633
    8. 'length' → logprob: -17.250001907348633
    9. '(len' → logprob: -18.000001907348633
    10. '<len' → logprob: -18.000001907348633

Token 153: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5884397029876709
    2. '<|end|>' → logprob: -1.463439702987671
    3. 'else' → logprob: -1.588439702987671
    4. '<|end|>' → logprob: -4.96343994140625
    5. ':' → logprob: -7.83843994140625
    6. 'max' → logprob: -7.83843994140625
    7. '
' → logprob: -8.21343994140625
    8. '.' → logprob: -8.21343994140625
    9. '   ' → logprob: -8.58843994140625
    10. ' ' → logprob: -9.08843994140625

Token 154: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0028122442308813334
    2. ' max' → logprob: -5.877812385559082
    3. 'arr' → logprob: -11.877812385559082
    4. '   ' → logprob: -15.752812385559082
    5. '	max' → logprob: -16.127811431884766
    6. ' arr' → logprob: -17.002811431884766
    7. '(max' → logprob: -17.002811431884766
    8. '[max' → logprob: -17.627811431884766
    9. '=max' → logprob: -17.877811431884766
    10. ' ' → logprob: -18.252811431884766

Token 155: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.1008713702030946e-06
    2. 'en' → logprob: -13.375001907348633
    3. 'max' → logprob: -15.625001907348633
    4. ' len' → logprob: -16.625001907348633
    5. 'length' → logprob: -16.875001907348633
    6. '[len' → logprob: -17.000001907348633
    7. 'le' → logprob: -17.500001907348633
    8. 'leni' → logprob: -18.125001907348633
    9. 'l' → logprob: -18.375001907348633
    10. '```' → logprob: -18.375001907348633

Token 156: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38140568137168884
    2. '<|end|>' → logprob: -1.2564057111740112
    3. '    
' → logprob: -4.256405830383301
    4. '
' → logprob: -4.881405830383301
    5. '<|end|>' → logprob: -5.506405830383301
    6. ')' → logprob: -6.256405830383301
    7. '#' → logprob: -6.881405830383301
    8. '    ' → logprob: -7.506405830383301
    9. ' ' → logprob: -7.756405830383301
    10. '```' → logprob: -7.756405830383301

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19032983481884003
    2. '<|end|>' → logprob: -1.8153297901153564
    3. '
' → logprob: -6.0653300285339355
    4. ')' → logprob: -6.4403300285339355
    5. '    
' → logprob: -6.8153300285339355
    6. '<|end|>' → logprob: -7.0653300285339355
    7. ' ' → logprob: -7.1903300285339355
    8. '#' → logprob: -7.3153300285339355
    9. 'for' → logprob: -7.4403300285339355
    10. ' for' → logprob: -7.4403300285339355

Token 158: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006340641528367996
    2. ' for' → logprob: -5.381340503692627
    3. 'max' → logprob: -7.506340503692627
    4. 'i' → logprob: -8.131340980529785
    5. 'prev' → logprob: -8.131340980529785
    6. '   ' → logprob: -8.381340980529785
    7. '
' → logprob: -9.131340980529785
    8. '#' (adapté à ' #') → logprob: -9.631340980529785
    9. '```' → logprob: -10.131340980529785
    10. ')' → logprob: -10.881340980529785

Token 159: ' Check' (ID: 6208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001693388563580811
    2. 'prev' → logprob: -7.001693248748779
    3. ' for' → logprob: -7.376693248748779
    4. '#' → logprob: -8.876693725585938
    5. 'previous' → logprob: -12.251693725585938
    6. 'max' → logprob: -12.626693725585938
    7. ' prev' → logprob: -12.876693725585938
    8. 'last' → logprob: -13.376693725585938
    9. 'For' → logprob: -14.001693725585938
    10. 'left' → logprob: -14.251693725585938

Token 160: ' gaps' (ID: 52008)
  Prédit: 'between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'between' → logprob: -0.3305549919605255
    2. 'from' → logprob: -1.7055549621582031
    3. ' between' → logprob: -2.705554962158203
    4. 'for' → logprob: -3.955554962158203
    5. 'the' → logprob: -5.830554962158203
    6. 'arr' → logprob: -5.830554962158203
    7. ' from' → logprob: -6.330554962158203
    8. ' the' → logprob: -6.705554962158203
    9. 'len' → logprob: -6.705554962158203
    10. '_between' → logprob: -6.955554962158203

Token 161: ' between' (ID: 2870)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13237914443016052
    2. '   ' → logprob: -2.6323790550231934
    3. 'between' → logprob: -3.5073790550231934
    4. ' for' → logprob: -4.257379055023193
    5. ' between' → logprob: -4.882379055023193
    6. 'in' → logprob: -9.007379531860352
    7. '=' → logprob: -9.632379531860352
    8. ' ' → logprob: -10.132379531860352
    9. '<|end|>' → logprob: -10.507379531860352
    10. ' in' → logprob: -10.757379531860352

Token 162: ' known' (ID: 5542)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.00024858469259925187
    2. ' arr' → logprob: -8.500248908996582
    3. 'for' → logprob: -10.750248908996582
    4. 'known' → logprob: -11.500248908996582
    5. 'adj' → logprob: -11.875248908996582
    6. 'elements' → logprob: -13.250248908996582
    7. ' known' → logprob: -14.500248908996582
    8. 'cards' → logprob: -14.500248908996582
    9. 'sorted' → logprob: -14.500248908996582
    10. 'pairs' → logprob: -14.625248908996582

Token 163: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.03643148019909859
    2. ' cards' → logprob: -3.4114315509796143
    3. 'arr' → logprob: -6.036431312561035
    4. 'for' → logprob: -8.661431312561035
    5. '_cards' → logprob: -9.161431312561035
    6. 'card' → logprob: -10.411431312561035
    7. ' arr' → logprob: -10.911431312561035
    8. ' for' → logprob: -11.411431312561035
    9. 'elements' → logprob: -11.411431312561035
    10. '   ' → logprob: -12.036431312561035

Token 164: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.024069881066679955
    2. ' for' → logprob: -4.024069786071777
    3. '   ' → logprob: -5.149069786071777
    4. '
' → logprob: -10.274069786071777
    5. '```' → logprob: -10.274069786071777
    6. '<|end|>' → logprob: -10.899069786071777
    7. '	for' → logprob: -12.524069786071777
    8. ' ' → logprob: -13.149069786071777
    9. '    
' → logprob: -13.649069786071777
    10. ',' → logprob: -14.649069786071777

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3705131709575653
    2. 'for' → logprob: -1.4955132007598877
    3. ' for' → logprob: -2.4955132007598877
    4. '
' → logprob: -6.495512962341309
    5. '```' → logprob: -7.370512962341309
    6. '	for' → logprob: -8.370512962341309
    7. '    
' → logprob: -8.870512962341309
    8. '  ' → logprob: -9.245512962341309
    9. '<|end|>' → logprob: -9.245512962341309
    10. '\n' → logprob: -9.370512962341309

Token 166: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -8.537868779967539e-06
    2. ' for' → logprob: -11.750008583068848
    3. 'i' → logprob: -14.500008583068848
    4. '   ' → logprob: -17.37500762939453
    5. '```' → logprob: -17.37500762939453
    6. 'prev' → logprob: -18.00000762939453
    7. 'from' → logprob: -20.00000762939453
    8. 'n' → logprob: -20.25000762939453
    9. '
' → logprob: -20.25000762939453
    10. 'length' → logprob: -20.75000762939453

Token 167: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014164221473038197
    2. ' i' → logprob: -4.264164447784424
    3. 'idx' → logprob: -15.014163970947266
    4. '	i' → logprob: -16.014163970947266
    5. '(i' → logprob: -16.514163970947266
    6. '_i' → logprob: -16.639163970947266
    7. ' ' → logprob: -16.639163970947266
    8. '   ' → logprob: -17.014163970947266
    9. 'index' → logprob: -17.764163970947266
    10. '[i' → logprob: -19.139163970947266

Token 168: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007725514937192202
    2. 'in' → logprob: -4.882725715637207
    3. ' range' → logprob: -9.507725715637207
    4. ' ' → logprob: -10.757725715637207
    5. 'range' → logprob: -10.757725715637207
    6. '	in' → logprob: -13.632725715637207
    7. '  ' → logprob: -15.132725715637207
    8. '   ' → logprob: -15.132725715637207
    9. ' i' → logprob: -15.132725715637207
    10. ',' → logprob: -15.257725715637207

Token 169: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005233763717114925
    2. ' range' → logprob: -5.2552337646484375
    3. '(range' → logprob: -16.880233764648438
    4. ' ' → logprob: -19.505233764648438
    5. '	range' → logprob: -19.630233764648438
    6. '   ' → logprob: -21.380233764648438
    7. '  ' → logprob: -21.505233764648438
    8. ' xrange' → logprob: -22.505233764648438
    9. '
' → logprob: -23.380233764648438
    10. '.range' → logprob: -24.255233764648438

Token 170: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931613683700562
    2. '(len' → logprob: -0.6931613683700562
    3. 'len' → logprob: -11.193161010742188
    4. '1' → logprob: -14.818161010742188
    5. ' len' → logprob: -17.193161010742188
    6. ',len' → logprob: -18.568161010742188
    7. ' (' → logprob: -18.693161010742188
    8. '(l' → logprob: -19.068161010742188
    9. '[len' → logprob: -20.068161010742188
    10. '	len' → logprob: -20.193161010742188

Token 171: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -1.735893965815194e-05
    2. '(' → logprob: -11.250017166137695
    3. 'arr' → logprob: -12.375017166137695
    4. '[arr' → logprob: -17.125017166137695
    5. '(cards' → logprob: -17.375017166137695
    6. '	arr' → logprob: -17.375017166137695
    7. ' arr' → logprob: -17.750017166137695
    8. '<arr' → logprob: -18.375017166137695
    9. '(array' → logprob: -19.125017166137695
    10. ')' → logprob: -19.250017166137695

Token 172: ')-' (ID: 14080)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8044202923774719
    2. ')' → logprob: -1.1794202327728271
    3. ')-' → logprob: -1.8044202327728271
    4. ' -' → logprob: -2.554420232772827
    5. ' ' → logprob: -6.804420471191406
    6. ' )' → logprob: -7.679420471191406
    7. '):' → logprob: -7.679420471191406
    8. '1' → logprob: -8.054420471191406
    9. '   ' → logprob: -8.304420471191406
    10. '()-' → logprob: -9.054420471191406

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002615742268972099
    2. ' ' → logprob: -8.250261306762695
    3. ')' → logprob: -15.625261306762695
    4. '   ' → logprob: -16.500261306762695
    5. '```' → logprob: -17.437761306762695
    6. '
' → logprob: -17.812761306762695
    7. '0' → logprob: -17.937761306762695
    8. '  ' → logprob: -18.437761306762695
    9. '2' → logprob: -18.437761306762695
    10. '１' → logprob: -18.687761306762695

Token 174: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.050532277673482895
    2. '):
' → logprob: -3.050532341003418
    3. ':' → logprob: -6.800532341003418
    4. ' ):' → logprob: -7.675532341003418
    5. '-' → logprob: -8.425532341003418
    6. '):
' → logprob: -9.925532341003418
    7. ' ):
' → logprob: -10.300532341003418
    8. ')' → logprob: -10.925532341003418
    9. '1' → logprob: -11.300532341003418
    10. '():' → logprob: -11.925532341003418

Token 175: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5396377444267273
    2. '       ' → logprob: -0.9146377444267273
    3. ' gap' → logprob: -5.414637565612793
    4. '    ' → logprob: -5.914637565612793
    5. '+' → logprob: -6.289637565612793
    6. 'gap' → logprob: -6.539637565612793
    7. ' gaps' → logprob: -6.789637565612793
    8. '<|end|>' → logprob: -7.039637565612793
    9. ':' → logprob: -7.414637565612793
    10. '```' → logprob: -7.914637565612793

Token 176: ' gap' (ID: 19953)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gap' (adapté à ' gap') → logprob: -0.053951673209667206
    2. ' gap' → logprob: -3.1789517402648926
    3. 'max' → logprob: -5.053951740264893
    4. 'diff' → logprob: -6.053951740264893
    5. '   ' → logprob: -6.803951740264893
    6. 'left' → logprob: -8.053951263427734
    7. 'g' → logprob: -8.428951263427734
    8. ' max' → logprob: -9.428951263427734
    9. 'd' → logprob: -9.553951263427734
    10. 'available' → logprob: -9.678951263427734

Token 177: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26630714535713196
    2. '=' → logprob: -1.7663071155548096
    3. '_len' → logprob: -3.0163071155548096
    4. '_size' → logprob: -5.016307353973389
    5. '_length' → logprob: -5.641307353973389
    6. '_gap' → logprob: -6.266307353973389
    7. '=len' → logprob: -7.266307353973389
    8. '_space' → logprob: -8.01630687713623
    9. 'len' → logprob: -8.76630687713623
    10. '_' → logprob: -9.14130687713623

Token 178: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.001944461022503674
    2. ' arr' → logprob: -6.251944541931152
    3. '(arr' → logprob: -11.126944541931152
    4. '   ' → logprob: -14.501944541931152
    5. '	arr' → logprob: -14.501944541931152
    6. ' (' → logprob: -16.126943588256836
    7. '(' → logprob: -17.501943588256836
    8. ' ' → logprob: -17.501943588256836
    9. '[arr' → logprob: -17.501943588256836
    10. '$arr' → logprob: -18.001943588256836

Token 179: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. 'i' → logprob: -15.375
    3. '[' → logprob: -15.5
    4. '[j' → logprob: -17.0
    5. '```' → logprob: -17.25
    6. ' [' → logprob: -18.25
    7. '[
' → logprob: -18.375
    8. '{i' → logprob: -18.75
    9. '[I' → logprob: -19.75
    10. '\[' → logprob: -19.75

Token 180: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003647826088126749
    2. ']+' → logprob: -8.750365257263184
    3. ']' → logprob: -8.875365257263184
    4. ' +' → logprob: -10.000365257263184
    5. '[' → logprob: -11.500365257263184
    6. '+]' → logprob: -12.750365257263184
    7. '+i' → logprob: -13.125365257263184
    8. ']-' → logprob: -13.625365257263184
    9. '+
' → logprob: -13.625365257263184
    10. '1' → logprob: -13.750365257263184

Token 181: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3663626305060461e-05
    2. ']' → logprob: -12.00001335144043
    3. ' ' → logprob: -12.25001335144043
    4. ' -' → logprob: -14.25001335144043
    5. ']-' → logprob: -14.50001335144043
    6. '-' → logprob: -14.75001335144043
    7. '```' → logprob: -15.00001335144043
    8. '0' → logprob: -15.50001335144043
    9. '   ' → logprob: -15.62501335144043
    10. 'i' → logprob: -16.50001335144043

Token 182: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.31483402848243713
    2. ' -' → logprob: -1.3148339986801147
    3. ']' → logprob: -6.689834117889404
    4. ']-' → logprob: -8.439833641052246
    5. ')' → logprob: -10.064833641052246
    6. '-i' → logprob: -10.439833641052246
    7. ')-' → logprob: -11.689833641052246
    8. '-arr' → logprob: -11.939833641052246
    9. ' ' → logprob: -12.314833641052246
    10. ')-(' → logprob: -12.439833641052246

Token 183: 'arr' (ID: 1614)
  Prédit: 'arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.000156577822053805
    2. ' arr' → logprob: -9.50015640258789
    3. '1' → logprob: -9.87515640258789
    4. '(arr' → logprob: -10.50015640258789
    5. '	arr' → logprob: -13.25015640258789
    6. '(' → logprob: -14.87515640258789
    7. ' (' → logprob: -15.75015640258789
    8. '[arr' → logprob: -16.12515640258789
    9. '$arr' → logprob: -16.37515640258789
    10. '   ' → logprob: -16.50015640258789

Token 184: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0010842557530850172
    2. '[' → logprob: -6.876084327697754
    3. ']' → logprob: -10.376084327697754
    4. '```' → logprob: -12.251084327697754
    5. '][' → logprob: -12.751084327697754
    6. 's' → logprob: -12.751084327697754
    7. 'i' → logprob: -12.876084327697754
    8. ')' → logprob: -13.126084327697754
    9. ' ' → logprob: -14.251084327697754
    10. '   ' → logprob: -14.376084327697754

Token 185: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006075029727071524
    2. ' -' → logprob: -5.131074905395508
    3. '1' → logprob: -8.881074905395508
    4. ')' → logprob: -12.756074905395508
    5. ' ' → logprob: -13.131074905395508
    6. ')-' → logprob: -13.506074905395508
    7. '```' → logprob: -14.756074905395508
    8. '2' → logprob: -15.631074905395508
    9. '>' → logprob: -16.131074905395508
    10. ']-' → logprob: -16.506074905395508

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.41866585687967e-06
    2. ' ' → logprob: -11.750008583068848
    3. '<|end|>' → logprob: -14.750008583068848
    4. '```' → logprob: -17.75000762939453
    5. '
' → logprob: -18.25000762939453
    6. '-' → logprob: -18.62500762939453
    7. '   ' → logprob: -18.87500762939453
    8. '...' → logprob: -19.31250762939453
    9. '۱' → logprob: -19.43750762939453
    10. '2' → logprob: -19.56250762939453

Token 187: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 188: '       ' (ID: 309)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0021378993988037
    2. 'if' → logprob: -1.1271378993988037
    3. '   ' → logprob: -1.8771378993988037
    4. '+' → logprob: -2.6271378993988037
    5. '
' → logprob: -3.0021378993988037
    6. 'available' → logprob: -3.8771378993988037
    7. ' if' → logprob: -4.752138137817383
    8. ' +' → logprob: -6.877138137817383
    9. 'possible' → logprob: -7.002138137817383
    10. ' max' → logprob: -7.502138137817383

Token 189: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.19369998574256897
    2. 'max' → logprob: -2.068700075149536
    3. 'available' → logprob: -3.818700075149536
    4. 'use' → logprob: -4.318699836730957
    5. 'used' → logprob: -5.443699836730957
    6. 'remain' → logprob: -6.568699836730957
    7. 'avail' → logprob: -6.568699836730957
    8. 'add' → logprob: -6.943699836730957
    9. 'usable' → logprob: -7.443699836730957
    10. '   ' → logprob: -7.443699836730957

Token 190: ' gap' (ID: 19953)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gap' → logprob: -0.08988990634679794
    2. 'bl' → logprob: -2.7148900032043457
    3. ' gap' → logprob: -3.9648900032043457
    4. ' blanks' → logprob: -7.839890003204346
    5. 'blank' → logprob: -8.714889526367188
    6. ' bl' → logprob: -9.464889526367188
    7. 'g' → logprob: -9.839889526367188
    8. '
' → logprob: -10.902389526367188
    9. '   ' → logprob: -11.339889526367188
    10. 'b' → logprob: -12.152389526367188

Token 191: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.638545572757721
    2. ' <=' → logprob: -1.5135455131530762
    3. '>' → logprob: -2.263545513153076
    4. '>=' → logprob: -2.638545513153076
    5. ' >' → logprob: -3.388545513153076
    6. '+' → logprob: -3.888545513153076
    7. ' >=' → logprob: -4.263545513153076
    8. '==' → logprob: -6.013545513153076
    9. ' +' → logprob: -6.388545513153076
    10. '<|end|>' → logprob: -6.388545513153076

Token 192: ' blanks' (ID: 160898)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.055475663393735886
    2. ' blanks' → logprob: -2.9304757118225098
    3. 'blank' → logprob: -8.055475234985352
    4. '       ' → logprob: -9.680475234985352
    5. '   ' → logprob: -10.055475234985352
    6. ' bl' → logprob: -10.742975234985352
    7. 'br' → logprob: -10.742975234985352
    8. '0' → logprob: -10.742975234985352
    9. 'blocks' → logprob: -10.930475234985352
    10. '```' → logprob: -11.305475234985352

Token 193: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06789416074752808
    2. ':
' → logprob: -3.317894220352173
    3. ' and' → logprob: -3.942894220352173
    4. '+' → logprob: -5.692893981933594
    5. 'and' → logprob: -5.817893981933594
    6. '       ' → logprob: -6.067893981933594
    7. '<|end|>' → logprob: -7.567893981933594
    8. '           ' → logprob: -8.442893981933594
    9. ' +' → logprob: -8.567893981933594
    10. '<|end|>' → logprob: -8.817893981933594

Token 194: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1296323537826538
    2. '       ' → logprob: -2.8796324729919434
    3. 'max' → logprob: -3.1296324729919434
    4. 'length' → logprob: -4.879632472991943
    5. 'count' → logprob: -6.004632472991943
    6. 'temp' → logprob: -6.004632472991943
    7. 'len' → logprob: -6.004632472991943
    8. 'possible' → logprob: -6.629632472991943
    9. '
' → logprob: -6.754632472991943
    10. ' max' → logprob: -7.254632472991943

Token 195: ' length' (ID: 5517)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00777225149795413
    2. 'temp' → logprob: -6.007772445678711
    3. 'length' (adapté à ' length') → logprob: -6.132772445678711
    4. 'gap' → logprob: -7.257772445678711
    5. 'curr' → logprob: -8.007772445678711
    6. 'cur' → logprob: -8.132772445678711
    7. 'possible' → logprob: -8.382772445678711
    8. 'len' → logprob: -8.507772445678711
    9. '           ' → logprob: -8.507772445678711
    10. 'current' → logprob: -8.757772445678711

Token 196: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868902027606964
    2. '=' → logprob: -1.136890172958374
    3. '=max' → logprob: -11.261890411376953
    4. 's' → logprob: -13.261890411376953
    5. '=len' → logprob: -13.636890411376953
    6. ' +=' → logprob: -14.511890411376953
    7. '+=' → logprob: -14.636890411376953
    8. ' ' → logprob: -14.886890411376953
    9. '   ' → logprob: -15.511890411376953
    10. '           ' → logprob: -15.761890411376953

Token 197: ' arr' (ID: 1724)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gap' → logprob: -0.1816217601299286
    2. 'arr' → logprob: -1.806621789932251
    3. ' gap' → logprob: -6.806621551513672
    4. 'max' → logprob: -8.681621551513672
    5. '(arr' → logprob: -8.681621551513672
    6. ' arr' → logprob: -8.806621551513672
    7. 'i' → logprob: -9.431621551513672
    8. '(' → logprob: -9.681621551513672
    9. ' (' → logprob: -10.306621551513672
    10. '(i' → logprob: -10.806621551513672

Token 198: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.77627644513268e-06
    2. 'i' → logprob: -12.000008583068848
    3. '[' → logprob: -13.250008583068848
    4. '```' → logprob: -14.625008583068848
    5. '[
' → logprob: -17.375009536743164
    6. '   ' → logprob: -17.375009536743164
    7. '(i' → logprob: -17.750009536743164
    8. '{i' → logprob: -17.875009536743164
    9. '[user' → logprob: -18.250009536743164
    10. ',i' → logprob: -18.250009536743164

Token 199: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0012611870188266039
    2. ']+' → logprob: -7.376261234283447
    3. ']' → logprob: -8.501260757446289
    4. '+i' → logprob: -8.751260757446289
    5. '[i' → logprob: -9.001260757446289
    6. '[' → logprob: -9.751260757446289
    7. ' +' → logprob: -10.001260757446289
    8. '1' → logprob: -10.501260757446289
    9. 'i' → logprob: -12.376260757446289
    10. '```' → logprob: -13.001260757446289

Token 200: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00035143180866725743
    2. ' ' → logprob: -8.500351905822754
    3. '+' → logprob: -9.125351905822754
    4. '
' → logprob: -11.250351905822754
    5. '-' → logprob: -12.312851905822754
    6. '[' → logprob: -12.812851905822754
    7. '   ' → logprob: -13.062851905822754
    8. '```' → logprob: -13.125351905822754
    9. ']' → logprob: -13.437851905822754
    10. ']+' → logprob: -13.500351905822754

Token 201: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6354725360870361
    2. ' -' → logprob: -0.7604725360870361
    3. '-arr' → logprob: -6.510472297668457
    4. ']-' → logprob: -7.010472297668457
    5. ']' → logprob: -8.010472297668457
    6. '}-' → logprob: -10.010472297668457
    7. '[' → logprob: -10.760472297668457
    8. ')-' → logprob: -10.885472297668457
    9. ')' → logprob: -11.260472297668457
    10. ')-(' → logprob: -11.885472297668457

Token 202: 'arr' (ID: 1614)
  Prédit: 'arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0004237627435941249
    2. ' arr' → logprob: -8.625423431396484
    3. '	arr' → logprob: -8.875423431396484
    4. '1' → logprob: -10.250423431396484
    5. '(arr' → logprob: -10.375423431396484
    6. '<|end|>' → logprob: -11.250423431396484
    7. '[arr' → logprob: -11.750423431396484
    8. '$arr' → logprob: -11.875423431396484
    9. '<arr' → logprob: -13.000423431396484
    10. '   ' → logprob: -13.125423431396484

Token 203: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00024834630312398076
    2. 'i' → logprob: -8.375247955322266
    3. '[' → logprob: -11.000247955322266
    4. '(i' → logprob: -15.000247955322266
    5. '<|end|>' → logprob: -15.500247955322266
    6. ' i' → logprob: -15.875247955322266
    7. '{i' → logprob: -15.875247955322266
    8. '[
' → logprob: -17.125247955322266
    9. '_i' → logprob: -17.250247955322266
    10. '[-' → logprob: -17.625247955322266

Token 204: ']+' (ID: 15344)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12249118089675903
    2. '+' → logprob: -2.2474911212921143
    3. ' -' → logprob: -5.247491359710693
    4. ' +' → logprob: -5.997491359710693
    5. '<|end|>' → logprob: -6.622491359710693
    6. '1' → logprob: -8.497490882873535
    7. '<|end|>' → logprob: -9.497490882873535
    8. ')' → logprob: -9.997490882873535
    9. ' ' → logprob: -10.372490882873535
    10. ']+' → logprob: -10.747490882873535

Token 205: 'bl' (ID: 1751)
  Prédit: 'bl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.0015409269835799932
    2. ' blanks' → logprob: -6.6265411376953125
    3. 'blank' → logprob: -9.001541137695312
    4. '1' → logprob: -10.751541137695312
    5. 'b' → logprob: -11.251541137695312
    6. ' bl' → logprob: -11.376541137695312
    7. '
' → logprob: -11.626541137695312
    8. '0' → logprob: -11.751541137695312
    9. 'br' → logprob: -11.876541137695312
    10. '```' → logprob: -12.501541137695312

Token 206: 'anks' (ID: 4096)
  Prédit: 'anks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anks' → logprob: -0.002184284385293722
    2. '1' → logprob: -7.1271843910217285
    3. 'inks' → logprob: -8.50218391418457
    4. 'asks' → logprob: -8.87718391418457
    5. '
' → logprob: -9.00218391418457
    6. 'aks' → logprob: -9.25218391418457
    7. 'ank' → logprob: -9.25218391418457
    8. 's' → logprob: -9.50218391418457
    9. '```' → logprob: -9.50218391418457
    10. ' ' → logprob: -9.62718391418457

Token 207: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.17765147984027863
    2. '<|end|>' → logprob: -2.3026514053344727
    3. '+' → logprob: -3.3026514053344727
    4. ' -' → logprob: -4.302651405334473
    5. '
' → logprob: -4.927651405334473
    6. '<|end|>' → logprob: -6.177651405334473
    7. ' if' → logprob: -7.177651405334473
    8. ' ' → logprob: -7.427651405334473
    9. '       ' → logprob: -7.677651405334473
    10. '           ' → logprob: -8.427651405334473

Token 208: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 209: ' if' (ID: 538)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.19784516096115112
    2. 'if' (adapté à ' if') → logprob: -2.447845220565796
    3. ' if' → logprob: -2.572845220565796
    4. ' max' → logprob: -4.197844982147217
    5. '           ' → logprob: -6.947844982147217
    6. 'length' → logprob: -7.947844982147217
    7. '       ' → logprob: -8.697845458984375
    8. '   ' → logprob: -9.447845458984375
    9. ' length' → logprob: -9.822845458984375
    10. 'maxlength' → logprob: -10.572845458984375

Token 210: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.01815333589911461
    2. ' length' → logprob: -4.018153190612793
    3. 'max' → logprob: -13.893153190612793
    4. '(length' → logprob: -14.268153190612793
    5. '	length' → logprob: -14.518153190612793
    6. 'len' → logprob: -14.643153190612793
    7. 'maxlength' → logprob: -15.518153190612793
    8. ' ' → logprob: -16.01815414428711
    9. '   ' → logprob: -16.01815414428711
    10. 'leng' → logprob: -16.14315414428711

Token 211: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.04300444945693016
    2. ' >' → logprob: -3.1680045127868652
    3. '<|end|>' → logprob: -13.793004035949707
    4. ' ' → logprob: -13.918004035949707
    5. '[' → logprob: -14.418004035949707
    6. '-' → logprob: -14.418004035949707
    7. '>end' → logprob: -14.793004035949707
    8. ')' → logprob: -15.543004035949707
    9. '>

' → logprob: -15.668004035949707
    10. '">' → logprob: -15.668004035949707

Token 212: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0001234428636962548
    2. ' max' → logprob: -9.000123023986816
    3. '
' → logprob: -17.250123977661133
    4. '	max' → logprob: -18.875123977661133
    5. '           ' → logprob: -19.625123977661133
    6. 'maxlength' → logprob: -19.625123977661133
    7. '```' → logprob: -20.875123977661133
    8. '_max' → logprob: -20.875123977661133
    9. '(max' → logprob: -21.000123977661133
    10. '=max' → logprob: -21.375123977661133

Token 213: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -3.292907877039397e-06
    2. 'length' → logprob: -13.25000286102295
    3. 'max' → logprob: -13.50000286102295
    4. ' len' → logprob: -17.875003814697266
    5. '_len' → logprob: -18.875003814697266
    6. 'Len' → logprob: -19.750003814697266
    7. 'leng' → logprob: -20.500003814697266
    8. '	len' → logprob: -21.125003814697266
    9. 'leni' → logprob: -21.250003814697266
    10. '[len' → logprob: -21.250003814697266

Token 214: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3176821172237396
    2. ':
' → logprob: -1.442682147026062
    3. '               ' → logprob: -3.8176820278167725
    4. '       ' → logprob: -4.567682266235352
    5. '           ' → logprob: -6.317682266235352
    6. '<|end|>' → logprob: -7.317682266235352
    7. '):
' → logprob: -7.692682266235352
    8. ':max' → logprob: -9.192682266235352
    9. 'max' → logprob: -9.317682266235352
    10. '<|end|>' → logprob: -9.442682266235352

Token 215: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.039870478212833405
    2. '           ' → logprob: -3.414870500564575
    3. '       ' → logprob: -5.539870262145996
    4. 'max' → logprob: -6.664870262145996
    5. ' max' → logprob: -7.289870262145996
    6. '
' → logprob: -8.914870262145996
    7. '```' → logprob: -9.664870262145996
    8. '                   ' → logprob: -9.914870262145996
    9. '                       ' → logprob: -10.289870262145996
    10. '   ' → logprob: -11.164870262145996

Token 216: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.0009228924172930419
    2. ' max' → logprob: -7.000922679901123
    3. '               ' → logprob: -12.250923156738281
    4. '           ' → logprob: -12.875923156738281
    5. '
' → logprob: -13.000923156738281
    6. '                   ' → logprob: -14.125923156738281
    7. '```' → logprob: -15.000923156738281
    8. '       ' → logprob: -15.125923156738281
    9. '   ' → logprob: -15.375923156738281
    10. '	max' → logprob: -15.750923156738281

Token 217: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -4.961759259458631e-06
    2. 'max' → logprob: -12.500004768371582
    3. 'length' → logprob: -13.750004768371582
    4. '_len' → logprob: -16.6250057220459
    5. '=len' → logprob: -17.8750057220459
    6. ' len' → logprob: -18.0000057220459
    7. '[len' → logprob: -18.2500057220459
    8. 'leng' → logprob: -18.2500057220459
    9. '=' → logprob: -18.2500057220459
    10. '<len' → logprob: -18.3750057220459

Token 218: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931538581848145
    2. ' =' → logprob: -0.6931538581848145
    3. '=max' → logprob: -12.818153381347656
    4. '<|end|>' → logprob: -13.068153381347656
    5. ' ' → logprob: -14.818153381347656
    6. '+=' → logprob: -15.193153381347656
    7. '=len' → logprob: -15.443153381347656
    8. ',' → logprob: -15.568153381347656
    9. '=int' → logprob: -15.943153381347656
    10. '=

' → logprob: -16.193153381347656

Token 219: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0005530327325686812
    2. ' length' → logprob: -7.500553131103516
    3. 'ength' → logprob: -18.500553131103516
    4. '(length' → logprob: -18.500553131103516
    5. 'leng' → logprob: -19.375553131103516
    6. '[length' → logprob: -19.500553131103516
    7. 'max' → logprob: -19.750553131103516
    8. 'len' → logprob: -19.875553131103516
    9. '_length' → logprob: -20.375553131103516
    10. 'Length' → logprob: -20.500553131103516

Token 220: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30774590373039246
    2. '   ' → logprob: -2.432745933532715
    3. ' else' → logprob: -2.557745933532715
    4. 'else' → logprob: -3.057745933532715
    5. '<|end|>' → logprob: -3.682745933532715
    6. '    ' → logprob: -4.682745933532715
    7. '           ' → logprob: -5.807745933532715
    8. ')' → logprob: -6.057745933532715
    9. '<|end|>' → logprob: -6.057745933532715
    10. '        ' → logprob: -6.182745933532715

Token 221: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45264172554016113
    2. ' else' → logprob: -1.9526417255401611
    3. '       ' → logprob: -2.577641725540161
    4. 'else' → logprob: -2.827641725540161
    5. '```' → logprob: -3.952641725540161
    6. '    ' → logprob: -4.202641487121582
    7. '<|end|>' → logprob: -4.327641487121582
    8. ' ' → logprob: -4.327641487121582
    9. ' 
' → logprob: -4.702641487121582
    10. ')' → logprob: -5.327641487121582

Token 222: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.039662085473537445
    2. ' else' → logprob: -3.4146621227264404
    3. '   ' → logprob: -5.539661884307861
    4. 'elif' → logprob: -6.539661884307861
    5. '       ' → logprob: -7.539661884307861
    6. '```' → logprob: -9.78966236114502
    7. ' elif' → logprob: -10.66466236114502
    8. '	else' → logprob: -12.03966236114502
    9. '           ' → logprob: -13.53966236114502
    10. 'continue' → logprob: -13.78966236114502

Token 223: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5854909420013428
    2. ':' → logprob: -1.7104909420013428
    3. ':
' → logprob: -1.8354909420013428
    4. '           ' → logprob: -2.3354909420013428
    5. '{' → logprob: -5.835491180419922
    6. '{
' → logprob: -6.710491180419922
    7. '```' → logprob: -6.960491180419922
    8. '   ' → logprob: -8.460491180419922
    9. ' if' → logprob: -9.335491180419922
    10. '
' → logprob: -9.585491180419922

Token 224: '           ' (ID: 352)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4995604157447815
    2. '           ' → logprob: -1.4995603561401367
    3. 'length' → logprob: -2.4995603561401367
    4. '       ' → logprob: -2.9995603561401367
    5. ' max' → logprob: -3.6245603561401367
    6. ' length' → logprob: -4.749560356140137
    7. 'if' → logprob: -7.374560356140137
    8. 'maxlength' → logprob: -7.874560356140137
    9. '```' → logprob: -8.124560356140137
    10. '   ' → logprob: -8.124560356140137

Token 225: ' length' (ID: 5517)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6106364130973816
    2. 'length' (adapté à ' length') → logprob: -0.8606364130973816
    3. 'left' → logprob: -4.485636234283447
    4. '           ' → logprob: -4.610636234283447
    5. 'if' → logprob: -5.110636234283447
    6. ' max' → logprob: -6.235636234283447
    7. ' length' → logprob: -6.735636234283447
    8. 'temp' → logprob: -7.110636234283447
    9. 'mid' → logprob: -7.860636234283447
    10. 'maxlength' → logprob: -8.485636711120605

Token 226: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868919014930725
    2. '=' → logprob: -1.1368918418884277
    3. '=max' → logprob: -10.886892318725586
    4. ' ' → logprob: -14.261892318725586
    5. '=int' → logprob: -14.761892318725586
    6. '=len' → logprob: -15.261892318725586
    7. 'max' → logprob: -15.511892318725586
    8. 's' → logprob: -15.761892318725586
    9. 'arr' → logprob: -16.261892318725586
    10. '1' → logprob: -16.511892318725586

Token 227: ' blanks' (ID: 160898)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gap' → logprob: -0.13468076288700104
    2. 'arr' → logprob: -2.13468074798584
    3. 'bl' → logprob: -5.50968074798584
    4. ' gap' → logprob: -5.88468074798584
    5. 'blank' → logprob: -7.88468074798584
    6. ' arr' → logprob: -8.50968074798584
    7. ' blanks' → logprob: -9.13468074798584
    8. 'max' → logprob: -9.13468074798584
    9. 'g' → logprob: -10.88468074798584
    10. '   ' → logprob: -11.50968074798584

Token 228: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012687401846051216
    2. ' +' → logprob: -4.3876872062683105
    3. '<|end|>' → logprob: -8.887687683105469
    4. '
' → logprob: -11.387687683105469
    5. '<|end|>' → logprob: -11.637687683105469
    6. '           ' → logprob: -12.012687683105469
    7. '+k' → logprob: -12.637687683105469
    8. '       ' → logprob: -13.762687683105469
    9. '          ' → logprob: -13.887687683105469
    10. '```' → logprob: -13.887687683105469

Token 229: '1' (ID: 16)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gap' → logprob: -0.4209502637386322
    2. 'arr' → logprob: -1.5459502935409546
    3. '1' → logprob: -2.045950174331665
    4. ' gap' → logprob: -8.295949935913086
    5. 'max' → logprob: -8.545949935913086
    6. '(arr' → logprob: -8.670949935913086
    7. '0' → logprob: -8.920949935913086
    8. '(' → logprob: -9.545949935913086
    9. ' ' → logprob: -9.545949935913086
    10. '2' → logprob: -9.795949935913086

Token 230: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 231: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 232: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0050451867282390594
    2. 'max' → logprob: -5.755045413970947
    3. ' if' → logprob: -6.380045413970947
    4. '           ' → logprob: -8.880044937133789
    5. '               ' → logprob: -11.630044937133789
    6. '
' → logprob: -12.380044937133789
    7. 'break' → logprob: -12.380044937133789
    8. 'for' → logprob: -12.755044937133789
    9. ' max' → logprob: -12.755044937133789
    10. '       ' → logprob: -12.880044937133789

Token 233: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.03804860636591911
    2. ' length' → logprob: -3.288048505783081
    3. '(length' → logprob: -12.53804874420166
    4. 'max' → logprob: -13.03804874420166
    5. '	length' → logprob: -15.28804874420166
    6. ' max' → logprob: -15.41304874420166
    7. 'len' → logprob: -15.66304874420166
    8. '```' → logprob: -15.78804874420166
    9. ' ' → logprob: -15.91304874420166
    10. '   ' → logprob: -16.038047790527344

Token 234: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.38688236474990845
    2. ' >' → logprob: -1.1368823051452637
    3. '<' → logprob: -12.136882781982422
    4. ' <' → logprob: -13.136882781982422
    5. '           ' → logprob: -13.261882781982422
    6. ' ' → logprob: -14.761882781982422
    7. '=' → logprob: -15.136882781982422
    8. '[' → logprob: -15.261882781982422
    9. ')' → logprob: -15.386882781982422
    10. 'if' → logprob: -15.636882781982422

Token 235: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -5.836499985889532e-05
    2. ' max' → logprob: -9.7500581741333
    3. 'maxlength' → logprob: -19.250059127807617
    4. '	max' → logprob: -20.000059127807617
    5. 'length' → logprob: -20.250059127807617
    6. '(max' → logprob: -20.375059127807617
    7. '_max' → logprob: -21.750059127807617
    8. '[max' → logprob: -21.875059127807617
    9. '           ' → logprob: -21.875059127807617
    10. '=max' → logprob: -22.125059127807617

Token 236: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0015105740167200565
    2. 'max' → logprob: -6.5015106201171875
    3. 'length' → logprob: -12.501510620117188
    4. ' max' → logprob: -13.251510620117188
    5. ' len' → logprob: -13.376510620117188
    6. '```' → logprob: -14.751510620117188
    7. 'en' → logprob: -15.751510620117188
    8. 'leng' → logprob: -16.251510620117188
    9. '_len' → logprob: -16.751510620117188
    10. '=max' → logprob: -16.751510620117188

Token 237: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.36056089401245117
    2. '               ' → logprob: -1.3605608940124512
    3. ':
' → logprob: -3.110560894012451
    4. '           ' → logprob: -6.610560894012451
    5. '=' → logprob: -9.23556137084961
    6. '              ' → logprob: -10.36056137084961
    7. ':

' → logprob: -10.73556137084961
    8. '       ' → logprob: -10.86056137084961
    9. '):
' → logprob: -10.98556137084961
    10. '):' → logprob: -10.98556137084961

Token 238: '               ' (ID: 506)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3471783697605133
    2. ' max' → logprob: -1.847178339958191
    3. '               ' → logprob: -2.3471784591674805
    4. '           ' → logprob: -3.2221784591674805
    5. '```' → logprob: -9.34717845916748
    6. '                   ' → logprob: -11.97217845916748
    7. '
' → logprob: -11.97217845916748
    8. '	max' → logprob: -12.09717845916748
    9. ',max' → logprob: -12.34717845916748
    10. '       ' → logprob: -12.59717845916748

Token 239: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.0002613358374219388
    2. ' max' → logprob: -8.250261306762695
    3. '               ' → logprob: -16.750261306762695
    4. '
' → logprob: -17.500261306762695
    5. '           ' → logprob: -18.375261306762695
    6. '                   ' → logprob: -19.000261306762695
    7. '```' → logprob: -19.125261306762695
    8. 'maxlength' → logprob: -19.500261306762695
    9. '	max' → logprob: -19.625261306762695
    10. 'break' → logprob: -20.000261306762695

Token 240: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.8074162653647363e-05
    2. 'max' → logprob: -11.250018119812012
    3. '=' → logprob: -12.750018119812012
    4. 'length' → logprob: -13.750018119812012
    5. '=len' → logprob: -15.000018119812012
    6. ' len' → logprob: -15.625018119812012
    7. ' =' → logprob: -16.125017166137695
    8. '_len' → logprob: -16.375017166137695
    9. 'le' → logprob: -16.625017166137695
    10. '=max' → logprob: -16.750017166137695

Token 241: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804252669215202
    2. ' =' → logprob: -3.2880425453186035
    3. '=max' → logprob: -13.788042068481445
    4. '=

' → logprob: -17.788042068481445
    5. 'max' → logprob: -17.913042068481445
    6. '=
' → logprob: -18.163042068481445
    7. '＝' → logprob: -18.413042068481445
    8. '+=' → logprob: -19.413042068481445
    9. '=len' → logprob: -19.538042068481445
    10. '.=' → logprob: -19.788042068481445

Token 242: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0015023599844425917
    2. ' length' → logprob: -6.501502513885498
    3. 'leng' → logprob: -17.626502990722656
    4. 'len' → logprob: -19.501502990722656
    5. 'ength' → logprob: -20.001502990722656
    6. 'l' → logprob: -20.501502990722656
    7. '(length' → logprob: -20.501502990722656
    8. '	length' → logprob: -20.626502990722656
    9. '[length' → logprob: -21.001502990722656
    10. ' ' → logprob: -21.501502990722656

Token 243: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014812415465712547
    2. 'print' → logprob: -4.639812469482422
    3. '```' → logprob: -6.764812469482422
    4. 'max' → logprob: -7.014812469482422
    5. '    
' → logprob: -7.014812469482422
    6. '
' → logprob: -7.264812469482422
    7. '<|end|>' → logprob: -7.889812469482422
    8. '       ' → logprob: -7.889812469482422
    9. '        
' → logprob: -9.014812469482422
    10. ' print' → logprob: -9.389812469482422

Token 244: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2565861642360687
    2. '
' → logprob: -2.6315860748291016
    3. '<|end|>' → logprob: -2.6315860748291016
    4. '```' → logprob: -3.7565860748291016
    5. '    
' → logprob: -3.8815860748291016
    6. ' 
' → logprob: -4.381586074829102
    7. ')' → logprob: -4.631586074829102
    8. '\n' → logprob: -5.756586074829102
    9. '       ' → logprob: -6.006586074829102
    10. 'max' → logprob: -6.506586074829102

Token 245: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.10407209396362305
    2. 'print' → logprob: -2.604072093963623
    3. '   ' → logprob: -3.854072093963623
    4. 'max' → logprob: -6.229072093963623
    5. '```' → logprob: -6.479072093963623
    6. 'if' → logprob: -9.229072570800781
    7. 'else' → logprob: -10.479072570800781
    8. ' #' → logprob: -11.354072570800781
    9. '
' → logprob: -11.729072570800781
    10. '#print' → logprob: -12.104072570800781

Token 246: ' Check' (ID: 6208)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.00887986458837986
    2. 'max' → logprob: -5.383879661560059
    3. 'print' → logprob: -6.008879661560059
    4. 'Check' → logprob: -7.008879661560059
    5. 'right' → logprob: -7.508879661560059
    6. 'if' → logprob: -8.258879661560059
    7. ' #' → logprob: -10.508879661560059
    8. '   ' → logprob: -11.383879661560059
    9. '
' → logprob: -11.758879661560059
    10. ' Check' → logprob: -12.258879661560059

Token 247: ' after' (ID: 1934)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5541858077049255
    2. 'from' → logprob: -1.4291858673095703
    3. 'after' → logprob: -1.9291858673095703
    4. ' after' → logprob: -3.6791858673095703
    5. ' right' → logprob: -4.67918586730957
    6. 'the' → logprob: -6.30418586730957
    7. ' from' → logprob: -6.55418586730957
    8. '#' → logprob: -6.80418586730957
    9. ' the' → logprob: -7.67918586730957
    10. 'arr' → logprob: -7.67918586730957

Token 248: ' last' (ID: 2174)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.04858884960412979
    2. ' arr' → logprob: -3.048588752746582
    3. ' last' → logprob: -14.798588752746582
    4. 'last' → logprob: -14.923588752746582
    5. '	arr' → logprob: -15.048588752746582
    6. ' the' → logprob: -15.048588752746582
    7. 'the' → logprob: -17.2985897064209
    8. '```' → logprob: -17.4235897064209
    9. 'max' → logprob: -17.6735897064209
    10. '_arr' → logprob: -17.7985897064209

Token 249: ' known' (ID: 5542)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.42984724044799805
    2. ' arr' → logprob: -1.054847240447998
    3. 'card' → logprob: -7.179847240447998
    4. ' card' → logprob: -8.929847717285156
    5. ' known' → logprob: -9.179847717285156
    6. 'known' → logprob: -9.679847717285156
    7. 'max' → logprob: -9.929847717285156
    8. '(arr' → logprob: -11.679847717285156
    9. '_arr' → logprob: -11.804847717285156
    10. ' max' → logprob: -12.304847717285156

Token 250: ' card' (ID: 4766)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.0841723158955574
    2. ' card' → logprob: -2.834172248840332
    3. 'arr' → logprob: -3.834172248840332
    4. ' arr' → logprob: -8.084172248840332
    5. '_card' → logprob: -10.459172248840332
    6. 'max' → logprob: -14.084172248840332
    7. ' ' → logprob: -14.209172248840332
    8. '	card' → logprob: -14.334172248840332
    9. 'Card' → logprob: -14.959172248840332
    10. 'cards' → logprob: -15.084172248840332

Token 251: '
' (ID: 198)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0009993441635742784
    2. ' max' → logprob: -7.000999450683594
    3. 'length' → logprob: -10.125999450683594
    4. '   ' → logprob: -10.375999450683594
    5. 'if' → logprob: -12.500999450683594
    6. '
' → logprob: -12.500999450683594
    7. '+' → logprob: -13.250999450683594
    8. 'last' → logprob: -13.625999450683594
    9. 'maxlength' → logprob: -13.750999450683594
    10. '(max' → logprob: -14.250999450683594

Token 252: '   ' (ID: 271)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.005548439454287291
    2. ' max' → logprob: -5.505548477172852
    3. '   ' → logprob: -7.505548477172852
    4. 'length' → logprob: -8.130548477172852
    5. '
' → logprob: -8.255548477172852
    6. 'last' → logprob: -9.130548477172852
    7. 'if' → logprob: -9.255548477172852
    8. '+' → logprob: -9.380548477172852
    9. 'n' → logprob: -11.505548477172852
    10. '```' → logprob: -11.630548477172852

Token 253: ' tail' (ID: 12742)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0034928040113300085
    2. ' max' → logprob: -6.628492832183838
    3. 'if' → logprob: -6.878492832183838
    4. 'length' → logprob: -7.253492832183838
    5. 'last' → logprob: -8.75349235534668
    6. 'end' → logprob: -8.87849235534668
    7. 'tail' (adapté à ' tail') → logprob: -9.62849235534668
    8. '   ' → logprob: -11.12849235534668
    9. 'post' → logprob: -11.25349235534668
    10. 'right' → logprob: -12.37849235534668

Token 254: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5885341763496399
    2. ' =' → logprob: -0.8385341763496399
    3. '_length' → logprob: -4.588534355163574
    4. '_len' → logprob: -6.338534355163574
    5. '_' → logprob: -8.213534355163574
    6. '=max' → logprob: -9.088534355163574
    7. '=len' → logprob: -9.838534355163574
    8. '_space' → logprob: -9.838534355163574
    9. '_max' → logprob: -10.213534355163574
    10. '_gap' → logprob: -11.588534355163574

Token 255: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.010299584828317165
    2. ' n' → logprob: -5.1352996826171875
    3. ' blanks' → logprob: -6.2602996826171875
    4. 'bl' → logprob: -6.7602996826171875
    5. '(n' → logprob: -6.8852996826171875
    6. ' (' → logprob: -9.010299682617188
    7. 'max' → logprob: -10.385299682617188
    8. 'blank' → logprob: -10.635299682617188
    9. '   ' → logprob: -11.010299682617188
    10. '(blank' → logprob: -11.010299682617188

Token 256: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7318445444107056
    2. '-' → logprob: -1.2318445444107056
    3. '-arr' → logprob: -1.4818445444107056
    4. '-max' → logprob: -12.231844902038574
    5. '-array' → logprob: -15.106844902038574
    6. '-ar' → logprob: -15.606844902038574
    7. ' ' → logprob: -15.731844902038574
    8. '-int' → logprob: -15.981844902038574
    9. '-cur' → logprob: -16.231843948364258
    10. '-t' → logprob: -16.356843948364258

Token 257: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0002614550176076591
    2. ' arr' → logprob: -8.250261306762695
    3. '(arr' → logprob: -15.875261306762695
    4. '	arr' → logprob: -17.125261306762695
    5. ' ' → logprob: -19.500261306762695
    6. '   ' → logprob: -19.625261306762695
    7. '[arr' → logprob: -19.625261306762695
    8. 'max' → logprob: -20.375261306762695
    9. '$arr' → logprob: -20.375261306762695
    10. '_arr' → logprob: -20.625261306762695

Token 258: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.7432603272027336e-06
    2. '[len' → logprob: -13.500001907348633
    3. '[' → logprob: -15.125001907348633
    4. '[
' → logprob: -18.375001907348633
    5. ' [-' → logprob: -18.750001907348633
    6. '   ' → logprob: -20.125001907348633
    7. '][-' → logprob: -20.375001907348633
    8. '[:-' → logprob: -21.000001907348633
    9. '[::-' → logprob: -21.250001907348633
    10. 'len' → logprob: -21.375001907348633

Token 259: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1875571544806007e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -15.625011444091797
    4. '```' → logprob: -16.812511444091797
    5. '  ' → logprob: -17.187511444091797
    6. '
' → logprob: -17.187511444091797
    7. '[' → logprob: -17.312511444091797
    8. '۱' → logprob: -18.000011444091797
    9. '...' → logprob: -18.437511444091797
    10. ']' → logprob: -18.562511444091797

Token 260: ']
' (ID: 1592)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4185349643230438
    2. '
' → logprob: -1.4185349941253662
    3. ' +' → logprob: -2.418534994125366
    4. '-' → logprob: -5.293534755706787
    5. ')' → logprob: -6.293534755706787
    6. '<|end|>' → logprob: -6.668534755706787
    7. ' -' → logprob: -7.668534755706787
    8. 'if' → logprob: -7.793534755706787
    9. ')+' → logprob: -8.168535232543945
    10. ' ' → logprob: -8.418535232543945

Token 261: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.24758556485176086
    2. '
' → logprob: -1.8725855350494385
    3. 'if' → logprob: -2.9975855350494385
    4. ' +' → logprob: -4.997585773468018
    5. '   ' → logprob: -5.747585773468018
    6. ' if' → logprob: -6.247585773468018
    7. '+
' → logprob: -6.247585773468018
    8. 'max' → logprob: -6.372585773468018
    9. '    
' → logprob: -10.37258529663086
    10. ' 
' → logprob: -10.74758529663086

Token 262: ' tail' (ID: 12742)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.021759703755378723
    2. 'if' → logprob: -3.8967597484588623
    3. 'tail' (adapté à ' tail') → logprob: -6.771759510040283
    4. ' max' → logprob: -9.896759986877441
    5. 'length' → logprob: -12.771759986877441
    6. '```' → logprob: -12.896759986877441
    7. ' if' → logprob: -13.146759986877441
    8. '   ' → logprob: -13.146759986877441
    9. 'maxlength' → logprob: -13.146759986877441
    10. '
' → logprob: -13.271759986877441

Token 263: '_len' (ID: 13683)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10904300957918167
    2. '=' → logprob: -2.8590431213378906
    3. '+=' → logprob: -3.3590431213378906
    4. ' +' → logprob: -5.234043121337891
    5. ' +=' → logprob: -6.609043121337891
    6. 'if' → logprob: -6.609043121337891
    7. 'max' → logprob: -6.859043121337891
    8. ' =' → logprob: -7.234043121337891
    9. '=max' → logprob: -7.359043121337891
    10. ' if' → logprob: -8.35904312133789

Token 264: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142805576324463
    2. ' =' → logprob: -1.7014280557632446
    3. '+=' → logprob: -12.201428413391113
    4. '+' → logprob: -12.201428413391113
    5. ' +=' → logprob: -12.576428413391113
    6. ' +' → logprob: -14.826428413391113
    7. '   ' → logprob: -15.076428413391113
    8. '=max' → logprob: -15.326428413391113
    9. ' ' → logprob: -15.826428413391113
    10. '=len' → logprob: -16.076427459716797

Token 265: ' tail' (ID: 12742)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.08224579691886902
    2. ' tail' → logprob: -3.2072458267211914
    3. 'bl' → logprob: -3.4572458267211914
    4. ' blanks' → logprob: -5.332245826721191
    5. 'tails' → logprob: -7.207245826721191
    6. 'blank' → logprob: -7.582245826721191
    7. 'min' → logprob: -7.707245826721191
    8. ' min' → logprob: -8.457245826721191
    9. ' blank' → logprob: -9.832245826721191
    10. ' bl' → logprob: -10.082245826721191

Token 266: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01815614476799965
    2. ' +' → logprob: -4.018156051635742
    3. ' if' → logprob: -12.143156051635742
    4. 'if' → logprob: -15.018156051635742
    5. '   ' → logprob: -15.268156051635742
    6. '+
' → logprob: -16.393156051635742
    7. '+b' → logprob: -17.143156051635742
    8. '<' → logprob: -17.143156051635742
    9. '>' → logprob: -17.268156051635742
    10. '
' → logprob: -17.268156051635742

Token 267: ' blanks' (ID: 160898)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.0033134082332253456
    2. ' blanks' → logprob: -5.8783135414123535
    3. 'min' → logprob: -7.7533135414123535
    4. 'blank' → logprob: -9.628313064575195
    5. ' min' → logprob: -12.753313064575195
    6. 'max' → logprob: -13.003313064575195
    7. ' bl' → logprob: -13.503313064575195
    8. '   ' → logprob: -13.628313064575195
    9. 'br' → logprob: -13.878313064575195
    10. '(bl' → logprob: -14.253313064575195

Token 268: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07995134592056274
    2. ' if' → logprob: -2.579951286315918
    3. '
' → logprob: -7.079951286315918
    4. 'max' → logprob: -8.704951286315918
    5. '   ' → logprob: -10.079951286315918
    6. '>' → logprob: -11.704951286315918
    7. '	if' → logprob: -13.829951286315918
    8. '```' → logprob: -15.204951286315918
    9. '    
' → logprob: -15.454951286315918
    10. ';' → logprob: -15.454951286315918

Token 269: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3872261047363281
    2. ' if' → logprob: -1.1372261047363281
    3. '
' → logprob: -8.262226104736328
    4. 'max' → logprob: -9.887226104736328
    5. '   ' → logprob: -10.137226104736328
    6. '>' → logprob: -12.637226104736328
    7. '	if' → logprob: -14.012226104736328
    8. ' max' → logprob: -14.262226104736328
    9. '
' → logprob: -15.012226104736328
    10. '```' → logprob: -15.137226104736328

Token 270: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2523048520088196
    2. 'max' → logprob: -1.5023047924041748
    3. ' if' → logprob: -8.002305030822754
    4. 'print' → logprob: -11.002305030822754
    5. ' max' → logprob: -11.252305030822754
    6. '
' → logprob: -12.377305030822754
    7. 'maxlength' → logprob: -13.127305030822754
    8. '[max' → logprob: -13.752305030822754
    9. '(max' → logprob: -13.877305030822754
    10. '   ' → logprob: -14.002305030822754

Token 271: ' tail' (ID: 12742)
  Prédit: ' tail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tail' → logprob: -0.3484484553337097
    2. 'tail' → logprob: -1.2234485149383545
    3. '_tail' → logprob: -13.848448753356934
    4. 't' → logprob: -14.473448753356934
    5. '   ' → logprob: -14.723448753356934
    6. '.tail' → logprob: -14.973448753356934
    7. ' ' → logprob: -15.098448753356934
    8. 'tails' → logprob: -15.098448753356934
    9. 'Tail' → logprob: -15.348448753356934
    10. 'ta' → logprob: -15.973448753356934

Token 272: '_len' (ID: 13683)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.07175163924694061
    2. ' >' → logprob: -3.071751594543457
    3. '_len' → logprob: -3.821751594543457
    4. '+' → logprob: -7.446751594543457
    5. '<len' → logprob: -8.696751594543457
    6. '[-' → logprob: -9.321751594543457
    7. '>=' → logprob: -9.446751594543457
    8. '[len' → logprob: -11.196751594543457
    9. ' >=' → logprob: -11.571751594543457
    10. '>-' → logprob: -11.696751594543457

Token 273: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.47408953309059143
    2. ' >' → logprob: -0.974089503288269
    3. ' <=' → logprob: -12.099089622497559
    4. '<=' → logprob: -13.599089622497559
    5. '>N' → logprob: -13.974089622497559
    6. '<n' → logprob: -14.349089622497559
    7. '>end' → logprob: -14.724089622497559
    8. '>b' → logprob: -14.974089622497559
    9. '<|end|>' → logprob: -14.974089622497559
    10. '>=' → logprob: -15.099089622497559

Token 274: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0067156096920371056
    2. ' max' → logprob: -5.006715774536133
    3. 'n' → logprob: -15.381715774536133
    4. '	max' → logprob: -16.506715774536133
    5. 'maxlength' → logprob: -17.131715774536133
    6. '(max' → logprob: -17.256715774536133
    7. '[max' → logprob: -17.506715774536133
    8. '=max' → logprob: -17.756715774536133
    9. ' n' → logprob: -18.631715774536133
    10. '_max' → logprob: -19.256715774536133

Token 275: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.696889623621246e-06
    2. 'max' → logprob: -13.50000286102295
    3. '_len' → logprob: -14.37500286102295
    4. 'en' → logprob: -14.62500286102295
    5. ' len' → logprob: -15.87500286102295
    6. 'Len' → logprob: -16.750001907348633
    7. 'length' → logprob: -17.250001907348633
    8. 'ax' → logprob: -17.250001907348633
    9. 'l' → logprob: -18.375001907348633
    10. '[len' → logprob: -18.750001907348633

Token 276: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6993873119354248
    2. ':
' → logprob: -0.6993873119354248
    3. '       ' → logprob: -5.199387550354004
    4. '   ' → logprob: -7.824387550354004
    5. ':max' → logprob: -8.449387550354004
    6. '):
' → logprob: -10.324387550354004
    7. 'max' → logprob: -10.824387550354004
    8. ':
' → logprob: -12.074387550354004
    9. ' :
' → logprob: -12.449387550354004
    10. '=max' → logprob: -12.574387550354004

Token 277: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2819406986236572
    2. 'max' → logprob: -1.5319406986236572
    3. '   ' → logprob: -4.156940460205078
    4. ' max' → logprob: -4.281940460205078
    5. '	max' → logprob: -10.656940460205078
    6. '_max' → logprob: -11.406940460205078
    7. 'maxlength' → logprob: -11.406940460205078
    8. '[max' → logprob: -11.656940460205078
    9. '(max' → logprob: -11.656940460205078
    10. '           ' → logprob: -11.781940460205078

Token 278: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -2.339278580620885e-06
    2. ' max' → logprob: -13.000001907348633
    3. '   ' → logprob: -18.500001907348633
    4. '
' → logprob: -20.000001907348633
    5. 'print' → logprob: -20.000001907348633
    6. '	max' → logprob: -20.375001907348633
    7. 'maxlength' → logprob: -22.000001907348633
    8. '[max' → logprob: -22.625001907348633
    9. '_max' → logprob: -22.875001907348633
    10. '```' → logprob: -23.000001907348633

Token 279: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -9.088346359931165e-07
    2. 'max' → logprob: -14.625000953674316
    3. 'en' → logprob: -15.000000953674316
    4. ' len' → logprob: -17.75
    5. '_len' → logprob: -19.0
    6. 'l' → logprob: -19.625
    7. 'length' → logprob: -19.875
    8. '   ' → logprob: -20.375
    9. '[len' → logprob: -20.875
    10. 'Len' → logprob: -20.875

Token 280: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868752717971802
    2. ' =' → logprob: -1.1368752717971802
    3. '=max' → logprob: -12.38687515258789
    4. '=len' → logprob: -18.63687515258789
    5. ' ' → logprob: -19.51187515258789
    6. 'max' → logprob: -20.13687515258789
    7. '=

' → logprob: -20.13687515258789
    8. '=cut' → logprob: -20.38687515258789
    9. '＝' → logprob: -20.76187515258789
    10. '   ' → logprob: -20.76187515258789

Token 281: ' tail' (ID: 12742)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.03804183006286621
    2. ' tail' → logprob: -3.288041830062866
    3. 'tails' → logprob: -16.288042068481445
    4. 'max' → logprob: -16.538042068481445
    5. 't' → logprob: -16.663042068481445
    6. 'head' → logprob: -17.038042068481445
    7. '_tail' → logprob: -17.788042068481445
    8. 'ta' → logprob: -18.038042068481445
    9. '   ' → logprob: -18.163042068481445
    10. '.tail' → logprob: -18.288042068481445

Token 282: '_len' (ID: 13683)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8860020637512207
    2. '
' → logprob: -1.3860020637512207
    3. '   ' → logprob: -1.3860020637512207
    4. '<|end|>' → logprob: -2.7610020637512207
    5. ' +' → logprob: -4.636002063751221
    6. '_len' → logprob: -5.511002063751221
    7. '    
' → logprob: -5.886002063751221
    8. 'len' → logprob: -6.136002063751221
    9. '+
' → logprob: -6.886002063751221
    10. 'max' → logprob: -7.136002063751221

Token 283: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026789259165525436
    2. 'print' → logprob: -3.6517891883850098
    3. ' print' → logprob: -8.401789665222168
    4. ' if' → logprob: -9.276789665222168
    5. 'if' → logprob: -9.401789665222168
    6. 'max' → logprob: -9.651789665222168
    7. '
' → logprob: -11.776789665222168
    8. '    
' → logprob: -11.776789665222168
    9. '```' → logprob: -13.151789665222168
    10. ' max' → logprob: -13.401789665222168

Token 284: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4757673740386963
    2. '   ' → logprob: -0.9757673740386963
    3. '```' → logprob: -7.225767135620117
    4. ' print' → logprob: -7.600767135620117
    5. 'max' → logprob: -8.225767135620117
    6. 'if' → logprob: -8.850767135620117
    7. '
' → logprob: -10.850767135620117
    8. ' if' → logprob: -10.975767135620117
    9. '    
' → logprob: -12.225767135620117
    10. '	print' → logprob: -13.350767135620117

Token 285: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.027294335886836052
    2. 'if' → logprob: -4.027294158935547
    3. '   ' → logprob: -5.027294158935547
    4. 'max' → logprob: -6.152294158935547
    5. ' if' → logprob: -8.277294158935547
    6. ' print' → logprob: -8.777294158935547
    7. '```' → logprob: -12.027294158935547
    8. ' max' → logprob: -13.277294158935547
    9. '
' → logprob: -14.152294158935547
    10. 'maxlength' → logprob: -15.902294158935547

Token 286: ' Also' (ID: 8820)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04469015821814537
    2. 'if' → logprob: -3.2946901321411133
    3. 'max' → logprob: -5.294690132141113
    4. ' print' → logprob: -6.919690132141113
    5. ' if' → logprob: -7.669690132141113
    6. '   ' → logprob: -9.419690132141113
    7. 'result' → logprob: -11.044690132141113
    8. ' max' → logprob: -11.294690132141113
    9. 'ans' → logprob: -11.669690132141113
    10. '#' → logprob: -11.919690132141113

Token 287: ' check' (ID: 2371)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.2225162982940674
    2. 'if' → logprob: -1.7225162982940674
    3. 'max' → logprob: -1.8475162982940674
    4. ' =' → logprob: -1.9725162982940674
    5. '=max' → logprob: -2.4725162982940674
    6. 'print' → logprob: -2.5975162982940674
    7. '=' → logprob: -3.0975162982940674
    8. ' max' → logprob: -4.347516059875488
    9. '   ' → logprob: -4.722516059875488
    10. ' print' → logprob: -5.847516059875488

Token 288: ' pure' (ID: 14147)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5851771235466003
    2. 'if' → logprob: -1.3351771831512451
    3. ' max' → logprob: -2.460177183151245
    4. ' if' → logprob: -2.710177183151245
    5. 'n' → logprob: -3.835177183151245
    6. ' n' → logprob: -5.835176944732666
    7. 'print' → logprob: -6.210176944732666
    8. 'for' → logprob: -7.210176944732666
    9. ' for' → logprob: -8.210177421569824
    10. '   ' → logprob: -9.210177421569824

Token 289: ' blanks' (ID: 160898)
  Prédit: ' blanks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blanks' → logprob: -0.08519400656223297
    2. 'bl' → logprob: -2.5851941108703613
    3. 'max' → logprob: -5.710194110870361
    4. 'blank' → logprob: -6.585194110870361
    5. ' max' → logprob: -6.835194110870361
    6. ' blank' → logprob: -7.835194110870361
    7. '   ' → logprob: -10.585193634033203
    8. '```' → logprob: -11.210193634033203
    9. ' bl' → logprob: -11.335193634033203
    10. 'blocks' → logprob: -11.710193634033203

Token 290: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.34699806571006775
    2. '   ' → logprob: -1.3469980955123901
    3. ' and' → logprob: -3.8469979763031006
    4. 'if' → logprob: -4.84699821472168
    5. ',' → logprob: -6.47199821472168
    6. ' +' → logprob: -7.22199821472168
    7. '+' → logprob: -7.97199821472168
    8. ':' → logprob: -8.34699821472168
    9. '
' → logprob: -8.97199821472168
    10. '    
' → logprob: -8.97199821472168

Token 291: ' no' (ID: 860)
  Prédit: ' blanks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' blanks' → logprob: -0.542159378528595
    2. 'bl' → logprob: -0.917159378528595
    3. 'max' → logprob: -4.167159557342529
    4. ' max' → logprob: -6.667159557342529
    5. 'blank' → logprob: -6.917159557342529
    6. 'n' → logprob: -7.167159557342529
    7. ' blank' → logprob: -8.917159080505371
    8. '   ' → logprob: -9.667159080505371
    9. ' n' → logprob: -9.792159080505371
    10. '(blank' → logprob: -10.792159080505371

Token 292: ' known' (ID: 5542)
  Prédit: 'known'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'known' → logprob: -0.36412906646728516
    2. ' known' → logprob: -1.4891290664672852
    3. 'arr' → logprob: -3.239129066467285
    4. 'max' → logprob: -4.114129066467285
    5. ' blanks' → logprob: -4.614129066467285
    6. ' arr' → logprob: -5.489129066467285
    7. ' cards' → logprob: -5.989129066467285
    8. 'cards' → logprob: -6.364129066467285
    9. ' max' → logprob: -6.614129066467285
    10. 'bl' → logprob: -6.864129066467285

Token 293: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.548481822013855
    2. ' cards' → logprob: -1.173481822013855
    3. 'card' → logprob: -2.2984819412231445
    4. ' card' → logprob: -4.6734819412231445
    5. '_cards' → logprob: -6.2984819412231445
    6. 's' → logprob: -7.1734819412231445
    7. 'arr' → logprob: -8.923481941223145
    8. ' ' → logprob: -9.673481941223145
    9. '<|end|>' → logprob: -9.798481941223145
    10. '_card' → logprob: -10.048481941223145

Token 294: ' or' (ID: 503)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 295: ' max' (ID: 2999)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.5994318723678589
    2. 'max' → logprob: -1.0994318723678589
    3. ' blanks' → logprob: -2.2244319915771484
    4. ' max' → logprob: -4.974431991577148
    5. 'blank' → logprob: -6.599431991577148
    6. '(max' → logprob: -7.474431991577148
    7. '(blank' → logprob: -8.474431991577148
    8. 'n' → logprob: -8.474431991577148
    9. ' blank' → logprob: -9.349431991577148
    10. 'if' → logprob: -9.349431991577148

Token 296: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.016057128086686134
    2. 'max' → logprob: -4.141057014465332
    3. 'length' → logprob: -11.391057014465332
    4. '(max' → logprob: -11.766057014465332
    5. '```' → logprob: -13.766057014465332
    6. 'arr' → logprob: -13.891057014465332
    7. '=max' → logprob: -15.016057014465332
    8. ' max' → logprob: -15.141057014465332
    9. '[max' → logprob: -15.641057014465332
    10. 'maxlength' → logprob: -16.01605796813965

Token 297: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.19734522700309753
    2. ' >' → logprob: -1.94734525680542
    3. '<' → logprob: -3.69734525680542
    4. ' <' → logprob: -4.69734525680542
    5. '=' → logprob: -6.94734525680542
    6. '<n' → logprob: -7.57234525680542
    7. '<|end|>' → logprob: -8.822344779968262
    8. ' if' → logprob: -8.822344779968262
    9. 'if' → logprob: -9.322344779968262
    10. ' =' → logprob: -9.447344779968262

Token 298: ' blanks' (ID: 160898)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.9025048613548279
    2. '1' → logprob: -1.2775049209594727
    3. ' blanks' → logprob: -1.5275049209594727
    4. 'n' → logprob: -2.9025049209594727
    5. ' n' → logprob: -4.152504920959473
    6. 'max' → logprob: -4.777504920959473
    7. '0' → logprob: -4.902504920959473
    8. ' ' → logprob: -5.027504920959473
    9. 'blank' → logprob: -5.777504920959473
    10. ' max' → logprob: -7.027504920959473

Token 299: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17729710042476654
    2. ' and' → logprob: -2.4272971153259277
    3. ' if' → logprob: -3.1772971153259277
    4. ':' → logprob: -4.427297115325928
    5. ':
' → logprob: -4.552297115325928
    6. '
' → logprob: -5.677297115325928
    7. 'if' → logprob: -5.927297115325928
    8. 'and' → logprob: -6.552297115325928
    9. '    
' → logprob: -7.177297115325928
    10. '       ' → logprob: -8.05229663848877

Token 300: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4981878399848938
    2. '
' → logprob: -1.623187780380249
    3. 'if' → logprob: -2.248187780380249
    4. '   ' → logprob: -2.623187780380249
    5. 'max' → logprob: -4.748188018798828
    6. ' and' → logprob: -6.248188018798828
    7. '    
' → logprob: -6.873188018798828
    8. '<|end|>' → logprob: -6.873188018798828
    9. 'print' → logprob: -7.123188018798828
    10. ' max' → logprob: -7.498188018798828

Token 301: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06949036568403244
    2. 'print' → logprob: -3.319490432739258
    3. 'max' → logprob: -3.569490432739258
    4. ' if' → logprob: -6.069490432739258
    5. '   ' → logprob: -7.819490432739258
    6. '
' → logprob: -9.819490432739258
    7. '```' → logprob: -11.444490432739258
    8. ' max' → logprob: -12.319490432739258
    9. ' print' → logprob: -12.569490432739258
    10. '[max' → logprob: -14.444490432739258

Token 302: ' blanks' (ID: 160898)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.19538427889347076
    2. ' max' → logprob: -2.3203842639923096
    3. ' blanks' → logprob: -2.8203842639923096
    4. 'bl' → logprob: -3.9453842639923096
    5. 'blank' → logprob: -8.32038402557373
    6. ' blank' → logprob: -9.69538402557373
    7. ' bl' → logprob: -12.07038402557373
    8. '(max' → logprob: -12.82038402557373
    9. '   ' → logprob: -13.82038402557373
    10. '(blank' → logprob: -13.94538402557373

Token 303: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.38709381222724915
    2. '>' → logprob: -1.1370937824249268
    3. '>=' → logprob: -9.262093544006348
    4. ' >=' → logprob: -9.262093544006348
    5. ' ' → logprob: -10.512093544006348
    6. '   ' → logprob: -13.637093544006348
    7. ' ' → logprob: -14.137093544006348
    8. ' <' → logprob: -14.387093544006348
    9. ' >
' → logprob: -14.387093544006348
    10. '  ' → logprob: -14.637093544006348

Token 304: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0013321444857865572
    2. ' max' → logprob: -6.6263322830200195
    3. '0' → logprob: -12.12633228302002
    4. 'n' → logprob: -14.87633228302002
    5. '	max' → logprob: -15.50133228302002
    6. '=max' → logprob: -16.001331329345703
    7. ' ' → logprob: -16.376331329345703
    8. 'maxlength' → logprob: -17.501331329345703
    9. 'm' → logprob: -18.001331329345703
    10. '>' → logprob: -18.001331329345703

Token 305: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00011045700375689194
    2. 'en' → logprob: -9.125110626220703
    3. 'max' → logprob: -14.000110626220703
    4. 'ax' → logprob: -15.875110626220703
    5. '_len' → logprob: -16.000110626220703
    6. ' len' → logprob: -16.375110626220703
    7. 'length' → logprob: -16.875110626220703
    8. '0' → logprob: -16.875110626220703
    9. 'Len' → logprob: -17.125110626220703
    10. 'in' → logprob: -17.250110626220703

Token 306: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.029972856864333153
    2. ':' → logprob: -3.529972791671753
    3. '   ' → logprob: -8.904973030090332
    4. '       ' → logprob: -10.654973030090332
    5. ':max' → logprob: -10.654973030090332
    6. 'max' → logprob: -10.779973030090332
    7. '=max' → logprob: -12.404973030090332
    8. ' and' → logprob: -12.529973030090332
    9. '):
' → logprob: -12.779973030090332
    10. ':
' → logprob: -13.404973030090332

Token 307: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21327930688858032
    2. 'max' → logprob: -2.0882792472839355
    3. '   ' → logprob: -3.0882792472839355
    4. ' max' → logprob: -4.4632792472839355
    5. ':
' → logprob: -4.7132792472839355
    6. ':' → logprob: -6.9632792472839355
    7. '
' → logprob: -7.7132792472839355
    8. '	max' → logprob: -8.088279724121094
    9. '=max' → logprob: -9.338279724121094
    10. '(max' → logprob: -9.838279724121094

Token 308: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -3.845798710244708e-05
    2. ' max' → logprob: -10.250038146972656
    3. '   ' → logprob: -13.375038146972656
    4. '       ' → logprob: -13.500038146972656
    5. 'print' → logprob: -16.000038146972656
    6. '	max' → logprob: -17.625038146972656
    7. 'maxlength' → logprob: -17.750038146972656
    8. '
' → logprob: -19.750038146972656
    9. '```' → logprob: -19.750038146972656
    10. '           ' → logprob: -19.875038146972656

Token 309: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.9361264946837764e-07
    2. 'en' → logprob: -16.375
    3. ' len' → logprob: -17.5
    4. 'max' → logprob: -18.5
    5. 'length' → logprob: -19.75
    6. '_len' → logprob: -20.875
    7. 'ax' → logprob: -21.25
    8. '	len' → logprob: -21.5
    9. 'leni' → logprob: -21.625
    10. 'Len' → logprob: -21.625

Token 310: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002494802698493004
    2. ' =' → logprob: -6.002494812011719
    3. '=max' → logprob: -10.877494812011719
    4. '=

' → logprob: -16.62749481201172
    5. '=
' → logprob: -17.87749481201172
    6. '+=' → logprob: -18.62749481201172
    7. '=int' → logprob: -19.75249481201172
    8. 'max' → logprob: -19.75249481201172
    9. '=len' → logprob: -19.87749481201172
    10. '＝' → logprob: -20.12749481201172

Token 311: ' blanks' (ID: 160898)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.474526584148407
    2. ' blanks' → logprob: -0.974526584148407
    3. 'blank' → logprob: -7.724526405334473
    4. ' blank' → logprob: -12.224526405334473
    5. ' bl' → logprob: -14.099526405334473
    6. 'b' → logprob: -14.099526405334473
    7. 'blocks' → logprob: -15.099526405334473
    8. ' ' → logprob: -15.474526405334473
    9. '   ' → logprob: -15.974526405334473
    10. ' ' → logprob: -16.59952735900879

Token 312: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00343577703461051
    2. '
' → logprob: -6.3784356117248535
    3. 'print' → logprob: -6.5034356117248535
    4. '    
' → logprob: -8.753436088562012
    5. '```' → logprob: -10.003436088562012
    6. ' print' → logprob: -10.878436088562012
    7. '<|end|>' → logprob: -11.753436088562012
    8. '
' → logprob: -13.753436088562012
    9. '        
' → logprob: -13.878436088562012
    10. '  
' → logprob: -14.253436088562012

Token 313: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3339982032775879
    2. '   ' → logprob: -1.333998203277588
    3. '
' → logprob: -4.458998203277588
    4. '```' → logprob: -4.958998203277588
    5. ' print' → logprob: -6.458998203277588
    6. '    
' → logprob: -8.45899772644043
    7. '	print' → logprob: -9.83399772644043
    8. '``' → logprob: -10.20899772644043
    9. '  
' → logprob: -10.45899772644043
    10. '\n' → logprob: -11.58399772644043

Token 314: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.023390596732497215
    2. '   ' → logprob: -3.773390531539917
    3. '```' → logprob: -9.523390769958496
    4. ' print' → logprob: -9.898390769958496
    5. '
' → logprob: -10.898390769958496
    6. '	print' → logprob: -13.273390769958496
    7. '``' → logprob: -14.273390769958496
    8. '    
' → logprob: -14.273390769958496
    9. '#print' → logprob: -17.27338981628418
    10. '  
' → logprob: -17.52338981628418

Token 315: ' Maximum' (ID: 49848)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002387018030276522
    2. ' print' → logprob: -8.875238418579102
    3. '   ' → logprob: -9.375238418579102
    4. 'if' → logprob: -11.500238418579102
    5. 'max' → logprob: -12.750238418579102
    6. '```' → logprob: -14.250238418579102
    7. '
' → logprob: -16.5002384185791
    8. ' if' → logprob: -16.6252384185791
    9. '#' → logprob: -17.1252384185791
    10. '    
' → logprob: -17.2502384185791

Token 316: ' length' (ID: 5517)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006773276720196009
    2. 'max' → logprob: -5.131773471832275
    3. ' print' → logprob: -7.256773471832275
    4. 'length' → logprob: -9.756772994995117
    5. 'possible' → logprob: -10.006772994995117
    6. ' max' → logprob: -11.256772994995117
    7. '
' → logprob: -12.256772994995117
    8. '=max' → logprob: -12.756772994995117
    9. '```' → logprob: -12.881772994995117
    10. ' possible' → logprob: -13.006772994995117

Token 317: ' cannot' (ID: 6284)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7908748984336853
    2. 'print' → logprob: -0.7908748984336853
    3. '=' → logprob: -3.04087495803833
    4. '
' → logprob: -3.66587495803833
    5. ' =' → logprob: -4.66587495803833
    6. 'if' → logprob: -5.54087495803833
    7. '=max' → logprob: -5.54087495803833
    8. ' if' → logprob: -6.91587495803833
    9. ' print' → logprob: -7.79087495803833
    10. '=min' → logprob: -7.91587495803833

Token 318: ' exceed' (ID: 23275)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.016828592866659164
    2. '>' → logprob: -4.641828536987305
    3. ' exceed' → logprob: -5.016828536987305
    4. 'be' → logprob: -8.266828536987305
    5. ' be' → logprob: -9.516828536987305
    6. ' >' → logprob: -10.641828536987305
    7. 'max' → logprob: -11.016828536987305
    8. 'import' → logprob: -11.641828536987305
    9. 'n' → logprob: -12.016828536987305
    10. '_ex' → logprob: -12.016828536987305

Token 319: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03804183006286621
    2. ' n' → logprob: -3.288041830062866
    3. '	n' → logprob: -15.163042068481445
    4. '   ' → logprob: -16.538042068481445
    5. '```' → logprob: -19.038042068481445
    6. '_n' → logprob: -19.538042068481445
    7. '[n' → logprob: -20.663042068481445
    8. '`' → logprob: -21.288042068481445
    9. '(n' → logprob: -21.413042068481445
    10. '<n' → logprob: -21.663042068481445

Token 320: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009105411358177662
    2. ' if' → logprob: -5.259105205535889
    3. 'if' → logprob: -6.259105205535889
    4. 'max' → logprob: -6.509105205535889
    5. '
' → logprob: -9.134105682373047
    6. '   ' → logprob: -9.509105682373047
    7. 'n' → logprob: -9.634105682373047
    8. '=max' → logprob: -10.009105682373047
    9. 'print' → logprob: -10.134105682373047
    10. '    
' → logprob: -10.509105682373047

Token 321: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07754993438720703
    2. 'print' → logprob: -2.952549934387207
    3. '   ' → logprob: -4.577549934387207
    4. 'if' → logprob: -5.452549934387207
    5. 'max' → logprob: -5.452549934387207
    6. ' if' → logprob: -6.077549934387207
    7. '
' → logprob: -7.577549934387207
    8. '```' → logprob: -8.452549934387207
    9. '    
' → logprob: -9.077549934387207
    10. ' max' → logprob: -9.327549934387207

Token 322: ' if' (ID: 538)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1942681223154068
    2. 'if' (adapté à ' if') → logprob: -2.694268226623535
    3. ' if' → logprob: -2.694268226623535
    4. ' max' → logprob: -3.194268226623535
    5. '=max' → logprob: -8.444268226623535
    6. '
' → logprob: -9.569268226623535
    7. 'print' → logprob: -9.944268226623535
    8. 'n' → logprob: -10.944268226623535
    9. ' =' → logprob: -11.319268226623535
    10. '=' → logprob: -12.069268226623535

Token 323: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.07889033854007721
    2. 'max' → logprob: -2.578890323638916
    3. '	max' → logprob: -15.328890800476074
    4. ' n' → logprob: -16.453889846801758
    5. '(max' → logprob: -16.578889846801758
    6. ' maxlength' → logprob: -16.828889846801758
    7. ' ' → logprob: -17.078889846801758
    8. 'n' → logprob: -17.703889846801758
    9. '[max' → logprob: -18.703889846801758
    10. '=max' → logprob: -18.828889846801758

Token 324: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: 0.0
    2. 'max' → logprob: -19.875
    3. 'length' → logprob: -20.5
    4. 'Len' → logprob: -22.0
    5. '_len' → logprob: -23.25
    6. ' len' → logprob: -23.625
    7. 'l' → logprob: -24.0
    8. 'leni' → logprob: -24.125
    9. 'ln' → logprob: -24.5
    10. '(len' → logprob: -24.625

Token 325: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2520108222961426
    2. '>' → logprob: -1.5020108222961426
    3. ' =' → logprob: -10.252010345458984
    4. '=' → logprob: -10.377010345458984
    5. ' n' → logprob: -11.502010345458984
    6. ' ' → logprob: -13.752010345458984
    7. '>N' → logprob: -14.127010345458984
    8. 'n' → logprob: -14.252010345458984
    9. '>end' → logprob: -14.502010345458984
    10. '=n' → logprob: -14.627010345458984

Token 326: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.12692904472351074
    2. 'n' → logprob: -2.1269290447235107
    3. '	n' → logprob: -14.12692928314209
    4. ' ' → logprob: -15.62692928314209
    5. '_n' → logprob: -18.251928329467773
    6. ')n' → logprob: -18.501928329467773
    7. ' н' → logprob: -18.876928329467773
    8. ' ' → logprob: -18.876928329467773
    9. '```' → logprob: -19.001928329467773
    10. '(n' → logprob: -19.251928329467773

Token 327: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14280733466148376
    2. ':
' → logprob: -2.0178072452545166
    3. ':max' → logprob: -9.642807006835938
    4. 'max' → logprob: -10.517807006835938
    5. '=max' → logprob: -11.267807006835938
    6. '):
' → logprob: -11.642807006835938
    7. '):' → logprob: -12.267807006835938
    8. '   ' → logprob: -12.642807006835938
    9. '=' → logprob: -12.642807006835938
    10. ' max' → logprob: -13.767807006835938

Token 328: '       ' (ID: 309)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.7455517649650574
    2. '       ' → logprob: -1.2455518245697021
    3. '   ' → logprob: -1.8705518245697021
    4. 'max' → logprob: -2.745551824569702
    5. '	max' → logprob: -4.120551586151123
    6. '(max' → logprob: -6.745551586151123
    7. '=max' → logprob: -7.120551586151123
    8. '[max' → logprob: -7.870551586151123
    9. ',max' → logprob: -8.495552062988281
    10. 'maxlength' → logprob: -8.870552062988281

Token 329: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -3.2378600735682994e-05
    2. ' max' → logprob: -10.500032424926758
    3. '   ' → logprob: -12.250032424926758
    4. 'maxlength' → logprob: -17.125032424926758
    5. '	max' → logprob: -17.625032424926758
    6. '       ' → logprob: -18.000032424926758
    7. '_max' → logprob: -18.625032424926758
    8. 'print' → logprob: -20.375032424926758
    9. '=max' → logprob: -20.500032424926758
    10. ',max' → logprob: -20.500032424926758

Token 330: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00013524403038900346
    2. 'en' → logprob: -9.00013542175293
    3. 'max' → logprob: -12.00013542175293
    4. 'ax' → logprob: -12.37513542175293
    5. ' len' → logprob: -15.00013542175293
    6. 'length' → logprob: -15.37513542175293
    7. '_len' → logprob: -15.37513542175293
    8. 'l' → logprob: -15.62513542175293
    9. 'Len' → logprob: -15.87513542175293
    10. '```' → logprob: -17.00013542175293

Token 331: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008614926598966122
    2. ' =' → logprob: -4.758615016937256
    3. '=max' → logprob: -15.383614540100098
    4. '=n' → logprob: -16.008615493774414
    5. '=
' → logprob: -18.633615493774414
    6. '＝' → logprob: -19.758615493774414
    7. '=len' → logprob: -20.008615493774414
    8. '=int' → logprob: -20.258615493774414
    9. '=

' → logprob: -20.508615493774414
    10. '=cut' → logprob: -20.633615493774414

Token 332: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25192955136299133
    2. ' n' → logprob: -1.501929521560669
    3. '	n' → logprob: -14.62692928314209
    4. ' ' → logprob: -17.876930236816406
    5. '_n' → logprob: -18.626930236816406
    6. ')n' → logprob: -19.001930236816406
    7. ' ' → logprob: -19.751930236816406
    8. ',n' → logprob: -20.001930236816406
    9. '```' → logprob: -20.001930236816406
    10. '[n' → logprob: -20.251930236816406

Token 333: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5489310622215271
    2. 'print' → logprob: -1.0489311218261719
    3. '
' → logprob: -2.673931121826172
    4. '    
' → logprob: -6.298931121826172
    5. ' print' → logprob: -6.923931121826172
    6. '```' → logprob: -9.048931121826172
    7. ')
' → logprob: -10.048931121826172
    8. '  
' → logprob: -10.048931121826172
    9. ' 
' → logprob: -10.673931121826172
    10. ')' → logprob: -10.798931121826172

Token 334: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4767157733440399
    2. '   ' → logprob: -0.9767158031463623
    3. '```' → logprob: -6.101715564727783
    4. ' print' → logprob: -8.101716041564941
    5. '
' → logprob: -9.976716041564941
    6. '    
' → logprob: -10.851716041564941
    7. '``' → logprob: -11.101716041564941
    8. '	print' → logprob: -11.601716041564941
    9. '(print' → logprob: -14.351716041564941
    10. '  
' → logprob: -14.601716041564941

Token 335: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6931925415992737
    2. 'print' (adapté à ' print') → logprob: -0.6931925415992737
    3. '```' → logprob: -10.443192481994629
    4. ' print' → logprob: -11.318192481994629
    5. '
' → logprob: -13.193192481994629
    6. '    
' → logprob: -13.443192481994629
    7. '	print' → logprob: -14.568192481994629
    8. '``' → logprob: -16.193193435668945
    9. '(print' → logprob: -17.943193435668945
    10. '.print' → logprob: -18.443193435668945

Token 336: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -7.791440293658525e-05
    2. '(' → logprob: -9.500078201293945
    3. 'max' → logprob: -12.875078201293945
    4. '(f' → logprob: -15.250078201293945
    5. ' (' → logprob: -16.500078201293945
    6. ' max' → logprob: -16.875078201293945
    7. '('' → logprob: -18.250078201293945
    8. '(m' → logprob: -18.250078201293945
    9. '(min' → logprob: -18.625078201293945
    10. '((' → logprob: -18.875078201293945

Token 337: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: 0.0
    2. 'max' → logprob: -18.0
    3. 'en' → logprob: -19.125
    4. '(len' → logprob: -19.125
    5. 'Len' → logprob: -19.875
    6. '_len' → logprob: -19.875
    7. ')' → logprob: -19.875
    8. 'length' → logprob: -20.875
    9. ' len' → logprob: -21.0
    10. 'ln' → logprob: -21.375

Token 338: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.750000953674316
    3. ')
' → logprob: -15.750000953674316
    4. ')`' → logprob: -16.25
    5. '`)' → logprob: -16.75
    6. '')' → logprob: -16.875
    7. '")' → logprob: -17.875
    8. '))' → logprob: -18.0
    9. '```' → logprob: -19.625
    10. '())' → logprob: -19.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 336
Tokens correctement prédits (1ère position, stricte): 122
Tokens correctement prédits (1ère position, avec adaptation): 138
Tokens correctement prédits (top 10): 283
Précision stricte (1ère position): 36.31%
Précision adaptée (1ère position): 41.07%
Précision (top 10): 84.23%
================================================================================
