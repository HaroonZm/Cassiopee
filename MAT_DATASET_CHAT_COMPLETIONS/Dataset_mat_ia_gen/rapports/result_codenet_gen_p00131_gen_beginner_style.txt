================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:18:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
for _ in range(n):
    grid = [list(map(int, input().split())) for _ in range(10)]

    res = [[0]*10 for _ in range(10)]

    for i in range(10):
        for j in range(10):
            s = grid[i][j]
            if i > 0:
                s ^= res[i-1][j]
            if j > 0:
                s ^= res[i][j-1]
            if i > 0 and j > 0:
                s ^= res[i-1][j-1]
            res[i][j] = s

    for i in range(10):
        print(' '.join(str(x) for x in res[i]))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010807292710524052
    2. '(n' → logprob: -10.250107765197754
    3. ''' → logprob: -10.625107765197754
    4. '('' → logprob: -11.375107765197754
    5. '```' → logprob: -11.625107765197754
    6. '(
' → logprob: -12.000107765197754
    7. '("("' → logprob: -12.375107765197754
    8. '()' → logprob: -12.375107765197754
    9. '`' → logprob: -12.500107765197754
    10. ')' → logprob: -13.125107765197754

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0733630508184433
    2. ')' → logprob: -2.8233630657196045
    3. '()' → logprob: -4.698362827301025
    4. '())' → logprob: -6.948362827301025
    5. '```' → logprob: -8.198363304138184
    6. '(
' → logprob: -8.448363304138184
    7. '('' → logprob: -8.948363304138184
    8. '(()' → logprob: -9.073363304138184
    9. '`' → logprob: -9.198363304138184
    10. '("("' → logprob: -9.698363304138184

Token 5: 'for' (ID: 1938)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1005412340164185
    2. 'i' → logprob: -1.6005412340164185
    3. 'for' → logprob: -1.6005412340164185
    4. 's' → logprob: -2.850541114807129
    5. '*' → logprob: -3.100541114807129
    6. 'x' → logprob: -3.600541114807129
    7. 'a' → logprob: -3.850541114807129
    8. ')' → logprob: -3.850541114807129
    9. '#' → logprob: -4.225541114807129
    10. ' ' → logprob: -4.350541114807129

Token 6: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06328916549682617
    2. ' i' → logprob: -2.938289165496826
    3. '  ' → logprob: -5.438289165496826
    4. ' n' → logprob: -5.563289165496826
    5. 'i' → logprob: -9.438289642333984
    6. '_' → logprob: -10.938289642333984
    7. ' ' → logprob: -11.188289642333984
    8. ' )' → logprob: -11.438289642333984
    9. ' ‌' → logprob: -11.438289642333984
    10. 'n' → logprob: -12.313289642333984

Token 7: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03393716365098953
    2. 'in' → logprob: -3.4089372158050537
    3. ' ' → logprob: -8.658937454223633
    4. 'n' → logprob: -9.283937454223633
    5. ' n' → logprob: -11.908937454223633
    6. '  ' → logprob: -12.283937454223633
    7. ' i' → logprob: -12.658937454223633
    8. '_' → logprob: -13.033937454223633
    9. ',' → logprob: -13.533937454223633
    10. '	in' → logprob: -13.658937454223633

Token 8: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3868841528892517
    2. ' range' → logprob: -1.1368842124938965
    3. '	range' → logprob: -12.636883735656738
    4. '_range' → logprob: -13.136883735656738
    5. ' ' → logprob: -13.136883735656738
    6. 'n' → logprob: -13.261883735656738
    7. 'in' → logprob: -13.886883735656738
    8. '(range' → logprob: -14.011883735656738
    9. '_' → logprob: -14.511883735656738
    10. ' n' → logprob: -14.761883735656738

Token 9: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002370416419580579
    2. '(n' → logprob: -6.252370357513428
    3. ' (' → logprob: -7.752370357513428
    4. '(range' → logprob: -11.752370834350586
    5. '(
' → logprob: -12.752370834350586
    6. '(len' → logprob: -14.877370834350586
    7. '(i' → logprob: -15.752370834350586
    8. '(int' → logprob: -15.752370834350586
    9. '(

' → logprob: -16.252370834350586
    10. '('' → logprob: -16.877370834350586

Token 10: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1853819638490677
    2. ')' → logprob: -1.8103820085525513
    3. ':' → logprob: -5.185381889343262
    4. '):
' → logprob: -12.310381889343262
    5. ':)' → logprob: -12.560381889343262
    6. '+' → logprob: -12.810381889343262
    7. ' ):' → logprob: -12.935381889343262
    8. ''):' → logprob: -13.310381889343262
    9. ' )' → logprob: -13.685381889343262
    10. '**' → logprob: -14.185381889343262

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006165308877825737
    2. '    
' → logprob: -5.381165504455566
    3. ' print' → logprob: -7.256165504455566
    4. ' input' → logprob: -8.131165504455566
    5. '    ' → logprob: -8.756165504455566
    6. 'print' → logprob: -9.256165504455566
    7. '```' → logprob: -9.256165504455566
    8. ' 
' → logprob: -10.006165504455566
    9. ' ' → logprob: -10.381165504455566
    10. 'input' → logprob: -10.631165504455566

Token 12: ' grid' (ID: 10586)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1483161747455597
    2. 'print' → logprob: -2.6483161449432373
    3. 'data' → logprob: -4.523316383361816
    4. 'text' → logprob: -4.898316383361816
    5. 'x' → logprob: -5.023316383361816
    6. 'line' → logprob: -5.148316383361816
    7. 'input' → logprob: -5.148316383361816
    8. 'name' → logprob: -5.273316383361816
    9. 'a' → logprob: -5.273316383361816
    10. 'word' → logprob: -5.398316383361816

Token 13: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.024044163525104523
    2. '[i' → logprob: -4.899044036865234
    3. '[]' → logprob: -5.649044036865234
    4. '.' → logprob: -5.649044036865234
    5. '[row' → logprob: -6.024044036865234
    6. '[][]' → logprob: -6.524044036865234
    7. ' =' → logprob: -7.149044036865234
    8. '[line' → logprob: -7.274044036865234
    9. '[:]' → logprob: -7.399044036865234
    10. '.append' → logprob: -7.899044036865234

Token 14: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.48187682032585144
    2. ' []' → logprob: -2.231876850128174
    3. '[' → logprob: -2.606876850128174
    4. '[]' → logprob: -2.731876850128174
    5. '[int' → logprob: -2.731876850128174
    6. '[list' → logprob: -3.231876850128174
    7. '[input' → logprob: -3.606876850128174
    8. ' [[]' → logprob: -7.231876850128174
    9. '[List' → logprob: -7.356876850128174
    10. ' list' → logprob: -7.606876850128174

Token 15: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.014683093875646591
    2. ' list' → logprob: -4.514683246612549
    3. '[list' → logprob: -6.014683246612549
    4. 'input' → logprob: -7.889683246612549
    5. '   ' → logprob: -7.889683246612549
    6. '[input' → logprob: -8.26468276977539
    7. '[' → logprob: -9.01468276977539
    8. '[]' → logprob: -10.76468276977539
    9. ' [' → logprob: -11.13968276977539
    10. '[int' → logprob: -11.38968276977539

Token 16: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.31767845153808594
    2. '(input' → logprob: -1.317678451538086
    3. '(' → logprob: -5.442678451538086
    4. '()' → logprob: -10.567678451538086
    5. 'map' → logprob: -10.567678451538086
    6. 'input' → logprob: -11.567678451538086
    7. '(range' → logprob: -11.942678451538086
    8. '(line' → logprob: -12.567678451538086
    9. '(int' → logprob: -12.942678451538086
    10. '(
' → logprob: -13.442678451538086

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0024370201863348484
    2. 'int' → logprob: -6.627437114715576
    3. '(str' → logprob: -7.252437114715576
    4. '(' → logprob: -8.502436637878418
    5. '<int' → logprob: -9.627436637878418
    6. 'str' → logprob: -9.877436637878418
    7. '(lambda' → logprob: -10.877436637878418
    8. 'list' → logprob: -11.627436637878418
    9. '```' → logprob: -11.627436637878418
    10. '=int' → logprob: -11.752436637878418

Token 18: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00638613011687994
    2. '(' → logprob: -5.3813862800598145
    3. ',input' → logprob: -6.8813862800598145
    4. 'input' → logprob: -7.3813862800598145
    5. ')' → logprob: -9.756385803222656
    6. ' input' → logprob: -11.256385803222656
    7. '=input' → logprob: -11.256385803222656
    8. ',' → logprob: -11.631385803222656
    9. '<|end|>' → logprob: -12.131385803222656
    10. '(int' → logprob: -12.506385803222656

Token 19: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.048627447336912155
    2. ' input' → logprob: -3.0486273765563965
    3. '(input' → logprob: -10.298627853393555
    4. ')' → logprob: -12.548627853393555
    5. ',input' → logprob: -13.423627853393555
    6. '<input' → logprob: -14.673627853393555
    7. 'list' → logprob: -15.173627853393555
    8. '=input' → logprob: -15.423627853393555
    9. '))' → logprob: -15.923627853393555
    10. '	input' → logprob: -16.423627853393555

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0006134323193691671
    2. '()))' → logprob: -7.875613212585449
    3. '()' → logprob: -8.37561321258545
    4. '())' → logprob: -14.12561321258545
    5. '()
' → logprob: -14.12561321258545
    6. '())))' → logprob: -14.62561321258545
    7. '()));' → logprob: -15.12561321258545
    8. '(' → logprob: -15.50061321258545
    9. ' ().' → logprob: -15.87561321258545
    10. '.split' → logprob: -16.250614166259766

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009288526489399374
    2. 'strip' → logprob: -7.00092887878418
    3. 'rstrip' → logprob: -11.00092887878418
    4. '(split' → logprob: -14.87592887878418
    5. ' split' → logprob: -15.37592887878418
    6. ')' → logprob: -16.62592887878418
    7. 'spl' → logprob: -17.75092887878418
    8. 's' → logprob: -18.25092887878418
    9. 'plit' → logprob: -18.50092887878418
    10. '```' → logprob: -19.25092887878418

Token 22: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.052167292684316635
    2. '))' → logprob: -3.1771671772003174
    3. '(' → logprob: -5.3021674156188965
    4. '())' → logprob: -6.1771674156188965
    5. '()' → logprob: -6.9271674156188965
    6. '('' → logprob: -7.1771674156188965
    7. '())))' → logprob: -9.177166938781738
    8. ''))' → logprob: -9.427166938781738
    9. ')' → logprob: -9.677166938781738
    10. ')))' → logprob: -10.677166938781738

Token 23: ' for' (ID: 395)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.12684904038906097
    2. ')]' → logprob: -2.8768489360809326
    3. ')' → logprob: -3.6268489360809326
    4. '()]' → logprob: -3.6268489360809326
    5. '(' → logprob: -5.126849174499512
    6. '()' → logprob: -5.876849174499512
    7. '()))' → logprob: -8.751849174499512
    8. ']' → logprob: -8.876849174499512
    9. ')])' → logprob: -9.126849174499512
    10. 'for' → logprob: -9.251849174499512

Token 24: ' _' (ID: 1175)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008174458518624306
    2. ' range' → logprob: -5.008174419403076
    3. '(range' → logprob: -7.008174419403076
    4. ' (' → logprob: -8.508174896240234
    5. ' _' → logprob: -8.883174896240234
    6. '_' → logprob: -9.258174896240234
    7. '()' → logprob: -10.133174896240234
    8. ' ' → logprob: -10.258174896240234
    9. 'range' → logprob: -11.633174896240234
    10. '(int' → logprob: -11.883174896240234

Token 25: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.44558241963386536
    2. '(' → logprob: -1.445582389831543
    3. '(range' → logprob: -2.570582389831543
    4. 'range' → logprob: -3.320582389831543
    5. ' in' → logprob: -5.320582389831543
    6. ' (' → logprob: -5.945582389831543
    7. '<|end|>' → logprob: -6.695582389831543
    8. '	range' → logprob: -7.320582389831543
    9. '(n' → logprob: -7.445582389831543
    10. ' ' → logprob: -7.945582389831543

Token 26: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5761830806732178
    2. 'range' → logprob: -0.8261830806732178
    3. '(range' → logprob: -8.326183319091797
    4. '	range' → logprob: -14.576183319091797
    5. ' ' → logprob: -14.826183319091797
    6. '(' → logprob: -15.201183319091797
    7. ')' → logprob: -15.826183319091797
    8. '(n' → logprob: -16.201183319091797
    9. ' xrange' → logprob: -17.201183319091797
    10. '  ' → logprob: -17.451183319091797

Token 27: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.259079363080673e-05
    2. '(n' → logprob: -12.000012397766113
    3. '4' → logprob: -13.125012397766113
    4. '(len' → logprob: -13.500012397766113
    5. '3' → logprob: -13.875012397766113
    6. ' (' → logprob: -14.375012397766113
    7. '(grid' → logprob: -14.625012397766113
    8. '((' → logprob: -15.500012397766113
    9. '9' → logprob: -15.875012397766113
    10. '(int' → logprob: -16.00001335144043

Token 28: '10' (ID: 702)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.21145464479923248
    2. '4' → logprob: -2.0864546298980713
    3. '6' → logprob: -3.3364546298980713
    4. '5' → logprob: -4.08645486831665
    5. '9' → logprob: -4.46145486831665
    6. '10' → logprob: -6.58645486831665
    7. '7' → logprob: -8.086454391479492
    8. '8' → logprob: -8.211454391479492
    9. '2' → logprob: -8.336454391479492
    10. '100' → logprob: -9.086454391479492

Token 29: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.000122608442325145
    2. ' )' → logprob: -10.125123023986816
    3. ')' → logprob: -10.250123023986816
    4. ']' → logprob: -10.750123023986816
    5. ')])' → logprob: -11.500123023986816
    6. '])]' → logprob: -11.625123023986816
    7. '   ' → logprob: -13.125123023986816
    8. '))' → logprob: -14.250123023986816
    9. '')]' → logprob: -14.375123023986816
    10. '**' → logprob: -14.625123023986816

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2331193685531616
    2. 'count' → logprob: -1.8581193685531616
    3. 'result' → logprob: -2.108119487762451
    4. 'max' → logprob: -2.233119487762451
    5. 'for' → logprob: -3.108119487762451
    6. '```' → logprob: -3.233119487762451
    7. 's' → logprob: -3.358119487762451
    8. 'm' → logprob: -3.608119487762451
    9. 'sum' → logprob: -3.608119487762451
    10. 'r' → logprob: -3.858119487762451

Token 31: ' res' (ID: 694)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.1562926769256592
    2. 'dp' → logprob: -1.1562926769256592
    3. 'result' → logprob: -2.281292676925659
    4. 'count' → logprob: -3.031292676925659
    5. 'row' → logprob: -3.406292676925659
    6. 'res' (adapté à ' res') → logprob: -4.156292915344238
    7. 'r' → logprob: -4.281292915344238
    8. 'total' → logprob: -4.281292915344238
    9. 'visited' → logprob: -4.281292915344238
    10. 'rows' → logprob: -4.406292915344238

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8316633701324463
    2. '[' → logprob: -0.9566633701324463
    3. '=' → logprob: -1.8316633701324463
    4. '_' → logprob: -4.956663131713867
    5. '.' → logprob: -5.831663131713867
    6. '[:]' → logprob: -5.831663131713867
    7. '[]' → logprob: -5.956663131713867
    8. ' ' → logprob: -6.206663131713867
    9. ' +=' → logprob: -7.706663131713867
    10. ')' → logprob: -7.956663131713867

Token 33: ' [[' (ID: 9237)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23939180374145508
    2. ' ' → logprob: -1.614391803741455
    3. ' max' → logprob: -5.489391803741455
    4. 'max' → logprob: -5.864391803741455
    5. ' []' → logprob: -6.114391803741455
    6. 'sum' → logprob: -6.739391803741455
    7. '[' → logprob: -7.364391803741455
    8. '[]' → logprob: -7.364391803741455
    9. 'grid' → logprob: -7.739391803741455
    10. ' sum' → logprob: -7.739391803741455

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008758509648032486
    2. '-' → logprob: -8.250875473022461
    3. 'False' → logprob: -8.250875473022461
    4. '1' → logprob: -9.125875473022461
    5. 'grid' → logprob: -9.250875473022461
    6. ' ' → logprob: -10.625875473022461
    7. 'int' → logprob: -11.000875473022461
    8. 'max' → logprob: -11.250875473022461
    9. '(' → logprob: -11.375875473022461
    10. 'sum' → logprob: -12.000875473022461

Token 35: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10456129163503647
    2. ']' → logprob: -2.8545613288879395
    3. 'for' → logprob: -3.6045613288879395
    4. ' ]' → logprob: -4.7295613288879395
    5. ']*' → logprob: -6.2295613288879395
    6. ')' → logprob: -6.8545613288879395
    7. '   ' → logprob: -6.9795613288879395
    8. ',' → logprob: -7.3545613288879395
    9. ')]' → logprob: -7.9795613288879395
    10. '    ' → logprob: -8.479560852050781

Token 36: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0005400468362495303
    2. ' ' → logprob: -8.000539779663086
    3. '5' → logprob: -10.375539779663086
    4. '9' → logprob: -10.500539779663086
    5. '20' → logprob: -10.750539779663086
    6. '11' → logprob: -10.875539779663086
    7. '1' → logprob: -10.875539779663086
    8. '3' → logprob: -11.063039779663086
    9. '4' → logprob: -11.438039779663086
    10. '12' → logprob: -11.688039779663086

Token 37: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.024775808677077293
    2. 'for' → logprob: -3.774775743484497
    3. ']' → logprob: -7.024775981903076
    4. ')' → logprob: -8.274775505065918
    5. '   ' → logprob: -8.274775505065918
    6. '	for' → logprob: -9.649775505065918
    7. ' ]' → logprob: -10.649775505065918
    8. ' ' → logprob: -10.899775505065918
    9. ')]' → logprob: -12.024775505065918
    10. '    ' → logprob: -12.024775505065918

Token 38: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.059384457767009735
    2. '_' → logprob: -2.934384346008301
    3. ' range' → logprob: -6.309384346008301
    4. ' ' → logprob: -6.434384346008301
    5. '(' → logprob: -7.559384346008301
    6. '<|end|>' → logprob: -8.6843843460083
    7. '(range' → logprob: -9.3093843460083
    8. '_range' → logprob: -9.3093843460083
    9. 'range' → logprob: -9.6843843460083
    10. ' i' → logprob: -9.8093843460083

Token 39: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018310071900486946
    2. ' range' → logprob: -4.018310070037842
    3. '(range' → logprob: -10.268310546875
    4. '_' → logprob: -10.393310546875
    5. 'ran' → logprob: -10.518310546875
    6. 'in' → logprob: -10.643310546875
    7. '_range' → logprob: -11.143310546875
    8. ' in' → logprob: -11.518310546875
    9. '	range' → logprob: -12.143310546875
    10. '[' → logprob: -13.018310546875

Token 40: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10021012276411057
    2. ' range' → logprob: -2.350210189819336
    3. '[' → logprob: -13.100210189819336
    4. '(range' → logprob: -14.350210189819336
    5. '	range' → logprob: -15.225210189819336
    6. ' ' → logprob: -15.600210189819336
    7. '(' → logprob: -16.475210189819336
    8. '_range' → logprob: -16.725210189819336
    9. '_' → logprob: -16.725210189819336
    10. '```' → logprob: -16.850210189819336

Token 41: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.034592388459714e-06
    2. '10' → logprob: -12.250005722045898
    3. ' (' → logprob: -13.750005722045898
    4. ')' → logprob: -16.3750057220459
    5. ']' → logprob: -16.8750057220459
    6. '(
' → logprob: -17.6250057220459
    7. '   ' → logprob: -18.0000057220459
    8. ')(' → logprob: -18.1250057220459
    9. '((' → logprob: -18.2500057220459
    10. '```' → logprob: -18.3750057220459

Token 42: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -6.73052782076411e-05
    2. ' ' → logprob: -10.000067710876465
    3. '1' → logprob: -11.375067710876465
    4. '   ' → logprob: -12.875067710876465
    5. '(' → logprob: -13.000067710876465
    6. '0' → logprob: -13.625067710876465
    7. ')' → logprob: -13.687567710876465
    8. '100' → logprob: -15.000067710876465
    9. '11' → logprob: -15.125067710876465
    10. '```' → logprob: -15.125067710876465

Token 43: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0021670327987521887
    2. ']' → logprob: -6.252167224884033
    3. ')' → logprob: -8.377166748046875
    4. ' )' → logprob: -13.377166748046875
    5. ' ]' → logprob: -13.377166748046875
    6. '   ' → logprob: -13.627166748046875
    7. '])]' → logprob: -13.627166748046875
    8. ')],' → logprob: -14.377166748046875
    9. ')]
' → logprob: -14.377166748046875
    10. '])' → logprob: -14.502166748046875

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02747434750199318
    2. ' ' → logprob: -4.527474403381348
    3. '
' → logprob: -6.027474403381348
    4. ')' → logprob: -6.152474403381348
    5. '<|end|>' → logprob: -6.152474403381348
    6. 'for' → logprob: -6.277474403381348
    7. '    
' → logprob: -6.402474403381348
    8. ' for' → logprob: -6.402474403381348
    9. '    ' → logprob: -6.652474403381348
    10. '\' → logprob: -7.402474403381348

Token 45: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011550070717930794
    2. ' for' → logprob: -4.636549949645996
    3. '   ' → logprob: -6.386549949645996
    4. 'i' → logprob: -9.386549949645996
    5. 'r' → logprob: -12.261549949645996
    6. '```' → logprob: -12.761549949645996
    7. 'x' → logprob: -12.886549949645996
    8. 'f' → logprob: -13.011549949645996
    9. 't' → logprob: -13.136549949645996
    10. ' ' → logprob: -13.386549949645996

Token 46: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.046959493309259415
    2. ' ' → logprob: -3.421959400177002
    3. ' _' → logprob: -4.421959400177002
    4. 'i' → logprob: -7.171959400177002
    5. '_' → logprob: -8.17195987701416
    6. ' r' → logprob: -9.79695987701416
    7. ' row' → logprob: -10.04695987701416
    8. ' j' → logprob: -11.04695987701416
    9. ' ' → logprob: -11.42195987701416
    10. ' ‌' → logprob: -11.42195987701416

Token 47: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.030152160674333572
    2. 'in' → logprob: -3.5301520824432373
    3. ' ' → logprob: -8.405152320861816
    4. '<|end|>' → logprob: -9.405152320861816
    5. '  ' → logprob: -10.030152320861816
    6. ')' → logprob: -11.780152320861816
    7. '   ' → logprob: -11.780152320861816
    8. '	in' → logprob: -12.155152320861816
    9. ' i' → logprob: -12.405152320861816
    10. '    ' → logprob: -12.405152320861816

Token 48: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868771195411682
    2. 'range' → logprob: -1.1368770599365234
    3. '	range' → logprob: -13.136877059936523
    4. '(range' → logprob: -13.261877059936523
    5. ' ' → logprob: -13.386877059936523
    6. ' xrange' → logprob: -15.136877059936523
    7. ')' → logprob: -15.386877059936523
    8. '<|end|>' → logprob: -16.136877059936523
    9. '10' → logprob: -16.261877059936523
    10. '_range' → logprob: -17.136877059936523

Token 49: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006659718346782029
    2. '10' → logprob: -8.250665664672852
    3. ' (' → logprob: -8.375665664672852
    4. ' ' → logprob: -8.750665664672852
    5. ')' → logprob: -11.625665664672852
    6. '   ' → logprob: -12.500665664672852
    7. '(len' → logprob: -13.625665664672852
    8. '(
' → logprob: -14.625665664672852
    9. '  ' → logprob: -15.500665664672852
    10. '1' → logprob: -15.625665664672852

Token 50: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.392824874026701e-05
    2. '1' → logprob: -10.62503433227539
    3. ' ' → logprob: -12.50003433227539
    4. '0' → logprob: -12.62503433227539
    5. '100' → logprob: -14.12503433227539
    6. ')' → logprob: -14.50003433227539
    7. '   ' → logprob: -14.50003433227539
    8. '9' → logprob: -15.25003433227539
    9. '(' → logprob: -16.00003433227539
    10. '```' → logprob: -16.75003433227539

Token 51: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007980733062140644
    2. ')' → logprob: -7.625798225402832
    3. '):
' → logprob: -8.625798225402832
    4. ')]' → logprob: -9.750798225402832
    5. ']:' → logprob: -10.125798225402832
    6. ':' → logprob: -10.750798225402832
    7. ' ):' → logprob: -12.250798225402832
    8. '   ' → logprob: -12.750798225402832
    9. ' ' → logprob: -14.000798225402832
    10. '+' → logprob: -15.125798225402832

Token 52: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04735373705625534
    2. '   ' → logprob: -3.922353744506836
    3. '<|end|>' → logprob: -4.422353744506836
    4. '    ' → logprob: -5.297353744506836
    5. ' for' → logprob: -5.547353744506836
    6. ' ' → logprob: -5.797353744506836
    7. ':' → logprob: -6.672353744506836
    8. 'for' → logprob: -7.797353744506836
    9. '     ' → logprob: -8.922353744506836
    10. ')' → logprob: -9.547353744506836

Token 53: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13158467411994934
    2. 'for' (adapté à ' for') → logprob: -2.131584644317627
    3. '   ' → logprob: -5.381584644317627
    4. '	for' → logprob: -10.881585121154785
    5. '```' → logprob: -11.631585121154785
    6. ' ' → logprob: -11.756585121154785
    7. '       ' → logprob: -12.506585121154785
    8. ' j' → logprob: -13.131585121154785
    9. '    ' → logprob: -13.506585121154785
    10. '<|end|>' → logprob: -13.631585121154785

Token 54: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.05012395605444908
    2. 'j' → logprob: -3.050123929977417
    3. '10' → logprob: -6.925124168395996
    4. ' ' → logprob: -7.550124168395996
    5. ' range' → logprob: -11.300124168395996
    6. 'range' → logprob: -12.550124168395996
    7. '0' → logprob: -12.675124168395996
    8. '    ' → logprob: -12.925124168395996
    9. '```' → logprob: -14.050124168395996
    10. '	j' → logprob: -14.175124168395996

Token 55: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10323754698038101
    2. 'in' → logprob: -2.3532376289367676
    3. ' ' → logprob: -5.978237628936768
    4. '<|end|>' → logprob: -8.72823715209961
    5. '	in' → logprob: -9.10323715209961
    6. '    ' → logprob: -9.72823715209961
    7. '(' → logprob: -9.85323715209961
    8. '  ' → logprob: -11.10323715209961
    9. ')' → logprob: -11.35323715209961
    10. '   ' → logprob: -11.47823715209961

Token 56: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3868975341320038
    2. ' range' → logprob: -1.1368975639343262
    3. '10' → logprob: -11.386897087097168
    4. '(range' → logprob: -11.886897087097168
    5. '(' → logprob: -12.386897087097168
    6. ' ' → logprob: -12.761897087097168
    7. '	range' → logprob: -14.386897087097168
    8. '   ' → logprob: -14.761897087097168
    9. '    ' → logprob: -16.261898040771484
    10. '  ' → logprob: -16.761898040771484

Token 57: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.8550976164988242e-05
    2. ' (' → logprob: -11.000018119812012
    3. '10' → logprob: -13.500018119812012
    4. '(
' → logprob: -15.625018119812012
    5. ')' → logprob: -16.125019073486328
    6. '   ' → logprob: -16.375019073486328
    7. ' ' → logprob: -16.750019073486328
    8. '((' → logprob: -16.875019073486328
    9. ')(' → logprob: -17.750019073486328
    10. '(i' → logprob: -18.625019073486328

Token 58: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -7.719917630311102e-05
    2. '1' → logprob: -9.750077247619629
    3. '0' → logprob: -11.875077247619629
    4. ' ' → logprob: -12.750077247619629
    5. '100' → logprob: -13.250077247619629
    6. '-' → logprob: -13.500077247619629
    7. '   ' → logprob: -13.750077247619629
    8. '5' → logprob: -14.000077247619629
    9. ')' → logprob: -14.000077247619629
    10. '9' → logprob: -14.375077247619629

Token 59: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06673374027013779
    2. ':' → logprob: -3.5667338371276855
    3. ')' → logprob: -3.8167338371276855
    4. '+' → logprob: -4.3167338371276855
    5. ')]' → logprob: -7.5667338371276855
    6. ']:' → logprob: -8.316733360290527
    7. '):
' → logprob: -9.816733360290527
    8. ' ):' → logprob: -9.941733360290527
    9. '   ' → logprob: -11.066733360290527
    10. 'if' → logprob: -11.316733360290527

Token 60: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.806094229221344
    2. '        ' → logprob: -1.9310941696166992
    3. ':' → logprob: -2.306094169616699
    4. '       ' → logprob: -2.306094169616699
    5. '           ' → logprob: -2.806094169616699
    6. ' :' → logprob: -2.806094169616699
    7. '            ' → logprob: -3.431094169616699
    8. '               ' → logprob: -4.931094169616699
    9. '    ' → logprob: -5.056094169616699
    10. '[' → logprob: -5.181094169616699

Token 61: ' s' (ID: 265)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.8441901206970215
    2. ' if' → logprob: -1.2191901206970215
    3. 'res' → logprob: -1.8441901206970215
    4. 'if' → logprob: -2.8441901206970215
    5. ' for' → logprob: -3.5941901206970215
    6. 'for' → logprob: -4.3441901206970215
    7. '           ' → logprob: -4.5941901206970215
    8. '               ' → logprob: -5.2191901206970215
    9. 'print' → logprob: -7.2191901206970215
    10. ' print' → logprob: -7.8441901206970215

Token 62: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.2936724126338959
    2. ' =' → logprob: -1.6686724424362183
    3. '=' → logprob: -2.7936723232269287
    4. 'u' → logprob: -6.293672561645508
    5. 'umm' → logprob: -7.293672561645508
    6. '+=' → logprob: -8.543672561645508
    7. ' +=' → logprob: -8.668672561645508
    8. ' ' → logprob: -8.793672561645508
    9. '   ' → logprob: -9.043672561645508
    10. 'ums' → logprob: -9.043672561645508

Token 63: ' grid' (ID: 10586)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.33026939630508423
    2. ' ' → logprob: -2.3302693367004395
    3. 'grid' → logprob: -2.5802693367004395
    4. ' grid' → logprob: -2.5802693367004395
    5. ' i' → logprob: -4.5802693367004395
    6. 'i' → logprob: -4.9552693367004395
    7. 'sum' → logprob: -5.3302693367004395
    8. ' sum' → logprob: -5.5802693367004395
    9. ' j' → logprob: -6.7052693367004395
    10. '1' → logprob: -7.4552693367004395

Token 64: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0023534069769084454
    2. '[max' → logprob: -6.627353191375732
    3. '[' → logprob: -7.127353191375732
    4. '[j' → logprob: -8.75235366821289
    5. '[min' → logprob: -11.25235366821289
    6. '][' → logprob: -11.62735366821289
    7. '[
' → logprob: -11.87735366821289
    8. ' [' → logprob: -12.00235366821289
    9. '[s' → logprob: -12.50235366821289
    10. '   ' → logprob: -12.62735366821289

Token 65: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.05882701277732849
    2. '[j' → logprob: -3.0588269233703613
    3. ']' → logprob: -5.808826923370361
    4. '[max' → logprob: -5.933826923370361
    5. '[' → logprob: -6.058826923370361
    6. '[i' → logprob: -6.433826923370361
    7. '-' → logprob: -8.43382740020752
    8. ' ][' → logprob: -9.30882740020752
    9. '   ' → logprob: -9.80882740020752
    10. 'max' → logprob: -9.93382740020752

Token 66: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.246537173457909e-06
    2. ' j' → logprob: -13.125003814697266
    3. ' ' → logprob: -14.625003814697266
    4. '	j' → logprob: -14.875003814697266
    5. '   ' → logprob: -14.875003814697266
    6. 'max' → logprob: -15.000003814697266
    7. '0' → logprob: -15.250003814697266
    8. ']' → logprob: -16.625003814697266
    9. '    ' → logprob: -17.125003814697266
    10. ':j' → logprob: -17.250003814697266

Token 67: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07817543298006058
    2. '+' → logprob: -2.9531755447387695
    3. ']+' → logprob: -4.0781755447387695
    4. ' +' → logprob: -6.0781755447387695
    5. '-' → logprob: -6.9531755447387695
    6. ']*' → logprob: -7.0781755447387695
    7. ' ]' → logprob: -7.2031755447387695
    8. '*' → logprob: -8.07817554473877
    9. ']==' → logprob: -8.70317554473877
    10. ' *' → logprob: -9.20317554473877

Token 68: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4090605676174164
    2. ' if' → logprob: -1.6590605974197388
    3. '+' → logprob: -3.034060478210449
    4. ' ' → logprob: -3.784060478210449
    5. ' for' → logprob: -4.534060478210449
    6. '   ' → logprob: -4.534060478210449
    7. '
' → logprob: -4.659060478210449
    8. 'if' → logprob: -4.909060478210449
    9. '<|end|>' → logprob: -5.159060478210449
    10. '               ' → logprob: -5.409060478210449

Token 69: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4668119549751282
    2. 'if' (adapté à ' if') → logprob: -2.2168118953704834
    3. ' if' → logprob: -2.4668118953704834
    4. 'for' → logprob: -3.0918118953704834
    5. '+' → logprob: -3.2168118953704834
    6. '           ' → logprob: -3.5918118953704834
    7. ' for' → logprob: -3.8418118953704834
    8. '=' → logprob: -4.4668121337890625
    9. '   ' → logprob: -5.5918121337890625
    10. ':' → logprob: -5.7168121337890625

Token 70: ' i' (ID: 575)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.019126370549201965
    2. 's' → logprob: -4.1441264152526855
    3. ' j' → logprob: -6.6441264152526855
    4. ' ' → logprob: -6.7691264152526855
    5. ' i' → logprob: -7.8941264152526855
    6. 'j' → logprob: -8.894125938415527
    7. ' grid' → logprob: -10.144125938415527
    8. ' (' → logprob: -10.269125938415527
    9. 'i' → logprob: -11.144125938415527
    10. ' not' → logprob: -11.519125938415527

Token 71: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.18961627781391144
    2. '+' → logprob: -2.0646162033081055
    3. '>' → logprob: -3.3146162033081055
    4. ' +' → logprob: -5.8146162033081055
    5. '-' → logprob: -5.8146162033081055
    6. ' ' → logprob: -6.5646162033081055
    7. ' <' → logprob: -6.8146162033081055
    8. ' ==' → logprob: -7.6896162033081055
    9. ' >=' → logprob: -8.939616203308105
    10. ' -' → logprob: -9.439616203308105

Token 72: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06994055211544037
    2. ' ' → logprob: -2.6949405670166016
    3. '=' → logprob: -13.319940567016602
    4. '1' → logprob: -13.569940567016602
    5. '>' → logprob: -14.444940567016602
    6. '  ' → logprob: -16.1324405670166
    7. '_' → logprob: -16.1949405670166
    8. '   ' → logprob: -16.3199405670166
    9. 's' → logprob: -16.5074405670166
    10. '2' → logprob: -16.5699405670166

Token 73: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002998312993440777
    2. ' ' → logprob: -8.125299453735352
    3. '1' → logprob: -13.437799453735352
    4. '=' → logprob: -13.937799453735352
    5. '

' → logprob: -14.937799453735352
    6. '   ' → logprob: -16.00029945373535
    7. '5' → logprob: -16.06279945373535
    8. 's' → logprob: -16.06279945373535
    9. '2' → logprob: -16.12529945373535
    10. '>' → logprob: -16.62529945373535

Token 74: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.014648673124611378
    2. 'and' → logprob: -4.2646484375
    3. '            ' → logprob: -8.6396484375
    4. '               ' → logprob: -9.0146484375
    5. '           ' → logprob: -9.7646484375
    6. '                ' → logprob: -10.3896484375
    7. ' ' → logprob: -10.3896484375
    8. ':' → logprob: -10.5146484375
    9. '    ' → logprob: -12.0146484375
    10. '   ' → logprob: -12.1396484375

Token 75: '               ' (ID: 506)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.017778199166059494
    2. 'and' → logprob: -4.892778396606445
    3. ' res' → logprob: -5.142778396606445
    4. ':' → logprob: -6.642778396606445
    5. '               ' → logprob: -6.892778396606445
    6. ' ' → logprob: -7.142778396606445
    7. '            ' → logprob: -8.267778396606445
    8. ' :' → logprob: -8.642778396606445
    9. '                ' → logprob: -8.642778396606445
    10. ' s' → logprob: -9.142778396606445

Token 76: ' s' (ID: 265)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.059016045182943344
    2. 'res' → logprob: -3.559015989303589
    3. ' s' → logprob: -3.809015989303589
    4. 's' (adapté à ' s') → logprob: -5.059016227722168
    5. ' if' → logprob: -8.434016227722168
    6. ' ' → logprob: -10.684016227722168
    7. 'if' → logprob: -11.059016227722168
    8. ' and' → logprob: -11.309016227722168
    9. '                   ' → logprob: -11.559016227722168
    10. '+' → logprob: -11.809016227722168

Token 77: ' ^=' (ID: 79665)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.47628700733184814
    2. ' +=' → logprob: -0.9762870073318481
    3. '+' → logprob: -6.226286888122559
    4. ' +' → logprob: -8.976286888122559
    5. '=' → logprob: -9.726286888122559
    6. ' =' → logprob: -11.101286888122559
    7. ' -=' → logprob: -11.476286888122559
    8. ']+=' → logprob: -12.476286888122559
    9. ' ^=' → logprob: -12.726286888122559
    10. '>' → logprob: -13.351286888122559

Token 78: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8797354698181152
    2. ' grid' → logprob: -1.3797354698181152
    3. ' res' → logprob: -1.3797354698181152
    4. 'grid' → logprob: -2.5047354698181152
    5. ' ' → logprob: -10.004735946655273
    6. '   ' → logprob: -11.192235946655273
    7. 'gr' → logprob: -12.067235946655273
    8. ' ' → logprob: -12.692235946655273
    9. 's' → logprob: -12.754735946655273
    10. 'result' → logprob: -12.754735946655273

Token 79: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.895480277715251e-06
    2. 'i' → logprob: -12.000008583068848
    3. '[' → logprob: -13.625008583068848
    4. '[j' → logprob: -14.500008583068848
    5. '```' → logprob: -14.500008583068848
    6. '   ' → logprob: -15.500008583068848
    7. ' [' → logprob: -17.000009536743164
    8. '`' → logprob: -17.250009536743164
    9. '][' → logprob: -17.625009536743164
    10. ' ' → logprob: -17.875009536743164

Token 80: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.694766489090398e-05
    2. ' -' → logprob: -9.625066757202148
    3. '1' → logprob: -15.250066757202148
    4. '][' → logprob: -15.375066757202148
    5. ' ' → logprob: -16.12506675720215
    6. '[' → logprob: -16.25006675720215
    7. '   ' → logprob: -17.37506675720215
    8. '```' → logprob: -17.62506675720215
    9. '−' → logprob: -17.62506675720215
    10. '[j' → logprob: -17.87506675720215

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -11.37501335144043
    3. '```' → logprob: -14.50001335144043
    4. '   ' → logprob: -14.87501335144043
    5. 'j' → logprob: -15.37501335144043
    6. '][' → logprob: -15.75001335144043
    7. '           ' → logprob: -16.68751335144043
    8. '       ' → logprob: -17.18751335144043
    9. ']' → logprob: -17.31251335144043
    10. '-' → logprob: -17.37501335144043

Token 82: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00024715426843613386
    2. ' ][' → logprob: -9.25024700164795
    3. '[j' → logprob: -9.50024700164795
    4. ']' → logprob: -10.12524700164795
    5. '   ' → logprob: -10.75024700164795
    6. ' ' → logprob: -12.37524700164795
    7. '[' → logprob: -13.00024700164795
    8. '```' → logprob: -13.37524700164795
    9. 'j' → logprob: -14.00024700164795
    10. '    ' → logprob: -14.37524700164795

Token 83: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.9743012671824545e-05
    2. ' j' → logprob: -10.875020027160645
    3. '	j' → logprob: -15.125020027160645
    4. ' ' → logprob: -16.000019073486328
    5. '   ' → logprob: -16.000019073486328
    6. '0' → logprob: -16.250019073486328
    7. '10' → logprob: -16.750019073486328
    8. '```' → logprob: -17.125019073486328
    9. ',j' → logprob: -17.500019073486328
    10. '[j' → logprob: -17.500019073486328

Token 84: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0018310615560039878
    2. ' ]' → logprob: -6.3768310546875
    3. '           ' → logprob: -9.8768310546875
    4. ']
' → logprob: -10.5018310546875
    5. '   ' → logprob: -11.8768310546875
    6. ' ' → logprob: -12.0018310546875
    7. '               ' → logprob: -12.1268310546875
    8. '       ' → logprob: -12.2518310546875
    9. '];' → logprob: -12.5018310546875
    10. ']^' → logprob: -12.8768310546875

Token 85: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1281513273715973
    2. '<|end|>' → logprob: -2.3781514167785645
    3. ' ' → logprob: -3.7531514167785645
    4. '            ' → logprob: -6.8781514167785645
    5. '<|end|>' → logprob: -7.1281514167785645
    6. '            
' → logprob: -7.6281514167785645
    7. '          ' → logprob: -7.8781514167785645
    8. '               ' → logprob: -8.503150939941406
    9. ' 
' → logprob: -8.628150939941406
    10. '    ' → logprob: -8.628150939941406

Token 86: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00711079454049468
    2. ' if' → logprob: -5.382110595703125
    3. 'if' (adapté à ' if') → logprob: -6.507110595703125
    4. ' ' → logprob: -7.507110595703125
    5. '            ' → logprob: -9.257110595703125
    6. '<|end|>' → logprob: -9.757110595703125
    7. 's' → logprob: -9.882110595703125
    8. '            
' → logprob: -9.882110595703125
    9. '          ' → logprob: -10.132110595703125
    10. '    ' → logprob: -10.507110595703125

Token 87: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.25871172547340393
    2. 'j' → logprob: -1.5087116956710815
    3. ' i' → logprob: -5.258711814880371
    4. 'i' → logprob: -6.508711814880371
    5. '    ' → logprob: -10.258711814880371
    6. '   ' → logprob: -11.258711814880371
    7. '	j' → logprob: -11.758711814880371
    8. ' ' → logprob: -12.508711814880371
    9. ' ' → logprob: -12.883711814880371
    10. '  ' → logprob: -13.758711814880371

Token 88: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.005236479919403791
    2. '>' → logprob: -5.255236625671387
    3. ' ' → logprob: -13.005236625671387
    4. ' ' → logprob: -15.255236625671387
    5. '0' → logprob: -17.13023567199707
    6. '<|end|>' → logprob: -17.38023567199707
    7. '   ' → logprob: -17.50523567199707
    8. '```' → logprob: -17.75523567199707
    9. '<|end|>' → logprob: -17.88023567199707
    10. ' <' → logprob: -18.25523567199707

Token 89: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009136092266999185
    2. ' ' → logprob: -7.000913619995117
    3. '   ' → logprob: -13.750913619995117
    4. '  ' → logprob: -15.688413619995117
    5. '>' → logprob: -15.813413619995117
    6. '```' → logprob: -16.250913619995117
    7. '    ' → logprob: -16.625913619995117
    8. '=' → logprob: -16.750913619995117
    9. '           ' → logprob: -16.750913619995117
    10. '                   ' → logprob: -17.125913619995117

Token 90: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005557744298130274
    2. ' ' → logprob: -7.500555992126465
    3. '   ' → logprob: -13.688055992126465
    4. '  ' → logprob: -15.438055992126465
    5. '```' → logprob: -15.938055992126465
    6. '    ' → logprob: -16.06305503845215
    7. '1' → logprob: -16.12555503845215
    8. '>' → logprob: -16.37555503845215
    9. 's' → logprob: -16.56305503845215
    10. '=' → logprob: -16.75055503845215

Token 91: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20821085572242737
    2. ':
' → logprob: -1.708210825920105
    3. '               ' → logprob: -5.4582109451293945
    4. '           ' → logprob: -6.0832109451293945
    5. '<|end|>' → logprob: -10.208210945129395
    6. ' and' → logprob: -10.333210945129395
    7. 's' → logprob: -10.958210945129395
    8. '       ' → logprob: -11.208210945129395
    9. 'and' → logprob: -11.333210945129395
    10. '):
' → logprob: -11.333210945129395

Token 92: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3562719225883484
    2. ' s' → logprob: -1.3562719821929932
    3. 's' → logprob: -3.731271982192993
    4. '           ' → logprob: -4.231271743774414
    5. ' ' → logprob: -6.731271743774414
    6. '<|end|>' → logprob: -6.731271743774414
    7. '                   ' → logprob: -7.606271743774414
    8. '                       ' → logprob: -7.981271743774414
    9. '```' → logprob: -9.231271743774414
    10. '              ' → logprob: -9.856271743774414

Token 93: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5231579542160034
    2. 's' (adapté à ' s') → logprob: -0.8981579542160034
    3. ' ' → logprob: -11.023158073425293
    4. '```' → logprob: -12.648158073425293
    5. '                   ' → logprob: -13.023158073425293
    6. '(s' → logprob: -13.273158073425293
    7. '`s' → logprob: -13.273158073425293
    8. '               ' → logprob: -13.273158073425293
    9. '           ' → logprob: -13.898158073425293
    10. ' ' → logprob: -14.148158073425293

Token 94: ' ^=' (ID: 79665)
  Prédit: ' ^='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.009796937927603722
    2. '^' → logprob: -4.634797096252441
    3. ' ^' → logprob: -10.134797096252441
    4. '=' → logprob: -14.259797096252441
    5. ' ' → logprob: -15.134797096252441
    6. ' ' → logprob: -16.259796142578125
    7. '_^' → logprob: -16.509796142578125
    8. ''^' → logprob: -17.009796142578125
    9. 's' → logprob: -17.134796142578125
    10. '^^' → logprob: -17.759796142578125

Token 95: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.002477200934663415
    2. 'res' → logprob: -6.002477169036865
    3. ' ' → logprob: -14.627477645874023
    4. '(res' → logprob: -14.752477645874023
    5. ' ' → logprob: -14.877477645874023
    6. 's' → logprob: -15.752477645874023
    7. '	res' → logprob: -16.377477645874023
    8. '$res' → logprob: -17.627477645874023
    9. '_res' → logprob: -18.252477645874023
    10. '    ' → logprob: -18.377477645874023

Token 96: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.200166469876422e-06
    2. '[' → logprob: -12.625004768371582
    3. '[j' → logprob: -13.875004768371582
    4. '```' → logprob: -14.625004768371582
    5. '[I' → logprob: -15.625004768371582
    6. 'i' → logprob: -16.1250057220459
    7. '[
' → logprob: -16.3750057220459
    8. ' [' → logprob: -17.1250057220459
    9. '[int' → logprob: -17.5000057220459
    10. '[current' → logprob: -18.0000057220459

Token 97: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.43712642788887024
    2. '][' → logprob: -1.4371263980865479
    3. '-' → logprob: -2.187126398086548
    4. '[j' → logprob: -5.812126636505127
    5. '[' → logprob: -6.937126636505127
    6. '[I' → logprob: -9.062126159667969
    7. '   ' → logprob: -10.312126159667969
    8. ' [' → logprob: -10.437126159667969
    9. ' -' → logprob: -10.562126159667969
    10. '1' → logprob: -10.562126159667969

Token 98: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.069664333248511e-05
    2. ' j' → logprob: -10.875020980834961
    3. '   ' → logprob: -13.625020980834961
    4. ' ' → logprob: -15.375020980834961
    5. '  ' → logprob: -16.75002098083496
    6. '     ' → logprob: -16.87502098083496
    7. '       ' → logprob: -17.12502098083496
    8. '-' → logprob: -17.25002098083496
    9. '           ' → logprob: -17.37502098083496
    10. '	j' → logprob: -17.62502098083496

Token 99: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.4849443838757e-06
    2. ' -' → logprob: -12.375004768371582
    3. '1' → logprob: -16.375003814697266
    4. '[j' → logprob: -17.250003814697266
    5. '−' → logprob: -19.125003814697266
    6. '[' → logprob: -19.500003814697266
    7. '   ' → logprob: -19.500003814697266
    8. ']' → logprob: -20.000003814697266
    9. ' ' → logprob: -20.125003814697266
    10. '```' → logprob: -20.125003814697266

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -13.000003814697266
    3. ']' → logprob: -14.750003814697266
    4. '-' → logprob: -15.000003814697266
    5. '   ' → logprob: -15.625003814697266
    6. '```' → logprob: -16.000003814697266
    7. 'j' → logprob: -17.750003814697266
    8. '１' → logprob: -17.875003814697266
    9. '0' → logprob: -18.562503814697266
    10. '  ' → logprob: -18.625003814697266

Token 101: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5804882049560547
    2. '           ' → logprob: -0.8304882049560547
    3. '<|end|>' → logprob: -5.955488204956055
    4. ')' → logprob: -7.080488204956055
    5. ']
' → logprob: -7.705488204956055
    6. '               ' → logprob: -8.455488204956055
    7. '       ' → logprob: -8.580488204956055
    8. '<|end|>' → logprob: -9.205488204956055
    9. ' ]' → logprob: -10.205488204956055
    10. ')]' → logprob: -10.830488204956055

Token 102: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003102969378232956
    2. '               ' → logprob: -6.503102779388428
    3. '            ' → logprob: -7.753102779388428
    4. '```' → logprob: -8.253103256225586
    5. '            
' → logprob: -8.628103256225586
    6. ' ' → logprob: -8.878103256225586
    7. '          ' → logprob: -8.878103256225586
    8. '<|end|>' → logprob: -9.003103256225586
    9. '       ' → logprob: -9.253103256225586
    10. '   ' → logprob: -10.253103256225586

Token 103: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030961541458964348
    2. ' if' → logprob: -3.780961513519287
    3. 'if' (adapté à ' if') → logprob: -4.905961513519287
    4. '               ' → logprob: -9.155961990356445
    5. ' ' → logprob: -9.905961990356445
    6. '       ' → logprob: -10.530961990356445
    7. '```' → logprob: -10.655961990356445
    8. '   ' → logprob: -10.905961990356445
    9. '                   ' → logprob: -11.405961990356445
    10. '            
' → logprob: -11.905961990356445

Token 104: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04863062873482704
    2. ' i' → logprob: -3.048630714416504
    3. '   ' → logprob: -10.798630714416504
    4. '	i' → logprob: -11.548630714416504
    5. '(i' → logprob: -11.548630714416504
    6. '           ' → logprob: -13.423630714416504
    7. ' ' → logprob: -14.173630714416504
    8. '  ' → logprob: -14.798630714416504
    9. '{i' → logprob: -15.423630714416504
    10. '    ' → logprob: -15.673630714416504

Token 105: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.020619433373212814
    2. '>' → logprob: -3.8956193923950195
    3. ' ' → logprob: -9.77061939239502
    4. '<|end|>' → logprob: -12.39561939239502
    5. '-' → logprob: -12.52061939239502
    6. '   ' → logprob: -12.77061939239502
    7. '<|end|>' → logprob: -13.52061939239502
    8. '1' → logprob: -13.64561939239502
    9. '0' → logprob: -14.02061939239502
    10. '  ' → logprob: -14.02061939239502

Token 106: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.875021934509277
    4. '1' → logprob: -17.87502098083496
    5. '-' → logprob: -19.00002098083496
    6. '           ' → logprob: -20.25002098083496
    7. '>' → logprob: -20.37502098083496
    8. '```' → logprob: -20.50002098083496
    9. '       ' → logprob: -20.75002098083496
    10. '=' → logprob: -20.87502098083496

Token 107: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.4060561776859686e-05
    2. '1' → logprob: -10.625043869018555
    3. ' ' → logprob: -10.875043869018555
    4. '   ' → logprob: -14.250043869018555
    5. '-' → logprob: -16.625043869018555
    6. '```' → logprob: -19.125043869018555
    7. '           ' → logprob: -19.375043869018555
    8. '01' → logprob: -19.500043869018555
    9. '       ' → logprob: -19.750043869018555
    10. '  ' → logprob: -20.125043869018555

Token 108: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.43299970030784607
    2. ' and' → logprob: -1.0579997301101685
    3. '           ' → logprob: -6.182999610900879
    4. '               ' → logprob: -6.307999610900879
    5. ':' → logprob: -9.057999610900879
    6. '-' → logprob: -9.182999610900879
    7. ' ' → logprob: -9.182999610900879
    8. '   ' → logprob: -10.182999610900879
    9. '                   ' → logprob: -11.932999610900879
    10. '       ' → logprob: -12.182999610900879

Token 109: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.12695971131324768
    2. ' j' → logprob: -2.126959800720215
    3. '   ' → logprob: -10.626959800720215
    4. '	j' → logprob: -12.376959800720215
    5. '    ' → logprob: -13.501959800720215
    6. '           ' → logprob: -14.126959800720215
    7. ' ' → logprob: -14.501959800720215
    8. '  ' → logprob: -15.001959800720215
    9. '       ' → logprob: -16.3769588470459
    10. '     ' → logprob: -17.6269588470459

Token 110: ' >' (ID: 1424)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.706785261631012
    2. ' >' → logprob: -1.2067852020263672
    3. '>' → logprob: -1.5817852020263672
    4. ' -' → logprob: -7.206785202026367
    5. '0' → logprob: -7.456785202026367
    6. '   ' → logprob: -8.331785202026367
    7. ' ' → logprob: -8.581785202026367
    8. '```' → logprob: -8.831785202026367
    9. '           ' → logprob: -10.331785202026367
    10. '<|end|>' → logprob: -10.956785202026367

Token 111: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004628057591617107
    2. ' ' → logprob: -5.3796281814575195
    3. '   ' → logprob: -12.75462818145752
    4. '=' → logprob: -12.75462818145752
    5. '1' → logprob: -13.87962818145752
    6. '```' → logprob: -14.50462818145752
    7. '-' → logprob: -16.004627227783203
    8. '           ' → logprob: -16.129627227783203
    9. '  ' → logprob: -16.254627227783203
    10. '     ' → logprob: -17.379627227783203

Token 112: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. '```' → logprob: -16.750001907348633
    4. '   ' → logprob: -17.000001907348633
    5. '۰' → logprob: -18.687501907348633
    6. '-' → logprob: -19.062501907348633
    7. '1' → logprob: -19.562501907348633
    8. 'j' → logprob: -19.750001907348633
    9. '=' → logprob: -19.750001907348633
    10. '(' → logprob: -19.937501907348633

Token 113: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11531088501214981
    2. ':
' → logprob: -2.2403109073638916
    3. '               ' → logprob: -6.1153106689453125
    4. '           ' → logprob: -8.490310668945312
    5. ':

' → logprob: -10.865310668945312
    6. 's' → logprob: -10.865310668945312
    7. '):
' → logprob: -12.115310668945312
    8. '       ' → logprob: -12.240310668945312
    9. '                   ' → logprob: -12.615310668945312
    10. ':
' → logprob: -12.990310668945312

Token 114: '               ' (ID: 506)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3347148299217224
    2. ' s' → logprob: -1.4597148895263672
    3. '           ' → logprob: -3.084714889526367
    4. '               ' → logprob: -5.459714889526367
    5. ' ' → logprob: -6.334714889526367
    6. '<|end|>' → logprob: -8.584714889526367
    7. '       ' → logprob: -9.584714889526367
    8. '   ' → logprob: -10.459714889526367
    9. '          ' → logprob: -10.834714889526367
    10. '                       ' → logprob: -11.084714889526367

Token 115: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.07889463007450104
    2. ' s' → logprob: -2.57889461517334
    3. ' ' → logprob: -13.82889461517334
    4. '           ' → logprob: -13.82889461517334
    5. '<|end|>' → logprob: -13.95389461517334
    6. '               ' → logprob: -14.57889461517334
    7. '                   ' → logprob: -14.70389461517334
    8. '`s' → logprob: -14.82889461517334
    9. '	s' → logprob: -15.32889461517334
    10. '   ' → logprob: -15.82889461517334

Token 116: ' ^=' (ID: 79665)
  Prédit: ' ^='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.47415128350257874
    2. '^' → logprob: -0.9741512537002563
    3. ' ^' → logprob: -9.599151611328125
    4. '=' → logprob: -12.849151611328125
    5. ' ' → logprob: -13.224151611328125
    6. 's' → logprob: -14.474151611328125
    7. '^^' → logprob: -14.724151611328125
    8. '_^' → logprob: -15.349151611328125
    9. ''^' → logprob: -15.724151611328125
    10. 'xor' → logprob: -15.724151611328125

Token 117: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.008614808320999146
    2. ' res' → logprob: -4.758615016937256
    3. '               ' → logprob: -16.633615493774414
    4. '                   ' → logprob: -16.883615493774414
    5. '(res' → logprob: -16.883615493774414
    6. '           ' → logprob: -17.008615493774414
    7. '	res' → logprob: -17.883615493774414
    8. '$res' → logprob: -18.758615493774414
    9. '_res' → logprob: -19.133615493774414
    10. '                       ' → logprob: -19.758615493774414

Token 118: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.318681188422488e-05
    2. 'i' → logprob: -11.50001335144043
    3. '[' → logprob: -12.87501335144043
    4. '[I' → logprob: -14.87501335144043
    5. '[
' → logprob: -17.62501335144043
    6. '```' → logprob: -18.00001335144043
    7. '(i' → logprob: -18.00001335144043
    8. '{i' → logprob: -18.37501335144043
    9. '\[' → logprob: -18.50001335144043
    10. '<|end|>' → logprob: -18.87501335144043

Token 119: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.534558552724775e-05
    2. ' -' → logprob: -10.625025749206543
    3. '```' → logprob: -14.750025749206543
    4. '1' → logprob: -15.250025749206543
    5. '[' → logprob: -15.750025749206543
    6. ' ' → logprob: -16.500024795532227
    7. '–' → logprob: -17.375024795532227
    8. '   ' → logprob: -17.750024795532227
    9. '−' → logprob: -18.000024795532227
    10. '           ' → logprob: -18.125024795532227

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -17.375
    4. '```' → logprob: -18.5
    5. '<|end|>' → logprob: -19.25
    6. '-' → logprob: -19.375
    7. '
' → logprob: -19.5625
    8. '  ' → logprob: -20.4375
    9. '১' → logprob: -20.5
    10. '۱' → logprob: -20.5

Token 121: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03579562529921532
    2. '[j' → logprob: -3.5357956886291504
    3. '[' → logprob: -5.16079568862915
    4. '[i' → logprob: -9.160795211791992
    5. '1' → logprob: -10.035795211791992
    6. '<|end|>' → logprob: -10.035795211791992
    7. ']' → logprob: -10.660795211791992
    8. ' ][' → logprob: -10.785795211791992
    9. '"][' → logprob: -11.285795211791992
    10. '```' → logprob: -11.410795211791992

Token 122: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.4849443838757e-06
    2. ' j' → logprob: -12.375004768371582
    3. '   ' → logprob: -15.500004768371582
    4. '	j' → logprob: -17.500003814697266
    5. ' ' → logprob: -19.000003814697266
    6. '[j' → logprob: -19.000003814697266
    7. '1' → logprob: -19.000003814697266
    8. '    ' → logprob: -19.250003814697266
    9. '           ' → logprob: -19.250003814697266
    10. '       ' → logprob: -19.500003814697266

Token 123: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.368984107510187e-05
    2. ' -' → logprob: -10.375033378601074
    3. '[' → logprob: -13.500033378601074
    4. '1' → logprob: -13.875033378601074
    5. '–' → logprob: -16.87503433227539
    6. '[j' → logprob: -18.00003433227539
    7. '−' → logprob: -18.12503433227539
    8. '<|end|>' → logprob: -18.12503433227539
    9. ']' → logprob: -18.50003433227539
    10. '[-' → logprob: -18.75003433227539

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.12500286102295
    3. '   ' → logprob: -15.37500286102295
    4. '```' → logprob: -16.250001907348633
    5. ']' → logprob: -17.687501907348633
    6. '-' → logprob: -18.250001907348633
    7. '
' → logprob: -18.500001907348633
    8. '  ' → logprob: -18.562501907348633
    9. '           ' → logprob: -18.812501907348633
    10. '    ' → logprob: -19.062501907348633

Token 125: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000762691895943135
    2. ']
' → logprob: -7.500762462615967
    3. '           ' → logprob: -8.500762939453125
    4. ' ]' → logprob: -13.125762939453125
    5. ']

' → logprob: -13.250762939453125
    6. '               ' → logprob: -14.125762939453125
    7. ')]' → logprob: -15.000762939453125
    8. ']
' → logprob: -15.125762939453125
    9. ']]' → logprob: -15.125762939453125
    10. '       ' → logprob: -15.250762939453125

Token 126: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004765103571116924
    2. '       ' → logprob: -6.004765033721924
    3. '   ' → logprob: -6.879765033721924
    4. ' res' → logprob: -7.754765033721924
    5. '<|end|>' → logprob: -7.879765033721924
    6. 'res' → logprob: -8.754765510559082
    7. '[' → logprob: -9.629765510559082
    8. '               ' → logprob: -9.879765510559082
    9. '(res' → logprob: -10.379765510559082
    10. '
' → logprob: -10.504765510559082

Token 127: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.34811243414878845
    2. '           ' → logprob: -1.5981124639511108
    3. ' res' → logprob: -2.8481123447418213
    4. 'print' → logprob: -4.0981125831604
    5. '       ' → logprob: -4.9731125831604
    6. '   ' → logprob: -5.3481125831604
    7. '               ' → logprob: -6.0981125831604
    8. '[' → logprob: -6.3481125831604
    9. '                   ' → logprob: -7.5981125831604
    10. ' print' → logprob: -9.223112106323242

Token 128: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.248469718324486e-05
    2. '[I' → logprob: -11.250022888183594
    3. '[' → logprob: -12.375022888183594
    4. '```' → logprob: -12.875022888183594
    5. '[j' → logprob: -14.250022888183594
    6. '[int' → logprob: -14.250022888183594
    7. '][' → logprob: -14.750022888183594
    8. '\[' → logprob: -15.750022888183594
    9. '   ' → logprob: -16.250022888183594
    10. ' [' → logprob: -16.375022888183594

Token 129: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0011997550027444959
    2. '[j' → logprob: -7.751199722290039
    3. ']' → logprob: -7.876199722290039
    4. '[i' → logprob: -8.501199722290039
    5. '[' → logprob: -8.751199722290039
    6. ' ][' → logprob: -11.501199722290039
    7. '```' → logprob: -12.001199722290039
    8. '[I' → logprob: -13.126199722290039
    9. '"][' → logprob: -13.251199722290039
    10. ')[' → logprob: -14.126199722290039

Token 130: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.1008713702030946e-06
    2. '10' → logprob: -13.500001907348633
    3. ' j' → logprob: -14.750001907348633
    4. ']' → logprob: -16.375001907348633
    5. '][' → logprob: -17.375001907348633
    6. '   ' → logprob: -18.000001907348633
    7. '```' → logprob: -18.375001907348633
    8. ' ' → logprob: -18.875001907348633
    9. '[j' → logprob: -19.375001907348633
    10. 'J' → logprob: -19.625001907348633

Token 131: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003994934726506472
    2. '=' → logprob: -6.003994941711426
    3. ']=' → logprob: -6.503994941711426
    4. ' =' → logprob: -11.878994941711426
    5. ' ]' → logprob: -12.003994941711426
    6. ')' → logprob: -12.378994941711426
    7. '[' → logprob: -13.628994941711426
    8. ']+=' → logprob: -14.503994941711426
    9. 's' → logprob: -14.628994941711426
    10. ')]' → logprob: -15.253994941711426

Token 132: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889628410339355
    2. ' =' → logprob: -2.5788962841033936
    3. '[' → logprob: -12.578896522521973
    4. ' ^=' → logprob: -13.453896522521973
    5. 's' → logprob: -14.953896522521973
    6. ' |=' → logprob: -15.078896522521973
    7. '.=' → logprob: -15.328896522521973
    8. '=s' → logprob: -15.328896522521973
    9. '+=' → logprob: -15.453896522521973
    10. ' +=' → logprob: -15.953896522521973

Token 133: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02993411011993885
    2. ' s' → logprob: -3.5299341678619385
    3. '1' → logprob: -8.65493392944336
    4. '0' → logprob: -12.27993392944336
    5. ' ' → logprob: -12.77993392944336
    6. ' ' → logprob: -14.40493392944336
    7. '(s' → logprob: -14.77993392944336
    8. 'int' → logprob: -15.71743392944336
    9. '	s' → logprob: -15.71743392944336
    10. 'grid' → logprob: -16.27993392944336

Token 134: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 135: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02635405957698822
    2. '   ' → logprob: -4.27635383605957
    3. ' print' → logprob: -4.52635383605957
    4. '           ' → logprob: -7.15135383605957
    5. ' for' → logprob: -8.90135383605957
    6. 'for' → logprob: -8.90135383605957
    7. '       ' → logprob: -8.90135383605957
    8. '<|end|>' → logprob: -10.52635383605957
    9. '```' → logprob: -11.02635383605957
    10. 'if' → logprob: -11.15135383605957

Token 136: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2963528037071228
    2. 'print' → logprob: -1.4213528633117676
    3. 'if' → logprob: -5.421352863311768
    4. 'count' → logprob: -5.546352863311768
    5. 'ans' → logprob: -6.046352863311768
    6. 'valid' → logprob: -6.796352863311768
    7. 'cnt' → logprob: -7.046352863311768
    8. 'answer' → logprob: -7.421352863311768
    9. 'ok' → logprob: -7.921352863311768
    10. 'flag' → logprob: -8.17135238647461

Token 137: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.012881124392151833
    2. ' row' → logprob: -4.762881278991699
    3. 'i' → logprob: -5.637881278991699
    4. ' ' → logprob: -7.887881278991699
    5. ' _' → logprob: -8.6378812789917
    6. 'row' → logprob: -9.7628812789917
    7. ' j' → logprob: -10.1378812789917
    8. '_' → logprob: -10.7628812789917
    9. '_i' → logprob: -12.1378812789917
    10. '  ' → logprob: -12.6378812789917

Token 138: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011135188862681389
    2. 'in' → logprob: -4.511135101318359
    3. ' ' → logprob: -9.76113510131836
    4. '<|end|>' → logprob: -10.88613510131836
    5. '	in' → logprob: -12.01113510131836
    6. '0' → logprob: -13.63613510131836
    7. '    ' → logprob: -14.76113510131836
    8. '   ' → logprob: -14.76113510131836
    9. ' ' → logprob: -15.19863510131836
    10. '(' → logprob: -15.51113510131836

Token 139: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002627662615850568
    2. ' range' → logprob: -8.250263214111328
    3. 'res' → logprob: -14.000263214111328
    4. '10' → logprob: -15.000263214111328
    5. '```' → logprob: -15.125263214111328
    6. '(range' → logprob: -16.875263214111328
    7. ')' → logprob: -17.500263214111328
    8. 'ran' → logprob: -18.500263214111328
    9. '`' → logprob: -18.750263214111328
    10. '	range' → logprob: -18.750263214111328

Token 140: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001749351795297116
    2. '(range' → logprob: -9.000174522399902
    3. 'range' → logprob: -10.375174522399902
    4. ' range' → logprob: -11.250174522399902
    5. '10' → logprob: -11.875174522399902
    6. '(
' → logprob: -15.750174522399902
    7. '```' → logprob: -17.12517547607422
    8. ')' → logprob: -17.75017547607422
    9. ' (' → logprob: -18.75017547607422
    10. 'Range' → logprob: -19.00017547607422

Token 141: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -4.961759259458631e-06
    2. 'range' → logprob: -12.625004768371582
    3. '0' → logprob: -13.875004768371582
    4. ' ' → logprob: -14.750004768371582
    5. '   ' → logprob: -16.2500057220459
    6. '1' → logprob: -16.5000057220459
    7. '```' → logprob: -17.0000057220459
    8. '(' → logprob: -17.1250057220459
    9. '
' → logprob: -18.1250057220459
    10. '100' → logprob: -18.1250057220459

Token 142: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006258784793317318
    2. ':' → logprob: -5.881258964538574
    3. '):
' → logprob: -6.131258964538574
    4. ')' → logprob: -7.381258964538574
    5. '():' → logprob: -8.006258964538574
    6. '+' → logprob: -9.506258964538574
    7. '   ' → logprob: -9.881258964538574
    8. '<|end|>' → logprob: -10.256258964538574
    9. ']:' → logprob: -10.631258964538574
    10. '}:' → logprob: -10.756258964538574

Token 143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002737330214586109
    2. '   ' → logprob: -8.250273704528809
    3. ' print' → logprob: -11.750273704528809
    4. 'print' → logprob: -12.750273704528809
    5. '<|end|>' → logprob: -14.125273704528809
    6. '	' → logprob: -16.000274658203125
    7. '           ' → logprob: -16.000274658203125
    8. '```' → logprob: -16.125274658203125
    9. '	print' → logprob: -16.500274658203125
    10. '[' → logprob: -16.625274658203125

Token 144: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.6171525716781616
    2. ' print' → logprob: -0.8671525716781616
    3. '   ' → logprob: -3.242152690887451
    4. '       ' → logprob: -6.867152690887451
    5. ' for' → logprob: -8.492152214050293
    6. 'for' → logprob: -10.617152214050293
    7. '	print' → logprob: -10.992152214050293
    8. '    ' → logprob: -12.742152214050293
    9. '```' → logprob: -12.992152214050293
    10. ' ' → logprob: -13.992152214050293

Token 145: '('' (ID: 706)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.40884241461753845
    2. '(' → logprob: -1.4088424444198608
    3. '('' → logprob: -2.4088423252105713
    4. '("' → logprob: -6.78384256362915
    5. '()' → logprob: -10.658842086791992
    6. '(res' → logprob: -10.658842086791992
    7. '(*(' → logprob: -11.033842086791992
    8. '(
' → logprob: -11.283842086791992
    9. '(*)' → logprob: -12.033842086791992
    10. '("("' → logprob: -12.533842086791992

Token 146: ' '.' (ID: 12662)
  Prédit: ' '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '.' → logprob: -0.3602461516857147
    2. ''.' → logprob: -1.360246181488037
    3. ''' → logprob: -3.110246181488037
    4. '''.' → logprob: -6.985246181488037
    5. ''*' → logprob: -8.235245704650879
    6. ' '' → logprob: -10.235245704650879
    7. ' ''.' → logprob: -10.485245704650879
    8. '".' → logprob: -10.735245704650879
    9. '''' → logprob: -10.985245704650879
    10. ' ".' → logprob: -12.610245704650879

Token 147: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -5.200166469876422e-06
    2. 'print' → logprob: -13.250004768371582
    3. 'j' → logprob: -13.750004768371582
    4. '.join' → logprob: -14.125004768371582
    5. 'jo' → logprob: -14.625004768371582
    6. ' join' → logprob: -14.875004768371582
    7. '```' → logprob: -15.250004768371582
    8. ').' → logprob: -15.750004768371582
    9. 'write' → logprob: -16.0000057220459
    10. ')' → logprob: -16.1250057220459

Token 148: '(str' (ID: 7946)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.003388502635061741
    2. 'map' → logprob: -6.003388404846191
    3. '(str' → logprob: -7.003388404846191
    4. 'str' → logprob: -12.753388404846191
    5. ' map' → logprob: -14.628388404846191
    6. '.map' → logprob: -16.753389358520508
    7. '	map' → logprob: -16.753389358520508
    8. '```' → logprob: -17.003389358520508
    9. '(' → logprob: -17.253389358520508
    10. ',map' → logprob: -17.253389358520508

Token 149: '(x' (ID: 4061)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.03864770010113716
    2. '(x' → logprob: -3.2886476516723633
    3. '(num' → logprob: -7.788647651672363
    4. '(cell' → logprob: -8.788647651672363
    5. 'res' → logprob: -11.538647651672363
    6. '(c' → logprob: -11.788647651672363
    7. '(s' → logprob: -12.038647651672363
    8. '(v' → logprob: -12.038647651672363
    9. '(val' → logprob: -12.788647651672363
    10. '(e' → logprob: -13.788647651672363

Token 150: ')' (ID: 8)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.03405584767460823
    2. ')' → logprob: -3.4090559482574463
    3. '(x' → logprob: -8.159055709838867
    4. 'for' → logprob: -9.909055709838867
    5. 'res' → logprob: -10.159055709838867
    6. '   ' → logprob: -11.534055709838867
    7. ' for' → logprob: -12.409055709838867
    8. '(i' → logprob: -12.534055709838867
    9. '=res' → logprob: -12.659055709838867
    10. ' ' → logprob: -13.284055709838867

Token 151: ' for' (ID: 395)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0001830410328693688
    2. ')' → logprob: -8.75018310546875
    3. 'res' → logprob: -10.75018310546875
    4. 'for' → logprob: -13.75018310546875
    5. '   ' → logprob: -14.25018310546875
    6. ' (' → logprob: -14.75018310546875
    7. ' res' → logprob: -15.37518310546875
    8. '(' → logprob: -15.87518310546875
    9. '=res' → logprob: -16.12518310546875
    10. '(i' → logprob: -16.37518310546875

Token 152: ' x' (ID: 1215)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5789265036582947
    2. ' res' → logprob: -0.8289265036582947
    3. ' in' → logprob: -6.4539265632629395
    4. 'in' → logprob: -7.2039265632629395
    5. 'row' → logprob: -8.203926086425781
    6. ' row' → logprob: -8.453926086425781
    7. '(res' → logprob: -8.828926086425781
    8. 'x' → logprob: -11.078926086425781
    9. ')' → logprob: -12.078926086425781
    10. ' x' → logprob: -12.578926086425781

Token 153: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17975617945194244
    2. 'in' → logprob: -1.8047561645507812
    3. ')' → logprob: -12.429756164550781
    4. 'res' → logprob: -13.304756164550781
    5. '   ' → logprob: -13.304756164550781
    6. '[' → logprob: -13.554756164550781
    7. '  ' → logprob: -14.804756164550781
    8. ' res' → logprob: -14.804756164550781
    9. ' ' → logprob: -15.304756164550781
    10. '[i' → logprob: -15.429756164550781

Token 154: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.023246407508850098
    2. ' res' → logprob: -3.7732462882995605
    3. '   ' → logprob: -14.273246765136719
    4. '(res' → logprob: -15.273246765136719
    5. ')' → logprob: -16.64824676513672
    6. '	res' → logprob: -16.89824676513672
    7. 'row' → logprob: -18.77324676513672
    8. 'range' → logprob: -18.77324676513672
    9. '$res' → logprob: -19.27324676513672
    10. ' ' → logprob: -19.39824676513672

Token 155: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.375000953674316
    3. '```' → logprob: -19.25
    4. '[j' → logprob: -19.875
    5. '[I' → logprob: -20.125
    6. '   ' → logprob: -20.125
    7. 'i' → logprob: -20.625
    8. ')' → logprob: -20.875
    9. '[[' → logprob: -21.25
    10. '(i' → logprob: -21.375

Token 156: ']))' (ID: 20259)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1652822345495224
    2. ']))' → logprob: -1.9152822494506836
    3. '])' → logprob: -5.540282249450684
    4. ')))' → logprob: -7.040282249450684
    5. ')' → logprob: -9.415282249450684
    6. ')])' → logprob: -9.540282249450684
    7. ')]' → logprob: -10.415282249450684
    8. '']))' → logprob: -10.915282249450684
    9. '}))' → logprob: -11.040282249450684
    10. ']' → logprob: -11.165282249450684


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 154
Tokens correctement prédits (1ère position, stricte): 80
Tokens correctement prédits (1ère position, avec adaptation): 85
Tokens correctement prédits (top 10): 141
Précision stricte (1ère position): 51.95%
Précision adaptée (1ère position): 55.19%
Précision (top 10): 91.56%
================================================================================
