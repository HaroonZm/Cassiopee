================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def recurring_fraction_length(x, y):
    remainder_pos = {}
    remainder = x % y
    pos = 0
    while remainder and remainder not in remainder_pos:
        remainder_pos[remainder] = pos
        remainder = (remainder * 10) % y
        pos += 1
    if remainder == 0:
        return pos, 0
    start = remainder_pos[remainder]
    length = pos - start
    return start, length

while True:
    x, y = map(int, input().split())
    if x == 0 and y == 0:
        break
    a, b = recurring_fraction_length(x, y)
    print(a, b)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' recurring' (ID: 69677)
  → Token d'amorce (pas de prédiction)

Token 2: '_fraction' (ID: 151287)
  → Token d'amorce (pas de prédiction)

Token 3: '_length' (ID: 11514)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05102981626987457
    2. '_' → logprob: -3.051029920578003
    3. '(:' → logprob: -6.426029682159424
    4. '_:' → logprob: -8.551030158996582
    5. '(_:' → logprob: -8.676030158996582
    6. '```' → logprob: -9.301030158996582
    7. '(_' → logprob: -9.676030158996582
    8. '():' → logprob: -9.676030158996582
    9. ':' → logprob: -9.801030158996582
    10. '(a' → logprob: -10.051030158996582

Token 4: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003531655529513955
    2. '_' → logprob: -5.753531455993652
    3. '(_:' → logprob: -9.628531455993652
    4. '(:' → logprob: -9.753531455993652
    5. '```' → logprob: -10.128531455993652
    6. '(_' → logprob: -10.378531455993652
    7. '():' → logprob: -10.628531455993652
    8. '('' → logprob: -10.628531455993652
    9. ':' → logprob: -10.878531455993652
    10. '_:' → logprob: -11.128531455993652

Token 5: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12414605170488358
    2. ')' → logprob: -2.249145984649658
    3. ':' → logprob: -4.499145984649658
    4. ',' → logprob: -9.624146461486816
    5. '=' → logprob: -10.749146461486816
    6. '[' → logprob: -11.749146461486816
    7. '):
' → logprob: -11.749146461486816
    8. '*' → logprob: -12.249146461486816
    9. '.' → logprob: -12.499146461486816
    10. ':)' → logprob: -12.624146461486816

Token 6: ' y' (ID: 342)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25189638137817383
    2. 'y' → logprob: -2.126896381378174
    3. ' n' → logprob: -3.251896381378174
    4. ')' → logprob: -3.876896381378174
    5. '):' → logprob: -3.876896381378174
    6. ' y' → logprob: -4.376896381378174
    7. ' )' → logprob: -5.876896381378174
    8. ' ' → logprob: -6.126896381378174
    9. ' ):' → logprob: -6.126896381378174
    10. 'd' → logprob: -6.876896381378174

Token 7: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003620147006586194
    2. ')' → logprob: -6.003620147705078
    3. ':' → logprob: -6.878620147705078
    4. '):
' → logprob: -9.503620147705078
    5. '   ' → logprob: -11.753620147705078
    6. ''):' → logprob: -11.753620147705078
    7. '```' → logprob: -11.878620147705078
    8. '*' → logprob: -12.878620147705078
    9. ',' → logprob: -13.128620147705078
    10. '**' → logprob: -13.253620147705078

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018968485295772552
    2. ':' → logprob: -4.26896858215332
    3. '():' → logprob: -5.76896858215332
    4. '```' → logprob: -7.01896858215332
    5. '):' → logprob: -8.39396858215332
    6. '       ' → logprob: -8.64396858215332
    7. '(' → logprob: -9.51896858215332
    8. '``' → logprob: -10.01896858215332
    9. '':' → logprob: -10.01896858215332
    10. '":' → logprob: -10.64396858215332

Token 9: ' remainder' (ID: 47056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056514922529459
    2. ' ' → logprob: -4.181514739990234
    3. ':' → logprob: -4.556514739990234
    4. '```' → logprob: -4.931514739990234
    5. '       ' → logprob: -5.056514739990234
    6. '_' → logprob: -5.181514739990234
    7. ''' → logprob: -6.306514739990234
    8. '    ' → logprob: -6.431514739990234
    9. '"""' → logprob: -6.556514739990234
    10. '"' → logprob: -6.556514739990234

Token 10: '_pos' (ID: 14692)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09522291272878647
    2. 's' → logprob: -2.5952229499816895
    3. ' =' → logprob: -4.4702229499816895
    4. '=' → logprob: -5.4702229499816895
    5. '_s' → logprob: -8.470222473144531
    6. ' ' → logprob: -9.470222473144531
    7. '_space' → logprob: -9.970222473144531
    8. '_positions' → logprob: -10.095222473144531
    9. '_index' → logprob: -10.220222473144531
    10. ' _' → logprob: -10.220222473144531

Token 11: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0580301471054554
    2. '=' → logprob: -2.933030128479004
    3. '[' → logprob: -6.058030128479004
    4. ' =' → logprob: -7.933030128479004
    5. 'i' → logprob: -8.058030128479004
    6. '_map' → logprob: -10.933030128479004
    7. '_' → logprob: -11.433030128479004
    8. '_=' → logprob: -11.433030128479004
    9. '[]' → logprob: -11.558030128479004
    10. ']' → logprob: -11.558030128479004

Token 12: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0003442832676228136
    2. ' {}' → logprob: -8.000344276428223
    3. '{' → logprob: -11.875344276428223
    4. '{}
' → logprob: -14.125344276428223
    5. 'dict' → logprob: -15.000344276428223
    6. ' ' → logprob: -15.125344276428223
    7. '{}

' → logprob: -15.500344276428223
    8. '={}' → logprob: -16.12534523010254
    9. '{})' → logprob: -16.37534523010254
    10. '{}\' → logprob: -17.00034523010254

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6637716889381409
    2. ' ' → logprob: -1.413771629333496
    3. ' remainder' → logprob: -2.288771629333496
    4. ',' → logprob: -3.413771629333496
    5. '    
' → logprob: -4.538771629333496
    6. ':' → logprob: -4.538771629333496
    7. '
' → logprob: -4.788771629333496
    8. ':
' → logprob: -4.788771629333496
    9. ',
' → logprob: -4.913771629333496
    10. '\' → logprob: -5.038771629333496

Token 14: ' remainder' (ID: 47056)
  Prédit: ' remainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -0.31276997923851013
    2. ' ' → logprob: -1.9377700090408325
    3. 're' → logprob: -3.312769889831543
    4. '   ' → logprob: -3.437769889831543
    5. ' r' → logprob: -3.812769889831543
    6. 'r' → logprob: -4.187769889831543
    7. '```' → logprob: -4.687769889831543
    8. ' /' → logprob: -6.687769889831543
    9. ' rest' → logprob: -7.062769889831543
    10. '/' → logprob: -7.187769889831543

Token 15: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19301338493824005
    2. ' =' → logprob: -1.8180134296417236
    3. '=' → logprob: -4.4430131912231445
    4. ' _' → logprob: -7.6930131912231445
    5. 's' → logprob: -7.9430131912231445
    6. ' ' → logprob: -8.568013191223145
    7. ')' → logprob: -8.943013191223145
    8. ',' → logprob: -9.443013191223145
    9. '_=' → logprob: -9.943013191223145
    10. '```' → logprob: -10.443013191223145

Token 16: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0701940655708313
    2. 'x' → logprob: -2.6951940059661865
    3. '0' → logprob: -9.320194244384766
    4. ' y' → logprob: -9.695194244384766
    5. ' ' → logprob: -9.945194244384766
    6. ' (' → logprob: -10.820194244384766
    7. '1' → logprob: -11.570194244384766
    8. 'y' → logprob: -11.945194244384766
    9. '   ' → logprob: -11.945194244384766
    10. '(x' → logprob: -12.070194244384766

Token 17: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.03922305628657341
    2. '%' → logprob: -3.2892229557037354
    3. ' ' → logprob: -7.5392231941223145
    4. ' *' → logprob: -8.539222717285156
    5. '   ' → logprob: -9.039222717285156
    6. ' %
' → logprob: -9.289222717285156
    7. ' /' → logprob: -10.039222717285156
    8. '*' → logprob: -10.289222717285156
    9. '0' → logprob: -10.539222717285156
    10. '```' → logprob: -10.914222717285156

Token 18: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1269354522228241
    2. ' y' → logprob: -2.1269354820251465
    3. ' ' → logprob: -12.751935005187988
    4. '	y' → logprob: -13.126935005187988
    5. '   ' → logprob: -13.501935005187988
    6. '```' → logprob: -15.251935005187988
    7. '‘y' → logprob: -15.626935005187988
    8. '  ' → logprob: -15.626935005187988
    9. '_y' → logprob: -15.751935005187988
    10. ''y' → logprob: -16.376935958862305

Token 19: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7633482217788696
    2. '0' → logprob: -2.01334810256958
    3. '\n' → logprob: -2.26334810256958
    4. ' ' → logprob: -2.76334810256958
    5. '```' → logprob: -2.88834810256958
    6. '*' → logprob: -3.26334810256958
    7. '`' → logprob: -4.13834810256958
    8. '\' → logprob: -4.38834810256958
    9. '<|end|>' → logprob: -4.38834810256958
    10. '
' → logprob: -4.51334810256958

Token 20: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5566309094429016
    2. '   ' → logprob: -1.8066308498382568
    3. ' ' → logprob: -2.681630849838257
    4. ':' → logprob: -2.931630849838257
    5. '\' → logprob: -3.306630849838257
    6. '    ' → logprob: -3.806630849838257
    7. '\n' → logprob: -4.556631088256836
    8. '_' → logprob: -4.806631088256836
    9. '`' → logprob: -5.056631088256836
    10. '  
' → logprob: -5.181631088256836

Token 21: ' pos' (ID: 1253)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7179262042045593
    2. '   ' → logprob: -1.217926263809204
    3. '    ' → logprob: -2.217926263809204
    4. '0' → logprob: -2.592926263809204
    5. '  ' → logprob: -4.217926025390625
    6. '```' → logprob: -4.967926025390625
    7. ' while' → logprob: -6.217926025390625
    8. '1' → logprob: -6.592926025390625
    9. '     
' → logprob: -6.842926025390625
    10. '`' → logprob: -7.592926025390625

Token 22: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4835144281387329
    2. 'ition' → logprob: -1.233514428138733
    3. ' =' → logprob: -2.8585143089294434
    4. 's' → logprob: -3.9835143089294434
    5. 'i' → logprob: -5.358514308929443
    6. 't' → logprob: -5.983514308929443
    7. 'iti' → logprob: -6.358514308929443
    8. '   ' → logprob: -6.733514308929443
    9. '_' → logprob: -6.858514308929443
    10. ' ' → logprob: -6.983514308929443

Token 23: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00900309719145298
    2. ' ' → logprob: -4.759003162384033
    3. '1' → logprob: -7.884003162384033
    4. '2' → logprob: -11.384002685546875
    5. '   ' → logprob: -15.884002685546875
    6. '```' → logprob: -16.009002685546875
    7. '4' → logprob: -16.634002685546875
    8. '3' → logprob: -17.009002685546875
    9. '`' → logprob: -17.634002685546875
    10. '  ' → logprob: -18.321502685546875

Token 24: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1994775377388578e-05
    2. '1' → logprob: -12.000012397766113
    3. ' ' → logprob: -12.125012397766113
    4. '2' → logprob: -14.750012397766113
    5. '۰' → logprob: -18.250011444091797
    6. '```' → logprob: -19.250011444091797
    7. 'len' → logprob: -19.625011444091797
    8. '4' → logprob: -19.750011444091797
    9. '   ' → logprob: -20.125011444091797
    10. '-' → logprob: -20.125011444091797

Token 25: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7025542259216309
    2. '
' → logprob: -1.2025542259216309
    3. '```' → logprob: -2.827554225921631
    4. '\n' → logprob: -3.202554225921631
    5. '    
' → logprob: -3.452554225921631
    6. '  
' → logprob: -4.077554225921631
    7. '<|end|>' → logprob: -4.327554225921631
    8. '   
' → logprob: -5.327554225921631
    9. ' ' → logprob: -5.702554225921631
    10. ')' → logprob: -5.827554225921631

Token 26: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 27: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.8129454255104065
    2. '   ' → logprob: -1.1879453659057617
    3. 'while' (adapté à ' while') → logprob: -2.3129453659057617
    4. ' ' → logprob: -2.6879453659057617
    5. '```' → logprob: -3.6879453659057617
    6. '<|end|>' → logprob: -4.437945365905762
    7. '	while' → logprob: -5.062945365905762
    8. ')' → logprob: -5.437945365905762
    9. ',' → logprob: -5.437945365905762
    10. '*' → logprob: -5.562945365905762

Token 28: ' remainder' (ID: 47056)
  Prédit: ' remainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -0.00021951000962872058
    2. 're' → logprob: -8.500219345092773
    3. ' not' → logprob: -11.875219345092773
    4. ' re' → logprob: -13.000219345092773
    5. '(re' → logprob: -13.250219345092773
    6. ' ' → logprob: -13.375219345092773
    7. ' (' → logprob: -13.750219345092773
    8. ' rem' → logprob: -14.375219345092773
    9. '	re' → logprob: -14.375219345092773
    10. ' y' → logprob: -15.250219345092773

Token 29: ' and' (ID: 326)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.050318844616413116
    2. ' !=' → logprob: -3.300318956375122
    3. '!=' → logprob: -5.050318717956543
    4. 'not' → logprob: -6.050318717956543
    5. '>' → logprob: -6.550318717956543
    6. ' >' → logprob: -7.675318717956543
    7. ' *' → logprob: -7.800318717956543
    8. ' in' → logprob: -8.050318717956543
    9. ' ' → logprob: -8.550318717956543
    10. '*' → logprob: -8.675318717956543

Token 30: ' remainder' (ID: 47056)
  Prédit: ' remainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -0.001143314759247005
    2. 're' → logprob: -7.126143455505371
    3. '(re' → logprob: -9.001143455505371
    4. ' (' → logprob: -9.626143455505371
    5. ' ' → logprob: -9.626143455505371
    6. ' ' → logprob: -10.751143455505371
    7. ' True' → logprob: -10.751143455505371
    8. '```' → logprob: -11.376143455505371
    9. '   ' → logprob: -12.126143455505371
    10. ' not' → logprob: -12.251143455505371

Token 31: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.012854771688580513
    2. 'not' → logprob: -4.38785457611084
    3. 's' → logprob: -8.63785457611084
    4. ')' → logprob: -9.51285457611084
    5. '```' → logprob: -10.38785457611084
    6. '_' → logprob: -11.51285457611084
    7. ' in' → logprob: -11.51285457611084
    8. ' ' → logprob: -11.88785457611084
    9. '<|end|>' → logprob: -12.01285457611084
    10. 'in' → logprob: -12.13785457611084

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.021511798724532127
    2. 'in' → logprob: -3.8965117931365967
    3. '_in' → logprob: -7.896512031555176
    4. '<|end|>' → logprob: -8.521512031555176
    5. '   ' → logprob: -9.021512031555176
    6. ' ' → logprob: -9.271512031555176
    7. '  ' → logprob: -9.896512031555176
    8. '<|end|>' → logprob: -10.146512031555176
    9. '_' → logprob: -11.271512031555176
    10. '	in' → logprob: -11.271512031555176

Token 33: ' remainder' (ID: 47056)
  Prédit: ' remainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -7.107425062713446e-06
    2. 're' → logprob: -12.000006675720215
    3. ' ' → logprob: -14.875006675720215
    4. ' rest' → logprob: -15.000006675720215
    5. 'rest' → logprob: -16.50000762939453
    6. 'rema' → logprob: -16.87500762939453
    7. ' remaining' → logprob: -17.50000762939453
    8. ' ' → logprob: -17.50000762939453
    9. ' re' → logprob: -17.50000762939453
    10. '<|end|>' → logprob: -17.62500762939453

Token 34: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -4.763666947837919e-05
    2. '_positions' → logprob: -10.12504768371582
    3. 'pos' → logprob: -12.25004768371582
    4. 's' → logprob: -13.12504768371582
    5. 'Pos' → logprob: -14.75004768371582
    6. '_' → logprob: -15.62504768371582
    7. '_p' → logprob: -17.50004768371582
    8. '_POS' → logprob: -17.87504768371582
    9. 'positions' → logprob: -18.25004768371582
    10. '_position' → logprob: -18.37504768371582

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.451116051815916e-05
    2. ':
' → logprob: -10.875024795532227
    3. '):' → logprob: -13.250024795532227
    4. '[' → logprob: -13.625024795532227
    5. ':**' → logprob: -13.750024795532227
    6. ' :' → logprob: -14.375024795532227
    7. '   ' → logprob: -15.125024795532227
    8. ':

' → logprob: -16.000024795532227
    9. '+:' → logprob: -16.625024795532227
    10. '[:]' → logprob: -16.750024795532227

Token 36: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018976900726556778
    2. '   ' → logprob: -5.26897668838501
    3. '<|end|>' → logprob: -5.51897668838501
    4. ' :' → logprob: -5.64397668838501
    5. '       ' → logprob: -6.14397668838501
    6. '):' → logprob: -6.14397668838501
    7. '<|end|>' → logprob: -8.143977165222168
    8. '    ' → logprob: -8.268977165222168
    9. ':
' → logprob: -8.268977165222168
    10. '```' → logprob: -8.268977165222168

Token 37: ' remainder' (ID: 47056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3414852619171143
    2. ':' → logprob: -1.4664852619171143
    3. ' remainder' → logprob: -1.7164852619171143
    4. '    ' → logprob: -2.4664852619171143
    5. '```' → logprob: -2.7164852619171143
    6. ' ' → logprob: -3.0914852619171143
    7. '[' → logprob: -3.4664852619171143
    8. '       ' → logprob: -3.8414852619171143
    9. ' :' → logprob: -3.9664852619171143
    10. '<|end|>' → logprob: -4.341485023498535

Token 38: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00020401719666551799
    2. '_' → logprob: -9.500204086303711
    3. ' _' → logprob: -9.875204086303711
    4. '_positions' → logprob: -10.125204086303711
    5. 'Pos' → logprob: -11.125204086303711
    6. 'pos' → logprob: -12.125204086303711
    7. '```' → logprob: -12.250204086303711
    8. ')' → logprob: -12.750204086303711
    9. ' ' → logprob: -13.375204086303711
    10. '=' → logprob: -13.750204086303711

Token 39: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. ' [' → logprob: -15.125000953674316
    3. '\[' → logprob: -15.625000953674316
    4. '```' → logprob: -16.000001907348633
    5. '[...]' → logprob: -16.125001907348633
    6. '[r' → logprob: -16.250001907348633
    7. '[end' → logprob: -16.875001907348633
    8. '[current' → logprob: -17.125001907348633
    9. '   ' → logprob: -17.250001907348633
    10. '[y' → logprob: -18.000001907348633

Token 40: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.00036442498094402254
    2. ' remainder' → logprob: -8.000364303588867
    3. '[' → logprob: -11.125364303588867
    4. 'rema' → logprob: -11.750364303588867
    5. 'rem' → logprob: -12.875364303588867
    6. 'rest' → logprob: -13.750364303588867
    7. 'remaining' → logprob: -14.375364303588867
    8. ']' → logprob: -14.500364303588867
    9. '```' → logprob: -14.875364303588867
    10. 'r' → logprob: -15.000364303588867

Token 41: 'mainder' (ID: 40886)
  Prédit: 'mainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mainder' → logprob: -0.014252358116209507
    2. 'ma' → logprob: -4.264252185821533
    3. 'm' → logprob: -9.889252662658691
    4. 'a' → logprob: -10.764252662658691
    5. ' ma' → logprob: -12.014252662658691
    6. 'main' → logprob: -12.389252662658691
    7. '```' → logprob: -13.139252662658691
    8. '_ma' → logprob: -13.389252662658691
    9. 'inder' → logprob: -13.764252662658691
    10. 'ма' → logprob: -13.889252662658691

Token 42: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005607949569821358
    2. ' ]' → logprob: -5.380608081817627
    3. ']=' → logprob: -7.005608081817627
    4. '=' → logprob: -10.005607604980469
    5. ' =' → logprob: -10.380607604980469
    6. ' ' → logprob: -13.755607604980469
    7. '[' → logprob: -13.880607604980469
    8. ' :]' → logprob: -14.255607604980469
    9. ')]' → logprob: -14.630607604980469
    10. ':]' → logprob: -15.130607604980469

Token 43: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.69315105676651
    2. ' =' → logprob: -0.69315105676651
    3. ']=' → logprob: -13.318151473999023
    4. ']' → logprob: -13.818151473999023
    5. ' =)' → logprob: -15.568151473999023
    6. ')=' → logprob: -16.068151473999023
    7. '[' → logprob: -16.068151473999023
    8. '＝' → logprob: -16.193151473999023
    9. '=}' → logprob: -16.193151473999023
    10. ',' → logprob: -16.318151473999023

Token 44: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.10020710527896881
    2. ' pos' → logprob: -2.3502070903778076
    3. '	pos' → logprob: -14.725207328796387
    4. '_pos' → logprob: -18.22520637512207
    5. '(pos' → logprob: -19.72520637512207
    6. '0' → logprob: -19.72520637512207
    7. '[pos' → logprob: -19.85020637512207
    8. 'Pos' → logprob: -20.10020637512207
    9. 'p' → logprob: -20.35020637512207
    10. ' ' → logprob: -20.35020637512207

Token 45: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7742999196052551
    2. '    
' → logprob: -1.1492998600006104
    3. '\n' → logprob: -2.6492998600006104
    4. '*' → logprob: -3.0242998600006104
    5. ' 
' → logprob: -3.6492998600006104
    6. '   
' → logprob: -3.7742998600006104
    7. '     
' → logprob: -4.3993000984191895
    8. '    ' → logprob: -4.8993000984191895
    9. '  
' → logprob: -5.2743000984191895
    10. '```' → logprob: -5.5243000984191895

Token 46: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10133900493383408
    2. '*' → logprob: -3.476339101791382
    3. '    
' → logprob: -3.601339101791382
    4. '       ' → logprob: -4.351338863372803
    5. '```' → logprob: -4.851338863372803
    6. ' ' → logprob: -6.101338863372803
    7. ')' → logprob: -6.226338863372803
    8. '   
' → logprob: -6.351338863372803
    9. '`' → logprob: -6.351338863372803
    10. ' 
' → logprob: -6.601338863372803

Token 47: ' remainder' (ID: 47056)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.0904741957783699
    2. ' remainder' → logprob: -2.5904741287231445
    3. 'x' → logprob: -5.0904741287231445
    4. '   ' → logprob: -5.4654741287231445
    5. ' x' → logprob: -7.2154741287231445
    6. '	re' → logprob: -8.840474128723145
    7. '       ' → logprob: -9.590474128723145
    8. '```' → logprob: -9.590474128723145
    9. ' ' → logprob: -10.090474128723145
    10. '    ' → logprob: -10.715474128723145

Token 48: ' =' (ID: 314)
  Prédit: ' *='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.43770328164100647
    2. ' =' → logprob: -1.187703251838684
    3. '=' → logprob: -3.4377033710479736
    4. '*' → logprob: -4.9377031326293945
    5. '*=' → logprob: -5.1877031326293945
    6. ' *' → logprob: -6.5627031326293945
    7. ' ' → logprob: -6.9377031326293945
    8. '<|end|>' → logprob: -7.4377031326293945
    9. '```' → logprob: -7.4377031326293945
    10. ' <<=' → logprob: -7.6877031326293945

Token 49: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3587215840816498
    2. '(re' → logprob: -1.4837216138839722
    3. ' remainder' → logprob: -2.7337214946746826
    4. 're' → logprob: -4.733721733093262
    5. ' ' → logprob: -7.483721733093262
    6. '(rem' → logprob: -9.108721733093262
    7. '   ' → logprob: -9.733721733093262
    8. '  ' → logprob: -10.483721733093262
    9. '(' → logprob: -10.858721733093262
    10. '10' → logprob: -11.108721733093262

Token 50: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.26633062958717346
    2. ' remainder' → logprob: -1.516330599784851
    3. '(re' → logprob: -4.641330718994141
    4. '10' → logprob: -5.891330718994141
    5. ' (' → logprob: -6.641330718994141
    6. '   ' → logprob: -8.26633071899414
    7. ' ' → logprob: -8.89133071899414
    8. '	re' → logprob: -9.76633071899414
    9. ' re' → logprob: -10.76633071899414
    10. '  ' → logprob: -11.01633071899414

Token 51: 'mainder' (ID: 40886)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6905945539474487
    2. 'mainder' → logprob: -0.8155945539474487
    3. 'inder' → logprob: -2.9405946731567383
    4. 'ma' → logprob: -5.940594673156738
    5. 'ander' → logprob: -8.065594673156738
    6. '_ma' → logprob: -9.190594673156738
    7. '_a' → logprob: -9.440594673156738
    8. '```' → logprob: -9.940594673156738
    9. '(a' → logprob: -10.315594673156738
    10. ' ma' → logprob: -10.440594673156738

Token 52: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.005758733954280615
    2. '*' → logprob: -5.380758762359619
    3. ' %' → logprob: -7.755758762359619
    4. ' ' → logprob: -7.880758762359619
    5. '%' → logprob: -8.130758285522461
    6. ' ' → logprob: -11.255758285522461
    7. '<|end|>' → logprob: -11.880758285522461
    8. '   ' → logprob: -12.130758285522461
    9. '0' → logprob: -13.130758285522461
    10. '  ' → logprob: -13.255758285522461

Token 53: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.023246292024850845
    2. ' ' → logprob: -3.7732462882995605
    3. '100' → logprob: -15.523246765136719
    4. '```' → logprob: -15.523246765136719
    5. '   ' → logprob: -16.02324676513672
    6. '1' → logprob: -16.14824676513672
    7. ')' → logprob: -16.77324676513672
    8. '0' → logprob: -17.27324676513672
    9. '<|end|>' → logprob: -17.83574676513672
    10. '
' → logprob: -18.02324676513672

Token 54: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -17.375
    4. ')' → logprob: -18.625
    5. '1' → logprob: -19.125
    6. '   ' → logprob: -19.25
    7. '100' → logprob: -20.125
    8. '１０' → logprob: -20.5
    9. '

' → logprob: -20.75
    10. '۱۰' → logprob: -21.0

Token 55: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07190641015768051
    2. ' %' → logprob: -2.946906328201294
    3. '%' → logprob: -4.321906566619873
    4. ' )' → logprob: -6.071906566619873
    5. ')%' → logprob: -6.821906566619873
    6. ' %)' → logprob: -9.446906089782715
    7. '%)' → logprob: -9.571906089782715
    8. ' ' → logprob: -10.321906089782715
    9. ' ' → logprob: -10.696906089782715
    10. '   ' → logprob: -13.821906089782715

Token 56: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.08276181668043137
    2. '%' → logprob: -2.582761764526367
    3. ' //' → logprob: -5.582761764526367
    4. ' ' → logprob: -9.582761764526367
    5. '<|end|>' → logprob: -10.707761764526367
    6. '//' → logprob: -12.832761764526367
    7. ' %=' → logprob: -13.457761764526367
    8. '<|end|>' → logprob: -13.707761764526367
    9. '%x' → logprob: -13.957761764526367
    10. ')' → logprob: -14.332761764526367

Token 57: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.31326213479042053
    2. ' y' → logprob: -1.3132621049880981
    3. '	y' → logprob: -15.813261985778809
    4. '*y' → logprob: -15.938261985778809
    5. ')y' → logprob: -16.688262939453125
    6. '<|end|>' → logprob: -17.188262939453125
    7. '(y' → logprob: -17.938262939453125
    8. '‘y' → logprob: -17.938262939453125
    9. ' ' → logprob: -18.063262939453125
    10. ''y' → logprob: -18.438262939453125

Token 58: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023712536320090294
    2. '        
' → logprob: -4.773712635040283
    3. '\n' → logprob: -5.023712635040283
    4. ' 
' → logprob: -5.898712635040283
    5. '
' → logprob: -6.398712635040283
    6. '```' → logprob: -7.023712635040283
    7. '\' → logprob: -7.273712635040283
    8. '  
' → logprob: -7.648712635040283
    9. '<|end|>' → logprob: -7.773712635040283
    10. '   ' → logprob: -8.023712158203125

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002476604888215661
    2. '
' → logprob: -7.377476692199707
    3. '<|end|>' → logprob: -7.377476692199707
    4. '   ' → logprob: -8.002476692199707
    5. '```' → logprob: -8.127476692199707
    6. '        
' → logprob: -8.377476692199707
    7. 'pos' → logprob: -9.252476692199707
    8. '  
' → logprob: -9.502476692199707
    9. '\n' → logprob: -10.502476692199707
    10. ' 
' → logprob: -11.002476692199707

Token 60: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.017043665051460266
    2. '       ' → logprob: -4.517043590545654
    3. ' pos' → logprob: -5.142043590545654
    4. '   ' → logprob: -9.267044067382812
    5. '	pos' → logprob: -11.142044067382812
    6. '+' → logprob: -11.892044067382812
    7. '    ' → logprob: -12.392044067382812
    8. '_pos' → logprob: -12.767044067382812
    9. 'Pos' → logprob: -13.142044067382812
    10. ' ' → logprob: -13.392044067382812

Token 61: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.47596073150634766
    2. ' +=' → logprob: -0.9759607315063477
    3. '+' → logprob: -6.475960731506348
    4. '=' → logprob: -8.100960731506348
    5. '++' → logprob: -10.725960731506348
    6. '<|end|>' → logprob: -11.350960731506348
    7. ' +' → logprob: -13.725960731506348
    8. '+='' → logprob: -13.850960731506348
    9. ' =' → logprob: -14.100960731506348
    10. ']+=' → logprob: -14.100960731506348

Token 62: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -18.500019073486328
    4. '```' → logprob: -19.000019073486328
    5. '۱' → logprob: -21.125019073486328
    6. '  ' → logprob: -21.250019073486328
    7. '１' → logprob: -21.375019073486328
    8. '<|end|>' → logprob: -21.437519073486328
    9. '१' → logprob: -21.937519073486328
    10. '0' → logprob: -22.000019073486328

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -17.875001907348633
    4. '   ' → logprob: -18.375001907348633
    5. '۱' → logprob: -21.125001907348633
    6. '１' → logprob: -21.187501907348633
    7. '१' → logprob: -21.312501907348633
    8. '0' → logprob: -21.375001907348633
    9. '<|end|>' → logprob: -21.437501907348633
    10. '  ' → logprob: -21.500001907348633

Token 64: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.727739155292511
    2. '
' → logprob: -0.977739155292511
    3. '<|end|>' → logprob: -2.727739095687866
    4. ':' → logprob: -3.852739095687866
    5. '    
' → logprob: -4.477739334106445
    6. ':return' → logprob: -4.602739334106445
    7. '\n' → logprob: -4.727739334106445
    8. '  
' → logprob: -5.227739334106445
    9. ' 
' → logprob: -5.977739334106445
    10. ' ' → logprob: -5.977739334106445

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08527829498052597
    2. '<|end|>' → logprob: -2.960278272628784
    3. ' ' → logprob: -4.335278511047363
    4. ')' → logprob: -5.335278511047363
    5. '```' → logprob: -6.460278511047363
    6. ' 
' → logprob: -6.710278511047363
    7. '[' → logprob: -7.085278511047363
    8. '    ' → logprob: -7.085278511047363
    9. ':' → logprob: -7.210278511047363
    10. '    
' → logprob: -7.335278511047363

Token 66: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36313170194625854
    2. '```' → logprob: -1.6131317615509033
    3. ' if' → logprob: -2.9881317615509033
    4. '[' → logprob: -4.113131523132324
    5. ')' → logprob: -4.488131523132324
    6. 'if' (adapté à ' if') → logprob: -4.988131523132324
    7. '<|end|>' → logprob: -5.738131523132324
    8. ' return' → logprob: -5.988131523132324
    9. ':' → logprob: -5.988131523132324
    10. 'return' → logprob: -6.113131523132324

Token 67: ' remainder' (ID: 47056)
  Prédit: ' remainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -0.01065078005194664
    2. ' not' → logprob: -4.635650634765625
    3. 're' → logprob: -7.260650634765625
    4. ' ' → logprob: -9.385650634765625
    5. 'not' → logprob: -9.635650634765625
    6. '	re' → logprob: -10.760650634765625
    7. ' ' → logprob: -12.010650634765625
    8. '   ' → logprob: -12.635650634765625
    9. ' re' → logprob: -12.760650634765625
    10. '  ' → logprob: -13.135650634765625

Token 68: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.29724133014678955
    2. ' ==' → logprob: -1.4222413301467896
    3. '=' → logprob: -4.6722412109375
    4. ':' → logprob: -5.2972412109375
    5. '<|end|>' → logprob: -7.6722412109375
    6. '>' → logprob: -8.2972412109375
    7. ' not' → logprob: -8.4222412109375
    8. '<|end|>' → logprob: -9.2972412109375
    9. 'not' → logprob: -9.4222412109375
    10. ' is' → logprob: -9.5472412109375

Token 69: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06196802109479904
    2. '0' → logprob: -2.8119680881500244
    3. 'None' → logprob: -15.936967849731445
    4. '"' → logprob: -16.561967849731445
    5. ' ' → logprob: -16.936967849731445
    6. ' None' → logprob: -17.186967849731445
    7. '_' → logprob: -17.436967849731445
    8. ''' → logprob: -17.936967849731445
    9. ' ' → logprob: -17.936967849731445
    10. '  ' → logprob: -18.061967849731445

Token 70: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009114635176956654
    2. ' ' → logprob: -7.000911235809326
    3. '   ' → logprob: -19.250911712646484
    4. '۰' → logprob: -19.875911712646484
    5. ' ' → logprob: -20.375911712646484
    6. '=' → logprob: -20.375911712646484
    7. '"' → logprob: -20.500911712646484
    8. '０' → logprob: -20.750911712646484
    9. ''' → logprob: -21.125911712646484
    10. '_' → logprob: -21.375911712646484

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006317904219031334
    2. ':return' → logprob: -5.256318092346191
    3. ':
' → logprob: -7.631318092346191
    4. '   ' → logprob: -7.881318092346191
    5. '       ' → logprob: -8.756318092346191
    6. ' return' → logprob: -10.756318092346191
    7. '<|end|>' → logprob: -10.881318092346191
    8. '	return' → logprob: -11.881318092346191
    9. ',' → logprob: -12.256318092346191
    10. 'return' → logprob: -12.381318092346191

Token 72: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011454146355390549
    2. '   ' → logprob: -4.636454105377197
    3. ' return' → logprob: -6.886454105377197
    4. 'return' → logprob: -8.511454582214355
    5. ':return' → logprob: -9.261454582214355
    6. ':' → logprob: -9.386454582214355
    7. '<|end|>' → logprob: -9.386454582214355
    8. '	return' → logprob: -9.511454582214355
    9. '0' → logprob: -9.511454582214355
    10. ':
' → logprob: -11.011454582214355

Token 73: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9102510213851929
    2. 'return' (adapté à ' return') → logprob: -1.1602510213851929
    3. ' return' → logprob: -1.5352510213851929
    4. '0' → logprob: -2.9102511405944824
    5. '   ' → logprob: -4.285251140594482
    6. ' ' → logprob: -8.035250663757324
    7. '	return' → logprob: -9.035250663757324
    8. ':return' → logprob: -10.410250663757324
    9. '1' → logprob: -10.910250663757324
    10. '           ' → logprob: -12.160250663757324

Token 74: ' pos' (ID: 1253)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00861468818038702
    2. ' ' → logprob: -4.758614540100098
    3. '   ' → logprob: -17.133615493774414
    4. '<|end|>' → logprob: -17.258615493774414
    5. '  ' → logprob: -17.508615493774414
    6. ' ' → logprob: -17.633615493774414
    7. '۰' → logprob: -17.758615493774414
    8. '000' → logprob: -18.383615493774414
    9. '012' → logprob: -19.071115493774414
    10. '00' → logprob: -19.258615493774414

Token 75: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011496252845972776
    2. '    
' → logprob: -8.00114917755127
    3. 'return' → logprob: -8.12614917755127
    4. 'else' → logprob: -8.75114917755127
    5. '
' → logprob: -9.50114917755127
    6. '```' → logprob: -9.87614917755127
    7. ' else' → logprob: -10.25114917755127
    8. '	return' → logprob: -10.37614917755127
    9. ' ' → logprob: -10.62614917755127
    10. '<|end|>' → logprob: -11.00114917755127

Token 76: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5231480002403259
    2. ' remainder' → logprob: -1.6481480598449707
    3. 'pos' → logprob: -2.2731480598449707
    4. 're' → logprob: -3.0231480598449707
    5. ' pos' → logprob: -3.2731480598449707
    6. 'len' → logprob: -4.273148059844971
    7. ' ' → logprob: -5.023148059844971
    8. ' len' → logprob: -6.148148059844971
    9. '   ' → logprob: -7.273148059844971
    10. 'return' → logprob: -7.523148059844971

Token 77: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0027459117118269205
    2. '-' → logprob: -6.127746105194092
    3. 'None' → logprob: -7.877746105194092
    4. '[]' → logprob: -9.127745628356934
    5. ' ' → logprob: -10.877745628356934
    6. 'False' → logprob: -11.252745628356934
    7. '{}' → logprob: -11.252745628356934
    8. '"' → logprob: -12.502745628356934
    9. 'pos' → logprob: -12.627745628356934
    10. '''' → logprob: -12.752745628356934

Token 78: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008868765085935593
    2. '    
' → logprob: -5.88386869430542
    3. '
' → logprob: -6.00886869430542
    4. 'return' → logprob: -6.25886869430542
    5. 'else' → logprob: -7.13386869430542
    6. '  
' → logprob: -8.633869171142578
    7. ' return' → logprob: -8.633869171142578
    8. ' else' → logprob: -8.883869171142578
    9. ',' → logprob: -9.883869171142578
    10. '<|end|>' → logprob: -9.883869171142578

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001236060750670731
    2. 'return' → logprob: -7.5012359619140625
    3. '```' → logprob: -8.626235961914062
    4. 'else' → logprob: -9.001235961914062
    5. ' return' → logprob: -9.751235961914062
    6. '<|end|>' → logprob: -10.001235961914062
    7. '  ' → logprob: -10.126235961914062
    8. '[' → logprob: -10.376235961914062
    9. '
' → logprob: -10.376235961914062
    10. ')' → logprob: -10.501235961914062

Token 80: ' start' (ID: 1604)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021474938839673996
    2. 'return' → logprob: -5.146474838256836
    3. '
' → logprob: -5.396474838256836
    4. 'else' → logprob: -6.271474838256836
    5. ' return' → logprob: -6.271474838256836
    6. ' else' → logprob: -6.521474838256836
    7. '-' → logprob: -6.646474838256836
    8. ' ' → logprob: -7.021474838256836
    9. '    
' → logprob: -7.646474838256836
    10. '[' → logprob: -7.771474838256836

Token 81: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1904645413160324
    2. '_' → logprob: -1.9404644966125488
    3. ' =' → logprob: -3.815464496612549
    4. '_pos' → logprob: -4.940464496612549
    5. '_idx' → logprob: -8.565464973449707
    6. '_=' → logprob: -8.565464973449707
    7. '_index' → logprob: -9.190464973449707
    8. 'pos' → logprob: -9.815464973449707
    9. '=_' → logprob: -10.440464973449707
    10. ',' → logprob: -10.940464973449707

Token 82: ' remainder' (ID: 47056)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.011056899093091488
    2. ' remainder' → logprob: -4.511056900024414
    3. '   ' → logprob: -12.261056900024414
    4. '	re' → logprob: -13.011056900024414
    5. ' ' → logprob: -14.386056900024414
    6. 'rest' → logprob: -14.761056900024414
    7. '  ' → logprob: -15.011056900024414
    8. 'rem' → logprob: -15.136056900024414
    9. ' re' → logprob: -15.511056900024414
    10. 'rema' → logprob: -16.386056900024414

Token 83: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.1041145626222715e-05
    2. 'pos' → logprob: -11.625011444091797
    3. '_' → logprob: -13.875011444091797
    4. 'Pos' → logprob: -14.000011444091797
    5. '_positions' → logprob: -15.375011444091797
    6. '_p' → logprob: -17.250011444091797
    7. 's' → logprob: -17.875011444091797
    8. '_s' → logprob: -19.625011444091797
    9. ' _' → logprob: -19.625011444091797
    10. '_position' → logprob: -19.625011444091797

Token 84: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '[
' → logprob: -15.75
    3. ' [' → logprob: -16.5
    4. '```' → logprob: -17.0
    5. '\[' → logprob: -18.375
    6. 're' → logprob: -18.875
    7. '(re' → logprob: -19.125
    8. '   ' → logprob: -19.875
    9. ' ' → logprob: -20.25
    10. '[current' → logprob: -20.375

Token 85: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.00038288687937892973
    2. ' remainder' → logprob: -7.875382900238037
    3. 'rem' → logprob: -13.875382423400879
    4. 'rest' → logprob: -14.500382423400879
    5. 'rema' → logprob: -15.125382423400879
    6. 'r' → logprob: -15.375382423400879
    7. ')' → logprob: -15.625382423400879
    8. ' ' → logprob: -15.875382423400879
    9. '   ' → logprob: -16.000383377075195
    10. '[' → logprob: -16.125383377075195

Token 86: 'mainder' (ID: 40886)
  Prédit: 'mainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mainder' → logprob: -0.16107694804668427
    2. 'ma' → logprob: -1.9110769033432007
    3. 'a' → logprob: -7.53607702255249
    4. '_ma' → logprob: -9.036076545715332
    5. ' ma' → logprob: -9.411076545715332
    6. 'm' → logprob: -9.911076545715332
    7. '```' → logprob: -10.786076545715332
    8. 'main' → logprob: -11.536076545715332
    9. 'ма' → logprob: -12.036076545715332
    10. '-ma' → logprob: -12.036076545715332

Token 87: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.034022197127342224
    2. ')' → logprob: -3.409022092819214
    3. '}' → logprob: -9.034022331237793
    4. '+' → logprob: -9.409022331237793
    5. '<|end|>' → logprob: -9.409022331237793
    6. ')]' → logprob: -10.784022331237793
    7. '<|end|>' → logprob: -10.784022331237793
    8. ':' → logprob: -11.284022331237793
    9. ' ]' → logprob: -11.284022331237793
    10. ']
' → logprob: -12.284022331237793

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2872234284877777
    2. ' return' → logprob: -1.7872234582901
    3. '
' → logprob: -2.7872233390808105
    4. 'return' → logprob: -4.2872233390808105
    5. ' 
' → logprob: -6.1622233390808105
    6. '    
' → logprob: -6.7872233390808105
    7. ' ' → logprob: -7.0372233390808105
    8. '<|end|>' → logprob: -7.6622233390808105
    9. '```' → logprob: -7.7872233390808105
    10. '  
' → logprob: -8.037223815917969

Token 89: ' length' (ID: 5517)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.663966953754425
    2. ' return' → logprob: -0.788966953754425
    3. '   ' → logprob: -4.538967132568359
    4. 'pos' → logprob: -5.163967132568359
    5. ' ' → logprob: -5.413967132568359
    6. '
' → logprob: -5.413967132568359
    7. ' 
' → logprob: -6.413967132568359
    8. ' pos' → logprob: -6.538967132568359
    9. '    
' → logprob: -7.538967132568359
    10. '1' → logprob: -7.913967132568359

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269584596157074
    2. '=' → logprob: -2.1269583702087402
    3. ' ' → logprob: -10.751958847045898
    4. '   ' → logprob: -13.126958847045898
    5. '_' → logprob: -13.251958847045898
    6. '-' → logprob: -13.501958847045898
    7. '    ' → logprob: -14.251958847045898
    8. ' -' → logprob: -14.376958847045898
    9. 's' → logprob: -14.501958847045898
    10. ',' → logprob: -14.751958847045898

Token 91: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.026306336745619774
    2. 'pos' → logprob: -3.651306390762329
    3. '   ' → logprob: -12.77630615234375
    4. ' ' → logprob: -13.02630615234375
    5. '	pos' → logprob: -14.65130615234375
    6. '_pos' → logprob: -15.15130615234375
    7. '    ' → logprob: -16.15130615234375
    8. ' posit' → logprob: -16.40130615234375
    9. 'Pos' → logprob: -16.90130615234375
    10. '(pos' → logprob: -17.15130615234375

Token 92: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02324780821800232
    2. '-' → logprob: -3.773247718811035
    3. '-start' → logprob: -13.023247718811035
    4. ' ' → logprob: -16.27324867248535
    5. '−' → logprob: -18.52324867248535
    6. '[start' → logprob: -18.52324867248535
    7. '   ' → logprob: -18.89824867248535
    8. '[' → logprob: -19.27324867248535
    9. '-end' → logprob: -19.52324867248535
    10. ' –' → logprob: -19.52324867248535

Token 93: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.029750952497124672
    2. ' start' → logprob: -3.5297510623931885
    3. ' ' → logprob: -15.40475082397461
    4. '[start' → logprob: -16.27975082397461
    5. '	start' → logprob: -16.77975082397461
    6. '(start' → logprob: -16.77975082397461
    7. '   ' → logprob: -17.27975082397461
    8. '_start' → logprob: -18.77975082397461
    9. '=start' → logprob: -18.77975082397461
    10. 'Start' → logprob: -19.40475082397461

Token 94: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4884564280509949
    2. '
' → logprob: -0.9884564280509949
    3. ' return' → logprob: -4.8634562492370605
    4. 'return' → logprob: -5.4884562492370605
    5. '	return' → logprob: -6.9884562492370605
    6. '    
' → logprob: -7.8634562492370605
    7. ':return' → logprob: -8.738456726074219
    8. '  
' → logprob: -8.863456726074219
    9. '```' → logprob: -8.863456726074219
    10. ' 
' → logprob: -9.238456726074219

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06291491538286209
    2. '
' → logprob: -2.9379148483276367
    3. ' return' → logprob: -5.437914848327637
    4. 'return' → logprob: -6.687914848327637
    5. '	return' → logprob: -7.062914848327637
    6. '```' → logprob: -7.812914848327637
    7. ':return' → logprob: -8.187914848327637
    8. '    
' → logprob: -8.312914848327637
    9. '\n' → logprob: -8.812914848327637
    10. ',' → logprob: -9.062914848327637

Token 96: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1026369109749794
    2. 'return' (adapté à ' return') → logprob: -2.9776368141174316
    3. ' return' → logprob: -3.1026368141174316
    4. '
' → logprob: -6.977636814117432
    5. '	return' → logprob: -7.227636814117432
    6. '```' → logprob: -11.22763729095459
    7. ':return' → logprob: -11.97763729095459
    8. '    
' → logprob: -12.10263729095459
    9. ' ' → logprob: -12.47763729095459
    10. '  ' → logprob: -13.10263729095459

Token 97: ' start' (ID: 1604)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.07918389141559601
    2. ' length' → logprob: -2.57918381690979
    3. '(length' → logprob: -8.329183578491211
    4. 'start' → logprob: -10.079183578491211
    5. ' start' → logprob: -11.704183578491211
    6. ' (' → logprob: -13.954183578491211
    7. 'leng' → logprob: -14.829183578491211
    8. '(start' → logprob: -14.829183578491211
    9. '(' → logprob: -15.454183578491211
    10. '[length' → logprob: -15.579183578491211

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01034063845872879
    2. ',length' → logprob: -4.635340690612793
    3. ' ,' → logprob: -8.135340690612793
    4. '+' → logprob: -8.885340690612793
    5. ',
' → logprob: -9.760340690612793
    6. '<|end|>' → logprob: -10.135340690612793
    7. ' +' → logprob: -11.260340690612793
    8. 'length' → logprob: -11.260340690612793
    9. ',len' → logprob: -11.885340690612793
    10. '-length' → logprob: -12.010340690612793

Token 99: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.10020667314529419
    2. 'length' → logprob: -2.3502066135406494
    3. '(length' → logprob: -17.60020637512207
    4. '	length' → logprob: -20.22520637512207
    5. ' lenght' → logprob: -20.35020637512207
    6. ',length' → logprob: -20.85020637512207
    7. 'ength' → logprob: -20.97520637512207
    8. 'leng' → logprob: -21.22520637512207
    9. '[length' → logprob: -21.35020637512207
    10. '-length' → logprob: -21.85020637512207

Token 100: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: 'while' (ID: 7032)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2456997632980347
    2. '\n' → logprob: -1.3706997632980347
    3. '```' → logprob: -1.9956997632980347
    4. '#' → logprob: -2.495699882507324
    5. ')' → logprob: -2.745699882507324
    6. '\' → logprob: -2.870699882507324
    7. '<|end|>' → logprob: -3.120699882507324
    8. '(' → logprob: -3.995699882507324
    9. 'newline' → logprob: -3.995699882507324
    10. '[' → logprob: -4.620699882507324

Token 102: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.01641872338950634
    2. ' x' → logprob: -4.266418933868408
    3. ' ' → logprob: -6.766418933868408
    4. 'True' → logprob: -7.516418933868408
    5. ' not' → logprob: -8.26641845703125
    6. ' y' → logprob: -9.01641845703125
    7. '_' → logprob: -9.76641845703125
    8. ' i' → logprob: -10.76641845703125
    9. ' (' → logprob: -11.14141845703125
    10. ' space' → logprob: -11.26641845703125

Token 103: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002126233885064721
    2. ' :' → logprob: -6.752126216888428
    3. '():' → logprob: -7.002126216888428
    4. '(' → logprob: -11.002126693725586
    5. ':**' → logprob: -11.377126693725586
    6. '):' → logprob: -12.752126693725586
    7. '   ' → logprob: -12.752126693725586
    8. ':
' → logprob: -12.752126693725586
    9. ':def' → logprob: -13.502126693725586
    10. '(:' → logprob: -13.752126693725586

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07012760639190674
    2. ' x' → logprob: -3.195127487182617
    3. ' try' → logprob: -3.945127487182617
    4. '    
' → logprob: -5.695127487182617
    5. 'x' → logprob: -6.570127487182617
    6. ' input' → logprob: -6.695127487182617
    7. ' n' → logprob: -8.195127487182617
    8. ' user' → logprob: -8.195127487182617
    9. ' 
' → logprob: -8.695127487182617
    10. 'try' → logprob: -8.820127487182617

Token 105: ' x' (ID: 1215)
  Prédit: ' try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' try' → logprob: -1.0390281677246094
    2. 'try' → logprob: -1.1640281677246094
    3. ' line' → logprob: -1.2890281677246094
    4. 'line' → logprob: -4.414028167724609
    5. ' user' → logprob: -4.539028167724609
    6. ' x' → logprob: -4.664028167724609
    7. 'x' (adapté à ' x') → logprob: -5.039028167724609
    8. ' inp' → logprob: -5.414028167724609
    9. '   ' → logprob: -5.539028167724609
    10. ' n' → logprob: -5.789028167724609

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027741294354200363
    2. ' ,' → logprob: -4.152741432189941
    3. ' =' → logprob: -4.527741432189941
    4. ' ' → logprob: -7.902741432189941
    5. '=' → logprob: -8.277741432189941
    6. ',input' → logprob: -9.027741432189941
    7. '=input' → logprob: -10.402741432189941
    8. ',y' → logprob: -12.027741432189941
    9. 'input' → logprob: -12.152741432189941
    10. ' =
' → logprob: -12.402741432189941

Token 107: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5761661529541016
    2. ' y' → logprob: -0.8261661529541016
    3. ' ' → logprob: -8.826166152954102
    4. '<|end|>' → logprob: -9.576166152954102
    5. '	y' → logprob: -12.576166152954102
    6. '_y' → logprob: -13.576166152954102
    7. '<|end|>' → logprob: -13.576166152954102
    8. ''y' → logprob: -14.076166152954102
    9. '  ' → logprob: -14.326166152954102
    10. '*y' → logprob: -14.576166152954102

Token 108: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931677460670471
    2. ' =' → logprob: -0.6931677460670471
    3. '=input' → logprob: -11.568167686462402
    4. '<|end|>' → logprob: -12.193167686462402
    5. ',' → logprob: -12.818167686462402
    6. ' ' → logprob: -13.943167686462402
    7. ' =
' → logprob: -14.318167686462402
    8. '=
' → logprob: -14.943167686462402
    9. '=

' → logprob: -15.068167686462402
    10. ')' → logprob: -15.068167686462402

Token 109: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.03460447117686272
    2. 'map' → logprob: -3.409604549407959
    3. ' input' → logprob: -7.284604549407959
    4. 'input' → logprob: -8.9096040725708
    5. ' [' → logprob: -9.9096040725708
    6. '[' → logprob: -10.2846040725708
    7. ' ' → logprob: -10.6596040725708
    8. ' list' → logprob: -11.0346040725708
    9. '(map' → logprob: -12.2846040725708
    10. '	map' → logprob: -12.5346040725708

Token 110: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.08936906605958939
    2. '(input' → logprob: -2.589369058609009
    3. '(' → logprob: -4.714369297027588
    4. '(str' → logprob: -6.589369297027588
    5. 'input' → logprob: -10.08936882019043
    6. 'int' → logprob: -10.71436882019043
    7. '(list' → logprob: -11.83936882019043
    8. '(eval' → logprob: -12.71436882019043
    9. '<int' → logprob: -13.33936882019043
    10. '```' → logprob: -13.71436882019043

Token 111: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.013955225236713886
    2. 'input' → logprob: -4.513955116271973
    3. ')' → logprob: -6.138955116271973
    4. '(' → logprob: -7.638955116271973
    5. ',input' → logprob: -9.013955116271973
    6. ' input' → logprob: -9.638955116271973
    7. '=input' → logprob: -10.013955116271973
    8. ')(' → logprob: -11.013955116271973
    9. '[input' → logprob: -12.638955116271973
    10. ' (' → logprob: -13.013955116271973

Token 112: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.038046084344387054
    2. ' input' → logprob: -3.28804612159729
    3. ')' → logprob: -13.288045883178711
    4. '(input' → logprob: -13.663045883178711
    5. '=input' → logprob: -14.913045883178711
    6. ' ' → logprob: -15.038045883178711
    7. '   ' → logprob: -15.038045883178711
    8. ',input' → logprob: -15.038045883178711
    9. '	input' → logprob: -15.413045883178711
    10. '```' → logprob: -15.663045883178711

Token 113: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.004528384655714035
    2. '()' → logprob: -5.504528522491455
    3. '("' → logprob: -8.629528045654297
    4. '('' → logprob: -8.754528045654297
    5. '(' → logprob: -9.629528045654297
    6. '())' → logprob: -10.379528045654297
    7. '("("' → logprob: -11.879528045654297
    8. ')' → logprob: -13.629528045654297
    9. '("").' → logprob: -13.629528045654297
    10. '());' → logprob: -13.754528045654297

Token 114: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.002478985348716378
    2. 'strip' → logprob: -6.002479076385498
    3. 'rstrip' → logprob: -13.00247859954834
    4. ' split' → logprob: -14.25247859954834
    5. '(split' → logprob: -15.62747859954834
    6. '().' → logprob: -16.252479553222656
    7. 'read' → logprob: -16.627479553222656
    8. '.split' → logprob: -17.377479553222656
    9. ')' → logprob: -17.502479553222656
    10. '_split' → logprob: -18.002479553222656

Token 115: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00642936397343874
    2. '()' → logprob: -6.131429195404053
    3. '('' → logprob: -6.256429195404053
    4. ')' → logprob: -6.381429195404053
    5. '()))' → logprob: -7.631429195404053
    6. '(' → logprob: -9.631429672241211
    7. '))' → logprob: -10.881429672241211
    8. '("' → logprob: -10.881429672241211
    9. '(','' → logprob: -11.131429672241211
    10. '())
' → logprob: -12.506429672241211

Token 116: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4898744523525238
    2. 'if' → logprob: -0.9898744821548462
    3. '<|end|>' → logprob: -4.364874362945557
    4. '   ' → logprob: -6.489874362945557
    5. ' ' → logprob: -6.989874362945557
    6. ',' → logprob: -8.864874839782715
    7. '    ' → logprob: -9.114874839782715
    8. '  ' → logprob: -9.739874839782715
    9. 'i' → logprob: -9.739874839782715
    10. '<|end|>' → logprob: -10.364874839782715

Token 117: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00467054545879364
    2. ' if' → logprob: -5.3796706199646
    3. 'i' → logprob: -10.629670143127441
    4. '   ' → logprob: -11.754670143127441
    5. 'result' → logprob: -12.254670143127441
    6. 'start' → logprob: -12.254670143127441
    7. 'break' → logprob: -12.379670143127441
    8. 'print' → logprob: -13.754670143127441
    9. 'res' → logprob: -14.379670143127441
    10. 'length' → logprob: -14.629670143127441

Token 118: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5766929388046265
    2. 'x' → logprob: -0.8266929388046265
    3. '(x' → logprob: -7.576693058013916
    4. ' (' → logprob: -9.076692581176758
    5. ' not' → logprob: -9.326692581176758
    6. '(' → logprob: -10.451692581176758
    7. ' ' → logprob: -12.326692581176758
    8. ' y' → logprob: -13.326692581176758
    9. 'not' → logprob: -13.576692581176758
    10. '	x' → logprob: -14.451692581176758

Token 119: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3142958879470825
    2. ' ==' → logprob: -1.3142958879470825
    3. '<|end|>' → logprob: -8.064295768737793
    4. ' ' → logprob: -8.314295768737793
    5. '<' → logprob: -9.064295768737793
    6. '%' → logprob: -9.689295768737793
    7. '=' → logprob: -9.814295768737793
    8. ' <' → logprob: -9.939295768737793
    9. '<=' → logprob: -9.939295768737793
    10. ' <=' → logprob: -10.564295768737793

Token 120: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0790998563170433
    2. ' ' → logprob: -2.5790998935699463
    3. 'y' → logprob: -8.954099655151367
    4. ' y' → logprob: -9.454099655151367
    5. '-' → logprob: -14.454099655151367
    6. '```' → logprob: -14.829099655151367
    7. '  ' → logprob: -14.891599655151367
    8. '1' → logprob: -15.766599655151367
    9. '۰' → logprob: -15.891599655151367
    10. '=' → logprob: -15.954099655151367

Token 121: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018113377154804766
    2. ' ' → logprob: -8.875181198120117
    3. 'y' → logprob: -10.375181198120117
    4. '-' → logprob: -12.125181198120117
    5. '```' → logprob: -13.375181198120117
    6. ' y' → logprob: -13.875181198120117
    7. '1' → logprob: -14.562681198120117
    8. '۰' → logprob: -15.812681198120117
    9. ' -' → logprob: -16.000181198120117
    10. '=' → logprob: -16.000181198120117

Token 122: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4756394326686859
    2. 'and' → logprob: -0.9756394624710083
    3. ' or' → logprob: -6.475639343261719
    4. ' ' → logprob: -11.350639343261719
    5. 'or' → logprob: -11.850639343261719
    6. '	and' → logprob: -14.350639343261719
    7. '0' → logprob: -14.975639343261719
    8. '<|end|>' → logprob: -15.225639343261719
    9. ':' → logprob: -15.475639343261719
    10. ' и' → logprob: -16.22563934326172

Token 123: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5759432315826416
    2. ' y' → logprob: -0.8259432315826416
    3. '	y' → logprob: -12.700942993164062
    4. '   ' → logprob: -14.575942993164062
    5. ' ' → logprob: -15.450942993164062
    6. '    ' → logprob: -16.950942993164062
    7. '  ' → logprob: -17.575942993164062
    8. '_y' → logprob: -18.825942993164062
    9. 'x' → logprob: -19.325942993164062
    10. ''y' → logprob: -19.450942993164062

Token 124: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2023383229970932
    2. '==' → logprob: -1.7023383378982544
    3. '<|end|>' → logprob: -7.077338218688965
    4. ' ' → logprob: -10.202338218688965
    5. '<|end|>' → logprob: -10.952338218688965
    6. '```' → logprob: -12.327338218688965
    7. ')==' → logprob: -12.452338218688965
    8. ' ' → logprob: -12.702338218688965
    9. ' =' → logprob: -12.952338218688965
    10. '=' → logprob: -12.952338218688965

Token 125: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005233882926404476
    2. ' ' → logprob: -5.2552337646484375
    3. '   ' → logprob: -16.255233764648438
    4. '<|end|>' → logprob: -17.380233764648438
    5. '  ' → logprob: -17.505233764648438
    6. '۰' → logprob: -19.442733764648438
    7. ' ' → logprob: -19.630233764648438
    8. '```' → logprob: -20.255233764648438
    9. '<|end|>' → logprob: -20.255233764648438
    10. '    ' → logprob: -20.505233764648438

Token 126: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007108822464942932
    2. ' ' → logprob: -7.250710964202881
    3. '  ' → logprob: -15.625710487365723
    4. '   ' → logprob: -15.625710487365723
    5. '<|end|>' → logprob: -15.938210487365723
    6. '```' → logprob: -16.12571144104004
    7. '۰' → logprob: -16.56321144104004
    8. '1' → logprob: -17.12571144104004
    9. ' ' → logprob: -17.25071144104004
    10. '<|end|>' → logprob: -17.56321144104004

Token 127: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03806719928979874
    2. ':
' → logprob: -3.288067102432251
    3. '   ' → logprob: -10.663066864013672
    4. '       ' → logprob: -13.788066864013672
    5. ':
' → logprob: -15.288066864013672
    6. '):
' → logprob: -15.413066864013672
    7. ':return' → logprob: -15.663066864013672
    8. ':

' → logprob: -16.038066864013672
    9. ' :' → logprob: -16.163066864013672
    10. ',' → logprob: -16.538066864013672

Token 128: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.651688277721405
    2. '       ' → logprob: -0.776688277721405
    3. '   ' → logprob: -4.151688098907471
    4. ':
' → logprob: -5.776688098907471
    5. '.' → logprob: -11.026688575744629
    6. '	break' → logprob: -11.151688575744629
    7. '      ' → logprob: -12.026688575744629
    8. ' break' → logprob: -12.151688575744629
    9. '     ' → logprob: -12.151688575744629
    10. ',' → logprob: -12.151688575744629

Token 129: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.49198099970817566
    2. '       ' → logprob: -1.491981029510498
    3. 'break' (adapté à ' break') → logprob: -1.866981029510498
    4. '   ' → logprob: -4.991981029510498
    5. '	break' → logprob: -6.116981029510498
    6. '           ' → logprob: -10.61698055267334
    7. '_break' → logprob: -10.86698055267334
    8. '```' → logprob: -11.99198055267334
    9. '    
' → logprob: -12.11698055267334
    10. '        
' → logprob: -12.99198055267334

Token 130: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3378252387046814
    2. '   ' → logprob: -2.087825298309326
    3. 'print' → logprob: -2.337825298309326
    4. '    
' → logprob: -3.212825298309326
    5. '<|end|>' → logprob: -4.587825298309326
    6. ' print' → logprob: -5.462825298309326
    7. '  
' → logprob: -5.462825298309326
    8. '   
' → logprob: -6.087825298309326
    9. ' 
' → logprob: -6.212825298309326
    10. '```' → logprob: -7.087825298309326

Token 131: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4002121686935425
    2. '   ' → logprob: -1.4002121686935425
    3. '
' → logprob: -2.775212287902832
    4. '    
' → logprob: -4.650212287902832
    5. ' print' → logprob: -5.025212287902832
    6. '<|end|>' → logprob: -6.650212287902832
    7. '```' → logprob: -6.775212287902832
    8. '  
' → logprob: -7.275212287902832
    9. '   
' → logprob: -7.900212287902832
    10. '  ' → logprob: -8.025212287902832

Token 132: ' a' (ID: 261)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.9873297214508057
    2. 'start' → logprob: -1.1123297214508057
    3. 'print' → logprob: -2.6123297214508057
    4. ' print' → logprob: -2.6123297214508057
    5. '   ' → logprob: -2.8623297214508057
    6. ' length' → logprob: -2.9873297214508057
    7. 'length' → logprob: -4.112329483032227
    8. 'result' → logprob: -4.362329483032227
    9. ' result' → logprob: -4.487329483032227
    10. 's' → logprob: -6.737329483032227

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04709744080901146
    2. '_start' → logprob: -3.6720974445343018
    3. '_length' → logprob: -4.922097206115723
    4. ' =' → logprob: -5.672097206115723
    5. ' ,' → logprob: -5.922097206115723
    6. 'start' → logprob: -6.297097206115723
    7. ',b' → logprob: -6.672097206115723
    8. '_div' → logprob: -7.297097206115723
    9. '=' → logprob: -7.422097206115723
    10. '_n' → logprob: -7.672097206115723

Token 134: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.019294889643788338
    2. ' b' → logprob: -4.019294738769531
    3. 'length' → logprob: -7.394294738769531
    4. 'l' → logprob: -7.644294738769531
    5. ' length' → logprob: -10.519294738769531
    6. ' l' → logprob: -11.144294738769531
    7. 'a' → logprob: -13.394294738769531
    8. '	b' → logprob: -13.394294738769531
    9. '_length' → logprob: -13.894294738769531
    10. 'n' → logprob: -14.394294738769531

Token 135: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4742617607116699
    2. ' =' → logprob: -0.9742617607116699
    3. ',' → logprob: -8.599262237548828
    4. '<|end|>' → logprob: -16.599262237548828
    5. '＝' → logprob: -16.974262237548828
    6. ')' → logprob: -17.224262237548828
    7. '=}' → logprob: -17.474262237548828
    8. '=
' → logprob: -17.474262237548828
    9. '=

' → logprob: -17.474262237548828
    10. 'a' → logprob: -17.974262237548828

Token 136: ' recurring' (ID: 69677)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.08903194963932037
    2. ' recurring' → logprob: -2.464031934738159
    3. ' rec' → logprob: -9.839032173156738
    4. '(rec' → logprob: -11.214032173156738
    5. 'Recurring' → logprob: -11.839032173156738
    6. '   ' → logprob: -12.339032173156738
    7. ' ' → logprob: -12.839032173156738
    8. '	rec' → logprob: -13.339032173156738
    9. 'reci' → logprob: -13.464032173156738
    10. '  ' → logprob: -13.589032173156738

Token 137: '_fraction' (ID: 151287)
  Prédit: '_fraction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fraction' → logprob: -0.0001612267515156418
    2. '_' → logprob: -8.750161170959473
    3. '_factor' → logprob: -13.750161170959473
    4. '_frequency' → logprob: -14.625161170959473
    5. '_frac' → logprob: -15.000161170959473
    6. '_length' → logprob: -15.250161170959473
    7. ' _' → logprob: -16.00016212463379
    8. '_period' → logprob: -16.25016212463379
    9. '_floor' → logprob: -16.50016212463379
    10. 'Fraction' → logprob: -17.25016212463379

Token 138: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.7432603272027336e-06
    2. '_l' → logprob: -13.375001907348633
    3. '_' → logprob: -16.750001907348633
    4. '_le' → logprob: -17.125001907348633
    5. '_len' → logprob: -18.000001907348633
    6. '_lengths' → logprob: -18.000001907348633
    7. 'length' → logprob: -19.000001907348633
    8. ' _' → logprob: -19.125001907348633
    9. 'Length' → logprob: -19.500001907348633
    10. '_Length' → logprob: -19.875001907348633

Token 139: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.004102146718651056
    2. '(' → logprob: -5.5041022300720215
    3. ' (' → logprob: -10.879101753234863
    4. '(
' → logprob: -12.504101753234863
    5. '(a' → logprob: -15.504101753234863
    6. '<|end|>' → logprob: -15.879101753234863
    7. '(i' → logprob: -16.00410270690918
    8. '((' → logprob: -16.12910270690918
    9. '```' → logprob: -16.25410270690918
    10. '(y' → logprob: -16.50410270690918

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03399604186415672
    2. ',y' → logprob: -3.408996105194092
    3. ' ,' → logprob: -8.158995628356934
    4. 'y' → logprob: -10.533995628356934
    5. '   ' → logprob: -11.908995628356934
    6. ',b' → logprob: -12.033995628356934
    7. ',
' → logprob: -12.658995628356934
    8. '```' → logprob: -12.783995628356934
    9. '`,' → logprob: -13.158995628356934
    10. '',' → logprob: -13.283995628356934

Token 141: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.002475777640938759
    2. ' y' → logprob: -6.002475738525391
    3. ')y' → logprob: -17.00247573852539
    4. '	y' → logprob: -17.75247573852539
    5. '<|end|>' → logprob: -17.75247573852539
    6. ')' → logprob: -18.50247573852539
    7. '   ' → logprob: -19.00247573852539
    8. ' ' → logprob: -19.25247573852539
    9. ''y' → logprob: -19.75247573852539
    10. '‘y' → logprob: -20.00247573852539

Token 142: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2520774304866791
    2. ')' → logprob: -1.5020774602890015
    3. ')
' → logprob: -8.877077102661133
    4. ' )
' → logprob: -12.502077102661133
    5. '   ' → logprob: -13.252077102661133
    6. ')

' → logprob: -13.377077102661133
    7. ')`
' → logprob: -14.127077102661133
    8. ' )' → logprob: -14.627077102661133
    9. ')`' → logprob: -16.627077102661133
    10. '[' → logprob: -16.877077102661133

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10217971354722977
    2. 'print' → logprob: -2.352179765701294
    3. ' print' → logprob: -6.602179527282715
    4. '<|end|>' → logprob: -7.977179527282715
    5. '
' → logprob: -8.727179527282715
    6. '    
' → logprob: -9.727179527282715
    7. '```' → logprob: -11.102179527282715
    8. '  ' → logprob: -12.102179527282715
    9. '	print' → logprob: -12.602179527282715
    10. 'if' → logprob: -12.602179527282715

Token 144: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0337761752307415
    2. 'if' → logprob: -4.28377628326416
    3. ' print' → logprob: -4.28377628326416
    4. ' if' → logprob: -5.53377628326416
    5. '   ' → logprob: -6.40877628326416
    6. 'for' → logprob: -10.78377628326416
    7. ' for' → logprob: -12.28377628326416
    8. '    
' → logprob: -13.03377628326416
    9. '```' → logprob: -13.40877628326416
    10. ' 
' → logprob: -14.28377628326416

Token 145: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.036561813205480576
    2. '(f' → logprob: -3.4115617275238037
    3. '(' → logprob: -6.036561965942383
    4. '(b' → logprob: -8.036561965942383
    5. '('' → logprob: -9.661561965942383
    6. 'a' → logprob: -10.036561965942383
    7. '((' → logprob: -10.411561965942383
    8. '("' → logprob: -10.661561965942383
    9. 'f' → logprob: -10.911561965942383
    10. '(abs' → logprob: -12.411561965942383

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1359839290380478
    2. ',b' → logprob: -2.135983943939209
    3. ' ,' → logprob: -4.885983943939209
    4. ' b' → logprob: -7.010983943939209
    5. 'b' → logprob: -8.63598346710205
    6. ',end' → logprob: -9.13598346710205
    7. ')' → logprob: -9.26098346710205
    8. '+b' → logprob: -9.88598346710205
    9. ',f' → logprob: -10.13598346710205
    10. '+' → logprob: -10.13598346710205

Token 147: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20141372084617615
    2. ' b' → logprob: -1.7014137506484985
    3. ' ' → logprob: -15.326414108276367
    4. '    ' → logprob: -15.701414108276367
    5. ')b' → logprob: -16.826414108276367
    6. ''' → logprob: -17.201414108276367
    7. '"' → logprob: -17.576414108276367
    8. ''b' → logprob: -18.076414108276367
    9. '   ' → logprob: -18.451414108276367
    10. ' ' → logprob: -18.451414108276367

Token 148: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.375
    3. ')
' → logprob: -16.25
    4. '))' → logprob: -17.125
    5. ')`' → logprob: -17.875
    6. '')' → logprob: -18.125
    7. '`)' → logprob: -19.5
    8. '")' → logprob: -19.625
    9. ')")' → logprob: -20.625
    10. '())' → logprob: -20.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 146
Tokens correctement prédits (1ère position, stricte): 68
Tokens correctement prédits (1ère position, avec adaptation): 71
Tokens correctement prédits (top 10): 129
Précision stricte (1ère position): 46.58%
Précision adaptée (1ère position): 48.63%
Précision (top 10): 88.36%
================================================================================
