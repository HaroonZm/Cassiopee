================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:57:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    W, Q = map(int, input().split())
    if W == 0 and Q == 0:
        break

    fence = [False] * W  # False means free, True means occupied
    cats = {}  # id -> (start, width)

    for _ in range(Q):
        line = input().split()
        if line[0] == 's':
            cat_id = int(line[1])
            w = int(line[2])

            pos = -1
            length = 0
            for i in range(W):
                if not fence[i]:
                    length += 1
                else:
                    length = 0
                if length >= w:
                    pos = i - w + 1
                    break

            if pos == -1:
                print("impossible")
            else:
                for i in range(pos, pos + w):
                    fence[i] = True
                cats[cat_id] = (pos, w)
                print(pos)

        else:  # wakeup
            cat_id = int(line[1])
            pos, w = cats[cat_id]
            for i in range(pos, pos + w):
                fence[i] = False
            del cats[cat_id]

    print("END")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.61203932762146
    2. '    ' → logprob: -2.23703932762146
    3. '    
' → logprob: -2.61203932762146
    4. '\' → logprob: -2.86203932762146
    5. '\n' → logprob: -2.86203932762146
    6. '```' → logprob: -3.23703932762146
    7. ' ' → logprob: -3.36203932762146
    8. ' 
' → logprob: -3.61203932762146
    9. '  
' → logprob: -4.112039566040039
    10. '     
' → logprob: -4.237039566040039

Token 4: ' W' (ID: 486)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4779955744743347
    2. '    ' → logprob: -1.7279956340789795
    3. ' ' → logprob: -1.9779956340789795
    4. '```' → logprob: -3.6029956340789795
    5. '       ' → logprob: -4.7279953956604
    6. '  ' → logprob: -5.3529953956604
    7. '    
' → logprob: -5.6029953956604
    8. '        
' → logprob: -6.6029953956604
    9. 'pass' → logprob: -6.7279953956604
    10. '`' → logprob: -6.7279953956604

Token 5: ',' (ID: 11)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.010852797888219357
    2. 'hile' → logprob: -4.760852813720703
    3. 'i' → logprob: -6.885852813720703
    4. '=' → logprob: -8.260852813720703
    5. 'a' → logprob: -8.385852813720703
    6. 'H' → logprob: -8.760852813720703
    7. '   ' → logprob: -8.885852813720703
    8. '.' → logprob: -9.510852813720703
    9. '```' → logprob: -9.760852813720703
    10. ':' → logprob: -10.010852813720703

Token 6: ' Q' (ID: 1486)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.6802610754966736
    2. 'H' → logprob: -2.1802611351013184
    3. ' h' → logprob: -2.9302611351013184
    4. ' H' → logprob: -3.0552611351013184
    5. ' =' → logprob: -3.0552611351013184
    6. 'a' → logprob: -3.4302611351013184
    7. 'e' → logprob: -3.4302611351013184
    8. '   ' → logprob: -3.9302611351013184
    9. 'i' → logprob: -4.055261135101318
    10. '_' → logprob: -4.055261135101318

Token 7: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6893283128738403
    2. '=' → logprob: -0.8143283128738403
    3. ',' → logprob: -2.939328193664551
    4. ')' → logprob: -7.064328193664551
    5. ' ' → logprob: -7.814328193664551
    6. '_' → logprob: -7.939328193664551
    7. '[' → logprob: -8.06432819366455
    8. ' ,' → logprob: -8.68932819366455
    9. '.' → logprob: -9.93932819366455
    10. '  ' → logprob: -10.43932819366455

Token 8: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.35150495171546936
    2. 'map' → logprob: -1.601504921913147
    3. ' input' → logprob: -2.9765050411224365
    4. 'input' → logprob: -3.2265050411224365
    5. ' [' → logprob: -7.101504802703857
    6. ' list' → logprob: -7.226504802703857
    7. ' int' → logprob: -7.226504802703857
    8. 'int' → logprob: -7.601504802703857
    9. 'list' → logprob: -7.726504802703857
    10. '[' → logprob: -8.726505279541016

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.021161137148737907
    2. '(' → logprob: -4.021161079406738
    3. '(str' → logprob: -6.146161079406738
    4. 'int' → logprob: -7.896161079406738
    5. '(input' → logprob: -8.146161079406738
    6. '(lambda' → logprob: -9.021161079406738
    7. '<int' → logprob: -10.896161079406738
    8. 'str' → logprob: -11.396161079406738
    9. '(list' → logprob: -11.646161079406738
    10. ' int' → logprob: -11.771161079406738

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.038072481751441956
    2. ')' → logprob: -3.6630725860595703
    3. '(' → logprob: -5.03807258605957
    4. 'input' → logprob: -5.41307258605957
    5. ' input' → logprob: -7.78807258605957
    6. ',input' → logprob: -8.78807258605957
    7. ' (' → logprob: -10.53807258605957
    8. ',' → logprob: -10.53807258605957
    9. '=input' → logprob: -10.53807258605957
    10. '<|end|>' → logprob: -10.78807258605957

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.012533903121948242
    2. ' input' → logprob: -4.387534141540527
    3. ')' → logprob: -11.012534141540527
    4. '(input' → logprob: -12.012534141540527
    5. 'W' → logprob: -15.262534141540527
    6. '=input' → logprob: -15.262534141540527
    7. '```' → logprob: -15.387534141540527
    8. ',input' → logprob: -15.512534141540527
    9. ' ' → logprob: -15.762534141540527
    10. '	input' → logprob: -16.01253318786621

Token 12: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5849201679229736
    2. '())' → logprob: -0.8349201679229736
    3. '().' → logprob: -4.8349199295043945
    4. '('' → logprob: -8.209919929504395
    5. '());' → logprob: -8.334919929504395
    6. ')' → logprob: -9.334919929504395
    7. '()))' → logprob: -9.334919929504395
    8. '(' → logprob: -9.959919929504395
    9. '();)' → logprob: -10.084919929504395
    10. '("' → logprob: -10.209919929504395

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005309773609042168
    2. 'strip' → logprob: -5.255309581756592
    3. 'rstrip' → logprob: -9.50531005859375
    4. ' split' → logprob: -14.13031005859375
    5. '(split' → logprob: -14.13031005859375
    6. ')' → logprob: -16.38031005859375
    7. 'read' → logprob: -17.13031005859375
    8. 'replace' → logprob: -17.13031005859375
    9. 'plit' → logprob: -18.13031005859375
    10. 'startswith' → logprob: -18.38031005859375

Token 14: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5302040576934814
    2. ')' → logprob: -1.0302040576934814
    3. '))' → logprob: -3.4052040576934814
    4. '()' → logprob: -4.030203819274902
    5. '()))' → logprob: -5.655203819274902
    6. '(' → logprob: -11.155203819274902
    7. '),' → logprob: -11.280203819274902
    8. '()),' → logprob: -11.280203819274902
    9. '(),' → logprob: -11.905203819274902
    10. '('' → logprob: -11.905203819274902

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08525804430246353
    2. ' if' → logprob: -3.8352580070495605
    3. '```' → logprob: -3.8352580070495605
    4. ':' → logprob: -4.2102580070495605
    5. '       ' → logprob: -4.4602580070495605
    6. ')' → logprob: -6.2102580070495605
    7. '    
' → logprob: -6.3352580070495605
    8. 'if' → logprob: -6.4602580070495605
    9. '<|end|>' → logprob: -6.5852580070495605
    10. ':
' → logprob: -6.7102580070495605

Token 16: ' if' (ID: 538)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.49304741621017456
    2. ' if' → logprob: -1.7430474758148193
    3. '<|end|>' → logprob: -2.6180474758148193
    4. '   ' → logprob: -2.8680474758148193
    5. ' ' → logprob: -3.4930474758148193
    6. 'if' (adapté à ' if') → logprob: -3.6180474758148193
    7. ')' → logprob: -5.11804723739624
    8. ':
' → logprob: -5.74304723739624
    9. '\n' → logprob: -5.74304723739624
    10. '       ' → logprob: -5.99304723739624

Token 17: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.06617021560668945
    2. ' not' → logprob: -2.9411702156066895
    3. 'W' → logprob: -4.6911702156066895
    4. ' ' → logprob: -6.5661702156066895
    5. ' Q' → logprob: -7.8161702156066895
    6. 'not' → logprob: -8.566169738769531
    7. 'Q' → logprob: -11.191169738769531
    8. ' (' → logprob: -11.191169738769531
    9. ' ' → logprob: -11.441169738769531
    10. ')' → logprob: -13.316169738769531

Token 18: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9674949049949646
    2. ' <' → logprob: -1.4674949645996094
    3. ' >' → logprob: -2.0924949645996094
    4. ' <=' → logprob: -2.0924949645996094
    5. ' >=' → logprob: -3.0924949645996094
    6. '==' → logprob: -3.3424949645996094
    7. '<' → logprob: -3.7174949645996094
    8. '>' → logprob: -4.092494964599609
    9. ' ' → logprob: -4.592494964599609
    10. '<=' → logprob: -5.592494964599609

Token 19: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5777959823608398
    2. '0' → logprob: -0.8277959823608398
    3. 'Q' → logprob: -6.95279598236084
    4. ' Q' → logprob: -7.07779598236084
    5. '  ' → logprob: -11.64029598236084
    6. '-' → logprob: -11.82779598236084
    7. '1' → logprob: -11.82779598236084
    8. ' -' → logprob: -12.39029598236084
    9. '   ' → logprob: -12.89029598236084
    10. '```' → logprob: -12.89029598236084

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004918735474348068
    2. ' ' → logprob: -5.754918575286865
    3. 'Q' → logprob: -6.379918575286865
    4. ' Q' → logprob: -11.004919052124023
    5. '-' → logprob: -11.629919052124023
    6. '1' → logprob: -12.129919052124023
    7. '```' → logprob: -13.129919052124023
    8. '-Q' → logprob: -13.879919052124023
    9. 'and' → logprob: -14.129919052124023
    10. '   ' → logprob: -14.317419052124023

Token 21: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.009448518976569176
    2. 'and' → logprob: -4.759448528289795
    3. ':' → logprob: -7.259448528289795
    4. ' or' → logprob: -9.759448051452637
    5. '   ' → logprob: -10.009448051452637
    6. ' ' → logprob: -10.634448051452637
    7. '    ' → logprob: -14.509448051452637
    8. '  ' → logprob: -14.509448051452637
    9. '	and' → logprob: -14.509448051452637
    10. ' a' → logprob: -14.759448051452637

Token 22: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.5759426355361938
    2. ' Q' → logprob: -0.8259426355361938
    3. ' ' → logprob: -13.200942993164062
    4. '	Q' → logprob: -14.325942993164062
    5. '   ' → logprob: -14.825942993164062
    6. ' ' → logprob: -16.075942993164062
    7. ' and' → logprob: -16.700942993164062
    8. '  ' → logprob: -16.950942993164062
    9. '<|end|>' → logprob: -16.950942993164062
    10. '    ' → logprob: -17.200942993164062

Token 23: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08897196501493454
    2. '==' → logprob: -2.4639718532562256
    3. '=' → logprob: -10.963972091674805
    4. ' ' → logprob: -11.588972091674805
    5. '0' → logprob: -13.463972091674805
    6. ' =' → logprob: -13.713972091674805
    7. '<|end|>' → logprob: -14.463972091674805
    8. ' ' → logprob: -14.713972091674805
    9. ')==' → logprob: -15.088972091674805
    10. '   ' → logprob: -15.088972091674805

Token 24: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16022726893424988
    2. ' ' → logprob: -1.9102272987365723
    3. '  ' → logprob: -13.660226821899414
    4. '   ' → logprob: -14.035226821899414
    5. '1' → logprob: -14.722726821899414
    6. ' ' → logprob: -15.722726821899414
    7. '    ' → logprob: -16.410226821899414
    8. '```' → logprob: -16.410226821899414
    9. '۰' → logprob: -17.035226821899414
    10. ' W' → logprob: -17.410226821899414

Token 25: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005541055579669774
    2. ' ' → logprob: -7.500554084777832
    3. '  ' → logprob: -15.000554084777832
    4. '1' → logprob: -15.125554084777832
    5. '   ' → logprob: -15.813054084777832
    6. '```' → logprob: -16.68805503845215
    7. '9' → logprob: -17.00055503845215
    8. '۰' → logprob: -17.31305503845215
    9. '-' → logprob: -17.50055503845215
    10. '4' → logprob: -17.62555503845215

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00023202638840302825
    2. ':
' → logprob: -9.125231742858887
    3. '       ' → logprob: -9.375231742858887
    4. '   ' → logprob: -10.250231742858887
    5. ' :' → logprob: -13.625231742858887
    6. '):' → logprob: -14.500231742858887
    7. ':return' → logprob: -14.625231742858887
    8. ' break' → logprob: -16.000232696533203
    9. ',' → logprob: -16.375232696533203
    10. '    ' → logprob: -16.500232696533203

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004498604219406843
    2. ':' → logprob: -5.754498481750488
    3. '   ' → logprob: -6.754498481750488
    4. ' break' → logprob: -9.504498481750488
    5. '	break' → logprob: -10.504498481750488
    6. '\n' → logprob: -11.129498481750488
    7. '     ' → logprob: -11.629498481750488
    8. ':
' → logprob: -12.254498481750488
    9. '      ' → logprob: -12.504498481750488
    10. '	' → logprob: -12.754498481750488

Token 28: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.2756710946559906
    2. '       ' → logprob: -1.900671124458313
    3. 'break' (adapté à ' break') → logprob: -2.4006710052490234
    4. '	break' → logprob: -7.775671005249023
    5. '   ' → logprob: -8.025671005249023
    6. '           ' → logprob: -10.275671005249023
    7. '_break' → logprob: -11.775671005249023
    8. 'Break' → logprob: -11.900671005249023
    9. '\n' → logprob: -12.275671005249023
    10. '        
' → logprob: -12.775671005249023

Token 29: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015873173251748085
    2. '    
' → logprob: -5.015872955322266
    3. '\n' → logprob: -5.390872955322266
    4. ':' → logprob: -6.515872955322266
    5. ')' → logprob: -7.015872955322266
    6. '#' → logprob: -7.390872955322266
    7. '       ' → logprob: -8.140872955322266
    8. '\' → logprob: -8.515872955322266
    9. '<|end|>' → logprob: -8.765872955322266
    10. '    ' → logprob: -9.015872955322266

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035071764141321182
    2. '    
' → logprob: -6.253507137298584
    3. '```' → logprob: -8.003507614135742
    4. ')' → logprob: -8.253507614135742
    5. '#' → logprob: -8.628507614135742
    6. ' if' → logprob: -8.878507614135742
    7. 'print' → logprob: -9.128507614135742
    8. 'if' → logprob: -9.503507614135742
    9. '    ' → logprob: -9.628507614135742
    10. 'n' → logprob: -9.753507614135742

Token 31: ' fence' (ID: 42166)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0633135661482811
    2. 'if' → logprob: -4.5633134841918945
    3. 'print' → logprob: -5.1883134841918945
    4. ' if' → logprob: -5.1883134841918945
    5. 'result' → logprob: -5.4383134841918945
    6. '    ' → logprob: -5.5633134841918945
    7. 's' → logprob: -5.8133134841918945
    8. ' ' → logprob: -5.9383134841918945
    9. '```' → logprob: -6.0633134841918945
    10. 'n' → logprob: -6.4383134841918945

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34085655212402344
    2. '=' → logprob: -2.8408565521240234
    3. '_he' → logprob: -2.9658565521240234
    4. '_length' → logprob: -3.3408565521240234
    5. '_lengths' → logprob: -3.3408565521240234
    6. 's' → logprob: -3.3408565521240234
    7. '_height' → logprob: -3.5908565521240234
    8. '_' → logprob: -3.8408565521240234
    9. 'he' → logprob: -4.715856552124023
    10. '_segments' → logprob: -6.215856552124023

Token 33: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.2330764532089233
    2. '[' → logprob: -1.3580764532089233
    3. ' [' → logprob: -1.7330764532089233
    4. '[list' → logprob: -2.108076572418213
    5. ' []' → logprob: -2.733076572418213
    6. 'list' → logprob: -3.108076572418213
    7. ' list' → logprob: -3.358076572418213
    8. '[input' → logprob: -5.358076572418213
    9. '[int' → logprob: -6.358076572418213
    10. '[f' → logprob: -8.483076095581055

Token 34: 'False' (ID: 8168)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.02193932607769966
    2. 'int' → logprob: -4.771939277648926
    3. '0' → logprob: -5.021939277648926
    4. ' list' → logprob: -5.271939277648926
    5. 'False' → logprob: -7.521939277648926
    6. '[int' → logprob: -8.271939277648926
    7. '[]' → logprob: -8.396939277648926
    8. 'input' → logprob: -8.646939277648926
    9. '[list' → logprob: -8.771939277648926
    10. ']' → logprob: -10.021939277648926

Token 35: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019595235586166382
    2. '(' → logprob: -4.519595146179199
    3. ' for' → logprob: -6.019595146179199
    4. ')' → logprob: -6.394595146179199
    5. ')]' → logprob: -6.769595146179199
    6. ']*' → logprob: -6.894595146179199
    7. ',' → logprob: -7.019595146179199
    8. ' ]' → logprob: -8.0195951461792
    9. '[' → logprob: -8.1445951461792
    10. '(W' → logprob: -8.3945951461792

Token 36: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4411824941635132
    2. ' *' → logprob: -1.4411824941635132
    3. ']' → logprob: -2.9411826133728027
    4. '(' → logprob: -4.191182613372803
    5. ')' → logprob: -4.566182613372803
    6. ',' → logprob: -4.691182613372803
    7. '[' → logprob: -4.816182613372803
    8. ' for' → logprob: -4.941182613372803
    9. '+' → logprob: -5.191182613372803
    10. ' ]' → logprob: -5.691182613372803

Token 37: ' W' (ID: 486)
  Prédit: '(W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.5916668176651001
    2. 'W' → logprob: -0.8416668176651001
    3. '100' → logprob: -5.0916666984558105
    4. '(' → logprob: -5.4666666984558105
    5. '101' → logprob: -6.4666666984558105
    6. ' (' → logprob: -7.4666666984558105
    7. '(Q' → logprob: -7.8416666984558105
    8. ' W' → logprob: -7.9666666984558105
    9. 'Q' → logprob: -8.216667175292969
    10. '10' → logprob: -8.341667175292969

Token 38: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12335994839668274
    2. '<|end|>' → logprob: -3.1233599185943604
    3. 'for' → logprob: -3.4983599185943604
    4. ' for' → logprob: -4.1233601570129395
    5. '    
' → logprob: -4.4983601570129395
    6. '\n' → logprob: -6.4983601570129395
    7. '  ' → logprob: -6.6233601570129395
    8. ' ' → logprob: -6.6233601570129395
    9. '```' → logprob: -6.6233601570129395
    10. '[' → logprob: -6.7483601570129395

Token 39: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: ' False' (ID: 7983)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6822356581687927
    2. '<|end|>' → logprob: -2.3072357177734375
    3. ' for' → logprob: -2.6822357177734375
    4. 'for' → logprob: -2.9322357177734375
    5. 'input' → logprob: -3.3072357177734375
    6. ' input' → logprob: -3.8072357177734375
    7. ' fence' → logprob: -3.9322357177734375
    8. 'int' → logprob: -3.9322357177734375
    9. ')' → logprob: -4.1822357177734375
    10. ' (' → logprob: -4.3072357177734375

Token 41: ' means' (ID: 4748)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: ' free' (ID: 2240)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.627127468585968
    2. 'not' → logprob: -1.3771274089813232
    3. 'un' → logprob: -2.3771274089813232
    4. 'the' → logprob: -2.7521274089813232
    5. 'empty' → logprob: -4.752127647399902
    6. 'there' → logprob: -4.752127647399902
    7. ' no' → logprob: -5.002127647399902
    8. 'free' → logprob: -5.502127647399902
    9. 'f' → logprob: -5.502127647399902
    10. ' not' → logprob: -5.752127647399902

Token 43: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.1484018862247467
    2. 'True' → logprob: -2.773401975631714
    3. '<|end|>' → logprob: -2.898401975631714
    4. ' ' → logprob: -4.148401737213135
    5. ' not' → logprob: -7.023401737213135
    6. '   ' → logprob: -7.523401737213135
    7. ' space' → logprob: -7.523401737213135
    8. '<|end|>' → logprob: -8.273402214050293
    9. ' free' → logprob: -8.398402214050293
    10. '(True' → logprob: -8.773402214050293

Token 45: ' means' (ID: 4748)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: ' occupied' (ID: 46186)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.10821036994457245
    2. ' occupied' → logprob: -2.733210325241089
    3. 'taken' → logprob: -4.358210563659668
    4. 'blocked' → logprob: -4.858210563659668
    5. ' taken' → logprob: -5.108210563659668
    6. 'reserved' → logprob: -6.608210563659668
    7. 'used' → logprob: -7.108210563659668
    8. 'f' → logprob: -7.233210563659668
    9. ' ' → logprob: -7.483210563659668
    10. '   ' → logprob: -7.733210563659668

Token 47: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6086035966873169
    2. 'for' → logprob: -1.733603596687317
    3. ' for' → logprob: -2.4836034774780273
    4. '
' → logprob: -2.6086034774780273
    5. '    
' → logprob: -3.3586034774780273
    6. '<|end|>' → logprob: -3.4836034774780273
    7. '\n' → logprob: -3.7336034774780273
    8. '  
' → logprob: -5.108603477478027
    9. '```' → logprob: -5.608603477478027
    10. ' ' → logprob: -5.608603477478027

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2678530514240265
    2. 'for' → logprob: -2.517853021621704
    3. ' for' → logprob: -2.642853021621704
    4. '<|end|>' → logprob: -3.642853021621704
    5. '    
' → logprob: -4.017853260040283
    6. '\n' → logprob: -4.517853260040283
    7. ' ' → logprob: -5.267853260040283
    8. ' 
' → logprob: -5.517853260040283
    9. '  
' → logprob: -6.017853260040283
    10. '
' → logprob: -6.017853260040283

Token 49: ' cats' (ID: 28854)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9159798622131348
    2. '   ' → logprob: -1.2909798622131348
    3. ' for' → logprob: -1.4159798622131348
    4. 'count' → logprob: -4.915979862213135
    5. 'occupied' → logprob: -5.415979862213135
    6. 'positions' → logprob: -6.165979862213135
    7. 'line' → logprob: -6.165979862213135
    8. ' ' → logprob: -6.228479862213135
    9. 'Q' → logprob: -6.228479862213135
    10. ' line' → logprob: -6.353479862213135

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05403740331530571
    2. '=' → logprob: -3.55403733253479
    3. '_positions' → logprob: -3.80403733253479
    4. ',' → logprob: -7.804037570953369
    5. '_count' → logprob: -8.554037094116211
    6. '_pos' → logprob: -8.679037094116211
    7. '_' → logprob: -8.804037094116211
    8. '_in' → logprob: -9.429037094116211
    9. '_locations' → logprob: -9.679037094116211
    10. '   ' → logprob: -9.679037094116211

Token 51: ' {}' (ID: 9902)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.014844824559986591
    2. '[]' → logprob: -5.26484489440918
    3. ' [' → logprob: -5.51484489440918
    4. ' ' → logprob: -5.76484489440918
    5. ' []
' → logprob: -7.13984489440918
    6. ' int' → logprob: -7.38984489440918
    7. '0' → logprob: -7.76484489440918
    8. 'int' → logprob: -8.88984489440918
    9. ' list' → logprob: -8.88984489440918
    10. ' Q' → logprob: -9.63984489440918

Token 52: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: ' id' (ID: 1211)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.6183898448944092
    2. '{' → logprob: -2.368389844894409
    3. ' cat' → logprob: -2.368389844894409
    4. ' {}' → logprob: -3.243389844894409
    5. ' key' → logprob: -3.368389844894409
    6. ' cats' → logprob: -3.368389844894409
    7. 'cat' → logprob: -4.118390083312988
    8. 'key' → logprob: -4.243390083312988
    9. ' {' → logprob: -4.368390083312988
    10. 'index' → logprob: -4.618390083312988

Token 55: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05845874175429344
    2. ' :' → logprob: -4.0584588050842285
    3. '<|end|>' → logprob: -4.1834588050842285
    4. ' =' → logprob: -4.4334588050842285
    5. '=' → logprob: -5.5584588050842285
    6. '<|end|>' → logprob: -6.0584588050842285
    7. 's' → logprob: -6.1834588050842285
    8. ',' → logprob: -6.9334588050842285
    9. ' to' → logprob: -7.3084588050842285
    10. '_' → logprob: -7.8084588050842285

Token 56: ' (' (ID: 350)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.6333950757980347
    2. ' position' → logprob: -2.008395195007324
    3. 'int' → logprob: -2.883395195007324
    4. ' (' → logprob: -3.008395195007324
    5. 'length' → logprob: -3.383395195007324
    6. 'index' → logprob: -3.758395195007324
    7. '(int' → logprob: -3.758395195007324
    8. ' int' → logprob: -4.258395195007324
    9. 'positions' → logprob: -4.383395195007324
    10. 'list' → logprob: -4.508395195007324

Token 57: 'start' (ID: 5236)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.6481439471244812
    2. 'start' → logprob: -2.023144006729126
    3. 'l' → logprob: -2.148144006729126
    4. ' position' → logprob: -3.023144006729126
    5. 'x' → logprob: -3.398144006729126
    6. 'L' → logprob: -3.398144006729126
    7. 'left' → logprob: -3.648144006729126
    8. 'length' → logprob: -3.773144006729126
    9. 'pos' → logprob: -4.398143768310547
    10. 'index' → logprob: -4.898143768310547

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001974669052287936
    2. ',end' → logprob: -7.001974582672119
    3. ' ,' → logprob: -7.251974582672119
    4. '_' → logprob: -9.126975059509277
    5. '_pos' → logprob: -10.001975059509277
    6. '_position' → logprob: -10.126975059509277
    7. ')' → logprob: -10.501975059509277
    8. '_,' → logprob: -10.626975059509277
    9. '<|end|>' → logprob: -10.626975059509277
    10. '_index' → logprob: -10.876975059509277

Token 59: ' width' (ID: 4345)
  Prédit: ' end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.63453209400177
    2. 'end' → logprob: -0.75953209400177
    3. ' length' → logprob: -7.0095319747924805
    4. 'length' → logprob: -7.2595319747924805
    5. ')' → logprob: -9.50953197479248
    6. ' ' → logprob: -9.50953197479248
    7. '	end' → logprob: -10.50953197479248
    8. '   ' → logprob: -11.25953197479248
    9. ',end' → logprob: -11.32203197479248
    10. ''end' → logprob: -11.38453197479248

Token 60: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.6060808522743173e-05
    2. ' )' → logprob: -11.500025749206543
    3. ')
' → logprob: -11.875025749206543
    4. '   ' → logprob: -12.250025749206543
    5. ',' → logprob: -12.625025749206543
    6. ')

' → logprob: -15.625025749206543
    7. ')
' → logprob: -15.875025749206543
    8. '),' → logprob: -16.25002670288086
    9. ' ' → logprob: -16.50002670288086
    10. '))' → logprob: -17.12502670288086

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02592993527650833
    2. ' for' → logprob: -4.650929927825928
    3. 'for' → logprob: -5.025929927825928
    4. '    
' → logprob: -5.400929927825928
    5. '    ' → logprob: -6.775929927825928
    6. '<|end|>' → logprob: -7.025929927825928
    7. '\n' → logprob: -7.775929927825928
    8. '  ' → logprob: -7.900929927825928
    9. ' 
' → logprob: -8.025930404663086
    10. 'n' → logprob: -8.025930404663086

Token 62: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3845110237598419
    2. ' for' → logprob: -1.6345109939575195
    3. '   ' → logprob: -2.1345109939575195
    4. 'while' → logprob: -6.8845109939575195
    5. 'i' → logprob: -7.2595109939575195
    6. 'n' → logprob: -7.5095109939575195
    7. 'next' → logprob: -7.6345109939575195
    8. 'count' → logprob: -8.13451099395752
    9. ' while' → logprob: -8.25951099395752
    10. '  ' → logprob: -8.50951099395752

Token 63: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.06386091560125351
    2. ' i' → logprob: -2.9388608932495117
    3. '_' → logprob: -4.938860893249512
    4. ' ' → logprob: -6.438860893249512
    5. ' cat' → logprob: -9.813860893249512
    6. 'i' → logprob: -9.938860893249512
    7. ' range' → logprob: -10.188860893249512
    8. ' ' → logprob: -10.563860893249512
    9. ' in' → logprob: -12.813860893249512
    10. ' cats' → logprob: -12.938860893249512

Token 64: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.015739064663648605
    2. 'in' → logprob: -4.2657389640808105
    3. 'range' → logprob: -6.5157389640808105
    4. ' ' → logprob: -10.265739440917969
    5. ' _' → logprob: -11.390739440917969
    6. 'i' → logprob: -11.390739440917969
    7. ' range' → logprob: -11.640739440917969
    8. 'n' → logprob: -12.265739440917969
    9. 'int' → logprob: -12.515739440917969
    10. '```' → logprob: -12.640739440917969

Token 65: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06200375780463219
    2. ' range' → logprob: -2.8120038509368896
    3. 'input' → logprob: -11.187004089355469
    4. ' ' → logprob: -11.812004089355469
    5. '	range' → logprob: -12.812004089355469
    6. 'rang' → logprob: -13.312004089355469
    7. '(range' → logprob: -13.437004089355469
    8. '  ' → logprob: -13.437004089355469
    9. '   ' → logprob: -13.687004089355469
    10. 'map' → logprob: -13.812004089355469

Token 66: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.005609015468508005
    2. ' Q' → logprob: -5.505609035491943
    3. '(' → logprob: -7.255609035491943
    4. 'Q' → logprob: -7.630609035491943
    5. '(W' → logprob: -8.255608558654785
    6. ' (' → logprob: -10.005608558654785
    7. ' ' → logprob: -11.880608558654785
    8. ' W' → logprob: -12.255608558654785
    9. '(int' → logprob: -12.630608558654785
    10. '(c' → logprob: -12.755608558654785

Token 67: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003613256849348545
    2. '):
' → logprob: -8.250361442565918
    3. ':' → logprob: -10.125361442565918
    4. ' ):' → logprob: -10.250361442565918
    5. '   ' → logprob: -11.375361442565918
    6. ')' → logprob: -11.875361442565918
    7. ',' → logprob: -12.625361442565918
    8. '):
' → logprob: -13.750361442565918
    9. ']:' → logprob: -14.875361442565918
    10. '}:' → logprob: -15.250361442565918

Token 68: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08001461625099182
    2. '       ' → logprob: -2.580014705657959
    3. '    ' → logprob: -7.955014705657959
    4. '    
' → logprob: -8.4550142288208
    5. '<|end|>' → logprob: -9.3300142288208
    6. '   ' → logprob: -9.8300142288208
    7. '	   ' → logprob: -9.9550142288208
    8. '```' → logprob: -9.9550142288208
    9. '        
' → logprob: -10.3300142288208
    10. ',' → logprob: -10.4550142288208

Token 69: ' line' (ID: 2543)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -1.7723385095596313
    2. '   ' → logprob: -1.8973385095596313
    3. ' id' → logprob: -2.022338390350342
    4. 's' → logprob: -2.397338390350342
    5. ' line' → logprob: -2.397338390350342
    6. ' s' → logprob: -3.022338390350342
    7. 'x' → logprob: -3.397338390350342
    8. 'c' → logprob: -3.397338390350342
    9. ' cat' → logprob: -3.522338390350342
    10. 'start' → logprob: -3.772338390350342

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00218987581320107
    2. '=' → logprob: -6.127190113067627
    3. '   ' → logprob: -13.002189636230469
    4. 's' → logprob: -14.127189636230469
    5. '=line' → logprob: -14.502189636230469
    6. ' ' → logprob: -15.252189636230469
    7. '    ' → logprob: -15.377189636230469
    8. '=input' → logprob: -15.627189636230469
    9. ' =
' → logprob: -16.25218963623047
    10. ',' → logprob: -16.37718963623047

Token 71: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4740833044052124
    2. ' input' → logprob: -0.9740833044052124
    3. 'list' → logprob: -12.599082946777344
    4. 'int' → logprob: -14.224082946777344
    5. '	input' → logprob: -14.349082946777344
    6. ' list' → logprob: -14.474082946777344
    7. '   ' → logprob: -14.849082946777344
    8. '=input' → logprob: -14.974082946777344
    9. '<input' → logprob: -15.599082946777344
    10. ' ' → logprob: -16.224082946777344

Token 72: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.014171971939504147
    2. '()' → logprob: -4.264172077178955
    3. '())' → logprob: -12.764171600341797
    4. ')' → logprob: -13.014171600341797
    5. '.' → logprob: -13.139171600341797
    6. ' ().' → logprob: -14.639171600341797
    7. '()]' → logprob: -15.514171600341797
    8. '(' → logprob: -15.764171600341797
    9. '()).' → logprob: -15.889171600341797
    10. ' ()' → logprob: -16.014171600341797

Token 73: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005240156780928373
    2. 'strip' → logprob: -5.255239963531494
    3. 'rstrip' → logprob: -12.130240440368652
    4. ' split' → logprob: -14.005240440368652
    5. 'spl' → logprob: -15.630240440368652
    6. 's' → logprob: -17.380239486694336
    7. 'startswith' → logprob: -17.505239486694336
    8. '(split' → logprob: -18.005239486694336
    9. 'replace' → logprob: -18.880239486694336
    10. 'rs' → logprob: -19.005239486694336

Token 74: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008901407127268612
    2. '(' → logprob: -7.125890254974365
    3. '()
' → logprob: -10.250889778137207
    4. ')' → logprob: -11.000889778137207
    5. '())' → logprob: -11.250889778137207
    6. '('' → logprob: -12.000889778137207
    7. '()]' → logprob: -13.000889778137207
    8. '();' → logprob: -13.250889778137207
    9. '()`' → logprob: -13.375889778137207
    10. ' ()' → logprob: -13.375889778137207

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7810093760490417
    2. '   ' → logprob: -1.4060094356536865
    3. ' cat' → logprob: -2.2810094356536865
    4. ' if' → logprob: -2.7810094356536865
    5. '<|end|>' → logprob: -3.6560094356536865
    6. '    
' → logprob: -3.7810094356536865
    7. ' id' → logprob: -3.9060094356536865
    8. 'id' → logprob: -4.031009197235107
    9. '        
' → logprob: -4.656009197235107
    10. '  
' → logprob: -5.406009197235107

Token 76: ' if' (ID: 538)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -1.1341816186904907
    2. 'cmd' → logprob: -1.1341816186904907
    3. 'if' (adapté à ' if') → logprob: -2.134181499481201
    4. 'c' → logprob: -2.509181499481201
    5. ' if' → logprob: -2.884181499481201
    6. 'command' → logprob: -3.134181499481201
    7. 'cat' → logprob: -3.509181499481201
    8. ' cat' → logprob: -5.009181499481201
    9. ' cmd' → logprob: -5.634181499481201
    10. '   ' → logprob: -5.759181499481201

Token 77: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.007361821364611387
    2. 'line' → logprob: -5.257361888885498
    3. ' len' → logprob: -6.257361888885498
    4. ' ' → logprob: -8.88236141204834
    5. 'len' → logprob: -10.75736141204834
    6. '(line' → logprob: -11.13236141204834
    7. ' not' → logprob: -11.75736141204834
    8. '[line' → logprob: -11.88236141204834
    9. '	line' → logprob: -12.25736141204834
    10. ' l' → logprob: -12.38236141204834

Token 78: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.173704271830502e-06
    2. ' [' → logprob: -13.75000286102295
    3. '```' → logprob: -14.00000286102295
    4. '==' → logprob: -14.75000286102295
    5. '   ' → logprob: -15.62500286102295
    6. ' ==' → logprob: -16.125003814697266
    7. '[
' → logprob: -16.125003814697266
    8. ' ' → logprob: -16.625003814697266
    9. '[-' → logprob: -16.750003814697266
    10. 'and' → logprob: -17.000003814697266

Token 79: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011722482740879059
    2. ' ' → logprob: -7.001172065734863
    3. '[' → logprob: -8.501172065734863
    4. '1' → logprob: -10.001172065734863
    5. '2' → logprob: -12.376172065734863
    6. '3' → logprob: -13.251172065734863
    7. ']' → logprob: -13.376172065734863
    8. '(' → logprob: -14.313672065734863
    9. '   ' → logprob: -14.438672065734863
    10. ':' → logprob: -15.001172065734863

Token 80: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1284593939781189
    2. '==' → logprob: -2.2534594535827637
    3. '[' → logprob: -4.878459453582764
    4. ']' → logprob: -5.378459453582764
    5. ')' → logprob: -6.128459453582764
    6. '=' → logprob: -8.003458976745605
    7. ' ' → logprob: -8.128458976745605
    8. ']==' → logprob: -8.253458976745605
    9. ' =' → logprob: -10.003458976745605
    10. ')==' → logprob: -10.503458976745605

Token 81: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4293137192726135
    2. '==' → logprob: -1.0543136596679688
    3. '=='' → logprob: -8.554313659667969
    4. '[' → logprob: -8.804313659667969
    5. '=' → logprob: -9.304313659667969
    6. '=="' → logprob: -9.554313659667969
    7. ' ' → logprob: -10.929313659667969
    8. '===' → logprob: -11.054313659667969
    9. ')' → logprob: -11.179313659667969
    10. '==
' → logprob: -11.679313659667969

Token 82: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.32631736993789673
    2. ''A' → logprob: -2.951317310333252
    3. ''M' → logprob: -3.576317310333252
    4. ''I' → logprob: -3.576317310333252
    5. ''C' → logprob: -3.701317310333252
    6. ''O' → logprob: -3.826317310333252
    7. ''a' → logprob: -3.826317310333252
    8. ''m' → logprob: -4.076317310333252
    9. ''o' → logprob: -4.201317310333252
    10. '"' → logprob: -4.201317310333252

Token 83: 's' (ID: 82)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.3760933876037598
    2. 'a' → logprob: -1.7510933876037598
    3. 'I' → logprob: -2.2510933876037598
    4. 'i' → logprob: -2.5010933876037598
    5. 'L' → logprob: -2.7510933876037598
    6. 'M' → logprob: -3.2510933876037598
    7. 'S' → logprob: -3.5010933876037598
    8. 'P' → logprob: -3.5010933876037598
    9. 'p' → logprob: -3.7510933876037598
    10. 'B' → logprob: -3.7510933876037598

Token 84: '':
' (ID: 7669)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.05565158277750015
    2. 'e' → logprob: -4.055651664733887
    3. 'p' → logprob: -5.305651664733887
    4. 'i' → logprob: -5.305651664733887
    5. 'h' → logprob: -5.430651664733887
    6. 'et' → logprob: -5.430651664733887
    7. 'it' → logprob: -5.430651664733887
    8. 'a' → logprob: -6.555651664733887
    9. 'pawn' → logprob: -6.680651664733887
    10. 'u' → logprob: -6.743151664733887

Token 85: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7151489853858948
    2. ':' → logprob: -1.96514892578125
    3. '   ' → logprob: -1.96514892578125
    4. '    ' → logprob: -2.34014892578125
    5. 't' → logprob: -3.34014892578125
    6. ',' → logprob: -3.59014892578125
    7. '           ' → logprob: -4.09014892578125
    8. ' ' → logprob: -4.34014892578125
    9. '        ' → logprob: -5.59014892578125
    10. ' ,' → logprob: -5.71514892578125

Token 86: ' cat' (ID: 9059)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.57245934009552
    2. ' ' → logprob: -1.57245934009552
    3. ' id' → logprob: -1.82245934009552
    4. ' cat' → logprob: -4.3224592208862305
    5. 'id' → logprob: -4.6974592208862305
    6. ' t' → logprob: -4.8224592208862305
    7. 'i' → logprob: -5.1974592208862305
    8. ' start' → logprob: -5.1974592208862305
    9. ' i' → logprob: -5.1974592208862305
    10. 'c' → logprob: -6.1974592208862305

Token 87: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.039599642157554626
    2. 'id' → logprob: -3.539599657058716
    3. 't' → logprob: -5.914599418640137
    4. 'ize' → logprob: -6.414599418640137
    5. ' =' → logprob: -6.664599418640137
    6. ',' → logprob: -6.789599418640137
    7. '_' → logprob: -6.914599418640137
    8. 'ID' → logprob: -7.789599418640137
    9. '_i' → logprob: -8.039599418640137
    10. '=' → logprob: -8.789599418640137

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02750612609088421
    2. ',' → logprob: -3.902506113052368
    3. '=' → logprob: -5.027506351470947
    4. ' ,' → logprob: -8.527505874633789
    5. ' ' → logprob: -9.527505874633789
    6. '<|end|>' → logprob: -9.777505874633789
    7. ')' → logprob: -10.777505874633789
    8. '  ' → logprob: -11.402505874633789
    9. '=int' → logprob: -12.402505874633789
    10. '<|end|>' → logprob: -12.652505874633789

Token 89: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4684874713420868
    2. 'int' → logprob: -1.0934875011444092
    3. ' line' → logprob: -3.593487501144409
    4. 'line' → logprob: -4.46848726272583
    5. ' ' → logprob: -10.343487739562988
    6. '(int' → logprob: -13.593487739562988
    7. '[int' → logprob: -14.093487739562988
    8. '=int' → logprob: -14.218487739562988
    9. '(line' → logprob: -14.468487739562988
    10. '<int' → logprob: -14.593487739562988

Token 90: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.012534018605947495
    2. '(' → logprob: -4.387534141540527
    3. ')' → logprob: -10.887534141540527
    4. ' line' → logprob: -13.262534141540527
    5. '(
' → logprob: -13.512534141540527
    6. '[line' → logprob: -14.512534141540527
    7. 'line' → logprob: -14.512534141540527
    8. '#line' → logprob: -15.137534141540527
    9. '=line' → logprob: -15.262534141540527
    10. ' (' → logprob: -15.387534141540527

Token 91: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.723352049040841e-06
    2. '1' → logprob: -12.375004768371582
    3. ' [' → logprob: -15.625004768371582
    4. '```' → logprob: -16.125003814697266
    5. '[
' → logprob: -16.375003814697266
    6. '   ' → logprob: -17.250003814697266
    7. '][' → logprob: -18.000003814697266
    8. ')' → logprob: -18.125003814697266
    9. '[-' → logprob: -18.750003814697266
    10. '
' → logprob: -18.750003814697266

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5861724831629544e-05
    2. '2' → logprob: -10.500056266784668
    3. ' ' → logprob: -10.875056266784668
    4. '```' → logprob: -12.500056266784668
    5. '[' → logprob: -12.875056266784668
    6. ']' → logprob: -13.875056266784668
    7. '   ' → logprob: -14.500056266784668
    8. ')' → logprob: -14.500056266784668
    9. '3' → logprob: -14.875056266784668
    10. '``' → logprob: -16.12505531311035

Token 93: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01866431161761284
    2. '])' → logprob: -4.018664360046387
    3. ']' → logprob: -7.893664360046387
    4. ')]' → logprob: -9.393664360046387
    5. ')
' → logprob: -10.768664360046387
    6. ')])' → logprob: -11.268664360046387
    7. ' )' → logprob: -11.643664360046387
    8. ',' → logprob: -12.893664360046387
    9. '),' → logprob: -13.018664360046387
    10. '))' → logprob: -13.643664360046387

Token 94: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.32507121562957764
    2. '<|end|>' → logprob: -1.5750712156295776
    3. ',' → logprob: -3.450071334838867
    4. '    ' → logprob: -4.950071334838867
    5. ')' → logprob: -5.325071334838867
    6. ' ,' → logprob: -5.450071334838867
    7. '<|end|>' → logprob: -5.575071334838867
    8. ' 
' → logprob: -5.575071334838867
    9. '     ' → logprob: -5.825071334838867
    10. '       ' → logprob: -5.825071334838867

Token 95: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -0.7798748016357422
    2. 'width' → logprob: -2.154874801635742
    3. 'start' → logprob: -2.529874801635742
    4. ' width' → logprob: -2.654874801635742
    5. ' cat' → logprob: -2.779874801635742
    6. ' w' → logprob: -2.904874801635742
    7. 'l' → logprob: -3.529874801635742
    8. 'length' → logprob: -3.779874801635742
    9. 'cat' → logprob: -3.904874801635742
    10. ' start' → logprob: -4.529874801635742

Token 96: ' =' (ID: 314)
  Prédit: 'idth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idth' → logprob: -0.16443800926208496
    2. ' =' → logprob: -2.164438009262085
    3. 'd' → logprob: -4.039438247680664
    4. 'id' → logprob: -4.664438247680664
    5. '=' → logprob: -4.914438247680664
    6. 'ith' → logprob: -7.414438247680664
    7. 'i' → logprob: -7.414438247680664
    8. 'eight' → logprob: -8.164438247680664
    9. '_' → logprob: -8.539438247680664
    10. 'idt' → logprob: -9.039438247680664

Token 97: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011048054322600365
    2. ' int' → logprob: -4.511047840118408
    3. '<int' → logprob: -16.26104736328125
    4. ' ' → logprob: -16.76104736328125
    5. '   ' → logprob: -16.76104736328125
    6. '[int' → logprob: -17.13604736328125
    7. '=int' → logprob: -17.13604736328125
    8. '	int' → logprob: -17.38604736328125
    9. '(int' → logprob: -18.26104736328125
    10. '  ' → logprob: -18.26104736328125

Token 98: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -3.190178904333152e-05
    2. '(' → logprob: -10.375031471252441
    3. ')' → logprob: -15.375031471252441
    4. ' (' → logprob: -15.500031471252441
    5. 'line' → logprob: -16.250032424926758
    6. '[line' → logprob: -16.875032424926758
    7. '=line' → logprob: -17.125032424926758
    8. ' line' → logprob: -17.125032424926758
    9. ',line' → logprob: -18.625032424926758
    10. ')(' → logprob: -19.000032424926758

Token 99: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.440506407059729e-05
    2. ']' → logprob: -10.87503433227539
    3. ')' → logprob: -11.37503433227539
    4. '2' → logprob: -13.25003433227539
    5. '(' → logprob: -14.00003433227539
    6. '[line' → logprob: -15.00003433227539
    7. '```' → logprob: -15.37503433227539
    8. '][' → logprob: -15.37503433227539
    9. ' [' → logprob: -16.00003433227539
    10. 'line' → logprob: -16.25003433227539

Token 100: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4736459888808895e-05
    2. '3' → logprob: -11.500014305114746
    3. '1' → logprob: -13.750014305114746
    4. ']' → logprob: -14.000014305114746
    5. '])' → logprob: -14.375014305114746
    6. ' ' → logprob: -14.625014305114746
    7. '```' → logprob: -14.625014305114746
    8. ')' → logprob: -15.312514305114746
    9. '-' → logprob: -15.500014305114746
    10. '   ' → logprob: -15.812514305114746

Token 101: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005638765869662166
    2. ')
' → logprob: -7.500564098358154
    3. ')
' → logprob: -12.500563621520996
    4. ')

' → logprob: -12.625563621520996
    5. ' )' → logprob: -14.125563621520996
    6. '<|end|>' → logprob: -14.625563621520996
    7. ')`' → logprob: -14.750563621520996
    8. '）' → logprob: -14.875563621520996
    9. '),' → logprob: -15.000563621520996
    10. '))' → logprob: -15.000563621520996

Token 102: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8794242739677429
    2. '   ' → logprob: -1.7544243335723877
    3. '<|end|>' → logprob: -1.7544243335723877
    4. '           ' → logprob: -2.3794243335723877
    5. '       ' → logprob: -3.5044243335723877
    6. '    
' → logprob: -4.129424095153809
    7. '#' → logprob: -4.129424095153809
    8. ' 
' → logprob: -4.879424095153809
    9. '        
' → logprob: -5.004424095153809
    10. ')' → logprob: -5.004424095153809

Token 103: ' pos' (ID: 1253)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.100242257118225
    2. 'pos' (adapté à ' pos') → logprob: -1.725242257118225
    3. 'found' → logprob: -1.850242257118225
    4. 'placed' → logprob: -2.6002421379089355
    5. 'position' → logprob: -2.9752421379089355
    6. '#' → logprob: -3.1002421379089355
    7. '           ' → logprob: -3.1002421379089355
    8. ' placed' → logprob: -3.2252421379089355
    9. ' found' → logprob: -3.7252421379089355
    10. ' start' → logprob: -4.3502421379089355

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05516694486141205
    2. '=' → logprob: -2.9301669597625732
    3. 'found' → logprob: -8.680167198181152
    4. '_found' → logprob: -9.430167198181152
    5. 'Found' → logprob: -12.055167198181152
    6. ' found' → logprob: -12.055167198181152
    7. 'ed' → logprob: -12.430167198181152
    8. ',' → logprob: -12.555167198181152
    9. ' ' → logprob: -12.680167198181152
    10. ')' → logprob: -13.055167198181152

Token 105: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.43595749139785767
    2. '-' → logprob: -1.060957431793213
    3. 'None' → logprob: -5.935957431793213
    4. ' ' → logprob: -6.060957431793213
    5. ' -' → logprob: -6.435957431793213
    6. ' None' → logprob: -8.310957908630371
    7. 'next' → logprob: -8.435957908630371
    8. ' next' → logprob: -9.060957908630371
    9. '-W' → logprob: -10.435957908630371
    10. 'W' → logprob: -10.935957908630371

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -13.12500286102295
    3. '-' → logprob: -14.00000286102295
    4. ' -' → logprob: -16.250003814697266
    5. '2' → logprob: -16.750003814697266
    6. '<|end|>' → logprob: -17.625003814697266
    7. 'W' → logprob: -18.062503814697266
    8. 'f' → logprob: -18.062503814697266
    9. '(-' → logprob: -18.562503814697266
    10. ',' → logprob: -18.875003814697266

Token 107: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31889286637306213
    2. '<|end|>' → logprob: -1.5688928365707397
    3. 'for' → logprob: -3.3188929557800293
    4. ' ' → logprob: -4.193892955780029
    5. '           ' → logprob: -4.693892955780029
    6. '<|end|>' → logprob: -6.318892955780029
    7. ' 
' → logprob: -7.318892955780029
    8. '
' → logprob: -7.443892955780029
    9. '   ' → logprob: -8.193892478942871
    10. '       ' → logprob: -8.693892478942871

Token 109: ' length' (ID: 5517)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023261668160557747
    2. ' for' → logprob: -3.773261785507202
    3. '           ' → logprob: -12.148262023925781
    4. 'found' → logprob: -12.273262023925781
    5. 'i' → logprob: -13.148262023925781
    6. '   ' → logprob: -13.648262023925781
    7. 'f' → logprob: -14.398262023925781
    8. 'current' → logprob: -14.648262023925781
    9. '0' → logprob: -14.773262023925781
    10. 'start' → logprob: -15.023262023925781

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14483310282230377
    2. '=' → logprob: -2.0198330879211426
    3. '<|end|>' → logprob: -6.269833087921143
    4. '<|end|>' → logprob: -9.7698335647583
    5. ' ' → logprob: -10.1448335647583
    6. '=len' → logprob: -10.5198335647583
    7. '   ' → logprob: -11.1448335647583
    8. ',' → logprob: -11.1448335647583
    9. 's' → logprob: -11.3948335647583
    10. 'max' → logprob: -11.3948335647583

Token 111: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011346422135829926
    2. ' ' → logprob: -4.636346340179443
    3. 'w' → logprob: -6.511346340179443
    4. 'W' → logprob: -10.011346817016602
    5. '1' → logprob: -10.261346817016602
    6. ' w' → logprob: -11.511346817016602
    7. 'len' → logprob: -12.511346817016602
    8. '   ' → logprob: -13.386346817016602
    9. 'f' → logprob: -13.573846817016602
    10. '=' → logprob: -13.823846817016602

Token 112: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11225369572639465
    2. 'w' → logprob: -2.3622536659240723
    3. ' ' → logprob: -5.362253665924072
    4. 'len' → logprob: -5.862253665924072
    5. 'W' → logprob: -6.487253665924072
    6. '1' → logprob: -6.737253665924072
    7. 'sum' → logprob: -6.862253665924072
    8. 'f' → logprob: -7.862253665924072
    9. ' w' → logprob: -8.98725414276123
    10. 'cat' → logprob: -10.23725414276123

Token 113: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 114: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18422526121139526
    2. '<|end|>' → logprob: -2.18422532081604
    3. ' ' → logprob: -3.93422532081604
    4. ' for' → logprob: -4.184225082397461
    5. '   ' → logprob: -4.559225082397461
    6. '       ' → logprob: -5.434225082397461
    7. '<|end|>' → logprob: -6.184225082397461
    8. ' 
' → logprob: -6.809225082397461
    9. 'for' → logprob: -7.434225082397461
    10. '  ' → logprob: -8.184225082397461

Token 115: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.49441197514533997
    2. 'for' (adapté à ' for') → logprob: -0.9944119453430176
    3. '           ' → logprob: -4.244411945343018
    4. ' ' → logprob: -5.869411945343018
    5. '       ' → logprob: -6.869411945343018
    6. '   ' → logprob: -6.994411945343018
    7. '<|end|>' → logprob: -8.244412422180176
    8. '    ' → logprob: -8.369412422180176
    9. ' 
' → logprob: -9.244412422180176
    10. '        ' → logprob: -9.869412422180176

Token 116: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05493813753128052
    2. 'i' → logprob: -2.9299380779266357
    3. ' idx' → logprob: -11.304938316345215
    4. ' j' → logprob: -11.429938316345215
    5. '```' → logprob: -11.554938316345215
    6. 'j' → logprob: -12.304938316345215
    7. ' ' → logprob: -12.929938316345215
    8. '	i' → logprob: -12.929938316345215
    9. 'idx' → logprob: -13.304938316345215
    10. 'x' → logprob: -13.429938316345215

Token 117: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002869304269552231
    2. 'in' → logprob: -5.877869129180908
    3. ' ' → logprob: -10.377869606018066
    4. ',' → logprob: -10.877869606018066
    5. '<|end|>' → logprob: -11.627869606018066
    6. 'range' → logprob: -14.127869606018066
    7. '=' → logprob: -14.252869606018066
    8. 's' → logprob: -14.502869606018066
    9. ' ,' → logprob: -14.627869606018066
    10. '```' → logprob: -14.877869606018066

Token 118: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04860111325979233
    2. 'range' → logprob: -3.0486011505126953
    3. '(range' → logprob: -11.798601150512695
    4. '	range' → logprob: -12.923601150512695
    5. ' ' → logprob: -13.673601150512695
    6. ' xrange' → logprob: -14.173601150512695
    7. '   ' → logprob: -15.048601150512695
    8. '```' → logprob: -15.048601150512695
    9. '.range' → logprob: -15.298601150512695
    10. ')' → logprob: -15.548601150512695

Token 119: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.0003573919821064919
    2. 'W' → logprob: -9.000357627868652
    3. ' W' → logprob: -9.000357627868652
    4. '(' → logprob: -9.875357627868652
    5. '(len' → logprob: -9.875357627868652
    6. 'len' → logprob: -12.375357627868652
    7. '	W' → logprob: -13.625357627868652
    8. '   ' → logprob: -14.250357627868652
    9. '           ' → logprob: -14.625357627868652
    10. ',W' → logprob: -15.250357627868652

Token 120: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0803508535027504
    2. '):
' → logprob: -2.580350875854492
    3. ' ):' → logprob: -6.705350875854492
    4. ':' → logprob: -9.330350875854492
    5. ' ):
' → logprob: -9.455350875854492
    6. '):
' → logprob: -10.830350875854492
    7. '):

' → logprob: -10.830350875854492
    8. '           ' → logprob: -12.205350875854492
    9. '   ' → logprob: -12.580350875854492
    10. '       ' → logprob: -12.705350875854492

Token 121: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04443511366844177
    2. 'if' (adapté à ' if') → logprob: -3.2944350242614746
    3. '<|end|>' → logprob: -5.794435024261475
    4. '               ' → logprob: -6.419435024261475
    5. '       ' → logprob: -7.419435024261475
    6. ' ' → logprob: -7.669435024261475
    7. '   ' → logprob: -8.669435501098633
    8. '           ' → logprob: -8.919435501098633
    9. '    ' → logprob: -9.794435501098633
    10. ' ' → logprob: -9.919435501098633

Token 123: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1634843796491623
    2. 'not' → logprob: -1.9134843349456787
    3. 'f' → logprob: -6.288484573364258
    4. ' fence' → logprob: -6.663484573364258
    5. '!' → logprob: -10.413484573364258
    6. ' f' → logprob: -10.788484573364258
    7. ' ' → logprob: -10.913484573364258
    8. '(not' → logprob: -11.288484573364258
    9. '	not' → logprob: -11.913484573364258
    10. 'n' → logprob: -12.225984573364258

Token 124: ' fence' (ID: 42166)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0701049342751503
    2. ' fence' → logprob: -2.6951048374176025
    3. ' f' → logprob: -9.570104598999023
    4. '   ' → logprob: -11.007604598999023
    5. ' ' → logprob: -11.007604598999023
    6. ' ' → logprob: -11.757604598999023
    7. '	f' → logprob: -11.882604598999023
    8. ' fenced' → logprob: -12.070104598999023
    9. ' fences' → logprob: -12.132604598999023
    10. ')' → logprob: -12.320104598999023

Token 125: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.919942486798391e-05
    2. '[' → logprob: -9.750059127807617
    3. '```' → logprob: -15.000059127807617
    4. ' [' → logprob: -15.500059127807617
    5. '[I' → logprob: -16.125059127807617
    6. '

' → logprob: -16.875059127807617
    7. '\[' → logprob: -17.375059127807617
    8. ')[' → logprob: -17.750059127807617
    9. '[f' → logprob: -18.250059127807617
    10. '[
' → logprob: -18.375059127807617

Token 126: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.1283421665430069
    2. ']:
' → logprob: -2.1283421516418457
    3. ':' → logprob: -6.878342151641846
    4. ']:

' → logprob: -9.128342628479004
    5. ']:
' → logprob: -9.128342628479004
    6. ' ]' → logprob: -10.378342628479004
    7. ']' → logprob: -10.378342628479004
    8. ':
' → logprob: -10.503342628479004
    9. '):' → logprob: -10.503342628479004
    10. '):
' → logprob: -11.128342628479004

Token 127: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5506588816642761
    2. '               ' → logprob: -2.300658941268921
    3. ':' → logprob: -2.425658941268921
    4. ' length' → logprob: -2.550658941268921
    5. ':
' → logprob: -2.800658941268921
    6. '<|end|>' → logprob: -3.175658941268921
    7. ' and' → logprob: -4.300658702850342
    8. '                    
' → logprob: -4.800658702850342
    9. '<|end|>' → logprob: -5.050658702850342
    10. 'length' → logprob: -5.050658702850342

Token 128: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' (adapté à ' length') → logprob: -0.5759923458099365
    2. ' length' → logprob: -0.8259923458099365
    3. '                   ' → logprob: -10.200992584228516
    4. '	length' → logprob: -12.075992584228516
    5. ' if' → logprob: -12.700992584228516
    6. '               ' → logprob: -13.200992584228516
    7. '_length' → logprob: -13.700992584228516
    8. ',length' → logprob: -13.825992584228516
    9. '                       ' → logprob: -14.200992584228516
    10. '[length' → logprob: -14.325992584228516

Token 129: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20154578983783722
    2. '+=' → logprob: -1.7015458345413208
    3. '=' → logprob: -9.576545715332031
    4. ']+=' → logprob: -10.451545715332031
    5. ' =' → logprob: -10.576545715332031
    6. '<|end|>' → logprob: -13.076545715332031
    7. '+' → logprob: -13.201545715332031
    8. ' ' → logprob: -13.576545715332031
    9. ' ' → logprob: -14.076545715332031
    10. 'increment' → logprob: -14.701545715332031

Token 130: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1002068892121315
    2. ' ' → logprob: -2.3502068519592285
    3. '<|end|>' → logprob: -15.475207328796387
    4. ' ' → logprob: -16.85020637512207
    5. '   ' → logprob: -17.97520637512207
    6. '```' → logprob: -18.97520637512207
    7. '0' → logprob: -19.35020637512207
    8. '  ' → logprob: -19.35020637512207
    9. '۱' → logprob: -20.03770637512207
    10. '
' → logprob: -20.03770637512207

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -19.875001907348633
    4. '<|end|>' → logprob: -19.875001907348633
    5. '```' → logprob: -20.000001907348633
    6. '0' → logprob: -21.125001907348633
    7. '
' → logprob: -22.062501907348633
    8. '۱' → logprob: -22.312501907348633
    9. '2' → logprob: -22.500001907348633
    10. '１' → logprob: -22.750001907348633

Token 132: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5567964911460876
    2. '<|end|>' → logprob: -0.9317964911460876
    3. '                   ' → logprob: -3.6817965507507324
    4. '<|end|>' → logprob: -5.931796550750732
    5. '           ' → logprob: -6.556796550750732
    6. ' ' → logprob: -6.681796550750732
    7. '
' → logprob: -7.556796550750732
    8. ' else' → logprob: -8.306796073913574
    9. ' 
' → logprob: -8.431796073913574
    10. '       ' → logprob: -8.431796073913574

Token 133: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05021171644330025
    2. '                   ' → logprob: -3.6752116680145264
    3. '<|end|>' → logprob: -4.0502119064331055
    4. '           ' → logprob: -5.8002119064331055
    5. 'else' → logprob: -7.3002119064331055
    6. '       ' → logprob: -7.4252119064331055
    7. ' else' → logprob: -7.5502119064331055
    8. '```' → logprob: -7.6752119064331055
    9. '   ' → logprob: -8.550211906433105
    10. '<|end|>' → logprob: -8.800211906433105

Token 134: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.4361627399921417
    2. 'else' (adapté à ' else') → logprob: -1.0611627101898193
    3. '               ' → logprob: -4.936162948608398
    4. '	else' → logprob: -8.811162948608398
    5. '           ' → logprob: -9.686162948608398
    6. '```' → logprob: -11.811162948608398
    7. '<|end|>' → logprob: -12.061162948608398
    8. '                   ' → logprob: -12.061162948608398
    9. ' elif' → logprob: -12.311162948608398
    10. '       ' → logprob: -12.561162948608398

Token 135: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08187329024076462
    2. ':
' → logprob: -2.5818731784820557
    3. ' length' → logprob: -6.956873416900635
    4. 'length' → logprob: -7.331873416900635
    5. '<|end|>' → logprob: -7.706873416900635
    6. '                   ' → logprob: -8.331872940063477
    7. ':length' → logprob: -8.581872940063477
    8. '[length' → logprob: -9.331872940063477
    9. '_length' → logprob: -9.331872940063477
    10. ':

' → logprob: -9.706872940063477

Token 136: '                   ' (ID: 699)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.6620659828186035
    2. '                   ' → logprob: -0.9120659828186035
    3. 'length' → logprob: -2.6620659828186035
    4. '               ' → logprob: -4.7870659828186035
    5. '[length' → logprob: -6.4120659828186035
    6. '                       ' → logprob: -7.5370659828186035
    7. ',length' → logprob: -7.6620659828186035
    8. '   ' → logprob: -8.162065505981445
    9. '	length' → logprob: -8.162065505981445
    10. '           ' → logprob: -8.537065505981445

Token 137: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.6933326721191406
    2. 'length' (adapté à ' length') → logprob: -0.6933326721191406
    3. '                   ' → logprob: -9.19333267211914
    4. '               ' → logprob: -10.31833267211914
    5. ' if' → logprob: -10.69333267211914
    6. 'if' → logprob: -11.81833267211914
    7. '	length' → logprob: -12.06833267211914
    8. '[length' → logprob: -12.44333267211914
    9. '                       ' → logprob: -12.69333267211914
    10. '(length' → logprob: -13.06833267211914

Token 138: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038042064756155014
    2. ' =' → logprob: -3.2880420684814453
    3. ' ' → logprob: -14.538042068481445
    4. '<|end|>' → logprob: -17.038042068481445
    5. '0' → logprob: -17.288042068481445
    6. ')' → logprob: -17.663042068481445
    7. '=False' → logprob: -17.788042068481445
    8. '=int' → logprob: -18.163042068481445
    9. '=
' → logprob: -18.413042068481445
    10. '=

' → logprob: -18.663042068481445

Token 139: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.054882507771253586
    2. ' ' → logprob: -2.929882526397705
    3. '   ' → logprob: -16.054882049560547
    4. ' ' → logprob: -16.554882049560547
    5. '	' → logprob: -17.929882049560547
    6. '1' → logprob: -17.929882049560547
    7. '                   ' → logprob: -18.054882049560547
    8. '  ' → logprob: -18.429882049560547
    9. '               ' → logprob: -18.742382049560547
    10. '           ' → logprob: -18.742382049560547

Token 140: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033558503491804004
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.750335693359375
    4. '۰' → logprob: -18.250335693359375
    5. '           ' → logprob: -18.937835693359375
    6. '1' → logprob: -19.000335693359375
    7. '```' → logprob: -19.250335693359375
    8. '  ' → logprob: -19.250335693359375
    9. ' ' → logprob: -19.437835693359375
    10. ' ' → logprob: -19.625335693359375

Token 141: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.045980289578437805
    2. '
' → logprob: -3.295980215072632
    3. '<|end|>' → logprob: -4.920980453491211
    4. '           ' → logprob: -8.420980453491211
    5. '                
' → logprob: -8.795980453491211
    6. '
' → logprob: -10.170980453491211
    7. '<|end|>' → logprob: -10.420980453491211
    8. '                   ' → logprob: -10.545980453491211
    9. ' 
' → logprob: -10.920980453491211
    10. '```' → logprob: -10.920980453491211

Token 142: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013047605752944946
    2. '
' → logprob: -7.376304626464844
    3. '           ' → logprob: -7.626304626464844
    4. '<|end|>' → logprob: -9.751304626464844
    5. '                   ' → logprob: -10.126304626464844
    6. '                
' → logprob: -10.501304626464844
    7. '```' → logprob: -11.126304626464844
    8. '       ' → logprob: -11.251304626464844
    9. ' 
' → logprob: -11.876304626464844
    10. ' ' → logprob: -12.501304626464844

Token 143: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00038300611777231097
    2. '           ' → logprob: -8.375383377075195
    3. '
' → logprob: -9.125383377075195
    4. 'if' (adapté à ' if') → logprob: -10.875383377075195
    5. ' if' → logprob: -11.500383377075195
    6. ' ' → logprob: -12.750383377075195
    7. '       ' → logprob: -12.875383377075195
    8. '   ' → logprob: -13.125383377075195
    9. '```' → logprob: -13.375383377075195
    10. '                   ' → logprob: -13.875383377075195

Token 144: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.0263078510761261
    2. 'length' → logprob: -3.6513078212738037
    3. '(length' → logprob: -12.151308059692383
    4. 'ength' → logprob: -14.901308059692383
    5. '	length' → logprob: -14.901308059692383
    6. '[length' → logprob: -15.151308059692383
    7. ' ' → logprob: -15.401308059692383
    8. ' not' → logprob: -15.526308059692383
    9. ',length' → logprob: -15.901308059692383
    10. 'w' → logprob: -16.026308059692383

Token 145: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5744245648384094
    2. '==' → logprob: -1.1994245052337646
    3. ' ==' → logprob: -2.5744245052337646
    4. ' >=' → logprob: -2.8244245052337646
    5. '=' → logprob: -10.324424743652344
    6. ' ' → logprob: -12.199424743652344
    7. ')>=' → logprob: -12.449424743652344
    8. '>' → logprob: -12.574424743652344
    9. '≥' → logprob: -12.574424743652344
    10. ']>=' → logprob: -12.699424743652344

Token 146: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00975679699331522
    2. ' w' → logprob: -4.634756565093994
    3. '	w' → logprob: -15.509757041931152
    4. '   ' → logprob: -16.009756088256836
    5. '<w' → logprob: -16.259756088256836
    6. '>w' → logprob: -16.259756088256836
    7. '*w' → logprob: -16.384756088256836
    8. '=w' → logprob: -16.509756088256836
    9. '```' → logprob: -17.134756088256836
    10. '           ' → logprob: -17.259756088256836

Token 147: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5237906575202942
    2. ':
' → logprob: -0.8987906575202942
    3. ' and' → logprob: -7.5237908363342285
    4. ':

' → logprob: -9.89879035949707
    5. 'and' → logprob: -9.89879035949707
    6. '           ' → logprob: -12.27379035949707
    7. '):
' → logprob: -12.52379035949707
    8. ':
' → logprob: -12.64879035949707
    9. ' :
' → logprob: -13.02379035949707
    10. '<|end|>' → logprob: -13.02379035949707

Token 148: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006694526877254248
    2. '               ' → logprob: -5.631694316864014
    3. '           ' → logprob: -6.381694316864014
    4. '
' → logprob: -7.131694316864014
    5. '                       ' → logprob: -7.881694316864014
    6. '       ' → logprob: -9.506694793701172
    7. '                    
' → logprob: -9.881694793701172
    8. '   ' → logprob: -11.381694793701172
    9. '```' → logprob: -11.381694793701172
    10. ',' → logprob: -11.631694793701172

Token 149: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.9646120667457581
    2. '                   ' → logprob: -1.3396120071411133
    3. ' pos' → logprob: -1.3396120071411133
    4. '               ' → logprob: -2.4646120071411133
    5. '           ' → logprob: -6.214612007141113
    6. '	pos' → logprob: -6.339612007141113
    7. '                       ' → logprob: -6.589612007141113
    8. '
' → logprob: -7.089612007141113
    9. '[pos' → logprob: -7.089612007141113
    10. '   ' → logprob: -7.214612007141113

Token 150: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858975484967232
    2. '=' → logprob: -3.0485897064208984
    3. '<|end|>' → logprob: -14.048589706420898
    4. ' ' → logprob: -14.423589706420898
    5. 's' → logprob: -14.423589706420898
    6. '=i' → logprob: -15.673589706420898
    7. '=int' → logprob: -16.7985897064209
    8. '<|end|>' → logprob: -16.9235897064209
    9. '
' → logprob: -17.0485897064209
    10. '```' → logprob: -17.0485897064209

Token 151: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6931484341621399
    2. ' i' → logprob: -0.6931484341621399
    3. '	i' → logprob: -14.693148612976074
    4. '(i' → logprob: -14.943148612976074
    5. ' ' → logprob: -15.943148612976074
    6. '{i' → logprob: -16.318147659301758
    7. '   ' → logprob: -16.568147659301758
    8. ' (' → logprob: -16.943147659301758
    9. '=i' → logprob: -17.693147659301758
    10. '[i' → logprob: -17.943147659301758

Token 152: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.18418827652931213
    2. '-' → logprob: -1.8091882467269897
    3. '-w' → logprob: -5.434188365936279
    4. '-W' → logprob: -10.434187889099121
    5. '-length' → logprob: -11.309187889099121
    6. 'w' → logprob: -11.559187889099121
    7. '<|end|>' → logprob: -12.434187889099121
    8. ' ' → logprob: -12.809187889099121
    9. '+' → logprob: -13.309187889099121
    10. '-l' → logprob: -13.684187889099121

Token 153: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.001174747827462852
    2. ' w' → logprob: -6.7511749267578125
    3. '(w' → logprob: -12.376174926757812
    4. ' (' → logprob: -15.376174926757812
    5. '<w' → logprob: -16.126174926757812
    6. '	w' → logprob: -17.501174926757812
    7. '(' → logprob: -18.001174926757812
    8. 'W' → logprob: -18.626174926757812
    9. '```' → logprob: -18.626174926757812
    10. '   ' → logprob: -19.001174926757812

Token 154: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005234952084720135
    2. ' +' → logprob: -5.255234718322754
    3. '1' → logprob: -14.005234718322754
    4. '```' → logprob: -15.380234718322754
    5. '＋' → logprob: -16.00523567199707
    6. '
' → logprob: -17.25523567199707
    7. 'plus' → logprob: -17.50523567199707
    8. '2' → logprob: -17.75523567199707
    9. '+
' → logprob: -17.88023567199707
    10. '﻿' → logprob: -18.00523567199707

Token 155: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.62501049041748
    3. '```' → logprob: -13.75001049041748
    4. '<|end|>' → logprob: -16.500009536743164
    5. '   ' → logprob: -16.875009536743164
    6. '
' → logprob: -18.187509536743164
    7. '2' → logprob: -19.125009536743164
    8. '  ' → logprob: -19.187509536743164
    9. '

' → logprob: -19.312509536743164
    10. '`' → logprob: -19.312509536743164

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.125006675720215
    3. '```' → logprob: -14.125006675720215
    4. '
' → logprob: -17.1875057220459
    5. '<|end|>' → logprob: -17.3750057220459
    6. '   ' → logprob: -17.6875057220459
    7. '

' → logprob: -18.0625057220459
    8. '``' → logprob: -18.1875057220459
    9. '۱' → logprob: -18.3125057220459
    10. '+' → logprob: -18.3125057220459

Token 157: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004866907373070717
    2. '           ' → logprob: -6.004867076873779
    3. '       ' → logprob: -6.379867076873779
    4. '               ' → logprob: -7.754867076873779
    5. '   ' → logprob: -8.879866600036621
    6. '				' → logprob: -10.629866600036621
    7. '		           ' → logprob: -10.754866600036621
    8. '                       ' → logprob: -11.004866600036621
    9. '                    
' → logprob: -11.129866600036621
    10. '
' → logprob: -11.629866600036621

Token 158: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0017675277777016163
    2. '           ' → logprob: -7.376767635345459
    3. '				' → logprob: -8.1267671585083
    4. '       ' → logprob: -8.5017671585083
    5. '		           ' → logprob: -8.6267671585083
    6. '               ' → logprob: -9.0017671585083
    7. '
' → logprob: -9.3767671585083
    8. '                    
' → logprob: -9.6267671585083
    9. '<|end|>' → logprob: -10.3767671585083
    10. '   ' → logprob: -10.5017671585083

Token 159: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.24568647146224976
    2. ' break' → logprob: -2.1206865310668945
    3. '                   ' → logprob: -2.4956865310668945
    4. '           ' → logprob: -4.4956865310668945
    5. '               ' → logprob: -5.6206865310668945
    6. '       ' → logprob: -8.370686531066895
    7. '	break' → logprob: -8.620686531066895
    8. '   ' → logprob: -9.120686531066895
    9. '
' → logprob: -9.620686531066895
    10. '                       ' → logprob: -10.495686531066895

Token 160: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009206312242895365
    2. 'if' → logprob: -8.000920295715332
    3. '       ' → logprob: -8.625920295715332
    4. '
' → logprob: -9.875920295715332
    5. 'for' → logprob: -9.875920295715332
    6. '```' → logprob: -9.875920295715332
    7. '            
' → logprob: -9.875920295715332
    8. ' for' → logprob: -10.000920295715332
    9. ' if' → logprob: -10.500920295715332
    10. '   ' → logprob: -10.625920295715332

Token 161: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014383383095264435
    2. '       ' → logprob: -5.264383316040039
    3. '
' → logprob: -5.514383316040039
    4. '            
' → logprob: -6.514383316040039
    5. ' 
' → logprob: -7.389383316040039
    6. 'if' → logprob: -7.514383316040039
    7. '```' → logprob: -7.764383316040039
    8. '   ' → logprob: -7.889383316040039
    9. ' if' → logprob: -8.139383316040039
    10. '    
' → logprob: -8.264383316040039

Token 162: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06257925927639008
    2. ' if' → logprob: -3.0625791549682617
    3. '           ' → logprob: -4.312579154968262
    4. '   ' → logprob: -8.312579154968262
    5. 'else' → logprob: -9.187579154968262
    6. '       ' → logprob: -9.687579154968262
    7. '```' → logprob: -10.187579154968262
    8. ' ' → logprob: -11.437579154968262
    9. 'for' → logprob: -11.687579154968262
    10. '	if' → logprob: -12.062579154968262

Token 163: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.00977297406643629
    2. 'pos' → logprob: -4.634772777557373
    3. ' ' → logprob: -12.009773254394531
    4. '(pos' → logprob: -12.759773254394531
    5. '	pos' → logprob: -13.009773254394531
    6. ' cat' → logprob: -13.134773254394531
    7. '   ' → logprob: -13.884773254394531
    8. ' ' → logprob: -14.634773254394531
    9. '  ' → logprob: -15.384773254394531
    10. '```' → logprob: -15.447273254394531

Token 164: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.0531610250473022
    2. '==' → logprob: -1.1781610250473022
    3. ' !=' → logprob: -1.4281610250473022
    4. '!=' → logprob: -2.428161144256592
    5. '=' → logprob: -5.053161144256592
    6. '>=' → logprob: -5.303161144256592
    7. '==-' → logprob: -6.428161144256592
    8. '!=-' → logprob: -7.178161144256592
    9. ' ' → logprob: -7.303161144256592
    10. ' >=' → logprob: -7.928161144256592

Token 165: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01251177117228508
    2. ' -' → logprob: -4.387511730194092
    3. ' ' → logprob: -13.38751220703125
    4. '   ' → logprob: -14.88751220703125
    5. '0' → logprob: -15.76251220703125
    6. '=' → logprob: -17.01251220703125
    7. '  ' → logprob: -17.38751220703125
    8. '```' → logprob: -17.88751220703125
    9. '=-' → logprob: -17.88751220703125
    10. '	' → logprob: -18.13751220703125

Token 166: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -15.000000953674316
    3. '2' → logprob: -15.437500953674316
    4. '<|end|>' → logprob: -16.1875
    5. '```' → logprob: -17.25
    6. ',' → logprob: -17.75
    7. '۱' → logprob: -17.875
    8. '   ' → logprob: -18.3125
    9. '.' → logprob: -18.5625
    10. '">' → logprob: -18.5625

Token 167: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10470612347126007
    2. ':' → logprob: -2.354706048965454
    3. '               ' → logprob: -5.729706287384033
    4. ' or' → logprob: -7.854706287384033
    5. ' print' → logprob: -8.104705810546875
    6. '           ' → logprob: -8.479705810546875
    7. 'print' → logprob: -8.604705810546875
    8. ':

' → logprob: -9.979705810546875
    9. '):
' → logprob: -10.354705810546875
    10. ' and' → logprob: -10.729705810546875

Token 168: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08319596946239471
    2. ' print' → logprob: -2.958195924758911
    3. 'print' → logprob: -4.20819616317749
    4. '           ' → logprob: -4.45819616317749
    5. '```' → logprob: -7.45819616317749
    6. '   ' → logprob: -8.208195686340332
    7. '       ' → logprob: -8.583195686340332
    8. ' continue' → logprob: -9.333195686340332
    9. '                   ' → logprob: -9.458195686340332
    10. '
' → logprob: -9.708195686340332

Token 169: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.07484883815050125
    2. 'print' (adapté à ' print') → logprob: -2.6998488903045654
    3. '           ' → logprob: -5.699848651885986
    4. '               ' → logprob: -7.449848651885986
    5. '   ' → logprob: -7.699848651885986
    6. ' continue' → logprob: -8.949849128723145
    7. '       ' → logprob: -9.824849128723145
    8. ' ' → logprob: -9.824849128723145
    9. ' for' → logprob: -9.824849128723145
    10. '    ' → logprob: -10.074849128723145

Token 170: '("' (ID: 568)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.1211297512054443
    2. '("' → logprob: -1.1211297512054443
    3. '('' → logprob: -2.1211297512054443
    4. '-' → logprob: -2.6211297512054443
    5. '(' → logprob: -2.8711297512054443
    6. ''' → logprob: -3.3711297512054443
    7. '0' → logprob: -4.246129989624023
    8. '("-' → logprob: -4.621129989624023
    9. '"No' → logprob: -4.621129989624023
    10. '(-' → logprob: -4.746129989624023

Token 171: 'im' (ID: 321)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.81621915102005
    2. '0' → logprob: -1.0662190914154053
    3. 'im' → logprob: -2.3162190914154053
    4. 'Cannot' → logprob: -3.8162190914154053
    5. 'FAIL' → logprob: -4.691219329833984
    6. 'fail' → logprob: -4.941219329833984
    7. 'sorry' → logprob: -4.941219329833984
    8. 's' → logprob: -5.191219329833984
    9. 'None' → logprob: -5.316219329833984
    10. 'x' → logprob: -5.316219329833984

Token 172: 'possible' (ID: 50714)
  Prédit: 'possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.0375768318772316
    2. 'pos' → logprob: -3.787576913833618
    3. 'poss' → logprob: -4.287576675415039
    4. 'p' → logprob: -8.412576675415039
    5. 'pass' → logprob: -10.037576675415039
    6. 'posable' → logprob: -10.162576675415039
    7. 'port' → logprob: -10.412576675415039
    8. '_possible' → logprob: -10.662576675415039
    9. 'Possible' → logprob: -10.787576675415039
    10. 'po' → logprob: -11.162576675415039

Token 173: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.007707892917096615
    2. '")
' → logprob: -4.8827080726623535
    3. ')' → logprob: -10.007707595825195
    4. '")
' → logprob: -10.382707595825195
    5. '!")' → logprob: -11.757707595825195
    6. '"' → logprob: -12.257707595825195
    7. ')")' → logprob: -12.882707595825195
    8. ' to' → logprob: -12.882707595825195
    9. '.")' → logprob: -13.882707595825195
    10. ')
' → logprob: -14.132707595825195

Token 174: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024029504507780075
    2. '               ' → logprob: -4.024029731750488
    3. 'else' → logprob: -5.774029731750488
    4. 'continue' → logprob: -6.774029731750488
    5. '       ' → logprob: -6.899029731750488
    6. ' else' → logprob: -8.024029731750488
    7. ' continue' → logprob: -8.649029731750488
    8. '		' → logprob: -9.899029731750488
    9. '	continue' → logprob: -11.774029731750488
    10. '   ' → logprob: -12.024029731750488

Token 175: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029548900201916695
    2. 'else' (adapté à ' else') → logprob: -3.7795488834381104
    3. ' else' → logprob: -5.1545491218566895
    4. '       ' → logprob: -8.029548645019531
    5. '               ' → logprob: -9.154548645019531
    6. '	       ' → logprob: -11.279548645019531
    7. 'continue' → logprob: -11.279548645019531
    8. '   ' → logprob: -12.029548645019531
    9. ' continue' → logprob: -12.404548645019531
    10. '		' → logprob: -12.529548645019531

Token 176: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.43465548753738403
    2. ':' → logprob: -1.0596554279327393
    3. '               ' → logprob: -5.184655666351318
    4. '           ' → logprob: -8.68465518951416
    5. ':

' → logprob: -9.80965518951416
    6. '):
' → logprob: -10.30965518951416
    7. ' :
' → logprob: -10.80965518951416
    8. '   ' → logprob: -11.43465518951416
    9. '       ' → logprob: -11.43465518951416
    10. '                   ' → logprob: -11.68465518951416

Token 177: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4212607741355896
    2. ' for' → logprob: -1.2962608337402344
    3. '           ' → logprob: -3.4212608337402344
    4. ' cats' → logprob: -3.5462608337402344
    5. 'for' → logprob: -4.921260833740234
    6. '
' → logprob: -7.796260833740234
    7. 'cats' → logprob: -8.296260833740234
    8. '   ' → logprob: -8.296260833740234
    9. '                
' → logprob: -8.796260833740234
    10. '```' → logprob: -9.296260833740234

Token 178: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.7070643901824951
    2. ' for' → logprob: -0.8320643901824951
    3. ' cats' → logprob: -2.832064390182495
    4. '               ' → logprob: -5.332064628601074
    5. 'cats' → logprob: -5.332064628601074
    6. '           ' → logprob: -6.332064628601074
    7. '   ' → logprob: -6.957064628601074
    8. '                   ' → logprob: -8.332064628601074
    9. ' ' → logprob: -10.082064628601074
    10. '#' → logprob: -10.332064628601074

Token 179: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08210085332393646
    2. ' i' → logprob: -2.5821008682250977
    3. 'j' → logprob: -5.832100868225098
    4. ' j' → logprob: -8.207100868225098
    5. '```' → logprob: -14.457100868225098
    6. 'x' → logprob: -14.832100868225098
    7. '	i' → logprob: -15.707100868225098
    8. ' ' → logprob: -16.70709991455078
    9. 'k' → logprob: -16.83209991455078
    10. 'idx' → logprob: -17.20709991455078

Token 180: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0057021924294531345
    2. 'in' → logprob: -5.630702018737793
    3. ' range' → logprob: -6.380702018737793
    4. 'range' → logprob: -8.130702018737793
    5. ' ' → logprob: -10.005702018737793
    6. ' pos' → logprob: -10.755702018737793
    7. '<|end|>' → logprob: -11.255702018737793
    8. 'pos' → logprob: -11.880702018737793
    9. '(range' → logprob: -12.755702018737793
    10. '    ' → logprob: -12.880702018737793

Token 181: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47408831119537354
    2. ' range' → logprob: -0.9740883111953735
    3. '(range' → logprob: -11.474088668823242
    4. '	range' → logprob: -14.099088668823242
    5. '.range' → logprob: -16.599088668823242
    6. '_range' → logprob: -17.474088668823242
    7. '   ' → logprob: -17.849088668823242
    8. ' ' → logprob: -18.474088668823242
    9. 'rang' → logprob: -18.599088668823242
    10. ' xrange' → logprob: -19.224088668823242

Token 182: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.010347836650907993
    2. ' pos' → logprob: -5.010347843170166
    3. 'pos' → logprob: -5.635347843170166
    4. '(' → logprob: -10.635347366333008
    5. ' (' → logprob: -11.010347366333008
    6. '	pos' → logprob: -11.885347366333008
    7. '[pos' → logprob: -12.135347366333008
    8. ',pos' → logprob: -12.760347366333008
    9. 'Pos' → logprob: -15.385347366333008
    10. '_pos' → logprob: -16.010347366333008

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00162662158254534
    2. ' ,' → logprob: -7.001626491546631
    3. ',pos' → logprob: -7.251626491546631
    4. 'pos' → logprob: -12.376626968383789
    5. '   ' → logprob: -14.626626968383789
    6. '	pos' → logprob: -15.501626968383789
    7. '(pos' → logprob: -15.751626968383789
    8. ' pos' → logprob: -15.751626968383789
    9. ' ' → logprob: -15.751626968383789
    10. '[pos' → logprob: -16.12662696838379

Token 184: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.00033546582562848926
    2. ' pos' → logprob: -8.000335693359375
    3. '           ' → logprob: -17.750335693359375
    4. '               ' → logprob: -18.000335693359375
    5. '	pos' → logprob: -18.250335693359375
    6. '   ' → logprob: -19.375335693359375
    7. '(pos' → logprob: -19.875335693359375
    8. ' ' → logprob: -20.500335693359375
    9. '                   ' → logprob: -20.625335693359375
    10. 'posit' → logprob: -20.875335693359375

Token 185: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3868861794471741
    2. '+' → logprob: -1.1368861198425293
    3. '+w' → logprob: -11.261886596679688
    4. ' ' → logprob: -14.511886596679688
    5. ')' → logprob: -14.511886596679688
    6. 'pos' → logprob: -14.886886596679688
    7. '+p' → logprob: -15.761886596679688
    8. '   ' → logprob: -15.886886596679688
    9. ',' → logprob: -16.011886596679688
    10. '+n' → logprob: -16.511886596679688

Token 186: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.0206720617134124e-05
    2. ' w' → logprob: -11.50001049041748
    3. '   ' → logprob: -21.000009536743164
    4. '	w' → logprob: -21.875009536743164
    5. '```' → logprob: -22.250009536743164
    6. '<|end|>' → logprob: -22.750009536743164
    7. ')' → logprob: -23.875009536743164
    8. '_w' → logprob: -24.000009536743164
    9. ' ' → logprob: -24.125009536743164
    10. '*w' → logprob: -24.250009536743164

Token 187: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11285968869924545
    2. '):
' → logprob: -2.2378597259521484
    3. '):
' → logprob: -11.612859725952148
    4. ' ):' → logprob: -11.612859725952148
    5. ')' → logprob: -12.237859725952148
    6. ']:' → logprob: -12.487859725952148
    7. '):

' → logprob: -12.862859725952148
    8. ':' → logprob: -12.987859725952148
    9. '   ' → logprob: -13.362859725952148
    10. '[' → logprob: -13.737859725952148

Token 188: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11805900931358337
    2. ' fence' → logprob: -2.743058919906616
    3. '               ' → logprob: -3.368058919906616
    4. 'f' → logprob: -4.868059158325195
    5. '           ' → logprob: -6.493059158325195
    6. ' fenced' → logprob: -7.118059158325195
    7. '```' → logprob: -7.868059158325195
    8. '   ' → logprob: -7.868059158325195
    9. '                       ' → logprob: -7.993059158325195
    10. '       ' → logprob: -8.118059158325195

Token 189: ' fence' (ID: 42166)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.43082594871520996
    2. ' fence' → logprob: -1.05582594871521
    3. '                   ' → logprob: -7.055826187133789
    4. '               ' → logprob: -7.305826187133789
    5. ' f' → logprob: -8.555826187133789
    6. '   ' → logprob: -9.430826187133789
    7. '                       ' → logprob: -9.680826187133789
    8. '       ' → logprob: -9.805826187133789
    9. ' fenced' → logprob: -9.805826187133789
    10. 'Fence' → logprob: -10.180826187133789

Token 190: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.165027217415627e-05
    2. '[' → logprob: -10.750021934509277
    3. '[pos' → logprob: -16.62502098083496
    4. '[I' → logprob: -17.50002098083496
    5. '```' → logprob: -17.62502098083496
    6. ' [' → logprob: -18.62502098083496
    7. 'i' → logprob: -18.75002098083496
    8. '=' → logprob: -19.00002098083496
    9. '[s' → logprob: -19.50002098083496
    10. ']' → logprob: -19.87502098083496

Token 191: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004472348664421588
    2. ']=' → logprob: -8.000447273254395
    3. '=' → logprob: -9.750447273254395
    4. ' ]' → logprob: -10.250447273254395
    5. ' =' → logprob: -11.250447273254395
    6. ')' → logprob: -12.375447273254395
    7. '=True' → logprob: -14.000447273254395
    8. ']
' → logprob: -16.375446319580078
    9. 'True' → logprob: -17.000446319580078
    10. '[' → logprob: -17.125446319580078

Token 192: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001930420519784093
    2. ' =' → logprob: -6.251930236816406
    3. '=True' → logprob: -13.251930236816406
    4. ')' → logprob: -19.126930236816406
    5. ']' → logprob: -19.251930236816406
    6. '[' → logprob: -19.251930236816406
    7. '=true' → logprob: -19.876930236816406
    8. '=False' → logprob: -20.001930236816406
    9. '<|end|>' → logprob: -20.376930236816406
    10. ' ' → logprob: -20.626930236816406

Token 193: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -2.7610454708337784e-05
    2. ' True' → logprob: -10.500027656555176
    3. '(True' → logprob: -19.37502670288086
    4. '=True' → logprob: -20.25002670288086
    5. '   ' → logprob: -21.62502670288086
    6. '.True' → logprob: -22.87502670288086
    7. 'true' → logprob: -23.00002670288086
    8. '_true' → logprob: -24.62502670288086
    9. '[' → logprob: -24.87502670288086
    10. 'TRUE' → logprob: -25.50002670288086

Token 194: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0040157148614525795
    2. '
' → logprob: -5.879015922546387
    3. '           ' → logprob: -7.004015922546387
    4. '                
' → logprob: -8.629015922546387
    5. ',' → logprob: -10.379015922546387
    6. '              ' → logprob: -10.879015922546387
    7. '  
' → logprob: -11.004015922546387
    8. '    
' → logprob: -11.379015922546387
    9. '            
' → logprob: -11.879015922546387
    10. '               
' → logprob: -12.504015922546387

Token 195: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0034682133700698614
    2. '           ' → logprob: -5.753468036651611
    3. 'cats' → logprob: -9.00346851348877
    4. 'cat' → logprob: -9.62846851348877
    5. ' cats' → logprob: -9.75346851348877
    6. '
' → logprob: -10.87846851348877
    7. '              ' → logprob: -12.00346851348877
    8. '                
' → logprob: -12.50346851348877
    9. '```' → logprob: -12.87846851348877
    10. ' cat' → logprob: -13.12846851348877

Token 196: ' cats' (ID: 28854)
  Prédit: ' cats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cats' → logprob: -0.39109477400779724
    2. 'cats' (adapté à ' cats') → logprob: -1.1410948038101196
    3. '           ' → logprob: -5.64109468460083
    4. '               ' → logprob: -8.016095161437988
    5. '   ' → logprob: -8.141095161437988
    6. '       ' → logprob: -11.516095161437988
    7. 'Cats' → logprob: -11.641095161437988
    8. ' ' → logprob: -12.141095161437988
    9. 'cat' → logprob: -12.266095161437988
    10. '
' → logprob: -12.516095161437988

Token 197: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. '[c' → logprob: -14.000000953674316
    3. ' [' → logprob: -15.625000953674316
    4. 'cat' → logprob: -17.125001907348633
    5. '[int' → logprob: -17.125001907348633
    6. '```' → logprob: -17.750001907348633
    7. '[
' → logprob: -18.500001907348633
    8. '[id' → logprob: -18.500001907348633
    9. '[cell' → logprob: -18.750001907348633
    10. '\[' → logprob: -19.000001907348633

Token 198: 'cat' (ID: 8837)
  Prédit: 'cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cat' → logprob: -5.157039049663581e-05
    2. ' cat' → logprob: -9.875051498413086
    3. '(cat' → logprob: -17.125051498413086
    4. '   ' → logprob: -17.500051498413086
    5. 'cats' → logprob: -17.875051498413086
    6. '```' → logprob: -18.750051498413086
    7. 'c' → logprob: -19.375051498413086
    8. '猫' → logprob: -19.500051498413086
    9. '[' → logprob: -19.750051498413086
    10. 'chat' → logprob: -19.875051498413086

Token 199: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -3.128163257315464e-07
    2. 'id' → logprob: -15.5
    3. '```' → logprob: -17.5
    4. 's' → logprob: -17.75
    5. 'd' → logprob: -18.25
    6. '_i' → logprob: -19.25
    7. '_ids' → logprob: -19.375
    8. '[id' → logprob: -19.5
    9. '[' → logprob: -19.625
    10. '_' → logprob: -20.125

Token 200: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.2113979209971149e-05
    2. ']=' → logprob: -11.750012397766113
    3. ']=(' → logprob: -12.750012397766113
    4. ')' → logprob: -14.625012397766113
    5. '=' → logprob: -14.875012397766113
    6. ' ]' → logprob: -15.125012397766113
    7. ' =' → logprob: -16.000011444091797
    8. ',' → logprob: -18.625011444091797
    9. '[' → logprob: -20.250011444091797
    10. '=(' → logprob: -20.375011444091797

Token 201: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1002068892121315
    2. ' =' → logprob: -2.3502068519592285
    3. '=(' → logprob: -15.600207328796387
    4. '＝' → logprob: -18.35020637512207
    5. ' =(' → logprob: -18.85020637512207
    6. ')' → logprob: -18.85020637512207
    7. '=

' → logprob: -18.97520637512207
    8. ']=' → logprob: -19.10020637512207
    9. '```' → logprob: -19.60020637512207
    10. ')=' → logprob: -19.60020637512207

Token 202: ' (' (ID: 350)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.0015180727932602167
    2. ' (' → logprob: -6.501518249511719
    3. '(' → logprob: -11.126518249511719
    4. '(Pos' → logprob: -14.501518249511719
    5. '[pos' → logprob: -14.751518249511719
    6. '(position' → logprob: -16.75151824951172
    7. '   ' → logprob: -17.25151824951172
    8. '(i' → logprob: -17.75151824951172
    9. '(p' → logprob: -18.00151824951172
    10. '(post' → logprob: -18.12651824951172

Token 203: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -5.836499985889532e-05
    2. ' pos' → logprob: -9.7500581741333
    3. '(pos' → logprob: -20.625059127807617
    4. 'position' → logprob: -21.000059127807617
    5. '	pos' → logprob: -21.000059127807617
    6. '   ' → logprob: -21.500059127807617
    7. ',pos' → logprob: -21.500059127807617
    8. '[pos' → logprob: -21.625059127807617
    9. 'posit' → logprob: -21.750059127807617
    10. '_pos' → logprob: -23.000059127807617

Token 204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016945181414484978
    2. ' ,' → logprob: -9.12516975402832
    3. ',w' → logprob: -9.75016975402832
    4. ',
' → logprob: -13.87516975402832
    5. 'w' → logprob: -14.12516975402832
    6. ',width' → logprob: -16.37516975402832
    7. ')' → logprob: -16.62516975402832
    8. '‌,' → logprob: -16.87516975402832
    9. '```' → logprob: -17.12516975402832
    10. ',n' → logprob: -17.37516975402832

Token 205: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.005233882926404476
    2. ' w' → logprob: -5.2552337646484375
    3. '   ' → logprob: -16.880233764648438
    4. ' ' → logprob: -17.255233764648438
    5. '	w' → logprob: -17.255233764648438
    6. '    ' → logprob: -18.255233764648438
    7. 'W' → logprob: -18.505233764648438
    8. ''w' → logprob: -19.630233764648438
    9. '_w' → logprob: -19.630233764648438
    10. '<w' → logprob: -19.630233764648438

Token 206: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015979631280060858
    2. ')
' → logprob: -8.750160217285156
    3. ' )' → logprob: -14.375160217285156
    4. ')

' → logprob: -14.625160217285156
    5. '           ' → logprob: -16.750160217285156
    6. ')
' → logprob: -17.125160217285156
    7. '   ' → logprob: -17.125160217285156
    8. '<|end|>' → logprob: -17.125160217285156
    9. '       ' → logprob: -17.250160217285156
    10. ')#' → logprob: -17.750160217285156

Token 207: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.26667407155036926
    2. '       ' → logprob: -1.8916740417480469
    3. 'print' → logprob: -2.766674041748047
    4. 'elif' → logprob: -4.641674041748047
    5. '           ' → logprob: -4.766674041748047
    6. ' print' → logprob: -6.766674041748047
    7. '   ' → logprob: -7.266674041748047
    8. 'else' → logprob: -8.266674041748047
    9. ' elif' → logprob: -9.641674041748047
    10. '```' → logprob: -11.141674041748047

Token 208: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.007685651071369648
    2. ' print' → logprob: -5.007685661315918
    3. '               ' → logprob: -7.007685661315918
    4. '           ' → logprob: -10.007685661315918
    5. '   ' → logprob: -11.257685661315918
    6. ' ' → logprob: -13.007685661315918
    7. '       ' → logprob: -13.507685661315918
    8. '```' → logprob: -14.257685661315918
    9. '  ' → logprob: -14.632685661315918
    10. '	print' → logprob: -15.132685661315918

Token 209: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.0178848784416914
    2. 'pos' → logprob: -4.142884731292725
    3. '(' → logprob: -6.517884731292725
    4. '(f' → logprob: -8.267885208129883
    5. '("' → logprob: -9.767885208129883
    6. ' pos' → logprob: -10.267885208129883
    7. '('' → logprob: -12.017885208129883
    8. ' (' → logprob: -12.267885208129883
    9. '(p' → logprob: -13.267885208129883
    10. '()' → logprob: -13.517885208129883

Token 210: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018077615823131055
    2. ',' → logprob: -9.500181198120117
    3. ' )' → logprob: -9.500181198120117
    4. ')
' → logprob: -10.750181198120117
    5. '+' → logprob: -12.250181198120117
    6. ')}' → logprob: -13.500181198120117
    7. ')`' → logprob: -14.375181198120117
    8. ',end' → logprob: -14.625181198120117
    9. '))' → logprob: -14.875181198120117
    10. '),' → logprob: -15.125181198120117

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1200963482260704
    2. 'elif' → logprob: -2.245096445083618
    3. 'else' → logprob: -5.370096206665039
    4. '   ' → logprob: -5.995096206665039
    5. '```' → logprob: -10.120096206665039
    6. ' elif' → logprob: -10.370096206665039
    7. '        
' → logprob: -11.620096206665039
    8. '    
' → logprob: -11.995096206665039
    9. '	' → logprob: -12.870096206665039
    10. ' else' → logprob: -12.870096206665039

Token 212: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.046513643115758896
    2. '       ' → logprob: -3.796513557434082
    3. 'else' (adapté à ' else') → logprob: -3.796513557434082
    4. '   ' → logprob: -7.546513557434082
    5. ' elif' → logprob: -10.921513557434082
    6. 'if' → logprob: -13.296513557434082
    7. '```' → logprob: -13.671513557434082
    8. ' else' → logprob: -14.421513557434082
    9. '           ' → logprob: -14.921513557434082
    10. '	elif' → logprob: -15.171513557434082

Token 213: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022168930619955063
    2. ':
' → logprob: -3.8971688747406006
    3. ' if' → logprob: -7.27216911315918
    4. 'if' → logprob: -7.77216911315918
    5. ' :' → logprob: -7.89716911315918
    6. ' :
' → logprob: -9.64716911315918
    7. '   ' → logprob: -10.39716911315918
    8. '=' → logprob: -11.77216911315918
    9. ':

' → logprob: -11.77216911315918
    10. ' ' → logprob: -11.89716911315918

Token 214: ' ' (ID: 220)
  Prédit: ' cat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cat' → logprob: -0.2993617057800293
    2. 'cat' → logprob: -1.4243617057800293
    3. '           ' → logprob: -4.299361705780029
    4. '   ' → logprob: -6.799361705780029
    5. '       ' → logprob: -7.299361705780029
    6. 'move' → logprob: -7.424361705780029
    7. 'id' → logprob: -7.674361705780029
    8. '#' → logprob: -7.674361705780029
    9. ' ' → logprob: -8.361862182617188
    10. ' #' → logprob: -8.674362182617188

Token 215: ' #' (ID: 1069)
  Prédit: 'cat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cat' → logprob: -0.05047662556171417
    2. '           ' → logprob: -3.550476551055908
    3. '#' → logprob: -5.050476551055908
    4. ' cat' → logprob: -5.175476551055908
    5. 'move' → logprob: -6.300476551055908
    6. 'c' → logprob: -6.300476551055908
    7. 'id' → logprob: -7.175476551055908
    8. 'int' → logprob: -7.425476551055908
    9. '       ' → logprob: -7.675476551055908
    10. 'remove' → logprob: -7.925476551055908

Token 216: ' wake' (ID: 20580)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8378380537033081
    2. 'r' → logprob: -1.587838053703308
    3. 'line' → logprob: -2.8378381729125977
    4. ' r' → logprob: -3.0878381729125977
    5. '   ' → logprob: -3.3378381729125977
    6. 'd' → logprob: -3.5878381729125977
    7. ''r' → logprob: -3.5878381729125977
    8. ' '' → logprob: -3.7128381729125977
    9. 'c' → logprob: -3.7128381729125977
    10. 'f' → logprob: -3.8378381729125977

Token 217: 'up' (ID: 817)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7476828098297119
    2. 'up' → logprob: -0.9976828098297119
    3. '_up' → logprob: -3.497682809829712
    4. '    
' → logprob: -3.872682809829712
    5. ' cat' → logprob: -3.997682809829712
    6. '_' → logprob: -3.997682809829712
    7. '       ' → logprob: -4.747682571411133
    8. '            
' → logprob: -4.872682571411133
    9. 'elif' → logprob: -4.872682571411133
    10. ' ' → logprob: -4.872682571411133

Token 218: '
' (ID: 198)
  Prédit: ' cat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cat' → logprob: -0.05430695042014122
    2. '       ' → logprob: -3.429306983947754
    3. '   ' → logprob: -4.679306983947754
    4. 'cat' → logprob: -5.304306983947754
    5. '           ' → logprob: -5.679306983947754
    6. '_cat' → logprob: -7.054306983947754
    7. ',' → logprob: -7.179306983947754
    8. '        ' → logprob: -8.429306983947754
    9. '    ' → logprob: -8.804306983947754
    10. ' ' → logprob: -9.054306983947754

Token 219: '           ' (ID: 352)
  Prédit: ' cat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cat' → logprob: -0.010130012407898903
    2. '       ' → logprob: -5.635129928588867
    3. 'cat' → logprob: -5.635129928588867
    4. '           ' → logprob: -6.010129928588867
    5. '   ' → logprob: -8.510129928588867
    6. '(cat' → logprob: -9.760129928588867
    7. ' ' → logprob: -10.010129928588867
    8. '_cat' → logprob: -10.135129928588867
    9. '        ' → logprob: -11.010129928588867
    10. ',' → logprob: -11.135129928588867

Token 220: ' cat' (ID: 9059)
  Prédit: 'cat'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cat' (adapté à ' cat') → logprob: -0.009694000706076622
    2. ' cat' → logprob: -4.7596940994262695
    3. '           ' → logprob: -6.8846940994262695
    4. '   ' → logprob: -10.63469409942627
    5. '       ' → logprob: -11.00969409942627
    6. 'id' → logprob: -12.38469409942627
    7. '               ' → logprob: -13.63469409942627
    8. '_cat' → logprob: -13.63469409942627
    9. 'cid' → logprob: -13.88469409942627
    10. 'c' → logprob: -13.88469409942627

Token 221: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -2.3199920178740285e-05
    2. '_' → logprob: -10.875022888183594
    3. '_ids' → logprob: -12.750022888183594
    4. '_i' → logprob: -15.000022888183594
    5. ' _' → logprob: -15.500022888183594
    6. 'id' → logprob: -15.875022888183594
    7. '_idx' → logprob: -16.250022888183594
    8. '[' → logprob: -16.375022888183594
    9. '=_' → logprob: -16.625022888183594
    10. ''_' → logprob: -16.625022888183594

Token 222: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022931039333344
    2. '=' → logprob: -1.9102293252944946
    3. '=int' → logprob: -13.035229682922363
    4. ',' → logprob: -13.410229682922363
    5. ' ' → logprob: -14.285229682922363
    6. '   ' → logprob: -14.660229682922363
    7. ')' → logprob: -15.285229682922363
    8. '=line' → logprob: -16.285228729248047
    9. ']' → logprob: -17.160228729248047
    10. ' in' → logprob: -17.660228729248047

Token 223: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03804149478673935
    2. ' int' → logprob: -3.288041591644287
    3. '	int' → logprob: -17.788042068481445
    4. '           ' → logprob: -17.913042068481445
    5. '[int' → logprob: -18.038042068481445
    6. '<int' → logprob: -18.288042068481445
    7. '   ' → logprob: -18.538042068481445
    8. '(int' → logprob: -18.663042068481445
    9. '=int' → logprob: -18.663042068481445
    10. ' ' → logprob: -18.788042068481445

Token 224: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0001239196863025427
    2. 'line' → logprob: -9.000123977661133
    3. ' line' → logprob: -15.375123977661133
    4. '(' → logprob: -15.625123977661133
    5. '[line' → logprob: -17.375123977661133
    6. '=line' → logprob: -19.000123977661133
    7. '	line' → logprob: -19.250123977661133
    8. ',line' → logprob: -19.375123977661133
    9. ')' → logprob: -19.500123977661133
    10. '#line' → logprob: -20.750123977661133

Token 225: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.173704271830502e-06
    2. '1' → logprob: -12.75000286102295
    3. ' [' → logprob: -16.250003814697266
    4. '       ' → logprob: -17.125003814697266
    5. '           ' → logprob: -17.125003814697266
    6. '```' → logprob: -17.750003814697266
    7. '][' → logprob: -17.875003814697266
    8. '[
' → logprob: -18.250003814697266
    9. '   ' → logprob: -18.625003814697266
    10. '(' → logprob: -18.750003814697266

Token 226: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -15.000004768371582
    4. '[' → logprob: -16.3750057220459
    5. '0' → logprob: -16.6250057220459
    6. '
' → logprob: -16.8750057220459
    7. '2' → logprob: -17.3750057220459
    8. '       ' → logprob: -17.7500057220459
    9. '           ' → logprob: -17.8750057220459
    10. '```' → logprob: -18.1875057220459

Token 227: '])
' (ID: 5169)
  Prédit: '])
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.3617852032184601
    2. '])' → logprob: -1.3617851734161377
    3. ')
' → logprob: -3.2367851734161377
    4. ')' → logprob: -4.861785411834717
    5. ')]' → logprob: -8.986784934997559
    6. ']' → logprob: -9.611784934997559
    7. '])

' → logprob: -10.111784934997559
    8. ']
' → logprob: -10.361784934997559
    9. ')]
' → logprob: -10.486784934997559
    10. '])
' → logprob: -11.111784934997559

Token 228: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1533757746219635
    2. 'pos' → logprob: -2.4033758640289307
    3. 'start' → logprob: -4.028375625610352
    4. ' pos' → logprob: -4.153375625610352
    5. '
' → logprob: -5.403375625610352
    6. ' start' → logprob: -5.403375625610352
    7. ',' → logprob: -5.903375625610352
    8. '       ' → logprob: -6.278375625610352
    9. ' if' → logprob: -6.403375625610352
    10. 'if' → logprob: -7.153375625610352

Token 229: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.7360146045684814
    2. 'start' → logprob: -0.7360146045684814
    3. 'if' → logprob: -3.2360146045684814
    4. '           ' → logprob: -6.736014366149902
    5. ' start' → logprob: -7.736014366149902
    6. ' pos' → logprob: -7.861014366149902
    7. ' if' → logprob: -7.861014366149902
    8. '(pos' → logprob: -8.986014366149902
    9. '(start' → logprob: -9.236014366149902
    10. 's' → logprob: -11.111014366149902

Token 230: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.05499910004437e-05
    2. ',w' → logprob: -9.625090599060059
    3. ' ,' → logprob: -11.000090599060059
    4. ',width' → logprob: -12.500090599060059
    5. ',start' → logprob: -13.750090599060059
    6. ',
' → logprob: -14.500090599060059
    7. ',length' → logprob: -15.000090599060059
    8. ',pos' → logprob: -15.250090599060059
    9. '=' → logprob: -15.375090599060059
    10. ',v' → logprob: -15.875090599060059

Token 231: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.015426035970449448
    2. 'width' → logprob: -4.265426158905029
    3. ' w' → logprob: -7.015426158905029
    4. ' width' → logprob: -8.015425682067871
    5. 'length' → logprob: -10.390425682067871
    6. 'wid' → logprob: -14.140425682067871
    7. 'size' → logprob: -14.515425682067871
    8. ' length' → logprob: -14.640425682067871
    9. '   ' → logprob: -15.515425682067871
    10. ' ' → logprob: -15.890425682067871

Token 232: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868716359138489
    2. ' =' → logprob: -1.136871576309204
    3. '   ' → logprob: -15.511871337890625
    4. ' ' → logprob: -15.511871337890625
    5. ')' → logprob: -15.761871337890625
    6. '    ' → logprob: -17.511871337890625
    7. '           ' → logprob: -18.136871337890625
    8. '  ' → logprob: -18.511871337890625
    9. '       ' → logprob: -18.636871337890625
    10. ')=' → logprob: -18.886871337890625

Token 233: ' cats' (ID: 28854)
  Prédit: ' cats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cats' → logprob: -0.12693998217582703
    2. 'cats' → logprob: -2.1269400119781494
    3. '   ' → logprob: -12.12693977355957
    4. 'Cats' → logprob: -12.87693977355957
    5. 'cat' → logprob: -13.50193977355957
    6. '           ' → logprob: -14.12693977355957
    7. ' cat' → logprob: -14.25193977355957
    8. '    ' → logprob: -15.00193977355957
    9. ' ' → logprob: -15.75193977355957
    10. 'c' → logprob: -15.75193977355957

Token 234: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004090508911758661
    2. '.pop' → logprob: -5.504090309143066
    3. 'pop' → logprob: -11.379090309143066
    4. 'cat' → logprob: -14.754090309143066
    5. '.get' → logprob: -15.754090309143066
    6. '[c' → logprob: -18.879091262817383
    7. ' pop' → logprob: -18.879091262817383
    8. '[
' → logprob: -18.879091262817383
    9. '.setdefault' → logprob: -19.379091262817383
    10. '```' → logprob: -19.379091262817383

Token 235: 'cat' (ID: 8837)
  Prédit: 'cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cat' → logprob: -9.014684110297821e-06
    2. ' cat' → logprob: -11.625008583068848
    3. 'cats' → logprob: -17.750009536743164
    4. '(cat' → logprob: -18.000009536743164
    5. '[' → logprob: -18.375009536743164
    6. '   ' → logprob: -19.750009536743164
    7. '_cat' → logprob: -20.625009536743164
    8. 'c' → logprob: -20.875009536743164
    9. '-cat' → logprob: -20.875009536743164
    10. '.cat' → logprob: -21.125009536743164

Token 236: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -2.696889623621246e-06
    2. 'id' → logprob: -12.87500286102295
    3. '_' → logprob: -19.125001907348633
    4. 'd' → logprob: -19.125001907348633
    5. '1' → logprob: -19.375001907348633
    6. '_i' → logprob: -19.500001907348633
    7. ']' → logprob: -19.500001907348633
    8. '[' → logprob: -19.875001907348633
    9. '   ' → logprob: -20.125001907348633
    10. '```' → logprob: -20.625001907348633

Token 237: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.1816495954990387
    2. ')
' → logprob: -2.431649684906006
    3. ']' → logprob: -2.681649684906006
    4. ')' → logprob: -4.681649684906006
    5. '           ' → logprob: -7.931649684906006
    6. ']
' → logprob: -9.556649208068848
    7. ']

' → logprob: -10.431649208068848
    8. '       ' → logprob: -11.556649208068848
    9. ')
' → logprob: -11.681649208068848
    10. ' ]
' → logprob: -11.931649208068848

Token 238: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017443090677261353
    2. ' for' → logprob: -4.2674431800842285
    3. 'for' → logprob: -5.8924431800842285
    4. '   ' → logprob: -7.6424431800842285
    5. '            
' → logprob: -10.76744270324707
    6. '       ' → logprob: -11.89244270324707
    7. '               ' → logprob: -13.76744270324707
    8. '    
' → logprob: -14.01744270324707
    9. '<|end|>' → logprob: -14.01744270324707
    10. '
' → logprob: -14.26744270324707

Token 239: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004308822099119425
    2. ' for' → logprob: -5.504308700561523
    3. '           ' → logprob: -8.504308700561523
    4. '   ' → logprob: -10.504308700561523
    5. '       ' → logprob: -15.629308700561523
    6. '	for' → logprob: -16.379308700561523
    7. 'del' → logprob: -17.254308700561523
    8. ' ' → logprob: -17.379308700561523
    9. '
' → logprob: -18.004308700561523
    10. '               ' → logprob: -19.004308700561523

Token 240: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3868734836578369
    2. 'i' → logprob: -1.136873483657837
    3. '	i' → logprob: -13.636873245239258
    4. ' ' → logprob: -14.136873245239258
    5. '   ' → logprob: -14.886873245239258
    6. '_i' → logprob: -16.261873245239258
    7. '  ' → logprob: -17.261873245239258
    8. 'pos' → logprob: -17.761873245239258
    9. '```' → logprob: -17.886873245239258
    10. 'I' → logprob: -18.011873245239258

Token 241: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009757624007761478
    2. 'in' → logprob: -4.6347575187683105
    3. ' ' → logprob: -14.384757995605469
    4. '    ' → logprob: -15.134757995605469
    5. '   ' → logprob: -15.259757995605469
    6. 'range' → logprob: -15.634757995605469
    7. '=' → logprob: -16.38475799560547
    8. 'In' → logprob: -16.63475799560547
    9. '        ' → logprob: -17.50975799560547
    10. '[' → logprob: -17.63475799560547

Token 242: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038042180240154266
    2. ' range' → logprob: -3.2880420684814453
    3. 'pos' → logprob: -14.413042068481445
    4. '(range' → logprob: -16.288042068481445
    5. '   ' → logprob: -17.163042068481445
    6. ' ' → logprob: -17.413042068481445
    7. ' pos' → logprob: -18.538042068481445
    8. '	range' → logprob: -19.663042068481445
    9. '  ' → logprob: -20.163042068481445
    10. 'Range' → logprob: -20.288042068481445

Token 243: '(pos' (ID: 24566)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.49271148443222046
    2. '(pos' → logprob: -0.9927114844322205
    3. ' pos' → logprob: -3.9927115440368652
    4. ',pos' → logprob: -12.242711067199707
    5. '[pos' → logprob: -12.367711067199707
    6. '	pos' → logprob: -12.867711067199707
    7. ' (' → logprob: -15.117711067199707
    8. '.pos' → logprob: -15.992711067199707
    9. '_pos' → logprob: -16.117712020874023
    10. '(' → logprob: -16.242712020874023

Token 244: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003896815178450197
    2. ' ,' → logprob: -7.875389575958252
    3. ',pos' → logprob: -11.62539005279541
    4. ',
' → logprob: -14.87539005279541
    5. '           ' → logprob: -15.62539005279541
    6. '   ' → logprob: -17.500389099121094
    7. 'pos' → logprob: -18.125389099121094
    8. '               ' → logprob: -18.125389099121094
    9. '<|end|>' → logprob: -18.500389099121094
    10. '),' → logprob: -18.500389099121094

Token 245: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.20142260193824768
    2. ' pos' → logprob: -1.7014225721359253
    3. '           ' → logprob: -11.826422691345215
    4. '	pos' → logprob: -14.201422691345215
    5. '               ' → logprob: -15.326422691345215
    6. '_pos' → logprob: -15.326422691345215
    7. '   ' → logprob: -15.701422691345215
    8. '            ' → logprob: -15.826422691345215
    9. '(pos' → logprob: -15.826422691345215
    10. '.pos' → logprob: -16.7014217376709

Token 246: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.130293607711792
    2. '+' → logprob: -2.130293607711792
    3. ',' → logprob: -5.755293846130371
    4. 'pos' → logprob: -9.130293846130371
    5. ' ,' → logprob: -10.505293846130371
    6. '+w' → logprob: -10.505293846130371
    7. ' ' → logprob: -11.005293846130371
    8. '   ' → logprob: -12.380293846130371
    9. ',pos' → logprob: -13.130293846130371
    10. ')' → logprob: -13.630293846130371

Token 247: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.004078401252627373
    2. ' w' → logprob: -5.504078388214111
    3. '   ' → logprob: -18.379077911376953
    4. ' ' → logprob: -19.254077911376953
    5. '	w' → logprob: -19.504077911376953
    6. '```' → logprob: -20.004077911376953
    7. '_w' → logprob: -20.254077911376953
    8. ')' → logprob: -20.379077911376953
    9. '           ' → logprob: -20.879077911376953
    10. '    ' → logprob: -21.004077911376953

Token 248: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10025573521852493
    2. '):' → logprob: -2.3502557277679443
    3. '):
' → logprob: -10.100255966186523
    4. '               ' → logprob: -13.100255966186523
    5. '           ' → logprob: -13.225255966186523
    6. ':' → logprob: -14.100255966186523
    7. ' ):
' → logprob: -14.225255966186523
    8. '):

' → logprob: -14.350255966186523
    9. ':
' → logprob: -14.350255966186523
    10. '       ' → logprob: -14.475255966186523

Token 249: '               ' (ID: 506)
  Prédit: ' fence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fence' → logprob: -0.11327394098043442
    2. '               ' → logprob: -2.238273859024048
    3. 'f' → logprob: -8.488273620605469
    4. '           ' → logprob: -9.613273620605469
    5. '                ' → logprob: -10.238273620605469
    6. ' fenced' → logprob: -10.488273620605469
    7. 'Fence' → logprob: -10.863273620605469
    8. '                   ' → logprob: -10.988273620605469
    9. '```' → logprob: -11.113273620605469
    10. '   ' → logprob: -11.488273620605469

Token 250: ' fence' (ID: 42166)
  Prédit: ' fence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fence' → logprob: -0.055294983088970184
    2. 'f' → logprob: -2.930294990539551
    3. '               ' → logprob: -8.68029499053955
    4. ' f' → logprob: -9.43029499053955
    5. '                ' → logprob: -9.93029499053955
    6. 'Fence' → logprob: -10.80529499053955
    7. ' fenced' → logprob: -11.05529499053955
    8. '                   ' → logprob: -11.30529499053955
    9. '            ' → logprob: -11.30529499053955
    10. '           ' → logprob: -11.30529499053955

Token 251: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4974866644479334e-05
    2. '[' → logprob: -11.125015258789062
    3. 'i' → logprob: -15.625015258789062
    4. '```' → logprob: -17.750015258789062
    5. '[pos' → logprob: -18.250015258789062
    6. ']' → logprob: -18.375015258789062
    7. '[...]' → logprob: -18.625015258789062
    8. '               ' → logprob: -18.750015258789062
    9. '\[' → logprob: -18.875015258789062
    10. '                   ' → logprob: -19.000015258789062

Token 252: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00013810492237098515
    2. ']=' → logprob: -9.500138282775879
    3. '=' → logprob: -10.500138282775879
    4. ')' → logprob: -10.500138282775879
    5. ' ]' → logprob: -12.250138282775879
    6. ' =' → logprob: -12.750138282775879
    7. ']
' → logprob: -15.875138282775879
    8. '   ' → logprob: -16.125137329101562
    9. '[' → logprob: -16.875137329101562
    10. '               ' → logprob: -17.000137329101562

Token 253: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1002139002084732
    2. ' =' → logprob: -2.3502140045166016
    3. '=False' → logprob: -11.850214004516602
    4. '   ' → logprob: -17.7252140045166
    5. '               ' → logprob: -17.7252140045166
    6. 'False' → logprob: -17.9752140045166
    7. '                   ' → logprob: -18.1002140045166
    8. '[' → logprob: -18.3502140045166
    9. '           ' → logprob: -18.4752140045166
    10. ']' → logprob: -18.7252140045166

Token 254: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.023245595395565033
    2. ' False' → logprob: -3.7732455730438232
    3. '(False' → logprob: -16.523244857788086
    4. '=False' → logprob: -17.648244857788086
    5. '.False' → logprob: -20.148244857788086
    6. '_false' → logprob: -21.148244857788086
    7. 'false' → logprob: -23.773244857788086
    8. 'True' → logprob: -23.898244857788086
    9. '_FALSE' → logprob: -24.523244857788086
    10. 'FALSE' → logprob: -25.273244857788086

Token 255: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00038991993642412126
    2. 'del' → logprob: -8.12539005279541
    3. ' del' → logprob: -9.75039005279541
    4. '<|end|>' → logprob: -11.00039005279541
    5. '               ' → logprob: -11.37539005279541
    6. '       ' → logprob: -13.12539005279541
    7. '            
' → logprob: -13.87539005279541
    8. '   ' → logprob: -13.87539005279541
    9. '          ' → logprob: -14.25039005279541
    10. '		' → logprob: -14.75039005279541

Token 256: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023520903661847115
    2. 'del' → logprob: -3.7735209465026855
    3. ' del' → logprob: -8.648520469665527
    4. '               ' → logprob: -10.273520469665527
    5. '       ' → logprob: -10.773520469665527
    6. '	del' → logprob: -11.148520469665527
    7. '<|end|>' → logprob: -11.148520469665527
    8. '		' → logprob: -12.273520469665527
    9. 'print' → logprob: -12.648520469665527
    10. '	       ' → logprob: -12.648520469665527

Token 257: ' del' (ID: 1083)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' (adapté à ' del') → logprob: -0.030471231788396835
    2. ' del' → logprob: -3.9054713249206543
    3. '           ' → logprob: -4.905471324920654
    4. 'print' → logprob: -6.030471324920654
    5. 'cats' → logprob: -10.780470848083496
    6. '   ' → logprob: -10.905470848083496
    7. '	del' → logprob: -11.405470848083496
    8. ' cats' → logprob: -12.155470848083496
    9. ' print' → logprob: -12.155470848083496
    10. '               ' → logprob: -12.780470848083496

Token 258: ' cats' (ID: 28854)
  Prédit: ' cats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cats' → logprob: -0.10020720958709717
    2. 'cats' → logprob: -2.3502073287963867
    3. 'Cats' → logprob: -15.475207328796387
    4. '[c' → logprob: -15.975207328796387
    5. 'cat' → logprob: -16.47520637512207
    6. '(c' → logprob: -16.97520637512207
    7. ' cat' → logprob: -17.97520637512207
    8. 'c' → logprob: -18.47520637512207
    9. '猫' → logprob: -19.22520637512207
    10. 's' → logprob: -19.22520637512207

Token 259: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. ' [' → logprob: -15.125000953674316
    3. '[c' → logprob: -15.375000953674316
    4. 'cat' → logprob: -16.375
    5. ' cat' → logprob: -17.125
    6. 'cats' → logprob: -17.25
    7. '   ' → logprob: -17.875
    8. '[col' → logprob: -19.125
    9. '[f' → logprob: -19.625
    10. '(cat' → logprob: -20.125

Token 260: 'cat' (ID: 8837)
  Prédit: 'cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cat' → logprob: -0.00011427151912357658
    2. ' cat' → logprob: -9.125114440917969
    3. '[' → logprob: -12.625114440917969
    4. 'cats' → logprob: -13.375114440917969
    5. '(cat' → logprob: -14.875114440917969
    6. '   ' → logprob: -16.75011444091797
    7. '猫' → logprob: -18.75011444091797
    8. '```' → logprob: -18.87511444091797
    9. 'c' → logprob: -19.25011444091797
    10. '_cat' → logprob: -19.25011444091797

Token 261: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0002755174064077437
    2. 'id' → logprob: -8.375275611877441
    3. 'd' → logprob: -10.500275611877441
    4. 'cat' → logprob: -11.250275611877441
    5. 't' → logprob: -13.250275611877441
    6. 'at' → logprob: -14.625275611877441
    7. ' cat' → logprob: -14.875275611877441
    8. 'ot' → logprob: -14.875275611877441
    9. '[' → logprob: -15.000275611877441
    10. 'et' → logprob: -15.625275611877441

Token 262: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.28458860516548157
    2. ')' → logprob: -1.4095885753631592
    3. '<|end|>' → logprob: -5.784588813781738
    4. '}' → logprob: -8.409588813781738
    5. '[' → logprob: -10.534588813781738
    6. ']
' → logprob: -10.784588813781738
    7. '])' → logprob: -10.784588813781738
    8. '```' → logprob: -11.034588813781738
    9. '）' → logprob: -11.909588813781738
    10. '[line' → logprob: -12.034588813781738

Token 263: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 264: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 265: '("' (ID: 568)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007227989844977856
    2. '("")' → logprob: -7.250722885131836
    3. '('' → logprob: -11.750722885131836
    4. '(' → logprob: -13.000722885131836
    5. ' ()' → logprob: -13.250722885131836
    6. '()<' → logprob: -16.125722885131836
    7. '()}' → logprob: -16.125722885131836
    8. '（）' → logprob: -16.250722885131836
    9. '())' → logprob: -16.375722885131836
    10. '()?>' → logprob: -16.625722885131836

Token 266: 'END' (ID: 7671)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.38942191004753113
    2. '""' → logprob: -1.6394219398498535
    3. '"' → logprob: -2.2644219398498535
    4. ')' → logprob: -5.0144219398498535
    5. '---' → logprob: -5.2644219398498535
    6. '''' → logprob: -5.6394219398498535
    7. '')' → logprob: -5.8894219398498535
    8. '("")' → logprob: -7.0144219398498535
    9. '()' → logprob: -7.1394219398498535
    10. '-' → logprob: -7.1394219398498535

Token 267: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -2.081584716506768e-05
    2. ')' → logprob: -11.625020980834961
    3. '()' → logprob: -12.125020980834961
    4. ')")' → logprob: -12.375020980834961
    5. '")
' → logprob: -13.625020980834961
    6. '"' → logprob: -14.500020980834961
    7. '("' → logprob: -15.750020980834961
    8. '")

' → logprob: -17.37502098083496
    9. '!")' → logprob: -17.50002098083496
    10. '')' → logprob: -17.62502098083496


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 265
Tokens correctement prédits (1ère position, stricte): 128
Tokens correctement prédits (1ère position, avec adaptation): 140
Tokens correctement prédits (top 10): 225
Précision stricte (1ère position): 48.30%
Précision adaptée (1ère position): 52.83%
Précision (top 10): 84.91%
================================================================================
