================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:55:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

input = sys.stdin.readline
n = int(input())
eps = 1e-9
for _ in range(n):
    x1,y1,x2,y2,x3,y3,x4,y4 = map(float, input().split())
    dx1, dy1 = x2 - x1, y2 - y1
    dx2, dy2 = x4 - x3, y4 - y3
    # Check cross product close to zero
    if abs(dx1*dy2 - dy1*dx2) < eps:
        print("YES")
    else:
        print("NO")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.043228268623352
    2. '.' → logprob: -1.168228268623352
    3. '<|end|>' → logprob: -2.2932281494140625
    4. 'import' → logprob: -2.5432281494140625
    5. '' → logprob: -2.5432281494140625
    6. '#' → logprob: -3.7932281494140625
    7. '\' → logprob: -4.4182281494140625
    8. '
' → logprob: -4.7932281494140625
    9. 'print' → logprob: -5.0432281494140625
    10. ';' → logprob: -5.6682281494140625

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01459955982863903
    2. '.' → logprob: -4.264599323272705
    3. '[' → logprob: -9.139599800109863
    4. ')' → logprob: -9.139599800109863
    5. ' (' → logprob: -9.764599800109863
    6. '()' → logprob: -9.764599800109863
    7. '_' → logprob: -10.764599800109863
    8. '(
' → logprob: -10.764599800109863
    9. '(.)' → logprob: -11.639599800109863
    10. ' ' → logprob: -11.764599800109863

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.07285036146640778
    2. 'sys' → logprob: -2.697850465774536
    3. ' input' → logprob: -6.322850227355957
    4. 'input' → logprob: -6.822850227355957
    5. ' ' → logprob: -11.572850227355957
    6. '(sys' → logprob: -11.947850227355957
    7. '	sys' → logprob: -12.322850227355957
    8. '=sys' → logprob: -12.322850227355957
    9. ' system' → logprob: -14.697850227355957
    10. ' lambda' → logprob: -15.072850227355957

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0003208037815056741
    2. '.input' → logprob: -9.125320434570312
    3. '.stdin' → logprob: -9.375320434570312
    4. '.readline' → logprob: -10.500320434570312
    5. '.import' → logprob: -10.500320434570312
    6. '.`' → logprob: -10.625320434570312
    7. ' .' → logprob: -11.000320434570312
    8. '.argv' → logprob: -12.375320434570312
    9. '.")' → logprob: -12.750320434570312
    10. '.stdout' → logprob: -12.875320434570312

Token 7: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09518855810165405
    2. '.readline' → logprob: -2.470188617706299
    3. '.read' → logprob: -5.095188617706299
    4. ' .' → logprob: -10.59518814086914
    5. '```' → logprob: -10.84518814086914
    6. '.Read' → logprob: -10.97018814086914
    7. '.\' → logprob: -11.84518814086914
    8. '.readlines' → logprob: -11.97018814086914
    9. '.
' → logprob: -12.47018814086914
    10. '.

' → logprob: -12.59518814086914

Token 8: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03588579222559929
    2. '(' → logprob: -3.410885810852051
    3. '()
' → logprob: -6.910885810852051
    4. '(
' → logprob: -7.910885810852051
    5. '
' → logprob: -8.16088581085205
    6. '()\' → logprob: -8.53588581085205
    7. '\n' → logprob: -9.16088581085205
    8. '().' → logprob: -9.66088581085205
    9. '()

' → logprob: -10.03588581085205
    10. ')' → logprob: -10.41088581085205

Token 9: 'n' (ID: 77)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011251175776124
    2. '(' → logprob: -4.511250972747803
    3. '()
' → logprob: -9.136251449584961
    4. '().' → logprob: -10.511251449584961
    5. '(
' → logprob: -10.761251449584961
    6. '()

' → logprob: -11.011251449584961
    7. ')' → logprob: -12.136251449584961
    8. '()\' → logprob: -12.261251449584961
    9. ' ()' → logprob: -12.636251449584961
    10. '(

' → logprob: -13.136251449584961

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3402385115623474
    2. '=' → logprob: -1.7152385711669922
    3. ' ' → logprob: -2.340238571166992
    4. '.' → logprob: -5.340238571166992
    5. ')' → logprob: -5.590238571166992
    6. ',' → logprob: -6.965238571166992
    7. '[' → logprob: -7.215238571166992
    8. '  ' → logprob: -7.340238571166992
    9. ' )' → logprob: -8.715238571166992
    10. '+' → logprob: -8.840238571166992

Token 11: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.005168769974261522
    2. 'int' → logprob: -5.380168914794922
    3. ' ' → logprob: -7.630168914794922
    4. ' input' → logprob: -9.755168914794922
    5. '=int' → logprob: -13.130168914794922
    6. 'input' → logprob: -13.505168914794922
    7. ' 
' → logprob: -15.005168914794922
    8. '<int' → logprob: -15.130168914794922
    9. ' ' → logprob: -15.380168914794922
    10. '(int' → logprob: -16.255168914794922

Token 12: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08932863175868988
    2. '(input' → logprob: -2.4643285274505615
    3. '(n' → logprob: -8.71432876586914
    4. '()' → logprob: -9.21432876586914
    5. ' (' → logprob: -9.71432876586914
    6. '('' → logprob: -10.58932876586914
    7. '(sys' → logprob: -11.21432876586914
    8. '(
' → logprob: -11.96432876586914
    9. '(`' → logprob: -12.46432876586914
    10. 'input' → logprob: -12.58932876586914

Token 13: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005991366691887379
    2. ')' → logprob: -5.755991458892822
    3. '()' → logprob: -5.880991458892822
    4. ' ())' → logprob: -11.630990982055664
    5. '(' → logprob: -12.630990982055664
    6. '()))' → logprob: -13.130990982055664
    7. '())
' → logprob: -13.380990982055664
    8. '().' → logprob: -14.630990982055664
    9. '();)' → logprob: -14.880990982055664
    10. '))' → logprob: -15.380990982055664

Token 14: 'eps' (ID: 12967)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.48326125741004944
    2. 'for' → logprob: -1.983261227607727
    3. ')' → logprob: -2.9832613468170166
    4. '\' → logprob: -3.2332613468170166
    5. ' ' → logprob: -3.2332613468170166
    6. '
' → logprob: -3.3582613468170166
    7. ' 
' → logprob: -3.8582613468170166
    8. '\r' → logprob: -4.3582611083984375
    9. ' for' → logprob: -5.3582611083984375
    10. 's' → logprob: -5.3582611083984375

Token 15: ' =' (ID: 314)
  Prédit: 'ilon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ilon' → logprob: -0.3233565092086792
    2. '=' → logprob: -1.6983565092086792
    3. 'il' → logprob: -3.4483566284179688
    4. ' =' → logprob: -3.9483566284179688
    5. '```' → logprob: -4.198356628417969
    6. 'ILON' → logprob: -4.323356628417969
    7. 'i' → logprob: -4.948356628417969
    8. ' ' → logprob: -7.073356628417969
    9. '_' → logprob: -7.073356628417969
    10. ' il' → logprob: -7.198356628417969

Token 16: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05623470991849899
    2. '1' → logprob: -2.93123459815979
    3. '10' → logprob: -6.806234836578369
    4. '0' → logprob: -8.431234359741211
    5. '2' → logprob: -11.931234359741211
    6. 'float' → logprob: -13.056234359741211
    7. ' float' → logprob: -13.181234359741211
    8. ' ' → logprob: -13.181234359741211
    9. '5' → logprob: -13.493734359741211
    10. '(' → logprob: -13.493734359741211

Token 17: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012711179442703724
    2. ' ' → logprob: -5.012711048126221
    3. '10' → logprob: -5.262711048126221
    4. '0' → logprob: -7.262711048126221
    5. 'abs' → logprob: -10.762711524963379
    6. '-' → logprob: -10.887711524963379
    7. 'float' → logprob: -11.012711524963379
    8. '2' → logprob: -11.637711524963379
    9. '   ' → logprob: -11.887711524963379
    10. 'pow' → logprob: -12.637711524963379

Token 18: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03552551940083504
    2. '0' → logprob: -4.035525321960449
    3. '-' → logprob: -4.535525321960449
    4. '.' → logprob: -5.160525321960449
    5. ' /' → logprob: -8.28552532196045
    6. '/' → logprob: -8.91052532196045
    7. ' ' → logprob: -9.03552532196045
    8. '```' → logprob: -9.78552532196045
    9. '10' → logprob: -10.91052532196045
    10. ' -' → logprob: -11.03552532196045

Token 19: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.6240566083070007e-06
    2. '3' → logprob: -15.125001907348633
    3. '9' → logprob: -15.250001907348633
    4. '7' → logprob: -15.375001907348633
    5. '6' → logprob: -15.750001907348633
    6. '```' → logprob: -16.500001907348633
    7. '05' → logprob: -16.625001907348633
    8. '06' → logprob: -16.625001907348633
    9. '−' → logprob: -16.875001907348633
    10. '0' → logprob: -16.875001907348633

Token 20: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.7329310178756714
    2. '09' → logprob: -1.4829310178756714
    3. '10' → logprob: -2.232931137084961
    4. '7' → logprob: -2.357931137084961
    5. '07' → logprob: -2.982931137084961
    6. '8' → logprob: -4.357931137084961
    7. '08' → logprob: -4.482931137084961
    8. '06' → logprob: -5.232931137084961
    9. '12' → logprob: -5.732931137084961
    10. '6' → logprob: -5.982931137084961

Token 21: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5727952718734741
    2. 'if' → logprob: -1.9477952718734741
    3. 'for' → logprob: -2.1977953910827637
    4. '\n' → logprob: -2.3227953910827637
    5. '\' → logprob: -3.5727953910827637
    6. '' → logprob: -3.5727953910827637
    7. ' 
' → logprob: -4.697795391082764
    8. 'def' → logprob: -5.447795391082764
    9. 'while' → logprob: -5.697795391082764
    10. '  
' → logprob: -6.322795391082764

Token 22: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04256654530763626
    2. 'a' → logprob: -4.042566776275635
    3. 'while' → logprob: -5.417566776275635
    4. 'if' → logprob: -5.542566776275635
    5. 'def' → logprob: -5.792566776275635
    6. 'arr' → logprob: -5.917566776275635
    7. 'dp' → logprob: -6.292566776275635
    8. 'result' → logprob: -6.292566776275635
    9. 'ans' → logprob: -6.542566776275635
    10. 's' → logprob: -6.917566776275635

Token 23: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14902548491954803
    2. ' i' → logprob: -2.0240254402160645
    3. ' _' → logprob: -5.1490254402160645
    4. '_' → logprob: -7.8990254402160645
    5. '  ' → logprob: -9.899025917053223
    6. 'i' → logprob: -10.024025917053223
    7. ' range' → logprob: -10.774025917053223
    8. ' ' → logprob: -11.024025917053223
    9. ' ‌' → logprob: -11.274025917053223
    10. ' in' → logprob: -12.649025917053223

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020952196791768074
    2. 'in' → logprob: -3.8959522247314453
    3. ' ' → logprob: -8.020952224731445
    4. 'n' → logprob: -9.770952224731445
    5. '	in' → logprob: -12.145952224731445
    6. 'range' → logprob: -12.520952224731445
    7. ' i' → logprob: -12.895952224731445
    8. '_' → logprob: -13.270952224731445
    9. ' _' → logprob: -13.395952224731445
    10. 'import' → logprob: -13.645952224731445

Token 25: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.048588622361421585
    2. ' range' → logprob: -3.048588514328003
    3. '	range' → logprob: -14.798588752746582
    4. 'rang' → logprob: -15.923588752746582
    5. '_' → logprob: -16.048587799072266
    6. 'ran' → logprob: -16.173587799072266
    7. 'n' → logprob: -16.173587799072266
    8. '0' → logprob: -16.298587799072266
    9. '(range' → logprob: -16.423587799072266
    10. 'in' → logprob: -16.423587799072266

Token 26: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10556653141975403
    2. '(n' → logprob: -2.6055665016174316
    3. ' (' → logprob: -3.7305665016174316
    4. ' n' → logprob: -6.230566501617432
    5. ' range' → logprob: -8.85556697845459
    6. '(range' → logprob: -8.98056697845459
    7. ' ' → logprob: -9.98056697845459
    8. 'n' → logprob: -10.10556697845459
    9. 'range' → logprob: -11.98056697845459
    10. ' in' → logprob: -12.48056697845459

Token 27: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0014773675939068198
    2. ':' → logprob: -6.751477241516113
    3. ')' → logprob: -8.126477241516113
    4. '):
' → logprob: -12.001477241516113
    5. ' ):' → logprob: -12.876477241516113
    6. '():' → logprob: -14.001477241516113
    7. ',' → logprob: -14.751477241516113
    8. '+' → logprob: -14.876477241516113
    9. ']:' → logprob: -15.751477241516113
    10. '}:' → logprob: -16.00147819519043

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0014351606369019
    2. ' a' → logprob: -1.2514351606369019
    3. ' x' → logprob: -1.7514351606369019
    4. 'a' → logprob: -2.6264352798461914
    5. ' line' → logprob: -3.3764352798461914
    6. 'x' → logprob: -3.7514352798461914
    7. ' data' → logprob: -4.376435279846191
    8. ' s' → logprob: -4.501435279846191
    9. ' A' → logprob: -5.126435279846191
    10. ' ' → logprob: -6.251435279846191

Token 29: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.2167890071868896
    2. ' a' → logprob: -1.8417890071868896
    3. ' s' → logprob: -1.8417890071868896
    4. 'x' (adapté à ' x') → logprob: -1.9667890071868896
    5. 'a' → logprob: -2.4667890071868896
    6. ' line' → logprob: -2.9667890071868896
    7. 's' → logprob: -3.0917890071868896
    8. ' data' → logprob: -3.7167890071868896
    9. '   ' → logprob: -3.8417890071868896
    10. 'line' → logprob: -5.841789245605469

Token 30: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04461480677127838
    2. ' ,' → logprob: -3.419614791870117
    3. ' =' → logprob: -4.669614791870117
    4. '=' → logprob: -7.544614791870117
    5. ',y' → logprob: -8.419614791870117
    6. ',x' → logprob: -8.669614791870117
    7. ' ' → logprob: -9.044614791870117
    8. ')' → logprob: -9.669614791870117
    9. ' +=' → logprob: -9.669614791870117
    10. ',a' → logprob: -10.669614791870117

Token 31: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00615085382014513
    2. ' ,' → logprob: -5.131150722503662
    3. ',y' → logprob: -9.00615119934082
    4. ',x' → logprob: -9.63115119934082
    5. '[' → logprob: -12.13115119934082
    6. ',a' → logprob: -12.25615119934082
    7. '1' → logprob: -12.50615119934082
    8. '_,' → logprob: -12.75615119934082
    9. ',b' → logprob: -13.38115119934082
    10. ',s' → logprob: -13.63115119934082

Token 32: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3265177011489868
    2. ' =' → logprob: -1.5765177011489868
    3. '=' → logprob: -2.7015175819396973
    4. '1' → logprob: -6.826517581939697
    5. ',x' → logprob: -6.951517581939697
    6. ' ,' → logprob: -7.326517581939697
    7. '<|end|>' → logprob: -7.576517581939697
    8. ' ' → logprob: -7.701517581939697
    9. ')' → logprob: -8.201518058776855
    10. '_' → logprob: -8.826518058776855

Token 33: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8128225803375244
    2. '=' → logprob: -0.8128225803375244
    3. ' =' → logprob: -2.1878225803375244
    4. ',x' → logprob: -7.687822341918945
    5. ' ,' → logprob: -9.312822341918945
    6. ',y' → logprob: -10.937822341918945
    7. '   ' → logprob: -11.437822341918945
    8. ')' → logprob: -11.812822341918945
    9. '=x' → logprob: -11.812822341918945
    10. '=input' → logprob: -12.437822341918945

Token 34: '2' (ID: 17)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5796092748641968
    2. '1' → logprob: -0.8296092748641968
    3. '<|end|>' → logprob: -6.704609394073486
    4. ',y' → logprob: -7.204609394073486
    5. '=' → logprob: -7.454609394073486
    6. '2' → logprob: -7.704609394073486
    7. ',x' → logprob: -8.329608917236328
    8. ',_' → logprob: -10.329608917236328
    9. ',m' → logprob: -10.329608917236328
    10. ',v' → logprob: -10.454608917236328

Token 35: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0062118698842823505
    2. '=' → logprob: -5.631211757659912
    3. ',x' → logprob: -6.381211757659912
    4. ',y' → logprob: -7.381211757659912
    5. ' ,' → logprob: -9.50621223449707
    6. ' =' → logprob: -9.75621223449707
    7. ',value' → logprob: -11.00621223449707
    8. ',v' → logprob: -11.38121223449707
    9. ',line' → logprob: -11.38121223449707
    10. ',user' → logprob: -11.50621223449707

Token 36: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.15357740223407745
    2. '1' → logprob: -2.0285773277282715
    3. '=' → logprob: -5.1535773277282715
    4. '<|end|>' → logprob: -5.5285773277282715
    5. ',' → logprob: -7.5285773277282715
    6. '```' → logprob: -8.15357780456543
    7. '<|end|>' → logprob: -9.40357780456543
    8. ' =' → logprob: -9.90357780456543
    9. '_' → logprob: -10.77857780456543
    10. '3' → logprob: -10.90357780456543

Token 37: ',x' (ID: 29748)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3487725257873535
    2. ' =' → logprob: -1.2237725257873535
    3. ',' → logprob: -8.098772048950195
    4. '=input' → logprob: -11.848772048950195
    5. ' ' → logprob: -12.348772048950195
    6. ' ,' → logprob: -12.473772048950195
    7. '   ' → logprob: -13.473772048950195
    8. ' =
' → logprob: -13.473772048950195
    9. '    ' → logprob: -13.848772048950195
    10. ')' → logprob: -13.973772048950195

Token 38: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002289664000272751
    2. ',y' → logprob: -6.252289772033691
    3. '3' → logprob: -8.502289772033691
    4. ',' → logprob: -9.502289772033691
    5. ',x' → logprob: -10.752289772033691
    6. '<|end|>' → logprob: -10.752289772033691
    7. ' =' → logprob: -11.002289772033691
    8. 'y' → logprob: -11.377289772033691
    9. '=' → logprob: -12.377289772033691
    10. ',v' → logprob: -13.752289772033691

Token 39: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05006545037031174
    2. '=' → logprob: -3.550065517425537
    3. ',y' → logprob: -4.300065517425537
    4. ',x' → logprob: -5.300065517425537
    5. ' =' → logprob: -7.175065517425537
    6. '<|end|>' → logprob: -9.300065040588379
    7. ',user' → logprob: -9.425065040588379
    8. ' ,' → logprob: -9.675065040588379
    9. ',w' → logprob: -9.800065040588379
    10. ',v' → logprob: -9.925065040588379

Token 40: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.2842308680992573e-05
    2. '=' → logprob: -11.750022888183594
    3. '<|end|>' → logprob: -12.000022888183594
    4. '1' → logprob: -12.625022888183594
    5. '<|end|>' → logprob: -13.750022888183594
    6. '_' → logprob: -13.875022888183594
    7. ',' → logprob: -14.000022888183594
    8. '```' → logprob: -14.125022888183594
    9. '۳' → logprob: -14.750022888183594
    10. ' =' → logprob: -14.875022888183594

Token 41: ',x' (ID: 29748)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5772327780723572
    2. ' =' → logprob: -0.8272327780723572
    3. ',' → logprob: -6.702232837677002
    4. '=input' → logprob: -11.077232360839844
    5. '   ' → logprob: -11.452232360839844
    6. ' ' → logprob: -11.577232360839844
    7. ' ,' → logprob: -11.827232360839844
    8. '    ' → logprob: -11.952232360839844
    9. ')' → logprob: -12.202232360839844
    10. '=int' → logprob: -12.952232360839844

Token 42: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.028748610988259315
    2. '1' → logprob: -3.6537485122680664
    3. '3' → logprob: -6.028748512268066
    4. 'x' → logprob: -11.653748512268066
    5. ',' → logprob: -12.278748512268066
    6. ' =' → logprob: -12.403748512268066
    7. '2' → logprob: -12.778748512268066
    8. '=' → logprob: -12.903748512268066
    9. '```' → logprob: -13.028748512268066
    10. ',x' → logprob: -13.153748512268066

Token 43: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01333844568580389
    2. '=' → logprob: -4.763338565826416
    3. '<|end|>' → logprob: -5.638338565826416
    4. ',x' → logprob: -7.263338565826416
    5. ',y' → logprob: -8.763338088989258
    6. ' =' → logprob: -9.763338088989258
    7. ',_' → logprob: -10.263338088989258
    8. ',user' → logprob: -10.263338088989258
    9. '_,' → logprob: -11.013338088989258
    10. '<|end|>' → logprob: -11.263338088989258

Token 44: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -5.512236498361744e-07
    2. '=' → logprob: -15.750000953674316
    3. '```' → logprob: -16.375
    4. '<|end|>' → logprob: -16.375
    5. '' → logprob: -17.0
    6. ' ' → logprob: -17.0
    7. '４' → logprob: -17.75
    8. '४' → logprob: -17.75
    9. '3' → logprob: -17.875
    10. '1' → logprob: -18.5

Token 45: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4293142557144165
    2. ' =' → logprob: -1.0543142557144165
    3. ',' → logprob: -7.554314136505127
    4. '   ' → logprob: -10.304314613342285
    5. '=input' → logprob: -10.554314613342285
    6. ' ' → logprob: -11.179314613342285
    7. ')' → logprob: -12.054314613342285
    8. '=line' → logprob: -12.929314613342285
    9. '    ' → logprob: -13.304314613342285
    10. ' ,' → logprob: -13.429314613342285

Token 46: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.07891611754894257
    2. 'map' → logprob: -2.578916072845459
    3. ' list' → logprob: -11.328916549682617
    4. '   ' → logprob: -11.578916549682617
    5. '	map' → logprob: -13.453916549682617
    6. ' ' → logprob: -13.828916549682617
    7. 'list' → logprob: -14.078916549682617
    8. ' input' → logprob: -14.078916549682617
    9. 'input' → logprob: -14.953916549682617
    10. '[' → logprob: -15.203916549682617

Token 47: '(float' (ID: 17830)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.04226524755358696
    2. '(' → logprob: -3.5422651767730713
    3. '(float' → logprob: -4.41726541519165
    4. '(lambda' → logprob: -8.167264938354492
    5. '(input' → logprob: -10.542264938354492
    6. '(
' → logprob: -11.042264938354492
    7. '<|end|>' → logprob: -11.542264938354492
    8. '<int' → logprob: -11.667264938354492
    9. '[int' → logprob: -11.792264938354492
    10. 'int' → logprob: -12.042264938354492

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4814631938934326
    2. ',input' → logprob: -0.9814631938934326
    3. '(input' → logprob: -5.481463432312012
    4. ')' → logprob: -5.981463432312012
    5. '(' → logprob: -8.606463432312012
    6. '<|end|>' → logprob: -8.606463432312012
    7. 'input' → logprob: -8.981463432312012
    8. '(),' → logprob: -9.856463432312012
    9. '),' → logprob: -10.856463432312012
    10. ' ,' → logprob: -11.356463432312012

Token 49: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023249205201864243
    2. ' input' → logprob: -3.7732491493225098
    3. ')' → logprob: -13.023249626159668
    4. ',input' → logprob: -14.273249626159668
    5. '	input' → logprob: -15.398249626159668
    6. ' ' → logprob: -15.398249626159668
    7. '<input' → logprob: -15.773249626159668
    8. '[input' → logprob: -16.02324867248535
    9. '   ' → logprob: -16.52324867248535
    10. '=input' → logprob: -16.52324867248535

Token 50: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00019865304057020694
    2. '())' → logprob: -8.875198364257812
    3. '()' → logprob: -10.000198364257812
    4. ')' → logprob: -11.250198364257812
    5. ' ().' → logprob: -15.750198364257812
    6. '()))' → logprob: -15.875198364257812
    7. '());' → logprob: -17.875198364257812
    8. '();)' → logprob: -17.875198364257812
    9. '()
' → logprob: -18.125198364257812
    10. '))' → logprob: -18.250198364257812

Token 51: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.007049837149679661
    2. 'strip' → logprob: -5.007050037384033
    3. 'rstrip' → logprob: -8.007049560546875
    4. ' split' → logprob: -14.257049560546875
    5. ')' → logprob: -14.757049560546875
    6. '(split' → logprob: -16.007049560546875
    7. 'rs' → logprob: -17.507049560546875
    8. 'spl' → logprob: -18.007049560546875
    9. '```' → logprob: -18.507049560546875
    10. ' strip' → logprob: -18.507049560546875

Token 52: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015696344897150993
    2. '))' → logprob: -4.5156965255737305
    3. '())' → logprob: -5.6406965255737305
    4. '()' → logprob: -6.8906965255737305
    5. '(' → logprob: -10.64069652557373
    6. '()))' → logprob: -11.01569652557373
    7. ')))' → logprob: -11.89069652557373
    8. ')
' → logprob: -12.01569652557373
    9. '),' → logprob: -12.26569652557373
    10. '`)' → logprob: -13.14069652557373

Token 53: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1454668045043945
    2. '   ' → logprob: -1.7704668045043945
    3. ':' → logprob: -1.8954668045043945
    4. ' ' → logprob: -2.1454668045043945
    5. ' if' → logprob: -2.7704668045043945
    6. '#' → logprob: -3.3954668045043945
    7. '    
' → logprob: -3.7704668045043945
    8. ')' → logprob: -4.0204668045043945
    9. '
' → logprob: -4.0204668045043945
    10. 'def' → logprob: -4.2704668045043945

Token 54: ' dx' (ID: 29472)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5533932447433472
    2. 'dx' (adapté à ' dx') → logprob: -1.4283932447433472
    3. 'd' → logprob: -2.8033933639526367
    4. ' dx' → logprob: -3.5533933639526367
    5. 'x' → logprob: -4.053393363952637
    6. 'if' → logprob: -4.303393363952637
    7. '   ' → logprob: -4.428393363952637
    8. 'a' → logprob: -4.803393363952637
    9. '#' → logprob: -5.428393363952637
    10. 's' → logprob: -5.428393363952637

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04362007975578308
    2. ' =' → logprob: -3.2936201095581055
    3. '=' → logprob: -5.5436201095581055
    4. 's' → logprob: -7.4186201095581055
    5. '_' → logprob: -7.7936201095581055
    6. ',' → logprob: -7.7936201095581055
    7. '0' → logprob: -9.543620109558105
    8. 'dy' → logprob: -10.543620109558105
    9. '12' → logprob: -10.668620109558105
    10. '4' → logprob: -10.668620109558105

Token 56: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35077452659606934
    2. '=' → logprob: -1.2257745265960693
    3. ',' → logprob: -6.600774765014648
    4. '1' → logprob: -6.975774765014648
    5. '_' → logprob: -11.725774765014648
    6. 'dx' → logprob: -12.350774765014648
    7. 'dy' → logprob: -12.975774765014648
    8. '=df' → logprob: -13.225774765014648
    9. '=line' → logprob: -13.475774765014648
    10. ')' → logprob: -13.600774765014648

Token 57: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.4313566982746124
    2. ' dy' → logprob: -1.05635666847229
    3. ' =' → logprob: -6.681356906890869
    4. '=' → logprob: -7.431356906890869
    5. 'y' → logprob: -7.681356906890869
    6. ' ' → logprob: -8.806356430053711
    7. ' y' → logprob: -9.556356430053711
    8. 'd' → logprob: -10.181356430053711
    9. 'dx' → logprob: -10.556356430053711
    10. ' ' → logprob: -11.681356430053711

Token 58: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22585679590702057
    2. ' =' → logprob: -1.8508567810058594
    3. '1' → logprob: -3.1008567810058594
    4. ',' → logprob: -10.35085678100586
    5. '<|end|>' → logprob: -11.47585678100586
    6. '=}' → logprob: -13.35085678100586
    7. ' ' → logprob: -13.97585678100586
    8. '=int' → logprob: -13.97585678100586
    9. '```' → logprob: -13.97585678100586
    10. ')' → logprob: -13.97585678100586

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16027013957500458
    2. '=' → logprob: -1.910270094871521
    3. ',' → logprob: -10.035269737243652
    4. ' ' → logprob: -14.410269737243652
    5. ' =)' → logprob: -15.660269737243652
    6. ' ,' → logprob: -15.785269737243652
    7. ')' → logprob: -15.910269737243652
    8. '=x' → logprob: -16.28527069091797
    9. '=int' → logprob: -16.41027069091797
    10. '＝' → logprob: -16.53527069091797

Token 60: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02639063447713852
    2. ' x' → logprob: -3.651390552520752
    3. '(x' → logprob: -9.40139102935791
    4. '   ' → logprob: -12.65139102935791
    5. '	x' → logprob: -13.52639102935791
    6. ' ' → logprob: -13.65139102935791
    7. ' (' → logprob: -13.65139102935791
    8. '  ' → logprob: -15.27639102935791
    9. '(' → logprob: -16.026390075683594
    10. '[x' → logprob: -16.026390075683594

Token 61: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0025590185541659594
    2. '3' → logprob: -6.127559185028076
    3. '1' → logprob: -8.127558708190918
    4. '4' → logprob: -9.502558708190918
    5. '```' → logprob: -13.002558708190918
    6. '₂' → logprob: -14.002558708190918
    7. '２' → logprob: -15.690058708190918
    8. '

' → logprob: -16.190059661865234
    9. '``' → logprob: -16.377559661865234
    10. '۲' → logprob: -16.565059661865234

Token 62: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3140200674533844
    2. '-' → logprob: -1.314020037651062
    3. '-x' → logprob: -7.189020156860352
    4. '1' → logprob: -13.689020156860352
    5. ' ' → logprob: -14.564020156860352
    6. 'x' → logprob: -14.814020156860352
    7. ' ' → logprob: -15.064020156860352
    8. '<|end|>' → logprob: -15.564020156860352
    9. '-xl' → logprob: -15.939020156860352
    10. '−' → logprob: -16.18902015686035

Token 63: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.215330409351736e-05
    2. ' x' → logprob: -10.125041961669922
    3. '<|end|>' → logprob: -13.250041961669922
    4. '1' → logprob: -16.000041961669922
    5. '	x' → logprob: -16.500041961669922
    6. ' ' → logprob: -17.000041961669922
    7. '<|end|>' → logprob: -17.750041961669922
    8. '   ' → logprob: -18.000041961669922
    9. ')x' → logprob: -19.000041961669922
    10. '  ' → logprob: -19.125041961669922

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. '<|end|>' → logprob: -12.625003814697266
    3. '<|end|>' → logprob: -17.125003814697266
    4. ' ' → logprob: -17.875003814697266
    5. '3' → logprob: -18.000003814697266
    6. '...' → logprob: -18.500003814697266
    7. '2' → logprob: -18.750003814697266
    8. '```' → logprob: -18.750003814697266
    9. 's' → logprob: -19.000003814697266
    10. 'x' → logprob: -19.125003814697266

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009471670724451542
    2. ',
' → logprob: -5.509471893310547
    3. ' ,' → logprob: -5.759471893310547
    4. 'dx' → logprob: -6.884471893310547
    5. '
' → logprob: -7.634471893310547
    6. ' dx' → logprob: -8.134471893310547
    7. ' 
' → logprob: -8.384471893310547
    8. ',d' → logprob: -9.884471893310547
    9. ' ,
' → logprob: -10.009471893310547
    10. ' ' → logprob: -10.884471893310547

Token 66: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.026339659467339516
    2. 'y' → logprob: -3.6513397693634033
    3. '<|end|>' → logprob: -10.901339530944824
    4. ' ' → logprob: -11.151339530944824
    5. ' ' → logprob: -13.276339530944824
    6. '	y' → logprob: -13.401339530944824
    7. '"' → logprob: -14.276339530944824
    8. '0' → logprob: -15.026339530944824
    9. '`' → logprob: -15.151339530944824
    10. '    ' → logprob: -15.276339530944824

Token 67: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0024800582323223352
    2. '1' → logprob: -6.0024800300598145
    3. '<|end|>' → logprob: -13.252480506896973
    4. ' -' → logprob: -13.627480506896973
    5. ' ' → logprob: -13.877480506896973
    6. '```' → logprob: -15.752480506896973
    7. '-' → logprob: -15.877480506896973
    8. 's' → logprob: -17.314979553222656
    9. '.' → logprob: -17.502479553222656
    10. '<|end|>' → logprob: -17.502479553222656

Token 68: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.049993567168712616
    2. '-' → logprob: -3.1749935150146484
    3. '1' → logprob: -5.049993515014648
    4. '<|end|>' → logprob: -7.549993515014648
    5. ' ' → logprob: -10.799993515014648
    6. '<|end|>' → logprob: -11.924993515014648
    7. ' ' → logprob: -13.549993515014648
    8. '2' → logprob: -13.799993515014648
    9. '[' → logprob: -14.174993515014648
    10. ' -*-' → logprob: -14.674993515014648

Token 69: ' y' (ID: 342)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12410161644220352
    2. 'y' → logprob: -2.3741016387939453
    3. ' y' → logprob: -3.7491016387939453
    4. ' ' → logprob: -9.874101638793945
    5. '<|end|>' → logprob: -10.999101638793945
    6. 'x' → logprob: -12.624101638793945
    7. '	y' → logprob: -14.374101638793945
    8. '2' → logprob: -15.624101638793945
    9. ' x' → logprob: -16.499101638793945
    10. '  ' → logprob: -16.624101638793945

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -13.00000286102295
    3. '2' → logprob: -14.87500286102295
    4. '-' → logprob: -15.75000286102295
    5. '3' → logprob: -15.87500286102295
    6. '```' → logprob: -17.625003814697266
    7. '   ' → logprob: -18.312503814697266
    8. ' -' → logprob: -18.687503814697266
    9. '  ' → logprob: -19.250003814697266
    10. '' → logprob: -19.250003814697266

Token 71: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2754157781600952
    2. '    
' → logprob: -2.1504158973693848
    3. '   ' → logprob: -2.4004158973693848
    4. '  
' → logprob: -4.275415897369385
    5. '   
' → logprob: -4.900415897369385
    6. '```' → logprob: -5.775415897369385
    7. '\n' → logprob: -6.275415897369385
    8. ' 
' → logprob: -6.525415897369385
    9. '' → logprob: -6.775415897369385
    10. '     
' → logprob: -7.150415897369385

Token 72: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5577407479286194
    2. '    
' → logprob: -2.1827406883239746
    3. '  
' → logprob: -2.4327406883239746
    4. '   ' → logprob: -2.4327406883239746
    5. '```' → logprob: -3.0577406883239746
    6. ',' → logprob: -4.182740688323975
    7. 'dx' → logprob: -4.307740688323975
    8. '   
' → logprob: -4.557740688323975
    9. ' 
' → logprob: -4.807740688323975
    10. ',
' → logprob: -4.807740688323975

Token 73: ' dx' (ID: 29472)
  Prédit: ' dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.3910665512084961
    2. 'dx' (adapté à ' dx') → logprob: -1.266066551208496
    3. '  
' → logprob: -4.266066551208496
    4. ' 
' → logprob: -4.641066551208496
    5. 'd' → logprob: -5.391066551208496
    6. '   ' → logprob: -5.516066551208496
    7. '    
' → logprob: -5.766066551208496
    8. '   
' → logprob: -6.641066551208496
    9. ' ' → logprob: -7.141066551208496
    10. '
' → logprob: -7.391066551208496

Token 74: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009383779251947999
    2. ',' → logprob: -7.125938415527344
    3. '4' → logprob: -9.625938415527344
    4. '3' → logprob: -10.000938415527344
    5. ' ' → logprob: -12.000938415527344
    6. ' ,' → logprob: -12.250938415527344
    7. ',
' → logprob: -12.750938415527344
    8. '```' → logprob: -13.063438415527344
    9. ' =' → logprob: -13.438438415527344
    10. '=' → logprob: -13.563438415527344

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.32392441527918e-05
    2. ' ,' → logprob: -10.250053405761719
    3. '=' → logprob: -11.000053405761719
    4. ' =' → logprob: -14.750053405761719
    5. '<|end|>' → logprob: -15.625053405761719
    6. ',
' → logprob: -16.00005340576172
    7. '‌,' → logprob: -16.12505340576172
    8. '`,' → logprob: -16.87505340576172
    9. ',\
' → logprob: -17.25005340576172
    10. ' ' → logprob: -17.37505340576172

Token 76: ' dy' (ID: 11996)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.33596938848495483
    2. ' dy' → logprob: -1.3359694480895996
    3. ' ' → logprob: -3.9609694480895996
    4. 'y' → logprob: -6.2109694480896
    5. ' ' → logprob: -8.335968971252441
    6. 'dy' → logprob: -8.335968971252441
    7. ' dx' → logprob: -8.460968971252441
    8. '0' → logprob: -8.585968971252441
    9. ' d' → logprob: -8.960968971252441
    10. '"' → logprob: -9.960968971252441

Token 77: '2' (ID: 17)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9416228532791138
    2. ' =' → logprob: -1.0666228532791138
    3. '1' → logprob: -1.9416228532791138
    4. '2' → logprob: -2.566622734069824
    5. ',' → logprob: -3.191622734069824
    6. ' ' → logprob: -5.941622734069824
    7. '<|end|>' → logprob: -7.066622734069824
    8. '4' → logprob: -8.066622734069824
    9. 's' → logprob: -8.816622734069824
    10. '-' → logprob: -9.066622734069824

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740849733352661
    2. '=' → logprob: -0.9740849733352661
    3. ',' → logprob: -11.849084854125977
    4. ' ' → logprob: -14.849084854125977
    5. ')' → logprob: -15.974084854125977
    6. 's' → logprob: -17.349084854125977
    7. '<|end|>' → logprob: -17.349084854125977
    8. '=

' → logprob: -17.599084854125977
    9. '>' → logprob: -17.724084854125977
    10. '＝' → logprob: -18.224084854125977

Token 79: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.04300422966480255
    2. 'x' → logprob: -3.168004274368286
    3. ' ' → logprob: -12.543004035949707
    4. '	x' → logprob: -14.418004035949707
    5. '(x' → logprob: -14.543004035949707
    6. '   ' → logprob: -16.418004989624023
    7. ' (' → logprob: -16.793004989624023
    8. '0' → logprob: -16.918004989624023
    9. ' 
' → logprob: -17.168004989624023
    10. ' y' → logprob: -17.230504989624023

Token 80: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.6727306842803955
    2. '-' → logprob: -1.0477306842803955
    3. ' -' → logprob: -2.1727306842803955
    4. '2' → logprob: -4.422730445861816
    5. ' ' → logprob: -5.422730445861816
    6. '1' → logprob: -5.422730445861816
    7. '3' → logprob: -6.047730445861816
    8. '<|end|>' → logprob: -7.172730445861816
    9. ',' → logprob: -7.922730445861816
    10. '.' → logprob: -8.672730445861816

Token 81: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4768175184726715
    2. ' -' → logprob: -0.9768174886703491
    3. ',' → logprob: -5.976817607879639
    4. ' ' → logprob: -9.47681713104248
    5. ' ,' → logprob: -10.35181713104248
    6. '<|end|>' → logprob: -10.72681713104248
    7. ' ' → logprob: -11.22681713104248
    8. '-,' → logprob: -11.22681713104248
    9. ' -,' → logprob: -11.22681713104248
    10. '.' → logprob: -12.85181713104248

Token 82: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.023269474506378174
    2. ' x' → logprob: -3.7732694149017334
    3. '<|end|>' → logprob: -11.023269653320312
    4. ' ' → logprob: -11.898269653320312
    5. '3' → logprob: -14.148269653320312
    6. '	x' → logprob: -16.648269653320312
    7. ''x' → logprob: -18.023269653320312
    8. '  ' → logprob: -18.273269653320312
    9. '$x' → logprob: -18.273269653320312
    10. '(x' → logprob: -18.398269653320312

Token 83: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. '۳' → logprob: -19.5
    3. '1' → logprob: -19.625
    4. '2' → logprob: -20.0
    5. '３' → logprob: -20.125
    6. ' ' → logprob: -20.625
    7. 'x' → logprob: -22.0
    8. '৩' → logprob: -22.0
    9. '٣' → logprob: -22.25
    10. '³' → logprob: -22.5

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018204957246780396
    2. ' ,' → logprob: -4.018205165863037
    3. ',
' → logprob: -10.518204689025879
    4. ',y' → logprob: -11.143204689025879
    5. '`,' → logprob: -11.518204689025879
    6. ' ,
' → logprob: -13.768204689025879
    7. '',' → logprob: -14.518204689025879
    8. ',

' → logprob: -14.768204689025879
    9. ' ' → logprob: -15.143204689025879
    10. '‌,' → logprob: -15.518204689025879

Token 85: ' y' (ID: 342)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04096062481403351
    2. ' y' → logprob: -3.4159605503082275
    3. ' ' → logprob: -5.790960788726807
    4. 'y' → logprob: -6.540960788726807
    5. '<|end|>' → logprob: -7.165960788726807
    6. 's' → logprob: -7.665960788726807
    7. ''' → logprob: -8.415960311889648
    8. '"' → logprob: -8.415960311889648
    9. '0' → logprob: -8.790960311889648
    10. '1' → logprob: -9.165960311889648

Token 86: '4' (ID: 19)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.5048530030981055e-06
    2. '4' → logprob: -13.625001907348633
    3. '-' → logprob: -15.500001907348633
    4. '2' → logprob: -17.625001907348633
    5. '۳' → logprob: -18.375001907348633
    6. ' ' → logprob: -18.375001907348633
    7. '```' → logprob: -19.250001907348633
    8. '.' → logprob: -19.375001907348633
    9. '<|end|>' → logprob: -19.500001907348633
    10. ' -' → logprob: -20.250001907348633

Token 87: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5762293934822083
    2. ' -' → logprob: -0.8262293934822083
    3. '<|end|>' → logprob: -8.201229095458984
    4. ' ' → logprob: -11.951229095458984
    5. ')' → logprob: -13.451229095458984
    6. ' ' → logprob: -13.576229095458984
    7. ',' → logprob: -13.701229095458984
    8. ' -
' → logprob: -13.951229095458984
    9. '-
' → logprob: -14.326229095458984
    10. '_' → logprob: -14.576229095458984

Token 88: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.38886547088623047
    2. 'y' → logprob: -1.1388654708862305
    3. 'x' → logprob: -6.6388654708862305
    4. '<|end|>' → logprob: -7.6388654708862305
    5. ' x' → logprob: -8.88886547088623
    6. ' ' → logprob: -9.76386547088623
    7. '	y' → logprob: -12.63886547088623
    8. '1' → logprob: -13.88886547088623
    9. '3' → logprob: -14.63886547088623
    10. ')' → logprob: -15.01386547088623

Token 89: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0005535095697268844
    2. '1' → logprob: -7.500553607940674
    3. ' ' → logprob: -14.625553131103516
    4. '2' → logprob: -16.625553131103516
    5. '4' → logprob: -16.750553131103516
    6. '```' → logprob: -17.125553131103516
    7. '-' → logprob: -18.688053131103516
    8. '۳' → logprob: -19.438053131103516
    9. '３' → logprob: -20.125553131103516
    10. '<|end|>' → logprob: -20.375553131103516

Token 90: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0036570802330970764
    2. '' → logprob: -7.00365686416626
    3. ' 
' → logprob: -7.62865686416626
    4. '\n' → logprob: -7.62865686416626
    5. 'd' → logprob: -7.75365686416626
    6. '
' → logprob: -7.75365686416626
    7. '  
' → logprob: -8.503657341003418
    8. '    
' → logprob: -8.628657341003418
    9. '```' → logprob: -8.628657341003418
    10. 'n' → logprob: -9.878657341003418

Token 91: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09868699312210083
    2. 'd' → logprob: -2.848686933517456
    3. ' 
' → logprob: -4.473687171936035
    4. '' → logprob: -5.598687171936035
    5. '```' → logprob: -5.723687171936035
    6. '   ' → logprob: -5.973687171936035
    7. '\n' → logprob: -6.098687171936035
    8. 'x' → logprob: -6.098687171936035
    9. '    
' → logprob: -6.223687171936035
    10. 'a' → logprob: -6.473687171936035

Token 92: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.01604469306766987
    2. 'a' → logprob: -5.391044616699219
    3. 'b' → logprob: -5.516044616699219
    4. 't' → logprob: -6.516044616699219
    5. '=' → logprob: -7.141044616699219
    6. ' d' → logprob: -7.141044616699219
    7. 'den' → logprob: -7.516044616699219
    8. ',' → logprob: -7.516044616699219
    9. '-' → logprob: -7.766044616699219
    10. '.' → logprob: -7.891044616699219

Token 93: ' Check' (ID: 6208)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.30891168117523193
    2. ' d' → logprob: -3.0589118003845215
    3. 'a' → logprob: -3.1839118003845215
    4. '#' → logprob: -3.3089118003845215
    5. ' ' → logprob: -4.0589118003845215
    6. 'if' → logprob: -4.1839118003845215
    7. ' if' → logprob: -4.5589118003845215
    8. ' a' → logprob: -4.6839118003845215
    9. 'den' → logprob: -4.6839118003845215
    10. 'det' → logprob: -4.6839118003845215

Token 94: ' cross' (ID: 8088)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5267202258110046
    2. ' if' → logprob: -1.1517202854156494
    3. 'i' → logprob: -3.1517202854156494
    4. 'if' → logprob: -4.52672004699707
    5. ' i' → logprob: -4.52672004699707
    6. ':' → logprob: -5.65172004699707
    7. '<|end|>' → logprob: -5.65172004699707
    8. '_' → logprob: -5.90172004699707
    9. ',' → logprob: -6.15172004699707
    10. ')' → logprob: -6.27672004699707

Token 95: ' product' (ID: 1888)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8051563501358032
    2. '_' → logprob: -0.9301563501358032
    3. '(' → logprob: -2.0551562309265137
    4. ' product' → logprob: -5.055156230926514
    5. '_product' → logprob: -5.305156230926514
    6. 'product' → logprob: -5.680156230926514
    7. '-' → logprob: -5.680156230926514
    8. ')' → logprob: -6.305156230926514
    9. ' _' → logprob: -6.305156230926514
    10. '*' → logprob: -6.555156230926514

Token 96: ' close' (ID: 5263)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7582676410675049
    2. ':' → logprob: -1.0082676410675049
    3. '=' → logprob: -2.633267641067505
    4. '   ' → logprob: -3.008267641067505
    5. '(' → logprob: -4.133267402648926
    6. ',' → logprob: -4.508267402648926
    7. ' =' → logprob: -5.633267402648926
    8. ')' → logprob: -5.758267402648926
    9. '  ' → logprob: -6.133267402648926
    10. '>' → logprob: -6.133267402648926

Token 97: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.08689519762992859
    2. 'to' → logprob: -2.836895227432251
    3. ' ' → logprob: -4.211894989013672
    4. '(' → logprob: -4.711894989013672
    5. ')' → logprob: -7.711894989013672
    6. ' (' → logprob: -8.711894989013672
    7. '0' → logprob: -9.961894989013672
    8. '()' → logprob: -10.211894989013672
    9. '=' → logprob: -11.211894989013672
    10. '(
' → logprob: -11.336894989013672

Token 98: ' zero' (ID: 12421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04584787040948868
    2. ' ' → logprob: -3.6708478927612305
    3. ' zero' → logprob: -4.0458478927612305
    4. 'zero' → logprob: -6.2958478927612305
    5. '```' → logprob: -11.17084789276123
    6. '   ' → logprob: -14.04584789276123
    7. ')' → logprob: -14.29584789276123
    8. '_zero' → logprob: -14.29584789276123
    9. ' ' → logprob: -14.42084789276123
    10. '1' → logprob: -14.92084789276123

Token 99: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7011568546295166
    2. ' ' → logprob: -1.0761568546295166
    3. '   ' → logprob: -2.2011568546295166
    4. ' :' → logprob: -4.5761566162109375
    5. ' if' → logprob: -4.7011566162109375
    6. '    ' → logprob: -4.7011566162109375
    7. ',' → logprob: -5.5761566162109375
    8. '  ' → logprob: -6.0761566162109375
    9. ' i' → logprob: -6.0761566162109375
    10. ':
' → logprob: -6.0761566162109375

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.807671844959259
    2. ' ' → logprob: -1.1826717853546143
    3. ' if' → logprob: -2.3076717853546143
    4. ':' → logprob: -2.6826717853546143
    5. '    ' → logprob: -4.057672023773193
    6. 'if' → logprob: -4.307672023773193
    7. ' :' → logprob: -4.307672023773193
    8. '     
' → logprob: -5.057672023773193
    9. ' 
' → logprob: -5.432672023773193
    10. '    
' → logprob: -5.557672023773193

Token 101: ' if' (ID: 538)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6823958158493042
    2. ' ' → logprob: -1.6823958158493042
    3. ' if' → logprob: -2.0573959350585938
    4. 'if' (adapté à ' if') → logprob: -3.0573959350585938
    5. '   ' → logprob: -3.1823959350585938
    6. ' i' → logprob: -3.4323959350585938
    7. '(' → logprob: -4.182395935058594
    8. ':' → logprob: -4.432395935058594
    9. ' 
' → logprob: -5.307395935058594
    10. '1' → logprob: -5.807395935058594

Token 102: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.055126216262578964
    2. 'abs' → logprob: -2.930126190185547
    3. '(abs' → logprob: -9.180126190185547
    4. ' ' → logprob: -9.680126190185547
    5. '   ' → logprob: -9.680126190185547
    6. ' ab' → logprob: -12.555126190185547
    7. '  ' → logprob: -12.680126190185547
    8. '    ' → logprob: -12.680126190185547
    9. ' (' → logprob: -12.930126190185547
    10. ' a' → logprob: -13.555126190185547

Token 103: '(dx' (ID: 124932)
  Prédit: '(dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dx' → logprob: -0.3064838945865631
    2. '(' → logprob: -1.8064838647842407
    3. '((' → logprob: -2.3064839839935303
    4. '(d' → logprob: -9.05648422241211
    5. '(
' → logprob: -12.43148422241211
    6. '(((' → logprob: -13.43148422241211
    7. ' (' → logprob: -14.05648422241211
    8. '(x' → logprob: -14.43148422241211
    9. 'dx' → logprob: -14.93148422241211
    10. '(-' → logprob: -15.05648422241211

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. '<|end|>' → logprob: -13.625004768371582
    3. '```' → logprob: -13.875004768371582
    4. ' ' → logprob: -14.187504768371582
    5. '
' → logprob: -15.000004768371582
    6. ')' → logprob: -15.312504768371582
    7. '

' → logprob: -15.562504768371582
    8. '_' → logprob: -15.875004768371582
    9. '2' → logprob: -16.0000057220459
    10. '１' → logprob: -16.0625057220459

Token 105: '*' (ID: 9)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.34848782420158386
    2. '*' → logprob: -1.2234878540039062
    3. ' ' → logprob: -10.598487854003906
    4. ')' → logprob: -11.348487854003906
    5. ' ' → logprob: -13.598487854003906
    6. ' **' → logprob: -13.723487854003906
    7. '**' → logprob: -13.973487854003906
    8. ' )' → logprob: -14.723487854003906
    9. '*y' → logprob: -14.973487854003906
    10. '*)' → logprob: -15.098487854003906

Token 106: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.00021152703266125172
    2. ' dy' → logprob: -8.500211715698242
    3. 'd' → logprob: -12.375211715698242
    4. '.dy' → logprob: -12.875211715698242
    5. '-d' → logprob: -13.875211715698242
    6. '	d' → logprob: -16.250211715698242
    7. 'dym' → logprob: -16.750211715698242
    8. 'Dy' → logprob: -17.375211715698242
    9. '-' → logprob: -17.625211715698242
    10. '/d' → logprob: -17.875211715698242

Token 107: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -13.500003814697266
    3. '<|end|>' → logprob: -13.750003814697266
    4. '-' → logprob: -13.875003814697266
    5. ' -' → logprob: -14.625003814697266
    6. '₂' → logprob: -17.375003814697266
    7. '۲' → logprob: -17.437503814697266
    8. '1' → logprob: -17.812503814697266
    9. '２' → logprob: -18.187503814697266
    10. '   ' → logprob: -18.312503814697266

Token 108: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3489478826522827
    2. '-' → logprob: -1.2239478826522827
    3. ' ' → logprob: -8.223947525024414
    4. ')' → logprob: -8.473947525024414
    5. ' )' → logprob: -11.598947525024414
    6. ' ' → logprob: -11.598947525024414
    7. '	' → logprob: -13.348947525024414
    8. '-)' → logprob: -13.348947525024414
    9. '  ' → logprob: -13.848947525024414
    10. '   ' → logprob: -14.223947525024414

Token 109: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.19703690707683563
    2. 'dx' → logprob: -2.3220369815826416
    3. ' dy' → logprob: -2.5720369815826416
    4. ' dx' → logprob: -5.4470367431640625
    5. ' ' → logprob: -10.447036743164062
    6. '<|end|>' → logprob: -11.072036743164062
    7. 'd' → logprob: -11.447036743164062
    8. '(dx' → logprob: -12.197036743164062
    9. '	d' → logprob: -12.572036743164062
    10. '  ' → logprob: -12.572036743164062

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '<|end|>' → logprob: -14.75
    3. '<|end|>' → logprob: -18.0
    4. '[' → logprob: -19.125
    5. '１' → logprob: -19.375
    6. '```' → logprob: -19.75
    7. '2' → logprob: -20.25
    8. ')' → logprob: -20.375
    9. '۱' → logprob: -20.5
    10. '१' → logprob: -20.75

Token 111: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -5.1689596148207784e-05
    2. ' *' → logprob: -9.875051498413086
    3. '*)' → logprob: -16.750051498413086
    4. '*x' → logprob: -17.000051498413086
    5. '**' → logprob: -17.375051498413086
    6. ')' → logprob: -17.500051498413086
    7. ' ' → logprob: -18.000051498413086
    8. '*
' → logprob: -18.625051498413086
    9. '*object' → logprob: -18.625051498413086
    10. '*d' → logprob: -18.875051498413086

Token 112: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -2.939851037808694e-05
    2. ' dx' → logprob: -10.500029563903809
    3. '*' → logprob: -14.625029563903809
    4. '_dx' → logprob: -15.125029563903809
    5. '.dx' → logprob: -15.375029563903809
    6. '<|end|>' → logprob: -15.625029563903809
    7. '(dx' → logprob: -15.875029563903809
    8. '1' → logprob: -16.000028610229492
    9. 'd' → logprob: -16.375028610229492
    10. ' ' → logprob: -16.500028610229492

Token 113: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007462600478902459
    2. '1' → logprob: -7.500746250152588
    3. ')' → logprob: -8.625746726989746
    4. '<|end|>' → logprob: -11.500746726989746
    5. '```' → logprob: -13.750746726989746
    6. '0' → logprob: -14.500746726989746
    7. '   ' → logprob: -15.125746726989746
    8. '<|end|>' → logprob: -15.375746726989746
    9. ' ' → logprob: -15.625746726989746
    10. '[' → logprob: -15.625746726989746

Token 114: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015259294304996729
    2. ' )' → logprob: -6.50152587890625
    3. ')>' → logprob: -11.75152587890625
    4. ')<' → logprob: -12.12652587890625
    5. ')<=' → logprob: -12.50152587890625
    6. '>' → logprob: -13.25152587890625
    7. ')>=' → logprob: -13.87652587890625
    8. ' >' → logprob: -14.25152587890625
    9. '0' → logprob: -14.75152587890625
    10. ' <=' → logprob: -14.75152587890625

Token 115: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.12711027264595032
    2. ' <=' → logprob: -2.377110242843628
    3. '<' → logprob: -3.752110242843628
    4. ' ' → logprob: -6.627110481262207
    5. '<=' → logprob: -6.877110481262207
    6. ' >' → logprob: -8.252110481262207
    7. ')' → logprob: -8.377110481262207
    8. '>' → logprob: -9.752110481262207
    9. '   ' → logprob: -10.752110481262207
    10. ' >=' → logprob: -10.752110481262207

Token 116: ' eps' (ID: 39683)
  Prédit: ' eps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' eps' → logprob: -0.043633315712213516
    2. 'eps' → logprob: -3.168633222579956
    3. ' ' → logprob: -7.793633460998535
    4. ' ' → logprob: -9.543633460998535
    5. 'e' → logprob: -9.668633460998535
    6. ' epsilon' → logprob: -11.293633460998535
    7. ' e' → logprob: -11.418633460998535
    8. ' 
' → logprob: -11.543633460998535
    9. '_eps' → logprob: -11.668633460998535
    10. 'ep' → logprob: -11.668633460998535

Token 117: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.198043699143454e-05
    2. ' :' → logprob: -9.500091552734375
    3. '):' → logprob: -11.750091552734375
    4. ':
' → logprob: -11.750091552734375
    5. ':**' → logprob: -15.250091552734375
    6. ',' → logprob: -15.500091552734375
    7. ':return' → logprob: -15.500091552734375
    8. ' and' → logprob: -15.875091552734375
    9. '>:' → logprob: -16.375091552734375
    10. '   ' → logprob: -16.375091552734375

Token 118: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6321539878845215
    2. ':' → logprob: -1.0071539878845215
    3. '       ' → logprob: -3.0071539878845215
    4. ' continue' → logprob: -3.6321539878845215
    5. '    ' → logprob: -4.7571539878845215
    6. ' ' → logprob: -5.0071539878845215
    7. ' :' → logprob: -5.3821539878845215
    8. '    
' → logprob: -6.2571539878845215
    9. '\n' → logprob: -6.7571539878845215
    10. 'continue' → logprob: -7.3821539878845215

Token 119: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8003202080726624
    2. 'print' (adapté à ' print') → logprob: -0.8003202080726624
    3. ' continue' → logprob: -3.5503201484680176
    4. 'continue' → logprob: -3.9253201484680176
    5. '    ' → logprob: -4.175320148468018
    6. ' ' → logprob: -4.300320148468018
    7. ' print' → logprob: -4.800320148468018
    8. '\n' → logprob: -5.675320148468018
    9. '
' → logprob: -5.800320148468018
    10. ' 
' → logprob: -5.925320148468018

Token 120: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.08552281558513641
    2. '(' → logprob: -2.7105228900909424
    3. '('' → logprob: -4.460522651672363
    4. '(-' → logprob: -5.710522651672363
    5. '()' → logprob: -7.960522651672363
    6. '("")' → logprob: -9.085522651672363
    7. '("("' → logprob: -9.835522651672363
    8. '("-' → logprob: -10.710522651672363
    9. '(None' → logprob: -11.460522651672363
    10. '((' → logprob: -11.835522651672363

Token 121: 'YES' (ID: 31958)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.203315019607544
    2. '-' → logprob: -1.578315019607544
    3. 'NONE' → logprob: -2.203315019607544
    4. '"' → logprob: -2.328315019607544
    5. 'none' → logprob: -2.453315019607544
    6. 'NO' → logprob: -2.703315019607544
    7. '")' → logprob: -3.203315019607544
    8. 'LINE' → logprob: -3.828315019607544
    9. 'None' → logprob: -4.703314781188965
    10. '//' → logprob: -4.703314781188965

Token 122: '")
' (ID: 1896)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35995909571647644
    2. '")' → logprob: -1.3599591255187988
    3. ' ")' → logprob: -3.609959125518799
    4. ' )' → logprob: -4.734959125518799
    5. '\n' → logprob: -5.859959125518799
    6. '   ' → logprob: -6.609959125518799
    7. '"' → logprob: -6.734959125518799
    8. '<|end|>' → logprob: -6.734959125518799
    9. '
' → logprob: -7.359959125518799
    10. ',' → logprob: -7.484959125518799

Token 123: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.14800770580768585
    2. '   ' → logprob: -2.27300763130188
    3. ' else' → logprob: -3.39800763130188
    4. 'elif' → logprob: -7.523007869720459
    5. 'continue' → logprob: -8.6480073928833
    6. '	else' → logprob: -9.0230073928833
    7. '    
' → logprob: -9.6480073928833
    8. '	continue' → logprob: -9.8980073928833
    9. '       ' → logprob: -10.1480073928833
    10. ' ' → logprob: -10.3980073928833

Token 124: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.02912902645766735
    2. ' else' → logprob: -3.6541290283203125
    3. '   ' → logprob: -6.0291290283203125
    4. 'elif' → logprob: -8.654129028320312
    5. ' ' → logprob: -8.779129028320312
    6. '	else' → logprob: -10.279129028320312
    7. '<|end|>' → logprob: -11.529129028320312
    8. 'el' → logprob: -12.029129028320312
    9. '  ' → logprob: -12.404129028320312
    10. '    
' → logprob: -12.404129028320312

Token 125: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002210596576333046
    2. ':
' → logprob: -8.875221252441406
    3. '       ' → logprob: -10.500221252441406
    4. '):' → logprob: -11.000221252441406
    5. '   ' → logprob: -11.250221252441406
    6. '<|end|>' → logprob: -11.375221252441406
    7. ' :' → logprob: -12.125221252441406
    8. '():' → logprob: -12.875221252441406
    9. ')' → logprob: -13.625221252441406
    10. ',' → logprob: -13.875221252441406

Token 126: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11579037457704544
    2. '       ' → logprob: -2.240790367126465
    3. ' print' → logprob: -6.365790367126465
    4. 'print' → logprob: -6.740790367126465
    5. '```' → logprob: -10.490790367126465
    6. '    
' → logprob: -10.990790367126465
    7. '   ' → logprob: -13.115790367126465
    8. '	print' → logprob: -13.240790367126465
    9. ' ' → logprob: -13.365790367126465
    10. '
' → logprob: -13.365790367126465

Token 127: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.018941223621368408
    2. ' print' → logprob: -4.018941402435303
    3. '   ' → logprob: -7.268941402435303
    4. 'x' → logprob: -10.518940925598145
    5. 'def' → logprob: -11.018940925598145
    6. ' x' → logprob: -11.518940925598145
    7. ' ' → logprob: -11.643940925598145
    8. 'import' → logprob: -12.143940925598145
    9. '    ' → logprob: -12.518940925598145
    10. '       ' → logprob: -12.518940925598145

Token 128: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.25203341245651245
    2. '(' → logprob: -1.5020334720611572
    3. '("("' → logprob: -9.502033233642578
    4. '("")' → logprob: -11.502033233642578
    5. '(
' → logprob: -12.002033233642578
    6. '()' → logprob: -12.377033233642578
    7. '('' → logprob: -12.377033233642578
    8. '(""' → logprob: -13.002033233642578
    9. '("""' → logprob: -13.252033233642578
    10. '(

' → logprob: -14.752033233642578

Token 129: 'NO' (ID: 14695)
  Prédit: 'NO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -0.005950602237135172
    2. '"' → logprob: -5.130950450897217
    3. '"No' → logprob: -11.380950927734375
    4. '"N' → logprob: -12.755950927734375
    5. ' NO' → logprob: -12.880950927734375
    6. 'YES' → logprob: -13.505950927734375
    7. 'N' → logprob: -13.630950927734375
    8. '")' → logprob: -14.255950927734375
    9. ''' → logprob: -14.880950927734375
    10. '(NO' → logprob: -15.130950927734375

Token 130: '")' (ID: 1405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07892867922782898
    2. '")' → logprob: -2.5789287090301514
    3. ')")' → logprob: -10.57892894744873
    4. ' )' → logprob: -11.70392894744873
    5. ')
' → logprob: -12.95392894744873
    6. '')' → logprob: -13.57892894744873
    7. '"' → logprob: -14.57892894744873
    8. '`)' → logprob: -14.95392894744873
    9. '```' → logprob: -15.20392894744873
    10. ')"' → logprob: -15.82892894744873


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 128
Tokens correctement prédits (1ère position, stricte): 61
Tokens correctement prédits (1ère position, avec adaptation): 63
Tokens correctement prédits (top 10): 113
Précision stricte (1ère position): 47.66%
Précision adaptée (1ère position): 49.22%
Précision (top 10): 88.28%
================================================================================
