================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

m, n = map(int, input().split())
prob = [list(map(float, input().split())) for _ in range(m)]

from functools import lru_cache

@lru_cache(None)
def dfs(k, r):
    # k: index du chat envoyé actuellement (0-based)
    # r: la salle où l'on doit commencer (0-based)
    # retourne la probabilité maximale de tuer tous les ennemis à partir de la salle r avec les chats de k à m-1

    if r == n:
        return 1.0  # tous les ennemis sont tués

    if k == m:
        return 0.0  # plus de chats disponible, impossible

    res = 0.0
    p = 1.0
    for i in range(r, n):
        # ce chat tente de battre l'ennemi i
        # probabilité qu'il gagne contre l'ennemi i
        win_prob = prob[k][i]
        # probabilité qu'il perde contre l'ennemi i
        lose_prob = 1 - win_prob
        # si gagne: avance à la salle suivante
        # sinon: s'arrête ici; le prochain chat repart à cet ennemi
        # on pondère par la probabilité qu'il ait battu tous les ennemis précédents sans perdre
        res = max(res, p * win_prob * dfs(k, i + 1) + (1 - p * win_prob) * dfs(k + 1, i))
        # mise à jour de p pour la prochaine salle
        p *= win_prob

        # en réalité, répartitions doivent être conditionnées soigneusement, optimiser en partant du principe ci-dessus:
        # mais ici on gère globalement dans la formule ci-dessus

    # alternative plus simple : on teste chaque point de défaillance possible
    res = 0.0
    p_passed = 1.0
    for i in range(r, n):
        # le chat atteint l'ennemi i avec prob p_passed
        # il peut gagner à cet ennemi:
        win = prob[k][i]
        # si il gagne (win), on continue à la salle suivante
        # si il perd (1-win), le prochain chat commence à partir de l'ennemi i
        res = max(res, p_passed * win * dfs(k, i + 1) + (1 - p_passed * win) * dfs(k + 1, i))
        p_passed *= win

    # Enfin le cas où le chat gagne tous les ennemis jusqu'à la fin
    res = max(res, p_passed * dfs(k + 1, n))

    return res

print(dfs(0, 0))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3437388837337494
    2. '.' → logprob: -1.5937389135360718
    3. '<|end|>' → logprob: -2.9687387943267822
    4. '\' → logprob: -4.468739032745361
    5. 'import' → logprob: -5.093739032745361
    6. 'newline' → logprob: -5.093739032745361
    7. '<|end|>' → logprob: -5.968739032745361
    8. '' → logprob: -5.968739032745361
    9. '\r' → logprob: -6.093739032745361
    10. '
' → logprob: -6.343739032745361

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.157039049663581e-05
    2. ' .' → logprob: -11.125051498413086
    3. '.import' → logprob: -11.750051498413086
    4. '.readline' → logprob: -12.625051498413086
    5. '[' → logprob: -12.875051498413086
    6. '.user' → logprob: -12.875051498413086
    7. '.`' → logprob: -13.250051498413086
    8. '.stdout' → logprob: -13.500051498413086
    9. '.exit' → logprob: -13.500051498413086
    10. '.next' → logprob: -13.875051498413086

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.3824406564235687
    2. 't' → logprob: -2.5074405670166016
    3. '_' → logprob: -2.6324405670166016
    4. 'set' → logprob: -3.2574405670166016
    5. '_trace' → logprob: -3.3824405670166016
    6. 'x' → logprob: -3.7574405670166016
    7. 's' → logprob: -4.507440567016602
    8. 'default' → logprob: -5.007440567016602
    9. 'sys' → logprob: -5.132440567016602
    10. 'ex' → logprob: -5.507440567016602

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0014520210679620504
    2. 'ursive' → logprob: -6.7514519691467285
    3. 'ur' → logprob: -9.376452445983887
    4. 'urs' → logprob: -10.001452445983887
    5. '_' → logprob: -10.126452445983887
    6. 'limit' → logprob: -10.376452445983887
    7. '_limit' → logprob: -11.001452445983887
    8. 'urf' → logprob: -11.251452445983887
    9. 't' → logprob: -11.626452445983887
    10. 'ursor' → logprob: -11.876452445983887

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.4866597652435303
    2. 'limit' → logprob: -0.9866597652435303
    3. '_depth' → logprob: -4.486660003662109
    4. 'depth' → logprob: -7.486660003662109
    5. '_' → logprob: -8.36166000366211
    6. '_rate' → logprob: -9.98666000366211
    7. 'lim' → logprob: -10.23666000366211
    8. '(' → logprob: -10.36166000366211
    9. '_factor' → logprob: -10.36166000366211
    10. '_stack' → logprob: -10.61166000366211

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.318681188422488e-05
    2. ' (' → logprob: -12.75001335144043
    3. '(.' → logprob: -12.75001335144043
    4. '(
' → logprob: -12.87501335144043
    5. '(

' → logprob: -13.62501335144043
    6. '((' → logprob: -13.75001335144043
    7. '("("' → logprob: -13.87501335144043
    8. '```' → logprob: -14.62501335144043
    9. '('' → logprob: -15.25001335144043
    10. '(`' → logprob: -15.50001335144043

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.12741151452064514
    2. '100' → logprob: -2.1274116039276123
    3. ' ' → logprob: -8.002411842346191
    4. '500' → logprob: -9.752411842346191
    5. '300' → logprob: -9.877411842346191
    6. '250' → logprob: -10.752411842346191
    7. '  ' → logprob: -12.252411842346191
    8. '   ' → logprob: -12.502411842346191
    9. '200' → logprob: -12.877411842346191
    10. '150' → logprob: -13.127411842346191

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006857931148260832
    2. '000' → logprob: -5.756857872009277
    3. '00' → logprob: -5.881857872009277
    4. '4' → logprob: -7.256857872009277
    5. '6' → logprob: -8.881857872009277
    6. '5' → logprob: -11.506857872009277
    7. '```' → logprob: -12.006857872009277
    8. ')' → logprob: -12.256857872009277
    9. '3' → logprob: -12.381857872009277
    10. '**' → logprob: -12.381857872009277

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00714417127892375
    2. '9' → logprob: -5.632143974304199
    3. '6' → logprob: -5.757143974304199
    4. '8' → logprob: -7.882143974304199
    5. '```' → logprob: -15.7571439743042
    6. ' ' → logprob: -16.507144927978516
    7. '(' → logprob: -17.132144927978516
    8. '5' → logprob: -17.757144927978516
    9. '``' → logprob: -18.257144927978516
    10. '999' → logprob: -18.382144927978516

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.246537173457909e-06
    2. '))' → logprob: -12.625003814697266
    3. ' )' → logprob: -14.375003814697266
    4. ')
' → logprob: -15.625003814697266
    5. ')))' → logprob: -17.250003814697266
    6. ')`' → logprob: -17.750003814697266
    7. '`)' → logprob: -18.000003814697266
    8. '')' → logprob: -18.250003814697266
    9. '```' → logprob: -18.375003814697266
    10. '）' → logprob: -18.500003814697266

Token 13: 'm' (ID: 76)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0465119332075119
    2. '
' → logprob: -3.5465118885040283
    3. '

' → logprob: -4.921512126922607
    4. '```' → logprob: -5.296512126922607
    5. '\' → logprob: -6.421512126922607
    6. '
' → logprob: -7.046512126922607
    7. 'class' → logprob: -7.546512126922607
    8. '\n' → logprob: -7.671512126922607
    9. 'import' → logprob: -8.04651165008545
    10. ')' → logprob: -8.92151165008545

Token 14: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005620754323899746
    2. '=' → logprob: -6.380620956420898
    3. ' =' → logprob: -6.505620956420898
    4. 'o' → logprob: -6.630620956420898
    5. ',' → logprob: -8.255620956420898
    6. 'i' → logprob: -8.380620956420898
    7. 'ax' → logprob: -9.255620956420898
    8. ',a' → logprob: -9.505620956420898
    9. 'ap' → logprob: -9.880620956420898
    10. '=a' → logprob: -10.130620956420898

Token 15: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6945907473564148
    2. ' n' → logprob: -0.6945907473564148
    3. ' ' → logprob: -6.8195905685424805
    4. 'input' → logprob: -9.44459056854248
    5. 'a' → logprob: -10.06959056854248
    6. 'k' → logprob: -10.31959056854248
    7. ' =' → logprob: -10.69459056854248
    8. ' k' → logprob: -10.81959056854248
    9. ' a' → logprob: -10.94459056854248
    10. 'h' → logprob: -11.06959056854248

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07892206311225891
    2. '=' → logprob: -2.5789220333099365
    3. ',' → logprob: -10.453922271728516
    4. ' ,' → logprob: -13.953922271728516
    5. ' =
' → logprob: -14.203922271728516
    6. ' ' → logprob: -14.578922271728516
    7. '=int' → logprob: -15.578922271728516
    8. ')' → logprob: -15.578922271728516
    9. ' =
' → logprob: -15.703922271728516
    10. '<|end|>' → logprob: -15.828922271728516

Token 17: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.04428493604063988
    2. 'map' → logprob: -3.1692848205566406
    3. ' ' → logprob: -6.794284820556641
    4. '10' → logprob: -10.04428482055664
    5. ' input' → logprob: -10.29428482055664
    6. ' list' → logprob: -10.41928482055664
    7. '0' → logprob: -11.29428482055664
    8. 'input' → logprob: -11.66928482055664
    9. ' int' → logprob: -12.04428482055664
    10. 'list' → logprob: -12.54428482055664

Token 18: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06372199952602386
    2. '(' → logprob: -2.8137218952178955
    3. '(input' → logprob: -7.063722133636475
    4. '(str' → logprob: -7.188722133636475
    5. '(lambda' → logprob: -9.438721656799316
    6. 'int' → logprob: -10.938721656799316
    7. '(eval' → logprob: -11.438721656799316
    8. '(list' → logprob: -11.813721656799316
    9. '(sys' → logprob: -12.438721656799316
    10. '(tuple' → logprob: -12.688721656799316

Token 19: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.036100372672080994
    2. ',input' → logprob: -3.661100387573242
    3. '(input' → logprob: -5.411100387573242
    4. '(' → logprob: -5.911100387573242
    5. '(sys' → logprob: -6.036100387573242
    6. 'input' → logprob: -9.786100387573242
    7. ' ,' → logprob: -10.036100387573242
    8. ',(' → logprob: -10.911100387573242
    9. '(),' → logprob: -11.161100387573242
    10. ',int' → logprob: -11.286100387573242

Token 20: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5766392946243286
    2. ' input' → logprob: -0.8266392946243286
    3. ' sys' → logprob: -7.576639175415039
    4. 'sys' → logprob: -8.701639175415039
    5. ' ' → logprob: -10.951639175415039
    6. '(input' → logprob: -13.701639175415039
    7. ',input' → logprob: -14.451639175415039
    8. ')' → logprob: -14.451639175415039
    9. '	input' → logprob: -14.701639175415039
    10. '=input' → logprob: -15.451639175415039

Token 21: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6551331281661987
    2. '().' → logprob: -0.7801331281661987
    3. '()' → logprob: -3.9051332473754883
    4. ')' → logprob: -6.780133247375488
    5. '(' → logprob: -7.780133247375488
    6. '());' → logprob: -8.530133247375488
    7. '('' → logprob: -9.155133247375488
    8. '()))' → logprob: -9.530133247375488
    9. '()>' → logprob: -10.155133247375488
    10. '(),' → logprob: -10.530133247375488

Token 22: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.804671233519912e-05
    2. 'strip' → logprob: -9.37508773803711
    3. 'rstrip' → logprob: -12.87508773803711
    4. 'spl' → logprob: -15.25008773803711
    5. 'read' → logprob: -16.12508773803711
    6. ' split' → logprob: -16.25008773803711
    7. '(split' → logprob: -16.37508773803711
    8. 's' → logprob: -19.12508773803711
    9. ')' → logprob: -19.12508773803711
    10. '```' → logprob: -19.50008773803711

Token 23: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10071878135204315
    2. '))' → logprob: -2.3507187366485596
    3. '())' → logprob: -7.850718975067139
    4. '),' → logprob: -9.97571849822998
    5. '()' → logprob: -10.47571849822998
    6. '()))' → logprob: -10.97571849822998
    7. ')))' → logprob: -11.47571849822998
    8. ')
' → logprob: -12.35071849822998
    9. ')`' → logprob: -13.10071849822998
    10. '))
' → logprob: -13.22571849822998

Token 24: 'prob' (ID: 29823)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.042999505996704
    2. 'data' → logprob: -1.917999505996704
    3. 'd' → logprob: -2.042999505996704
    4. 'grid' → logprob: -2.167999505996704
    5. 'dp' → logprob: -2.167999505996704
    6. 'graph' → logprob: -3.417999505996704
    7. 'matrix' → logprob: -4.417999267578125
    8. ')' → logprob: -4.542999267578125
    9. '
' → logprob: -4.542999267578125
    10. '```' → logprob: -4.542999267578125

Token 25: ' =' (ID: 314)
  Prédit: 'lem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lem' → logprob: -0.1614508181810379
    2. 'lems' → logprob: -2.4114508628845215
    3. 'abilities' → logprob: -3.2864508628845215
    4. 'ability' → logprob: -4.1614508628845215
    5. 'em' → logprob: -5.6614508628845215
    6. 'ems' → logprob: -6.4114508628845215
    7. 's' → logprob: -8.161450386047363
    8. 'le' → logprob: -8.911450386047363
    9. ' lem' → logprob: -8.911450386047363
    10. 'rem' → logprob: -8.911450386047363

Token 26: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6659638285636902
    2. ' [' → logprob: -1.665963888168335
    3. '[]' → logprob: -1.915963888168335
    4. ' []' → logprob: -2.540963888168335
    5. '[list' → logprob: -3.290963888168335
    6. '[[' → logprob: -4.665963649749756
    7. ' [[]' → logprob: -5.290963649749756
    8. '[int' → logprob: -5.290963649749756
    9. ' [[' → logprob: -5.790963649749756
    10. 'list' → logprob: -5.915963649749756

Token 27: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.015167883597314358
    2. 'float' → logprob: -4.515167713165283
    3. 'int' → logprob: -5.890167713165283
    4. '[]' → logprob: -7.140167713165283
    5. '0' → logprob: -8.140168190002441
    6. 'tuple' → logprob: -9.640168190002441
    7. ' list' → logprob: -9.890168190002441
    8. '[int' → logprob: -10.015168190002441
    9. 'map' → logprob: -10.140168190002441
    10. ']' → logprob: -11.015168190002441

Token 28: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0007347009377554059
    2. '(' → logprob: -7.750734806060791
    3. '(int' → logprob: -8.125734329223633
    4. 'map' → logprob: -12.000734329223633
    5. '()' → logprob: -13.625734329223633
    6. '(list' → logprob: -15.375734329223633
    7. '(eval' → logprob: -15.875734329223633
    8. '(input' → logprob: -16.250734329223633
    9. ' map' → logprob: -16.375734329223633
    10. '(lambda' → logprob: -16.625734329223633

Token 29: '(float' (ID: 17830)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00013119110371917486
    2. '(' → logprob: -9.250131607055664
    3. '[int' → logprob: -11.125131607055664
    4. 'int' → logprob: -12.250131607055664
    5. '<int' → logprob: -12.250131607055664
    6. ',int' → logprob: -12.500131607055664
    7. ']int' → logprob: -12.500131607055664
    8. '=int' → logprob: -13.500131607055664
    9. '(lambda' → logprob: -14.500131607055664
    10. '<|end|>' → logprob: -14.750131607055664

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03817632794380188
    2. ',input' → logprob: -3.2881762981414795
    3. '(input' → logprob: -9.538176536560059
    4. 'input' → logprob: -10.038176536560059
    5. ' ,' → logprob: -11.288176536560059
    6. '(' → logprob: -12.663176536560059
    7. '```' → logprob: -13.913176536560059
    8. ' input' → logprob: -14.788176536560059
    9. ',float' → logprob: -14.913176536560059
    10. ')' → logprob: -15.038176536560059

Token 31: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029752222821116447
    2. ' input' → logprob: -3.529752254486084
    3. 'sys' → logprob: -14.404751777648926
    4. ' sys' → logprob: -15.154751777648926
    5. '(input' → logprob: -15.529751777648926
    6. 'lambda' → logprob: -15.654751777648926
    7. ' ' → logprob: -15.654751777648926
    8. '<input' → logprob: -16.154752731323242
    9. ',input' → logprob: -16.279752731323242
    10. '	input' → logprob: -16.904752731323242

Token 32: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.511406809295295e-06
    2. ')' → logprob: -13.250006675720215
    3. '()' → logprob: -13.500006675720215
    4. '.readline' → logprob: -14.125006675720215
    5. '))' → logprob: -14.250006675720215
    6. '.' → logprob: -14.375006675720215
    7. '()))' → logprob: -14.750006675720215
    8. ' ().' → logprob: -15.250006675720215
    9. ').' → logprob: -15.625006675720215
    10. '.split' → logprob: -16.0000057220459

Token 33: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.3425219549390022e-05
    2. 'strip' → logprob: -11.50001335144043
    3. ' split' → logprob: -13.37501335144043
    4. 'rstrip' → logprob: -13.50001335144043
    5. '(split' → logprob: -15.00001335144043
    6. 'spl' → logprob: -17.50001335144043
    7. ')' → logprob: -18.62501335144043
    8. '.split' → logprob: -19.00001335144043
    9. ' ' → logprob: -19.25001335144043
    10. 'plit' → logprob: -19.25001335144043

Token 34: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.023819060996174812
    2. '))' → logprob: -3.8988189697265625
    3. '()' → logprob: -6.2738189697265625
    4. '())' → logprob: -6.7738189697265625
    5. '(' → logprob: -8.898818969726562
    6. '())))' → logprob: -10.148818969726562
    7. '()))
' → logprob: -10.648818969726562
    8. ')' → logprob: -10.648818969726562
    9. '()));' → logprob: -12.273818969726562
    10. ')))' → logprob: -12.398818969726562

Token 35: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5902051329612732
    2. ')' → logprob: -1.090205192565918
    3. '())' → logprob: -2.590205192565918
    4. '()]' → logprob: -3.965205192565918
    5. ')]' → logprob: -4.590205192565918
    6. '(' → logprob: -5.465205192565918
    7. ']' → logprob: -7.215205192565918
    8. 'for' → logprob: -7.965205192565918
    9. ' for' → logprob: -9.590205192565918
    10. '))' → logprob: -10.715205192565918

Token 36: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2883337736129761
    2. '_' → logprob: -1.413333773612976
    3. 'range' → logprob: -5.413333892822266
    4. ' _' → logprob: -6.288333892822266
    5. '_range' → logprob: -7.413333892822266
    6. '(range' → logprob: -8.663333892822266
    7. ' ' → logprob: -10.788333892822266
    8. ' i' → logprob: -11.163333892822266
    9. '	range' → logprob: -11.413333892822266
    10. '_i' → logprob: -11.913333892822266

Token 37: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04524219036102295
    2. '(range' → logprob: -3.4202423095703125
    3. 'in' → logprob: -4.5452423095703125
    4. ' range' → logprob: -7.1702423095703125
    5. ' in' → logprob: -9.545242309570312
    6. '	range' → logprob: -9.920242309570312
    7. '(' → logprob: -12.170242309570312
    8. '.range' → logprob: -12.545242309570312
    9. '(m' → logprob: -12.670242309570312
    10. '_range' → logprob: -12.795242309570312

Token 38: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.76628842484206e-05
    2. ' range' → logprob: -9.625067710876465
    3. '(range' → logprob: -13.750067710876465
    4. '	range' → logprob: -15.125067710876465
    5. '```' → logprob: -16.25006675720215
    6. '   ' → logprob: -17.62506675720215
    7. ' ' → logprob: -18.00006675720215
    8. ')' → logprob: -18.37506675720215
    9. '.range' → logprob: -18.62506675720215
    10. '[' → logprob: -19.12506675720215

Token 39: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.01464538648724556
    2. '(n' → logprob: -4.264645576477051
    3. '(' → logprob: -7.639645576477051
    4. 'm' → logprob: -15.51464557647705
    5. '(M' → logprob: -15.63964557647705
    6. '(s' → logprob: -15.76464557647705
    7. '(
' → logprob: -16.264644622802734
    8. ' (' → logprob: -16.889644622802734
    9. ')m' → logprob: -17.264644622802734
    10. ')' → logprob: -18.389644622802734

Token 40: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -7.85104202805087e-05
    2. ')' → logprob: -9.625078201293945
    3. ']' → logprob: -11.750078201293945
    4. ')],' → logprob: -13.750078201293945
    5. ')])' → logprob: -14.000078201293945
    6. ' )' → logprob: -14.500078201293945
    7. '])]' → logprob: -14.500078201293945
    8. ')]
' → logprob: -14.625078201293945
    9. ')][' → logprob: -15.375078201293945
    10. ')].' → logprob: -15.500078201293945

Token 41: 'from' (ID: 2845)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.004497296642512083
    2. 'visited' → logprob: -6.254497528076172
    3. 'def' → logprob: -7.129497528076172
    4. 'dist' → logprob: -8.254497528076172
    5. 'from' → logprob: -8.504497528076172
    6. 'd' → logprob: -8.504497528076172
    7. 'import' → logprob: -8.629497528076172
    8. 'f' → logprob: -9.004497528076172
    9. 'result' → logprob: -9.004497528076172
    10. 'count' → logprob: -9.129497528076172

Token 42: ' functools' (ID: 142636)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.012801569886505604
    2. 'collections' → logprob: -5.012801647186279
    3. ' itertools' → logprob: -5.512801647186279
    4. ' math' → logprob: -6.262801647186279
    5. ' fractions' → logprob: -9.762801170349121
    6. ' sys' → logprob: -11.012801170349121
    7. ' functools' → logprob: -11.262801170349121
    8. ' scipy' → logprob: -11.387801170349121
    9. ' random' → logprob: -11.512801170349121
    10. ' heap' → logprob: -12.262801170349121

Token 43: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.2541782259941101
    2. 'import' → logprob: -1.5041782855987549
    3. '_import' → logprob: -6.879178047180176
    4. '<|end|>' → logprob: -7.504178047180176
    5. '.' → logprob: -8.504178047180176
    6. ' .' → logprob: -8.629178047180176
    7. '	import' → logprob: -8.879178047180176
    8. '.import' → logprob: -9.879178047180176
    9. '_' → logprob: -10.379178047180176
    10. ' ' → logprob: -11.379178047180176

Token 44: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.004366390407085419
    2. ' l' → logprob: -5.504366397857666
    3. 'cache' → logprob: -8.254365921020508
    4. 'reduce' → logprob: -10.629365921020508
    5. 'cached' → logprob: -13.379365921020508
    6. ' cache' → logprob: -14.004365921020508
    7. 'wrap' → logprob: -14.754365921020508
    8. '```' → logprob: -15.129365921020508
    9. 'import' → logprob: -15.629365921020508
    10. '	l' → logprob: -16.004365921020508

Token 45: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -7.791440293658525e-05
    2. 'r' → logprob: -10.375078201293945
    3. 'ruz' → logprob: -10.500078201293945
    4. 'ruff' → logprob: -12.375078201293945
    5. 'ruh' → logprob: -13.000078201293945
    6. 'mp' → logprob: -13.250078201293945
    7. 'reduce' → logprob: -13.750078201293945
    8. 'rupt' → logprob: -14.125078201293945
    9. 'rw' → logprob: -14.250078201293945
    10. 'wrap' → logprob: -14.250078201293945

Token 46: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.006125021725893021
    2. 'cache' → logprob: -5.131124973297119
    3. 'c' → logprob: -9.131125450134277
    4. 'Cache' → logprob: -11.131125450134277
    5. 'ac' → logprob: -11.256125450134277
    6. '_c' → logprob: -11.381125450134277
    7. ' cache' → logprob: -11.881125450134277
    8. '_CACHE' → logprob: -11.881125450134277
    9. '```' → logprob: -12.006125450134277
    10. 'r' → logprob: -12.756125450134277

Token 47: '

' (ID: 279)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.008604883216321468
    2. '
' → logprob: -5.383605003356934
    3. '@
' → logprob: -6.258605003356934
    4. '\n' → logprob: -7.633605003356934
    5. '@

' → logprob: -8.508605003356934
    6. '@n' → logprob: -8.508605003356934
    7. '@login' → logprob: -8.633605003356934
    8. 'def' → logprob: -8.758605003356934
    9. '```' → logprob: -9.133605003356934
    10. '

' → logprob: -9.258605003356934

Token 48: '@' (ID: 31)
  Prédit: '@'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.0007162463734857738
    2. '@
' → logprob: -7.500716209411621
    3. '
' → logprob: -9.625716209411621
    4. 'def' → logprob: -10.000716209411621
    5. '@n' → logprob: -11.250716209411621
    6. '@

' → logprob: -11.500716209411621
    7. '@m' → logprob: -12.250716209411621
    8. '@\' → logprob: -12.375716209411621
    9. '@login' → logprob: -12.500716209411621
    10. '@return' → logprob: -13.250716209411621

Token 49: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: 0.0
    2. ' l' → logprob: -18.0
    3. '```' → logprob: -18.875
    4. '@' → logprob: -20.0
    5. 'staticmethod' → logprob: -20.875
    6. 'lr' → logprob: -21.0
    7. '	l' → logprob: -21.75
    8. 'fun' → logprob: -22.25
    9. '`' → logprob: -22.625
    10. '1' → logprob: -22.875

Token 50: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.004081128165125847
    2. 'r' → logprob: -5.5040812492370605
    3. '@' → logprob: -13.254080772399902
    4. '_ru' → logprob: -15.629080772399902
    5. '```' → logprob: -15.754080772399902
    6. 'rl' → logprob: -15.754080772399902
    7. '_r' → logprob: -16.00408172607422
    8. 'cache' → logprob: -17.25408172607422
    9. '(r' → logprob: -17.25408172607422
    10. 'ру' → logprob: -17.37908172607422

Token 51: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -6.885492621222511e-05
    2. '_' → logprob: -10.000068664550781
    3. '_cached' → logprob: -11.000068664550781
    4. 'cache' → logprob: -12.750068664550781
    5. ' _' → logprob: -13.625068664550781
    6. '_c' → logprob: -14.000068664550781
    7. '_CACHE' → logprob: -15.125068664550781
    8. '_ca' → logprob: -15.375068664550781
    9. '```' → logprob: -15.625068664550781
    10. '._' → logprob: -15.750068664550781

Token 52: '(None' (ID: 65126)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27550649642944336
    2. '()
' → logprob: -2.5255064964294434
    3. '(None' → logprob: -2.5255064964294434
    4. '
' → logprob: -2.7755064964294434
    5. '(' → logprob: -5.025506496429443
    6. '(max' → logprob: -5.275506496429443
    7. '()' → logprob: -5.525506496429443
    8. '(def' → logprob: -6.525506496429443
    9. 'None' → logprob: -8.275506973266602
    10. '(True' → logprob: -8.400506973266602

Token 53: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07026073336601257
    2. ')
' → logprob: -2.695260763168335
    3. 'def' → logprob: -8.195261001586914
    4. ')
' → logprob: -10.195261001586914
    5. ')`' → logprob: -12.945261001586914
    6. ' )' → logprob: -13.320261001586914
    7. ')

' → logprob: -13.820261001586914
    8. ')`
' → logprob: -14.070261001586914
    9. '`)' → logprob: -14.195261001586914
    10. ' def' → logprob: -14.320261001586914

Token 54: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.020843740552663803
    2. '
' → logprob: -3.895843744277954
    3. '('' → logprob: -9.395843505859375
    4. ' def' → logprob: -9.520843505859375
    5. '()
' → logprob: -9.645843505859375
    6. '(def' → logprob: -10.020843505859375
    7. '(' → logprob: -11.645843505859375
    8. '  
' → logprob: -12.270843505859375
    9. '<|end|>' → logprob: -12.270843505859375
    10. '\' → logprob: -12.895843505859375

Token 55: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.5595399141311646
    2. ' dp' → logprob: -0.9345399141311646
    3. 'dp' → logprob: -3.934539794921875
    4. ' expected' → logprob: -4.809539794921875
    5. 'dfs' → logprob: -5.434539794921875
    6. ' f' → logprob: -6.434539794921875
    7. ' solve' → logprob: -6.684539794921875
    8. ' probability' → logprob: -8.809539794921875
    9. 'f' → logprob: -8.934539794921875
    10. 'expected' → logprob: -8.934539794921875

Token 56: '(k' (ID: 12125)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.1848640739917755
    2. '(' → logprob: -2.559864044189453
    3. '(m' → logprob: -3.059864044189453
    4. '(depth' → logprob: -3.684864044189453
    5. '(k' → logprob: -5.309864044189453
    6. '(pos' → logprob: -6.309864044189453
    7. '(x' → logprob: -6.434864044189453
    8. '(index' → logprob: -6.434864044189453
    9. '(idx' → logprob: -6.434864044189453
    10. '(s' → logprob: -6.559864044189453

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01230549719184637
    2. '):' → logprob: -4.51230525970459
    3. ',k' → logprob: -7.38730525970459
    4. ')' → logprob: -8.01230525970459
    5. ' ,' → logprob: -8.76230525970459
    6. ',n' → logprob: -10.63730525970459
    7. ',b' → logprob: -11.01230525970459
    8. '=' → logprob: -11.51230525970459
    9. ',m' → logprob: -11.76230525970459
    10. '):
' → logprob: -11.88730525970459

Token 58: ' r' (ID: 428)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.9653652310371399
    2. 'i' → logprob: -1.2153651714324951
    3. 's' → logprob: -2.465365171432495
    4. 'used' → logprob: -3.340365171432495
    5. 'l' → logprob: -3.590365171432495
    6. 'mask' → logprob: -3.590365171432495
    7. 'x' → logprob: -3.715365171432495
    8. 'state' → logprob: -4.590365409851074
    9. 't' → logprob: -4.715365409851074
    10. ' j' → logprob: -4.840365409851074

Token 59: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.41515615582466125
    2. 'em' → logprob: -1.4151561260223389
    3. ',' → logprob: -3.165156126022339
    4. 'emain' → logprob: -3.665156126022339
    5. 'm' → logprob: -4.415156364440918
    6. ')' → logprob: -5.165156364440918
    7. '):
' → logprob: -5.540156364440918
    8. 'ight' → logprob: -6.165156364440918
    9. 'ema' → logprob: -7.290156364440918
    10. 'ed' → logprob: -7.415156364440918

Token 60: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20736028254032135
    2. ' if' → logprob: -1.7073602676391602
    3. ':' → logprob: -6.33236026763916
    4. ')' → logprob: -6.45736026763916
    5. 'if' → logprob: -6.83236026763916
    6. ' ' → logprob: -7.58236026763916
    7. '   ' → logprob: -7.83236026763916
    8. ',' → logprob: -8.45736026763916
    9. ' return' → logprob: -9.45736026763916
    10. '<|end|>' → logprob: -9.95736026763916

Token 61: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6531394124031067
    2. ' if' → logprob: -0.7781394124031067
    3. '   ' → logprob: -4.403139591217041
    4. 'i' → logprob: -5.278139591217041
    5. ' ' → logprob: -6.403139591217041
    6. ' i' → logprob: -7.028139591217041
    7. '    ' → logprob: -9.403139114379883
    8. ')' → logprob: -9.653139114379883
    9. 's' → logprob: -10.028139114379883
    10. ',' → logprob: -10.278139114379883

Token 62: ' k' (ID: 372)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.28205606341362
    2. ' if' → logprob: -1.4070560932159424
    3. 'pass' → logprob: -8.032055854797363
    4. 'return' → logprob: -8.782055854797363
    5. ' pass' → logprob: -8.907055854797363
    6. 'i' → logprob: -8.907055854797363
    7. '   ' → logprob: -10.032055854797363
    8. ' return' → logprob: -10.407055854797363
    9. 'If' → logprob: -10.907055854797363
    10. ' ' → logprob: -11.282055854797363

Token 63: ':' (ID: 25)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7070457339286804
    2. ',' → logprob: -0.9570457339286804
    3. '==' → logprob: -2.457045793533325
    4. ')' → logprob: -3.457045793533325
    5. ' ,' → logprob: -6.582045555114746
    6. ',k' → logprob: -6.707045555114746
    7. '+' → logprob: -7.082045555114746
    8. '=' → logprob: -7.457045555114746
    9. ' ' → logprob: -8.332045555114746
    10. ' >=' → logprob: -8.582045555114746

Token 64: ' index' (ID: 3472)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.286226749420166
    2. ' number' → logprob: -2.786226749420166
    3. ' remaining' → logprob: -2.786226749420166
    4. 'current' → logprob: -3.036226749420166
    5. ' int' → logprob: -3.911226749420166
    6. 'number' → logprob: -4.536226749420166
    7. 'int' → logprob: -4.536226749420166
    8. 'remaining' → logprob: -4.911226749420166
    9. 'k' → logprob: -5.036226749420166
    10. ' the' → logprob: -5.161226749420166

Token 65: ' du' (ID: 1462)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6698741316795349
    2. ')' → logprob: -1.0448741912841797
    3. '<|end|>' → logprob: -2.1698741912841797
    4. '+' → logprob: -4.54487419128418
    5. ' +' → logprob: -5.54487419128418
    6. '<|end|>' → logprob: -6.41987419128418
    7. ',k' → logprob: -6.66987419128418
    8. ' ,' → logprob: -7.54487419128418
    9. '
' → logprob: -7.66987419128418
    10. '   ' → logprob: -7.79487419128418

Token 66: ' chat' (ID: 7999)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -1.810351848602295
    2. ' coin' → logprob: -2.435351848602295
    3. 's' → logprob: -2.560351848602295
    4. ' code' → logprob: -2.685351848602295
    5. ' joueur' → logprob: -2.810351848602295
    6. ' jour' → logprob: -2.935351848602295
    7. 'jour' → logprob: -3.185351848602295
    8. 'coin' → logprob: -3.560351848602295
    9. ' prochain' → logprob: -4.060351848602295
    10. 'pro' → logprob: -4.247851848602295

Token 67: ' envoyé' (ID: 119154)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10498198866844177
    2. ')' → logprob: -2.4799818992614746
    3. ' ,' → logprob: -4.354981899261475
    4. '<|end|>' → logprob: -6.604981899261475
    5. ' )' → logprob: -7.729981899261475
    6. '),' → logprob: -8.104982376098633
    7. ' ' → logprob: -8.729982376098633
    8. ',k' → logprob: -9.104982376098633
    9. '<|end|>' → logprob: -9.354982376098633
    10. 'k' → logprob: -9.479982376098633

Token 68: ' actuellement' (ID: 67741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08068466186523438
    2. ',' → logprob: -2.8306846618652344
    3. '<|end|>' → logprob: -4.580684661865234
    4. '   ' → logprob: -5.205684661865234
    5. '<|end|>' → logprob: -7.455684661865234
    6. ' ' → logprob: -7.705684661865234
    7. ' )' → logprob: -7.830684661865234
    8. ' ,' → logprob: -7.830684661865234
    9. '  ' → logprob: -8.580684661865234
    10. '):' → logprob: -8.705684661865234

Token 69: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6127890348434448
    2. '<|end|>' → logprob: -1.4877890348434448
    3. ':' → logprob: -2.4877891540527344
    4. '   ' → logprob: -2.6127891540527344
    5. '):' → logprob: -3.6127891540527344
    6. ',' → logprob: -3.6127891540527344
    7. '<|end|>' → logprob: -4.737789154052734
    8. ' ' → logprob: -5.112789154052734
    9. ' :' → logprob: -5.612789154052734
    10. '  ' → logprob: -7.487789154052734

Token 70: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28691327571868896
    2. ',' → logprob: -1.411913275718689
    3. '),' → logprob: -5.4119133949279785
    4. ' k' → logprob: -7.7869133949279785
    5. 'k' → logprob: -7.9119133949279785
    6. ')
' → logprob: -8.78691291809082
    7. ' ,' → logprob: -9.28691291809082
    8. ',k' → logprob: -9.53691291809082
    9. ' )' → logprob: -9.66191291809082
    10. ';' → logprob: -11.03691291809082

Token 71: '-based' (ID: 8235)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018313584849238396
    2. ',' → logprob: -4.893313407897949
    3. '-based' → logprob: -4.893313407897949
    4. '),' → logprob: -6.643313407897949
    5. 'based' → logprob: -7.393313407897949
    6. ' )' → logprob: -7.768313407897949
    7. 'index' → logprob: -8.64331340789795
    8. '-index' → logprob: -9.14331340789795
    9. 'k' → logprob: -9.39331340789795
    10. ' à' → logprob: -10.01831340789795

Token 72: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000657154421787709
    2. ',' → logprob: -7.750657081604004
    3. ' )' → logprob: -8.875657081604004
    4. '),' → logprob: -9.750657081604004
    5. '):' → logprob: -11.250657081604004
    6. ')
' → logprob: -11.500657081604004
    7. ' ' → logprob: -14.000657081604004
    8. ' ,' → logprob: -14.125657081604004
    9. '   ' → logprob: -14.250657081604004
    10. ',k' → logprob: -14.875657081604004

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041743792593479156
    2. ')' → logprob: -4.541743755340576
    3. ',' → logprob: -4.541743755340576
    4. '<|end|>' → logprob: -4.666743755340576
    5. ' ' → logprob: -5.791743755340576
    6. ':' → logprob: -6.041743755340576
    7. ' if' → logprob: -6.416743755340576
    8. '):' → logprob: -6.666743755340576
    9. '  ' → logprob: -7.166743755340576
    10. '<|end|>' → logprob: -7.791743755340576

Token 74: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.49667829275131226
    2. 'if' → logprob: -1.371678352355957
    3. '   ' → logprob: -2.246678352355957
    4. ',' → logprob: -3.996678352355957
    5. ')' → logprob: -4.871678352355957
    6. 'r' → logprob: -6.371678352355957
    7. ' ' → logprob: -6.871678352355957
    8. '<|end|>' → logprob: -7.121678352355957
    9. ' ,' → logprob: -7.996678352355957
    10. ' r' → logprob: -8.121678352355957

Token 75: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3644673228263855
    2. ' r' → logprob: -1.6144673824310303
    3. 'rest' → logprob: -3.3644673824310303
    4. ' rest' → logprob: -4.239467144012451
    5. 'remaining' → logprob: -4.489467144012451
    6. ' remaining' → logprob: -4.989467144012451
    7. 'nombre' → logprob: -4.989467144012451
    8. ' chats' → logprob: -5.614467144012451
    9. ' nombre' → logprob: -5.864467144012451
    10. 'reste' → logprob: -6.489467144012451

Token 76: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47810789942741394
    2. ')' → logprob: -1.8531079292297363
    3. ',' → logprob: -1.8531079292297363
    4. '=' → logprob: -3.6031079292297363
    5. ' =' → logprob: -4.103107929229736
    6. ' ):' → logprob: -4.728107929229736
    7. ':' → logprob: -4.853107929229736
    8. '<|end|>' → logprob: -6.353107929229736
    9. ' ,' → logprob: -7.353107929229736
    10. '):
' → logprob: -7.478107929229736

Token 77: ' la' (ID: 557)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.6764119267463684
    2. ' le' → logprob: -1.6764118671417236
    3. 'nombre' → logprob: -1.6764118671417236
    4. 'r' → logprob: -4.051412105560303
    5. 'le' → logprob: -4.176412105560303
    6. 'rest' → logprob: -4.301412105560303
    7. ' number' → logprob: -4.551412105560303
    8. ' remaining' → logprob: -5.051412105560303
    9. 'remaining' → logprob: -5.301412105560303
    10. ' rest' → logprob: -5.426412105560303

Token 78: ' salle' (ID: 35653)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -2.189622640609741
    2. 'ste' → logprob: -2.252122640609741
    3. 'main' → logprob: -2.502122640609741
    4. 'ng' → logprob: -2.627122640609741
    5. 'est' → logprob: -3.189622640609741
    6. 'este' → logprob: -3.252122640609741
    7. 'ma' → logprob: -3.252122640609741
    8. 'man' → logprob: -3.377122640609741
    9. 'm' → logprob: -3.939622640609741
    10. '
' → logprob: -4.06462287902832

Token 79: ' où' (ID: 15113)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.519818902015686
    2. ')' → logprob: -1.519818902015686
    3. ',' → logprob: -1.769818902015686
    4. ':' → logprob: -5.0198187828063965
    5. '<|end|>' → logprob: -6.5198187828063965
    6. '):
' → logprob: -6.5198187828063965
    7. ' ,' → logprob: -6.8948187828063965
    8. '),' → logprob: -7.3948187828063965
    9. '=' → logprob: -7.6448187828063965
    10. '[' → logprob: -7.6448187828063965

Token 80: ' l' (ID: 305)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.8153005838394165
    2. ' le' → logprob: -1.6903005838394165
    3. ' se' → logprob: -2.440300464630127
    4. 'se' → logprob: -2.440300464630127
    5. 'on' → logprob: -2.940300464630127
    6. ' on' → logprob: -3.065300464630127
    7. 'k' → logprob: -3.315300464630127
    8. 'l' → logprob: -4.315300464630127
    9. 'r' → logprob: -5.065300464630127
    10. 'chat' → logprob: -5.190300464630127

Token 81: ''on' (ID: 25812)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1641751527786255
    2. ' chat' → logprob: -1.9141751527786255
    3. 's' → logprob: -2.539175033569336
    4. 'e' → logprob: -2.664175033569336
    5. ''on' → logprob: -2.789175033569336
    6. ' on' → logprob: -2.914175033569336
    7. 'on' → logprob: -2.914175033569336
    8. ' a' → logprob: -3.164175033569336
    9. ' est' → logprob: -3.289175033569336
    10. 'chat' → logprob: -3.414175033569336

Token 82: ' doit' (ID: 21822)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.711580753326416
    2. 'est' → logprob: -1.211580753326416
    3. ' se' → logprob: -2.461580753326416
    4. 'reste' → logprob: -3.086580753326416
    5. 'a' → logprob: -3.211580753326416
    6. ' est' → logprob: -4.211580753326416
    7. 's' → logprob: -5.086580753326416
    8. ' a' → logprob: -5.836580753326416
    9. 'en' → logprob: -5.961580753326416
    10. 'tr' → logprob: -6.086580753326416

Token 83: ' commencer' (ID: 66055)
  Prédit: ' envoyer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' envoyer' → logprob: -0.6174145936965942
    2. 'env' → logprob: -0.9924145936965942
    3. 'mettre' → logprob: -4.492414474487305
    4. 'assign' → logprob: -4.742414474487305
    5. 's' → logprob: -4.867414474487305
    6. 'send' → logprob: -5.367414474487305
    7. 'se' → logprob: -5.367414474487305
    8. 'placer' → logprob: -5.492414474487305
    9. 'aller' → logprob: -5.492414474487305
    10. 'arr' → logprob: -5.992414474487305

Token 84: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22931422293186188
    2. '):' → logprob: -1.6043142080307007
    3. ',' → logprob: -6.47931432723999
    4. ' )' → logprob: -7.10431432723999
    5. 'dfs' → logprob: -7.85431432723999
    6. '):
' → logprob: -8.104313850402832
    7. 'def' → logprob: -8.854313850402832
    8. ' ):' → logprob: -8.979313850402832
    9. '   ' → logprob: -9.354313850402832
    10. 'from' → logprob: -9.479313850402832

Token 85: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014156460762023926
    2. ' )' → logprob: -4.389156341552734
    3. ',' → logprob: -7.014156341552734
    4. '):' → logprob: -9.139156341552734
    5. '),' → logprob: -9.389156341552734
    6. ' ' → logprob: -9.389156341552734
    7. 'r' → logprob: -9.639156341552734
    8. ' à' → logprob: -10.264156341552734
    9. 'dfs' → logprob: -10.264156341552734
    10. ' k' → logprob: -10.889156341552734

Token 86: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.08563432842493057
    2. ')' → logprob: -2.585634231567383
    3. '-' → logprob: -5.585634231567383
    4. ')-' → logprob: -6.960634231567383
    5. 'based' → logprob: -7.085634231567383
    6. '-)' → logprob: -7.585634231567383
    7. '+' → logprob: -8.335634231567383
    8. ',' → logprob: -8.710634231567383
    9. ' )' → logprob: -9.960634231567383
    10. '-base' → logprob: -10.585634231567383

Token 87: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011832444579340518
    2. ' )' → logprob: -9.750118255615234
    3. '):' → logprob: -10.000118255615234
    4. '),' → logprob: -12.500118255615234
    5. ')
' → logprob: -13.250118255615234
    6. '))' → logprob: -13.375118255615234
    7. ' ' → logprob: -13.625118255615234
    8. 'def' → logprob: -13.875118255615234
    9. ',' → logprob: -14.250118255615234
    10. ' ' → logprob: -14.375118255615234

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27181822061538696
    2. ':' → logprob: -2.021818161010742
    3. '):' → logprob: -2.396818161010742
    4. ')' → logprob: -4.646818161010742
    5. ' if' → logprob: -6.521818161010742
    6. 'if' → logprob: -6.646818161010742
    7. ' :' → logprob: -7.271818161010742
    8. '):
' → logprob: -7.396818161010742
    9. ' ' → logprob: -8.146818161010742
    10. ':
' → logprob: -8.771818161010742

Token 89: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3334158957004547
    2. ' if' → logprob: -1.7084158658981323
    3. 'if' → logprob: -2.833415985107422
    4. ')' → logprob: -3.458415985107422
    5. ' ' → logprob: -4.833415985107422
    6. ':' → logprob: -7.208415985107422
    7. '  ' → logprob: -7.458415985107422
    8. ' i' → logprob: -8.083415985107422
    9. ',' → logprob: -8.208415985107422
    10. '<|end|>' → logprob: -8.208415985107422

Token 90: ' retourne' (ID: 178818)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6372865438461304
    2. ' if' → logprob: -0.7622865438461304
    3. '   ' → logprob: -5.76228666305542
    4. ' res' → logprob: -7.63728666305542
    5. 'res' → logprob: -8.637286186218262
    6. 'dp' → logprob: -9.012286186218262
    7. 'result' → logprob: -9.387286186218262
    8. ')' → logprob: -9.512286186218262
    9. 'return' → logprob: -9.512286186218262
    10. 'i' → logprob: -9.762286186218262

Token 91: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9205474853515625
    2. ' float' → logprob: -1.4205474853515625
    3. ' la' → logprob: -2.1705474853515625
    4. ' ' → logprob: -2.1705474853515625
    5. 'prob' → logprob: -3.0455474853515625
    6. ' le' → logprob: -3.2955474853515625
    7. 'float' → logprob: -4.2955474853515625
    8. '1' → logprob: -4.2955474853515625
    9. ' un' → logprob: -5.5455474853515625
    10. ' ' → logprob: -5.5455474853515625

Token 92: ' prob' (ID: 4921)
  Prédit: ' prob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prob' → logprob: -0.5798336863517761
    2. 'prob' → logprob: -0.9548336863517761
    3. '   ' → logprob: -4.704833507537842
    4. ' probability' → logprob: -4.829833507537842
    5. ' probabil' → logprob: -4.829833507537842
    6. ' ' → logprob: -5.204833507537842
    7. ' meilleure' → logprob: -5.204833507537842
    8. ' pro' → logprob: -5.329833507537842
    9. ' plus' → logprob: -5.954833507537842
    10. 'pro' → logprob: -5.954833507537842

Token 93: 'abilité' (ID: 49097)
  Prédit: 'abilité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abilité' → logprob: -0.0026213128585368395
    2. 'abil' → logprob: -6.627621173858643
    3. 'alité' → logprob: -7.627621173858643
    4. 'ability' → logprob: -8.0026216506958
    5. 'ilité' → logprob: -8.2526216506958
    6. 'ab' → logprob: -9.0026216506958
    7. 'ility' → logprob: -10.3776216506958
    8. 'ail' → logprob: -10.8776216506958
    9. 'a' → logprob: -11.1276216506958
    10. 'ité' → logprob: -12.3776216506958

Token 94: ' maximale' (ID: 76380)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6980248093605042
    2. ':' → logprob: -1.5730247497558594
    3. ')' → logprob: -1.9480247497558594
    4. ' if' → logprob: -3.1980247497558594
    5. '<|end|>' → logprob: -3.3230247497558594
    6. ',' → logprob: -3.8230247497558594
    7. ' ' → logprob: -4.323024749755859
    8. '):' → logprob: -4.698024749755859
    9. 'def' → logprob: -5.448024749755859
    10. 'if' → logprob: -5.448024749755859

Token 96: ' tuer' (ID: 161914)
  Prédit: 'ré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ré' → logprob: -1.3324387073516846
    2. 'succ' → logprob: -1.4574387073516846
    3. ' réussite' → logprob: -2.0824387073516846
    4. 're' → logprob: -2.4574387073516846
    5. 'su' → logprob: -2.4574387073516846
    6. 'success' → logprob: -2.9574387073516846
    7. ' réussir' → logprob: -4.0824384689331055
    8. 'cho' → logprob: -4.2074384689331055
    9. 'contin' → logprob: -4.2074384689331055
    10. ' succès' → logprob: -4.8324384689331055

Token 97: ' tous' (ID: 10688)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.6136097311973572
    2. ' le' → logprob: -1.988609790802002
    3. 'les' → logprob: -2.363609790802002
    4. ' les' → logprob: -2.488609790802002
    5. '_' → logprob: -3.363609790802002
    6. 'all' → logprob: -4.488609790802002
    7. ' k' → logprob: -4.613609790802002
    8. '_k' → logprob: -4.738609790802002
    9. ' tous' → logprob: -4.738609790802002
    10. '<|end|>' → logprob: -4.738609790802002

Token 98: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.5268675684928894
    2. ' les' → logprob: -0.9018675684928894
    3. 'le' → logprob: -7.276867389678955
    4. '```' → logprob: -7.401867389678955
    5. ' ' → logprob: -7.526867389678955
    6. ' the' → logprob: -8.401867866516113
    7. '<|end|>' → logprob: -8.401867866516113
    8. 'the' → logprob: -8.526867866516113
    9. 'l' → logprob: -8.964367866516113
    10. 's' → logprob: -9.026867866516113

Token 99: ' ennem' (ID: 164783)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.5524991154670715
    2. ' chats' → logprob: -0.9274991154670715
    3. 'chat' → logprob: -4.552499294281006
    4. 's' → logprob: -5.677499294281006
    5. ' chat' → logprob: -5.802499294281006
    6. 'k' → logprob: -5.927499294281006
    7. ' k' → logprob: -6.677499294281006
    8. 'rats' → logprob: -6.802499294281006
    9. 'remaining' → logprob: -7.052499294281006
    10. ' rest' → logprob: -7.052499294281006

Token 100: 'is' (ID: 276)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.30942481756210327
    2. 'is' → logprob: -2.184424877166748
    3. 'emis' → logprob: -3.184424877166748
    4. 'ais' → logprob: -3.309424877166748
    5. 'emies' → logprob: -3.809424877166748
    6. 's' → logprob: -4.184424877166748
    7. 'és' → logprob: -4.309424877166748
    8. 'ies' → logprob: -5.434424877166748
    9. 'em' → logprob: -5.559424877166748
    10. 'e' → logprob: -6.059424877166748

Token 101: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7408245205879211
    2. '):' → logprob: -1.2408244609832764
    3. ':' → logprob: -1.4908244609832764
    4. ',' → logprob: -5.8658246994018555
    5. ')' → logprob: -6.7408246994018555
    6. 'def' → logprob: -6.9908246994018555
    7. '(k' → logprob: -7.2408246994018555
    8. '):
' → logprob: -7.4908246994018555
    9. ']:' → logprob: -7.4908246994018555
    10. '():' → logprob: -7.6158246994018555

Token 102: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.2273702472448349
    2. 'k' → logprob: -2.102370262145996
    3. 'part' → logprob: -2.852370262145996
    4. 'la' → logprob: -5.227370262145996
    5. 'from' → logprob: -5.352370262145996
    6. 'l' → logprob: -5.352370262145996
    7. 'm' → logprob: -5.852370262145996
    8. 'r' → logprob: -5.977370262145996
    9. '```' → logprob: -7.477370262145996
    10. 'n' → logprob: -8.227370262145996

Token 103: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8392688632011414
    2. '(k' → logprob: -1.0892689228057861
    3. ' k' → logprob: -1.9642689228057861
    4. ' du' → logprob: -2.714268922805786
    5. 'de' → logprob: -4.464268684387207
    6. ' des' → logprob: -5.589268684387207
    7. ')' → logprob: -5.839268684387207
    8. 'du' → logprob: -6.214268684387207
    9. ' d' → logprob: -6.589268684387207
    10. ' (' → logprob: -6.714268684387207

Token 104: ' la' (ID: 557)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.3829493522644043
    2. 'k' → logprob: -1.2579493522644043
    3. '(k' → logprob: -3.7579493522644043
    4. ' (' → logprob: -4.882949352264404
    5. ' r' → logprob: -6.882949352264404
    6. '(' → logprob: -7.632949352264404
    7. 'r' → logprob: -7.757949352264404
    8. ' ici' → logprob: -8.257949829101562
    9. '(r' → logprob: -9.007949829101562
    10. ' here' → logprob: -9.257949829101562

Token 105: ' salle' (ID: 35653)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9609431624412537
    2. ' salle' → logprob: -1.5859432220458984
    3. 'k' → logprob: -1.8359432220458984
    4. ' k' → logprob: -1.9609432220458984
    5. ' current' → logprob: -4.210943222045898
    6. 'ligne' → logprob: -4.210943222045898
    7. '```' → logprob: -4.585943222045898
    8. ' ligne' → logprob: -4.585943222045898
    9. 'position' → logprob: -4.710943222045898
    10. 'current' → logprob: -4.960943222045898

Token 106: ' r' (ID: 428)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_k' → logprob: -1.2200829982757568
    2. 'k' → logprob: -1.5950829982757568
    3. ' k' → logprob: -1.7200829982757568
    4. ',' → logprob: -2.470082998275757
    5. '(k' → logprob: -3.220082998275757
    6. ')' → logprob: -3.220082998275757
    7. '<|end|>' → logprob: -3.220082998275757
    8. ' ,' → logprob: -3.970082998275757
    9. 'r' → logprob: -4.220083236694336
    10. '   ' → logprob: -4.345083236694336

Token 107: ' avec' (ID: 3937)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.043897006660699844
    2. ')' → logprob: -3.6688969135284424
    3. '   ' → logprob: -4.1688971519470215
    4. ':' → logprob: -6.7938971519470215
    5. '):
' → logprob: -7.7938971519470215
    6. ' ):' → logprob: -8.793896675109863
    7. ',' → logprob: -8.918896675109863
    8. ' ' → logprob: -9.918896675109863
    9. '  ' → logprob: -10.543896675109863
    10. ' :' → logprob: -10.668896675109863

Token 108: ' les' (ID: 1341)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.07321248948574066
    2. 'k' → logprob: -2.6982123851776123
    3. ' l' → logprob: -7.948212623596191
    4. ')' → logprob: -7.948212623596191
    5. 'le' → logprob: -8.323212623596191
    6. ' la' → logprob: -8.323212623596191
    7. ' les' → logprob: -8.448212623596191
    8. ' le' → logprob: -8.448212623596191
    9. 'prob' → logprob: -8.698212623596191
    10. '```' → logprob: -8.823212623596191

Token 109: ' chats' (ID: 60114)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6628949046134949
    2. ' k' → logprob: -1.1628949642181396
    3. ' chats' → logprob: -2.1628949642181396
    4. 'ch' → logprob: -3.7878949642181396
    5. 'm' → logprob: -4.9128947257995605
    6. ' ennem' → logprob: -5.5378947257995605
    7. 's' → logprob: -5.6628947257995605
    8. ' m' → logprob: -5.7878947257995605
    9. 'prob' → logprob: -6.1628947257995605
    10. 'enn' → logprob: -6.4128947257995605

Token 110: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09535913169384003
    2. '):' → logprob: -3.0953590869903564
    3. '   ' → logprob: -3.2203590869903564
    4. ' :' → logprob: -6.4703593254089355
    5. ')' → logprob: -6.5953593254089355
    6. ':return' → logprob: -6.9703593254089355
    7. '<|end|>' → logprob: -7.7203593254089355
    8. ':
' → logprob: -7.7203593254089355
    9. ',' → logprob: -8.470358848571777
    10. '():' → logprob: -8.595358848571777

Token 111: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07741567492485046
    2. ' k' → logprob: -2.702415704727173
    3. 'index' → logprob: -6.202415466308594
    4. 'l' → logprob: -6.577415466308594
    5. 'indice' → logprob: -6.577415466308594
    6. 'indices' → logprob: -7.702415466308594
    7. ' index' → logprob: -7.952415466308594
    8. 'idx' → logprob: -8.202415466308594
    9. ' l' → logprob: -8.327415466308594
    10. 'r' → logprob: -8.452415466308594

Token 112: ' à' (ID: 1221)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007329510059207678
    2. ')' → logprob: -5.38232946395874
    3. ':' → logprob: -6.63232946395874
    4. '   ' → logprob: -7.38232946395874
    5. '):
' → logprob: -7.75732946395874
    6. ',' → logprob: -8.632329940795898
    7. '+' → logprob: -10.382329940795898
    8. 'def' → logprob: -11.382329940795898
    9. ' ):' → logprob: -11.632329940795898
    10. '  ' → logprob: -11.632329940795898

Token 113: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.14429986476898193
    2. ' m' → logprob: -2.3942999839782715
    3. 'n' → logprob: -4.0192999839782715
    4. ' n' → logprob: -4.3942999839782715
    5. 'k' → logprob: -4.7692999839782715
    6. ' k' → logprob: -5.6442999839782715
    7. ')' → logprob: -8.269299507141113
    8. 'r' → logprob: -9.144299507141113
    9. 'end' → logprob: -9.394299507141113
    10. ',' → logprob: -9.894299507141113

Token 114: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008518951013684273
    2. ')' → logprob: -4.883519172668457
    3. '):
' → logprob: -7.508519172668457
    4. '   ' → logprob: -8.383519172668457
    5. ':' → logprob: -10.008519172668457
    6. ' ):' → logprob: -10.508519172668457
    7. ',' → logprob: -11.133519172668457
    8. ' ' → logprob: -12.008519172668457
    9. '*' → logprob: -12.133519172668457
    10. '**' → logprob: -12.508519172668457

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.407366916188039e-05
    2. ' ' → logprob: -11.000054359436035
    3. '-' → logprob: -11.250054359436035
    4. 'm' → logprob: -11.750054359436035
    5. 'k' → logprob: -11.875054359436035
    6. '```' → logprob: -13.250054359436035
    7. ')' → logprob: -13.625054359436035
    8. ',' → logprob: -13.875054359436035
    9. 's' → logprob: -14.312554359436035
    10. ' -' → logprob: -14.375054359436035

Token 116: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43989256024360657
    2. ':' → logprob: -1.1898925304412842
    3. '):' → logprob: -3.064892530441284
    4. ')' → logprob: -7.314892768859863
    5. ' :' → logprob: -7.314892768859863
    6. '<|end|>' → logprob: -7.314892768859863
    7. ':
' → logprob: -7.564892768859863
    8. '():' → logprob: -7.689892768859863
    9. ' ' → logprob: -7.939892768859863
    10. ',' → logprob: -8.064892768859863

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9002792835235596
    2. ':' → logprob: -1.0252792835235596
    3. '):' → logprob: -1.6502792835235596
    4. ')' → logprob: -4.0252790451049805
    5. '):
' → logprob: -5.4002790451049805
    6. ' ' → logprob: -5.4002790451049805
    7. 'if' → logprob: -5.5252790451049805
    8. ' :' → logprob: -5.6502790451049805
    9. ':
' → logprob: -5.7752790451049805
    10. ' if' → logprob: -6.4002790451049805

Token 118: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06423269957304001
    2. ' if' → logprob: -3.314232587814331
    3. '   ' → logprob: -3.689232587814331
    4. 'res' → logprob: -7.93923282623291
    5. 'prob' → logprob: -8.43923282623291
    6. 'max' → logprob: -10.06423282623291
    7. 'pro' → logprob: -10.18923282623291
    8. 'return' → logprob: -10.43923282623291
    9. ' res' → logprob: -10.43923282623291
    10. 'i' → logprob: -11.18923282623291

Token 119: ' r' (ID: 428)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4741133749485016
    2. ' k' → logprob: -0.9741133451461792
    3. ' r' → logprob: -11.224113464355469
    4. 'r' → logprob: -11.224113464355469
    5. '   ' → logprob: -12.099113464355469
    6. ' ' → logprob: -13.099113464355469
    7. '	k' → logprob: -14.599113464355469
    8. 'm' → logprob: -14.974113464355469
    9. '  ' → logprob: -15.349113464355469
    10. '(k' → logprob: -15.474113464355469

Token 120: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5894867777824402
    2. ' ==' → logprob: -0.8394867777824402
    3. ' >=' → logprob: -4.964486598968506
    4. '>=' → logprob: -5.214486598968506
    5. '=' → logprob: -7.589486598968506
    6. '>' → logprob: -8.589487075805664
    7. '   ' → logprob: -9.589487075805664
    8. ':' → logprob: -9.964487075805664
    9. ' >' → logprob: -10.214487075805664
    10. ')' → logprob: -10.214487075805664

Token 121: ' n' (ID: 297)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.11494380980730057
    2. 'n' → logprob: -2.364943742752075
    3. ' m' → logprob: -4.864943981170654
    4. ' n' → logprob: -4.989943981170654
    5. '0' → logprob: -9.989943504333496
    6. '-' → logprob: -10.864943504333496
    7. '   ' → logprob: -11.239943504333496
    8. '1' → logprob: -11.739943504333496
    9. ' ' → logprob: -11.739943504333496
    10. 'k' → logprob: -12.364943504333496

Token 122: ':
' (ID: 734)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.40667635202407837
    2. ':' → logprob: -1.2816762924194336
    3. ' -' → logprob: -2.9066762924194336
    4. ':
' → logprob: -7.031676292419434
    5. '   ' → logprob: -7.906676292419434
    6. ' or' → logprob: -8.156676292419434
    7. ':return' → logprob: -8.281676292419434
    8. ' ' → logprob: -10.406676292419434
    9. 'or' → logprob: -10.906676292419434
    10. ' :' → logprob: -11.281676292419434

Token 123: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19496041536331177
    2. '       ' → logprob: -1.819960355758667
    3. ' return' → logprob: -4.569960594177246
    4. 'return' → logprob: -6.194960594177246
    5. '<|end|>' → logprob: -6.819960594177246
    6. '
' → logprob: -7.569960594177246
    7. ':return' → logprob: -8.319960594177246
    8. '0' → logprob: -8.444960594177246
    9. '	return' → logprob: -8.819960594177246
    10. '    
' → logprob: -9.069960594177246

Token 124: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.15389245748519897
    2. ' return' → logprob: -2.4038925170898438
    3. '   ' → logprob: -3.1538925170898438
    4. '       ' → logprob: -4.653892517089844
    5. '	return' → logprob: -10.778892517089844
    6. '
' → logprob: -11.028892517089844
    7. ':return' → logprob: -11.778892517089844
    8. ' ' → logprob: -12.528892517089844
    9. '    ' → logprob: -13.153892517089844
    10. '    
' → logprob: -13.278892517089844

Token 125: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07329614460468292
    2. '0' → logprob: -2.698296070098877
    3. ' ' → logprob: -5.698296070098877
    4. '   ' → logprob: -13.948296546936035
    5. '(' → logprob: -14.573296546936035
    6. 'prob' → logprob: -15.323296546936035
    7. '  ' → logprob: -15.448296546936035
    8. 'k' → logprob: -15.698296546936035
    9. ' ' → logprob: -15.698296546936035
    10. '
' → logprob: -16.01079559326172

Token 126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04862188547849655
    2. '0' → logprob: -3.048621892929077
    3. ' ' → logprob: -10.673622131347656
    4. '(' → logprob: -12.048622131347656
    5. 'float' → logprob: -13.173622131347656
    6. 'prob' → logprob: -13.173622131347656
    7. 'k' → logprob: -13.923622131347656
    8. '
' → logprob: -15.798622131347656
    9. 'int' → logprob: -15.923622131347656
    10. '   ' → logprob: -16.111122131347656

Token 127: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8076512217521667
    2. '<|end|>' → logprob: -0.8076512217521667
    3. '
' → logprob: -3.0576512813568115
    4. '    
' → logprob: -4.057651042938232
    5. ')' → logprob: -4.307651042938232
    6. '0' → logprob: -5.057651042938232
    7. '  
' → logprob: -5.432651042938232
    8. '<|end|>' → logprob: -5.807651042938232
    9. ' ' → logprob: -5.932651042938232
    10. '  ' → logprob: -5.932651042938232

Token 128: '0' (ID: 15)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8861952424049377
    2. '
' → logprob: -1.511195182800293
    3. '    
' → logprob: -1.511195182800293
    4. '  
' → logprob: -2.886195182800293
    5. '0' → logprob: -3.636195182800293
    6. '   
' → logprob: -3.886195182800293
    7. 'if' → logprob: -4.386195182800293
    8. '

' → logprob: -4.761195182800293
    9. '\n' → logprob: -5.011195182800293
    10. ' 
' → logprob: -5.761195182800293

Token 129: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020057346671819687
    2. '<|end|>' → logprob: -4.645057201385498
    3. '    
' → logprob: -5.645057201385498
    4. ' ' → logprob: -6.020057201385498
    5. '\n' → logprob: -6.895057201385498
    6. '
' → logprob: -7.020057201385498
    7. ')' → logprob: -7.645057201385498
    8. '  ' → logprob: -7.770057201385498
    9. '  
' → logprob: -7.895057201385498
    10. ' 
' → logprob: -8.020057678222656

Token 130: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7733898162841797
    2. '
' → logprob: -1.6483898162841797
    3. '\n' → logprob: -1.7733898162841797
    4. '    
' → logprob: -2.1483898162841797
    5. '  
' → logprob: -4.02338981628418
    6. ')' → logprob: -4.27338981628418
    7. ' 
' → logprob: -5.14838981628418
    8. '   
' → logprob: -5.77338981628418
    9. '<|end|>' → logprob: -5.77338981628418
    10. ' ' → logprob: -6.02338981628418

Token 131: ' tous' (ID: 10688)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8288282752037048
    2. '1' → logprob: -1.3288283348083496
    3. 'return' → logprob: -2.2038283348083496
    4. 'k' → logprob: -2.4538283348083496
    5. '#' → logprob: -2.7038283348083496
    6. ' ' → logprob: -3.9538283348083496
    7. 'True' → logprob: -5.32882833480835
    8. '   ' → logprob: -5.45382833480835
    9. 'r' → logprob: -5.95382833480835
    10. ' return' → logprob: -6.70382833480835

Token 132: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.18703433871269226
    2. 'enn' → logprob: -2.5620343685150146
    3. 'cats' → logprob: -3.6870343685150146
    4. ' les' → logprob: -4.4370341300964355
    5. 'en' → logprob: -4.5620341300964355
    6. ' ennem' → logprob: -4.8120341300964355
    7. '<|end|>' → logprob: -4.9370341300964355
    8. 'r' → logprob: -5.3120341300964355
    9. 'k' → logprob: -5.4370341300964355
    10. 't' → logprob: -5.6870341300964355

Token 133: ' ennem' (ID: 164783)
  Prédit: 'enn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enn' → logprob: -0.861516535282135
    2. 'ch' → logprob: -1.1115164756774902
    3. ' ennem' → logprob: -1.9865164756774902
    4. ' chats' → logprob: -3.4865164756774902
    5. 'en' → logprob: -3.9865164756774902
    6. 'k' → logprob: -4.11151647567749
    7. 'chat' → logprob: -4.36151647567749
    8. 'enem' → logprob: -4.98651647567749
    9. 't' → logprob: -5.86151647567749
    10. '```' → logprob: -5.86151647567749

Token 134: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.01593230478465557
    2. 's' → logprob: -4.390932083129883
    3. 'emis' → logprob: -6.890932083129883
    4. 'sis' → logprob: -7.390932083129883
    5. 'es' → logprob: -8.015932083129883
    6. 'és' → logprob: -8.265932083129883
    7. 'ts' → logprob: -8.890932083129883
    8. 'emies' → logprob: -9.140932083129883
    9. 'ais' → logprob: -9.515932083129883
    10. '#' → logprob: -9.515932083129883

Token 135: ' sont' (ID: 5242)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.3082440495491028
    2. 's' → logprob: -1.808243989944458
    3. 't' → logprob: -3.308243989944458
    4. 'tu' → logprob: -3.433243989944458
    5. ' ont' → logprob: -4.058244228363037
    6. 'k' → logprob: -4.933244228363037
    7. ' tu' → logprob: -5.433244228363037
    8. 'have' → logprob: -7.183244228363037
    9. ' sont' → logprob: -7.933244228363037
    10. ' have' → logprob: -8.183243751525879

Token 136: ' tu' (ID: 3334)
  Prédit: 'tu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tu' → logprob: -0.12558110058307648
    2. 't' → logprob: -2.2505810260772705
    3. 'neutral' → logprob: -5.75058126449585
    4. 'el' → logprob: -5.87558126449585
    5. 'k' → logprob: -6.00058126449585
    6. '```' → logprob: -7.37558126449585
    7. 'vain' → logprob: -7.62558126449585
    8. 'é' → logprob: -7.87558126449585
    9. 'atta' → logprob: -8.125580787658691
    10. 'ab' → logprob: -8.500580787658691

Token 137: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.001889137551188469
    2. 's' → logprob: -6.876889228820801
    3. 'es' → logprob: -7.376889228820801
    4. 't' → logprob: -9.5018892288208
    5. 'é' → logprob: -10.1268892288208
    6. 'ts' → logprob: -10.3768892288208
    7. 'tu' → logprob: -10.7518892288208
    8. '```' → logprob: -11.2518892288208
    9. 'rés' → logprob: -11.6268892288208
    10. '``' → logprob: -11.8768892288208

Token 138: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015504523180425167
    2. '    
' → logprob: -7.251550674438477
    3. '<|end|>' → logprob: -7.751550674438477
    4. '
' → logprob: -8.501550674438477
    5. ')' → logprob: -9.751550674438477
    6. '  
' → logprob: -10.626550674438477
    7. '<|end|>' → logprob: -10.876550674438477
    8. '  ' → logprob: -11.001550674438477
    9. ' if' → logprob: -11.126550674438477
    10. 'if' → logprob: -11.376550674438477

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07661493122577667
    2. ')' → logprob: -2.8266148567199707
    3. 'if' → logprob: -5.826614856719971
    4. ' ' → logprob: -5.951614856719971
    5. ' if' → logprob: -5.951614856719971
    6. '    
' → logprob: -6.576614856719971
    7. '    ' → logprob: -6.826614856719971
    8. '<|end|>' → logprob: -7.326614856719971
    9. ' )' → logprob: -7.701614856719971
    10. '  ' → logprob: -7.701614856719971

Token 140: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.010603712871670723
    2. 'res' → logprob: -4.760603904724121
    3. 'max' → logprob: -7.510603904724121
    4. ' if' → logprob: -7.760603904724121
    5. 'next' → logprob: -8.135603904724121
    6. '   ' → logprob: -8.135603904724121
    7. 'ans' → logprob: -9.385603904724121
    8. 'best' → logprob: -9.385603904724121
    9. 'ret' → logprob: -10.010603904724121
    10. 'key' → logprob: -10.010603904724121

Token 141: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.09228525310754776
    2. ' k' → logprob: -2.46728515625
    3. 'r' → logprob: -5.96728515625
    4. ' r' → logprob: -7.34228515625
    5. 'm' → logprob: -9.34228515625
    6. ' m' → logprob: -11.09228515625
    7. 'n' → logprob: -11.71728515625
    8. ' ' → logprob: -11.96728515625
    9. ' n' → logprob: -12.77978515625
    10. '   ' → logprob: -12.84228515625

Token 142: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12586095929145813
    2. '==' → logprob: -2.3758609294891357
    3. ' >=' → logprob: -3.8758609294891357
    4. '>=' → logprob: -6.250861167907715
    5. ' >' → logprob: -6.375861167907715
    6. '   ' → logprob: -7.750861167907715
    7. '>' → logprob: -8.625861167907715
    8. ' <' → logprob: -8.750861167907715
    9. ' <=' → logprob: -9.125861167907715
    10. '<' → logprob: -10.250861167907715

Token 143: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.4855663721391466e-05
    2. ' m' → logprob: -11.125015258789062
    3. '   ' → logprob: -16.625015258789062
    4. '
' → logprob: -18.125015258789062
    5. ' ' → logprob: -18.375015258789062
    6. '	m' → logprob: -18.500015258789062
    7. '<|end|>' → logprob: -18.625015258789062
    8. 'n' → logprob: -19.000015258789062
    9. 'len' → logprob: -19.125015258789062
    10. '  ' → logprob: -19.500015258789062

Token 144: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1478680670261383
    2. ':
' → logprob: -2.0228681564331055
    3. '   ' → logprob: -5.8978681564331055
    4. ':return' → logprob: -6.1478681564331055
    5. '==' → logprob: -9.647868156433105
    6. ' or' → logprob: -10.022868156433105
    7. 'n' → logprob: -10.147868156433105
    8. '):
' → logprob: -10.272868156433105
    9. '):' → logprob: -10.897868156433105
    10. '=' → logprob: -11.272868156433105

Token 145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14174480736255646
    2. '   ' → logprob: -2.64174485206604
    3. ' return' → logprob: -3.39174485206604
    4. 'return' → logprob: -4.016744613647461
    5. '0' → logprob: -4.766744613647461
    6. '
' → logprob: -7.641744613647461
    7. ' ' → logprob: -9.766744613647461
    8. '```' → logprob: -10.266744613647461
    9. '        
' → logprob: -10.641744613647461
    10. '    
' → logprob: -10.641744613647461

Token 146: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1363636702299118
    2. ' return' → logprob: -2.6363637447357178
    3. '   ' → logprob: -2.8863637447357178
    4. '       ' → logprob: -9.886363983154297
    5. '
' → logprob: -11.511363983154297
    6. '0' → logprob: -11.761363983154297
    7. '  ' → logprob: -13.136363983154297
    8. '	return' → logprob: -13.511363983154297
    9. ' ' → logprob: -13.761363983154297
    10. '    
' → logprob: -14.136363983154297

Token 147: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004315036640036851
    2. ' ' → logprob: -7.750431537628174
    3. '   ' → logprob: -14.750431060791016
    4. '1' → logprob: -15.750431060791016
    5. '  ' → logprob: -16.500431060791016
    6. ' ' → logprob: -16.625431060791016
    7. 'prob' → logprob: -17.375431060791016
    8. '```' → logprob: -17.937931060791016
    9. '
' → logprob: -18.187931060791016
    10. 'float' → logprob: -18.250431060791016

Token 148: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.240481914370321e-05
    2. ' ' → logprob: -9.875052452087402
    3. '1' → logprob: -15.125052452087402
    4. 'prob' → logprob: -15.250052452087402
    5. '   ' → logprob: -15.375052452087402
    6. '```' → logprob: -17.062551498413086
    7. '  ' → logprob: -17.375051498413086
    8. '000' → logprob: -17.750051498413086
    9. 'float' → logprob: -17.812551498413086
    10. '
' → logprob: -18.062551498413086

Token 149: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.951771421066951e-05
    2. '<|end|>' → logprob: -10.500029563903809
    3. ')' → logprob: -14.375029563903809
    4. '<|end|>' → logprob: -14.625029563903809
    5. '0' → logprob: -15.250029563903809
    6. ' ' → logprob: -15.375029563903809
    7. '*' → logprob: -16.375028610229492
    8. '```' → logprob: -16.500028610229492
    9. '   ' → logprob: -16.750028610229492
    10. ' .' → logprob: -16.750028610229492

Token 150: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -15.375000953674316
    3. 'return' → logprob: -16.125
    4. '   ' → logprob: -16.25
    5. ' ' → logprob: -18.0
    6. '    ' → logprob: -19.375
    7. '       ' → logprob: -19.625
    8. 'float' → logprob: -20.0
    9. '    
' → logprob: -20.125
    10. '  ' → logprob: -20.25

Token 151: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06531572341918945
    2. '    
' → logprob: -2.9403157234191895
    3. '
' → logprob: -4.8153157234191895
    4. 'prob' → logprob: -6.8153157234191895
    5. '  
' → logprob: -7.5653157234191895
    6. '<|end|>' → logprob: -8.690315246582031
    7. '   
' → logprob: -9.315315246582031
    8. 'max' → logprob: -10.065315246582031
    9. ')' → logprob: -10.065315246582031
    10. '```' → logprob: -10.440315246582031

Token 152: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027940938249230385
    2. '    
' → logprob: -4.02794075012207
    3. '
' → logprob: -5.15294075012207
    4. '  
' → logprob: -7.15294075012207
    5. ')' → logprob: -7.27794075012207
    6. '<|end|>' → logprob: -7.40294075012207
    7. 'prob' → logprob: -7.52794075012207
    8. '  ' → logprob: -8.27794075012207
    9. ' ' → logprob: -8.77794075012207
    10. '   
' → logprob: -8.77794075012207

Token 153: ' plus' (ID: 2932)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0667300671339035
    2. 'return' → logprob: -3.69173002243042
    3. ' False' → logprob: -4.19173002243042
    4. '#' → logprob: -4.31673002243042
    5. 'r' → logprob: -6.06673002243042
    6. 'prob' → logprob: -6.06673002243042
    7. '0' → logprob: -6.19173002243042
    8. 'True' → logprob: -6.31673002243042
    9. '   ' → logprob: -7.06673002243042
    10. ' return' → logprob: -7.56673002243042

Token 154: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.07110212743282318
    2. ' de' → logprob: -3.1961021423339844
    3. 'd' → logprob: -4.321102142333984
    4. 'possible' → logprob: -4.821102142333984
    5. 'auc' → logprob: -5.821102142333984
    6. ' aucun' → logprob: -7.071102142333984
    7. ' aucune' → logprob: -7.696102142333984
    8. ' possible' → logprob: -7.821102142333984
    9. 'à' → logprob: -7.946102142333984
    10. 'poss' → logprob: -8.071102142333984

Token 155: ' chats' (ID: 60114)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.021332107484340668
    2. 'chat' → logprob: -4.521332263946533
    3. ' chats' → logprob: -4.771332263946533
    4. 'cats' → logprob: -6.771332263946533
    5. 'chars' → logprob: -9.271331787109375
    6. 'chi' → logprob: -9.396331787109375
    7. 's' → logprob: -9.646331787109375
    8. 'Chats' → logprob: -10.146331787109375
    9. '```' → logprob: -10.271331787109375
    10. ' chat' → logprob: -10.521331787109375

Token 156: ' disponible' (ID: 32165)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006663146894425154
    2. '    
' → logprob: -5.8816633224487305
    3. '<|end|>' → logprob: -5.8816633224487305
    4. '
' → logprob: -7.8816633224487305
    5. '<|end|>' → logprob: -8.50666332244873
    6. ',' → logprob: -9.38166332244873
    7. '  ' → logprob: -9.50666332244873
    8. '  
' → logprob: -9.88166332244873
    9. ')' → logprob: -10.25666332244873
    10. 'n' → logprob: -10.63166332244873

Token 157: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029245620593428612
    2. '    
' → logprob: -3.654245615005493
    3. 'prob' → logprob: -6.779245853424072
    4. '
' → logprob: -6.904245853424072
    5. '  
' → logprob: -8.154245376586914
    6. 'r' → logprob: -9.154245376586914
    7. '   
' → logprob: -10.029245376586914
    8. 's' → logprob: -10.029245376586914
    9. '    

' → logprob: -10.154245376586914
    10. ',' → logprob: -10.404245376586914

Token 158: ' impossible' (ID: 19786)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4290808439254761
    2. '   ' → logprob: -1.554080843925476
    3. ' return' → logprob: -2.5540809631347656
    4. ' mais' → logprob: -4.179080963134766
    5. ' ' → logprob: -4.304080963134766
    6. 'but' → logprob: -4.929080963134766
    7. ' but' → logprob: -5.054080963134766
    8. 'mais' → logprob: -5.304080963134766
    9. '  ' → logprob: -5.804080963134766
    10. '#' → logprob: -6.054080963134766

Token 159: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012699175626039505
    2. '    
' → logprob: -4.637699127197266
    3. 's' → logprob: -7.012699127197266
    4. 'return' → logprob: -7.887699127197266
    5. 'prob' → logprob: -7.887699127197266
    6. '  
' → logprob: -8.387699127197266
    7. '  ' → logprob: -8.512699127197266
    8. ',' → logprob: -8.887699127197266
    9. '.' → logprob: -9.137699127197266
    10. 'r' → logprob: -9.637699127197266

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02130258083343506
    2. '    
' → logprob: -4.896302700042725
    3. 'prob' → logprob: -5.146302700042725
    4. 'max' → logprob: -5.771302700042725
    5. ' max' → logprob: -6.521302700042725
    6. 'res' → logprob: -7.021302700042725
    7. ' res' → logprob: -7.521302700042725
    8. '  
' → logprob: -8.271302223205566
    9. ' next' → logprob: -8.646302223205566
    10. '
' → logprob: -8.771302223205566

Token 161: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.532293438911438
    2. 'take' → logprob: -1.032293438911438
    3. 'prob' → logprob: -4.407293319702148
    4. '#' → logprob: -4.532293319702148
    5. 'use' → logprob: -5.157293319702148
    6. 'option' → logprob: -5.157293319702148
    7. 'return' → logprob: -5.907293319702148
    8. 'p' → logprob: -6.032293319702148
    9. 'ret' → logprob: -6.032293319702148
    10. 'pick' → logprob: -6.407293319702148

Token 162: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04863414540886879
    2. '=' → logprob: -3.0486340522766113
    3. ' ' → logprob: -11.04863452911377
    4. ',' → logprob: -11.04863452911377
    5. '   ' → logprob: -12.17363452911377
    6. ')' → logprob: -13.17363452911377
    7. '  ' → logprob: -13.42363452911377
    8. 'max' → logprob: -13.92363452911377
    9. ' ' → logprob: -14.04863452911377
    10. '=max' → logprob: -14.04863452911377

Token 163: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04529505968093872
    2. ' ' → logprob: -3.170295000076294
    3. 'max' → logprob: -6.920295238494873
    4. 'prob' → logprob: -7.420295238494873
    5. ' max' → logprob: -7.920295238494873
    6. 'dfs' → logprob: -8.420294761657715
    7. ' dfs' → logprob: -9.920294761657715
    8. ' prob' → logprob: -10.045294761657715
    9. '   ' → logprob: -11.795294761657715
    10. 'float' → logprob: -12.545294761657715

Token 164: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007704230025410652
    2. 'max' → logprob: -5.507704257965088
    3. 'prob' → logprob: -6.132704257965088
    4. 'dfs' → logprob: -7.132704257965088
    5. ' ' → logprob: -7.882704257965088
    6. '-' → logprob: -8.75770378112793
    7. 'float' → logprob: -9.63270378112793
    8. ' max' → logprob: -11.50770378112793
    9. '1' → logprob: -11.50770378112793
    10. '   ' → logprob: -12.50770378112793

Token 165: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.003962874412536621
    2. '   ' → logprob: -6.378962993621826
    3. '
' → logprob: -7.128962993621826
    4. ',' → logprob: -7.503962993621826
    5. '    
' → logprob: -8.503962516784668
    6. '.
' → logprob: -8.628962516784668
    7. 'for' → logprob: -9.253962516784668
    8. ' ' → logprob: -9.628962516784668
    9. '0' → logprob: -9.753962516784668
    10. ')' → logprob: -9.878962516784668

Token 166: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003819332632701844
    2. '5' → logprob: -8.125381469726562
    3. 'res' → logprob: -9.750381469726562
    4. '1' → logprob: -11.750381469726562
    5. '```' → logprob: -12.125381469726562
    6. 'import' → logprob: -13.000381469726562
    7. 'prob' → logprob: -13.750381469726562
    8. 'float' → logprob: -13.875381469726562
    9. 'r' → logprob: -14.125381469726562
    10. 'max' → logprob: -14.125381469726562

Token 167: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8040996193885803
    2. '   ' → logprob: -0.8040996193885803
    3. ' for' → logprob: -2.6790995597839355
    4. 'for' → logprob: -3.9290995597839355
    5. '    
' → logprob: -4.5540995597839355
    6. ' 
' → logprob: -6.1790995597839355
    7. '  
' → logprob: -6.3040995597839355
    8. '<|end|>' → logprob: -6.9290995597839355
    9. '	for' → logprob: -8.304100036621094
    10. ',' → logprob: -8.554100036621094

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1452406644821167
    2. '<|end|>' → logprob: -1.1452406644821167
    3. ' for' → logprob: -1.6452406644821167
    4. '
' → logprob: -2.2702407836914062
    5. ' 
' → logprob: -4.145240783691406
    6. ' ' → logprob: -4.270240783691406
    7. 'for' → logprob: -4.520240783691406
    8. '    
' → logprob: -4.770240783691406
    9. '  
' → logprob: -5.020240783691406
    10. '<|end|>' → logprob: -5.895240783691406

Token 169: ' p' (ID: 275)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0055036297999322414
    2. ' for' → logprob: -5.5055036544799805
    3. '   ' → logprob: -6.7555036544799805
    4. 'res' → logprob: -8.75550365447998
    5. 'prob' → logprob: -10.13050365447998
    6. 'next' → logprob: -10.50550365447998
    7. 'p' (adapté à ' p') → logprob: -11.38050365447998
    8. 'j' → logprob: -12.25550365447998
    9. '    
' → logprob: -12.25550365447998
    10. 'i' → logprob: -13.00550365447998

Token 170: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5291300415992737
    2. ' =' → logprob: -0.9041300415992737
    3. '_' → logprob: -6.404129981994629
    4. '[' → logprob: -7.279129981994629
    5. '[k' → logprob: -7.404129981994629
    6. '_=' → logprob: -7.904129981994629
    7. '_prob' → logprob: -7.904129981994629
    8. 'k' → logprob: -8.029129981994629
    9. 'for' → logprob: -8.279129981994629
    10. '=k' → logprob: -8.529129981994629

Token 171: ' ' (ID: 220)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.0020324920769780874
    2. ' prob' → logprob: -6.252032279968262
    3. '1' → logprob: -9.377032279968262
    4. '0' → logprob: -12.377032279968262
    5. 'pro' → logprob: -12.377032279968262
    6. ' ' → logprob: -12.877032279968262
    7. '(prob' → logprob: -12.877032279968262
    8. '   ' → logprob: -13.502032279968262
    9. 'p' → logprob: -13.627032279968262
    10. 'pow' → logprob: -14.377032279968262

Token 172: '1' (ID: 16)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.003953017294406891
    2. '1' → logprob: -5.628952980041504
    3. ' prob' → logprob: -8.878952980041504
    4. '0' → logprob: -9.378952980041504
    5. '(' → logprob: -10.503952980041504
    6. '(prob' → logprob: -10.503952980041504
    7. 'dfs' → logprob: -10.503952980041504
    8. ' ' → logprob: -11.378952980041504
    9. '   ' → logprob: -11.753952980041504
    10. '
' → logprob: -12.128952980041504

Token 173: '.' (ID: 13)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6327848434448242
    2. '-' → logprob: -0.8827848434448242
    3. '.' → logprob: -3.132784843444824
    4. '[' → logprob: -5.507784843444824
    5. '-pro' → logprob: -6.132784843444824
    6. '-p' → logprob: -6.507784843444824
    7. '
' → logprob: -7.382784843444824
    8. ',' → logprob: -7.382784843444824
    9. '-
' → logprob: -7.507784843444824
    10. '   ' → logprob: -7.507784843444824

Token 174: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3520140051841736
    2. ' -' → logprob: -1.6020140647888184
    3. 'prob' → logprob: -3.9770140647888184
    4. '<|end|>' → logprob: -3.9770140647888184
    5. '[' → logprob: -4.727014064788818
    6. '.' → logprob: -4.727014064788818
    7. 'm' → logprob: -4.977014064788818
    8. ')' → logprob: -5.102014064788818
    9. '0' → logprob: -5.477014064788818
    10. '   ' → logprob: -5.727014064788818

Token 175: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9568557143211365
    2. ' for' → logprob: -1.5818557739257812
    3. 'for' → logprob: -2.2068557739257812
    4. '<|end|>' → logprob: -2.2068557739257812
    5. '   ' → logprob: -2.4568557739257812
    6. ')' → logprob: -3.5818557739257812
    7. ' ' → logprob: -3.9568557739257812
    8. ' 
' → logprob: -3.9568557739257812
    9. '<|end|>' → logprob: -4.456855773925781
    10. '    
' → logprob: -4.956855773925781

Token 176: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11017417907714844
    2. ' for' → logprob: -2.8601741790771484
    3. '
' → logprob: -3.7351741790771484
    4. 'for' → logprob: -4.735174179077148
    5. '<|end|>' → logprob: -5.360174179077148
    6. ' ' → logprob: -6.235174179077148
    7. '    
' → logprob: -6.360174179077148
    8. '  
' → logprob: -6.610174179077148
    9. ' 
' → logprob: -6.985174179077148
    10. '\n' → logprob: -7.235174179077148

Token 177: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1317775845527649
    2. ' for' → logprob: -2.13177752494812
    3. '   ' → logprob: -5.381777763366699
    4. '	for' → logprob: -9.7567777633667
    5. 'range' → logprob: -9.8817777633667
    6. '
' → logprob: -10.2567777633667
    7. '<|end|>' → logprob: -10.5067777633667
    8. ')' → logprob: -11.0067777633667
    9. ' ' → logprob: -11.3817777633667
    10. 'while' → logprob: -11.8817777633667

Token 178: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4123316705226898
    2. 'j' → logprob: -1.1623317003250122
    3. 'x' → logprob: -4.662331581115723
    4. 'next' → logprob: -5.162331581115723
    5. 'nr' → logprob: -5.912331581115723
    6. 'room' → logprob: -6.287331581115723
    7. ' i' → logprob: -6.787331581115723
    8. 's' → logprob: -7.037331581115723
    9. 'r' → logprob: -7.412331581115723
    10. '```' → logprob: -7.662331581115723

Token 179: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018244529142975807
    2. 'in' → logprob: -4.018244743347168
    3. ',' → logprob: -10.393244743347168
    4. ' ' → logprob: -10.768244743347168
    5. 'range' → logprob: -11.518244743347168
    6. ' i' → logprob: -12.268244743347168
    7. 'n' → logprob: -12.518244743347168
    8. 'r' → logprob: -12.518244743347168
    9. ' r' → logprob: -13.143244743347168
    10. 's' → logprob: -13.393244743347168

Token 180: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008616581559181213
    2. ' range' → logprob: -4.7586164474487305
    3. '   ' → logprob: -14.50861644744873
    4. '(range' → logprob: -14.63361644744873
    5. 'r' → logprob: -14.75861644744873
    6. 'rang' → logprob: -15.63361644744873
    7. '	range' → logprob: -16.008617401123047
    8. 'n' → logprob: -16.383617401123047
    9. ' ' → logprob: -16.508617401123047
    10. 'list' → logprob: -17.008617401123047

Token 181: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.22647012770175934
    2. '(n' → logprob: -1.6014701128005981
    3. 'r' → logprob: -7.476469993591309
    4. '(' → logprob: -8.476469993591309
    5. 'n' → logprob: -8.476469993591309
    6. '(k' → logprob: -10.476469993591309
    7. ' r' → logprob: -11.351469993591309
    8. ' (' → logprob: -11.601469993591309
    9. '   ' → logprob: -12.851469993591309
    10. ' n' → logprob: -12.851469993591309

Token 182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024132251739501953
    2. ',n' → logprob: -3.774132251739502
    3. ' ,' → logprob: -7.149132251739502
    4. '+' → logprob: -9.524131774902344
    5. ',r' → logprob: -11.899131774902344
    6. ',m' → logprob: -12.149131774902344
    7. '   ' → logprob: -12.649131774902344
    8. ' +' → logprob: -12.899131774902344
    9. 'n' → logprob: -13.024131774902344
    10. ',
' → logprob: -13.524131774902344

Token 183: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.8087270038668066e-05
    2. ' n' → logprob: -10.500027656555176
    3. '   ' → logprob: -15.375027656555176
    4. '
' → logprob: -15.750027656555176
    5. '	n' → logprob: -16.625028610229492
    6. 'm' → logprob: -17.125028610229492
    7. '```' → logprob: -18.625028610229492
    8. ')n' → logprob: -18.750028610229492
    9. 'n't' → logprob: -18.875028610229492
    10. ',' → logprob: -19.062528610229492

Token 184: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3133618235588074
    2. '):
' → logprob: -1.3133618831634521
    3. '+' → logprob: -9.938362121582031
    4. '   ' → logprob: -11.063362121582031
    5. '):
' → logprob: -11.063362121582031
    6. '):

' → logprob: -11.813362121582031
    7. ':' → logprob: -12.438362121582031
    8. ' ):' → logprob: -12.563362121582031
    9. ')' → logprob: -12.688362121582031
    10. ' ):
' → logprob: -13.688362121582031

Token 185: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010955621488392353
    2. 'res' → logprob: -4.885955810546875
    3. ' res' → logprob: -6.510955810546875
    4. 'prob' → logprob: -6.510955810546875
    5. ' p' → logprob: -8.760955810546875
    6. 'p' → logprob: -9.135955810546875
    7. ' prob' → logprob: -10.385955810546875
    8. ',' → logprob: -10.885955810546875
    9. '   ' → logprob: -11.135955810546875
    10. ' if' → logprob: -11.760955810546875

Token 186: ' #' (ID: 1069)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6796045899391174
    2. ' p' → logprob: -1.0546045303344727
    3. '       ' → logprob: -2.4296045303344727
    4. '           ' → logprob: -3.4296045303344727
    5. 'prob' → logprob: -3.9296045303344727
    6. 'res' → logprob: -6.054604530334473
    7. ' res' → logprob: -7.054604530334473
    8. ' prob' → logprob: -8.304604530334473
    9. '   ' → logprob: -8.554604530334473
    10. ' if' → logprob: -8.679604530334473

Token 187: ' ce' (ID: 2357)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.02541382797062397
    2. ' p' → logprob: -4.525413990020752
    3. 'prob' → logprob: -4.650413990020752
    4. '       ' → logprob: -5.900413990020752
    5. '           ' → logprob: -6.900413990020752
    6. 'res' → logprob: -7.525413990020752
    7. 'pro' → logprob: -9.900413513183594
    8. '   ' → logprob: -10.025413513183594
    9. 'if' → logprob: -10.025413513183594
    10. ' prob' → logprob: -10.275413513183594

Token 188: ' chat' (ID: 7999)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.33717867732048035
    2. 'p' → logprob: -1.3371787071228027
    3. 'prob' → logprob: -3.9621787071228027
    4. '           ' → logprob: -5.962178707122803
    5. '       ' → logprob: -7.212178707122803
    6. '   ' → logprob: -8.087178230285645
    7. 's' → logprob: -8.212178230285645
    8. 'res' → logprob: -8.962178230285645
    9. '=' → logprob: -9.212178230285645
    10. ' res' → logprob: -9.837178230285645

Token 189: ' tente' (ID: 75234)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1366326808929443
    2. 'prob' → logprob: -1.3866326808929443
    3. '=' → logprob: -1.7616326808929443
    4. ')' → logprob: -3.0116326808929443
    5. '*' → logprob: -3.2616326808929443
    6. '       ' → logprob: -3.7616326808929443
    7. 'p' → logprob: -3.7616326808929443
    8. '*p' → logprob: -4.011632919311523
    9. '_prob' → logprob: -4.011632919311523
    10. ' *=' → logprob: -4.136632919311523

Token 190: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.787702202796936
    2. '       ' → logprob: -1.537702202796936
    3. 'prob' → logprob: -2.2877020835876465
    4. ' de' → logprob: -2.6627020835876465
    5. '           ' → logprob: -2.6627020835876465
    6. 'd' → logprob: -2.7877020835876465
    7. '   ' → logprob: -4.1627020835876465
    8. 's' → logprob: -6.0377020835876465
    9. 'p' → logprob: -6.5377020835876465
    10. 'res' → logprob: -6.7877020835876465

Token 191: ' battre' (ID: 163858)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -1.1019694805145264
    2. 'i' → logprob: -1.4769694805145264
    3. 'p' → logprob: -1.4769694805145264
    4. 'dfs' → logprob: -2.3519694805145264
    5. 't' → logprob: -3.6019694805145264
    6. 'kill' → logprob: -3.7269694805145264
    7. ' tuer' → logprob: -4.6019697189331055
    8. ' p' → logprob: -4.8519697189331055
    9. 'k' → logprob: -5.2269697189331055
    10. ' i' → logprob: -5.2269697189331055

Token 192: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6036521792411804
    2. 'prob' → logprob: -0.8536521792411804
    3. 'les' → logprob: -4.853652000427246
    4. 'l' → logprob: -5.228652000427246
    5. '       ' → logprob: -5.353652000427246
    6. '   ' → logprob: -5.853652000427246
    7. 'le' → logprob: -5.978652000427246
    8. ' i' → logprob: -6.728652000427246
    9. 'la' → logprob: -6.853652000427246
    10. 'the' → logprob: -7.978652000427246

Token 193: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7911221385002136
    2. 'i' → logprob: -1.0411221981048584
    3. 'enn' → logprob: -1.9161221981048584
    4. ''i' → logprob: -4.416121959686279
    5. 'e' → logprob: -4.916121959686279
    6. 'es' → logprob: -5.041121959686279
    7. 'enemy' → logprob: -5.416121959686279
    8. ' enn' → logprob: -6.416121959686279
    9. ''ensemble' → logprob: -6.416121959686279
    10. 'enem' → logprob: -6.541121959686279

Token 194: 'enn' (ID: 2362)
  Prédit: 'enn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enn' → logprob: -0.24074186384677887
    2. 'i' → logprob: -1.7407418489456177
    3. 'en' → logprob: -4.240741729736328
    4. 'enemy' → logprob: -5.240741729736328
    5. 'enem' → logprob: -5.365741729736328
    6. ' enn' → logprob: -5.865741729736328
    7. ' i' → logprob: -5.865741729736328
    8. ''' → logprob: -6.490741729736328
    9. '`' → logprob: -6.740741729736328
    10. '```' → logprob: -7.365741729736328

Token 195: 'emi' (ID: 18504)
  Prédit: 'emi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'emi' → logprob: -0.0025203691329807043
    2. 'emis' → logprob: -6.002520561218262
    3. 'emies' → logprob: -11.127520561218262
    4. 'em' → logprob: -12.127520561218262
    5. ' emi' → logprob: -12.127520561218262
    6. 'emie' → logprob: -12.502520561218262
    7. 'i' → logprob: -12.627520561218262
    8. 'mi' → logprob: -12.877520561218262
    9. 'emy' → logprob: -13.002520561218262
    10. '   ' → logprob: -13.377520561218262

Token 196: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.339353084564209
    2. 'prob' → logprob: -1.964353084564209
    3. '[' → logprob: -2.714353084564209
    4. ' =' → logprob: -3.589353084564209
    5. '[i' → logprob: -4.339353084564209
    6. '=' → logprob: -4.464353084564209
    7. ',' → logprob: -4.714353084564209
    8. '[p' → logprob: -5.714353084564209
    9. '           ' → logprob: -5.839353084564209
    10. ' at' → logprob: -6.089353084564209

Token 197: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019373338669538498
    2. 'prob' → logprob: -4.269373416900635
    3. ',' → logprob: -6.144373416900635
    4. '           ' → logprob: -7.144373416900635
    5. '
' → logprob: -7.144373416900635
    6. 'p' → logprob: -8.144372940063477
    7. 'res' → logprob: -8.269372940063477
    8. '        
' → logprob: -8.269372940063477
    9. '=' → logprob: -9.144372940063477
    10. ' p' → logprob: -10.144372940063477

Token 198: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026344891637563705
    2. 'prob' → logprob: -4.1513447761535645
    3. 'res' → logprob: -5.5263447761535645
    4. ' p' → logprob: -6.1513447761535645
    5. ' res' → logprob: -6.5263447761535645
    6. ',' → logprob: -7.0263447761535645
    7. 'p' → logprob: -7.2763447761535645
    8. ' prob' → logprob: -8.026345252990723
    9. '        
' → logprob: -8.276345252990723
    10. '           ' → logprob: -8.651345252990723

Token 199: ' #' (ID: 1069)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.0007209777832031
    2. 'res' → logprob: -1.1257209777832031
    3. 'prob' → logprob: -1.2507209777832031
    4. 'success' → logprob: -5.000720977783203
    5. 'cur' → logprob: -5.625720977783203
    6. 'q' → logprob: -5.750720977783203
    7. 'curr' → logprob: -6.250720977783203
    8. '       ' → logprob: -6.500720977783203
    9. 'tmp' → logprob: -7.000720977783203
    10. 'current' → logprob: -7.000720977783203

Token 200: ' prob' (ID: 4921)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6141551733016968
    2. 'prob' → logprob: -1.3641551733016968
    3. 'res' → logprob: -1.9891551733016968
    4. 'success' → logprob: -2.9891552925109863
    5. 'q' → logprob: -5.489155292510986
    6. 'curr' → logprob: -6.114155292510986
    7. 'cur' → logprob: -6.364155292510986
    8. '       ' → logprob: -6.614155292510986
    9. 'tmp' → logprob: -6.864155292510986
    10. 'pro' → logprob: -6.989155292510986

Token 201: 'abilité' (ID: 49097)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.2356585264205933
    2. '[k' → logprob: -1.3606585264205933
    3. '[i' → logprob: -2.110658645629883
    4. '_k' → logprob: -2.610658645629883
    5. ' =' → logprob: -3.360658645629883
    6. '=' → logprob: -3.360658645629883
    7. 'ab' → logprob: -3.485658645629883
    8. '_i' → logprob: -3.610658645629883
    9. 'i' → logprob: -3.985658645629883
    10. '_' → logprob: -3.985658645629883

Token 202: ' qu' (ID: 474)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5891963243484497
    2. '=' → logprob: -0.9641963243484497
    3. '*=' → logprob: -3.83919620513916
    4. '*' → logprob: -4.21419620513916
    5. ' *=' → logprob: -4.21419620513916
    6. '       ' → logprob: -4.83919620513916
    7. ' *' → logprob: -6.71419620513916
    8. '           ' → logprob: -7.33919620513916
    9. ')' → logprob: -7.46419620513916
    10. 'd' → logprob: -7.96419620513916

Token 203: ''il' (ID: 14683)
  Prédit: ''il'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''il' → logprob: -0.13852544128894806
    2. 'e' → logprob: -2.7635254859924316
    3. 'il' → logprob: -4.138525485992432
    4. 'u' → logprob: -4.638525485992432
    5. '       ' → logprob: -5.263525485992432
    6. 'this' → logprob: -5.388525485992432
    7. '   ' → logprob: -5.388525485992432
    8. 'prob' → logprob: -5.638525485992432
    9. ''on' → logprob: -5.638525485992432
    10. 'que' → logprob: -6.013525485992432

Token 204: ' gagne' (ID: 141776)
  Prédit: ' réuss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' réuss' → logprob: -0.837028980255127
    2. 't' → logprob: -2.087028980255127
    3. 'ne' → logprob: -2.837028980255127
    4. 'essa' → logprob: -2.962028980255127
    5. ' ne' → logprob: -3.337028980255127
    6. ' puisse' → logprob: -3.337028980255127
    7. 's' → logprob: -3.587028980255127
    8. 'n' → logprob: -3.712028980255127
    9. '   ' → logprob: -3.712028980255127
    10. 'atte' → logprob: -3.962028980255127

Token 205: ' contre' (ID: 17771)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9957538843154907
    2. '=' → logprob: -1.2457538843154907
    3. ' =' → logprob: -1.7457538843154907
    4. ' *' → logprob: -2.495753765106201
    5. '*=' → logprob: -2.870753765106201
    6. ' *=' → logprob: -3.995753765106201
    7. '       ' → logprob: -4.995753765106201
    8. '           ' → logprob: -6.370753765106201
    9. '*p' → logprob: -6.995753765106201
    10. 'prob' → logprob: -7.495753765106201

Token 206: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04906010627746582
    2. 'prob' → logprob: -3.424060106277466
    3. 'l' → logprob: -4.424059867858887
    4. ' i' → logprob: -6.299059867858887
    5. '[i' → logprob: -7.799059867858887
    6. 'enemy' → logprob: -8.549059867858887
    7. 'the' → logprob: -9.174059867858887
    8. 'le' → logprob: -9.174059867858887
    9. 'enn' → logprob: -9.424059867858887
    10. '
' → logprob: -9.674059867858887

Token 207: ''' (ID: 6)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.051453497260808945
    2. 'prob' → logprob: -3.3014535903930664
    3. ' i' → logprob: -5.051453590393066
    4. 'enn' → logprob: -5.926453590393066
    5. 'enemy' → logprob: -6.426453590393066
    6. ' enn' → logprob: -7.301453590393066
    7. ' prob' → logprob: -7.301453590393066
    8. '[i' → logprob: -8.176453590393066
    9. ' ennem' → logprob: -9.051453590393066
    10. 'enem' → logprob: -9.176453590393066

Token 208: 'enn' (ID: 2362)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0390230230987072
    2. 'enn' → logprob: -3.414022922515869
    3. 'enemy' → logprob: -6.039022922515869
    4. ' i' → logprob: -6.164022922515869
    5. 'enem' → logprob: -8.414023399353027
    6. '[i' → logprob: -8.539023399353027
    7. ' enn' → logprob: -8.914023399353027
    8. 'prob' → logprob: -9.039023399353027
    9. '
' → logprob: -10.789023399353027
    10. ' enemy' → logprob: -10.914023399353027

Token 209: 'emi' (ID: 18504)
  Prédit: 'emi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'emi' → logprob: -0.1830393224954605
    2. 'i' → logprob: -1.8080393075942993
    3. 'emy' → logprob: -6.43303918838501
    4. 'em' → logprob: -8.058039665222168
    5. '   ' → logprob: -8.308039665222168
    6. 'emies' → logprob: -8.308039665222168
    7. '       ' → logprob: -8.808039665222168
    8. ' i' → logprob: -8.933039665222168
    9. '[i' → logprob: -8.933039665222168
    10. 'mi' → logprob: -9.183039665222168

Token 210: ' i' (ID: 575)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.21062181890010834
    2. ' =' → logprob: -2.5856218338012695
    3. '[k' → logprob: -2.8356218338012695
    4. '=' → logprob: -3.2106218338012695
    5. 'i' → logprob: -5.7106218338012695
    6. 's' → logprob: -6.0856218338012695
    7. '=k' → logprob: -6.0856218338012695
    8. 'prob' → logprob: -6.8356218338012695
    9. ',' → logprob: -7.0856218338012695
    10. '[i' → logprob: -7.2106218338012695

Token 211: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.512637197971344
    2. '=' → logprob: -1.8876371383666992
    3. ' =' → logprob: -2.012637138366699
    4. ' *' → logprob: -2.762637138366699
    5. '*=' → logprob: -3.637637138366699
    6. ' *=' → logprob: -4.387637138366699
    7. '       ' → logprob: -4.762637138366699
    8. '*p' → logprob: -6.137637138366699
    9. ')' → logprob: -6.637637138366699
    10. '           ' → logprob: -7.387637138366699

Token 212: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025837119668722153
    2. ' =' → logprob: -4.275836944580078
    3. 'res' → logprob: -5.275836944580078
    4. '=' → logprob: -5.775836944580078
    5. 'prob' → logprob: -6.525836944580078
    6. ' res' → logprob: -7.650836944580078
    7. ' *' → logprob: -8.150836944580078
    8. ',' → logprob: -8.275836944580078
    9. 'p' → logprob: -8.400836944580078
    10. '*' → logprob: -9.400836944580078

Token 213: ' win' (ID: 4449)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.16987647116184235
    2. 'p' → logprob: -2.1698765754699707
    3. 'res' → logprob: -3.6698765754699707
    4. ' p' → logprob: -5.419876575469971
    5. '       ' → logprob: -5.419876575469971
    6. ' prob' → logprob: -5.669876575469971
    7. 'pro' → logprob: -6.294876575469971
    8. ' res' → logprob: -7.544876575469971
    9. 'tmp' → logprob: -8.294876098632812
    10. 'q' → logprob: -8.544876098632812

Token 214: '_prob' (ID: 50074)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.056725338101387024
    2. '=' → logprob: -2.931725263595581
    3. '_prob' → logprob: -6.68172550201416
    4. '   ' → logprob: -8.30672550201416
    5. '_probability' → logprob: -9.30672550201416
    6. '_i' → logprob: -9.68172550201416
    7. 's' → logprob: -10.55672550201416
    8. '_' → logprob: -10.55672550201416
    9. ']' → logprob: -10.80672550201416
    10. ',' → logprob: -10.93172550201416

Token 215: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141927897930145
    2. '=' → logprob: -1.7014192342758179
    3. ' ' → logprob: -13.07641887664795
    4. ',' → logprob: -13.70141887664795
    5. ')' → logprob: -13.95141887664795
    6. '   ' → logprob: -14.20141887664795
    7. ' ' → logprob: -15.20141887664795
    8. '=p' → logprob: -15.57641887664795
    9. ' *=' → logprob: -16.201419830322266
    10. 's' → logprob: -16.201419830322266

Token 216: ' prob' (ID: 4921)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.00033081689616665244
    2. ' prob' → logprob: -8.125330924987793
    3. '   ' → logprob: -10.750330924987793
    4. 'p' → logprob: -12.375330924987793
    5. '(prob' → logprob: -12.875330924987793
    6. '1' → logprob: -13.250330924987793
    7. 'prod' → logprob: -13.875330924987793
    8. 'pro' → logprob: -13.875330924987793
    9. '       ' → logprob: -14.125330924987793
    10. '           ' → logprob: -14.875330924987793

Token 217: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -4.961759259458631e-06
    2. '[m' → logprob: -12.875004768371582
    3. 'k' → logprob: -13.250004768371582
    4. '[' → logprob: -15.625004768371582
    5. '[s' → logprob: -16.7500057220459
    6. ')[' → logprob: -16.7500057220459
    7. '[i' → logprob: -16.8750057220459
    8. ' [' → logprob: -17.0000057220459
    9. '[c' → logprob: -17.5000057220459
    10. '][' → logprob: -17.6250057220459

Token 218: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004108924185857177
    2. '[i' → logprob: -8.500411033630371
    3. ']' → logprob: -8.875411033630371
    4. ' ][' → logprob: -9.750411033630371
    5. '[k' → logprob: -12.750411033630371
    6. '[' → logprob: -13.125411033630371
    7. '"][' → logprob: -14.250411033630371
    8. 'i' → logprob: -14.500411033630371
    9. ''][' → logprob: -15.000411033630371
    10. ']
' → logprob: -15.000411033630371

Token 219: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.173704271830502e-06
    2. ' i' → logprob: -12.75000286102295
    3. '
' → logprob: -15.12500286102295
    4. '   ' → logprob: -17.250003814697266
    5. 'r' → logprob: -17.625003814697266
    6. ']' → logprob: -17.750003814697266
    7. ' ' → logprob: -18.375003814697266
    8. '	i' → logprob: -19.375003814697266
    9. '[i' → logprob: -19.500003814697266
    10. '
' → logprob: -19.625003814697266

Token 220: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03816370666027069
    2. ']
' → logprob: -3.288163661956787
    3. ']
' → logprob: -9.663164138793945
    4. ']

' → logprob: -9.913164138793945
    5. ' ]' → logprob: -12.663164138793945
    6. ']*' → logprob: -13.288164138793945
    7. '       ' → logprob: -13.663164138793945
    8. '   ' → logprob: -14.038164138793945
    9. ')' → logprob: -14.413164138793945
    10. ' ]
' → logprob: -14.538164138793945

Token 221: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020680641755461693
    2. 'res' → logprob: -7.002068042755127
    3. '
' → logprob: -7.502068042755127
    4. ' res' → logprob: -8.502068519592285
    5. ',' → logprob: -9.127068519592285
    6. '<|end|>' → logprob: -9.377068519592285
    7. '        
' → logprob: -10.377068519592285
    8. '   ' → logprob: -10.502068519592285
    9. 'prob' → logprob: -10.627068519592285
    10. '<|end|>' → logprob: -11.002068519592285

Token 222: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.025212274864315987
    2. ' res' → logprob: -4.900212287902832
    3. 'next' → logprob: -5.525212287902832
    4. '       ' → logprob: -5.650212287902832
    5. 'fail' → logprob: -5.650212287902832
    6. 'temp' → logprob: -6.025212287902832
    7. 'tmp' → logprob: -6.525212287902832
    8. 'success' → logprob: -7.275212287902832
    9. '           ' → logprob: -7.650212287902832
    10. 'prob' → logprob: -8.775212287902832

Token 223: ' prob' (ID: 4921)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.02901601791381836
    2. 'fail' → logprob: -4.779016017913818
    3. 'lose' → logprob: -5.404016017913818
    4. 'temp' → logprob: -5.654016017913818
    5. '#' → logprob: -5.904016017913818
    6. 'next' → logprob: -6.279016017913818
    7. 'win' → logprob: -6.779016017913818
    8. 'p' → logprob: -6.904016017913818
    9. 'tmp' → logprob: -6.904016017913818
    10. 'success' → logprob: -7.154016017913818

Token 224: 'abilité' (ID: 49097)
  Prédit: 'abilité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abilité' → logprob: -0.6210041046142578
    2. ' =' → logprob: -1.8710041046142578
    3. '_win' → logprob: -2.246004104614258
    4. '=' → logprob: -3.621004104614258
    5. 'abil' → logprob: -3.746004104614258
    6. '_success' → logprob: -3.871004104614258
    7. '_continue' → logprob: -3.871004104614258
    8. '_' → logprob: -3.996004104614258
    9. 'ail' → logprob: -4.121004104614258
    10. 'ab' → logprob: -4.371004104614258

Token 225: ' qu' (ID: 474)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8645052313804626
    2. '       ' → logprob: -1.3645052909851074
    3. '=' → logprob: -1.7395052909851074
    4. ' *=' → logprob: -2.9895052909851074
    5. '           ' → logprob: -3.9895052909851074
    6. '_win' → logprob: -4.364505290985107
    7. '*=' → logprob: -4.739505290985107
    8. 'that' → logprob: -4.739505290985107
    9. '        ' → logprob: -4.864505290985107
    10. 'que' → logprob: -5.614505290985107

Token 226: ''il' (ID: 14683)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.1437629461288452
    2. 'not' → logprob: -1.3937629461288452
    3. ' win' → logprob: -1.5187629461288452
    4. ' il' → logprob: -2.8937630653381348
    5. ' p' → logprob: -3.1437630653381348
    6. 'win' → logprob: -3.7687630653381348
    7. ' this' → logprob: -4.518763065338135
    8. ' the' → logprob: -4.643763065338135
    9. ' it' → logprob: -4.768763065338135
    10. ' i' → logprob: -4.893763065338135

Token 227: ' perde' (ID: 69839)
  Prédit: 'lose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lose' → logprob: -1.369855523109436
    2. 'fails' → logprob: -1.369855523109436
    3. 'fail' → logprob: -1.619855523109436
    4. 'ne' → logprob: -2.7448554039001465
    5. 's' → logprob: -2.9948554039001465
    6. 'lo' → logprob: -4.2448554039001465
    7. ' lose' → logprob: -4.2448554039001465
    8. 'per' → logprob: -4.2448554039001465
    9. 'continue' → logprob: -4.2448554039001465
    10. 'n' → logprob: -4.3698554039001465

Token 228: ' contre' (ID: 17771)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007277326192706823
    2. '=' → logprob: -5.132277488708496
    3. '       ' → logprob: -6.882277488708496
    4. ' *' → logprob: -9.007277488708496
    5. '           ' → logprob: -10.007277488708496
    6. '*' → logprob: -10.257277488708496
    7. ',' → logprob: -11.132277488708496
    8. ' *=' → logprob: -11.257277488708496
    9. 'win' → logprob: -11.382277488708496
    10. '   ' → logprob: -11.507277488708496

Token 229: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3271530568599701
    2. 'l' → logprob: -1.9521530866622925
    3. ' i' → logprob: -2.577152967453003
    4. ' l' → logprob: -3.702152967453003
    5. 'enn' → logprob: -4.452153205871582
    6. 'prob' → logprob: -5.077153205871582
    7. ' enn' → logprob: -5.577153205871582
    8. 'enemy' → logprob: -6.077153205871582
    9. ' ennem' → logprob: -6.202153205871582
    10. ' the' → logprob: -6.577153205871582

Token 230: ''' (ID: 6)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.015461246483027935
    2. 'prob' → logprob: -4.390461444854736
    3. 'enemy' → logprob: -6.640461444854736
    4. 'enn' → logprob: -7.015461444854736
    5. 'win' → logprob: -8.765460968017578
    6. ' i' → logprob: -8.765460968017578
    7. '[i' → logprob: -9.015460968017578
    8. 'enem' → logprob: -10.140460968017578
    9. 'en' → logprob: -10.265460968017578
    10. ' enn' → logprob: -10.390460968017578

Token 231: 'enn' (ID: 2362)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20381644368171692
    2. 'enn' → logprob: -1.7038164138793945
    3. 'enemy' → logprob: -6.3288164138793945
    4. ' enn' → logprob: -8.203816413879395
    5. 'enem' → logprob: -8.453816413879395
    6. ' i' → logprob: -10.078816413879395
    7. ' ennem' → logprob: -10.578816413879395
    8. ' enemy' → logprob: -12.391316413879395
    9. 'ennem' → logprob: -12.391316413879395
    10. 'enne' → logprob: -12.641316413879395

Token 232: 'emi' (ID: 18504)
  Prédit: 'emi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'emi' → logprob: -0.01854799874126911
    2. 'i' → logprob: -4.018548011779785
    3. 'emis' → logprob: -9.018548011779785
    4. 'emy' → logprob: -9.393548011779785
    5. 'emies' → logprob: -10.018548011779785
    6. ' i' → logprob: -10.018548011779785
    7. 'em' → logprob: -10.768548011779785
    8. 'emie' → logprob: -10.893548011779785
    9. 'e' → logprob: -11.018548011779785
    10. ' emi' → logprob: -11.518548011779785

Token 233: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.010364706628024578
    2. ' i' → logprob: -4.760364532470703
    3. 'k' → logprob: -6.760364532470703
    4. 'j' → logprob: -7.885364532470703
    5. '   ' → logprob: -9.010364532470703
    6. ' ' → logprob: -10.885364532470703
    7. '[i' → logprob: -11.135364532470703
    8. ' j' → logprob: -11.510364532470703
    9. ' k' → logprob: -11.635364532470703
    10. '       ' → logprob: -11.885364532470703

Token 234: '
' (ID: 198)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1499088853597641
    2. '       ' → logprob: -2.6499087810516357
    3. ' =' → logprob: -3.1499087810516357
    4. '*' → logprob: -3.8999087810516357
    5. '=' → logprob: -5.899909019470215
    6. '
' → logprob: -7.399909019470215
    7. ',' → logprob: -7.649909019470215
    8. '*p' → logprob: -8.149909019470215
    9. ' *=' → logprob: -8.274909019470215
    10. '        
' → logprob: -8.774909019470215

Token 235: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07305704057216644
    2. ',' → logprob: -3.573056936264038
    3. '```' → logprob: -4.698057174682617
    4. ' res' → logprob: -5.073057174682617
    5. '<|end|>' → logprob: -5.448057174682617
    6. 'res' → logprob: -5.573057174682617
    7. '
' → logprob: -5.948057174682617
    8. ' p' → logprob: -6.198057174682617
    9. ' *' → logprob: -6.448057174682617
    10. ' =' → logprob: -6.448057174682617

Token 236: ' lose' (ID: 12577)
  Prédit: 'lose'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lose' (adapté à ' lose') → logprob: -0.0632622092962265
    2. ' lose' → logprob: -3.1882622241973877
    3. 'fail' → logprob: -4.688261985778809
    4. 'loss' → logprob: -5.438261985778809
    5. '(' → logprob: -5.813261985778809
    6. '1' → logprob: -6.438261985778809
    7. 'los' → logprob: -6.813261985778809
    8. ' (' → logprob: -8.563261985778809
    9. '       ' → logprob: -8.938261985778809
    10. ' fail' → logprob: -9.063261985778809

Token 237: '_prob' (ID: 50074)
  Prédit: '_prob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prob' → logprob: -0.0008003382245078683
    2. '_' → logprob: -7.250800132751465
    3. ' =' → logprob: -10.125800132751465
    4. '_p' → logprob: -11.250800132751465
    5. ' _' → logprob: -11.375800132751465
    6. '_probs' → logprob: -11.625800132751465
    7. '=' → logprob: -11.875800132751465
    8. '_probability' → logprob: -12.625800132751465
    9. '_pro' → logprob: -13.000800132751465
    10. '_rate' → logprob: -14.125800132751465

Token 238: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132648468017578
    2. '=' → logprob: -1.3132648468017578
    3. ')' → logprob: -14.188264846801758
    4. ' ' → logprob: -14.688264846801758
    5. ' *=' → logprob: -15.188264846801758
    6. ',' → logprob: -15.313264846801758
    7. ' ' → logprob: -15.563264846801758
    8. 'p' → logprob: -15.688264846801758
    9. '.' → logprob: -15.938264846801758
    10. '1' → logprob: -15.938264846801758

Token 239: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014421109110116959
    2. ' ' → logprob: -4.264420986175537
    3. 'p' → logprob: -9.514421463012695
    4. '       ' → logprob: -9.889421463012695
    5. ' p' → logprob: -9.889421463012695
    6. '   ' → logprob: -10.764421463012695
    7. '
' → logprob: -11.139421463012695
    8. '(' → logprob: -11.139421463012695
    9. '           ' → logprob: -11.139421463012695
    10. ' (' → logprob: -11.639421463012695

Token 240: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001302374730585143
    2. '(' → logprob: -10.125130653381348
    3. 'p' → logprob: -10.125130653381348
    4. ' ' → logprob: -10.250130653381348
    5. 'prob' → logprob: -12.125130653381348
    6. '
' → logprob: -12.250130653381348
    7. '   ' → logprob: -13.250130653381348
    8. '(p' → logprob: -14.500130653381348
    9. '           ' → logprob: -14.750130653381348
    10. ' (' → logprob: -15.375130653381348

Token 241: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5653022527694702
    2. '-' → logprob: -1.0653022527694702
    3. '.' → logprob: -2.4403023719787598
    4. '-p' → logprob: -10.440301895141602
    5. ' ' → logprob: -11.315301895141602
    6. '-pro' → logprob: -13.190301895141602
    7. ')' → logprob: -13.190301895141602
    8. ',' → logprob: -13.565301895141602
    9. '-win' → logprob: -13.565301895141602
    10. ' ' → logprob: -13.815301895141602

Token 242: ' win' (ID: 4449)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.0010400752071291208
    2. ' win' → logprob: -7.001039981842041
    3. 'prob' → logprob: -9.0010404586792
    4. 'p' → logprob: -12.5010404586792
    5. '	win' → logprob: -14.8760404586792
    6. 'pro' → logprob: -15.0010404586792
    7. ' p' → logprob: -15.5010404586792
    8. ' prob' → logprob: -15.6260404586792
    9. 'w' → logprob: -16.251039505004883
    10. '   ' → logprob: -16.376039505004883

Token 243: '_prob' (ID: 50074)
  Prédit: '_prob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prob' → logprob: -4.4849443838757e-06
    2. 'prob' → logprob: -12.500004768371582
    3. 'Prob' → logprob: -15.000004768371582
    4. '_probs' → logprob: -15.875004768371582
    5. '_p' → logprob: -17.250003814697266
    6. '_' → logprob: -17.625003814697266
    7. '_pro' → logprob: -17.750003814697266
    8. ' Prob' → logprob: -17.750003814697266
    9. '_prog' → logprob: -17.750003814697266
    10. 'p' → logprob: -18.000003814697266

Token 244: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031368501484394073
    2. '
' → logprob: -3.9063684940338135
    3. 'res' → logprob: -5.406368732452393
    4. '<|end|>' → logprob: -6.031368732452393
    5. ' res' → logprob: -7.406368732452393
    6. ',' → logprob: -7.406368732452393
    7. ')' → logprob: -7.656368732452393
    8. '        
' → logprob: -7.781368732452393
    9. '<|end|>' → logprob: -7.781368732452393
    10. 'prob' → logprob: -8.031368255615234

Token 245: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022211849689483643
    2. 'res' → logprob: -4.522212028503418
    3. ' res' → logprob: -5.272212028503418
    4. '
' → logprob: -5.897212028503418
    5. '<|end|>' → logprob: -6.772212028503418
    6. ',' → logprob: -7.647212028503418
    7. '   ' → logprob: -8.147212028503418
    8. ')' → logprob: -8.272212028503418
    9. '<|end|>' → logprob: -8.272212028503418
    10. '        
' → logprob: -8.647212028503418

Token 246: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.05694562941789627
    2. '       ' → logprob: -3.306945562362671
    3. ' res' → logprob: -5.05694580078125
    4. 'next' → logprob: -5.18194580078125
    5. 'temp' → logprob: -6.05694580078125
    6. 'prob' → logprob: -6.05694580078125
    7. 'dp' → logprob: -8.05694580078125
    8. 'tmp' → logprob: -8.18194580078125
    9. 'success' → logprob: -8.18194580078125
    10. 'current' → logprob: -8.18194580078125

Token 247: ' si' (ID: 1784)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.052867911756038666
    2. 'temp' → logprob: -3.927867889404297
    3. 'tmp' → logprob: -4.927867889404297
    4. 'current' → logprob: -5.302867889404297
    5. 'success' → logprob: -5.552867889404297
    6. 'next' → logprob: -5.552867889404297
    7. '       ' → logprob: -6.052867889404297
    8. 'prob' → logprob: -6.302867889404297
    9. ' res' → logprob: -6.552867889404297
    10. 'curr' → logprob: -6.677867889404297

Token 248: ' gagne' (ID: 141776)
  Prédit: ' win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' win' → logprob: -0.2831346392631531
    2. ' dfs' → logprob: -2.658134698867798
    3. 'win' → logprob: -2.783134698867798
    4. ' lose' → logprob: -3.908134698867798
    5. ' i' → logprob: -4.408134460449219
    6. 'dfs' → logprob: -4.408134460449219
    7. 'lose' → logprob: -4.408134460449219
    8. ' il' → logprob: -4.783134460449219
    9. ' res' → logprob: -5.158134460449219
    10. 'i' → logprob: -5.158134460449219

Token 249: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23990371823310852
    2. ':' → logprob: -2.864903688430786
    3. ':
' → logprob: -2.864903688430786
    4. '):
' → logprob: -3.489903688430786
    5. 'res' → logprob: -4.489903926849365
    6. ',' → logprob: -4.489903926849365
    7. '
' → logprob: -4.614903926849365
    8. '           ' → logprob: -4.989903926849365
    9. ' *' → logprob: -5.239903926849365
    10. ' =' → logprob: -5.239903926849365

Token 250: ' avance' (ID: 81376)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.010830741375684738
    2. ' res' → logprob: -4.885830879211426
    3. '           ' → logprob: -6.635830879211426
    4. '       ' → logprob: -7.385830879211426
    5. 'temp' → logprob: -7.760830879211426
    6. 'win' → logprob: -8.510830879211426
    7. 'next' → logprob: -9.385830879211426
    8. 'prob' → logprob: -9.385830879211426
    9. 'tmp' → logprob: -9.385830879211426
    10. 'result' → logprob: -9.635830879211426

Token 251: ' à' (ID: 1221)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9839977025985718
    2. 'res' → logprob: -1.1089977025985718
    3. '       ' → logprob: -2.4839978218078613
    4. '*' → logprob: -2.8589978218078613
    5. ' *' → logprob: -3.4839978218078613
    6. '=' → logprob: -3.6089978218078613
    7. ' res' → logprob: -3.6089978218078613
    8. ' =' → logprob: -3.9839978218078613
    9. ')' → logprob: -4.358997821807861
    10. 'prob' → logprob: -5.233997821807861

Token 252: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.23069973289966583
    2. 'dfs' → logprob: -1.6056997776031494
    3. ' i' → logprob: -6.60569953918457
    4. ' dfs' → logprob: -6.73069953918457
    5. '   ' → logprob: -6.85569953918457
    6. '
' → logprob: -8.10569953918457
    7. 'k' → logprob: -8.10569953918457
    8. '```' → logprob: -8.48069953918457
    9. '(i' → logprob: -8.85569953918457
    10. 'l' → logprob: -9.35569953918457

Token 253: ' salle' (ID: 35653)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006161751225590706
    2. 'dfs' → logprob: -5.506161689758301
    3. ' i' → logprob: -6.881161689758301
    4. '
' → logprob: -7.506161689758301
    5. 'next' → logprob: -8.6311616897583
    6. ' dfs' → logprob: -9.3811616897583
    7. '```' → logprob: -9.7561616897583
    8. ' next' → logprob: -10.0061616897583
    9. 'def' → logprob: -10.6311616897583
    10. '(i' → logprob: -10.8811616897583

Token 254: ' suivante' (ID: 107439)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014760035090148449
    2. ' i' → logprob: -4.2647600173950195
    3. '       ' → logprob: -7.7647600173950195
    4. '   ' → logprob: -9.63976001739502
    5. '
' → logprob: -10.51476001739502
    6. '           ' → logprob: -11.13976001739502
    7. '```' → logprob: -11.51476001739502
    8. '(i' → logprob: -11.63976001739502
    9. '=i' → logprob: -11.76476001739502
    10. ' =' → logprob: -11.76476001739502

Token 255: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5953271985054016
    2. 'res' → logprob: -0.8453271985054016
    3. ' res' → logprob: -4.595327377319336
    4. ',' → logprob: -5.470327377319336
    5. '           ' → logprob: -6.095327377319336
    6. '
' → logprob: -6.845327377319336
    7. 'result' → logprob: -7.845327377319336
    8. 'next' → logprob: -8.470327377319336
    9. 'prob' → logprob: -8.970327377319336
    10. ' and' → logprob: -9.470327377319336

Token 256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3655521869659424
    2. 'res' → logprob: -1.2405521869659424
    3. ' res' → logprob: -4.490551948547363
    4. '           ' → logprob: -6.365551948547363
    5. ',' → logprob: -6.490551948547363
    6. '
' → logprob: -7.490551948547363
    7. '+' → logprob: -7.740551948547363
    8. '        
' → logprob: -7.990551948547363
    9. 'next' → logprob: -8.365551948547363
    10. ' +' → logprob: -9.240551948547363

Token 257: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.004518177360296249
    2. '       ' → logprob: -6.379518032073975
    3. ' res' → logprob: -6.879518032073975
    4. 'temp' → logprob: -7.129518032073975
    5. 'next' → logprob: -7.879518032073975
    6. 'tmp' → logprob: -8.379518508911133
    7. 'win' → logprob: -9.129518508911133
    8. '           ' → logprob: -9.254518508911133
    9. 'prob' → logprob: -9.879518508911133
    10. 'p' → logprob: -10.754518508911133

Token 258: ' sinon' (ID: 52915)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.007794470991939306
    2. '       ' → logprob: -6.382794380187988
    3. ' res' → logprob: -6.382794380187988
    4. 'win' → logprob: -6.382794380187988
    5. 'temp' → logprob: -6.757794380187988
    6. 'tmp' → logprob: -7.757794380187988
    7. 'next' → logprob: -7.882794380187988
    8. '           ' → logprob: -8.382794380187988
    9. 'prob' → logprob: -9.132794380187988
    10. 'p' → logprob: -9.382794380187988

Token 259: ':' (ID: 25)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7393932342529297
    2. ' res' → logprob: -0.8643932342529297
    3. '       ' → logprob: -2.6143932342529297
    4. ':
' → logprob: -5.23939323425293
    5. ':' → logprob: -5.48939323425293
    6. ',' → logprob: -5.73939323425293
    7. ' p' → logprob: -5.86439323425293
    8. '
' → logprob: -6.11439323425293
    9. '):
' → logprob: -6.23939323425293
    10. '           ' → logprob: -6.36439323425293

Token 260: ' s' (ID: 265)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.026140283793210983
    2. ' res' → logprob: -3.7761402130126953
    3. 'p' → logprob: -6.401140213012695
    4. ' p' → logprob: -8.026140213012695
    5. 'break' → logprob: -8.401140213012695
    6. '       ' → logprob: -8.401140213012695
    7. '           ' → logprob: -8.776140213012695
    8. 'prob' → logprob: -9.151140213012695
    9. '
' → logprob: -9.776140213012695
    10. 'result' → logprob: -11.276140213012695

Token 261: ''arr' (ID: 49695)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.2212767601013184
    2. 'e' → logprob: -1.4712767601013184
    3. 'u' → logprob: -1.8462767601013184
    4. '=' → logprob: -3.0962767601013184
    5. 'ans' → logprob: -3.2212767601013184
    6. 'uit' → logprob: -3.8462767601013184
    7. 'rés' → logprob: -4.096276760101318
    8. 'reste' → logprob: -4.221276760101318
    9. 't' → logprob: -4.346276760101318
    10. 'break' → logprob: -4.346276760101318

Token 262: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.07418198883533478
    2. 'ete' → logprob: -2.8241820335388184
    3. 'ète' → logprob: -5.199182033538818
    4. 'êter' → logprob: -5.199182033538818
    5. 'ette' → logprob: -8.69918155670166
    6. 'ê' → logprob: -9.32418155670166
    7. '\' → logprob: -9.44918155670166
    8. 'êt' → logprob: -9.57418155670166
    9. '[' → logprob: -9.57418155670166
    10. '�' → logprob: -9.82418155670166

Token 263: ' ici' (ID: 27994)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018377261236310005
    2. ',' → logprob: -4.143377304077148
    3. '           ' → logprob: -7.518377304077148
    4. '<|end|>' → logprob: -7.518377304077148
    5. '        
' → logprob: -8.768377304077148
    6. '<|end|>' → logprob: -9.268377304077148
    7. '               ' → logprob: -9.393377304077148
    8. '.' → logprob: -9.393377304077148
    9. ' =' → logprob: -9.518377304077148
    10. ' and' → logprob: -9.768377304077148

Token 264: ';' (ID: 26)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005163904745131731
    2. ',' → logprob: -5.505163669586182
    3. '        
' → logprob: -8.38016414642334
    4. '<|end|>' → logprob: -8.63016414642334
    5. '           ' → logprob: -9.25516414642334
    6. ')' → logprob: -9.25516414642334
    7. ' res' → logprob: -9.63016414642334
    8. ' and' → logprob: -9.75516414642334
    9. 'res' → logprob: -10.00516414642334
    10. '<|end|>' → logprob: -10.25516414642334

Token 265: ' le' (ID: 505)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1030404567718506
    2. 'res' → logprob: -1.1030404567718506
    3. ' res' → logprob: -1.1030404567718506
    4. ' p' → logprob: -6.60304069519043
    5. 'prob' → logprob: -6.97804069519043
    6. '           ' → logprob: -7.60304069519043
    7. '   ' → logprob: -7.97804069519043
    8. 'p' → logprob: -8.22804069519043
    9. 'temp' → logprob: -8.60304069519043
    10. ' temp' → logprob: -9.35304069519043

Token 266: ' prochain' (ID: 52413)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.08776909112930298
    2. 'return' → logprob: -3.087769031524658
    3. 'break' → logprob: -3.587769031524658
    4. ' res' → logprob: -5.587769031524658
    5. 'prob' → logprob: -5.837769031524658
    6. ' return' → logprob: -6.962769031524658
    7. ' break' → logprob: -7.087769031524658
    8. 'result' → logprob: -8.087769508361816
    9. 'for' → logprob: -8.087769508361816
    10. '
' → logprob: -8.337769508361816

Token 267: ' chat' (ID: 7999)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8272133469581604
    2. 'chat' → logprob: -1.4522132873535156
    3. 'token' → logprob: -2.7022132873535156
    4. ' chat' → logprob: -3.2022132873535156
    5. 'dfs' → logprob: -3.2022132873535156
    6. 'cat' → logprob: -3.4522132873535156
    7. 's' → logprob: -3.8272132873535156
    8. 'result' → logprob: -4.077213287353516
    9. 'prob' → logprob: -4.327213287353516
    10. ' dfs' → logprob: -4.827213287353516

Token 268: ' repart' (ID: 76374)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7530496716499329
    2. 's' → logprob: -1.628049612045288
    3. ')' → logprob: -2.753049612045288
    4. ' =' → logprob: -3.003049612045288
    5. '           ' → logprob: -3.128049612045288
    6. '<|end|>' → logprob: -3.253049612045288
    7. ',' → logprob: -3.753049612045288
    8. '<|end|>' → logprob: -4.128049850463867
    9. ' continues' → logprob: -4.878049850463867
    10. 'contin' → logprob: -4.878049850463867

Token 269: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17148181796073914
    2. ' from' → logprob: -2.4214818477630615
    3. 'from' → logprob: -3.0464818477630615
    4. '           ' → logprob: -5.671481609344482
    5. ')' → logprob: -6.171481609344482
    6. ' =' → logprob: -6.296481609344482
    7. ',' → logprob: -6.296481609344482
    8. ' at' → logprob: -6.546481609344482
    9. ' with' → logprob: -6.921481609344482
    10. 'prob' → logprob: -6.921481609344482

Token 270: ' cet' (ID: 19505)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0027468616608530283
    2. 'dfs' → logprob: -6.877747058868408
    3. 'l' → logprob: -7.127747058868408
    4. ' i' → logprob: -7.627747058868408
    5. 'r' → logprob: -8.75274658203125
    6. '0' → logprob: -9.00274658203125
    7. 'prob' → logprob: -10.75274658203125
    8. 'la' → logprob: -10.75274658203125
    9. 'k' → logprob: -10.87774658203125
    10. ' ' → logprob: -11.37774658203125

Token 271: ' enn' (ID: 23075)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.658241331577301
    2. ' endroit' → logprob: -1.5332412719726562
    3. 'em' → logprob: -2.4082412719726562
    4. 'enn' → logprob: -3.1582412719726562
    5. 'indice' → logprob: -3.9082412719726562
    6. 'end' → logprob: -4.033241271972656
    7. 'es' → logprob: -4.033241271972656
    8. 'r' → logprob: -4.158241271972656
    9. 'index' → logprob: -4.658241271972656
    10. 'e' → logprob: -4.908241271972656

Token 272: 'emi' (ID: 18504)
  Prédit: 'emi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'emi' → logprob: -0.0636935904622078
    2. 'i' → logprob: -2.8136935234069824
    3. 'd' → logprob: -7.313693523406982
    4. 'em' → logprob: -7.688693523406982
    5. 'emis' → logprob: -9.06369400024414
    6. ' i' → logprob: -9.31369400024414
    7. 'mi' → logprob: -9.43869400024414
    8. 'r' → logprob: -9.81369400024414
    9. '   ' → logprob: -9.81369400024414
    10. 'ui' → logprob: -10.31369400024414

Token 273: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0055498662404716015
    2. 'res' → logprob: -5.630549907684326
    3. '        
' → logprob: -7.505549907684326
    4. ',' → logprob: -8.005549430847168
    5. ' res' → logprob: -8.380549430847168
    6. 'next' → logprob: -8.880549430847168
    7. 'prob' → logprob: -9.130549430847168
    8. '   ' → logprob: -9.630549430847168
    9. '           ' → logprob: -9.755549430847168
    10. '=' → logprob: -9.755549430847168

Token 274: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5133779048919678
    2. 'res' → logprob: -1.2633779048919678
    3. ' res' → logprob: -2.1383779048919678
    4. '   ' → logprob: -8.763378143310547
    5. '```' → logprob: -8.888378143310547
    6. 'prob' → logprob: -9.013378143310547
    7. ' for' → logprob: -9.138378143310547
    8. 'result' → logprob: -9.638378143310547
    9. 'for' → logprob: -9.888378143310547
    10. ',' → logprob: -10.013378143310547

Token 275: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.043809276074171066
    2. '       ' → logprob: -4.043809413909912
    3. 'temp' → logprob: -4.168809413909912
    4. 'tmp' → logprob: -5.668809413909912
    5. ' res' → logprob: -6.168809413909912
    6. 'prob' → logprob: -6.793809413909912
    7. 'curr' → logprob: -6.918809413909912
    8. 'next' → logprob: -7.043809413909912
    9. 'cur' → logprob: -7.543809413909912
    10. 'current' → logprob: -7.793809413909912

Token 276: ' on' (ID: 402)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.017250725999474525
    2. '       ' → logprob: -4.8922505378723145
    3. 'temp' → logprob: -5.2672505378723145
    4. 'tmp' → logprob: -6.5172505378723145
    5. 'prob' → logprob: -7.2672505378723145
    6. 'curr' → logprob: -7.6422505378723145
    7. 'current' → logprob: -8.017251014709473
    8. 'next' → logprob: -8.142251014709473
    9. 'win' → logprob: -8.142251014709473
    10. ' res' → logprob: -8.517251014709473

Token 277: ' pond' (ID: 42367)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.5439247488975525
    2. 'res' → logprob: -0.9189247488975525
    3. '=' → logprob: -4.293924808502197
    4. '+=' → logprob: -6.293924808502197
    5. ' =' → logprob: -6.543924808502197
    6. ' +=' → logprob: -6.668924808502197
    7. '   ' → logprob: -7.043924808502197
    8. '       ' → logprob: -7.668924808502197
    9. '=res' → logprob: -7.918924808502197
    10. 's' → logprob: -9.418924331665039

Token 278: 'ère' (ID: 4346)
  Prédit: 'érer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'érer' → logprob: -0.025455426424741745
    2. 'er' → logprob: -4.275455474853516
    3. 'ér' → logprob: -5.650455474853516
    4. 'érant' → logprob: -6.275455474853516
    5. '\' → logprob: -6.525455474853516
    6. 'erer' → logprob: -6.775455474853516
    7. 'éré' → logprob: -7.150455474853516
    8. 'ération' → logprob: -7.775455474853516
    9. '=' → logprob: -7.775455474853516
    10. 'é' → logprob: -8.275455474853516

Token 279: ' par' (ID: 686)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3964684009552002
    2. ' res' → logprob: -1.8964684009552002
    3. '       ' → logprob: -2.6464684009552
    4. 'win' → logprob: -3.0214684009552
    5. ' win' → logprob: -4.271468162536621
    6. '(res' → logprob: -5.146468162536621
    7. '(
' → logprob: -5.271468162536621
    8. ' p' → logprob: -5.396468162536621
    9. 'with' → logprob: -5.646468162536621
    10. '(' → logprob: -5.771468162536621

Token 280: ' la' (ID: 557)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.7131184935569763
    2. ' win' → logprob: -0.8381184935569763
    3. 'lose' → logprob: -3.963118553161621
    4. ' lose' → logprob: -4.088118553161621
    5. ' p' → logprob: -4.588118553161621
    6. '(win' → logprob: -4.713118553161621
    7. ' (' → logprob: -5.213118553161621
    8. 'p' → logprob: -5.963118553161621
    9. '          ' → logprob: -6.213118553161621
    10. '        ' → logprob: -6.338118553161621

Token 281: ' prob' (ID: 4921)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.5039986968040466
    2. ' win' → logprob: -1.2539987564086914
    3. 'prob' → logprob: -2.7539987564086914
    4. 'lose' → logprob: -4.003998756408691
    5. ' p' → logprob: -4.503998756408691
    6. 'p' → logprob: -4.753998756408691
    7. ' lose' → logprob: -5.753998756408691
    8. '   ' → logprob: -7.253998756408691
    9. ' prob' → logprob: -7.253998756408691
    10. '(win' → logprob: -7.628998756408691

Token 282: 'abilité' (ID: 49097)
  Prédit: 'abilité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abilité' → logprob: -0.09599798917770386
    2. 'ability' → logprob: -3.2209980487823486
    3. 'alité' → logprob: -4.0959978103637695
    4. 'ility' → logprob: -4.0959978103637695
    5. 'ilité' → logprob: -4.7209978103637695
    6. 'abil' → logprob: -5.2209978103637695
    7. 'ab' → logprob: -6.2209978103637695
    8. 'ality' → logprob: -7.3459978103637695
    9. 'al' → logprob: -7.9709978103637695
    10. 'ail' → logprob: -9.09599781036377

Token 283: ' qu' (ID: 474)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18018373847007751
    2. 'win' → logprob: -2.4301836490631104
    3. '           ' → logprob: -3.0551836490631104
    4. 'res' → logprob: -3.9301836490631104
    5. '   ' → logprob: -5.9301838874816895
    6. ' win' → logprob: -6.0551838874816895
    7. '*' → logprob: -6.1801838874816895
    8. 'result' → logprob: -7.5551838874816895
    9. ' res' → logprob: -7.9301838874816895
    10. '               ' → logprob: -8.180183410644531

Token 284: ''il' (ID: 14683)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.262890100479126
    2. '=' → logprob: -1.637890100479126
    3. '           ' → logprob: -2.262890100479126
    4. ' win' → logprob: -2.512890100479126
    5. ' p' → logprob: -2.762890100479126
    6. 'win' → logprob: -3.012890100479126
    7. '   ' → logprob: -3.512890100479126
    8. 'ue' → logprob: -3.637890100479126
    9. 'e' → logprob: -3.762890100479126
    10. ''' → logprob: -4.012889862060547

Token 285: ' ait' (ID: 43015)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.010176513344049454
    2. ' gagne' → logprob: -5.760176658630371
    3. 'ess' → logprob: -6.385176658630371
    4. 'essa' → logprob: -6.760176658630371
    5. ' g' → logprob: -7.010176658630371
    6. 'rem' → logprob: -7.385176658630371
    7. ' rem' → logprob: -7.885176658630371
    8. 'cesse' → logprob: -8.010176658630371
    9. 'atte' → logprob: -8.510176658630371
    10. 'a' → logprob: -8.510176658630371

Token 286: ' batt' (ID: 23722)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.3821990191936493
    2. 'win' → logprob: -1.6321990489959717
    3. 'success' → logprob: -3.2571990489959717
    4. ' win' → logprob: -4.382198810577393
    5. 'succ' → logprob: -4.757198810577393
    6. 'won' → logprob: -4.882198810577393
    7. ' gagné' → logprob: -4.882198810577393
    8. ' success' → logprob: -5.382198810577393
    9. 'vain' → logprob: -5.382198810577393
    10. ' réussi' → logprob: -5.632198810577393

Token 287: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.004647995810955763
    2. 'ue' → logprob: -5.504648208618164
    3. 'ut' → logprob: -9.379648208618164
    4. 'us' → logprob: -9.504648208618164
    5. 're' → logprob: -9.754648208618164
    6. '```' → logprob: -9.754648208618164
    7. 'é' → logprob: -9.879648208618164
    8. '   ' → logprob: -10.504648208618164
    9. 'uto' → logprob: -10.629648208618164
    10. 'ues' → logprob: -10.879648208618164

Token 288: ' tous' (ID: 10688)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.639175295829773
    2. 'i' → logprob: -1.389175295829773
    3. ' l' → logprob: -2.5141754150390625
    4. 'l' → logprob: -2.5141754150390625
    5. ' ' → logprob: -4.5141754150390625
    6. ' win' → logprob: -4.6391754150390625
    7. ' ce' → logprob: -5.2641754150390625
    8. 'les' → logprob: -5.2641754150390625
    9. ' les' → logprob: -5.3891754150390625
    10. ' tous' → logprob: -5.3891754150390625

Token 289: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.179353952407837
    2. ' i' → logprob: -1.429353952407837
    3. ' les' → logprob: -1.554353952407837
    4. 'les' → logprob: -1.804353952407837
    5. '   ' → logprob: -3.679353952407837
    6. '       ' → logprob: -3.804353952407837
    7. ' ' → logprob: -5.179353713989258
    8. 'l' → logprob: -5.429353713989258
    9. ' enemies' → logprob: -5.804353713989258
    10. '(i' → logprob: -6.179353713989258

Token 290: ' ennem' (ID: 164783)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6850252151489258
    2. 'en' → logprob: -1.4350252151489258
    3. 'j' → logprob: -1.9350252151489258
    4. 'enn' → logprob: -2.435025215148926
    5. 'enem' → logprob: -4.810025215148926
    6. ' ennem' → logprob: -5.560025215148926
    7. 'previous' → logprob: -5.935025215148926
    8. 'enemy' → logprob: -6.060025215148926
    9. '```' → logprob: -6.310025215148926
    10. 'enj' → logprob: -6.560025215148926

Token 291: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.4945046007633209
    2. 'emis' → logprob: -0.9945045709609985
    3. 'emi' → logprob: -4.994504451751709
    4. 'em' → logprob: -5.869504451751709
    5. 'emies' → logprob: -5.869504451751709
    6. 'ems' → logprob: -6.119504451751709
    7. 'mis' → logprob: -6.369504451751709
    8. 'i' → logprob: -6.869504451751709
    9. 's' → logprob: -7.619504451751709
    10. 'e' → logprob: -8.307004928588867

Token 292: ' précéd' (ID: 55435)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.464736819267273
    2. 'res' → logprob: -1.714736819267273
    3. ' =' → logprob: -1.964736819267273
    4. ' *=' → logprob: -2.0897369384765625
    5. '*' → logprob: -2.2147369384765625
    6. ' *' → logprob: -2.7147369384765625
    7. '=' → logprob: -2.8397369384765625
    8. ' +=' → logprob: -3.0897369384765625
    9. '*=' → logprob: -4.4647369384765625
    10. '   ' → logprob: -5.2147369384765625

Token 293: 'ents' (ID: 1094)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.017421899363398552
    2. 'u' → logprob: -4.642421722412109
    3. '   ' → logprob: -5.392421722412109
    4. 'ues' → logprob: -7.142421722412109
    5. '       ' → logprob: -7.767421722412109
    6. 'endus' → logprob: -8.01742172241211
    7. 'ent' → logprob: -8.14242172241211
    8. 'ents' → logprob: -8.14242172241211
    9. 'i' → logprob: -8.89242172241211
    10. 'is' → logprob: -9.51742172241211

Token 294: ' sans' (ID: 9828)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6278226971626282
    2. '       ' → logprob: -1.7528226375579834
    3. ' ' → logprob: -2.3778226375579834
    4. '*' → logprob: -2.5028226375579834
    5. ')' → logprob: -3.5028226375579834
    6. ' p' → logprob: -3.8778226375579834
    7. '<|end|>' → logprob: -4.2528228759765625
    8. '   ' → logprob: -4.8778228759765625
    9. '*p' → logprob: -4.8778228759765625
    10. '        ' → logprob: -5.1278228759765625

Token 295: ' perdre' (ID: 67220)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.8814221620559692
    2. 'fail' → logprob: -1.5064221620559692
    3. 'per' → logprob: -1.8814221620559692
    4. 'e' → logprob: -3.6314220428466797
    5. ' perdre' → logprob: -3.6314220428466797
    6. 'inter' → logprob: -3.6314220428466797
    7. 'éch' → logprob: -3.7564220428466797
    8. 'er' → logprob: -4.00642204284668
    9. 'éc' → logprob: -4.13142204284668
    10. 'failure' → logprob: -5.13142204284668

Token 296: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1404135674238205
    2. ' p' → logprob: -2.265413522720337
    3. 'p' → logprob: -4.390413761138916
    4. '*p' → logprob: -5.515413761138916
    5. 'prob' → logprob: -5.890413761138916
    6. ' *' → logprob: -6.390413761138916
    7. '   ' → logprob: -6.515413761138916
    8. ',' → logprob: -7.140413761138916
    9. 'res' → logprob: -7.265413761138916
    10. '*' → logprob: -7.265413761138916

Token 297: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04631836339831352
    2. 'res' → logprob: -4.046318531036377
    3. ' res' → logprob: -4.671318531036377
    4. ' p' → logprob: -5.421318531036377
    5. '           ' → logprob: -5.671318531036377
    6. '   ' → logprob: -6.046318531036377
    7. 'prob' → logprob: -6.421318531036377
    8. ' *' → logprob: -7.296318531036377
    9. '<|end|>' → logprob: -7.546318531036377
    10. '
' → logprob: -7.546318531036377

Token 298: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.09914116561412811
    2. '       ' → logprob: -3.0991411209106445
    3. ' res' → logprob: -3.7241411209106445
    4. '
' → logprob: -3.9741411209106445
    5. 'p' → logprob: -6.2241411209106445
    6. 'prob' → logprob: -6.5991411209106445
    7. '   ' → logprob: -6.8491411209106445
    8. '           ' → logprob: -6.9741411209106445
    9. ' p' → logprob: -7.8491411209106445
    10. 'current' → logprob: -8.849141120910645

Token 299: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.0249394178390503
    2. '=' → logprob: -1.1499394178390503
    3. ' =' → logprob: -1.6499394178390503
    4. '+=' → logprob: -2.02493953704834
    5. '+' → logprob: -9.27493953704834
    6. 'max' → logprob: -9.27493953704834
    7. '=max' → logprob: -9.27493953704834
    8. ' ' → logprob: -9.39993953704834
    9. '   ' → logprob: -10.14993953704834
    10. ' max' → logprob: -11.02493953704834

Token 300: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.313264936208725
    2. 'max' → logprob: -1.3132649660110474
    3. '	max' → logprob: -13.813264846801758
    4. ' ' → logprob: -14.188264846801758
    5. '   ' → logprob: -14.188264846801758
    6. ' res' → logprob: -14.813264846801758
    7. '(max' → logprob: -15.438264846801758
    8. 'res' → logprob: -16.313264846801758
    9. '  ' → logprob: -17.188264846801758
    10. ' ' → logprob: -17.563264846801758

Token 301: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0011711753904819489
    2. '(' → logprob: -6.751171112060547
    3. '(
' → logprob: -14.751171112060547
    4. 'res' → logprob: -15.126171112060547
    5. ' (' → logprob: -16.251171112060547
    6. ',res' → logprob: -17.501171112060547
    7. '(

' → logprob: -17.501171112060547
    8. '	res' → logprob: -17.876171112060547
    9. '(re' → logprob: -18.126171112060547
    10. ' res' → logprob: -18.126171112060547

Token 302: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017773980274796486
    2. '(res' → logprob: -4.6427741050720215
    3. ',res' → logprob: -5.0177741050720215
    4. '(' → logprob: -7.1427741050720215
    5. ' ,' → logprob: -7.8927741050720215
    6. 'res' → logprob: -8.767773628234863
    7. ',
' → logprob: -10.892773628234863
    8. '(
' → logprob: -12.017773628234863
    9. ')' → logprob: -12.392773628234863
    10. ' (' → logprob: -12.767773628234863

Token 303: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.007936762645840645
    2. ' p' → logprob: -4.882936954498291
    3. 'win' → logprob: -8.632936477661133
    4. '   ' → logprob: -9.257936477661133
    5. 'res' → logprob: -11.132936477661133
    6. '           ' → logprob: -11.632936477661133
    7. ' ' → logprob: -12.007936477661133
    8. 'prob' → logprob: -12.132936477661133
    9. 'max' → logprob: -12.507936477661133
    10. '  ' → logprob: -12.882936477661133

Token 304: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.08894447982311249
    2. '*' → logprob: -2.463944435119629
    3. '   ' → logprob: -13.338944435119629
    4. ' ' → logprob: -13.838944435119629
    5. '          ' → logprob: -14.713944435119629
    6. '           ' → logprob: -14.713944435119629
    7. '         ' → logprob: -14.838944435119629
    8. ')' → logprob: -15.088944435119629
    9. '        ' → logprob: -15.838944435119629
    10. '**' → logprob: -15.838944435119629

Token 305: ' win' (ID: 4449)
  Prédit: '(win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(win' → logprob: -0.08911897242069244
    2. '(' → logprob: -3.2141189575195312
    3. '(
' → logprob: -3.7141189575195312
    4. 'win' → logprob: -3.9641189575195312
    5. ' (' → logprob: -7.089118957519531
    6. '(w' → logprob: -7.839118957519531
    7. '   ' → logprob: -9.089118957519531
    8. '(

' → logprob: -10.089118957519531
    9. '(
' → logprob: -10.214118957519531
    10. ' ' → logprob: -10.214118957519531

Token 306: '_prob' (ID: 50074)
  Prédit: '_prob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prob' → logprob: -1.2664456789934775e-06
    2. '_probs' → logprob: -14.125000953674316
    3. 'prob' → logprob: -15.250000953674316
    4. '_probability' → logprob: -15.750000953674316
    5. '_pro' → logprob: -17.000001907348633
    6. ' _' → logprob: -18.000001907348633
    7. '_' → logprob: -18.375001907348633
    8. '_p' → logprob: -18.750001907348633
    9. '_prof' → logprob: -18.875001907348633
    10. 'Prob' → logprob: -19.000001907348633

Token 307: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.11284264922142029
    2. '*' → logprob: -2.237842559814453
    3. '   ' → logprob: -11.112842559814453
    4. 'dfs' → logprob: -13.362842559814453
    5. ' ' → logprob: -13.737842559814453
    6. ' dfs' → logprob: -14.237842559814453
    7. ')' → logprob: -14.987842559814453
    8. '  ' → logprob: -15.112842559814453
    9. '       ' → logprob: -15.112842559814453
    10. '    ' → logprob: -15.362842559814453

Token 308: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.00043162284418940544
    2. ' dfs' → logprob: -7.750431537628174
    3. 'df' → logprob: -14.625432014465332
    4. '   ' → logprob: -14.875432014465332
    5. ' ' → logprob: -16.875431060791016
    6. '  ' → logprob: -17.125431060791016
    7. 'dp' → logprob: -17.375431060791016
    8. 'd' → logprob: -17.875431060791016
    9. '
' → logprob: -18.000431060791016
    10. 'ds' → logprob: -19.000431060791016

Token 309: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -5.0020742492051795e-05
    2. 'k' → logprob: -10.125049591064453
    3. '(' → logprob: -11.625049591064453
    4. '(
' → logprob: -14.375049591064453
    5. ' (' → logprob: -15.625049591064453
    6. '   ' → logprob: -16.000049591064453
    7. ' k' → logprob: -17.625049591064453
    8. '```' → logprob: -17.875049591064453
    9. '	k' → logprob: -18.125049591064453
    10. '(i' → logprob: -18.375049591064453

Token 310: ',' (ID: 11)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.002524649491533637
    2. '(' → logprob: -6.1275248527526855
    3. '+' → logprob: -9.002524375915527
    4. '(+' → logprob: -9.627524375915527
    5. '(n' → logprob: -10.377524375915527
    6. '(
' → logprob: -10.377524375915527
    7. '(k' → logprob: -10.502524375915527
    8. ' (' → logprob: -10.502524375915527
    9. ',' → logprob: -11.127524375915527
    10. ',i' → logprob: -12.127524375915527

Token 311: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.010557830333709717
    2. 'r' → logprob: -4.760557651519775
    3. ' i' → logprob: -6.635557651519775
    4. '   ' → logprob: -8.135558128356934
    5. '(i' → logprob: -8.635558128356934
    6. ' ' → logprob: -9.760558128356934
    7. '  ' → logprob: -10.385558128356934
    8. 'k' → logprob: -10.885558128356934
    9. 'n' → logprob: -11.260558128356934
    10. ' r' → logprob: -11.510558128356934

Token 312: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023246292024850845
    2. ' +' → logprob: -3.7732462882995605
    3. '+i' → logprob: -15.773246765136719
    4. '   ' → logprob: -16.02324676513672
    5. '＋' → logprob: -16.14824676513672
    6. '+
' → logprob: -16.39824676513672
    7. '1' → logprob: -16.77324676513672
    8. ')+' → logprob: -16.89824676513672
    9. '()+' → logprob: -17.14824676513672
    10. 's' → logprob: -17.14824676513672

Token 313: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.62501049041748
    3. ')' → logprob: -15.00001049041748
    4. '   ' → logprob: -15.31251049041748
    5. '```' → logprob: -15.43751049041748
    6. '2' → logprob: -15.56251049041748
    7. '``' → logprob: -17.062509536743164
    8. '
' → logprob: -17.312509536743164
    9. '۱' → logprob: -17.875009536743164
    10. 'i' → logprob: -18.000009536743164

Token 314: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.610702363715973e-06
    2. ' ' → logprob: -11.625009536743164
    3. '```' → logprob: -15.937509536743164
    4. ')' → logprob: -16.062509536743164
    5. 'i' → logprob: -16.125009536743164
    6. '   ' → logprob: -16.250009536743164
    7. 'r' → logprob: -17.000009536743164
    8. '2' → logprob: -17.062509536743164
    9. '``' → logprob: -17.812509536743164
    10. '
' → logprob: -17.875009536743164

Token 315: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007846875116229057
    2. '))' → logprob: -5.007846832275391
    3. '))
' → logprob: -8.00784683227539
    4. ' )' → logprob: -8.13284683227539
    5. ')+' → logprob: -8.50784683227539
    6. ')
' → logprob: -8.50784683227539
    7. '))

' → logprob: -10.63284683227539
    8. '   ' → logprob: -10.75784683227539
    9. ',' → logprob: -11.25784683227539
    10. ' ' → logprob: -11.88284683227539

Token 316: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.017008507624268532
    2. '+' → logprob: -4.267008304595947
    3. ')' → logprob: -6.017008304595947
    4. ' +
' → logprob: -9.267008781433105
    5. ' ' → logprob: -9.517008781433105
    6. ' )' → logprob: -10.267008781433105
    7. ',' → logprob: -10.392008781433105
    8. '          ' → logprob: -10.517008781433105
    9. '),' → logprob: -10.892008781433105
    10. ')+' → logprob: -10.892008781433105

Token 317: ' (' (ID: 350)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0020624727476388216
    2. ' p' → logprob: -6.3770623207092285
    3. '(' → logprob: -9.002062797546387
    4. '(p' → logprob: -9.627062797546387
    5. 'lose' → logprob: -10.002062797546387
    6. '   ' → logprob: -10.252062797546387
    7. '          ' → logprob: -11.127062797546387
    8. '           ' → logprob: -11.627062797546387
    9. ' (' → logprob: -11.877062797546387
    10. '    ' → logprob: -12.002062797546387

Token 318: '1' (ID: 16)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0009201543871313334
    2. ' p' → logprob: -7.000920295715332
    3. 'prob' → logprob: -12.875920295715332
    4. '   ' → logprob: -13.750920295715332
    5. '(p' → logprob: -13.875920295715332
    6. '           ' → logprob: -14.375920295715332
    7. '	p' → logprob: -14.750920295715332
    8. ' ' → logprob: -15.000920295715332
    9. '1' → logprob: -15.000920295715332
    10. '          ' → logprob: -15.250920295715332

Token 319: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8964155316352844
    2. '*' → logprob: -1.3964154720306396
    3. ' -' → logprob: -1.5214154720306396
    4. ' *' → logprob: -2.7714154720306396
    5. ')' → logprob: -3.0214154720306396
    6. ' ' → logprob: -4.896415710449219
    7. '.' → logprob: -6.021415710449219
    8. ',' → logprob: -6.271415710449219
    9. '_' → logprob: -7.146415710449219
    10. 'p' → logprob: -7.521415710449219

Token 320: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.022099550813436508
    2. '(p' → logprob: -4.147099494934082
    3. ' p' → logprob: -5.647099494934082
    4. 'prob' → logprob: -7.522099494934082
    5. '(' → logprob: -7.772099494934082
    6. 'res' → logprob: -7.897099494934082
    7. 'win' → logprob: -8.022099494934082
    8. ' (' → logprob: -8.397099494934082
    9. 'lose' → logprob: -8.522099494934082
    10. '(win' → logprob: -8.522099494934082

Token 321: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.9407773017883301
    2. ')' → logprob: -1.19077730178833
    3. '*' → logprob: -1.19077730178833
    4. ')*' → logprob: -6.69077730178833
    5. ' )' → logprob: -7.81577730178833
    6. ' ' → logprob: -10.190776824951172
    7. '*)' → logprob: -11.315776824951172
    8. ' ' → logprob: -13.190776824951172
    9. ',' → logprob: -13.815776824951172
    10. '),' → logprob: -14.315776824951172

Token 322: ' win' (ID: 4449)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.03766029328107834
    2. 'lose' → logprob: -3.4126603603363037
    3. ' win' → logprob: -5.787660121917725
    4. ' lose' → logprob: -7.162660121917725
    5. '(win' → logprob: -10.287660598754883
    6. 'loss' → logprob: -10.537660598754883
    7. '   ' → logprob: -10.787660598754883
    8. ' ' → logprob: -10.787660598754883
    9. '	win' → logprob: -11.412660598754883
    10. 'fail' → logprob: -12.225160598754883

Token 323: '_prob' (ID: 50074)
  Prédit: '_prob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prob' → logprob: -0.0002703953068703413
    2. 'prob' → logprob: -8.25027084350586
    3. 'lose' → logprob: -12.37527084350586
    4. '*' → logprob: -13.62527084350586
    5. 'win' → logprob: -14.00027084350586
    6. 'Prob' → logprob: -14.00027084350586
    7. ')' → logprob: -14.12527084350586
    8. '_pred' → logprob: -15.87527084350586
    9. '_prog' → logprob: -16.25027084350586
    10. '_win' → logprob: -16.62527084350586

Token 324: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002089711604639888
    2. ' )' → logprob: -6.627089500427246
    3. ')*' → logprob: -7.502089500427246
    4. '*' → logprob: -8.752089500427246
    5. ' *' → logprob: -10.377089500427246
    6. '*)' → logprob: -12.252089500427246
    7. '   ' → logprob: -12.502089500427246
    8. ' ' → logprob: -12.627089500427246
    9. ')
' → logprob: -13.002089500427246
    10. '）' → logprob: -14.127089500427246

Token 325: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.11528061330318451
    2. '*' → logprob: -2.2402806282043457
    3. ')' → logprob: -6.115280628204346
    4. ',' → logprob: -9.365280151367188
    5. ')*' → logprob: -10.365280151367188
    6. ' )' → logprob: -10.740280151367188
    7. ' ' → logprob: -10.740280151367188
    8. '   ' → logprob: -11.365280151367188
    9. ' dfs' → logprob: -11.490280151367188
    10. '),' → logprob: -11.490280151367188

Token 326: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.001509150955826044
    2. ' dfs' → logprob: -6.501509189605713
    3. 'df' → logprob: -12.751508712768555
    4. '0' → logprob: -12.876508712768555
    5. 'd' → logprob: -15.001508712768555
    6. ' ' → logprob: -16.001508712768555
    7. '   ' → logprob: -16.126508712768555
    8. '(' → logprob: -16.126508712768555
    9. '(d' → logprob: -16.126508712768555
    10. 'dfa' → logprob: -16.251508712768555

Token 327: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0028122442308813334
    2. 'k' → logprob: -5.877812385559082
    3. '(' → logprob: -12.502812385559082
    4. ' (' → logprob: -12.627812385559082
    5. '
' → logprob: -15.877812385559082
    6. '(
' → logprob: -16.002811431884766
    7. '[k' → logprob: -17.002811431884766
    8. ' k' → logprob: -17.002811431884766
    9. '((' → logprob: -17.502811431884766
    10. ')' → logprob: -17.752811431884766

Token 328: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011101586744189262
    2. ' +' → logprob: -4.511101722717285
    3. ' ' → logprob: -11.136101722717285
    4. '1' → logprob: -11.136101722717285
    5. 'k' → logprob: -12.011101722717285
    6. ',' → logprob: -12.136101722717285
    7. 'plus' → logprob: -12.636101722717285
    8. '   ' → logprob: -13.511101722717285
    9. ' plus' → logprob: -14.011101722717285
    10. '+,' → logprob: -14.011101722717285

Token 329: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2142316699028015
    2. ',' → logprob: -1.8392317295074463
    3. ',i' → logprob: -3.9642317295074463
    4. ' i' → logprob: -4.589231491088867
    5. '(i' → logprob: -5.964231491088867
    6. '1' → logprob: -6.464231491088867
    7. ' ,' → logprob: -8.464231491088867
    8. ' (' → logprob: -8.589231491088867
    9. ' ' → logprob: -9.464231491088867
    10. '(' → logprob: -9.464231491088867

Token 330: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0032204915769398212
    2. ' i' → logprob: -6.253220558166504
    3. 'r' → logprob: -7.628220558166504
    4. '1' → logprob: -7.753220558166504
    5. '(i' → logprob: -8.753220558166504
    6. '0' → logprob: -9.753220558166504
    7. ',i' → logprob: -9.753220558166504
    8. ',' → logprob: -10.003220558166504
    9. ' ' → logprob: -11.253220558166504
    10. 'k' → logprob: -11.753220558166504

Token 331: ',' (ID: 11)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00035048185964114964
    2. ',i' → logprob: -8.625350952148438
    3. '(' → logprob: -9.625350952148438
    4. ',' → logprob: -9.875350952148438
    5. 'i' → logprob: -10.000350952148438
    6. '(r' → logprob: -12.000350952148438
    7. ' i' → logprob: -14.000350952148438
    8. ' (' → logprob: -14.250350952148438
    9. 'r' → logprob: -15.875350952148438
    10. '(
' → logprob: -16.875350952148438

Token 332: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.186122770188376e-05
    2. ' i' → logprob: -9.500091552734375
    3. 'r' → logprob: -11.000091552734375
    4. '   ' → logprob: -15.375091552734375
    5. ' ' → logprob: -17.000091552734375
    6. '     ' → logprob: -17.625091552734375
    7. '  ' → logprob: -17.750091552734375
    8. ')' → logprob: -18.000091552734375
    9. '       ' → logprob: -18.250091552734375
    10. '	i' → logprob: -18.250091552734375

Token 333: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06246335431933403
    2. ')' → logprob: -2.8124632835388184
    3. ' ))' → logprob: -8.437463760375977
    4. '))
' → logprob: -9.312463760375977
    5. ' )' → logprob: -9.687463760375977
    6. ')))' → logprob: -9.812463760375977
    7. '   ' → logprob: -10.937463760375977
    8. '       ' → logprob: -11.062463760375977
    9. ')
' → logprob: -11.812463760375977
    10. '+' → logprob: -11.937463760375977

Token 334: '       ' (ID: 309)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.8049821853637695
    2. ' p' → logprob: -1.3049821853637695
    3. '       ' → logprob: -1.6799821853637695
    4. '        
' → logprob: -3.0549821853637695
    5. '   ' → logprob: -4.8049821853637695
    6. '\n' → logprob: -4.9299821853637695
    7. ' ' → logprob: -4.9299821853637695
    8. 'p' → logprob: -4.9299821853637695
    9. '    
' → logprob: -5.1799821853637695
    10. '(p' → logprob: -6.0549821853637695

Token 335: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.455071359872818
    2. ' p' → logprob: -1.3300713300704956
    3. 'p' → logprob: -2.580071449279785
    4. '        
' → logprob: -3.830071449279785
    5. '   ' → logprob: -6.830071449279785
    6. ' 
' → logprob: -7.205071449279785
    7. ' ' → logprob: -7.830071449279785
    8. ' ' → logprob: -8.705071449279785
    9. '    
' → logprob: -8.955071449279785
    10. '(p' → logprob: -8.955071449279785

Token 336: ' mise' (ID: 25868)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.05505785718560219
    2. ' p' → logprob: -2.9300577640533447
    3. '   ' → logprob: -9.055057525634766
    4. '       ' → logprob: -9.930057525634766
    5. '    ' → logprob: -12.805057525634766
    6. ' ' → logprob: -13.055057525634766
    7. '
' → logprob: -13.555057525634766
    8. '  ' → logprob: -14.055057525634766
    9. '           ' → logprob: -14.305057525634766
    10. '	p' → logprob: -14.805057525634766

Token 337: ' à' (ID: 1221)
  Prédit: ' *='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.790052592754364
    2. '*=' → logprob: -0.790052592754364
    3. '   ' → logprob: -2.915052652359009
    4. '=' → logprob: -3.915052652359009
    5. '    ' → logprob: -4.54005241394043
    6. ' =' → logprob: -6.04005241394043
    7. '  ' → logprob: -6.54005241394043
    8. ' à' → logprob: -7.29005241394043
    9. 'au' → logprob: -7.29005241394043
    10. '*' → logprob: -7.41505241394043

Token 338: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.43208611011505127
    2. ' jour' → logprob: -1.1820861101150513
    3. 'day' → logprob: -3.1820859909057617
    4. 'p' → logprob: -6.807085990905762
    5. 'max' → logprob: -7.807085990905762
    6. 'jours' → logprob: -8.307085990905762
    7. 'jou' → logprob: -8.807085990905762
    8. ' ' → logprob: -9.057085990905762
    9. ' jours' → logprob: -9.057085990905762
    10. '1' → logprob: -9.182085990905762

Token 339: ' de' (ID: 334)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.496927946805954
    2. ' p' → logprob: -0.9969279766082764
    3. ' *=' → logprob: -4.121927738189697
    4. '*=' → logprob: -5.621927738189697
    5. '   ' → logprob: -6.621927738189697
    6. ' ' → logprob: -7.621927738189697
    7. '=' → logprob: -7.871927738189697
    8. '*' → logprob: -8.621928215026855
    9. '*p' → logprob: -9.246928215026855
    10. ' =' → logprob: -9.246928215026855

Token 340: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.009756323881447315
    2. ' p' → logprob: -4.634756088256836
    3. '(p' → logprob: -16.259756088256836
    4. '   ' → logprob: -16.509756088256836
    5. ' ' → logprob: -16.884756088256836
    6. '```' → logprob: -16.884756088256836
    7. 'res' → logprob: -17.634756088256836
    8. '	p' → logprob: -18.009756088256836
    9. 'prob' → logprob: -18.009756088256836
    10. '_p' → logprob: -18.634756088256836

Token 341: ' pour' (ID: 1930)
  Prédit: ' *='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.04446202889084816
    2. '*=' → logprob: -3.294461965560913
    3. ' *' → logprob: -5.544462203979492
    4. '*' → logprob: -6.669462203979492
    5. '   ' → logprob: -7.419462203979492
    6. '=' → logprob: -8.544462203979492
    7. ' p' → logprob: -8.544462203979492
    8. '  ' → logprob: -9.419462203979492
    9. '    ' → logprob: -10.294462203979492
    10. ' =' → logprob: -10.419462203979492

Token 342: ' la' (ID: 557)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.25219136476516724
    2. ' p' → logprob: -1.5021913051605225
    3. '(p' → logprob: -9.127191543579102
    4. '   ' → logprob: -9.627191543579102
    5. ' (' → logprob: -10.377191543579102
    6. '*p' → logprob: -11.002191543579102
    7. ' ' → logprob: -11.252191543579102
    8. '(' → logprob: -11.752191543579102
    9. '  ' → logprob: -12.877191543579102
    10. '    ' → logprob: -13.002191543579102

Token 343: ' prochaine' (ID: 78876)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2305404245853424
    2. ' p' → logprob: -1.60554039478302
    3. '*' → logprob: -6.9805402755737305
    4. '*=' → logprob: -7.4805402755737305
    5. '*p' → logprob: -7.7305402755737305
    6. ' *=' → logprob: -7.7305402755737305
    7. ' ' → logprob: -8.10554027557373
    8. ' next' → logprob: -8.23054027557373
    9. 'prob' → logprob: -8.23054027557373
    10. '   ' → logprob: -8.35554027557373

Token 344: ' salle' (ID: 35653)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.2158140391111374
    2. ' *=' → logprob: -2.2158141136169434
    3. '*' → logprob: -2.9658141136169434
    4. 'p' → logprob: -3.9658141136169434
    5. '=' → logprob: -5.340814113616943
    6. '   ' → logprob: -5.465814113616943
    7. ' p' → logprob: -5.965814113616943
    8. '  ' → logprob: -6.715814113616943
    9. '*p' → logprob: -7.215814113616943
    10. ' *' → logprob: -7.590814113616943

Token 345: '
' (ID: 198)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.20288510620594025
    2. ' *=' → logprob: -1.7028851509094238
    3. '*' → logprob: -6.827885150909424
    4. '   ' → logprob: -8.327884674072266
    5. '=' → logprob: -10.077884674072266
    6. ' *' → logprob: -10.452884674072266
    7. 'p' → logprob: -10.952884674072266
    8. '*p' → logprob: -11.077884674072266
    9. ' p' → logprob: -11.202884674072266
    10. '  ' → logprob: -11.577884674072266

Token 346: '       ' (ID: 309)
  Prédit: ' *='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.2593630850315094
    2. '       ' → logprob: -1.759363055229187
    3. '*=' → logprob: -3.5093631744384766
    4. '   ' → logprob: -4.384363174438477
    5. ' =' → logprob: -5.509363174438477
    6. '=' → logprob: -5.884363174438477
    7. '```' → logprob: -6.759363174438477
    8. ' *' → logprob: -6.884363174438477
    9. '*' → logprob: -7.009363174438477
    10. '    
' → logprob: -7.134363174438477

Token 347: ' p' (ID: 275)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.5382089614868164
    2. 'p' (adapté à ' p') → logprob: -1.1632089614868164
    3. ' *=' → logprob: -2.4132089614868164
    4. ' p' → logprob: -4.788208961486816
    5. '   ' → logprob: -5.788208961486816
    6. '=' → logprob: -6.288208961486816
    7. '*' → logprob: -7.288208961486816
    8. '  ' → logprob: -9.913208961486816
    9. ' ' → logprob: -10.038208961486816
    10. '*p' → logprob: -10.163208961486816

Token 348: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.0008650107774883509
    2. ' *=' → logprob: -7.2508649826049805
    3. '=' → logprob: -9.12586498260498
    4. '*' → logprob: -10.00086498260498
    5. '/=' → logprob: -15.12586498260498
    6. '   ' → logprob: -15.50086498260498
    7. '```' → logprob: -16.125865936279297
    8. ' =' → logprob: -16.625865936279297
    9. '  ' → logprob: -16.875865936279297
    10. '	' → logprob: -16.875865936279297

Token 349: ' win' (ID: 4449)
  Prédit: 'lose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lose' → logprob: -0.004666626453399658
    2. ' lose' → logprob: -5.879666805267334
    3. '(' → logprob: -7.004666805267334
    4. 'win' → logprob: -7.504666805267334
    5. 'prob' → logprob: -8.504666328430176
    6. '1' → logprob: -9.879666328430176
    7. '   ' → logprob: -10.129666328430176
    8. '(prob' → logprob: -10.504666328430176
    9. 'los' → logprob: -11.254666328430176
    10. ' ' → logprob: -11.254666328430176

Token 350: '_prob' (ID: 50074)
  Prédit: '_prob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prob' → logprob: -8.65707261255011e-06
    2. 'prob' → logprob: -11.750008583068848
    3. 'Prob' → logprob: -14.500008583068848
    4. '_probs' → logprob: -16.625009536743164
    5. '_loss' → logprob: -17.125009536743164
    6. '_probability' → logprob: -18.000009536743164
    7. 'lose' → logprob: -18.625009536743164
    8. '(prob' → logprob: -18.625009536743164
    9. 'er' → logprob: -18.750009536743164
    10. '_prog' → logprob: -18.750009536743164

Token 351: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 352: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 353: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 354: ' en' (ID: 469)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.042154621332883835
    2. '<|end|>' → logprob: -4.292154788970947
    3. ' return' → logprob: -4.667154788970947
    4. ')' → logprob: -5.042154788970947
    5. '   ' → logprob: -5.042154788970947
    6. ' ' → logprob: -6.417154788970947
    7. 'if' → logprob: -6.917154788970947
    8. '  ' → logprob: -7.917154788970947
    9. '<|end|>' → logprob: -8.042154312133789
    10. '       ' → logprob: -8.042154312133789

Token 355: ' réalité' (ID: 63047)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7311785221099854
    2. 'if' → logprob: -1.4811785221099854
    3. '       ' → logprob: -1.9811785221099854
    4. ' if' → logprob: -2.6061785221099854
    5. 't' → logprob: -3.3561785221099854
    6. 'break' → logprob: -3.6061785221099854
    7. '```' → logprob: -5.481178283691406
    8. '    ' → logprob: -5.606178283691406
    9. ' break' → logprob: -6.231178283691406
    10. '#' → logprob: -6.856178283691406

Token 356: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4532942473888397
    2. ',' → logprob: -1.328294277191162
    3. '   ' → logprob: -2.828294277191162
    4. '           ' → logprob: -4.953294277191162
    5. ' if' → logprob: -5.703294277191162
    6. '#' → logprob: -5.703294277191162
    7. ' ,' → logprob: -5.828294277191162
    8. 'break' → logprob: -5.828294277191162
    9. 'return' → logprob: -6.078294277191162
    10. '
' → logprob: -6.078294277191162

Token 357: ' répart' (ID: 147636)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44486039876937866
    2. 'if' → logprob: -1.5698604583740234
    3. '#' → logprob: -2.4448604583740234
    4. '   ' → logprob: -3.8198604583740234
    5. 'break' → logprob: -3.8198604583740234
    6. ' if' → logprob: -4.569860458374023
    7. ' break' → logprob: -6.694860458374023
    8. 'on' → logprob: -6.944860458374023
    9. 'pass' → logprob: -6.944860458374023
    10. ' #' → logprob: -7.319860458374023

Token 358: 'itions' (ID: 5500)
  Prédit: 'ir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.2284981906414032
    2. 'it' → logprob: -2.2284982204437256
    3. 'ition' → logprob: -2.7284982204437256
    4. 'issons' → logprob: -5.3534979820251465
    5. 'ie' → logprob: -5.6034979820251465
    6. 'i' → logprob: -5.9784979820251465
    7. 'ion' → logprob: -6.1034979820251465
    8. 't' → logprob: -6.2284979820251465
    9. 'er' → logprob: -6.3534979820251465
    10. '   ' → logprob: -6.8534979820251465

Token 359: ' doivent' (ID: 44722)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.40211090445518494
    2. ' =' → logprob: -2.5271108150482178
    3. ' de' → logprob: -3.0271108150482178
    4. '   ' → logprob: -3.6521108150482178
    5. '       ' → logprob: -3.6521108150482178
    6. ' p' → logprob: -4.027111053466797
    7. '    ' → logprob: -4.027111053466797
    8. ' ' → logprob: -4.152111053466797
    9. 'prob' → logprob: -4.152111053466797
    10. ' entre' → logprob: -4.277111053466797

Token 360: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.6865746974945068
    2. 'être' → logprob: -1.1865746974945068
    3. 'se' → logprob: -3.061574697494507
    4. ' se' → logprob: -3.186574697494507
    5. 's' → logprob: -3.436574697494507
    6. ' s' → logprob: -4.311574935913086
    7. ' aussi' → logprob: -4.436574935913086
    8. 'égal' → logprob: -5.061574935913086
    9. '=' → logprob: -5.436574935913086
    10. ' etre' → logprob: -5.936574935913086

Token 361: ' condition' (ID: 7060)
  Prédit: ' optim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' optim' → logprob: -1.8864184617996216
    2. 'prob' → logprob: -2.261418342590332
    3. ' recal' → logprob: -2.261418342590332
    4. ' p' → logprob: -2.761418342590332
    5. '=' → logprob: -2.886418342590332
    6. ' multip' → logprob: -3.011418342590332
    7. 'p' → logprob: -3.011418342590332
    8. 'plus' → logprob: -3.136418342590332
    9. 'optim' → logprob: -3.261418342590332
    10. '+=' → logprob: -3.386418342590332

Token 362: 'nées' (ID: 136473)
  Prédit: 'nées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nées' → logprob: -0.13199438154697418
    2. 'nelles' → logprob: -2.1319944858551025
    3. 'ées' → logprob: -5.631994247436523
    4. 'al' → logprob: -7.881994247436523
    5. 'né' → logprob: -8.006994247436523
    6. 'nés' → logprob: -8.881994247436523
    7. 'é' → logprob: -9.006994247436523
    8. 'nel' → logprob: -9.631994247436523
    9. 'née' → logprob: -9.881994247436523
    10. 'n' → logprob: -10.006994247436523

Token 363: ' soigne' (ID: 196385)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 364: 'usement' (ID: 30201)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.9023588299751282
    2. 'usement' → logprob: -0.9023588299751282
    3. 'rement' → logprob: -2.1523587703704834
    4. 'urement' → logprob: -2.7773587703704834
    5. 'ment' → logprob: -5.5273590087890625
    6. 'l' → logprob: -6.9023590087890625
    7. 'nement' → logprob: -7.1523590087890625
    8. 'r' → logprob: -7.1523590087890625
    9. 'irement' → logprob: -7.4023590087890625
    10. 'vement' → logprob: -7.4023590087890625

Token 365: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 366: ' optimiser' (ID: 195777)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 367: ' en' (ID: 469)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 368: ' part' (ID: 997)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.7145910263061523
    2. 'fonction' → logprob: -2.0895910263061523
    3. ' break' → logprob: -2.7145910263061523
    4. 'continue' → logprob: -3.0895910263061523
    5. '```' → logprob: -3.3395910263061523
    6. '   ' → logprob: -3.7145910263061523
    7. 'continu' → logprob: -3.9645910263061523
    8. ' continu' → logprob: -4.839591026306152
    9. 'if' → logprob: -4.964591026306152
    10. ' cas' → logprob: -4.964591026306152

Token 369: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.22272253036499023
    2. 'ie' → logprob: -1.9727225303649902
    3. 'out' → logprob: -4.09772253036499
    4. 'ir' → logprob: -4.47272253036499
    5. 'age' → logprob: -4.59772253036499
    6. 'iellement' → logprob: -5.59772253036499
    7. 'ic' → logprob: -5.72272253036499
    8. 'icul' → logprob: -6.09772253036499
    9. 'i' → logprob: -6.47272253036499
    10. 'icular' → logprob: -6.59772253036499

Token 370: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5459550023078918
    2. 'from' → logprob: -1.920954942703247
    3. ' du' → logprob: -2.795954942703247
    4. '<|end|>' → logprob: -2.920954942703247
    5. ' from' → logprob: -3.295954942703247
    6. 'de' → logprob: -3.670954942703247
    7. ' des' → logprob: -3.795954942703247
    8. ')' → logprob: -4.045955181121826
    9. ' d' → logprob: -4.670955181121826
    10. '    ' → logprob: -4.670955181121826

Token 371: ' principe' (ID: 58004)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dern' → logprob: -1.5010795593261719
    2. 'r' → logprob: -1.8760795593261719
    3. 'next' → logprob: -2.001079559326172
    4. 'i' → logprob: -2.376079559326172
    5. 'prem' → logprob: -2.501079559326172
    6. 'der' → logprob: -3.126079559326172
    7. 'n' → logprob: -3.126079559326172
    8. 'last' → logprob: -3.626079559326172
    9. '```' → logprob: -3.626079559326172
    10. ' dernier' → logprob: -3.876079559326172

Token 372: ' ci' (ID: 7405)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0865771770477295
    2. ' ' → logprob: -1.2115771770477295
    3. ' que' → logprob: -1.8365771770477295
    4. ' d' → logprob: -3.0865771770477295
    5. '<|end|>' → logprob: -3.2115771770477295
    6. '        ' → logprob: -4.211577415466309
    7. ')' → logprob: -4.211577415466309
    8. '=' → logprob: -4.586577415466309
    9. ' des' → logprob: -4.586577415466309
    10. '    ' → logprob: -4.586577415466309

Token 373: '-dessus' (ID: 74812)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11003867536783218
    2. '#' → logprob: -3.8600387573242188
    3. '+' → logprob: -3.9850387573242188
    4. '       ' → logprob: -4.360038757324219
    5. ' =' → logprob: -4.860038757324219
    6. ',' → logprob: -4.985038757324219
    7. '.' → logprob: -5.360038757324219
    8. 'n' → logprob: -5.360038757324219
    9. '   ' → logprob: -5.735038757324219
    10. 'd' → logprob: -5.735038757324219

Token 374: ':
' (ID: 734)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2830426096916199
    2. '<|end|>' → logprob: -1.4080426692962646
    3. '<|end|>' → logprob: -8.033042907714844
    4. '   ' → logprob: -8.033042907714844
    5. ':' → logprob: -8.408042907714844
    6. ':return' → logprob: -8.408042907714844
    7. ')return' → logprob: -8.783042907714844
    8. '
' → logprob: -8.908042907714844
    9. 'return' → logprob: -8.908042907714844
    10. ')
' → logprob: -9.408042907714844

Token 375: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6455681324005127
    2. '<|end|>' → logprob: -0.7705681324005127
    3. ' ' → logprob: -5.395567893981934
    4. ' )' → logprob: -5.895567893981934
    5. '<|end|>' → logprob: -6.520567893981934
    6. '   ' → logprob: -6.895567893981934
    7. '       ' → logprob: -7.395567893981934
    8. '+' → logprob: -7.645567893981934
    9. '=' → logprob: -8.145567893981934
    10. '
' → logprob: -8.770567893981934

Token 376: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 377: ' mais' (ID: 2899)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31518933176994324
    2. '       ' → logprob: -2.6901893615722656
    3. 'return' → logprob: -2.8151893615722656
    4. '<|end|>' → logprob: -2.9401893615722656
    5. 'break' → logprob: -3.9401893615722656
    6. '   ' → logprob: -4.065189361572266
    7. ' p' → logprob: -4.190189361572266
    8. ' return' → logprob: -4.315189361572266
    9. ' break' → logprob: -5.315189361572266
    10. 'p' → logprob: -5.815189361572266

Token 378: ' ici' (ID: 27994)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3298453688621521
    2. ')' → logprob: -2.829845428466797
    3. '   ' → logprob: -2.954845428466797
    4. ' continue' → logprob: -3.079845428466797
    5. 'continue' → logprob: -3.079845428466797
    6. '    ' → logprob: -3.829845428466797
    7. 'return' → logprob: -4.954845428466797
    8. '        ' → logprob: -5.204845428466797
    9. ' return' → logprob: -5.454845428466797
    10. ' ' → logprob: -5.829845428466797

Token 379: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4694064855575562
    2. '<|end|>' → logprob: -1.4694064855575562
    3. ':' → logprob: -1.8444064855575562
    4. '   ' → logprob: -2.2194066047668457
    5. ')' → logprob: -2.8444066047668457
    6. '=' → logprob: -3.4694066047668457
    7. '    ' → logprob: -3.4694066047668457
    8. ':return' → logprob: -3.7194066047668457
    9. ' =' → logprob: -4.094406604766846
    10. ' ' → logprob: -4.219406604766846

Token 380: ' g' (ID: 329)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1368621587753296
    2. ')' → logprob: -1.3868621587753296
    3. ' continue' → logprob: -1.5118621587753296
    4. 'continue' → logprob: -2.886862277984619
    5. '   ' → logprob: -3.011862277984619
    6. ' )' → logprob: -3.761862277984619
    7. '    ' → logprob: -4.011862277984619
    8. 'break' → logprob: -4.136862277984619
    9. ' break' → logprob: -4.886862277984619
    10. 'return' → logprob: -5.261862277984619

Token 381: 'ère' (ID: 4346)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0264772176742554
    2. '=' → logprob: -1.2764772176742554
    3. 'enerate' → logprob: -1.6514772176742554
    4. 'eneral' → logprob: -3.276477336883545
    5. '#' → logprob: -3.526477336883545
    6. 'break' → logprob: -4.401477336883545
    7. 'continue' → logprob: -4.526477336883545
    8. 'iven' → logprob: -4.651477336883545
    9. 'def' → logprob: -4.901477336883545
    10. 'enerated' → logprob: -5.151477336883545

Token 382: ' global' (ID: 5466)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 383: 'ement' (ID: 962)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1509712040424347
    2. 'return' → logprob: -2.5259711742401123
    3. '       ' → logprob: -3.7759711742401123
    4. '   ' → logprob: -4.400971412658691
    5. '<|end|>' → logprob: -4.900971412658691
    6. ')return' → logprob: -6.275971412658691
    7. 'import' → logprob: -6.525971412658691
    8. '```' → logprob: -6.525971412658691
    9. ']' → logprob: -6.775971412658691
    10. ' return' → logprob: -6.775971412658691

Token 384: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4158385694026947
    2. '<|end|>' → logprob: -1.290838599205017
    3. '   ' → logprob: -2.7908384799957275
    4. '<|end|>' → logprob: -6.665838718414307
    5. ')return' → logprob: -7.040838718414307
    6. 'return' → logprob: -7.290838718414307
    7. ' return' → logprob: -8.165838241577148
    8. '	return' → logprob: -9.540838241577148
    9. '...' → logprob: -9.540838241577148
    10. ')
' → logprob: -9.790838241577148

Token 385: ' la' (ID: 557)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.7453494668006897
    2. 'le' → logprob: -1.620349407196045
    3. 'la' → logprob: -2.245349407196045
    4. 'return' → logprob: -2.620349407196045
    5. 'the' → logprob: -3.120349407196045
    6. 'l' → logprob: -3.370349407196045
    7. ')' → logprob: -3.870349407196045
    8. ' la' → logprob: -4.370349407196045
    9. 'this' → logprob: -4.995349407196045
    10. 'prob' → logprob: -5.620349407196045

Token 386: ' formule' (ID: 84316)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.9842007160186768
    2. 'for' → logprob: -1.8592007160186768
    3. 'code' → logprob: -2.1092007160186768
    4. 'return' → logprob: -2.2342007160186768
    5. ' boucle' → logprob: -3.6092007160186768
    6. 'bou' → logprob: -3.7342007160186768
    7. 'loop' → logprob: -3.8592007160186768
    8. 'continue' → logprob: -3.9842007160186768
    9. ' code' → logprob: -3.9842007160186768
    10. 'prob' → logprob: -4.109200477600098

Token 387: ' ci' (ID: 7405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5261212587356567
    2. '<|end|>' → logprob: -0.9011212587356567
    3. '<|end|>' → logprob: -6.401121139526367
    4. '   ' → logprob: -7.651121139526367
    5. ')return' → logprob: -8.526121139526367
    6. '
' → logprob: -8.651121139526367
    7. ' )' → logprob: -9.151121139526367
    8. ' ' → logprob: -9.651121139526367
    9. ')
' → logprob: -9.901121139526367
    10. 'return' → logprob: -10.026121139526367

Token 388: '-dessus' (ID: 74812)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009066068567335606
    2. '<|end|>' → logprob: -4.759066104888916
    3. ')
' → logprob: -8.134065628051758
    4. '<|end|>' → logprob: -9.634065628051758
    5. ' )' → logprob: -10.259065628051758
    6. '
' → logprob: -10.509065628051758
    7. ')return' → logprob: -11.384065628051758
    8. '   ' → logprob: -13.009065628051758
    9. '```' → logprob: -13.134065628051758
    10. '\n' → logprob: -13.509065628051758

Token 389: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1578826904296875
    2. '<|end|>' → logprob: -2.4078826904296875
    3. '   ' → logprob: -2.9078826904296875
    4. ')return' → logprob: -7.5328826904296875
    5. '<|end|>' → logprob: -8.157882690429688
    6. '       ' → logprob: -8.782882690429688
    7. 'return' → logprob: -9.032882690429688
    8. '	return' → logprob: -9.782882690429688
    9. ')
' → logprob: -10.157882690429688
    10. '
' → logprob: -10.157882690429688

Token 390: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11872055381536484
    2. '<|end|>' → logprob: -2.243720531463623
    3. ':' → logprob: -6.118720531463623
    4. '
' → logprob: -7.118720531463623
    5. ':return' → logprob: -7.118720531463623
    6. '   ' → logprob: -7.368720531463623
    7. '\n' → logprob: -7.868720531463623
    8. ' ' → logprob: -7.993720531463623
    9. '<|end|>' → logprob: -8.743721008300781
    10. ')return' → logprob: -8.868721008300781

Token 391: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4529252052307129
    2. '   ' → logprob: -1.327925205230713
    3. '<|end|>' → logprob: -2.827925205230713
    4. ' return' → logprob: -4.077925205230713
    5. ')' → logprob: -4.702925205230713
    6. ' ' → logprob: -5.077925205230713
    7. '	return' → logprob: -6.327925205230713
    8. '\n' → logprob: -6.702925205230713
    9. '  ' → logprob: -6.827925205230713
    10. ':return' → logprob: -6.952925205230713

Token 392: ' alternative' (ID: 13319)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.007251288276165724
    2. ' return' → logprob: -5.507251262664795
    3. '   ' → logprob: -5.757251262664795
    4. ' ' → logprob: -12.882251739501953
    5. '	return' → logprob: -12.882251739501953
    6. ':return' → logprob: -13.632251739501953
    7. '  ' → logprob: -14.757251739501953
    8. ' ' → logprob: -15.132251739501953
    9. 'eturn' → logprob: -15.382251739501953
    10. '   ' → logprob: -15.632251739501953

Token 393: ' plus' (ID: 2932)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.14103731513023376
    2. '=' → logprob: -2.5160372257232666
    3. '   ' → logprob: -3.6410372257232666
    4. 'return' → logprob: -3.8910372257232666
    5. ' =' → logprob: -6.641037464141846
    6. ' res' → logprob: -6.891037464141846
    7. '
' → logprob: -7.766037464141846
    8. '    
' → logprob: -7.891037464141846
    9. '+=' → logprob: -8.766036987304688
    10. '=
' → logprob: -8.766036987304688

Token 394: ' simple' (ID: 4705)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0703182965517044
    2. ' =' → logprob: -3.6953182220458984
    3. '+=' → logprob: -3.8203182220458984
    4. 'return' → logprob: -5.070318222045898
    5. '.' → logprob: -5.570318222045898
    6. ' +=' → logprob: -6.570318222045898
    7. 'simple' → logprob: -6.695318222045898
    8. ' return' → logprob: -6.695318222045898
    9. 'res' → logprob: -6.820318222045898
    10. ',' → logprob: -6.945318222045898

Token 395: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015718290582299232
    2. 'return' → logprob: -4.265718460083008
    3. ' return' → logprob: -6.765718460083008
    4. '    
' → logprob: -8.640718460083008
    5. '
' → logprob: -9.265718460083008
    6. 'res' → logprob: -9.515718460083008
    7. '	return' → logprob: -11.390718460083008
    8. '   ' → logprob: -11.765718460083008
    9. ' res' → logprob: -12.140718460083008
    10. ',' → logprob: -12.140718460083008

Token 396: ' on' (ID: 402)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09381544589996338
    2. ' return' → logprob: -3.218815326690674
    3. '   ' → logprob: -3.593815326690674
    4. 'res' → logprob: -3.843815326690674
    5. ' res' → logprob: -7.718815326690674
    6. '
' → logprob: -9.468815803527832
    7. '```' → logprob: -10.343815803527832
    8. '    
' → logprob: -10.468815803527832
    9. 'for' → logprob: -11.343815803527832
    10. '#' → logprob: -11.593815803527832

Token 397: ' teste' (ID: 62670)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.18117330968379974
    2. ' return' → logprob: -1.931173324584961
    3. '=' → logprob: -5.056173324584961
    4. '   ' → logprob: -5.181173324584961
    5. 'res' → logprob: -5.681173324584961
    6. ' res' → logprob: -6.806173324584961
    7. ' =' → logprob: -7.181173324584961
    8. '+=' → logprob: -7.431173324584961
    9. 'max' → logprob: -7.931173324584961
    10. '
' → logprob: -8.306173324584961

Token 398: ' chaque' (ID: 21194)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.569623589515686
    2. 'dfs' → logprob: -1.319623589515686
    3. '   ' → logprob: -2.1946234703063965
    4. 'return' → logprob: -3.1946234703063965
    5. ' res' → logprob: -4.6946234703063965
    6. ' dfs' → logprob: -6.3196234703063965
    7. ' return' → logprob: -6.5696234703063965
    8. '
' → logprob: -7.0696234703063965
    9. '    
' → logprob: -7.5696234703063965
    10. ',' → logprob: -8.194623947143555

Token 399: ' point' (ID: 2438)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2231026440858841
    2. 's' → logprob: -3.348102569580078
    3. 'enemy' → logprob: -3.348102569580078
    4. ' i' → logprob: -3.473102569580078
    5. 'possible' → logprob: -3.473102569580078
    6. 'next' → logprob: -4.473102569580078
    7. 'poss' → logprob: -4.973102569580078
    8. 'option' → logprob: -5.598102569580078
    9. ' next' → logprob: -5.723102569580078
    10. 'token' → logprob: -5.848102569580078

Token 400: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2687288224697113
    2. ' return' → logprob: -2.393728733062744
    3. 'return' → logprob: -2.518728733062744
    4. ' ' → logprob: -4.518728733062744
    5. ' =' → logprob: -5.143728733062744
    6. '    
' → logprob: -5.393728733062744
    7. '<|end|>' → logprob: -5.643728733062744
    8. ',' → logprob: -5.643728733062744
    9. '       ' → logprob: -5.768728733062744
    10. '  ' → logprob: -5.893728733062744

Token 401: ' dé' (ID: 2393)
  Prédit: 'rupt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rupt' → logprob: -0.37104636430740356
    2. 'c' → logprob: -1.7460463047027588
    3. 'cass' → logprob: -2.746046304702759
    4. 'arr' → logprob: -3.996046304702759
    5. 'break' → logprob: -4.246046543121338
    6. 'd' → logprob: -4.371046543121338
    7. 'vue' → logprob: -5.371046543121338
    8. 'split' → logprob: -5.746046543121338
    9. 'cut' → logprob: -5.746046543121338
    10. 'division' → logprob: -6.496046543121338

Token 402: 'fa' (ID: 4968)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.0823311060667038
    2. 'c' → logprob: -2.8323311805725098
    3. 'cision' → logprob: -4.20733118057251
    4. 'cou' → logprob: -5.58233118057251
    5. 'cut' → logprob: -7.95733118057251
    6. 'termination' → logprob: -8.457330703735352
    7. 'par' → logprob: -9.457330703735352
    8. 'faite' → logprob: -9.582330703735352
    9. 'break' → logprob: -9.582330703735352
    10. 'ci' → logprob: -9.707330703735352

Token 403: 'illance' (ID: 34659)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.39164310693740845
    2. 'part' → logprob: -1.6416430473327637
    3. 'u' → logprob: -3.5166430473327637
    4. 'cut' → logprob: -3.8916430473327637
    5. 'f' → logprob: -4.266643047332764
    6. 'rupt' → logprob: -5.016643047332764
    7. 'cision' → logprob: -5.516643047332764
    8. 'rt' → logprob: -5.641643047332764
    9. 'rou' → logprob: -5.891643047332764
    10. 'ril' → logprob: -6.016643047332764

Token 404: ' possible' (ID: 4149)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5215515494346619
    2. '   ' → logprob: -1.3965516090393066
    3. '<|end|>' → logprob: -2.1465516090393066
    4. ' ' → logprob: -4.146551609039307
    5. ' return' → logprob: -4.896551609039307
    6. 'return' → logprob: -5.021551609039307
    7. ':return' → logprob: -5.896551609039307
    8. '	return' → logprob: -6.271551609039307
    9. ' )' → logprob: -6.646551609039307
    10. ')
' → logprob: -6.771551609039307

Token 405: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 406: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 407: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7149182558059692
    2. '<|end|>' → logprob: -1.4649182558059692
    3. ' ' → logprob: -2.3399181365966797
    4. ')' → logprob: -2.4649181365966797
    5. ' return' → logprob: -3.0899181365966797
    6. 'return' → logprob: -4.33991813659668
    7. '       ' → logprob: -4.83991813659668
    8. '
' → logprob: -5.08991813659668
    9. ' 
' → logprob: -5.46491813659668
    10. '	return' → logprob: -5.83991813659668

Token 408: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05424552783370018
    2. ' =' → logprob: -3.0542454719543457
    3. 'return' → logprob: -5.679245471954346
    4. '+=' → logprob: -6.679245471954346
    5. ' +=' → logprob: -7.804245471954346
    6. '=max' → logprob: -7.929245471954346
    7. '   ' → logprob: -9.929245948791504
    8. ' return' → logprob: -10.054245948791504
    9. '*=' → logprob: -10.929245948791504
    10. ' ' → logprob: -10.929245948791504

Token 409: ' ' (ID: 220)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5762233734130859
    2. 'max' → logprob: -0.8262233734130859
    3. '1' → logprob: -9.326223373413086
    4. '0' → logprob: -9.451223373413086
    5. ' dfs' → logprob: -10.201223373413086
    6. 'dfs' → logprob: -10.576223373413086
    7. ' ' → logprob: -10.701223373413086
    8. '   ' → logprob: -11.701223373413086
    9. 'res' → logprob: -11.826223373413086
    10. ' res' → logprob: -12.701223373413086

Token 410: '0' (ID: 15)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.012402749620378017
    2. '0' → logprob: -4.762402534484863
    3. ' max' → logprob: -5.762402534484863
    4. 'res' → logprob: -7.762402534484863
    5. 'dfs' → logprob: -8.637402534484863
    6. '1' → logprob: -11.637402534484863
    7. ' ' → logprob: -12.012402534484863
    8. 'sum' → logprob: -12.512402534484863
    9. 'float' → logprob: -12.887402534484863
    10. 'prob' → logprob: -13.012402534484863

Token 411: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0029987392481416464
    2. '0' → logprob: -7.3779988288879395
    3. 'for' → logprob: -7.7529988288879395
    4. ',' → logprob: -7.8779988288879395
    5. '
' → logprob: -8.127998352050781
    6. ' ' → logprob: -8.252998352050781
    7. 'return' → logprob: -8.502998352050781
    8. '=' → logprob: -8.752998352050781
    9. ' for' → logprob: -8.752998352050781
    10. ' return' → logprob: -8.877998352050781

Token 412: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010318557906430215
    2. '5' → logprob: -9.500102996826172
    3. ' ' → logprob: -11.625102996826172
    4. '+' → logprob: -12.375102996826172
    5. '```' → logprob: -12.375102996826172
    6. 'def' → logprob: -13.250102996826172
    7. 'float' → logprob: -13.375102996826172
    8. '.' → logprob: -13.500102996826172
    9. 'max' → logprob: -13.625102996826172
    10. '**' → logprob: -13.875102996826172

Token 413: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6268447041511536
    2. '   ' → logprob: -1.1268446445465088
    3. 'for' → logprob: -2.126844644546509
    4. '
' → logprob: -4.626844882965088
    5. ')' → logprob: -5.376844882965088
    6. '<|end|>' → logprob: -5.626844882965088
    7. 'return' → logprob: -6.626844882965088
    8. ' return' → logprob: -7.376844882965088
    9. '	for' → logprob: -7.376844882965088
    10. ' ' → logprob: -7.751844882965088

Token 414: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.062829852104187
    2. 'for' → logprob: -1.437829852104187
    3. '<|end|>' → logprob: -2.0628299713134766
    4. '   ' → logprob: -2.1878299713134766
    5. ' ' → logprob: -3.1878299713134766
    6. 'return' → logprob: -3.3128299713134766
    7. ' 
' → logprob: -3.5628299713134766
    8. ' return' → logprob: -3.9378299713134766
    9. '\n' → logprob: -4.312829971313477
    10. '
' → logprob: -4.562829971313477

Token 415: ' p' (ID: 275)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09029863029718399
    2. ' for' → logprob: -2.465298652648926
    3. '   ' → logprob: -6.715298652648926
    4. 'p' (adapté à ' p') → logprob: -10.340298652648926
    5. '
' → logprob: -10.590298652648926
    6. 'range' → logprob: -10.715298652648926
    7. 'return' → logprob: -10.840298652648926
    8. ' p' → logprob: -11.715298652648926
    9. 'max' → logprob: -11.840298652648926
    10. ',' → logprob: -12.215298652648926

Token 416: '_pass' (ID: 36293)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5233685970306396
    2. '=' → logprob: -0.8983685970306396
    3. ' *=' → logprob: -9.523368835449219
    4. ' +=' → logprob: -9.773368835449219
    5. ' ' → logprob: -10.023368835449219
    6. 'def' → logprob: -10.648368835449219
    7. '*=' → logprob: -11.523368835449219
    8. 'for' → logprob: -12.023368835449219
    9. ',' → logprob: -12.148368835449219
    10. '+=' → logprob: -12.148368835449219

Token 417: 'ed' (ID: 295)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05539773777127266
    2. ' =' → logprob: -2.9303977489471436
    3. 'age' → logprob: -8.430397987365723
    4. 'ed' → logprob: -8.930397987365723
    5. 'e' → logprob: -10.180397987365723
    6. ' *=' → logprob: -10.680397987365723
    7. '*=' → logprob: -11.180397987365723
    8. ' ' → logprob: -11.305397987365723
    9. 'é' → logprob: -11.430397987365723
    10. '   ' → logprob: -11.680397987365723

Token 418: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1427169144153595
    2. ' =' → logprob: -2.017716884613037
    3. ' ' → logprob: -11.142717361450195
    4. ',' → logprob: -11.142717361450195
    5. '  ' → logprob: -12.892717361450195
    6. '<|end|>' → logprob: -12.892717361450195
    7. ' *=' → logprob: -13.267717361450195
    8. '   ' → logprob: -13.767717361450195
    9. ')' → logprob: -14.517717361450195
    10. '[' → logprob: -14.517717361450195

Token 419: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015955570852383971
    2. ' ' → logprob: -6.501595497131348
    3. '   ' → logprob: -9.751595497131348
    4. '0' → logprob: -10.626595497131348
    5. 'prob' → logprob: -12.126595497131348
    6. '  ' → logprob: -13.564095497131348
    7. 'p' → logprob: -14.064095497131348
    8. '```' → logprob: -14.501595497131348
    9. '       ' → logprob: -14.814095497131348
    10. '...' → logprob: -15.189095497131348

Token 420: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5861724831629544e-05
    2. ' ' → logprob: -10.125056266784668
    3. '0' → logprob: -11.250056266784668
    4. 'prob' → logprob: -13.500056266784668
    5. '   ' → logprob: -14.125056266784668
    6. 'p' → logprob: -16.37505531311035
    7. '```' → logprob: -16.68755531311035
    8. '  ' → logprob: -16.81255531311035
    9. '...' → logprob: -17.12505531311035
    10. '[' → logprob: -17.18755531311035

Token 421: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.029683146625757217
    2. '-' → logprob: -4.2796831130981445
    3. ' -' → logprob: -4.2796831130981445
    4. ' ' → logprob: -7.2796831130981445
    5. 'e' → logprob: -7.7796831130981445
    6. '  ' → logprob: -9.029683113098145
    7. ' *' → logprob: -9.154683113098145
    8. '   ' → logprob: -9.779683113098145
    9. ' .' → logprob: -9.779683113098145
    10. '*' → logprob: -10.654683113098145

Token 422: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007348202052526176
    2. '-' → logprob: -7.250734806060791
    3. '```' → logprob: -11.12573528289795
    4. 'p' → logprob: -12.37573528289795
    5. '   ' → logprob: -13.62573528289795
    6. ' ' → logprob: -13.62573528289795
    7. 'def' → logprob: -14.37573528289795
    8. '1' → logprob: -14.75073528289795
    9. 'for' → logprob: -15.00073528289795
    10. '00' → logprob: -15.37573528289795

Token 423: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30019211769104004
    2. ' for' → logprob: -1.55019211769104
    3. '   ' → logprob: -3.17519211769104
    4. ' ' → logprob: -6.675191879272461
    5. '	for' → logprob: -6.675191879272461
    6. '<|end|>' → logprob: -6.675191879272461
    7. ' 
' → logprob: -7.675191879272461
    8. '
' → logprob: -7.925191879272461
    9. '\t' → logprob: -8.675191879272461
    10. '    
' → logprob: -9.300191879272461

Token 424: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4870154559612274
    2. '   ' → logprob: -1.2370154857635498
    3. ' for' → logprob: -2.36201548576355
    4. '	for' → logprob: -7.112015247344971
    5. '
' → logprob: -9.362015724182129
    6. '<|end|>' → logprob: -9.612015724182129
    7. ' ' → logprob: -10.237015724182129
    8. ',' → logprob: -10.862015724182129
    9. '  ' → logprob: -11.612015724182129
    10. '    
' → logprob: -11.987015724182129

Token 425: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00188211549539119
    2. '   ' → logprob: -6.376882076263428
    3. ' for' → logprob: -8.626882553100586
    4. '
' → logprob: -15.501882553100586
    5. '	for' → logprob: -15.626882553100586
    6. 'return' → logprob: -15.876882553100586
    7. ' ' → logprob: -16.001882553100586
    8. '```' → logprob: -16.751882553100586
    9. '    
' → logprob: -17.376882553100586
    10. 'i' → logprob: -17.626882553100586

Token 426: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014044330455362797
    2. 'j' → logprob: -4.639044284820557
    3. ' i' → logprob: -5.639044284820557
    4. 'r' → logprob: -7.389044284820557
    5. ' j' → logprob: -10.014044761657715
    6. 'idx' → logprob: -11.514044761657715
    7. 'x' → logprob: -11.764044761657715
    8. '   ' → logprob: -11.764044761657715
    9. 'k' → logprob: -12.389044761657715
    10. ' r' → logprob: -12.514044761657715

Token 427: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013418085873126984
    2. 'in' → logprob: -4.388418197631836
    3. ',' → logprob: -7.263418197631836
    4. ' ' → logprob: -9.638418197631836
    5. '   ' → logprob: -10.763418197631836
    6. ' ,' → logprob: -10.763418197631836
    7. 'r' → logprob: -10.888418197631836
    8. ' i' → logprob: -10.888418197631836
    9. '=' → logprob: -11.388418197631836
    10. 'i' → logprob: -11.388418197631836

Token 428: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31681808829307556
    2. 'r' → logprob: -1.316818118095398
    3. ' range' → logprob: -5.6918182373046875
    4. ' r' → logprob: -8.691818237304688
    5. '   ' → logprob: -12.816818237304688
    6. '[r' → logprob: -13.691818237304688
    7. '(range' → logprob: -14.066818237304688
    8. 'rang' → logprob: -14.066818237304688
    9. 'n' → logprob: -14.191818237304688
    10. 're' → logprob: -14.691818237304688

Token 429: '(r' (ID: 4729)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0002019907406065613
    2. '(r' → logprob: -8.625202178955078
    3. ' r' → logprob: -11.125202178955078
    4. 'n' → logprob: -12.000202178955078
    5. '   ' → logprob: -13.750202178955078
    6. '[r' → logprob: -15.750202178955078
    7. '(n' → logprob: -15.875202178955078
    8. '	r' → logprob: -17.000202178955078
    9. ',r' → logprob: -17.500202178955078
    10. ',' → logprob: -18.375202178955078

Token 430: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018622379284352064
    2. ' ,' → logprob: -6.626862049102783
    3. ',n' → logprob: -8.126862525939941
    4. ',r' → logprob: -8.751862525939941
    5. '+' → logprob: -10.001862525939941
    6. '   ' → logprob: -11.126862525939941
    7. ',i' → logprob: -11.501862525939941
    8. ',
' → logprob: -12.626862525939941
    9. ' +' → logprob: -13.001862525939941
    10. 'n' → logprob: -13.376862525939941

Token 431: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.000936355150770396
    2. ' n' → logprob: -7.375936508178711
    3. 'k' → logprob: -8.875936508178711
    4. 'm' → logprob: -9.125936508178711
    5. 'r' → logprob: -10.500936508178711
    6. '   ' → logprob: -10.625936508178711
    7. ' ' → logprob: -12.750936508178711
    8. '    ' → logprob: -13.875936508178711
    9. 'i' → logprob: -14.000936508178711
    10. '
' → logprob: -14.000936508178711

Token 432: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05079382658004761
    2. '+' → logprob: -3.8007938861846924
    3. '):' → logprob: -3.8007938861846924
    4. '   ' → logprob: -6.050793647766113
    5. ':' → logprob: -6.425793647766113
    6. ',' → logprob: -8.175793647766113
    7. ':
' → logprob: -8.800793647766113
    8. ' +' → logprob: -8.800793647766113
    9. '):
' → logprob: -9.550793647766113
    10. ')' → logprob: -9.675793647766113

Token 433: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00232426798902452
    2. '   ' → logprob: -6.127324104309082
    3. ',' → logprob: -9.752324104309082
    4. '        
' → logprob: -10.627324104309082
    5. '```' → logprob: -11.252324104309082
    6. ' res' → logprob: -11.877324104309082
    7. ' p' → logprob: -12.127324104309082
    8. '
' → logprob: -12.252324104309082
    9. '    
' → logprob: -12.377324104309082
    10. ' ' → logprob: -12.752324104309082

Token 434: ' #' (ID: 1069)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.643134355545044
    2. '   ' → logprob: -1.893134355545044
    3. ' p' → logprob: -2.018134355545044
    4. 'res' → logprob: -2.893134355545044
    5. ' if' → logprob: -3.018134355545044
    6. '       ' → logprob: -3.143134355545044
    7. '    ' → logprob: -3.893134355545044
    8. ' ' → logprob: -4.643134117126465
    9. 'p' → logprob: -5.268134117126465
    10. 'if' → logprob: -6.018134117126465

Token 435: ' le' (ID: 505)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32548701763153076
    2. 'win' → logprob: -2.4504871368408203
    3. 'p' → logprob: -2.5754871368408203
    4. 'res' → logprob: -2.8254871368408203
    5. ' p' → logprob: -4.32548713684082
    6. 'lose' → logprob: -4.70048713684082
    7. ' win' → logprob: -5.07548713684082
    8. ' res' → logprob: -5.07548713684082
    9. '   ' → logprob: -5.32548713684082
    10. ' lose' → logprob: -5.70048713684082

Token 436: ' chat' (ID: 7999)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.9826723337173462
    2. 'res' → logprob: -1.1076723337173462
    3. 'p' → logprob: -2.3576722145080566
    4. ' win' → logprob: -3.1076722145080566
    5. '#' → logprob: -3.4826722145080566
    6. ' p' → logprob: -3.8576722145080566
    7. ' res' → logprob: -3.9826722145080566
    8. 'lose' → logprob: -3.9826722145080566
    9. 'prob' → logprob: -3.9826722145080566
    10. 'chat' → logprob: -4.607672214508057

Token 437: ' atteint' (ID: 104876)
  Prédit: ' tente'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tente' → logprob: -0.12085753679275513
    2. 't' → logprob: -2.7458574771881104
    3. 'essa' → logprob: -3.8708574771881104
    4. 'ess' → logprob: -4.7458577156066895
    5. ' essa' → logprob: -5.3708577156066895
    6. 'attempt' → logprob: -6.2458577156066895
    7. 'tries' → logprob: -6.3708577156066895
    8. '   ' → logprob: -6.6208577156066895
    9. '_attempt' → logprob: -6.9958577156066895
    10. 's' → logprob: -7.1208577156066895

Token 438: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.010385589674115181
    2. '       ' → logprob: -5.260385513305664
    3. ' i' → logprob: -5.510385513305664
    4. '   ' → logprob: -7.385385513305664
    5. 'prob' → logprob: -8.260385513305664
    6. 'n' → logprob: -10.760385513305664
    7. 'l' → logprob: -10.885385513305664
    8. '(i' → logprob: -11.385385513305664
    9. 'le' → logprob: -11.510385513305664
    10. ' ' → logprob: -11.510385513305664

Token 439: ''' (ID: 6)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002853851765394211
    2. ' i' → logprob: -5.877853870391846
    3. '   ' → logprob: -11.127853393554688
    4. ''i' → logprob: -11.752853393554688
    5. '[i' → logprob: -12.002853393554688
    6. ' ' → logprob: -12.502853393554688
    7. '+' → logprob: -13.627853393554688
    8. 'r' → logprob: -13.877853393554688
    9. 'current' → logprob: -14.002853393554688
    10. '       ' → logprob: -14.002853393554688

Token 440: 'enn' (ID: 2362)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006305903079919517
    2. ' i' → logprob: -7.8756303787231445
    3. 'enn' → logprob: -8.875630378723145
    4. 'enemy' → logprob: -10.625630378723145
    5. '
' → logprob: -11.125630378723145
    6. '```' → logprob: -11.500630378723145
    7. '   ' → logprob: -11.875630378723145
    8. 'r' → logprob: -11.875630378723145
    9. ' ' → logprob: -12.000630378723145
    10. '[i' → logprob: -12.000630378723145

Token 441: 'emi' (ID: 18504)
  Prédit: 'emi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'emi' → logprob: -0.033730871975421906
    2. 'i' → logprob: -3.408730983734131
    3. 'emy' → logprob: -10.533730506896973
    4. 'emis' → logprob: -11.158730506896973
    5. ' i' → logprob: -11.283730506896973
    6. '   ' → logprob: -11.283730506896973
    7. 'em' → logprob: -11.533730506896973
    8. 'emie' → logprob: -13.533730506896973
    9. '[i' → logprob: -13.658730506896973
    10. 'e' → logprob: -14.283730506896973

Token 442: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05235080048441887
    2. ' i' → logprob: -3.0523507595062256
    3. '       ' → logprob: -6.302350997924805
    4. '   ' → logprob: -6.927350997924805
    5. '[i' → logprob: -7.427350997924805
    6. ',' → logprob: -8.927350997924805
    7. '```' → logprob: -10.427350997924805
    8. '           ' → logprob: -10.552350997924805
    9. ',i' → logprob: -10.802350997924805
    10. ' ' → logprob: -10.802350997924805

Token 443: ' avec' (ID: 3937)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013045988976955414
    2. ',' → logprob: -4.513045787811279
    3. '   ' → logprob: -7.388045787811279
    4. ':' → logprob: -8.013046264648438
    5. ' ,' → logprob: -8.263046264648438
    6. ' and' → logprob: -8.763046264648438
    7. 'prob' → logprob: -9.013046264648438
    8. '
' → logprob: -9.513046264648438
    9. '        
' → logprob: -10.013046264648438
    10. ' if' → logprob: -10.138046264648438

Token 444: ' prob' (ID: 4921)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.015595421195030212
    2. 'prob' → logprob: -4.390595436096191
    3. ' p' → logprob: -6.640595436096191
    4. 'la' → logprob: -6.640595436096191
    5. 'une' → logprob: -9.390595436096191
    6. 'le' → logprob: -9.890595436096191
    7. 'success' → logprob: -10.015595436096191
    8. 'pro' → logprob: -10.140595436096191
    9. ' la' → logprob: -10.515595436096191
    10. 'win' → logprob: -10.515595436096191

Token 445: ' p' (ID: 275)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.650179922580719
    2. 'p' → logprob: -1.7751798629760742
    3. '       ' → logprob: -2.150179862976074
    4. '*' → logprob: -2.900179862976074
    5. '   ' → logprob: -3.400179862976074
    6. ' *' → logprob: -3.650179862976074
    7. ' =' → logprob: -4.150179862976074
    8. '*p' → logprob: -4.150179862976074
    9. '_pass' → logprob: -4.400179862976074
    10. ' p' → logprob: -5.525179862976074

Token 446: '_pass' (ID: 36293)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.8206328749656677
    2. '       ' → logprob: -0.9456328749656677
    3. '   ' → logprob: -3.0706329345703125
    4. '*' → logprob: -4.0706329345703125
    5. ',' → logprob: -4.3206329345703125
    6. '_' → logprob: -4.4456329345703125
    7. ' _' → logprob: -4.5706329345703125
    8. ' =' → logprob: -4.6956329345703125
    9. '=' → logprob: -4.8206329345703125
    10. ' ,' → logprob: -4.8206329345703125

Token 447: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.01132496539503336
    2. 'ased' → logprob: -5.386324882507324
    3. 'assed' → logprob: -5.636324882507324
    4. '   ' → logprob: -7.011324882507324
    5. 'passed' → logprob: -7.386324882507324
    6. 'é' → logprob: -7.761324882507324
    7. 'éd' → logprob: -7.886324882507324
    8. 'eded' → logprob: -8.386324882507324
    9. '=' → logprob: -9.386324882507324
    10. 'e' → logprob: -9.886324882507324

Token 448: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003607436316087842
    2. '
' → logprob: -6.753607273101807
    3. ',' → logprob: -7.003607273101807
    4. '        
' → logprob: -7.128607273101807
    5. '=' → logprob: -9.128607749938965
    6. ':' → logprob: -9.378607749938965
    7. ' and' → logprob: -9.378607749938965
    8. ' =' → logprob: -9.503607749938965
    9. '   ' → logprob: -9.503607749938965
    10. '<|end|>' → logprob: -10.128607749938965

Token 449: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002112074289470911
    2. ',' → logprob: -7.002111911773682
    3. '   ' → logprob: -7.127111911773682
    4. '
' → logprob: -8.37711238861084
    5. '        
' → logprob: -9.62711238861084
    6. ',
' → logprob: -11.50211238861084
    7. ' if' → logprob: -11.50211238861084
    8. '```' → logprob: -11.50211238861084
    9. ' and' → logprob: -11.75211238861084
    10. ' ,' → logprob: -12.00211238861084

Token 450: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.46753254532814026
    2. '       ' → logprob: -1.0925325155258179
    3. 'win' → logprob: -4.467532634735107
    4. ' res' → logprob: -4.967532634735107
    5. 'p' → logprob: -5.092532634735107
    6. 'fail' → logprob: -5.342532634735107
    7. 'lose' → logprob: -6.092532634735107
    8. 'loss' → logprob: -6.592532634735107
    9. 'prob' → logprob: -6.717532634735107
    10. ' p' → logprob: -7.342532634735107

Token 451: ' il' (ID: 1793)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.44380903244018555
    2. 'fail' → logprob: -1.8188090324401855
    3. 'lose' → logprob: -2.4438090324401855
    4. '       ' → logprob: -2.9438090324401855
    5. 'win' → logprob: -3.9438090324401855
    6. 'prob' → logprob: -4.5688090324401855
    7. 'p' → logprob: -4.8188090324401855
    8. 'loss' → logprob: -5.6938090324401855
    9. 'temp' → logprob: -5.8188090324401855
    10. 'pass' → logprob: -6.6938090324401855

Token 452: ' peut' (ID: 9216)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.20153681933879852
    2. 'essa' → logprob: -3.7015368938446045
    3. '       ' → logprob: -3.9515368938446045
    4. 'arr' → logprob: -4.076536655426025
    5. ' atteint' → logprob: -4.576536655426025
    6. '   ' → logprob: -4.951536655426025
    7. ' atte' → logprob: -4.951536655426025
    8. '#' → logprob: -4.951536655426025
    9. 'win' → logprob: -5.201536655426025
    10. 'n' → logprob: -5.201536655426025

Token 453: ' gagner' (ID: 64227)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.34119945764541626
    2. 'win' → logprob: -2.2161993980407715
    3. '       ' → logprob: -3.9661993980407715
    4. 'ess' → logprob: -3.9661993980407715
    5. 'vain' → logprob: -3.9661993980407715
    6. 'try' → logprob: -4.3411993980407715
    7. 'contin' → logprob: -4.3411993980407715
    8. 't' → logprob: -4.4661993980407715
    9. ' gagner' → logprob: -4.5911993980407715
    10. ' win' → logprob: -4.7161993980407715

Token 454: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07185736298561096
    2. ' =' → logprob: -3.571857452392578
    3. '=' → logprob: -4.696857452392578
    4. ',' → logprob: -4.946857452392578
    5. '           ' → logprob: -5.071857452392578
    6. ' and' → logprob: -5.821857452392578
    7. ' or' → logprob: -5.946857452392578
    8. '_prob' → logprob: -6.071857452392578
    9. 'prob' → logprob: -6.196857452392578
    10. ' win' → logprob: -6.446857452392578

Token 455: ' cet' (ID: 19505)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.027772024273872375
    2. ' i' → logprob: -3.6527719497680664
    3. 'prob' → logprob: -6.777771949768066
    4. '[i' → logprob: -9.652771949768066
    5. ' ' → logprob: -9.777771949768066
    6. '   ' → logprob: -9.777771949768066
    7. 'dfs' → logprob: -10.027771949768066
    8. 'l' → logprob: -11.027771949768066
    9. '  ' → logprob: -11.652771949768066
    10. ' dfs' → logprob: -11.902771949768066

Token 456: ' enn' (ID: 23075)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05867662653326988
    2. 'enn' → logprob: -2.9336767196655273
    3. 'enemy' → logprob: -5.933676719665527
    4. ' enn' → logprob: -7.683676719665527
    5. ' i' → logprob: -7.808676719665527
    6. 'indice' → logprob: -9.058676719665527
    7. ' enemy' → logprob: -10.683676719665527
    8. 'index' → logprob: -10.808676719665527
    9. ' ' → logprob: -11.433676719665527
    10. 'point' → logprob: -11.558676719665527

Token 457: 'emi' (ID: 18504)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5816123485565186
    2. 'emi' → logprob: -0.8316123485565186
    3. 'em' → logprob: -5.456612586975098
    4. ' i' → logprob: -7.831612586975098
    5. '   ' → logprob: -8.456612586975098
    6. 'mi' → logprob: -8.706612586975098
    7. 'emis' → logprob: -8.956612586975098
    8. 'emy' → logprob: -9.956612586975098
    9. 'm' → logprob: -10.081612586975098
    10. '[i' → logprob: -10.269112586975098

Token 458: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004764041863381863
    2. ',' → logprob: -5.879764080047607
    3. 'win' → logprob: -7.879764080047607
    4. ' win' → logprob: -8.50476360321045
    5. 'prob' → logprob: -8.50476360321045
    6. '
' → logprob: -8.62976360321045
    7. '=' → logprob: -8.87976360321045
    8. '   ' → logprob: -9.12976360321045
    9. ' or' → logprob: -9.12976360321045
    10. ' =' → logprob: -9.25476360321045

Token 459: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8924852013587952
    2. ' p' → logprob: -1.3924851417541504
    3. ' win' → logprob: -2.0174851417541504
    4. '        ' → logprob: -2.7674851417541504
    5. ' res' → logprob: -2.7674851417541504
    6. '           ' → logprob: -3.7674851417541504
    7. 'win' → logprob: -3.8924851417541504
    8. 'p' → logprob: -4.76748514175415
    9. 'prob' → logprob: -5.01748514175415
    10. 'res' → logprob: -5.26748514175415

Token 460: ' win' (ID: 4449)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' (adapté à ' win') → logprob: -0.8152329921722412
    2. ' win' → logprob: -1.1902329921722412
    3. 'res' → logprob: -2.565232992172241
    4. '       ' → logprob: -2.690232992172241
    5. ' res' → logprob: -3.190232992172241
    6. 'p' → logprob: -3.815232992172241
    7. ' p' → logprob: -3.940232992172241
    8. 'prob' → logprob: -4.31523323059082
    9. ' prob' → logprob: -6.19023323059082
    10. 'lose' → logprob: -6.31523323059082

Token 461: ' =' (ID: 314)
  Prédit: '_prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_prob' → logprob: -1.6166903151315637e-05
    2. '_probs' → logprob: -11.375016212463379
    3. '_probability' → logprob: -13.375016212463379
    4. 'Prob' → logprob: -14.500016212463379
    5. '_pro' → logprob: -14.750016212463379
    6. ' _' → logprob: -14.875016212463379
    7. '}_' → logprob: -15.250016212463379
    8. '_p' → logprob: -15.375016212463379
    9. '_' → logprob: -15.625016212463379
    10. 'prob' → logprob: -15.875016212463379

Token 462: ' prob' (ID: 4921)
  Prédit: 'prob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prob' → logprob: -0.03677338361740112
    2. ' prob' → logprob: -3.411773443222046
    3. 'win' → logprob: -6.411773204803467
    4. 'p' → logprob: -7.036773204803467
    5. ' p' → logprob: -8.161773681640625
    6. ' win' → logprob: -8.661773681640625
    7. 'pro' → logprob: -10.411773681640625
    8. '       ' → logprob: -10.661773681640625
    9. '   ' → logprob: -10.911773681640625
    10. '(prob' → logprob: -11.661773681640625

Token 463: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.7432603272027336e-06
    2. 'k' → logprob: -14.000001907348633
    3. ' [' → logprob: -15.000001907348633
    4. '[' → logprob: -15.875001907348633
    5. '(k' → logprob: -16.000001907348633
    6. '[i' → logprob: -16.625001907348633
    7. '][' → logprob: -16.875001907348633
    8. '{k' → logprob: -16.875001907348633
    9. '[m' → logprob: -17.625001907348633
    10. '```' → logprob: -17.750001907348633

Token 464: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.05502096191048622
    2. '[k' → logprob: -2.930021047592163
    3. ']' → logprob: -9.680021286010742
    4. ' ][' → logprob: -9.930021286010742
    5. ' [' → logprob: -12.430021286010742
    6. 'k' → logprob: -12.430021286010742
    7. '}[' → logprob: -12.805021286010742
    8. ')[' → logprob: -13.055021286010742
    9. '   ' → logprob: -13.055021286010742
    10. '[' → logprob: -13.305021286010742

Token 465: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -8.65707261255011e-06
    2. ' i' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.250008583068848
    4. 'r' → logprob: -15.750008583068848
    5. '[i' → logprob: -16.125009536743164
    6. '
' → logprob: -16.625009536743164
    7. '][' → logprob: -16.750009536743164
    8. ' ' → logprob: -17.625009536743164
    9. ']' → logprob: -17.875009536743164
    10. '	i' → logprob: -18.125009536743164

Token 466: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5239870548248291
    2. ']
' → logprob: -0.8989870548248291
    3. ']
' → logprob: -7.77398681640625
    4. '       ' → logprob: -7.89898681640625
    5. '[i' → logprob: -10.27398681640625
    6. ']*' → logprob: -11.02398681640625
    7. ']

' → logprob: -12.39898681640625
    8. '][' → logprob: -12.52398681640625
    9. ' ]' → logprob: -12.77398681640625
    10. ' ]
' → logprob: -12.89898681640625

Token 467: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01631259359419346
    2. '
' → logprob: -4.641312599182129
    3. ',' → logprob: -5.141312599182129
    4. '        
' → logprob: -8.516312599182129
    5. ',
' → logprob: -9.266312599182129
    6. ')' → logprob: -9.391312599182129
    7. '   ' → logprob: -9.516312599182129
    8. 'res' → logprob: -10.391312599182129
    9. '           ' → logprob: -10.641312599182129
    10. '
' → logprob: -10.766312599182129

Token 468: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.02120712585747242
    2. ' res' → logprob: -4.396207332611084
    3. '       ' → logprob: -5.271207332611084
    4. 'fail' → logprob: -6.646207332611084
    5. 'p' → logprob: -7.396207332611084
    6. 'lose' → logprob: -7.521207332611084
    7. '
' → logprob: -8.521206855773926
    8. 'loss' → logprob: -8.646206855773926
    9. '           ' → logprob: -9.146206855773926
    10. '   ' → logprob: -9.271206855773926

Token 469: ' si' (ID: 1784)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.029886214062571526
    2. 'lose' → logprob: -4.404886245727539
    3. 'fail' → logprob: -4.404886245727539
    4. '       ' → logprob: -6.904886245727539
    5. 'temp' → logprob: -7.029886245727539
    6. 'win' → logprob: -7.654886245727539
    7. 'new' → logprob: -7.904886245727539
    8. 'next' → logprob: -8.154886245727539
    9. 'loss' → logprob: -8.279886245727539
    10. 'for' → logprob: -8.779886245727539

Token 470: ' il' (ID: 1793)
  Prédit: ' win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' win' → logprob: -0.5236082077026367
    2. 'win' → logprob: -1.1486082077026367
    3. 'lose' → logprob: -3.0236082077026367
    4. ' lose' → logprob: -4.148608207702637
    5. ' not' → logprob: -4.523608207702637
    6. 'i' → logprob: -5.523608207702637
    7. ' i' → logprob: -5.523608207702637
    8. 'not' → logprob: -6.023608207702637
    9. 'wins' → logprob: -7.273608207702637
    10. ' loses' → logprob: -7.898608207702637

Token 471: ' gagne' (ID: 141776)
  Prédit: ' gagne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gagne' → logprob: -0.26730507612228394
    2. ' loses' → logprob: -3.1423051357269287
    3. 'wins' → logprob: -3.1423051357269287
    4. 'g' → logprob: -3.2673051357269287
    5. ' wins' → logprob: -3.3923051357269287
    6. 'per' → logprob: -4.26730489730835
    7. ' win' → logprob: -4.51730489730835
    8. ' rem' → logprob: -4.64230489730835
    9. ' perd' → logprob: -5.01730489730835
    10. '   ' → logprob: -5.14230489730835

Token 472: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6240349411964417
    2. ' *' → logprob: -2.124034881591797
    3. '*' → logprob: -2.374034881591797
    4. '           ' → logprob: -2.499034881591797
    5. ':
' → logprob: -2.749034881591797
    6. ',' → logprob: -3.374034881591797
    7. '       ' → logprob: -3.374034881591797
    8. ' :' → logprob: -4.874034881591797
    9. '):
' → logprob: -5.249034881591797
    10. '):' → logprob: -5.499034881591797

Token 473: 'win' (ID: 11668)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.728725254535675
    2. '),' → logprob: -1.3537251949310303
    3. ')' → logprob: -1.7287251949310303
    4. '):
' → logprob: -3.1037251949310303
    5. '           ' → logprob: -4.103725433349609
    6. 'win' → logprob: -4.853725433349609
    7. ',' → logprob: -5.978725433349609
    8. '):

' → logprob: -6.353725433349609
    9. '       ' → logprob: -6.728725433349609
    10. ' win' → logprob: -7.478725433349609

Token 474: '),' (ID: 936)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12063588947057724
    2. '),' → logprob: -2.495635986328125
    3. '):
' → logprob: -4.245635986328125
    4. ' *' → logprob: -5.120635986328125
    5. ')' → logprob: -5.995635986328125
    6. '*' → logprob: -5.995635986328125
    7. '):

' → logprob: -6.245635986328125
    8. ' ):' → logprob: -6.245635986328125
    9. ' ),' → logprob: -7.620635986328125
    10. '       ' → logprob: -8.120635986328125

Token 475: ' on' (ID: 402)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.253858745098114
    2. ' res' → logprob: -1.5038588047027588
    3. '           ' → logprob: -7.12885856628418
    4. ' p' → logprob: -7.87885856628418
    5. 'p' → logprob: -8.12885856628418
    6. '       ' → logprob: -8.75385856628418
    7. '
' → logprob: -9.75385856628418
    8. 'prob' → logprob: -9.75385856628418
    9. '#' → logprob: -10.75385856628418
    10. '               ' → logprob: -11.00385856628418

Token 476: ' continue' (ID: 4901)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.38496965169906616
    2. ' res' → logprob: -1.259969711303711
    3. ' continue' → logprob: -4.634969711303711
    4. 'continue' → logprob: -4.634969711303711
    5. ' have' → logprob: -6.134969711303711
    6. 'have' → logprob: -6.384969711303711
    7. 'pass' → logprob: -6.759969711303711
    8. 'contin' → logprob: -7.134969711303711
    9. 'rés' → logprob: -7.259969711303711
    10. 'return' → logprob: -7.259969711303711

Token 477: ' à' (ID: 1221)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.0975182056427002
    2. '           ' → logprob: -1.2225182056427002
    3. '       ' → logprob: -1.3475182056427002
    4. ',' → logprob: -2.4725182056427
    5. ' res' → logprob: -3.9725182056427
    6. '=' → logprob: -6.972517967224121
    7. 'prob' → logprob: -7.097517967224121
    8. ' =' → logprob: -7.222517967224121
    9. ':
' → logprob: -7.347517967224121
    10. '):
' → logprob: -7.472517967224121

Token 478: ' la' (ID: 557)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.16456259787082672
    2. ' dfs' → logprob: -2.039562702178955
    3. 'max' → logprob: -4.164562702178955
    4. 'i' → logprob: -6.414562702178955
    5. ' max' → logprob: -6.539562702178955
    6. 'k' → logprob: -7.289562702178955
    7. 'win' → logprob: -8.039562225341797
    8. ' k' → logprob: -8.164562225341797
    9. 'res' → logprob: -8.164562225341797
    10. ' i' → logprob: -8.289562225341797

Token 479: ' salle' (ID: 35653)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.31031590700149536
    2. 'i' → logprob: -1.9353158473968506
    3. 'next' → logprob: -2.9353158473968506
    4. ' dfs' → logprob: -3.1853158473968506
    5. ' next' → logprob: -3.9353158473968506
    6. ' i' → logprob: -5.43531608581543
    7. 'max' → logprob: -6.81031608581543
    8. 'else' → logprob: -7.31031608581543
    9. '   ' → logprob: -8.43531608581543
    10. 'for' → logprob: -8.56031608581543

Token 480: ' suivante' (ID: 107439)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2524809241294861
    2. ' i' → logprob: -1.5024809837341309
    3. '(i' → logprob: -9.127480506896973
    4. '       ' → logprob: -9.127480506896973
    5. '[i' → logprob: -9.377480506896973
    6. '+' → logprob: -9.502480506896973
    7. ' +' → logprob: -10.002480506896973
    8. ',' → logprob: -10.252480506896973
    9. '   ' → logprob: -10.752480506896973
    10. ',i' → logprob: -11.377480506896973

Token 481: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21984761953353882
    2. ',' → logprob: -2.7198476791381836
    3. '           ' → logprob: -3.5948476791381836
    4. '
' → logprob: -3.7198476791381836
    5. 'res' → logprob: -4.094847679138184
    6. ':' → logprob: -4.344847679138184
    7. ':
' → logprob: -4.344847679138184
    8. '):
' → logprob: -4.469847679138184
    9. ')' → logprob: -5.344847679138184
    10. '):' → logprob: -5.344847679138184

Token 482: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014839082956314087
    2. 'res' → logprob: -4.764839172363281
    3. ' res' → logprob: -5.889839172363281
    4. ',' → logprob: -6.139839172363281
    5. '
' → logprob: -7.014839172363281
    6. '           ' → logprob: -9.514839172363281
    7. '   ' → logprob: -9.764839172363281
    8. '```' → logprob: -9.889839172363281
    9. ',
' → logprob: -10.014839172363281
    10. '        
' → logprob: -10.139839172363281

Token 483: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.2131299078464508
    2. ' res' → logprob: -1.8381298780441284
    3. '       ' → logprob: -3.463129997253418
    4. '           ' → logprob: -7.338129997253418
    5. '   ' → logprob: -8.088129997253418
    6. '
' → logprob: -8.463129997253418
    7. 'if' → logprob: -9.838129997253418
    8. ' if' → logprob: -10.088129997253418
    9. ' p' → logprob: -10.213129997253418
    10. 'p' → logprob: -10.213129997253418

Token 484: ' si' (ID: 1784)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.11825178563594818
    2. ' res' → logprob: -2.2432518005371094
    3. '       ' → logprob: -5.493251800537109
    4. '
' → logprob: -8.36825180053711
    5. '           ' → logprob: -8.61825180053711
    6. 'p' → logprob: -8.61825180053711
    7. '   ' → logprob: -8.61825180053711
    8. ' p' → logprob: -9.24325180053711
    9. 'loss' → logprob: -9.49325180053711
    10. ',' → logprob: -10.49325180053711

Token 485: ' il' (ID: 1793)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5826613306999207
    2. 'not' → logprob: -1.4576613903045654
    3. ' lose' → logprob: -1.9576613903045654
    4. 'lose' → logprob: -3.5826613903045654
    5. ' (' → logprob: -4.957661151885986
    6. '(' → logprob: -4.957661151885986
    7. '(not' → logprob: -5.082661151885986
    8. ' i' → logprob: -5.457661151885986
    9. ' win' → logprob: -5.582661151885986
    10. 'i' → logprob: -6.082661151885986

Token 486: ' perd' (ID: 17696)
  Prédit: 'lose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lose' → logprob: -0.5179390907287598
    2. 'los' → logprob: -1.5179390907287598
    3. 'lo' → logprob: -2.6429390907287598
    4. ' lose' → logprob: -3.2679390907287598
    5. ' loses' → logprob: -3.2679390907287598
    6. 'per' → logprob: -4.26793909072876
    7. '   ' → logprob: -5.01793909072876
    8. 'fails' → logprob: -6.14293909072876
    9. '*' → logprob: -6.58043909072876
    10. '       ' → logprob: -7.01793909072876

Token 487: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1492898166179657
    2. ',' → logprob: -2.524289846420288
    3. '=' → logprob: -3.024289846420288
    4. '       ' → logprob: -5.774289608001709
    5. ' ,' → logprob: -5.774289608001709
    6. 'lose' → logprob: -7.274289608001709
    7. '),' → logprob: -7.399289608001709
    8. ':' → logprob: -7.399289608001709
    9. ' lose' → logprob: -7.774289608001709
    10. '           ' → logprob: -8.274290084838867

Token 488: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024529455695301294
    2. ' ' → logprob: -6.127452850341797
    3. '(' → logprob: -9.377452850341797
    4. ')' → logprob: -9.502452850341797
    5. '=' → logprob: -10.252452850341797
    6. '
' → logprob: -11.627452850341797
    7. 'lose' → logprob: -11.627452850341797
    8. ' (' → logprob: -11.752452850341797
    9. ' =' → logprob: -11.877452850341797
    10. '),' → logprob: -12.002452850341797

Token 489: '-win' (ID: 84544)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14295056462287903
    2. '-' → logprob: -2.0179505348205566
    3. '-win' → logprob: -8.767951011657715
    4. ' ' → logprob: -9.517951011657715
    5. ')' → logprob: -10.892951011657715
    6. ' win' → logprob: -11.142951011657715
    7. 'win' → logprob: -12.017951011657715
    8. ' ' → logprob: -13.642951011657715
    9. '-)' → logprob: -14.142951011657715
    10. '	win' → logprob: -14.267951011657715

Token 490: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.005789781920611858
    2. '):
' → logprob: -6.255789756774902
    3. ' ),' → logprob: -6.255789756774902
    4. ')' → logprob: -6.755789756774902
    5. '):' → logprob: -7.755789756774902
    6. '):

' → logprob: -9.130789756774902
    7. ',' → logprob: -10.005789756774902
    8. '),
' → logprob: -10.380789756774902
    9. '```' → logprob: -10.505789756774902
    10. ' -' → logprob: -10.630789756774902

Token 491: ' le' (ID: 505)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.4194309115409851
    2. 'res' → logprob: -1.2944309711456299
    3. ' dfs' → logprob: -3.16943097114563
    4. 'dfs' → logprob: -4.044430732727051
    5. 'prob' → logprob: -5.794430732727051
    6. '       ' → logprob: -6.169430732727051
    7. ' p' → logprob: -6.794430732727051
    8. '           ' → logprob: -7.919430732727051
    9. ' prob' → logprob: -8.16943073272705
    10. '        ' → logprob: -8.41943073272705

Token 492: ' prochain' (ID: 52413)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.7379021048545837
    2. 'next' → logprob: -0.9879021048545837
    3. ' chat' → logprob: -3.2379021644592285
    4. 'chat' → logprob: -3.4879021644592285
    5. ' dfs' → logprob: -3.9879021644592285
    6. 'res' → logprob: -4.1129021644592285
    7. 'dfs' → logprob: -4.2379021644592285
    8. ' res' → logprob: -4.7379021644592285
    9. 'pro' → logprob: -4.9879021644592285
    10. ' prochain' → logprob: -5.1129021644592285

Token 493: ' chat' (ID: 7999)
  Prédit: 'chat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chat' → logprob: -0.1688772588968277
    2. ' chat' → logprob: -2.043877363204956
    3. 'cat' → logprob: -4.793877124786377
    4. '_chat' → logprob: -5.293877124786377
    5. '_prob' → logprob: -5.668877124786377
    6. 'k' → logprob: -5.668877124786377
    7. 'ch' → logprob: -7.043877124786377
    8. ' k' → logprob: -7.418877124786377
    9. '```' → logprob: -7.793877124786377
    10. '`' → logprob: -7.793877124786377

Token 494: ' commence' (ID: 44755)
  Prédit: ' repart'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' repart' → logprob: -0.32289281487464905
    2. 're' → logprob: -2.072892904281616
    3. ' repartir' → logprob: -2.822892904281616
    4. ' reprend' → logprob: -3.572892904281616
    5. 'part' → logprob: -4.072892665863037
    6. ' partir' → logprob: -4.947892665863037
    7. 'repr' → logprob: -5.072892665863037
    8. 'rest' → logprob: -5.572892665863037
    9. ' part' → logprob: -5.697892665863037
    10. 'depart' → logprob: -5.822892665863037

Token 495: ' à' (ID: 1221)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.21117518842220306
    2. ' à' → logprob: -2.0861752033233643
    3. ' (' → logprob: -3.5861752033233643
    4. '(' → logprob: -4.336174964904785
    5. 'à' → logprob: -4.336174964904785
    6. ' =' → logprob: -5.586174964904785
    7. ' at' → logprob: -6.211174964904785
    8. ' k' → logprob: -6.336174964904785
    9. '=' → logprob: -6.836174964904785
    10. ' ' → logprob: -7.461174964904785

Token 496: ' partir' (ID: 12100)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004332322161644697
    2. ' i' → logprob: -5.629332542419434
    3. 'dfs' → logprob: -7.379332542419434
    4. ' dfs' → logprob: -10.254332542419434
    5. '[i' → logprob: -11.129332542419434
    6. '(i' → logprob: -11.379332542419434
    7. '   ' → logprob: -12.004332542419434
    8. 'k' → logprob: -12.004332542419434
    9. '```' → logprob: -12.379332542419434
    10. ' ' → logprob: -12.379332542419434

Token 497: ' de' (ID: 334)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12784244120121002
    2. ' i' → logprob: -2.127842426300049
    3. '(i' → logprob: -8.002842903137207
    4. '{i' → logprob: -8.627842903137207
    5. '   ' → logprob: -9.002842903137207
    6. '[i' → logprob: -9.502842903137207
    7. ' (' → logprob: -10.252842903137207
    8. ' ' → logprob: -10.752842903137207
    9. '`' → logprob: -10.752842903137207
    10. '       ' → logprob: -11.252842903137207

Token 498: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00018065694894175977
    2. ' i' → logprob: -8.6251802444458
    3. '           ' → logprob: -14.7501802444458
    4. '```' → logprob: -15.7501802444458
    5. '   ' → logprob: -16.000181198120117
    6. '`' → logprob: -16.625181198120117
    7. '	i' → logprob: -16.625181198120117
    8. ' ' → logprob: -17.375181198120117
    9. '       ' → logprob: -17.375181198120117
    10. '[i' → logprob: -17.625181198120117

Token 499: ''' (ID: 6)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009668456041254103
    2. ' i' → logprob: -7.000967025756836
    3. '   ' → logprob: -10.625967025756836
    4. '       ' → logprob: -11.375967025756836
    5. '           ' → logprob: -12.500967025756836
    6. '[i' → logprob: -12.750967025756836
    7. 'r' → logprob: -13.000967025756836
    8. 'ié' → logprob: -13.625967025756836
    9. 'enemy' → logprob: -13.875967025756836
    10. '(i' → logprob: -13.875967025756836

Token 500: 'enn' (ID: 2362)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00388689199462533
    2. 'enemy' → logprob: -6.253886699676514
    3. 'enn' → logprob: -6.253886699676514
    4. 'enem' → logprob: -12.128887176513672
    5. ' i' → logprob: -12.253887176513672
    6. 'r' → logprob: -12.753887176513672
    7. '```' → logprob: -12.753887176513672
    8. '   ' → logprob: -13.003887176513672
    9. ' enemy' → logprob: -13.128887176513672
    10. '[i' → logprob: -13.253887176513672

Token 501: 'emi' (ID: 18504)
  Prédit: 'emi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'emi' → logprob: -0.2547932267189026
    2. 'i' → logprob: -1.5047931671142578
    3. 'em' → logprob: -6.254793167114258
    4. 'emy' → logprob: -8.754793167114258
    5. '{i' → logprob: -9.129793167114258
    6. '(i' → logprob: -9.379793167114258
    7. 'e' → logprob: -9.504793167114258
    8. 'mi' → logprob: -9.504793167114258
    9. '[i' → logprob: -9.754793167114258
    10. ' i' → logprob: -10.254793167114258

Token 502: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03112645633518696
    2. ' i' → logprob: -3.5311264991760254
    3. '[i' → logprob: -7.906126499176025
    4. ' (' → logprob: -8.281126022338867
    5. '(i' → logprob: -8.531126022338867
    6. '+' → logprob: -8.906126022338867
    7. '       ' → logprob: -9.031126022338867
    8. ')' → logprob: -10.031126022338867
    9. '(' → logprob: -10.156126022338867
    10. '   ' → logprob: -10.281126022338867

Token 503: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031893588602542877
    2. 'res' → logprob: -6.628189563751221
    3. ',' → logprob: -7.253189563751221
    4. '
' → logprob: -7.753189563751221
    5. '   ' → logprob: -8.503189086914062
    6. ' res' → logprob: -8.753189086914062
    7. '        
' → logprob: -9.128189086914062
    8. ')' → logprob: -9.378189086914062
    9. '           ' → logprob: -10.503189086914062
    10. '=' → logprob: -10.878189086914062

Token 504: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008048283867537975
    2. ',' → logprob: -6.008048057556152
    3. 'res' → logprob: -6.008048057556152
    4. '
' → logprob: -6.758048057556152
    5. ' res' → logprob: -7.258048057556152
    6. ')' → logprob: -7.633048057556152
    7. '   ' → logprob: -8.633048057556152
    8. '        
' → logprob: -9.008048057556152
    9. '):
' → logprob: -9.883048057556152
    10. ' ' → logprob: -9.883048057556152

Token 505: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.006867163348942995
    2. '       ' → logprob: -5.631866931915283
    3. '   ' → logprob: -6.381866931915283
    4. ' res' → logprob: -6.506866931915283
    5. 'p' → logprob: -10.631867408752441
    6. '
' → logprob: -10.881867408752441
    7. '           ' → logprob: -11.756867408752441
    8. ',' → logprob: -12.506867408752441
    9. '	res' → logprob: -13.006867408752441
    10. ' ' → logprob: -13.381867408752441

Token 506: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1603432446718216
    2. ' =' → logprob: -1.9103432893753052
    3. '=max' → logprob: -9.285343170166016
    4. 'max' → logprob: -10.785343170166016
    5. '+=' → logprob: -12.410343170166016
    6. ' max' → logprob: -14.785343170166016
    7. ' +=' → logprob: -14.785343170166016
    8. ',' → logprob: -15.035343170166016
    9. ',max' → logprob: -15.660343170166016
    10. '   ' → logprob: -15.785343170166016

Token 507: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0380416102707386
    2. ' max' → logprob: -3.288041591644287
    3. '	max' → logprob: -16.663042068481445
    4. '(max' → logprob: -18.413042068481445
    5. ' ' → logprob: -18.913042068481445
    6. '   ' → logprob: -19.538042068481445
    7. '=max' → logprob: -20.038042068481445
    8. '0' → logprob: -20.163042068481445
    9. '_max' → logprob: -21.038042068481445
    10. '  ' → logprob: -21.538042068481445

Token 508: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.00150390958879143
    2. '(' → logprob: -6.501503944396973
    3. '(
' → logprob: -13.876503944396973
    4. 'res' → logprob: -14.501503944396973
    5. ' (' → logprob: -16.001502990722656
    6. '(re' → logprob: -18.001502990722656
    7. '(

' → logprob: -18.251502990722656
    8. ',res' → logprob: -18.376502990722656
    9. '=res' → logprob: -19.001502990722656
    10. '	res' → logprob: -19.001502990722656

Token 509: ',' (ID: 11)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.04007630795240402
    2. ',' → logprob: -3.29007625579834
    3. '(' → logprob: -6.29007625579834
    4. ',res' → logprob: -8.66507625579834
    5. 'res' → logprob: -12.54007625579834
    6. '(
' → logprob: -14.16507625579834
    7. ' (' → logprob: -14.66507625579834
    8. ' ,' → logprob: -15.16507625579834
    9. ',
' → logprob: -16.040077209472656
    10. '```' → logprob: -16.540077209472656

Token 510: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.048676732927560806
    2. ' p' → logprob: -3.0486767292022705
    3. '   ' → logprob: -9.673676490783691
    4. 'res' → logprob: -10.798676490783691
    5. '  ' → logprob: -13.798676490783691
    6. ' ' → logprob: -13.798676490783691
    7. ' res' → logprob: -14.048676490783691
    8. '           ' → logprob: -14.423676490783691
    9. '       ' → logprob: -14.548676490783691
    10. '    ' → logprob: -14.673676490783691

Token 511: '_pass' (ID: 36293)
  Prédit: '_pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pass' → logprob: -1.7432603272027336e-06
    2. '_p' → logprob: -14.375001907348633
    3. 'pass' → logprob: -15.000001907348633
    4. '_pas' → logprob: -15.000001907348633
    5. ' _' → logprob: -15.250001907348633
    6. 'passed' → logprob: -15.750001907348633
    7. '_' → logprob: -16.875001907348633
    8. '_PASS' → logprob: -17.625001907348633
    9. ' passed' → logprob: -17.875001907348633
    10. '*' → logprob: -18.125001907348633

Token 512: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -5.5861724831629544e-05
    2. 'ass' → logprob: -10.750056266784668
    3. 'assed' → logprob: -10.750056266784668
    4. 'ased' → logprob: -12.875056266784668
    5. '_' → logprob: -13.125056266784668
    6. 'p' → logprob: -13.250056266784668
    7. '_ed' → logprob: -13.750056266784668
    8. '   ' → logprob: -14.000056266784668
    9. 'd' → logprob: -14.375056266784668
    10. 'eded' → logprob: -14.375056266784668

Token 513: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20141851902008057
    2. '*' → logprob: -1.7014185190200806
    3. ',' → logprob: -13.45141887664795
    4. ' ' → logprob: -13.70141887664795
    5. ')' → logprob: -14.07641887664795
    6. ' ' → logprob: -14.32641887664795
    7. '```' → logprob: -15.20141887664795
    8. '**' → logprob: -15.57641887664795
    9. ')*' → logprob: -15.70141887664795
    10. ' **' → logprob: -15.82641887664795

Token 514: ' win' (ID: 4449)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.02094286121428013
    2. '(win' → logprob: -4.020942687988281
    3. '(' → logprob: -6.145942687988281
    4. '(
' → logprob: -8.145942687988281
    5. ' win' → logprob: -8.520942687988281
    6. ' (' → logprob: -9.645942687988281
    7. '   ' → logprob: -10.520942687988281
    8. '((' → logprob: -11.020942687988281
    9. '(w' → logprob: -11.270942687988281
    10. ' ' → logprob: -12.395942687988281

Token 515: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.06995832920074463
    2. '*' → logprob: -2.694958209991455
    3. ',' → logprob: -11.569958686828613
    4. ')' → logprob: -12.069958686828613
    5. ' ' → logprob: -13.569958686828613
    6. 'dfs' → logprob: -13.944958686828613
    7. '*d' → logprob: -14.194958686828613
    8. ' dfs' → logprob: -14.444958686828613
    9. ')*' → logprob: -14.569958686828613
    10. '```' → logprob: -14.819958686828613

Token 516: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.0003809833142440766
    2. ' dfs' → logprob: -7.875380992889404
    3. '(' → logprob: -14.875380516052246
    4. 'df' → logprob: -15.375380516052246
    5. 'max' → logprob: -16.000381469726562
    6. '   ' → logprob: -17.125381469726562
    7. ' (' → logprob: -17.500381469726562
    8. ' ' → logprob: -17.750381469726562
    9. '(d' → logprob: -18.000381469726562
    10. 'dfa' → logprob: -18.125381469726562

Token 517: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -2.2723104848410003e-05
    2. 'k' → logprob: -10.750022888183594
    3. '(' → logprob: -14.125022888183594
    4. ' (' → logprob: -14.875022888183594
    5. ' k' → logprob: -16.875022888183594
    6. '(
' → logprob: -17.250022888183594
    7. '[k' → logprob: -18.000022888183594
    8. ')' → logprob: -18.125022888183594
    9. '```' → logprob: -19.000022888183594
    10. '((' → logprob: -19.875022888183594

Token 518: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009513345547020435
    2. ',k' → logprob: -5.1345133781433105
    3. ' ,' → logprob: -6.6345133781433105
    4. 'k' → logprob: -6.8845133781433105
    5. ',i' → logprob: -7.1345133781433105
    6. '(k' → logprob: -8.134512901306152
    7. ',n' → logprob: -9.509512901306152
    8. '(i' → logprob: -11.134512901306152
    9. ',r' → logprob: -11.259512901306152
    10. '   ' → logprob: -11.384512901306152

Token 519: ' i' (ID: 575)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0005934244254603982
    2. 'i' → logprob: -8.125593185424805
    3. ' k' → logprob: -8.125593185424805
    4. ' i' → logprob: -14.000593185424805
    5. ' ' → logprob: -15.500593185424805
    6. 'r' → logprob: -16.125593185424805
    7. '```' → logprob: -16.125593185424805
    8. '(k' → logprob: -16.375593185424805
    9. '  ' → logprob: -16.875593185424805
    10. '
' → logprob: -17.000593185424805

Token 520: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47408178448677063
    2. ' +' → logprob: -0.9740817546844482
    3. '   ' → logprob: -13.474081993103027
    4. '1' → logprob: -14.349081993103027
    5. ' ' → logprob: -14.599081993103027
    6. '+
' → logprob: -14.849081993103027
    7. '＋' → logprob: -14.974081993103027
    8. ',' → logprob: -15.224081993103027
    9. ' +
' → logprob: -15.349081993103027
    10. ' plus' → logprob: -15.724081993103027

Token 521: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.491498531133402e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -15.250009536743164
    4. '```' → logprob: -15.500009536743164
    5. '2' → logprob: -16.812509536743164
    6. '
' → logprob: -18.125009536743164
    7. '۱' → logprob: -18.250009536743164
    8. '0' → logprob: -18.250009536743164
    9. '`' → logprob: -18.312509536743164
    10. '``' → logprob: -18.437509536743164

Token 522: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.625003814697266
    3. '+' → logprob: -15.625003814697266
    4. '```' → logprob: -16.000003814697266
    5. '2' → logprob: -16.125003814697266
    6. '   ' → logprob: -16.437503814697266
    7. '۱' → logprob: -17.250003814697266
    8. ')' → logprob: -17.312503814697266
    9. '
' → logprob: -17.437503814697266
    10. '１' → logprob: -18.562503814697266

Token 523: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4568920135498047
    2. ' +' → logprob: -1.5818920135498047
    3. '+' → logprob: -1.8318920135498047
    4. ')+' → logprob: -7.331892013549805
    5. ',' → logprob: -8.831892013549805
    6. ' )' → logprob: -9.581892013549805
    7. '   ' → logprob: -9.831892013549805
    8. ' ' → logprob: -10.456892013549805
    9. '```' → logprob: -11.081892013549805
    10. '    ' → logprob: -11.206892013549805

Token 524: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.048632219433784485
    2. '+' → logprob: -3.0486321449279785
    3. ' ' → logprob: -11.048632621765137
    4. '    ' → logprob: -11.798632621765137
    5. '        ' → logprob: -11.923632621765137
    6. '          ' → logprob: -13.298632621765137
    7. '      ' → logprob: -13.298632621765137
    8. ',' → logprob: -13.548632621765137
    9. '       ' → logprob: -13.548632621765137
    10. '   ' → logprob: -13.673632621765137

Token 525: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3103944659233093
    2. 'p' → logprob: -1.435394525527954
    3. ' (' → logprob: -3.685394525527954
    4. ' p' → logprob: -6.185394287109375
    5. '   ' → logprob: -7.310394287109375
    6. '(p' → logprob: -7.310394287109375
    7. '       ' → logprob: -9.685394287109375
    8. '    ' → logprob: -10.060394287109375
    9. '          ' → logprob: -10.185394287109375
    10. '     ' → logprob: -10.435394287109375

Token 526: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04952399432659149
    2. 'p' → logprob: -3.0495240688323975
    3. ' (' → logprob: -7.299523830413818
    4. '1' → logprob: -9.049524307250977
    5. '(p' → logprob: -9.549524307250977
    6. ' p' → logprob: -10.299524307250977
    7. '   ' → logprob: -10.924524307250977
    8. 'res' → logprob: -11.799524307250977
    9. ' ' → logprob: -12.799524307250977
    10. '  ' → logprob: -13.299524307250977

Token 527: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08610550314188004
    2. ' ' → logprob: -3.2111055850982666
    3. '-p' → logprob: -4.0861053466796875
    4. ')' → logprob: -4.7111053466796875
    5. '_' → logprob: -4.9611053466796875
    6. ' -' → logprob: -5.3361053466796875
    7. ',' → logprob: -6.7111053466796875
    8. '_p' → logprob: -6.7111053466796875
    9. 'p' → logprob: -7.7111053466796875
    10. '_pass' → logprob: -8.336105346679688

Token 528: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00022845028433948755
    2. ' p' → logprob: -8.500228881835938
    3. '(p' → logprob: -10.625228881835938
    4. ' (' → logprob: -14.500228881835938
    5. '(' → logprob: -16.125228881835938
    6. 'res' → logprob: -17.000228881835938
    7. '	p' → logprob: -18.750228881835938
    8. ')p' → logprob: -18.875228881835938
    9. 'win' → logprob: -19.375228881835938
    10. '(
' → logprob: -19.500228881835938

Token 529: '_pass' (ID: 36293)
  Prédit: '_pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pass' → logprob: -2.3319124011322856e-05
    2. 'passed' → logprob: -11.000022888183594
    3. 'pass' → logprob: -12.000022888183594
    4. 'assed' → logprob: -15.375022888183594
    5. 'Passed' → logprob: -16.000022888183594
    6. '_ass' → logprob: -16.875022888183594
    7. '_p' → logprob: -17.625022888183594
    8. 'ass' → logprob: -18.250022888183594
    9. '_pas' → logprob: -18.500022888183594
    10. ' pass' → logprob: -18.875022888183594

Token 530: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -7.896309739408025e-07
    2. 'sed' → logprob: -14.625000953674316
    3. 'ед' → logprob: -16.125
    4. 'éd' → logprob: -16.375
    5. 'ED' → logprob: -17.125
    6. 'eded' → logprob: -17.125
    7. 'passed' → logprob: -17.25
    8. 'é' → logprob: -17.25
    9. 'ased' → logprob: -17.625
    10. 'd' → logprob: -18.125

Token 531: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.31326824426651
    2. ' *' → logprob: -1.3132681846618652
    3. ')' → logprob: -12.188268661499023
    4. ' ' → logprob: -14.313268661499023
    5. ')*' → logprob: -14.688268661499023
    6. ',' → logprob: -16.188268661499023
    7. '**' → logprob: -16.563268661499023
    8. '*)' → logprob: -16.688268661499023
    9. '*out' → logprob: -16.688268661499023
    10. ' ' → logprob: -17.313268661499023

Token 532: ' win' (ID: 4449)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -3.79811754100956e-05
    2. ' win' → logprob: -10.250038146972656
    3. '(win' → logprob: -13.125038146972656
    4. 'w' → logprob: -15.750038146972656
    5. '	win' → logprob: -16.125038146972656
    6. 'wins' → logprob: -16.750038146972656
    7. '   ' → logprob: -16.875038146972656
    8. 'wi' → logprob: -16.875038146972656
    9. ' ' → logprob: -16.875038146972656
    10. 'write' → logprob: -17.375038146972656

Token 533: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00035572313936427236
    2. ')*' → logprob: -8.00035572052002
    3. ' )' → logprob: -11.00035572052002
    4. '*' → logprob: -12.62535572052002
    5. '*)' → logprob: -16.000356674194336
    6. ' *' → logprob: -17.000356674194336
    7. '）' → logprob: -17.625356674194336
    8. ')
' → logprob: -17.875356674194336
    9. ' ' → logprob: -17.875356674194336
    10. 'def' → logprob: -18.500356674194336

Token 534: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.12693104147911072
    2. '*' → logprob: -2.1269309520721436
    3. ')' → logprob: -13.126931190490723
    4. ' ' → logprob: -14.626931190490723
    5. ')*' → logprob: -15.626931190490723
    6. '   ' → logprob: -16.001930236816406
    7. ' ' → logprob: -16.001930236816406
    8. ',' → logprob: -16.126930236816406
    9. '**' → logprob: -17.126930236816406
    10. '```' → logprob: -17.751930236816406

Token 535: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.0002964935847558081
    2. ' dfs' → logprob: -8.125296592712402
    3. 'df' → logprob: -14.750296592712402
    4. ' ' → logprob: -18.750295639038086
    5. 'dfa' → logprob: -18.750295639038086
    6. '  ' → logprob: -18.875295639038086
    7. '   ' → logprob: -19.000295639038086
    8. 'ds' → logprob: -19.500295639038086
    9. 'def' → logprob: -19.625295639038086
    10. '
' → logprob: -20.250295639038086

Token 536: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -7.541112427134067e-05
    2. 'k' → logprob: -9.500075340270996
    3. '(' → logprob: -15.250075340270996
    4. ' (' → logprob: -16.375076293945312
    5. '(
' → logprob: -16.375076293945312
    6. ' k' → logprob: -17.375076293945312
    7. '[k' → logprob: -18.250076293945312
    8. ',k' → logprob: -18.500076293945312
    9. ')' → logprob: -18.750076293945312
    10. '	k' → logprob: -19.125076293945312

Token 537: ' +' (ID: 659)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.001598175847902894
    2. '(k' → logprob: -6.501598358154297
    3. ' k' → logprob: -9.751598358154297
    4. '[k' → logprob: -10.751598358154297
    5. '+' → logprob: -11.376598358154297
    6. ',k' → logprob: -13.126598358154297
    7. '{k' → logprob: -13.626598358154297
    8. '+k' → logprob: -13.751598358154297
    9. ',' → logprob: -14.876598358154297
    10. '	k' → logprob: -16.001598358154297

Token 538: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -11.000027656555176
    3. '+' → logprob: -12.000027656555176
    4. 'k' → logprob: -13.250027656555176
    5. '```' → logprob: -13.625027656555176
    6. '(k' → logprob: -14.000027656555176
    7. '[k' → logprob: -15.500027656555176
    8. '   ' → logprob: -15.625027656555176
    9. ')' → logprob: -15.750027656555176
    10. ' k' → logprob: -16.250028610229492

Token 539: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000536828360054642
    2. 'k' → logprob: -7.875536918640137
    3. ' ' → logprob: -9.500536918640137
    4. '+' → logprob: -9.625536918640137
    5. '(k' → logprob: -12.000536918640137
    6. ' k' → logprob: -12.625536918640137
    7. ' +' → logprob: -13.000536918640137
    8. '   ' → logprob: -13.750536918640137
    9. '```' → logprob: -13.750536918640137
    10. '[k' → logprob: -14.250536918640137

Token 540: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001164388144388795
    2. '(i' → logprob: -7.001164436340332
    3. ',i' → logprob: -8.501164436340332
    4. ' ,' → logprob: -10.501164436340332
    5. ',k' → logprob: -11.501164436340332
    6. '(' → logprob: -11.626164436340332
    7. '(k' → logprob: -13.126164436340332
    8. '```' → logprob: -14.876164436340332
    9. ' (' → logprob: -15.626164436340332
    10. '`,' → logprob: -16.001163482666016

Token 541: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00010914575977949426
    2. ' i' → logprob: -9.12510871887207
    3. '       ' → logprob: -17.00010871887207
    4. '	i' → logprob: -17.37510871887207
    5. '   ' → logprob: -17.75010871887207
    6. ',' → logprob: -19.37510871887207
    7. ')' → logprob: -19.62510871887207
    8. '[i' → logprob: -19.75010871887207
    9. ',i' → logprob: -19.87510871887207
    10. '           ' → logprob: -19.87510871887207

Token 542: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07474011182785034
    2. '))
' → logprob: -2.824740171432495
    3. ')' → logprob: -4.449739933013916
    4. ')
' → logprob: -7.199739933013916
    5. ' ))' → logprob: -9.449740409851074
    6. '       ' → logprob: -9.824740409851074
    7. ' ))
' → logprob: -9.824740409851074
    8. ' )' → logprob: -10.574740409851074
    9. ')))' → logprob: -11.199740409851074
    10. '   ' → logprob: -11.324740409851074

Token 543: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1558380126953125
    2. '   ' → logprob: -2.9058380126953125
    3. 'p' → logprob: -3.4058380126953125
    4. '        
' → logprob: -3.6558380126953125
    5. '    
' → logprob: -4.6558380126953125
    6. '```' → logprob: -4.7808380126953125
    7. '
' → logprob: -5.0308380126953125
    8. ' p' → logprob: -6.2808380126953125
    9. '``' → logprob: -6.4058380126953125
    10. '  
' → logprob: -7.5308380126953125

Token 544: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.6829836368560791
    2. '   ' → logprob: -1.182983636856079
    3. '       ' → logprob: -2.307983636856079
    4. ' p' → logprob: -2.432983636856079
    5. '	p' → logprob: -7.0579833984375
    6. '```' → logprob: -8.4329833984375
    7. ' ' → logprob: -9.8079833984375
    8. '``' → logprob: -10.5579833984375
    9. ' ' → logprob: -10.9329833984375
    10. '  ' → logprob: -11.0579833984375

Token 545: '_pass' (ID: 36293)
  Prédit: '_pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pass' → logprob: -3.292907877039397e-06
    2. '_p' → logprob: -13.50000286102295
    3. '_' → logprob: -13.75000286102295
    4. '_pas' → logprob: -14.25000286102295
    5. ' _' → logprob: -16.000003814697266
    6. '_PASS' → logprob: -17.625003814697266
    7. '_post' → logprob: -18.250003814697266
    8. '_put' → logprob: -18.375003814697266
    9. '_pa' → logprob: -18.500003814697266
    10. 'pass' → logprob: -18.875003814697266

Token 546: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -2.9875325708417222e-05
    2. 'assed' → logprob: -11.125029563903809
    3. 'passed' → logprob: -12.375029563903809
    4. 'ased' → logprob: -12.375029563903809
    5. 'sed' → logprob: -13.000029563903809
    6. '_pass' → logprob: -13.250029563903809
    7. '_ed' → logprob: -14.125029563903809
    8. 'eded' → logprob: -14.375029563903809
    9. 'ass' → logprob: -15.125029563903809
    10. 'p' → logprob: -15.125029563903809

Token 547: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.026492809876799583
    2. ' *=' → logprob: -3.6514928340911865
    3. '*' → logprob: -8.901493072509766
    4. '=' → logprob: -9.901493072509766
    5. '   ' → logprob: -12.651493072509766
    6. ' ' → logprob: -13.901493072509766
    7. '  ' → logprob: -14.526493072509766
    8. ' =' → logprob: -15.026493072509766
    9. '/=' → logprob: -15.151493072509766
    10. '```' → logprob: -15.151493072509766

Token 548: ' win' (ID: 4449)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.0002957783581223339
    2. 'prob' → logprob: -8.500295639038086
    3. ' win' → logprob: -9.375295639038086
    4. '(win' → logprob: -12.250295639038086
    5. '(prob' → logprob: -14.375295639038086
    6. '   ' → logprob: -14.750295639038086
    7. '(' → logprob: -15.250295639038086
    8. 'wind' → logprob: -15.375295639038086
    9. '	win' → logprob: -15.375295639038086
    10. ' prob' → logprob: -15.375295639038086

Token 549: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16185849905014038
    2. '<|end|>' → logprob: -1.9118585586547852
    3. 'return' → logprob: -7.411858558654785
    4. ')' → logprob: -7.911858558654785
    5. ' return' → logprob: -8.286858558654785
    6. '<|end|>' → logprob: -8.411858558654785
    7. '	return' → logprob: -9.786858558654785
    8. '
' → logprob: -10.661858558654785
    9. ')return' → logprob: -11.161858558654785
    10. ' ' → logprob: -11.286858558654785

Token 550: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6737319827079773
    2. '   ' → logprob: -0.7987319827079773
    3. '<|end|>' → logprob: -3.673732042312622
    4. ' return' → logprob: -4.673731803894043
    5. ')' → logprob: -5.798731803894043
    6. '	return' → logprob: -7.173731803894043
    7. ' ' → logprob: -8.048731803894043
    8. ')return' → logprob: -8.048731803894043
    9. '
' → logprob: -8.298731803894043
    10. ':return' → logprob: -8.423731803894043

Token 551: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0007860410842113197
    2. ' return' → logprob: -7.250785827636719
    3. '   ' → logprob: -9.500785827636719
    4. '
' → logprob: -15.000785827636719
    5. '	return' → logprob: -15.125785827636719
    6. '    
' → logprob: -15.250785827636719
    7. ':return' → logprob: -16.00078582763672
    8. '```' → logprob: -16.62578582763672
    9. ')return' → logprob: -17.00078582763672
    10. 'eturn' → logprob: -17.50078582763672

Token 552: ' Enfin' (ID: 85274)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -2.8206473871250637e-05
    2. ' return' → logprob: -10.500028610229492
    3. '   ' → logprob: -14.375028610229492
    4. ' ' → logprob: -20.500028610229492
    5. 'res' → logprob: -20.500028610229492
    6. ':return' → logprob: -21.375028610229492
    7. 'ret' → logprob: -21.750028610229492
    8. 'eturn' → logprob: -21.750028610229492
    9. '    
' → logprob: -22.000028610229492
    10. '	return' → logprob: -22.625028610229492

Token 553: ' le' (ID: 505)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.02329101227223873
    2. ' return' → logprob: -4.023291110992432
    3. '   ' → logprob: -5.273291110992432
    4. ':return' → logprob: -14.523290634155273
    5. '	return' → logprob: -15.398290634155273
    6. ' ' → logprob: -15.398290634155273
    7. '  ' → logprob: -16.023290634155273
    8. 'eturn' → logprob: -16.773290634155273
    9. 'ret' → logprob: -17.773290634155273
    10. '_return' → logprob: -18.148290634155273

Token 554: ' cas' (ID: 2108)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.16245593130588531
    2. '#' → logprob: -1.9124559164047241
    3. 'return' → logprob: -6.662456035614014
    4. ' #' → logprob: -8.037455558776855
    5. ' res' → logprob: -8.287455558776855
    6. 'r' → logprob: -9.537455558776855
    7. 'ch' → logprob: -9.912455558776855
    8. 'chat' → logprob: -10.412455558776855
    9. 'ret' → logprob: -10.537455558776855
    10. 's' → logprob: -10.662455558776855

Token 555: ' où' (ID: 15113)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.5065714716911316
    2. ' où' → logprob: -1.3815715312957764
    3. 'où' → logprob: -2.1315715312957764
    4. '   ' → logprob: -4.256571292877197
    5. 'return' → logprob: -5.256571292877197
    6. ' where' → logprob: -5.506571292877197
    7. 'where' → logprob: -6.881571292877197
    8. ' =' → logprob: -7.006571292877197
    9. '=' → logprob: -7.631571292877197
    10. ' ou' → logprob: -7.756571292877197

Token 556: ' le' (ID: 505)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.9969837069511414
    2. 'k' → logprob: -1.2469837665557861
    3. 'r' → logprob: -1.6219837665557861
    4. 'on' → logprob: -2.621983766555786
    5. 'le' → logprob: -3.246983766555786
    6. 't' → logprob: -4.746983528137207
    7. 'l' → logprob: -4.996983528137207
    8. ' on' → logprob: -5.746983528137207
    9. 'res' → logprob: -5.871983528137207
    10. '#' → logprob: -5.871983528137207

Token 557: ' chat' (ID: 7999)
  Prédit: 'chat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chat' → logprob: -0.07000800967216492
    2. ' chat' → logprob: -2.6950080394744873
    3. 'ch' → logprob: -10.070008277893066
    4. 'cat' → logprob: -11.945008277893066
    5. 'k' → logprob: -12.695008277893066
    6. '```' → logprob: -12.695008277893066
    7. '   ' → logprob: -13.070008277893066
    8. 'chien' → logprob: -13.445008277893066
    9. 'cha' → logprob: -13.570008277893066
    10. 'c' → logprob: -13.570008277893066

Token 558: ' gagne' (ID: 141776)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.18847832083702087
    2. ' ne' → logprob: -2.3134782314300537
    3. 'n' → logprob: -2.6884782314300537
    4. ' n' → logprob: -6.563478469848633
    5. 'per' → logprob: -6.563478469848633
    6. 'pe' → logprob: -8.313478469848633
    7. 'continue' → logprob: -8.438478469848633
    8. 'p' → logprob: -8.563478469848633
    9. 'fail' → logprob: -8.688478469848633
    10. ' passe' → logprob: -8.688478469848633

Token 559: ' tous' (ID: 10688)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.33680930733680725
    2. ' tous' → logprob: -2.0868093967437744
    3. 'tout' → logprob: -2.2118093967437744
    4. 'all' → logprob: -3.5868093967437744
    5. '   ' → logprob: -4.461809158325195
    6. ' toutes' → logprob: -5.336809158325195
    7. ' tout' → logprob: -6.461809158325195
    8. ' all' → logprob: -6.836809158325195
    9. 'sur' → logprob: -7.086809158325195
    10. '    ' → logprob: -7.086809158325195

Token 560: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.14637666940689087
    2. ' les' → logprob: -2.021376609802246
    3. ' ennem' → logprob: -7.146376609802246
    4. 'n' → logprob: -7.271376609802246
    5. ' enemies' → logprob: -7.521376609802246
    6. 'enn' → logprob: -8.271376609802246
    7. ' n' → logprob: -8.521376609802246
    8. ' enn' → logprob: -8.771376609802246
    9. 'l' → logprob: -8.896376609802246
    10. ' advers' → logprob: -9.021376609802246

Token 561: ' ennem' (ID: 164783)
  Prédit: ' ennem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ennem' → logprob: -0.3699302077293396
    2. 'enn' → logprob: -1.2449302673339844
    3. 'n' → logprob: -4.619930267333984
    4. 'enem' → logprob: -5.369930267333984
    5. 'en' → logprob: -5.994930267333984
    6. ' enn' → logprob: -6.119930267333984
    7. ' enemies' → logprob: -7.744930267333984
    8. ' advers' → logprob: -7.869930267333984
    9. '```' → logprob: -7.994930267333984
    10. ' n' → logprob: -9.494930267333984

Token 562: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.08073987066745758
    2. 'emis' → logprob: -2.580739974975586
    3. 'ems' → logprob: -7.330739974975586
    4. 'emies' → logprob: -7.705739974975586
    5. 'i' → logprob: -8.080739974975586
    6. 'ims' → logprob: -9.205739974975586
    7. 'mis' → logprob: -9.580739974975586
    8. 'emi' → logprob: -9.955739974975586
    9. 's' → logprob: -9.955739974975586
    10. 'e' → logprob: -9.955739974975586

Token 563: ' jusqu' (ID: 21961)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023486497811973095
    2. 'return' → logprob: -6.50234842300415
    3. ' return' → logprob: -7.75234842300415
    4. 'res' → logprob: -7.87734842300415
    5. ' res' → logprob: -10.502348899841309
    6. ',' → logprob: -12.752348899841309
    7. '  ' → logprob: -13.377348899841309
    8. '
' → logprob: -13.627348899841309
    9. ' (' → logprob: -14.127348899841309
    10. ' if' → logprob: -14.377348899841309

Token 564: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.1422746479511261
    2. ''au' → logprob: -2.6422746181488037
    3. 'à' → logprob: -3.1422746181488037
    4. 'au' → logprob: -4.017274856567383
    5. '’à' → logprob: -9.392274856567383
    6. 'a' → logprob: -9.392274856567383
    7. ''a' → logprob: -10.642274856567383
    8. '#' → logprob: -11.517274856567383
    9. '   ' → logprob: -12.017274856567383
    10. '’au' → logprob: -12.142274856567383

Token 565: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0071324547752738
    2. 'la' → logprob: -5.382132530212402
    3. ' n' → logprob: -6.757132530212402
    4. ' la' → logprob: -6.757132530212402
    5. 'l' → logprob: -9.257132530212402
    6. '   ' → logprob: -10.507132530212402
    7. ' ' → logprob: -10.882132530212402
    8. 'the' → logprob: -11.382132530212402
    9. '```' → logprob: -11.882132530212402
    10. 'r' → logprob: -12.007132530212402

Token 566: ' fin' (ID: 2131)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08410009741783142
    2. 'fin' → logprob: -2.5841000080108643
    3. ' fin' → logprob: -5.459100246429443
    4. ' n' → logprob: -7.084100246429443
    5. 'bout' → logprob: -10.334099769592285
    6. 'dern' → logprob: -11.209099769592285
    7. 'f' → logprob: -11.459099769592285
    8. ' dernière' → logprob: -12.209099769592285
    9. '  ' → logprob: -12.459099769592285
    10. ' ' → logprob: -12.459099769592285

Token 567: '
' (ID: 198)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.505197286605835
    2. '   ' → logprob: -1.505197286605835
    3. 'return' → logprob: -1.755197286605835
    4. ' return' → logprob: -7.380197525024414
    5. ' res' → logprob: -7.380197525024414
    6. 'if' → logprob: -7.630197525024414
    7. ' if' → logprob: -11.130197525024414
    8. '
' → logprob: -11.630197525024414
    9. '(res' → logprob: -13.255197525024414
    10. '  ' → logprob: -13.380197525024414

Token 568: '   ' (ID: 271)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.20999455451965332
    2. 'return' → logprob: -1.7099945545196533
    3. '   ' → logprob: -4.834994316101074
    4. ' return' → logprob: -8.084994316101074
    5. ' res' → logprob: -8.209994316101074
    6. 'if' → logprob: -11.584994316101074
    7. '
' → logprob: -13.084994316101074
    8. '=' → logprob: -13.709994316101074
    9. '+' → logprob: -13.959994316101074
    10. 'ret' → logprob: -14.209994316101074

Token 569: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0036551947705447674
    2. 'return' → logprob: -5.753654956817627
    3. ' res' → logprob: -8.003655433654785
    4. '   ' → logprob: -9.003655433654785
    5. ' return' → logprob: -10.878655433654785
    6. '=' → logprob: -14.753655433654785
    7. '
' → logprob: -15.128655433654785
    8. ' =' → logprob: -16.12865447998047
    9. '```' → logprob: -16.12865447998047
    10. '    
' → logprob: -16.37865447998047

Token 570: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0232619009912014
    2. ' =' → logprob: -3.773261785507202
    3. '=max' → logprob: -11.773262023925781
    4. '+=' → logprob: -12.273262023925781
    5. '   ' → logprob: -12.648262023925781
    6. 'return' → logprob: -14.773262023925781
    7. 'max' → logprob: -15.773262023925781
    8. ' +=' → logprob: -16.02326202392578
    9. '.=' → logprob: -17.27326202392578
    10. ' ' → logprob: -17.27326202392578

Token 571: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.18479955196380615
    2. ' max' → logprob: -1.8097995519638062
    3. 'p' → logprob: -5.559799671173096
    4. ' p' → logprob: -6.809799671173096
    5. '1' → logprob: -9.809799194335938
    6. 'dfs' → logprob: -10.684799194335938
    7. ' ' → logprob: -12.434799194335938
    8. 'prob' → logprob: -12.809799194335938
    9. ' dfs' → logprob: -13.809799194335938
    10. '   ' → logprob: -14.059799194335938

Token 572: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -1.3856492842023727e-06
    2. 'res' → logprob: -14.000000953674316
    3. '(' → logprob: -14.625000953674316
    4. '(
' → logprob: -18.250001907348633
    5. ',res' → logprob: -18.625001907348633
    6. '$res' → logprob: -19.000001907348633
    7. '```' → logprob: -19.375001907348633
    8. ' (' → logprob: -19.875001907348633
    9. '=res' → logprob: -20.375001907348633
    10. '   ' → logprob: -21.250001907348633

Token 573: ',' (ID: 11)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.3992823362350464
    2. ',' → logprob: -1.1492823362350464
    3. ',res' → logprob: -4.399282455444336
    4. 'res' → logprob: -10.149282455444336
    5. ' ,' → logprob: -12.899282455444336
    6. '),' → logprob: -13.274282455444336
    7. '(' → logprob: -13.399282455444336
    8. ')' → logprob: -13.524282455444336
    9. '=res' → logprob: -14.149282455444336
    10. ',
' → logprob: -14.399282455444336

Token 574: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0022492227144539356
    2. ' p' → logprob: -6.252249240875244
    3. '   ' → logprob: -9.002248764038086
    4. 'dfs' → logprob: -9.127248764038086
    5. 'res' → logprob: -9.877248764038086
    6. '1' → logprob: -11.127248764038086
    7. 'prob' → logprob: -11.377248764038086
    8. ' ' → logprob: -13.002248764038086
    9. '    ' → logprob: -13.252248764038086
    10. '  ' → logprob: -13.377248764038086

Token 575: '_pass' (ID: 36293)
  Prédit: '_pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pass' → logprob: -4.320199877838604e-07
    2. '_p' → logprob: -15.75
    3. 'pass' → logprob: -16.125
    4. '_pas' → logprob: -16.875
    5. 'passed' → logprob: -17.125
    6. '_res' → logprob: -17.125
    7. '_post' → logprob: -18.25
    8. '	pass' → logprob: -19.625
    9. 'Passed' → logprob: -19.875
    10. '_PASS' → logprob: -20.375

Token 576: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -3.054500666621607e-06
    2. 'é' → logprob: -13.00000286102295
    3. 'éd' → logprob: -14.62500286102295
    4. 'eded' → logprob: -16.625003814697266
    5. 'sed' → logprob: -17.500003814697266
    6. 'assed' → logprob: -17.625003814697266
    7. 'e' → logprob: -18.125003814697266
    8. 'ased' → logprob: -18.125003814697266
    9. '_pass' → logprob: -18.250003814697266
    10. 'd' → logprob: -18.500003814697266

Token 577: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7945827841758728
    2. ')' → logprob: -1.2945828437805176
    3. ' *' → logprob: -1.2945828437805176
    4. ' )' → logprob: -9.04458236694336
    5. '*)' → logprob: -10.04458236694336
    6. '   ' → logprob: -10.66958236694336
    7. ')
' → logprob: -11.54458236694336
    8. ')*' → logprob: -12.41958236694336
    9. ' ' → logprob: -13.16958236694336
    10. ',' → logprob: -14.04458236694336

Token 578: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.576790988445282
    2. '1' → logprob: -0.826790988445282
    3. ' dfs' → logprob: -7.201790809631348
    4. ' ' → logprob: -9.576790809631348
    5. 'df' → logprob: -10.826790809631348
    6. 'DFS' → logprob: -12.701790809631348
    7. '```' → logprob: -12.826790809631348
    8. '   ' → logprob: -13.076790809631348
    9. '(' → logprob: -13.639290809631348
    10. 'dfa' → logprob: -13.701790809631348

Token 579: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -3.2855416066013277e-05
    2. '(m' → logprob: -10.625032424926758
    3. 'k' → logprob: -12.000032424926758
    4. '(' → logprob: -13.500032424926758
    5. ' (' → logprob: -14.250032424926758
    6. '(
' → logprob: -16.000032424926758
    7. 'm' → logprob: -16.625032424926758
    8. '((' → logprob: -17.125032424926758
    9. ' k' → logprob: -17.750032424926758
    10. ')' → logprob: -18.125032424926758

Token 580: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.45090293884277344
    2. ',' → logprob: -1.2009029388427734
    3. '(' → logprob: -3.4509029388427734
    4. '(m' → logprob: -3.8259029388427734
    5. '(k' → logprob: -5.825902938842773
    6. '+,' → logprob: -6.325902938842773
    7. ' +' → logprob: -6.700902938842773
    8. '(n' → logprob: -6.825902938842773
    9. ',m' → logprob: -7.825902938842773
    10. ' ,' → logprob: -8.075902938842773

Token 581: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.6789137084269896e-05
    2. ' ' → logprob: -10.25003719329834
    3. '0' → logprob: -14.87503719329834
    4. '   ' → logprob: -15.50003719329834
    5. '```' → logprob: -15.50003719329834
    6. 'm' → logprob: -15.87503719329834
    7. '
' → logprob: -16.375036239624023
    8. ',' → logprob: -16.437536239624023
    9. '2' → logprob: -16.562536239624023
    10. '  ' → logprob: -17.375036239624023

Token 582: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -11.250021934509277
    3. 'm' → logprob: -12.375021934509277
    4. '0' → logprob: -13.625021934509277
    5. '
' → logprob: -14.125021934509277
    6. '```' → logprob: -14.312521934509277
    7. '   ' → logprob: -15.000021934509277
    8. 'n' → logprob: -15.312521934509277
    9. '(m' → logprob: -15.500021934509277
    10. '+' → logprob: -16.00002098083496

Token 583: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1329886019229889
    2. '(n' → logprob: -2.132988691329956
    3. '(' → logprob: -5.132988452911377
    4. ' (' → logprob: -10.132988929748535
    5. ' ,' → logprob: -10.132988929748535
    6. ',n' → logprob: -10.132988929748535
    7. '(r' → logprob: -11.882988929748535
    8. '(k' → logprob: -12.382988929748535
    9. ')' → logprob: -12.757988929748535
    10. ',(' → logprob: -12.882988929748535

Token 584: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.822646693966817e-06
    2. ' n' → logprob: -12.125007629394531
    3. '   ' → logprob: -13.000007629394531
    4. '  ' → logprob: -16.50000762939453
    5. ' ' → logprob: -16.75000762939453
    6. '0' → logprob: -17.62500762939453
    7. '    ' → logprob: -18.00000762939453
    8. '
' → logprob: -18.25000762939453
    9. ')n' → logprob: -18.25000762939453
    10. ')' → logprob: -18.75000762939453

Token 585: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0025728060863912106
    2. '))
' → logprob: -6.627573013305664
    3. ')' → logprob: -6.752573013305664
    4. '))

' → logprob: -10.502573013305664
    5. ' ))' → logprob: -10.752573013305664
    6. '()))' → logprob: -11.252573013305664
    7. '   ' → logprob: -11.877573013305664
    8. ')))' → logprob: -12.252573013305664
    9. ' ' → logprob: -14.002573013305664
    10. '),' → logprob: -14.127573013305664

Token 586: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0380721352994442
    2. 'return' → logprob: -3.288072109222412
    3. ' return' → logprob: -10.41307258605957
    4. '	return' → logprob: -14.91307258605957
    5. '```' → logprob: -16.03807258605957
    6. '  ' → logprob: -17.03807258605957
    7. ':return' → logprob: -17.03807258605957
    8. '    
' → logprob: -17.16307258605957
    9. '@return' → logprob: -18.53807258605957
    10. '{return' → logprob: -18.78807258605957

Token 587: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16468767821788788
    2. '   ' → logprob: -1.9146876335144043
    3. ' return' → logprob: -5.414687633514404
    4. '	return' → logprob: -13.039688110351562
    5. ':return' → logprob: -15.414688110351562
    6. '    
' → logprob: -15.789688110351562
    7. '  ' → logprob: -16.164688110351562
    8. ' ' → logprob: -16.914688110351562
    9. '
' → logprob: -17.664688110351562
    10. '    ' → logprob: -18.039688110351562

Token 588: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0001584850688232109
    2. ' res' → logprob: -8.750158309936523
    3. '(res' → logprob: -21.500158309936523
    4. '	res' → logprob: -22.875158309936523
    5. '$res' → logprob: -23.125158309936523
    6. 're' → logprob: -23.625158309936523
    7. '_res' → logprob: -24.250158309936523
    8. 'r' → logprob: -24.250158309936523
    9. '   ' → logprob: -26.125158309936523
    10. 'rés' → logprob: -26.375158309936523

Token 589: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 590: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003192566568031907
    2. 'result' → logprob: -5.75319242477417
    3. '#' → logprob: -11.878192901611328
    4. 'answer' → logprob: -12.503192901611328
    5. ' print' → logprob: -12.878192901611328
    6. 'prob' → logprob: -15.003192901611328
    7. 'for' → logprob: -15.253192901611328
    8. 'r' → logprob: -15.503192901611328
    9. 'res' → logprob: -15.628192901611328
    10. 'pr' → logprob: -16.128192901611328

Token 591: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759867429733276
    2. '(d' → logprob: -0.8259867429733276
    3. '(df' → logprob: -10.325986862182617
    4. '(
' → logprob: -12.450986862182617
    5. '()' → logprob: -12.575986862182617
    6. '(max' → logprob: -12.700986862182617
    7. '(round' → logprob: -13.950986862182617
    8. '(

' → logprob: -14.450986862182617
    9. ' (' → logprob: -14.575986862182617
    10. '((' → logprob: -14.950986862182617

Token 592: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -0.00010831133840838447
    2. 'f' → logprob: -9.37510871887207
    3. '(fs' → logprob: -10.87510871887207
    4. 's' → logprob: -12.87510871887207
    5. 'dfs' → logprob: -13.75010871887207
    6. 'sf' → logprob: -15.25010871887207
    7. ' fs' → logprob: -15.25010871887207
    8. 'FS' → logprob: -16.37510871887207
    9. 'fsp' → logprob: -16.37510871887207
    10. '_fs' → logprob: -16.87510871887207

Token 593: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.392824874026701e-05
    2. '(m' → logprob: -10.50003433227539
    3. ' (' → logprob: -12.50003433227539
    4. '0' → logprob: -13.75003433227539
    5. ')' → logprob: -14.00003433227539
    6. ')(' → logprob: -15.00003433227539
    7. '((' → logprob: -15.75003433227539
    8. '(k' → logprob: -16.12503433227539
    9. '(
' → logprob: -16.25003433227539
    10. ' ' → logprob: -18.25003433227539

Token 594: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.625
    3. '(' → logprob: -20.25
    4. '۰' → logprob: -22.75
    5. '０' → logprob: -22.875
    6. '00' → logprob: -23.0
    7. '```' → logprob: -23.625
    8. '000' → logprob: -23.875
    9. ')' → logprob: -24.125
    10. 'm' → logprob: -24.125

Token 595: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.717296517104842e-05
    2. ' ,' → logprob: -10.125057220458984
    3. '0' → logprob: -11.875057220458984
    4. '(' → logprob: -12.000057220458984
    5. ',n' → logprob: -13.125057220458984
    6. ',
' → logprob: -14.000057220458984
    7. ')' → logprob: -14.500057220458984
    8. ' ' → logprob: -16.125057220458984
    9. '‌,' → logprob: -16.375057220458984
    10. ',m' → logprob: -16.625057220458984

Token 596: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '۰' → logprob: -20.25
    4. ')' → logprob: -20.375
    5. '1' → logprob: -21.25
    6. '   ' → logprob: -21.5
    7. '```' → logprob: -21.875
    8. '00' → logprob: -22.4375
    9. '０' → logprob: -22.75
    10. '000' → logprob: -22.9375

Token 597: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '۰' → logprob: -20.375
    4. '1' → logprob: -20.75
    5. ')' → logprob: -21.125
    6. '```' → logprob: -21.5
    7. '   ' → logprob: -22.0625
    8. '０' → logprob: -22.125
    9. '000' → logprob: -22.5
    10. '০' → logprob: -22.75

Token 598: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.008620604872703552
    2. ')' → logprob: -4.758620738983154
    3. '()))' → logprob: -13.008620262145996
    4. '))
' → logprob: -13.133620262145996
    5. '())' → logprob: -14.008620262145996
    6. ')))' → logprob: -14.633620262145996
    7. ')
' → logprob: -15.383620262145996
    8. '()' → logprob: -16.133621215820312
    9. ' ))' → logprob: -16.508621215820312
    10. '])' → logprob: -18.383621215820312


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 596
Tokens correctement prédits (1ère position, stricte): 166
Tokens correctement prédits (1ère position, avec adaptation): 180
Tokens correctement prédits (top 10): 377
Précision stricte (1ère position): 27.85%
Précision adaptée (1ère position): 30.20%
Précision (top 10): 63.26%
================================================================================
