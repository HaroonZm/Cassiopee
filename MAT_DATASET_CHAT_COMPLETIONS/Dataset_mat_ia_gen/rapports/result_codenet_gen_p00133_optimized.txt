================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:11:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
grid = [input() for _ in range(8)]

def rotate90(g):
    return [''.join(g[7 - j][i] for j in range(8)) for i in range(8)]

r90 = rotate90(grid)
r180 = rotate90(r90)
r270 = rotate90(r180)

print(90)
print(*r90, sep='\n')
print(180)
print(*r180, sep='\n')
print(270)
print(*r270, sep='\n')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'grid' (ID: 7886)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' [' (ID: 723)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0492253415286541
    2. '[]' → logprob: -3.049225330352783
    3. ']' → logprob: -7.424225330352783
    4. '   ' → logprob: -10.549225807189941
    5. '[
' → logprob: -12.674225807189941
    6. ' [' → logprob: -12.674225807189941
    7. '```' → logprob: -12.799225807189941
    8. '[],' → logprob: -13.174225807189941
    9. ' ' → logprob: -14.049225807189941
    10. '\[' → logprob: -14.674225807189941

Token 4: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9378029108047485
    2. '()]' → logprob: -1.0628029108047485
    3. '()' → logprob: -1.5628029108047485
    4. '('' → logprob: -3.187802791595459
    5. '("' → logprob: -5.062802791595459
    6. '("("' → logprob: -6.062802791595459
    7. ']' → logprob: -6.312802791595459
    8. '("")' → logprob: -7.687802791595459
    9. ']()' → logprob: -7.937802791595459
    10. '().' → logprob: -8.312803268432617

Token 5: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.040183957666158676
    2. ')]' → logprob: -4.040184020996094
    3. '()]' → logprob: -4.165184020996094
    4. ')' → logprob: -5.915184020996094
    5. ' for' → logprob: -6.415184020996094
    6. 'for' → logprob: -6.915184020996094
    7. '])' → logprob: -8.165184020996094
    8. '`]' → logprob: -8.540184020996094
    9. '])]' → logprob: -9.290184020996094
    10. '()' → logprob: -10.165184020996094

Token 6: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1764003038406372
    2. ' _' → logprob: -2.4264001846313477
    3. '_' → logprob: -3.6764001846313477
    4. ' i' → logprob: -3.6764001846313477
    5. ' ' → logprob: -3.9264001846313477
    6. 'range' → logprob: -6.676400184631348
    7. ' in' → logprob: -7.051400184631348
    8. ' row' → logprob: -7.801400184631348
    9. '_range' → logprob: -8.551400184631348
    10. '  ' → logprob: -9.551400184631348

Token 7: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006746869999915361
    2. 'in' → logprob: -5.006746768951416
    3. ' ' → logprob: -11.006747245788574
    4. '_' → logprob: -11.756747245788574
    5. '<|end|>' → logprob: -13.006747245788574
    6. '	in' → logprob: -13.506747245788574
    7. 'range' → logprob: -13.631747245788574
    8. ' _' → logprob: -15.006747245788574
    9. '<|end|>' → logprob: -15.131747245788574
    10. ' range' → logprob: -15.256747245788574

Token 8: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0052342405542731285
    2. 'range' → logprob: -5.255234241485596
    3. ' ' → logprob: -15.255233764648438
    4. '	range' → logprob: -15.630233764648438
    5. ' xrange' → logprob: -17.005233764648438
    6. '_range' → logprob: -18.255233764648438
    7. '(range' → logprob: -19.255233764648438
    8. ' in' → logprob: -19.630233764648438
    9. '-range' → logprob: -19.755233764648438
    10. '.range' → logprob: -19.755233764648438

Token 9: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.2729995988775045e-06
    2. '(len' → logprob: -12.625006675720215
    3. '(n' → logprob: -13.500006675720215
    4. ' (' → logprob: -13.750006675720215
    5. '(
' → logprob: -14.875006675720215
    6. '(int' → logprob: -16.2500057220459
    7. '4' → logprob: -17.2500057220459
    8. '(s' → logprob: -17.7500057220459
    9. '(grid' → logprob: -18.2500057220459
    10. '9' → logprob: -18.5000057220459

Token 10: '8' (ID: 23)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.4207320213317871
    2. '4' → logprob: -1.795732021331787
    3. '3' → logprob: -2.420732021331787
    4. '5' → logprob: -2.545732021331787
    5. '10' → logprob: -5.295732021331787
    6. '8' → logprob: -5.670732021331787
    7. 'n' → logprob: -7.795732021331787
    8. ' ' → logprob: -7.795732021331787
    9. 'len' → logprob: -7.795732021331787
    10. '6' → logprob: -8.295732498168945

Token 11: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.8206473871250637e-05
    2. ']' → logprob: -10.875028610229492
    3. ')' → logprob: -12.750028610229492
    4. '])]' → logprob: -12.750028610229492
    5. ')])' → logprob: -13.500028610229492
    6. '])' → logprob: -14.000028610229492
    7. '')]' → logprob: -14.375028610229492
    8. ')],' → logprob: -15.875028610229492
    9. ')].' → logprob: -16.375028610229492
    10. ')][' → logprob: -16.625028610229492

Token 12: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.544208288192749
    2. '[' → logprob: -1.169208288192749
    3. '(' → logprob: -3.544208288192749
    4. '\n' → logprob: -3.919208288192749
    5. '[
' → logprob: -4.169208526611328
    6. '```' → logprob: -4.419208526611328
    7. ']' → logprob: -5.044208526611328
    8. 'for' → logprob: -5.169208526611328
    9. ')' → logprob: -5.794208526611328
    10. '\' → logprob: -5.919208526611328

Token 13: ' rotate' (ID: 31987)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21472294628620148
    2. ' check' → logprob: -2.8397228717803955
    3. ' valid' → logprob: -2.8397228717803955
    4. ' knight' → logprob: -3.7147228717803955
    5. ' solve' → logprob: -4.089723110198975
    6. ' is' → logprob: -4.839723110198975
    7. ' main' → logprob: -5.464723110198975
    8. ' chess' → logprob: -5.589723110198975
    9. ' rook' → logprob: -5.714723110198975
    10. ' find' → logprob: -6.464723110198975

Token 14: '90' (ID: 2744)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20784449577331543
    2. '(grid' → logprob: -1.7078444957733154
    3. '_grid' → logprob: -5.2078447341918945
    4. ' (' → logprob: -7.7078447341918945
    5. '(_' → logprob: -8.832844734191895
    6. '(Grid' → logprob: -9.332844734191895
    7. '_' → logprob: -9.707844734191895
    8. '_gr' → logprob: -10.957844734191895
    9. '(gr' → logprob: -10.957844734191895
    10. ' ' → logprob: -11.207844734191895

Token 15: '(g' (ID: 7791)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47559475898742676
    2. '(grid' → logprob: -0.9755947589874268
    3. '(a' → logprob: -8.600594520568848
    4. '(A' → logprob: -8.600594520568848
    5. '(matrix' → logprob: -8.850594520568848
    6. '(Grid' → logprob: -8.850594520568848
    7. '(gr' → logprob: -8.975594520568848
    8. '_grid' → logprob: -9.225594520568848
    9. '(x' → logprob: -9.225594520568848
    10. '(rotation' → logprob: -9.350594520568848

Token 16: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026492226868867874
    2. 'rid' → logprob: -3.776492118835449
    3. ')' → logprob: -6.401492118835449
    4. 'grid' → logprob: -7.526492118835449
    5. '):
' → logprob: -7.776492118835449
    6. '_grid' → logprob: -8.40149211883545
    7. '(grid' → logprob: -9.52649211883545
    8. 'ried' → logprob: -9.77649211883545
    9. '):

' → logprob: -9.90149211883545
    10. 'g' → logprob: -10.02649211883545

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020730022341012955
    2. ' return' → logprob: -4.145730018615723
    3. ':' → logprob: -6.895730018615723
    4. '    ' → logprob: -7.020730018615723
    5. 'return' → logprob: -7.020730018615723
    6. ' ' → logprob: -7.520730018615723
    7. ' rotated' → logprob: -8.395730018615723
    8. ' grid' → logprob: -8.520730018615723
    9. ' new' → logprob: -8.645730018615723
    10. '	return' → logprob: -9.270730018615723

Token 18: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3238881528377533
    2. ' return' → logprob: -1.4488881826400757
    3. '[' → logprob: -3.573888063430786
    4. '   ' → logprob: -4.573888301849365
    5. ' [' → logprob: -6.198888301849365
    6. '[[' → logprob: -7.823888301849365
    7. 'rot' → logprob: -8.198887825012207
    8. ' [[' → logprob: -8.823887825012207
    9. '[
' → logprob: -9.323887825012207
    10. ' ' → logprob: -9.573887825012207

Token 19: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.8126218914985657
    2. '[list' → logprob: -0.8126218914985657
    3. '["' → logprob: -2.312621831893921
    4. '[' → logprob: -5.0626220703125
    5. 'list' → logprob: -5.3126220703125
    6. '[['' → logprob: -6.3126220703125
    7. '[[' → logprob: -8.1876220703125
    8. ' ['' → logprob: -9.3126220703125
    9. '[len' → logprob: -9.3126220703125
    10. '[
' → logprob: -10.4376220703125

Token 20: ''.' (ID: 6120)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.004640522412955761
    2. '"' → logprob: -5.754640579223633
    3. ''.' → logprob: -6.754640579223633
    4. ' ''.' → logprob: -8.254640579223633
    5. '".' → logprob: -10.879640579223633
    6. ''' → logprob: -11.504640579223633
    7. '''' → logprob: -12.254640579223633
    8. ' "".' → logprob: -13.379640579223633
    9. '['' → logprob: -14.629640579223633
    10. '""' → logprob: -15.004640579223633

Token 21: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -6.704273118884885e-07
    2. ' join' → logprob: -14.625000953674316
    3. '''.' → logprob: -16.625
    4. 'jo' → logprob: -16.75
    5. 'j' → logprob: -18.5
    6. ''.' → logprob: -18.75
    7. ' ' → logprob: -20.125
    8. '(join' → logprob: -20.625
    9. 'concat' → logprob: -21.375
    10. 'joins' → logprob: -21.375

Token 22: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.30646511912345886
    2. '(grid' → logprob: -1.5564651489257812
    3. '([' → logprob: -3.4314651489257812
    4. '(re' → logprob: -4.556465148925781
    5. '(' → logprob: -5.681465148925781
    6. '(zip' → logprob: -5.681465148925781
    7. '(row' → logprob: -5.806465148925781
    8. '(rot' → logprob: -9.931465148925781
    9. 'g' → logprob: -10.056465148925781
    10. '(
' → logprob: -10.056465148925781

Token 23: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001295000547543168
    2. '[::-' → logprob: -7.00129508972168
    3. '[j' → logprob: -8.62629508972168
    4. '[len' → logprob: -8.75129508972168
    5. '[-' → logprob: -11.00129508972168
    6. '[row' → logprob: -12.00129508972168
    7. '[n' → logprob: -12.25129508972168
    8. '7' → logprob: -12.25129508972168
    9. '[r' → logprob: -13.25129508972168
    10. '[str' → logprob: -13.25129508972168

Token 24: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.008707817643880844
    2. '::-' → logprob: -5.0087080001831055
    3. '[::-' → logprob: -6.8837080001831055
    4. '[' → logprob: -7.6337080001831055
    5. 'j' → logprob: -8.258708000183105
    6. '~' → logprob: -9.383708000183105
    7. 'r' → logprob: -10.008708000183105
    8. '8' → logprob: -10.258708000183105
    9. 'len' → logprob: -11.383708000183105
    10. '[j' → logprob: -11.883708000183105

Token 25: ' -' (ID: 533)
  Prédit: '-j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-j' → logprob: -0.5636131763458252
    2. '-i' → logprob: -1.1886131763458252
    3. ' -' → logprob: -2.563613176345825
    4. '-' → logprob: -3.063613176345825
    5. '-x' → logprob: -6.188612937927246
    6. '-c' → logprob: -9.063612937927246
    7. '-k' → logprob: -9.188612937927246
    8. '-y' → logprob: -9.813612937927246
    9. '][' → logprob: -10.688612937927246
    10. '-col' → logprob: -10.938612937927246

Token 26: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.04804067313671112
    2. 'x' → logprob: -3.7980406284332275
    3. ' j' → logprob: -4.423040866851807
    4. 'y' → logprob: -5.048040866851807
    5. 'i' → logprob: -5.673040866851807
    6. ' y' → logprob: -7.173040866851807
    7. ' x' → logprob: -7.548040866851807
    8. 'c' → logprob: -7.798040866851807
    9. ' col' → logprob: -7.923040866851807
    10. 'col' → logprob: -8.673040390014648

Token 27: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0003063838230445981
    2. ']' → logprob: -8.875306129455566
    3. '[' → logprob: -9.000306129455566
    4. ''][' → logprob: -10.875306129455566
    5. ' ][' → logprob: -11.000306129455566
    6. '"][' → logprob: -13.000306129455566
    7. '[i' → logprob: -13.500306129455566
    8. '])' → logprob: -13.875306129455566
    9. ')[' → logprob: -13.875306129455566
    10. ']['' → logprob: -14.750306129455566

Token 28: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.56102097814437e-05
    2. ' i' → logprob: -10.000045776367188
    3. '	i' → logprob: -16.625045776367188
    4. ''i' → logprob: -16.875045776367188
    5. ')i' → logprob: -17.500045776367188
    6. '_i' → logprob: -17.875045776367188
    7. '{i' → logprob: -18.000045776367188
    8. ']' → logprob: -18.000045776367188
    9. '   ' → logprob: -18.125045776367188
    10. ' ' → logprob: -18.625045776367188

Token 29: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005294715519994497
    2. '])' → logprob: -5.2552947998046875
    3. ' ]' → logprob: -10.380294799804688
    4. ')' → logprob: -10.880294799804688
    5. ' for' → logprob: -12.130294799804688
    6. 'for' → logprob: -12.880294799804688
    7. '']' → logprob: -13.880294799804688
    8. ' ])' → logprob: -14.130294799804688
    9. ')]' → logprob: -15.005294799804688
    10. ']
' → logprob: -15.130294799804688

Token 30: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6058048605918884
    2. 'for' → logprob: -1.2308049201965332
    3. ']' → logprob: -2.105804920196533
    4. ')' → logprob: -3.230804920196533
    5. '])' → logprob: -7.855804920196533
    6. '   ' → logprob: -8.355804443359375
    7. ' ' → logprob: -8.980804443359375
    8. '  ' → logprob: -9.105804443359375
    9. '	for' → logprob: -9.355804443359375
    10. ' ]' → logprob: -10.355804443359375

Token 31: ' j' (ID: 441)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0020208319183439016
    2. 'range' → logprob: -6.252020835876465
    3. ' ' → logprob: -10.127020835876465
    4. ' xrange' → logprob: -11.002020835876465
    5. '<|end|>' → logprob: -11.377020835876465
    6. ' in' → logprob: -11.627020835876465
    7. '	range' → logprob: -12.627020835876465
    8. ')' → logprob: -12.627020835876465
    9. ' j' → logprob: -12.752020835876465
    10. ' i' → logprob: -12.752020835876465

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.025575703009963036
    2. 'in' → logprob: -3.775575637817383
    3. ' range' → logprob: -6.650575637817383
    4. 'range' → logprob: -7.400575637817383
    5. '<|end|>' → logprob: -7.900575637817383
    6. ')' → logprob: -10.775575637817383
    7. '(range' → logprob: -11.400575637817383
    8. ' ' → logprob: -11.775575637817383
    9. ' xrange' → logprob: -12.400575637817383
    10. '	range' → logprob: -12.650575637817383

Token 33: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12692904472351074
    2. ' range' → logprob: -2.1269290447235107
    3. '	range' → logprob: -14.50192928314209
    4. ' xrange' → logprob: -15.37692928314209
    5. '(range' → logprob: -16.501928329467773
    6. '8' → logprob: -16.626928329467773
    7. ' ' → logprob: -16.751928329467773
    8. ')' → logprob: -17.376928329467773
    9. '7' → logprob: -17.626928329467773
    10. '   ' → logprob: -18.501928329467773

Token 34: '(' (ID: 7)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.00761017482727766
    2. '(' → logprob: -4.882610321044922
    3. ' ' → logprob: -12.632610321044922
    4. ')' → logprob: -14.132610321044922
    5. '(
' → logprob: -16.882610321044922
    6. '7' → logprob: -17.882610321044922
    7. ' (' → logprob: -18.007610321044922
    8. '4' → logprob: -18.382610321044922
    9. '   ' → logprob: -18.382610321044922
    10. '
' → logprob: -19.007610321044922

Token 35: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. ')' → logprob: -17.5000057220459
    4. '   ' → logprob: -18.1250057220459
    5. 'len' → logprob: -19.0625057220459
    6. '८' → logprob: -19.1875057220459
    7. '(' → logprob: -19.1875057220459
    8. '８' → logprob: -19.3125057220459
    9. '৮' → logprob: -19.4375057220459
    10. '```' → logprob: -19.5625057220459

Token 36: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0734696015715599
    2. '))' → logprob: -2.823469638824463
    3. '])' → logprob: -4.698469638824463
    4. ' )' → logprob: -6.323469638824463
    5. ')]' → logprob: -8.448469161987305
    6. ')])' → logprob: -8.573469161987305
    7. ' ])' → logprob: -9.573469161987305
    8. ' ))' → logprob: -10.948469161987305
    9. '   ' → logprob: -11.323469161987305
    10. ' ' → logprob: -11.698469161987305

Token 37: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.052295148372650146
    2. ']' → logprob: -4.052295207977295
    3. 'for' → logprob: -4.177295207977295
    4. ' for' → logprob: -4.302295207977295
    5. '   ' → logprob: -5.927295207977295
    6. ' ' → logprob: -6.802295207977295
    7. ' )' → logprob: -7.802295207977295
    8. '])' → logprob: -8.552294731140137
    9. ')]' → logprob: -9.052294731140137
    10. ' ]' → logprob: -9.552294731140137

Token 38: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.048696715384721756
    2. 'range' → logprob: -3.048696756362915
    3. 'i' → logprob: -9.298696517944336
    4. ' i' → logprob: -11.048696517944336
    5. ' ' → logprob: -13.923696517944336
    6. '(range' → logprob: -14.298696517944336
    7. '	range' → logprob: -15.673696517944336
    8. ' xrange' → logprob: -16.673696517944336
    9. '  ' → logprob: -17.048696517944336
    10. ' in' → logprob: -17.173696517944336

Token 39: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1434680074453354
    2. 'in' → logprob: -2.018467903137207
    3. '(' → logprob: -7.643467903137207
    4. '(range' → logprob: -8.893467903137207
    5. 'range' → logprob: -9.268467903137207
    6. ' range' → logprob: -10.268467903137207
    7. '<|end|>' → logprob: -10.518467903137207
    8. '	in' → logprob: -12.143467903137207
    9. ' ' → logprob: -12.143467903137207
    10. '(in' → logprob: -12.268467903137207

Token 40: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011048054322600365
    2. ' range' → logprob: -4.511047840118408
    3. '8' → logprob: -15.886048316955566
    4. '(range' → logprob: -16.51104736328125
    5. '	range' → logprob: -18.26104736328125
    6. ' ' → logprob: -18.76104736328125
    7. ' xrange' → logprob: -19.38604736328125
    8. '   ' → logprob: -20.01104736328125
    9. ')' → logprob: -22.01104736328125
    10. '7' → logprob: -22.26104736328125

Token 41: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010902655776590109
    2. '8' → logprob: -9.12510871887207
    3. ' (' → logprob: -16.87510871887207
    4. '(
' → logprob: -17.37510871887207
    5. '```' → logprob: -19.12510871887207
    6. ')' → logprob: -19.50010871887207
    7. ' ' → logprob: -19.75010871887207
    8. '(len' → logprob: -20.00010871887207
    9. '   ' → logprob: -20.12510871887207
    10. '7' → logprob: -20.25010871887207

Token 42: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -16.125001907348633
    4. ')' → logprob: -18.875001907348633
    5. '7' → logprob: -19.750001907348633
    6. '```' → logprob: -20.125001907348633
    7. '' → logprob: -20.500001907348633
    8. '0' → logprob: -20.937501907348633
    9. '۸' → logprob: -20.937501907348633
    10. '(' → logprob: -21.062501907348633

Token 43: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00013834332639817148
    2. ']' → logprob: -9.000138282775879
    3. '])]' → logprob: -12.250138282775879
    4. '])' → logprob: -12.500138282775879
    5. ')' → logprob: -12.750138282775879
    6. ')])' → logprob: -12.875138282775879
    7. '')]' → logprob: -15.250138282775879
    8. '   ' → logprob: -15.500138282775879
    9. '))' → logprob: -15.875138282775879
    10. ' )' → logprob: -16.375139236450195

Token 44: 'r' (ID: 81)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.2662756145000458
    2. '(grid' → logprob: -3.141275644302368
    3. ']' → logprob: -3.516275644302368
    4. ' rotated' → logprob: -3.766275644302368
    5. 'result' → logprob: -4.141275405883789
    6. '[' → logprob: -4.141275405883789
    7. '(' → logprob: -4.391275405883789
    8. '```' → logprob: -4.516275405883789
    9. ')' → logprob: -4.641275405883789
    10. 'newline' → logprob: -4.766275405883789

Token 45: '90' (ID: 2744)
  Prédit: 'otate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'otate' → logprob: -0.27180159091949463
    2. 'ot' → logprob: -1.5218015909194946
    3. ' =' → logprob: -4.646801471710205
    4. 'o' → logprob: -5.021801471710205
    5. 'otation' → logprob: -6.771801471710205
    6. 'grid' → logprob: -7.146801471710205
    7. '=' → logprob: -7.521801471710205
    8. 'es' → logprob: -8.021801948547363
    9. 'ota' → logprob: -9.271801948547363
    10. '1' → logprob: -9.521801948547363

Token 46: ' =' (ID: 314)
  Prédit: '(grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -0.0072858501225709915
    2. '(' → logprob: -5.507286071777344
    3. '(g' → logprob: -5.757286071777344
    4. '(r' → logprob: -11.007286071777344
    5. ' (' → logprob: -11.132286071777344
    6. '(gr' → logprob: -12.507286071777344
    7. '(rot' → logprob: -12.757286071777344
    8. ' =' → logprob: -13.132286071777344
    9. '=' → logprob: -14.382286071777344
    10. 'grid' → logprob: -15.007286071777344

Token 47: ' rotate' (ID: 31987)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.16023336350917816
    2. ' rotate' → logprob: -1.9102333784103394
    3. ' ' → logprob: -12.410233497619629
    4. '   ' → logprob: -12.910233497619629
    5. '  ' → logprob: -14.160233497619629
    6. '.rotate' → logprob: -14.660233497619629
    7. ' ' → logprob: -14.785233497619629
    8. 'rot' → logprob: -14.910233497619629
    9. 'grid' → logprob: -15.160233497619629
    10. ' grid' → logprob: -16.410232543945312

Token 48: '90' (ID: 2744)
  Prédit: '90'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -9.088346359931165e-07
    2. '9' → logprob: -14.000000953674316
    3. ' ' → logprob: -18.375
    4. '901' → logprob: -18.875
    5. 'r' → logprob: -19.0
    6. '900' → logprob: -19.0
    7. '09' → logprob: -19.625
    8. '(' → logprob: -19.875
    9. ')' → logprob: -20.25
    10. '```' → logprob: -20.5

Token 49: '(grid' (ID: 51818)
  Prédit: '(grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -1.0206720617134124e-05
    2. '(' → logprob: -12.00001049041748
    3. '(g' → logprob: -13.00001049041748
    4. ' (' → logprob: -13.75001049041748
    5. '(r' → logprob: -15.12501049041748
    6. 'grid' → logprob: -15.37501049041748
    7. '(gr' → logprob: -16.625009536743164
    8. '40' → logprob: -16.875009536743164
    9. '(Grid' → logprob: -17.750009536743164
    10. '90' → logprob: -18.125009536743164

Token 50: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.383526149671525e-05
    2. '))' → logprob: -10.125053405761719
    3. ')]' → logprob: -11.500053405761719
    4. '])' → logprob: -13.750053405761719
    5. ' )' → logprob: -14.125053405761719
    6. ')])' → logprob: -14.625053405761719
    7. ')
' → logprob: -14.875053405761719
    8. ')}' → logprob: -15.250053405761719
    9. ']' → logprob: -15.375053405761719
    10. '[' → logprob: -15.625053405761719

Token 51: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.18485990166664124
    2. 'for' → logprob: -2.4348599910736084
    3. 'print' → logprob: -2.5598599910736084
    4. 'rot' → logprob: -5.809859752655029
    5. '```' → logprob: -8.559860229492188
    6. ' for' → logprob: -8.934860229492188
    7. 'rotate' → logprob: -9.059860229492188
    8. 'result' → logprob: -9.559860229492188
    9. '[r' → logprob: -9.934860229492188
    10. 'def' → logprob: -10.059860229492188

Token 52: '180' (ID: 7521)
  Prédit: '90'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -0.027674511075019836
    2. '180' → logprob: -3.652674436569214
    3. 'ot' → logprob: -7.527674674987793
    4. 'otate' → logprob: -7.902674674987793
    5. '270' → logprob: -8.527674674987793
    6. '45' → logprob: -9.277674674987793
    7. 'otation' → logprob: -9.527674674987793
    8. '9' → logprob: -10.402674674987793
    9. 'r' → logprob: -10.527674674987793
    10. 'rotate' → logprob: -11.402674674987793

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0059287971816957
    2. '=' → logprob: -5.130928993225098
    3. ' ' → logprob: -16.38092803955078
    4. ' =)' → logprob: -17.38092803955078
    5. '=r' → logprob: -17.75592803955078
    6. 's' → logprob: -18.00592803955078
    7. ' =
' → logprob: -18.13092803955078
    8. ')' → logprob: -18.50592803955078
    9. 'r' → logprob: -18.88092803955078
    10. ' =[' → logprob: -19.38092803955078

Token 54: ' rotate' (ID: 31987)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.2520572245121002
    2. ' rotate' → logprob: -1.5020571947097778
    3. '[' → logprob: -9.752057075500488
    4. 'r' → logprob: -10.752057075500488
    5. '.rotate' → logprob: -11.252057075500488
    6. '   ' → logprob: -11.877057075500488
    7. 'rot' → logprob: -12.002057075500488
    8. ' [' → logprob: -12.127057075500488
    9. ' ' → logprob: -12.877057075500488
    10. '_rotate' → logprob: -13.002057075500488

Token 55: '90' (ID: 2744)
  Prédit: '90'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -6.933173426659778e-05
    2. '901' → logprob: -10.250069618225098
    3. '9' → logprob: -10.875069618225098
    4. '909' → logprob: -12.375069618225098
    5. '903' → logprob: -12.625069618225098
    6. '902' → logprob: -12.875069618225098
    7. 'r' → logprob: -14.250069618225098
    8. '904' → logprob: -14.500069618225098
    9. '(r' → logprob: -14.500069618225098
    10. '900' → logprob: -14.625069618225098

Token 56: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.00021903318702243268
    2. '(' → logprob: -8.500219345092773
    3. '(rot' → logprob: -11.750219345092773
    4. '(rotation' → logprob: -11.875219345092773
    5. 'r' → logprob: -14.750219345092773
    6. ' (' → logprob: -15.375219345092773
    7. '(
' → logprob: -17.375219345092773
    8. '((' → logprob: -18.000219345092773
    9. ')' → logprob: -18.125219345092773
    10. ')(' → logprob: -18.500219345092773

Token 57: '90' (ID: 2744)
  Prédit: '90'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -3.8889261304575484e-06
    2. '9' → logprob: -12.500003814697266
    3. ')' → logprob: -17.250003814697266
    4. '180' → logprob: -17.750003814697266
    5. ' ' → logprob: -18.250003814697266
    6. 'r' → logprob: -18.875003814697266
    7. '0' → logprob: -18.875003814697266
    8. '901' → logprob: -19.000003814697266
    9. '900' → logprob: -19.125003814697266
    10. '09' → logprob: -19.500003814697266

Token 58: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5928495486150496e-05
    2. ' )' → logprob: -11.375016212463379
    3. ')
' → logprob: -12.375016212463379
    4. '))' → logprob: -16.500015258789062
    5. ')`' → logprob: -16.750015258789062
    6. ')
' → logprob: -17.500015258789062
    7. ')

' → logprob: -18.625015258789062
    8. '`)' → logprob: -18.750015258789062
    9. ')#' → logprob: -19.375015258789062
    10. '')' → logprob: -19.375015258789062

Token 59: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.018266644328832626
    2. 'rotate' → logprob: -4.018266677856445
    3. ' r' → logprob: -9.768266677856445
    4. ' rotate' → logprob: -11.143266677856445
    5. '```' → logprob: -11.143266677856445
    6. '[r' → logprob: -11.643266677856445
    7. '[' → logprob: -12.518266677856445
    8. '   ' → logprob: -12.768266677856445
    9. '=' → logprob: -12.768266677856445
    10. ' =' → logprob: -13.018266677856445

Token 60: '270' (ID: 17820)
  Prédit: '270'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '270' → logprob: -0.0019678890239447355
    2. '90' → logprob: -6.251967906951904
    3. '27' → logprob: -10.376967430114746
    4. '2' → logprob: -12.376967430114746
    5. 'r' → logprob: -13.126967430114746
    6. 'ot' → logprob: -14.126967430114746
    7. '180' → logprob: -15.501967430114746
    8. '```' → logprob: -15.626967430114746
    9. 'rotate' → logprob: -15.876967430114746
    10. '9' → logprob: -15.876967430114746

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692810595035553
    2. '=' → logprob: -2.1269280910491943
    3. ' ' → logprob: -16.876928329467773
    4. '＝' → logprob: -18.501928329467773
    5. ')' → logprob: -18.751928329467773
    6. ' =)' → logprob: -18.876928329467773
    7. '```' → logprob: -19.626928329467773
    8. ' ' → logprob: -20.126928329467773
    9. ' =
' → logprob: -20.376928329467773
    10. 's' → logprob: -20.751928329467773

Token 62: ' rotate' (ID: 31987)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.020545978099107742
    2. ' rotate' → logprob: -3.8955459594726562
    3. '(' → logprob: -13.395545959472656
    4. '.rotate' → logprob: -13.520545959472656
    5. '   ' → logprob: -15.020545959472656
    6. '_rotate' → logprob: -15.270545959472656
    7. ' ' → logprob: -15.770545959472656
    8. '```' → logprob: -16.020545959472656
    9. 'rot' → logprob: -16.270545959472656
    10. 'r' → logprob: -16.395545959472656

Token 63: '90' (ID: 2744)
  Prédit: '90'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -7.226628895296017e-06
    2. '(r' → logprob: -12.500007629394531
    3. '270' → logprob: -13.250007629394531
    4. '180' → logprob: -13.875007629394531
    5. '0' → logprob: -15.500007629394531
    6. '(' → logprob: -15.750007629394531
    7. '80' → logprob: -16.25000762939453
    8. 'r' → logprob: -16.37500762939453
    9. ' ' → logprob: -16.37500762939453
    10. '30' → logprob: -17.25000762939453

Token 64: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -9.253090865968261e-06
    2. '(' → logprob: -11.625009536743164
    3. ' (' → logprob: -15.625009536743164
    4. '(rotation' → logprob: -17.125009536743164
    5. '(rot' → logprob: -17.750009536743164
    6. '(grid' → logprob: -18.875009536743164
    7. 'r' → logprob: -19.125009536743164
    8. '(rb' → logprob: -19.500009536743164
    9. '(
' → logprob: -20.250009536743164
    10. '(ro' → logprob: -20.875009536743164

Token 65: '180' (ID: 7521)
  Prédit: '180'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '180' → logprob: -5.9153885558771435e-06
    2. '18' → logprob: -12.750005722045898
    3. '1' → logprob: -12.875005722045898
    4. 'r' → logprob: -15.000005722045898
    5. ')' → logprob: -17.1250057220459
    6. '90' → logprob: -17.8750057220459
    7. 'one' → logprob: -18.2500057220459
    8. ' ' → logprob: -18.6250057220459
    9. '80' → logprob: -18.8750057220459
    10. 'i' → logprob: -19.3750057220459

Token 66: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.375000953674316
    3. '))' → logprob: -16.25
    4. ')
' → logprob: -16.25
    5. ']' → logprob: -16.75
    6. ')]' → logprob: -18.25
    7. '）' → logprob: -18.375
    8. ')`' → logprob: -18.625
    9. '),' → logprob: -18.875
    10. '')' → logprob: -19.375

Token 67: 'print' (ID: 1598)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5789312124252319
    2. 'print' → logprob: -1.203931212425232
    3. 'result' → logprob: -2.8289313316345215
    4. '#' → logprob: -3.3289313316345215
    5. 'r' → logprob: -3.4539313316345215
    6. 'def' → logprob: -5.5789313316345215
    7. 'count' → logprob: -6.3289313316345215
    8. 'pr' → logprob: -6.9539313316345215
    9. 'grid' → logprob: -7.2039313316345215
    10. 'res' → logprob: -7.3289313316345215

Token 68: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18356847763061523
    2. '(r' → logprob: -1.9335684776306152
    3. '('' → logprob: -3.8085684776306152
    4. '("("' → logprob: -7.308568477630615
    5. '(len' → logprob: -9.558568954467773
    6. '((' → logprob: -10.183568954467773
    7. '(list' → logprob: -10.683568954467773
    8. '(grid' → logprob: -10.683568954467773
    9. '(*' → logprob: -11.058568954467773
    10. '()' → logprob: -11.808568954467773

Token 69: '90' (ID: 2744)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.059404004365205765
    2. ''\' → logprob: -3.559403896331787
    3. ''r' → logprob: -4.809403896331787
    4. ''"' → logprob: -5.059403896331787
    5. ''' → logprob: -5.559403896331787
    6. '''.' → logprob: -5.809403896331787
    7. '"' → logprob: -5.934403896331787
    8. 'grid' → logprob: -6.184403896331787
    9. '[r' → logprob: -7.059403896331787
    10. '"\' → logprob: -7.559403896331787

Token 70: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010473367758095264
    2. ',' → logprob: -4.760473251342773
    3. ',r' → logprob: -7.385473251342773
    4. '))' → logprob: -7.885473251342773
    5. ',)' → logprob: -8.510473251342773
    6. ' )' → logprob: -8.510473251342773
    7. '(r' → logprob: -9.385473251342773
    8. '')' → logprob: -9.385473251342773
    9. 'r' → logprob: -9.510473251342773
    10. ' ,' → logprob: -9.885473251342773

Token 71: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31900471448898315
    2. '<|end|>' → logprob: -2.569004774093628
    3. ',' → logprob: -2.694004774093628
    4. 'r' → logprob: -2.944004774093628
    5. '*' → logprob: -3.694004774093628
    6. 'print' → logprob: -4.819004535675049
    7. '```' → logprob: -4.944004535675049
    8. ' ' → logprob: -5.444004535675049
    9. '
' → logprob: -5.444004535675049
    10. ')
' → logprob: -5.819004535675049

Token 72: '(*' (ID: 9000)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.591927170753479
    2. '(' → logprob: -0.841927170753479
    3. '('' → logprob: -4.2169270515441895
    4. '("("' → logprob: -7.0919270515441895
    5. '(len' → logprob: -9.466927528381348
    6. '('(' → logprob: -9.591927528381348
    7. '((' → logprob: -10.341927528381348
    8. '("(' → logprob: -10.716927528381348
    9. '(grid' → logprob: -10.841927528381348
    10. '(*' → logprob: -11.091927528381348

Token 73: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0008267794037237763
    2. '(r' → logprob: -7.625826835632324
    3. ' r' → logprob: -8.125826835632324
    4. '[r' → logprob: -10.250826835632324
    5. 'grid' → logprob: -13.000826835632324
    6. ')' → logprob: -13.500826835632324
    7. '[' → logprob: -14.000826835632324
    8. '(' → logprob: -14.500826835632324
    9. '['' → logprob: -14.625826835632324
    10. '   ' → logprob: -14.750826835632324

Token 74: '90' (ID: 2744)
  Prédit: '90'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -0.00014299227041192353
    2. '270' → logprob: -9.250143051147461
    3. '9' → logprob: -10.000143051147461
    4. '180' → logprob: -13.875143051147461
    5. '70' → logprob: -15.875143051147461
    6. 'r' → logprob: -15.875143051147461
    7. '900' → logprob: -16.12514305114746
    8. '27' → logprob: -16.87514305114746
    9. '0' → logprob: -17.12514305114746
    10. '09' → logprob: -17.50014305114746

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025925389491021633
    2. ')' → logprob: -6.00259256362915
    3. ' ,' → logprob: -9.252592086791992
    4. '(),' → logprob: -11.877592086791992
    5. ',)' → logprob: -13.252592086791992
    6. ',s' → logprob: -13.377592086791992
    7. ',n' → logprob: -13.377592086791992
    8. '[],' → logprob: -14.127592086791992
    9. ',se' → logprob: -14.252592086791992
    10. ',end' → logprob: -14.377592086791992

Token 76: ' sep' (ID: 31529)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.0011798698687925935
    2. ' sep' → logprob: -6.7511796951293945
    3. ')' → logprob: -12.001179695129395
    4. 'se' → logprob: -13.126179695129395
    5. 'separator' → logprob: -14.626179695129395
    6. ' ' → logprob: -15.001179695129395
    7. '_sep' → logprob: -15.376179695129395
    8. '10' → logprob: -16.62618064880371
    9. '*' → logprob: -16.75118064880371
    10. 'Sep' → logprob: -16.87618064880371

Token 77: '='\' (ID: 106410)
  Prédit: '='\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='\' → logprob: -0.0020514086354523897
    2. '="\' → logprob: -6.62705135345459
    3. '=' → logprob: -7.62705135345459
    4. ''\' → logprob: -8.50205135345459
    5. '='' → logprob: -10.62705135345459
    6. '('\' → logprob: -12.50205135345459
    7. '=
' → logprob: -12.87705135345459
    8. '=''' → logprob: -13.12705135345459
    9. '=\' → logprob: -13.50205135345459
    10. '"\' → logprob: -15.37705135345459

Token 78: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16033685207366943
    2. '\n' → logprob: -1.9103368520736694
    3. '
' → logprob: -9.2853364944458
    4. ' n' → logprob: -11.6603364944458
    5. '')' → logprob: -13.2853364944458
    6. ' 
' → logprob: -13.2853364944458
    7. ''\' → logprob: -13.6603364944458
    8. '\' → logprob: -13.7853364944458
    9. '  
' → logprob: -13.7853364944458
    10. 'newline' → logprob: -13.7853364944458

Token 79: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12704119086265564
    2. '')' → logprob: -2.1270411014556885
    3. ')
' → logprob: -9.37704086303711
    4. '')
' → logprob: -10.75204086303711
    5. ''' → logprob: -12.62704086303711
    6. '`)' → logprob: -13.50204086303711
    7. '```' → logprob: -13.87704086303711
    8. '")' → logprob: -14.37704086303711
    9. ')'' → logprob: -15.00204086303711
    10. ' )' → logprob: -15.37704086303711

Token 80: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003779051126912236
    2. '90' → logprob: -5.62877893447876
    3. '\n' → logprob: -9.003779411315918
    4. '
' → logprob: -10.378779411315918
    5. '```' → logprob: -11.128779411315918
    6. '  
' → logprob: -12.878779411315918
    7. '    
' → logprob: -13.503779411315918
    8. ' print' → logprob: -13.628779411315918
    9. '<|end|>' → logprob: -13.628779411315918
    10. '``' → logprob: -13.878779411315918

Token 81: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0014522596029564738
    2. '180' → logprob: -6.626452445983887
    3. '()' → logprob: -9.501452445983887
    4. '(
' → logprob: -10.251452445983887
    5. '('' → logprob: -11.626452445983887
    6. '90' → logprob: -13.001452445983887
    7. '()
' → logprob: -13.626452445983887
    8. '((' → logprob: -14.126452445983887
    9. '(`' → logprob: -14.126452445983887
    10. ' (' → logprob: -14.876452445983887

Token 82: '180' (ID: 7521)
  Prédit: '180'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '180' → logprob: -0.038240697234869
    2. '18' → logprob: -3.913240671157837
    3. '1' → logprob: -4.538240909576416
    4. '(' → logprob: -5.038240909576416
    5. '90' → logprob: -8.163240432739258
    6. ')' → logprob: -10.538240432739258
    7. '(
' → logprob: -11.163240432739258
    8. 'r' → logprob: -11.413240432739258
    9. ' ' → logprob: -11.413240432739258
    10. '```' → logprob: -12.913240432739258

Token 83: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3869127333164215
    2. ')
' → logprob: -1.1369127035140991
    3. ')
' → logprob: -10.13691234588623
    4. '')' → logprob: -14.38691234588623
    5. '')
' → logprob: -14.88691234588623
    6. ')

' → logprob: -15.13691234588623
    7. ' )
' → logprob: -15.26191234588623
    8. ' )' → logprob: -15.88691234588623
    9. '`)' → logprob: -16.011913299560547
    10. '```' → logprob: -16.011913299560547

Token 84: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.015340805985033512
    2. '<|end|>' → logprob: -4.890340805053711
    3. '
' → logprob: -5.390340805053711
    4. '```' → logprob: -6.640340805053711
    5. ')
' → logprob: -6.765340805053711
    6. ')' → logprob: -8.890340805053711
    7. '  
' → logprob: -9.015340805053711
    8. '``' → logprob: -9.140340805053711
    9. '\n' → logprob: -9.515340805053711
    10. ' 
' → logprob: -9.640340805053711

Token 85: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.002504793694242835
    2. '*' → logprob: -6.002504825592041
    3. '(' → logprob: -11.002504348754883
    4. '*r' → logprob: -12.002504348754883
    5. '(
' → logprob: -13.502504348754883
    6. '*(' → logprob: -13.627504348754883
    7. '*
' → logprob: -13.877504348754883
    8. '
' → logprob: -14.627504348754883
    9. '(*)' → logprob: -14.877504348754883
    10. '180' → logprob: -15.002504348754883

Token 86: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -3.128163257315464e-07
    2. ' r' → logprob: -15.5
    3. '(r' → logprob: -16.75
    4. '[r' → logprob: -18.125
    5. '
' → logprob: -19.375
    6. '_r' → logprob: -20.0
    7. '	r' → logprob: -20.5
    8. ',r' → logprob: -21.625
    9. '

' → logprob: -21.875
    10. ''r' → logprob: -21.875

Token 87: '180' (ID: 7521)
  Prédit: '180'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '180' → logprob: -3.054500666621607e-06
    2. 'r' → logprob: -12.75000286102295
    3. '270' → logprob: -16.875003814697266
    4. '18' → logprob: -17.625003814697266
    5. '1' → logprob: -18.125003814697266
    6. ' r' → logprob: -21.000003814697266
    7. 'print' → logprob: -21.125003814697266
    8. '90' → logprob: -21.375003814697266
    9. 'one' → logprob: -21.500003814697266
    10. 'l' → logprob: -22.000003814697266

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008052219054661691
    2. ' ,' → logprob: -7.125805377960205
    3. '`,' → logprob: -15.125804901123047
    4. ',
' → logprob: -15.750804901123047
    5. ',se' → logprob: -16.000804901123047
    6. 'sep' → logprob: -17.125804901123047
    7. ' sep' → logprob: -17.500804901123047
    8. '   ' → logprob: -17.750804901123047
    9. '',' → logprob: -17.875804901123047
    10. ',s' → logprob: -18.375804901123047

Token 89: ' sep' (ID: 31529)
  Prédit: ' sep'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sep' → logprob: -0.1269521564245224
    2. 'sep' → logprob: -2.1269521713256836
    3. 'se' → logprob: -11.126952171325684
    4. ''' → logprob: -12.126952171325684
    5. '_sep' → logprob: -13.876952171325684
    6. '"' → logprob: -14.501952171325684
    7. ' se' → logprob: -14.626952171325684
    8. '`' → logprob: -15.001952171325684
    9. 'Sep' → logprob: -15.251952171325684
    10. ' ' → logprob: -15.251952171325684

Token 90: '='\' (ID: 106410)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7021150588989258
    2. '='\' → logprob: -1.0771150588989258
    3. '='' → logprob: -1.9521150588989258
    4. '=\' → logprob: -4.702115058898926
    5. '=
' → logprob: -4.827115058898926
    6. '=

' → logprob: -5.952115058898926
    7. ''' → logprob: -6.702115058898926
    8. '('='' → logprob: -8.702115058898926
    9. ' =' → logprob: -9.077115058898926
    10. ''=' → logprob: -9.202115058898926

Token 91: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.05272926762700081
    2. ''\' → logprob: -3.052729368209839
    3. ''n' → logprob: -5.80272912979126
    4. 'n' → logprob: -6.80272912979126
    5. '\' → logprob: -13.052729606628418
    6. '('\' → logprob: -14.302729606628418
    7. 'newline' → logprob: -16.3027286529541
    8. 'nl' → logprob: -16.8027286529541
    9. '"\' → logprob: -16.9277286529541
    10. '_n' → logprob: -16.9277286529541

Token 92: '')
' (ID: 2515)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0019549215212464333
    2. '')
' → logprob: -6.501955032348633
    3. ')' → logprob: -7.751955032348633
    4. 'print' → logprob: -11.626955032348633
    5. ')
' → logprob: -12.001955032348633
    6. '')' → logprob: -12.376955032348633
    7. '`)
' → logprob: -13.876955032348633
    8. ' )
' → logprob: -14.376955032348633
    9. '")
' → logprob: -14.501955032348633
    10. ')`
' → logprob: -14.876955032348633

Token 93: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.375
    3. '
' → logprob: -18.75
    4. '(print' → logprob: -19.125
    5. 'pr' → logprob: -19.5
    6. '``' → logprob: -19.5
    7. '#print' → logprob: -20.875
    8. ' print' → logprob: -21.125
    9. '.print' → logprob: -21.25
    10. 'prints' → logprob: -21.875

Token 94: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.176947600673884e-05
    2. '(
' → logprob: -10.875021934509277
    3. '270' → logprob: -13.250021934509277
    4. '('' → logprob: -14.625021934509277
    5. '((' → logprob: -15.750021934509277
    6. ' (' → logprob: -15.875021934509277
    7. '(

' → logprob: -16.12502098083496
    8. '("("' → logprob: -17.00002098083496
    9. '280' → logprob: -17.12502098083496
    10. '(`' → logprob: -17.50002098083496

Token 95: '270' (ID: 17820)
  Prédit: '270'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '270' → logprob: -5.5027299822540954e-05
    2. '27' → logprob: -10.125055313110352
    3. '2' → logprob: -11.500055313110352
    4. ' ' → logprob: -13.250055313110352
    5. 'r' → logprob: -13.750055313110352
    6. '273' → logprob: -13.875055313110352
    7. '```' → logprob: -14.875055313110352
    8. '275' → logprob: -15.500055313110352
    9. '271' → logprob: -16.00005531311035
    10. '360' → logprob: -16.75005531311035

Token 96: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0011798698687925935
    2. ')' → logprob: -6.7511796951293945
    3. ')
' → logprob: -11.626179695129395
    4. ' )
' → logprob: -14.501179695129395
    5. '')
' → logprob: -16.37618064880371
    6. '   ' → logprob: -17.00118064880371
    7. '`)
' → logprob: -17.12618064880371
    8. ')

' → logprob: -17.12618064880371
    9. ')`
' → logprob: -17.25118064880371
    10. 'print' → logprob: -18.12618064880371

Token 97: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.38788920640945435
    2. '
' → logprob: -1.1378891468048096
    3. '```' → logprob: -7.512889385223389
    4. ' 
' → logprob: -9.13788890838623
    5. '()
' → logprob: -9.51288890838623
    6. ')
' → logprob: -9.51288890838623
    7. '``' → logprob: -10.01288890838623
    8. '
' → logprob: -10.01288890838623
    9. '\n' → logprob: -10.13788890838623
    10. '  
' → logprob: -10.38788890838623

Token 98: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.0011932061752304435
    2. '*' → logprob: -6.751193046569824
    3. '*r' → logprob: -11.376193046569824
    4. '(' → logprob: -11.501193046569824
    5. '(
' → logprob: -14.376193046569824
    6. '(*)' → logprob: -14.876193046569824
    7. '*(' → logprob: -15.626193046569824
    8. '```' → logprob: -16.87619400024414
    9. '(*(' → logprob: -17.00119400024414
    10. ' (*' → logprob: -17.00119400024414

Token 99: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -3.128163257315464e-07
    2. ' r' → logprob: -15.875
    3. '*r' → logprob: -17.0
    4. '_r' → logprob: -18.875
    5. '(r' → logprob: -19.375
    6. '[r' → logprob: -19.75
    7. '	r' → logprob: -20.375
    8. '
' → logprob: -20.75
    9. ''r' → logprob: -21.0
    10. '$r' → logprob: -21.75

Token 100: '270' (ID: 17820)
  Prédit: '270'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '270' → logprob: -1.6240566083070007e-06
    2. 'r' → logprob: -13.500001907348633
    3. '27' → logprob: -16.000001907348633
    4. '90' → logprob: -19.375001907348633
    5. '2' → logprob: -19.750001907348633
    6. '273' → logprob: -20.250001907348633
    7. 't' → logprob: -20.750001907348633
    8. ' ' → logprob: -21.000001907348633
    9. 's' → logprob: -21.125001907348633
    10. 'v' → logprob: -21.375001907348633

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001214237418025732
    2. ')' → logprob: -9.250121116638184
    3. ' ,' → logprob: -10.625121116638184
    4. '   ' → logprob: -15.500121116638184
    5. '`,' → logprob: -15.875121116638184
    6. ',
' → logprob: -15.875121116638184
    7. '',' → logprob: -16.6251220703125
    8. ',)' → logprob: -16.6251220703125
    9. ' ' → logprob: -16.7501220703125
    10. '),' → logprob: -17.0001220703125

Token 102: ' sep' (ID: 31529)
  Prédit: ' sep'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sep' → logprob: -0.5759415626525879
    2. 'sep' → logprob: -0.8259415626525879
    3. 'se' → logprob: -14.20094108581543
    4. '_sep' → logprob: -14.82594108581543
    5. ' ' → logprob: -14.95094108581543
    6. ',' → logprob: -15.82594108581543
    7. '
' → logprob: -15.82594108581543
    8. '.sep' → logprob: -16.07594108581543
    9. 'separator' → logprob: -16.45094108581543
    10. ')' → logprob: -16.70094108581543

Token 103: '='\' (ID: 106410)
  Prédit: '='\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='\' → logprob: -0.029828354716300964
    2. '=' → logprob: -3.6548283100128174
    3. ''\' → logprob: -5.7798285484313965
    4. '_' → logprob: -8.529828071594238
    5. '('\' → logprob: -9.404828071594238
    6. '='' → logprob: -9.904828071594238
    7. '(' → logprob: -10.654828071594238
    8. '='_' → logprob: -10.904828071594238
    9. '="\' → logprob: -11.279828071594238
    10. '=\' → logprob: -11.279828071594238

Token 104: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.04900754988193512
    2. 'n' → logprob: -3.0490076541900635
    3. ''\' → logprob: -8.424007415771484
    4. ''n' → logprob: -8.549007415771484
    5. '_n' → logprob: -12.549007415771484
    6. 'newline' → logprob: -13.174007415771484
    7. '\' → logprob: -14.424007415771484
    8. 'nl' → logprob: -14.674007415771484
    9. '	n' → logprob: -16.299007415771484
    10. '('\' → logprob: -16.424007415771484

Token 105: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015059324214234948
    2. '')' → logprob: -6.5015058517456055
    3. '")' → logprob: -13.251505851745605
    4. '`)' → logprob: -14.251505851745605
    5. ' )' → logprob: -14.251505851745605
    6. ')
' → logprob: -15.126505851745605
    7. '))' → logprob: -16.001506805419922
    8. '()' → logprob: -16.126506805419922
    9. ')`' → logprob: -16.251506805419922
    10. '#' → logprob: -17.501506805419922


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 103
Tokens correctement prédits (1ère position, stricte): 56
Tokens correctement prédits (1ère position, avec adaptation): 57
Tokens correctement prédits (top 10): 91
Précision stricte (1ère position): 54.37%
Précision adaptée (1ère position): 55.34%
Précision (top 10): 88.35%
================================================================================
