================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:23:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n = int(input())
    if n == 0:
        break
    A_score = 0
    B_score = 0
    for _ in range(n):
        a, b = map(int, input().split())
        if a > b:
            A_score += a + b
        elif a < b:
            B_score += a + b
        else:
            A_score += a
            B_score += b
    print(A_score, B_score)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11692515015602112
    2. '\n' → logprob: -3.6169252395629883
    3. '    ' → logprob: -4.241925239562988
    4. ' ' → logprob: -4.241925239562988
    5. '    
' → logprob: -4.366925239562988
    6. ' 
' → logprob: -4.491925239562988
    7. '\' → logprob: -4.616925239562988
    8. ':' → logprob: -5.366925239562988
    9. '```' → logprob: -5.616925239562988
    10. '<|end|>' → logprob: -5.741925239562988

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26106780767440796
    2. '    ' → logprob: -1.7610678672790527
    3. ' ' → logprob: -3.7610678672790527
    4. '```' → logprob: -3.8860678672790527
    5. '    
' → logprob: -5.636067867279053
    6. '       ' → logprob: -6.386067867279053
    7. '  ' → logprob: -6.386067867279053
    8. ' pass' → logprob: -6.761067867279053
    9. 'pass' → logprob: -6.886067867279053
    10. ' 
' → logprob: -7.386067867279053

Token 5: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8705378770828247
    2. '=' → logprob: -1.4955378770828247
    3. 'u' → logprob: -1.9955378770828247
    4. '   ' → logprob: -2.745537757873535
    5. 'o' → logprob: -3.245537757873535
    6. '+' → logprob: -3.745537757873535
    7. '_' → logprob: -4.245537757873535
    8. '>' → logprob: -4.245537757873535
    9. ' =' → logprob: -4.370537757873535
    10. '  ' → logprob: -4.620537757873535

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2752552926540375
    2. ' input' → logprob: -1.5252553224563599
    3. 'input' → logprob: -4.27525520324707
    4. 'int' → logprob: -4.77525520324707
    5. ' n' → logprob: -7.90025520324707
    6. ' ' → logprob: -9.02525520324707
    7. 'n' → logprob: -10.15025520324707
    8. ' eval' → logprob: -10.65025520324707
    9. '```' → logprob: -10.65025520324707
    10. ' randint' → logprob: -10.90025520324707

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0789412334561348
    2. '(input' → logprob: -2.5789413452148438
    3. '(n' → logprob: -10.703941345214844
    4. '()' → logprob: -11.953941345214844
    5. '(
' → logprob: -12.203941345214844
    6. '('' → logprob: -12.328941345214844
    7. '(user' → logprob: -13.203941345214844
    8. 'input' → logprob: -13.453941345214844
    9. '(range' → logprob: -13.703941345214844
    10. ' (' → logprob: -13.953941345214844

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38052013516426086
    2. ')' → logprob: -1.8805201053619385
    3. '()' → logprob: -2.0055201053619385
    4. '())' → logprob: -3.7555201053619385
    5. '))' → logprob: -5.755520343780518
    6. '()))' → logprob: -7.005520343780518
    7. '('' → logprob: -7.880520343780518
    8. '(
' → logprob: -7.880520343780518
    9. ' ' → logprob: -8.63051986694336
    10. '(""))' → logprob: -8.75551986694336

Token 9: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.39164337515830994
    2. ' if' → logprob: -2.0166432857513428
    3. '   ' → logprob: -2.6416432857513428
    4. ')' → logprob: -3.6416432857513428
    5. ':' → logprob: -3.6416432857513428
    6. '  ' → logprob: -3.8916432857513428
    7. '<|end|>' → logprob: -4.266643524169922
    8. 'if' → logprob: -4.641643524169922
    9. '    ' → logprob: -5.391643524169922
    10. ',' → logprob: -5.641643524169922

Token 10: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5625182390213013
    2. ' if' → logprob: -1.1875182390213013
    3. '<|end|>' → logprob: -3.4375181198120117
    4. ')' → logprob: -3.8125181198120117
    5. ' ' → logprob: -3.9375181198120117
    6. '```' → logprob: -4.187518119812012
    7. '    ' → logprob: -4.437518119812012
    8. 'if' (adapté à ' if') → logprob: -5.437518119812012
    9. '\n' → logprob: -5.937518119812012
    10. '  ' → logprob: -6.062518119812012

Token 11: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.020662404596805573
    2. ' ' → logprob: -4.020662307739258
    3. ' not' → logprob: -6.520662307739258
    4. 'n' → logprob: -6.895662307739258
    5. ' ' → logprob: -11.270662307739258
    6. 'not' → logprob: -12.145662307739258
    7. '  ' → logprob: -12.395662307739258
    8. '	n' → logprob: -14.770662307739258
    9. '(n' → logprob: -15.145662307739258
    10. '<|end|>' → logprob: -15.395662307739258

Token 12: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3223670423030853
    2. ' >' → logprob: -2.072366952896118
    3. ' <=' → logprob: -2.447366952896118
    4. ' <' → logprob: -3.572366952896118
    5. '==' → logprob: -3.822366952896118
    6. '>' → logprob: -5.197367191314697
    7. ' ' → logprob: -5.447367191314697
    8. ' >=' → logprob: -7.197367191314697
    9. '<=' → logprob: -7.197367191314697
    10. '<' → logprob: -7.447367191314697

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10021023452281952
    2. '0' → logprob: -2.350210189819336
    3. ' ' → logprob: -13.975210189819336
    4. '1' → logprob: -14.100210189819336
    5. '32' → logprob: -15.225210189819336
    6. ' -' → logprob: -15.912710189819336
    7. '  ' → logprob: -15.975210189819336
    8. ' a' → logprob: -16.225210189819336
    9. ' EOF' → logprob: -16.225210189819336
    10. '4' → logprob: -16.225210189819336

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006544163916260004
    2. ' ' → logprob: -7.375654220581055
    3. '-' → logprob: -10.625654220581055
    4. '1' → logprob: -13.750654220581055
    5. ' -' → logprob: -14.125654220581055
    6. '42' → logprob: -14.375654220581055
    7. '   ' → logprob: -14.625654220581055
    8. '4' → logprob: -15.875654220581055
    9. '```' → logprob: -15.875654220581055
    10. '7' → logprob: -16.000654220581055

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.023293538717553e-05
    2. ':
' → logprob: -11.250030517578125
    3. '   ' → logprob: -12.125030517578125
    4. ' :' → logprob: -12.250030517578125
    5. '       ' → logprob: -13.250030517578125
    6. ':return' → logprob: -13.250030517578125
    7. '):' → logprob: -13.625030517578125
    8. ':\' → logprob: -14.000030517578125
    9. '    ' → logprob: -15.000030517578125
    10. '():' → logprob: -15.500030517578125

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003570343542378396
    2. '   ' → logprob: -8.750356674194336
    3. ' break' → logprob: -9.500356674194336
    4. '    ' → logprob: -10.000356674194336
    5. '\n' → logprob: -10.625356674194336
    6. '      ' → logprob: -11.500356674194336
    7. '        ' → logprob: -11.750356674194336
    8. '	break' → logprob: -12.250356674194336
    9. '<|end|>' → logprob: -12.375356674194336
    10. '     ' → logprob: -12.500356674194336

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.014878070913255215
    2. '       ' → logprob: -4.514878273010254
    3. 'break' (adapté à ' break') → logprob: -5.889878273010254
    4. '   ' → logprob: -7.264878273010254
    5. '\n' → logprob: -8.889878273010254
    6. '	break' → logprob: -9.014878273010254
    7. '    ' → logprob: -10.764878273010254
    8. '```' → logprob: -10.764878273010254
    9. '_break' → logprob: -11.514878273010254
    10. ' ' → logprob: -11.514878273010254

Token 18: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15489940345287323
    2. '\n' → logprob: -3.0298993587493896
    3. '```' → logprob: -3.4048993587493896
    4. '    
' → logprob: -3.5298993587493896
    5. '\' → logprob: -4.029899597167969
    6. ':' → logprob: -5.529899597167969
    7. '
' → logprob: -6.279899597167969
    8. '\r' → logprob: -6.654899597167969
    9. 'n' → logprob: -6.779899597167969
    10. '  
' → logprob: -7.029899597167969

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21921342611312866
    2. '\n' → logprob: -2.7192134857177734
    3. '<|end|>' → logprob: -2.8442134857177734
    4. '    
' → logprob: -3.8442134857177734
    5. '```' → logprob: -4.344213485717773
    6. '
' → logprob: -4.594213485717773
    7. '#' → logprob: -4.719213485717773
    8. '\' → logprob: -5.094213485717773
    9. ')' → logprob: -5.969213485717773
    10. ':' → logprob: -6.219213485717773

Token 20: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27328136563301086
    2. '\n' → logprob: -2.1482813358306885
    3. ' ' → logprob: -3.5232813358306885
    4. '<|end|>' → logprob: -3.6482813358306885
    5. '\' → logprob: -3.7732813358306885
    6. '    ' → logprob: -4.523281574249268
    7. '    
' → logprob: -5.023281574249268
    8. '```' → logprob: -5.398281574249268
    9. ')' → logprob: -5.773281574249268
    10. '\r' → logprob: -5.773281574249268

Token 21: '_score' (ID: 22555)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0950448215007782
    2. '=' → logprob: -3.2200448513031006
    3. ' ' → logprob: -3.4700448513031006
    4. ',' → logprob: -4.3450446128845215
    5. '[' → logprob: -5.9700446128845215
    6. ' +=' → logprob: -7.4700446128845215
    7. ' ,' → logprob: -7.7200446128845215
    8. '[i' → logprob: -7.7200446128845215
    9. 'rray' → logprob: -7.8450446128845215
    10. '.append' → logprob: -7.9700446128845215

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6636874675750732
    2. '[' → logprob: -1.9136874675750732
    3. ' +=' → logprob: -1.9136874675750732
    4. 's' → logprob: -2.5386874675750732
    5. ',' → logprob: -2.9136874675750732
    6. ' ' → logprob: -3.6636874675750732
    7. '=' → logprob: -4.038687705993652
    8. '   ' → logprob: -5.663687705993652
    9. ' ,' → logprob: -6.288687705993652
    10. ' >=' → logprob: -6.913687705993652

Token 23: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3590196669101715
    2. '0' → logprob: -1.3590196371078491
    3. ' []' → logprob: -3.9840197563171387
    4. ' A' → logprob: -4.609019756317139
    5. ' n' → logprob: -4.734019756317139
    6. '[]' → logprob: -6.234019756317139
    7. ' int' → logprob: -6.734019756317139
    8. ' max' → logprob: -6.859019756317139
    9. ' sum' → logprob: -7.109019756317139
    10. 'A' → logprob: -7.609019756317139

Token 24: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08506131172180176
    2. ' ' → logprob: -2.7100613117218018
    3. 'int' → logprob: -5.960061073303223
    4. ' n' → logprob: -6.085061073303223
    5. 'n' → logprob: -6.210061073303223
    6. ' int' → logprob: -6.335061073303223
    7. ' A' → logprob: -6.960061073303223
    8. 'A' → logprob: -7.085061073303223
    9. '100' → logprob: -7.085061073303223
    10. '[]' → logprob: -7.585061073303223

Token 25: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06780014932155609
    2. '<|end|>' → logprob: -2.9428000450134277
    3. ' ' → logprob: -5.442800045013428
    4. '    
' → logprob: -6.192800045013428
    5. '
' → logprob: -6.317800045013428
    6. '```' → logprob: -6.942800045013428
    7. '    ' → logprob: -7.192800045013428
    8. ' 
' → logprob: -7.317800045013428
    9. '<|end|>' → logprob: -7.692800045013428
    10. ')' → logprob: -7.817800045013428

Token 27: ' B' (ID: 418)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9879968762397766
    2. 'for' → logprob: -1.3629968166351318
    3. '   ' → logprob: -1.6129968166351318
    4. 'B' (adapté à ' B') → logprob: -2.612996816635132
    5. ' B' → logprob: -3.862996816635132
    6. 'A' → logprob: -3.987996816635132
    7. ' ' → logprob: -4.487997055053711
    8. 'n' → logprob: -4.612997055053711
    9. ' while' → logprob: -4.612997055053711
    10. ' A' → logprob: -5.237997055053711

Token 28: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.20209302008152008
    2. '_' → logprob: -1.7020930051803589
    3. ' _' → logprob: -7.452093124389648
    4. '_s' → logprob: -10.202093124389648
    5. '_scores' → logprob: -10.202093124389648
    6. '_space' → logprob: -11.952093124389648
    7. '_SCORE' → logprob: -12.827093124389648
    8. 'score' → logprob: -12.952093124389648
    9. '_sc' → logprob: -12.952093124389648
    10. '_code' → logprob: -13.702093124389648

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1103925034403801
    2. ' +=' → logprob: -2.6103925704956055
    3. '=' → logprob: -3.4853925704956055
    4. '+=' → logprob: -8.110392570495605
    5. ' ' → logprob: -9.860392570495605
    6. '+' → logprob: -12.360392570495605
    7. ' +' → logprob: -12.360392570495605
    8. ')' → logprob: -13.485392570495605
    9. ' |=' → logprob: -13.610392570495605
    10. '<|end|>' → logprob: -13.735392570495605

Token 30: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5759862661361694
    2. ' ' → logprob: -0.8259862661361694
    3. '<|end|>' → logprob: -10.7009859085083
    4. '1' → logprob: -11.4509859085083
    5. '   ' → logprob: -13.2009859085083
    6. '    ' → logprob: -13.2634859085083
    7. '<|end|>' → logprob: -13.2634859085083
    8. '  ' → logprob: -13.3259859085083
    9. ' A' → logprob: -13.8884859085083
    10. 'A' → logprob: -14.7009859085083

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016140175983309746
    2. ' ' → logprob: -4.141139984130859
    3. '1' → logprob: -9.51613998413086
    4. 'A' → logprob: -11.76613998413086
    5. ' A' → logprob: -12.26613998413086
    6. '10' → logprob: -12.64113998413086
    7. '  ' → logprob: -12.76613998413086
    8. '100' → logprob: -12.95363998413086
    9. '3' → logprob: -13.20363998413086
    10. '   ' → logprob: -13.57863998413086

Token 32: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10411720722913742
    2. '<|end|>' → logprob: -2.4791171550750732
    3. '    
' → logprob: -5.104117393493652
    4. '
' → logprob: -5.604117393493652
    5. '<|end|>' → logprob: -6.479117393493652
    6. '```' → logprob: -7.479117393493652
    7. '    ' → logprob: -7.604117393493652
    8. 'n' → logprob: -7.604117393493652
    9. ')' → logprob: -7.729117393493652
    10. ' ' → logprob: -7.854117393493652

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045349739491939545
    2. '<|end|>' → logprob: -3.2953498363494873
    3. ' ' → logprob: -6.045349597930908
    4. '    
' → logprob: -6.670349597930908
    5. '  ' → logprob: -7.170349597930908
    6. '    ' → logprob: -7.545349597930908
    7. '\n' → logprob: -7.670349597930908
    8. ' 
' → logprob: -7.920349597930908
    9. '
' → logprob: -8.045350074768066
    10. '<|end|>' → logprob: -8.170350074768066

Token 34: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17338664829730988
    2. 'for' (adapté à ' for') → logprob: -2.423386573791504
    3. ' ' → logprob: -3.673386573791504
    4. ' for' → logprob: -4.173386573791504
    5. '<|end|>' → logprob: -4.423386573791504
    6. 'n' → logprob: -5.173386573791504
    7. '  ' → logprob: -6.173386573791504
    8. '    ' → logprob: -6.298386573791504
    9. ' 
' → logprob: -6.548386573791504
    10. '    
' → logprob: -6.923386573791504

Token 35: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.49455636739730835
    2. ' ' → logprob: -0.9945563673973083
    3. ' _' → logprob: -3.994556427001953
    4. '_' → logprob: -7.244556427001953
    5. '  ' → logprob: -7.619556427001953
    6. 'i' → logprob: -8.369556427001953
    7. ' range' → logprob: -8.619556427001953
    8. ' ‌' → logprob: -9.244556427001953
    9. ' ▁' → logprob: -10.369556427001953
    10. ' )' → logprob: -10.744556427001953

Token 36: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009964903816580772
    2. 'in' → logprob: -4.759964942932129
    3. ' ' → logprob: -6.759964942932129
    4. '  ' → logprob: -9.134964942932129
    5. ' i' → logprob: -9.759964942932129
    6. '_' → logprob: -12.509964942932129
    7. '    ' → logprob: -12.509964942932129
    8. ' n' → logprob: -12.759964942932129
    9. ' ,' → logprob: -12.884964942932129
    10. 'range' → logprob: -13.509964942932129

Token 37: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20141859352588654
    2. 'range' → logprob: -1.7014186382293701
    3. ' ' → logprob: -12.82641887664795
    4. '	range' → logprob: -13.45141887664795
    5. '(range' → logprob: -15.20141887664795
    6. 'rang' → logprob: -15.57641887664795
    7. ' xrange' → logprob: -15.70141887664795
    8. 'r' → logprob: -16.326417922973633
    9. ' ran' → logprob: -16.576417922973633
    10. '_range' → logprob: -16.951417922973633

Token 38: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.11907745897769928
    2. '(' → logprob: -2.369077444076538
    3. ' (' → logprob: -3.994077444076538
    4. ' n' → logprob: -8.244077682495117
    5. ' ' → logprob: -13.119077682495117
    6. '(int' → logprob: -13.744077682495117
    7. 'n' → logprob: -13.869077682495117
    8. ')' → logprob: -14.119077682495117
    9. '()' → logprob: -14.369077682495117
    10. '(s' → logprob: -15.619077682495117

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021746639162302017
    2. ')' → logprob: -3.8967466354370117
    3. ':' → logprob: -7.021746635437012
    4. ' ):' → logprob: -8.396746635437012
    5. '   ' → logprob: -10.646746635437012
    6. '+' → logprob: -10.771746635437012
    7. '):
' → logprob: -11.771746635437012
    8. ' )' → logprob: -11.896746635437012
    9. ' ' → logprob: -12.521746635437012
    10. ',' → logprob: -12.521746635437012

Token 40: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6972618699073792
    2. ' ' → logprob: -1.1972618103027344
    3. '<|end|>' → logprob: -2.4472618103027344
    4. '    ' → logprob: -2.6972618103027344
    5. '       ' → logprob: -3.4472618103027344
    6. ' 
' → logprob: -5.197261810302734
    7. '    
' → logprob: -5.822261810302734
    8. '<|end|>' → logprob: -6.447261810302734
    9. ' A' → logprob: -7.322261810302734
    10. ' )' → logprob: -7.447261810302734

Token 41: ' a' (ID: 261)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.8147149085998535
    2. ' ' → logprob: -1.9397149085998535
    3. '    ' → logprob: -2.1897149085998535
    4. ' input' → logprob: -2.1897149085998535
    5. ' A' → logprob: -3.4397149085998535
    6. '   ' → logprob: -3.4397149085998535
    7. ' a' → logprob: -3.8147149085998535
    8. 's' → logprob: -4.4397149085998535
    9. ' c' → logprob: -4.8147149085998535
    10. ' line' → logprob: -5.0647149085998535

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2280540466308594
    2. '_' → logprob: -1.6030540466308594
    3. ' ,' → logprob: -1.7280540466308594
    4. ' ' → logprob: -1.8530540466308594
    5. '_score' → logprob: -2.4780540466308594
    6. ' =' → logprob: -3.8530540466308594
    7. 'r' → logprob: -3.9780540466308594
    8. ',b' → logprob: -4.478054046630859
    9. 'b' → logprob: -5.478054046630859
    10. ',_' → logprob: -5.603054046630859

Token 43: ' b' (ID: 287)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.41586440801620483
    2. ' b' → logprob: -1.1658644676208496
    3. 'b' → logprob: -3.6658644676208496
    4. '<|end|>' → logprob: -6.04086446762085
    5. '  ' → logprob: -8.165863990783691
    6. ' s' → logprob: -9.665863990783691
    7. 's' → logprob: -9.790863990783691
    8. ' =' → logprob: -9.790863990783691
    9. ' ,' → logprob: -10.290863990783691
    10. '    ' → logprob: -11.040863990783691

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07890091091394424
    2. '=' → logprob: -2.5789008140563965
    3. ',' → logprob: -11.578901290893555
    4. ')' → logprob: -14.453901290893555
    5. '=input' → logprob: -14.453901290893555
    6. ' ' → logprob: -14.828901290893555
    7. '    ' → logprob: -16.578901290893555
    8. ' ,' → logprob: -16.828901290893555
    9. '=int' → logprob: -16.828901290893555
    10. '<|end|>' → logprob: -16.953901290893555

Token 45: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0037216958589851856
    2. ' input' → logprob: -5.628721714019775
    3. 'map' → logprob: -9.128721237182617
    4. ' list' → logprob: -12.378721237182617
    5. ' ' → logprob: -12.628721237182617
    6. 'input' → logprob: -13.253721237182617
    7. ' [' → logprob: -13.253721237182617
    8. '	map' → logprob: -13.628721237182617
    9. ' mapa' → logprob: -15.128721237182617
    10. ' ' → logprob: -15.253721237182617

Token 46: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0029604658484458923
    2. '(' → logprob: -5.877960681915283
    3. '(str' → logprob: -9.252960205078125
    4. '(input' → logprob: -10.377960205078125
    5. '(lambda' → logprob: -10.877960205078125
    6. 'int' → logprob: -12.502960205078125
    7. '<int' → logprob: -12.752960205078125
    8. ' (' → logprob: -13.877960205078125
    9. '[int' → logprob: -14.377960205078125
    10. '(eval' → logprob: -14.752960205078125

Token 47: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.4337756335735321
    2. ',' → logprob: -1.0587756633758545
    3. '(input' → logprob: -5.433775424957275
    4. 'input' → logprob: -7.933775424957275
    5. '(' → logprob: -8.433775901794434
    6. ' ,' → logprob: -9.308775901794434
    7. ')' → logprob: -11.558775901794434
    8. ' input' → logprob: -11.933775901794434
    9. '```' → logprob: -12.308775901794434
    10. '   ' → logprob: -13.433775901794434

Token 48: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3485238552093506
    2. 'input' → logprob: -1.2235238552093506
    3. ')' → logprob: -9.72352409362793
    4. ' )' → logprob: -12.22352409362793
    5. '(input' → logprob: -12.47352409362793
    6. ',input' → logprob: -12.84852409362793
    7. '=input' → logprob: -12.97352409362793
    8. ' ' → logprob: -13.22352409362793
    9. '	input' → logprob: -13.22352409362793
    10. '<input' → logprob: -14.59852409362793

Token 49: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.47495681833243e-05
    2. '()' → logprob: -10.625024795532227
    3. ' ().' → logprob: -15.750024795532227
    4. '())' → logprob: -16.625024795532227
    5. '()
' → logprob: -17.500024795532227
    6. ')' → logprob: -18.125024795532227
    7. '(' → logprob: -18.250024795532227
    8. '()

' → logprob: -20.375024795532227
    9. '()
' → logprob: -20.625024795532227
    10. '()))' → logprob: -20.750024795532227

Token 50: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003500050224829465
    2. 'strip' → logprob: -8.000349998474121
    3. 'rstrip' → logprob: -11.250349998474121
    4. ' split' → logprob: -14.000349998474121
    5. '(split' → logprob: -14.500349998474121
    6. 'spl' → logprob: -15.875349998474121
    7. ')' → logprob: -16.000350952148438
    8. 'plit' → logprob: -18.125350952148438
    9. 's' → logprob: -19.000350952148438
    10. '_split' → logprob: -19.750350952148438

Token 51: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0230114609003067
    2. '()))' → logprob: -4.023011684417725
    3. '()' → logprob: -5.898011684417725
    4. ')' → logprob: -6.398011684417725
    5. '))' → logprob: -7.898011684417725
    6. '())
' → logprob: -10.023011207580566
    7. '(' → logprob: -11.648011207580566
    8. '()))
' → logprob: -11.898011207580566
    9. '('' → logprob: -13.023011207580566
    10. ' ())' → logprob: -14.273011207580566

Token 52: '       ' (ID: 309)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.7590826749801636
    2. ' ' → logprob: -1.5090826749801636
    3. '   ' → logprob: -2.759082794189453
    4. '<|end|>' → logprob: -3.009082794189453
    5. '       ' → logprob: -3.134082794189453
    6. '   
' → logprob: -3.259082794189453
    7. '
' → logprob: -4.134082794189453
    8. '    
' → logprob: -4.134082794189453
    9. '  
' → logprob: -4.259082794189453
    10. ')' → logprob: -4.259082794189453

Token 53: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20051763951778412
    2. ' if' → logprob: -2.5755176544189453
    3. 'if' (adapté à ' if') → logprob: -2.7005176544189453
    4. ' 
' → logprob: -3.8255176544189453
    5. '<|end|>' → logprob: -5.325517654418945
    6. '    ' → logprob: -5.575517654418945
    7. '       ' → logprob: -5.950517654418945
    8. 'A' → logprob: -6.575517654418945
    9. '   ' → logprob: -6.825517654418945
    10. ' A' → logprob: -7.075517654418945

Token 54: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.01819712109863758
    2. 'a' → logprob: -4.018197059631348
    3. ' ' → logprob: -10.143197059631348
    4. '	a' → logprob: -12.393197059631348
    5. ' ' → logprob: -13.643197059631348
    6. ' A' → logprob: -14.268197059631348
    7. 'A' → logprob: -14.643197059631348
    8. '(a' → logprob: -15.018197059631348
    9. '_a' → logprob: -15.143197059631348
    10. '<|end|>' → logprob: -15.393197059631348

Token 55: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2520943880081177
    2. ' >' → logprob: -1.5020943880081177
    3. ' ' → logprob: -8.877094268798828
    4. '<|end|>' → logprob: -12.002094268798828
    5. ' ' → logprob: -12.627094268798828
    6. '&gt' → logprob: -13.127094268798828
    7. '  ' → logprob: -13.502094268798828
    8. ' greater' → logprob: -13.502094268798828
    9. '>`' → logprob: -13.627094268798828
    10. '">' → logprob: -13.627094268798828

Token 56: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0619683600962162
    2. ' b' → logprob: -2.8119683265686035
    3. ' ' → logprob: -14.311968803405762
    4. '<|end|>' → logprob: -16.061967849731445
    5. '>b' → logprob: -17.186967849731445
    6. '  ' → logprob: -17.811967849731445
    7. '   ' → logprob: -18.686967849731445
    8. '	b' → logprob: -18.686967849731445
    9. ')b' → logprob: -18.936967849731445
    10. '    ' → logprob: -19.436967849731445

Token 57: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021698898635804653
    2. '):' → logprob: -6.877170085906982
    3. ':
' → logprob: -6.877170085906982
    4. '       ' → logprob: -9.877169609069824
    5. ')' → logprob: -10.877169609069824
    6. '           ' → logprob: -11.377169609069824
    7. '<|end|>' → logprob: -11.377169609069824
    8. '):
' → logprob: -12.252169609069824
    9. ' :' → logprob: -12.627169609069824
    10. ':

' → logprob: -14.502169609069824

Token 58: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6731431484222412
    2. '       ' → logprob: -0.9231431484222412
    3. ' A' → logprob: -2.798143148422241
    4. 'A' → logprob: -4.42314338684082
    5. '<|end|>' → logprob: -4.67314338684082
    6. ' ' → logprob: -5.79814338684082
    7. ':' → logprob: -5.79814338684082
    8. '   ' → logprob: -6.92314338684082
    9. '               ' → logprob: -7.04814338684082
    10. ' ' → logprob: -7.92314338684082

Token 59: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.030495164915919304
    2. 'A' (adapté à ' A') → logprob: -3.5304951667785645
    3. '           ' → logprob: -7.6554951667785645
    4. ' 
' → logprob: -9.405494689941406
    5. ' ' → logprob: -10.030494689941406
    6. '               ' → logprob: -10.030494689941406
    7. '            ' → logprob: -10.530494689941406
    8. '   ' → logprob: -10.780494689941406
    9. '    ' → logprob: -11.155494689941406
    10. '```' → logprob: -11.405494689941406

Token 60: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -6.392202976712724e-06
    2. '_s' → logprob: -12.500006675720215
    3. '_' → logprob: -13.000006675720215
    4. '_scores' → logprob: -16.2500057220459
    5. '_sc' → logprob: -16.2500057220459
    6. '_code' → logprob: -16.3750057220459
    7. ' _' → logprob: -16.8750057220459
    8. 'score' → logprob: -17.0000057220459
    9. '_count' → logprob: -18.7500057220459
    10. '```' → logprob: -18.8750057220459

Token 61: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6931638121604919
    2. '+=' → logprob: -0.6931638121604919
    3. '+' → logprob: -11.193163871765137
    4. '=' → logprob: -13.443163871765137
    5. ']+=' → logprob: -14.193163871765137
    6. ' +' → logprob: -15.068163871765137
    7. ' =' → logprob: -15.693163871765137
    8. ' ' → logprob: -16.69316291809082
    9. '   ' → logprob: -16.94316291809082
    10. '+='' → logprob: -17.06816291809082

Token 62: ' a' (ID: 261)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01649751514196396
    2. ' ' → logprob: -4.141497611999512
    3. '3' → logprob: -8.141497611999512
    4. '2' → logprob: -9.391497611999512
    5. '10' → logprob: -9.766497611999512
    6. 'a' → logprob: -10.766497611999512
    7. '100' → logprob: -12.516497611999512
    8. 'A' → logprob: -13.516497611999512
    9. '5' → logprob: -13.891497611999512
    10. '   ' → logprob: -14.516497611999512

Token 63: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5355268120765686
    2. '       ' → logprob: -1.1605267524719238
    3. 'elif' → logprob: -3.160526752471924
    4. '<|end|>' → logprob: -3.285526752471924
    5. ' elif' → logprob: -4.910526752471924
    6. 'else' → logprob: -5.285526752471924
    7. ' else' → logprob: -5.910526752471924
    8. ' 
' → logprob: -6.285526752471924
    9. '+' → logprob: -7.035526752471924
    10. '    
' → logprob: -7.160526752471924

Token 64: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.08769441395998001
    2. '3' → logprob: -3.0876944065093994
    3. '1' → logprob: -3.7126944065093994
    4. ' b' → logprob: -5.0876946449279785
    5. '10' → logprob: -5.9626946449279785
    6. ' ' → logprob: -6.2126946449279785
    7. '0' → logprob: -6.8376946449279785
    8. 'a' → logprob: -6.8376946449279785
    9. '2' → logprob: -7.4626946449279785
    10. '5' → logprob: -8.96269416809082

Token 65: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020733289420604706
    2. 'elif' → logprob: -4.14573335647583
    3. ' elif' → logprob: -5.64573335647583
    4. 'else' → logprob: -8.145732879638672
    5. ' else' → logprob: -8.395732879638672
    6. '        
' → logprob: -8.520732879638672
    7. '
' → logprob: -9.270732879638672
    8. '    
' → logprob: -9.895732879638672
    9. '<|end|>' → logprob: -9.895732879638672
    10. ' 
' → logprob: -9.895732879638672

Token 66: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12092969566583633
    2. 'elif' → logprob: -2.245929718017578
    3. ' elif' → logprob: -5.245929718017578
    4. '
' → logprob: -6.370929718017578
    5. '<|end|>' → logprob: -7.245929718017578
    6. 'else' → logprob: -9.120929718017578
    7. '	elif' → logprob: -9.370929718017578
    8. '        
' → logprob: -10.120929718017578
    9. '```' → logprob: -10.120929718017578
    10. ' else' → logprob: -10.495929718017578

Token 67: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.37681201100349426
    2. '       ' → logprob: -1.7518119812011719
    3. ' elif' → logprob: -2.001811981201172
    4. 'else' → logprob: -5.876811981201172
    5. ' else' → logprob: -6.251811981201172
    6. '   ' → logprob: -7.876811981201172
    7. '	elif' → logprob: -8.751811981201172
    8. '    ' → logprob: -10.501811981201172
    9. '```' → logprob: -10.501811981201172
    10. '<|end|>' → logprob: -11.126811981201172

Token 68: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7004479169845581
    2. ' b' → logprob: -0.7004479169845581
    3. 'a' → logprob: -5.575448036193848
    4. 'b' → logprob: -5.825448036193848
    5. ' ' → logprob: -7.575448036193848
    6. '    ' → logprob: -12.200448036193848
    7. '  ' → logprob: -12.700448036193848
    8. ' ' → logprob: -12.887948036193848
    9. '	a' → logprob: -13.075448036193848
    10. '	b' → logprob: -13.887948036193848

Token 69: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0033867184538394213
    2. ' >' → logprob: -6.253386497497559
    3. '<' → logprob: -6.753386497497559
    4. ' ' → logprob: -8.253386497497559
    5. '>' → logprob: -11.253386497497559
    6. '<|end|>' → logprob: -11.378386497497559
    7. ' ==' → logprob: -13.628386497497559
    8. ' ' → logprob: -13.878386497497559
    9. '```' → logprob: -14.503386497497559
    10. '  ' → logprob: -14.878386497497559

Token 70: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.023254914209246635
    2. 'b' → logprob: -3.773254871368408
    3. ' ' → logprob: -11.773255348205566
    4. '<|end|>' → logprob: -14.398255348205566
    5. '    ' → logprob: -15.273255348205566
    6. ' a' → logprob: -15.398255348205566
    7. ' ' → logprob: -15.898255348205566
    8. '>b' → logprob: -16.14825439453125
    9. '	b' → logprob: -16.27325439453125
    10. 'a' → logprob: -16.64825439453125

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001596749178133905
    2. ':
' → logprob: -6.626596927642822
    3. '           ' → logprob: -8.376596450805664
    4. '       ' → logprob: -10.501596450805664
    5. ' :' → logprob: -12.126596450805664
    6. '<|end|>' → logprob: -13.251596450805664
    7. '=' → logprob: -14.251596450805664
    8. ',' → logprob: -14.376596450805664
    9. ':

' → logprob: -14.376596450805664
    10. ' and' → logprob: -14.626596450805664

Token 72: '           ' (ID: 352)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.552642822265625
    2. 'B' → logprob: -0.927642822265625
    3. '           ' → logprob: -3.552642822265625
    4. ' ' → logprob: -9.427642822265625
    5. '               ' → logprob: -9.427642822265625
    6. '   ' → logprob: -9.677642822265625
    7. 'A' → logprob: -9.927642822265625
    8. '       ' → logprob: -10.427642822265625
    9. 'b' → logprob: -10.677642822265625
    10. '0' → logprob: -10.802642822265625

Token 73: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.10023406147956848
    2. ' B' → logprob: -2.350234031677246
    3. '           ' → logprob: -10.975234031677246
    4. '   ' → logprob: -12.725234031677246
    5. ' ' → logprob: -12.975234031677246
    6. 'A' → logprob: -13.100234031677246
    7. '	B' → logprob: -14.600234031677246
    8. '  ' → logprob: -14.850234031677246
    9. 'b' → logprob: -14.850234031677246
    10. '```' → logprob: -15.100234031677246

Token 74: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -2.45848218582978e-06
    2. '_' → logprob: -14.12500286102295
    3. 'score' → logprob: -14.50000286102295
    4. '_scores' → logprob: -14.62500286102295
    5. '_s' → logprob: -14.87500286102295
    6. '_code' → logprob: -15.75000286102295
    7. ' _' → logprob: -16.375001907348633
    8. '_SCORE' → logprob: -17.125001907348633
    9. '_answer' → logprob: -17.500001907348633
    10. '```' → logprob: -17.625001907348633

Token 75: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.008617766201496124
    2. '+=' → logprob: -4.758617877960205
    3. '+' → logprob: -13.883617401123047
    4. ' +' → logprob: -14.133617401123047
    5. ' ' → logprob: -14.258617401123047
    6. ']+=' → logprob: -14.508617401123047
    7. '    ' → logprob: -16.383617401123047
    8. '<|end|>' → logprob: -16.383617401123047
    9. '+=(' → logprob: -17.008617401123047
    10. '        ' → logprob: -17.133617401123047

Token 76: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04859191179275513
    2. ' a' → logprob: -3.0485918521881104
    3. 'b' → logprob: -12.673591613769531
    4. '	a' → logprob: -14.673591613769531
    5. ' b' → logprob: -15.048591613769531
    6. ' ' → logprob: -15.173591613769531
    7. '(a' → logprob: -15.548591613769531
    8. '>a' → logprob: -16.54859161376953
    9. '_a' → logprob: -17.42359161376953
    10. ''a' → logprob: -18.04859161376953

Token 77: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4741615951061249
    2. ' +' → logprob: -0.9741616249084473
    3. '+b' → logprob: -9.474161148071289
    4. ' +
' → logprob: -13.224161148071289
    5. '+
' → logprob: -13.224161148071289
    6. ' ' → logprob: -13.599161148071289
    7. '<|end|>' → logprob: -14.599161148071289
    8. ' +

' → logprob: -14.724161148071289
    9. '＋' → logprob: -14.849161148071289
    10. '+

' → logprob: -14.974161148071289

Token 78: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16022716462612152
    2. ' b' → logprob: -1.9102271795272827
    3. ' ' → logprob: -12.910226821899414
    4. '   ' → logprob: -15.160226821899414
    5. '	b' → logprob: -16.410226821899414
    6. '    ' → logprob: -16.535226821899414
    7. '       ' → logprob: -17.035226821899414
    8. '<|end|>' → logprob: -17.285226821899414
    9. '  ' → logprob: -17.410226821899414
    10. '(b' → logprob: -17.910226821899414

Token 79: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.058599840849637985
    2. '\n' → logprob: -4.308599948883057
    3. '   ' → logprob: -4.558599948883057
    4. '    
' → logprob: -4.683599948883057
    5. '  
' → logprob: -4.808599948883057
    6. '<|end|>' → logprob: -5.183599948883057
    7. '```' → logprob: -5.808599948883057
    8. 'else' → logprob: -6.183599948883057
    9. '
' → logprob: -7.058599948883057
    10. 'newline' → logprob: -7.183599948883057

Token 80: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0228422898799181
    2. 'print' → logprob: -3.8978424072265625
    3. '    
' → logprob: -7.1478424072265625
    4. '
' → logprob: -7.3978424072265625
    5. '       ' → logprob: -7.7728424072265625
    6. '```' → logprob: -8.897842407226562
    7. 'else' → logprob: -9.397842407226562
    8. ' print' → logprob: -9.522842407226562
    9. '  
' → logprob: -9.522842407226562
    10. '<|end|>' → logprob: -10.022842407226562

Token 81: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.059787310659885406
    2. ' else' → logprob: -3.0597872734069824
    3. '   ' → logprob: -5.309787273406982
    4. 'print' → logprob: -6.809787273406982
    5. 'elif' → logprob: -6.809787273406982
    6. '```' → logprob: -6.809787273406982
    7. '<|end|>' → logprob: -6.934787273406982
    8. '
' → logprob: -7.434787273406982
    9. '       ' → logprob: -7.559787273406982
    10. '    
' → logprob: -8.68478775024414

Token 82: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003321281401440501
    2. ':
' → logprob: -8.12533187866211
    3. '<|end|>' → logprob: -10.37533187866211
    4. ' :' → logprob: -13.62533187866211
    5. '<|end|>' → logprob: -13.75033187866211
    6. ':
' → logprob: -14.50033187866211
    7. ':

' → logprob: -15.12533187866211
    8. ',' → logprob: -15.25033187866211
    9. '       ' → logprob: -15.50033187866211
    10. '```' → logprob: -15.50033187866211

Token 83: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36667656898498535
    2. '           ' → logprob: -1.3666765689849854
    3. ' continue' → logprob: -3.4916765689849854
    4. '   ' → logprob: -4.366676330566406
    5. 'continue' → logprob: -5.741676330566406
    6. ' pass' → logprob: -6.116676330566406
    7. 'pass' → logprob: -6.241676330566406
    8. ' ' → logprob: -7.866676330566406
    9. '0' → logprob: -7.991676330566406
    10. '```' → logprob: -8.616676330566406

Token 84: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.2896036207675934
    2. 'pass' → logprob: -1.789603590965271
    3. ' pass' → logprob: -3.0396037101745605
    4. 'continue' → logprob: -4.4146037101745605
    5. '0' → logprob: -4.5396037101745605
    6. ' A' → logprob: -4.7896037101745605
    7. ' continue' → logprob: -5.5396037101745605
    8. ' ' → logprob: -7.2896037101745605
    9. '   ' → logprob: -8.039603233337402
    10. '           ' → logprob: -8.414603233337402

Token 85: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -4.4849443838757e-06
    2. '_' → logprob: -12.750004768371582
    3. '_s' → logprob: -13.500004768371582
    4. '_scores' → logprob: -15.875004768371582
    5. '_sc' → logprob: -17.875003814697266
    6. ' _' → logprob: -18.125003814697266
    7. '_SCORE' → logprob: -18.250003814697266
    8. '_code' → logprob: -18.375003814697266
    9. 'score' → logprob: -19.000003814697266
    10. '_answer' → logprob: -19.500003814697266

Token 86: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.018160004168748856
    2. '+=' → logprob: -4.018159866333008
    3. '+' → logprob: -11.643159866333008
    4. ' -=' → logprob: -14.518159866333008
    5. '+='' → logprob: -15.643159866333008
    6. ' +' → logprob: -15.768159866333008
    7. ']+=' → logprob: -15.893159866333008
    8. '+=(' → logprob: -16.143159866333008
    9. '+="' → logprob: -16.393159866333008
    10. '=' → logprob: -16.518159866333008

Token 87: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.012844182550907135
    2. '1' → logprob: -5.012844085693359
    3. ' a' → logprob: -5.762844085693359
    4. '0' → logprob: -5.887844085693359
    5. ' ' → logprob: -9.01284408569336
    6. '3' → logprob: -10.38784408569336
    7. '(a' → logprob: -10.63784408569336
    8. '2' → logprob: -12.01284408569336
    9. '5' → logprob: -12.13784408569336
    10. '10' → logprob: -13.63784408569336

Token 88: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0040708016604185104
    2. '<|end|>' → logprob: -5.87907075881958
    3. ' ' → logprob: -7.12907075881958
    4. '   ' → logprob: -9.004071235656738
    5. '       ' → logprob: -9.379071235656738
    6. ' 
' → logprob: -9.754071235656738
    7. ' and' → logprob: -10.129071235656738
    8. '
' → logprob: -10.254071235656738
    9. '<|end|>' → logprob: -11.004071235656738
    10. '```' → logprob: -11.129071235656738

Token 90: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.007055388297885656
    2. ' B' → logprob: -5.007055282592773
    3. '           ' → logprob: -8.007055282592773
    4. 'b' → logprob: -13.382055282592773
    5. ' ' → logprob: -13.382055282592773
    6. ' 
' → logprob: -13.757055282592773
    7. '            ' → logprob: -14.132055282592773
    8. '       ' → logprob: -15.132055282592773
    9. '   ' → logprob: -15.257055282592773
    10. ' ' → logprob: -15.632055282592773

Token 91: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.0019806181080639362
    2. '_' → logprob: -6.251980781555176
    3. '_scores' → logprob: -10.626980781555176
    4. '_s' → logprob: -11.751980781555176
    5. ''_' → logprob: -11.876980781555176
    6. ' _' → logprob: -12.376980781555176
    7. 'score' → logprob: -13.251980781555176
    8. '_code' → logprob: -13.376980781555176
    9. '_S' → logprob: -13.751980781555176
    10. '_SCORE' → logprob: -13.876980781555176

Token 92: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.23019954562187195
    2. '+=' → logprob: -1.6051995754241943
    3. '+' → logprob: -5.355199337005615
    4. ' +' → logprob: -10.480199813842773
    5. '<|end|>' → logprob: -11.355199813842773
    6. '+='' → logprob: -12.230199813842773
    7. ' ' → logprob: -13.230199813842773
    8. '+="' → logprob: -13.480199813842773
    9. ']+=' → logprob: -13.605199813842773
    10. '<|end|>' → logprob: -14.105199813842773

Token 93: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.31330493092536926
    2. ' b' → logprob: -1.3133049011230469
    3. 'a' → logprob: -10.188304901123047
    4. ' a' → logprob: -12.188304901123047
    5. ' ' → logprob: -15.438304901123047
    6. '1' → logprob: -16.063304901123047
    7. ' ' → logprob: -16.688304901123047
    8. '(b' → logprob: -16.813304901123047
    9. '0' → logprob: -17.938304901123047
    10. ')b' → logprob: -18.125804901123047

Token 94: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.609094500541687
    2. 'if' → logprob: -1.609094500541687
    3. '
' → logprob: -1.859094500541687
    4. 'print' → logprob: -2.9840946197509766
    5. ' if' → logprob: -3.1090946197509766
    6. '    
' → logprob: -5.984094619750977
    7. '```' → logprob: -6.609094619750977
    8. ' print' → logprob: -7.484094619750977
    9. '  
' → logprob: -8.234094619750977
    10. ' 
' → logprob: -8.984094619750977

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14463774859905243
    2. ' if' → logprob: -2.8946378231048584
    3. 'if' → logprob: -3.0196378231048584
    4. 'print' → logprob: -4.269637584686279
    5. '
' → logprob: -4.394637584686279
    6. ' print' → logprob: -6.269637584686279
    7. '```' → logprob: -6.769637584686279
    8. '    
' → logprob: -6.894637584686279
    9. '  
' → logprob: -9.894638061523438
    10. '``' → logprob: -10.644638061523438

Token 96: ' print' (ID: 2123)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6174310445785522
    2. '   ' → logprob: -1.3674310445785522
    3. 'if' → logprob: -1.6174310445785522
    4. 'print' (adapté à ' print') → logprob: -5.492431163787842
    5. ' print' → logprob: -5.742431163787842
    6. '
' → logprob: -9.117430686950684
    7. '```' → logprob: -9.867430686950684
    8. '    
' → logprob: -11.367430686950684
    9. ' 
' → logprob: -13.117430686950684
    10. '``' → logprob: -14.367430686950684

Token 97: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14749157428741455
    2. '(A' → logprob: -2.147491455078125
    3. '('' → logprob: -4.147491455078125
    4. '(f' → logprob: -6.397491455078125
    5. '()' → logprob: -6.647491455078125
    6. '("' → logprob: -6.647491455078125
    7. '((' → logprob: -8.772491455078125
    8. '(max' → logprob: -9.397491455078125
    9. '("("' → logprob: -10.897491455078125
    10. '(
' → logprob: -11.522491455078125

Token 98: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -15.250000953674316
    3. ')' → logprob: -15.750000953674316
    4. '_scores' → logprob: -16.375
    5. 'score' → logprob: -16.375
    6. 'Score' → logprob: -17.75
    7. '   ' → logprob: -17.75
    8. ' _' → logprob: -17.875
    9. '_s' → logprob: -18.25
    10. '_SCORE' → logprob: -18.25

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014173968695104122
    2. ')' → logprob: -4.889173984527588
    3. ' ,' → logprob: -5.389173984527588
    4. ',B' → logprob: -7.264173984527588
    5. '>' → logprob: -7.389173984527588
    6. ' >' → logprob: -7.764173984527588
    7. ' if' → logprob: -9.26417350769043
    8. '   ' → logprob: -9.76417350769043
    9. ',b' → logprob: -10.26417350769043
    10. ' ' → logprob: -11.88917350769043

Token 100: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.006716079078614712
    2. ' B' → logprob: -5.006716251373291
    3. '   ' → logprob: -15.006715774536133
    4. ' ' → logprob: -15.131715774536133
    5. ')' → logprob: -16.506715774536133
    6. '    ' → logprob: -17.006715774536133
    7. '  ' → logprob: -17.631715774536133
    8. '     ' → logprob: -18.506715774536133
    9. '"' → logprob: -18.631715774536133
    10. '"B' → logprob: -18.631715774536133

Token 101: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -2.3557529857498594e-05
    2. 'Score' → logprob: -10.87502384185791
    3. 'score' → logprob: -12.87502384185791
    4. '_' → logprob: -14.25002384185791
    5. '_S' → logprob: -14.25002384185791
    6. '_SCORE' → logprob: -14.50002384185791
    7. '_scores' → logprob: -16.250022888183594
    8. '_s' → logprob: -17.000022888183594
    9. ')' → logprob: -17.000022888183594
    10. ')_' → logprob: -17.750022888183594

Token 102: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ')
' → logprob: -14.125000953674316
    3. ' )' → logprob: -15.000000953674316
    4. ')`' → logprob: -17.125001907348633
    5. '))' → logprob: -18.875001907348633
    6. '')' → logprob: -19.125001907348633
    7. '`)' → logprob: -19.500001907348633
    8. '   ' → logprob: -19.625001907348633
    9. '),' → logprob: -19.875001907348633
    10. ')

' → logprob: -20.000001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 100
Tokens correctement prédits (1ère position, stricte): 49
Tokens correctement prédits (1ère position, avec adaptation): 54
Tokens correctement prédits (top 10): 92
Précision stricte (1ère position): 49.00%
Précision adaptée (1ère position): 54.00%
Précision (top 10): 92.00%
================================================================================
