================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:09:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
ball = 'A'

while True:
    try:
        line = input()
        if not line:
            break
        x, y = line.split(',')
        if ball == x:
            ball = y
        elif ball == y:
            ball = x
    except EOFError:
        break

print(ball)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'ball' (ID: 5052)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' '' (ID: 461)
  → Token d'amorce (pas de prédiction)

Token 3: 'A' (ID: 32)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.057342275977134705
    2. '"' → logprob: -3.057342290878296
    3. 'b' → logprob: -5.807342052459717
    4. 'red' → logprob: -5.807342052459717
    5. 'a' → logprob: -7.557342052459717
    6. 'basket' → logprob: -8.307342529296875
    7. '(' → logprob: -8.432342529296875
    8. ' ' → logprob: -8.682342529296875
    9. ''s' → logprob: -8.807342529296875
    10. '')' → logprob: -8.932342529296875

Token 4: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.008241143077611923
    2. 'l' → logprob: -5.133241176605225
    3. ''s' → logprob: -7.508241176605225
    4. ' '' → logprob: -7.633241176605225
    5. 'p' → logprob: -7.883241176605225
    6. ''l' → logprob: -7.883241176605225
    7. '')' → logprob: -8.258240699768066
    8. ' ')' → logprob: -9.883240699768066
    9. 'b' → logprob: -10.133240699768066
    10. ''''' → logprob: -10.258240699768066

Token 5: 'while' (ID: 7032)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3036677837371826
    2. '+' → logprob: -2.0536677837371826
    3. '.' → logprob: -2.0536677837371826
    4. ' =' → logprob: -5.803668022155762
    5. ',' → logprob: -7.553668022155762
    6. '[' → logprob: -7.678668022155762
    7. '+=' → logprob: -8.428668022155762
    8. 'b' → logprob: -8.553668022155762
    9. '_' → logprob: -8.553668022155762
    10. ')' → logprob: -8.678668022155762

Token 6: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00021772195759695023
    2. '  ' → logprob: -9.00021743774414
    3. '```' → logprob: -11.00021743774414
    4. ''' → logprob: -11.25021743774414
    5. ' ```' → logprob: -11.25021743774414
    6. ' ' → logprob: -11.37521743774414
    7. ' True' → logprob: -12.00021743774414
    8. ' (' → logprob: -12.00021743774414
    9. ' not' → logprob: -12.12521743774414
    10. ' ball' → logprob: -12.37521743774414

Token 7: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00010807292710524052
    2. ':
' → logprob: -10.375107765197754
    3. ' :' → logprob: -10.500107765197754
    4. '():' → logprob: -11.625107765197754
    5. '':' → logprob: -11.750107765197754
    6. '):' → logprob: -11.875107765197754
    7. '':'' → logprob: -12.000107765197754
    8. '   ' → logprob: -12.000107765197754
    9. ':**' → logprob: -12.125107765197754
    10. '.' → logprob: -13.250107765197754

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005619212053716183
    2. ' ' → logprob: -6.380619049072266
    3. '```' → logprob: -7.005619049072266
    4. '    ' → logprob: -7.130619049072266
    5. '    
' → logprob: -7.380619049072266
    6. '<|end|>' → logprob: -8.505619049072266
    7. ':' → logprob: -8.755619049072266
    8. '  ' → logprob: -9.130619049072266
    9. '(ball' → logprob: -9.130619049072266
    10. ')' → logprob: -9.255619049072266

Token 9: ' try' (ID: 2075)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5967587828636169
    2. ' if' → logprob: -1.2217588424682617
    3. ' input' → logprob: -2.9717588424682617
    4. ' print' → logprob: -3.3467588424682617
    5. 'print' → logprob: -3.5967588424682617
    6. 'input' → logprob: -3.9717588424682617
    7. 'if' → logprob: -4.596758842468262
    8. ' ball' → logprob: -6.096758842468262
    9. ' pass' → logprob: -6.971758842468262
    10. 'pass' → logprob: -7.096758842468262

Token 10: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000387535837944597
    2. ' :' → logprob: -8.125387191772461
    3. ':
' → logprob: -10.250387191772461
    4. '):' → logprob: -10.500387191772461
    5. '       ' → logprob: -11.000387191772461
    6. '   ' → logprob: -11.875387191772461
    7. '():' → logprob: -13.625387191772461
    8. '    ' → logprob: -14.250387191772461
    9. ':**' → logprob: -14.500387191772461
    10. '':' → logprob: -14.750387191772461

Token 11: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003036417067050934
    2. '   ' → logprob: -5.8780364990234375
    3. '    ' → logprob: -9.003036499023438
    4. '      ' → logprob: -11.378036499023438
    5. '```' → logprob: -11.503036499023438
    6. '	   ' → logprob: -11.628036499023438
    7. '     ' → logprob: -11.628036499023438
    8. ' readline' → logprob: -11.878036499023438
    9. ' ' → logprob: -12.253036499023438
    10. '<|end|>' → logprob: -12.253036499023438

Token 12: ' line' (ID: 2543)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.2082767486572266
    2. '           ' → logprob: -1.3332767486572266
    3. 'input' → logprob: -1.8332767486572266
    4. 'ball' → logprob: -2.5832767486572266
    5. '   ' → logprob: -2.9582767486572266
    6. ' ball' → logprob: -3.0832767486572266
    7. '       ' → logprob: -3.3332767486572266
    8. ' readline' → logprob: -5.083276748657227
    9. ' line' → logprob: -5.208276748657227
    10. ' print' → logprob: -5.645776748657227

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0591239258646965
    2. '=' → logprob: -4.434123992919922
    3. 's' → logprob: -4.434123992919922
    4. '.' → logprob: -4.559123992919922
    5. '.readline' → logprob: -5.309123992919922
    6. '.startswith' → logprob: -5.309123992919922
    7. '[' → logprob: -5.934123992919922
    8. ')' → logprob: -6.184123992919922
    9. '.split' → logprob: -6.309123992919922
    10. '   ' → logprob: -6.809123992919922

Token 14: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.07889287173748016
    2. 'input' → logprob: -2.578892946243286
    3. ' ' → logprob: -13.328892707824707
    4. '=input' → logprob: -14.078892707824707
    5. '(input' → logprob: -15.578892707824707
    6. '<input' → logprob: -15.578892707824707
    7. '	input' → logprob: -16.453893661499023
    8. ' ' → logprob: -17.078893661499023
    9. ' raw' → logprob: -17.328893661499023
    10. '_input' → logprob: -17.578893661499023

Token 15: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10593771189451218
    2. '()' → logprob: -2.4809377193450928
    3. '('' → logprob: -4.105937480926514
    4. '("("' → logprob: -8.730937957763672
    5. '```' → logprob: -9.355937957763672
    6. '("")' → logprob: -10.355937957763672
    7. '('(' → logprob: -10.855937957763672
    8. ')' → logprob: -11.105937957763672
    9. '("' → logprob: -11.605937957763672
    10. ' ' → logprob: -11.605937957763672

Token 16: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6861043572425842
    2. ' ' → logprob: -1.1861042976379395
    3. '    ' → logprob: -2.5611042976379395
    4. '   ' → logprob: -3.5611042976379395
    5. '<|end|>' → logprob: -3.9361042976379395
    6. '.' → logprob: -4.3111042976379395
    7. '.strip' → logprob: -4.3111042976379395
    8. '  ' → logprob: -4.9361042976379395
    9. '       ' → logprob: -5.5611042976379395
    10. '  
' → logprob: -5.9361042976379395

Token 17: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8395957946777344
    2. '.strip' → logprob: -1.8395957946777344
    3. '.' → logprob: -2.0895957946777344
    4. '.split' → logprob: -2.2145957946777344
    5. ' ' → logprob: -2.5895957946777344
    6. '   ' → logprob: -4.214595794677734
    7. ' ==' → logprob: -4.339595794677734
    8. '=' → logprob: -4.339595794677734
    9. '       ' → logprob: -4.714595794677734
    10. '.startswith' → logprob: -4.714595794677734

Token 18: ' not' (ID: 625)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7653453350067139
    2. ' ball' → logprob: -1.1403453350067139
    3. ' line' → logprob: -1.7653453350067139
    4. ' not' → logprob: -3.890345335006714
    5. ' ' → logprob: -4.140345573425293
    6. 'ball' → logprob: -5.765345573425293
    7. ' '' → logprob: -6.640345573425293
    8. ''' → logprob: -6.765345573425293
    9. ' len' → logprob: -7.515345573425293
    10. 'line' → logprob: -8.140345573425293

Token 19: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.001391423400491476
    2. ' ' → logprob: -6.626391410827637
    3. 'line' → logprob: -9.751391410827637
    4. ' ' → logprob: -12.251391410827637
    5. '	line' → logprob: -13.751391410827637
    6. ' lines' → logprob: -14.626391410827637
    7. '(line' → logprob: -15.501391410827637
    8. ' ball' → logprob: -15.751391410827637
    9. ' ligne' → logprob: -16.626392364501953
    10. '=line' → logprob: -16.751392364501953

Token 20: ':
' (ID: 734)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3126126527786255
    2. ':' → logprob: -1.5626126527786255
    3. '.startswith' → logprob: -3.562612533569336
    4. '.strip' → logprob: -4.062612533569336
    5. ' .' → logprob: -4.437612533569336
    6. '.endswith' → logprob: -8.062612533569336
    7. ' :' → logprob: -8.312612533569336
    8. ' or' → logprob: -8.437612533569336
    9. '.split' → logprob: -8.562612533569336
    10. ':
' → logprob: -8.937612533569336

Token 21: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4492618441581726
    2. '       ' → logprob: -1.0742619037628174
    3. ' break' → logprob: -4.574261665344238
    4. '   ' → logprob: -5.074261665344238
    5. ' ' → logprob: -6.449261665344238
    6. ':' → logprob: -7.074261665344238
    7. '        ' → logprob: -8.699261665344238
    8. '    ' → logprob: -8.699261665344238
    9. ' ' → logprob: -8.949261665344238
    10. '<|end|>' → logprob: -9.199261665344238

Token 22: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.0008129627676680684
    2. 'break' (adapté à ' break') → logprob: -8.000812530517578
    3. '       ' → logprob: -9.000812530517578
    4. ' ' → logprob: -9.000812530517578
    5. '	break' → logprob: -9.500812530517578
    6. '   ' → logprob: -9.625812530517578
    7. ' ' → logprob: -10.500812530517578
    8. '           ' → logprob: -11.000812530517578
    9. '_break' → logprob: -11.125812530517578
    10. '    ' → logprob: -11.375812530517578

Token 23: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03016049414873123
    2. '   ' → logprob: -5.155160427093506
    3. '           ' → logprob: -5.905160427093506
    4. '        
' → logprob: -5.905160427093506
    5. ':' → logprob: -6.030160427093506
    6. '\' → logprob: -6.030160427093506
    7. '\n' → logprob: -6.155160427093506
    8. '<|end|>' → logprob: -6.155160427093506
    9. '            
' → logprob: -6.530160427093506
    10. '
' → logprob: -6.655160427093506

Token 24: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015426978468894958
    2. '   ' → logprob: -5.265427112579346
    3. '
' → logprob: -5.640427112579346
    4. '        
' → logprob: -6.140427112579346
    5. '    
' → logprob: -6.890427112579346
    6. '<|end|>' → logprob: -7.515427112579346
    7. ')' → logprob: -8.015426635742188
    8. ':' → logprob: -8.140426635742188
    9. '            
' → logprob: -8.515426635742188
    10. '\' → logprob: -8.515426635742188

Token 25: ' x' (ID: 1215)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007018822245299816
    2. '   ' → logprob: -5.13201904296875
    3. ' if' → logprob: -7.38201904296875
    4. ' ' → logprob: -9.50701904296875
    5. '           ' → logprob: -9.75701904296875
    6. '    ' → logprob: -9.75701904296875
    7. 's' → logprob: -10.13201904296875
    8. '      ' → logprob: -10.88201904296875
    9. '<|end|>' → logprob: -10.88201904296875
    10. '=' → logprob: -11.13201904296875

Token 26: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0022320940624922514
    2. '=' → logprob: -6.377232074737549
    3. '=line' → logprob: -8.627232551574707
    4. ',' → logprob: -9.502232551574707
    5. ' ==' → logprob: -9.752232551574707
    6. ' ' → logprob: -9.877232551574707
    7. '   ' → logprob: -10.127232551574707
    8. '.append' → logprob: -10.127232551574707
    9. ' +=' → logprob: -10.502232551574707
    10. ')' → logprob: -10.752232551574707

Token 27: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10032550245523453
    2. ' y' → logprob: -2.350325584411621
    3. '=' → logprob: -10.100325584411621
    4. ' =' → logprob: -10.850325584411621
    5. ' ' → logprob: -11.225325584411621
    6. 'space' → logprob: -11.600325584411621
    7. 'ball' → logprob: -11.600325584411621
    8. ' ball' → logprob: -11.725325584411621
    9. ',y' → logprob: -11.975325584411621
    10. '	y' → logprob: -12.350325584411621

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006299891974776983
    2. '=' → logprob: -5.13129997253418
    3. ',' → logprob: -8.00629997253418
    4. ' ' → logprob: -10.38129997253418
    5. ' ,' → logprob: -12.50629997253418
    6. ')' → logprob: -13.00629997253418
    7. '   ' → logprob: -15.88129997253418
    8. '<|end|>' → logprob: -15.88129997253418
    9. '    ' → logprob: -16.13129997253418
    10. ' =
' → logprob: -16.50629997253418

Token 29: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.02686353586614132
    2. ' map' → logprob: -3.7768635749816895
    3. 'line' → logprob: -5.6518635749816895
    4. 'map' → logprob: -9.401863098144531
    5. ' ' → logprob: -12.651863098144531
    6. '	line' → logprob: -12.651863098144531
    7. ' [' → logprob: -12.776863098144531
    8. '[line' → logprob: -12.901863098144531
    9. '=line' → logprob: -13.651863098144531
    10. '   ' → logprob: -13.901863098144531

Token 30: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.12763743102550507
    2. '.' → logprob: -2.1276373863220215
    3. '.strip' → logprob: -7.3776373863220215
    4. ' .' → logprob: -9.50263786315918
    5. '.s' → logprob: -13.00263786315918
    6. '.rstrip' → logprob: -13.00263786315918
    7. 'split' → logprob: -13.12763786315918
    8. '().' → logprob: -14.25263786315918
    9. ' split' → logprob: -14.25263786315918
    10. '.Split' → logprob: -14.50263786315918

Token 31: '(',')
' (ID: 161318)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0032961785327643156
    2. '()' → logprob: -6.128296375274658
    3. '(' → logprob: -7.253296375274658
    4. '("("' → logprob: -8.0032958984375
    5. ''' → logprob: -10.5032958984375
    6. '('.')' → logprob: -11.3782958984375
    7. '('(' → logprob: -11.6282958984375
    8. '("' → logprob: -11.7532958984375
    9. '(',' → logprob: -12.1282958984375
    10. '(('' → logprob: -13.0032958984375

Token 32: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009070911444723606
    2. '<|end|>' → logprob: -5.509070873260498
    3. ' )' → logprob: -6.134070873260498
    4. ')' → logprob: -7.134070873260498
    5. 'int' → logprob: -7.259070873260498
    6. ' ')' → logprob: -8.259071350097656
    7. '    ' → logprob: -8.384071350097656
    8. ' ")' → logprob: -8.634071350097656
    9. '  ' → logprob: -9.134071350097656
    10. '        ' → logprob: -9.509071350097656

Token 33: ' if' (ID: 538)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4666021168231964
    2. ' ' → logprob: -1.091602087020874
    3. 'x' → logprob: -4.091602325439453
    4. ' ball' → logprob: -4.341602325439453
    5. ' )' → logprob: -6.716602325439453
    6. ')' → logprob: -7.091602325439453
    7. '    ' → logprob: -7.216602325439453
    8. 'int' → logprob: -7.466602325439453
    9. 'ball' → logprob: -7.841602325439453
    10. '        ' → logprob: -7.966602325439453

Token 34: ' ball' (ID: 7880)
  Prédit: ' ball'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ball' → logprob: -0.029717164114117622
    2. ' x' → logprob: -3.904717206954956
    3. 'ball' → logprob: -5.779716968536377
    4. ' y' → logprob: -6.279716968536377
    5. ' ' → logprob: -6.279716968536377
    6. ' space' → logprob: -7.404716968536377
    7. ' balls' → logprob: -7.654716968536377
    8. ' int' → logprob: -8.404717445373535
    9. ' ' → logprob: -9.029717445373535
    10. '(ball' → logprob: -9.029717445373535

Token 35: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.001144145498983562
    2. '==' → logprob: -7.626143932342529
    3. ' ' → logprob: -8.001144409179688
    4. ' !=' → logprob: -9.001144409179688
    5. ' =='' → logprob: -9.501144409179688
    6. ' =' → logprob: -10.001144409179688
    7. ' ===' → logprob: -11.001144409179688
    8. '.' → logprob: -11.251144409179688
    9. ' in' → logprob: -11.376144409179688
    10. '[' → logprob: -11.626144409179688

Token 36: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.837547779083252
    2. 'x' → logprob: -0.962547779083252
    3. ''' → logprob: -2.212547779083252
    4. ' '' → logprob: -3.212547779083252
    5. ''x' → logprob: -3.462547779083252
    6. ''A' → logprob: -5.712547779083252
    7. ' A' → logprob: -8.087547302246094
    8. 'A' → logprob: -8.337547302246094
    9. '"x' → logprob: -8.962547302246094
    10. '"' → logprob: -9.462547302246094

Token 37: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007021303754299879
    2. ' :' → logprob: -5.382021427154541
    3. ' and' → logprob: -6.382021427154541
    4. ':
' → logprob: -7.757021427154541
    5. '.' → logprob: -9.132020950317383
    6. '.strip' → logprob: -10.007020950317383
    7. ' ==' → logprob: -10.257020950317383
    8. 'and' → logprob: -11.007020950317383
    9. '==' → logprob: -11.132020950317383
    10. '):' → logprob: -11.882020950317383

Token 38: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4021780490875244
    2. ':' → logprob: -1.4021780490875244
    3. ' and' → logprob: -3.0271780490875244
    4. ' =' → logprob: -4.402177810668945
    5. '.' → logprob: -5.777177810668945
    6. '            ' → logprob: -5.777177810668945
    7. ' ==' → logprob: -5.777177810668945
    8. ' :' → logprob: -5.902177810668945
    9. ':
' → logprob: -5.902177810668945
    10. '       ' → logprob: -6.527177810668945

Token 39: ' ball' (ID: 7880)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02037814073264599
    2. '=' → logprob: -4.270378112792969
    3. ' print' → logprob: -6.770378112792969
    4. ' ' → logprob: -6.770378112792969
    5. ' ball' → logprob: -7.020378112792969
    6. ' =
' → logprob: -7.270378112792969
    7. 'ball' (adapté à ' ball') → logprob: -7.645378112792969
    8. 'print' → logprob: -7.895378112792969
    9. ':' → logprob: -8.395378112792969
    10. '           ' → logprob: -8.645378112792969

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17974799871444702
    2. '=' → logprob: -1.8047480583190918
    3. ' ' → logprob: -13.554747581481934
    4. ',' → logprob: -13.929747581481934
    5. '=user' → logprob: -15.804747581481934
    6. '=y' → logprob: -15.804747581481934
    7. '=

' → logprob: -16.05474853515625
    8. ' +=' → logprob: -16.17974853515625
    9. '＝' → logprob: -16.99224853515625
    10. '<|end|>' → logprob: -17.17974853515625

Token 41: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.026308070868253708
    2. ' y' → logprob: -3.651308059692383
    3. ''y' → logprob: -11.901308059692383
    4. '	y' → logprob: -14.901308059692383
    5. ',y' → logprob: -15.901308059692383
    6. ''' → logprob: -16.026308059692383
    7. 'x' → logprob: -16.401308059692383
    8. 'y's' → logprob: -16.776308059692383
    9. '‘y' → logprob: -16.901308059692383
    10. '(y' → logprob: -17.026308059692383

Token 42: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8018326163291931
    2. '<|end|>' → logprob: -0.8018326163291931
    3. '\n' → logprob: -2.676832675933838
    4. '<|end|>' → logprob: -4.301832675933838
    5. '
' → logprob: -5.426832675933838
    6. '   ' → logprob: -5.801832675933838
    7. ' elif' → logprob: -6.051832675933838
    8. ' ' → logprob: -6.051832675933838
    9. ' else' → logprob: -6.426832675933838
    10. '```' → logprob: -6.676832675933838

Token 44: ' elif' (ID: 9497)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: ' ball' (ID: 7880)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.13053540885448456
    2. ' ball' → logprob: -2.255535364151001
    3. ' ' → logprob: -5.38053560256958
    4. 'y' → logprob: -5.50553560256958
    5. 'ball' → logprob: -5.63053560256958
    6. ' ' → logprob: -6.13053560256958
    7. ' x' → logprob: -6.25553560256958
    8. ''' → logprob: -7.38053560256958
    9. ' '' → logprob: -8.380535125732422
    10. ' f' → logprob: -9.630535125732422

Token 46: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0017108784522861242
    2. '==' → logprob: -6.376710891723633
    3. ' =' → logprob: -12.126710891723633
    4. ' ' → logprob: -12.876710891723633
    5. '=' → logprob: -15.376710891723633
    6. ' ==
' → logprob: -15.751710891723633
    7. '<|end|>' → logprob: -16.376710891723633
    8. ' !=' → logprob: -16.876710891723633
    9. ' ===' → logprob: -17.126710891723633
    10. ')' → logprob: -17.126710891723633

Token 47: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6931670904159546
    2. ' y' → logprob: -0.6931670904159546
    3. 'x' → logprob: -11.568166732788086
    4. '<|end|>' → logprob: -12.943166732788086
    5. ' x' → logprob: -13.193166732788086
    6. ' ' → logprob: -13.693166732788086
    7. '	y' → logprob: -14.193166732788086
    8. ''y' → logprob: -14.193166732788086
    9. ')' → logprob: -14.443166732788086
    10. 'z' → logprob: -14.818166732788086

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02070222608745098
    2. ':
' → logprob: -3.8957021236419678
    3. ' :' → logprob: -9.520702362060547
    4. '):' → logprob: -10.395702362060547
    5. '):
' → logprob: -10.645702362060547
    6. ' :
' → logprob: -10.645702362060547
    7. ':
' → logprob: -12.770702362060547
    8. ')' → logprob: -13.270702362060547
    9. ':

' → logprob: -13.520702362060547
    10. ',' → logprob: -14.520702362060547

Token 49: '           ' (ID: 352)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.727903425693512
    2. ' x' → logprob: -0.727903425693512
    3. '=' → logprob: -3.602903366088867
    4. ' ' → logprob: -5.602903366088867
    5. 'x' → logprob: -6.102903366088867
    6. ' =
' → logprob: -8.477903366088867
    7. '           ' → logprob: -8.602903366088867
    8. '=x' → logprob: -9.477903366088867
    9. ',' → logprob: -9.602903366088867
    10. ':' → logprob: -9.602903366088867

Token 50: ' ball' (ID: 7880)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.10249790549278259
    2. 'x' → logprob: -2.3524978160858154
    3. ' ' → logprob: -6.1024980545043945
    4. ' 
' → logprob: -10.477498054504395
    5. '<|end|>' → logprob: -11.977498054504395
    6. ')' → logprob: -12.227498054504395
    7. ''' → logprob: -12.977498054504395
    8. ' )' → logprob: -13.727498054504395
    9. '[' → logprob: -14.227498054504395
    10. ' ,' → logprob: -14.352498054504395

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029824884608387947
    2. '=' → logprob: -3.52982497215271
    3. ' ' → logprob: -9.654825210571289
    4. 'space' → logprob: -13.029825210571289
    5. ' ='' → logprob: -13.404825210571289
    6. ',' → logprob: -13.654825210571289
    7. ' =
' → logprob: -13.654825210571289
    8. ')' → logprob: -14.029825210571289
    9. ''' → logprob: -14.404825210571289
    10. '"' → logprob: -14.654825210571289

Token 52: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8848166465759277
    2. ' x' → logprob: -0.8848166465759277
    3. ' ' → logprob: -1.7598166465759277
    4. ''' → logprob: -6.134816646575928
    5. ' 
' → logprob: -10.509817123413086
    6. ' ' → logprob: -10.759817123413086
    7. '"' → logprob: -10.884817123413086
    8. ' )' → logprob: -11.009817123413086
    9. '  ' → logprob: -11.259817123413086
    10. '`' → logprob: -11.384817123413086

Token 53: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4195209741592407
    2. '
' → logprob: -1.1695209741592407
    3. '<|end|>' → logprob: -3.544520854949951
    4. ' 
' → logprob: -7.419520854949951
    5. '' → logprob: -7.419520854949951
    6. 'newline' → logprob: -7.544520854949951
    7. '```' → logprob: -7.669520854949951
    8. '
' → logprob: -8.54452133178711
    9. '\' → logprob: -8.66952133178711
    10. '  
' → logprob: -8.66952133178711

Token 54: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: ' except' (ID: 6384)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: ' EOF' (ID: 72412)
  Prédit: ' EOF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' EOF' → logprob: -0.040313806384801865
    2. ' Exception' → logprob: -3.790313720703125
    3. ' ' → logprob: -4.415313720703125
    4. ' Value' → logprob: -5.540313720703125
    5. 'EOF' → logprob: -7.165313720703125
    6. ' (' → logprob: -10.165313720703125
    7. ' ' → logprob: -10.790313720703125
    8. ' Keyboard' → logprob: -11.165313720703125
    9. 'Exception' → logprob: -11.540313720703125
    10. ':' → logprob: -11.790313720703125

Token 57: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.9361264946837764e-07
    2. 'rror' → logprob: -16.5
    3. 'error' → logprob: -18.0
    4. 'Er' → logprob: -18.5
    5. 'Erro' → logprob: -18.625
    6. 'E' → logprob: -19.125
    7. ':' → logprob: -19.875
    8. ' Error' → logprob: -20.125
    9. 'Err' → logprob: -20.625
    10. 'EOF' → logprob: -20.75

Token 58: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017630017828196287
    2. ':
' → logprob: -6.501762866973877
    3. '       ' → logprob: -8.376763343811035
    4. '   ' → logprob: -10.501763343811035
    5. '):' → logprob: -13.751763343811035
    6. '<|end|>' → logprob: -14.626763343811035
    7. '	break' → logprob: -15.626763343811035
    8. '	' → logprob: -15.876763343811035
    9. '():' → logprob: -16.00176239013672
    10. '           ' → logprob: -16.00176239013672

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025741136632859707
    2. '   ' → logprob: -6.1275739669799805
    3. ' break' → logprob: -8.00257396697998
    4. '	break' → logprob: -10.75257396697998
    5. 'break' → logprob: -10.87757396697998
    6. '           ' → logprob: -12.62757396697998
    7. ' ' → logprob: -13.12757396697998
    8. '    ' → logprob: -13.25257396697998
    9. '	' → logprob: -13.25257396697998
    10. '      ' → logprob: -14.12757396697998

Token 60: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.5794513821601868
    2. 'break' (adapté à ' break') → logprob: -0.8294513821601868
    3. '   ' → logprob: -5.704451560974121
    4. '	break' → logprob: -9.454451560974121
    5. '       ' → logprob: -9.454451560974121
    6. 'b' → logprob: -11.579451560974121
    7. ' ' → logprob: -13.204451560974121
    8. '    ' → logprob: -13.454451560974121
    9. '    
' → logprob: -13.829451560974121
    10. 'br' → logprob: -13.954451560974121

Token 61: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16683325171470642
    2. '
' → logprob: -1.9168332815170288
    3. '<|end|>' → logprob: -5.791833400726318
    4. ' print' → logprob: -7.041833400726318
    5. ')' → logprob: -7.041833400726318
    6. '#' → logprob: -8.04183292388916
    7. '  
' → logprob: -8.16683292388916
    8. ' ' → logprob: -8.41683292388916
    9. '\n' → logprob: -8.54183292388916
    10. '```' → logprob: -9.04183292388916

Token 62: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007269674097187817
    2. '
' → logprob: -7.37572717666626
    3. ' print' → logprob: -9.750726699829102
    4. ')' → logprob: -11.625726699829102
    5. '   ' → logprob: -11.875726699829102
    6. '  
' → logprob: -12.125726699829102
    7. '#' → logprob: -12.125726699829102
    8. '    
' → logprob: -12.875726699829102
    9. '(print' → logprob: -13.000726699829102
    10. ' 
' → logprob: -13.125726699829102

Token 63: '(ball' (ID: 170062)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04193311557173729
    2. '(ball' → logprob: -3.291933059692383
    3. '('' → logprob: -5.791933059692383
    4. '(b' → logprob: -7.541933059692383
    5. '()' → logprob: -8.291933059692383
    6. '("("' → logprob: -10.291933059692383
    7. '(f' → logprob: -12.166933059692383
    8. '(`' → logprob: -12.291933059692383
    9. '((' → logprob: -13.291933059692383
    10. '("' → logprob: -13.541933059692383

Token 64: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ' )' → logprob: -14.625000953674316
    3. ')`' → logprob: -15.000000953674316
    4. '')' → logprob: -15.375000953674316
    5. '))' → logprob: -16.000001907348633
    6. '`)' → logprob: -16.625001907348633
    7. ')
' → logprob: -17.375001907348633
    8. '()' → logprob: -18.500001907348633
    9. '")' → logprob: -19.500001907348633
    10. '(' → logprob: -19.625001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 62
Tokens correctement prédits (1ère position, stricte): 26
Tokens correctement prédits (1ère position, avec adaptation): 26
Tokens correctement prédits (top 10): 47
Précision stricte (1ère position): 41.94%
Précision adaptée (1ère position): 41.94%
Précision (top 10): 75.81%
================================================================================
