================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:36:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from typing import List, Callable

class DigitSequence:
    def __init__(self, digits: List[int]):
        self._digits = digits

    def length(self) -> int:
        return len(self._digits)

    def digit_at(self, index: int) -> int:
        if 0 <= index < self.length():
            return self._digits[index]
        raise IndexError("Index out of range")

    def __iter__(self):
        return iter(self._digits)

    def __repr__(self):
        return ''.join(str(d) for d in self._digits)

class DigitRemoverStrategy:
    def remove_digits(self, sequence: DigitSequence, k: int) -> DigitSequence:
        raise NotImplementedError()

class GreedyDigitRemover(DigitRemoverStrategy):
    def remove_digits(self, sequence: DigitSequence, k: int) -> DigitSequence:
        # This method removes k digits to form the largest possible number
        stack: List[int] = []
        to_remove = k
        for digit in sequence:
            while stack and to_remove > 0 and stack[-1] < digit:
                stack.pop()
                to_remove -= 1
            stack.append(digit)
        if to_remove > 0:
            stack = stack[:-to_remove]
        return DigitSequence(stack)

class DigitSequenceFactory:
    @staticmethod
    def create_from_list(digits: List[int]) -> DigitSequence:
        return DigitSequence(digits)

class DigitGameContext:
    def __init__(self, remover_strategy: DigitRemoverStrategy):
        self._remover_strategy = remover_strategy

    def get_max_point_number(self, sequence: DigitSequence, k: int) -> DigitSequence:
        return self._remover_strategy.remove_digits(sequence, k)

class InputParser:
    def __init__(self, input_supplier: Callable[[], str]):
        self._input_supplier = input_supplier

    def parse(self) -> (DigitSequence, int):
        line1 = self._input_supplier().strip()
        n, k = map(int, line1.split())
        line2 = self._input_supplier().strip()
        digits = list(map(int, line2.split()))
        if len(digits) != n:
            raise ValueError("Number of digits does not match N")
        return DigitSequenceFactory.create_from_list(digits), k

class OutputFormatter:
    @staticmethod
    def format_digit_sequence(sequence: DigitSequence) -> str:
        return ''.join(str(d) for d in sequence)

def main():
    import sys
    input_lines = iter(sys.stdin.readline, '')
    parser = InputParser(lambda: next(input_lines))
    sequence, k = parser.parse()
    context = DigitGameContext(GreedyDigitRemover())
    max_point_sequence = context.get_max_point_number(sequence, k)
    output = OutputFormatter.format_digit_sequence(max_point_sequence)
    print(output)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' typing' (ID: 34152)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.02203320898115635
    2. ' Optional' → logprob: -4.522033214569092
    3. ' Any' → logprob: -4.647033214569092
    4. ' Union' → logprob: -7.522033214569092
    5. 'List' → logprob: -7.772033214569092
    6. ' Generator' → logprob: -9.147032737731934
    7. 'Any' → logprob: -9.397032737731934
    8. ' Iterable' → logprob: -10.022032737731934
    9. ' Tuple' → logprob: -10.272032737731934
    10. 'Optional' → logprob: -10.522032737731934

Token 4: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.12612517178058624
    2. 'def' → logprob: -2.8761250972747803
    3. '<|end|>' → logprob: -4.626125335693359
    4. '[' → logprob: -4.751125335693359
    5. '\n' → logprob: -5.126125335693359
    6. '
' → logprob: -5.251125335693359
    7. '\' → logprob: -5.376125335693359
    8. '`' → logprob: -5.501125335693359
    9. ',' → logprob: -5.626125335693359
    10. 'import' → logprob: -5.751125335693359

Token 5: ' Callable' (ID: 94560)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.5262242555618286
    2. 'Optional' → logprob: -0.9012242555618286
    3. 'Tuple' → logprob: -6.901224136352539
    4. 'Dict' → logprob: -7.526224136352539
    5. ' Union' → logprob: -7.526224136352539
    6. ' Dict' → logprob: -7.776224136352539
    7. ' Tuple' → logprob: -8.276224136352539
    8. 'Union' → logprob: -8.651224136352539
    9. '```' → logprob: -9.901224136352539
    10. 'Iterable' → logprob: -10.776224136352539

Token 6: '

' (ID: 279)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6622860431671143
    2. 'def' → logprob: -1.0372860431671143
    3. '```' → logprob: -3.1622860431671143
    4. ',' → logprob: -3.5372860431671143
    5. '(' → logprob: -4.287285804748535
    6. '\' → logprob: -4.412285804748535
    7. '\[' → logprob: -4.662285804748535
    8. ':' → logprob: -4.912285804748535
    9. 'a' → logprob: -5.537285804748535
    10. '`' → logprob: -6.287285804748535

Token 7: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007253296673297882
    2. '```' → logprob: -5.507253170013428
    3. 'd' → logprob: -6.632253170013428
    4. 'de' → logprob: -7.507253170013428
    5. '`' → logprob: -7.882253170013428
    6. 'a' → logprob: -8.257253646850586
    7. '(' → logprob: -8.632253646850586
    8. ':' → logprob: -9.257253646850586
    9. '[' → logprob: -9.382253646850586
    10. ',' → logprob: -9.382253646850586

Token 8: ' Digit' (ID: 91174)
  Prédit: ' My'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' My' → logprob: -0.5533284544944763
    2. ' ' → logprob: -1.553328514099121
    3. ' User' → logprob: -3.053328514099121
    4. ' Parser' → logprob: -3.678328514099121
    5. ' Calculator' → logprob: -3.678328514099121
    6. ' Processor' → logprob: -4.428328514099121
    7. ' A' → logprob: -4.428328514099121
    8. ' C' → logprob: -4.428328514099121
    9. ' Predictor' → logprob: -4.928328514099121
    10. ' Transformer' → logprob: -5.178328514099121

Token 9: 'Sequence' (ID: 17333)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01401952002197504
    2. 's' → logprob: -4.76401948928833
    3. '(' → logprob: -5.63901948928833
    4. ' :' → logprob: -7.63901948928833
    5. '):' → logprob: -8.764019966125488
    6. ':
' → logprob: -8.889019966125488
    7. 'Counter' → logprob: -8.889019966125488
    8. '```' → logprob: -8.889019966125488
    9. '():' → logprob: -9.264019966125488
    10. ''s' → logprob: -9.264019966125488

Token 10: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34894827008247375
    2. '(' → logprob: -1.2239482402801514
    3. '(:' → logprob: -7.9739484786987305
    4. '```' → logprob: -9.97394847869873
    5. '():' → logprob: -10.84894847869873
    6. '[' → logprob: -11.34894847869873
    7. '(D' → logprob: -12.22394847869873
    8. '(T' → logprob: -12.22394847869873
    9. '(Base' → logprob: -12.47394847869873
    10. '(object' → logprob: -12.47394847869873

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11610979586839676
    2. '```' → logprob: -2.616109848022461
    3. ':' → logprob: -3.491109848022461
    4. '(' → logprob: -5.991109848022461
    5. ' def' → logprob: -6.491109848022461
    6. 'def' → logprob: -7.366109848022461
    7. '    ' → logprob: -7.866109848022461
    8. '    
' → logprob: -7.991109848022461
    9. '``' → logprob: -8.366109848022461
    10. ' ' → logprob: -9.241109848022461

Token 12: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.7058992385864258
    2. '   ' → logprob: -1.2058992385864258
    3. 'def' (adapté à ' def') → logprob: -1.5808992385864258
    4. '```' → logprob: -6.830899238586426
    5. '    
' → logprob: -11.455899238586426
    6. 'class' → logprob: -11.580899238586426
    7. '    ' → logprob: -11.580899238586426
    8. ')' → logprob: -12.705899238586426
    9. ' ' → logprob: -13.330899238586426
    10. '``' → logprob: -13.455899238586426

Token 13: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.011116322129964828
    2. 'itialize' → logprob: -5.0111165046691895
    3. '__' → logprob: -6.7611165046691895
    4. 't' → logprob: -6.8861165046691895
    5. ' def' → logprob: -7.5111165046691895
    6. 'def' → logprob: -7.7611165046691895
    7. 'itial' → logprob: -7.8861165046691895
    8. 'init' → logprob: -8.511116027832031
    9. ' init' → logprob: -8.886116027832031
    10. 'f' → logprob: -8.886116027832031

Token 14: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.512236498361744e-07
    2. '_init' → logprob: -14.875000953674316
    3. 'ini' → logprob: -16.375
    4. ' init' → logprob: -17.375
    5. 'int' → logprob: -18.25
    6. 'in' → logprob: -19.125
    7. 'new' → logprob: -19.375
    8. 'inite' → logprob: -19.5
    9. 'call' → logprob: -19.625
    10. 'innit' → logprob: -19.875

Token 15: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.03910887986421585
    2. '__' → logprob: -3.539108991622925
    3. '__(
' → logprob: -5.539108753204346
    4. '(self' → logprob: -5.789108753204346
    5. '(' → logprob: -6.414108753204346
    6. '__((' → logprob: -8.289109230041504
    7. '<|end|>' → logprob: -9.539109230041504
    8. ' (' → logprob: -9.664109230041504
    9. '__(*' → logprob: -9.789109230041504
    10. '__('' → logprob: -9.914109230041504

Token 16: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002615742268972099
    2. ' self' → logprob: -8.250261306762695
    3. ')' → logprob: -16.500261306762695
    4. '   ' → logprob: -17.250261306762695
    5. '       ' → logprob: -17.625261306762695
    6. '(self' → logprob: -17.625261306762695
    7. '0' → logprob: -17.750261306762695
    8. '_self' → logprob: -18.250261306762695
    9. '[' → logprob: -18.375261306762695
    10. ' ' → logprob: -18.500261306762695

Token 17: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5119050741195679
    2. ',' → logprob: -1.2619050741195679
    3. ' self' → logprob: -2.6369051933288574
    4. '(self' → logprob: -3.8869051933288574
    5. ' ,' → logprob: -4.511905193328857
    6. ')' → logprob: -5.136905193328857
    7. '_self' → logprob: -5.761905193328857
    8. ' ' → logprob: -6.261905193328857
    9. ' )' → logprob: -6.386905193328857
    10. ',self' → logprob: -7.136905193328857

Token 18: ' digits' (ID: 37806)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4242917001247406
    2. ' self' → logprob: -1.424291729927063
    3. 'digits' → logprob: -2.9242916107177734
    4. ' digits' → logprob: -3.0492916107177734
    5. ' numbers' → logprob: -7.049291610717773
    6. ' sequence' → logprob: -7.299291610717773
    7. 'sequence' → logprob: -7.299291610717773
    8. 'numbers' → logprob: -7.424291610717773
    9. '   ' → logprob: -8.424291610717773
    10. 'length' → logprob: -8.799291610717773

Token 19: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005481490516103804
    2. '):' → logprob: -7.625548362731934
    3. ':list' → logprob: -10.500548362731934
    4. ')' → logprob: -11.625548362731934
    5. ' :' → logprob: -11.750548362731934
    6. '=' → logprob: -11.750548362731934
    7. ' ):' → logprob: -12.000548362731934
    8. ':)' → logprob: -14.875548362731934
    9. ':int' → logprob: -14.875548362731934
    10. '=[]' → logprob: -15.375548362731934

Token 20: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.048592254519462585
    2. 'List' → logprob: -3.0485923290252686
    3. '[List' → logprob: -13.298592567443848
    4. ' )' → logprob: -14.298592567443848
    5. ' list' → logprob: -14.423592567443848
    6. '	List' → logprob: -14.548592567443848
    7. ' int' → logprob: -14.798592567443848
    8. ')' → logprob: -14.798592567443848
    9. ' ' → logprob: -15.048592567443848
    10. 'int' → logprob: -15.048592567443848

Token 21: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -2.248469718324486e-05
    2. '[' → logprob: -10.875022888183594
    3. '[str' → logprob: -13.125022888183594
    4. '<int' → logprob: -14.125022888183594
    5. '):' → logprob: -15.625022888183594
    6. 'int' → logprob: -15.625022888183594
    7. '[Int' → logprob: -15.625022888183594
    8. ')' → logprob: -16.250022888183594
    9. '[
' → logprob: -17.000022888183594
    10. ' [' → logprob: -17.125022888183594

Token 22: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.4907015264034271
    2. '])' → logprob: -1.2407015562057495
    3. ']' → logprob: -2.36570143699646
    4. '],' → logprob: -6.490701675415039
    5. ']:' → logprob: -6.615701675415039
    6. ']):
' → logprob: -6.865701675415039
    7. '):' → logprob: -7.990701675415039
    8. ')' → logprob: -7.990701675415039
    9. ']>' → logprob: -10.115701675415039
    10. ',' → logprob: -11.240701675415039

Token 23: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002539990236982703
    2. 'self' → logprob: -6.127540111541748
    3. ' self' → logprob: -8.37753963470459
    4. '   ' → logprob: -10.12753963470459
    5. ')' → logprob: -11.00253963470459
    6. '      ' → logprob: -11.12753963470459
    7. '    ' → logprob: -11.37753963470459
    8. ',' → logprob: -11.87753963470459
    9. '        
' → logprob: -12.25253963470459
    10. ' ' → logprob: -12.50253963470459

Token 24: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4027523994445801
    2. 'self' (adapté à ' self') → logprob: -1.15275239944458
    3. '       ' → logprob: -4.15275239944458
    4. ' ' → logprob: -11.027751922607422
    5. '   ' → logprob: -11.777751922607422
    6. ' ' → logprob: -12.277751922607422
    7. '        ' → logprob: -13.402751922607422
    8. '	self' → logprob: -13.652751922607422
    9. '_self' → logprob: -14.277751922607422
    10. 's' → logprob: -14.902751922607422

Token 25: '._' (ID: 2697)
  Prédit: '.d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.2026595026254654
    2. '.' → logprob: -1.7026594877243042
    3. ' .' → logprob: -6.702659606933594
    4. ' ' → logprob: -11.827659606933594
    5. '._' → logprob: -12.077659606933594
    6. 'digits' → logprob: -13.077659606933594
    7. '.digital' → logprob: -14.577659606933594
    8. '   ' → logprob: -15.327659606933594
    9. '.s' → logprob: -15.327659606933594
    10. '.tokens' → logprob: -15.327659606933594

Token 26: 'digits' (ID: 135574)
  Prédit: 'digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.00011343709047650918
    2. '_digits' → logprob: -9.500113487243652
    3. ' digits' → logprob: -10.250113487243652
    4. 'digit' → logprob: -13.250113487243652
    5. 'dig' → logprob: -14.875113487243652
    6. 'd' → logprob: -14.875113487243652
    7. 'sequence' → logprob: -15.625113487243652
    8. 'data' → logprob: -16.000112533569336
    9. '_' → logprob: -16.500112533569336
    10. 'igits' → logprob: -16.625112533569336

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4742880165576935
    2. '=' → logprob: -0.9742879867553711
    3. '=[]' → logprob: -9.474287986755371
    4. '.extend' → logprob: -9.974287986755371
    5. ' ' → logprob: -10.349287986755371
    6. '.append' → logprob: -10.724287986755371
    7. '[:]' → logprob: -11.224287986755371
    8. ')' → logprob: -11.474287986755371
    9. '.' → logprob: -12.974287986755371
    10. '   ' → logprob: -13.974287986755371

Token 28: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.12694406509399414
    2. ' digits' → logprob: -2.126944065093994
    3. '[]' → logprob: -12.126943588256836
    4. '_digits' → logprob: -12.376943588256836
    5. '[' → logprob: -13.126943588256836
    6. ' []' → logprob: -13.626943588256836
    7. ' [' → logprob: -14.126943588256836
    8. '[:]' → logprob: -14.626943588256836
    9. 'list' → logprob: -15.001943588256836
    10. 'digit' → logprob: -15.251943588256836

Token 29: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9017378687858582
    2. 'def' → logprob: -2.026737928390503
    3. '   ' → logprob: -2.151737928390503
    4. '.' → logprob: -2.401737928390503
    5. '<|end|>' → logprob: -2.526737928390503
    6. ' ' → logprob: -3.026737928390503
    7. ' 
' → logprob: -3.526737928390503
    8. ' def' → logprob: -3.901737928390503
    9. ')' → logprob: -4.026737689971924
    10. ',' → logprob: -4.151737689971924

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10980723053216934
    2. ' def' → logprob: -2.859807252883911
    3. 'def' → logprob: -4.109807014465332
    4. '
' → logprob: -4.109807014465332
    5. '    
' → logprob: -4.734807014465332
    6. ' 
' → logprob: -5.859807014465332
    7. '```' → logprob: -7.109807014465332
    8. ' ' → logprob: -7.484807014465332
    9. '        
' → logprob: -8.859807014465332
    10. '  
' → logprob: -9.234807014465332

Token 31: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0032594730146229267
    2. ' def' → logprob: -5.753259658813477
    3. '   ' → logprob: -10.128259658813477
    4. '@property' → logprob: -11.003259658813477
    5. 'de' → logprob: -11.503259658813477
    6. 'd' → logprob: -11.503259658813477
    7. ' @' → logprob: -13.128259658813477
    8. '@' → logprob: -13.253259658813477
    9. ' ' → logprob: -13.753259658813477
    10. '```' → logprob: -17.628259658813477

Token 32: ' length' (ID: 5517)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.5612048506736755
    2. ' ' → logprob: -2.1862049102783203
    3. ' def' → logprob: -2.4362049102783203
    4. ' map' → logprob: -2.6862049102783203
    5. ' sum' → logprob: -3.5612049102783203
    6. ' add' → logprob: -3.5612049102783203
    7. ' process' → logprob: -4.18620491027832
    8. ' calculate' → logprob: -4.18620491027832
    9. ' append' → logprob: -4.43620491027832
    10. ' filter' → logprob: -4.81120491027832

Token 33: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.14369376003742218
    2. '(' → logprob: -2.018693685531616
    3. '()' → logprob: -8.018693923950195
    4. 'self' → logprob: -8.518693923950195
    5. ')' → logprob: -8.768693923950195
    6. '(
' → logprob: -9.143693923950195
    7. 's' → logprob: -9.518693923950195
    8. '<|end|>' → logprob: -10.018693923950195
    9. ' (' → logprob: -10.143693923950195
    10. '(s' → logprob: -10.518693923950195

Token 34: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.313400000333786
    2. '):' → logprob: -1.3134000301361084
    3. ' )' → logprob: -10.188400268554688
    4. ' ):' → logprob: -10.438400268554688
    5. '):
' → logprob: -10.438400268554688
    6. ')->' → logprob: -11.313400268554688
    7. 'self' → logprob: -12.188400268554688
    8. '   ' → logprob: -12.188400268554688
    9. ')>' → logprob: -12.313400268554688
    10. ' ' → logprob: -12.688400268554688

Token 35: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.8122429251670837
    2. ':' → logprob: -1.4372429847717285
    3. ' ->' → logprob: -1.5622429847717285
    4. '(self' → logprob: -3.0622429847717285
    5. ')' → logprob: -3.3122429847717285
    6. ')->' → logprob: -4.3122429847717285
    7. '):' → logprob: -5.5622429847717285
    8. 'self' → logprob: -6.0622429847717285
    9. '():' → logprob: -6.3122429847717285
    10. '   ' → logprob: -6.3122429847717285

Token 36: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.01416398212313652
    2. 'int' → logprob: -4.264163970947266
    3. ' ' → logprob: -14.639163970947266
    4. '[int' → logprob: -17.139163970947266
    5. ':int' → logprob: -18.139163970947266
    6. ' ' → logprob: -19.139163970947266
    7. '	int' → logprob: -19.764163970947266
    8. ' None' → logprob: -19.764163970947266
    9. '  ' → logprob: -19.764163970947266
    10. '   ' → logprob: -20.014163970947266

Token 37: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01495205145329237
    2. '():' → logprob: -4.264952182769775
    3. '):' → logprob: -7.514952182769775
    4. ':return' → logprob: -8.889951705932617
    5. '       ' → logprob: -10.389951705932617
    6. ':
' → logprob: -10.639951705932617
    7. ' :' → logprob: -11.264951705932617
    8. '   ' → logprob: -11.764951705932617
    9. '(' → logprob: -12.014951705932617
    10. 'self' → logprob: -12.389951705932617

Token 38: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004848869051784277
    2. ' return' → logprob: -5.754848957061768
    3. '   ' → logprob: -7.379848957061768
    4. 'return' → logprob: -7.629848957061768
    5. '    ' → logprob: -8.37984848022461
    6. 'len' → logprob: -9.50484848022461
    7. ' len' → logprob: -9.62984848022461
    8. '        ' → logprob: -9.75484848022461
    9. ' ' → logprob: -10.62984848022461
    10. '<|end|>' → logprob: -11.00484848022461

Token 39: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20348414778709412
    2. ' return' → logprob: -1.7034841775894165
    3. '       ' → logprob: -6.203484058380127
    4. 'len' → logprob: -10.453484535217285
    5. ' len' → logprob: -11.328484535217285
    6. '```' → logprob: -12.453484535217285
    7. '   ' → logprob: -14.078484535217285
    8. ' ' → logprob: -15.078484535217285
    9. '        ' → logprob: -16.70348358154297
    10. '0' → logprob: -16.82848358154297

Token 40: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0019298245897516608
    2. 'len' → logprob: -6.251929759979248
    3. ' self' → logprob: -13.626930236816406
    4. ' ' → logprob: -17.376930236816406
    5. '(len' → logprob: -17.626930236816406
    6. '	len' → logprob: -18.751930236816406
    7. '=len' → logprob: -19.001930236816406
    8. 'self' → logprob: -19.001930236816406
    9. '[len' → logprob: -19.251930236816406
    10. ' ' → logprob: -20.751930236816406

Token 41: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0297523383051157
    2. '(' → logprob: -3.529752254486084
    3. '(this' → logprob: -13.904752731323242
    4. '(

' → logprob: -14.779752731323242
    5. '(
' → logprob: -15.404752731323242
    6. 'self' → logprob: -16.154752731323242
    7. ' (' → logprob: -16.279752731323242
    8. '(s' → logprob: -16.654752731323242
    9. '()' → logprob: -18.904752731323242
    10. '((' → logprob: -19.029752731323242

Token 42: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -7.896309739408025e-07
    2. ')._' → logprob: -14.625000953674316
    3. '.' → logprob: -15.250000953674316
    4. '.__' → logprob: -17.75
    5. ' .' → logprob: -17.75
    6. ')' → logprob: -18.125
    7. 'self' → logprob: -18.375
    8. ']._' → logprob: -18.375
    9. '."_' → logprob: -18.5
    10. ')_' → logprob: -19.875

Token 43: 'digits' (ID: 135574)
  Prédit: 'digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -8.895480277715251e-06
    2. '_digits' → logprob: -11.750008583068848
    3. 'digit' → logprob: -14.750008583068848
    4. 'igits' → logprob: -14.875008583068848
    5. 'd' → logprob: -15.875008583068848
    6. 'dig' → logprob: -17.125009536743164
    7. ' digits' → logprob: -18.375009536743164
    8. '_' → logprob: -18.375009536743164
    9. 'dots' → logprob: -19.000009536743164
    10. '_d' → logprob: -19.125009536743164

Token 44: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -15.625000953674316
    3. ')
' → logprob: -16.125
    4. '   ' → logprob: -16.125
    5. '()' → logprob: -16.25
    6. '())' → logprob: -16.5
    7. '[' → logprob: -17.0
    8. '`)' → logprob: -17.375
    9. '))' → logprob: -17.5
    10. '}' → logprob: -18.0

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5162750482559204
    2. '
' → logprob: -1.0162750482559204
    3. '    
' → logprob: -3.891274929046631
    4. '```' → logprob: -5.266274929046631
    5. 'def' → logprob: -5.391274929046631
    6. ' 
' → logprob: -5.641274929046631
    7. ' def' → logprob: -6.141274929046631
    8. '\n' → logprob: -6.516274929046631
    9. '  
' → logprob: -7.016274929046631
    10. '<|end|>' → logprob: -7.016274929046631

Token 46: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.034398097544908524
    2. ' def' → logprob: -3.784398078918457
    3. '   ' → logprob: -4.534398078918457
    4. '
' → logprob: -8.284398078918457
    5. '```' → logprob: -9.659398078918457
    6. '    
' → logprob: -10.284398078918457
    7. '	def' → logprob: -12.909398078918457
    8. ' ' → logprob: -13.159398078918457
    9. ' 
' → logprob: -13.909398078918457
    10. '  
' → logprob: -15.034398078918457

Token 47: ' digit' (ID: 19181)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.2637142241001129
    2. ' def' → logprob: -1.6387141942977905
    3. ' digits' → logprob: -4.63871431350708
    4. ' sum' → logprob: -5.13871431350708
    5. ' ' → logprob: -5.51371431350708
    6. ' append' → logprob: -6.01371431350708
    7. 'get' → logprob: -6.13871431350708
    8. 'def' → logprob: -6.26371431350708
    9. ' digit' → logprob: -6.38871431350708
    10. ' add' → logprob: -6.63871431350708

Token 48: '_at' (ID: 8254)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08178024739027023
    2. '_at' → logprob: -2.581780195236206
    3. '(self' → logprob: -6.081780433654785
    4. 'At' → logprob: -7.581780433654785
    5. '(' → logprob: -9.831780433654785
    6. ' at' → logprob: -11.706780433654785
    7. '(s' → logprob: -11.956780433654785
    8. '_by' → logprob: -12.206780433654785
    9. '_s' → logprob: -12.456780433654785
    10. '```' → logprob: -12.706780433654785

Token 49: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006341706961393356
    2. '(self' → logprob: -5.631341934204102
    3. ' (' → logprob: -6.006341934204102
    4. '<|end|>' → logprob: -9.006341934204102
    5. '(
' → logprob: -10.256341934204102
    6. '(index' → logprob: -10.631341934204102
    7. '[' → logprob: -11.131341934204102
    8. ' ' → logprob: -11.256341934204102
    9. '<|end|>' → logprob: -11.256341934204102
    10. ')' → logprob: -11.381341934204102

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5316243171691895
    2. ')' → logprob: -1.7816243171691895
    3. '[' → logprob: -1.9066243171691895
    4. ' )' → logprob: -2.7816243171691895
    5. ' ,' → logprob: -3.5316243171691895
    6. '(' → logprob: -6.1566243171691895
    7. ' (' → logprob: -7.2816243171691895
    8. ' ' → logprob: -7.6566243171691895
    9. ' [' → logprob: -8.781623840332031
    10. '   ' → logprob: -8.906623840332031

Token 51: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.6944308280944824
    2. ' index' → logprob: -0.6944308280944824
    3. ')' → logprob: -7.944430828094482
    4. ' self' → logprob: -8.06943130493164
    5. ' idx' → logprob: -8.19443130493164
    6. 'self' → logprob: -8.31943130493164
    7. 'idx' → logprob: -10.31943130493164
    8. ' )' → logprob: -10.94443130493164
    9. ' ' → logprob: -11.19443130493164
    10. '   ' → logprob: -11.81943130493164

Token 52: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020435559563338757
    2. '):' → logprob: -6.627043724060059
    3. ' )' → logprob: -8.252043724060059
    4. ':' → logprob: -8.377043724060059
    5. '   ' → logprob: -9.752043724060059
    6. '<|end|>' → logprob: -9.877043724060059
    7. '<|end|>' → logprob: -10.252043724060059
    8. '):
' → logprob: -10.377043724060059
    9. '[' → logprob: -11.002043724060059
    10. '       ' → logprob: -11.877043724060059

Token 53: ' int' (ID: 677)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5929857492446899
    2. 'int' → logprob: -1.09298574924469
    3. ' )' → logprob: -2.5929856300354004
    4. ' int' → logprob: -3.3429856300354004
    5. '[int' → logprob: -7.0929856300354
    6. ':int' → logprob: -7.3429856300354
    7. ']int' → logprob: -8.217986106872559
    8. '<|end|>' → logprob: -10.217986106872559
    9. '<int' → logprob: -10.342986106872559
    10. ' ' → logprob: -10.467986106872559

Token 54: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011076359078288078
    2. '):' → logprob: -4.5110764503479
    3. ' )' → logprob: -11.511075973510742
    4. '   ' → logprob: -11.511075973510742
    5. ')->' → logprob: -12.261075973510742
    6. '):
' → logprob: -13.511075973510742
    7. ':' → logprob: -13.886075973510742
    8. ' ):' → logprob: -14.136075973510742
    9. '       ' → logprob: -15.011075973510742
    10. ' ' → logprob: -15.761075973510742

Token 55: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26315736770629883
    2. ')' → logprob: -1.6381573677062988
    3. ' ->' → logprob: -4.388157367706299
    4. '->' → logprob: -4.513157367706299
    5. '):' → logprob: -4.888157367706299
    6. ')->' → logprob: -5.388157367706299
    7. ':return' → logprob: -7.263157367706299
    8. ' :' → logprob: -8.01315689086914
    9. '   ' → logprob: -8.13815689086914
    10. '       ' → logprob: -9.76315689086914

Token 56: ' int' (ID: 677)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5895349383354187
    2. ' int' → logprob: -0.8395349383354187
    3. 'self' → logprob: -4.839534759521484
    4. 'int' → logprob: -5.214534759521484
    5. ' ' → logprob: -9.339534759521484
    6. ' return' → logprob: -10.089534759521484
    7. ' ' → logprob: -11.714534759521484
    8. '    ' → logprob: -12.839534759521484
    9. ':int' → logprob: -12.839534759521484
    10. '       ' → logprob: -12.964534759521484

Token 57: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004229527898132801
    2. '):' → logprob: -5.504229545593262
    3. ':return' → logprob: -10.129229545593262
    4. ':
' → logprob: -10.254229545593262
    5. ')' → logprob: -10.504229545593262
    6. '():' → logprob: -11.129229545593262
    7. '<|end|>' → logprob: -11.629229545593262
    8. ' :' → logprob: -11.754229545593262
    9. '       ' → logprob: -12.129229545593262
    10. '   ' → logprob: -12.504229545593262

Token 58: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023660380393266678
    2. ' return' → logprob: -3.77366042137146
    3. 'return' → logprob: -8.023660659790039
    4. '   ' → logprob: -10.273660659790039
    5. ' if' → logprob: -11.023660659790039
    6. ' ' → logprob: -11.648660659790039
    7. '    ' → logprob: -12.273660659790039
    8. ' 
' → logprob: -12.273660659790039
    9. '        
' → logprob: -12.898660659790039
    10. '        ' → logprob: -13.023660659790039

Token 59: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.203903928399086
    2. ' return' → logprob: -1.7039039134979248
    3. ' if' → logprob: -6.828904151916504
    4. '       ' → logprob: -7.203904151916504
    5. 'if' (adapté à ' if') → logprob: -7.328904151916504
    6. '```' → logprob: -12.328904151916504
    7. 'self' → logprob: -15.203904151916504
    8. '   ' → logprob: -15.453904151916504
    9. '	return' → logprob: -15.953904151916504
    10. ':return' → logprob: -16.078903198242188

Token 60: ' ' (ID: 220)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.31822076439857483
    2. ' ' → logprob: -1.8182207345962524
    3. 'index' → logprob: -2.318220853805542
    4. '0' → logprob: -4.443220615386963
    5. ' not' → logprob: -11.193221092224121
    6. '(index' → logprob: -12.318221092224121
    7. ' ' → logprob: -12.693221092224121
    8. '<|end|>' → logprob: -12.818221092224121
    9. '#index' → logprob: -12.943221092224121
    10. '_index' → logprob: -12.943221092224121

Token 61: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5908643007278442
    2. 'index' → logprob: -0.8408643007278442
    3. ' index' → logprob: -4.340864181518555
    4. ' ' → logprob: -6.340864181518555
    5. '   ' → logprob: -11.590864181518555
    6. '(index' → logprob: -11.965864181518555
    7. '	index' → logprob: -12.590864181518555
    8. 'not' → logprob: -13.090864181518555
    9. ' not' → logprob: -13.715864181518555
    10. '#index' → logprob: -13.965864181518555

Token 62: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.004080420359969139
    2. '<=' → logprob: -5.504080295562744
    3. ' <' → logprob: -13.754080772399902
    4. ' >' → logprob: -14.504080772399902
    5. ' ' → logprob: -16.004079818725586
    6. '<' → logprob: -16.254079818725586
    7. '>' → logprob: -16.379079818725586
    8. ' ' → logprob: -17.004079818725586
    9. '<|end|>' → logprob: -17.379079818725586
    10. ' ≤' → logprob: -17.879079818725586

Token 63: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.3132616877555847
    2. 'index' → logprob: -1.3132617473602295
    3. '	index' → logprob: -17.938261032104492
    4. ' ' → logprob: -18.688261032104492
    5. '#index' → logprob: -18.938261032104492
    6. '_index' → logprob: -19.063261032104492
    7. ' ' → logprob: -20.188261032104492
    8. 'Index' → logprob: -20.563261032104492
    9. '(index' → logprob: -20.563261032104492
    10. '   ' → logprob: -20.563261032104492

Token 64: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.016284562647342682
    2. '<' → logprob: -4.141284465789795
    3. ' and' → logprob: -8.516284942626953
    4. 'and' → logprob: -10.516284942626953
    5. ' ' → logprob: -11.141284942626953
    6. '<|end|>' → logprob: -12.516284942626953
    7. '<len' → logprob: -13.141284942626953
    8. ' <",' → logprob: -14.266284942626953
    9. ' <
' → logprob: -14.391284942626953
    10. ' less' → logprob: -14.766284942626953

Token 65: ' self' (ID: 1051)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.948164701461792
    2. ' self' → logprob: -1.448164701461792
    3. 'self' → logprob: -1.448164701461792
    4. 'len' → logprob: -1.948164701461792
    5. '   ' → logprob: -11.948164939880371
    6. ' ' → logprob: -13.573164939880371
    7. '       ' → logprob: -14.323164939880371
    8. '	len' → logprob: -14.823164939880371
    9. ' ' → logprob: -14.948164939880371
    10. '(len' → logprob: -15.073164939880371

Token 66: '.length' (ID: 3116)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.025482390075922012
    2. '.length' → logprob: -3.775482416152954
    3. '.' → logprob: -6.275482177734375
    4. '   ' → logprob: -8.900482177734375
    5. ' .' → logprob: -9.150482177734375
    6. '_length' → logprob: -10.275482177734375
    7. '       ' → logprob: -10.400482177734375
    8. 'length' → logprob: -11.025482177734375
    9. '.__' → logprob: -12.275482177734375
    10. ' ' → logprob: -12.400482177734375

Token 67: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0022864490747451782
    2. ':' → logprob: -6.502286434173584
    3. '():
' → logprob: -7.502286434173584
    4. '()' → logprob: -9.127286911010742
    5. '):' → logprob: -9.377286911010742
    6. ' ():' → logprob: -10.502286911010742
    7. '       ' → logprob: -11.877286911010742
    8. '   ' → logprob: -13.252286911010742
    9. '():
' → logprob: -14.127286911010742
    10. ']:' → logprob: -14.877286911010742

Token 68: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17193041741847992
    2. ':
' → logprob: -1.9219304323196411
    3. '           ' → logprob: -4.671930313110352
    4. ':return' → logprob: -6.171930313110352
    5. ' :
' → logprob: -9.421930313110352
    6. ' :' → logprob: -10.046930313110352
    7. '       ' → logprob: -10.296930313110352
    8. ':
' → logprob: -11.046930313110352
    9. ',' → logprob: -12.421930313110352
    10. ':

' → logprob: -12.546930313110352

Token 69: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.566074013710022
    2. ' return' → logprob: -1.066074013710022
    3. '           ' → logprob: -2.4410738945007324
    4. '               ' → logprob: -7.566073894500732
    5. '       ' → logprob: -8.44107437133789
    6. '   ' → logprob: -10.06607437133789
    7. ':return' → logprob: -10.94107437133789
    8. ' 
' → logprob: -11.94107437133789
    9. '	return' → logprob: -12.19107437133789
    10. ' ' → logprob: -12.44107437133789

Token 70: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.20141363143920898
    2. 'self' → logprob: -1.701413631439209
    3. ' ' → logprob: -16.326414108276367
    4. '	self' → logprob: -16.451414108276367
    5. '_self' → logprob: -17.576414108276367
    6. '           ' → logprob: -17.826414108276367
    7. '       ' → logprob: -17.951414108276367
    8. ' ' → logprob: -18.326414108276367
    9. '(self' → logprob: -19.326414108276367
    10. '   ' → logprob: -19.326414108276367

Token 71: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -8.061054359131958e-06
    2. '.' → logprob: -12.250007629394531
    3. '   ' → logprob: -13.625007629394531
    4. '       ' → logprob: -13.750007629394531
    5. ' .' → logprob: -14.500007629394531
    6. ']._' → logprob: -15.875007629394531
    7. ')._' → logprob: -15.875007629394531
    8. '_' → logprob: -16.50000762939453
    9. ' ' → logprob: -17.12500762939453
    10. '.__' → logprob: -17.50000762939453

Token 72: 'digits' (ID: 135574)
  Prédit: 'digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.0008345239912159741
    2. '_digits' → logprob: -7.1258344650268555
    3. 'digit' → logprob: -10.625834465026855
    4. 'd' → logprob: -13.375834465026855
    5. ' digits' → logprob: -13.500834465026855
    6. 'dig' → logprob: -13.625834465026855
    7. 'igits' → logprob: -14.625834465026855
    8. '_digit' → logprob: -15.000834465026855
    9. '_d' → logprob: -15.250834465026855
    10. '_' → logprob: -16.500835418701172

Token 73: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -7.226628895296017e-06
    2. '[' → logprob: -11.875007629394531
    3. ' [' → logprob: -16.00000762939453
    4. '[Index' → logprob: -16.37500762939453
    5. 'index' → logprob: -17.00000762939453
    6. '```' → logprob: -18.12500762939453
    7. '   ' → logprob: -18.50000762939453
    8. '[idx' → logprob: -18.75000762939453
    9. '       ' → logprob: -19.25000762939453
    10. ' index' → logprob: -20.12500762939453

Token 74: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.017059724777936935
    2. ')' → logprob: -4.267059803009033
    3. ']
' → logprob: -6.267059803009033
    4. '}' → logprob: -7.392059803009033
    5. '       ' → logprob: -8.142059326171875
    6. ')
' → logprob: -10.392059326171875
    7. ' ]' → logprob: -10.642059326171875
    8. '<|end|>' → logprob: -11.392059326171875
    9. '}
' → logprob: -12.142059326171875
    10. '<|end|>' → logprob: -12.517059326171875

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007960468647070229
    2. '        
' → logprob: -8.7507963180542
    3. 'else' → logprob: -9.0007963180542
    4. '        ' → logprob: -9.0007963180542
    5. '	' → logprob: -9.6257963180542
    6. ' else' → logprob: -9.8757963180542
    7. '    ' → logprob: -9.8757963180542
    8. '
' → logprob: -10.0007963180542
    9. '   ' → logprob: -10.1257963180542
    10. '\n' → logprob: -10.2507963180542

Token 76: ' raise' (ID: 9338)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.43303459882736206
    2. '       ' → logprob: -1.3080346584320068
    3. 'raise' (adapté à ' raise') → logprob: -2.683034658432007
    4. ' else' → logprob: -5.183034420013428
    5. '   ' → logprob: -5.558034420013428
    6. 'return' → logprob: -6.183034420013428
    7. ' raise' → logprob: -7.183034420013428
    8. '
' → logprob: -8.933034896850586
    9. '```' → logprob: -9.058034896850586
    10. '        
' → logprob: -9.683034896850586

Token 77: ' Index' (ID: 14580)
  Prédit: ' Index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Index' → logprob: -7.584239938296378e-06
    2. 'Index' → logprob: -11.875007629394531
    3. ' Value' → logprob: -15.125007629394531
    4. ' ' → logprob: -15.500007629394531
    5. ' Ind' → logprob: -17.00000762939453
    6. '_Index' → logprob: -18.37500762939453
    7. '(Index' → logprob: -18.37500762939453
    8. ' I' → logprob: -19.00000762939453
    9. ' Indexed' → logprob: -19.25000762939453
    10. ' Inde' → logprob: -19.50000762939453

Token 78: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -5.796184723294573e-06
    2. 'rror' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.2500057220459
    4. 'Erro' → logprob: -17.1250057220459
    5. 'Index' → logprob: -17.3750057220459
    6. 'Out' → logprob: -17.3750057220459
    7. '       ' → logprob: -17.5000057220459
    8. 'error' → logprob: -18.3750057220459
    9. '	Error' → logprob: -18.6250057220459
    10. 'Er' → logprob: -18.6250057220459

Token 79: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.01707424968481064
    2. '('' → logprob: -4.142074108123779
    3. '(' → logprob: -6.892074108123779
    4. '(
' → logprob: -11.267074584960938
    5. '(f' → logprob: -12.142074584960938
    6. '       ' → logprob: -13.767074584960938
    7. '   ' → logprob: -13.767074584960938
    8. '("")' → logprob: -14.267074584960938
    9. '()' → logprob: -14.392074584960938
    10. '"' → logprob: -14.642074584960938

Token 80: 'Index' (ID: 2368)
  Prédit: 'Index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Index' → logprob: -0.10723625123500824
    2. 'index' → logprob: -2.35723614692688
    3. 'Digit' → logprob: -5.107236385345459
    4. 'list' → logprob: -7.732236385345459
    5. 'digit' → logprob: -7.732236385345459
    6. 'string' → logprob: -10.4822359085083
    7. ' index' → logprob: -10.9822359085083
    8. '_index' → logprob: -11.9822359085083
    9. ' Index' → logprob: -12.4822359085083
    10. 'List' → logprob: -12.6072359085083

Token 81: ' out' (ID: 842)
  Prédit: ' out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' out' → logprob: -1.5690089639974758e-05
    2. 'out' → logprob: -11.625015258789062
    3. ' ' → logprob: -12.250015258789062
    4. ' index' → logprob: -14.875015258789062
    5. '	out' → logprob: -15.250015258789062
    6. '   ' → logprob: -15.250015258789062
    7. ' ou' → logprob: -15.375015258789062
    8. ' is' → logprob: -15.500015258789062
    9. ' ' → logprob: -15.750015258789062
    10. 'Error' → logprob: -15.875015258789062

Token 82: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.008950409479439259
    2. 'of' → logprob: -4.758950233459473
    3. '    ' → logprob: -9.383950233459473
    4. '   ' → logprob: -9.633950233459473
    5. '_of' → logprob: -9.758950233459473
    6. ' ' → logprob: -10.508950233459473
    7. '  ' → logprob: -10.508950233459473
    8. 'Of' → logprob: -10.508950233459473
    9. '        ' → logprob: -11.383950233459473
    10. '       ' → logprob: -11.633950233459473

Token 83: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.027007192373275757
    2. ' bounds' → logprob: -4.277007102966309
    3. 'range' → logprob: -4.402007102966309
    4. 'bounds' → logprob: -8.027007102966309
    5. ' rang' → logprob: -10.277007102966309
    6. ' bound' → logprob: -10.277007102966309
    7. '	range' → logprob: -10.777007102966309
    8. ' ' → logprob: -11.027007102966309
    9. '_range' → logprob: -11.277007102966309
    10. ' r' → logprob: -11.402007102966309

Token 84: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00015788905147928745
    2. ')' → logprob: -9.125158309936523
    3. '"' → logprob: -10.250158309936523
    4. ')")' → logprob: -11.875158309936523
    5. '")
' → logprob: -12.625158309936523
    6. '}")' → logprob: -13.000158309936523
    7. '')' → logprob: -15.125158309936523
    8. ')"' → logprob: -15.500158309936523
    9. ' ")' → logprob: -15.625158309936523
    10. '")

' → logprob: -16.375158309936523

Token 85: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34804612398147583
    2. ' 
' → logprob: -1.848046064376831
    3. '```' → logprob: -2.973046064376831
    4. '   ' → logprob: -3.223046064376831
    5. '    
' → logprob: -4.09804630279541
    6. '  
' → logprob: -4.34804630279541
    7. '\' → logprob: -5.72304630279541
    8. ' ' → logprob: -5.72304630279541
    9. '\n' → logprob: -5.97304630279541
    10. '' → logprob: -6.59804630279541

Token 86: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2789040505886078
    2. ' 
' → logprob: -2.6539039611816406
    3. '    
' → logprob: -3.1539039611816406
    4. '
' → logprob: -3.2789039611816406
    5. 'def' (adapté à ' def') → logprob: -3.2789039611816406
    6. '```' → logprob: -3.4039039611816406
    7. ' def' → logprob: -4.403903961181641
    8. ' ' → logprob: -5.778903961181641
    9. '  
' → logprob: -6.278903961181641
    10. '   
' → logprob: -6.903903961181641

Token 87: ' __' (ID: 2516)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.4223260283470154
    2. ' def' → logprob: -1.4223260879516602
    3. ' ' → logprob: -3.17232608795166
    4. '_' → logprob: -3.67232608795166
    5. ' apply' → logprob: -4.42232608795166
    6. '_map' → logprob: -4.67232608795166
    7. ' filter' → logprob: -5.17232608795166
    8. ' _' → logprob: -6.92232608795166
    9. ' append' → logprob: -6.92232608795166
    10. ' add' → logprob: -7.17232608795166

Token 88: 'iter' (ID: 2340)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6367475986480713
    2. 'len' → logprob: -1.5117475986480713
    3. 'getitem' → logprob: -1.6367475986480713
    4. 'str' → logprob: -4.261747360229492
    5. 's' → logprob: -4.886747360229492
    6. 'g' → logprob: -4.886747360229492
    7. 'e' → logprob: -5.011747360229492
    8. 'i' → logprob: -5.136747360229492
    9. 'eq' → logprob: -5.761747360229492
    10. 'repr' → logprob: -5.761747360229492

Token 89: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.47783708572387695
    2. '__(' → logprob: -0.977837085723877
    3. '__(
' → logprob: -5.977837085723877
    4. '_' → logprob: -7.227837085723877
    5. '__('' → logprob: -8.852836608886719
    6. '__((' → logprob: -9.352836608886719
    7. '(' → logprob: -9.477836608886719
    8. '(self' → logprob: -10.227836608886719
    9. '__(*' → logprob: -10.477836608886719
    10. '__[' → logprob: -10.602836608886719

Token 90: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.5570885807392187e-05
    2. ')' → logprob: -11.125015258789062
    3. ' self' → logprob: -15.000015258789062
    4. '   ' → logprob: -15.625015258789062
    5. 's' → logprob: -16.625015258789062
    6. '       ' → logprob: -17.000015258789062
    7. '
' → logprob: -17.500015258789062
    8. '):
' → logprob: -17.750015258789062
    9. ' ' → logprob: -17.875015258789062
    10. '(self' → logprob: -18.125015258789062

Token 91: '):
' (ID: 1883)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.230093315243721
    2. '__(' → logprob: -2.605093240737915
    3. '__:' → logprob: -2.980093240737915
    4. '):' → logprob: -3.105093240737915
    5. '__)' → logprob: -4.230093479156494
    6. ')' → logprob: -4.605093479156494
    7. 'self' → logprob: -5.980093479156494
    8. '_' → logprob: -6.230093479156494
    9. ')__' → logprob: -6.605093479156494
    10. '(self' → logprob: -6.980093479156494

Token 92: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0042856731452047825
    2. 'return' → logprob: -5.75428581237793
    3. ' return' → logprob: -8.00428581237793
    4. '   ' → logprob: -8.12928581237793
    5. 'yield' → logprob: -8.12928581237793
    6. ' for' → logprob: -10.25428581237793
    7. 'iter' → logprob: -10.37928581237793
    8. '    ' → logprob: -10.87928581237793
    9. '```' → logprob: -11.12928581237793
    10. 'for' → logprob: -11.12928581237793

Token 93: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6399319767951965
    2. '   ' → logprob: -1.2649319171905518
    3. '       ' → logprob: -2.2649319171905518
    4. '
' → logprob: -3.0149319171905518
    5. 'iter' → logprob: -3.6399319171905518
    6. '    
' → logprob: -5.764932155609131
    7. 'yield' → logprob: -6.014932155609131
    8. ' return' → logprob: -6.139932155609131
    9. '```' → logprob: -6.889932155609131
    10. ' iter' → logprob: -6.889932155609131

Token 94: ' iter' (ID: 10621)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.5759763121604919
    2. ' iter' → logprob: -0.8259763121604919
    3. '(iter' → logprob: -10.825976371765137
    4. '	iter' → logprob: -11.825976371765137
    5. '_iter' → logprob: -12.075976371765137
    6. '   ' → logprob: -12.575976371765137
    7. '_' → logprob: -16.07597541809082
    8. ' ' → logprob: -16.57597541809082
    9. '.iter' → logprob: -16.70097541809082
    10. 'self' → logprob: -16.82597541809082

Token 95: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0011706985533237457
    2. '(' → logprob: -6.751170635223389
    3. 'self' → logprob: -15.376171112060547
    4. ' (' → logprob: -16.501171112060547
    5. '(s' → logprob: -16.751171112060547
    6. '(
' → logprob: -17.001171112060547
    7. '(this' → logprob: -18.001171112060547
    8. '	self' → logprob: -18.126171112060547
    9. '<|end|>' → logprob: -18.501171112060547
    10. ',self' → logprob: -18.626171112060547

Token 96: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -3.054500666621607e-06
    2. '.' → logprob: -13.37500286102295
    3. ' .' → logprob: -13.75000286102295
    4. ')._' → logprob: -15.37500286102295
    5. '   ' → logprob: -16.125003814697266
    6. ']._' → logprob: -18.250003814697266
    7. ')' → logprob: -18.375003814697266
    8. '._
' → logprob: -18.375003814697266
    9. ' ' → logprob: -18.500003814697266
    10. '.__' → logprob: -19.000003814697266

Token 97: 'digits' (ID: 135574)
  Prédit: 'digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -3.6550729419104755e-05
    2. '_digits' → logprob: -10.250036239624023
    3. 'digit' → logprob: -14.750036239624023
    4. 'd' → logprob: -14.875036239624023
    5. 'igits' → logprob: -15.625036239624023
    6. 'dig' → logprob: -16.375036239624023
    7. ' digits' → logprob: -16.375036239624023
    8. 'dots' → logprob: -17.875036239624023
    9. '_d' → logprob: -19.125036239624023
    10. '_' → logprob: -19.500036239624023

Token 98: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -16.25
    3. ' )' → logprob: -17.0
    4. '}' → logprob: -18.125
    5. '   ' → logprob: -18.875
    6. '())' → logprob: -19.625
    7. ')`' → logprob: -19.75
    8. '))' → logprob: -19.875
    9. '()' → logprob: -19.875
    10. '),' → logprob: -20.25

Token 99: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6012481451034546
    2. '   ' → logprob: -0.8512481451034546
    3. 'def' → logprob: -4.101248264312744
    4. '    
' → logprob: -5.976248264312744
    5. ' ' → logprob: -6.476248264312744
    6. ' 
' → logprob: -6.726248264312744
    7. '```' → logprob: -6.851248264312744
    8. ' def' → logprob: -7.351248264312744
    9. '<|end|>' → logprob: -8.226247787475586
    10. '

' → logprob: -8.476247787475586

Token 100: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.006932043470442295
    2. ' def' → logprob: -5.256932258605957
    3. '   ' → logprob: -6.381932258605957
    4. ' ' → logprob: -13.131932258605957
    5. '	def' → logprob: -14.256932258605957
    6. '
' → logprob: -14.381932258605957
    7. '    
' → logprob: -14.506932258605957
    8. 'd' → logprob: -14.756932258605957
    9. ' 
' → logprob: -15.381932258605957
    10. '```' → logprob: -15.631932258605957

Token 101: ' __' (ID: 2516)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7181057929992676
    2. ' map' → logprob: -1.8431057929992676
    3. '_map' → logprob: -1.8431057929992676
    4. ' _' → logprob: -3.0931057929992676
    5. '__' → logprob: -3.4681057929992676
    6. ' __' → logprob: -3.5931057929992676
    7. '_filter' → logprob: -4.218105792999268
    8. ' filter' → logprob: -4.343105792999268
    9. 'append' → logprob: -4.343105792999268
    10. ' append' → logprob: -4.718105792999268

Token 102: 'repr' (ID: 67002)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.5892487168312073
    2. 'len' → logprob: -0.8392487168312073
    3. 'repr' → logprob: -4.4642486572265625
    4. 'str' → logprob: -6.8392486572265625
    5. 'getitem' → logprob: -7.8392486572265625
    6. 'le' → logprob: -8.964248657226562
    7. 'l' → logprob: -9.964248657226562
    8. 'lt' → logprob: -10.214248657226562
    9. 're' → logprob: -12.089248657226562
    10. 'next' → logprob: -12.089248657226562

Token 103: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.2687958776950836
    2. '__' → logprob: -1.5187958478927612
    3. '__('' → logprob: -4.768795967102051
    4. '__(
' → logprob: -4.893795967102051
    5. '__("' → logprob: -7.518795967102051
    6. '__((' → logprob: -8.89379596710205
    7. '__(*' → logprob: -11.26879596710205
    8. '__.__' → logprob: -11.39379596710205
    9. '___' → logprob: -11.51879596710205
    10. '(' → logprob: -11.76879596710205

Token 104: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002993544621858746
    2. ')' → logprob: -8.375299453735352
    3. ' self' → logprob: -9.625299453735352
    4. '(self' → logprob: -14.125299453735352
    5. ' ' → logprob: -14.750299453735352
    6. '
' → logprob: -14.875299453735352
    7. '_self' → logprob: -15.125299453735352
    8. '

' → logprob: -15.250299453735352
    9. 'Self' → logprob: -15.625299453735352
    10. '<|end|>' → logprob: -16.12529945373535

Token 105: '):
' (ID: 1883)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2824171483516693
    2. '__)' → logprob: -1.7824171781539917
    3. ')' → logprob: -3.532417058944702
    4. '__(' → logprob: -3.907417058944702
    5. '__('' → logprob: -4.532417297363281
    6. 'self' → logprob: -5.157417297363281
    7. '(self' → logprob: -5.407417297363281
    8. '__(
' → logprob: -5.907417297363281
    9. '__("' → logprob: -7.032417297363281
    10. '__:' → logprob: -7.407417297363281

Token 106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11007006466388702
    2. ' f' → logprob: -2.860069990158081
    3. 'f' → logprob: -3.235069990158081
    4. 'return' → logprob: -5.73507022857666
    5. '   ' → logprob: -6.11007022857666
    6. ' return' → logprob: -6.86007022857666
    7. '"' → logprob: -7.23507022857666
    8. ''' → logprob: -9.23507022857666
    9. 'self' → logprob: -9.61007022857666
    10. '    ' → logprob: -9.86007022857666

Token 107: ' return' (ID: 622)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.4900849461555481
    2. 'f' → logprob: -1.1150848865509033
    3. 'return' (adapté à ' return') → logprob: -3.4900848865509033
    4. '       ' → logprob: -4.365085124969482
    5. ' return' → logprob: -4.740085124969482
    6. '   ' → logprob: -4.990085124969482
    7. ''f' → logprob: -7.990085124969482
    8. '"' → logprob: -8.865084648132324
    9. ''' → logprob: -9.365084648132324
    10. 'repr' → logprob: -9.990084648132324

Token 108: ' ''.' (ID: 105941)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.07889430224895477
    2. ' f' → logprob: -2.5788943767547607
    3. ''f' → logprob: -12.57889461517334
    4. '"' → logprob: -14.45389461517334
    5. '	f' → logprob: -15.82889461517334
    6. ' ' → logprob: -16.203893661499023
    7. 'repr' → logprob: -16.328893661499023
    8. '(f' → logprob: -16.578893661499023
    9. ''' → logprob: -16.703893661499023
    10. ' repr' → logprob: -17.328893661499023

Token 109: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.0683535037969705e-05
    2. 'jo' → logprob: -11.87501049041748
    3. ' join' → logprob: -13.00001049041748
    4. 'j' → logprob: -14.87501049041748
    5. ''.' → logprob: -15.50001049041748
    6. '''.' → logprob: -15.62501049041748
    7. '```' → logprob: -15.75001049041748
    8. '.join' → logprob: -16.125011444091797
    9. 'Join' → logprob: -16.500011444091797
    10. 'str' → logprob: -16.750011444091797

Token 110: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.019066844135522842
    2. '(map' → logprob: -4.26906681060791
    3. '([' → logprob: -5.89406681060791
    4. '(' → logprob: -6.39406681060791
    5. '(['' → logprob: -8.51906681060791
    6. '(f' → logprob: -9.14406681060791
    7. '(self' → logprob: -9.89406681060791
    8. 'str' → logprob: -9.89406681060791
    9. 'map' → logprob: -10.89406681060791
    10. '[str' → logprob: -11.26906681060791

Token 111: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -4.008129963040119e-06
    2. '(' → logprob: -12.625003814697266
    3. 'd' → logprob: -14.375003814697266
    4. ')d' → logprob: -16.250003814697266
    5. '(x' → logprob: -16.375003814697266
    6. '(i' → logprob: -16.875003814697266
    7. '(di' → logprob: -18.875003814697266
    8. '(
' → logprob: -19.500003814697266
    9. '	d' → logprob: -19.625003814697266
    10. 'digit' → logprob: -19.625003814697266

Token 112: ')' (ID: 8)
  Prédit: 'igit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igit' → logprob: -0.1823701411485672
    2. ')' → logprob: -1.8073701858520508
    3. ')d' → logprob: -6.307370185852051
    4. 'ig' → logprob: -7.807370185852051
    5. 'digit' → logprob: -8.55737018585205
    6. 'd' → logprob: -9.80737018585205
    7. ')**' → logprob: -9.93237018585205
    8. '(d' → logprob: -10.68237018585205
    9. ')i' → logprob: -11.30737018585205
    10. 'i' → logprob: -11.93237018585205

Token 113: ' for' (ID: 395)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.4521721601486206
    2. 'd' → logprob: -1.0771721601486206
    3. ')' → logprob: -4.70217227935791
    4. ')d' → logprob: -5.07717227935791
    5. 'digit' → logprob: -5.57717227935791
    6. ' for' → logprob: -5.95217227935791
    7. ' d' → logprob: -7.07717227935791
    8. 'for' → logprob: -7.57717227935791
    9. '	d' → logprob: -10.07717227935791
    10. ',d' → logprob: -10.45217227935791

Token 114: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.025449033826589584
    2. 'd' → logprob: -3.77544903755188
    3. '_' → logprob: -6.775448799133301
    4. '_d' → logprob: -8.0254487991333
    5. ' ' → logprob: -8.4004487991333
    6. ' _' → logprob: -8.7754487991333
    7. '<|end|>' → logprob: -9.2754487991333
    8. ' in' → logprob: -9.5254487991333
    9. '<|end|>' → logprob: -9.9004487991333
    10. 'self' → logprob: -10.2754487991333

Token 115: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20117735862731934
    2. 'in' → logprob: -2.0761773586273193
    3. '_' → logprob: -3.2011773586273193
    4. '.' → logprob: -4.701177597045898
    5. ' ' → logprob: -5.701177597045898
    6. '_d' → logprob: -7.201177597045898
    7. 'd' → logprob: -7.201177597045898
    8. 'self' → logprob: -7.826177597045898
    9. ' _' → logprob: -8.201177597045898
    10. '<|end|>' → logprob: -8.201177597045898

Token 116: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010344763286411762
    2. ' self' → logprob: -6.876034259796143
    3. '_self' → logprob: -14.0010347366333
    4. ')' → logprob: -15.6260347366333
    5. '(self' → logprob: -15.6260347366333
    6. '	self' → logprob: -16.501033782958984
    7. ' ' → logprob: -16.626033782958984
    8. '
' → logprob: -17.001033782958984
    9. 'elf' → logprob: -17.251033782958984
    10. 'd' → logprob: -17.626033782958984

Token 117: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.014802072197198868
    2. ')' → logprob: -4.264801979064941
    3. ')_' → logprob: -7.764801979064941
    4. '_' → logprob: -9.389801979064941
    5. '_digits' → logprob: -10.264801979064941
    6. '.' → logprob: -10.514801979064941
    7. ')._' → logprob: -10.639801979064941
    8. '_)' → logprob: -11.264801979064941
    9. 's' → logprob: -11.514801979064941
    10. ' _' → logprob: -12.514801979064941

Token 118: 'digits' (ID: 135574)
  Prédit: 'digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -3.4881879400927573e-05
    2. '_digits' → logprob: -11.125035285949707
    3. 'd' → logprob: -11.625035285949707
    4. 'digit' → logprob: -11.750035285949707
    5. 'igits' → logprob: -13.500035285949707
    6. 'dig' → logprob: -14.250035285949707
    7. ' digits' → logprob: -14.375035285949707
    8. 'di' → logprob: -16.37503433227539
    9. ' ' → logprob: -16.62503433227539
    10. 'dots' → logprob: -16.87503433227539

Token 119: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. '())' → logprob: -15.750000953674316
    3. '))' → logprob: -15.875000953674316
    4. ' )' → logprob: -16.0
    5. ')
' → logprob: -16.0
    6. ')`' → logprob: -16.875
    7. ')}}' → logprob: -17.375
    8. ')return' → logprob: -17.625
    9. ')}' → logprob: -17.625
    10. ')+' → logprob: -17.75

Token 120: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.047077424824237823
    2. '

' → logprob: -3.7970774173736572
    3. 'def' → logprob: -4.047077655792236
    4. '   ' → logprob: -5.422077655792236
    5. ' def' → logprob: -7.172077655792236
    6. '```' → logprob: -8.797077178955078
    7. ' ' → logprob: -8.922077178955078
    8. '    
' → logprob: -9.172077178955078
    9. ' 
' → logprob: -9.297077178955078
    10. '' → logprob: -9.797077178955078

Token 121: ' Digit' (ID: 91174)
  Prédit: ' Digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Digit' → logprob: -0.03856935724616051
    2. ' Sequence' → logprob: -3.413569450378418
    3. ' Number' → logprob: -6.413569450378418
    4. ' Transform' → logprob: -7.913569450378418
    5. ' Transformer' → logprob: -8.038569450378418
    6. ' Digital' → logprob: -8.288569450378418
    7. ' Dig' → logprob: -8.288569450378418
    8. ' String' → logprob: -8.413569450378418
    9. ' Function' → logprob: -8.538569450378418
    10. ' Integer' → logprob: -8.788569450378418

Token 122: 'Rem' (ID: 6882)
  Prédit: 'Sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -0.5122891068458557
    2. 'Processor' → logprob: -2.012289047241211
    3. 'Filter' → logprob: -2.387289047241211
    4. 'Transformer' → logprob: -2.387289047241211
    5. 'Function' → logprob: -4.137289047241211
    6. 'Transform' → logprob: -4.387289047241211
    7. 'Sum' → logprob: -4.762289047241211
    8. 'Transformation' → logprob: -5.012289047241211
    9. 'Mapper' → logprob: -6.012289047241211
    10. 'Predicate' → logprob: -6.262289047241211

Token 123: 'over' (ID: 2898)
  Prédit: 'apper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apper' → logprob: -0.7634001970291138
    2. 'over' → logprob: -0.8884001970291138
    3. 'ove' → logprob: -2.513400077819824
    4. 'oval' → logprob: -3.388400077819824
    5. 'apping' → logprob: -5.888400077819824
    6. 'inder' → logprob: -6.638400077819824
    7. 'oved' → logprob: -7.013400077819824
    8. 'ov' → logprob: -7.013400077819824
    9. 'oving' → logprob: -7.638400077819824
    10. 'ote' → logprob: -8.013400077819824

Token 124: 'Strategy' (ID: 21488)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006998073076829314
    2. '(' → logprob: -8.000699996948242
    3. ' :' → logprob: -8.375699996948242
    4. ':
' → logprob: -9.125699996948242
    5. '<|end|>' → logprob: -11.875699996948242
    6. '(D' → logprob: -12.125699996948242
    7. '):' → logprob: -12.750699996948242
    8. ':def' → logprob: -12.875699996948242
    9. '():' → logprob: -14.250699996948242
    10. '(object' → logprob: -14.250699996948242

Token 125: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005749551928602159
    2. ':
' → logprob: -7.875575065612793
    3. '(' → logprob: -9.000575065612793
    4. ' :' → logprob: -10.250575065612793
    5. '<|end|>' → logprob: -11.250575065612793
    6. '):' → logprob: -11.500575065612793
    7. '():' → logprob: -12.125575065612793
    8. ':**' → logprob: -13.625575065612793
    9. '```' → logprob: -13.750575065612793
    10. ':

' → logprob: -14.375575065612793

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009099856950342655
    2. ':' → logprob: -5.134099960327148
    3. ' def' → logprob: -6.634099960327148
    4. ':
' → logprob: -7.009099960327148
    5. '    
' → logprob: -8.134099960327148
    6. ' :
' → logprob: -8.634099960327148
    7. ' :' → logprob: -9.134099960327148
    8. ' 
' → logprob: -9.134099960327148
    9. 'def' → logprob: -9.384099960327148
    10. '
' → logprob: -9.509099960327148

Token 127: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.1463315635919571
    2. 'def' (adapté à ' def') → logprob: -2.021331548690796
    3. '   ' → logprob: -5.646331787109375
    4. '    ' → logprob: -10.146331787109375
    5. ' ' → logprob: -10.271331787109375
    6. '	def' → logprob: -11.271331787109375
    7. '
' → logprob: -11.521331787109375
    8. 'from' → logprob: -12.146331787109375
    9. ' 
' → logprob: -12.271331787109375
    10. '    
' → logprob: -12.896331787109375

Token 128: ' remove' (ID: 6234)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7574254870414734
    2. ' remove' → logprob: -1.1324255466461182
    3. ' def' → logprob: -2.632425546646118
    4. ' Callable' → logprob: -3.132425546646118
    5. 'Callable' → logprob: -3.632425546646118
    6. ' __' → logprob: -4.132425308227539
    7. '_callable' → logprob: -4.132425308227539
    8. '  ' → logprob: -5.007425308227539
    9. 'remove' → logprob: -5.257425308227539
    10. '   ' → logprob: -5.632425308227539

Token 129: '_digits' (ID: 108638)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.452691912651062
    2. '_digit' → logprob: -1.827691912651062
    3. '_' → logprob: -2.7026920318603516
    4. '(' → logprob: -2.8276920318603516
    5. '_token' → logprob: -3.5776920318603516
    6. '_one' → logprob: -3.9526920318603516
    7. '_digits' → logprob: -4.202692031860352
    8. '_next' → logprob: -4.827692031860352
    9. ' (' → logprob: -5.952692031860352
    10. '_tokens' → logprob: -6.577692031860352

Token 130: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0186097864061594
    2. '(' → logprob: -4.018610000610352
    3. '(
' → logprob: -7.768610000610352
    4. ' (' → logprob: -10.893610000610352
    5. 'self' → logprob: -11.018610000610352
    6. '(s' → logprob: -14.143610000610352
    7. '(

' → logprob: -14.643610000610352
    8. ' self' → logprob: -15.518610000610352
    9. '   ' → logprob: -15.643610000610352
    10. '(sel' → logprob: -16.39361000061035

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016463837819173932
    2. 'self' → logprob: -6.626646518707275
    3. ' ,' → logprob: -8.126646041870117
    4. ':' → logprob: -12.126646041870117
    5. ' self' → logprob: -12.251646041870117
    6. ',self' → logprob: -12.501646041870117
    7. ',d' → logprob: -12.751646041870117
    8. ')' → logprob: -13.126646041870117
    9. ',
' → logprob: -13.626646041870117
    10. '   ' → logprob: -13.876646041870117

Token 132: ' sequence' (ID: 16281)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7431953549385071
    2. ' sequence' → logprob: -0.9931953549385071
    3. 'self' → logprob: -2.1181952953338623
    4. 'sequence' → logprob: -4.118195533752441
    5. ' digits' → logprob: -4.743195533752441
    6. ' digit' → logprob: -4.993195533752441
    7. 'digit' → logprob: -7.118195533752441
    8. 'digits' → logprob: -7.243195533752441
    9. ' seq' → logprob: -8.368195533752441
    10. ')' → logprob: -9.493195533752441

Token 133: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005268189124763012
    2. ',' → logprob: -7.6255269050598145
    3. ' :' → logprob: -10.250526428222656
    4. ')' → logprob: -12.875526428222656
    5. '):' → logprob: -14.500526428222656
    6. ' ' → logprob: -16.000526428222656
    7. '   ' → logprob: -16.750526428222656
    8. ' ,' → logprob: -17.000526428222656
    9. '  ' → logprob: -17.688026428222656
    10. '<|end|>' → logprob: -17.688026428222656

Token 134: ' Digit' (ID: 91174)
  Prédit: ' Digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Digit' → logprob: -0.5236510038375854
    2. 'Digit' → logprob: -0.8986510038375854
    3. ')' → logprob: -8.898651123046875
    4. ' ' → logprob: -9.023651123046875
    5. 'List' → logprob: -9.273651123046875
    6. ' digit' → logprob: -9.648651123046875
    7. ' List' → logprob: -10.398651123046875
    8. '_digit' → logprob: -11.023651123046875
    9. 'digit' → logprob: -11.648651123046875
    10. 'Digits' → logprob: -11.898651123046875

Token 135: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -0.00012166214582975954
    2. 'Rem' → logprob: -9.2501220703125
    3. 'Sequ' → logprob: -11.8751220703125
    4. 'sequence' → logprob: -12.0001220703125
    5. '_sequence' → logprob: -12.1251220703125
    6. 'Sequences' → logprob: -13.3751220703125
    7. '_SEQUENCE' → logprob: -13.7501220703125
    8. ' Sequence' → logprob: -14.0001220703125
    9. 'quence' → logprob: -14.5001220703125
    10. ' sequence' → logprob: -14.7501220703125

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31408295035362244
    2. ')' → logprob: -1.3140829801559448
    3. ' ,' → logprob: -7.939083099365234
    4. ' )' → logprob: -8.064083099365234
    5. '):' → logprob: -9.189083099365234
    6. '   ' → logprob: -10.439083099365234
    7. ' ' → logprob: -11.939083099365234
    8. ':' → logprob: -12.814083099365234
    9. '  ' → logprob: -13.189083099365234
    10. '       ' → logprob: -13.564083099365234

Token 137: ' k' (ID: 372)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -1.31544828414917
    2. ' k' → logprob: -1.69044828414917
    3. ' n' → logprob: -2.06544828414917
    4. 'k' → logprob: -2.06544828414917
    5. ' remove' → logprob: -2.56544828414917
    6. ' num' → logprob: -2.56544828414917
    7. 'remove' → logprob: -3.31544828414917
    8. 'count' → logprob: -3.44044828414917
    9. 'n' → logprob: -3.94044828414917
    10. ' to' → logprob: -4.06544828414917

Token 138: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005775776808150113
    2. '):' → logprob: -8.125577926635742
    3. ':int' → logprob: -8.500577926635742
    4. ')' → logprob: -9.750577926635742
    5. '<|end|>' → logprob: -11.250577926635742
    6. ' :' → logprob: -13.000577926635742
    7. '):
' → logprob: -13.625577926635742
    8. ':
' → logprob: -14.250577926635742
    9. '<|end|>' → logprob: -14.625577926635742
    10. ')>' → logprob: -14.625577926635742

Token 139: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12710249423980713
    2. ' int' → logprob: -2.1271023750305176
    3. ')' → logprob: -8.877102851867676
    4. ':int' → logprob: -10.877102851867676
    5. '[int' → logprob: -12.252102851867676
    6. ' )' → logprob: -12.627102851867676
    7. ' ' → logprob: -13.127102851867676
    8. '<int' → logprob: -13.252102851867676
    9. '=int' → logprob: -13.627102851867676
    10. ']int' → logprob: -14.252102851867676

Token 140: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000133098365040496
    2. '):' → logprob: -9.375133514404297
    3. ' )' → logprob: -10.500133514404297
    4. ')->' → logprob: -11.000133514404297
    5. '   ' → logprob: -14.125133514404297
    6. '):
' → logprob: -14.250133514404297
    7. ',' → logprob: -14.375133514404297
    8. '')' → logprob: -14.375133514404297
    9. '`)' → logprob: -14.375133514404297
    10. ':' → logprob: -15.125133514404297

Token 141: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.08695540577173233
    2. '->' → logprob: -2.5869553089141846
    3. ')' → logprob: -5.461955547332764
    4. ':' → logprob: -5.711955547332764
    5. ')->' → logprob: -7.836955547332764
    6. '   ' → logprob: -9.961955070495605
    7. ' ' → logprob: -10.836955070495605
    8. ' )->' → logprob: -12.336955070495605
    9. ':
' → logprob: -12.836955070495605
    10. '       ' → logprob: -12.836955070495605

Token 142: ' Digit' (ID: 91174)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -0.0859612375497818
    2. ' Digit' → logprob: -2.58596134185791
    3. 'List' → logprob: -5.08596134185791
    4. ' List' → logprob: -7.33596134185791
    5. 'None' → logprob: -9.71096134185791
    6. 'Digital' → logprob: -10.33596134185791
    7. ' str' → logprob: -10.46096134185791
    8. ' None' → logprob: -10.46096134185791
    9. 'str' → logprob: -10.71096134185791
    10. ' ' → logprob: -11.71096134185791

Token 143: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -0.0020057226065546274
    2. 'Rem' → logprob: -6.877005577087402
    3. '_sequence' → logprob: -7.002005577087402
    4. 'sequence' → logprob: -10.877005577087402
    5. '_SEQUENCE' → logprob: -11.502005577087402
    6. '   ' → logprob: -11.877005577087402
    7. ' sequence' → logprob: -12.127005577087402
    8. 'quence' → logprob: -12.377005577087402
    9. '[int' → logprob: -12.877005577087402
    10. ' Sequence' → logprob: -13.002005577087402

Token 144: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011906943283975124
    2. ':
' → logprob: -4.63690710067749
    3. '<|end|>' → logprob: -6.88690710067749
    4. '   ' → logprob: -7.51190710067749
    5. '
' → logprob: -8.886906623840332
    6. '       ' → logprob: -9.011906623840332
    7. ':return' → logprob: -9.261906623840332
    8. '):' → logprob: -10.261906623840332
    9. ' ' → logprob: -10.511906623840332
    10. '<|end|>' → logprob: -10.511906623840332

Token 145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017275219783186913
    2. ' ' → logprob: -5.142275333404541
    3. ' 
' → logprob: -5.642275333404541
    4. '   ' → logprob: -6.017275333404541
    5. '    ' → logprob: -6.642275333404541
    6. '\n' → logprob: -7.017275333404541
    7. ' raise' → logprob: -7.142275333404541
    8. '        
' → logprob: -7.392275333404541
    9. '
' → logprob: -8.142274856567383
    10. ' :' → logprob: -8.392274856567383

Token 146: ' raise' (ID: 9338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2831348180770874
    2. ' raise' → logprob: -1.5331348180770874
    3. 'raise' (adapté à ' raise') → logprob: -3.533134937286377
    4. ' pass' → logprob: -7.908134937286377
    5. '   ' → logprob: -7.908134937286377
    6. 'pass' → logprob: -8.908134460449219
    7. '        
' → logprob: -9.158134460449219
    8. ' ' → logprob: -9.408134460449219
    9. '    ' → logprob: -9.408134460449219
    10. ' 
' → logprob: -9.533134460449219

Token 147: ' Not' (ID: 4037)
  Prédit: ' Not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Not' → logprob: -0.002213777042925358
    2. 'Not' → logprob: -6.127213954925537
    3. '_Not' → logprob: -11.377213478088379
    4. ' ' → logprob: -12.002213478088379
    5. ' N' → logprob: -12.377213478088379
    6. ' ' → logprob: -13.127213478088379
    7. 'N' → logprob: -13.502213478088379
    8. ' No' → logprob: -13.877213478088379
    9. '(Not' → logprob: -13.877213478088379
    10. '@Not' → logprob: -13.877213478088379

Token 148: 'Implemented' (ID: 42030)
  Prédit: 'Implemented'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Implemented' → logprob: -0.0006068871589377522
    2. 'plement' → logprob: -7.750607013702393
    3. 'implemented' → logprob: -9.000606536865234
    4. 'm' → logprob: -10.875606536865234
    5. 'Impl' → logprob: -10.875606536865234
    6. 'Implement' → logprob: -12.125606536865234
    7. 'ement' → logprob: -12.375606536865234
    8. 'e' → logprob: -13.000606536865234
    9. 'ot' → logprob: -14.625606536865234
    10. 'lement' → logprob: -14.625606536865234

Token 149: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.04341236501932144
    2. 'ed' → logprob: -3.168412446975708
    3. 'Implemented' → logprob: -8.543412208557129
    4. 'rror' → logprob: -9.043412208557129
    5. 'ated' → logprob: -10.543412208557129
    6. 'ted' → logprob: -10.793412208557129
    7. 'Method' → logprob: -11.293412208557129
    8. 'ED' → logprob: -11.793412208557129
    9. 'eded' → logprob: -12.043412208557129
    10. 'Ed' → logprob: -12.418412208557129

Token 150: '()

' (ID: 5874)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 151: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.018170194700360298
    2. '
' → logprob: -4.018170356750488
    3. ' class' → logprob: -11.268170356750488
    4. ' 
' → logprob: -12.518170356750488
    5. '

' → logprob: -13.643170356750488
    6. '    
' → logprob: -13.643170356750488
    7. '  
' → logprob: -14.643170356750488
    8. '<|end|>' → logprob: -15.518170356750488
    9. '
' → logprob: -15.643170356750488
    10. '```' → logprob: -15.893170356750488

Token 152: ' Gre' (ID: 6454)
  Prédit: ' Gre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Gre' → logprob: -0.1147039383649826
    2. ' Digit' → logprob: -3.364703893661499
    3. ' Remove' → logprob: -3.739703893661499
    4. ' Simple' → logprob: -4.114704132080078
    5. 'Gre' → logprob: -4.489704132080078
    6. ' Stack' → logprob: -5.114704132080078
    7. ' Largest' → logprob: -5.489704132080078
    8. ' Minimal' → logprob: -6.114704132080078
    9. ' Mon' → logprob: -6.489704132080078
    10. ' Lex' → logprob: -6.614704132080078

Token 153: 'edy' (ID: 12442)
  Prédit: 'edy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edy' → logprob: -1.4378848391061183e-05
    2. 'ddy' → logprob: -11.375014305114746
    3. 'ed' → logprob: -13.875014305114746
    4. 'dy' → logprob: -14.375014305114746
    5. 'e' → logprob: -14.500014305114746
    6. '```' → logprob: -15.125014305114746
    7. '
' → logprob: -16.000015258789062
    8. 'ady' → logprob: -16.000015258789062
    9. 'y' → logprob: -16.125015258789062
    10. 'd' → logprob: -16.250015258789062

Token 154: 'Digit' (ID: 46997)
  Prédit: 'Digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -0.00271416874602437
    2. 'Rem' → logprob: -6.502714157104492
    3. 'Remove' → logprob: -7.377714157104492
    4. 'Removal' → logprob: -8.252714157104492
    5. 'Removing' → logprob: -8.627714157104492
    6. 'Strategy' → logprob: -10.127714157104492
    7. 'digit' → logprob: -10.752714157104492
    8. 'Digits' → logprob: -10.752714157104492
    9. ' Digit' → logprob: -11.877714157104492
    10. 'Based' → logprob: -12.002714157104492

Token 155: 'Rem' (ID: 6882)
  Prédit: 'Rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rem' → logprob: -0.0006913475226610899
    2. 'Removal' → logprob: -7.6256914138793945
    3. 'Remove' → logprob: -9.000691413879395
    4. 'rem' → logprob: -10.250691413879395
    5. 'Removing' → logprob: -10.375691413879395
    6. '_rem' → logprob: -11.875691413879395
    7. ' remover' → logprob: -13.125691413879395
    8. ' Rem' → logprob: -13.250691413879395
    9. 'Sequence' → logprob: -14.125691413879395
    10. '_Rem' → logprob: -14.875691413879395

Token 156: 'over' (ID: 2898)
  Prédit: 'over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -2.5107177862082608e-05
    2. 'ove' → logprob: -10.750024795532227
    3. 'overs' → logprob: -14.125024795532227
    4. 'ov' → logprob: -14.250024795532227
    5. 'oval' → logprob: -14.250024795532227
    6. 'Over' → logprob: -14.875024795532227
    7. ' over' → logprob: -15.500024795532227
    8. 'o' → logprob: -15.625024795532227
    9. '(over' → logprob: -15.625024795532227
    10. '_over' → logprob: -15.750024795532227

Token 157: '(D' (ID: 9908)
  Prédit: 'Strategy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -0.0007463791989721358
    2. ':' → logprob: -7.750746250152588
    3. 'Strateg' → logprob: -9.125746726989746
    4. 'strategy' → logprob: -9.500746726989746
    5. '(D' → logprob: -9.875746726989746
    6. 'Str' → logprob: -11.000746726989746
    7. '(' → logprob: -11.125746726989746
    8. 'ategy' → logprob: -11.625746726989746
    9. '_strategy' → logprob: -11.750746726989746
    10. 'Star' → logprob: -11.875746726989746

Token 158: 'igit' (ID: 16673)
  Prédit: 'igit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igit' → logprob: -8.77627644513268e-06
    2. 'igi' → logprob: -12.625008583068848
    3. 'igital' → logprob: -13.250008583068848
    4. 'i' → logprob: -14.125008583068848
    5. 'ig' → logprob: -14.375008583068848
    6. 'igt' → logprob: -14.750008583068848
    7. 'igita' → logprob: -14.875008583068848
    8. 'igits' → logprob: -15.000008583068848
    9. 'Digit' → logprob: -15.000008583068848
    10. '
' → logprob: -15.750008583068848

Token 159: 'Rem' (ID: 6882)
  Prédit: 'Rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rem' → logprob: -0.00016659092216286808
    2. 'Remove' → logprob: -9.875166893005371
    3. 'em' → logprob: -10.250166893005371
    4. ' remover' → logprob: -10.500166893005371
    5. 'rem' → logprob: -10.750166893005371
    6. 'Removing' → logprob: -11.250166893005371
    7. 'Re' → logprob: -12.625166893005371
    8. 'Removal' → logprob: -12.750166893005371
    9. 'er' → logprob: -13.000166893005371
    10. '_rem' → logprob: -13.125166893005371

Token 160: 'over' (ID: 2898)
  Prédit: 'over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -7.064297824399546e-05
    2. 'ove' → logprob: -9.750070571899414
    3. 'o' → logprob: -12.125070571899414
    4. 'ov' → logprob: -13.625070571899414
    5. 'overs' → logprob: -13.875070571899414
    6. 'Over' → logprob: -14.250070571899414
    7. 'oved' → logprob: -14.250070571899414
    8. ' over' → logprob: -14.375070571899414
    9. '(over' → logprob: -14.875070571899414
    10. '_over' → logprob: -15.500070571899414

Token 161: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -0.0003987336531281471
    2. 'er' → logprob: -9.125398635864258
    3. 'strategy' → logprob: -9.375398635864258
    4. 'Str' → logprob: -9.625398635864258
    5. 'Rem' → logprob: -9.875398635864258
    6. 'Strateg' → logprob: -10.250398635864258
    7. 'rem' → logprob: -11.000398635864258
    8. ' strategy' → logprob: -11.875398635864258
    9. '_strategy' → logprob: -12.250398635864258
    10. '   ' → logprob: -12.500398635864258

Token 162: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003024537581950426
    2. '):
' → logprob: -8.8753023147583
    3. ' ):' → logprob: -9.7503023147583
    4. ')' → logprob: -9.8753023147583
    5. ':' → logprob: -9.8753023147583
    6. '   ' → logprob: -15.3753023147583
    7. ':)' → logprob: -15.6253023147583
    8. '):
' → logprob: -15.6253023147583
    9. ' ' → logprob: -16.000303268432617
    10. '):

' → logprob: -16.125303268432617

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0637580156326294
    2. ' def' → logprob: -2.93875789642334
    3. '
' → logprob: -4.93875789642334
    4. 'def' → logprob: -7.31375789642334
    5. '    
' → logprob: -7.93875789642334
    6. ':' → logprob: -8.31375789642334
    7. ' 
' → logprob: -8.81375789642334
    8. '	def' → logprob: -9.31375789642334
    9. '    ' → logprob: -10.43875789642334
    10. ':def' → logprob: -10.68875789642334

Token 164: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.25194624066352844
    2. 'def' (adapté à ' def') → logprob: -1.501946210861206
    3. '   ' → logprob: -11.001946449279785
    4. '
' → logprob: -15.751946449279785
    5. ' ' → logprob: -16.62694549560547
    6. '	def' → logprob: -16.87694549560547
    7. ' remove' → logprob: -17.25194549560547
    8. '    ' → logprob: -17.50194549560547
    9. 'remove' → logprob: -17.62694549560547
    10. 'de' → logprob: -18.75194549560547

Token 165: ' remove' (ID: 6234)
  Prédit: ' remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remove' → logprob: -0.0032787215895950794
    2. ' def' → logprob: -6.253278732299805
    3. 'remove' → logprob: -6.628278732299805
    4. ' r' → logprob: -11.878278732299805
    5. ' ' → logprob: -12.003278732299805
    6. ' remov' → logprob: -12.378278732299805
    7. '_remove' → logprob: -12.628278732299805
    8. 'def' → logprob: -13.253278732299805
    9. ' rem' → logprob: -13.628278732299805
    10. ' ' → logprob: -14.253278732299805

Token 166: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -0.00011999329581158236
    2. '_' → logprob: -9.375120162963867
    3. ' _' → logprob: -11.250120162963867
    4. '_d' → logprob: -11.875120162963867
    5. '```' → logprob: -13.000120162963867
    6. '_tokens' → logprob: -13.125120162963867
    7. '_chars' → logprob: -13.250120162963867
    8. '_
' → logprob: -13.375120162963867
    9. '
' → logprob: -13.500120162963867
    10. '_digit' → logprob: -13.750120162963867

Token 167: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000192812061868608
    2. '(' → logprob: -8.875192642211914
    3. ' (' → logprob: -9.875192642211914
    4. '(
' → logprob: -13.750192642211914
    5. '(s' → logprob: -15.250192642211914
    6. 'self' → logprob: -16.500192642211914
    7. ' self' → logprob: -17.250192642211914
    8. '   ' → logprob: -17.250192642211914
    9. '(se' → logprob: -17.750192642211914
    10. ' ' → logprob: -17.750192642211914

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42977285385131836
    2. ' ,' → logprob: -1.0547728538513184
    3. ' ' → logprob: -8.054773330688477
    4. ')' → logprob: -8.304773330688477
    5. '   ' → logprob: -8.929773330688477
    6. 'self' → logprob: -9.304773330688477
    7. ' )' → logprob: -9.929773330688477
    8. '       ' → logprob: -9.929773330688477
    9. ' .' → logprob: -10.054773330688477
    10. '.sequence' → logprob: -10.304773330688477

Token 169: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.012644669972360134
    2. 'sequence' → logprob: -4.3876447677612305
    3. ' self' → logprob: -9.26264476776123
    4. ' ' → logprob: -11.13764476776123
    5. ')' → logprob: -11.38764476776123
    6. 'self' → logprob: -11.88764476776123
    7. '(sequence' → logprob: -12.76264476776123
    8. ' ' → logprob: -13.63764476776123
    9. ' space' → logprob: -13.76264476776123
    10. '.sequence' → logprob: -14.76264476776123

Token 170: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005171707598492503
    2. ' ,' → logprob: -7.75051736831665
    3. ':' → logprob: -9.375516891479492
    4. '   ' → logprob: -14.250516891479492
    5. ')' → logprob: -15.375516891479492
    6. '       ' → logprob: -15.875516891479492
    7. ' :' → logprob: -16.375516891479492
    8. '.sequence' → logprob: -16.375516891479492
    9. '=' → logprob: -16.500516891479492
    10. 'sequence' → logprob: -16.750516891479492

Token 171: ' Digit' (ID: 91174)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.07337767630815506
    2. ' Digit' → logprob: -2.8233776092529297
    3. 'sequence' → logprob: -4.57337760925293
    4. 'Digit' → logprob: -7.57337760925293
    5. ' ' → logprob: -8.32337760925293
    6. ' digit' → logprob: -9.44837760925293
    7. ')' → logprob: -10.19837760925293
    8. ' Dig' → logprob: -10.44837760925293
    9. 'Sequence' → logprob: -10.57337760925293
    10. '(sequence' → logprob: -10.69837760925293

Token 172: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -0.0111137256026268
    2. ',' → logprob: -5.13611364364624
    3. 'At' → logprob: -6.63611364364624
    4. '_sequence' → logprob: -6.76111364364624
    5. '):' → logprob: -7.13611364364624
    6. '_' → logprob: -7.88611364364624
    7. ')' → logprob: -7.88611364364624
    8. ':' → logprob: -8.261114120483398
    9. '   ' → logprob: -8.511114120483398
    10. 'Rem' → logprob: -8.886114120483398

Token 173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.514650183613412e-05
    2. ' ,' → logprob: -10.125055313110352
    3. 'self' → logprob: -11.125055313110352
    4. ' self' → logprob: -15.625055313110352
    5. ',self' → logprob: -16.62505531311035
    6. '       ' → logprob: -17.12505531311035
    7. ',
' → logprob: -17.62505531311035
    8. ')' → logprob: -18.50005531311035
    9. '   ' → logprob: -18.75005531311035
    10. '(self' → logprob: -19.87505531311035

Token 174: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.002831864869222045
    2. 'k' → logprob: -5.877831935882568
    3. ' ' → logprob: -11.25283145904541
    4. ' ' → logprob: -11.37783145904541
    5. '    ' → logprob: -13.62783145904541
    6. ')' → logprob: -14.37783145904541
    7. ' space' → logprob: -15.62783145904541
    8. ' 
' → logprob: -15.87783145904541
    9. '	k' → logprob: -16.252832412719727
    10. 'space' → logprob: -16.877832412719727

Token 175: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8349574208259583
    2. ' ):' → logprob: -1.3349573612213135
    3. ')' → logprob: -2.2099573612213135
    4. ':' → logprob: -2.2099573612213135
    5. ' )' → logprob: -2.7099573612213135
    6. ' :' → logprob: -4.209957599639893
    7. ',' → logprob: -6.834957599639893
    8. '):
' → logprob: -8.459957122802734
    9. ' ' → logprob: -8.584957122802734
    10. '   ' → logprob: -8.584957122802734

Token 176: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6952881217002869
    2. ' int' → logprob: -0.6952881217002869
    3. ')' → logprob: -7.070288181304932
    4. ' )' → logprob: -7.070288181304932
    5. ' ' → logprob: -8.195287704467773
    6. ' k' → logprob: -9.570287704467773
    7. ':int' → logprob: -10.070287704467773
    8. '[int' → logprob: -10.445287704467773
    9. 'k' → logprob: -11.945287704467773
    10. '<int' → logprob: -13.070287704467773

Token 177: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020577972754836082
    2. '):' → logprob: -3.895577907562256
    3. ' )' → logprob: -10.895578384399414
    4. ')->' → logprob: -11.395578384399414
    5. ' ):' → logprob: -13.145578384399414
    6. ':' → logprob: -13.270578384399414
    7. '   ' → logprob: -13.520578384399414
    8. '):
' → logprob: -13.770578384399414
    9. ',' → logprob: -17.020578384399414
    10. '       ' → logprob: -17.145578384399414

Token 178: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8744426965713501
    2. ':' → logprob: -0.9994426965713501
    3. ' ->' → logprob: -1.87444269657135
    4. ' :' → logprob: -2.9994425773620605
    5. ')->' → logprob: -5.3744425773620605
    6. '->' → logprob: -5.6244425773620605
    7. '):' → logprob: -6.7494425773620605
    8. ' )' → logprob: -6.8744425773620605
    9. ' )->' → logprob: -7.8744425773620605
    10. '   ' → logprob: -8.249443054199219

Token 179: ' Digit' (ID: 91174)
  Prédit: ' Digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Digit' → logprob: -0.16038791835308075
    2. 'Digit' → logprob: -1.9103878736495972
    3. ' ' → logprob: -9.660387992858887
    4. ' None' → logprob: -10.535387992858887
    5. ' Dig' → logprob: -10.785387992858887
    6. ' digit' → logprob: -10.910387992858887
    7. ' Digital' → logprob: -11.535387992858887
    8. '_digit' → logprob: -11.785387992858887
    9. ' List' → logprob: -12.410387992858887
    10. 'None' → logprob: -12.910387992858887

Token 180: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -3.292907877039397e-06
    2. '_sequence' → logprob: -13.87500286102295
    3. 'sequence' → logprob: -13.87500286102295
    4. 'Sequ' → logprob: -14.50000286102295
    5. 'Rem' → logprob: -15.12500286102295
    6. '_SEQUENCE' → logprob: -16.000003814697266
    7. 'quence' → logprob: -16.125003814697266
    8. ' Sequence' → logprob: -16.500003814697266
    9. ' sequence' → logprob: -17.250003814697266
    10. 'Sequences' → logprob: -17.375003814697266

Token 181: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008249425329267979
    2. '):' → logprob: -5.383249282836914
    3. ':
' → logprob: -6.258249282836914
    4. ' :' → logprob: -7.008249282836914
    5. '       ' → logprob: -8.008249282836914
    6. ')' → logprob: -8.258249282836914
    7. '(self' → logprob: -9.508249282836914
    8. '   ' → logprob: -9.633249282836914
    9. ':
' → logprob: -11.008249282836914
    10. '():' → logprob: -11.133249282836914

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015841391868889332
    2. 'digits' → logprob: -7.126584053039551
    3. ' digits' → logprob: -7.876584053039551
    4. 'result' → logprob: -9.37658405303955
    5. 'n' → logprob: -9.62658405303955
    6. ' n' → logprob: -9.87658405303955
    7. 'stack' → logprob: -10.37658405303955
    8. ' result' → logprob: -10.37658405303955
    9. ' new' → logprob: -10.62658405303955
    10. '   ' → logprob: -11.12658405303955

Token 183: ' #' (ID: 1069)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.14307744801044464
    2. 'stack' → logprob: -2.1430773735046387
    3. ' digits' → logprob: -4.393077373504639
    4. ' stack' → logprob: -7.018077373504639
    5. '       ' → logprob: -7.143077373504639
    6. '   ' → logprob: -7.518077373504639
    7. 'remaining' → logprob: -7.643077373504639
    8. 'result' → logprob: -8.393077850341797
    9. 'new' → logprob: -8.643077850341797
    10. 'seq' → logprob: -8.768077850341797

Token 184: ' This' (ID: 1328)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.8808395266532898
    2. 'digits' → logprob: -0.8808395266532898
    3. ' digits' → logprob: -2.5058395862579346
    4. ' stack' → logprob: -3.2558395862579346
    5. 'remaining' → logprob: -4.0058393478393555
    6. 'result' → logprob: -4.1308393478393555
    7. ' remaining' → logprob: -5.3808393478393555
    8. ' result' → logprob: -6.1308393478393555
    9. 'removed' → logprob: -6.3808393478393555
    10. 'nums' → logprob: -6.6308393478393555

Token 185: ' method' (ID: 2595)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6031050086021423
    2. ' method' → logprob: -1.103105068206787
    3. 'def' → logprob: -3.353105068206787
    4. ' implementation' → logprob: -3.603105068206787
    5. ' def' → logprob: -3.978105068206787
    6. ' code' → logprob: -4.103105068206787
    7. 'method' → logprob: -5.228105068206787
    8. 'is' → logprob: -5.478105068206787
    9. ' approach' → logprob: -6.228105068206787
    10. ' algorithm' → logprob: -6.228105068206787

Token 186: ' removes' (ID: 52683)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30794280767440796
    2. ' removes' → logprob: -2.1829428672790527
    3. '   ' → logprob: -3.0579428672790527
    4. ' is' → logprob: -3.6829428672790527
    5. 'implements' → logprob: -4.432942867279053
    6. ' implements' → logprob: -4.557942867279053
    7. ' will' → logprob: -4.807942867279053
    8. ':' → logprob: -4.932942867279053
    9. 'rem' → logprob: -5.182942867279053
    10. ' ' → logprob: -5.307942867279053

Token 187: ' k' (ID: 372)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.19388283789157867
    2. ' digits' → logprob: -1.8188828229904175
    3. ' the' → logprob: -5.068882942199707
    4. 'the' → logprob: -6.443882942199707
    5. 'k' → logprob: -6.443882942199707
    6. ' k' → logprob: -6.818882942199707
    7. '_digits' → logprob: -6.818882942199707
    8. 'd' → logprob: -7.568882942199707
    9. 'from' → logprob: -8.068882942199707
    10. ' for' → logprob: -8.443882942199707

Token 188: ' digits' (ID: 37806)
  Prédit: ' digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.2039734423160553
    2. 'digits' → logprob: -1.703973412513733
    3. '_digits' → logprob: -6.453973293304443
    4. '<|end|>' → logprob: -7.703973293304443
    5. ' tokens' → logprob: -9.703973770141602
    6. ' smallest' → logprob: -9.828973770141602
    7. ' leading' → logprob: -9.828973770141602
    8. 'Digits' → logprob: -10.078973770141602
    9. 'd' → logprob: -10.578973770141602
    10. ' ' → logprob: -10.703973770141602

Token 189: ' to' (ID: 316)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.3596256375312805
    2. '       ' → logprob: -1.8596255779266357
    3. 'from' → logprob: -2.3596255779266357
    4. ' to' → logprob: -2.9846255779266357
    5. 'to' → logprob: -7.609625816345215
    6. ' in' → logprob: -8.734625816345215
    7. '.' → logprob: -8.859625816345215
    8. ',' → logprob: -9.109625816345215
    9. '   ' → logprob: -9.359625816345215
    10. '        ' → logprob: -9.609625816345215

Token 190: ' form' (ID: 1625)
  Prédit: ' minimize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimize' → logprob: -0.0894523561000824
    2. ' make' → logprob: -2.9644522666931152
    3. 'min' → logprob: -4.589452266693115
    4. 'make' → logprob: -4.714452266693115
    5. ' achieve' → logprob: -5.464452266693115
    6. ' produce' → logprob: -5.589452266693115
    7. ' get' → logprob: -5.964452266693115
    8. ' create' → logprob: -6.214452266693115
    9. ' form' → logprob: -7.839452266693115
    10. ' result' → logprob: -8.214452743530273

Token 191: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.03083093650639057
    2. 'the' → logprob: -3.5308308601379395
    3. ' a' → logprob: -6.9058308601379395
    4. 'a' → logprob: -9.655831336975098
    5. ''' → logprob: -11.405831336975098
    6. ' ' → logprob: -13.780831336975098
    7. ' smallest' → logprob: -14.155831336975098
    8. '"' → logprob: -15.780831336975098
    9. '  ' → logprob: -15.780831336975098
    10. '   ' → logprob: -16.03083038330078

Token 192: ' largest' (ID: 10574)
  Prédit: ' smallest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' smallest' → logprob: -0.008937172591686249
    2. 'small' → logprob: -4.758937358856201
    3. 'lowest' → logprob: -9.383936882019043
    4. 'sm' → logprob: -9.508936882019043
    5. 'largest' → logprob: -10.133936882019043
    6. 'new' → logprob: -10.133936882019043
    7. ' new' → logprob: -11.008936882019043
    8. ' minimal' → logprob: -11.258936882019043
    9. ' lowest' → logprob: -11.633936882019043
    10. ' small' → logprob: -11.633936882019043

Token 193: ' possible' (ID: 4149)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -1.0185108184814453
    2. 'possible' → logprob: -1.3935108184814453
    3. ' possible' → logprob: -1.5185108184814453
    4. 'number' → logprob: -1.7685108184814453
    5. 'sequence' → logprob: -7.518510818481445
    6. 'num' → logprob: -8.768510818481445
    7. ' sequence' → logprob: -8.893510818481445
    8. 'result' → logprob: -9.893510818481445
    9. '```' → logprob: -10.268510818481445
    10. 'digit' → logprob: -10.518510818481445

Token 194: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.35677260160446167
    2. ' number' → logprob: -1.2317726612091064
    3. 'sequence' → logprob: -4.981772422790527
    4. 'possible' → logprob: -7.356772422790527
    5. ' sequence' → logprob: -7.981772422790527
    6. 'num' → logprob: -9.106772422790527
    7. ' possible' → logprob: -9.231772422790527
    8. 'result' → logprob: -9.606772422790527
    9. 'digit' → logprob: -10.231772422790527
    10. '-number' → logprob: -10.481772422790527

Token 195: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04505772143602371
    2. ',' → logprob: -3.420057773590088
    3. ' from' → logprob: -6.295057773590088
    4. ':' → logprob: -6.420057773590088
    5. '.' → logprob: -6.420057773590088
    6. 'digits' → logprob: -6.420057773590088
    7. 'result' → logprob: -7.170057773590088
    8. ' digits' → logprob: -7.545057773590088
    9. 'from' → logprob: -7.670057773590088
    10. ' ,' → logprob: -7.920057773590088

Token 196: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0040269880555570126
    2. ',' → logprob: -5.879026889801025
    3. ':' → logprob: -7.629026889801025
    4. '.' → logprob: -8.129027366638184
    5. '   ' → logprob: -8.629027366638184
    6. '        
' → logprob: -9.379027366638184
    7. ' ' → logprob: -10.629027366638184
    8. '      ' → logprob: -10.754027366638184
    9. ' ,' → logprob: -10.879027366638184
    10. ' by' → logprob: -11.379027366638184

Token 197: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.24812833964824677
    2. 'result' → logprob: -2.2481284141540527
    3. 'digits' → logprob: -2.9981284141540527
    4. ' stack' → logprob: -3.8731284141540527
    5. 'num' → logprob: -4.248128414154053
    6. 'n' → logprob: -4.873128414154053
    7. ' result' → logprob: -5.248128414154053
    8. ' digits' → logprob: -5.748128414154053
    9. 'res' → logprob: -5.998128414154053
    10. '       ' → logprob: -6.123128414154053

Token 198: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0013147627469152212
    2. '=' → logprob: -6.751314640045166
    3. ':' → logprob: -9.001315116882324
    4. '=[]' → logprob: -11.376315116882324
    5. ' ' → logprob: -11.876315116882324
    6. '[:]' → logprob: -13.876315116882324
    7. ' :' → logprob: -14.501315116882324
    8. '.' → logprob: -14.876315116882324
    9. ',' → logprob: -15.001315116882324
    10. 's' → logprob: -15.626315116882324

Token 199: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.10026480257511139
    2. ' List' → logprob: -2.35026478767395
    3. 'list' → logprob: -10.475264549255371
    4. '	List' → logprob: -11.350264549255371
    5. '[List' → logprob: -11.475264549255371
    6. ' ' → logprob: -13.475264549255371
    7. 'int' → logprob: -13.600264549255371
    8. '   ' → logprob: -13.600264549255371
    9. '[]' → logprob: -13.850264549255371
    10. ' list' → logprob: -14.100264549255371

Token 200: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -8.895480277715251e-06
    2. '<int' → logprob: -12.000008583068848
    3. 'int' → logprob: -13.875008583068848
    4. '[' → logprob: -14.375008583068848
    5. ' =' → logprob: -14.625008583068848
    6. '=int' → logprob: -14.750008583068848
    7. '[Int' → logprob: -16.000009536743164
    8. '[List' → logprob: -17.000009536743164
    9. '(int' → logprob: -17.250009536743164
    10. '=' → logprob: -17.250009536743164

Token 201: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.961759259458631e-06
    2. ']=' → logprob: -12.625004768371582
    3. ' ]' → logprob: -13.875004768371582
    4. '[' → logprob: -15.000004768371582
    5. ')' → logprob: -15.375004768371582
    6. ' ' → logprob: -18.6250057220459
    7. '=' → logprob: -18.8750057220459
    8. ']
' → logprob: -19.0000057220459
    9. '']' → logprob: -19.5000057220459
    10. '>' → logprob: -19.7500057220459

Token 202: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02076936885714531
    2. '=' → logprob: -3.8957693576812744
    3. ' ' → logprob: -8.395769119262695
    4. '=[]' → logprob: -14.020769119262695
    5. '  ' → logprob: -15.645769119262695
    6. ')' → logprob: -15.770769119262695
    7. ' =
' → logprob: -15.895769119262695
    8. '[]' → logprob: -16.895769119262695
    9. '    ' → logprob: -17.270769119262695
    10. ',' → logprob: -17.270769119262695

Token 203: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.014165629632771015
    2. ' []' → logprob: -4.26416540145874
    3. '[]}' → logprob: -13.639165878295898
    4. '[]>' → logprob: -14.389165878295898
    5. '[]
' → logprob: -15.639165878295898
    6. '[' → logprob: -16.2641658782959
    7. ' ' → logprob: -16.2641658782959
    8. '[])' → logprob: -16.8891658782959
    9. '[]

' → logprob: -17.1391658782959
    10. '[]"' → logprob: -17.2641658782959

Token 204: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5005239248275757
    2. ' for' → logprob: -1.2505239248275757
    3. ' digits' → logprob: -3.0005240440368652
    4. 'for' → logprob: -3.3755240440368652
    5. 'digits' → logprob: -3.8755240440368652
    6. '   ' → logprob: -6.875524044036865
    7. ' i' → logprob: -7.750524044036865
    8. ' num' → logprob: -8.125523567199707
    9. ' index' → logprob: -8.625523567199707
    10. ' idx' → logprob: -9.375523567199707

Token 205: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04930943250656128
    2. ' for' → logprob: -3.424309492111206
    3. 'digits' → logprob: -4.549309253692627
    4. '       ' → logprob: -5.424309253692627
    5. ' digits' → logprob: -8.299309730529785
    6. 'remaining' → logprob: -8.924309730529785
    7. 'count' → logprob: -9.424309730529785
    8. '   ' → logprob: -10.049309730529785
    9. 'num' → logprob: -11.174309730529785
    10. ' remaining' → logprob: -12.049309730529785

Token 206: '_remove' (ID: 41629)
  Prédit: '_remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remove' → logprob: -0.2524380385875702
    2. 'remove' → logprob: -1.5024380683898926
    3. ' remove' → logprob: -8.127437591552734
    4. 'rm' → logprob: -9.502437591552734
    5. 'Remove' → logprob: -10.252437591552734
    6. '-remove' → logprob: -10.752437591552734
    7. 'r' → logprob: -10.752437591552734
    8. '_rem' → logprob: -11.752437591552734
    9. '_move' → logprob: -12.002437591552734
    10. '	remove' → logprob: -12.002437591552734

Token 207: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023319896310567856
    2. '=' → logprob: -3.773319959640503
    3. '=k' → logprob: -9.523320198059082
    4. ' ' → logprob: -14.523320198059082
    5. 'k' → logprob: -14.773320198059082
    6. '=int' → logprob: -15.773320198059082
    7. ' k' → logprob: -16.148319244384766
    8. 's' → logprob: -17.023319244384766
    9. ' =
' → logprob: -17.773319244384766
    10. '_k' → logprob: -17.773319244384766

Token 208: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.38687169551849365
    2. ' k' → logprob: -1.1368716955184937
    3. '=k' → logprob: -14.886871337890625
    4. '	k' → logprob: -15.011871337890625
    5. '{k' → logprob: -16.886871337890625
    6. ' к' → logprob: -18.636871337890625
    7. '[k' → logprob: -18.761871337890625
    8. '_k' → logprob: -19.011871337890625
    9. '*k' → logprob: -19.386871337890625
    10. ' ' → logprob: -19.386871337890625

Token 209: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06150943040847778
    2. ' for' → logprob: -3.061509370803833
    3. '       ' → logprob: -5.186509609222412
    4. 'for' → logprob: -5.561509609222412
    5. ' 
' → logprob: -6.061509609222412
    6. '        
' → logprob: -7.186509609222412
    7. '  
' → logprob: -9.186509132385254
    8. '
' → logprob: -9.436509132385254
    9. '    
' → logprob: -10.061509132385254
    10. '<|end|>' → logprob: -10.436509132385254

Token 210: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2870737612247467
    2. '       ' → logprob: -1.4120737314224243
    3. 'for' → logprob: -5.162073612213135
    4. '   ' → logprob: -10.162074089050293
    5. '        
' → logprob: -10.162074089050293
    6. ' 
' → logprob: -10.287074089050293
    7. '	for' → logprob: -10.787074089050293
    8. '
' → logprob: -11.162074089050293
    9. ' ' → logprob: -11.787074089050293
    10. '  
' → logprob: -12.162074089050293

Token 211: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.030120577663183212
    2. ' for' → logprob: -3.530120611190796
    3. '       ' → logprob: -7.905120372772217
    4. '   ' → logprob: -14.655120849609375
    5. '	for' → logprob: -15.030120849609375
    6. '        
' → logprob: -16.155120849609375
    7. '
' → logprob: -16.280120849609375
    8. '```' → logprob: -16.405120849609375
    9. ' ' → logprob: -16.655120849609375
    10. 'digits' → logprob: -17.655120849609375

Token 212: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.0810064971446991
    2. ' digit' → logprob: -2.5810065269470215
    3. 'd' → logprob: -6.2060065269470215
    4. 'num' → logprob: -9.456006050109863
    5. ' d' → logprob: -11.206006050109863
    6. ' num' → logprob: -12.331006050109863
    7. '   ' → logprob: -14.956006050109863
    8. 'Digit' → logprob: -15.706006050109863
    9. 'n' → logprob: -16.20600700378418
    10. '_digit' → logprob: -16.20600700378418

Token 213: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007708719931542873
    2. 'in' → logprob: -4.882708549499512
    3. ' ' → logprob: -9.382708549499512
    4. 'd' → logprob: -11.632708549499512
    5. ',' → logprob: -12.757708549499512
    6. '_in' → logprob: -13.507708549499512
    7. 's' → logprob: -13.507708549499512
    8. '	in' → logprob: -14.257708549499512
    9. ')' → logprob: -14.382708549499512
    10. '  ' → logprob: -14.757708549499512

Token 214: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.04859315976500511
    2. ' sequence' → logprob: -3.048593044281006
    3. '(sequence' → logprob: -12.423593521118164
    4. ' ' → logprob: -14.048593521118164
    5. '   ' → logprob: -15.173593521118164
    6. 'list' → logprob: -16.048593521118164
    7. '.sequence' → logprob: -16.173593521118164
    8. 'iteration' → logprob: -16.298593521118164
    9. 'iter' → logprob: -16.673593521118164
    10. '_sequence' → logprob: -16.923593521118164

Token 215: ':
' (ID: 734)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.11345019191503525
    2. ':' → logprob: -2.238450288772583
    3. ':
' → logprob: -7.988450050354004
    4. '.' → logprob: -8.863450050354004
    5. ':_' → logprob: -9.738450050354004
    6. '.:' → logprob: -10.738450050354004
    7. '_digits' → logprob: -10.863450050354004
    8. '.d' → logprob: -11.113450050354004
    9. '):' → logprob: -11.863450050354004
    10. '.__' → logprob: -12.238450050354004

Token 216: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18466992676258087
    2. ' while' → logprob: -2.6846699714660645
    3. '           ' → logprob: -3.0596699714660645
    4. ':
' → logprob: -3.4346699714660645
    5. ' :' → logprob: -4.4346699714660645
    6. '       ' → logprob: -5.4346699714660645
    7. '   ' → logprob: -6.1846699714660645
    8. ' :
' → logprob: -7.4346699714660645
    9. '    ' → logprob: -7.5596699714660645
    10. 'while' → logprob: -8.184669494628906

Token 217: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.07931703329086304
    2. 'while' (adapté à ' while') → logprob: -2.579317092895508
    3. '           ' → logprob: -7.954317092895508
    4. '   ' → logprob: -10.329317092895508
    5. '       ' → logprob: -10.704317092895508
    6. 'While' → logprob: -11.829317092895508
    7. '    ' → logprob: -12.329317092895508
    8. '	while' → logprob: -12.454317092895508
    9. ' While' → logprob: -12.829317092895508
    10. '            
' → logprob: -14.204317092895508

Token 218: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -1.050467848777771
    2. 'to' → logprob: -1.300467848777771
    3. 'stack' → logprob: -1.550467848777771
    4. ' to' → logprob: -1.800467848777771
    5. ' ' → logprob: -8.550467491149902
    6. '   ' → logprob: -9.800467491149902
    7. '	stack' → logprob: -9.800467491149902
    8. '(stack' → logprob: -9.862967491149902
    9. ' len' → logprob: -10.487967491149902
    10. '	to' → logprob: -11.425467491149902

Token 219: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2519349455833435
    2. 'and' → logprob: -1.5019350051879883
    3. '           ' → logprob: -13.626935005187988
    4. '        ' → logprob: -14.501935005187988
    5. '            ' → logprob: -14.501935005187988
    6. ' ' → logprob: -14.626935005187988
    7. 'stack' → logprob: -14.626935005187988
    8. 'a' → logprob: -14.751935005187988
    9. '       ' → logprob: -15.001935005187988
    10. '          ' → logprob: -15.001935005187988

Token 220: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.28289976716041565
    2. ' to' → logprob: -1.4078997373580933
    3. ' stack' → logprob: -6.907899856567383
    4. 'stack' → logprob: -7.282899856567383
    5. 'digit' → logprob: -11.032899856567383
    6. ' digit' → logprob: -11.157899856567383
    7. ' ' → logprob: -11.282899856567383
    8. '	to' → logprob: -11.845399856567383
    9. '   ' → logprob: -12.720399856567383
    10. '```' → logprob: -14.157899856567383

Token 221: '_remove' (ID: 41629)
  Prédit: '_remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remove' → logprob: -0.0009811243508011103
    2. 'remove' → logprob: -7.000981330871582
    3. '_REMOVE' → logprob: -10.125981330871582
    4. '-remove' → logprob: -11.500981330871582
    5. 'o' → logprob: -12.000981330871582
    6. 'Remove' → logprob: -12.250981330871582
    7. 'em' → logprob: -13.500981330871582
    8. '	remove' → logprob: -13.625981330871582
    9. 'ore' → logprob: -13.875981330871582
    10. 'stack' → logprob: -14.250981330871582

Token 222: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.16082355380058289
    2. ' and' → logprob: -2.2858235836029053
    3. '>' → logprob: -3.1608235836029053
    4. 'and' → logprob: -5.410823345184326
    5. ' ' → logprob: -11.910823822021484
    6. ' ' → logprob: -13.535823822021484
    7. '0' → logprob: -15.785823822021484
    8. '```' → logprob: -15.910823822021484
    9. '   ' → logprob: -16.535823822021484
    10. 'a' → logprob: -17.535823822021484

Token 223: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01416350994259119
    2. ' ' → logprob: -4.264163494110107
    3. 'k' → logprob: -17.014163970947266
    4. '   ' → logprob: -19.014163970947266
    5. '  ' → logprob: -19.264163970947266
    6. 'zero' → logprob: -19.889163970947266
    7. '۰' → logprob: -20.139163970947266
    8. '```' → logprob: -20.139163970947266
    9. 'and' → logprob: -20.264163970947266
    10. '>' → logprob: -20.639163970947266

Token 224: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. 'k' → logprob: -18.12507438659668
    4. '   ' → logprob: -20.12507438659668
    5. '  ' → logprob: -21.00007438659668
    6. '```' → logprob: -21.25007438659668
    7. 'zero' → logprob: -21.87507438659668
    8. '.' → logprob: -22.12507438659668
    9. '    ' → logprob: -22.25007438659668
    10. '۰' → logprob: -22.37507438659668

Token 225: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.023247458040714264
    2. 'and' → logprob: -3.773247480392456
    3. ' ' → logprob: -13.148247718811035
    4. '	and' → logprob: -17.27324676513672
    5. '    ' → logprob: -17.39824676513672
    6. '            ' → logprob: -17.89824676513672
    7. '   ' → logprob: -18.14824676513672
    8. ' ' → logprob: -18.39824676513672
    9. '           ' → logprob: -18.64824676513672
    10. '  ' → logprob: -18.64824676513672

Token 226: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.6329163908958435
    2. 'stack' → logprob: -0.7579163908958435
    3. 'digit' → logprob: -8.507916450500488
    4. '	stack' → logprob: -9.757916450500488
    5. ' digit' → logprob: -10.132916450500488
    6. ' ' → logprob: -12.007916450500488
    7. '(stack' → logprob: -12.382916450500488
    8. '   ' → logprob: -13.007916450500488
    9. 'd' → logprob: -13.507916450500488
    10. '_stack' → logprob: -13.757916450500488

Token 227: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.0280383548888494e-06
    2. ' and' → logprob: -14.375000953674316
    3. '.pop' → logprob: -15.375000953674316
    4. ' [-' → logprob: -17.000001907348633
    5. '```' → logprob: -17.125001907348633
    6. 'and' → logprob: -17.375001907348633
    7. '-' → logprob: -17.750001907348633
    8. '[' → logprob: -17.750001907348633
    9. '   ' → logprob: -18.000001907348633
    10. '.' → logprob: -18.250001907348633

Token 228: '1' (ID: 16)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.376934289932251
    2. 'digit' → logprob: -2.126934289932251
    3. 'stack' → logprob: -2.126934289932251
    4. '-' → logprob: -2.251934289932251
    5. ' stack' → logprob: -2.626934289932251
    6. '(stack' → logprob: -2.626934289932251
    7. ']<' → logprob: -3.001934289932251
    8. '<' → logprob: -3.251934289932251
    9. '1' → logprob: -3.876934289932251
    10. '_digit' → logprob: -4.001934051513672

Token 229: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.38696569204330444
    2. '<' → logprob: -1.1369657516479492
    3. ' ' → logprob: -10.51196575164795
    4. 'digit' → logprob: -11.13696575164795
    5. '>' → logprob: -11.51196575164795
    6. ']' → logprob: -11.63696575164795
    7. '<int' → logprob: -11.76196575164795
    8. ' >' → logprob: -11.76196575164795
    9. ')' → logprob: -11.88696575164795
    10. '[' → logprob: -13.01196575164795

Token 230: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4741390347480774
    2. ' <' → logprob: -0.9741390347480774
    3. '<int' → logprob: -10.599139213562012
    4. ' ' → logprob: -10.724139213562012
    5. 'd' → logprob: -12.349139213562012
    6. ')' → logprob: -13.099139213562012
    7. '<
' → logprob: -13.474139213562012
    8. '[' → logprob: -13.849139213562012
    9. 'digit' → logprob: -14.474139213562012
    10. ')<' → logprob: -14.599139213562012

Token 231: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.02325398102402687
    2. ' digit' → logprob: -3.773253917694092
    3. '-digit' → logprob: -12.77325439453125
    4. 'd' → logprob: -13.14825439453125
    5. '_digit' → logprob: -13.39825439453125
    6. 'Digit' → logprob: -14.64825439453125
    7. 'digital' → logprob: -14.64825439453125
    8. 'digits' → logprob: -14.89825439453125
    9. ' ' → logprob: -15.02325439453125
    10. '   ' → logprob: -15.77325439453125

Token 232: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6334640979766846
    2. ':' → logprob: -0.7584640979766846
    3. ' and' → logprob: -8.383463859558105
    4. '):
' → logprob: -8.508463859558105
    5. ' :
' → logprob: -9.008463859558105
    6. ' stack' → logprob: -9.758463859558105
    7. '           ' → logprob: -10.008463859558105
    8. ' :' → logprob: -10.133463859558105
    9. ':
' → logprob: -10.633463859558105
    10. 'and' → logprob: -10.633463859558105

Token 233: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0323258638381958
    2. '           ' → logprob: -4.032325744628906
    3. ' stack' → logprob: -4.657325744628906
    4. '(stack' → logprob: -5.907325744628906
    5. '            ' → logprob: -7.532325744628906
    6. '.pop' → logprob: -8.657325744628906
    7. '                ' → logprob: -8.907325744628906
    8. 'stack' → logprob: -9.032325744628906
    9. '_stack' → logprob: -9.157325744628906
    10. ' pop' → logprob: -9.157325744628906

Token 234: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.47408533096313477
    2. 'stack' (adapté à ' stack') → logprob: -0.9740853309631348
    3. '	stack' → logprob: -12.099084854125977
    4. '               ' → logprob: -14.099084854125977
    5. '.stack' → logprob: -14.349084854125977
    6. '(stack' → logprob: -14.349084854125977
    7. '_stack' → logprob: -14.599084854125977
    8. '                   ' → logprob: -15.599084854125977
    9. 'pop' → logprob: -15.724084854125977
    10. '           ' → logprob: -16.849084854125977

Token 235: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -3.869639476761222e-05
    2. '.' → logprob: -10.250039100646973
    3. 'pop' → logprob: -13.000039100646973
    4. '_pop' → logprob: -13.875039100646973
    5. ' pop' → logprob: -18.500038146972656
    6. ' .' → logprob: -18.750038146972656
    7. '.remove' → logprob: -19.250038146972656
    8. '.Pop' → logprob: -19.625038146972656
    9. '	pop' → logprob: -19.750038146972656
    10. 'Pop' → logprob: -20.375038146972656

Token 236: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013667753897607327
    2. 'to' → logprob: -4.888667583465576
    3. '()
' → logprob: -6.638667583465576
    4. '           ' → logprob: -6.888667583465576
    5. '
' → logprob: -7.263667583465576
    6. ')' → logprob: -7.513667583465576
    7. '(to' → logprob: -7.513667583465576
    8. ')
' → logprob: -7.638667583465576
    9. '                
' → logprob: -7.888667583465576
    10. '                   ' → logprob: -8.138668060302734

Token 237: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013389977626502514
    2. 'to' → logprob: -4.388390064239502
    3. ' to' → logprob: -7.138390064239502
    4. '                
' → logprob: -10.388389587402344
    5. '           ' → logprob: -10.638389587402344
    6. '
' → logprob: -11.388389587402344
    7. '                   ' → logprob: -11.888389587402344
    8. '              ' → logprob: -12.513389587402344
    9. ',' → logprob: -13.138389587402344
    10. '(to' → logprob: -13.763389587402344

Token 238: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' (adapté à ' to') → logprob: -0.0019298245897516608
    2. ' to' → logprob: -6.251929759979248
    3. '               ' → logprob: -13.626930236816406
    4. '           ' → logprob: -19.626930236816406
    5. '                   ' → logprob: -20.751930236816406
    6. '	to' → logprob: -21.001930236816406
    7. '
' → logprob: -21.876930236816406
    8. 'To' → logprob: -22.251930236816406
    9. '_to' → logprob: -22.376930236816406
    10. '```' → logprob: -22.751930236816406

Token 239: '_remove' (ID: 41629)
  Prédit: '_remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remove' → logprob: -0.0031781906727701426
    2. 'remove' → logprob: -5.753178119659424
    3. ' remove' → logprob: -15.128178596496582
    4. '_REMOVE' → logprob: -15.753178596496582
    5. '	remove' → logprob: -17.878177642822266
    6. '_reduce' → logprob: -18.003177642822266
    7. '-remove' → logprob: -18.628177642822266
    8. 'Remove' → logprob: -18.878177642822266
    9. '_re' → logprob: -19.503177642822266
    10. '_' → logprob: -19.628177642822266

Token 240: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.10041552782058716
    2. '-=' → logprob: -2.3504154682159424
    3. '-' → logprob: -8.475415229797363
    4. ' -' → logprob: -15.225415229797363
    5. '=' → logprob: -17.10041618347168
    6. ' +=' → logprob: -17.47541618347168
    7. '+=' → logprob: -18.72541618347168
    8. '```' → logprob: -19.22541618347168
    9. ' ' → logprob: -19.85041618347168
    10. '_' → logprob: -20.10041618347168

Token 241: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -21.250009536743164
    4. '۱' → logprob: -22.250009536743164
    5. '１' → logprob: -22.375009536743164
    6. '
' → logprob: -22.375009536743164
    7. '```' → logprob: -22.500009536743164
    8. ' ' → logprob: -22.625009536743164
    9. '  ' → logprob: -22.875009536743164
    10. '১' → logprob: -24.250009536743164

Token 242: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -21.5
    4. '```' → logprob: -21.5
    5. '۱' → logprob: -21.9375
    6. '１' → logprob: -23.0
    7. '<|end|>' → logprob: -23.0
    8. '
' → logprob: -23.0625
    9. '१' → logprob: -23.25
    10. '১' → logprob: -23.3125

Token 243: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011839192593470216
    2. '
' → logprob: -6.751183986663818
    3. '       ' → logprob: -12.75118350982666
    4. '            
' → logprob: -12.87618350982666
    5. ' 
' → logprob: -13.50118350982666
    6. ' stack' → logprob: -13.50118350982666
    7. '               ' → logprob: -13.62618350982666
    8. '          ' → logprob: -14.12618350982666
    9. '```' → logprob: -14.50118350982666
    10. '   ' → logprob: -14.87618350982666

Token 244: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.236549335066229e-05
    2. '
' → logprob: -11.125021934509277
    3. '       ' → logprob: -13.375021934509277
    4. '          ' → logprob: -13.500021934509277
    5. '            
' → logprob: -13.875021934509277
    6. '```' → logprob: -14.000021934509277
    7. '               ' → logprob: -14.125021934509277
    8. ' stack' → logprob: -14.250021934509277
    9. ' 
' → logprob: -14.250021934509277
    10. 'stack' → logprob: -16.125022888183594

Token 245: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.029880885034799576
    2. ' stack' → logprob: -3.529881000518799
    3. '       ' → logprob: -9.15488052368164
    4. '           ' → logprob: -10.90488052368164
    5. '	stack' → logprob: -13.02988052368164
    6. '   ' → logprob: -13.40488052368164
    7. ' ' → logprob: -14.52988052368164
    8. '        ' → logprob: -14.77988052368164
    9. '(stack' → logprob: -14.90488052368164
    10. '.stack' → logprob: -15.02988052368164

Token 246: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0031815171241760254
    2. '.' → logprob: -5.753181457519531
    3. '.app' → logprob: -13.253181457519531
    4. 'append' → logprob: -13.628181457519531
    5. '.Append' → logprob: -15.003181457519531
    6. ' .' → logprob: -15.253181457519531
    7. ' append' → logprob: -16.00318145751953
    8. '.push' → logprob: -16.75318145751953
    9. '_append' → logprob: -18.00318145751953
    10. '.ap' → logprob: -18.50318145751953

Token 247: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -5.080963092041202e-06
    2. '(' → logprob: -12.375004768371582
    3. 'digit' → logprob: -14.125004768371582
    4. '(
' → logprob: -17.1250057220459
    5. 'd' → logprob: -17.7500057220459
    6. ' digit' → logprob: -21.0000057220459
    7. ' (' → logprob: -21.3750057220459
    8. '(token' → logprob: -22.0000057220459
    9. '()' → logprob: -22.2500057220459
    10. '((' → logprob: -22.2500057220459

Token 248: 'igit' (ID: 16673)
  Prédit: 'igit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igit' → logprob: -0.03396447002887726
    2. 'it' → logprob: -3.5339643955230713
    3. 'digit' → logprob: -5.53396463394165
    4. 'git' → logprob: -8.408964157104492
    5. 'ight' → logprob: -11.658964157104492
    6. '_digit' → logprob: -11.658964157104492
    7. ' digit' → logprob: -13.158964157104492
    8. ')' → logprob: -13.658964157104492
    9. 'itig' → logprob: -13.658964157104492
    10. 'igits' → logprob: -14.158964157104492

Token 249: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014170228969305754
    2. ')
' → logprob: -7.37641716003418
    3. '       ' → logprob: -7.87641716003418
    4. '<|end|>' → logprob: -8.25141716003418
    5. ' )' → logprob: -9.87641716003418
    6. '
' → logprob: -9.87641716003418
    7. '<|end|>' → logprob: -10.87641716003418
    8. ')return' → logprob: -11.00141716003418
    9. '        
' → logprob: -13.62641716003418
    10. '),' → logprob: -13.87641716003418

Token 250: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015976991271600127
    2. ' if' → logprob: -7.251597881317139
    3. '        
' → logprob: -8.25159740447998
    4. '
' → logprob: -8.37659740447998
    5. ' while' → logprob: -9.62659740447998
    6. '<|end|>' → logprob: -9.87659740447998
    7. '[' → logprob: -10.12659740447998
    8. ' return' → logprob: -10.50159740447998
    9. ' 
' → logprob: -10.62659740447998
    10. '```' → logprob: -10.75159740447998

Token 251: ' if' (ID: 538)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.40764403343200684
    2. ' while' → logprob: -1.1576440334320068
    3. '       ' → logprob: -4.907644271850586
    4. 'result' → logprob: -5.282644271850586
    5. 'return' → logprob: -5.407644271850586
    6. ' return' → logprob: -6.532644271850586
    7. '#' → logprob: -7.532644271850586
    8. 'stack' → logprob: -7.657644271850586
    9. '        
' → logprob: -8.032644271850586
    10. ' result' → logprob: -8.407644271850586

Token 252: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.002190948696807027
    2. 'to' → logprob: -6.127191066741943
    3. ' len' → logprob: -12.127190589904785
    4. 'len' → logprob: -15.877190589904785
    5. ' k' → logprob: -16.0021915435791
    6. '	to' → logprob: -16.1271915435791
    7. '   ' → logprob: -17.0021915435791
    8. 'k' → logprob: -17.0021915435791
    9. 'To' → logprob: -17.2521915435791
    10. ' ' → logprob: -17.2521915435791

Token 253: '_remove' (ID: 41629)
  Prédit: '_remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remove' → logprob: -2.5822400857578032e-05
    2. 'remove' → logprob: -10.625025749206543
    3. '_' → logprob: -14.625025749206543
    4. '_REMOVE' → logprob: -14.875025749206543
    5. '_rem' → logprob: -15.875025749206543
    6. 'Remove' → logprob: -16.37502670288086
    7. '_
' → logprob: -16.50002670288086
    8. '_keep' → logprob: -16.62502670288086
    9. '_reduce' → logprob: -16.75002670288086
    10. '
' → logprob: -17.25002670288086

Token 254: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5762940049171448
    2. '>' → logprob: -0.8262940049171448
    3. ':' → logprob: -7.9512939453125
    4. ':
' → logprob: -13.9512939453125
    5. ' ' → logprob: -15.3262939453125
    6. '   ' → logprob: -15.3262939453125
    7. '">' → logprob: -15.9512939453125
    8. ')>' → logprob: -15.9512939453125
    9. '&gt' → logprob: -16.0762939453125
    10. '>:' → logprob: -16.4512939453125

Token 255: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.048587825149297714
    2. ' ' → logprob: -3.0485877990722656
    3. 'k' → logprob: -14.798587799072266
    4. 'to' → logprob: -17.048587799072266
    5. '   ' → logprob: -17.923587799072266
    6. ' k' → logprob: -18.298587799072266
    7. '  ' → logprob: -18.298587799072266
    8. ' ' → logprob: -18.298587799072266
    9. ' to' → logprob: -18.548587799072266
    10. '```' → logprob: -18.923587799072266

Token 256: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001170460251159966
    2. ' ' → logprob: -6.751170635223389
    3. 'k' → logprob: -15.37617015838623
    4. '   ' → logprob: -17.876171112060547
    5. '=' → logprob: -18.501171112060547
    6. '۰' → logprob: -18.626171112060547
    7. '  ' → logprob: -18.813671112060547
    8. ',' → logprob: -19.251171112060547
    9. ')' → logprob: -19.251171112060547
    10. 'to' → logprob: -19.376171112060547

Token 257: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.011062555946409702
    2. ':' → logprob: -4.5110626220703125
    3. '       ' → logprob: -12.636062622070312
    4. ',' → logprob: -12.886062622070312
    5. ':

' → logprob: -13.011062622070312
    6. '           ' → logprob: -13.386062622070312
    7. '   ' → logprob: -13.511062622070312
    8. ':
' → logprob: -13.636062622070312
    9. '):
' → logprob: -13.636062622070312
    10. ' :
' → logprob: -13.761062622070312

Token 258: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32489144802093506
    2. ' stack' → logprob: -2.0748915672302246
    3. '       ' → logprob: -2.4498915672302246
    4. 'stack' → logprob: -2.8248915672302246
    5. '	stack' → logprob: -5.824891567230225
    6. ' for' → logprob: -6.699891567230225
    7. ' del' → logprob: -7.074891567230225
    8. '(stack' → logprob: -8.074891090393066
    9. ' return' → logprob: -8.574891090393066
    10. '.stack' → logprob: -8.699891090393066

Token 259: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.38690438866615295
    2. 'stack' (adapté à ' stack') → logprob: -1.1369043588638306
    3. '       ' → logprob: -10.6369047164917
    4. '	stack' → logprob: -13.0119047164917
    5. 'return' → logprob: -13.1369047164917
    6. ' return' → logprob: -13.2619047164917
    7. '   ' → logprob: -13.7619047164917
    8. ' for' → logprob: -14.5119047164917
    9. '(stack' → logprob: -15.0119047164917
    10. '.stack' → logprob: -15.1369047164917

Token 260: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47482407093048096
    2. ' =' → logprob: -0.974824070930481
    3. '[:-' → logprob: -7.224823951721191
    4. '[:' → logprob: -11.724823951721191
    5. '[-' → logprob: -12.599823951721191
    6. '   ' → logprob: -12.974823951721191
    7. '=cut' → logprob: -13.099823951721191
    8. '[:]' → logprob: -13.724823951721191
    9. ' ' → logprob: -14.974823951721191
    10. '[' → logprob: -15.474823951721191

Token 261: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.04858850687742233
    2. ' stack' → logprob: -3.048588514328003
    3. '	stack' → logprob: -14.173588752746582
    4. '(stack' → logprob: -15.048588752746582
    5. '.stack' → logprob: -16.673587799072266
    6. 'st' → logprob: -17.298587799072266
    7. 'stackoverflow' → logprob: -17.798587799072266
    8. '_stack' → logprob: -18.048587799072266
    9. ' ' → logprob: -19.298587799072266
    10. '   ' → logprob: -19.673587799072266

Token 262: '[:-' (ID: 63556)
  Prédit: '[:-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -0.0007107630372047424
    2. '[:' → logprob: -7.250710964202881
    3. '[' → logprob: -14.000710487365723
    4. '[-' → logprob: -18.50071144104004
    5. '[:]' → logprob: -20.50071144104004
    6. '[len' → logprob: -20.62571144104004
    7. '[::-' → logprob: -21.25071144104004
    8. '[...,' → logprob: -21.50071144104004
    9. 'stack' → logprob: -22.25071144104004
    10. '[]' → logprob: -22.25071144104004

Token 263: 'to' (ID: 935)
  Prédit: 'to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -2.696889623621246e-06
    2. ' to' → logprob: -12.87500286102295
    3. '```' → logprob: -20.625001907348633
    4. '   ' → logprob: -21.625001907348633
    5. ' ' → logprob: -22.250001907348633
    6. 'k' → logprob: -22.625001907348633
    7. 'To' → logprob: -22.750001907348633
    8. 'remove' → logprob: -23.000001907348633
    9. ')' → logprob: -23.000001907348633
    10. 'toa' → logprob: -23.500001907348633

Token 264: '_remove' (ID: 41629)
  Prédit: '_remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remove' → logprob: -0.0019300628919154406
    2. 'remove' → logprob: -6.251930236816406
    3. ' remove' → logprob: -14.626930236816406
    4. 'Remove' → logprob: -14.876930236816406
    5. '_REMOVE' → logprob: -14.876930236816406
    6. '-remove' → logprob: -15.501930236816406
    7. '	remove' → logprob: -16.626930236816406
    8. '_' → logprob: -17.001930236816406
    9. '_keep' → logprob: -18.001930236816406
    10. 'r' → logprob: -18.251930236816406

Token 265: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16037867963314056
    2. ']
' → logprob: -1.9103786945343018
    3. '       ' → logprob: -9.035378456115723
    4. ']
' → logprob: -10.410378456115723
    5. ']

' → logprob: -12.785378456115723
    6. ' ]' → logprob: -13.410378456115723
    7. ' ]
' → logprob: -14.535378456115723
    8. ')' → logprob: -15.660378456115723
    9. '   ' → logprob: -16.78537940979004
    10. ']


' → logprob: -17.78537940979004

Token 266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006666870322078466
    2. 'return' → logprob: -8.000666618347168
    3. ' return' → logprob: -8.250666618347168
    4. '
' → logprob: -9.625666618347168
    5. '        
' → logprob: -13.500666618347168
    6. '           ' → logprob: -14.125666618347168
    7. '```' → logprob: -14.250666618347168
    8. '   ' → logprob: -14.250666618347168
    9. '	return' → logprob: -15.875666618347168
    10. '
' → logprob: -16.375667572021484

Token 267: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04869932681322098
    2. '       ' → logprob: -3.298699378967285
    3. ' return' → logprob: -4.548699378967285
    4. 'result' → logprob: -10.923699378967285
    5. '```' → logprob: -14.048699378967285
    6. '	return' → logprob: -14.798699378967285
    7. 'new' → logprob: -15.048699378967285
    8. '        
' → logprob: -15.548699378967285
    9. '   ' → logprob: -15.673699378967285
    10. '{return' → logprob: -16.29869842529297

Token 268: ' Digit' (ID: 91174)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -0.048587486147880554
    2. ' Digit' → logprob: -3.0485875606536865
    3. 'Digital' → logprob: -16.798587799072266
    4. '   ' → logprob: -16.923587799072266
    5. ' digit' → logprob: -18.298587799072266
    6. 'digit' → logprob: -18.673587799072266
    7. 'Digits' → logprob: -19.298587799072266
    8. ' ' → logprob: -19.548587799072266
    9. '_digit' → logprob: -19.673587799072266
    10. ' Digital' → logprob: -20.298587799072266

Token 269: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -6.704273118884885e-07
    2. 'sequence' → logprob: -14.500000953674316
    3. '_sequence' → logprob: -17.25
    4. 'Sequ' → logprob: -17.25
    5. ' Sequence' → logprob: -18.375
    6. 'Digit' → logprob: -19.5
    7. '_SEQUENCE' → logprob: -19.625
    8. ' sequence' → logprob: -20.25
    9. '   ' → logprob: -20.375
    10. 'Sequences' → logprob: -20.5

Token 270: '(stack' (ID: 52691)
  Prédit: '(stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stack' → logprob: -4.4849443838757e-06
    2. 'stack' → logprob: -12.875004768371582
    3. '(' → logprob: -14.000004768371582
    4. '(list' → logprob: -14.750004768371582
    5. '(st' → logprob: -15.125004768371582
    6. '([' → logprob: -16.000003814697266
    7. ' (' → logprob: -16.375003814697266
    8. '(queue' → logprob: -16.875003814697266
    9. '(stock' → logprob: -18.000003814697266
    10. '(
' → logprob: -18.250003814697266

Token 271: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ')
' → logprob: -13.375001907348633
    3. ' )' → logprob: -14.500001907348633
    4. '<|end|>' → logprob: -15.750001907348633
    5. '   ' → logprob: -16.875001907348633
    6. ')return' → logprob: -17.750001907348633
    7. ')#' → logprob: -17.750001907348633
    8. '       ' → logprob: -18.500001907348633
    9. '[' → logprob: -18.625001907348633
    10. '[])' → logprob: -18.875001907348633

Token 272: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 273: ' Digit' (ID: 91174)
  Prédit: 'Lex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Lex' → logprob: -1.399775743484497
    2. 'Largest' → logprob: -1.524775743484497
    3. 'Remove' → logprob: -2.399775743484497
    4. 'Digit' → logprob: -2.524775743484497
    5. 'Minimal' → logprob: -2.774775743484497
    6. 'Small' → logprob: -3.149775743484497
    7. 'Gre' → logprob: -3.149775743484497
    8. 'Con' → logprob: -3.524775743484497
    9. 'Reverse' → logprob: -3.649775743484497
    10. 'Br' → logprob: -3.774775743484497

Token 274: 'Sequence' (ID: 17333)
  Prédit: 'Rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rem' → logprob: -0.1044868752360344
    2. 'Sequence' → logprob: -3.2294869422912598
    3. 'Adder' → logprob: -3.9794869422912598
    4. 'Increment' → logprob: -4.22948694229126
    5. 'Sum' → logprob: -5.85448694229126
    6. 'De' → logprob: -5.97948694229126
    7. 'Re' → logprob: -6.22948694229126
    8. 'Inser' → logprob: -6.72948694229126
    9. 'Min' → logprob: -6.72948694229126
    10. 'Max' → logprob: -6.97948694229126

Token 275: 'Factory' (ID: 4870)
  Prédit: 'Manipulator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Manipulator' → logprob: -0.888925313949585
    2. 'Builder' → logprob: -2.388925313949585
    3. 'Mer' → logprob: -2.513925313949585
    4. 'Comparator' → logprob: -2.513925313949585
    5. 'Optimizer' → logprob: -2.763925313949585
    6. 'Max' → logprob: -3.013925313949585
    7. 'Reducer' → logprob: -3.138925313949585
    8. 'Modifier' → logprob: -3.763925313949585
    9. 'Comparer' → logprob: -3.888925313949585
    10. 'Processor' → logprob: -4.013925552368164

Token 276: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.865583706414327e-05
    2. ':
' → logprob: -9.37509822845459
    3. '():' → logprob: -11.62509822845459
    4. ':def' → logprob: -13.50009822845459
    5. '):' → logprob: -13.87509822845459
    6. ' :' → logprob: -14.37509822845459
    7. '<|end|>' → logprob: -14.50009822845459
    8. ':

' → logprob: -14.75009822845459
    9. '(' → logprob: -15.37509822845459
    10. 'def' → logprob: -16.000099182128906

Token 277: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002371521550230682
    2. 'def' → logprob: -8.625237464904785
    3. ' def' → logprob: -10.000237464904785
    4. 'staticmethod' → logprob: -11.875237464904785
    5. ' @' → logprob: -13.125237464904785
    6. '@' → logprob: -13.875237464904785
    7. ':' → logprob: -14.000237464904785
    8. '    
' → logprob: -15.000237464904785
    9. '	def' → logprob: -15.625237464904785
    10. 'classmethod' → logprob: -15.875237464904785

Token 278: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.7747251987457275
    2. ' @' → logprob: -1.0247251987457275
    3. '   ' → logprob: -2.5247251987457275
    4. ' def' → logprob: -2.6497251987457275
    5. 'def' → logprob: -3.5247251987457275
    6. 'staticmethod' → logprob: -10.149724960327148
    7. ' ' → logprob: -10.899724960327148
    8. ' static' → logprob: -13.399724960327148
    9. 'static' → logprob: -14.149724960327148
    10. '  ' → logprob: -14.274724960327148

Token 279: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.0005678066518157721
    2. 'classmethod' → logprob: -7.50056791305542
    3. 'static' → logprob: -11.125567436218262
    4. 'property' → logprob: -17.125568389892578
    5. ' static' → logprob: -17.750568389892578
    6. 'dat' → logprob: -19.125568389892578
    7. 'st' → logprob: -19.750568389892578
    8. 'abstract' → logprob: -20.250568389892578
    9. '__' → logprob: -21.250568389892578
    10. 'Static' → logprob: -21.625568389892578

Token 280: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00829659216105938
    2. ' def' → logprob: -5.133296489715576
    3. '
' → logprob: -6.133296489715576
    4. '   ' → logprob: -8.633296966552734
    5. '(def' → logprob: -12.258296966552734
    6. '(' → logprob: -12.633296966552734
    7. '    
' → logprob: -12.633296966552734
    8. '()
' → logprob: -13.508296966552734
    9. '_def' → logprob: -13.758296966552734
    10. '	def' → logprob: -14.133296966552734

Token 281: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016755681484937668
    2. '
' → logprob: -4.1417555809021
    3. ' def' → logprob: -7.3917555809021
    4. '   ' → logprob: -9.391756057739258
    5. '    
' → logprob: -11.266756057739258
    6. '  
' → logprob: -12.516756057739258
    7. '  ' → logprob: -13.516756057739258
    8. '	def' → logprob: -14.141756057739258
    9. '   
' → logprob: -14.266756057739258
    10. '_def' → logprob: -14.891756057739258

Token 282: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00014716439181938767
    2. ' def' → logprob: -8.875146865844727
    3. '   ' → logprob: -11.875146865844727
    4. 'from' → logprob: -15.625146865844727
    5. 'classmethod' → logprob: -16.000146865844727
    6. '
' → logprob: -16.250146865844727
    7. ' ' → logprob: -16.625146865844727
    8. 'class' → logprob: -17.250146865844727
    9. '	def' → logprob: -18.250146865844727
    10. 'staticmethod' → logprob: -18.500146865844727

Token 283: ' create' (ID: 2501)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.11587510257959366
    2. 'create' → logprob: -2.490875005722046
    3. ' from' → logprob: -3.865875005722046
    4. ' create' → logprob: -5.240875244140625
    5. 'remove' → logprob: -8.240875244140625
    6. ' remove' → logprob: -11.115875244140625
    7. '_from' → logprob: -11.240875244140625
    8. 'new' → logprob: -11.490875244140625
    9. 'of' → logprob: -12.115875244140625
    10. 'build' → logprob: -12.240875244140625

Token 284: '_from' (ID: 12526)
  Prédit: '(sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sequence' → logprob: -0.05566353723406792
    2. '(d' → logprob: -3.055663585662842
    3. '_digit' → logprob: -6.305663585662842
    4. 'Digit' → logprob: -6.430663585662842
    5. '(' → logprob: -6.805663585662842
    6. 'sequence' → logprob: -7.180663585662842
    7. '(D' → logprob: -7.930663585662842
    8. ' (' → logprob: -8.180663108825684
    9. 'from' → logprob: -8.805663108825684
    10. '()' → logprob: -9.180663108825684

Token 285: '_list' (ID: 4162)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.6068015098571777
    2. '_list' → logprob: -1.2318015098571777
    3. 'digits' → logprob: -2.4818015098571777
    4. '_string' → logprob: -3.4818015098571777
    5. '_digits' → logprob: -3.4818015098571777
    6. 'list' → logprob: -4.731801509857178
    7. 'str' → logprob: -5.106801509857178
    8. '_str' → logprob: -6.356801509857178
    9. 'int' → logprob: -7.981801509857178
    10. 'List' → logprob: -8.231801986694336

Token 286: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0018465323373675346
    2. '(' → logprob: -6.6268463134765625
    3. '(lst' → logprob: -7.7518463134765625
    4. ' (' → logprob: -10.001846313476562
    5. '(numbers' → logprob: -11.126846313476562
    6. 'digits' → logprob: -11.876846313476562
    7. '(list' → logprob: -12.001846313476562
    8. '(cls' → logprob: -12.626846313476562
    9. '(data' → logprob: -12.751846313476562
    10. '_digits' → logprob: -13.376846313476562

Token 287: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.004868688061833382
    2. 'ef' → logprob: -5.629868507385254
    3. 'igit' → logprob: -7.629868507385254
    4. 'ata' → logprob: -8.629868507385254
    5. 'digits' → logprob: -8.754868507385254
    6. 'ig' → logprob: -9.004868507385254
    7. 'efs' → logprob: -10.379868507385254
    8. 'ict' → logprob: -10.504868507385254
    9. 'i' → logprob: -10.504868507385254
    10. 'igs' → logprob: -10.879868507385254

Token 288: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32787561416625977
    2. ')' → logprob: -1.3278756141662598
    3. '(d' → logprob: -4.57787561416626
    4. '):' → logprob: -6.70287561416626
    5. ' )' → logprob: -6.82787561416626
    6. '):
' → logprob: -7.95287561416626
    7. ',' → logprob: -7.95287561416626
    8. ')d' → logprob: -8.077875137329102
    9. '   ' → logprob: -8.702875137329102
    10. '```' → logprob: -8.827875137329102

Token 289: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.011081299744546413
    2. ' List' → logprob: -4.511081218719482
    3. '[List' → logprob: -10.51108169555664
    4. 'list' → logprob: -12.51108169555664
    5. ')' → logprob: -13.13608169555664
    6. ' list' → logprob: -15.38608169555664
    7. '_list' → logprob: -16.01108169555664
    8. 'int' → logprob: -16.26108169555664
    9. '[int' → logprob: -16.76108169555664
    10. '(List' → logprob: -16.88608169555664

Token 290: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -8.2994620242971e-06
    2. 'int' → logprob: -11.750008583068848
    3. '<int' → logprob: -15.500008583068848
    4. ')' → logprob: -16.25000762939453
    5. ']int' → logprob: -18.00000762939453
    6. '   ' → logprob: -18.25000762939453
    7. '[' → logprob: -18.25000762939453
    8. '=int' → logprob: -19.00000762939453
    9. '[
' → logprob: -19.37500762939453
    10. ' int' → logprob: -19.37500762939453

Token 291: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6931565999984741
    2. '])' → logprob: -0.6931565999984741
    3. '   ' → logprob: -13.818156242370605
    4. ']' → logprob: -13.818156242370605
    5. ''])' → logprob: -13.943156242370605
    6. '>)' → logprob: -13.943156242370605
    7. '`)' → logprob: -14.068156242370605
    8. ' )' → logprob: -14.318156242370605
    9. '）' → logprob: -14.443156242370605
    10. '):
' → logprob: -14.568156242370605

Token 292: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.07107891887426376
    2. ':' → logprob: -3.5710790157318115
    3. ')' → logprob: -3.8210790157318115
    4. ' ->' → logprob: -4.196078777313232
    5. ')->' → logprob: -5.696078777313232
    6. '   ' → logprob: -9.57107925415039
    7. '()->' → logprob: -10.69607925415039
    8. '->[' → logprob: -10.94607925415039
    9. ':return' → logprob: -11.07107925415039
    10. '>' → logprob: -11.19607925415039

Token 293: ' Digit' (ID: 91174)
  Prédit: ' Digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Digit' → logprob: -0.06196869537234306
    2. 'Digit' → logprob: -2.8119688034057617
    3. ' Digital' → logprob: -14.686968803405762
    4. ' digit' → logprob: -14.811968803405762
    5. ' Dig' → logprob: -15.686968803405762
    6. 'Digital' → logprob: -17.186967849731445
    7. '_digit' → logprob: -17.561967849731445
    8. ' ' → logprob: -18.186967849731445
    9. 'digit' → logprob: -18.436967849731445
    10. 'Digits' → logprob: -18.811967849731445

Token 294: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -1.9361264946837764e-07
    2. '_sequence' → logprob: -16.375
    3. 'sequence' → logprob: -17.0
    4. ' Sequence' → logprob: -18.375
    5. 'Sequ' → logprob: -18.5
    6. '_SEQUENCE' → logprob: -18.875
    7. 'Sequences' → logprob: -19.375
    8. '.Sequence' → logprob: -19.625
    9. 'quence' → logprob: -20.625
    10. 'int' → logprob: -21.125

Token 295: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014265445061028004
    2. ':
' → logprob: -6.626426696777344
    3. '():' → logprob: -10.251426696777344
    4. '):' → logprob: -10.626426696777344
    5. ':return' → logprob: -10.876426696777344
    6. '   ' → logprob: -11.876426696777344
    7. '():
' → logprob: -12.376426696777344
    8. '->' → logprob: -12.876426696777344
    9. '       ' → logprob: -13.001426696777344
    10. '):
' → logprob: -13.251426696777344

Token 296: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007960468647070229
    2. 'return' → logprob: -7.250795841217041
    3. ' return' → logprob: -9.3757963180542
    4. '   ' → logprob: -14.3757963180542
    5. ':return' → logprob: -15.2507963180542
    6. '```' → logprob: -16.000795364379883
    7. '{return' → logprob: -16.250795364379883
    8. '	return' → logprob: -16.875795364379883
    9. '      ' → logprob: -17.250795364379883
    10. '	   ' → logprob: -17.875795364379883

Token 297: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.018693212419748306
    2. '       ' → logprob: -4.018693447113037
    3. ' return' → logprob: -7.518693447113037
    4. '   ' → logprob: -15.518692970275879
    5. '	return' → logprob: -16.268693923950195
    6. '{return' → logprob: -18.643693923950195
    7. ' ' → logprob: -19.268693923950195
    8. '```' → logprob: -19.643693923950195
    9. ':return' → logprob: -19.768693923950195
    10. '      ' → logprob: -20.268693923950195

Token 298: ' Digit' (ID: 91174)
  Prédit: ' Digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Digit' → logprob: -0.3868713080883026
    2. 'Digit' → logprob: -1.136871337890625
    3. 'Digital' → logprob: -16.261871337890625
    4. ' Digital' → logprob: -17.011871337890625
    5. '_digit' → logprob: -17.136871337890625
    6. '   ' → logprob: -17.261871337890625
    7. ' digit' → logprob: -17.261871337890625
    8. 'Digits' → logprob: -17.636871337890625
    9. ' ' → logprob: -18.761871337890625
    10. 'digit' → logprob: -19.511871337890625

Token 299: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: 0.0
    2. ' Sequence' → logprob: -17.0
    3. 'List' → logprob: -17.625
    4. '_sequence' → logprob: -17.875
    5. 'Sequ' → logprob: -18.25
    6. '       ' → logprob: -19.375
    7. '.Sequence' → logprob: -19.375
    8. 'Digit' → logprob: -19.625
    9. 'Seq' → logprob: -20.125
    10. '   ' → logprob: -20.25

Token 300: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -13.750000953674316
    3. 'digits' → logprob: -16.125001907348633
    4. 'd' → logprob: -18.250001907348633
    5. '([' → logprob: -18.500001907348633
    6. ' (' → logprob: -18.500001907348633
    7. ' digits' → logprob: -18.875001907348633
    8. '(list' → logprob: -19.750001907348633
    9. '((' → logprob: -19.875001907348633
    10. 'Digits' → logprob: -20.750001907348633

Token 301: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.0066605499014258385
    2. 'digits' → logprob: -5.256660461425781
    3. 'g' → logprob: -6.631660461425781
    4. 'its' → logprob: -9.506660461425781
    5. 'ig' → logprob: -11.756660461425781
    6. 'igts' → logprob: -11.881660461425781
    7. '   ' → logprob: -12.131660461425781
    8. ' digits' → logprob: -12.506660461425781
    9. '_digits' → logprob: -12.881660461425781
    10. 'git' → logprob: -13.006660461425781

Token 302: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')
' → logprob: -13.750001907348633
    3. ' )' → logprob: -15.375001907348633
    4. '<|end|>' → logprob: -17.125001907348633
    5. '   ' → logprob: -18.000001907348633
    6. '       ' → logprob: -18.250001907348633
    7. '[])' → logprob: -18.375001907348633
    8. ')return' → logprob: -18.750001907348633
    9. ' ' → logprob: -19.125001907348633
    10. ')

' → logprob: -19.250001907348633

Token 303: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.008319880813360214
    2. '<|end|>' → logprob: -5.133319854736328
    3. ' class' → logprob: -7.133319854736328
    4. '#' → logprob: -7.133319854736328
    5. ' ' → logprob: -8.008319854736328
    6. '```' → logprob: -8.758319854736328
    7. '   ' → logprob: -9.008319854736328
    8. '
' → logprob: -10.258319854736328
    9. '<|end|>' → logprob: -10.258319854736328
    10. 'def' → logprob: -10.383319854736328

Token 304: ' Digit' (ID: 91174)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -0.16440606117248535
    2. ' Digit' → logprob: -1.9144060611724854
    3. 'Test' → logprob: -7.039405822753906
    4. 'Largest' → logprob: -7.164405822753906
    5. '_digit' → logprob: -7.164405822753906
    6. 'Number' → logprob: -8.289405822753906
    7. 'Gre' → logprob: -8.539405822753906
    8. 'Max' → logprob: -8.664405822753906
    9. ' Largest' → logprob: -8.664405822753906
    10. 'Strategy' → logprob: -8.914405822753906

Token 305: 'Game' (ID: 6627)
  Prédit: 'Rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Rem' → logprob: -0.26801300048828125
    2. 'Sequence' → logprob: -1.6430130004882812
    3. 'Processor' → logprob: -4.143013000488281
    4. 'Transformer' → logprob: -5.768013000488281
    5. 'Comparator' → logprob: -5.768013000488281
    6. 'Manipulator' → logprob: -5.893013000488281
    7. 'Max' → logprob: -6.143013000488281
    8. 'Selector' → logprob: -6.518013000488281
    9. 'Appender' → logprob: -6.893013000488281
    10. 'Filter' → logprob: -6.893013000488281

Token 306: 'Context' (ID: 2522)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004367697983980179
    2. ':
' → logprob: -5.504367828369141
    3. 'Strategy' → logprob: -8.37936782836914
    4. ':

' → logprob: -11.37936782836914
    5. '_strategy' → logprob: -11.62936782836914
    6. '(Game' → logprob: -11.75436782836914
    7. '(' → logprob: -12.25436782836914
    8. 'Strategies' → logprob: -12.25436782836914
    9. '(strategy' → logprob: -12.37936782836914
    10. 'Game' → logprob: -13.12936782836914

Token 307: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.64970643306151e-05
    2. ':
' → logprob: -9.500086784362793
    3. ' :' → logprob: -12.750086784362793
    4. '(' → logprob: -13.250086784362793
    5. ':def' → logprob: -13.250086784362793
    6. '():' → logprob: -13.500086784362793
    7. ':

' → logprob: -14.375086784362793
    8. '):' → logprob: -14.500086784362793
    9. '<|end|>' → logprob: -15.000086784362793
    10. '(D' → logprob: -15.125086784362793

Token 308: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.102680633077398e-05
    2. ' def' → logprob: -9.625090599060059
    3. 'def' → logprob: -10.625090599060059
    4. '   ' → logprob: -14.875090599060059
    5. '    
' → logprob: -16.125091552734375
    6. '
' → logprob: -16.500091552734375
    7. 'class' → logprob: -16.625091552734375
    8. '    ' → logprob: -17.375091552734375
    9. '```' → logprob: -17.375091552734375
    10. '	def' → logprob: -18.125091552734375

Token 309: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.31331199407577515
    2. ' def' → logprob: -1.31331205368042
    3. '   ' → logprob: -10.188311576843262
    4. 'class' → logprob: -11.313311576843262
    5. ' ' → logprob: -15.438311576843262
    6. '__' → logprob: -16.563312530517578
    7. '```' → logprob: -16.688312530517578
    8. '	def' → logprob: -16.938312530517578
    9. '_def' → logprob: -17.688312530517578
    10. 'strategy' → logprob: -17.938312530517578

Token 310: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.1210893914103508
    2. '__' → logprob: -2.246089458465576
    3. 'init' → logprob: -5.121089458465576
    4. ' def' → logprob: -6.621089458465576
    5. 'def' → logprob: -7.746089458465576
    6. '_init' → logprob: -8.121088981628418
    7. '```' → logprob: -9.121088981628418
    8. ' init' → logprob: -9.871088981628418
    9. ' ' → logprob: -10.746088981628418
    10. '___' → logprob: -12.371088981628418

Token 311: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. ' init' → logprob: -16.25
    3. 'def' → logprob: -19.25
    4. 'new' → logprob: -19.5
    5. 'inite' → logprob: -19.5
    6. '   ' → logprob: -19.875
    7. 'call' → logprob: -20.25
    8. 'name' → logprob: -20.5
    9. '_init' → logprob: -20.5
    10. '```' → logprob: -20.625

Token 312: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0011075903894379735
    2. '(self' → logprob: -7.251107692718506
    3. '__' → logprob: -8.001107215881348
    4. '__(
' → logprob: -9.876107215881348
    5. '_(' → logprob: -12.251107215881348
    6. ' (' → logprob: -12.876107215881348
    7. '(' → logprob: -13.001107215881348
    8. '__((' → logprob: -14.001107215881348
    9. '__('' → logprob: -16.001108169555664
    10. '<>(' → logprob: -16.251108169555664

Token 313: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.567575034452602e-05
    2. ' self' → logprob: -9.50009536743164
    3. '
' → logprob: -11.12509536743164
    4. '(self' → logprob: -13.00009536743164
    5. '   ' → logprob: -13.87509536743164
    6. ',' → logprob: -13.87509536743164
    7. '       ' → logprob: -14.25009536743164
    8. ')' → logprob: -14.87509536743164
    9. '):
' → logprob: -15.37509536743164
    10. ',self' → logprob: -15.50009536743164

Token 314: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000996963819488883
    2. 'self' → logprob: -7.250997066497803
    3. ' ,' → logprob: -8.250996589660645
    4. ',self' → logprob: -11.125996589660645
    5. ' self' → logprob: -12.250996589660645
    6. '(self' → logprob: -12.875996589660645
    7. ',
' → logprob: -13.250996589660645
    8. '):
' → logprob: -14.250996589660645
    9. ')' → logprob: -15.250996589660645
    10. '   ' → logprob: -15.375996589660645

Token 315: ' remover' (ID: 88753)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -1.1537939310073853
    2. 'sequence' → logprob: -1.1537939310073853
    3. 'strategy' → logprob: -1.5287939310073853
    4. ' strategy' → logprob: -2.7787938117980957
    5. ' sequence' → logprob: -2.9037938117980957
    6. ' remover' → logprob: -3.9037938117980957
    7. 'digit' → logprob: -5.403793811798096
    8. ' digit' → logprob: -6.028793811798096
    9. 'remove' → logprob: -6.153793811798096
    10. 'digits' → logprob: -6.278793811798096

Token 316: '_strategy' (ID: 117374)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20148758590221405
    2. '_strategy' → logprob: -1.7014875411987305
    3. 'strategy' → logprob: -10.07648754119873
    4. ' :' → logprob: -11.32648754119873
    5. '_str' → logprob: -12.20148754119873
    6. 'Strategy' → logprob: -12.32648754119873
    7. 'strateg' → logprob: -12.70148754119873
    8. ' strategy' → logprob: -12.95148754119873
    9. '):' → logprob: -13.32648754119873
    10. ')' → logprob: -13.70148754119873

Token 317: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.558399319241289e-05
    2. '):' → logprob: -10.625025749206543
    3. ' :' → logprob: -14.250025749206543
    4. ')' → logprob: -14.875025749206543
    5. '=' → logprob: -16.500024795532227
    6. '):
' → logprob: -17.250024795532227
    7. ':D' → logprob: -17.625024795532227
    8. '_:' → logprob: -17.750024795532227
    9. ' ):' → logprob: -18.000024795532227
    10. '__:' → logprob: -19.000024795532227

Token 318: ' Digit' (ID: 91174)
  Prédit: ' Digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Digit' → logprob: -0.12693031132221222
    2. 'Digit' → logprob: -2.1269302368164062
    3. ' digit' → logprob: -13.876930236816406
    4. ' Digital' → logprob: -14.376930236816406
    5. '_digit' → logprob: -15.751930236816406
    6. ')' → logprob: -15.876930236816406
    7. 'Digital' → logprob: -15.876930236816406
    8. ' ' → logprob: -16.376930236816406
    9. ' Dig' → logprob: -16.751930236816406
    10. '   ' → logprob: -17.751930236816406

Token 319: 'Rem' (ID: 6882)
  Prédit: 'Rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rem' → logprob: -2.2200749754119897e-06
    2. ' remover' → logprob: -14.500001907348633
    3. 'em' → logprob: -14.875001907348633
    4. 'rem' → logprob: -15.125001907348633
    5. '_rem' → logprob: -15.125001907348633
    6. 'Remove' → logprob: -15.250001907348633
    7. ' Rem' → logprob: -15.375001907348633
    8. 'Em' → logprob: -16.375001907348633
    9. 'Removing' → logprob: -16.750001907348633
    10. 'er' → logprob: -17.625001907348633

Token 320: 'over' (ID: 2898)
  Prédit: 'over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -1.1160349458805285e-05
    2. 'ove' → logprob: -11.750011444091797
    3. 'o' → logprob: -13.875011444091797
    4. '_over' → logprob: -14.250011444091797
    5. 'ov' → logprob: -14.750011444091797
    6. 'Over' → logprob: -15.375011444091797
    7. 'overs' → logprob: -15.750011444091797
    8. '
' → logprob: -16.125011444091797
    9. 'oved' → logprob: -16.125011444091797
    10. ' over' → logprob: -16.375011444091797

Token 321: 'Strategy' (ID: 21488)
  Prédit: 'Strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Strategy' → logprob: -7.584239938296378e-06
    2. '_strategy' → logprob: -12.875007629394531
    3. 'ategy' → logprob: -12.875007629394531
    4. 'strategy' → logprob: -14.000007629394531
    5. 'Strateg' → logprob: -14.000007629394531
    6. ')' → logprob: -15.000007629394531
    7. 'Str' → logprob: -16.00000762939453
    8. '):
' → logprob: -16.50000762939453
    9. ' Strategy' → logprob: -16.62500762939453
    10. ' strategy' → logprob: -17.12500762939453

Token 322: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47446325421333313
    2. '):
' → logprob: -0.9744632244110107
    3. ')' → logprob: -7.97446346282959
    4. '):
' → logprob: -10.22446346282959
    5. ',' → logprob: -13.34946346282959
    6. ':' → logprob: -13.47446346282959
    7. '   ' → logprob: -13.97446346282959
    8. '):

' → logprob: -14.22446346282959
    9. ' ):' → logprob: -14.47446346282959
    10. ' ):
' → logprob: -14.84946346282959

Token 323: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010650822659954429
    2. 'self' → logprob: -7.001065254211426
    3. '   ' → logprob: -9.376065254211426
    4. ' self' → logprob: -9.626065254211426
    5. ',' → logprob: -14.751065254211426
    6. '```' → logprob: -14.751065254211426
    7. '	self' → logprob: -14.876065254211426
    8. '
' → logprob: -15.001065254211426
    9. ' ' → logprob: -15.126065254211426
    10. '        
' → logprob: -15.626065254211426

Token 324: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00408647395670414
    2. ' self' → logprob: -5.754086494445801
    3. '       ' → logprob: -7.004086494445801
    4. '	self' → logprob: -15.8790864944458
    5. '   ' → logprob: -16.254085540771484
    6. ' ' → logprob: -18.629085540771484
    7. '	' → logprob: -20.129085540771484
    8. '(self' → logprob: -20.129085540771484
    9. ' ' → logprob: -20.754085540771484
    10. '_self' → logprob: -21.004085540771484

Token 325: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.5795073509216309
    2. '.rem' → logprob: -0.8295073509216309
    3. ' .' → logprob: -6.704507350921631
    4. '.' → logprob: -6.829507350921631
    5. '_rem' → logprob: -7.329507350921631
    6. '   ' → logprob: -7.704507350921631
    7. 'rem' → logprob: -9.454507827758789
    8. '.__' → logprob: -11.204507827758789
    9. '.Rem' → logprob: -11.329507827758789
    10. '(rem' → logprob: -11.954507827758789

Token 326: 'rem' (ID: 1935)
  Prédit: 'rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -3.128163257315464e-07
    2. '_rem' → logprob: -16.125
    3. 'strategy' → logprob: -16.625
    4. 'remove' → logprob: -20.5
    5. '(rem' → logprob: -20.5
    6. ' remover' → logprob: -21.375
    7. 'remo' → logprob: -21.375
    8. '_' → logprob: -21.5
    9. '_strategy' → logprob: -22.375
    10. 'rom' → logprob: -22.375

Token 327: 'over' (ID: 2898)
  Prédit: 'over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -5.5577775128767826e-06
    2. 'ove' → logprob: -12.375005722045898
    3. '_over' → logprob: -13.875005722045898
    4. 'oved' → logprob: -16.3750057220459
    5. '_' → logprob: -17.0000057220459
    6. 'overs' → logprob: -17.1250057220459
    7. 'ov' → logprob: -17.2500057220459
    8. 'o' → logprob: -17.8750057220459
    9. ' over' → logprob: -18.6250057220459
    10. 'oving' → logprob: -18.8750057220459

Token 328: '_strategy' (ID: 117374)
  Prédit: '_strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strategy' → logprob: -1.8624639324116288e-06
    2. '_str' → logprob: -14.000001907348633
    3. '_' → logprob: -14.500001907348633
    4. 'strategy' → logprob: -14.875001907348633
    5. '_method' → logprob: -17.125001907348633
    6. ' =' → logprob: -17.250001907348633
    7. '=' → logprob: -17.375001907348633
    8. 'strateg' → logprob: -18.000001907348633
    9. '_s' → logprob: -18.250001907348633
    10. '=_' → logprob: -18.500001907348633

Token 329: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141646265983582
    2. '=' → logprob: -1.7014164924621582
    3. ' ' → logprob: -12.701416015625
    4. ':' → logprob: -15.951416015625
    5. '<|end|>' → logprob: -17.451416015625
    6. ' =
' → logprob: -18.326416015625
    7. '   ' → logprob: -18.326416015625
    8. '  ' → logprob: -18.826416015625
    9. ')' → logprob: -18.951416015625
    10. ' ' → logprob: -19.076416015625

Token 330: ' remover' (ID: 88753)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.10023082792758942
    2. ' remover' → logprob: -2.3502309322357178
    3. 'remove' → logprob: -11.975231170654297
    4. ' rem' → logprob: -12.225231170654297
    5. 'remo' → logprob: -12.225231170654297
    6. ' remov' → logprob: -12.350231170654297
    7. '(rem' → logprob: -13.475231170654297
    8. ' remo' → logprob: -13.475231170654297
    9. '_rem' → logprob: -15.225231170654297
    10. 'reman' → logprob: -15.225231170654297

Token 331: '_strategy' (ID: 117374)
  Prédit: '_strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strategy' → logprob: -6.704273118884885e-07
    2. '_str' → logprob: -14.500000953674316
    3. 'strategy' → logprob: -16.75
    4. ' strategy' → logprob: -18.625
    5. 'Strategy' → logprob: -19.5
    6. '_' → logprob: -19.875
    7. 'strateg' → logprob: -20.625
    8. 'er' → logprob: -20.625
    9. '_s' → logprob: -21.25
    10. '_method' → logprob: -21.25

Token 332: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.049297187477350235
    2. '   ' → logprob: -3.0492970943450928
    3. '    
' → logprob: -7.424297332763672
    4. '<|end|>' → logprob: -9.549297332763672
    5. 'def' → logprob: -11.549297332763672
    6. '

' → logprob: -11.924297332763672
    7. '        
' → logprob: -12.049297332763672
    8. '<|end|>' → logprob: -12.174297332763672
    9. '
' → logprob: -12.424297332763672
    10. '  
' → logprob: -12.549297332763672

Token 333: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011196362785995007
    2. 'def' → logprob: -4.511196136474609
    3. ' def' → logprob: -9.01119613647461
    4. '    
' → logprob: -10.76119613647461
    5. '
' → logprob: -13.38619613647461
    6. '<|end|>' → logprob: -13.38619613647461
    7. '        
' → logprob: -13.88619613647461
    8. '	def' → logprob: -14.63619613647461
    9. '```' → logprob: -15.51119613647461
    10. '<|end|>' → logprob: -15.63619613647461

Token 334: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0019308974733576179
    2. ' def' → logprob: -6.2519307136535645
    3. '   ' → logprob: -13.001931190490723
    4. '	def' → logprob: -17.751930236816406
    5. 'de' → logprob: -18.001930236816406
    6. ' ' → logprob: -19.251930236816406
    7. 'd' → logprob: -21.251930236816406
    8. '
' → logprob: -21.376930236816406
    9. '_def' → logprob: -21.751930236816406
    10. '  ' → logprob: -21.876930236816406

Token 335: ' get' (ID: 717)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.1807318478822708
    2. ' remove' → logprob: -1.8057318925857544
    3. 'maximize' → logprob: -8.055731773376465
    4. 'get' → logprob: -8.805731773376465
    5. ' maximize' → logprob: -9.430731773376465
    6. 'opt' → logprob: -9.430731773376465
    7. 'play' → logprob: -9.555731773376465
    8. 'choose' → logprob: -10.305731773376465
    9. 'apply' → logprob: -10.430731773376465
    10. 'process' → logprob: -10.430731773376465

Token 336: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.7125374674797058
    2. '_result' → logprob: -2.0875375270843506
    3. '_best' → logprob: -2.3375375270843506
    4. '_next' → logprob: -2.7125375270843506
    5. '_sequence' → logprob: -2.9625375270843506
    6. '_modified' → logprob: -3.5875375270843506
    7. '_' → logprob: -3.7125375270843506
    8. '_l' → logprob: -3.8375375270843506
    9. '_final' → logprob: -3.8375375270843506
    10. '_opt' → logprob: -3.8375375270843506

Token 337: '_point' (ID: 15466)
  Prédit: '_number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.09672646969556808
    2. '_sequence' → logprob: -2.721726417541504
    3. 'imum' → logprob: -4.471726417541504
    4. 'imized' → logprob: -4.471726417541504
    5. '_digit' → logprob: -6.096726417541504
    6. '_removed' → logprob: -7.721726417541504
    7. '_digits' → logprob: -8.471726417541504
    8. '_value' → logprob: -8.471726417541504
    9. 'imal' → logprob: -9.096726417541504
    10. '_l' → logprob: -9.346726417541504

Token 338: '_number' (ID: 11733)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.005904146004468203
    2. '(self' → logprob: -5.255904197692871
    3. '_score' → logprob: -8.255904197692871
    4. '_sequence' → logprob: -8.380904197692871
    5. '_value' → logprob: -9.380904197692871
    6. '_number' → logprob: -11.005904197692871
    7. '_digit' → logprob: -11.255904197692871
    8. '_result' → logprob: -11.505904197692871
    9. '_after' → logprob: -11.755904197692871
    10. 'ed' → logprob: -11.755904197692871

Token 339: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.100059156073257e-05
    2. '(' → logprob: -10.000070571899414
    3. ' (' → logprob: -10.625070571899414
    4. 'self' → logprob: -13.875070571899414
    5. '(sequence' → logprob: -16.000070571899414
    6. '   ' → logprob: -16.125070571899414
    7. ' self' → logprob: -18.250070571899414
    8. '(
' → logprob: -18.250070571899414
    9. '_(' → logprob: -18.375070571899414
    10. '```' → logprob: -18.500070571899414

Token 340: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02188601717352867
    2. 'self' → logprob: -4.021885871887207
    3. '(self' → logprob: -6.271885871887207
    4. 'sequence' → logprob: -6.771885871887207
    5. ')' → logprob: -8.396885871887207
    6. '_sequence' → logprob: -8.521885871887207
    7. ' ,' → logprob: -9.521885871887207
    8. ')(' → logprob: -9.521885871887207
    9. '   ' → logprob: -10.521885871887207
    10. ',self' → logprob: -10.896885871887207

Token 341: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.0561065673828125
    2. ' sequence' → logprob: -3.1811065673828125
    3. 'digits' → logprob: -4.9311065673828125
    4. 'self' → logprob: -6.4311065673828125
    5. 'digit' → logprob: -6.4311065673828125
    6. ' digits' → logprob: -6.6811065673828125
    7. 'number' → logprob: -7.0561065673828125
    8. ' digit' → logprob: -8.931106567382812
    9. ' number' → logprob: -9.556106567382812
    10. ' self' → logprob: -9.681106567382812

Token 342: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025742328725755215
    2. ',' → logprob: -6.002574443817139
    3. ' :' → logprob: -9.25257396697998
    4. '):' → logprob: -13.87757396697998
    5. ' ,' → logprob: -14.12757396697998
    6. ')' → logprob: -14.12757396697998
    7. '   ' → logprob: -15.87757396697998
    8. '_:' → logprob: -16.877574920654297
    9. ' )' → logprob: -17.502574920654297
    10. ':,' → logprob: -17.502574920654297

Token 343: ' Digit' (ID: 91174)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -0.018158607184886932
    2. ' Digit' → logprob: -4.018158435821533
    3. ')' → logprob: -12.893158912658691
    4. 'Digital' → logprob: -13.643158912658691
    5. 'digit' → logprob: -13.768158912658691
    6. ' ' → logprob: -13.768158912658691
    7. 'List' → logprob: -13.893158912658691
    8. '   ' → logprob: -14.018158912658691
    9. ' digit' → logprob: -14.268158912658691
    10. '  ' → logprob: -15.393158912658691

Token 344: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -2.816093228830141e-06
    2. '_sequence' → logprob: -13.62500286102295
    3. 'sequence' → logprob: -14.37500286102295
    4. '   ' → logprob: -15.50000286102295
    5. 'List' → logprob: -15.75000286102295
    6. ')' → logprob: -16.125001907348633
    7. '       ' → logprob: -16.250001907348633
    8. ',' → logprob: -16.250001907348633
    9. 'Seq' → logprob: -16.250001907348633
    10. ' Sequence' → logprob: -16.375001907348633

Token 345: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.0033853515051305e-05
    2. ' ,' → logprob: -9.750060081481934
    3. ',k' → logprob: -13.375060081481934
    4. '   ' → logprob: -16.750059127807617
    5. ',
' → logprob: -18.250059127807617
    6. ')' → logprob: -18.750059127807617
    7. '‌,' → logprob: -18.875059127807617
    8. '       ' → logprob: -19.500059127807617
    9. 'k' → logprob: -20.125059127807617
    10. '`,' → logprob: -20.500059127807617

Token 346: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3868939280509949
    2. ' k' → logprob: -1.1368939876556396
    3. '    ' → logprob: -11.886894226074219
    4. '   ' → logprob: -12.386894226074219
    5. ' ' → logprob: -13.011894226074219
    6. '        ' → logprob: -14.199394226074219
    7. 'remove' → logprob: -14.324394226074219
    8. '       ' → logprob: -14.324394226074219
    9. '  ' → logprob: -14.449394226074219
    10. '	k' → logprob: -14.449394226074219

Token 347: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013155875727534294
    2. ')' → logprob: -4.513155937194824
    3. '):' → logprob: -6.263155937194824
    4. ':int' → logprob: -8.638155937194824
    5. '):
' → logprob: -11.263155937194824
    6. ' )' → logprob: -12.013155937194824
    7. ' ):' → logprob: -13.388155937194824
    8. '   ' → logprob: -13.638155937194824
    9. ' :' → logprob: -14.013155937194824
    10. '):
' → logprob: -15.513155937194824

Token 348: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04869500920176506
    2. ' int' → logprob: -3.0486950874328613
    3. ')' → logprob: -9.173694610595703
    4. ' )' → logprob: -13.298694610595703
    5. ':int' → logprob: -13.923694610595703
    6. ' ' → logprob: -14.423694610595703
    7. '[int' → logprob: -14.923694610595703
    8. '=int' → logprob: -16.173694610595703
    9. '<int' → logprob: -16.298694610595703
    10. '1' → logprob: -17.048694610595703

Token 349: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.817902173381299e-05
    2. '):' → logprob: -9.25009822845459
    3. ' )' → logprob: -13.62509822845459
    4. '   ' → logprob: -14.87509822845459
    5. '):
' → logprob: -15.25009822845459
    6. ')->' → logprob: -15.25009822845459
    7. ':' → logprob: -18.250097274780273
    8. '`)' → logprob: -19.250097274780273
    9. ')
' → logprob: -19.500097274780273
    10. '):
' → logprob: -19.625097274780273

Token 350: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11478587985038757
    2. ' ->' → logprob: -3.11478590965271
    3. '->' → logprob: -3.48978590965271
    4. ')' → logprob: -3.48978590965271
    5. '):' → logprob: -6.239785671234131
    6. ')->' → logprob: -6.989785671234131
    7. '   ' → logprob: -9.739786148071289
    8. '       ' → logprob: -10.239786148071289
    9. ':
' → logprob: -10.364786148071289
    10. ':return' → logprob: -10.489786148071289

Token 351: ' Digit' (ID: 91174)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -0.06196925416588783
    2. ' Digit' → logprob: -2.81196928024292
    3. 'Digital' → logprob: -13.936968803405762
    4. ' digit' → logprob: -15.061968803405762
    5. 'digit' → logprob: -15.436968803405762
    6. 'Digits' → logprob: -16.686969757080078
    7. '_digit' → logprob: -16.811969757080078
    8. ' Digital' → logprob: -16.811969757080078
    9. ' ' → logprob: -17.311969757080078
    10. ' Dig' → logprob: -17.936969757080078

Token 352: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -3.128163257315464e-07
    2. '_sequence' → logprob: -16.625
    3. 'sequence' → logprob: -16.625
    4. 'quence' → logprob: -17.125
    5. '_SEQUENCE' → logprob: -17.375
    6. 'int' → logprob: -17.75
    7. 'Sequences' → logprob: -18.875
    8. '.Sequence' → logprob: -19.125
    9. ' Sequence' → logprob: -19.25
    10. 'Sequ' → logprob: -19.875

Token 353: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02075769193470478
    2. '):' → logprob: -4.645757675170898
    3. '       ' → logprob: -5.395757675170898
    4. ':
' → logprob: -5.520757675170898
    5. ')' → logprob: -6.895757675170898
    6. '   ' → logprob: -7.645757675170898
    7. '):
' → logprob: -7.895757675170898
    8. '():' → logprob: -8.395757675170898
    9. '(self' → logprob: -8.770757675170898
    10. '(' → logprob: -9.520757675170898

Token 354: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000959700730163604
    2. ' return' → logprob: -7.000959873199463
    3. 'return' → logprob: -10.000959396362305
    4. '   ' → logprob: -13.500959396362305
    5. '{return' → logprob: -14.625959396362305
    6. '```' → logprob: -15.625959396362305
    7. '	return' → logprob: -16.250959396362305
    8. '      ' → logprob: -16.375959396362305
    9. '
' → logprob: -16.500959396362305
    10. ')' → logprob: -16.500959396362305

Token 355: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.49843475222587585
    2. '       ' → logprob: -1.2484347820281982
    3. ' return' → logprob: -2.2484347820281982
    4. '	return' → logprob: -13.998435020446777
    5. '   ' → logprob: -15.873435020446777
    6. '{return' → logprob: -16.12343406677246
    7. 'result' → logprob: -16.87343406677246
    8. '      ' → logprob: -17.24843406677246
    9. '
' → logprob: -17.37343406677246
    10. ' ' → logprob: -17.49843406677246

Token 356: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5759395360946655
    2. ' self' → logprob: -0.8259395360946655
    3. '       ' → logprob: -15.950939178466797
    4. '(self' → logprob: -17.825939178466797
    5. '	self' → logprob: -18.450939178466797
    6. ' ' → logprob: -18.700939178466797
    7. '=self' → logprob: -19.950939178466797
    8. ' ' → logprob: -21.325939178466797
    9. '        ' → logprob: -21.825939178466797
    10. '[self' → logprob: -21.825939178466797

Token 357: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -3.128163257315464e-07
    2. ')._' → logprob: -16.125
    3. ']._' → logprob: -16.875
    4. '   ' → logprob: -17.625
    5. '.' → logprob: -17.75
    6. '_rem' → logprob: -18.375
    7. ' .' → logprob: -18.375
    8. '.__' → logprob: -19.25
    9. '.get' → logprob: -19.75
    10. '."_' → logprob: -20.0

Token 358: 'rem' (ID: 1935)
  Prédit: 'rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -1.0280383548888494e-06
    2. '_rem' → logprob: -14.250000953674316
    3. '(rem' → logprob: -15.875000953674316
    4. 'remove' → logprob: -16.625001907348633
    5. '_' → logprob: -17.250001907348633
    6. 'rm' → logprob: -17.750001907348633
    7. '```' → logprob: -18.125001907348633
    8. 'rom' → logprob: -18.250001907348633
    9. '.rem' → logprob: -18.500001907348633
    10. 'res' → logprob: -18.500001907348633

Token 359: 'over' (ID: 2898)
  Prédit: 'over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -1.0280383548888494e-06
    2. '_over' → logprob: -14.125000953674316
    3. 'o' → logprob: -16.625001907348633
    4. 'ove' → logprob: -17.000001907348633
    5. 'overs' → logprob: -17.625001907348633
    6. '_' → logprob: -17.875001907348633
    7. 'oved' → logprob: -18.000001907348633
    8. ' over' → logprob: -18.250001907348633
    9. '(over' → logprob: -18.375001907348633
    10. '
' → logprob: -18.625001907348633

Token 360: '_strategy' (ID: 117374)
  Prédit: '_strategy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strategy' → logprob: -4.320199877838604e-07
    2. 'strategy' → logprob: -15.0
    3. '_str' → logprob: -17.5
    4. 'strateg' → logprob: -18.625
    5. 'Strategy' → logprob: -18.75
    6. ' strategy' → logprob: -19.875
    7. '策略' → logprob: -20.75
    8. 'strategie' → logprob: -21.0
    9. 'ategy' → logprob: -21.375
    10. ' 전략' → logprob: -21.75

Token 361: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -3.619311974034645e-05
    2. '.' → logprob: -10.250036239624023
    3. 'remove' → logprob: -14.500036239624023
    4. ' .' → logprob: -15.625036239624023
    5. ').' → logprob: -18.125036239624023
    6. '.delete' → logprob: -19.000036239624023
    7. '}.' → logprob: -19.625036239624023
    8. '.perform' → logprob: -19.750036239624023
    9. '	remove' → logprob: -20.000036239624023
    10. '.Remove' → logprob: -20.000036239624023

Token 362: '_digits' (ID: 108638)
  Prédit: '_digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digits' → logprob: -4.60414821645827e-06
    2. '_' → logprob: -12.750004768371582
    3. '```' → logprob: -13.875004768371582
    4. '_chars' → logprob: -15.000004768371582
    5. '_tokens' → logprob: -15.500004768371582
    6. '_bits' → logprob: -16.625003814697266
    7. '_
' → logprob: -16.875003814697266
    8. '
' → logprob: -16.875003814697266
    9. 'digits' → logprob: -17.125003814697266
    10. '_digit' → logprob: -17.750003814697266

Token 363: '(sequence' (ID: 129991)
  Prédit: '(sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sequence' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -12.625003814697266
    3. '(se' → logprob: -17.125003814697266
    4. '(
' → logprob: -17.125003814697266
    5. '(sentence' → logprob: -17.500003814697266
    6. ' (' → logprob: -17.625003814697266
    7. 'sequence' → logprob: -18.000003814697266
    8. '(seq' → logprob: -18.500003814697266
    9. '```' → logprob: -19.875003814697266
    10. '(d' → logprob: -20.125003814697266

Token 364: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.292907877039397e-06
    2. ',k' → logprob: -13.12500286102295
    3. ' ,' → logprob: -13.62500286102295
    4. '   ' → logprob: -19.250003814697266
    5. '‌,' → logprob: -19.750003814697266
    6. 'sequence' → logprob: -19.875003814697266
    7. ',
' → logprob: -20.000003814697266
    8. 'k' → logprob: -20.125003814697266
    9. ',index' → logprob: -21.750003814697266
    10. '(sequence' → logprob: -21.750003814697266

Token 365: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.10020667314529419
    2. 'k' → logprob: -2.3502066135406494
    3. ')' → logprob: -17.97520637512207
    4. '	k' → logprob: -18.10020637512207
    5. ' ' → logprob: -19.10020637512207
    6. '{k' → logprob: -19.97520637512207
    7. ' к' → logprob: -20.10020637512207
    8. ' ' → logprob: -20.60020637512207
    9. ',k' → logprob: -20.85020637512207
    10. '=k' → logprob: -21.10020637512207

Token 366: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ' )' → logprob: -14.250000953674316
    3. ')
' → logprob: -14.750000953674316
    4. ')return' → logprob: -17.500001907348633
    5. ')}' → logprob: -18.500001907348633
    6. '),' → logprob: -19.000001907348633
    7. '))' → logprob: -19.000001907348633
    8. '   ' → logprob: -19.375001907348633
    9. '}' → logprob: -19.500001907348633
    10. '<|end|>' → logprob: -19.500001907348633

Token 367: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 368: ' Input' (ID: 10090)
  Prédit: ' Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Digit' → logprob: -0.40268081426620483
    2. 'Digit' → logprob: -1.1526808738708496
    3. 'Test' → logprob: -5.15268087387085
    4. ' Test' → logprob: -5.40268087387085
    5. '_digit' → logprob: -5.65268087387085
    6. 'Solution' → logprob: -7.77768087387085
    7. ' Solution' → logprob: -8.152680397033691
    8. 'User' → logprob: -8.277680397033691
    9. '__' → logprob: -9.152680397033691
    10. ' Gre' → logprob: -9.527680397033691

Token 369: 'Parser' (ID: 9231)
  Prédit: 'Handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.47194886207580566
    2. 'Validator' → logprob: -2.3469488620758057
    3. 'Reader' → logprob: -2.3469488620758057
    4. 'Processor' → logprob: -2.4719488620758057
    5. 'Parser' → logprob: -2.7219488620758057
    6. 'Provider' → logprob: -3.7219488620758057
    7. 'Sequence' → logprob: -5.721948623657227
    8. ':' → logprob: -5.846948623657227
    9. 'Manager' → logprob: -6.846948623657227
    10. 'Data' → logprob: -6.971948623657227

Token 370: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002190948696807027
    2. ':
' → logprob: -6.127191066741943
    3. ':def' → logprob: -13.252190589904785
    4. ' :' → logprob: -13.502190589904785
    5. ':

' → logprob: -14.127190589904785
    6. ':
' → logprob: -14.377190589904785
    7. '<|end|>' → logprob: -14.627190589904785
    8. '():' → logprob: -15.252190589904785
    9. '):' → logprob: -15.627190589904785
    10. '(object' → logprob: -16.3771915435791

Token 371: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00013369438238441944
    2. ' def' → logprob: -9.000133514404297
    3. ' @' → logprob: -12.125133514404297
    4. 'def' → logprob: -12.625133514404297
    5. 'staticmethod' → logprob: -14.625133514404297
    6. ' class' → logprob: -15.250133514404297
    7. 'class' → logprob: -15.375133514404297
    8. ' static' → logprob: -15.625133514404297
    9. '    
' → logprob: -16.500133514404297
    10. '       ' → logprob: -16.625133514404297

Token 372: ' def' (ID: 1056)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.027277512475848198
    2. ' @' → logprob: -3.7772774696350098
    3. 'def' (adapté à ' def') → logprob: -5.77727746963501
    4. ' def' → logprob: -7.02727746963501
    5. '   ' → logprob: -10.152277946472168
    6. 'staticmethod' → logprob: -14.652277946472168
    7. 'class' → logprob: -18.15227699279785
    8. '```' → logprob: -18.15227699279785
    9. 'from' → logprob: -18.27727699279785
    10. '@param' → logprob: -19.40227699279785

Token 373: ' __' (ID: 2516)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.0014508290914818645
    2. ' static' → logprob: -6.876451015472412
    3. 'static' → logprob: -8.626450538635254
    4. ' def' → logprob: -9.251450538635254
    5. 'classmethod' → logprob: -9.251450538635254
    6. 'def' → logprob: -10.251450538635254
    7. 'init' → logprob: -12.126450538635254
    8. ' __' → logprob: -12.501450538635254
    9. ' ' → logprob: -14.626450538635254
    10. '   ' → logprob: -14.876450538635254

Token 374: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00036084887688048184
    2. 'staticmethod' → logprob: -8.000360488891602
    3. 'new' → logprob: -11.000360488891602
    4. 'static' → logprob: -12.000360488891602
    5. 'class' → logprob: -14.500360488891602
    6. 'ini' → logprob: -14.625360488891602
    7. 'next' → logprob: -15.125360488891602
    8. 'call' → logprob: -15.125360488891602
    9. 'name' → logprob: -15.375360488891602
    10. 'stat' → logprob: -15.750360488891602

Token 375: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.015411601401865482
    2. ' (' → logprob: -4.265411376953125
    3. '__(' → logprob: -7.390411376953125
    4. '   ' → logprob: -8.390411376953125
    5. '(' → logprob: -8.765411376953125
    6. 'self' → logprob: -8.890411376953125
    7. ' self' → logprob: -9.765411376953125
    8. '<|end|>' → logprob: -11.265411376953125
    9. ' ' → logprob: -12.265411376953125
    10. '__(
' → logprob: -12.390411376953125

Token 376: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00011236425780225545
    2. ' self' → logprob: -9.125112533569336
    3. ')' → logprob: -13.625112533569336
    4. '       ' → logprob: -14.000112533569336
    5. '):
' → logprob: -14.250112533569336
    6. '   ' → logprob: -14.875112533569336
    7. '
' → logprob: -15.500112533569336
    8. '	self' → logprob: -16.875112533569336
    9. '(self' → logprob: -16.875112533569336
    10. 'input' → logprob: -17.625112533569336

Token 377: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1691536158323288
    2. '):' → logprob: -2.2941536903381348
    3. '):
' → logprob: -2.9191536903381348
    4. ')' → logprob: -8.044153213500977
    5. ',input' → logprob: -8.544153213500977
    6. '   ' → logprob: -8.919153213500977
    7. ' ):' → logprob: -10.044153213500977
    8. ' ,' → logprob: -10.669153213500977
    9. '):

' → logprob: -11.169153213500977
    10. 'self' → logprob: -11.419153213500977

Token 378: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.422415167093277
    2. ' input' → logprob: -1.4224151372909546
    3. 'sequence' → logprob: -3.672415256500244
    4. 'line' → logprob: -4.422415256500244
    5. 'strategy' → logprob: -4.547415256500244
    6. ' lines' → logprob: -4.922415256500244
    7. 'remove' → logprob: -4.922415256500244
    8. 'k' → logprob: -5.172415256500244
    9. 'digit' → logprob: -5.172415256500244
    10. ' strategy' → logprob: -5.297415256500244

Token 379: '_supplier' (ID: 191529)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.15751920640468597
    2. '_string' → logprob: -2.1575191020965576
    3. '_data' → logprob: -4.157519340515137
    4. '_text' → logprob: -4.532519340515137
    5. '_lines' → logprob: -6.032519340515137
    6. ':' → logprob: -7.032519340515137
    7. '_line' → logprob: -8.407519340515137
    8. 'str' → logprob: -9.782519340515137
    9. '_strings' → logprob: -10.532519340515137
    10. '_func' → logprob: -10.532519340515137

Token 380: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.392202976712724e-06
    2. '):' → logprob: -12.375006675720215
    3. '):
' → logprob: -13.250006675720215
    4. ' :' → logprob: -15.625006675720215
    5. '_callable' → logprob: -17.0000057220459
    6. ')' → logprob: -18.3750057220459
    7. '_:' → logprob: -18.5000057220459
    8. '```' → logprob: -19.2500057220459
    9. '   ' → logprob: -20.2500057220459
    10. 'Callable' → logprob: -20.8750057220459

Token 381: ' Callable' (ID: 94560)
  Prédit: 'Callable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Callable' → logprob: -0.00033832306507974863
    2. ' Callable' → logprob: -8.000338554382324
    3. '   ' → logprob: -13.500338554382324
    4. '_callable' → logprob: -14.250338554382324
    5. ')' → logprob: -14.750338554382324
    6. ' ' → logprob: -15.000338554382324
    7. '
' → logprob: -17.250337600708008
    8. 'Call' → logprob: -17.500337600708008
    9. 'call' → logprob: -18.125337600708008
    10. '       ' → logprob: -18.500337600708008

Token 382: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001686485717073083
    2. '[[' → logprob: -6.5016865730285645
    3. '):
' → logprob: -8.876686096191406
    4. '[...,' → logprob: -10.126686096191406
    5. '):' → logprob: -12.626686096191406
    6. '```' → logprob: -14.376686096191406
    7. '[str' → logprob: -15.501686096191406
    8. '[['' → logprob: -16.126686096191406
    9. ')' → logprob: -16.251686096191406
    10. ':' → logprob: -16.376686096191406

Token 383: '[],' (ID: 25409)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25647231936454773
    2. '[],' → logprob: -1.5064723491668701
    3. '],' → logprob: -6.506472110748291
    4. '[]' → logprob: -6.756472110748291
    5. 'str' → logprob: -6.756472110748291
    6. '[[' → logprob: -7.881472110748291
    7. '[str' → logprob: -9.25647258758545
    8. '[...,' → logprob: -9.63147258758545
    9. ']' → logprob: -9.75647258758545
    10. '()' → logprob: -10.50647258758545

Token 384: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -1.759734732331708e-05
    2. ' str' → logprob: -11.000017166137695
    3. 'int' → logprob: -14.625017166137695
    4. '[str' → logprob: -15.000017166137695
    5. 'List' → logprob: -17.625017166137695
    6. '	str' → logprob: -18.000017166137695
    7. ' ' → logprob: -19.000017166137695
    8. '   ' → logprob: -19.750017166137695
    9. '(str' → logprob: -19.875017166137695
    10. '
' → logprob: -20.250017166137695

Token 385: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.39901116490364075
    2. ']):
' → logprob: -1.1490111351013184
    3. ']' → logprob: -5.149011135101318
    4. '):' → logprob: -5.649011135101318
    5. '):
' → logprob: -6.274011135101318
    6. '])' → logprob: -7.774011135101318
    7. '   ' → logprob: -8.774011611938477
    8. ')' → logprob: -8.899011611938477
    9. ']:' → logprob: -9.649011611938477
    10. '       ' → logprob: -10.149011611938477

Token 386: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009024077444337308
    2. '<|end|>' → logprob: -8.00090217590332
    3. ':' → logprob: -8.25090217590332
    4. 'self' → logprob: -9.25090217590332
    5. '   ' → logprob: -9.75090217590332
    6. '        
' → logprob: -10.25090217590332
    7. '
' → logprob: -10.75090217590332
    8. ',' → logprob: -11.00090217590332
    9. ' self' → logprob: -11.12590217590332
    10. ')' → logprob: -11.50090217590332

Token 387: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.037096332758665085
    2. '       ' → logprob: -3.7870962619781494
    3. ' self' → logprob: -4.2870965003967285
    4. '	self' → logprob: -11.78709602355957
    5. '   ' → logprob: -13.16209602355957
    6. ' ' → logprob: -15.03709602355957
    7. '	' → logprob: -15.41209602355957
    8. '
' → logprob: -16.28709602355957
    9. '(self' → logprob: -16.28709602355957
    10. ',self' → logprob: -16.78709602355957

Token 388: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.01455785520374775
    2. '.input' → logprob: -4.264557838439941
    3. '.' → logprob: -8.014557838439941
    4. '_input' → logprob: -9.764557838439941
    5. 'input' → logprob: -13.014557838439941
    6. '   ' → logprob: -13.889557838439941
    7. ' .' → logprob: -14.014557838439941
    8. '.next' → logprob: -14.889557838439941
    9. '_' → logprob: -15.139557838439941
    10. '.Input' → logprob: -15.264557838439941

Token 389: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.6286106983898208e-05
    2. '_input' → logprob: -11.625016212463379
    3. 'supplier' → logprob: -12.250016212463379
    4. 'lines' → logprob: -13.375016212463379
    5. ' input' → logprob: -14.375016212463379
    6. 'buffer' → logprob: -15.750016212463379
    7. 'line' → logprob: -16.625017166137695
    8. 'get' → logprob: -17.250017166137695
    9. '
' → logprob: -17.500017166137695
    10. '	input' → logprob: -18.000017166137695

Token 390: '_supplier' (ID: 191529)
  Prédit: '_supplier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_supplier' → logprob: -0.0002800471556838602
    2. 'supplier' → logprob: -8.500280380249023
    3. '_line' → logprob: -10.375280380249023
    4. '_lines' → logprob: -11.500280380249023
    5. '_supply' → logprob: -11.500280380249023
    6. '_string' → logprob: -12.125280380249023
    7. '_' → logprob: -12.500280380249023
    8. '_sup' → logprob: -12.500280380249023
    9. 'Supplier' → logprob: -12.750280380249023
    10. 's' → logprob: -12.875280380249023

Token 391: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4746253490447998
    2. ' =' → logprob: -0.9746253490447998
    3. '   ' → logprob: -8.099625587463379
    4. '()' → logprob: -8.599625587463379
    5. '       ' → logprob: -10.599625587463379
    6. '=self' → logprob: -11.349625587463379
    7. 'self' → logprob: -12.099625587463379
    8. '    ' → logprob: -12.724625587463379
    9. ' ' → logprob: -13.099625587463379
    10. ':' → logprob: -13.099625587463379

Token 392: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008615042082965374
    2. ' input' → logprob: -4.758615016937256
    3. '_input' → logprob: -14.633615493774414
    4. '	input' → logprob: -20.383615493774414
    5. '<input' → logprob: -20.758615493774414
    6. '(input' → logprob: -21.133615493774414
    7. '=input' → logprob: -21.133615493774414
    8. 'Input' → logprob: -21.258615493774414
    9. ' ' → logprob: -21.258615493774414
    10. '   ' → logprob: -22.008615493774414

Token 393: '_supplier' (ID: 191529)
  Prédit: '_supplier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_supplier' → logprob: -5.466968650580384e-05
    2. '_sup' → logprob: -10.375054359436035
    3. 'Supplier' → logprob: -12.000054359436035
    4. '()' → logprob: -12.250054359436035
    5. 'supplier' → logprob: -12.625054359436035
    6. '_' → logprob: -13.000054359436035
    7. ')' → logprob: -13.250054359436035
    8. '_supply' → logprob: -13.625054359436035
    9. '   ' → logprob: -13.750054359436035
    10. '._' → logprob: -15.125054359436035

Token 394: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5020222067832947
    2. '   ' → logprob: -1.0020222663879395
    3. '    
' → logprob: -3.6270222663879395
    4. '<|end|>' → logprob: -7.7520222663879395
    5. '

' → logprob: -8.377021789550781
    6. 'def' → logprob: -8.752021789550781
    7. '        
' → logprob: -9.877021789550781
    8. '<|end|>' → logprob: -10.377021789550781
    9. '  
' → logprob: -10.752021789550781
    10. ' 
' → logprob: -11.377021789550781

Token 395: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04570384323596954
    2. '
' → logprob: -3.170703887939453
    3. '    
' → logprob: -6.670703887939453
    4. 'def' → logprob: -6.795703887939453
    5. ' def' → logprob: -8.170703887939453
    6. '

' → logprob: -11.795703887939453
    7. '        
' → logprob: -11.920703887939453
    8. '<|end|>' → logprob: -12.170703887939453
    9. '  
' → logprob: -12.795703887939453
    10. '```' → logprob: -13.045703887939453

Token 396: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.584861744660884e-05
    2. ' def' → logprob: -10.000045776367188
    3. '   ' → logprob: -14.875045776367188
    4. '
' → logprob: -18.625045776367188
    5. 'de' → logprob: -18.875045776367188
    6. '	def' → logprob: -20.250045776367188
    7. 'class' → logprob: -21.125045776367188
    8. 'd' → logprob: -21.375045776367188
    9. 'import' → logprob: -23.625045776367188
    10. '    
' → logprob: -23.750045776367188

Token 397: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.04930093511939049
    2. ' parse' → logprob: -3.1743009090423584
    3. 'read' → logprob: -5.1743011474609375
    4. ' read' → logprob: -8.174301147460938
    5. 'def' → logprob: -8.424301147460938
    6. 'next' → logprob: -9.924301147460938
    7. 'get' → logprob: -10.174301147460938
    8. ' def' → logprob: -11.174301147460938
    9. ' next' → logprob: -11.924301147460938
    10. ' get' → logprob: -12.174301147460938

Token 398: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0033345604315400124
    2. '()' → logprob: -6.6283345222473145
    3. '_number' → logprob: -7.1283345222473145
    4. '_input' → logprob: -7.3783345222473145
    5. '_sequence' → logprob: -8.628334999084473
    6. '(' → logprob: -9.253334999084473
    7. 'self' → logprob: -9.253334999084473
    8. '_point' → logprob: -9.378334999084473
    9. '_points' → logprob: -9.753334999084473
    10. '_line' → logprob: -11.003334999084473

Token 399: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28719383478164673
    2. '):' → logprob: -1.787193775177002
    3. '_line' → logprob: -3.537193775177002
    4. '_input' → logprob: -3.662193775177002
    5. '):
' → logprob: -4.162193775177002
    6. 'self' → logprob: -4.662193775177002
    7. ',' → logprob: -7.037193775177002
    8. 'input' → logprob: -8.28719425201416
    9. '(self' → logprob: -8.53719425201416
    10. ')_' → logprob: -8.53719425201416

Token 400: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.11127260327339172
    2. '->' → logprob: -2.7362725734710693
    3. ' ->' → logprob: -3.2362725734710693
    4. '       ' → logprob: -7.486272811889648
    5. 'self' → logprob: -7.986272811889648
    6. ':' → logprob: -9.986272811889648
    7. '   ' → logprob: -9.986272811889648
    8. ')' → logprob: -10.236272811889648
    9. '[self' → logprob: -10.361272811889648
    10. '(' → logprob: -10.361272811889648

Token 401: ' (' (ID: 350)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.22634494304656982
    2. 'int' → logprob: -2.6013450622558594
    3. 'Digit' → logprob: -3.4763450622558594
    4. 'tuple' → logprob: -3.4763450622558594
    5. 'Tuple' → logprob: -3.6013450622558594
    6. 'str' → logprob: -4.351345062255859
    7. ' List' → logprob: -4.976345062255859
    8. '[int' → logprob: -5.101345062255859
    9. ' tuple' → logprob: -5.601345062255859
    10. 'list' → logprob: -5.601345062255859

Token 402: 'Digit' (ID: 46997)
  Prédit: 'Digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -0.06617868691682816
    2. 'int' → logprob: -3.066178798675537
    3. 'List' → logprob: -4.066178798675537
    4. ' Digit' → logprob: -9.316178321838379
    5. 'Sequence' → logprob: -9.691178321838379
    6. 'str' → logprob: -10.691178321838379
    7. 'digit' → logprob: -10.691178321838379
    8. 'Digital' → logprob: -10.941178321838379
    9. '[int' → logprob: -11.066178321838379
    10. 'Tuple' → logprob: -11.191178321838379

Token 403: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -3.128163257315464e-07
    2. '_sequence' → logprob: -17.0
    3. '[' → logprob: -17.375
    4. ' Sequence' → logprob: -17.5
    5. '[int' → logprob: -17.625
    6. 'sequence' → logprob: -17.75
    7. 'Sequ' → logprob: -18.125
    8. '.Sequence' → logprob: -18.25
    9. '_SEQUENCE' → logprob: -18.625
    10. 'List' → logprob: -19.375

Token 404: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016635251813568175
    2. ',int' → logprob: -8.750165939331055
    3. ' ,' → logprob: -11.875165939331055
    4. 'int' → logprob: -14.625165939331055
    5. ',List' → logprob: -15.375165939331055
    6. '[int' → logprob: -15.625165939331055
    7. '   ' → logprob: -17.750165939331055
    8. ',
' → logprob: -17.875165939331055
    9. ',bool' → logprob: -18.625165939331055
    10. '  ' → logprob: -19.125165939331055

Token 405: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0004354373668320477
    2. ' int' → logprob: -7.7504353523254395
    3. 'List' → logprob: -13.000435829162598
    4. '[int' → logprob: -13.625435829162598
    5. ')' → logprob: -14.125435829162598
    6. 'Digit' → logprob: -15.250435829162598
    7. '(int' → logprob: -16.50043487548828
    8. ',int' → logprob: -17.00043487548828
    9. '<int' → logprob: -17.00043487548828
    10. '   ' → logprob: -17.00043487548828

Token 406: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07937594503164291
    2. '):
' → logprob: -2.579375982284546
    3. '):
' → logprob: -7.704375743865967
    4. ')' → logprob: -10.579376220703125
    5. ',' → logprob: -12.204376220703125
    6. '):

' → logprob: -13.454376220703125
    7. ':' → logprob: -13.579376220703125
    8. ' ):' → logprob: -13.704376220703125
    9. '   ' → logprob: -14.454376220703125
    10. ' ' → logprob: -15.954376220703125

Token 407: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011188744247192517
    2. ' line' → logprob: -9.37511157989502
    3. 'line' → logprob: -11.50011157989502
    4. 'input' → logprob: -12.00011157989502
    5. '        
' → logprob: -12.37511157989502
    6. '```' → logprob: -13.12511157989502
    7. ' input' → logprob: -13.50011157989502
    8. '      ' → logprob: -14.12511157989502
    9. '   ' → logprob: -15.00011157989502
    10. '           ' → logprob: -15.50011157989502

Token 408: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.24906454980373383
    2. 'line' (adapté à ' line') → logprob: -2.4990644454956055
    3. ' raw' → logprob: -3.1240644454956055
    4. '       ' → logprob: -3.2490644454956055
    5. ' input' → logprob: -3.7490644454956055
    6. 'raw' → logprob: -4.1240644454956055
    7. 'input' → logprob: -4.2490644454956055
    8. 'digits' → logprob: -7.9990644454956055
    9. ' digits' → logprob: -8.249064445495605
    10. ' numbers' → logprob: -8.874064445495605

Token 409: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0020216628909111023
    2. '=' → logprob: -6.252021789550781
    3. 's' → logprob: -9.377021789550781
    4. '   ' → logprob: -12.627021789550781
    5. '1' → logprob: -12.752021789550781
    6. ' ' → logprob: -14.127021789550781
    7. '=line' → logprob: -14.752021789550781
    8. '_input' → logprob: -15.002021789550781
    9. '=input' → logprob: -15.627021789550781
    10. '       ' → logprob: -15.627021789550781

Token 410: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014168680645525455
    2. '=' → logprob: -4.264168739318848
    3. '       ' → logprob: -13.639168739318848
    4. '=line' → logprob: -13.639168739318848
    5. '_line' → logprob: -14.139168739318848
    6. '   ' → logprob: -14.389168739318848
    7. ' ' → logprob: -14.514168739318848
    8. ',' → logprob: -14.889168739318848
    9. ' =
' → logprob: -15.764168739318848
    10. '()' → logprob: -16.01416778564453

Token 411: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06196768581867218
    2. ' self' → logprob: -2.811967611312866
    3. '(self' → logprob: -18.311967849731445
    4. '	self' → logprob: -18.936967849731445
    5. '=self' → logprob: -19.436967849731445
    6. '[self' → logprob: -19.936967849731445
    7. '   ' → logprob: -20.311967849731445
    8. ' ' → logprob: -21.061967849731445
    9. 'next' → logprob: -21.186967849731445
    10. '0' → logprob: -21.311967849731445

Token 412: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -2.5776860184123507e-06
    2. '_' → logprob: -13.87500286102295
    3. '.' → logprob: -14.50000286102295
    4. '   ' → logprob: -15.87500286102295
    5. '
' → logprob: -16.375001907348633
    6. ' _' → logprob: -16.500001907348633
    7. '_input' → logprob: -16.500001907348633
    8. '_s' → logprob: -16.625001907348633
    9. ']._' → logprob: -17.000001907348633
    10. ' .' → logprob: -17.000001907348633

Token 413: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -4.320199877838604e-07
    2. '_input' → logprob: -15.625
    3. ' input' → logprob: -16.0
    4. '.input' → logprob: -17.75
    5. 'Input' → logprob: -18.0
    6. '	input' → logprob: -19.125
    7. '(input' → logprob: -19.125
    8. 'import' → logprob: -20.375
    9. '=input' → logprob: -20.5
    10. 'output' → logprob: -20.75

Token 414: '_supplier' (ID: 191529)
  Prédit: '_supplier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_supplier' → logprob: -0.008617408573627472
    2. 'supplier' → logprob: -4.758617401123047
    3. 'Supplier' → logprob: -13.758617401123047
    4. 's' → logprob: -14.258617401123047
    5. 'upplier' → logprob: -14.383617401123047
    6. 'sup' → logprob: -15.383617401123047
    7. '.Supplier' → logprob: -16.383617401123047
    8. '   ' → logprob: -16.758617401123047
    9. ' supplier' → logprob: -17.008617401123047
    10. '_supply' → logprob: -17.008617401123047

Token 415: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20180371403694153
    2. '().' → logprob: -1.9518036842346191
    3. '()
' → logprob: -3.201803684234619
    4. '()
' → logprob: -10.451804161071777
    5. '()

' → logprob: -11.701804161071777
    6. '()`' → logprob: -15.076804161071777
    7. '()"' → logprob: -15.701804161071777
    8. '()\' → logprob: -15.951804161071777
    9. '(' → logprob: -16.07680320739746
    10. '().
' → logprob: -16.32680320739746

Token 416: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0005056116497144103
    2. 'split' → logprob: -7.750505447387695
    3. 'rstrip' → logprob: -9.500505447387695
    4. ' strip' → logprob: -16.000505447387695
    5. '.strip' → logprob: -18.750505447387695
    6. '-strip' → logprob: -20.375505447387695
    7. '_strip' → logprob: -20.500505447387695
    8. 'replace' → logprob: -21.000505447387695
    9. '```' → logprob: -21.750505447387695
    10. 'str' → logprob: -22.000505447387695

Token 417: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.07020162045955658
    2. '()' → logprob: -3.3202016353607178
    3. '
' → logprob: -3.6952016353607178
    4. '       ' → logprob: -5.945201396942139
    5. '.split' → logprob: -6.570201396942139
    6. '        
' → logprob: -7.695201396942139
    7. '<|end|>' → logprob: -7.695201396942139
    8. ')
' → logprob: -8.195201873779297
    9. ')' → logprob: -8.445201873779297
    10. 'split' → logprob: -8.570201873779297

Token 418: '       ' (ID: 309)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9903433322906494
    2. 'n' → logprob: -1.3653433322906494
    3. ',' → logprob: -1.4903433322906494
    4. '       ' → logprob: -2.7403433322906494
    5. ' parts' → logprob: -3.9903433322906494
    6. ',n' → logprob: -3.9903433322906494
    7. 'digits' → logprob: -4.61534309387207
    8. ' ,' → logprob: -5.36534309387207
    9. ' digits' → logprob: -5.49034309387207
    10. 'line' → logprob: -5.86534309387207

Token 419: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.23319368064403534
    2. 'k' → logprob: -2.6081936359405518
    3. 'length' → logprob: -3.1081936359405518
    4. 'line' → logprob: -3.4831936359405518
    5. 'digits' → logprob: -3.7331936359405518
    6. 'parts' → logprob: -4.233193874359131
    7. 'num' → logprob: -4.733193874359131
    8. 'sequence' → logprob: -5.858193874359131
    9. 'N' → logprob: -5.858193874359131
    10. 'digit' → logprob: -6.608193874359131

Token 420: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002823120157700032
    2. ',k' → logprob: -8.500282287597656
    3. ' ,' → logprob: -9.625282287597656
    4. '_str' → logprob: -12.125282287597656
    5. 'k' → logprob: -12.750282287597656
    6. 's' → logprob: -13.500282287597656
    7. ',int' → logprob: -14.500282287597656
    8. 'space' → logprob: -14.875282287597656
    9. 'str' → logprob: -15.000282287597656
    10. ',n' → logprob: -15.125282287597656

Token 421: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0019367238273844123
    2. ' k' → logprob: -6.251936912536621
    3. 'space' → logprob: -12.501936912536621
    4. 'm' → logprob: -13.251936912536621
    5. ' ' → logprob: -14.501936912536621
    6. '_k' → logprob: -14.626936912536621
    7. ' 
' → logprob: -15.376936912536621
    8. 'ks' → logprob: -15.876936912536621
    9. '_' → logprob: -16.001935958862305
    10. '  ' → logprob: -16.126935958862305

Token 422: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022595763206482
    2. ' =' → logprob: -1.9102259874343872
    3. ',' → logprob: -13.660225868225098
    4. ' ' → logprob: -15.785225868225098
    5. '=
' → logprob: -16.035226821899414
    6. '=

' → logprob: -16.285226821899414
    7. '=int' → logprob: -16.535226821899414
    8. '=line' → logprob: -17.035226821899414
    9. ' =
' → logprob: -17.285226821899414
    10. ')' → logprob: -17.410226821899414

Token 423: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0052690957672894
    2. ' map' → logprob: -5.2552690505981445
    3. 'line' → logprob: -10.380269050598145
    4. '(map' → logprob: -12.505269050598145
    5. ' line' → logprob: -15.755269050598145
    6. '[' → logprob: -15.755269050598145
    7. '	map' → logprob: -16.50527000427246
    8. '[line' → logprob: -16.63027000427246
    9. '   ' → logprob: -17.13027000427246
    10. '
' → logprob: -17.13027000427246

Token 424: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00012368128227535635
    2. 'int' → logprob: -9.000123977661133
    3. '(' → logprob: -16.500123977661133
    4. ' int' → logprob: -17.500123977661133
    5. '=int' → logprob: -17.625123977661133
    6. '(str' → logprob: -17.875123977661133
    7. '[int' → logprob: -18.500123977661133
    8. ',int' → logprob: -18.625123977661133
    9. '<int' → logprob: -19.125123977661133
    10. '	int' → logprob: -19.750123977661133

Token 425: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0023578100372105837
    2. ',line' → logprob: -6.8773579597473145
    3. 'line' → logprob: -7.0023579597473145
    4. ',' → logprob: -8.502357482910156
    5. ' line' → logprob: -9.252357482910156
    6. ')' → logprob: -9.877357482910156
    7. '=line' → logprob: -10.377357482910156
    8. '(' → logprob: -10.877357482910156
    9. '[line' → logprob: -11.627357482910156
    10. '#line' → logprob: -13.002357482910156

Token 426: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.003177952254191041
    2. ' line' → logprob: -5.753178119659424
    3. '(line' → logprob: -16.003177642822266
    4. '[line' → logprob: -17.253177642822266
    5. ')' → logprob: -17.753177642822266
    6. '	line' → logprob: -18.128177642822266
    7. '#line' → logprob: -18.878177642822266
    8. '=line' → logprob: -18.878177642822266
    9. ',line' → logprob: -19.378177642822266
    10. ' ' → logprob: -19.503177642822266

Token 427: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '(line' → logprob: -18.25
    3. ' ' → logprob: -18.875
    4. '(' → logprob: -19.875
    5. '```' → logprob: -20.625
    6. '１' → logprob: -20.75
    7. '
' → logprob: -21.0
    8. 'line' → logprob: -21.25
    9. '=line' → logprob: -21.75
    10. '[line' → logprob: -22.0

Token 428: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.475333034992218
    2. '.split' → logprob: -0.975333034992218
    3. '.strip' → logprob: -7.350333213806152
    4. '.' → logprob: -7.725333213806152
    5. ' .' → logprob: -8.725333213806152
    6. 'split' → logprob: -12.225333213806152
    7. '()' → logprob: -12.850333213806152
    8. ')' → logprob: -14.475333213806152
    9. '   ' → logprob: -15.475333213806152
    10. '(' → logprob: -15.725333213806152

Token 429: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.009150413796305656
    2. '()' → logprob: -4.884150505065918
    3. '('' → logprob: -7.259150505065918
    4. '())
' → logprob: -7.259150505065918
    5. ')' → logprob: -9.384150505065918
    6. '(' → logprob: -10.634150505065918
    7. '(','' → logprob: -11.634150505065918
    8. '())

' → logprob: -12.009150505065918
    9. '()
' → logprob: -12.384150505065918
    10. ' ())' → logprob: -12.884150505065918

Token 430: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000586991140153259
    2. '<|end|>' → logprob: -8.875587463378906
    3. 'newline' → logprob: -9.125587463378906
    4. 'line' → logprob: -9.125587463378906
    5. '        
' → logprob: -9.250587463378906
    6. ' line' → logprob: -10.500587463378906
    7. '
' → logprob: -10.750587463378906
    8. 'n' → logprob: -10.875587463378906
    9. 'return' → logprob: -11.250587463378906
    10. '[line' → logprob: -11.625587463378906

Token 431: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.12033756077289581
    2. ' line' → logprob: -2.74533748626709
    3. '       ' → logprob: -3.62033748626709
    4. 'digits' → logprob: -3.87033748626709
    5. ' digits' → logprob: -6.87033748626709
    6. '
' → logprob: -8.49533748626709
    7. 'numbers' → logprob: -9.74533748626709
    8. 'lines' → logprob: -9.99533748626709
    9. 'digit' → logprob: -10.37033748626709
    10. '[line' → logprob: -10.74533748626709

Token 432: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.625000953674316
    3. '=' → logprob: -15.625000953674316
    4. '_' → logprob: -16.375
    5. ' =' → logprob: -16.375
    6. '   ' → logprob: -18.75
    7. '２' → logprob: -19.5
    8. '۲' → logprob: -19.75
    9. 'sequence' → logprob: -19.875
    10. 's' → logprob: -20.0

Token 433: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692873179912567
    2. '=' → logprob: -2.1269288063049316
    3. ' ' → logprob: -14.876928329467773
    4. '=line' → logprob: -14.876928329467773
    5. '   ' → logprob: -18.001928329467773
    6. ',' → logprob: -18.001928329467773
    7. '    ' → logprob: -18.251928329467773
    8. '       ' → logprob: -18.376928329467773
    9. ' ' → logprob: -18.501928329467773
    10. ')' → logprob: -18.626928329467773

Token 434: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008054602658376098
    2. ' self' → logprob: -7.125805377960205
    3. '       ' → logprob: -14.625805854797363
    4. '(self' → logprob: -15.000805854797363
    5. '[self' → logprob: -15.750805854797363
    6. '   ' → logprob: -17.875804901123047
    7. '=self' → logprob: -18.000804901123047
    8. ' ' → logprob: -18.000804901123047
    9. '	self' → logprob: -18.125804901123047
    10. 's' → logprob: -18.625804901123047

Token 435: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.8624639324116288e-06
    2. '_input' → logprob: -14.000001907348633
    3. '.' → logprob: -14.125001907348633
    4. '_' → logprob: -16.375001907348633
    5. '   ' → logprob: -17.375001907348633
    6. 'self' → logprob: -17.750001907348633
    7. '.\' → logprob: -18.000001907348633
    8. ' .' → logprob: -18.250001907348633
    9. ' _' → logprob: -18.625001907348633
    10. ']._' → logprob: -18.750001907348633

Token 436: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -3.9650025428272784e-05
    2. '_input' → logprob: -10.250040054321289
    3. ' input' → logprob: -12.500040054321289
    4. '.input' → logprob: -15.500040054321289
    5. '_' → logprob: -16.00004005432129
    6. 'supplier' → logprob: -17.00004005432129
    7. '	input' → logprob: -17.12504005432129
    8. '(input' → logprob: -17.25004005432129
    9. 'Input' → logprob: -18.00004005432129
    10. '=input' → logprob: -18.12504005432129

Token 437: '_supplier' (ID: 191529)
  Prédit: '_supplier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_supplier' → logprob: -0.00024858469259925187
    2. 'supplier' → logprob: -8.375248908996582
    3. 'Supplier' → logprob: -11.250248908996582
    4. '_provider' → logprob: -13.000248908996582
    5. '().' → logprob: -13.500248908996582
    6. '_supply' → logprob: -14.125248908996582
    7. 'upplier' → logprob: -16.000247955322266
    8. '_parser' → logprob: -16.000247955322266
    9. '   ' → logprob: -16.625247955322266
    10. '()' → logprob: -16.750247955322266

Token 438: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.5776860184123507e-06
    2. '()' → logprob: -13.12500286102295
    3. ' ().' → logprob: -14.62500286102295
    4. '()).' → logprob: -17.625001907348633
    5. '()
' → logprob: -18.000001907348633
    6. ').' → logprob: -18.625001907348633
    7. '().__' → logprob: -19.375001907348633
    8. '>().' → logprob: -19.750001907348633
    9. '()].' → logprob: -20.375001907348633
    10. ' .' → logprob: -20.875001907348633

Token 439: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: 0.0
    2. ' strip' → logprob: -16.875
    3. 'rstrip' → logprob: -17.0
    4. '.strip' → logprob: -18.875
    5. '(strip' → logprob: -19.125
    6. 'split' → logprob: -19.375
    7. '().' → logprob: -20.875
    8. '_strip' → logprob: -20.875
    9. 'stripe' → logprob: -21.25
    10. 'str' → logprob: -21.25

Token 440: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11297052353620529
    2. 'digits' → logprob: -2.8629705905914307
    3. '<|end|>' → logprob: -3.8629705905914307
    4. '
' → logprob: -4.362970352172852
    5. ',' → logprob: -4.612970352172852
    6. '        
' → logprob: -6.487970352172852
    7. ',d' → logprob: -7.112970352172852
    8. '_digits' → logprob: -7.237970352172852
    9. '<|end|>' → logprob: -7.612970352172852
    10. 'd' → logprob: -7.987970352172852

Token 441: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3152334988117218
    2. 'digits' → logprob: -1.3152334690093994
    3. ' digits' → logprob: -6.3152337074279785
    4. 'd' → logprob: -9.31523323059082
    5. 'numbers' → logprob: -9.94023323059082
    6. '   ' → logprob: -11.94023323059082
    7. '_digits' → logprob: -12.06523323059082
    8. 'digit' → logprob: -12.44023323059082
    9. '	d' → logprob: -12.69023323059082
    10. 'dig' → logprob: -13.69023323059082

Token 442: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' (adapté à ' digits') → logprob: -4.1318875446449965e-05
    2. ' digits' → logprob: -10.250041007995605
    3. '       ' → logprob: -12.625041007995605
    4. 'digit' → logprob: -13.500041007995605
    5. 'numbers' → logprob: -13.875041007995605
    6. '   ' → logprob: -15.875041007995605
    7. 'dig' → logprob: -17.625041961669922
    8. 'sequence' → logprob: -17.875041961669922
    9. 'nums' → logprob: -18.000041961669922
    10. '_digits' → logprob: -18.625041961669922

Token 443: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931831240653992
    2. ' =' → logprob: -0.6931831240653992
    3. '_list' → logprob: -10.568182945251465
    4. '=[]' → logprob: -12.693182945251465
    5. ':' → logprob: -13.318182945251465
    6. '_tokens' → logprob: -13.693182945251465
    7. '=int' → logprob: -14.943182945251465
    8. '[:]' → logprob: -15.068182945251465
    9. '_' → logprob: -15.193182945251465
    10. '=[' → logprob: -15.318182945251465

Token 444: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.47712478041648865
    2. '[list' → logprob: -0.977124810218811
    3. '[' → logprob: -6.7271246910095215
    4. '[List' → logprob: -6.9771246910095215
    5. ' [' → logprob: -7.6021246910095215
    6. ' list' → logprob: -7.9771246910095215
    7. '[int' → logprob: -9.85212516784668
    8. 'List' → logprob: -12.47712516784668
    9. '[len' → logprob: -12.47712516784668
    10. '[line' → logprob: -13.47712516784668

Token 445: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.981667537620524e-06
    2. 'map' → logprob: -13.875001907348633
    3. '(int' → logprob: -14.000001907348633
    4. '(' → logprob: -16.000001907348633
    5. '[int' → logprob: -19.625001907348633
    6. ' map' → logprob: -19.625001907348633
    7. '.map' → logprob: -19.875001907348633
    8. '	map' → logprob: -20.375001907348633
    9. 'int' → logprob: -21.000001907348633
    10. '(
' → logprob: -21.625001907348633

Token 446: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.038117799907922745
    2. 'int' → logprob: -3.2881178855895996
    3. '(' → logprob: -9.788117408752441
    4. '(lambda' → logprob: -11.288117408752441
    5. '(
' → logprob: -12.788117408752441
    6. '[int' → logprob: -13.538117408752441
    7. 'lambda' → logprob: -13.663117408752441
    8. '<int' → logprob: -13.913117408752441
    9. ' int' → logprob: -14.413117408752441
    10. '   ' → logprob: -15.163117408752441

Token 447: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.00015908108616713434
    2. ',line' → logprob: -9.50015926361084
    3. ',' → logprob: -9.75015926361084
    4. '(' → logprob: -11.37515926361084
    5. ' (' → logprob: -11.50015926361084
    6. 'line' → logprob: -13.12515926361084
    7. '(list' → logprob: -13.37515926361084
    8. ' line' → logprob: -15.12515926361084
    9. '=line' → logprob: -15.87515926361084
    10. '[line' → logprob: -16.625158309936523

Token 448: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.01832248829305172
    2. 'list' → logprob: -4.018322467803955
    3. '(line' → logprob: -9.143322944641113
    4. ' line' → logprob: -9.768322944641113
    5. ' list' → logprob: -12.393322944641113
    6. '[line' → logprob: -13.143322944641113
    7. 'str' → logprob: -13.893322944641113
    8. 'filter' → logprob: -14.268322944641113
    9. '
' → logprob: -15.643322944641113
    10. '(list' → logprob: -15.768322944641113

Token 449: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7019960880279541
    2. '(line' → logprob: -0.7019960880279541
    3. 'line' → logprob: -5.076995849609375
    4. '=line' → logprob: -6.076995849609375
    5. '[line' → logprob: -8.826995849609375
    6. 'in' → logprob: -9.951995849609375
    7. ' line' → logprob: -10.826995849609375
    8. ')' → logprob: -11.576995849609375
    9. 'strip' → logprob: -11.826995849609375
    10. ',line' → logprob: -11.951995849609375

Token 450: '.split' (ID: 10347)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.3873417377471924
    2. '.strip' → logprob: -1.8873417377471924
    3. '().' → logprob: -2.1373417377471924
    4. '))' → logprob: -3.5123417377471924
    5. '()' → logprob: -4.012341499328613
    6. '.split' → logprob: -6.012341499328613
    7. '()))
' → logprob: -7.887341499328613
    8. '()));' → logprob: -8.262341499328613
    9. '.' → logprob: -8.387341499328613
    10. 'strip' → logprob: -8.512341499328613

Token 451: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.006223713047802448
    2. '()' → logprob: -5.506223678588867
    3. '))' → logprob: -6.631223678588867
    4. '()))
' → logprob: -7.131223678588867
    5. '(' → logprob: -11.256223678588867
    6. '()))

' → logprob: -12.256223678588867
    7. '())' → logprob: -13.006223678588867
    8. '()));' → logprob: -13.131223678588867
    9. '()))
' → logprob: -14.256223678588867
    10. '())))' → logprob: -14.381223678588867

Token 452: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.749814019713085e-06
    2. '
' → logprob: -12.625006675720215
    3. 'return' → logprob: -13.625006675720215
    4. '<|end|>' → logprob: -14.125006675720215
    5. ' return' → logprob: -14.250006675720215
    6. '   ' → logprob: -14.250006675720215
    7. '      ' → logprob: -16.87500762939453
    8. ',' → logprob: -17.00000762939453
    9. '           ' → logprob: -17.62500762939453
    10. '        
' → logprob: -17.62500762939453

Token 453: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20626923441886902
    2. 'return' → logprob: -1.7062692642211914
    3. ' return' → logprob: -5.331269264221191
    4. '	return' → logprob: -13.081269264221191
    5. '
' → logprob: -13.456269264221191
    6. '   ' → logprob: -14.456269264221191
    7. ':return' → logprob: -14.456269264221191
    8. '{return' → logprob: -15.081269264221191
    9. '```' → logprob: -15.206269264221191
    10. '<|end|>' → logprob: -15.331269264221191

Token 454: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.6245118975639343
    2. 'len' → logprob: -0.9995118975639343
    3. 'n' → logprob: -2.624511957168579
    4. ' n' → logprob: -3.749511957168579
    5. ' not' → logprob: -8.49951171875
    6. 'not' → logprob: -9.62451171875
    7. 'k' → logprob: -9.74951171875
    8. ' ' → logprob: -10.87451171875
    9. '(len' → logprob: -10.87451171875
    10. ' k' → logprob: -11.24951171875

Token 455: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -3.054500666621607e-06
    2. 'digits' → logprob: -12.87500286102295
    3. '(' → logprob: -14.87500286102295
    4. ' (' → logprob: -17.125003814697266
    5. ' digits' → logprob: -17.250003814697266
    6. ')' → logprob: -18.500003814697266
    7. '(
' → logprob: -18.625003814697266
    8. 'd' → logprob: -18.750003814697266
    9. '	d' → logprob: -19.500003814697266
    10. '(de' → logprob: -19.875003814697266

Token 456: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.008676261641085148
    2. 'digits' → logprob: -4.758676052093506
    3. 'igts' → logprob: -10.133676528930664
    4. 'ig' → logprob: -11.508676528930664
    5. ' digits' → logprob: -12.633676528930664
    6. '(d' → logprob: -13.508676528930664
    7. 'igit' → logprob: -13.633676528930664
    8. '_digits' → logprob: -13.883676528930664
    9. '>' → logprob: -14.008676528930664
    10. 'd' → logprob: -14.133676528930664

Token 457: ')' (ID: 8)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5093033909797668
    2. ')' → logprob: -1.509303331375122
    3. '!=' → logprob: -1.759303331375122
    4. ')!=' → logprob: -5.759303569793701
    5. '<' → logprob: -6.759303569793701
    6. '()!=' → logprob: -7.384303569793701
    7. ' <' → logprob: -7.384303569793701
    8. ' )' → logprob: -9.134303092956543
    9. '()' → logprob: -9.134303092956543
    10. ')<' → logprob: -10.884303092956543

Token 458: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.23218105733394623
    2. ' !=' → logprob: -1.6071810722351074
    3. '<' → logprob: -5.107181072235107
    4. '()!=' → logprob: -7.857181072235107
    5. ' <' → logprob: -8.60718059539795
    6. ')!=' → logprob: -9.60718059539795
    7. ')' → logprob: -11.35718059539795
    8. '>' → logprob: -11.48218059539795
    9. '()<' → logprob: -11.98218059539795
    10. '<n' → logprob: -12.10718059539795

Token 459: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00861468818038702
    2. ' n' → logprob: -4.758614540100098
    3. '	n' → logprob: -16.008615493774414
    4. '(n' → logprob: -19.633615493774414
    5. ')n' → logprob: -19.758615493774414
    6. '_n' → logprob: -19.883615493774414
    7. '   ' → logprob: -20.383615493774414
    8. ' ' → logprob: -20.383615493774414
    9. '?n' → logprob: -21.008615493774414
    10. '<n' → logprob: -21.133615493774414

Token 460: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04329341650009155
    2. ':
' → logprob: -3.1682934761047363
    3. ' or' → logprob: -8.543292999267578
    4. ',' → logprob: -10.918292999267578
    5. '       ' → logprob: -11.168292999267578
    6. '<|end|>' → logprob: -11.418292999267578
    7. ':return' → logprob: -11.543292999267578
    8. 'raise' → logprob: -11.793292999267578
    9. ')' → logprob: -12.168292999267578
    10. ' :' → logprob: -12.293292999267578

Token 461: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08541446924209595
    2. ' raise' → logprob: -3.085414409637451
    3. 'raise' → logprob: -3.460414409637451
    4. '       ' → logprob: -5.585414409637451
    5. ',' → logprob: -7.960414409637451
    6. '	raise' → logprob: -8.46041488647461
    7. ':' → logprob: -8.71041488647461
    8. '   ' → logprob: -9.33541488647461
    9. '          ' → logprob: -10.71041488647461
    10. ':
' → logprob: -10.83541488647461

Token 462: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.01481135655194521
    2. ' raise' → logprob: -4.7648115158081055
    3. '           ' → logprob: -5.1398115158081055
    4. '	raise' → logprob: -8.639811515808105
    5. '       ' → logprob: -9.514811515808105
    6. '   ' → logprob: -10.014811515808105
    7. '               ' → logprob: -11.264811515808105
    8. '```' → logprob: -12.389811515808105
    9. '
' → logprob: -13.764811515808105
    10. 'Raise' → logprob: -13.889811515808105

Token 463: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.02324605919420719
    2. ' Value' → logprob: -3.7732460498809814
    3. '	Value' → logprob: -14.773245811462402
    4. 'Runtime' → logprob: -16.14824676513672
    5. '(Value' → logprob: -16.52324676513672
    6. '_value' → logprob: -16.77324676513672
    7. '```' → logprob: -17.52324676513672
    8. 'Index' → logprob: -17.77324676513672
    9. '_Value' → logprob: -17.89824676513672
    10. 'value' → logprob: -18.14824676513672

Token 464: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.006728161126375198
    2. 'rror' → logprob: -5.006728172302246
    3. 'Value' → logprob: -11.506728172302246
    4. 'alue' → logprob: -13.131728172302246
    5. 'SError' → logprob: -14.881728172302246
    6. 'ror' → logprob: -15.006728172302246
    7. 'error' → logprob: -16.63172721862793
    8. 'LError' → logprob: -16.75672721862793
    9. 'Input' → logprob: -18.13172721862793
    10. 'r' → logprob: -18.25672721862793

Token 465: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -8.537868779967539e-06
    2. '(' → logprob: -11.750008583068848
    3. '(f' → logprob: -14.250008583068848
    4. '('' → logprob: -18.12500762939453
    5. '(
' → logprob: -18.87500762939453
    6. '("'' → logprob: -20.75000762939453
    7. '"' → logprob: -22.00000762939453
    8. 'f' → logprob: -22.50000762939453
    9. '(("' → logprob: -22.62500762939453
    10. '   ' → logprob: -22.75000762939453

Token 466: 'Number' (ID: 3695)
  Prédit: 'Number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.22527359426021576
    2. 'Input' → logprob: -2.725273609161377
    3. 'Invalid' → logprob: -2.725273609161377
    4. ' Number' → logprob: -2.975273609161377
    5. 'The' → logprob: -4.850273609161377
    6. 'Length' → logprob: -5.850273609161377
    7. '"' → logprob: -5.975273609161377
    8. 'Digit' → logprob: -6.350273609161377
    9. ' The' → logprob: -6.725273609161377
    10. 'Incorrect' → logprob: -6.975273609161377

Token 467: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.0008130819769576192
    2. 'of' → logprob: -7.125813007354736
    3. ' ' → logprob: -12.375813484191895
    4. '	of' → logprob: -12.375813484191895
    5. '  ' → logprob: -15.625813484191895
    6. '   ' → logprob: -17.875812530517578
    7. 's' → logprob: -18.000812530517578
    8. ' ' → logprob: -18.125812530517578
    9. '    ' → logprob: -18.250812530517578
    10. 'Error' → logprob: -18.375812530517578

Token 468: ' digits' (ID: 37806)
  Prédit: ' digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.014212986454367638
    2. 'digits' → logprob: -4.2642130851745605
    3. '_digits' → logprob: -10.889212608337402
    4. ' input' → logprob: -11.514212608337402
    5. ' provided' → logprob: -11.764212608337402
    6. ' ' → logprob: -12.514212608337402
    7. ' tokens' → logprob: -13.139212608337402
    8. ' ' → logprob: -13.389212608337402
    9. ' elements' → logprob: -14.139212608337402
    10. ' spaces' → logprob: -14.764212608337402

Token 469: ' does' (ID: 2226)
  Prédit: ' does'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' does' → logprob: -0.004130999557673931
    2. 'does' → logprob: -5.504130840301514
    3. ' mismatch' → logprob: -10.879131317138672
    4. ' provided' → logprob: -11.379131317138672
    5. ' do' → logprob: -12.129131317138672
    6. ' !=' → logprob: -12.879131317138672
    7. 'provided' → logprob: -12.879131317138672
    8. ' doesn't' → logprob: -12.879131317138672
    9. ' ' → logprob: -13.129131317138672
    10. 'm' → logprob: -13.254131317138672

Token 470: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3869295120239258
    2. 'not' → logprob: -1.1369295120239258
    3. 'n't' → logprob: -9.761929512023926
    4. '   ' → logprob: -15.511929512023926
    5. '_not' → logprob: -15.636929512023926
    6. '	not' → logprob: -15.761929512023926
    7. 'nt' → logprob: -16.13692855834961
    8. '    ' → logprob: -16.76192855834961
    9. ' ' → logprob: -16.88692855834961
    10. 'n' → logprob: -16.88692855834961

Token 471: ' match' (ID: 3981)
  Prédit: ' match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.47408080101013184
    2. 'match' → logprob: -0.9740808010101318
    3. 'equal' → logprob: -13.099081039428711
    4. '_match' → logprob: -14.224081039428711
    5. ' equal' → logprob: -15.224081039428711
    6. '	match' → logprob: -15.224081039428711
    7. '=' → logprob: -15.724081039428711
    8. 'matches' → logprob: -16.22408103942871
    9. 'm' → logprob: -16.59908103942871
    10. '==' → logprob: -16.97408103942871

Token 472: ' N' (ID: 478)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.17487479746341705
    2. 'n' → logprob: -1.9248747825622559
    3. ' the' → logprob: -4.299874782562256
    4. ' expected' → logprob: -7.299874782562256
    5. ' specified' → logprob: -9.299875259399414
    6. 'the' → logprob: -9.299875259399414
    7. 'expected' → logprob: -10.049875259399414
    8. ' input' → logprob: -10.299875259399414
    9. ' stated' → logprob: -11.549875259399414
    10. ' declared' → logprob: -12.174875259399414

Token 473: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.7738784551620483
    2. '")
' → logprob: -1.0238784551620483
    3. ')")
' → logprob: -1.7738784551620483
    4. ')")' → logprob: -4.648878574371338
    5. ')' → logprob: -9.27387809753418
    6. ']")
' → logprob: -9.64887809753418
    7. '')")
' → logprob: -10.02387809753418
    8. '.")
' → logprob: -10.52387809753418
    9. '>")
' → logprob: -10.77387809753418
    10. '")
' → logprob: -10.89887809753418

Token 474: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011772842844948173
    2. 'return' → logprob: -9.875117301940918
    3. ' return' → logprob: -10.375117301940918
    4. '	' → logprob: -11.125117301940918
    5. '<|end|>' → logprob: -11.500117301940918
    6. '   ' → logprob: -12.250117301940918
    7. '        
' → logprob: -13.750117301940918
    8. '      ' → logprob: -14.250117301940918
    9. '	return' → logprob: -14.250117301940918
    10. ',' → logprob: -14.250117301940918

Token 475: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5890764594078064
    2. '       ' → logprob: -0.8390764594078064
    3. ' return' → logprob: -4.339076519012451
    4. '   ' → logprob: -13.839076042175293
    5. '	return' → logprob: -13.839076042175293
    6. '
' → logprob: -15.464076042175293
    7. ' ' → logprob: -16.46407699584961
    8. '{return' → logprob: -16.71407699584961
    9. '        
' → logprob: -16.71407699584961
    10. ':return' → logprob: -16.71407699584961

Token 476: ' Digit' (ID: 91174)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -0.00045200303429737687
    2. '(D' → logprob: -7.750452041625977
    3. ' Digit' → logprob: -10.875452041625977
    4. 'Digital' → logprob: -13.625452041625977
    5. 'Digits' → logprob: -13.875452041625977
    6. 'digit' → logprob: -16.625452041625977
    7. 'Dig' → logprob: -16.875452041625977
    8. '_digit' → logprob: -17.125452041625977
    9. '   ' → logprob: -18.125452041625977
    10. '
' → logprob: -18.375452041625977

Token 477: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -3.054500666621607e-06
    2. 'sequence' → logprob: -12.87500286102295
    3. '_sequence' → logprob: -15.87500286102295
    4. ' Sequence' → logprob: -16.000003814697266
    5. 'Sequ' → logprob: -16.625003814697266
    6. 'Sequences' → logprob: -18.250003814697266
    7. '.Sequence' → logprob: -19.250003814697266
    8. ' sequence' → logprob: -19.500003814697266
    9. '(' → logprob: -19.625003814697266
    10. '_SEQUENCE' → logprob: -19.875003814697266

Token 478: 'Factory' (ID: 4870)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -6.468279752880335e-05
    2. 'digits' → logprob: -9.750064849853516
    3. ',d' → logprob: -12.875064849853516
    4. '(' → logprob: -13.375064849853516
    5. ' (' → logprob: -14.000064849853516
    6. 'd' → logprob: -14.500064849853516
    7. ' digits' → logprob: -15.750064849853516
    8. '(
' → logprob: -15.750064849853516
    9. '([' → logprob: -16.125064849853516
    10. 'Digits' → logprob: -16.625064849853516

Token 479: '.create' (ID: 3916)
  Prédit: '.create'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.create' → logprob: -0.00018065694894175977
    2. '.' → logprob: -8.6251802444458
    3. ' .' → logprob: -14.8751802444458
    4. '._' → logprob: -15.3751802444458
    5. '   ' → logprob: -15.5001802444458
    6. '().' → logprob: -16.125181198120117
    7. '.from' → logprob: -16.250181198120117
    8. 'create' → logprob: -16.250181198120117
    9. '_create' → logprob: -17.375181198120117
    10. ' ' → logprob: -18.625181198120117

Token 480: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -2.1008713702030946e-06
    2. 'from' → logprob: -13.125001907348633
    3. '_to' → logprob: -17.875001907348633
    4. 'From' → logprob: -18.375001907348633
    5. ')_' → logprob: -19.250001907348633
    6. '_for' → logprob: -19.625001907348633
    7. '_FROM' → logprob: -19.625001907348633
    8. '```' → logprob: -20.625001907348633
    9. '##_' → logprob: -20.750001907348633
    10. '_From' → logprob: -20.875001907348633

Token 481: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.054500666621607e-06
    2. 'list' → logprob: -12.75000286102295
    3. 'List' → logprob: -16.375003814697266
    4. '_lists' → logprob: -19.125003814697266
    5. '_List' → logprob: -19.750003814697266
    6. '```' → logprob: -20.750003814697266
    7. '_LIST' → logprob: -21.250003814697266
    8. 's' → logprob: -21.250003814697266
    9. '<List' → logprob: -21.375003814697266
    10. ' _' → logprob: -22.000003814697266

Token 482: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.750000953674316
    3. ' (' → logprob: -15.250000953674316
    4. 'd' → logprob: -19.25
    5. '(s' → logprob: -19.5
    6. 'digits' → logprob: -19.875
    7. '(b' → logprob: -20.0
    8. '(c' → logprob: -20.125
    9. '(n' → logprob: -20.375
    10. '(m' → logprob: -20.5

Token 483: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.00011427151912357658
    2. 'ig' → logprob: -9.500114440917969
    3. 'digits' → logprob: -10.750114440917969
    4. 'its' → logprob: -11.875114440917969
    5. 'igts' → logprob: -11.875114440917969
    6. '(d' → logprob: -13.125114440917969
    7. 'i' → logprob: -14.500114440917969
    8. 'g' → logprob: -14.625114440917969
    9. '(' → logprob: -15.125114440917969
    10. 'igit' → logprob: -15.500114440917969

Token 484: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030712861567735672
    2. '),' → logprob: -3.530712842941284
    3. ',k' → logprob: -7.280713081359863
    4. ' ,' → logprob: -8.280713081359863
    5. '       ' → logprob: -12.155713081359863
    6. '   ' → logprob: -12.405713081359863
    7. '(),' → logprob: -12.530713081359863
    8. '(k' → logprob: -13.530713081359863
    9. ' ),' → logprob: -13.655713081359863
    10. '
' → logprob: -13.655713081359863

Token 485: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.12692831456661224
    2. ' k' → logprob: -2.1269283294677734
    3. ' 
' → logprob: -16.126928329467773
    4. '	k' → logprob: -17.376928329467773
    5. ' ' → logprob: -17.626928329467773
    6. '
' → logprob: -18.126928329467773
    7. '{k' → logprob: -18.876928329467773
    8. '```' → logprob: -19.251928329467773
    9. '(k' → logprob: -20.126928329467773
    10. '=k' → logprob: -20.251928329467773

Token 486: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 487: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 488: ' Output' (ID: 18315)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.32552024722099304
    2. 'Game' → logprob: -1.8255202770233154
    3. 'Digit' → logprob: -2.9505202770233154
    4. 'Solution' → logprob: -3.8255202770233154
    5. ' Output' → logprob: -4.325520038604736
    6. 'Test' → logprob: -4.450520038604736
    7. ' Game' → logprob: -5.075520038604736
    8. 'Main' → logprob: -5.950520038604736
    9. ' Digit' → logprob: -5.950520038604736
    10. 'Solver' → logprob: -6.700520038604736

Token 489: 'Formatter' (ID: 22956)
  Prédit: 'Writer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -0.49120816588401794
    2. 'Printer' → logprob: -0.9912081956863403
    3. 'Handler' → logprob: -4.491208076477051
    4. 'Formatter' → logprob: -6.116208076477051
    5. 'Parser' → logprob: -6.366208076477051
    6. 'ter' → logprob: -6.991208076477051
    7. 'Publisher' → logprob: -7.491208076477051
    8. 'Renderer' → logprob: -9.11620807647705
    9. 'Processor' → logprob: -9.11620807647705
    10. 'Builder' → logprob: -10.49120807647705

Token 490: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021968833170831203
    2. ':
' → logprob: -6.127196788787842
    3. ':def' → logprob: -11.752197265625
    4. ':

' → logprob: -13.127197265625
    5. '<|end|>' → logprob: -14.502197265625
    6. '):' → logprob: -15.377197265625
    7. 'def' → logprob: -15.627197265625
    8. ' :' → logprob: -15.752197265625
    9. ':**' → logprob: -15.752197265625
    10. '():' → logprob: -16.002197265625

Token 491: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002009887248277664
    2. 'def' → logprob: -6.502009868621826
    3. ' def' → logprob: -7.877009868621826
    4. 'class' → logprob: -9.127010345458984
    5. ':' → logprob: -12.252010345458984
    6. ' class' → logprob: -12.377010345458984
    7. '```' → logprob: -12.502010345458984
    8. '[' → logprob: -13.877010345458984
    9. ')' → logprob: -14.377010345458984
    10. 'staticmethod' → logprob: -14.627010345458984

Token 492: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2616333067417145
    2. '@' (adapté à ' @') → logprob: -1.511633276939392
    3. '   ' → logprob: -5.011633396148682
    4. ' def' → logprob: -6.011633396148682
    5. ' @' → logprob: -7.511633396148682
    6. 'class' → logprob: -14.511632919311523
    7. ' ' → logprob: -17.136632919311523
    8. '	def' → logprob: -17.136632919311523
    9. 'staticmethod' → logprob: -17.261632919311523
    10. '```' → logprob: -18.136632919311523

Token 493: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -1.0280383548888494e-06
    2. 'dat' → logprob: -14.000000953674316
    3. 'static' → logprob: -16.625001907348633
    4. 'classmethod' → logprob: -17.750001907348633
    5. '
' → logprob: -22.250001907348633
    6. 'property' → logprob: -22.625001907348633
    7. 'stat' → logprob: -22.750001907348633
    8. 'Static' → logprob: -22.875001907348633
    9. 'st' → logprob: -23.875001907348633
    10. ' static' → logprob: -24.000001907348633

Token 494: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5917206406593323
    2. '   ' → logprob: -0.9667206406593323
    3. '
' → logprob: -2.8417205810546875
    4. ' def' → logprob: -4.8417205810546875
    5. '(' → logprob: -11.091720581054688
    6. '  ' → logprob: -11.466720581054688
    7. '	def' → logprob: -11.591720581054688
    8. ' ' → logprob: -11.716720581054688
    9. '(def' → logprob: -11.841720581054688
    10. '()
' → logprob: -12.216720581054688

Token 495: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002676368225365877
    2. ' def' → logprob: -6.502676486968994
    3. '   ' → logprob: -6.752676486968994
    4. '
' → logprob: -12.127676010131836
    5. '	def' → logprob: -15.752676010131836
    6. ' ' → logprob: -17.877676010131836
    7. '  ' → logprob: -18.752676010131836
    8. '_def' → logprob: -18.877676010131836
    9. '```' → logprob: -18.877676010131836
    10. 'class' → logprob: -19.127676010131836

Token 496: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00010044389637187123
    2. '
' → logprob: -9.250100135803223
    3. ' def' → logprob: -12.500100135803223
    4. '    
' → logprob: -15.250100135803223
    5. 'staticmethod' → logprob: -16.50010108947754
    6. '   ' → logprob: -16.62510108947754
    7. '  
' → logprob: -18.00010108947754
    8. '```' → logprob: -18.25010108947754
    9. 'classmethod' → logprob: -18.37510108947754
    10. 'class' → logprob: -18.87510108947754

Token 497: ' format' (ID: 6011)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.00020401719666551799
    2. 'print' → logprob: -8.500204086303711
    3. ' format' → logprob: -15.750204086303711
    4. 'display' → logprob: -16.00020408630371
    5. 'write' → logprob: -16.00020408630371
    6. 'output' → logprob: -16.62520408630371
    7. 'to' → logprob: -18.37520408630371
    8. 'string' → logprob: -19.25020408630371
    9. 'Format' → logprob: -19.25020408630371
    10. 'formatted' → logprob: -19.25020408630371

Token 498: '_digit' (ID: 119592)
  Prédit: '(sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sequence' → logprob: -0.10017646849155426
    2. '(d' → logprob: -2.8501765727996826
    3. '(D' → logprob: -4.4751763343811035
    4. '(result' → logprob: -4.4751763343811035
    5. '(' → logprob: -4.8501763343811035
    6. '(number' → logprob: -5.4751763343811035
    7. '(output' → logprob: -6.9751763343811035
    8. '(def' → logprob: -7.8501763343811035
    9. '(solution' → logprob: -8.600176811218262
    10. ' (' → logprob: -8.725176811218262

Token 499: '_sequence' (ID: 55606)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.3141547739505768
    2. '_sequence' → logprob: -1.3141547441482544
    3. 'Sequence' → logprob: -7.439154624938965
    4. 's' → logprob: -8.314154624938965
    5. ' sequence' → logprob: -10.564154624938965
    6. 'number' → logprob: -11.439154624938965
    7. '_sequences' → logprob: -12.439154624938965
    8. '(sequence' → logprob: -12.564154624938965
    9. '```' → logprob: -12.814154624938965
    10. '
' → logprob: -12.939154624938965

Token 500: '(sequence' (ID: 129991)
  Prédit: '(sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sequence' → logprob: -0.003705419832840562
    2. '(d' → logprob: -5.7537055015563965
    3. '(seq' → logprob: -7.6287055015563965
    4. '(' → logprob: -10.878705024719238
    5. '(ds' → logprob: -11.378705024719238
    6. ' (' → logprob: -12.503705024719238
    7. '(se' → logprob: -12.628705024719238
    8. '(number' → logprob: -13.503705024719238
    9. '(s' → logprob: -14.753705024719238
    10. '(sd' → logprob: -15.003705024719238

Token 501: ':' (ID: 25)
  Prédit: '(sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sequence' → logprob: -0.6015859246253967
    2. ':' → logprob: -0.9765859246253967
    3. ')' → logprob: -2.601585865020752
    4. 'sequence' → logprob: -6.976585865020752
    5. '(seq' → logprob: -9.35158634185791
    6. '```' → logprob: -9.60158634185791
    7. '(' → logprob: -9.72658634185791
    8. '(se' → logprob: -10.10158634185791
    9. '):' → logprob: -10.22658634185791
    10. '   ' → logprob: -10.60158634185791

Token 502: ' Digit' (ID: 91174)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -0.06939917802810669
    2. 'sequence' → logprob: -2.819399118423462
    3. ')' → logprob: -5.569399356842041
    4. ' Digit' → logprob: -6.569399356842041
    5. ' sequence' → logprob: -6.819399356842041
    6. 'digit' → logprob: -7.069399356842041
    7. 'str' → logprob: -8.944398880004883
    8. '(sequence' → logprob: -10.944398880004883
    9. 'Digits' → logprob: -11.069398880004883
    10. 'Digital' → logprob: -11.194398880004883

Token 503: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -4.320199877838604e-07
    2. '_sequence' → logprob: -16.0
    3. 'sequence' → logprob: -16.125
    4. 'Sequ' → logprob: -17.25
    5. '_' → logprob: -17.625
    6. '   ' → logprob: -18.125
    7. '.Sequence' → logprob: -18.5
    8. '       ' → logprob: -18.625
    9. ' Sequence' → logprob: -18.625
    10. '           ' → logprob: -18.875

Token 504: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4974866644479334e-05
    2. '(sequence' → logprob: -11.625015258789062
    3. 'sequence' → logprob: -13.125015258789062
    4. ' )' → logprob: -13.375015258789062
    5. '):' → logprob: -13.750015258789062
    6. '):
' → logprob: -14.500015258789062
    7. '   ' → logprob: -14.875015258789062
    8. ',' → logprob: -16.250015258789062
    9. ' ' → logprob: -16.500015258789062
    10. ')->' → logprob: -16.750015258789062

Token 505: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.06591019779443741
    2. ' ->' → logprob: -3.0659101009368896
    3. ')' → logprob: -4.190910339355469
    4. '   ' → logprob: -7.565910339355469
    5. '()->' → logprob: -7.565910339355469
    6. ':' → logprob: -7.940910339355469
    7. ')->' → logprob: -8.315910339355469
    8. '()' → logprob: -8.690910339355469
    9. ':
' → logprob: -9.315910339355469
    10. '       ' → logprob: -9.690910339355469

Token 506: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.001929228543303907
    2. ' str' → logprob: -6.25192928314209
    3. '(str' → logprob: -15.12692928314209
    4. '[str' → logprob: -15.25192928314209
    5. 'int' → logprob: -17.001928329467773
    6. 'string' → logprob: -17.876928329467773
    7. ' ' → logprob: -18.001928329467773
    8. '   ' → logprob: -18.001928329467773
    9. 's' → logprob: -18.126928329467773
    10. '=str' → logprob: -18.376928329467773

Token 507: ':
' (ID: 734)
  Prédit: '(sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sequence' → logprob: -1.0022156238555908
    2. '(' → logprob: -1.7522156238555908
    3. ':' → logprob: -1.7522156238555908
    4. 'return' → logprob: -2.127215623855591
    5. ':return' → logprob: -2.377215623855591
    6. ':
' → logprob: -3.752215623855591
    7. '(return' → logprob: -4.252215385437012
    8. '():' → logprob: -4.877215385437012
    9. '       ' → logprob: -5.252215385437012
    10. '   ' → logprob: -5.377215385437012

Token 508: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.48631206154823303
    2. '       ' → logprob: -0.9863120317459106
    3. ' return' → logprob: -4.986311912536621
    4. '   ' → logprob: -5.236311912536621
    5. '```' → logprob: -11.861311912536621
    6. '{return' → logprob: -14.236311912536621
    7. '	return' → logprob: -14.361311912536621
    8. '      ' → logprob: -15.236311912536621
    9. '   ' → logprob: -15.486311912536621
    10. '
' → logprob: -15.736311912536621

Token 509: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01207384280860424
    2. 'str' → logprob: -4.512073993682861
    3. '''.' → logprob: -7.762073993682861
    4. 'repr' → logprob: -8.012073516845703
    5. ' return' → logprob: -8.262073516845703
    6. ' str' → logprob: -11.887073516845703
    7. '   ' → logprob: -13.887073516845703
    8. ' repr' → logprob: -14.012073516845703
    9. ' ''.' → logprob: -14.262073516845703
    10. ''' → logprob: -14.762073516845703

Token 510: ' ''.' (ID: 105941)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.6349329948425293
    2. 'repr' → logprob: -0.8849329948425293
    3. '''.' → logprob: -2.8849329948425293
    4. ' repr' → logprob: -7.009932994842529
    5. ' str' → logprob: -8.259933471679688
    6. ''' → logprob: -9.009933471679688
    7. ' ''.' → logprob: -9.134933471679688
    8. 're' → logprob: -11.259933471679688
    9. '''' → logprob: -11.634933471679688
    10. '(str' → logprob: -12.509933471679688

Token 511: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -6.110668618930504e-05
    2. '''.' → logprob: -10.25006103515625
    3. '.join' → logprob: -11.50006103515625
    4. ''.' → logprob: -12.00006103515625
    5. 'sequence' → logprob: -12.00006103515625
    6. 'seq' → logprob: -13.25006103515625
    7. 'format' → logprob: -14.37506103515625
    8. 'repr' → logprob: -15.37506103515625
    9. ' join' → logprob: -15.50006103515625
    10. '{' → logprob: -15.75006103515625

Token 512: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.005433200858533382
    2. 'str' → logprob: -5.255433082580566
    3. '[str' → logprob: -9.005433082580566
    4. 'map' → logprob: -10.005433082580566
    5. '(map' → logprob: -10.380433082580566
    6. '(' → logprob: -15.755433082580566
    7. ' str' → logprob: -16.505434036254883
    8. '=str' → logprob: -16.880434036254883
    9. '	str' → logprob: -17.505434036254883
    10. '([' → logprob: -17.505434036254883

Token 513: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0008910943870432675
    2. 'd' → logprob: -7.250891208648682
    3. 'digit' → logprob: -8.625890731811523
    4. '(' → logprob: -13.750890731811523
    5. '(token' → logprob: -15.750890731811523
    6. ')d' → logprob: -16.125890731811523
    7. '(_)' → logprob: -16.375890731811523
    8. '(x' → logprob: -16.500890731811523
    9. '	d' → logprob: -17.000890731811523
    10. ' d' → logprob: -18.000890731811523

Token 514: ')' (ID: 8)
  Prédit: 'igit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igit' → logprob: -0.36289384961128235
    2. '(d' → logprob: -1.23789381980896
    3. ')' → logprob: -4.362894058227539
    4. '(i' → logprob: -7.362894058227539
    5. ')d' → logprob: -8.112894058227539
    6. '(' → logprob: -8.987894058227539
    7. 'd' → logprob: -9.362894058227539
    8. 'digit' → logprob: -9.362894058227539
    9. 'ig' → logprob: -9.862894058227539
    10. '}' → logprob: -9.862894058227539

Token 515: ' for' (ID: 395)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0119720697402954
    2. '(d' → logprob: -1.1369720697402954
    3. 'digit' → logprob: -1.8869720697402954
    4. 'igit' → logprob: -2.011971950531006
    5. ')' → logprob: -4.261971950531006
    6. 'for' → logprob: -4.511971950531006
    7. ' for' → logprob: -5.636971950531006
    8. 'in' → logprob: -7.511971950531006
    9. ')d' → logprob: -7.886971950531006
    10. ' in' → logprob: -7.886971950531006

Token 516: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.016080709174275398
    2. ' d' → logprob: -4.141080856323242
    3. 'sequence' → logprob: -10.891080856323242
    4. ' sequence' → logprob: -10.891080856323242
    5. ' in' → logprob: -12.016080856323242
    6. 'digit' → logprob: -14.016080856323242
    7. '_d' → logprob: -14.141080856323242
    8. '	d' → logprob: -14.266080856323242
    9. ' ' → logprob: -15.516080856323242
    10. 'in' → logprob: -15.891080856323242

Token 517: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3145488500595093
    2. 'in' → logprob: -1.3145488500595093
    3. 'd' → logprob: -6.689548969268799
    4. 'sequence' → logprob: -11.68954849243164
    5. ' d' → logprob: -11.68954849243164
    6. '_d' → logprob: -11.81454849243164
    7. 's' → logprob: -12.06454849243164
    8. ' ' → logprob: -12.81454849243164
    9. ')' → logprob: -13.06454849243164
    10. '_' → logprob: -13.18954849243164

Token 518: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.0009120595059357584
    2. ' sequence' → logprob: -7.000912189483643
    3. '(sequence' → logprob: -14.875911712646484
    4. '
' → logprob: -16.375911712646484
    5. '   ' → logprob: -17.875911712646484
    6. ' ' → logprob: -19.375911712646484
    7. '  ' → logprob: -20.000911712646484
    8. ')' → logprob: -20.000911712646484
    9. 'series' → logprob: -20.500911712646484
    10. '.sequence' → logprob: -20.625911712646484

Token 519: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. '())' → logprob: -13.00000286102295
    3. ')
' → logprob: -15.37500286102295
    4. '))' → logprob: -16.000003814697266
    5. ' )' → logprob: -16.000003814697266
    6. '()' → logprob: -16.500003814697266
    7. ')}' → logprob: -16.625003814697266
    8. '[])' → logprob: -17.500003814697266
    9. ')`' → logprob: -18.125003814697266
    10. '}' → logprob: -18.500003814697266

Token 520: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1856975555419922
    2. 'if' → logprob: -2.310697555541992
    3. '#' → logprob: -3.310697555541992
    4. '<|end|>' → logprob: -3.935697555541992
    5. 'class' → logprob: -5.060697555541992
    6. 'import' → logprob: -5.435697555541992
    7. '```' → logprob: -5.685697555541992
    8. ' if' → logprob: -10.310697555541992
    9. '<|end|>' → logprob: -10.310697555541992
    10. '#!/' → logprob: -10.560697555541992

Token 521: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.000913370808120817
    2. 'main' → logprob: -7.000913143157959
    3. ' run' → logprob: -13.250913619995117
    4. ' solve' → logprob: -16.250913619995117
    5. '	main' → logprob: -18.250913619995117
    6. ' play' → logprob: -18.625913619995117
    7. ' solution' → logprob: -19.000913619995117
    8. 'run' → logprob: -19.375913619995117
    9. 'solve' → logprob: -21.125913619995117
    10. '_main' → logprob: -21.500913619995117

Token 522: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.2233183042553719e-05
    2. ' ():' → logprob: -11.875012397766113
    3. '():
' → logprob: -12.875012397766113
    4. '()' → logprob: -12.875012397766113
    5. '(' → logprob: -17.375011444091797
    6. '()>' → logprob: -18.375011444091797
    7. '_' → logprob: -18.625011444091797
    8. '():
' → logprob: -18.750011444091797
    9. '().' → logprob: -18.750011444091797
    10. ':' → logprob: -19.375011444091797

Token 523: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1165308728814125
    2. ' input' → logprob: -2.4915308952331543
    3. 'input' → logprob: -3.8665308952331543
    4. ' import' → logprob: -5.616530895233154
    5. 'import' → logprob: -6.241530895233154
    6. ' parser' → logprob: -7.366530895233154
    7. 'parser' → logprob: -10.866530418395996
    8. '   ' → logprob: -11.241530418395996
    9. '_input' → logprob: -11.866530418395996
    10. ' from' → logprob: -12.366530418395996

Token 524: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.7265349626541138
    2. 'input' → logprob: -0.7265349626541138
    3. ' input' → logprob: -4.226534843444824
    4. ' import' → logprob: -4.351534843444824
    5. 'parser' → logprob: -5.601534843444824
    6. '   ' → logprob: -6.601534843444824
    7. ' parser' → logprob: -8.351534843444824
    8. 'from' → logprob: -10.976534843444824
    9. 'parse' → logprob: -11.601534843444824
    10. 'def' → logprob: -11.601534843444824

Token 525: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.47408607602119446
    2. 'sys' → logprob: -0.9740860462188721
    3. '=sys' → logprob: -11.974085807800293
    4. '	sys' → logprob: -12.974085807800293
    5. '(sys' → logprob: -15.349085807800293
    6. '_sys' → logprob: -16.09908676147461
    7. '```' → logprob: -16.97408676147461
    8. '.sys' → logprob: -17.72408676147461
    9. 'built' → logprob: -18.59908676147461
    10. 'io' → logprob: -18.84908676147461

Token 526: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38053831458091736
    2. 'input' → logprob: -1.7555383443832397
    3. ' input' → logprob: -2.13053822517395
    4. '
' → logprob: -3.88053822517395
    5. '    
' → logprob: -5.630538463592529
    6. '_input' → logprob: -8.255537986755371
    7. '	input' → logprob: -9.255537986755371
    8. ' lines' → logprob: -9.255537986755371
    9. '```' → logprob: -10.130537986755371
    10. ' readline' → logprob: -10.255537986755371

Token 527: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1193133071064949
    2. 'input' → logprob: -2.6193132400512695
    3. ' input' → logprob: -3.2443132400512695
    4. '
' → logprob: -8.24431324005127
    5. ' lines' → logprob: -9.11931324005127
    6. '_input' → logprob: -9.36931324005127
    7. '    
' → logprob: -9.49431324005127
    8. 'def' → logprob: -10.99431324005127
    9. '	input' → logprob: -11.36931324005127
    10. '   ' → logprob: -11.36931324005127

Token 528: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.4823647439479828
    2. ' input' → logprob: -0.9823647737503052
    3. '   ' → logprob: -4.857364654541016
    4. ' lines' → logprob: -8.232364654541016
    5. '_input' → logprob: -9.357364654541016
    6. 'lines' → logprob: -10.732364654541016
    7. 'def' → logprob: -11.107364654541016
    8. 'parser' → logprob: -11.482364654541016
    9. ' parser' → logprob: -11.607364654541016
    10. '	input' → logprob: -11.607364654541016

Token 529: '_lines' (ID: 42980)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.5322441458702087
    2. '_supplier' → logprob: -1.7822442054748535
    3. '()' → logprob: -2.5322442054748535
    4. '_lines' → logprob: -2.6572442054748535
    5. ' =' → logprob: -3.0322442054748535
    6. '_' → logprob: -3.7822442054748535
    7. '_data' → logprob: -4.2822442054748535
    8. '=' → logprob: -5.1572442054748535
    9. '_func' → logprob: -6.7822442054748535
    10. '_=' → logprob: -7.1572442054748535

Token 530: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2015596181154251
    2. '=' → logprob: -1.7015596628189087
    3. '=sys' → logprob: -8.951560020446777
    4. '_iter' → logprob: -11.951560020446777
    5. '=[]' → logprob: -12.451560020446777
    6. '=input' → logprob: -12.826560020446777
    7. '_iterator' → logprob: -13.826560020446777
    8. '=[]
' → logprob: -14.326560020446777
    9. '_lines' → logprob: -14.826560020446777
    10. '=_' → logprob: -14.951560020446777

Token 531: ' iter' (ID: 10621)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.10098723322153091
    2. 'iter' → logprob: -2.350987195968628
    3. ' iter' → logprob: -7.600987434387207
    4. ' sys' → logprob: -8.225987434387207
    5. '(sys' → logprob: -11.475987434387207
    6. '(iter' → logprob: -14.225987434387207
    7. '[' → logprob: -14.725987434387207
    8. 'list' → logprob: -15.100987434387207
    9. '=sys' → logprob: -15.350987434387207
    10. '	sys' → logprob: -15.600987434387207

Token 532: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -2.1008713702030946e-06
    2. '(input' → logprob: -13.875001907348633
    3. '=sys' → logprob: -14.375001907348633
    4. '(' → logprob: -15.500001907348633
    5. 'sys' → logprob: -16.375001907348633
    6. '	sys' → logprob: -17.375001907348633
    7. ' sys' → logprob: -17.500001907348633
    8. '([
' → logprob: -17.500001907348633
    9. '(system' → logprob: -17.750001907348633
    10. '(Sys' → logprob: -17.875001907348633

Token 533: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -3.292907877039397e-06
    2. '.argv' → logprob: -13.00000286102295
    3. '.' → logprob: -14.12500286102295
    4. 'stdin' → logprob: -16.250003814697266
    5. '.std' → logprob: -16.875003814697266
    6. '.stdout' → logprob: -17.125003814697266
    7. ' .' → logprob: -19.625003814697266
    8. '._' → logprob: -19.875003814697266
    9. '.__' → logprob: -20.000003814697266
    10. '.\' → logprob: -20.375003814697266

Token 534: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.002806894714012742
    2. ')' → logprob: -6.252806663513184
    3. ')
' → logprob: -7.127806663513184
    4. '.readlines' → logprob: -9.502806663513184
    5. '.__' → logprob: -15.502806663513184
    6. '.' → logprob: -15.627806663513184
    7. ')

' → logprob: -15.752806663513184
    8. ' readline' → logprob: -16.2528076171875
    9. '.read' → logprob: -17.0028076171875
    10. '
' → logprob: -17.2528076171875

Token 535: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009363600052893162
    2. '())' → logprob: -5.384363651275635
    3. ')
' → logprob: -6.134363651275635
    4. ',' → logprob: -6.134363651275635
    5. ')

' → logprob: -8.884363174438477
    6. '()' → logprob: -8.884363174438477
    7. ',)' → logprob: -10.259363174438477
    8. '())
' → logprob: -10.509363174438477
    9. ' )' → logprob: -11.009363174438477
    10. '
' → logprob: -11.634363174438477

Token 536: ' '')
' (ID: 53215)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0006357124075293541
    2. '''' → logprob: -7.750635623931885
    3. '"' → logprob: -9.250636100769043
    4. ''\' → logprob: -9.250636100769043
    5. ' '')' → logprob: -11.625636100769043
    6. '''
' → logprob: -12.625636100769043
    7. '""' → logprob: -15.375636100769043
    8. ')' → logprob: -15.750636100769043
    9. ''',' → logprob: -15.875636100769043
    10. ' '')
' → logprob: -16.750635147094727

Token 537: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011119269765913486
    2. '    
' → logprob: -4.761119365692139
    3. '
' → logprob: -6.011119365692139
    4. 'input' → logprob: -11.13611888885498
    5. ' 
' → logprob: -12.38611888885498
    6. '    ' → logprob: -12.38611888885498
    7. '  
' → logprob: -12.51111888885498
    8. '        
' → logprob: -12.63611888885498
    9. '```' → logprob: -12.88611888885498
    10. '       ' → logprob: -13.26111888885498

Token 538: ' parser' (ID: 14216)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08674316108226776
    2. 'parser' (adapté à ' parser') → logprob: -3.461743116378784
    3. ' parser' → logprob: -3.711743116378784
    4. 'input' → logprob: -3.961743116378784
    5. ' input' → logprob: -5.211743354797363
    6. 'rem' → logprob: -6.211743354797363
    7. 'def' → logprob: -8.961743354797363
    8. ' def' → logprob: -9.336743354797363
    9. 'line' → logprob: -9.586743354797363
    10. ' lines' → logprob: -9.836743354797363

Token 539: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12698155641555786
    2. '=' → logprob: -2.126981496810913
    3. '_' → logprob: -11.126981735229492
    4. '_parser' → logprob: -11.376981735229492
    5. ' ' → logprob: -11.501981735229492
    6. '_input' → logprob: -12.626981735229492
    7. '_=' → logprob: -12.626981735229492
    8. '()' → logprob: -12.876981735229492
    9. '=input' → logprob: -13.376981735229492
    10. '  ' → logprob: -13.501981735229492

Token 540: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.004078401252627373
    2. ' Input' → logprob: -5.504078388214111
    3. '	Input' → logprob: -20.379077911376953
    4. '_input' → logprob: -21.254077911376953
    5. 'input' → logprob: -21.504077911376953
    6. '_Input' → logprob: -21.629077911376953
    7. '<Input' → logprob: -22.129077911376953
    8. '\Input' → logprob: -23.254077911376953
    9. ' input' → logprob: -23.504077911376953
    10. 'Output' → logprob: -23.879077911376953

Token 541: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -1.9361264946837764e-07
    2. '_parser' → logprob: -17.375
    3. 'parser' → logprob: -17.875
    4. ' Parser' → logprob: -18.25
    5. 'Processor' → logprob: -18.625
    6. 'Parse' → logprob: -18.625
    7. 'Parsed' → logprob: -19.125
    8. '=' → logprob: -20.25
    9. 'Handler' → logprob: -20.25
    10. 'Reader' → logprob: -20.375

Token 542: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.03185208886861801
    2. '(input' → logprob: -3.7818520069122314
    3. 'lambda' → logprob: -5.0318522453308105
    4. '(next' → logprob: -7.0318522453308105
    5. 'input' → logprob: -7.2818522453308105
    6. '(' → logprob: -8.156851768493652
    7. 'next' → logprob: -8.906851768493652
    8. '(sys' → logprob: -11.156851768493652
    9. '   ' → logprob: -11.281851768493652
    10. ' (' → logprob: -12.031851768493652

Token 543: ':' (ID: 25)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.10094467550516129
    2. ' next' → logprob: -2.350944757461548
    3. ':' → logprob: -7.225944519042969
    4. 'line' → logprob: -12.850944519042969
    5. '_next' → logprob: -12.975944519042969
    6. '(next' → logprob: -12.975944519042969
    7. 'input' → logprob: -13.225944519042969
    8. '	next' → logprob: -14.850944519042969
    9. '[next' → logprob: -15.100944519042969
    10. '.next' → logprob: -15.350944519042969

Token 544: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0015023599844425917
    2. ' next' → logprob: -6.501502513885498
    3. '(next' → logprob: -16.876502990722656
    4. '	next' → logprob: -18.626502990722656
    5. '[next' → logprob: -18.876502990722656
    6. '.next' → logprob: -19.876502990722656
    7. 'input' → logprob: -19.876502990722656
    8. '
' → logprob: -20.126502990722656
    9. ',next' → logprob: -22.126502990722656
    10. '_next' → logprob: -22.251502990722656

Token 545: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.306760805164231e-05
    2. 'input' → logprob: -11.25001335144043
    3. '=input' → logprob: -18.00001335144043
    4. ' input' → logprob: -19.62501335144043
    5. '(' → logprob: -19.87501335144043
    6. '(
' → logprob: -20.75001335144043
    7. ',input' → logprob: -20.87501335144043
    8. '(iter' → logprob: -21.37501335144043
    9. '<input' → logprob: -22.00001335144043
    10. '/input' → logprob: -22.50001335144043

Token 546: '_lines' (ID: 42980)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.033028267323970795
    2. 'input' → logprob: -3.5330283641815186
    3. 'lines' → logprob: -5.7830281257629395
    4. '=input' → logprob: -9.158028602600098
    5. '_lines' → logprob: -9.658028602600098
    6. 'line' → logprob: -11.408028602600098
    7. 'Lines' → logprob: -12.408028602600098
    8. ',input' → logprob: -12.908028602600098
    9. ' input' → logprob: -13.158028602600098
    10. '[input' → logprob: -13.533028602600098

Token 547: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06393349170684814
    2. ')' → logprob: -2.8139333724975586
    3. '))
' → logprob: -6.688933372497559
    4. '()))' → logprob: -7.563933372497559
    5. '())' → logprob: -9.438933372497559
    6. ').' → logprob: -9.438933372497559
    7. '()' → logprob: -11.313933372497559
    8. ')
' → logprob: -11.563933372497559
    9. '()))
' → logprob: -11.688933372497559
    10. '))

' → logprob: -11.938933372497559

Token 548: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004402055055834353
    2. '
' → logprob: -8.12544059753418
    3. 'context' → logprob: -9.37544059753418
    4. '    
' → logprob: -11.00044059753418
    5. ' context' → logprob: -11.00044059753418
    6. 'rem' → logprob: -11.12544059753418
    7. 'strategy' → logprob: -12.12544059753418
    8. ' strategy' → logprob: -12.62544059753418
    9. '   ' → logprob: -14.12544059753418
    10. 'game' → logprob: -14.37544059753418

Token 549: ' sequence' (ID: 16281)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07405878603458405
    2. 'context' → logprob: -2.949058771133423
    3. 'rem' → logprob: -4.824059009552002
    4. 'strategy' → logprob: -5.199059009552002
    5. 'game' → logprob: -5.574059009552002
    6. ' context' → logprob: -7.199059009552002
    7. ' strategy' → logprob: -7.824059009552002
    8. '
' → logprob: -8.449058532714844
    9. '    
' → logprob: -8.824058532714844
    10. ' game' → logprob: -10.199058532714844

Token 550: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.9160102712921798e-05
    2. ',k' → logprob: -10.750029563903809
    3. ' ,' → logprob: -11.875029563903809
    4. '=' → logprob: -15.250029563903809
    5. ' =' → logprob: -16.375028610229492
    6. '‌,' → logprob: -16.500028610229492
    7. ',result' → logprob: -17.125028610229492
    8. ',K' → logprob: -17.250028610229492
    9. ',
' → logprob: -17.375028610229492
    10. ',new' → logprob: -17.500028610229492

Token 551: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.47407791018486023
    2. ' k' → logprob: -0.9740779399871826
    3. '    ' → logprob: -14.599078178405762
    4. '	k' → logprob: -15.474078178405762
    5. '   ' → logprob: -16.224077224731445
    6. ' ' → logprob: -16.849077224731445
    7. '_k' → logprob: -18.224077224731445
    8. 'K' → logprob: -18.474077224731445
    9. '0' → logprob: -18.974077224731445
    10. '  ' → logprob: -18.974077224731445

Token 552: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014133334159851
    2. ' =' → logprob: -1.7014133930206299
    3. '   ' → logprob: -17.701414108276367
    4. ')' → logprob: -18.076414108276367
    5. '=

' → logprob: -18.076414108276367
    6. ' =
' → logprob: -18.576414108276367
    7. '=
' → logprob: -19.201414108276367
    8. ',' → logprob: -20.326414108276367
    9. ' ' → logprob: -20.326414108276367
    10. '.' → logprob: -20.576414108276367

Token 553: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.0380416102707386
    2. ' parser' → logprob: -3.288041591644287
    3. 'parse' → logprob: -17.038042068481445
    4. '	parser' → logprob: -17.913042068481445
    5. 'Parser' → logprob: -18.413042068481445
    6. '(parser' → logprob: -18.788042068481445
    7. 'parsed' → logprob: -19.038042068481445
    8. 'par' → logprob: -19.788042068481445
    9. '_parser' → logprob: -20.038042068481445
    10. '.parser' → logprob: -21.163042068481445

Token 554: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -1.688212614681106e-05
    2. 'parse' → logprob: -11.375017166137695
    3. '.' → logprob: -12.250017166137695
    4. ' .' → logprob: -14.750017166137695
    5. '=parse' → logprob: -15.875017166137695
    6. '   ' → logprob: -17.250017166137695
    7. '_parse' → logprob: -18.500017166137695
    8. '().' → logprob: -19.375017166137695
    9. '._' → logprob: -19.625017166137695
    10. '	parse' → logprob: -19.625017166137695

Token 555: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03812514618039131
    2. '
' → logprob: -3.2881250381469727
    3. '    
' → logprob: -9.538125038146973
    4. '
' → logprob: -12.413125038146973
    5. 'strategy' → logprob: -12.788125038146973
    6. 'context' → logprob: -13.163125038146973
    7. ' strategy' → logprob: -13.413125038146973
    8. 'rem' → logprob: -15.163125038146973
    9. ' 
' → logprob: -15.288125038146973
    10. '   ' → logprob: -15.788125038146973

Token 556: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0054148235358297825
    2. 'context' → logprob: -6.005414962768555
    3. 'strategy' → logprob: -6.380414962768555
    4. ' strategy' → logprob: -7.755414962768555
    5. ' context' → logprob: -8.130414962768555
    6. 'rem' → logprob: -8.255414962768555
    7. 'game' → logprob: -8.380414962768555
    8. ' game' → logprob: -11.005414962768555
    9. '
' → logprob: -12.755414962768555
    10. '    
' → logprob: -13.255414962768555

Token 557: ' context' (ID: 3814)
  Prédit: 'strategy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strategy' → logprob: -0.4546787738800049
    2. 'context' (adapté à ' context') → logprob: -1.5796787738800049
    3. 'rem' → logprob: -2.079678773880005
    4. '   ' → logprob: -3.829678773880005
    5. 'game' → logprob: -4.454678535461426
    6. ' strategy' → logprob: -7.454678535461426
    7. '    
' → logprob: -8.704678535461426
    8. 'strateg' → logprob: -9.579678535461426
    9. ' context' → logprob: -9.704678535461426
    10. '
' → logprob: -10.079678535461426

Token 558: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03440731391310692
    2. '=' → logprob: -3.409407377243042
    3. '.' → logprob: -7.784407138824463
    4. '_' → logprob: -8.159407615661621
    5. '_max' → logprob: -11.159407615661621
    6. ')' → logprob: -11.534407615661621
    7. ' ' → logprob: -11.659407615661621
    8. '._' → logprob: -12.034407615661621
    9. '_result' → logprob: -12.159407615661621
    10. '.get' → logprob: -12.534407615661621

Token 559: ' Digit' (ID: 91174)
  Prédit: ' Digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Digit' → logprob: -0.3132622241973877
    2. 'Digit' → logprob: -1.3132622241973877
    3. ' Digital' → logprob: -15.813261985778809
    4. ' digit' → logprob: -15.938261985778809
    5. 'Digital' → logprob: -16.063262939453125
    6. '   ' → logprob: -17.438262939453125
    7. ' Dig' → logprob: -17.938262939453125
    8. '_digit' → logprob: -18.438262939453125
    9. 'digit' → logprob: -18.563262939453125
    10. ' ' → logprob: -18.813262939453125

Token 560: 'Game' (ID: 6627)
  Prédit: 'Game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -2.45848218582978e-06
    2. 'Rem' → logprob: -13.25000286102295
    3. 'game' → logprob: -15.00000286102295
    4. 'Sequence' → logprob: -15.62500286102295
    5. ' game' → logprob: -17.625001907348633
    6. '_game' → logprob: -18.000001907348633
    7. ' Game' → logprob: -18.625001907348633
    8. '
' → logprob: -18.750001907348633
    9. 'rem' → logprob: -18.875001907348633
    10. 'Remove' → logprob: -19.125001907348633

Token 561: 'Context' (ID: 2522)
  Prédit: 'Context'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Context' → logprob: 0.0
    2. 'context' → logprob: -18.125
    3. '(Context' → logprob: -19.375
    4. 'Con' → logprob: -19.75
    5. '	Context' → logprob: -19.875
    6. '_context' → logprob: -20.125
    7. '_Context' → logprob: -20.125
    8. '"context' → logprob: -22.125
    9. '.Context' → logprob: -22.25
    10. '_CONTEXT' → logprob: -22.375

Token 562: '(G' (ID: 12449)
  Prédit: '(G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(G' → logprob: -0.006741896737366915
    2. 'Gre' → logprob: -5.006742000579834
    3. 'G' → logprob: -11.506741523742676
    4. '(' → logprob: -11.881741523742676
    5. ' Gre' → logprob: -12.006741523742676
    6. '(
' → logprob: -12.756741523742676
    7. '   ' → logprob: -14.881741523742676
    8. '(g' → logprob: -16.131742477416992
    9. '	G' → logprob: -16.881742477416992
    10. ' (' → logprob: -17.506742477416992

Token 563: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -5.796184723294573e-06
    2. 'reed' → logprob: -12.750005722045898
    3. 'Gre' → logprob: -13.750005722045898
    4. 'ready' → logprob: -14.125005722045898
    5. 'ree' → logprob: -15.000005722045898
    6. 'redd' → logprob: -15.750005722045898
    7. 'r' → logprob: -15.875005722045898
    8. 'gre' → logprob: -16.5000057220459
    9. '```' → logprob: -16.6250057220459
    10. 'Re' → logprob: -16.8750057220459

Token 564: 'edy' (ID: 12442)
  Prédit: 'edy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edy' → logprob: -1.9361264946837764e-07
    2. 'ed' → logprob: -15.625
    3. 'e' → logprob: -17.75
    4. 'dy' → logprob: -18.375
    5. 'y' → logprob: -18.625
    6. 'ady' → logprob: -20.75
    7. ' ed' → logprob: -21.375
    8. 'eddy' → logprob: -21.875
    9. 'ddy' → logprob: -22.0
    10. 'epy' → logprob: -22.0

Token 565: 'Digit' (ID: 46997)
  Prédit: 'Digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: 0.0
    2. 'digit' → logprob: -17.625
    3. 'Digital' → logprob: -18.125
    4. '_digit' → logprob: -18.25
    5. ' Digit' → logprob: -19.5
    6. '```' → logprob: -19.625
    7. '
' → logprob: -19.75
    8. ')' → logprob: -20.25
    9. 'Dig' → logprob: -20.375
    10. '-digit' → logprob: -20.375

Token 566: 'Rem' (ID: 6882)
  Prédit: 'Digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Digit' → logprob: -9.93710636976175e-05
    2. 'Rem' → logprob: -10.000099182128906
    3. 'igit' → logprob: -10.250099182128906
    4. 'rem' → logprob: -12.750099182128906
    5. 'em' → logprob: -13.000099182128906
    6. 'digit' → logprob: -13.000099182128906
    7. '_digit' → logprob: -13.125099182128906
    8. '-digit' → logprob: -13.250099182128906
    9. 'Dig' → logprob: -13.875099182128906
    10. 'er' → logprob: -14.000099182128906

Token 567: 'over' (ID: 2898)
  Prédit: 'over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -1.0280383548888494e-06
    2. 'ove' → logprob: -14.875000953674316
    3. 'overs' → logprob: -15.750000953674316
    4. 'o' → logprob: -15.750000953674316
    5. '(over' → logprob: -16.625001907348633
    6. 'ov' → logprob: -16.750001907348633
    7. 'Over' → logprob: -17.625001907348633
    8. ' over' → logprob: -17.875001907348633
    9. '_over' → logprob: -18.125001907348633
    10. '
' → logprob: -18.125001907348633

Token 568: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.16038629412651062
    2. '())
' → logprob: -1.910386323928833
    3. '()' → logprob: -9.160386085510254
    4. '())
' → logprob: -10.035386085510254
    5. '())

' → logprob: -11.910386085510254
    6. ')' → logprob: -12.160386085510254
    7. '()
' → logprob: -13.910386085510254
    8. ')
' → logprob: -16.28538703918457
    9. ' ())' → logprob: -16.91038703918457
    10. '(' → logprob: -17.16038703918457

Token 569: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34102383255958557
    2. 'result' → logprob: -1.7160238027572632
    3. ' result' → logprob: -2.2160239219665527
    4. 'max' → logprob: -9.341023445129395
    5. ' max' → logprob: -10.591023445129395
    6. '
' → logprob: -11.841023445129395
    7. 'output' → logprob: -13.216023445129395
    8. ' new' → logprob: -13.341023445129395
    9. '    
' → logprob: -13.341023445129395
    10. '```' → logprob: -13.341023445129395

Token 570: ' max' (ID: 2999)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.011333814822137356
    2. 'max' (adapté à ' max') → logprob: -4.51133394241333
    3. ' result' → logprob: -8.261333465576172
    4. ' max' → logprob: -11.261333465576172
    5. '   ' → logprob: -12.136333465576172
    6. 'removed' → logprob: -13.011333465576172
    7. 'new' → logprob: -13.386333465576172
    8. 'answer' → logprob: -13.386333465576172
    9. 'largest' → logprob: -13.761333465576172
    10. 'best' → logprob: -14.011333465576172

Token 571: '_point' (ID: 15466)
  Prédit: '_sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.4090878665447235
    2. '_point' → logprob: -1.409087896347046
    3. '_number' → logprob: -2.409087896347046
    4. '_seq' → logprob: -6.784087657928467
    5. '_num' → logprob: -8.409088134765625
    6. '_digit' → logprob: -9.534088134765625
    7. '_' → logprob: -11.034088134765625
    8. '_result' → logprob: -11.159088134765625
    9. '_points' → logprob: -11.284088134765625
    10. 'sequence' → logprob: -12.409088134765625

Token 572: '_sequence' (ID: 55606)
  Prédit: '_number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.0005680450703948736
    2. '_sequence' → logprob: -7.62556791305542
    3. 'number' → logprob: -9.500568389892578
    4. 'sequence' → logprob: -13.375568389892578
    5. '_num' → logprob: -13.375568389892578
    6. '_' → logprob: -14.000568389892578
    7. '=' → logprob: -14.625568389892578
    8. '   ' → logprob: -15.750568389892578
    9. '_numbers' → logprob: -15.875568389892578
    10. ' =' → logprob: -16.000568389892578

Token 573: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132617771625519
    2. '=' → logprob: -1.3132617473602295
    3. '=context' → logprob: -17.313261032104492
    4. ')' → logprob: -17.563261032104492
    5. '.' → logprob: -19.063261032104492
    6. 's' → logprob: -19.438261032104492
    7. ' ' → logprob: -19.563261032104492
    8. '   ' → logprob: -19.813261032104492
    9. ' ' → logprob: -19.938261032104492
    10. ':' → logprob: -19.938261032104492

Token 574: ' context' (ID: 3814)
  Prédit: ' context'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' context' → logprob: -0.2519291639328003
    2. 'context' → logprob: -1.5019291639328003
    3. '=context' → logprob: -16.751928329467773
    4. '(context' → logprob: -17.376928329467773
    5. '<context' → logprob: -17.501928329467773
    6. '_context' → logprob: -18.001928329467773
    7. '	context' → logprob: -18.251928329467773
    8. '"context' → logprob: -18.626928329467773
    9. '   ' → logprob: -19.001928329467773
    10. 'Context' → logprob: -19.126928329467773

Token 575: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0002919638354796916
    2. '.' → logprob: -8.25029182434082
    3. '   ' → logprob: -11.12529182434082
    4. 'get' → logprob: -11.62529182434082
    5. ' .' → logprob: -12.25029182434082
    6. '._' → logprob: -14.00029182434082
    7. '_get' → logprob: -14.25029182434082
    8. '       ' → logprob: -15.12529182434082
    9. '_.' → logprob: -16.12529182434082
    10. '  ' → logprob: -17.00029182434082

Token 576: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.00020354038861114532
    2. 'max' → logprob: -8.500203132629395
    3. '(max' → logprob: -18.62520408630371
    4. ' max' → logprob: -19.25020408630371
    5. '```' → logprob: -19.25020408630371
    6. '_' → logprob: -19.75020408630371
    7. 'Max' → logprob: -20.25020408630371
    8. '_min' → logprob: -20.50020408630371
    9. 's' → logprob: -20.50020408630371
    10. '_MAX' → logprob: -20.75020408630371

Token 577: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: 0.0
    2. 'point' → logprob: -17.375
    3. '_max' → logprob: -17.5
    4. '_' → logprob: -18.5
    5. '```' → logprob: -19.0
    6. 'max' → logprob: -20.0
    7. '_p' → logprob: -20.125
    8. '\' → logprob: -20.375
    9. '_number' → logprob: -20.375
    10. '_digit' → logprob: -20.375

Token 578: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -1.981667537620524e-06
    2. 'number' → logprob: -13.625001907348633
    3. '_sequence' → logprob: -14.250001907348633
    4. '```' → logprob: -17.500001907348633
    5. 'Number' → logprob: -19.250001907348633
    6. 'sequence' → logprob: -19.625001907348633
    7. '   ' → logprob: -20.000001907348633
    8. '_NUMBER' → logprob: -20.125001907348633
    9. '
' → logprob: -20.500001907348633
    10. ' number' → logprob: -21.000001907348633

Token 579: '(sequence' (ID: 129991)
  Prédit: '(sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sequence' → logprob: 0.0
    2. 'sequence' → logprob: -17.625
    3. ' (' → logprob: -18.125
    4. '(se' → logprob: -18.75
    5. '(' → logprob: -19.25
    6. '(sentence' → logprob: -19.625
    7. '(seq' → logprob: -21.375
    8. '(
' → logprob: -21.375
    9. '```' → logprob: -21.375
    10. ' sequence' → logprob: -21.875

Token 580: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4868770196917467e-05
    2. ',k' → logprob: -10.625024795532227
    3. ' ,' → logprob: -14.625024795532227
    4. ',
' → logprob: -17.000024795532227
    5. ')' → logprob: -19.750024795532227
    6. '‌,' → logprob: -19.875024795532227
    7. '   ' → logprob: -20.125024795532227
    8. ',K' → logprob: -20.250024795532227
    9. ',n' → logprob: -20.625024795532227
    10. '
' → logprob: -21.250024795532227

Token 581: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00020354038861114532
    2. ' k' → logprob: -8.500203132629395
    3. '	k' → logprob: -20.87520408630371
    4. '   ' → logprob: -21.12520408630371
    5. '
' → logprob: -21.87520408630371
    6. '{k' → logprob: -22.75020408630371
    7. ')' → logprob: -23.00020408630371
    8. '=k' → logprob: -23.25020408630371
    9. '```' → logprob: -23.25020408630371
    10. '_k' → logprob: -24.00020408630371

Token 582: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008616461418569088
    2. ')
' → logprob: -4.7586164474487305
    3. ')
' → logprob: -13.75861644744873
    4. '   ' → logprob: -14.25861644744873
    5. ' )' → logprob: -15.88361644744873
    6. ')

' → logprob: -16.258617401123047
    7. ').' → logprob: -17.883617401123047
    8. ')`' → logprob: -18.633617401123047
    9. '),' → logprob: -18.758617401123047
    10. '))' → logprob: -19.008617401123047

Token 583: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024801772087812424
    2. 'print' → logprob: -6.0024800300598145
    3. '
' → logprob: -12.877480506896973
    4. ' print' → logprob: -13.252480506896973
    5. '```' → logprob: -15.877480506896973
    6. '    
' → logprob: -18.252479553222656
    7. '
' → logprob: -19.252479553222656
    8. '       ' → logprob: -19.377479553222656
    9. '   ' → logprob: -20.252479553222656
    10. '	print' → logprob: -20.377479553222656

Token 584: ' output' (ID: 4733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.127333340875339e-06
    2. '   ' → logprob: -12.500003814697266
    3. ' print' → logprob: -14.750003814697266
    4. '
' → logprob: -19.125003814697266
    5. '```' → logprob: -21.125003814697266
    6. 'output' (adapté à ' output') → logprob: -21.875003814697266
    7. '    
' → logprob: -22.000003814697266
    8. 'result' → logprob: -22.125003814697266
    9. 'import' → logprob: -23.250003814697266
    10. '	print' → logprob: -23.625003814697266

Token 585: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.49784260988235474
    2. '=' → logprob: -1.12284255027771
    3. '_str' → logprob: -3.49784255027771
    4. '_string' → logprob: -3.99784255027771
    5. '_line' → logprob: -4.622842788696289
    6. '_' → logprob: -5.497842788696289
    7. 'print' → logprob: -6.247842788696289
    8. '_sequence' → logprob: -6.747842788696289
    9. 'string' → logprob: -8.372842788696289
    10. '_text' → logprob: -8.497842788696289

Token 586: ' Output' (ID: 18315)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.0001234428636962548
    2. ' Output' → logprob: -9.000123023986816
    3. '	Output' → logprob: -19.000123977661133
    4. 'output' → logprob: -19.250123977661133
    5. ' output' → logprob: -21.625123977661133
    6. '_output' → logprob: -21.625123977661133
    7. '(Output' → logprob: -22.750123977661133
    8. '
' → logprob: -22.750123977661133
    9. '.Output' → logprob: -22.875123977661133
    10. '_Output' → logprob: -23.000123977661133

Token 587: 'Formatter' (ID: 22956)
  Prédit: 'Formatter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Formatter' → logprob: -1.9361264946837764e-07
    2. 'formatter' → logprob: -16.125
    3. '_formatter' → logprob: -17.625
    4. 'Format' → logprob: -18.875
    5. ' Formatter' → logprob: -20.125
    6. 'Formatting' → logprob: -20.75
    7. 'Formatted' → logprob: -21.875
    8. 'Printer' → logprob: -23.0
    9. 'Form' → logprob: -23.625
    10. '   ' → logprob: -23.875

Token 588: '.format' (ID: 12277)
  Prédit: '.format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.format' → logprob: -0.0015085549093782902
    2. '.' → logprob: -6.501508712768555
    3. '._' → logprob: -12.876508712768555
    4. ' .' → logprob: -13.251508712768555
    5. '   ' → logprob: -14.501508712768555
    6. '.Format' → logprob: -15.251508712768555
    7. 'format' → logprob: -15.626508712768555
    8. '_format' → logprob: -16.126508712768555
    9. '().' → logprob: -16.376508712768555
    10. '=format' → logprob: -16.626508712768555

Token 589: '_digit' (ID: 119592)
  Prédit: '_digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digit' → logprob: -1.3663626305060461e-05
    2. 'digit' → logprob: -11.50001335144043
    3. '_' → logprob: -12.75001335144043
    4. '```' → logprob: -15.62501335144043
    5. '_d' → logprob: -16.37501335144043
    6. '_
' → logprob: -17.00001335144043
    7. '_point' → logprob: -17.25001335144043
    8. '
' → logprob: -17.25001335144043
    9. '_decimal' → logprob: -17.62501335144043
    10. '_max' → logprob: -17.75001335144043

Token 590: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.0009122979827225208
    2. 'sequence' → logprob: -7.000912189483643
    3. '_point' → logprob: -15.1259126663208
    4. ' sequence' → logprob: -15.1259126663208
    5. 'Sequence' → logprob: -16.500911712646484
    6. '_number' → logprob: -17.000911712646484
    7. '(sequence' → logprob: -17.000911712646484
    8. '_seq' → logprob: -17.750911712646484
    9. '_sequences' → logprob: -18.500911712646484
    10. '_SEQUENCE' → logprob: -18.500911712646484

Token 591: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -12.500003814697266
    3. 'max' → logprob: -16.875003814697266
    4. '(min' → logprob: -17.500003814697266
    5. '(
' → logprob: -18.250003814697266
    6. ' max' → logprob: -19.375003814697266
    7. '(ma' → logprob: -19.375003814697266
    8. ',max' → logprob: -19.500003814697266
    9. '=max' → logprob: -19.625003814697266
    10. ' (' → logprob: -20.125003814697266

Token 592: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -5.512236498361744e-07
    2. 'point' → logprob: -14.500000953674316
    3. 'max' → logprob: -19.25
    4. 'Point' → logprob: -19.25
    5. '_Point' → logprob: -20.0
    6. '_POINT' → logprob: -20.75
    7. '-point' → logprob: -20.75
    8. 'oint' → logprob: -21.375
    9. '(max' → logprob: -21.625
    10. '_' → logprob: -21.75

Token 593: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.00033581978641450405
    2. 'sequence' → logprob: -8.000335693359375
    3. 'Sequence' → logprob: -15.750335693359375
    4. 'max' → logprob: -17.125335693359375
    5. '(max' → logprob: -17.875335693359375
    6. '(sequence' → logprob: -17.875335693359375
    7. '_number' → logprob: -18.250335693359375
    8. 's' → logprob: -18.375335693359375
    9. ' sequence' → logprob: -18.500335693359375
    10. 'sequ' → logprob: -18.500335693359375

Token 594: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.345492422580719
    2. ')
' → logprob: -1.3454923629760742
    3. '()' → logprob: -4.220492362976074
    4. '()
' → logprob: -4.595492362976074
    5. '(output' → logprob: -5.595492362976074
    6. '())
' → logprob: -6.345492362976074
    7. '())' → logprob: -6.970492362976074
    8. 'print' → logprob: -8.095492362976074
    9. '(print' → logprob: -9.470492362976074
    10. '   ' → logprob: -9.470492362976074

Token 595: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.25247082114219666
    2. '   ' → logprob: -1.502470850944519
    3. '
' → logprob: -7.627470970153809
    4. ' print' → logprob: -10.002470970153809
    5. '    
' → logprob: -12.127470970153809
    6. '	print' → logprob: -13.002470970153809
    7. '```' → logprob: -13.752470970153809
    8. '
' → logprob: -15.127470970153809
    9. '  
' → logprob: -16.252470016479492
    10. '#print' → logprob: -16.502470016479492

Token 596: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: 0.0
    2. '
' → logprob: -17.5
    3. '   ' → logprob: -18.0
    4. ' print' → logprob: -18.0
    5. 'pr' → logprob: -22.5
    6. '    
' → logprob: -22.625
    7. '	print' → logprob: -23.125
    8. 'prin' → logprob: -24.125
    9. '```' → logprob: -24.375
    10. '#print' → logprob: -24.625

Token 597: '(output' (ID: 22485)
  Prédit: '(output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(output' → logprob: -4.127333340875339e-06
    2. 'output' → logprob: -13.000003814697266
    3. '(' → logprob: -13.250003814697266
    4. '()' → logprob: -19.000003814697266
    5. ' (' → logprob: -20.125003814697266
    6. ' output' → logprob: -20.750003814697266
    7. '(
' → logprob: -21.250003814697266
    8. '(out' → logprob: -21.250003814697266
    9. '$output' → logprob: -21.500003814697266
    10. '(Output' → logprob: -21.625003814697266

Token 598: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -14.875000953674316
    3. ' )' → logprob: -16.0
    4. '()' → logprob: -19.25
    5. ')`' → logprob: -19.25
    6. '())' → logprob: -19.625
    7. '   ' → logprob: -20.375
    8. '))' → logprob: -20.5
    9. '}' → logprob: -21.0
    10. '')' → logprob: -21.125

Token 599: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.9385402993066236e-05
    2. ' if' → logprob: -11.125019073486328
    3. '```' → logprob: -13.125019073486328
    4. '#' → logprob: -13.500019073486328
    5. '
' → logprob: -14.125019073486328
    6. '__' → logprob: -16.125019073486328
    7. '<|end|>' → logprob: -16.375019073486328
    8. 'main' → logprob: -16.375019073486328
    9. '\' → logprob: -17.750019073486328
    10. '[' → logprob: -17.750019073486328

Token 600: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.06232403963804245
    2. '__' → logprob: -2.812324047088623
    3. 'name' → logprob: -8.312323570251465
    4. '_name' → logprob: -9.187323570251465
    5. '_' → logprob: -12.812323570251465
    6. ' ' → logprob: -13.312323570251465
    7. '___' → logprob: -13.437323570251465
    8. ' name' → logprob: -13.562323570251465
    9. 'Name' → logprob: -14.312323570251465
    10. '```' → logprob: -15.937323570251465

Token 601: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.045059770345687866
    2. '==' → logprob: -3.5450596809387207
    3. ' ==' → logprob: -4.420059680938721
    4. '__.__' → logprob: -6.920059680938721
    5. '=="' → logprob: -7.170059680938721
    6. 'name' → logprob: -7.420059680938721
    7. '=='' → logprob: -8.295060157775879
    8. '.__' → logprob: -8.670060157775879
    9. '[' → logprob: -8.920060157775879
    10. '__.' → logprob: -9.545060157775879

Token 602: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.6405310816480778e-05
    2. '==' → logprob: -11.250016212463379
    3. '__.__' → logprob: -13.000016212463379
    4. ' ==' → logprob: -14.125016212463379
    5. '=="' → logprob: -15.875016212463379
    6. '____' → logprob: -16.500017166137695
    7. '___' → logprob: -17.250017166137695
    8. '__('' → logprob: -17.250017166137695
    9. '__.' → logprob: -17.375017166137695
    10. '=='' → logprob: -17.875017166137695

Token 603: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6243569254875183
    2. '==' → logprob: -0.9993569254875183
    3. ' ==' → logprob: -2.374356985092163
    4. '=="' → logprob: -6.249356746673584
    5. '=='' → logprob: -6.999356746673584
    6. '.__' → logprob: -8.999357223510742
    7. '__.__' → logprob: -8.999357223510742
    8. '===' → logprob: -9.999357223510742
    9. '=' → logprob: -10.999357223510742
    10. '['' → logprob: -11.749357223510742

Token 604: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.25193557143211365
    2. ''' → logprob: -1.501935601234436
    3. '__' → logprob: -12.126935958862305
    4. ' "__' → logprob: -14.626935958862305
    5. ''"' → logprob: -15.876935958862305
    6. ' '__' → logprob: -16.001935958862305
    7. '"user' → logprob: -16.876935958862305
    8. '"name' → logprob: -17.001935958862305
    9. '"'' → logprob: -17.251935958862305
    10. ''name' → logprob: -17.251935958862305

Token 605: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -7.827200897736475e-05
    2. '__' → logprob: -9.500078201293945
    3. 'name' → logprob: -13.500078201293945
    4. '"' → logprob: -13.500078201293945
    5. '_main' → logprob: -15.000078201293945
    6. ' main' → logprob: -15.750078201293945
    7. ''' → logprob: -16.500078201293945
    8. 'built' → logprob: -17.375078201293945
    9. 'ma' → logprob: -17.625078201293945
    10. '主' → logprob: -18.375078201293945

Token 606: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.12708064913749695
    2. '__":
' → logprob: -2.1270806789398193
    3. '__:' → logprob: -9.627080917358398
    4. '__.' → logprob: -10.002080917358398
    5. '__.__' → logprob: -11.002080917358398
    6. '__':
' → logprob: -11.252080917358398
    7. '__["' → logprob: -11.752080917358398
    8. '__
' → logprob: -13.377080917358398
    9. '__",' → logprob: -14.002080917358398
    10. '__("' → logprob: -14.627080917358398

Token 607: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.03810689598321915
    2. '__' → logprob: -3.288106918334961
    3. ' main' → logprob: -10.163106918334961
    4. '   ' → logprob: -11.288106918334961
    5. '_main' → logprob: -11.913106918334961
    6. '__":
' → logprob: -13.163106918334961
    7. '	main' → logprob: -13.538106918334961
    8. '"' → logprob: -13.538106918334961
    9. '____' → logprob: -13.663106918334961
    10. '__':
' → logprob: -14.538106918334961

Token 608: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -9.088346359931165e-07
    2. ' main' → logprob: -14.000000953674316
    3. '	main' → logprob: -18.0
    4. '   ' → logprob: -19.25
    5. '_main' → logprob: -21.75
    6. '.main' → logprob: -24.25
    7. '(main' → logprob: -24.375
    8. 'import' → logprob: -24.5
    9. '  ' → logprob: -26.125
    10. 'Main' → logprob: -26.5

Token 609: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 607
Tokens correctement prédits (1ère position, stricte): 316
Tokens correctement prédits (1ère position, avec adaptation): 347
Tokens correctement prédits (top 10): 554
Précision stricte (1ère position): 52.06%
Précision adaptée (1ère position): 57.17%
Précision (top 10): 91.27%
================================================================================
