================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from typing import List, Tuple, Protocol

class InputReader(Protocol):
    def read(self) -> Tuple[int, int, List[Tuple[int,int]]]:
        ...

class StdInputReader:
    def read(self) -> Tuple[int, int, List[Tuple[int,int]]]:
        input=sys.stdin.readline
        N, W = map(int, input().split())
        items = [tuple(map(int, input().split())) for _ in range(N)]
        return N, W, items

class Item:
    def __init__(self, w: int, v: int) -> None:
        self.w = w
        self.v = v
        self.ratio = self._compute_ratio()
    
    def _compute_ratio(self) -> float:
        # handle zero weight case safely, but problem states |w_i|<=10^4 and all integers
        if self.w == 0:
            # If w=0 and v>0, ratio is +inf, else -inf or 0. Always handle to put items with w=0 appropriately.
            if self.v > 0:
                return float('inf')
            elif self.v < 0:
                return float('-inf')
            else:
                return 0.0
        return self.v / self.w

    def __lt__(self, other: 'Item') -> bool:
        # sort descending by ratio
        return self.ratio > other.ratio

class FractionalKnapsackSolver:
    def __init__(self, N: int, W: int, items_data: List[Tuple[int,int]]) -> None:
        self.N = N
        self.W = W
        self.items = [Item(w, v) for w, v in items_data]
    
    def solve(self) -> float:
        # Because w_i and v_i can be negative, we must be careful and consider the greedy approach properly.
        # Sort by ratio descending
        self.items.sort()

        total_value = 0.0
        remaining_capacity = self.W

        for item in self.items:
            if remaining_capacity == 0:
                break
            # Because w_i can be negative or zero, we must consider carefully
            # Approach:
            # - For positive weight: take min(1, remaining_capacity / w_i)
            # - For zero weight items with positive value: take all (x_i in [0,1], max is 1)
            # - For negative weights, this is tricky: since 0<=x_i<=1 and we want to maximize value
            #   For negative w and positive v, taking full x_i=1 reduces total weight (since w_i negative),
            #   increasing capacity effectively. So we want to take x_i=1 if it improves total.
            # So we will implement a linear programming style greedy:
            # At each item try to take full 1 if possible, else fractional to fit constraints.

            w = item.w
            v = item.v

            if w > 0:
                # maximum fraction we can take for this item without exceeding capacity
                frac = min(1, remaining_capacity / w)
                total_value += v * frac
                remaining_capacity -= w * frac
            elif w == 0:
                # weight zero: if value >0 take fully, else skip
                if v > 0:
                    total_value += v * 1
                    # no capacity change
                # else value <=0 take 0 to maximize
            else:
                # w < 0
                # Taking fraction x_i in [0,1] will reduce total weight by abs(w)*x_i, increasing capacity by that much.
                # We want to max value, so if v>0 take fully x_i=1, else 0
                if v > 0:
                    total_value += v * 1
                    remaining_capacity -= w * 1 # since w<0, remaining_capacity increases
                # else v <=0 skip taking

            # no lower bound violation check because x_i in [0,1]

        return total_value

class OutputWriter:
    def write(self, val: float) -> None:
        # print with 6 decimal places, making sure error <1e-3
        print(f"{val:.6f}")

class Solution:
    def __init__(self, reader: InputReader, writer: OutputWriter) -> None:
        self.reader = reader
        self.writer = writer

    def run(self) -> None:
        N, W, items = self.reader.read()
        solver = FractionalKnapsackSolver(N, W, items)
        ans = solver.solve()
        self.writer.write(ans)

if __name__ == "__main__":
    sol = Solution(StdInputReader(), OutputWriter())
    sol.run()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29739612340927124
    2. '\n' → logprob: -1.547396183013916
    3. '<|end|>' → logprob: -3.797396183013916
    4. '\' → logprob: -4.922396183013916
    5. 'newline' → logprob: -5.672396183013916
    6. 'import' → logprob: -5.672396183013916
    7. '<|end|>' → logprob: -6.047396183013916
    8. '
' → logprob: -6.922396183013916
    9. '```' → logprob: -6.922396183013916
    10. '' → logprob: -7.547396183013916

Token 4: ' typing' (ID: 34152)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.006869417615234852
    2. 'os' → logprob: -5.756869316101074
    3. ' math' → logprob: -6.881869316101074
    4. ' collections' → logprob: -7.256869316101074
    5. ' pathlib' → logprob: -7.756869316101074
    6. ' typing' → logprob: -8.131869316101074
    7. ' ' → logprob: -8.256869316101074
    8. ' datetime' → logprob: -9.006869316101074
    9. 'collections' → logprob: -9.131869316101074
    10. ' Py' → logprob: -9.256869316101074

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.09160161018371582
    2. 'import' → logprob: -2.466601610183716
    3. '.' → logprob: -6.216601371765137
    4. ' ' → logprob: -7.591601371765137
    5. '_import' → logprob: -10.466601371765137
    6. '.import' → logprob: -10.591601371765137
    7. '```' → logprob: -10.966601371765137
    8. '<|end|>' → logprob: -10.966601371765137
    9. '_' → logprob: -11.216601371765137
    10. ' .' → logprob: -11.341601371765137

Token 6: ' List' (ID: 2655)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Any' → logprob: -0.659045934677124
    2. ' List' → logprob: -1.034045934677124
    3. 'Any' → logprob: -2.284045934677124
    4. 'List' → logprob: -3.784045934677124
    5. ' ' → logprob: -7.284046173095703
    6. ' Optional' → logprob: -7.534046173095703
    7. ' Generator' → logprob: -7.534046173095703
    8. ' Union' → logprob: -8.159046173095703
    9. 'Generator' → logprob: -9.409046173095703
    10. 'Optional' → logprob: -9.909046173095703

Token 7: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7474764585494995
    2. '\n' → logprob: -1.6224764585494995
    3. '```' → logprob: -1.7474764585494995
    4. '

' → logprob: -1.9974764585494995
    5. '\' → logprob: -5.247476577758789
    6. 'import' → logprob: -5.497476577758789
    7. '<|end|>' → logprob: -5.747476577758789
    8. 'def' → logprob: -6.872476577758789
    9. '``' → logprob: -6.872476577758789
    10. ',' → logprob: -6.997476577758789

Token 8: ' Tuple' (ID: 50841)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.8268213272094727
    2. 'Optional' → logprob: -1.4518213272094727
    3. 'Tuple' → logprob: -1.9518213272094727
    4. ' Tuple' → logprob: -2.8268213272094727
    5. 'Any' → logprob: -3.0768213272094727
    6. ' Any' → logprob: -3.7018213272094727
    7. 'Dict' → logprob: -3.9518213272094727
    8. ' Dict' → logprob: -4.201821327209473
    9. ' Union' → logprob: -4.326821327209473
    10. 'Union' → logprob: -5.326821327209473

Token 9: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -1.0283076763153076
    2. '\n' → logprob: -1.5283076763153076
    3. '```' → logprob: -1.7783076763153076
    4. '
' → logprob: -2.1533076763153076
    5. 'import' → logprob: -2.7783076763153076
    6. 'def' → logprob: -2.9033076763153076
    7. '\' → logprob: -4.653307914733887
    8. '``' → logprob: -5.528307914733887
    9. ',' → logprob: -5.778307914733887
    10. 'class' → logprob: -5.903307914733887

Token 10: ' Protocol' (ID: 41914)
  Prédit: ' Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Dict' → logprob: -0.663943886756897
    2. ' Optional' → logprob: -1.663943886756897
    3. ' Union' → logprob: -1.788943886756897
    4. ' Any' → logprob: -3.1639437675476074
    5. ' Callable' → logprob: -3.9139437675476074
    6. ' defaultdict' → logprob: -4.038943767547607
    7. 'Dict' → logprob: -4.163943767547607
    8. 'Optional' → logprob: -4.788943767547607
    9. 'Any' → logprob: -4.913943767547607
    10. ' Set' → logprob: -5.663943767547607

Token 11: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.011724335141479969
    2. '
' → logprob: -5.261724472045898
    3. '```' → logprob: -5.511724472045898
    4. 'class' → logprob: -6.261724472045898
    5. ',' → logprob: -8.386724472045898
    6. 'import' → logprob: -9.511724472045898
    7. '\n' → logprob: -9.761724472045898
    8. '``' → logprob: -10.136724472045898
    9. ',

' → logprob: -10.261724472045898
    10. '


' → logprob: -10.636724472045898

Token 12: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00035333906998857856
    2. '```' → logprob: -8.375353813171387
    3. ' class' → logprob: -9.500353813171387
    4. '
' → logprob: -10.375353813171387
    5. '

' → logprob: -11.500353813171387
    6. '``' → logprob: -13.000353813171387
    7. 'import' → logprob: -13.375353813171387
    8. ',' → logprob: -14.625353813171387
    9. '-class' → logprob: -14.875353813171387
    10. '\n' → logprob: -14.875353813171387

Token 13: ' Input' (ID: 10090)
  Prédit: ' Protocol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Protocol' → logprob: -0.3397771716117859
    2. ' ' → logprob: -2.0897772312164307
    3. ' Runnable' → logprob: -3.2147772312164307
    4. ' Processor' → logprob: -3.9647772312164307
    5. ' Iterable' → logprob: -4.214776992797852
    6. ' My' → logprob: -4.464776992797852
    7. ' Serializable' → logprob: -4.589776992797852
    8. ' User' → logprob: -5.089776992797852
    9. ' Serializer' → logprob: -5.089776992797852
    10. ' Space' → logprob: -5.214776992797852

Token 14: 'Reader' (ID: 7171)
  Prédit: 'Processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: -0.782227098941803
    2. 'Data' → logprob: -1.4072270393371582
    3. 'Protocol' → logprob: -2.282227039337158
    4. 'Handler' → logprob: -2.407227039337158
    5. 'Reader' → logprob: -3.282227039337158
    6. ':' → logprob: -3.907227039337158
    7. 'Device' → logprob: -4.282227039337158
    8. 'Provider' → logprob: -5.157227039337158
    9. 'Parser' → logprob: -5.157227039337158
    10. 'Validator' → logprob: -5.157227039337158

Token 15: '(' (ID: 7)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029871514067053795
    2. '(' → logprob: -3.5298714637756348
    3. '():' → logprob: -9.404871940612793
    4. ' :' → logprob: -11.529871940612793
    5. '(:' → logprob: -11.654871940612793
    6. ':
' → logprob: -12.654871940612793
    7. ':**' → logprob: -12.904871940612793
    8. '):' → logprob: -13.154871940612793
    9. '(protocol' → logprob: -13.529871940612793
    10. 'Protocol' → logprob: -13.779871940612793

Token 16: 'Protocol' (ID: 19824)
  Prédit: 'Protocol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Protocol' → logprob: -0.00027420982951298356
    2. ' Protocol' → logprob: -8.250274658203125
    3. ')' → logprob: -12.000274658203125
    4. 'protocol' → logprob: -12.750274658203125
    5. '):' → logprob: -13.125274658203125
    6. 'Protocols' → logprob: -14.375274658203125
    7. '):
' → logprob: -14.750274658203125
    8. '_protocol' → logprob: -15.000274658203125
    9. '   ' → logprob: -15.375274658203125
    10. '.Protocol' → logprob: -15.625274658203125

Token 17: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00018399098189547658
    2. '):
' → logprob: -9.500184059143066
    3. ':' → logprob: -10.000184059143066
    4. '[' → logprob: -10.125184059143066
    5. ')' → logprob: -11.000184059143066
    6. ',' → logprob: -13.500184059143066
    7. '):
' → logprob: -13.500184059143066
    8. '[int' → logprob: -13.625184059143066
    9. ' ):' → logprob: -14.000184059143066
    10. '[str' → logprob: -14.500184059143066

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005212059244513512
    2. '    
' → logprob: -5.88021183013916
    3. '
' → logprob: -7.50521183013916
    4. ' def' → logprob: -7.75521183013916
    5. '<|end|>' → logprob: -7.88021183013916
    6. 'n' → logprob: -8.00521183013916
    7. '\n' → logprob: -8.88021183013916
    8. 'def' → logprob: -9.13021183013916
    9. '```' → logprob: -9.25521183013916
    10. '<|end|>' → logprob: -9.38021183013916

Token 19: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4887811839580536
    2. ' def' → logprob: -0.988781213760376
    3. 'def' (adapté à ' def') → logprob: -4.238780975341797
    4. '    
' → logprob: -9.613780975341797
    5. '    ' → logprob: -10.113780975341797
    6. '```' → logprob: -11.363780975341797
    7. ' indentation' → logprob: -11.363780975341797
    8. '	def' → logprob: -11.488780975341797
    9. ' ' → logprob: -12.113780975341797
    10. 'n' → logprob: -12.488780975341797

Token 20: ' read' (ID: 1729)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5547482967376709
    2. 'def' → logprob: -1.304748296737671
    3. 'put' → logprob: -3.054748296737671
    4. 'nit' → logprob: -3.179748296737671
    5. '   ' → logprob: -4.17974853515625
    6. ' def' → logprob: -4.55474853515625
    7. 'read' → logprob: -4.80474853515625
    8. 'm' → logprob: -5.30474853515625
    9. 'p' → logprob: -5.42974853515625
    10. ' n' → logprob: -5.67974853515625

Token 21: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.024518180638551712
    2. '_line' → logprob: -3.8995182514190674
    3. '()' → logprob: -5.649518013000488
    4. '(' → logprob: -8.649518013000488
    5. 'line' → logprob: -9.274518013000488
    6. 'self' → logprob: -9.899518013000488
    7. '_input' → logprob: -10.024518013000488
    8. ')' → logprob: -11.524518013000488
    9. 'Line' → logprob: -11.524518013000488
    10. '_lines' → logprob: -11.649518013000488

Token 22: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06621796637773514
    2. 's' → logprob: -3.9412178993225098
    3. 'self' → logprob: -4.31621789932251
    4. 'n' → logprob: -4.44121789932251
    5. '):' → logprob: -4.56621789932251
    6. ':' → logprob: -5.44121789932251
    7. ',' → logprob: -6.81621789932251
    8. '_input' → logprob: -7.06621789932251
    9. '_line' → logprob: -7.19121789932251
    10. '_' → logprob: -8.191218376159668

Token 23: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.015182912349700928
    2. ' ->' → logprob: -4.390182971954346
    3. ')' → logprob: -7.015182971954346
    4. '()' → logprob: -7.265182971954346
    5. '()->' → logprob: -7.515182971954346
    6. '-' → logprob: -8.890182495117188
    7. '(' → logprob: -9.015182495117188
    8. ')->' → logprob: -9.390182495117188
    9. ':' → logprob: -9.765182495117188
    10. '   ' → logprob: -9.890182495117188

Token 24: ' Tuple' (ID: 50841)
  Prédit: ' List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.40628883242607117
    2. ' str' → logprob: -1.5312888622283936
    3. 'List' → logprob: -2.2812888622283936
    4. 'str' → logprob: -4.4062886238098145
    5. ' None' → logprob: -6.1562886238098145
    6. ' int' → logprob: -8.156289100646973
    7. 'int' → logprob: -8.531289100646973
    8. 'None' → logprob: -8.781289100646973
    9. ' ' → logprob: -8.906289100646973
    10. ' Tuple' → logprob: -9.031289100646973

Token 25: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.10198908299207687
    2. '[str' → logprob: -2.3519890308380127
    3. '[' → logprob: -6.476989269256592
    4. '[]' → logprob: -8.476988792419434
    5. 'int' → logprob: -11.601988792419434
    6. '[List' → logprob: -11.726988792419434
    7. '(int' → logprob: -11.976988792419434
    8. '[
' → logprob: -12.601988792419434
    9. '[...]' → logprob: -13.351988792419434
    10. '[...,' → logprob: -14.101988792419434

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026336227892898023
    2. ',int' → logprob: -8.375263214111328
    3. ' ,' → logprob: -11.625263214111328
    4. '[' → logprob: -12.250263214111328
    5. '[int' → logprob: -12.250263214111328
    6. ']' → logprob: -12.625263214111328
    7. ')' → logprob: -13.125263214111328
    8. ',List' → logprob: -13.500263214111328
    9. ']int' → logprob: -13.750263214111328
    10. ',)' → logprob: -14.250263214111328

Token 27: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.43813812732696533
    2. 'int' → logprob: -1.0631381273269653
    3. ' List' → logprob: -4.938138008117676
    4. 'List' → logprob: -6.938138008117676
    5. ' str' → logprob: -7.438138008117676
    6. '...' → logprob: -8.438138008117676
    7. ' ...' → logprob: -8.688138008117676
    8. '[int' → logprob: -8.813138008117676
    9. 'str' → logprob: -10.313138008117676
    10. ']int' → logprob: -10.438138008117676

Token 28: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023722784593701363
    2. ']:' → logprob: -4.0237226486206055
    3. ')' → logprob: -5.7737226486206055
    4. ',' → logprob: -6.1487226486206055
    5. ':' → logprob: -8.648722648620605
    6. ']' → logprob: -9.773722648620605
    7. '>:' → logprob: -10.273722648620605
    8. '>' → logprob: -10.898722648620605
    9. ')>' → logprob: -11.773722648620605
    10. ']):' → logprob: -12.648722648620605

Token 29: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.5689176321029663
    2. 'List' → logprob: -1.3189176321029663
    3. 'int' → logprob: -2.318917751312256
    4. ' int' → logprob: -2.693917751312256
    5. ' str' → logprob: -8.693917274475098
    6. '[List' → logprob: -9.568917274475098
    7. '[int' → logprob: -10.193917274475098
    8. 'str' → logprob: -10.256417274475098
    9. '	List' → logprob: -10.818917274475098
    10. ',List' → logprob: -11.443917274475098

Token 30: '[' (ID: 58)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0028267467860132456
    2. '[' → logprob: -5.877826690673828
    3. '[List' → logprob: -11.752826690673828
    4. '[Int' → logprob: -11.877826690673828
    5. '[str' → logprob: -12.252826690673828
    6. 'int' → logprob: -14.252826690673828
    7. ']int' → logprob: -14.752826690673828
    8. '```' → logprob: -15.252826690673828
    9. '<int' → logprob: -15.377826690673828
    10. '[Index' → logprob: -15.502826690673828

Token 31: 'Tuple' (ID: 40048)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.45135223865509033
    2. 'Tuple' → logprob: -1.0763522386550903
    3. 'List' → logprob: -3.951352119445801
    4. 'str' → logprob: -6.076352119445801
    5. ' Tuple' → logprob: -7.701352119445801
    6. ' int' → logprob: -8.3263521194458
    7. '[int' → logprob: -9.7013521194458
    8. 'tuple' → logprob: -10.4513521194458
    9. ' List' → logprob: -10.8263521194458
    10. 'Tu' → logprob: -11.0763521194458

Token 32: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -5.200166469876422e-06
    2. 'int' → logprob: -13.125004768371582
    3. '<int' → logprob: -13.375004768371582
    4. '[str' → logprob: -13.875004768371582
    5. ']int' → logprob: -15.000004768371582
    6. '[' → logprob: -15.625004768371582
    7. ',int' → logprob: -16.2500057220459
    8. '(int' → logprob: -17.6250057220459
    9. '   ' → logprob: -18.7500057220459
    10. ' int' → logprob: -18.8750057220459

Token 33: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034530315548181534
    2. ',int' → logprob: -3.4095304012298584
    3. ' ,' → logprob: -7.534530162811279
    4. '[int' → logprob: -8.409530639648438
    5. ']int' → logprob: -9.659530639648438
    6. 'int' → logprob: -10.784530639648438
    7. '<int' → logprob: -11.409530639648438
    8. ']' → logprob: -12.159530639648438
    9. ']]' → logprob: -12.284530639648438
    10. ']]]' → logprob: -12.284530639648438

Token 34: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.11131046712398529
    2. ']]]' → logprob: -2.4863104820251465
    3. ']' → logprob: -3.9863104820251465
    4. '>' → logprob: -6.7363104820251465
    5. ']])' → logprob: -7.1113104820251465
    6. ']>' → logprob: -7.4863104820251465
    7. '])]' → logprob: -7.6113104820251465
    8. ')' → logprob: -8.236310005187988
    9. ')]' → logprob: -9.111310005187988
    10. ']:' → logprob: -10.986310005187988

Token 35: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0035820147022604942
    2. ']:' → logprob: -5.878582000732422
    3. ':' → logprob: -7.503582000732422
    4. '>:' → logprob: -9.003582000732422
    5. ')' → logprob: -9.503582000732422
    6. '>' → logprob: -11.128582000732422
    7. '}:' → logprob: -12.253582000732422
    8. '):
' → logprob: -12.878582000732422
    9. ']' → logprob: -13.378582000732422
    10. '>):' → logprob: -14.128582000732422

Token 36: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040645573288202286
    2. '
' → logprob: -4.665645599365234
    3. '       ' → logprob: -4.665645599365234
    4. ':' → logprob: -4.790645599365234
    5. '\n' → logprob: -5.415645599365234
    6. '    
' → logprob: -6.165645599365234
    7. '    ' → logprob: -7.040645599365234
    8. '```' → logprob: -7.165645599365234
    9. 'n' → logprob: -7.290645599365234
    10. 'def' → logprob: -7.415645599365234

Token 37: ' ...

' (ID: 5231)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09518074989318848
    2. '...' → logprob: -2.9701807498931885
    3. 'pass' → logprob: -3.9701807498931885
    4. '   ' → logprob: -4.720180511474609
    5. ' pass' → logprob: -5.220180511474609
    6. '\n' → logprob: -5.470180511474609
    7. ' ...' → logprob: -7.220180511474609
    8. '           ' → logprob: -7.595180511474609
    9. '    ' → logprob: -8.84518051147461
    10. '      ' → logprob: -9.09518051147461

Token 38: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.040625426918268204
    2. '
' → logprob: -3.4156253337860107
    3. 'def' → logprob: -5.66562557220459
    4. '```' → logprob: -5.91562557220459
    5. '' → logprob: -8.54062557220459
    6. ' class' → logprob: -9.04062557220459
    7. '    
' → logprob: -9.16562557220459
    8. '

' → logprob: -9.41562557220459
    9. '\n' → logprob: -9.66562557220459
    10. '   ' → logprob: -10.16562557220459

Token 39: ' Std' (ID: 74505)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -0.3697717785835266
    2. ' Data' → logprob: -2.994771718978882
    3. ' Default' → logprob: -2.994771718978882
    4. 'Solution' → logprob: -3.369771718978882
    5. ' Rectangle' → logprob: -3.494771718978882
    6. ' Solver' → logprob: -3.494771718978882
    7. ' Point' → logprob: -3.494771718978882
    8. ' Simple' → logprob: -3.994771718978882
    9. ' My' → logprob: -4.869771957397461
    10. ' Graph' → logprob: -5.369771957397461

Token 40: 'Input' (ID: 3275)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.002902824431657791
    2. 'In' → logprob: -6.377902984619141
    3. 'Input' → logprob: -6.752902984619141
    4. 'input' → logprob: -10.50290298461914
    5. 'inp' → logprob: -12.87790298461914
    6. ' input' → logprob: -14.37790298461914
    7. 'andard' → logprob: -14.87790298461914
    8. 'out' → logprob: -15.12790298461914
    9. 'lib' → logprob: -15.75290298461914
    10. 'ard' → logprob: -15.75290298461914

Token 41: 'Reader' (ID: 7171)
  Prédit: 'Reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.0006379772676154971
    2. 'Input' → logprob: -7.750638008117676
    3. ':' → logprob: -9.000638008117676
    4. '():' → logprob: -10.750638008117676
    5. '(' → logprob: -11.375638008117676
    6. 'ut' → logprob: -12.125638008117676
    7. '):' → logprob: -12.250638008117676
    8. 'er' → logprob: -12.250638008117676
    9. ':
' → logprob: -12.750638008117676
    10. 'ayer' → logprob: -12.750638008117676

Token 42: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.836499985889532e-05
    2. '():' → logprob: -10.2500581741333
    3. ' :' → logprob: -11.5000581741333
    4. ':
' → logprob: -12.2500581741333
    5. '):' → logprob: -12.6250581741333
    6. '(' → logprob: -13.0000581741333
    7. ':def' → logprob: -14.1250581741333
    8. ':`' → logprob: -15.1250581741333
    9. ':**' → logprob: -15.3750581741333
    10. '   ' → logprob: -15.3750581741333

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007382051553577185
    2. ' def' → logprob: -5.257381916046143
    3. '    
' → logprob: -6.382381916046143
    4. 'def' → logprob: -8.2573823928833
    5. '
' → logprob: -9.3823823928833
    6. ' ' → logprob: -10.3823823928833
    7. '  ' → logprob: -10.7573823928833
    8. '    ' → logprob: -11.2573823928833
    9. ' indentation' → logprob: -11.2573823928833
    10. '   
' → logprob: -12.1323823928833

Token 44: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.06229244917631149
    2. 'def' (adapté à ' def') → logprob: -2.8122923374176025
    3. '   ' → logprob: -8.187292098999023
    4. ' ' → logprob: -10.687292098999023
    5. '    ' → logprob: -11.687292098999023
    6. ' de' → logprob: -11.812292098999023
    7. 'de' → logprob: -12.812292098999023
    8. ' d' → logprob: -12.937292098999023
    9. ' indent' → logprob: -14.687292098999023
    10. '  ' → logprob: -14.937292098999023

Token 45: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.719031810760498
    2. ' __' → logprob: -0.719031810760498
    3. '__' → logprob: -4.469031810760498
    4. 'read' → logprob: -4.469031810760498
    5. ' ' → logprob: -6.969031810760498
    6. 'init' → logprob: -7.219031810760498
    7. ' init' → logprob: -7.969031810760498
    8. '_read' → logprob: -8.469032287597656
    9. ' def' → logprob: -8.844032287597656
    10. '_' → logprob: -9.344032287597656

Token 46: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0019036511657759547
    2. '(' → logprob: -6.376903533935547
    3. 'self' → logprob: -9.001903533935547
    4. ' (' → logprob: -10.501903533935547
    5. '(s' → logprob: -10.501903533935547
    6. '(
' → logprob: -11.501903533935547
    7. '   ' → logprob: -12.376903533935547
    8. 's' → logprob: -12.876903533935547
    9. ' ' → logprob: -13.376903533935547
    10. '()' → logprob: -13.501903533935547

Token 47: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018765632063150406
    2. 'self' → logprob: -4.018765449523926
    3. '):' → logprob: -8.018765449523926
    4. '   ' → logprob: -9.143765449523926
    5. ',' → logprob: -9.768765449523926
    6. '(self' → logprob: -10.143765449523926
    7. ' ' → logprob: -10.518765449523926
    8. '       ' → logprob: -11.143765449523926
    9. 's' → logprob: -11.268765449523926
    10. ' )' → logprob: -11.518765449523926

Token 48: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01417867373675108
    2. ' ->' → logprob: -5.13917875289917
    3. '):' → logprob: -6.01417875289917
    4. '       ' → logprob: -6.51417875289917
    5. '(self' → logprob: -6.63917875289917
    6. '->' → logprob: -6.88917875289917
    7. 'self' → logprob: -7.38917875289917
    8. '   ' → logprob: -7.51417875289917
    9. ' :' → logprob: -8.389178276062012
    10. ')' → logprob: -8.639178276062012

Token 49: ' Tuple' (ID: 50841)
  Prédit: ' Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Tuple' → logprob: -0.005010667257010937
    2. 'Tuple' → logprob: -5.880010604858398
    3. ' ' → logprob: -6.130010604858398
    4. ' tuple' → logprob: -11.255010604858398
    5. ' Tu' → logprob: -11.630010604858398
    6. '  ' → logprob: -13.255010604858398
    7. ' (' → logprob: -14.005010604858398
    8. ' List' → logprob: -14.130010604858398
    9. ' ' → logprob: -14.380010604858398
    10. ' None' → logprob: -15.005010604858398

Token 50: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0001733855315251276
    2. '[' → logprob: -8.750173568725586
    3. ' [' → logprob: -11.375173568725586
    4. '[Int' → logprob: -13.000173568725586
    5. '[in' → logprob: -14.375173568725586
    6. '[List' → logprob: -15.875173568725586
    7. ':' → logprob: -16.250173568725586
    8. '[
' → logprob: -16.500173568725586
    9. '   ' → logprob: -16.625173568725586
    10. ':int' → logprob: -16.750173568725586

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016183577477931976
    2. ',int' → logprob: -4.141183376312256
    3. ' ,' → logprob: -8.891183853149414
    4. '[int' → logprob: -12.766183853149414
    5. ',float' → logprob: -12.891183853149414
    6. '   ' → logprob: -13.391183853149414
    7. ',uint' → logprob: -14.016183853149414
    8. 'int' → logprob: -14.016183853149414
    9. ',
' → logprob: -14.641183853149414
    10. ',bool' → logprob: -14.766183853149414

Token 52: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0036133781541138887
    2. ' int' → logprob: -5.628613471984863
    3. '   ' → logprob: -11.503613471984863
    4. '[int' → logprob: -14.128613471984863
    5. '<int' → logprob: -14.253613471984863
    6. '	int' → logprob: -14.878613471984863
    7. '    ' → logprob: -15.128613471984863
    8. ' ' → logprob: -15.128613471984863
    9. ']int' → logprob: -15.503613471984863
    10. '  ' → logprob: -15.628613471984863

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.394135612528771e-05
    2. ' ,' → logprob: -10.750043869018555
    3. ',int' → logprob: -10.875043869018555
    4. '):' → logprob: -14.000043869018555
    5. ')' → logprob: -14.375043869018555
    6. ']' → logprob: -15.125043869018555
    7. ',

' → logprob: -15.625043869018555
    8. ',
' → logprob: -15.625043869018555
    9. ',List' → logprob: -15.625043869018555
    10. '   ' → logprob: -15.750043869018555

Token 54: ' List' (ID: 2655)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6697458028793335
    2. ' int' → logprob: -0.9197458028793335
    3. ' List' → logprob: -2.544745922088623
    4. 'List' → logprob: -4.544745922088623
    5. '[int' → logprob: -8.419745445251465
    6. '   ' → logprob: -9.169745445251465
    7. '    ' → logprob: -10.794745445251465
    8. ' ' → logprob: -10.794745445251465
    9. '[List' → logprob: -11.044745445251465
    10. '  ' → logprob: -12.357245445251465

Token 55: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.599403423024341e-05
    2. '[(' → logprob: -9.875065803527832
    3. '[int' → logprob: -11.375065803527832
    4. '[
' → logprob: -13.375065803527832
    5. '[List' → logprob: -14.125065803527832
    6. ' ' → logprob: -15.750065803527832
    7. '   ' → logprob: -15.875065803527832
    8. '```' → logprob: -16.00006675720215
    9. ' [' → logprob: -16.50006675720215
    10. '[[' → logprob: -16.50006675720215

Token 56: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -1.318681188422488e-05
    2. ' Tuple' → logprob: -11.75001335144043
    3. 'int' → logprob: -12.25001335144043
    4. '[' → logprob: -15.25001335144043
    5. 'Tu' → logprob: -15.25001335144043
    6. '   ' → logprob: -17.62501335144043
    7. '[int' → logprob: -18.00001335144043
    8. ' ' → logprob: -19.50001335144043
    9. '  ' → logprob: -20.00001335144043
    10. '.Tuple' → logprob: -20.00001335144043

Token 57: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -3.128163257315464e-07
    2. '<int' → logprob: -15.75
    3. 'int' → logprob: -16.5
    4. '[Int' → logprob: -17.375
    5. '[in' → logprob: -18.5
    6. '[' → logprob: -19.5
    7. ' [' → logprob: -19.625
    8. ',int' → logprob: -19.75
    9. ']int' → logprob: -19.75
    10. '(int' → logprob: -19.875

Token 58: ',int' (ID: 20909)
  Prédit: ',int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.0789034515619278
    2. ',' → logprob: -2.5789034366607666
    3. ' ,' → logprob: -11.828903198242188
    4. ',float' → logprob: -12.953903198242188
    5. ',bool' → logprob: -13.578903198242188
    6. 'int' → logprob: -13.828903198242188
    7. '[int' → logprob: -14.453903198242188
    8. ']int' → logprob: -14.953903198242188
    9. ',in' → logprob: -15.703903198242188
    10. ',double' → logprob: -15.953903198242188

Token 59: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.003196727717295289
    2. ']]]' → logprob: -5.753196716308594
    3. ']]:
' → logprob: -11.128196716308594
    4. ']' → logprob: -13.753196716308594
    5. '>' → logprob: -14.253196716308594
    6. ']])' → logprob: -14.253196716308594
    7. ']:' → logprob: -14.503196716308594
    8. ')' → logprob: -14.503196716308594
    9. '```' → logprob: -15.253196716308594
    10. ' ]' → logprob: -16.003196716308594

Token 60: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.04227850213646889
    2. '):' → logprob: -3.417278528213501
    3. ':' → logprob: -4.917278289794922
    4. '>:' → logprob: -6.917278289794922
    5. ']:
' → logprob: -9.542278289794922
    6. '}:' → logprob: -9.667278289794922
    7. '   ' → logprob: -10.167278289794922
    8. '():' → logprob: -10.292278289794922
    9. '"]:' → logprob: -10.667278289794922
    10. ']' → logprob: -10.917278289794922

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00027432903880253434
    2. '        ' → logprob: -9.375274658203125
    3. '      ' → logprob: -9.875274658203125
    4. '    ' → logprob: -10.500274658203125
    5. '        
' → logprob: -10.500274658203125
    6. '   ' → logprob: -11.250274658203125
    7. ':' → logprob: -11.625274658203125
    8. 'return' → logprob: -11.750274658203125
    9. '     ' → logprob: -11.750274658203125
    10. 'import' → logprob: -12.250274658203125

Token 62: ' input' (ID: 3422)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7654317617416382
    2. ' n' → logprob: -1.1404317617416382
    3. 'n' → logprob: -1.6404317617416382
    4. '        ' → logprob: -5.015431880950928
    5. ' line' → logprob: -5.140431880950928
    6. '   ' → logprob: -6.390431880950928
    7. 'line' → logprob: -6.640431880950928
    8. ' return' → logprob: -7.140431880950928
    9. ' lines' → logprob: -7.140431880950928
    10. '      ' → logprob: -7.640431880950928

Token 63: '=sys' (ID: 149200)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011354787275195122
    2. '(' → logprob: -5.261354923248291
    3. '().' → logprob: -5.761354923248291
    4. '_line' → logprob: -6.136354923248291
    5. '_data' → logprob: -8.136354446411133
    6. '_lines' → logprob: -9.136354446411133
    7. '()]' → logprob: -9.886354446411133
    8. ' ()' → logprob: -9.886354446411133
    9. '_input' → logprob: -9.886354446411133
    10. 's' → logprob: -10.011354446411133

Token 64: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.011673313565552235
    2. '.stdin' → logprob: -4.636673450469971
    3. '.readline' → logprob: -6.636673450469971
    4. ' .' → logprob: -7.761673450469971
    5. '.input' → logprob: -9.886672973632812
    6. '.argv' → logprob: -10.136672973632812
    7. '.stdout' → logprob: -10.511672973632812
    8. '.
' → logprob: -11.761672973632812
    9. '.)' → logprob: -12.011672973632812
    10. '.\' → logprob: -12.636672973632812

Token 65: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.21135854721069336
    2. '.' → logprob: -1.7113585472106934
    3. '.read' → logprob: -4.711358547210693
    4. '.stdin' → logprob: -7.211358547210693
    5. '.readlines' → logprob: -9.461359024047852
    6. ' .' → logprob: -10.836359024047852
    7. '.stdout' → logprob: -11.336359024047852
    8. '.argv' → logprob: -11.711359024047852
    9. 'read' → logprob: -11.711359024047852
    10. '().' → logprob: -12.336359024047852

Token 66: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00202880403958261
    2. '().' → logprob: -6.252028942108154
    3. '()
' → logprob: -9.627028465270996
    4. '()\' → logprob: -11.002028465270996
    5. '(' → logprob: -11.752028465270996
    6. ' ()' → logprob: -12.502028465270996
    7. '()

' → logprob: -12.627028465270996
    8. '()`' → logprob: -13.752028465270996
    9. '())' → logprob: -14.502028465270996
    10. '()
' → logprob: -15.252028465270996

Token 67: '       ' (ID: 309)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0015698568895459175
    2. '()
' → logprob: -6.626569747924805
    3. '       ' → logprob: -8.751569747924805
    4. '()\' → logprob: -10.001569747924805
    5. '().' → logprob: -11.001569747924805
    6. ' ()' → logprob: -11.876569747924805
    7. '()

' → logprob: -12.001569747924805
    8. '(' → logprob: -13.001569747924805
    9. '():' → logprob: -13.126569747924805
    10. '()`' → logprob: -13.501569747924805

Token 68: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5862882733345032
    2. ' n' → logprob: -0.8362882733345032
    3. '       ' → logprob: -5.5862884521484375
    4. ' line' → logprob: -6.9612884521484375
    5. 'N' (adapté à ' N') → logprob: -7.0862884521484375
    6. 'm' → logprob: -7.2112884521484375
    7. ' N' → logprob: -7.5862884521484375
    8. 'x' → logprob: -7.5862884521484375
    9. 'a' → logprob: -7.7112884521484375
    10. 's' → logprob: -7.8362884521484375

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022464342415332794
    2. ' ,' → logprob: -3.8974642753601074
    3. ' =' → logprob: -6.897464275360107
    4. '=' → logprob: -7.147464275360107
    5. ',N' → logprob: -10.022464752197266
    6. ' ' → logprob: -11.272464752197266
    7. ')' → logprob: -11.397464752197266
    8. '(),' → logprob: -11.522464752197266
    9. ',n' → logprob: -11.647464752197266
    10. '()' → logprob: -11.897464752197266

Token 70: ' W' (ID: 486)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.35849064588546753
    2. 'M' → logprob: -1.2334907054901123
    3. ' K' → logprob: -5.108490467071533
    4. 'K' → logprob: -5.608490467071533
    5. ' ' → logprob: -8.733490943908691
    6. 'Q' → logprob: -9.983490943908691
    7. ' Q' → logprob: -10.733490943908691
    8. ' T' → logprob: -11.233490943908691
    9. 'T' → logprob: -11.733490943908691
    10. 'm' → logprob: -11.983490943908691

Token 71: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5257732272148132
    2. ' =' → logprob: -0.9007732272148132
    3. ',' → logprob: -6.025773048400879
    4. '=input' → logprob: -8.525773048400879
    5. '=line' → logprob: -11.650773048400879
    6. ' ,' → logprob: -11.775773048400879
    7. ' ' → logprob: -12.025773048400879
    8. '=int' → logprob: -13.150773048400879
    9. ')=' → logprob: -13.900773048400879
    10. '=sys' → logprob: -14.150773048400879

Token 72: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.018159886822104454
    2. 'map' → logprob: -4.018159866333008
    3. ' input' → logprob: -12.518159866333008
    4. ' ' → logprob: -13.143159866333008
    5. '	map' → logprob: -13.518159866333008
    6. 'input' → logprob: -13.643159866333008
    7. ' list' → logprob: -14.143159866333008
    8. ' tuple' → logprob: -15.143159866333008
    9. ' ' → logprob: -15.518159866333008
    10. '   ' → logprob: -15.643159866333008

Token 73: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9211379289627075
    2. '(int' → logprob: -1.0461379289627075
    3. '(input' → logprob: -1.4211379289627075
    4. '(str' → logprob: -4.796137809753418
    5. '(lambda' → logprob: -7.171137809753418
    6. ' (' → logprob: -9.296137809753418
    7. '(
' → logprob: -10.546137809753418
    8. '(

' → logprob: -11.546137809753418
    9. '(line' → logprob: -11.796137809753418
    10. '(in' → logprob: -11.921137809753418

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4811233878135681
    2. ',input' → logprob: -0.9811233878135681
    3. '(input' → logprob: -5.231123447418213
    4. 'input' → logprob: -6.981123447418213
    5. '(' → logprob: -7.731123447418213
    6. ')' → logprob: -9.231122970581055
    7. ' ,' → logprob: -9.231122970581055
    8. '(),' → logprob: -9.606122970581055
    9. ' input' → logprob: -11.481122970581055
    10. '   ' → logprob: -11.856122970581055

Token 75: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5759405493736267
    2. ' input' → logprob: -0.8259405493736267
    3. ')' → logprob: -14.200940132141113
    4. '(input' → logprob: -15.450940132141113
    5. ',input' → logprob: -15.825940132141113
    6. '	input' → logprob: -17.07594108581543
    7. '=input' → logprob: -17.07594108581543
    8. ' ' → logprob: -17.57594108581543
    9. '<input' → logprob: -18.20094108581543
    10. ' )' → logprob: -18.57594108581543

Token 76: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.009104699827730656
    2. '()' → logprob: -4.7591047286987305
    3. '())' → logprob: -7.6341047286987305
    4. ')' → logprob: -12.50910472869873
    5. ' ().' → logprob: -13.75910472869873
    6. '()
' → logprob: -14.13410472869873
    7. ' ()' → logprob: -15.50910472869873
    8. ' ' → logprob: -16.009103775024414
    9. '().'' → logprob: -16.509103775024414
    10. '()

' → logprob: -16.634103775024414

Token 77: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.03824195638298988
    2. 'strip' → logprob: -3.2882418632507324
    3. 'rstrip' → logprob: -8.53824234008789
    4. ' split' → logprob: -12.66324234008789
    5. ' ' → logprob: -14.28824234008789
    6. '().' → logprob: -15.41324234008789
    7. 'spl' → logprob: -15.78824234008789
    8. ' strip' → logprob: -15.78824234008789
    9. '(split' → logprob: -16.03824234008789
    10. 'read' → logprob: -16.28824234008789

Token 78: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.05268346890807152
    2. ')' → logprob: -3.0526833534240723
    3. '()' → logprob: -5.552683353424072
    4. '))' → logprob: -9.17768383026123
    5. '()))' → logprob: -9.42768383026123
    6. '())
' → logprob: -10.80268383026123
    7. '(' → logprob: -12.67768383026123
    8. ' ())' → logprob: -13.80268383026123
    9. '(),' → logprob: -14.67768383026123
    10. '())

' → logprob: -15.05268383026123

Token 79: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.116086445748806
    2. '<|end|>' → logprob: -3.116086483001709
    3. '        
' → logprob: -3.491086483001709
    4. '
' → logprob: -3.616086483001709
    5. '        ' → logprob: -5.866086483001709
    6. ' 
' → logprob: -6.241086483001709
    7. '  
' → logprob: -6.866086483001709
    8. '<|end|>' → logprob: -7.991086483001709
    9. '\n' → logprob: -8.36608600616455
    10. 'newline' → logprob: -8.74108600616455

Token 80: ' items' (ID: 4732)
  Prédit: ' items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' items' → logprob: -1.328956961631775
    2. 'items' (adapté à ' items') → logprob: -1.578956961631775
    3. ' edges' → logprob: -1.828956961631775
    4. 'edges' → logprob: -1.953956961631775
    5. ' points' → logprob: -2.7039570808410645
    6. 'points' → logprob: -3.3289570808410645
    7. 'pairs' → logprob: -3.9539570808410645
    8. 'AB' → logprob: -4.3289570808410645
    9. ' data' → logprob: -5.0789570808410645
    10. 'H' → logprob: -5.2039570808410645

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04301517829298973
    2. '=' → logprob: -3.168015241622925
    3. '=[]' → logprob: -11.793015480041504
    4. ' =[' → logprob: -12.543015480041504
    5. ' ' → logprob: -13.418015480041504
    6. '_' → logprob: -14.168015480041504
    7. '＝' → logprob: -14.918015480041504
    8. '<|end|>' → logprob: -15.043015480041504
    9. ' =)' → logprob: -15.293015480041504
    10. ' ' → logprob: -15.543015480041504

Token 82: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10302701592445374
    2. ' [' → logprob: -3.353027105331421
    3. '[]' → logprob: -3.353027105331421
    4. ' []' → logprob: -4.353026866912842
    5. '[int' → logprob: -4.353026866912842
    6. '[List' → logprob: -7.353026866912842
    7. '[list' → logprob: -7.478026866912842
    8. '[i' → logprob: -9.10302734375
    9. '[get' → logprob: -9.10302734375
    10. '[(' → logprob: -9.35302734375

Token 83: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.00570871215313673
    2. ' tuple' → logprob: -5.380708694458008
    3. '(tuple' → logprob: -6.880708694458008
    4. '
' → logprob: -10.130708694458008
    5. '(
' → logprob: -11.255708694458008
    6. ' ' → logprob: -13.630708694458008
    7. '(' → logprob: -13.755708694458008
    8. '

' → logprob: -14.005708694458008
    9. '   ' → logprob: -14.130708694458008
    10. ' (' → logprob: -14.255708694458008

Token 84: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -8.061054359131958e-06
    2. '(' → logprob: -12.625007629394531
    3. 'map' → logprob: -12.750007629394531
    4. '(int' → logprob: -13.375007629394531
    5. ' map' → logprob: -17.00000762939453
    6. '	map' → logprob: -17.12500762939453
    7. '(
' → logprob: -18.25000762939453
    8. '   ' → logprob: -18.25000762939453
    9. ',map' → logprob: -18.62500762939453
    10. '_map' → logprob: -18.62500762939453

Token 85: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0015531904064118862
    2. '(' → logprob: -6.626553058624268
    3. ',int' → logprob: -10.001553535461426
    4. 'int' → logprob: -10.126553535461426
    5. '<int' → logprob: -10.126553535461426
    6. ']int' → logprob: -10.376553535461426
    7. ')' → logprob: -10.626553535461426
    8. '[int' → logprob: -11.251553535461426
    9. ' (' → logprob: -11.376553535461426
    10. '<|end|>' → logprob: -12.126553535461426

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1004350483417511
    2. ',input' → logprob: -2.3504350185394287
    3. 'input' → logprob: -8.600435256958008
    4. ' ,' → logprob: -10.475435256958008
    5. '(input' → logprob: -11.975435256958008
    6. '```' → logprob: -12.850435256958008
    7. ',int' → logprob: -13.225435256958008
    8. '   ' → logprob: -13.975435256958008
    9. '(' → logprob: -14.225435256958008
    10. ',(' → logprob: -14.475435256958008

Token 87: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4287149906158447
    2. 'input' → logprob: -1.0537149906158447
    3. ' ' → logprob: -12.553714752197266
    4. '	input' → logprob: -13.178714752197266
    5. ')' → logprob: -13.428714752197266
    6. '(input' → logprob: -13.553714752197266
    7. ',input' → logprob: -13.678714752197266
    8. '   ' → logprob: -14.178714752197266
    9. '    ' → logprob: -14.303714752197266
    10. 'in' → logprob: -14.741214752197266

Token 88: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.935296834039036e-06
    2. '()' → logprob: -12.87500286102295
    3. ' ().' → logprob: -16.000003814697266
    4. '(' → logprob: -16.750003814697266
    5. '.' → logprob: -16.750003814697266
    6. ' ' → logprob: -18.250003814697266
    7. '.readline' → logprob: -18.500003814697266
    8. '()
' → logprob: -18.500003814697266
    9. '   ' → logprob: -19.000003814697266
    10. ')' → logprob: -19.000003814697266

Token 89: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9266199160483666e-05
    2. 'strip' → logprob: -11.125019073486328
    3. ' split' → logprob: -12.625019073486328
    4. '(split' → logprob: -14.500019073486328
    5. 'rstrip' → logprob: -14.750019073486328
    6. ' ' → logprob: -16.875019073486328
    7. ')' → logprob: -17.125019073486328
    8. 'plit' → logprob: -17.875019073486328
    9. 'read' → logprob: -18.125019073486328
    10. '.split' → logprob: -18.125019073486328

Token 90: '()))' (ID: 16829)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3154858946800232
    2. '()))' → logprob: -1.315485954284668
    3. '()' → logprob: -6.190485954284668
    4. ' ))' → logprob: -10.065485954284668
    5. ')),' → logprob: -10.565485954284668
    6. '()))
' → logprob: -10.690485954284668
    7. ')' → logprob: -10.815485954284668
    8. ' ' → logprob: -11.315485954284668
    9. ')))' → logprob: -11.565485954284668
    10. '())' → logprob: -11.940485954284668

Token 91: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16144482791423798
    2. 'for' → logprob: -1.9114447832107544
    3. ')' → logprob: -7.411444664001465
    4. '       ' → logprob: -8.286444664001465
    5. ' ' → logprob: -9.536444664001465
    6. '        ' → logprob: -9.661444664001465
    7. '   ' → logprob: -9.786444664001465
    8. '           ' → logprob: -9.911444664001465
    9. '()' → logprob: -10.536444664001465
    10. '         ' → logprob: -10.661444664001465

Token 92: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.2039610892534256
    2. '_' → logprob: -2.078961133956909
    3. ' range' → logprob: -2.828961133956909
    4. 'range' → logprob: -8.578961372375488
    5. '_range' → logprob: -9.203961372375488
    6. ' ' → logprob: -9.703961372375488
    7. ' in' → logprob: -11.328961372375488
    8. ' i' → logprob: -11.953961372375488
    9. ' ' → logprob: -13.953961372375488
    10. ' xrange' → logprob: -13.953961372375488

Token 93: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1942417025566101
    2. ' in' → logprob: -2.069241762161255
    3. ' range' → logprob: -3.569241762161255
    4. 'in' → logprob: -3.819241762161255
    5. ' ' → logprob: -9.194241523742676
    6. '  ' → logprob: -10.694241523742676
    7. '	range' → logprob: -12.819241523742676
    8. 'N' → logprob: -13.194241523742676
    9. ')' → logprob: -13.694241523742676
    10. '   ' → logprob: -13.819241523742676

Token 94: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011773703154176474
    2. ' range' → logprob: -6.7511773109436035
    3. '   ' → logprob: -13.001177787780762
    4. ' ' → logprob: -13.251177787780762
    5. '  ' → logprob: -14.126177787780762
    6. '(range' → logprob: -14.251177787780762
    7. '	range' → logprob: -14.751177787780762
    8. '    ' → logprob: -14.876177787780762
    9. ')' → logprob: -15.876177787780762
    10. 'rang' → logprob: -16.001176834106445

Token 95: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -7.994086627149954e-05
    2. '(' → logprob: -9.500080108642578
    3. ' (' → logprob: -12.375080108642578
    4. 'N' → logprob: -14.750080108642578
    5. ' N' → logprob: -15.375080108642578
    6. '(n' → logprob: -15.750080108642578
    7. '(
' → logprob: -16.750080108642578
    8. '	N' → logprob: -17.750080108642578
    9. ' ' → logprob: -17.875080108642578
    10. '(int' → logprob: -18.500080108642578

Token 96: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0028978323098272085
    2. ']' → logprob: -6.1278977394104
    3. ')' → logprob: -7.2528977394104
    4. ')]
' → logprob: -13.377898216247559
    5. '       ' → logprob: -14.627898216247559
    6. ' ]' → logprob: -14.627898216247559
    7. ']
' → logprob: -14.877898216247559
    8. ' )' → logprob: -15.002898216247559
    9. '])' → logprob: -15.377898216247559
    10. ')])' → logprob: -15.502898216247559

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011307948443572968
    2. '
' → logprob: -9.375113487243652
    3. 'return' → logprob: -11.250113487243652
    4. '   ' → logprob: -12.000113487243652
    5. '        
' → logprob: -12.250113487243652
    6. ' return' → logprob: -13.000113487243652
    7. '<|end|>' → logprob: -13.750113487243652
    8. '      ' → logprob: -16.000112533569336
    9. '	' → logprob: -16.000112533569336
    10. '	return' → logprob: -16.125112533569336

Token 98: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4757689833641052
    2. 'return' (adapté à ' return') → logprob: -0.9757689833641052
    3. ' return' → logprob: -6.47576904296875
    4. '   ' → logprob: -9.22576904296875
    5. '
' → logprob: -10.47576904296875
    6. '	return' → logprob: -11.35076904296875
    7. ':return' → logprob: -12.47576904296875
    8. '{return' → logprob: -12.97576904296875
    9. '        
' → logprob: -13.35076904296875
    10. '<|end|>' → logprob: -13.72576904296875

Token 99: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03067205473780632
    2. ' N' → logprob: -3.530672073364258
    3. '(N' → logprob: -7.030672073364258
    4. ' (' → logprob: -10.405672073364258
    5. ' ' → logprob: -12.280672073364258
    6. '   ' → logprob: -13.530672073364258
    7. '(' → logprob: -14.905672073364258
    8. '	N' → logprob: -15.905672073364258
    9. '  ' → logprob: -16.030672073364258
    10. ' ' → logprob: -19.155672073364258

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00979681871831417
    2. ',W' → logprob: -4.884796619415283
    3. ' ,' → logprob: -6.134796619415283
    4. ',N' → logprob: -11.634797096252441
    5. '`,' → logprob: -12.134797096252441
    6. ',w' → logprob: -12.259797096252441
    7. 'W' → logprob: -14.634797096252441
    8. ',
' → logprob: -14.759797096252441
    9. '‌,' → logprob: -14.759797096252441
    10. ',K' → logprob: -15.384797096252441

Token 101: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.0019940626807510853
    2. 'W' → logprob: -6.2519941329956055
    3. ' ' → logprob: -10.001994132995605
    4. ' ' → logprob: -10.876994132995605
    5. ' ,' → logprob: -16.00199317932129
    6. ' 
' → logprob: -16.25199317932129
    7. '‌' → logprob: -16.25199317932129
    8. ' ‌' → logprob: -16.37699317932129
    9. ' '' → logprob: -16.50199317932129
    10. ' space' → logprob: -16.62699317932129

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004900033236481249
    2. ' ,' → logprob: -7.875490188598633
    3. 'items' → logprob: -9.375490188598633
    4. ' items' → logprob: -10.625490188598633
    5. '(items' → logprob: -15.125490188598633
    6. '	items' → logprob: -15.500490188598633
    7. '‌,' → logprob: -16.125490188598633
    8. '`,' → logprob: -16.625490188598633
    9. ',w' → logprob: -16.750490188598633
    10. '   ' → logprob: -16.750490188598633

Token 103: ' items' (ID: 4732)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.5759397745132446
    2. ' items' → logprob: -0.8259397745132446
    3. '	items' → logprob: -15.325940132141113
    4. '(items' → logprob: -16.075939178466797
    5. '.items' → logprob: -17.325939178466797
    6. '_items' → logprob: -17.450939178466797
    7. ' ' → logprob: -18.700939178466797
    8. '/items' → logprob: -19.325939178466797
    9. 'Items' → logprob: -19.450939178466797
    10. '-items' → logprob: -19.950939178466797

Token 104: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.635115385055542
    2. '<|end|>' → logprob: -0.760115385055542
    3. '<|end|>' → logprob: -7.010115623474121
    4. '

' → logprob: -7.135115623474121
    5. '```' → logprob: -8.010115623474121
    6. '\n' → logprob: -8.885115623474121
    7. '    
' → logprob: -9.510115623474121
    8. '#' → logprob: -9.885115623474121
    9. 'newline' → logprob: -9.885115623474121
    10. '' → logprob: -10.510115623474121

Token 105: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.728209376335144
    2. '<|end|>' → logprob: -0.728209376335144
    3. '```' → logprob: -3.8532094955444336
    4. 'class' → logprob: -5.603209495544434
    5. '\n' → logprob: -5.853209495544434
    6. '<|end|>' → logprob: -6.353209495544434
    7. '#' → logprob: -6.603209495544434
    8. ' ' → logprob: -7.228209495544434
    9. '  
' → logprob: -7.478209495544434
    10. '

' → logprob: -7.478209495544434

Token 106: ' Item' (ID: 9266)
  Prédit: ' Kn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Kn' → logprob: -1.0699429512023926
    2. ' Backpack' → logprob: -1.5699429512023926
    3. ' Solution' → logprob: -1.5699429512023926
    4. ' Output' → logprob: -2.6949429512023926
    5. ' Dynamic' → logprob: -3.3199429512023926
    6. ' Item' → logprob: -3.4449429512023926
    7. ' Weight' → logprob: -3.6949429512023926
    8. ' Back' → logprob: -4.194942951202393
    9. ' ' → logprob: -4.444942951202393
    10. ' Optimal' → logprob: -4.694942951202393

Token 107: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026347093284130096
    2. ':
' → logprob: -3.6513471603393555
    3. '():' → logprob: -11.401347160339355
    4. ':

' → logprob: -11.526347160339355
    5. '):' → logprob: -12.151347160339355
    6. '(' → logprob: -12.651347160339355
    7. 's' → logprob: -13.151347160339355
    8. 'Protocol' → logprob: -13.276347160339355
    9. '():
' → logprob: -13.276347160339355
    10. '<|end|>' → logprob: -13.276347160339355

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018009616760537028
    2. ':' → logprob: -6.876801013946533
    3. ' def' → logprob: -8.001800537109375
    4. 'def' → logprob: -8.001800537109375
    5. '   ' → logprob: -10.376800537109375
    6. '<|end|>' → logprob: -10.876800537109375
    7. ':
' → logprob: -11.126800537109375
    8. '):' → logprob: -12.001800537109375
    9. '):
' → logprob: -12.376800537109375
    10. '```' → logprob: -12.626800537109375

Token 109: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.3134804368019104
    2. 'def' (adapté à ' def') → logprob: -1.3134803771972656
    3. '   ' → logprob: -8.438480377197266
    4. '	def' → logprob: -13.438480377197266
    5. ' __' → logprob: -14.313480377197266
    6. '__' → logprob: -15.938480377197266
    7. '```' → logprob: -17.313480377197266
    8. 'int' → logprob: -18.063480377197266
    9. ' ' → logprob: -18.063480377197266
    10. '@dat' → logprob: -18.688480377197266

Token 110: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.02232072688639164
    2. 'init' → logprob: -4.772320747375488
    3. ' init' → logprob: -5.272320747375488
    4. '_init' → logprob: -5.272320747375488
    5. '__' → logprob: -5.772320747375488
    6. ' def' → logprob: -9.397320747375488
    7. ' _' → logprob: -9.897320747375488
    8. '```' → logprob: -10.522320747375488
    9. '_' → logprob: -11.147320747375488
    10. '`' → logprob: -11.272320747375488

Token 111: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -7.896309739408025e-07
    2. ' init' → logprob: -14.750000953674316
    3. 'ini' → logprob: -15.625000953674316
    4. 'inite' → logprob: -17.625
    5. 'int' → logprob: -17.75
    6. ' ' → logprob: -18.125
    7. '   ' → logprob: -18.25
    8. '  ' → logprob: -18.5
    9. '	init' → logprob: -18.625
    10. '```' → logprob: -18.625

Token 112: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0032983170822262764
    2. '__' → logprob: -6.003298282623291
    3. '(' → logprob: -8.00329875946045
    4. '__(
' → logprob: -8.25329875946045
    5. '(self' → logprob: -9.00329875946045
    6. '__((' → logprob: -9.50329875946045
    7. '__(*' → logprob: -12.00329875946045
    8. '_(' → logprob: -12.00329875946045
    9. '<|end|>' → logprob: -12.00329875946045
    10. '__('' → logprob: -12.62829875946045

Token 113: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.73446003627032e-05
    2. ' self' → logprob: -9.250097274780273
    3. ',' → logprob: -13.875097274780273
    4. ',self' → logprob: -16.250097274780273
    5. '   ' → logprob: -16.625097274780273
    6. '       ' → logprob: -17.500097274780273
    7. '	self' → logprob: -17.750097274780273
    8. ' ' → logprob: -18.000097274780273
    9. '(self' → logprob: -18.625097274780273
    10. '  ' → logprob: -19.375097274780273

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08044908195734024
    2. ' ,' → logprob: -2.955449104309082
    3. 'self' → logprob: -3.705449104309082
    4. ',self' → logprob: -7.955449104309082
    5. ' self' → logprob: -8.205449104309082
    6. '(self' → logprob: -11.455449104309082
    7. ',int' → logprob: -11.455449104309082
    8. '_,' → logprob: -13.205449104309082
    9. ' ' → logprob: -13.330449104309082
    10. ',s' → logprob: -13.580449104309082

Token 115: ' w' (ID: 286)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.224873349070549
    2. 'weight' → logprob: -1.7248733043670654
    3. 'value' → logprob: -4.3498735427856445
    4. ' self' → logprob: -5.4748735427856445
    5. ' weight' → logprob: -5.8498735427856445
    6. 'w' → logprob: -6.0998735427856445
    7. '   ' → logprob: -8.099873542785645
    8. ' value' → logprob: -8.474873542785645
    9. 'index' → logprob: -8.849873542785645
    10. 'size' → logprob: -9.349873542785645

Token 116: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018294280394911766
    2. 'eight' → logprob: -4.143294334411621
    3. 'e' → logprob: -6.393294334411621
    4. 'ight' → logprob: -8.268294334411621
    5. ',e' → logprob: -8.518294334411621
    6. 'ei' → logprob: -10.143294334411621
    7. ' ,' → logprob: -10.143294334411621
    8. 'idth' → logprob: -11.143294334411621
    9. ' eight' → logprob: -11.643294334411621
    10. '   ' → logprob: -12.018294334411621

Token 117: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.001936962129548192
    2. ' int' → logprob: -6.251936912536621
    3. ',' → logprob: -12.501936912536621
    4. ':int' → logprob: -13.001936912536621
    5. ' ' → logprob: -13.876936912536621
    6. ',int' → logprob: -15.001936912536621
    7. ')' → logprob: -15.376936912536621
    8. '   ' → logprob: -15.626936912536621
    9. '[int' → logprob: -15.626936912536621
    10. '  ' → logprob: -16.001937866210938

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007137430948205292
    2. ' ,' → logprob: -7.25071382522583
    3. ',w' → logprob: -13.375713348388672
    4. ',int' → logprob: -13.500713348388672
    5. '   ' → logprob: -14.875713348388672
    6. '‌,' → logprob: -15.000713348388672
    7. 'w' → logprob: -17.125713348388672
    8. ')' → logprob: -17.125713348388672
    9. ' ' → logprob: -17.625713348388672
    10. ',n' → logprob: -18.125713348388672

Token 119: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.08903969824314117
    2. ' v' → logprob: -2.4640398025512695
    3. '   ' → logprob: -9.83903980255127
    4. ' ' → logprob: -11.21403980255127
    5. 'p' → logprob: -11.96403980255127
    6. 'value' → logprob: -12.46403980255127
    7. 'c' → logprob: -12.83903980255127
    8. ' p' → logprob: -12.96403980255127
    9. '           ' → logprob: -13.21403980255127
    10. '    ' → logprob: -13.46403980255127

Token 120: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010338276624679565
    2. ':int' → logprob: -4.635338306427002
    3. '):' → logprob: -7.885338306427002
    4. 'alue' → logprob: -9.135337829589844
    5. ')' → logprob: -10.135337829589844
    6. 'al' → logprob: -10.760337829589844
    7. ' :' → logprob: -10.885337829589844
    8. ',' → logprob: -11.635337829589844
    9. '):
' → logprob: -13.135337829589844
    10. ' ):' → logprob: -13.260337829589844

Token 121: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0040823169983923435
    2. ' int' → logprob: -5.504082202911377
    3. ')' → logprob: -12.879082679748535
    4. ':int' → logprob: -15.004082679748535
    5. '[int' → logprob: -15.254082679748535
    6. '<int' → logprob: -15.504082679748535
    7. ']int' → logprob: -16.00408172607422
    8. '	int' → logprob: -16.00408172607422
    9. '=int' → logprob: -16.12908172607422
    10. '<|end|>' → logprob: -16.25408172607422

Token 122: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0413614958524704
    2. ')' → logprob: -3.2913615703582764
    3. '):
' → logprob: -5.791361331939697
    4. ':' → logprob: -9.041361808776855
    5. ',' → logprob: -9.916361808776855
    6. '):
' → logprob: -10.291361808776855
    7. ' ):' → logprob: -10.291361808776855
    8. ')->' → logprob: -11.916361808776855
    9. '   ' → logprob: -12.166361808776855
    10. ' )' → logprob: -12.291361808776855

Token 123: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01894953101873398
    2. '):' → logprob: -4.018949508666992
    3. ')' → logprob: -7.643949508666992
    4. ',' → logprob: -8.643949508666992
    5. ':
' → logprob: -10.143949508666992
    6. '   ' → logprob: -10.518949508666992
    7. '->' → logprob: -10.768949508666992
    8. ' ->' → logprob: -11.018949508666992
    9. '):
' → logprob: -11.018949508666992
    10. '       ' → logprob: -12.018949508666992

Token 124: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.47407716512680054
    2. ' None' → logprob: -0.9740771651268005
    3. '_None' → logprob: -16.099077224731445
    4. ' ' → logprob: -17.349077224731445
    5. '=None' → logprob: -17.349077224731445
    6. 'none' → logprob: -17.974077224731445
    7. ' ' → logprob: -18.099077224731445
    8. '(None' → logprob: -18.599077224731445
    9. ',None' → logprob: -18.849077224731445
    10. '   ' → logprob: -18.849077224731445

Token 125: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00023274161503650248
    2. ':
' → logprob: -8.500232696533203
    3. '):' → logprob: -10.625232696533203
    4. ',' → logprob: -13.250232696533203
    5. '   ' → logprob: -13.750232696533203
    6. '       ' → logprob: -14.375232696533203
    7. ')' → logprob: -15.000232696533203
    8. '):
' → logprob: -15.125232696533203
    9. ' :' → logprob: -15.500232696533203
    10. ':void' → logprob: -15.875232696533203

Token 126: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002600245934445411
    2. '   ' → logprob: -8.750260353088379
    3. '<|end|>' → logprob: -9.875260353088379
    4. '    ' → logprob: -11.000260353088379
    5. '      ' → logprob: -11.500260353088379
    6. ' ' → logprob: -11.625260353088379
    7. '     ' → logprob: -12.875260353088379
    8. ',' → logprob: -13.125260353088379
    9. 'self' → logprob: -13.125260353088379
    10. ' self' → logprob: -13.250260353088379

Token 127: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24642112851142883
    2. ' self' → logprob: -1.9964210987091064
    3. 'self' (adapté à ' self') → logprob: -2.4964210987091064
    4. '   ' → logprob: -8.996420860290527
    5. ' ' → logprob: -10.246420860290527
    6. ' ' → logprob: -10.371420860290527
    7. '	self' → logprob: -12.621420860290527
    8. '     ' → logprob: -12.996420860290527
    9. '    ' → logprob: -12.996420860290527
    10. '      ' → logprob: -12.996420860290527

Token 128: '.w' (ID: 2234)
  Prédit: '.w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.w' → logprob: -0.3104879856109619
    2. '.' → logprob: -1.685487985610962
    3. '.weight' → logprob: -2.560487985610962
    4. '.we' → logprob: -5.935487747192383
    5. '.weights' → logprob: -6.810487747192383
    6. ' .' → logprob: -8.060487747192383
    7. '.width' → logprob: -10.185487747192383
    8. 'weight' → logprob: -10.810487747192383
    9. '.value' → logprob: -10.935487747192383
    10. '.wp' → logprob: -11.060487747192383

Token 129: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23550979793071747
    2. ' =' → logprob: -1.6105097532272339
    3. ',' → logprob: -4.610509872436523
    4. ' ,' → logprob: -9.860509872436523
    5. ' ' → logprob: -10.610509872436523
    6. '=int' → logprob: -12.485509872436523
    7. '=w' → logprob: -12.485509872436523
    8. '<|end|>' → logprob: -12.610509872436523
    9. ' w' → logprob: -12.860509872436523
    10. ')' → logprob: -12.985509872436523

Token 130: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.3868713676929474
    2. ' w' → logprob: -1.136871337890625
    3. '	w' → logprob: -14.886871337890625
    4. '_w' → logprob: -17.136871337890625
    5. ' ' → logprob: -17.261871337890625
    6. ' ' → logprob: -17.261871337890625
    7. '=w' → logprob: -18.636871337890625
    8. '​' → logprob: -19.136871337890625
    9. '<w' → logprob: -19.386871337890625
    10. '?w' → logprob: -19.511871337890625

Token 131: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04594863951206207
    2. '<|end|>' → logprob: -4.170948505401611
    3. '
' → logprob: -4.295948505401611
    4. ',' → logprob: -5.045948505401611
    5. ' ' → logprob: -5.170948505401611
    6. 'v' → logprob: -7.045948505401611
    7. '        ' → logprob: -7.295948505401611
    8. '        
' → logprob: -7.420948505401611
    9. ' 
' → logprob: -7.670948505401611
    10. ',v' → logprob: -8.42094898223877

Token 132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027014965191483498
    2. 'self' → logprob: -3.652014970779419
    3. ' self' → logprob: -7.65201473236084
    4. '
' → logprob: -9.40201473236084
    5. 'v' → logprob: -9.52701473236084
    6. ',' → logprob: -9.65201473236084
    7. ' ' → logprob: -11.77701473236084
    8. '   ' → logprob: -13.02701473236084
    9. ',self' → logprob: -13.27701473236084
    10. '      ' → logprob: -13.90201473236084

Token 133: ' self' (ID: 1051)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.10082493722438812
    2. 'self' (adapté à ' self') → logprob: -2.3508248329162598
    3. ' v' → logprob: -8.100825309753418
    4. ' self' → logprob: -8.225825309753418
    5. '       ' → logprob: -9.975825309753418
    6. '
' → logprob: -14.850825309753418
    7. '   ' → logprob: -15.475825309753418
    8. '	v' → logprob: -16.8508243560791
    9. ' ' → logprob: -17.7258243560791
    10. 'value' → logprob: -17.8508243560791

Token 134: '.v' (ID: 5520)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7369110584259033
    2. '.w' → logprob: -0.9869110584259033
    3. '.v' → logprob: -1.9869110584259033
    4. 'w' → logprob: -5.236910820007324
    5. 'v' → logprob: -6.486910820007324
    6. ' .' → logprob: -6.736910820007324
    7. ',' → logprob: -7.611910820007324
    8. ' ' → logprob: -7.861910820007324
    9. ' =' → logprob: -7.861910820007324
    10. '=' → logprob: -7.861910820007324

Token 135: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5777869820594788
    2. ' =' → logprob: -0.8277869820594788
    3. '<|end|>' → logprob: -6.452786922454834
    4. ' ' → logprob: -8.327787399291992
    5. '<|end|>' → logprob: -12.077787399291992
    6. ',' → logprob: -12.202787399291992
    7. '=v' → logprob: -12.202787399291992
    8. '=value' → logprob: -12.577787399291992
    9. ' ' → logprob: -13.577787399291992
    10. ')' → logprob: -13.702787399291992

Token 136: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.20141597092151642
    2. ' v' → logprob: -1.701416015625
    3. '<|end|>' → logprob: -14.201416015625
    4. ' ' → logprob: -14.451416015625
    5. 'value' → logprob: -14.576416015625
    6. '	v' → logprob: -14.951416015625
    7. ' ' → logprob: -14.951416015625
    8. ')v' → logprob: -16.701416015625
    9. '
' → logprob: -16.951416015625
    10. '_v' → logprob: -17.076416015625

Token 137: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 138: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.266732782125473
    2. '<|end|>' → logprob: -1.5167328119277954
    3. '   ' → logprob: -4.891732692718506
    4. 'class' → logprob: -6.016732692718506
    5. '<|end|>' → logprob: -6.266732692718506
    6. 'def' → logprob: -6.391732692718506
    7. '

' → logprob: -7.641732692718506
    8. '    
' → logprob: -8.266733169555664
    9. '```' → logprob: -9.141733169555664
    10. '  
' → logprob: -9.891733169555664

Token 139: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 140: '.r' (ID: 2951)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5217210650444031
    2. '.value' → logprob: -1.0217211246490479
    3. '.weight' → logprob: -3.521721124649048
    4. '.w' → logprob: -6.146720886230469
    5. '.next' → logprob: -6.146720886230469
    6. '.val' → logprob: -6.271720886230469
    7. '.rank' → logprob: -7.146720886230469
    8. '.v' → logprob: -7.396720886230469
    9. ' =' → logprob: -7.396720886230469
    10. '.valid' → logprob: -7.646720886230469

Token 141: 'atio' (ID: 15017)
  Prédit: 'atio'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atio' → logprob: -0.0014917691005393863
    2. 'ate' → logprob: -6.876491546630859
    3. 'aito' → logprob: -9.12649154663086
    4. 'ation' → logprob: -9.50149154663086
    5. 'a' → logprob: -9.87649154663086
    6. 'ati' → logprob: -10.12649154663086
    7. 'at' → logprob: -10.50149154663086
    8. 'ATIO' → logprob: -10.87649154663086
    9. '=' → logprob: -11.00149154663086
    10. '   ' → logprob: -11.50149154663086

Token 142: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994854658842087
    2. '=' → logprob: -2.694948434829712
    3. ' ' → logprob: -11.694948196411133
    4. '<|end|>' → logprob: -12.819948196411133
    5. '  ' → logprob: -15.694948196411133
    6. 's' → logprob: -15.694948196411133
    7. '=self' → logprob: -15.819948196411133
    8. '=int' → logprob: -15.819948196411133
    9. ':' → logprob: -16.194948196411133
    10. ')' → logprob: -16.444948196411133

Token 143: ' self' (ID: 1051)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.06198303773999214
    2. ' v' → logprob: -2.811983108520508
    3. 'self' → logprob: -11.686983108520508
    4. ' self' → logprob: -12.311983108520508
    5. ' ' → logprob: -13.686983108520508
    6. '	v' → logprob: -14.436983108520508
    7. ' ' → logprob: -15.561983108520508
    8. '   ' → logprob: -16.436983108520508
    9. '(v' → logprob: -16.436983108520508
    10. '$v' → logprob: -16.561983108520508

Token 144: '._' (ID: 2697)
  Prédit: '.v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -2.2007883671903983e-05
    2. '.' → logprob: -10.875021934509277
    3. 'v' → logprob: -13.500021934509277
    4. ' .' → logprob: -13.750021934509277
    5. '.w' → logprob: -15.500021934509277
    6. '```' → logprob: -16.250022888183594
    7. '.value' → logprob: -16.750022888183594
    8. '	v' → logprob: -16.875022888183594
    9. '._' → logprob: -17.000022888183594
    10. '<v' → logprob: -17.625022888183594

Token 145: 'compute' (ID: 54521)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0034671444445848465
    2. 'value' → logprob: -5.878467082977295
    3. ' v' → logprob: -7.628467082977295
    4. 'atio' → logprob: -9.253467559814453
    5. 'calculate' → logprob: -10.378467559814453
    6. 'ratio' → logprob: -10.753467559814453
    7. 'compute' → logprob: -12.378467559814453
    8. 'w' → logprob: -12.503467559814453
    9. 'val' → logprob: -12.503467559814453
    10. '_v' → logprob: -13.253467559814453

Token 146: '_ratio' (ID: 45680)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.03337111324071884
    2. 'value' → logprob: -4.0333709716796875
    3. '_v' → logprob: -5.2833709716796875
    4. '_ratio' → logprob: -5.5333709716796875
    5. 'v' → logprob: -5.6583709716796875
    6. '_' → logprob: -7.7833709716796875
    7. 'w' → logprob: -8.158370971679688
    8. '()' → logprob: -8.283370971679688
    9. ' value' → logprob: -8.658370971679688
    10. '_w' → logprob: -8.658370971679688

Token 147: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.017567262053489685
    2. '(w' → logprob: -4.142567157745361
    3. '(' → logprob: -6.517567157745361
    4. '()
' → logprob: -11.51756763458252
    5. ' ()' → logprob: -11.89256763458252
    6. '()/' → logprob: -12.01756763458252
    7. '()(' → logprob: -12.14256763458252
    8. 'w' → logprob: -12.39256763458252
    9. '()*' → logprob: -12.39256763458252
    10. '(),' → logprob: -12.76756763458252

Token 148: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5399221181869507
    2. '    
' → logprob: -1.5399221181869507
    3. '
' → logprob: -1.7899221181869507
    4. 'def' → logprob: -3.7899222373962402
    5. '<|end|>' → logprob: -5.53992223739624
    6. '  
' → logprob: -5.66492223739624
    7. ' 
' → logprob: -6.41492223739624
    8. ' def' → logprob: -6.53992223739624
    9. '        
' → logprob: -7.03992223739624
    10. '   
' → logprob: -7.53992223739624

Token 149: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7180461287498474
    2. 'def' → logprob: -1.2180461883544922
    3. '   ' → logprob: -1.5930461883544922
    4. ' def' → logprob: -4.468046188354492
    5. '    
' → logprob: -6.718046188354492
    6. '	def' → logprob: -9.218046188354492
    7. ' ' → logprob: -9.343046188354492
    8. '

' → logprob: -9.593046188354492
    9. '  
' → logprob: -9.593046188354492
    10. '<|end|>' → logprob: -9.843046188354492

Token 150: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0007559045334346592
    2. ' def' → logprob: -7.250755786895752
    3. '   ' → logprob: -10.00075626373291
    4. '
' → logprob: -15.25075626373291
    5. ' ' → logprob: -16.000755310058594
    6. '	def' → logprob: -16.000755310058594
    7. '    
' → logprob: -16.375755310058594
    8. '  ' → logprob: -18.375755310058594
    9. '_def' → logprob: -19.375755310058594
    10. '

' → logprob: -19.625755310058594

Token 151: ' _' (ID: 1175)
  Prédit: '_compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_compute' → logprob: -0.00020652047533076257
    2. ' _' → logprob: -8.50020694732666
    3. '_' → logprob: -13.87520694732666
    4. '_com' → logprob: -14.50020694732666
    5. '   ' → logprob: -15.75020694732666
    6. 'def' → logprob: -15.87520694732666
    7. '_copy' → logprob: -16.000205993652344
    8. ' ' → logprob: -16.000205993652344
    9. '_define' → logprob: -16.125205993652344
    10. '_create' → logprob: -16.500205993652344

Token 152: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -1.759734732331708e-05
    2. '_compute' → logprob: -11.500017166137695
    3. ' compute' → logprob: -11.875017166137695
    4. '.compute' → logprob: -15.125017166137695
    5. ' ' → logprob: -16.375017166137695
    6. 'calculate' → logprob: -17.375017166137695
    7. '```' → logprob: -17.500017166137695
    8. 'comput' → logprob: -17.625017166137695
    9. '  ' → logprob: -18.250017166137695
    10. '   ' → logprob: -19.000017166137695

Token 153: '_ratio' (ID: 45680)
  Prédit: '_ratio'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ratio' → logprob: -5.512236498361744e-07
    2. 'ratio' → logprob: -15.125000953674316
    3. '_' → logprob: -15.750000953674316
    4. '_rat' → logprob: -15.750000953674316
    5. '_r' → logprob: -17.75
    6. '_RATIO' → logprob: -18.125
    7. '_factor' → logprob: -19.125
    8. '_rate' → logprob: -19.875
    9. ' _' → logprob: -19.875
    10. '_value' → logprob: -20.25

Token 154: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00023691373644396663
    2. '(' → logprob: -8.375236511230469
    3. 'self' → logprob: -12.375236511230469
    4. '(
' → logprob: -14.125236511230469
    5. ' (' → logprob: -14.375236511230469
    6. ' self' → logprob: -15.875236511230469
    7. '()' → logprob: -15.875236511230469
    8. '   ' → logprob: -16.12523651123047
    9. '	self' → logprob: -16.50023651123047
    10. '(s' → logprob: -16.75023651123047

Token 155: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.033073022961616516
    2. ')' → logprob: -3.5330729484558105
    3. '):
' → logprob: -5.7830729484558105
    4. '():' → logprob: -9.408073425292969
    5. ' ):' → logprob: -9.908073425292969
    6. ')->' → logprob: -10.033073425292969
    7. '()' → logprob: -10.908073425292969
    8. '   ' → logprob: -11.158073425292969
    9. ':' → logprob: -11.783073425292969
    10. 'self' → logprob: -12.033073425292969

Token 156: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.6406947374343872
    2. ':' → logprob: -0.7656947374343872
    3. ' ->' → logprob: -5.015694618225098
    4. '(self' → logprob: -8.140694618225098
    5. '()->' → logprob: -8.390694618225098
    6. ')' → logprob: -8.515694618225098
    7. '():' → logprob: -8.515694618225098
    8. ')->' → logprob: -8.640694618225098
    9. '(' → logprob: -9.515694618225098
    10. '=' → logprob: -10.015694618225098

Token 157: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.020549945533275604
    2. ' float' → logprob: -3.895550012588501
    3. 'int' → logprob: -12.020549774169922
    4. 'flo' → logprob: -13.895549774169922
    5. '   ' → logprob: -15.020549774169922
    6. ' ' → logprob: -15.270549774169922
    7. '(float' → logprob: -15.395549774169922
    8. '	float' → logprob: -15.645549774169922
    9. ' int' → logprob: -16.520549774169922
    10. 'fl' → logprob: -16.520549774169922

Token 158: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015171191189438105
    2. ':
' → logprob: -6.501517295837402
    3. '):' → logprob: -12.501517295837402
    4. ':return' → logprob: -12.751517295837402
    5. '       ' → logprob: -12.876517295837402
    6. '->' → logprob: -13.001517295837402
    7. '():' → logprob: -14.251517295837402
    8. ':
' → logprob: -14.501517295837402
    9. '   ' → logprob: -14.501517295837402
    10. ' :' → logprob: -14.626517295837402

Token 159: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006529859383590519
    2. 'return' → logprob: -7.87565279006958
    3. ' if' → logprob: -9.000653266906738
    4. ' return' → logprob: -9.000653266906738
    5. 'if' → logprob: -10.625653266906738
    6. '   ' → logprob: -13.875653266906738
    7. '           ' → logprob: -15.625653266906738
    8. '```' → logprob: -15.625653266906738
    9. '
' → logprob: -15.750653266906738
    10. '        
' → logprob: -16.625652313232422

Token 160: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.051295649260282516
    2. '       ' → logprob: -3.801295757293701
    3. ' return' → logprob: -3.801295757293701
    4. 'if' → logprob: -5.301295757293701
    5. ' if' → logprob: -8.176295280456543
    6. 'self' → logprob: -9.926295280456543
    7. ' self' → logprob: -12.926295280456543
    8. '0' → logprob: -15.176295280456543
    9. '   ' → logprob: -15.676295280456543
    10. 'try' → logprob: -16.55129623413086

Token 161: ' handle' (ID: 5318)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03977058455348015
    2. 'if' → logprob: -3.2897706031799316
    3. '       ' → logprob: -6.539770603179932
    4. ' return' → logprob: -8.289770126342773
    5. ' if' → logprob: -10.414770126342773
    6. '#' → logprob: -14.164770126342773
    7. '   ' → logprob: -14.914770126342773
    8. 'try' → logprob: -15.039770126342773
    9. '```' → logprob: -15.414770126342773
    10. 'Return' → logprob: -16.789770126342773

Token 162: ' zero' (ID: 12421)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.726273238658905
    2. 'self' → logprob: -0.726273238658905
    3. '       ' → logprob: -4.476273059844971
    4. ' division' → logprob: -4.476273059844971
    5. 'div' → logprob: -5.601273059844971
    6. '0' → logprob: -6.226273059844971
    7. 'if' → logprob: -6.726273059844971
    8. ' if' → logprob: -6.976273059844971
    9. ' zero' → logprob: -6.976273059844971
    10. 'division' → logprob: -7.726273059844971

Token 163: ' weight' (ID: 6049)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07316507399082184
    2. ' division' → logprob: -3.44816517829895
    3. 'if' → logprob: -3.57316517829895
    4. 'division' → logprob: -4.823164939880371
    5. 'div' → logprob: -7.073164939880371
    6. '       ' → logprob: -7.198164939880371
    7. 'weight' → logprob: -8.573164939880371
    8. ' weight' → logprob: -8.698164939880371
    9. ' denominator' → logprob: -9.198164939880371
    10. '-' → logprob: -9.323164939880371

Token 164: ' case' (ID: 1890)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18067334592342377
    2. ' if' → logprob: -1.930673360824585
    3. 'if' → logprob: -3.930673360824585
    4. ',' → logprob: -8.680673599243164
    5. ':' → logprob: -9.180673599243164
    6. 'return' → logprob: -9.305673599243164
    7. '
' → logprob: -9.555673599243164
    8. '<|end|>' → logprob: -9.680673599243164
    9. ' or' → logprob: -10.680673599243164
    10. ' and' → logprob: -10.805673599243164

Token 165: ' safely' (ID: 29018)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027413465082645416
    2. ' if' → logprob: -3.7774133682250977
    3. 'if' → logprob: -5.527413368225098
    4. 'return' → logprob: -9.527413368225098
    5. ',' → logprob: -10.402413368225098
    6. ':' → logprob: -10.652413368225098
    7. '<|end|>' → logprob: -10.652413368225098
    8. '
' → logprob: -11.902413368225098
    9. '        
' → logprob: -12.402413368225098
    10. '   ' → logprob: -12.652413368225098

Token 166: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02275990881025791
    2. ' if' → logprob: -4.272759914398193
    3. 'if' → logprob: -4.772759914398193
    4. 'return' → logprob: -10.272759437561035
    5. '
' → logprob: -10.772759437561035
    6. ',' → logprob: -11.397759437561035
    7. ':' → logprob: -11.397759437561035
    8. '<|end|>' → logprob: -11.522759437561035
    9. ':
' → logprob: -12.772759437561035
    10. '        
' → logprob: -12.897759437561035

Token 167: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05367807671427727
    2. ' if' → logprob: -3.053678035736084
    3. ' return' → logprob: -5.928678035736084
    4. 'return' → logprob: -6.303678035736084
    5. 'if' → logprob: -7.803678035736084
    6. '           ' → logprob: -9.678678512573242
    7. '        ' → logprob: -10.303678512573242
    8. ':return' → logprob: -11.178678512573242
    9. ' try' → logprob: -11.928678512573242
    10. ' ' → logprob: -11.928678512573242

Token 168: ' problem' (ID: 4792)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2794516682624817
    2. ' if' → logprob: -1.529451608657837
    3. 'return' → logprob: -4.029451847076416
    4. '       ' → logprob: -5.154451847076416
    5. ' return' → logprob: -5.654451847076416
    6. '0' → logprob: -10.654451370239258
    7. '        ' → logprob: -11.654451370239258
    8. '
' → logprob: -12.029451370239258
    9. '           ' → logprob: -12.279451370239258
    10. 'self' → logprob: -12.279451370239258

Token 169: ' states' (ID: 9407)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 170: ' |' (ID: 1022)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.15598571300506592
    2. 'weight' → logprob: -2.6559858322143555
    3. 'self' → logprob: -3.2809858322143555
    4. '       ' → logprob: -4.2809858322143555
    5. 'weights' → logprob: -4.2809858322143555
    6. 'that' → logprob: -4.9059858322143555
    7. ' w' → logprob: -7.7809858322143555
    8. ' weight' → logprob: -7.9059858322143555
    9. ' that' → logprob: -8.530985832214355
    10. ' weights' → logprob: -8.905985832214355

Token 171: 'w' (ID: 86)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0065830969251692295
    2. 'w' → logprob: -5.131583213806152
    3. ' self' → logprob: -7.381583213806152
    4. '       ' → logprob: -11.381583213806152
    5. '   ' → logprob: -11.881583213806152
    6. 'weight' → logprob: -12.631583213806152
    7. ' w' → logprob: -12.756583213806152
    8. '0' → logprob: -13.131583213806152
    9. 'the' → logprob: -13.756583213806152
    10. 'W' → logprob: -14.006583213806152

Token 172: '_i' (ID: 10853)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.15043905377388
    2. ' >' → logprob: -2.0254390239715576
    3. ' !=' → logprob: -6.275439262390137
    4. '!=' → logprob: -6.525439262390137
    5. '==' → logprob: -6.900439262390137
    6. 'w' → logprob: -7.400439262390137
    7. ')>' → logprob: -7.650439262390137
    8. 't' → logprob: -7.650439262390137
    9. '   ' → logprob: -8.150439262390137
    10. ' ' → logprob: -8.275439262390137

Token 173: '|' (ID: 91)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2954312562942505
    2. '|' → logprob: -1.7954312562942505
    3. ' >' → logprob: -2.795431137084961
    4. ' !=' → logprob: -4.295431137084961
    5. '!=' → logprob: -4.545431137084961
    6. ')>' → logprob: -6.420431137084961
    7. '==' → logprob: -7.170431137084961
    8. ')' → logprob: -8.045431137084961
    9. 'w' → logprob: -8.295431137084961
    10. 's' → logprob: -8.545431137084961

Token 174: '<=' (ID: 16672)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -1.0268796682357788
    2. '>' → logprob: -1.5268796682357788
    3. ' ==' → logprob: -1.6518796682357788
    4. '       ' → logprob: -2.1518797874450684
    5. ' >' → logprob: -2.9018797874450684
    6. ' if' → logprob: -3.4018797874450684
    7. ' and' → logprob: -4.526879787445068
    8. 'if' → logprob: -5.526879787445068
    9. '   ' → logprob: -5.526879787445068
    10. ' !=' → logprob: -6.151879787445068

Token 175: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2970491647720337
    2. '0' → logprob: -1.5470491647720337
    3. '100' → logprob: -3.422049045562744
    4. '1' → logprob: -4.797049045562744
    5. ' ' → logprob: -5.797049045562744
    6. 'W' → logprob: -10.422049522399902
    7. '
' → logprob: -10.672049522399902
    8. 'w' → logprob: -10.922049522399902
    9. '2' → logprob: -10.922049522399902
    10. 'int' → logprob: -10.922049522399902

Token 176: '^' (ID: 61)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5685334801673889
    2. '0' → logprob: -1.8185334205627441
    3. '**' → logprob: -1.8185334205627441
    4. '1' → logprob: -3.443533420562744
    5. '-' → logprob: -3.693533420562744
    6. '000' → logprob: -4.568533420562744
    7. ' ' → logprob: -4.693533420562744
    8. '^' → logprob: -5.318533420562744
    9. '^-' → logprob: -5.443533420562744
    10. '7' → logprob: -5.568533420562744

Token 177: '4' (ID: 19)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0696987509727478
    2. '6' → logprob: -3.0696988105773926
    3. '7' → logprob: -3.9446988105773926
    4. '5' → logprob: -6.819698810577393
    5. '8' → logprob: -8.069698333740234
    6. '```' → logprob: -10.069698333740234
    7. '18' → logprob: -10.944698333740234
    8. '10' → logprob: -11.069698333740234
    9. '4' → logprob: -11.569698333740234
    10. '**' → logprob: -11.694698333740234

Token 178: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11110694706439972
    2. ' if' → logprob: -2.3611068725585938
    3. 'if' → logprob: -4.736106872558594
    4. ',' → logprob: -6.861106872558594
    5. 'return' → logprob: -7.236106872558594
    6. '<|end|>' → logprob: -8.986106872558594
    7. ' return' → logprob: -9.486106872558594
    8. ' and' → logprob: -11.111106872558594
    9. '
' → logprob: -11.361106872558594
    10. ':' → logprob: -11.361106872558594

Token 179: ' all' (ID: 722)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.000871082826051861
    2. ' w' → logprob: -7.250871181488037
    3. 'wi' → logprob: -10.250870704650879
    4. '1' → logprob: -10.500870704650879
    5. 'W' → logprob: -10.875870704650879
    6. 'self' → logprob: -10.875870704650879
    7. '0' → logprob: -11.125870704650879
    8. 'v' → logprob: -11.875870704650879
    9. 'items' → logprob: -11.875870704650879
    10. 'weights' → logprob: -12.500870704650879

Token 180: ' integers' (ID: 54912)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7322430610656738
    2. 'w' → logprob: -0.8572430610656738
    3. ' self' → logprob: -2.982243061065674
    4. 'weights' → logprob: -4.107243061065674
    5. ' weights' → logprob: -4.232243061065674
    6. ' w' → logprob: -4.357243061065674
    7. 's' → logprob: -9.357242584228516
    8. '       ' → logprob: -9.607242584228516
    9. '   ' → logprob: -10.232242584228516
    10. ' items' → logprob: -10.607242584228516

Token 181: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047403089702129364
    2. ' if' → logprob: -3.17240309715271
    3. 'if' → logprob: -5.797402858734131
    4. '<|end|>' → logprob: -7.547402858734131
    5. ',' → logprob: -7.922402858734131
    6. ':' → logprob: -8.547403335571289
    7. '
' → logprob: -9.797403335571289
    8. ':
' → logprob: -9.922403335571289
    9. '   ' → logprob: -10.172403335571289
    10. 'return' → logprob: -10.672403335571289

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01134759932756424
    2. ' if' → logprob: -4.636347770690918
    3. 'if' → logprob: -7.011347770690918
    4. '<|end|>' → logprob: -7.761347770690918
    5. ':' → logprob: -9.261347770690918
    6. ',' → logprob: -9.761347770690918
    7. '   ' → logprob: -10.386347770690918
    8. 'return' → logprob: -11.136347770690918
    9. ')' → logprob: -12.136347770690918
    10. '
' → logprob: -12.136347770690918

Token 183: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3287397623062134
    2. 'if' (adapté à ' if') → logprob: -1.3287397623062134
    3. ' if' → logprob: -5.078739643096924
    4. '       ' → logprob: -5.328739643096924
    5. ' return' → logprob: -5.453739643096924
    6. ':return' → logprob: -15.078740119934082
    7. '```' → logprob: -16.578739166259766
    8. '{return' → logprob: -16.703739166259766
    9. '	return' → logprob: -16.828739166259766
    10. 'try' → logprob: -16.953739166259766

Token 184: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02975349873304367
    2. ' self' → logprob: -3.5297534465789795
    3. '       ' → logprob: -13.029753684997559
    4. '(self' → logprob: -14.279753684997559
    5. '   ' → logprob: -16.654752731323242
    6. '	self' → logprob: -17.404752731323242
    7. '           ' → logprob: -18.029752731323242
    8. '    ' → logprob: -18.279752731323242
    9. '
' → logprob: -18.529752731323242
    10. '[self' → logprob: -18.779752731323242

Token 185: '.w' (ID: 2234)
  Prédit: '.w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.w' → logprob: -0.00022439735766965896
    2. '.' → logprob: -8.500224113464355
    3. 'w' → logprob: -11.125224113464355
    4. 'weight' → logprob: -12.875224113464355
    5. '	w' → logprob: -14.625224113464355
    6. 'weights' → logprob: -14.625224113464355
    7. ' .' → logprob: -14.750224113464355
    8. 'self' → logprob: -15.125224113464355
    9. '.weight' → logprob: -15.375224113464355

Token 186: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10024213790893555
    2. '==' → logprob: -2.3502421379089355
    3. ' >' → logprob: -11.100242614746094
    4. '>' → logprob: -11.225242614746094
    5. ' <=' → logprob: -12.725242614746094
    6. '<=' → logprob: -13.850242614746094
    7. ' !=' → logprob: -13.850242614746094
    8. '=' → logprob: -14.350242614746094
    9. ' ' → logprob: -15.100242614746094
    10. '0' → logprob: -15.100242614746094

Token 187: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005530327325686812
    2. ' ' → logprob: -7.500553131103516
    3. '۰' → logprob: -19.000553131103516
    4. '  ' → logprob: -19.125553131103516
    5. ' ' → logprob: -19.250553131103516
    6. '   ' → logprob: -19.250553131103516
    7. 'zero' → logprob: -19.375553131103516
    8. '```' → logprob: -19.875553131103516
    9. '=' → logprob: -20.063053131103516
    10. '00' → logprob: -20.250553131103516

Token 188: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '۰' → logprob: -17.750085830688477
    4. 'zero' → logprob: -18.125085830688477
    5. '=' → logprob: -18.250085830688477
    6. '  ' → logprob: -18.562585830688477
    7. '   ' → logprob: -19.187585830688477
    8. '```' → logprob: -19.187585830688477
    9. '
' → logprob: -19.250085830688477
    10. '00' → logprob: -19.312585830688477

Token 189: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4748385548591614
    2. ':
' → logprob: -0.9748385548591614
    3. ':return' → logprob: -7.224838733673096
    4. '           ' → logprob: -11.474838256835938
    5. ':
' → logprob: -11.849838256835938
    6. ' :
' → logprob: -12.224838256835938
    7. ' :' → logprob: -12.599838256835938
    8. ':

' → logprob: -12.974838256835938
    9. '       ' → logprob: -13.099838256835938
    10. '):
' → logprob: -14.349838256835938

Token 190: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1361059844493866
    2. 'return' → logprob: -2.386106014251709
    3. ' return' → logprob: -4.011106014251709
    4. '0' → logprob: -4.136106014251709
    5. '       ' → logprob: -7.011106014251709
    6. ' ' → logprob: -9.26110553741455
    7. '	       ' → logprob: -10.13610553741455
    8. 'float' → logprob: -10.51110553741455
    9. '   ' → logprob: -10.88610553741455
    10. ':return' → logprob: -11.26110553741455

Token 191: ' #' (ID: 1069)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2333613485097885
    2. 'float' → logprob: -1.7333613634109497
    3. 'return' → logprob: -3.48336124420166
    4. ' float' → logprob: -7.85836124420166
    5. ' ' → logprob: -8.85836124420166
    6. '           ' → logprob: -8.98336124420166
    7. ' return' → logprob: -9.85836124420166
    8. '   ' → logprob: -10.85836124420166
    9. '       ' → logprob: -12.60836124420166
    10. '        ' → logprob: -12.85836124420166

Token 192: ' If' (ID: 1843)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00035929924342781305
    2. ' return' → logprob: -8.000359535217285
    3. 'float' → logprob: -10.875359535217285
    4. '           ' → logprob: -12.375359535217285
    5. '   ' → logprob: -15.500359535217285
    6. '0' → logprob: -15.625359535217285
    7. '       ' → logprob: -16.37535858154297
    8. 'raise' → logprob: -16.37535858154297
    9. ' ' → logprob: -18.12535858154297
    10. '               ' → logprob: -18.25035858154297

Token 193: ' w' (ID: 286)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12835350632667542
    2. ' self' → logprob: -2.1283535957336426
    3. 'float' → logprob: -7.253353595733643
    4. '0' → logprob: -7.503353595733643
    5. ' float' → logprob: -9.003353118896484
    6. ' ' → logprob: -10.878353118896484
    7. '       ' → logprob: -11.378353118896484
    8. '   ' → logprob: -12.253353118896484
    9. 'return' → logprob: -12.753353118896484
    10. '           ' → logprob: -13.503353118896484

Token 194: '=' (ID: 28)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2521481215953827
    2. ' ==' → logprob: -1.502148151397705
    3. '=' → logprob: -9.252147674560547
    4. '<=' → logprob: -10.377147674560547
    5. '>' → logprob: -11.252147674560547
    6. 'is' → logprob: -11.377147674560547
    7. ' is' → logprob: -11.627147674560547
    8. 's' → logprob: -11.627147674560547
    9. '   ' → logprob: -11.752147674560547
    10. ' ' → logprob: -11.877147674560547

Token 195: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017023178515955806
    2. ' ' → logprob: -6.376702308654785
    3. '   ' → logprob: -17.6267032623291
    4. '
' → logprob: -17.7517032623291
    5. '           ' → logprob: -18.0017032623291
    6. '=' → logprob: -18.1267032623291
    7. '  ' → logprob: -18.2517032623291
    8. '       ' → logprob: -18.6267032623291
    9. '```' → logprob: -18.8767032623291
    10. '۰' → logprob: -19.7517032623291

Token 196: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.472082257270813
    2. ':' → logprob: -1.597082257270813
    3. ':return' → logprob: -2.2220821380615234
    4. ':
' → logprob: -2.9720821380615234
    5. 'return' → logprob: -4.972082138061523
    6. '           ' → logprob: -5.597082138061523
    7. ' return' → logprob: -6.472082138061523
    8. '       ' → logprob: -6.597082138061523
    9. ' and' → logprob: -8.097082138061523
    10. ' ,' → logprob: -8.597082138061523

Token 197: ' v' (ID: 323)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0183525700122118
    2. ' self' → logprob: -4.018352508544922
    3. 'v' → logprob: -8.518352508544922
    4. ' v' → logprob: -13.643352508544922
    5. '(self' → logprob: -14.768352508544922
    6. ' ' → logprob: -15.018352508544922
    7. '   ' → logprob: -15.268352508544922
    8. '	self' → logprob: -15.643352508544922
    9. '       ' → logprob: -15.893352508544922
    10. '```' → logprob: -16.393352508544922

Token 198: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.023783903568983078
    2. ' >' → logprob: -4.0237836837768555
    3. '<=' → logprob: -5.8987836837768555
    4. '>=' → logprob: -6.0237836837768555
    5. '!=' → logprob: -8.398783683776855
    6. '==' → logprob: -9.523783683776855
    7. ' <=' → logprob: -9.648783683776855
    8. ' >=' → logprob: -10.273783683776855
    9. '<' → logprob: -11.023783683776855
    10. ' !=' → logprob: -11.273783683776855

Token 199: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028737038373947144
    2. '=' → logprob: -6.37787389755249
    3. ' ' → logprob: -6.75287389755249
    4. '>' → logprob: -13.002873420715332
    5. '```' → logprob: -15.877873420715332
    6. '==' → logprob: -16.12787437438965
    7. ' =' → logprob: -16.25287437438965
    8. 'v' → logprob: -16.50287437438965
    9. '
' → logprob: -16.50287437438965
    10. '...' → logprob: -16.75287437438965

Token 200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3211212158203125
    2. ':' → logprob: -1.4461212158203125
    3. '           ' → logprob: -1.8211212158203125
    4. 'return' → logprob: -1.9461212158203125
    5. ':return' → logprob: -2.0711212158203125
    6. ':
' → logprob: -3.0711212158203125
    7. ' return' → logprob: -3.9461212158203125
    8. '               ' → logprob: -7.5711212158203125
    9. '
' → logprob: -8.696121215820312
    10. '       ' → logprob: -9.196121215820312

Token 201: ' ratio' (ID: 18051)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.20240774750709534
    2. 'return' → logprob: -1.702407717704773
    3. '           ' → logprob: -7.2024078369140625
    4. ' float' → logprob: -8.577407836914062
    5. 'float' → logprob: -10.077407836914062
    6. ':return' → logprob: -12.077407836914062
    7. '               ' → logprob: -12.327407836914062
    8. '{return' → logprob: -13.202407836914062
    9. ' ' → logprob: -13.327407836914062
    10. 'import' → logprob: -13.952407836914062

Token 202: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24760323762893677
    2. '=float' → logprob: -1.747603178024292
    3. ' =' → logprob: -3.122603178024292
    4. 'return' → logprob: -7.247603416442871
    5. 'float' → logprob: -8.247603416442871
    6. ' float' → logprob: -9.997603416442871
    7. ' return' → logprob: -9.997603416442871
    8. ' is' → logprob: -11.372603416442871
    9. ':' → logprob: -12.247603416442871
    10. ':return' → logprob: -12.372603416442871

Token 203: ' +' (ID: 659)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.003178782993927598
    2. ' float' → logprob: -5.753178596496582
    3. '=float' → logprob: -14.753178596496582
    4. 'inf' → logprob: -15.003178596496582
    5. '	float' → logprob: -16.3781795501709
    6. '   ' → logprob: -16.3781795501709
    7. '1' → logprob: -16.7531795501709
    8. '(float' → logprob: -17.1281795501709
    9. '10' → logprob: -18.2531795501709
    10. ' ' → logprob: -18.5031795501709

Token 204: 'inf' (ID: 22226)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.004155925940722227
    2. ' float' → logprob: -5.504156112670898
    3. 'inf' → logprob: -9.504156112670898
    4. '=float' → logprob: -13.254156112670898
    5. '1' → logprob: -14.504156112670898
    6. 'in' → logprob: -15.754156112670898
    7. '999' → logprob: -16.0041561126709
    8. ' inf' → logprob: -16.3791561126709
    9. '10' → logprob: -16.5041561126709
    10. '	float' → logprob: -16.6291561126709

Token 205: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22388248145580292
    2. '       ' → logprob: -2.3488824367523193
    3. '
' → logprob: -2.7238824367523193
    4. 'return' → logprob: -3.7238824367523193
    5. 'float' → logprob: -4.848882675170898
    6. ',' → logprob: -5.598882675170898
    7. ' return' → logprob: -6.598882675170898
    8. ';' → logprob: -7.723882675170898
    9. ':' → logprob: -8.348882675170898
    10. '=float' → logprob: -8.348882675170898

Token 206: ' else' (ID: 1203)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.404570996761322
    2. ' float' → logprob: -1.1545710563659668
    3. '       ' → logprob: -5.279571056365967
    4. 'return' → logprob: -5.279571056365967
    5. ' return' → logprob: -6.154571056365967
    6. ' else' → logprob: -6.404571056365967
    7. 'else' → logprob: -6.529571056365967
    8. '           ' → logprob: -7.529571056365967
    9. '        ' → logprob: -7.529571056365967
    10. 'elif' → logprob: -7.779571056365967

Token 207: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.761811375617981
    2. ' float' → logprob: -1.261811375617981
    3. 'float' → logprob: -1.761811375617981
    4. ' ' → logprob: -3.3868112564086914
    5. '-' → logprob: -3.7618112564086914
    6. '-f' → logprob: -5.011811256408691
    7. 'return' → logprob: -5.511811256408691
    8. ' return' → logprob: -5.636811256408691
    9. ' -' → logprob: -5.761811256408691
    10. '           ' → logprob: -6.011811256408691

Token 208: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.476173996925354
    2. 'float' → logprob: -0.976173996925354
    3. '1' → logprob: -6.3511738777160645
    4. 'in' → logprob: -8.226174354553223
    5. 'math' → logprob: -10.101174354553223
    6. '0' → logprob: -11.226174354553223
    7. '(float' → logprob: -12.226174354553223
    8. '=float' → logprob: -12.476174354553223
    9. ' float' → logprob: -12.601174354553223
    10. '999' → logprob: -12.601174354553223

Token 209: ' or' (ID: 503)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05842950567603111
    2. '       ' → logprob: -3.683429479598999
    3. 'return' → logprob: -3.683429479598999
    4. ' return' → logprob: -5.933429718017578
    5. '
' → logprob: -6.558429718017578
    6. 'float' → logprob: -7.183429718017578
    7. ':
' → logprob: -7.683429718017578
    8. ':' → logprob: -8.058429718017578
    9. ',' → logprob: -8.183429718017578
    10. ' float' → logprob: -9.058429718017578

Token 210: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029192017391324043
    2. 'float' → logprob: -3.7791919708251953
    3. ' ' → logprob: -5.654191970825195
    4. ' float' → logprob: -6.029191970825195
    5. '
' → logprob: -12.154191970825195
    6. '   ' → logprob: -12.279191970825195
    7. '=float' → logprob: -13.904191970825195
    8. 'inf' → logprob: -14.154191970825195
    9. 'None' → logprob: -14.279191970825195
    10. '  ' → logprob: -14.279191970825195

Token 211: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010704077780246735
    2. 'float' → logprob: -5.135704040527344
    3. ' ' → logprob: -5.510704040527344
    4. ' float' → logprob: -7.260704040527344
    5. '-' → logprob: -11.385704040527344
    6. '-f' → logprob: -13.510704040527344
    7. ' -' → logprob: -13.885704040527344
    8. '
' → logprob: -13.885704040527344
    9. '  ' → logprob: -14.385704040527344
    10. '   ' → logprob: -14.635704040527344

Token 212: '.' (ID: 13)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24970246851444244
    2. '       ' → logprob: -2.1247024536132812
    3. 'float' → logprob: -3.2497024536132812
    4. 'return' → logprob: -3.7497024536132812
    5. '
' → logprob: -4.749702453613281
    6. '0' → logprob: -4.874702453613281
    7. ' float' → logprob: -4.999702453613281
    8. ':' → logprob: -5.374702453613281
    9. ' return' → logprob: -5.374702453613281
    10. ',' → logprob: -6.624702453613281

Token 213: ' Always' (ID: 30141)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5615457892417908
    2. '           ' → logprob: -0.9365457892417908
    3. ' return' → logprob: -3.3115458488464355
    4. 'if' → logprob: -7.1865458488464355
    5. ' if' → logprob: -8.936545372009277
    6. '       ' → logprob: -9.061545372009277
    7. 'import' → logprob: -9.186545372009277
    8. '
' → logprob: -9.936545372009277
    9. 'inf' → logprob: -10.436545372009277
    10. 'float' → logprob: -11.811545372009277

Token 214: ' handle' (ID: 5318)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.254936158657074
    2. ' return' → logprob: -2.0049362182617188
    3. '1' → logprob: -3.3799362182617188
    4. 'float' → logprob: -3.5049362182617188
    5. ' float' → logprob: -4.879936218261719
    6. '0' → logprob: -5.004936218261719
    7. ' set' → logprob: -6.254936218261719
    8. ' positive' → logprob: -6.379936218261719
    9. 'set' → logprob: -6.504936218261719
    10. ' ' → logprob: -6.629936218261719

Token 215: ' to' (ID: 316)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.356362521648407
    2. 'return' → logprob: -2.3563625812530518
    3. 'self' → logprob: -2.7313625812530518
    4. ' float' → logprob: -2.8563625812530518
    5. '0' → logprob: -3.4813625812530518
    6. ' as' → logprob: -4.356362342834473
    7. ' self' → logprob: -4.731362342834473
    8. 'as' → logprob: -5.231362342834473
    9. '   ' → logprob: -5.481362342834473
    10. ' ' → logprob: -5.606362342834473

Token 216: ' put' (ID: 3006)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.3382425904273987
    2. 'float' → logprob: -1.338242530822754
    3. '1' → logprob: -4.713242530822754
    4. ' return' → logprob: -5.088242530822754
    5. '0' → logprob: -5.213242530822754
    6. 'return' → logprob: -6.338242530822754
    7. ' ' → logprob: -6.338242530822754
    8. '        ' → logprob: -8.963242530822754
    9. '    ' → logprob: -9.338242530822754
    10. ' avoid' → logprob: -10.088242530822754

Token 217: ' items' (ID: 4732)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.2888844013214111
    2. ' positive' → logprob: -2.038884401321411
    3. ' a' → logprob: -2.288884401321411
    4. ' float' → logprob: -2.413884401321411
    5. 'positive' → logprob: -2.663884401321411
    6. 'a' → logprob: -2.788884401321411
    7. 'inf' → logprob: -2.913884401321411
    8. '0' → logprob: -3.038884401321411
    9. 'in' → logprob: -3.413884401321411
    10. ' items' → logprob: -3.413884401321411

Token 218: ' with' (ID: 483)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.7945802211761475
    2. 'in' → logprob: -1.9195802211761475
    3. ' float' → logprob: -2.1695802211761475
    4. ' in' → logprob: -2.5445802211761475
    5. 'float' → logprob: -2.9195802211761475
    6. ' ' → logprob: -3.1695802211761475
    7. ' as' → logprob: -4.169580459594727
    8. 'inf' → logprob: -4.169580459594727
    9. '   ' → logprob: -4.294580459594727
    10. 'at' → logprob: -4.419580459594727

Token 219: ' w' (ID: 286)
  Prédit: ' positive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' positive' → logprob: -0.6266238689422607
    2. 'positive' → logprob: -2.1266238689422607
    3. ' higher' → logprob: -2.5016238689422607
    4. 'higher' → logprob: -2.6266238689422607
    5. 'float' → logprob: -3.0016238689422607
    6. ' highest' → logprob: -3.3766238689422607
    7. ' float' → logprob: -3.6266238689422607
    8. ' high' → logprob: -3.8766238689422607
    9. 'highest' → logprob: -4.12662410736084
    10. 'high' → logprob: -4.25162410736084

Token 220: '=' (ID: 28)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6312287449836731
    2. '>' → logprob: -1.5062286853790283
    3. '==' → logprob: -2.1312286853790283
    4. ' ==' → logprob: -2.2562286853790283
    5. ' !=' → logprob: -4.881228923797607
    6. '=' → logprob: -5.006228923797607
    7. ' ' → logprob: -5.381228923797607
    8. '!=' → logprob: -6.256228923797607
    9. '0' → logprob: -6.881228923797607
    10. ' <' → logprob: -8.38122844696045

Token 221: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0037335683591663837
    2. ' ' → logprob: -5.6287336349487305
    3. '1' → logprob: -9.12873363494873
    4. '>' → logprob: -12.37873363494873
    5. 'zero' → logprob: -12.50373363494873
    6. '```' → logprob: -12.75373363494873
    7. '   ' → logprob: -13.19123363494873
    8. 'positive' → logprob: -13.31623363494873
    9. '
' → logprob: -13.37873363494873
    10. 'inf' → logprob: -13.62873363494873

Token 222: ' appropriately' (ID: 54286)
  Prédit: ' first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' first' → logprob: -1.6794694662094116
    2. ' ahead' → logprob: -1.8044694662094116
    3. ' at' → logprob: -2.179469585418701
    4. ' as' → logprob: -2.429469585418701
    5. ' after' → logprob: -2.804469585418701
    6. 'at' → logprob: -3.054469585418701
    7. '   ' → logprob: -3.054469585418701
    8. 'after' → logprob: -3.304469585418701
    9. 'first' → logprob: -3.429469585418701
    10. ' before' → logprob: -3.554469585418701

Token 223: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2042788416147232
    2. '       ' → logprob: -2.4542789459228516
    3. 'return' → logprob: -3.4542789459228516
    4. ' return' → logprob: -3.9542789459228516
    5. 'float' → logprob: -4.204278945922852
    6. ':
' → logprob: -4.704278945922852
    7. '
' → logprob: -5.204278945922852
    8. ':' → logprob: -5.454278945922852
    9. ' float' → logprob: -5.579278945922852
    10. ',' → logprob: -5.954278945922852

Token 224: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7218940258026123
    2. 'return' → logprob: -0.7218940258026123
    3. 'float' → logprob: -4.221894264221191
    4. ' return' → logprob: -4.346894264221191
    5. '       ' → logprob: -7.846894264221191
    6. ' float' → logprob: -8.721894264221191
    7. 'inf' → logprob: -10.096894264221191
    8. '
' → logprob: -10.596894264221191
    9. 'if' → logprob: -10.721894264221191
    10. ':return' → logprob: -11.221894264221191

Token 225: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16502715647220612
    2. 'float' → logprob: -1.915027141571045
    3. ' return' → logprob: -5.915027141571045
    4. '           ' → logprob: -6.915027141571045
    5. ' float' → logprob: -7.540027141571045
    6. 'if' (adapté à ' if') → logprob: -7.915027141571045
    7. 'import' → logprob: -8.915027618408203
    8. '   ' → logprob: -10.790027618408203
    9. '       ' → logprob: -11.040027618408203
    10. '               ' → logprob: -11.915027618408203

Token 226: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.061969365924596786
    2. ' self' → logprob: -2.81196928024292
    3. '(self' → logprob: -14.061969757080078
    4. '	self' → logprob: -15.061969757080078
    5. '
' → logprob: -15.686969757080078
    6. '   ' → logprob: -15.686969757080078
    7. ' ' → logprob: -16.311969757080078
    8. '           ' → logprob: -16.561969757080078
    9. '       ' → logprob: -16.686969757080078
    10. '    ' → logprob: -17.311969757080078

Token 227: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -1.9146995327901095e-05
    2. 'v' → logprob: -11.625019073486328
    3. '.w' → logprob: -11.750019073486328
    4. '.' → logprob: -13.125019073486328
    5. '
' → logprob: -16.250019073486328
    6. ' .' → logprob: -17.250019073486328
    7. 'w' → logprob: -17.875019073486328
    8. '<v' → logprob: -18.000019073486328
    9. '```' → logprob: -18.625019073486328
    10. '

' → logprob: -18.625019073486328

Token 228: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.020551931113004684
    2. ' >' → logprob: -3.895551919937134
    3. '<=' → logprob: -13.270551681518555
    4. ' ' → logprob: -13.270551681518555
    5. ')>' → logprob: -13.395551681518555
    6. '&gt' → logprob: -13.770551681518555
    7. '()>' → logprob: -14.395551681518555
    8. '">' → logprob: -14.395551681518555
    9. '>=' → logprob: -14.520551681518555
    10. '==' → logprob: -14.770551681518555

Token 229: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11282262206077576
    2. ' ' → logprob: -2.2378225326538086
    3. '  ' → logprob: -15.612822532653809
    4. '   ' → logprob: -16.487823486328125
    5. '<|end|>' → logprob: -17.612823486328125
    6. '۰' → logprob: -17.925323486328125
    7. 'zero' → logprob: -18.175323486328125
    8. ' ' → logprob: -18.737823486328125
    9. '    ' → logprob: -18.800323486328125
    10. ' zero' → logprob: -18.862823486328125

Token 230: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023071514442563057
    2. ' ' → logprob: -8.37523078918457
    3. 'zero' → logprob: -17.12523078918457
    4. '۰' → logprob: -17.87523078918457
    5. '
' → logprob: -18.00023078918457
    6. '

' → logprob: -18.50023078918457
    7. '  ' → logprob: -18.56273078918457
    8. '<|end|>' → logprob: -18.62523078918457
    9. 'import' → logprob: -18.93773078918457
    10. '٠' → logprob: -19.50023078918457

Token 231: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.08009626716375351
    2. ':' → logprob: -2.5800962448120117
    3. ':return' → logprob: -7.080096244812012
    4. '           ' → logprob: -8.455096244812012
    5. '               ' → logprob: -9.580096244812012
    6. ':
' → logprob: -10.330096244812012
    7. '):
' → logprob: -10.455096244812012
    8. ':

' → logprob: -11.455096244812012
    9. ' :
' → logprob: -12.330096244812012
    10. 'return' → logprob: -13.205096244812012

Token 232: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1042526513338089
    2. 'return' → logprob: -2.979252576828003
    3. ' return' → logprob: -3.104252576828003
    4. '           ' → logprob: -6.104252815246582
    5. ':return' → logprob: -7.354252815246582
    6. '
' → logprob: -7.979252815246582
    7. ':' → logprob: -11.229252815246582
    8. ',' → logprob: -11.604252815246582
    9. '```' → logprob: -11.604252815246582
    10. ')' → logprob: -11.604252815246582

Token 233: ' return' (ID: 622)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.042256902903318405
    2. ' float' → logprob: -3.2922568321228027
    3. 'return' (adapté à ' return') → logprob: -5.542256832122803
    4. '               ' → logprob: -9.042257308959961
    5. ' return' → logprob: -9.292257308959961
    6. '           ' → logprob: -9.667257308959961
    7. '=float' → logprob: -12.292257308959961
    8. '                   ' → logprob: -12.792257308959961
    9. '(float' → logprob: -13.167257308959961
    10. '            ' → logprob: -13.292257308959961

Token 234: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -4.961759259458631e-06
    2. ' float' → logprob: -12.250004768371582
    3. '1' → logprob: -17.5000057220459
    4. '   ' → logprob: -17.6250057220459
    5. '(float' → logprob: -18.1250057220459
    6. '=float' → logprob: -18.3750057220459
    7. '	float' → logprob: -18.5000057220459
    8. '
' → logprob: -20.3750057220459
    9. '```' → logprob: -20.6250057220459
    10. 'flo' → logprob: -20.6250057220459

Token 235: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00016146517009474337
    2. '("' → logprob: -9.125161170959473
    3. ''' → logprob: -10.750161170959473
    4. ''in' → logprob: -10.875161170959473
    5. 'inf' → logprob: -12.125161170959473
    6. '(' → logprob: -12.625161170959473
    7. '.inf' → logprob: -14.000161170959473
    8. '.infinity' → logprob: -14.250161170959473
    9. ''s' → logprob: -14.625161170959473
    10. '('+' → logprob: -15.250161170959473

Token 236: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -7.703443770878948e-06
    2. ''in' → logprob: -12.500007629394531
    3. ''' → logprob: -12.750007629394531
    4. 'in' → logprob: -14.125007629394531
    5. 'info' → logprob: -15.625007629394531
    6. 'pos' → logprob: -17.25000762939453
    7. '_inf' → logprob: -17.37500762939453
    8. 'positive' → logprob: -17.62500762939453
    9. '-inf' → logprob: -18.12500762939453
    10. '.inf' → logprob: -18.25000762939453

Token 237: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.581639289855957
    2. '')
' → logprob: -0.831639289855957
    3. ')' → logprob: -5.331639289855957
    4. ')
' → logprob: -7.581639289855957
    5. '')
' → logprob: -8.081639289855957
    6. '       ' → logprob: -11.581639289855957
    7. '           ' → logprob: -11.706639289855957
    8. ')')
' → logprob: -12.956639289855957
    9. ''' → logprob: -13.081639289855957
    10. '')

' → logprob: -13.581639289855957

Token 238: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00019221604452468455
    2. 'elif' → logprob: -9.000192642211914
    3. 'else' → logprob: -10.750192642211914
    4. ' elif' → logprob: -11.250192642211914
    5. ' else' → logprob: -11.250192642211914
    6. 'return' → logprob: -11.875192642211914
    7. '       ' → logprob: -12.375192642211914
    8. ')' → logprob: -13.250192642211914
    9. ' return' → logprob: -13.375192642211914
    10. '            
' → logprob: -13.625192642211914

Token 239: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029530609026551247
    2. 'elif' (adapté à ' elif') → logprob: -3.9045305252075195
    3. ' elif' → logprob: -5.5295305252075195
    4. 'else' → logprob: -6.0295305252075195
    5. ' else' → logprob: -6.4045305252075195
    6. 'return' → logprob: -7.1545305252075195
    7. ' return' → logprob: -9.77953052520752
    8. '
' → logprob: -10.90453052520752
    9. ')' → logprob: -11.02953052520752
    10. '               ' → logprob: -11.52953052520752

Token 240: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014178436249494553
    2. ' self' → logprob: -4.264178276062012
    3. '           ' → logprob: -11.889178276062012
    4. '0' → logprob: -12.014178276062012
    5. '(self' → logprob: -14.514178276062012
    6. '	self' → logprob: -15.014178276062012
    7. ' ' → logprob: -15.264178276062012
    8. '
' → logprob: -15.639178276062012
    9. '               ' → logprob: -16.014179229736328
    10. '       ' → logprob: -16.014179229736328

Token 241: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.0003159201005473733
    2. '.' → logprob: -8.87531566619873
    3. '.w' → logprob: -9.12531566619873
    4. ' .' → logprob: -9.87531566619873
    5. 'v' → logprob: -11.50031566619873
    6. '```' → logprob: -14.25031566619873
    7. '<v' → logprob: -14.50031566619873
    8. '   ' → logprob: -14.62531566619873
    9. '	v' → logprob: -14.62531566619873
    10. ' ' → logprob: -15.12531566619873

Token 242: ' <' (ID: 464)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6217889189720154
    2. '==' → logprob: -1.4967889785766602
    3. ' <' → logprob: -1.7467889785766602
    4. '<' → logprob: -2.74678897857666
    5. '/' → logprob: -8.62178897857666
    6. ' /' → logprob: -8.74678897857666
    7. ' ' → logprob: -8.99678897857666
    8. '0' → logprob: -9.74678897857666
    9. '<=' → logprob: -9.99678897857666
    10. ' <=' → logprob: -10.37178897857666

Token 243: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.043005939573049545
    2. ' ' → logprob: -3.16800594329834
    3. 'float' → logprob: -12.29300594329834
    4. ' ' → logprob: -14.29300594329834
    5. '   ' → logprob: -15.04300594329834
    6. '  ' → logprob: -15.29300594329834
    7. ' float' → logprob: -15.35550594329834
    8. '=' → logprob: -15.79300594329834
    9. '```' → logprob: -16.418004989624023
    10. '
' → logprob: -16.418004989624023

Token 244: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002727793762460351
    2. ' ' → logprob: -8.250272750854492
    3. 'float' → logprob: -11.500272750854492
    4. 'inf' → logprob: -15.000272750854492
    5. '=' → logprob: -15.875272750854492
    6. '-' → logprob: -16.000272750854492
    7. '   ' → logprob: -16.062772750854492
    8. '  ' → logprob: -16.125272750854492
    9. '
' → logprob: -16.375272750854492
    10. '```' → logprob: -16.750272750854492

Token 245: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1110340356826782
    2. '):
' → logprob: -1.2360340356826782
    3. ':
' → logprob: -1.3610340356826782
    4. ':return' → logprob: -2.8610339164733887
    5. ':' → logprob: -2.9860339164733887
    6. '):' → logprob: -5.236033916473389
    7. '           ' → logprob: -5.611033916473389
    8. ')' → logprob: -6.111033916473389
    9. 'return' → logprob: -6.486033916473389
    10. ''):
' → logprob: -7.361033916473389

Token 246: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01591869816184044
    2. '           ' → logprob: -5.640918731689453
    3. 'return' → logprob: -5.640918731689453
    4. ':
' → logprob: -5.890918731689453
    5. ' return' → logprob: -6.515918731689453
    6. ')' → logprob: -6.515918731689453
    7. ':return' → logprob: -6.640918731689453
    8. ':' → logprob: -7.015918731689453
    9. '):
' → logprob: -7.890918731689453
    10. '0' → logprob: -9.015918731689453

Token 247: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03322293981909752
    2. ' return' → logprob: -3.6582229137420654
    3. 'float' → logprob: -5.2832231521606445
    4. '-return' → logprob: -7.0332231521606445
    5. '               ' → logprob: -7.5332231521606445
    6. '-' → logprob: -9.408223152160645
    7. ' float' → logprob: -9.408223152160645
    8. '           ' → logprob: -9.533223152160645
    9. '-f' → logprob: -10.158223152160645
    10. '=float' → logprob: -10.783223152160645

Token 248: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.11649946868419647
    2. '-f' → logprob: -2.241499423980713
    3. ' float' → logprob: -5.866499423980713
    4. '-' → logprob: -7.741499423980713
    5. ' -' → logprob: -8.741499900817871
    6. '=float' → logprob: -9.741499900817871
    7. '-fl' → logprob: -9.991499900817871
    8. '	float' → logprob: -10.491499900817871
    9. '-fluid' → logprob: -10.991499900817871
    10. '-floating' → logprob: -11.116499900817871

Token 249: '('-' (ID: 33343)
  Prédit: '('-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('-' → logprob: -0.22557322680950165
    2. ''-' → logprob: -1.600573182106018
    3. '('' → logprob: -9.850573539733887
    4. '-' → logprob: -10.725573539733887
    5. '("-' → logprob: -10.725573539733887
    6. '(' → logprob: -11.225573539733887
    7. '"-' → logprob: -11.475573539733887
    8. '   ' → logprob: -11.725573539733887
    9. 'float' → logprob: -11.850573539733887
    10. '(
' → logprob: -12.600573539733887

Token 250: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.9361264946837764e-07
    2. 'float' → logprob: -15.625
    3. ' inf' → logprob: -18.125
    4. 'in' → logprob: -20.125
    5. '_inf' → logprob: -20.375
    6. '.inf' → logprob: -21.375
    7. 'int' → logprob: -21.75
    8. 'math' → logprob: -21.875
    9. '
' → logprob: -22.0
    10. '

' → logprob: -22.25

Token 251: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.01614733226597309
    2. '')' → logprob: -4.391147136688232
    3. '           ' → logprob: -5.766147136688232
    4. '       ' → logprob: -7.891147136688232
    5. ')
' → logprob: -10.14114761352539
    6. '')
' → logprob: -10.26614761352539
    7. ''):
' → logprob: -10.76614761352539
    8. ')' → logprob: -11.76614761352539
    9. ' ')
' → logprob: -11.76614761352539
    10. 'return' → logprob: -12.01614761352539

Token 252: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00037347347824834287
    2. '       ' → logprob: -8.125373840332031
    3. 'else' → logprob: -10.250373840332031
    4. 'return' → logprob: -10.500373840332031
    5. '
' → logprob: -12.500373840332031
    6. '	       ' → logprob: -13.000373840332031
    7. ' else' → logprob: -13.125373840332031
    8. ')' → logprob: -13.500373840332031
    9. '          ' → logprob: -14.125373840332031
    10. '               ' → logprob: -14.250373840332031

Token 253: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04693969711661339
    2. 'else' (adapté à ' else') → logprob: -3.2969396114349365
    3. 'return' → logprob: -5.046939849853516
    4. '       ' → logprob: -6.171939849853516
    5. ' else' → logprob: -8.296939849853516
    6. '
' → logprob: -9.546939849853516
    7. ' return' → logprob: -12.046939849853516
    8. '               ' → logprob: -12.171939849853516
    9. '	       ' → logprob: -12.421939849853516
    10. '          ' → logprob: -13.546939849853516

Token 254: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7732380628585815
    2. '           ' → logprob: -1.2732380628585815
    3. ':' → logprob: -1.6482380628585815
    4. '               ' → logprob: -2.898238182067871
    5. '       ' → logprob: -6.148238182067871
    6. 'return' → logprob: -6.273238182067871
    7. ':return' → logprob: -6.273238182067871
    8. ' return' → logprob: -6.398238182067871
    9. '0' → logprob: -6.648238182067871
    10. ' :
' → logprob: -7.273238182067871

Token 255: '               ' (ID: 506)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12435893714427948
    2. '           ' → logprob: -2.499358892440796
    3. 'return' → logprob: -3.999358892440796
    4. ' return' → logprob: -4.624359130859375
    5. ' ' → logprob: -5.499359130859375
    6. '               ' → logprob: -5.999359130859375
    7. '       ' → logprob: -9.499359130859375
    8. '   ' → logprob: -11.874359130859375
    9. '            ' → logprob: -13.249359130859375
    10. '          ' → logprob: -13.374359130859375

Token 256: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.079603411257267
    2. 'return' (adapté à ' return') → logprob: -2.579603433609009
    3. ' return' → logprob: -7.45460319519043
    4. ' ' → logprob: -9.07960319519043
    5. '               ' → logprob: -11.07960319519043
    6. '           ' → logprob: -12.45460319519043
    7. '                   ' → logprob: -14.57960319519043
    8. '                ' → logprob: -15.20460319519043
    9. '                 ' → logprob: -15.45460319519043
    10. '   ' → logprob: -16.20460319519043

Token 257: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. 'float' → logprob: -16.8750057220459
    4. ' ' → logprob: -19.6250057220459
    5. '  ' → logprob: -19.8750057220459
    6. '   ' → logprob: -20.0000057220459
    7. '
' → logprob: -20.7500057220459
    8. '۰' → logprob: -21.1250057220459
    9. '00' → logprob: -21.6250057220459
    10. '-' → logprob: -21.6250057220459

Token 258: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.375
    3. 'float' → logprob: -16.5
    4. '00' → logprob: -20.375
    5. '-' → logprob: -21.375
    6. '۰' → logprob: -21.375
    7. '1' → logprob: -22.0
    8. '000' → logprob: -22.125
    9. '  ' → logprob: -22.375
    10. 'nan' → logprob: -22.375

Token 259: '.' (ID: 13)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.143808109802194e-05
    2. '           ' → logprob: -11.375041007995605
    3. '        
' → logprob: -12.125041007995605
    4. 'return' → logprob: -12.250041007995605
    5. '   ' → logprob: -12.500041007995605
    6. ' return' → logprob: -12.750041007995605
    7. '.' → logprob: -13.250041007995605
    8. '
' → logprob: -13.500041007995605
    9. '      ' → logprob: -13.625041007995605
    10. ' else' → logprob: -13.625041007995605

Token 260: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -13.375004768371582
    3. 'return' → logprob: -13.625004768371582
    4. '       ' → logprob: -13.875004768371582
    5. '5' → logprob: -14.875004768371582
    6. '        
' → logprob: -15.500004768371582
    7. ' return' → logprob: -15.500004768371582
    8. 'def' → logprob: -15.750004768371582
    9. '  ' → logprob: -16.1250057220459
    10. '        ' → logprob: -16.3750057220459

Token 261: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.949026571121067e-05
    2. 'return' → logprob: -10.125099182128906
    3. ' return' → logprob: -11.000099182128906
    4. '        
' → logprob: -11.250099182128906
    5. '   ' → logprob: -11.750099182128906
    6. ')' → logprob: -12.375099182128906
    7. '           ' → logprob: -12.375099182128906
    8. '<|end|>' → logprob: -12.500099182128906
    9. ',' → logprob: -13.375099182128906
    10. '    
' → logprob: -13.625099182128906

Token 262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009020501165650785
    2. ' return' → logprob: -8.00090217590332
    3. 'return' → logprob: -8.12590217590332
    4. ')' → logprob: -8.87590217590332
    5. '   ' → logprob: -10.37590217590332
    6. '<|end|>' → logprob: -10.50090217590332
    7. '        
' → logprob: -11.37590217590332
    8. ' else' → logprob: -11.75090217590332
    9. '           ' → logprob: -11.75090217590332
    10. ',' → logprob: -11.75090217590332

Token 263: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06252472847700119
    2. 'return' (adapté à ' return') → logprob: -2.8125247955322266
    3. ' return' → logprob: -7.812524795532227
    4. '   ' → logprob: -9.687524795532227
    5. 'else' → logprob: -9.687524795532227
    6. '
' → logprob: -11.437524795532227
    7. '	return' → logprob: -12.562524795532227
    8. ')' → logprob: -13.062524795532227
    9. ' else' → logprob: -13.062524795532227
    10. '           ' → logprob: -13.187524795532227

Token 264: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023247340694069862
    2. ' self' → logprob: -3.773247241973877
    3. '(self' → logprob: -13.898247718811035
    4. 'float' → logprob: -14.148247718811035
    5. ' ' → logprob: -15.898247718811035
    6. ' float' → logprob: -16.77324676513672
    7. '	self' → logprob: -16.89824676513672
    8. '   ' → logprob: -17.02324676513672
    9. '[self' → logprob: -18.27324676513672
    10. '
' → logprob: -18.64824676513672

Token 265: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -1.8624639324116288e-06
    2. '.' → logprob: -13.500001907348633
    3. 'v' → logprob: -14.875001907348633
    4. ' .' → logprob: -18.125001907348633
    5. '
' → logprob: -19.125001907348633
    6. '/v' → logprob: -19.750001907348633
    7. '```' → logprob: -19.875001907348633
    8. '._' → logprob: -20.000001907348633
    9. '_v' → logprob: -20.875001907348633
    10. '	v' → logprob: -21.250001907348633

Token 266: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.2523135542869568
    2. '/' → logprob: -1.5023136138916016
    3. '/self' → logprob: -7.877313613891602
    4. '       ' → logprob: -12.502313613891602
    5. '        ' → logprob: -14.877313613891602
    6. ' ' → logprob: -15.252313613891602
    7. 'self' → logprob: -15.752313613891602
    8. '   ' → logprob: -15.877313613891602
    9. ' /
' → logprob: -16.0023136138916
    10. ' self' → logprob: -16.0023136138916

Token 267: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005234121344983578
    2. ' self' → logprob: -5.255234241485596
    3. 'float' → logprob: -14.880233764648438
    4. '(self' → logprob: -18.130233764648438
    5. ' float' → logprob: -18.255233764648438
    6. '	self' → logprob: -18.630233764648438
    7. 'abs' → logprob: -18.630233764648438
    8. '
' → logprob: -19.380233764648438
    9. ' ' → logprob: -19.755233764648438
    10. '   ' → logprob: -20.130233764648438

Token 268: '.w' (ID: 2234)
  Prédit: '.w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.w' → logprob: -0.0009313485352322459
    2. 'w' → logprob: -7.000931262969971
    3. '.' → logprob: -10.875931739807129
    4. ' .' → logprob: -14.250931739807129
    5. '	w' → logprob: -15.625931739807129
    6. '_.' → logprob: -17.000930786132812
    7. '_w' → logprob: -17.125930786132812
    8. ' w' → logprob: -17.875930786132812
    9. '
' → logprob: -18.375930786132812
    10. '<w' → logprob: -18.500930786132812

Token 269: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 270: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 271: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0037732396740466356
    2. 'class' → logprob: -6.378773212432861
    3. 'from' → logprob: -7.128773212432861
    4. '   ' → logprob: -8.00377368927002
    5. ' def' → logprob: -8.62877368927002
    6. 'import' → logprob: -8.87877368927002
    7. 'items' → logprob: -8.87877368927002
    8. '#' → logprob: -9.12877368927002
    9. '@' → logprob: -9.37877368927002
    10. ')' → logprob: -9.37877368927002

Token 272: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.015400798991322517
    2. ' __' → logprob: -4.2654008865356445
    3. 'def' → logprob: -7.1404008865356445
    4. '   ' → logprob: -8.640400886535645
    5. 'lt' → logprob: -9.765400886535645
    6. 'repr' → logprob: -10.265400886535645
    7. ' ' → logprob: -10.265400886535645
    8. ' def' → logprob: -10.390400886535645
    9. '>' → logprob: -10.515400886535645
    10. 'getitem' → logprob: -10.890400886535645

Token 273: 'lt' (ID: 3199)
  Prédit: 'lt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lt' → logprob: -4.320199877838604e-07
    2. 'eq' → logprob: -15.75
    3. 'gt' → logprob: -15.875
    4. 'repr' → logprob: -15.875
    5. 'init' → logprob: -16.875
    6. ' lt' → logprob: -19.25
    7. 'LT' → logprob: -20.625
    8. 'le' → logprob: -21.125
    9. '_lt' → logprob: -21.5
    10. 'str' → logprob: -22.125

Token 274: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.12705253064632416
    2. '__' → logprob: -2.1270525455474854
    3. '__('' → logprob: -9.877052307128906
    4. '__((' → logprob: -9.877052307128906
    5. '__(
' → logprob: -11.252052307128906
    6. '__("' → logprob: -12.502052307128906
    7. '__(*' → logprob: -13.252052307128906
    8. '(' → logprob: -13.752052307128906
    9. '___' → logprob: -14.002052307128906
    10. '__.__' → logprob: -14.627052307128906

Token 275: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.8497312895488e-05
    2. 'other' → logprob: -9.750068664550781
    3. ' self' → logprob: -11.500068664550781
    4. '
' → logprob: -17.62506866455078
    5. ' other' → logprob: -17.87506866455078
    6. ')' → logprob: -18.12506866455078
    7. ',' → logprob: -19.62506866455078
    8. '(self' → logprob: -19.75006866455078
    9. '0' → logprob: -20.00006866455078
    10. ' ' → logprob: -20.37506866455078

Token 276: ',' (ID: 11)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6417276859283447
    2. '__,' → logprob: -1.5167276859283447
    3. ',' → logprob: -2.1417276859283447
    4. '__(' → logprob: -2.2667276859283447
    5. 'self' → logprob: -4.391727447509766
    6. '<|end|>' → logprob: -5.016727447509766
    7. '__)' → logprob: -5.516727447509766
    8. '__((' → logprob: -6.266727447509766
    9. '__(*' → logprob: -6.391727447509766
    10. ')' → logprob: -6.766727447509766

Token 277: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0005541055579669774
    2. ' other' → logprob: -7.750554084777832
    3. 'self' → logprob: -9.000554084777832
    4. 'Other' → logprob: -16.87555503845215
    5. '_other' → logprob: -17.50055503845215
    6. ' self' → logprob: -17.62555503845215
    7. '(other' → logprob: -18.00055503845215
    8. 'o' → logprob: -18.25055503845215
    9. 'oth' → logprob: -18.37555503845215
    10. '.other' → logprob: -19.00055503845215

Token 278: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.061706021428108215
    2. ')' → logprob: -2.936706066131592
    3. ':' → logprob: -5.061706066131592
    4. ' ):' → logprob: -8.436705589294434
    5. '):
' → logprob: -8.561705589294434
    6. ' )' → logprob: -10.436705589294434
    7. 'self' → logprob: -12.061705589294434
    8. '):

' → logprob: -12.186705589294434
    9. ')>' → logprob: -12.686705589294434
    10. '):
' → logprob: -12.811705589294434

Token 279: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3266856372356415
    2. ' '' → logprob: -2.326685667037964
    3. ')' → logprob: -2.576685667037964
    4. '"' → logprob: -2.826685667037964
    5. 'object' → logprob: -3.951685667037964
    6. ''s' → logprob: -4.201685428619385
    7. ' "' → logprob: -4.826685428619385
    8. '):
' → logprob: -7.576685428619385
    9. '):' → logprob: -7.701685428619385
    10. ''class' → logprob: -7.701685428619385

Token 280: 'Item' (ID: 1590)
  Prédit: 'Item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Item' → logprob: -6.704273118884885e-07
    2. ' Item' → logprob: -14.750000953674316
    3. '_Item' → logprob: -17.25
    4. '	Item' → logprob: -17.625
    5. ')' → logprob: -17.875
    6. 'item' → logprob: -17.875
    7. '<Item' → logprob: -18.25
    8. ' ' → logprob: -18.5
    9. '.Item' → logprob: -19.125
    10. '')' → logprob: -19.375

Token 281: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00775864627212286
    2. ')' → logprob: -4.882758617401123
    3. ''):
' → logprob: -9.132759094238281
    4. ''):' → logprob: -10.257759094238281
    5. ':' → logprob: -12.382759094238281
    6. '')->' → logprob: -13.632759094238281
    7. '`)' → logprob: -13.757759094238281
    8. ''):
' → logprob: -13.757759094238281
    9. '")' → logprob: -14.632759094238281
    10. ' ')' → logprob: -15.132759094238281

Token 282: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24420003592967987
    2. ')' → logprob: -2.1191999912261963
    3. '       ' → logprob: -2.9941999912261963
    4. '->' → logprob: -4.119200229644775
    5. '(self' → logprob: -4.119200229644775
    6. 'self' → logprob: -5.369200229644775
    7. '):' → logprob: -5.619200229644775
    8. ')->' → logprob: -6.869200229644775
    9. ' ->' → logprob: -6.994200229644775
    10. '   ' → logprob: -7.244200229644775

Token 283: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -2.3438327843905427e-05
    2. ' bool' → logprob: -10.87502384185791
    3. 'float' → logprob: -12.37502384185791
    4. '   ' → logprob: -16.375022888183594
    5. ' ' → logprob: -17.375022888183594
    6. 'object' → logprob: -17.750022888183594
    7. '<bool' → logprob: -18.000022888183594
    8. '	bool' → logprob: -18.375022888183594
    9. 'True' → logprob: -18.875022888183594
    10. '  ' → logprob: -19.125022888183594

Token 284: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016212668269872665
    2. '       ' → logprob: -5.141212463378906
    3. '(self' → logprob: -5.266212463378906
    4. ':
' → logprob: -6.641212463378906
    5. ':return' → logprob: -6.766212463378906
    6. 'self' → logprob: -6.891212463378906
    7. '<|end|>' → logprob: -8.141212463378906
    8. '):' → logprob: -8.266212463378906
    9. '   ' → logprob: -8.266212463378906
    10. '():' → logprob: -8.641212463378906

Token 285: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006365400739014149
    2. ' return' → logprob: -5.3813652992248535
    3. 'return' → logprob: -6.3813652992248535
    4. 'self' → logprob: -10.256365776062012
    5. ' self' → logprob: -11.131365776062012
    6. '	return' → logprob: -15.006365776062012
    7. '      ' → logprob: -15.381365776062012
    8. '   ' → logprob: -15.381365776062012
    9. '           ' → logprob: -16.006364822387695
    10. '{return' → logprob: -17.131364822387695

Token 286: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00031699295504949987
    2. 'self' → logprob: -8.250316619873047
    3. '       ' → logprob: -10.000316619873047
    4. ' return' → logprob: -11.500316619873047
    5. '   ' → logprob: -16.000316619873047
    6. '           ' → logprob: -18.000316619873047
    7. '
' → logprob: -19.250316619873047
    8. '	return' → logprob: -19.500316619873047
    9. '#' (adapté à ' #') → logprob: -20.000316619873047
    10. ' self' → logprob: -20.250316619873047

Token 287: ' sort' (ID: 4506)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -3.1186566047836095e-05
    2. ' return' → logprob: -11.250031471252441
    3. '       ' → logprob: -11.875031471252441
    4. 'self' → logprob: -11.875031471252441
    5. '#' → logprob: -12.750031471252441
    6. '   ' → logprob: -13.750031471252441
    7. '
' → logprob: -15.750031471252441
    8. '           ' → logprob: -17.625030517578125
    9. '```' → logprob: -18.375030517578125
    10. 'if' → logprob: -18.875030517578125

Token 288: ' descending' (ID: 89489)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1483779400587082
    2. ' return' → logprob: -2.1483778953552246
    3. '       ' → logprob: -4.023377895355225
    4. '   ' → logprob: -6.648377895355225
    5. 'self' → logprob: -6.648377895355225
    6. '           ' → logprob: -7.773377895355225
    7. ' self' → logprob: -9.273378372192383
    8. ' by' → logprob: -9.773378372192383
    9. '    ' → logprob: -10.273378372192383
    10. '        ' → logprob: -11.023378372192383

Token 289: ' by' (ID: 656)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12241249531507492
    2. ' return' → logprob: -2.8724124431610107
    3. 'self' → logprob: -3.3724124431610107
    4. ':' → logprob: -4.49741268157959
    5. '       ' → logprob: -4.74741268157959
    6. '   ' → logprob: -6.12241268157959
    7. ':return' → logprob: -7.12241268157959
    8. '
' → logprob: -7.74741268157959
    9. ' self' → logprob: -8.24741268157959
    10. 'def' → logprob: -8.49741268157959

Token 290: ' ratio' (ID: 18051)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.20581841468811035
    2. 'self' → logprob: -1.7058184146881104
    3. ' other' → logprob: -5.705818176269531
    4. ' self' → logprob: -7.330818176269531
    5. 'ratio' → logprob: -7.830818176269531
    6. 'lambda' → logprob: -12.205818176269531
    7. ' ratio' → logprob: -12.830818176269531
    8. '(other' → logprob: -13.330818176269531
    9. ' ' → logprob: -13.330818176269531
    10. 'item' → logprob: -13.580818176269531

Token 291: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6857582926750183
    2. 'return' → logprob: -1.435758352279663
    3. '       ' → logprob: -1.560758352279663
    4. ':return' → logprob: -3.310758352279663
    5. ':
' → logprob: -4.935758113861084
    6. ' return' → logprob: -6.060758113861084
    7. '<|end|>' → logprob: -6.935758113861084
    8. ')' → logprob: -8.310758590698242
    9. '   ' → logprob: -8.435758590698242
    10. ',' → logprob: -8.435758590698242

Token 292: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6248583197593689
    2. 'return' → logprob: -0.8748583197593689
    3. ':' → logprob: -3.4998583793640137
    4. ':
' → logprob: -5.249858379364014
    5. '
' → logprob: -5.624858379364014
    6. ' return' → logprob: -5.624858379364014
    7. '   ' → logprob: -5.999858379364014
    8. ':return' → logprob: -6.124858379364014
    9. '{return' → logprob: -9.624857902526855
    10. '           ' → logprob: -9.999857902526855

Token 293: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0005064461147412658
    2. ' return' → logprob: -7.750506401062012
    3. 'self' → logprob: -9.500506401062012
    4. '   ' → logprob: -14.875506401062012
    5. '       ' → logprob: -14.875506401062012
    6. '	return' → logprob: -16.500507354736328
    7. '
' → logprob: -16.625507354736328
    8. ' self' → logprob: -17.500507354736328
    9. '           ' → logprob: -19.250507354736328
    10. '    ' → logprob: -19.375507354736328

Token 294: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002475777640938759
    2. ' self' → logprob: -6.002475738525391
    3. '	self' → logprob: -17.12747573852539
    4. '   ' → logprob: -17.62747573852539
    5. ' ' → logprob: -18.00247573852539
    6. '(self' → logprob: -19.62747573852539
    7. '
' → logprob: -19.87747573852539
    8. 'other' → logprob: -20.00247573852539
    9. ' ' → logprob: -20.00247573852539
    10. '_self' → logprob: -20.62747573852539

Token 295: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.00029828163678757846
    2. '.' → logprob: -8.125298500061035
    3. ' .' → logprob: -13.500298500061035
    4. 'ratio' → logprob: -15.125298500061035
    5. '._' → logprob: -15.375298500061035
    6. '>.' → logprob: -16.75029754638672
    7. ').' → logprob: -17.12529754638672
    8. 'r' → logprob: -17.50029754638672
    9. '.s' → logprob: -17.50029754638672
    10. '	r' → logprob: -17.50029754638672

Token 296: 'atio' (ID: 15017)
  Prédit: 'atio'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atio' → logprob: -0.0009120595059357584
    2. 'ratio' → logprob: -8.125911712646484
    3. 'at' → logprob: -8.875911712646484
    4. 'a' → logprob: -9.125911712646484
    5. '.' → logprob: -9.250911712646484
    6. '>' → logprob: -9.625911712646484
    7. '   ' → logprob: -10.000911712646484
    8. 'io' → logprob: -10.750911712646484
    9. '...' → logprob: -11.125911712646484
    10. '```' → logprob: -11.250911712646484

Token 297: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.08088622242212296
    2. ' >' → logprob: -2.580886125564575
    3. '<' → logprob: -6.330886363983154
    4. ' <' → logprob: -8.455885887145996
    5. ' ' → logprob: -14.080885887145996
    6. '[' → logprob: -16.080886840820312
    7. '```' → logprob: -16.080886840820312
    8. '>
' → logprob: -16.705886840820312
    9. '()>' → logprob: -17.080886840820312
    10. '>b' → logprob: -17.705886840820312

Token 298: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -7.493430894101039e-05
    2. ' other' → logprob: -9.500075340270996
    3. '(other' → logprob: -21.00007438659668
    4. '.other' → logprob: -21.62507438659668
    5. 'Other' → logprob: -25.00007438659668
    6. '_other' → logprob: -25.37507438659668
    7. 'others' → logprob: -26.75007438659668
    8. '其他' → logprob: -27.25007438659668
    9. 'othe' → logprob: -28.00007438659668
    10. '-other' → logprob: -28.00007438659668

Token 299: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -6.988221684878226e-06
    2. '.' → logprob: -12.500006675720215
    3. 'ratio' → logprob: -12.750006675720215
    4. ' .' → logprob: -16.12500762939453
    5. '.rate' → logprob: -17.62500762939453
    6. ' ratio' → logprob: -18.00000762939453
    7. '.rating' → logprob: -18.75000762939453
    8. '.other' → logprob: -19.00000762939453
    9. '	r' → logprob: -19.37500762939453
    10. '.rank' → logprob: -19.50000762939453

Token 300: 'atio' (ID: 15017)
  Prédit: 'atio'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atio' → logprob: -0.003058403730392456
    2. '.r' → logprob: -6.378058433532715
    3. '.' → logprob: -6.878058433532715
    4. 'ratio' → logprob: -9.128058433532715
    5. 'ation' → logprob: -9.253058433532715
    6. '.at' → logprob: -9.628058433532715
    7. '.other' → logprob: -10.503058433532715
    8. 'ATIO' → logprob: -12.503058433532715
    9. 'at' → logprob: -12.628058433532715
    10. 'a' → logprob: -13.503058433532715

Token 301: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 302: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 303: ' Fraction' (ID: 112108)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -0.8954014182090759
    2. 'Kn' → logprob: -1.0204014778137207
    3. ' Fraction' → logprob: -2.3954014778137207
    4. 'Solution' → logprob: -2.6454014778137207
    5. ' Kn' → logprob: -3.6454014778137207
    6. 'Item' → logprob: -4.395401477813721
    7. ' Solution' → logprob: -4.520401477813721
    8. 'Gre' → logprob: -4.770401477813721
    9. 'Solver' → logprob: -5.520401477813721
    10. 'K' → logprob: -7.145401477813721

Token 304: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -4.723352049040841e-06
    2. 'Kn' → logprob: -12.875004768371582
    3. 'a' → logprob: -13.375004768371582
    4. 'Item' → logprob: -15.750004768371582
    5. 'alist' → logprob: -16.000003814697266
    6. 'K' → logprob: -16.125003814697266
    7. 'nal' → logprob: -16.500003814697266
    8. 'alk' → logprob: -17.000003814697266
    9. 'ally' → logprob: -17.500003814697266
    10. 'Al' → logprob: -17.625003814697266

Token 305: 'Kn' (ID: 41445)
  Prédit: 'Kn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Kn' → logprob: -0.0024630522821098566
    2. 'K' → logprob: -6.127462863922119
    3. ' Kn' → logprob: -8.502463340759277
    4. '_kn' → logprob: -10.502463340759277
    5. ' kn' → logprob: -10.877463340759277
    6. 'kn' → logprob: -11.127463340759277
    7. '
' → logprob: -12.502463340759277
    8. 'KN' → logprob: -13.002463340759277
    9. '_K' → logprob: -13.502463340759277
    10. '

' → logprob: -13.502463340759277

Token 306: 'apsack' (ID: 178559)
  Prédit: 'apsack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apsack' → logprob: -0.06199401617050171
    2. 'ap' → logprob: -2.8119940757751465
    3. 'aps' → logprob: -10.561993598937988
    4. 'a' → logprob: -15.561993598937988
    5. 'app' → logprob: -16.811994552612305
    6. 'ап' → logprob: -16.811994552612305
    7. '
' → logprob: -17.561994552612305
    8. '[' → logprob: -17.811994552612305
    9. 'e' → logprob: -18.561994552612305
    10. 'n' → logprob: -18.686994552612305

Token 307: 'Solver' (ID: 70484)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003003081073984504
    2. ':
' → logprob: -8.375300407409668
    3. '(' → logprob: -10.125300407409668
    4. '():' → logprob: -11.250300407409668
    5. '{' → logprob: -11.875300407409668
    6. '[' → logprob: -13.625300407409668
    7. 'Solver' → logprob: -14.000300407409668
    8. '):' → logprob: -14.000300407409668
    9. ':

' → logprob: -14.125300407409668
    10. '>:' → logprob: -14.250300407409668

Token 308: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028205662965774536
    2. ':
' → logprob: -5.8778204917907715
    3. '(' → logprob: -11.75282096862793
    4. '():' → logprob: -12.87782096862793
    5. ':

' → logprob: -13.25282096862793
    6. '):' → logprob: -14.25282096862793
    7. '(Standard' → logprob: -14.62782096862793
    8. ':def' → logprob: -15.00282096862793
    9. '(Input' → logprob: -15.25282096862793
    10. ':**' → logprob: -15.37782096862793

Token 309: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016275880858302116
    2. ' def' → logprob: -4.141275882720947
    3. 'def' → logprob: -8.391275405883789
    4. '   ' → logprob: -11.516275405883789
    5. '	def' → logprob: -12.641275405883789
    6. ':' → logprob: -14.516275405883789
    7. '    
' → logprob: -15.141275405883789
    8. '   ' → logprob: -15.766275405883789
    9. '```' → logprob: -15.766275405883789
    10. ' indentation' → logprob: -16.14127540588379

Token 310: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.04985260218381882
    2. ' def' → logprob: -3.0498526096343994
    3. '   ' → logprob: -6.67485237121582
    4. ':' → logprob: -14.17485237121582
    5. '
' → logprob: -15.04985237121582
    6. ' ' → logprob: -15.42485237121582
    7. 'de' → logprob: -15.67485237121582
    8. '__' → logprob: -15.67485237121582
    9. ')' → logprob: -15.92485237121582
    10. '	def' → logprob: -15.92485237121582

Token 311: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5363507866859436
    2. ' __' → logprob: -0.9113507866859436
    3. '__' → logprob: -4.911350727081299
    4. 'def' → logprob: -5.536350727081299
    5. 'init' → logprob: -6.911350727081299
    6. '_init' → logprob: -7.411350727081299
    7. ' init' → logprob: -8.786351203918457
    8. ' ' → logprob: -10.536351203918457
    9. '_' → logprob: -10.786351203918457
    10. '```' → logprob: -11.286351203918457

Token 312: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.512236498361744e-07
    2. 'def' → logprob: -15.500000953674316
    3. '```' → logprob: -15.625000953674316
    4. '
' → logprob: -16.375
    5. '   ' → logprob: -17.75
    6. ' init' → logprob: -18.0
    7. 'in' → logprob: -19.75
    8. '

' → logprob: -19.75
    9. '(init' → logprob: -19.75
    10. 'int' → logprob: -20.25

Token 313: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.004504654090851545
    2. '(self' → logprob: -5.879504680633545
    3. ' (' → logprob: -7.754504680633545
    4. '__' → logprob: -7.754504680633545
    5. '__(
' → logprob: -7.754504680633545
    6. '(' → logprob: -7.879504680633545
    7. 'self' → logprob: -11.879504203796387
    8. '_(' → logprob: -12.254504203796387
    9. '   ' → logprob: -12.254504203796387
    10. ',' → logprob: -12.504504203796387

Token 314: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.333223139634356e-05
    2. ' self' → logprob: -10.875033378601074
    3. '       ' → logprob: -11.750033378601074
    4. '   ' → logprob: -12.750033378601074
    5. '
' → logprob: -12.875033378601074
    6. ',' → logprob: -14.625033378601074
    7. ')' → logprob: -15.250033378601074
    8. '0' → logprob: -17.125032424926758
    9. '(self' → logprob: -17.125032424926758
    10. '):
' → logprob: -17.750032424926758

Token 315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03921652212738991
    2. 'self' → logprob: -3.2892165184020996
    3. '   ' → logprob: -7.7892165184021
    4. ' ,' → logprob: -7.9142165184021
    5. ' self' → logprob: -9.039216995239258
    6. '(self' → logprob: -9.039216995239258
    7. '       ' → logprob: -10.164216995239258
    8. ')' → logprob: -10.289216995239258
    9. ',self' → logprob: -10.289216995239258
    10. '
' → logprob: -10.789216995239258

Token 316: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.14260154962539673
    2. 'items' → logprob: -2.267601490020752
    3. 'capacity' → logprob: -4.142601490020752
    4. 'self' → logprob: -5.267601490020752
    5. 'reader' → logprob: -6.142601490020752
    6. ' N' → logprob: -6.142601490020752
    7. 'n' → logprob: -6.517601490020752
    8. ' items' → logprob: -7.017601490020752
    9. 'W' → logprob: -7.267601490020752
    10. ' capacity' → logprob: -8.64260196685791

Token 317: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11297468841075897
    2. ':' → logprob: -2.2379746437072754
    3. ':int' → logprob: -8.987975120544434
    4. ' ,' → logprob: -11.112975120544434
    5. '   ' → logprob: -12.487975120544434
    6. ',W' → logprob: -12.987975120544434
    7. ' :' → logprob: -13.487975120544434
    8. '):' → logprob: -13.487975120544434
    9. ')' → logprob: -13.987975120544434
    10. ',
' → logprob: -14.112975120544434

Token 318: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004086116328835487
    2. ' int' → logprob: -5.504086017608643
    3. ',' → logprob: -12.6290864944458
    4. '   ' → logprob: -13.6290864944458
    5. ':int' → logprob: -14.1290864944458
    6. ' ' → logprob: -14.3790864944458
    7. 'None' → logprob: -14.8790864944458
    8. ')' → logprob: -15.0040864944458
    9. '       ' → logprob: -15.1290864944458
    10. '	int' → logprob: -15.3790864944458

Token 319: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2113979209971149e-05
    2. ' ,' → logprob: -11.500012397766113
    3. ',W' → logprob: -13.750012397766113
    4. '   ' → logprob: -14.125012397766113
    5. ',int' → logprob: -17.625011444091797
    6. ',w' → logprob: -17.750011444091797
    7. ',
' → logprob: -18.125011444091797
    8. '       ' → logprob: -18.125011444091797
    9. ',N' → logprob: -18.625011444091797
    10. '  ' → logprob: -19.000011444091797

Token 320: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.026407936587929726
    2. ' W' → logprob: -3.6514079570770264
    3. '   ' → logprob: -9.276408195495605
    4. 'items' → logprob: -11.901408195495605
    5. 'capacity' → logprob: -13.651408195495605
    6. ' ' → logprob: -13.776408195495605
    7. ' items' → logprob: -13.901408195495605
    8. '    ' → logprob: -14.026408195495605
    9. '       ' → logprob: -14.401408195495605
    10. 'max' → logprob: -14.651408195495605

Token 321: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011050907196477056
    2. ',' → logprob: -7.126105308532715
    3. ':int' → logprob: -8.126105308532715
    4. '   ' → logprob: -12.876105308532715
    5. 'int' → logprob: -14.001105308532715
    6. '):' → logprob: -14.126105308532715
    7. '):
' → logprob: -15.751105308532715
    8. ' :' → logprob: -15.751105308532715
    9. ')' → logprob: -16.3761043548584
    10. ' ,' → logprob: -16.5011043548584

Token 322: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.3782830137643032e-05
    2. ' int' → logprob: -11.25001335144043
    3. 'float' → logprob: -14.62501335144043
    4. '   ' → logprob: -16.00001335144043
    5. ')' → logprob: -16.50001335144043
    6. '[int' → logprob: -16.62501335144043
    7. ':int' → logprob: -18.00001335144043
    8. '	int' → logprob: -18.50001335144043
    9. '=int' → logprob: -18.87501335144043
    10. '
' → logprob: -19.25001335144043

Token 323: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.039231881499290466
    2. ')' → logprob: -3.539231777191162
    3. '):' → logprob: -4.789231777191162
    4. '):
' → logprob: -6.914231777191162
    5. '   ' → logprob: -9.53923225402832
    6. ' ,' → logprob: -10.53923225402832
    7. '       ' → logprob: -12.16423225402832
    8. '):
' → logprob: -12.28923225402832
    9. ' )' → logprob: -12.41423225402832
    10. ',
' → logprob: -12.41423225402832

Token 324: ' items' (ID: 4732)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.004093597177416086
    2. ' items' → logprob: -5.504093647003174
    3. '   ' → logprob: -12.254093170166016
    4. '       ' → logprob: -12.379093170166016
    5. '	items' → logprob: -12.629093170166016
    6. '_items' → logprob: -13.754093170166016
    7. 'item' → logprob: -15.004093170166016
    8. '.items' → logprob: -15.004093170166016
    9. 'data' → logprob: -15.504093170166016
    10. ' ' → logprob: -15.629093170166016

Token 325: '_data' (ID: 3537)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -8.73314929776825e-05
    2. '):' → logprob: -9.37508773803711
    3. ')' → logprob: -13.75008773803711
    4. '_:' → logprob: -14.25008773803711
    5. '):
' → logprob: -14.87508773803711
    6. ' :' → logprob: -16.50008773803711
    7. ' ):' → logprob: -16.62508773803711
    8. '   ' → logprob: -16.75008773803711
    9. ':list' → logprob: -17.37508773803711
    10. '：' → logprob: -17.50008773803711

Token 326: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06234229728579521
    2. '):' → logprob: -2.812342405319214
    3. '):
' → logprob: -8.312342643737793
    4. ')' → logprob: -9.187342643737793
    5. ' ):' → logprob: -11.187342643737793
    6. ':list' → logprob: -12.187342643737793
    7. ' :' → logprob: -12.812342643737793
    8. '[]):' → logprob: -13.812342643737793
    9. '):
' → logprob: -14.437342643737793
    10. ']:' → logprob: -14.437342643737793

Token 327: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -2.45848218582978e-06
    2. ' List' → logprob: -13.00000286102295
    3. '[List' → logprob: -15.75000286102295
    4. '	List' → logprob: -18.625001907348633
    5. ')' → logprob: -18.875001907348633
    6. 'list' → logprob: -19.250001907348633
    7. '   ' → logprob: -20.500001907348633
    8. 'Tuple' → logprob: -20.625001907348633
    9. '       ' → logprob: -22.375001907348633
    10. ' ' → logprob: -22.500001907348633

Token 328: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. '   ' → logprob: -15.375000953674316
    3. 'Tuple' → logprob: -16.375
    4. '       ' → logprob: -16.75
    5. '[int' → logprob: -17.75
    6. '<Tuple' → logprob: -18.125
    7. '[
' → logprob: -18.25
    8. '           ' → logprob: -18.375
    9. '[List' → logprob: -18.625
    10. '):
' → logprob: -19.375

Token 329: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -1.5048530030981055e-06
    2. ' Tuple' → logprob: -13.625001907348633
    3. 'tuple' → logprob: -16.375001907348633
    4. '[' → logprob: -16.750001907348633
    5. 'Tu' → logprob: -18.500001907348633
    6. '   ' → logprob: -18.625001907348633
    7. '<Tuple' → logprob: -19.250001907348633
    8. ' ' → logprob: -19.500001907348633
    9. '.Tuple' → logprob: -19.750001907348633
    10. '       ' → logprob: -20.625001907348633

Token 330: '[int' (ID: 40124)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6931481957435608
    2. '[int' → logprob: -0.6931481957435608
    3. ' int' → logprob: -15.068148612976074
    4. '<int' → logprob: -15.318148612976074
    5. ',int' → logprob: -16.068147659301758
    6. ']int' → logprob: -16.193147659301758
    7. '(int' → logprob: -16.443147659301758
    8. '   ' → logprob: -16.943147659301758
    9. '```' → logprob: -17.318147659301758
    10. '	int' → logprob: -17.693147659301758

Token 331: ',int' (ID: 20909)
  Prédit: ',int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.014287732541561127
    2. ',' → logprob: -4.264287948608398
    3. 'int' → logprob: -9.014287948608398
    4. '[int' → logprob: -13.139287948608398
    5. ' ,' → logprob: -14.889287948608398
    6. ']int' → logprob: -16.8892879486084
    7. ',
' → logprob: -17.3892879486084
    8. '(int' → logprob: -17.7642879486084
    9. ',float' → logprob: -17.7642879486084
    10. ':int' → logprob: -18.1392879486084

Token 332: ']])' (ID: 64959)
  Prédit: ']])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']])' → logprob: -0.4752487242221832
    2. ']]' → logprob: -0.9752486944198608
    3. '])' → logprob: -7.35024881362915
    4. ']' → logprob: -8.350248336791992
    5. ']):' → logprob: -8.475248336791992
    6. ')]' → logprob: -10.600248336791992
    7. ')])' → logprob: -11.225248336791992
    8. ']]:
' → logprob: -11.475248336791992
    9. ')' → logprob: -11.600248336791992
    10. ']],' → logprob: -11.725248336791992

Token 333: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01427645143121481
    2. ':
' → logprob: -4.264276504516602
    3. '):' → logprob: -10.264276504516602
    4. '):
' → logprob: -10.514276504516602
    5. '   ' → logprob: -10.764276504516602
    6. '       ' → logprob: -11.139276504516602
    7. ')' → logprob: -11.514276504516602
    8. ',' → logprob: -12.889276504516602
    9. '():
' → logprob: -15.389276504516602
    10. '<|end|>' → logprob: -15.389276504516602

Token 334: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0007102862582542002
    2. ' None' → logprob: -7.250710487365723
    3. '   ' → logprob: -15.000710487365723
    4. '_None' → logprob: -18.875709533691406
    5. ' ' → logprob: -19.125709533691406
    6. 'none' → logprob: -19.750709533691406
    7. 'void' → logprob: -20.125709533691406
    8. ',None' → logprob: -20.500709533691406
    9. '  ' → logprob: -20.750709533691406
    10. 'No' → logprob: -20.875709533691406

Token 335: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04457707330584526
    2. ':
' → logprob: -3.419577121734619
    3. '       ' → logprob: -4.544577121734619
    4. '):
' → logprob: -8.669576644897461
    5. '):' → logprob: -10.169576644897461
    6. ',' → logprob: -10.919576644897461
    7. '   ' → logprob: -11.919576644897461
    8. ')' → logprob: -12.294576644897461
    9. '<|end|>' → logprob: -12.669576644897461
    10. '():
' → logprob: -14.044576644897461

Token 336: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.318681188422488e-05
    2. '   ' → logprob: -11.50001335144043
    3. 'self' → logprob: -13.87501335144043
    4. '	' → logprob: -14.62501335144043
    5. '      ' → logprob: -14.87501335144043
    6. '	   ' → logprob: -15.25001335144043
    7. '<|end|>' → logprob: -15.62501335144043
    8. ' self' → logprob: -15.75001335144043
    9. '     ' → logprob: -15.87501335144043
    10. '    ' → logprob: -16.00001335144043

Token 337: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.25215449929237366
    2. '       ' → logprob: -1.5021544694900513
    3. ' self' → logprob: -8.502154350280762
    4. '   ' → logprob: -10.752154350280762
    5. '	self' → logprob: -14.627154350280762
    6. 'super' → logprob: -15.627154350280762
    7. '     ' → logprob: -16.002155303955078
    8. ' ' → logprob: -16.127155303955078
    9. '      ' → logprob: -16.252155303955078
    10. '	' → logprob: -18.002155303955078

Token 338: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.013918785378336906
    2. '.' → logprob: -4.388918876647949
    3. ' .' → logprob: -7.638918876647949
    4. '.items' → logprob: -8.01391887664795
    5. '.n' → logprob: -8.26391887664795
    6. '.W' → logprob: -8.38891887664795
    7. 'N' → logprob: -9.38891887664795
    8. '.w' → logprob: -11.51391887664795
    9. 'items' → logprob: -12.01391887664795
    10. '.I' → logprob: -13.26391887664795

Token 339: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12275006622076035
    2. ' =' → logprob: -2.2477500438690186
    3. ',' → logprob: -4.622750282287598
    4. '=N' → logprob: -10.247750282287598
    5. '   ' → logprob: -11.872750282287598
    6. ' ,' → logprob: -12.622750282287598
    7. ',N' → logprob: -12.997750282287598
    8. '    ' → logprob: -13.122750282287598
    9. ' ' → logprob: -13.247750282287598
    10. '  ' → logprob: -15.122750282287598

Token 340: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.676292231422849e-05
    2. ' N' → logprob: -11.000017166137695
    3. '	N' → logprob: -19.500017166137695
    4. '   ' → logprob: -20.875017166137695
    5. ' ' → logprob: -21.625017166137695
    6. '_N' → logprob: -22.375017166137695
    7. '=N' → logprob: -22.375017166137695
    8. '<N' → logprob: -22.500017166137695
    9. '
' → logprob: -22.625017166137695
    10. '  ' → logprob: -22.750017166137695

Token 341: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10076621174812317
    2. '
' → logprob: -2.350766181945801
    3. ',' → logprob: -8.6007661819458
    4. '<|end|>' → logprob: -8.7257661819458
    5. 'self' → logprob: -8.9757661819458
    6. '        
' → logprob: -9.8507661819458
    7. ',
' → logprob: -11.9757661819458
    8. '
' → logprob: -12.1007661819458
    9. '  
' → logprob: -12.2257661819458
    10. ' 
' → logprob: -12.7257661819458

Token 342: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016281676944345236
    2. 'self' → logprob: -6.501628398895264
    3. ' self' → logprob: -9.126627922058105
    4. ',' → logprob: -11.126627922058105
    5. '   ' → logprob: -14.376627922058105
    6. '      ' → logprob: -14.626627922058105
    7. '<|end|>' → logprob: -14.626627922058105
    8. '	self' → logprob: -16.001628875732422
    9. ',self' → logprob: -16.001628875732422
    10. '           ' → logprob: -16.376628875732422

Token 343: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -5.2524021157296374e-05
    2. ' self' → logprob: -10.500052452087402
    3. '       ' → logprob: -10.625052452087402
    4. '
' → logprob: -14.625052452087402
    5. '   ' → logprob: -16.00005340576172
    6. '        
' → logprob: -17.62505340576172
    7. '	self' → logprob: -18.62505340576172
    8. '  ' → logprob: -19.12505340576172
    9. 'W' → logprob: -19.25005340576172
    10. '      ' → logprob: -19.37505340576172

Token 344: '.W' (ID: 2342)
  Prédit: '.W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.W' → logprob: -0.015473226085305214
    2. '.' → logprob: -4.390473365783691
    3. 'W' → logprob: -6.015473365783691
    4. ' .' → logprob: -8.140473365783691
    5. ',' → logprob: -9.390473365783691
    6. '   ' → logprob: -9.640473365783691
    7. ' W' → logprob: -11.140473365783691
    8. ',W' → logprob: -11.265473365783691
    9. '.N' → logprob: -11.890473365783691
    10. ' ' → logprob: -11.890473365783691

Token 345: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132713735103607
    2. ' =' → logprob: -1.313271403312683
    3. ',' → logprob: -12.188271522521973
    4. '=W' → logprob: -12.938271522521973
    5. ' ' → logprob: -13.438271522521973
    6. '        ' → logprob: -15.938271522521973
    7. '    ' → logprob: -16.313270568847656
    8. ' ,' → logprob: -16.813270568847656
    9. '   ' → logprob: -16.938270568847656
    10. '       ' → logprob: -17.188270568847656

Token 346: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0019300628919154406
    2. ' W' → logprob: -6.251930236816406
    3. '   ' → logprob: -14.501930236816406
    4. '       ' → logprob: -15.251930236816406
    5. ' ' → logprob: -15.376930236816406
    6. '	W' → logprob: -15.751930236816406
    7. '  ' → logprob: -16.251930236816406
    8. '    ' → logprob: -16.626930236816406
    9. '        ' → logprob: -17.376930236816406
    10. '     ' → logprob: -17.751930236816406

Token 347: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.054500666621607e-06
    2. ',' → logprob: -13.12500286102295
    3. 'self' → logprob: -14.62500286102295
    4. '<|end|>' → logprob: -15.25000286102295
    5. '   ' → logprob: -15.75000286102295
    6. ' self' → logprob: -16.500003814697266
    7. '           ' → logprob: -17.125003814697266
    8. '      ' → logprob: -17.500003814697266
    9. '	' → logprob: -18.500003814697266
    10. '	   ' → logprob: -18.750003814697266

Token 348: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.584239938296378e-06
    2. 'self' → logprob: -11.875007629394531
    3. ' self' → logprob: -14.750007629394531
    4. '   ' → logprob: -16.00000762939453
    5. ',' → logprob: -17.25000762939453
    6. '	' → logprob: -18.62500762939453
    7. '           ' → logprob: -18.62500762939453
    8. '      ' → logprob: -19.00000762939453
    9. '	   ' → logprob: -19.62500762939453
    10. '	self' → logprob: -19.87500762939453

Token 349: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -8.061054359131958e-06
    2. '       ' → logprob: -11.750007629394531
    3. ' self' → logprob: -16.37500762939453
    4. '   ' → logprob: -20.12500762939453
    5. '        
' → logprob: -20.50000762939453
    6. '	self' → logprob: -21.25000762939453
    7. '[self' → logprob: -21.87500762939453
    8. '
' → logprob: -22.00000762939453
    9. 'items' → logprob: -22.12500762939453
    10. '#' → logprob: -23.00000762939453

Token 350: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -6.098748053773306e-05
    2. 'items' → logprob: -9.75006103515625
    3. ' .' → logprob: -13.50006103515625
    4. '.' → logprob: -14.87506103515625
    5. '_items' → logprob: -15.50006103515625
    6. '.item' → logprob: -16.00006103515625
    7. ' items' → logprob: -16.12506103515625
    8. '.data' → logprob: -16.25006103515625
    9. '.values' → logprob: -16.25006103515625
    10. '	items' → logprob: -16.75006103515625

Token 351: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07891006022691727
    2. ' =' → logprob: -2.5789101123809814
    3. '   ' → logprob: -11.078909873962402
    4. ':' → logprob: -13.078909873962402
    5. '=[' → logprob: -13.828909873962402
    6. 'data' → logprob: -13.953909873962402
    7. '=[]' → logprob: -14.953909873962402
    8. '_data' → logprob: -15.453909873962402
    9. ' ' → logprob: -16.07891082763672
    10. ' =[' → logprob: -16.20391082763672

Token 352: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.214019307051785e-05
    2. ' [' → logprob: -11.250032424926758
    3. '[item' → logprob: -11.750032424926758
    4. '[List' → logprob: -12.250032424926758
    5. 'sorted' → logprob: -12.250032424926758
    6. '[list' → logprob: -13.750032424926758
    7. '[Index' → logprob: -15.500032424926758
    8. '[self' → logprob: -15.875032424926758
    9. '[I' → logprob: -17.125032424926758
    10. ' sorted' → logprob: -18.000032424926758

Token 353: 'Item' (ID: 1590)
  Prédit: 'Item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Item' → logprob: -1.9361264946837764e-07
    2. ' Item' → logprob: -16.375
    3. '   ' → logprob: -18.5
    4. '	Item' → logprob: -19.0
    5. '(Item' → logprob: -19.75
    6. '       ' → logprob: -21.125
    7. 'item' → logprob: -22.375
    8. '<Item' → logprob: -22.875
    9. '_Item' → logprob: -23.125
    10. 'class' → logprob: -23.375

Token 354: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.018179794773459435
    2. '(*' → logprob: -4.018179893493652
    3. '(' → logprob: -11.393179893493652
    4. '(*(' → logprob: -11.393179893493652
    5. 'w' → logprob: -12.018179893493652
    6. '(i' → logprob: -15.143179893493652
    7. '*w' → logprob: -15.143179893493652
    8. '(weight' → logprob: -16.018178939819336
    9. '(**' → logprob: -16.018178939819336
    10. '(v' → logprob: -16.143178939819336

Token 355: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3162620961666107
    2. ',v' → logprob: -1.316262125968933
    3. ',w' → logprob: -6.441262245178223
    4. 'v' → logprob: -6.816262245178223
    5. 'w' → logprob: -8.566262245178223
    6. ',item' → logprob: -10.816262245178223
    7. ' ,' → logprob: -11.066262245178223
    8. ',d' → logprob: -11.441262245178223
    9. 'i' → logprob: -11.566262245178223
    10. 'vi' → logprob: -11.816262245178223

Token 356: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.7610454708337784e-05
    2. ' v' → logprob: -10.500027656555176
    3. '   ' → logprob: -19.62502670288086
    4. ')v' → logprob: -19.87502670288086
    5. '           ' → logprob: -20.00002670288086
    6. '    ' → logprob: -20.75002670288086
    7. '	v' → logprob: -20.87502670288086
    8. '       ' → logprob: -21.12502670288086
    9. ' ' → logprob: -21.37502670288086
    10. '
' → logprob: -21.50002670288086

Token 357: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ' )' → logprob: -13.250003814697266
    3. 'for' → logprob: -14.250003814697266
    4. ')
' → logprob: -15.000003814697266
    5. 'data' → logprob: -15.500003814697266
    6. 'w' → logprob: -15.625003814697266
    7. 'v' → logprob: -15.625003814697266
    8. ' for' → logprob: -15.875003814697266
    9. '   ' → logprob: -16.000003814697266
    10. 'items' → logprob: -16.125003814697266

Token 358: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5762625336647034
    2. ' for' → logprob: -0.8262625336647034
    3. ')' → logprob: -8.701262474060059
    4. '(w' → logprob: -9.201262474060059
    5. '   ' → logprob: -10.826262474060059
    6. '           ' → logprob: -11.701262474060059
    7. '        ' → logprob: -11.951262474060059
    8. '       ' → logprob: -12.326262474060059
    9. ' ' → logprob: -12.576262474060059
    10. '         ' → logprob: -12.951262474060059

Token 359: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.015338707715272903
    2. ' w' → logprob: -4.265338897705078
    3. '(w' → logprob: -6.765338897705078
    4. ' (' → logprob: -10.765338897705078
    5. '	w' → logprob: -16.140338897705078
    6. '_w' → logprob: -16.515338897705078
    7. '   ' → logprob: -16.640338897705078
    8. '(' → logprob: -16.890338897705078
    9. ',w' → logprob: -17.140338897705078
    10. '[w' → logprob: -17.640338897705078

Token 360: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20148418843746185
    2. ',v' → logprob: -1.701484203338623
    3. ',_' → logprob: -10.826483726501465
    4. ' ,' → logprob: -10.951483726501465
    5. ',w' → logprob: -11.076483726501465
    6. 'v' → logprob: -11.576483726501465
    7. '_,' → logprob: -12.951483726501465
    8. ',value' → logprob: -13.326483726501465
    9. ',
' → logprob: -13.826483726501465
    10. 'w' → logprob: -14.326483726501465

Token 361: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0019286326132714748
    2. ' v' → logprob: -6.251928806304932
    3. '	v' → logprob: -17.251928329467773
    4. ')v' → logprob: -17.626928329467773
    5. 'items' → logprob: -17.876928329467773
    6. ' ' → logprob: -18.251928329467773
    7. '_v' → logprob: -18.626928329467773
    8. ',v' → logprob: -18.876928329467773
    9. '(v' → logprob: -19.001928329467773
    10. '   ' → logprob: -20.001928329467773

Token 362: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03376775607466698
    2. 'in' → logprob: -3.4087677001953125
    3. 'items' → logprob: -9.033767700195312
    4. ')' → logprob: -14.033767700195312
    5. ' items' → logprob: -14.408767700195312
    6. ' ' → logprob: -14.783767700195312
    7. 's' → logprob: -15.158767700195312
    8. 'self' → logprob: -16.158767700195312
    9. ']' → logprob: -16.158767700195312
    10. '   ' → logprob: -16.658767700195312

Token 363: ' items' (ID: 4732)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.0052350712940096855
    2. ' items' → logprob: -5.255235195159912
    3. '.items' → logprob: -14.380234718322754
    4. '(items' → logprob: -15.255234718322754
    5. '	items' → logprob: -15.630234718322754
    6. '```' → logprob: -16.50523567199707
    7. '
' → logprob: -16.50523567199707
    8. '   ' → logprob: -17.13023567199707
    9. '_items' → logprob: -17.25523567199707
    10. ' ' → logprob: -17.25523567199707

Token 364: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -4.811348480870947e-05
    2. 'data' → logprob: -10.37504768371582
    3. ')' → logprob: -11.87504768371582
    4. 's' → logprob: -12.25004768371582
    5. 'Data' → logprob: -13.87504768371582
    6. ']' → logprob: -14.00004768371582
    7. 'ata' → logprob: -14.62504768371582
    8. '])' → logprob: -14.75004768371582
    9. '   ' → logprob: -14.87504768371582
    10. '_items' → logprob: -14.87504768371582

Token 365: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.5107177862082608e-05
    2. ' ]' → logprob: -10.875024795532227
    3. ')]' → logprob: -13.000024795532227
    4. ']
' → logprob: -13.125024795532227
    5. '       ' → logprob: -13.625024795532227
    6. '   ' → logprob: -15.000024795532227
    7. ')' → logprob: -16.250024795532227
    8. '()]' → logprob: -16.625024795532227
    9. ']

' → logprob: -16.875024795532227
    10. ']}' → logprob: -17.500024795532227

Token 366: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.613371729850769
    2. '   ' → logprob: -0.988371729850769
    3. '<|end|>' → logprob: -3.1133718490600586
    4. 'def' → logprob: -3.9883718490600586
    5. '    
' → logprob: -4.488371849060059
    6. ' def' → logprob: -4.738371849060059
    7. '<|end|>' → logprob: -6.613371849060059
    8. '        
' → logprob: -7.113371849060059
    9. '  
' → logprob: -8.113371849060059
    10. '       ' → logprob: -8.363371849060059

Token 367: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06218480318784714
    2. '   ' → logprob: -2.8121848106384277
    3. ' def' → logprob: -8.43718433380127
    4. '       ' → logprob: -15.56218433380127
    5. '	def' → logprob: -15.81218433380127
    6. ' ' → logprob: -17.187185287475586
    7. '```' → logprob: -17.187185287475586
    8. '
' → logprob: -17.187185287475586
    9. '        
' → logprob: -18.562185287475586
    10. '  ' → logprob: -18.812185287475586

Token 368: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -5.676981345459353e-06
    2. ' def' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.5000057220459
    4. '
' → logprob: -18.1250057220459
    5. 'from' → logprob: -19.8750057220459
    6. '```' → logprob: -20.7500057220459
    7. '    
' → logprob: -21.0000057220459
    8. '	def' → logprob: -21.2500057220459
    9. 'class' → logprob: -21.5000057220459
    10. '       ' → logprob: -21.5000057220459

Token 369: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.16036070883274078
    2. ' solve' → logprob: -1.9103606939315796
    3. 'fraction' → logprob: -9.410360336303711
    4. 'maximize' → logprob: -10.285360336303711
    5. ' maximize' → logprob: -11.785360336303711
    6. ' fractional' → logprob: -12.535360336303711
    7. 'compute' → logprob: -13.285360336303711
    8. 'max' → logprob: -13.410360336303711
    9. '.solve' → logprob: -13.535360336303711
    10. 'calculate' → logprob: -13.785360336303711

Token 370: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.047134305234067e-05
    2. '(' → logprob: -10.625030517578125
    3. ' (' → logprob: -13.000030517578125
    4. '   ' → logprob: -13.125030517578125
    5. '       ' → logprob: -14.000030517578125
    6. 'self' → logprob: -14.500030517578125
    7. '()' → logprob: -14.875030517578125
    8. ')' → logprob: -17.125030517578125
    9. '(sel' → logprob: -17.625030517578125
    10. '```' → logprob: -18.125030517578125

Token 371: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004636776284314692
    2. '):' → logprob: -8.250463485717773
    3. 'self' → logprob: -9.500463485717773
    4. ',' → logprob: -9.875463485717773
    5. ')->' → logprob: -10.250463485717773
    6. '):
' → logprob: -10.625463485717773
    7. '(self' → logprob: -12.000463485717773
    8. '   ' → logprob: -12.250463485717773
    9. ' )' → logprob: -13.000463485717773
    10. '):
' → logprob: -14.000463485717773

Token 372: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.22617419064044952
    2. '->' → logprob: -1.601174235343933
    3. ':' → logprob: -7.726174354553223
    4. ')' → logprob: -8.976174354553223
    5. '   ' → logprob: -9.351174354553223
    6. ')->' → logprob: -9.601174354553223
    7. '       ' → logprob: -10.976174354553223
    8. ' ' → logprob: -11.601174354553223
    9. '->{' → logprob: -12.726174354553223
    10. '->[' → logprob: -12.726174354553223

Token 373: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.007435539271682501
    2. ' float' → logprob: -5.257435321807861
    3. 'int' → logprob: -6.132435321807861
    4. ' int' → logprob: -11.13243579864502
    5. '   ' → logprob: -12.25743579864502
    6. 'List' → logprob: -12.38243579864502
    7. 'None' → logprob: -13.00743579864502
    8. ' ' → logprob: -14.13243579864502
    9. '(float' → logprob: -14.88243579864502
    10. '	float' → logprob: -15.38243579864502

Token 374: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9005402326583862
    2. '       ' → logprob: -0.9005402326583862
    3. ':
' → logprob: -1.7755402326583862
    4. '(self' → logprob: -4.525540351867676
    5. '   ' → logprob: -5.025540351867676
    6. 'self' → logprob: -8.150540351867676
    7. '(' → logprob: -10.025540351867676
    8. '():' → logprob: -10.400540351867676
    9. '():
' → logprob: -10.650540351867676
    10. '):
' → logprob: -10.775540351867676

Token 375: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003601336502470076
    2. 'total' → logprob: -9.500360488891602
    3. 'weight' → logprob: -9.625360488891602
    4. ' weight' → logprob: -9.750360488891602
    5. ' capacity' → logprob: -9.750360488891602
    6. ' total' → logprob: -9.875360488891602
    7. 'capacity' → logprob: -11.250360488891602
    8. '        ' → logprob: -11.875360488891602
    9. 'result' → logprob: -12.250360488891602
    10. '```' → logprob: -12.750360488891602

Token 376: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.26531150937080383
    2. 'capacity' → logprob: -1.6403114795684814
    3. '       ' → logprob: -3.5153114795684814
    4. 'remaining' → logprob: -5.6403117179870605
    5. 'sorted' → logprob: -6.6403117179870605
    6. ' capacity' → logprob: -6.7653117179870605
    7. 'weight' → logprob: -7.0153117179870605
    8. 'total' → logprob: -7.0153117179870605
    9. ' self' → logprob: -7.6403117179870605
    10. 'current' → logprob: -7.8903117179870605

Token 377: ' Because' (ID: 13602)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0032593535725027323
    2. '       ' → logprob: -7.003259181976318
    3. 'result' → logprob: -7.003259181976318
    4. ' self' → logprob: -7.378259181976318
    5. 'sorted' → logprob: -8.003259658813477
    6. 'total' → logprob: -8.128259658813477
    7. 'items' → logprob: -9.753259658813477
    8. 'capacity' → logprob: -10.003259658813477
    9. '#' → logprob: -10.128259658813477
    10. 'remaining' → logprob: -11.878259658813477

Token 378: ' w' (ID: 286)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4765976369380951
    2. 'self' → logprob: -1.3515976667404175
    3. ' not' → logprob: -2.226597547531128
    4. ' W' → logprob: -5.101597785949707
    5. 'not' → logprob: -5.976597785949707
    6. 'sorted' → logprob: -6.976597785949707
    7. ' len' → logprob: -7.101597785949707
    8. 'W' → logprob: -7.101597785949707
    9. 'len' → logprob: -7.976597785949707
    10. ' sorted' → logprob: -8.101597785949707

Token 379: '_i' (ID: 10853)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -1.3559726476669312
    2. 'e' → logprob: -1.3559726476669312
    3. ' and' → logprob: -2.2309727668762207
    4. ' >' → logprob: -2.3559727668762207
    5. ' ==' → logprob: -2.4809727668762207
    6. '   ' → logprob: -3.3559727668762207
    7. 's' → logprob: -3.3559727668762207
    8. '=' → logprob: -3.4809727668762207
    9. '==' → logprob: -3.4809727668762207
    10. ' <=' → logprob: -4.855972766876221

Token 380: ' and' (ID: 326)
  Prédit: ' may'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' may' → logprob: -0.9754400253295898
    2. '==' → logprob: -1.2254400253295898
    3. ' ==' → logprob: -2.60044002532959
    4. '>' → logprob: -2.60044002532959
    5. ' and' → logprob: -3.22544002532959
    6. 'may' → logprob: -3.22544002532959
    7. ' can' → logprob: -3.72544002532959
    8. '<=' → logprob: -3.85044002532959
    9. ' might' → logprob: -3.97544002532959
    10. 's' → logprob: -4.35044002532959

Token 381: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0010418595047667623
    2. ' v' → logprob: -6.876041889190674
    3. 'W' → logprob: -12.376041412353516
    4. 'V' → logprob: -12.751041412353516
    5. 'self' → logprob: -14.251041412353516
    6. 'w' → logprob: -14.876041412353516
    7. '_v' → logprob: -15.001041412353516
    8. 'values' → logprob: -15.876041412353516
    9. '#' → logprob: -16.876041412353516
    10. 'items' → logprob: -17.001041412353516

Token 382: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -1.1261307001113892
    2. ' are' → logprob: -1.3761307001113892
    3. ' can' → logprob: -1.7511307001113892
    4. ' may' → logprob: -2.3761305809020996
    5. 'are' → logprob: -3.0011305809020996
    6. ' might' → logprob: -3.5011305809020996
    7. 'may' → logprob: -4.5011305809021
    8. ' could' → logprob: -4.8761305809021
    9. ' and' → logprob: -5.2511305809021
    10. '==' → logprob: -5.3761305809021

Token 383: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.23526298999786377
    2. 'can' → logprob: -1.9852629899978638
    3. ' may' → logprob: -3.110262870788574
    4. 'may' → logprob: -3.985262870788574
    5. ' are' → logprob: -5.360262870788574
    6. 'could' → logprob: -6.610262870788574
    7. ' could' → logprob: -6.860262870788574
    8. ' might' → logprob: -6.985262870788574
    9. 'are' → logprob: -7.235262870788574
    10. 'might' → logprob: -8.610262870788574

Token 384: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.14273571968078613
    2. 'be' → logprob: -2.017735719680786
    3. 'both' → logprob: -11.017735481262207
    4. ' have' → logprob: -11.517735481262207
    5. '	be' → logprob: -11.767735481262207
    6. ' both' → logprob: -11.767735481262207
    7. 'have' → logprob: -12.767735481262207
    8. '#' → logprob: -13.392735481262207
    9. '[' → logprob: -13.392735481262207
    10. 'include' → logprob: -13.642735481262207

Token 385: ' negative' (ID: 12626)
  Prédit: 'negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'negative' → logprob: -0.010366715490818024
    2. 'zero' → logprob: -5.010366916656494
    3. '0' → logprob: -6.010366916656494
    4. ' negative' → logprob: -7.635366916656494
    5. 'both' → logprob: -8.135366439819336
    6. 'positive' → logprob: -8.260366439819336
    7. 'non' → logprob: -10.135366439819336
    8. 'any' → logprob: -10.260366439819336
    9. ' zero' → logprob: -11.010366439819336
    10. 'large' → logprob: -11.385366439819336

Token 386: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5473027229309082
    2. ',' → logprob: -0.9223027229309082
    3. ',
' → logprob: -4.422302722930908
    4. '       ' → logprob: -5.047302722930908
    5. '<|end|>' → logprob: -5.797302722930908
    6. '        
' → logprob: -7.047302722930908
    7. '<|end|>' → logprob: -7.172302722930908
    8. '
' → logprob: -8.67230224609375
    9. '#' → logprob: -9.04730224609375
    10. ':' → logprob: -9.54730224609375

Token 387: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.504326343536377
    2. '       ' → logprob: -1.754326343536377
    3. 'self' → logprob: -1.754326343536377
    4. 'result' → logprob: -3.879326343536377
    5. 'total' → logprob: -4.504326343536377
    6. ' self' → logprob: -5.004326343536377
    7. 'sorted' → logprob: -5.379326343536377
    8. 'we' → logprob: -6.004326343536377
    9. ' #' → logprob: -6.504326343536377
    10. ' total' → logprob: -7.629326343536377

Token 388: ' must' (ID: 2804)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.7009726166725159
    2. ' cannot' → logprob: -1.825972557067871
    3. 'need' → logprob: -2.075972557067871
    4. ' must' → logprob: -3.200972557067871
    5. 'cannot' → logprob: -3.200972557067871
    6. 'should' → logprob: -3.325972557067871
    7. ' should' → logprob: -3.450972557067871
    8. '       ' → logprob: -3.575972557067871
    9. 'have' → logprob: -4.200972557067871
    10. 'must' → logprob: -4.575972557067871

Token 389: ' be' (ID: 413)
  Prédit: 'handle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handle' → logprob: -0.9622664451599121
    2. ' carefully' → logprob: -1.587266445159912
    3. 'sort' → logprob: -2.087266445159912
    4. 'consider' → logprob: -2.337266445159912
    5. ' handle' → logprob: -2.462266445159912
    6. ' be' → logprob: -3.587266445159912
    7. 'care' → logprob: -3.712266445159912
    8. 'be' → logprob: -4.212266445159912
    9. ' consider' → logprob: -4.337266445159912
    10. ' sort' → logprob: -5.337266445159912

Token 390: ' careful' (ID: 25120)
  Prédit: ' careful'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' careful' → logprob: -0.4946380853652954
    2. 'care' → logprob: -0.9946380853652954
    3. 'very' → logprob: -4.119637966156006
    4. ' very' → logprob: -5.744637966156006
    5. ' cautious' → logprob: -7.494637966156006
    6. 'c' → logprob: -8.244638442993164
    7. 'extra' → logprob: -10.244638442993164
    8. 'more' → logprob: -11.494638442993164
    9. 'explicit' → logprob: -11.619638442993164
    10. 'ext' → logprob: -12.119638442993164

Token 391: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002340565901249647
    2. '        
' → logprob: -6.877340793609619
    3. '
' → logprob: -7.127340793609619
    4. '<|end|>' → logprob: -8.377340316772461
    5. '```' → logprob: -10.127340316772461
    6. ',' → logprob: -10.252340316772461
    7. '        ' → logprob: -10.377340316772461
    8. '<|end|>' → logprob: -10.502340316772461
    9. '    
' → logprob: -10.752340316772461
    10. ' with' → logprob: -11.002340316772461

Token 392: ' consider' (ID: 3331)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -1.178605556488037
    2. 'handle' → logprob: -1.553605556488037
    3. ' sort' → logprob: -1.803605556488037
    4. 'self' → logprob: -2.053605556488037
    5. ' handle' → logprob: -2.428605556488037
    6. '       ' → logprob: -3.428605556488037
    7. 'consider' → logprob: -3.678605556488037
    8. ' self' → logprob: -4.428605556488037
    9. ' consider' → logprob: -5.428605556488037
    10. 'return' → logprob: -5.553605556488037

Token 393: ' the' (ID: 290)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.5734171867370605
    2. ' all' → logprob: -1.8234171867370605
    3. 'both' → logprob: -2.3234171867370605
    4. 'items' → logprob: -2.9484171867370605
    5. 'the' → logprob: -3.9484171867370605
    6. 'that' → logprob: -4.3234171867370605
    7. ' both' → logprob: -4.5734171867370605
    8. ' items' → logprob: -4.6984171867370605
    9. 'max' → logprob: -4.9484171867370605
    10. ' the' → logprob: -4.9484171867370605

Token 394: ' greedy' (ID: 107110)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.9629576206207275
    2. 'poss' → logprob: -1.4629576206207275
    3. ' possibility' → logprob: -1.8379576206207275
    4. 'possible' → logprob: -3.2129576206207275
    5. 'sorted' → logprob: -3.3379576206207275
    6. 'best' → logprob: -3.3379576206207275
    7. 'absolute' → logprob: -4.087957382202148
    8. ' items' → logprob: -4.087957382202148
    9. 'max' → logprob: -4.212957382202148
    10. 'sign' → logprob: -4.587957382202148

Token 395: ' approach' (ID: 7139)
  Prédit: ' approach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' approach' → logprob: -0.022081945091485977
    2. 'appro' → logprob: -4.7720818519592285
    3. ' method' → logprob: -5.3970818519592285
    4. ' solution' → logprob: -5.6470818519592285
    5. ' algorithm' → logprob: -6.6470818519592285
    6. '       ' → logprob: -6.8970818519592285
    7. 'method' → logprob: -7.6470818519592285
    8. 'algorithm' → logprob: -7.8970818519592285
    9. ' sorting' → logprob: -7.8970818519592285
    10. ' strategy' → logprob: -8.522082328796387

Token 396: ' properly' (ID: 13425)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011397423222661018
    2. ',' → logprob: -8.001139640808105
    3. '        
' → logprob: -8.751139640808105
    4. ':' → logprob: -8.876139640808105
    5. '<|end|>' → logprob: -9.376139640808105
    6. ' with' → logprob: -9.751139640808105
    7. ' to' → logprob: -9.876139640808105
    8. '.' → logprob: -9.876139640808105
    9. '<|end|>' → logprob: -9.876139640808105
    10. ' that' → logprob: -10.001139640808105

Token 397: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02482604794204235
    2. '<|end|>' → logprob: -5.0248260498046875
    3. '
' → logprob: -5.2748260498046875
    4. ',' → logprob: -5.3998260498046875
    5. ':' → logprob: -5.8998260498046875
    6. '<|end|>' → logprob: -6.0248260498046875
    7. '        
' → logprob: -6.5248260498046875
    8. '.' → logprob: -6.7748260498046875
    9. ':
' → logprob: -9.649826049804688
    10. '#' → logprob: -10.024826049804688

Token 398: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001395592000335455
    2. '        
' → logprob: -7.5013957023620605
    3. '```' → logprob: -8.251395225524902
    4. '        ' → logprob: -8.626395225524902
    5. '#' → logprob: -9.626395225524902
    6. ' 
' → logprob: -10.001395225524902
    7. '
' → logprob: -10.001395225524902
    8. ' sorted' → logprob: -10.126395225524902
    9. '  
' → logprob: -10.501395225524902
    10. ' items' → logprob: -10.626395225524902

Token 399: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3344278335571289
    2. '       ' → logprob: -1.334427833557129
    3. ' self' → logprob: -4.709427833557129
    4. 'sorted' → logprob: -5.584427833557129
    5. '#' (adapté à ' #') → logprob: -5.959427833557129
    6. 'items' → logprob: -6.334427833557129
    7. 'result' → logprob: -6.459427833557129
    8. 'total' → logprob: -7.084427833557129
    9. 's' → logprob: -8.084427833557129
    10. 'selected' → logprob: -8.459427833557129

Token 400: ' Sort' (ID: 25945)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.28635352849960327
    2. '#' → logprob: -1.911353588104248
    3. '       ' → logprob: -2.786353588104248
    4. 'sorted' → logprob: -3.786353588104248
    5. 'capacity' → logprob: -5.661353588104248
    6. 'items' → logprob: -6.161353588104248
    7. ' self' → logprob: -6.286353588104248
    8. 'total' → logprob: -6.411353588104248
    9. 'remaining' → logprob: -6.786353588104248
    10. 'Let's' → logprob: -6.911353588104248

Token 401: ' by' (ID: 656)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0014251177199184895
    2. 'self' → logprob: -6.751425266265869
    3. '       ' → logprob: -9.126424789428711
    4. ' self' → logprob: -9.251424789428711
    5. 'items' → logprob: -10.376424789428711
    6. '(' → logprob: -12.501424789428711
    7. 's' → logprob: -12.501424789428711
    8. '=self' → logprob: -12.626424789428711
    9. '_items' → logprob: -12.876424789428711
    10. '[self' → logprob: -13.251424789428711

Token 402: ' ratio' (ID: 18051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.475322961807251
    2. 'ratio' → logprob: -1.100322961807251
    3. ' ratio' → logprob: -3.350322961807251
    4. ' self' → logprob: -4.600322723388672
    5. '   ' → logprob: -9.600322723388672
    6. '_ratio' → logprob: -9.725322723388672
    7. 'reverse' → logprob: -9.850322723388672
    8. 'rat' → logprob: -10.100322723388672
    9. 'item' → logprob: -10.225322723388672
    10. 'lambda' → logprob: -10.475322723388672

Token 403: ' descending' (ID: 89489)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09682006388902664
    2. '(self' → logprob: -2.471820116043091
    3. 'self' → logprob: -5.471819877624512
    4. ',' → logprob: -7.221819877624512
    5. '.sort' → logprob: -7.346819877624512
    6. '.' → logprob: -7.471819877624512
    7. ':' → logprob: -7.596819877624512
    8. ' =' → logprob: -8.471819877624512
    9. '()
' → logprob: -8.596819877624512
    10. '()' → logprob: -8.596819877624512

Token 404: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0243370458483696
    2. ',' → logprob: -4.024336814880371
    3. '.' → logprob: -6.399336814880371
    4. 'self' → logprob: -6.399336814880371
    5. '        
' → logprob: -7.024336814880371
    6. '
' → logprob: -7.149336814880371
    7. '(self' → logprob: -7.774336814880371
    8. ',
' → logprob: -8.774336814880371
    9. '.sort' → logprob: -9.024336814880371
    10. ':' → logprob: -9.399336814880371

Token 405: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001532401074655354
    2. ',' → logprob: -9.125153541564941
    3. '        
' → logprob: -11.375153541564941
    4. '.' → logprob: -11.875153541564941
    5. 'self' → logprob: -12.250153541564941
    6. '.sort' → logprob: -12.375153541564941
    7. '
' → logprob: -12.625153541564941
    8. ':' → logprob: -12.875153541564941
    9. '      ' → logprob: -12.875153541564941
    10. '```' → logprob: -13.500153541564941

Token 406: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.010394792072474957
    2. '       ' → logprob: -4.88539457321167
    3. ' self' → logprob: -5.88539457321167
    4. '```' → logprob: -14.260395050048828
    5. '	self' → logprob: -14.385395050048828
    6. '   ' → logprob: -14.510395050048828
    7. '(self' → logprob: -14.510395050048828
    8. 'sorted' → logprob: -14.635395050048828
    9. 's' → logprob: -14.760395050048828
    10. '`' → logprob: -14.760395050048828

Token 407: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -8.2994620242971e-06
    2. 'items' → logprob: -12.125008583068848
    3. '.' → logprob: -12.875008583068848
    4. ' .' → logprob: -15.750008583068848
    5. '.Items' → logprob: -17.62500762939453
    6. ').' → logprob: -17.62500762939453
    7. '.sort' → logprob: -17.75000762939453
    8. '.sorted' → logprob: -18.00000762939453
    9. '	items' → logprob: -18.25000762939453
    10. '
' → logprob: -18.87500762939453

Token 408: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0007104054093360901
    2. '.' → logprob: -7.250710487365723
    3. 'sort' → logprob: -14.625710487365723
    4. '.s' → logprob: -19.125709533691406
    5. ' .' → logprob: -19.250709533691406
    6. '.sorted' → logprob: -19.375709533691406
    7. '	sort' → logprob: -19.625709533691406
    8. ' sort' → logprob: -19.625709533691406
    9. ').' → logprob: -19.750709533691406
    10. '=' → logprob: -20.125709533691406

Token 409: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.030949406325817108
    2. '(reverse' → logprob: -3.530949354171753
    3. '()
' → logprob: -6.905949592590332
    4. '(key' → logprob: -8.780949592590332
    5. 'reverse' → logprob: -10.155949592590332
    6. '(' → logprob: -13.905949592590332
    7. '.reverse' → logprob: -14.405949592590332
    8. '()

' → logprob: -14.655949592590332
    9. '()
' → logprob: -15.030949592590332
    10. '()\' → logprob: -15.155949592590332

Token 410: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04092847928404808
    2. 'total' → logprob: -3.790928363800049
    3. 'result' → logprob: -4.415928363800049
    4. 'weight' → logprob: -6.165928363800049
    5. 'capacity' → logprob: -6.540928363800049
    6. 'amount' → logprob: -7.790928363800049
    7. ' total' → logprob: -8.415928840637207
    8. 'current' → logprob: -8.415928840637207
    9. 'remaining' → logprob: -8.540928840637207
    10. '```' → logprob: -8.665928840637207

Token 411: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.45025065541267395
    2. 'capacity' → logprob: -1.2002506256103516
    3. 'remaining' → logprob: -3.3252506256103516
    4. 'result' → logprob: -5.200250625610352
    5. 'res' → logprob: -5.450250625610352
    6. 'remain' → logprob: -5.825250625610352
    7. 'used' → logprob: -6.075250625610352
    8. 'value' → logprob: -6.075250625610352
    9. '   ' → logprob: -6.450250625610352
    10. 'weight' → logprob: -6.700250625610352

Token 412: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0004973902832716703
    2. '_weight' → logprob: -8.250497817993164
    3. '_' → logprob: -8.625497817993164
    4. '_val' → logprob: -10.375497817993164
    5. '_w' → logprob: -11.750497817993164
    6. ' =' → logprob: -12.250497817993164
    7. 'value' → logprob: -12.250497817993164
    8. '_v' → logprob: -12.875497817993164
    9. 'Value' → logprob: -13.500497817993164
    10. '=' → logprob: -13.750497817993164

Token 413: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07896877080202103
    2. '=' → logprob: -2.5789687633514404
    3. ' +=' → logprob: -9.95396900177002
    4. ',' → logprob: -10.70396900177002
    5. ' ' → logprob: -12.20396900177002
    6. ' ,' → logprob: -13.32896900177002
    7. '+=' → logprob: -13.82896900177002
    8. '  ' → logprob: -14.20396900177002
    9. '   ' → logprob: -14.95396900177002
    10. '_' → logprob: -16.578968048095703

Token 414: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01250989455729723
    2. ' ' → logprob: -4.387509822845459
    3. '   ' → logprob: -15.887510299682617
    4. ' ' → logprob: -16.762510299682617
    5. '  ' → logprob: -17.262510299682617
    6. 'float' → logprob: -17.637510299682617
    7. '=' → logprob: -18.512510299682617
    8. '۰' → logprob: -18.575010299682617
    9. '.' → logprob: -18.887510299682617
    10. '```' → logprob: -18.887510299682617

Token 415: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. 'float' → logprob: -17.5000057220459
    4. '   ' → logprob: -18.1250057220459
    5. '.' → logprob: -18.8125057220459
    6. '```' → logprob: -19.3125057220459
    7. 'total' → logprob: -19.7500057220459
    8. '  ' → logprob: -19.8750057220459
    9. '=' → logprob: -20.1250057220459
    10. '00' → logprob: -20.4375057220459

Token 416: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.029747597873210907
    2. '       ' → logprob: -4.404747486114502
    3. '
' → logprob: -4.529747486114502
    4. '    
' → logprob: -6.654747486114502
    5. '        
' → logprob: -6.779747486114502
    6. '<|end|>' → logprob: -6.904747486114502
    7. ',' → logprob: -7.279747486114502
    8. '' → logprob: -7.904747486114502
    9. '
' → logprob: -8.27974796295166
    10. '0' → logprob: -8.40474796295166

Token 417: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. '
' → logprob: -16.5
    3. 'float' → logprob: -16.5
    4. ' ' → logprob: -17.625
    5. '```' → logprob: -18.625
    6. '.' → logprob: -18.875
    7. '   ' → logprob: -18.875
    8. 'to' → logprob: -19.5
    9. 'double' → logprob: -19.5
    10. 'from' → logprob: -20.25

Token 418: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0895211398601532
    2. '       ' → logprob: -2.5895211696624756
    3. '        
' → logprob: -5.0895209312438965
    4. '
' → logprob: -6.5895209312438965
    5. '  
' → logprob: -7.3395209312438965
    6. ' 
' → logprob: -7.4645209312438965
    7. '    
' → logprob: -7.7145209312438965
    8. ',' → logprob: -7.7145209312438965
    9. '' → logprob: -8.214521408081055
    10. ',
' → logprob: -8.339521408081055

Token 419: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22764532268047333
    2. '
' → logprob: -1.8526452779769897
    3. ' current' → logprob: -4.227645397186279
    4. 'current' → logprob: -4.602645397186279
    5. ',' → logprob: -4.852645397186279
    6. '        
' → logprob: -5.102645397186279
    7. ' capacity' → logprob: -6.227645397186279
    8. ',
' → logprob: -6.727645397186279
    9. 'remaining' → logprob: -6.727645397186279
    10. '        ' → logprob: -7.227645397186279

Token 420: ' remaining' (ID: 15448)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' (adapté à ' remaining') → logprob: -0.2894153892993927
    2. 'capacity' → logprob: -1.4144153594970703
    3. 'remain' → logprob: -6.03941535949707
    4. 'rem' → logprob: -6.28941535949707
    5. 'weight' → logprob: -6.66441535949707
    6. 'total' → logprob: -7.28941535949707
    7. ' remaining' → logprob: -7.28941535949707
    8. ' capacity' → logprob: -7.28941535949707
    9. 'current' → logprob: -7.53941535949707
    10. 'W' → logprob: -9.66441535949707

Token 421: '_capacity' (ID: 85527)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0485605001449585
    2. '_capacity' → logprob: -1.1735605001449585
    3. '_weight' → logprob: -1.5485605001449585
    4. '=' → logprob: -2.173560619354248
    5. '_cap' → logprob: -5.298560619354248
    6. '_w' → logprob: -5.548560619354248
    7. '_' → logprob: -6.423560619354248
    8. '_W' → logprob: -6.798560619354248
    9. '=W' → logprob: -6.798560619354248
    10. '_space' → logprob: -7.673560619354248

Token 422: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889111340045929
    2. '=' → logprob: -2.5788910388946533
    3. ' ' → logprob: -14.078890800476074
    4. '=self' → logprob: -14.953890800476074
    5. '   ' → logprob: -16.45389175415039
    6. ':' → logprob: -17.20389175415039
    7. ',' → logprob: -17.57889175415039
    8. '    ' → logprob: -18.20389175415039
    9. '  ' → logprob: -18.32889175415039
    10. '=int' → logprob: -18.57889175415039

Token 423: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25193214416503906
    2. ' self' → logprob: -1.501932144165039
    3. 'float' → logprob: -13.251932144165039
    4. ' float' → logprob: -14.876932144165039
    5. '	self' → logprob: -15.126932144165039
    6. '(self' → logprob: -15.251932144165039
    7. '[self' → logprob: -15.501932144165039
    8. '=self' → logprob: -16.25193214416504
    9. ' ' → logprob: -17.12693214416504
    10. '       ' → logprob: -17.50193214416504

Token 424: '.W' (ID: 2342)
  Prédit: '.W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.W' → logprob: -0.001115808030590415
    2. '.' → logprob: -7.251115798950195
    3. 'W' → logprob: -7.876115798950195
    4. ' W' → logprob: -11.251115798950195
    5. ' .' → logprob: -11.376115798950195
    6. '   ' → logprob: -14.501115798950195
    7. '	W' → logprob: -14.501115798950195
    8. ' ' → logprob: -15.626115798950195
    9. '.T' → logprob: -16.751115798950195
    10. '  ' → logprob: -17.001115798950195

Token 425: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008356298319995403
    2. '       ' → logprob: -5.383356094360352
    3. '        
' → logprob: -6.008356094360352
    4. ' 
' → logprob: -8.008356094360352
    5. '  
' → logprob: -8.508356094360352
    6. '    
' → logprob: -8.758356094360352
    7. '<|end|>' → logprob: -8.758356094360352
    8. '
' → logprob: -9.508356094360352
    9. '\n' → logprob: -9.508356094360352
    10. ' for' → logprob: -9.633356094360352

Token 426: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07395140826702118
    2. 'for' → logprob: -3.073951482772827
    3. ' for' → logprob: -3.823951482772827
    4. '
' → logprob: -5.948951244354248
    5. '        
' → logprob: -7.948951244354248
    6. '	for' → logprob: -9.073951721191406
    7. '   ' → logprob: -10.573951721191406
    8. '	' → logprob: -10.823951721191406
    9. '<|end|>' → logprob: -11.073951721191406
    10. '  
' → logprob: -11.573951721191406

Token 427: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -6.704273118884885e-07
    2. '       ' → logprob: -15.000000953674316
    3. ' for' → logprob: -15.000000953674316
    4. '   ' → logprob: -20.625
    5. '
' → logprob: -20.75
    6. '        
' → logprob: -21.125
    7. '	for' → logprob: -22.375
    8. 'fo' → logprob: -22.625
    9. '        ' → logprob: -23.75
    10. 'f' → logprob: -23.75

Token 428: ' item' (ID: 2169)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.12692873179912567
    2. ' item' → logprob: -2.1269288063049316
    3. '	item' → logprob: -15.126928329467773
    4. '   ' → logprob: -15.501928329467773
    5. 'it' → logprob: -16.501928329467773
    6. 'Item' → logprob: -17.251928329467773
    7. ' ' → logprob: -17.626928329467773
    8. '(item' → logprob: -18.251928329467773
    9. '=item' → logprob: -18.376928329467773
    10. 'itm' → logprob: -18.626928329467773

Token 429: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0059316400438547134
    2. 'in' → logprob: -5.130931854248047
    3. 'import' → logprob: -13.630931854248047
    4. ' ' → logprob: -14.630931854248047
    5. '  ' → logprob: -15.005931854248047
    6. '	in' → logprob: -15.005931854248047
    7. 's' → logprob: -15.255931854248047
    8. ' i' → logprob: -15.755931854248047
    9. '   ' → logprob: -16.255931854248047
    10. 'In' → logprob: -16.880931854248047

Token 430: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0160357765853405
    2. ' self' → logprob: -4.141035556793213
    3. '(self' → logprob: -14.391036033630371
    4. '   ' → logprob: -14.641036033630371
    5. ' ' → logprob: -15.891036033630371
    6. '	self' → logprob: -16.141035079956055
    7. '[self' → logprob: -16.141035079956055
    8. '       ' → logprob: -17.266035079956055
    9. 'elf' → logprob: -17.391035079956055
    10. '  ' → logprob: -17.391035079956055

Token 431: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -3.547789674485102e-05
    2. '.' → logprob: -10.500035285949707
    3. 'items' → logprob: -11.875035285949707
    4. ' .' → logprob: -14.375035285949707
    5. '.iteritems' → logprob: -16.375036239624023
    6. '.Items' → logprob: -16.875036239624023
    7. '	items' → logprob: -17.500036239624023
    8. '.user' → logprob: -17.750036239624023
    9. '.it' → logprob: -18.000036239624023
    10. ':' → logprob: -18.000036239624023

Token 432: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04863971471786499
    2. ':
' → logprob: -3.0486397743225098
    3. ',' → logprob: -10.298639297485352
    4. ':
' → logprob: -12.173639297485352
    5. '):
' → logprob: -12.298639297485352
    6. '       ' → logprob: -12.923639297485352
    7. '<|end|>' → logprob: -13.298639297485352
    8. '           ' → logprob: -13.923639297485352
    9. ' if' → logprob: -14.173639297485352
    10. '):' → logprob: -14.173639297485352

Token 433: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009623279795050621
    2. ' if' → logprob: -4.759623050689697
    3. '            ' → logprob: -8.384623527526855
    4. '       ' → logprob: -8.634623527526855
    5. '<|end|>' → logprob: -8.634623527526855
    6. '        ' → logprob: -8.884623527526855
    7. ' ' → logprob: -9.009623527526855
    8. '          ' → logprob: -10.509623527526855
    9. '               ' → logprob: -10.509623527526855
    10. ',' → logprob: -10.634623527526855

Token 434: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.14689026772975922
    2. ' if' → logprob: -2.271890163421631
    3. '           ' → logprob: -3.396890163421631
    4. '            
' → logprob: -12.771890640258789
    5. 'amount' → logprob: -12.771890640258789
    6. 'w' → logprob: -13.021890640258789
    7. 'available' → logprob: -13.146890640258789
    8. '            ' → logprob: -13.646890640258789
    9. 'weight' → logprob: -14.146890640258789
    10. '       ' → logprob: -14.146890640258789

Token 435: ' remaining' (ID: 15448)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.39721640944480896
    2. 'item' → logprob: -1.3972164392471313
    3. ' remaining' → logprob: -2.772216320037842
    4. ' item' → logprob: -4.022216320037842
    5. '   ' → logprob: -10.397216796875
    6. ' ' → logprob: -11.022216796875
    7. '	item' → logprob: -11.272216796875
    8. 'abs' → logprob: -11.647216796875
    9. '.remaining' → logprob: -12.522216796875
    10. '  ' → logprob: -12.959716796875

Token 436: '_capacity' (ID: 85527)
  Prédit: '_capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_capacity' → logprob: -0.00011105302110081539
    2. 'capacity' → logprob: -9.875110626220703
    3. '_' → logprob: -10.375110626220703
    4. '_cap' → logprob: -11.750110626220703
    5. ' capacity' → logprob: -12.125110626220703
    6. '>' → logprob: -13.000110626220703
    7. ' _' → logprob: -13.000110626220703
    8. '<=' → logprob: -13.250110626220703
    9. 'Capacity' → logprob: -13.375110626220703
    10. '>=' → logprob: -14.000110626220703

Token 437: ' ==' (ID: 951)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.47472265362739563
    2. ' <=' → logprob: -0.9747226238250732
    3. '==' → logprob: -7.599722862243652
    4. ' ==' → logprob: -8.849722862243652
    5. ' ' → logprob: -14.724722862243652
    6. '>=' → logprob: -14.724722862243652
    7. ' >=' → logprob: -16.099721908569336
    8. '```' → logprob: -16.224721908569336
    9. '>' → logprob: -16.474721908569336
    10. '=' → logprob: -16.599721908569336

Token 438: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014001218369230628
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -16.125139236450195
    4. '```' → logprob: -17.750139236450195
    5. '           ' → logprob: -18.125139236450195
    6. '    ' → logprob: -18.625139236450195
    7. '  ' → logprob: -18.625139236450195
    8. '       ' → logprob: -19.375139236450195
    9. '۰' → logprob: -19.500139236450195
    10. '         ' → logprob: -19.625139236450195

Token 439: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -18.875001907348633
    4. '   ' → logprob: -19.750001907348633
    5. '           ' → logprob: -20.000001907348633
    6. '<=' → logprob: -21.125001907348633
    7. '    ' → logprob: -21.250001907348633
    8. '  ' → logprob: -21.250001907348633
    9. '۰' → logprob: -21.375001907348633
    10. 'zero' → logprob: -21.500001907348633

Token 440: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47572898864746094
    2. ':
' → logprob: -0.9757289886474609
    3. '               ' → logprob: -6.725728988647461
    4. ' or' → logprob: -7.975728988647461
    5. '           ' → logprob: -9.975728988647461
    6. ':return' → logprob: -10.225728988647461
    7. ':
' → logprob: -10.975728988647461
    8. 'or' → logprob: -13.350728988647461
    9. '                   ' → logprob: -13.850728988647461
    10. '   ' → logprob: -13.850728988647461

Token 441: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01382472738623619
    2. ':' → logprob: -4.513824939727783
    3. ':
' → logprob: -6.138824939727783
    4. '           ' → logprob: -7.763824939727783
    5. ' or' → logprob: -9.888824462890625
    6. ' break' → logprob: -10.013824462890625
    7. '              ' → logprob: -10.888824462890625
    8. '                   ' → logprob: -10.888824462890625
    9. '                ' → logprob: -11.638824462890625
    10. '	           ' → logprob: -11.638824462890625

Token 442: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.05261832848191261
    2. '               ' → logprob: -3.0526182651519775
    3. ' break' → logprob: -5.552618503570557
    4. '           ' → logprob: -9.427618026733398
    5. '	break' → logprob: -10.177618026733398
    6. '                   ' → logprob: -10.927618026733398
    7. 'return' → logprob: -12.552618026733398
    8. '_break' → logprob: -13.302618026733398
    9. '   ' → logprob: -13.677618026733398
    10. '	           ' → logprob: -14.427618026733398

Token 443: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2101869434118271
    2. '           ' → logprob: -2.2101869583129883
    3. '            
' → logprob: -2.7101869583129883
    4. ' 
' → logprob: -5.335186958312988
    5. '  
' → logprob: -6.210186958312988
    6. '    
' → logprob: -6.210186958312988
    7. '        
' → logprob: -6.835186958312988
    8. '<|end|>' → logprob: -6.960186958312988
    9. '            ' → logprob: -7.460186958312988
    10. '                
' → logprob: -8.210186958312988

Token 444: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.072769895195961
    2. '            
' → logprob: -3.1977698802948
    3. ' 
' → logprob: -4.572770118713379
    4. '            ' → logprob: -4.822770118713379
    5. '<|end|>' → logprob: -5.447770118713379
    6. '
' → logprob: -6.197770118713379
    7. ' if' → logprob: -6.697770118713379
    8. '  
' → logprob: -7.322770118713379
    9. '       ' → logprob: -7.822770118713379
    10. '    
' → logprob: -7.947770118713379

Token 445: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.692877471446991
    2. '           ' → logprob: -1.4428775310516357
    3. ' take' → logprob: -1.8178775310516357
    4. 'take' → logprob: -2.6928775310516357
    5. 'if' → logprob: -4.817877292633057
    6. ' amount' → logprob: -5.067877292633057
    7. ' taken' → logprob: -5.317877292633057
    8. 'amount' → logprob: -5.817877292633057
    9. ' weight' → logprob: -6.192877292633057
    10. 'taken' → logprob: -6.317877292633057

Token 446: ' Because' (ID: 13602)
  Prédit: 'take'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'take' → logprob: -0.5028330683708191
    2. 'if' → logprob: -1.1278331279754639
    3. ' if' → logprob: -3.752833127975464
    4. 'weight' → logprob: -4.127832889556885
    5. ' take' → logprob: -4.877832889556885
    6. '           ' → logprob: -5.002832889556885
    7. 'taken' → logprob: -5.502832889556885
    8. 'amount' → logprob: -5.502832889556885
    9. 'available' → logprob: -6.377832889556885
    10. 'can' → logprob: -6.502832889556885

Token 447: ' w' (ID: 286)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.1100478544831276
    2. ' item' → logprob: -2.4850478172302246
    3. '(item' → logprob: -4.110047817230225
    4. ' (' → logprob: -5.610047817230225
    5. '(' → logprob: -7.360047817230225
    6. 'remaining' → logprob: -9.985048294067383
    7. '((' → logprob: -10.360048294067383
    8. 'abs' → logprob: -10.610048294067383
    9. '(
' → logprob: -10.860048294067383
    10. '(abs' → logprob: -11.610048294067383

Token 448: '_i' (ID: 10853)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4113365113735199
    2. '>' → logprob: -1.9113365411758423
    3. ' <=' → logprob: -2.1613364219665527
    4. ' <' → logprob: -2.9113364219665527
    5. ' >=' → logprob: -5.286336421966553
    6. '=' → logprob: -5.536336421966553
    7. '<=' → logprob: -5.786336421966553
    8. '<' → logprob: -5.786336421966553
    9. ' =' → logprob: -6.411336421966553
    10. ' ==' → logprob: -7.661336421966553

Token 449: ' can' (ID: 665)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7127180695533752
    2. '>' → logprob: -1.4627180099487305
    3. ' <' → logprob: -2.0877180099487305
    4. ' <=' → logprob: -2.5877180099487305
    5. '<' → logprob: -2.8377180099487305
    6. '<=' → logprob: -4.0877180099487305
    7. ' ==' → logprob: -6.9627180099487305
    8. ' >=' → logprob: -7.0877180099487305
    9. '==' → logprob: -7.8377180099487305
    10. '>=' → logprob: -7.8377180099487305

Token 450: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.3111755847930908
    2. '<' → logprob: -1.8111755847930908
    3. ' <' → logprob: -2.311175584793091
    4. 'be' → logprob: -6.311175346374512
    5. '>' → logprob: -7.061175346374512
    6. ' <=' → logprob: -7.811175346374512
    7. '<=' → logprob: -8.311175346374512
    8. '<|end|>' → logprob: -8.311175346374512
    9. ' not' → logprob: -8.436175346374512
    10. ',' → logprob: -8.561175346374512

Token 451: ' negative' (ID: 12626)
  Prédit: 'negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'negative' → logprob: -0.06619208306074142
    2. '0' → logprob: -2.816192150115967
    3. 'positive' → logprob: -6.316192150115967
    4. ' negative' → logprob: -6.691192150115967
    5. 'zero' → logprob: -6.941192150115967
    6. '<=' → logprob: -9.441191673278809
    7. '<' → logprob: -9.566191673278809
    8. 'less' → logprob: -10.441191673278809
    9. ' positive' → logprob: -12.691191673278809
    10. ' ' → logprob: -12.941191673278809

Token 452: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3416142165660858
    2. '           ' → logprob: -1.8416142463684082
    3. ' or' → logprob: -2.966614246368408
    4. ' if' → logprob: -3.591614246368408
    5. 'and' → logprob: -3.716614246368408
    6. ',' → logprob: -3.966614246368408
    7. ':' → logprob: -5.591614246368408
    8. '<|end|>' → logprob: -6.466614246368408
    9. ':
' → logprob: -6.841614246368408
    10. '            ' → logprob: -7.341614246368408

Token 453: ' zero' (ID: 12421)
  Prédit: 'positive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positive' → logprob: -0.9010496735572815
    2. 'zero' → logprob: -1.1510496139526367
    3. ' zero' → logprob: -1.7760496139526367
    4. ' positive' → logprob: -2.2760496139526367
    5. '0' → logprob: -6.401049613952637
    6. 'fraction' → logprob: -6.901049613952637
    7. 'value' → logprob: -7.151049613952637
    8. ' fractional' → logprob: -7.526049613952637
    9. 'greater' → logprob: -8.151049613952637
    10. ' ' → logprob: -8.526049613952637

Token 454: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6566948890686035
    2. '           ' → logprob: -0.7816948890686035
    3. ':' → logprob: -4.9066948890686035
    4. ' if' → logprob: -5.1566948890686035
    5. '            
' → logprob: -5.5316948890686035
    6. ' and' → logprob: -6.2816948890686035
    7. ' ,' → logprob: -6.7816948890686035
    8. '            ' → logprob: -7.1566948890686035
    9. ',
' → logprob: -7.5316948890686035
    10. '<|end|>' → logprob: -7.5316948890686035

Token 455: ' we' (ID: 581)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18655328452587128
    2. 'if' → logprob: -1.9365532398223877
    3. '           ' → logprob: -3.6865532398223877
    4. '#' → logprob: -8.061553001403809
    5. ' #' → logprob: -8.061553001403809
    6. '               ' → logprob: -9.561553001403809
    7. '            ' → logprob: -9.686553001403809
    8. 'amount' → logprob: -10.186553001403809
    9. 'while' → logprob: -10.561553001403809
    10. ' while' → logprob: -10.686553001403809

Token 456: ' must' (ID: 2804)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -1.1939300298690796
    2. 'need' → logprob: -1.3189300298690796
    3. ' must' → logprob: -1.6939300298690796
    4. 'must' → logprob: -1.6939300298690796
    5. 'have' → logprob: -4.318930149078369
    6. '           ' → logprob: -4.318930149078369
    7. ' should' → logprob: -4.568930149078369
    8. 'should' → logprob: -4.568930149078369
    9. ' have' → logprob: -5.068930149078369
    10. '               ' → logprob: -6.318930149078369

Token 457: ' consider' (ID: 3331)
  Prédit: 'handle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handle' → logprob: -0.43982553482055664
    2. ' handle' → logprob: -1.9398255348205566
    3. 'consider' → logprob: -2.0648255348205566
    4. 'continue' → logprob: -3.6898255348205566
    5. ' consider' → logprob: -4.314825534820557
    6. ' carefully' → logprob: -4.689825534820557
    7. 'check' → logprob: -4.689825534820557
    8. ' be' → logprob: -4.814825534820557
    9. '           ' → logprob: -4.939825534820557
    10. ' check' → logprob: -5.314825534820557

Token 458: ' carefully' (ID: 18455)
  Prédit: ' how'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' how' → logprob: -0.1583869755268097
    2. ' if' → logprob: -2.4083869457244873
    3. ' the' → logprob: -3.0333869457244873
    4. ' item' → logprob: -6.158387184143066
    5. 'if' → logprob: -6.533387184143066
    6. 'the' → logprob: -7.283387184143066
    7. 'how' → logprob: -7.533387184143066
    8. '           ' → logprob: -7.533387184143066
    9. 'item' → logprob: -7.658387184143066
    10. ' what' → logprob: -7.783387184143066

Token 459: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02070935070514679
    2. '            
' → logprob: -4.14570951461792
    3. '
' → logprob: -6.02070951461792
    4. ' if' → logprob: -6.52070951461792
    5. '            ' → logprob: -7.89570951461792
    6. ' 
' → logprob: -9.520709037780762
    7. '  
' → logprob: -9.770709037780762
    8. ',' → logprob: -9.895709037780762
    9. '           
' → logprob: -10.270709037780762
    10. ' and' → logprob: -10.770709037780762

Token 460: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04393317177891731
    2. '            ' → logprob: -3.293933153152466
    3. ' ' → logprob: -5.918933391571045
    4. '            
' → logprob: -6.293933391571045
    5. ' if' → logprob: -7.918933391571045
    6. '<|end|>' → logprob: -8.168932914733887
    7. '        ' → logprob: -9.043932914733887
    8. '          ' → logprob: -9.043932914733887
    9. '    ' → logprob: -9.418932914733887
    10. ',' → logprob: -9.418932914733887

Token 461: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12161573767662048
    2. 'if' → logprob: -2.7466156482696533
    3. '           ' → logprob: -2.9966156482696533
    4. 'amount' → logprob: -8.996615409851074
    5. ' amount' → logprob: -9.621615409851074
    6. '            
' → logprob: -10.371615409851074
    7. '            ' → logprob: -10.871615409851074
    8. '+' → logprob: -10.996615409851074
    9. '#' (adapté à ' #') → logprob: -11.246615409851074
    10. 'available' → logprob: -11.246615409851074

Token 462: ' Approach' (ID: 86383)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4208093583583832
    2. 'if' → logprob: -1.5458093881607056
    3. '           ' → logprob: -2.045809268951416
    4. '            
' → logprob: -8.420809745788574
    5. 'amount' → logprob: -8.545809745788574
    6. '#' → logprob: -8.670809745788574
    7. '+' → logprob: -9.170809745788574
    8. 'weight' → logprob: -9.920809745788574
    9. ' amount' → logprob: -10.295809745788574
    10. ' #' → logprob: -10.545809745788574

Token 463: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6101438403129578
    2. ' if' → logprob: -0.8601438403129578
    3. 'if' → logprob: -4.485143661499023
    4. ':' → logprob: -4.735143661499023
    5. '            ' → logprob: -5.110143661499023
    6. '            
' → logprob: -5.985143661499023
    7. '               ' → logprob: -6.735143661499023
    8. '       ' → logprob: -6.985143661499023
    9. ' =' → logprob: -7.110143661499023
    10. ':
' → logprob: -7.860143661499023

Token 464: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03516581282019615
    2. '            ' → logprob: -3.535165786743164
    3. ' if' → logprob: -5.285165786743164
    4. '        ' → logprob: -9.285165786743164
    5. '    ' → logprob: -9.660165786743164
    6. '            
' → logprob: -10.160165786743164
    7. 'if' → logprob: -10.285165786743164
    8. '          ' → logprob: -10.785165786743164
    9. '       ' → logprob: -11.285165786743164
    10. '               ' → logprob: -11.660165786743164

Token 465: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06304643303155899
    2. 'if' → logprob: -3.188046455383301
    3. '           ' → logprob: -3.938046455383301
    4. ' #' → logprob: -9.3130464553833
    5. '#' (adapté à ' #') → logprob: -9.9380464553833
    6. ' amount' → logprob: -10.3130464553833
    7. ' space' → logprob: -10.6880464553833
    8. ' fraction' → logprob: -10.8130464553833
    9. 'amount' → logprob: -10.8130464553833
    10. '            ' → logprob: -11.0630464553833

Token 466: ' -' (ID: 533)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06635887175798416
    2. 'if' → logprob: -2.941358804702759
    3. '           ' → logprob: -4.566359043121338
    4. ' #' → logprob: -7.566359043121338
    5. '#' → logprob: -8.81635856628418
    6. ' space' → logprob: -9.69135856628418
    7. ' for' → logprob: -10.06635856628418
    8. ' amount' → logprob: -10.56635856628418
    9. '            ' → logprob: -10.69135856628418
    10. 'If' → logprob: -10.94135856628418

Token 467: ' For' (ID: 2214)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1377585530281067
    2. 'if' → logprob: -2.137758493423462
    3. 'If' → logprob: -4.762758731842041
    4. ' If' → logprob: -7.262758731842041
    5. ' for' → logprob: -7.512758731842041
    6. '           ' → logprob: -7.512758731842041
    7. '#' → logprob: -8.762758255004883
    8. 'for' → logprob: -9.137758255004883
    9. ' #' → logprob: -10.887758255004883
    10. 'from' → logprob: -11.137758255004883

Token 468: ' positive' (ID: 8841)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.07898882031440735
    2. ' item' → logprob: -2.578988790512085
    3. 'remaining' → logprob: -10.078989028930664
    4. 'w' → logprob: -10.453989028930664
    5. 'positive' → logprob: -11.828989028930664
    6. 'items' → logprob: -12.328989028930664
    7. ' remaining' → logprob: -12.328989028930664
    8. ' positive' → logprob: -12.328989028930664
    9. ' items' → logprob: -13.453989028930664
    10. ' ' → logprob: -13.828989028930664

Token 469: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.9454994797706604
    2. 'item' → logprob: -1.4454994201660156
    3. 'w' → logprob: -1.9454994201660156
    4. ' item' → logprob: -2.5704994201660156
    5. 'weights' → logprob: -2.6954994201660156
    6. ' weights' → logprob: -2.9454994201660156
    7. ' weight' → logprob: -3.5704994201660156
    8. ' w' → logprob: -5.695499420166016
    9. ' items' → logprob: -6.445499420166016
    10. '           ' → logprob: -6.695499420166016

Token 470: ':' (ID: 25)
  Prédit: ' items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' items' → logprob: -0.37550002336502075
    2. 'items' → logprob: -2.750499963760376
    3. ' and' → logprob: -3.125499963760376
    4. '           ' → logprob: -3.250499963760376
    5. ' >' → logprob: -3.250499963760376
    6. ':' → logprob: -3.250499963760376
    7. ',' → logprob: -3.375499963760376
    8. ' if' → logprob: -3.875499963760376
    9. '>' → logprob: -4.625500202178955
    10. 'and' → logprob: -5.375500202178955

Token 471: ' take' (ID: 2304)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2367234081029892
    2. 'if' → logprob: -1.9867234230041504
    3. ' take' → logprob: -3.1117234230041504
    4. 'take' → logprob: -4.23672342300415
    5. '           ' → logprob: -4.48672342300415
    6. ' use' → logprob: -7.73672342300415
    7. ' amount' → logprob: -7.86172342300415
    8. ' weight' → logprob: -8.111722946166992
    9. 'to' → logprob: -8.236722946166992
    10. '               ' → logprob: -8.361722946166992

Token 472: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.4291214942932129
    2. 'min' → logprob: -1.054121494293213
    3. 'item' → logprob: -8.554121017456055
    4. ' item' → logprob: -9.054121017456055
    5. 'max' → logprob: -10.429121017456055
    6. '           ' → logprob: -11.179121017456055
    7. '1' → logprob: -11.679121017456055
    8. '=min' → logprob: -11.679121017456055
    9. 'if' → logprob: -11.804121017456055
    10. ' max' → logprob: -12.179121017456055

Token 473: '(' (ID: 7)
  Prédit: '(item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(item' → logprob: -0.4740865230560303
    2. '(' → logprob: -0.9740865230560303
    3. 'item' → logprob: -13.59908676147461
    4. '```' → logprob: -13.59908676147461
    5. 'remaining' → logprob: -14.09908676147461
    6. ' (' → logprob: -14.09908676147461
    7. '((' → logprob: -14.34908676147461
    8. '(rem' → logprob: -14.47408676147461
    9. '(
' → logprob: -14.59908676147461
    10. '(abs' → logprob: -14.72408676147461

Token 474: '1' (ID: 16)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.3527851402759552
    2. 'remaining' → logprob: -1.2277851104736328
    3. 'abs' → logprob: -6.352785110473633
    4. '(item' → logprob: -6.602785110473633
    5. ' item' → logprob: -7.852785110473633
    6. ' remaining' → logprob: -8.102785110473633
    7. ')' → logprob: -8.727785110473633
    8. ')item' → logprob: -9.102785110473633
    9. '(' → logprob: -9.227785110473633
    10. '1' → logprob: -10.227785110473633

Token 475: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000283265660982579
    2. '.' → logprob: -9.250283241271973
    3. ' ,' → logprob: -9.750283241271973
    4. ',item' → logprob: -9.750283241271973
    5. ')' → logprob: -10.750283241271973
    6. ',
' → logprob: -10.875283241271973
    7. '```' → logprob: -12.000283241271973
    8. '           ' → logprob: -12.125283241271973
    9. ',float' → logprob: -12.750283241271973
    10. '
' → logprob: -13.250283241271973

Token 476: ' remaining' (ID: 15448)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.07000412046909332
    2. ' remaining' → logprob: -2.6950042247772217
    3. '   ' → logprob: -11.5700044631958
    4. 'max' → logprob: -11.5700044631958
    5. 'abs' → logprob: -11.8200044631958
    6. ')' → logprob: -11.9450044631958
    7. ' ' → logprob: -12.3200044631958
    8. '
' → logprob: -12.4450044631958
    9. '1' → logprob: -12.4450044631958
    10. ' max' → logprob: -12.6950044631958

Token 477: '_capacity' (ID: 85527)
  Prédit: '_capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_capacity' → logprob: -0.0006153396097943187
    2. ' capacity' → logprob: -8.375615119934082
    3. 'Capacity' → logprob: -8.625615119934082
    4. ')' → logprob: -9.875615119934082
    5. '_cap' → logprob: -10.250615119934082
    6. ' _' → logprob: -10.500615119934082
    7. 'capacity' → logprob: -10.500615119934082
    8. ',' → logprob: -11.250615119934082
    9. '           ' → logprob: -11.750615119934082
    10. '_' → logprob: -12.125615119934082

Token 478: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.05646771937608719
    2. ',' → logprob: -3.5564677715301514
    3. '/' → logprob: -4.431467533111572
    4. ')' → logprob: -4.681467533111572
    5. '/item' → logprob: -5.556467533111572
    6. ' if' → logprob: -7.931467533111572
    7. ' //' → logprob: -8.18146800994873
    8. '/items' → logprob: -8.18146800994873
    9. ' ,' → logprob: -9.55646800994873
    10. ',item' → logprob: -9.80646800994873

Token 479: ' w' (ID: 286)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.2014213353395462
    2. ' item' → logprob: -1.7014213800430298
    3. '(item' → logprob: -12.201421737670898
    4. '	item' → logprob: -14.576421737670898
    5. ')item' → logprob: -14.701421737670898
    6. '=item' → logprob: -14.826421737670898
    7. ' (' → logprob: -15.076421737670898
    8. 'float' → logprob: -15.201421737670898
    9. '           ' → logprob: -15.451421737670898
    10. ' float' → logprob: -15.826421737670898

Token 480: '_i' (ID: 10853)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006057724356651306
    2. ' )' → logprob: -5.7560577392578125
    3. '_i' → logprob: -6.5060577392578125
    4. '),' → logprob: -8.256057739257812
    5. 'ight' → logprob: -8.506057739257812
    6. 't' → logprob: -8.506057739257812
    7. '.item' → logprob: -9.131057739257812
    8. '   ' → logprob: -9.256057739257812
    9. '[i' → logprob: -9.881057739257812
    10. ')
' → logprob: -10.131057739257812

Token 481: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004334814380854368
    2. ')
' → logprob: -5.504334926605225
    3. '           ' → logprob: -8.754334449768066
    4. ' )' → logprob: -10.754334449768066
    5. '),' → logprob: -10.879334449768066
    6. ')`' → logprob: -11.254334449768066
    7. ')
' → logprob: -11.379334449768066
    8. ')*' → logprob: -11.629334449768066
    9. '               ' → logprob: -12.379334449768066
    10. '))' → logprob: -13.004334449768066

Token 482: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005778160993941128
    2. '            
' → logprob: -7.875577926635742
    3. ',' → logprob: -9.875577926635742
    4. ' if' → logprob: -10.250577926635742
    5. '       ' → logprob: -10.375577926635742
    6. '               ' → logprob: -10.500577926635742
    7. '            ' → logprob: -11.125577926635742
    8. ' for' → logprob: -12.375577926635742
    9. ' 
' → logprob: -12.625577926635742
    10. '
' → logprob: -12.875577926635742

Token 483: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010516269830986857
    2. '            
' → logprob: -7.626051425933838
    3. ' if' → logprob: -8.876051902770996
    4. '       ' → logprob: -9.251051902770996
    5. '               ' → logprob: -9.876051902770996
    6. '            ' → logprob: -10.001051902770996
    7. ',' → logprob: -10.251051902770996
    8. ' 
' → logprob: -10.501051902770996
    9. ' elif' → logprob: -10.876051902770996
    10. '   ' → logprob: -11.251051902770996

Token 484: ' -' (ID: 533)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02830522321164608
    2. ' if' → logprob: -4.4033050537109375
    3. 'elif' → logprob: -5.4033050537109375
    4. 'if' → logprob: -5.6533050537109375
    5. ' elif' → logprob: -5.9033050537109375
    6. '       ' → logprob: -6.5283050537109375
    7. ' else' → logprob: -7.0283050537109375
    8. '   ' → logprob: -7.7783050537109375
    9. 'else' → logprob: -7.9033050537109375
    10. '               ' → logprob: -8.153305053710938

Token 485: ' For' (ID: 2214)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9747284650802612
    2. 'For' → logprob: -1.8497284650802612
    3. ' For' → logprob: -1.9747284650802612
    4. 'if' → logprob: -1.9747284650802612
    5. 'elif' → logprob: -2.974728584289551
    6. '           ' → logprob: -3.099728584289551
    7. ' for' → logprob: -3.474728584289551
    8. ' elif' → logprob: -3.724728584289551
    9. 'If' → logprob: -3.849728584289551
    10. 'for' → logprob: -4.724728584289551

Token 486: ' zero' (ID: 12421)
  Prédit: 'negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'negative' → logprob: -0.7172765731811523
    2. ' zero' → logprob: -1.8422765731811523
    3. 'zero' → logprob: -1.8422765731811523
    4. ' negative' → logprob: -2.4672765731811523
    5. 'positive' → logprob: -3.3422765731811523
    6. 'w' → logprob: -3.5922765731811523
    7. ' positive' → logprob: -4.467276573181152
    8. 'item' → logprob: -4.467276573181152
    9. 'weight' → logprob: -4.967276573181152
    10. 'non' → logprob: -5.217276573181152

Token 487: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.6372696757316589
    2. ' weight' → logprob: -0.7622696757316589
    3. ' or' → logprob: -5.637269496917725
    4. '_weight' → logprob: -8.012269973754883
    5. '-weight' → logprob: -8.137269973754883
    6. 'w' → logprob: -9.512269973754883
    7. ' if' → logprob: -9.762269973754883
    8. ' weights' → logprob: -9.762269973754883
    9. ' and' → logprob: -10.137269973754883
    10. ' w' → logprob: -10.262269973754883

Token 488: ' items' (ID: 4732)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018894074484705925
    2. '           ' → logprob: -4.268894195556641
    3. ',' → logprob: -6.643894195556641
    4. ' or' → logprob: -7.393894195556641
    5. ':
' → logprob: -7.518894195556641
    6. ' if' → logprob: -7.518894195556641
    7. ' and' → logprob: -7.518894195556641
    8. 'if' → logprob: -8.14389419555664
    9. 'and' → logprob: -8.14389419555664
    10. ' items' → logprob: -8.89389419555664

Token 489: ' with' (ID: 483)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6530328989028931
    2. ':' → logprob: -0.7780328989028931
    3. ',' → logprob: -4.7780327796936035
    4. ' if' → logprob: -5.2780327796936035
    5. ':
' → logprob: -5.9030327796936035
    6. ' and' → logprob: -6.0280327796936035
    7. '               ' → logprob: -7.9030327796936035
    8. 'and' → logprob: -8.528033256530762
    9. '       ' → logprob: -9.028033256530762
    10. ' :' → logprob: -9.153033256530762

Token 490: ' positive' (ID: 8841)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6018106937408447
    2. 'positive' → logprob: -1.2268106937408447
    3. 'item' → logprob: -2.6018106937408447
    4. ' positive' → logprob: -2.9768106937408447
    5. 'self' → logprob: -4.351810455322266
    6. ' v' → logprob: -4.351810455322266
    7. ' item' → logprob: -5.601810455322266
    8. ' self' → logprob: -6.101810455322266
    9. 'non' → logprob: -7.601810455322266
    10. 'value' → logprob: -7.726810455322266

Token 491: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.5840519070625305
    2. ' value' → logprob: -0.8340519070625305
    3. 'v' → logprob: -5.084052085876465
    4. 'ratio' → logprob: -6.584052085876465
    5. ' v' → logprob: -8.334052085876465
    6. ' ratio' → logprob: -8.459052085876465
    7. '_value' → logprob: -10.834052085876465
    8. 'values' → logprob: -11.459052085876465
    9. ' values' → logprob: -12.209052085876465
    10. 'val' → logprob: -12.584052085876465

Token 492: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28116780519485474
    2. '           ' → logprob: -1.90616774559021
    3. ',' → logprob: -2.65616774559021
    4. ':
' → logprob: -4.406167984008789
    5. ' if' → logprob: -4.781167984008789
    6. '               ' → logprob: -6.656167984008789
    7. ' and' → logprob: -6.781167984008789
    8. ' (' → logprob: -7.406167984008789
    9. ' :' → logprob: -7.656167984008789
    10. 'if' → logprob: -8.156167984008789

Token 493: ' take' (ID: 2304)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.6534236669540405
    2. 'total' → logprob: -0.7784236669540405
    3. '           ' → logprob: -4.27842378616333
    4. 'fraction' → logprob: -6.15342378616333
    5. '               ' → logprob: -6.77842378616333
    6. '#' → logprob: -6.90342378616333
    7. ' fraction' → logprob: -7.15342378616333
    8. 'if' → logprob: -8.028423309326172
    9. ' if' → logprob: -8.278423309326172
    10. ' #' → logprob: -8.528423309326172

Token 494: ' all' (ID: 722)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008154590614140034
    2. 'full' → logprob: -5.258154392242432
    3. ' ' → logprob: -6.883154392242432
    4. 'float' → logprob: -7.633154392242432
    5. ' full' → logprob: -7.883154392242432
    6. 'all' → logprob: -7.883154392242432
    7. 'whole' → logprob: -8.63315486907959
    8. 'the' → logprob: -9.13315486907959
    9. 'fraction' → logprob: -9.25815486907959
    10. ' float' → logprob: -9.75815486907959

Token 495: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003765727742575109
    2. ' if' → logprob: -9.00037670135498
    3. '            
' → logprob: -9.12537670135498
    4. ',' → logprob: -10.37537670135498
    5. '               ' → logprob: -10.37537670135498
    6. 'elif' → logprob: -10.87537670135498
    7. '
' → logprob: -11.37537670135498
    8. ' elif' → logprob: -11.50037670135498
    9. '       ' → logprob: -11.75037670135498
    10. 'if' → logprob: -11.75037670135498

Token 496: 'x' (ID: 87)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7625869512557983
    2. '1' → logprob: -1.5125869512557983
    3. ')
' → logprob: -1.8875869512557983
    4. '           ' → logprob: -2.137587070465088
    5. '),' → logprob: -4.137587070465088
    6. 'item' → logprob: -4.137587070465088
    7. 'if' → logprob: -5.512587070465088
    8. '               ' → logprob: -6.137587070465088
    9. 'fraction' → logprob: -7.137587070465088
    10. 'continue' → logprob: -7.512587070465088

Token 497: '_i' (ID: 10853)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3490953743457794
    2. ' =' → logprob: -1.224095344543457
    3. '=float' → logprob: -8.099095344543457
    4. ')' → logprob: -8.974095344543457
    5. '=item' → logprob: -9.974095344543457
    6. ' if' → logprob: -10.474095344543457
    7. '           ' → logprob: -10.599095344543457
    8. ':' → logprob: -10.724095344543457
    9. ' ==' → logprob: -11.099095344543457
    10. '=True' → logprob: -11.224095344543457

Token 498: ' in' (ID: 306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038056179881095886
    2. ' =' → logprob: -3.2880561351776123
    3. ')' → logprob: -12.038056373596191
    4. '=
' → logprob: -14.038056373596191
    5. '=float' → logprob: -14.163056373596191
    6. ')=' → logprob: -14.163056373596191
    7. '*=' → logprob: -14.163056373596191
    8. '*' → logprob: -14.538056373596191
    9. '==' → logprob: -14.538056373596191
    10. '=True' → logprob: -14.663056373596191

Token 499: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.017124412581324577
    2. 'range' → logprob: -5.392124176025391
    3. '(' → logprob: -5.517124176025391
    4. '1' → logprob: -5.642124176025391
    5. '0' → logprob: -5.892124176025391
    6. '{' → logprob: -7.267124176025391
    7. ' [' → logprob: -8.01712417602539
    8. 'float' → logprob: -8.14212417602539
    9. '[item' → logprob: -9.01712417602539
    10. '```' → logprob: -9.14212417602539

Token 500: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7372048862162046e-05
    2. ')' → logprob: -11.875027656555176
    3. '[' → logprob: -11.875027656555176
    4. ']' → logprob: -12.375027656555176
    5. ' ' → logprob: -12.375027656555176
    6. '1' → logprob: -13.625027656555176
    7. '(' → logprob: -13.875027656555176
    8. 'float' → logprob: -14.125027656555176
    9. '   ' → logprob: -14.250027656555176
    10. ',' → logprob: -15.500027656555176

Token 501: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007389983162283897
    2. '.' → logprob: -5.007390022277832
    3. '..' → logprob: -7.882390022277832
    4. '1' → logprob: -8.507390022277832
    5. ' ,' → logprob: -9.882390022277832
    6. '.,' → logprob: -10.757390022277832
    7. ',
' → logprob: -12.007390022277832
    8. '...' → logprob: -12.632390022277832
    9. '
' → logprob: -12.757390022277832
    10. ']' → logprob: -13.132390022277832

Token 502: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13387642800807953
    2. 'inf' → logprob: -2.133876323699951
    3. 'float' → logprob: -5.633876323699951
    4. 'in' → logprob: -6.383876323699951
    5. '...' → logprob: -7.133876323699951
    6. '
' → logprob: -8.13387680053711
    7. '+' → logprob: -9.13387680053711
    8. ')' → logprob: -9.13387680053711
    9. '∞' → logprob: -9.63387680053711
    10. '```' → logprob: -9.75887680053711

Token 503: '],' (ID: 2155)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.016664594411849976
    2. '])
' → logprob: -4.891664505004883
    3. ']' → logprob: -5.016664505004883
    4. '],' → logprob: -6.891664505004883
    5. ']),' → logprob: -7.016664505004883
    6. '])
' → logprob: -8.766664505004883
    7. '])

' → logprob: -9.516664505004883
    8. ']);' → logprob: -9.766664505004883
    9. '.' → logprob: -10.516664505004883
    10. ')' → logprob: -10.891664505004883

Token 504: ' max' (ID: 2999)
  Prédit: 'fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -0.967602014541626
    2. '           ' → logprob: -1.467602014541626
    3. 'so' → logprob: -2.342602014541626
    4. ' so' → logprob: -2.717602014541626
    5. 'since' → logprob: -3.217602014541626
    6. ' fraction' → logprob: -3.467602014541626
    7. 'because' → logprob: -3.842602014541626
    8. 'and' → logprob: -4.217601776123047
    9. 'but' → logprob: -4.217601776123047
    10. 'continue' → logprob: -4.592601776123047

Token 505: ' is' (ID: 382)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3735920190811157
    2. '=' → logprob: -1.4985920190811157
    3. '1' → logprob: -1.8735920190811157
    4. ' at' → logprob: -2.248591899871826
    5. 'fraction' → logprob: -2.873591899871826
    6. ' fraction' → logprob: -3.123591899871826
    7. '(' → logprob: -3.623591899871826
    8. 'imize' → logprob: -3.998591899871826
    9. 'ed' → logprob: -4.123591899871826
    10. 'x' → logprob: -4.373591899871826

Token 506: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.52788148727268e-05
    2. ' ' → logprob: -9.875064849853516
    3. '   ' → logprob: -12.125064849853516
    4. '
' → logprob: -13.000064849853516
    5. ')' → logprob: -13.500064849853516
    6. '```' → logprob: -13.750064849853516
    7. '           ' → logprob: -14.250064849853516
    8. 'fraction' → logprob: -14.875064849853516
    9. '               ' → logprob: -15.437564849853516
    10. '       ' → logprob: -15.562564849853516

Token 507: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.625011444091797
    3. '   ' → logprob: -14.000011444091797
    4. '
' → logprob: -14.875011444091797
    5. ')' → logprob: -15.000011444091797
    6. '```' → logprob: -15.500011444091797
    7. '=' → logprob: -15.625011444091797
    8. 'x' → logprob: -16.375011444091797
    9. 'fraction' → logprob: -17.062511444091797
    10. ' ' → logprob: -17.187511444091797

Token 508: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.35356980562210083
    2. ')' → logprob: -1.853569746017456
    3. '           ' → logprob: -1.978569746017456
    4. '),' → logprob: -7.228569984436035
    5. '               ' → logprob: -7.478569984436035
    6. ')
' → logprob: -7.478569984436035
    7. '):
' → logprob: -8.478569984436035
    8. ' if' → logprob: -9.103569984436035
    9. ')

' → logprob: -9.353569984436035
    10. ').' → logprob: -9.603569984436035

Token 509: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025037210434675217
    2. '       ' → logprob: -6.252503871917725
    3. '            
' → logprob: -8.502503395080566
    4. '               ' → logprob: -9.127503395080566
    5. '            ' → logprob: -9.127503395080566
    6. ' if' → logprob: -10.377503395080566
    7. '        ' → logprob: -10.502503395080566
    8. '          ' → logprob: -10.502503395080566
    9. ',' → logprob: -11.127503395080566
    10. '   ' → logprob: -11.627503395080566

Token 510: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007028992986306548
    2. 'if' → logprob: -8.375702857971191
    3. ' if' → logprob: -8.625702857971191
    4. '       ' → logprob: -9.000702857971191
    5. '            
' → logprob: -9.625702857971191
    6. '            ' → logprob: -11.250702857971191
    7. 'token' → logprob: -11.375702857971191
    8. '   ' → logprob: -11.500702857971191
    9. '
' → logprob: -11.750702857971191
    10. '          ' → logprob: -12.000702857971191

Token 511: ' -' (ID: 533)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008961400017142296
    2. ' if' → logprob: -5.133961200714111
    3. 'if' → logprob: -6.258961200714111
    4. '       ' → logprob: -7.383961200714111
    5. 'elif' → logprob: -9.13396167755127
    6. '   ' → logprob: -9.75896167755127
    7. ' elif' → logprob: -9.75896167755127
    8. '#' → logprob: -9.88396167755127
    9. ' #' → logprob: -10.13396167755127
    10. '               ' → logprob: -10.75896167755127

Token 512: ' For' (ID: 2214)
  Prédit: 'For'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'For' → logprob: -0.926916778087616
    2. 'elif' → logprob: -1.4269168376922607
    3. ' For' → logprob: -2.1769168376922607
    4. 'if' → logprob: -2.5519168376922607
    5. ' for' → logprob: -2.9269168376922607
    6. 'for' → logprob: -3.1769168376922607
    7. ' if' → logprob: -3.4269168376922607
    8. '           ' → logprob: -3.9269168376922607
    9. ' elif' → logprob: -4.426916599273682
    10. 'If' → logprob: -4.801916599273682

Token 513: ' negative' (ID: 12626)
  Prédit: 'negative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'negative' → logprob: -0.37583133578300476
    2. ' negative' → logprob: -1.2508313655853271
    3. ' zero' → logprob: -4.750831127166748
    4. 'zero' → logprob: -4.750831127166748
    5. 'positive' → logprob: -6.000831127166748
    6. 'item' → logprob: -6.000831127166748
    7. ' positive' → logprob: -6.750831127166748
    8. ' item' → logprob: -6.875831127166748
    9. ' items' → logprob: -7.125831127166748
    10. 'w' → logprob: -7.500831127166748

Token 514: ' weights' (ID: 28460)
  Prédit: ' weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weight' → logprob: -0.18215276300907135
    2. 'weight' → logprob: -2.05715274810791
    3. ' weights' → logprob: -3.30715274810791
    4. 'weights' → logprob: -6.30715274810791
    5. '_weight' → logprob: -9.18215274810791
    6. 'w' → logprob: -9.55715274810791
    7. ' w' → logprob: -9.68215274810791
    8. ' items' → logprob: -11.30715274810791
    9. '_weights' → logprob: -11.80715274810791
    10. '.weight' → logprob: -13.55715274810791

Token 515: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14386874437332153
    2. ':
' → logprob: -2.1438686847686768
    3. '           ' → logprob: -5.018868923187256
    4. ',' → logprob: -5.518868923187256
    5. ' if' → logprob: -5.518868923187256
    6. ' items' → logprob: -7.768868923187256
    7. ' and' → logprob: -8.018868446350098
    8. 'if' → logprob: -8.018868446350098
    9. 'items' → logprob: -8.518868446350098
    10. ' :' → logprob: -8.643868446350098

Token 516: ' this' (ID: 495)
  Prédit: ' #'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' #' → logprob: -1.0395103693008423
    2. '#' → logprob: -1.4145103693008423
    3. ' if' → logprob: -1.4145103693008423
    4. ' continue' → logprob: -2.5395102500915527
    5. '           ' → logprob: -3.7895102500915527
    6. 'if' → logprob: -3.9145102500915527
    7. 'continue' → logprob: -4.664510250091553
    8. ' x' → logprob: -4.789510250091553
    9. '               ' → logprob: -4.914510250091553
    10. ' pass' → logprob: -5.539510250091553

Token 517: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6551806926727295
    2. ' can' → logprob: -2.5301806926727295
    3. ':' → logprob: -2.6551806926727295
    4. ' means' → logprob: -3.1551806926727295
    5. 'is' → logprob: -3.2801806926727295
    6. ' should' → logprob: -3.5301806926727295
    7. ' may' → logprob: -3.6551806926727295
    8. ' code' → logprob: -3.7801806926727295
    9. ' could' → logprob: -4.155180931091309
    10. ' must' → logprob: -4.155180931091309

Token 518: ' tricky' (ID: 53009)
  Prédit: ' tricky'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tricky' → logprob: -0.5482869744300842
    2. 'tr' → logprob: -2.4232869148254395
    3. 'complex' → logprob: -2.9232869148254395
    4. 'not' → logprob: -3.4232869148254395
    5. ' complex' → logprob: -3.4232869148254395
    6. ' complicated' → logprob: -3.5482869148254395
    7. ' a' → logprob: -3.5482869148254395
    8. 'a' → logprob: -3.6732869148254395
    9. 'more' → logprob: -3.6732869148254395
    10. ' not' → logprob: -4.0482869148254395

Token 519: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003691408783197403
    2. '            
' → logprob: -6.87869119644165
    3. ' if' → logprob: -7.25369119644165
    4. '       ' → logprob: -7.25369119644165
    5. '
' → logprob: -7.75369119644165
    6. ',' → logprob: -8.128691673278809
    7. '#' → logprob: -9.753691673278809
    8. '            ' → logprob: -9.753691673278809
    9. '               ' → logprob: -10.128691673278809
    10. ' #' → logprob: -10.253691673278809

Token 520: ' since' (ID: 3630)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8004396557807922
    2. ' if' → logprob: -0.8004396557807922
    3. ' #' → logprob: -3.1754395961761475
    4. '#' → logprob: -3.8004395961761475
    5. ' continue' → logprob: -3.9254395961761475
    6. 'if' → logprob: -4.550439834594727
    7. 'continue' → logprob: -5.550439834594727
    8. ' x' → logprob: -7.050439834594727
    9. ' pass' → logprob: -7.675439834594727
    10. ' fraction' → logprob: -8.300439834594727

Token 521: ' ' (ID: 220)
  Prédit: 'taking'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taking' → logprob: -1.315935492515564
    2. ' taking' → logprob: -1.565935492515564
    3. ' adding' → logprob: -1.565935492515564
    4. 'adding' → logprob: -1.690935492515564
    5. ' it' → logprob: -3.9409356117248535
    6. 'we' → logprob: -4.4409356117248535
    7. ' we' → logprob: -4.4409356117248535
    8. 'it' → logprob: -4.4409356117248535
    9. 'they' → logprob: -4.6909356117248535
    10. 'remaining' → logprob: -4.8159356117248535

Token 522: '0' (ID: 15)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.15780654549598694
    2. 'taking' → logprob: -2.407806634902954
    3. 'adding' → logprob: -4.407806396484375
    4. 'item' → logprob: -4.657806396484375
    5. ' remaining' → logprob: -4.907806396484375
    6. 'we' → logprob: -5.157806396484375
    7. 'w' → logprob: -5.407806396484375
    8. ' taking' → logprob: -5.782806396484375
    9. 'the' → logprob: -6.032806396484375
    10. 'they' → logprob: -6.532806396484375

Token 523: '<=' (ID: 16672)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1888800859451294
    2. ' <=' → logprob: -2.18887996673584
    3. '<' → logprob: -3.31387996673584
    4. '<=' → logprob: -4.18887996673584
    5. '<x' → logprob: -6.06387996673584
    6. ' >' → logprob: -6.18887996673584
    7. '           ' → logprob: -7.31387996673584
    8. ' >=' → logprob: -7.56387996673584
    9. ':' → logprob: -7.68887996673584
    10. '>' → logprob: -8.18887996673584

Token 524: 'x' (ID: 87)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.3429409861564636
    2. 'x' → logprob: -1.5929410457611084
    3. ' remaining' → logprob: -2.9679410457611084
    4. ' x' → logprob: -3.7179410457611084
    5. 'item' → logprob: -4.842940807342529
    6. ' item' → logprob: -6.717940807342529
    7. 'fraction' → logprob: -7.592940807342529
    8. 'w' → logprob: -7.717940807342529
    9. 'self' → logprob: -8.717941284179688
    10. ' fraction' → logprob: -9.092941284179688

Token 525: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0014728414826095104
    2. 'i' → logprob: -6.7514729499816895
    3. '<=' → logprob: -9.001472473144531
    4. ' <=' → logprob: -9.126472473144531
    5. '_' → logprob: -10.001472473144531
    6. '<' → logprob: -11.376472473144531
    7. ' _' → logprob: -12.876472473144531
    8. 'x' → logprob: -13.001472473144531
    9. '[i' → logprob: -13.626472473144531
    10. ' <' → logprob: -13.751472473144531

Token 526: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.47482818365097046
    2. ' <=' → logprob: -0.9748281836509705
    3. '<|end|>' → logprob: -8.724827766418457
    4. '_i' → logprob: -8.849827766418457
    5. 'x' → logprob: -9.349827766418457
    6. ' ≤' → logprob: -9.849827766418457
    7. '≤' → logprob: -10.099827766418457
    8. '<' → logprob: -10.099827766418457
    9. ']<=' → logprob: -10.224827766418457
    10. ')<=' → logprob: -10.599827766418457

Token 527: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001805377542041242
    2. ' ' → logprob: -8.6251802444458
    3. '
' → logprob: -14.7501802444458
    4. '0' → logprob: -15.5001802444458
    5. '   ' → logprob: -16.375181198120117
    6. '```' → logprob: -16.812681198120117
    7. '-' → logprob: -17.000181198120117
    8. '<|end|>' → logprob: -17.812681198120117
    9. ',' → logprob: -17.937681198120117
    10. '  ' → logprob: -18.062681198120117

Token 528: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.049247246235609055
    2. '           ' → logprob: -3.4242472648620605
    3. ' and' → logprob: -4.7992472648620605
    4. ':' → logprob: -6.4242472648620605
    5. ',
' → logprob: -6.5492472648620605
    6. ' ,' → logprob: -7.2992472648620605
    7. ' but' → logprob: -7.6742472648620605
    8. 'and' → logprob: -7.6742472648620605
    9. ' if' → logprob: -7.7992472648620605
    10. ' for' → logprob: -7.9242472648620605

Token 529: ' we' (ID: 581)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.174295425415039
    2. ' w' → logprob: -1.299295425415039
    3. 'remaining' → logprob: -1.799295425415039
    4. ' remaining' → logprob: -2.174295425415039
    5. ' weight' → logprob: -3.174295425415039
    6. 'weight' → logprob: -3.549295425415039
    7. 'we' → logprob: -4.549295425415039
    8. ' the' → logprob: -4.674295425415039
    9. ' item' → logprob: -4.924295425415039
    10. ' taking' → logprob: -4.924295425415039

Token 530: ' want' (ID: 1682)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.2191108912229538
    2. 'can' → logprob: -2.0941109657287598
    3. ' want' → logprob: -3.8441109657287598
    4. ' have' → logprob: -4.34411096572876
    5. ' cannot' → logprob: -4.34411096572876
    6. 'cannot' → logprob: -4.59411096572876
    7. 'have' → logprob: -5.71911096572876
    8. ' must' → logprob: -6.34411096572876
    9. ' may' → logprob: -6.34411096572876
    10. 'want' → logprob: -6.84411096572876

Token 531: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.4142208993434906
    2. ' to' → logprob: -1.164220929145813
    3. 'maximize' → logprob: -3.7892208099365234
    4. 'max' → logprob: -6.289220809936523
    5. '           ' → logprob: -7.039220809936523
    6. ' maximize' → logprob: -7.539220809936523
    7. '               ' → logprob: -8.289220809936523
    8. '   ' → logprob: -8.664220809936523
    9. ' max' → logprob: -8.914220809936523
    10. 'total' → logprob: -9.539220809936523

Token 532: ' maximize' (ID: 44207)
  Prédit: 'maximize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maximize' → logprob: -0.03720222786068916
    2. 'increase' → logprob: -3.7872021198272705
    3. ' maximize' → logprob: -5.91220235824585
    4. 'take' → logprob: -6.03720235824585
    5. 'min' → logprob: -6.28720235824585
    6. 'choose' → logprob: -6.28720235824585
    7. 'add' → logprob: -6.91220235824585
    8. 'max' → logprob: -7.03720235824585
    9. 'avoid' → logprob: -7.53720235824585
    10. 'include' → logprob: -7.66220235824585

Token 533: ' value' (ID: 1432)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.7143259048461914
    2. 'value' → logprob: -1.2143259048461914
    3. ' total' → logprob: -1.9643259048461914
    4. ' value' → logprob: -2.7143259048461914
    5. 'the' → logprob: -5.339325904846191
    6. ' the' → logprob: -6.339325904846191
    7. 'remaining' → logprob: -8.464325904846191
    8. 'profit' → logprob: -9.339325904846191
    9. 'benef' → logprob: -9.464325904846191
    10. ' profit' → logprob: -10.839325904846191

Token 534: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5294216275215149
    2. ',' → logprob: -0.9044216275215149
    3. '<|end|>' → logprob: -6.904421806335449
    4. '.' → logprob: -7.029421806335449
    5. ',
' → logprob: -7.154421806335449
    6. ' if' → logprob: -7.404421806335449
    7. ' and' → logprob: -7.904421806335449
    8. ':' → logprob: -8.15442180633545
    9. '...' → logprob: -8.27942180633545
    10. '#' → logprob: -8.40442180633545

Token 535: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003010030835866928
    2. '       ' → logprob: -6.503009796142578
    3. ',' → logprob: -7.128009796142578
    4. '   ' → logprob: -8.878009796142578
    5. '            
' → logprob: -8.878009796142578
    6. '            ' → logprob: -9.003009796142578
    7. '               ' → logprob: -9.878009796142578
    8. '<|end|>' → logprob: -10.378009796142578
    9. '          ' → logprob: -10.503009796142578
    10. ' if' → logprob: -10.503009796142578

Token 536: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.036163847893476486
    2. ' if' → logprob: -3.911163806915283
    3. ',' → logprob: -5.411163806915283
    4. '#' (adapté à ' #') → logprob: -5.661163806915283
    5. '       ' → logprob: -6.161163806915283
    6. ' #' → logprob: -6.786163806915283
    7. '   ' → logprob: -7.161163806915283
    8. 'if' → logprob: -7.286163806915283
    9. '
' → logprob: -7.411163806915283
    10. '            
' → logprob: -7.411163806915283

Token 537: '  ' (ID: 256)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5014337301254272
    2. '           ' → logprob: -1.1264337301254272
    3. 'if' → logprob: -3.251433849334717
    4. ' x' → logprob: -3.876433849334717
    5. '#' → logprob: -5.626433849334717
    6. ' #' → logprob: -5.751433849334717
    7. 'x' → logprob: -6.626433849334717
    8. ' fraction' → logprob: -7.001433849334717
    9. '       ' → logprob: -8.376433372497559
    10. '            
' → logprob: -8.501433372497559

Token 538: ' For' (ID: 2214)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7979271411895752
    2. 'if' → logprob: -1.0479271411895752
    3. '           ' → logprob: -1.7979271411895752
    4. '#' → logprob: -3.547927141189575
    5. ' x' → logprob: -6.422926902770996
    6. 'x' → logprob: -6.547926902770996
    7. ' #' → logprob: -7.172926902770996
    8. 'If' → logprob: -8.922926902770996
    9. 'max' → logprob: -9.672926902770996
    10. 'continue' → logprob: -9.672926902770996

Token 539: ' negative' (ID: 12626)
  Prédit: ' item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.8091992139816284
    2. 'item' → logprob: -1.0591992139816284
    3. 'negative' → logprob: -2.809199333190918
    4. ' negative' → logprob: -3.184199333190918
    5. ' positive' → logprob: -3.184199333190918
    6. 'positive' → logprob: -3.684199333190918
    7. 'w' → logprob: -3.934199333190918
    8. ' w' → logprob: -4.684199333190918
    9. 'remaining' → logprob: -5.559199333190918
    10. 'weight' → logprob: -6.809199333190918

Token 540: ' w' (ID: 286)
  Prédit: ' weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weights' → logprob: -0.3052081763744354
    2. 'weights' → logprob: -1.9302082061767578
    3. ' weight' → logprob: -2.805208206176758
    4. 'weight' → logprob: -3.055208206176758
    5. 'w' → logprob: -5.055208206176758
    6. ' item' → logprob: -6.430208206176758
    7. ' items' → logprob: -7.430208206176758
    8. 'item' → logprob: -7.430208206176758
    9. ' w' → logprob: -7.805208206176758
    10. '_weights' → logprob: -8.055208206176758

Token 541: ' and' (ID: 326)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0008117707911878824
    2. 'i' → logprob: -8.500811576843262
    3. '<=' → logprob: -8.875811576843262
    4. ' <=' → logprob: -9.375811576843262
    5. '_items' → logprob: -9.500811576843262
    6. '   ' → logprob: -9.875811576843262
    7. '>' → logprob: -10.125811576843262
    8. ',' → logprob: -10.375811576843262
    9. '<' → logprob: -10.500811576843262
    10. ' <' → logprob: -10.625811576843262

Token 542: ' positive' (ID: 8841)
  Prédit: 'positive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positive' → logprob: -1.200575351715088
    2. 'v' → logprob: -1.325575351715088
    3. 'remaining' → logprob: -1.575575351715088
    4. ' positive' → logprob: -2.450575351715088
    5. 'negative' → logprob: -2.825575351715088
    6. 'item' → logprob: -3.700575351715088
    7. ' remaining' → logprob: -4.325575351715088
    8. ' v' → logprob: -4.450575351715088
    9. ' negative' → logprob: -4.825575351715088
    10. 'x' → logprob: -4.950575351715088

Token 543: ' v' (ID: 323)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.7081143856048584
    2. 'value' → logprob: -1.0831143856048584
    3. ' weight' → logprob: -2.7081143856048584
    4. 'weight' → logprob: -2.7081143856048584
    5. 'v' → logprob: -4.5831146240234375
    6. ' weights' → logprob: -4.8331146240234375
    7. 'weights' → logprob: -5.4581146240234375
    8. ' item' → logprob: -5.4581146240234375
    9. 'item' → logprob: -5.9581146240234375
    10. ' values' → logprob: -6.3331146240234375

Token 544: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34074667096138
    2. ':' → logprob: -1.3407466411590576
    3. ':
' → logprob: -3.9657466411590576
    4. '#' → logprob: -5.840746879577637
    5. ',
' → logprob: -5.965746879577637
    6. '           ' → logprob: -6.965746879577637
    7. ' if' → logprob: -7.840746879577637
    8. 'if' → logprob: -8.215746879577637
    9. 'items' → logprob: -8.465746879577637
    10. ' items' → logprob: -8.715746879577637

Token 545: ' taking' (ID: 6167)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09221425652503967
    2. ' #' → logprob: -3.842214345932007
    3. 'fraction' → logprob: -3.842214345932007
    4. 'x' → logprob: -3.967214345932007
    5. 'if' → logprob: -5.217214107513428
    6. ' fraction' → logprob: -5.342214107513428
    7. ' if' → logprob: -5.717214107513428
    8. 'take' → logprob: -5.717214107513428
    9. '           ' → logprob: -6.217214107513428
    10. ' x' → logprob: -6.342214107513428

Token 546: ' full' (ID: 3149)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08082619309425354
    2. 'the' → logprob: -3.5808262825012207
    3. 'full' → logprob: -4.205826282501221
    4. ' full' → logprob: -4.455826282501221
    5. ' the' → logprob: -4.705826282501221
    6. ' ' → logprob: -5.080826282501221
    7. 'fraction' → logprob: -5.955826282501221
    8. 'item' → logprob: -7.080826282501221
    9. 'all' → logprob: -7.205826282501221
    10. ' fractions' → logprob: -7.330826282501221

Token 547: ' x' (ID: 1215)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4376832842826843
    2. ' fraction' → logprob: -1.812683343887329
    3. ' item' → logprob: -2.562683343887329
    4. ' amount' → logprob: -3.562683343887329
    5. 'fraction' → logprob: -3.937683343887329
    6. ' ' → logprob: -3.937683343887329
    7. ' x' → logprob: -4.18768310546875
    8. 'x' → logprob: -4.81268310546875
    9. 'item' → logprob: -4.81268310546875
    10. 'amount' → logprob: -5.31268310546875

Token 548: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00041005798266269267
    2. '=' → logprob: -8.375410079956055
    3. 'i' → logprob: -9.500410079956055
    4. ' =' → logprob: -10.125410079956055
    5. '[i' → logprob: -10.875410079956055
    6. '_item' → logprob: -11.125410079956055
    7. '_' → logprob: -12.000410079956055
    8. '```' → logprob: -12.125410079956055
    9. '   ' → logprob: -12.250410079956055
    10. '[' → logprob: -13.250410079956055

Token 549: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1294269859790802
    2. ' =' → logprob: -2.129426956176758
    3. '_i' → logprob: -7.879426956176758
    4. ' is' → logprob: -8.129426956176758
    5. ' in' → logprob: -8.129426956176758
    6. ' should' → logprob: -8.379426956176758
    7. ' may' → logprob: -8.629426956176758
    8. ' might' → logprob: -8.629426956176758
    9. ' (' → logprob: -8.879426956176758
    10. ' could' → logprob: -9.504426956176758

Token 550: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015141464537009597
    2. ' ' → logprob: -6.501513957977295
    3. '0' → logprob: -11.501514434814453
    4. '```' → logprob: -14.376514434814453
    5. '   ' → logprob: -14.501514434814453
    6. '  ' → logprob: -16.314014434814453
    7. '`' → logprob: -16.564014434814453
    8. '<|end|>' → logprob: -16.689014434814453
    9. '...' → logprob: -16.814014434814453
    10. '=' → logprob: -17.251514434814453

Token 551: ' reduces' (ID: 38566)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2530546188354492
    2. ' is' → logprob: -1.5030546188354492
    3. ' would' → logprob: -2.378054618835449
    4. ' or' → logprob: -2.503054618835449
    5. ':' → logprob: -2.628054618835449
    6. ' will' → logprob: -2.878054618835449
    7. ' may' → logprob: -3.003054618835449
    8. ' might' → logprob: -3.753054618835449
    9. '               ' → logprob: -4.128054618835449
    10. ':
' → logprob: -4.253054618835449

Token 552: ' total' (ID: 3609)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.24372509121894836
    2. ' remaining' → logprob: -1.618725061416626
    3. 'the' → logprob: -4.743725299835205
    4. ' the' → logprob: -4.993725299835205
    5. 'capacity' → logprob: -6.618725299835205
    6. ' capacity' → logprob: -6.993725299835205
    7. '   ' → logprob: -9.618724822998047
    8. '`' → logprob: -9.868724822998047
    9. 'total' → logprob: -10.243724822998047
    10. ' ' → logprob: -10.243724822998047

Token 553: ' weight' (ID: 6049)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.4590693414211273
    2. '_capacity' → logprob: -1.7090693712234497
    3. ' capacity' → logprob: -1.8340693712234497
    4. 'weight' → logprob: -4.45906925201416
    5. '_weight' → logprob: -5.08406925201416
    6. 'remaining' → logprob: -5.83406925201416
    7. ' weight' → logprob: -6.33406925201416
    8. '_remaining' → logprob: -6.33406925201416
    9. '_' → logprob: -6.83406925201416
    10. ' remaining' → logprob: -7.33406925201416

Token 554: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07542738318443298
    2. ',' → logprob: -3.575427293777466
    3. ' but' → logprob: -3.575427293777466
    4. ' and' → logprob: -5.950427532196045
    5. ' (' → logprob: -6.575427532196045
    6. ' to' → logprob: -6.700427532196045
    7. ' because' → logprob: -6.825427532196045
    8. ' =' → logprob: -6.950427532196045
    9. ' for' → logprob: -6.950427532196045
    10. ' by' → logprob: -7.075427532196045

Token 555: 'since' (ID: 21910)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5492860078811646
    2. '),' → logprob: -0.9242860078811646
    3. '           ' → logprob: -5.174285888671875
    4. 'remaining' → logprob: -5.674285888671875
    5. '               ' → logprob: -6.299285888671875
    6. '#' → logprob: -6.674285888671875
    7. ' remaining' → logprob: -6.674285888671875
    8. ' and' → logprob: -6.799285888671875
    9. ')
' → logprob: -6.924285888671875
    10. ' but' → logprob: -6.924285888671875

Token 556: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.07509424537420273
    2. 'remaining' → logprob: -3.700094223022461
    3. 'item' → logprob: -3.950094223022461
    4. ' w' → logprob: -4.575094223022461
    5. 'weight' → logprob: -5.075094223022461
    6. 'negative' → logprob: -5.325094223022461
    7. '-' → logprob: -6.575094223022461
    8. ' item' → logprob: -6.700094223022461
    9. '-w' → logprob: -6.950094223022461
    10. 'the' → logprob: -7.075094223022461

Token 557: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.5725507140159607
    2. ')' → logprob: -2.0725507736206055
    3. '<' → logprob: -2.0725507736206055
    4. ' <' → logprob: -2.3225507736206055
    5. ' *' → logprob: -3.0725507736206055
    6. '*' → logprob: -4.6975507736206055
    7. ' is' → logprob: -4.9475507736206055
    8. '<|end|>' → logprob: -5.1975507736206055
    9. ')<' → logprob: -5.4475507736206055
    10. 'i' → logprob: -5.5725507736206055

Token 558: ' negative' (ID: 12626)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.8725744485855103
    2. ' is' → logprob: -1.3725744485855103
    3. ' <' → logprob: -1.7475744485855103
    4. '*' → logprob: -2.8725743293762207
    5. ' *' → logprob: -3.1225743293762207
    6. ')' → logprob: -3.1225743293762207
    7. 'is' → logprob: -5.247574329376221
    8. ')<' → logprob: -6.747574329376221
    9. 'negative' → logprob: -6.872574329376221
    10. '),' → logprob: -7.497574329376221

Token 559: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5267970561981201
    2. '),' → logprob: -0.9017970561981201
    3. ',' → logprob: -6.901797294616699
    4. ')
' → logprob: -7.401797294616699
    5. ').' → logprob: -7.651797294616699
    6. '           ' → logprob: -8.2767972946167
    7. ' but' → logprob: -8.5267972946167
    8. '):
' → logprob: -8.5267972946167
    9. ' and' → logprob: -8.7767972946167
    10. ' )' → logprob: -8.7767972946167

Token 560: '           ' (ID: 352)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2545735836029053
    2. '           ' → logprob: -1.5045735836029053
    3. ' #' → logprob: -7.379573822021484
    4. '               ' → logprob: -7.504573822021484
    5. 'which' → logprob: -7.879573822021484
    6. ' which' → logprob: -8.004573822021484
    7. 'and' → logprob: -8.629573822021484
    8. ' so' → logprob: -8.754573822021484
    9. ' but' → logprob: -8.879573822021484
    10. ' allowing' → logprob: -9.629573822021484

Token 561: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.48175257444381714
    2. '           ' → logprob: -1.856752634048462
    3. ' so' → logprob: -1.981752634048462
    4. ' which' → logprob: -3.356752634048462
    5. 'which' → logprob: -4.231752395629883
    6. ' thus' → logprob: -4.981752395629883
    7. ' and' → logprob: -5.106752395629883
    8. 'and' → logprob: -5.106752395629883
    9. 'so' → logprob: -5.356752395629883
    10. ' allowing' → logprob: -5.481752395629883

Token 562: '  ' (ID: 256)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.37816861271858215
    2. ' so' → logprob: -2.1281685829162598
    3. '           ' → logprob: -2.5031685829162598
    4. ' which' → logprob: -3.5031685829162598
    5. ' #' → logprob: -3.7531685829162598
    6. ' and' → logprob: -4.12816858291626
    7. 'and' → logprob: -4.62816858291626
    8. ' allowing' → logprob: -4.62816858291626
    9. 'which' → logprob: -5.00316858291626
    10. ' but' → logprob: -5.00316858291626

Token 563: ' increasing' (ID: 11293)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1410956084728241
    2. ' so' → logprob: -2.8910956382751465
    3. ' allowing' → logprob: -3.7660956382751465
    4. ' which' → logprob: -3.8910956382751465
    5. 'which' → logprob: -5.0160956382751465
    6. '           ' → logprob: -5.1410956382751465
    7. ' and' → logprob: -5.5160956382751465
    8. 'so' → logprob: -5.6410956382751465
    9. 'and' → logprob: -5.6410956382751465
    10. ' thus' → logprob: -6.2660956382751465

Token 564: ' capacity' (ID: 12241)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.09852203726768494
    2. ' remaining' → logprob: -2.7235219478607178
    3. 'capacity' → logprob: -3.9735219478607178
    4. ' capacity' → logprob: -5.348522186279297
    5. 'the' → logprob: -6.098522186279297
    6. ' the' → logprob: -6.348522186279297
    7. 'total' → logprob: -8.223522186279297
    8. 'available' → logprob: -8.973522186279297
    9. ' total' → logprob: -9.598522186279297
    10. ' available' → logprob: -10.223522186279297

Token 565: ' effectively' (ID: 18130)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07865191251039505
    2. ',' → logprob: -3.8286519050598145
    3. ' to' → logprob: -4.3286519050598145
    4. ' taken' → logprob: -4.9536519050598145
    5. '.' → logprob: -5.4536519050598145
    6. ' by' → logprob: -5.7036519050598145
    7. 'taken' → logprob: -5.9536519050598145
    8. 'x' → logprob: -5.9536519050598145
    9. ' used' → logprob: -6.3286519050598145
    10. '=' → logprob: -6.4536519050598145

Token 566: '.' (ID: 13)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004014764912426472
    2. '
' → logprob: -6.75401496887207
    3. '       ' → logprob: -7.12901496887207
    4. '            
' → logprob: -7.50401496887207
    5. ',' → logprob: -7.62901496887207
    6. '#' → logprob: -8.75401496887207
    7. ' and' → logprob: -9.12901496887207
    8. '               ' → logprob: -9.37901496887207
    9. '   ' → logprob: -9.62901496887207
    10. 'x' → logprob: -9.87901496887207

Token 567: ' So' (ID: 2632)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005103306844830513
    2. '       ' → logprob: -6.38010311126709
    3. '
' → logprob: -6.63010311126709
    4. '   ' → logprob: -7.88010311126709
    5. ' x' → logprob: -7.88010311126709
    6. '            
' → logprob: -7.88010311126709
    7. '  
' → logprob: -8.63010311126709
    8. '               ' → logprob: -8.88010311126709
    9. 'x' → logprob: -9.13010311126709
    10. '#' → logprob: -9.63010311126709

Token 568: ' we' (ID: 581)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1844819784164429
    2. 'we' → logprob: -1.5594819784164429
    3. '           ' → logprob: -1.9344819784164429
    4. ' we' → logprob: -2.5594820976257324
    5. 'if' → logprob: -3.0594820976257324
    6. '#' → logprob: -3.0594820976257324
    7. ' x' → logprob: -3.6844820976257324
    8. ' if' → logprob: -4.059482097625732
    9. '
' → logprob: -4.184482097625732
    10. 'taking' → logprob: -4.309482097625732

Token 569: ' want' (ID: 1682)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.48494094610214233
    2. ' should' → logprob: -1.609941005706787
    3. 'can' → logprob: -2.234941005706787
    4. 'should' → logprob: -2.734941005706787
    5. 'continue' → logprob: -5.484941005706787
    6. ' might' → logprob: -6.734941005706787
    7. ' may' → logprob: -6.734941005706787
    8. ' continue' → logprob: -6.734941005706787
    9. 'could' → logprob: -7.359941005706787
    10. ' could' → logprob: -7.484941005706787

Token 570: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.1327914297580719
    2. ' to' → logprob: -2.132791519165039
    3. '           ' → logprob: -6.132791519165039
    4. 'x' → logprob: -6.382791519165039
    5. '   ' → logprob: -7.757791519165039
    6. '1' → logprob: -8.007791519165039
    7. '               ' → logprob: -8.382791519165039
    8. 'max' → logprob: -8.382791519165039
    9. 'maximize' → logprob: -9.132791519165039
    10. '
' → logprob: -9.382791519165039

Token 571: ' take' (ID: 2304)
  Prédit: 'take'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'take' → logprob: -0.01802198775112629
    2. ' take' → logprob: -4.393022060394287
    3. 'include' → logprob: -6.518022060394287
    4. 'maximize' → logprob: -7.143022060394287
    5. 'process' → logprob: -7.518022060394287
    6. 'add' → logprob: -7.768022060394287
    7. 'try' → logprob: -8.018021583557129
    8. 'fill' → logprob: -8.143021583557129
    9. 'increase' → logprob: -8.393021583557129
    10. 'consider' → logprob: -8.893021583557129

Token 572: ' x' (ID: 1215)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14948858320713043
    2. 'full' → logprob: -2.399488687515259
    3. 'all' → logprob: -4.27448844909668
    4. 'as' → logprob: -4.77448844909668
    5. ' full' → logprob: -4.77448844909668
    6. 'it' → logprob: -4.89948844909668
    7. ' as' → logprob: -5.89948844909668
    8. 'the' → logprob: -6.39948844909668
    9. 'max' → logprob: -6.77448844909668
    10. ' it' → logprob: -7.14948844909668

Token 573: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -4.179569077678025e-05
    2. '_' → logprob: -10.750041961669922
    3. 'i' → logprob: -11.750041961669922
    4. '=' → logprob: -12.375041961669922
    5. '[i' → logprob: -13.000041961669922
    6. ' _' → logprob: -13.875041961669922
    7. ' =' → logprob: -14.000041961669922
    8. '```' → logprob: -14.250041961669922
    9. '[' → logprob: -14.375041961669922
    10. '._' → logprob: -14.875041961669922

Token 574: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0006297559011727571
    2. ' =' → logprob: -7.375629901885986
    3. '=max' → logprob: -13.750629425048828
    4. '1' → logprob: -14.375629425048828
    5. ' ' → logprob: -15.250629425048828
    6. '   ' → logprob: -15.750629425048828
    7. '```' → logprob: -16.000629425048828
    8. 'max' → logprob: -16.000629425048828
    9. '           ' → logprob: -16.125629425048828
    10. 's' → logprob: -16.500629425048828

Token 575: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.491498531133402e-06
    2. ' ' → logprob: -11.750009536743164
    3. 'max' → logprob: -14.750009536743164
    4. '0' → logprob: -15.250009536743164
    5. '```' → logprob: -15.375009536743164
    6. 'full' → logprob: -15.500009536743164
    7. 'min' → logprob: -16.375009536743164
    8. '   ' → logprob: -16.375009536743164
    9. 'maximum' → logprob: -17.375009536743164
    10. 'one' → logprob: -17.437509536743164

Token 576: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31079500913619995
    2. '
' → logprob: -1.4357950687408447
    3. '            
' → logprob: -4.060794830322266
    4. '       ' → logprob: -5.560794830322266
    5. ',' → logprob: -6.685794830322266
    6. '        
' → logprob: -6.935794830322266
    7. '.' → logprob: -6.935794830322266
    8. ' for' → logprob: -7.185794830322266
    9. '               ' → logprob: -7.685794830322266
    10. '    
' → logprob: -7.810794830322266

Token 577: ' it' (ID: 480)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.385114461183548
    2. ' remaining' → logprob: -1.7601144313812256
    3. 'item' → logprob: -2.2601144313812256
    4. ' item' → logprob: -3.3851144313812256
    5. 'v' → logprob: -5.885114669799805
    6. 'self' → logprob: -6.635114669799805
    7. 'True' → logprob: -7.010114669799805
    8. 'w' → logprob: -7.385114669799805
    9. ' v' → logprob: -7.385114669799805
    10. 'possible' → logprob: -7.760114669799805

Token 578: ' improves' (ID: 45865)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.52825129032135
    2. 'is' → logprob: -2.0282511711120605
    3. ' increases' → logprob: -2.0282511711120605
    4. 'in' → logprob: -2.2782511711120605
    5. 'max' → logprob: -2.4032511711120605
    6. 'benef' → logprob: -3.0282511711120605
    7. 'helps' → logprob: -3.1532511711120605
    8. ' maxim' → logprob: -3.5282511711120605
    9. ''s' → logprob: -3.5282511711120605
    10. 's' → logprob: -3.9032511711120605

Token 579: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.0747286081314087
    2. 'value' → logprob: -1.8247286081314087
    3. 'the' → logprob: -1.9497286081314087
    4. ' total' → logprob: -2.199728488922119
    5. ' the' → logprob: -2.449728488922119
    6. 'capacity' → logprob: -2.824728488922119
    7. ' value' → logprob: -3.574728488922119
    8. ' capacity' → logprob: -3.949728488922119
    9. '<|end|>' → logprob: -4.324728488922119
    10. ' our' → logprob: -4.574728488922119

Token 580: '.
' (ID: 558)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.20685285329818726
    2. 'capacity' → logprob: -2.206852912902832
    3. 'value' → logprob: -3.081852912902832
    4. 'weight' → logprob: -4.456852912902832
    5. '_weight' → logprob: -4.831852912902832
    6. '_capacity' → logprob: -5.206852912902832
    7. ' capacity' → logprob: -5.456852912902832
    8. ' value' → logprob: -7.206852912902832
    9. ' weight' → logprob: -8.081852912902832
    10. '```' → logprob: -8.206852912902832

Token 581: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003647472243756056
    2. '       ' → logprob: -6.753647327423096
    3. '            
' → logprob: -7.128647327423096
    4. '
' → logprob: -7.503647327423096
    5. '   ' → logprob: -8.253647804260254
    6. ' x' → logprob: -8.753647804260254
    7. '  
' → logprob: -8.753647804260254
    8. '               ' → logprob: -9.253647804260254
    9. '    
' → logprob: -9.503647804260254
    10. 'x' → logprob: -9.878647804260254

Token 582: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01481993030756712
    2. '       ' → logprob: -5.139820098876953
    3. ' x' → logprob: -6.014820098876953
    4. '            
' → logprob: -6.639820098876953
    5. 'x' → logprob: -7.264820098876953
    6. '   ' → logprob: -7.514820098876953
    7. '<|end|>' → logprob: -7.639820098876953
    8. ' ' → logprob: -7.764820098876953
    9. '            ' → logprob: -8.139820098876953
    10. '               ' → logprob: -8.139820098876953

Token 583: ' So' (ID: 2632)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019223785027861595
    2. '       ' → logprob: -4.769223690032959
    3. ' x' → logprob: -5.894223690032959
    4. '
' → logprob: -6.019223690032959
    5. '   ' → logprob: -6.269223690032959
    6. 'x' → logprob: -7.144223690032959
    7. '            
' → logprob: -7.144223690032959
    8. ' if' → logprob: -7.394223690032959
    9. '               ' → logprob: -8.894224166870117
    10. ' for' → logprob: -9.019224166870117

Token 584: ' we' (ID: 581)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6664535999298096
    2. '           ' → logprob: -1.1664535999298096
    3. ' for' → logprob: -2.2914535999298096
    4. '            ' → logprob: -3.9164535999298096
    5. '    ' → logprob: -4.7914533615112305
    6. '       ' → logprob: -4.9164533615112305
    7. '   ' → logprob: -5.1664533615112305
    8. ',' → logprob: -5.1664533615112305
    9. 'for' → logprob: -5.1664533615112305
    10. '        ' → logprob: -5.2914533615112305

Token 585: ' will' (ID: 738)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3658444583415985
    2. '       ' → logprob: -2.365844488143921
    3. 'continue' → logprob: -3.115844488143921
    4. 'if' → logprob: -3.740844488143921
    5. '   ' → logprob: -3.865844488143921
    6. ' should' → logprob: -3.990844488143921
    7. ' must' → logprob: -4.240844249725342
    8. ' can' → logprob: -4.490844249725342
    9. 'consider' → logprob: -4.490844249725342
    10. ' if' → logprob: -4.615844249725342

Token 586: ' implement' (ID: 6365)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -1.8162761926651
    2. 'process' → logprob: -1.8162761926651
    3. 'continue' → logprob: -2.1912760734558105
    4. '           ' → logprob: -2.3162760734558105
    5. 'take' → logprob: -2.3162760734558105
    6. 'consider' → logprob: -2.4412760734558105
    7. 'handle' → logprob: -2.8162760734558105
    8. '       ' → logprob: -3.4412760734558105
    9. ' process' → logprob: -3.5662760734558105
    10. 'iterate' → logprob: -3.5662760734558105

Token 587: ' a' (ID: 261)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1304070949554443
    2. 'if' → logprob: -1.1304070949554443
    3. ' if' → logprob: -1.2554070949554443
    4. 'x' → logprob: -3.7554070949554443
    5. ' x' → logprob: -4.255407333374023
    6. ' the' → logprob: -4.880407333374023
    7. '```' → logprob: -5.880407333374023
    8. '   ' → logprob: -6.130407333374023
    9. ' accordingly' → logprob: -6.380407333374023
    10. ' for' → logprob: -6.380407333374023

Token 588: ' linear' (ID: 23876)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7950891256332397
    2. 'if' → logprob: -1.4200891256332397
    3. 'while' → logprob: -1.7950891256332397
    4. 'pass' → logprob: -3.9200892448425293
    5. 'gre' → logprob: -3.9200892448425293
    6. 'for' → logprob: -4.670089244842529
    7. ' careful' → logprob: -4.795089244842529
    8. 'continue' → logprob: -4.795089244842529
    9. 'x' → logprob: -4.920089244842529
    10. '#' → logprob: -5.170089244842529

Token 589: ' programming' (ID: 23238)
  Prédit: 'program'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'program' → logprob: -0.7413076758384705
    2. ' programming' → logprob: -1.1163077354431152
    3. '_program' → logprob: -2.3663077354431152
    4. 'scan' → logprob: -3.7413077354431152
    5. 'search' → logprob: -4.241307735443115
    6. ' program' → logprob: -4.491307735443115
    7. ' scan' → logprob: -4.866307735443115
    8. ' search' → logprob: -5.241307735443115
    9. ' approach' → logprob: -5.241307735443115
    10. ' relaxation' → logprob: -5.366307735443115

Token 590: ' style' (ID: 2713)
  Prédit: ' approach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' approach' → logprob: -0.3431851863861084
    2. ' solver' → logprob: -2.3431851863861084
    3. 'import' → logprob: -3.2181851863861084
    4. 'solver' → logprob: -3.4681851863861084
    5. 'appro' → logprob: -3.5931851863861084
    6. ' solution' → logprob: -3.7181851863861084
    7. '<|end|>' → logprob: -4.2181854248046875
    8. ' step' → logprob: -4.3431854248046875
    9. '<|end|>' → logprob: -4.9681854248046875
    10. '.' → logprob: -5.8431854248046875

Token 591: ' greedy' (ID: 107110)
  Prédit: ' solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solution' → logprob: -1.0629689693450928
    2. ' approach' → logprob: -1.3129689693450928
    3. '       ' → logprob: -2.6879689693450928
    4. 'import' → logprob: -2.8129689693450928
    5. 'x' → logprob: -2.9379689693450928
    6. ' solver' → logprob: -3.4379689693450928
    7. '           ' → logprob: -3.4379689693450928
    8. ' step' → logprob: -3.6879689693450928
    9. '
' → logprob: -4.312969207763672
    10. 'solver' → logprob: -4.312969207763672

Token 592: ':
' (ID: 734)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' step' → logprob: -1.141319990158081
    2. ' approach' → logprob: -1.641319990158081
    3. '       ' → logprob: -1.766319990158081
    4. '           ' → logprob: -2.516319990158081
    5. ':' → logprob: -3.141319990158081
    6. '   ' → logprob: -3.266319990158081
    7. ' x' → logprob: -3.516319990158081
    8. 'x' → logprob: -3.891319990158081
    9. '    ' → logprob: -4.51632022857666
    10. ' variable' → logprob: -4.76632022857666

Token 593: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0036594532430171967
    2. '       ' → logprob: -6.128659248352051
    3. '   ' → logprob: -7.503659248352051
    4. ' x' → logprob: -8.25365924835205
    5. '            
' → logprob: -8.87865924835205
    6. '```' → logprob: -9.25365924835205
    7. 'x' → logprob: -10.00365924835205
    8. ' for' → logprob: -10.12865924835205
    9. '    
' → logprob: -10.12865924835205
    10. '               ' → logprob: -10.12865924835205

Token 594: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8879954218864441
    2. '       ' → logprob: -1.0129954814910889
    3. ' x' → logprob: -2.387995481491089
    4. '           ' → logprob: -2.512995481491089
    5. 'if' → logprob: -4.63799524307251
    6. 'fraction' → logprob: -4.63799524307251
    7. ' fraction' → logprob: -4.88799524307251
    8. ' if' → logprob: -5.01299524307251
    9. 'for' → logprob: -5.63799524307251
    10. 'take' → logprob: -5.63799524307251

Token 595: ' At' (ID: 3604)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03921159356832504
    2. ' x' → logprob: -4.164211750030518
    3. 'x' → logprob: -4.414211750030518
    4. '       ' → logprob: -5.539211750030518
    5. ' if' → logprob: -5.789211750030518
    6. 'if' → logprob: -6.789211750030518
    7. ' fraction' → logprob: -7.414211750030518
    8. '   ' → logprob: -7.789211750030518
    9. ' for' → logprob: -8.03921127319336
    10. 'fraction' → logprob: -8.16421127319336

Token 596: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.398312509059906
    2. ' each' → logprob: -2.148312568664551
    3. 'least' → logprob: -2.648312568664551
    4. ' least' → logprob: -2.773312568664551
    5. 'most' → logprob: -3.273312568664551
    6. 'token' → logprob: -5.398312568664551
    7. ' most' → logprob: -5.398312568664551
    8. 'the' → logprob: -5.523312568664551
    9. 'item' → logprob: -5.648312568664551
    10. ' the' → logprob: -6.148312568664551

Token 597: ' item' (ID: 2169)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.5435217022895813
    2. 'item' → logprob: -1.5435216426849365
    3. 'step' → logprob: -2.0435216426849365
    4. ' item' → logprob: -3.6685216426849365
    5. 'iteration' → logprob: -3.6685216426849365
    6. ' iteration' → logprob: -3.7935216426849365
    7. ' line' → logprob: -7.543521881103516
    8. 'token' → logprob: -7.668521881103516
    9. 'for' → logprob: -7.918521881103516
    10. ' for' → logprob: -8.543521881103516

Token 598: ' try' (ID: 2075)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4568578898906708
    2. ':' → logprob: -2.081857919692993
    3. '           ' → logprob: -2.206857919692993
    4. '   ' → logprob: -3.081857919692993
    5. ' ,' → logprob: -3.456857919692993
    6. '    ' → logprob: -4.706857681274414
    7. '[' → logprob: -5.206857681274414
    8. '       ' → logprob: -5.206857681274414
    9. ' =' → logprob: -5.456857681274414
    10. '               ' → logprob: -5.581857681274414

Token 599: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.9677414894104004
    2. 'to' → logprob: -1.5927414894104004
    3. '    ' → logprob: -1.7177414894104004
    4. 'x' → logprob: -2.2177414894104004
    5. '   ' → logprob: -3.0927414894104004
    6. ':' → logprob: -3.7177414894104004
    7. 'min' → logprob: -3.9677414894104004
    8. ' x' → logprob: -4.2177414894104
    9. '1' → logprob: -5.3427414894104
    10. '0' → logprob: -5.3427414894104

Token 600: ' take' (ID: 2304)
  Prédit: 'take'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'take' → logprob: -0.5840131640434265
    2. 'max' → logprob: -1.4590132236480713
    3. 'maximize' → logprob: -1.9590132236480713
    4. 'choose' → logprob: -3.8340132236480713
    5. ' take' → logprob: -4.209012985229492
    6. 'min' → logprob: -4.334012985229492
    7. 'use' → logprob: -4.959012985229492
    8. '1' → logprob: -6.084012985229492
    9. ' max' → logprob: -6.209012985229492
    10. 'increase' → logprob: -6.709012985229492

Token 601: ' full' (ID: 3149)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.26670876145362854
    2. ' min' → logprob: -2.6417088508605957
    3. ' ' → logprob: -2.8917088508605957
    4. 'min' → logprob: -3.0167088508605957
    5. 'x' → logprob: -4.391708850860596
    6. 'max' → logprob: -4.391708850860596
    7. ' x' → logprob: -4.891708850860596
    8. '0' → logprob: -5.266708850860596
    9. ' max' → logprob: -5.641708850860596
    10. '   ' → logprob: -5.891708850860596

Token 602: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04749869555234909
    2. 'x' → logprob: -4.42249870300293
    3. ' ' → logprob: -4.54749870300293
    4. ' amount' → logprob: -5.54749870300293
    5. 'min' → logprob: -5.54749870300293
    6. 'amount' → logprob: -5.79749870300293
    7. ' fraction' → logprob: -5.92249870300293
    8. ' x' → logprob: -6.17249870300293
    9. ' min' → logprob: -6.54749870300293
    10. 'fraction' → logprob: -6.92249870300293

Token 603: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021407436579465866
    2. 'x' → logprob: -6.627140522003174
    3. 'amount' → logprob: -8.377140998840332
    4. 'min' → logprob: -8.502140998840332
    5. ' ' → logprob: -8.627140998840332
    6. 'fraction' → logprob: -10.127140998840332
    7. 'capacity' → logprob: -10.127140998840332
    8. 'item' → logprob: -11.127140998840332
    9. 'value' → logprob: -11.377140998840332
    10. '0' → logprob: -11.377140998840332

Token 604: ' if' (ID: 538)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1344974040985107
    2. '.' → logprob: -1.3844974040985107
    3. ')' → logprob: -2.5094974040985107
    4. '   ' → logprob: -2.7594974040985107
    5. '           ' → logprob: -3.5094974040985107
    6. ',' → logprob: -3.5094974040985107
    7. '_token' → logprob: -3.5094974040985107
    8. 'if' → logprob: -4.13449764251709
    9. '_i' → logprob: -4.38449764251709
    10. '
' → logprob: -4.38449764251709

Token 605: ' possible' (ID: 4149)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.388197660446167
    2. ' remaining' → logprob: -1.388197660446167
    3. 'item' → logprob: -3.388197660446167
    4. ' item' → logprob: -3.763197660446167
    5. ' (' → logprob: -4.763197898864746
    6. '(' → logprob: -5.513197898864746
    7. '(item' → logprob: -7.263197898864746
    8. 'abs' → logprob: -7.638197898864746
    9. ' not' → logprob: -8.013197898864746
    10. '   ' → logprob: -8.513197898864746

Token 606: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025722574442625046
    2. ',' → logprob: -4.400722503662109
    3. '       ' → logprob: -5.400722503662109
    4. '            
' → logprob: -6.525722503662109
    5. '
' → logprob: -6.775722503662109
    6. '               ' → logprob: -7.275722503662109
    7. '<|end|>' → logprob: -7.400722503662109
    8. '   ' → logprob: -7.400722503662109
    9. ':' → logprob: -7.525722503662109
    10. '<|end|>' → logprob: -7.775722503662109

Token 607: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7554592490196228
    2. ' else' → logprob: -0.8804592490196228
    3. 'else' → logprob: -2.5054593086242676
    4. ' then' → logprob: -4.755459308624268
    5. ' but' → logprob: -4.880459308624268
    6. ' otherwise' → logprob: -5.380459308624268
    7. ' or' → logprob: -5.630459308624268
    8. 'otherwise' → logprob: -5.755459308624268
    9. '#' → logprob: -6.755459308624268
    10. 'elif' → logprob: -7.005459308624268

Token 608: ' fractional' (ID: 136350)
  Prédit: ' take'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' take' → logprob: -0.1856742948293686
    2. ' min' → logprob: -2.9356741905212402
    3. ' fraction' → logprob: -3.0606741905212402
    4. ' partial' → logprob: -3.6856741905212402
    5. 'take' → logprob: -4.56067419052124
    6. ' fractional' → logprob: -4.81067419052124
    7. 'fraction' → logprob: -4.93567419052124
    8. 'min' → logprob: -5.31067419052124
    9. ' continue' → logprob: -5.93567419052124
    10. 'remaining' → logprob: -5.93567419052124

Token 609: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03998055309057236
    2. '
' → logprob: -4.039980411529541
    3. '            
' → logprob: -4.914980411529541
    4. '       ' → logprob: -5.414980411529541
    5. '   ' → logprob: -6.164980411529541
    6. '    
' → logprob: -6.789980411529541
    7. '        
' → logprob: -7.414980411529541
    8. ',' → logprob: -7.414980411529541
    9. '               ' → logprob: -7.414980411529541
    10. ' 
' → logprob: -7.414980411529541

Token 610: ' fit' (ID: 5769)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.16182443499565125
    2. 'fill' → logprob: -2.9118244647979736
    3. ' remaining' → logprob: -3.0368244647979736
    4. 'maximize' → logprob: -4.4118242263793945
    5. 'fit' → logprob: -4.5368242263793945
    6. 'use' → logprob: -5.0368242263793945
    7. ' fill' → logprob: -5.2868242263793945
    8. 'max' → logprob: -5.7868242263793945
    9. 'consume' → logprob: -6.2868242263793945
    10. 'min' → logprob: -6.9118242263793945

Token 611: ' constraints' (ID: 31060)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1186341643333435
    2. ',' → logprob: -3.4936342239379883
    3. '   ' → logprob: -3.8686342239379883
    4. '            
' → logprob: -4.618634223937988
    5. 'ion' → logprob: -4.868634223937988
    6. '       ' → logprob: -5.118634223937988
    7. 'x' → logprob: -5.618634223937988
    8. ':' → logprob: -5.618634223937988
    9. '.' → logprob: -5.743634223937988
    10. ' if' → logprob: -5.868634223937988

Token 612: '.

' (ID: 364)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007176259066909552
    2. '            
' → logprob: -5.882176399230957
    3. '       ' → logprob: -6.632176399230957
    4. ',' → logprob: -6.632176399230957
    5. '<|end|>' → logprob: -8.382176399230957
    6. '            ' → logprob: -8.382176399230957
    7. '.' → logprob: -8.632176399230957
    8. '               ' → logprob: -8.882176399230957
    9. '<|end|>' → logprob: -9.007176399230957
    10. '   ' → logprob: -9.507176399230957

Token 613: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05373083055019379
    2. '       ' → logprob: -3.0537307262420654
    3. '   ' → logprob: -6.4287309646606445
    4. '            
' → logprob: -6.6787309646606445
    5. '    
' → logprob: -7.0537309646606445
    6. '        
' → logprob: -7.9287309646606445
    7. '    ' → logprob: -8.803730964660645
    8. '        ' → logprob: -9.303730964660645
    9. ' 
' → logprob: -9.303730964660645
    10. '               ' → logprob: -9.428730964660645

Token 614: ' w' (ID: 286)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9015243053436279
    2. '           ' → logprob: -1.151524305343628
    3. 'take' → logprob: -1.526524305343628
    4. ' if' → logprob: -3.526524305343628
    5. 'x' → logprob: -4.026524543762207
    6. 'fraction' → logprob: -5.401524543762207
    7. ' take' → logprob: -5.901524543762207
    8. 'amount' → logprob: -6.151524543762207
    9. 'taken' → logprob: -7.276524543762207
    10. ' x' → logprob: -7.776524543762207

Token 615: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43056339025497437
    2. '=' → logprob: -1.0555634498596191
    3. '_i' → logprob: -7.055563449859619
    4. '_' → logprob: -7.680563449859619
    5. ',' → logprob: -8.305562973022461
    6. ' ' → logprob: -9.680562973022461
    7. ')' → logprob: -9.805562973022461
    8. '>' → logprob: -10.680562973022461
    9. '   ' → logprob: -11.055562973022461
    10. '_=' → logprob: -11.180562973022461

Token 616: ' item' (ID: 2169)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.0031802060548216105
    2. ' item' → logprob: -5.753180027008057
    3. '           ' → logprob: -13.878180503845215
    4. '	item' → logprob: -14.128180503845215
    5. '=item' → logprob: -14.753180503845215
    6. ')item' → logprob: -16.1281795501709
    7. '   ' → logprob: -16.2531795501709
    8. 'abs' → logprob: -16.3781795501709
    9. '$item' → logprob: -16.7531795501709
    10. '(item' → logprob: -17.3781795501709

Token 617: '.w' (ID: 2234)
  Prédit: '.w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.w' → logprob: -0.0015001024585217237
    2. ' .' → logprob: -7.001500129699707
    3. '.' → logprob: -7.501500129699707
    4. '.weight' → logprob: -11.751500129699707
    5. '<|end|>' → logprob: -12.126500129699707
    6. 'w' → logprob: -12.626500129699707
    7. '.wpi' → logprob: -12.751500129699707
    8. '_w' → logprob: -12.876500129699707
    9. '   ' → logprob: -13.501500129699707
    10. ' w' → logprob: -13.501500129699707

Token 618: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03018547035753727
    2. '<|end|>' → logprob: -4.155185699462891
    3. '
' → logprob: -5.030185699462891
    4. '<|end|>' → logprob: -5.405185699462891
    5. ',' → logprob: -7.280185699462891
    6. '            
' → logprob: -7.280185699462891
    7. ' if' → logprob: -7.530185699462891
    8. '            ' → logprob: -8.15518569946289
    9. '               ' → logprob: -9.15518569946289
    10. '		' → logprob: -9.28018569946289

Token 619: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03308628499507904
    2. ' v' → logprob: -4.65808629989624
    3. '            ' → logprob: -4.90808629989624
    4. 'v' → logprob: -5.03308629989624
    5. ' ' → logprob: -5.03308629989624
    6. ',v' → logprob: -7.90808629989624
    7. '<|end|>' → logprob: -8.408085823059082
    8. '    ' → logprob: -8.408085823059082
    9. '            
' → logprob: -8.533085823059082
    10. '        ' → logprob: -8.783085823059082

Token 620: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.0036427148152142763
    2. 'if' → logprob: -6.003642559051514
    3. ' v' → logprob: -7.628642559051514
    4. 'x' → logprob: -8.003643035888672
    5. '           ' → logprob: -8.378643035888672
    6. ' if' → logprob: -9.253643035888672
    7. 'remaining' → logprob: -12.503643035888672
    8. '               ' → logprob: -12.753643035888672
    9. '```' → logprob: -13.128643035888672
    10. 'max' → logprob: -13.253643035888672

Token 621: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1818065494298935
    2. '=' → logprob: -1.8068065643310547
    3. '<|end|>' → logprob: -7.056806564331055
    4. '           ' → logprob: -7.806806564331055
    5. '            ' → logprob: -8.431806564331055
    6. '<|end|>' → logprob: -8.556806564331055
    7. ',' → logprob: -8.681806564331055
    8. ')' → logprob: -9.806806564331055
    9. ' ' → logprob: -9.931806564331055
    10. ':' → logprob: -10.181806564331055

Token 622: ' item' (ID: 2169)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -4.024604277219623e-05
    2. ' item' → logprob: -10.125040054321289
    3. '=item' → logprob: -16.37504005432129
    4. '	item' → logprob: -17.37504005432129
    5. '.item' → logprob: -17.75004005432129
    6. ')item' → logprob: -18.00004005432129
    7. '(item' → logprob: -18.37504005432129
    8. '[item' → logprob: -19.00004005432129
    9. '           ' → logprob: -19.00004005432129
    10. '$item' → logprob: -19.12504005432129

Token 623: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.00016873658751137555
    2. '.w' → logprob: -9.000168800354004
    3. '.' → logprob: -10.125168800354004
    4. ' .' → logprob: -12.625168800354004
    5. '.value' → logprob: -13.875168800354004
    6. 'v' → logprob: -14.500168800354004
    7. '```' → logprob: -16.000167846679688
    8. '.val' → logprob: -16.750167846679688
    9. '\.' → logprob: -17.250167846679688
    10. '	v' → logprob: -17.250167846679688

Token 624: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.031828537583351135
    2. '            
' → logprob: -4.1568284034729
    3. '
' → logprob: -4.9068284034729
    4. '<|end|>' → logprob: -5.9068284034729
    5. '  
' → logprob: -7.1568284034729
    6. '<|end|>' → logprob: -7.2818284034729
    7. '       ' → logprob: -7.4068284034729
    8. '    
' → logprob: -7.4068284034729
    9. ' if' → logprob: -7.5318284034729
    10. ',' → logprob: -7.6568284034729

Token 625: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0038764351047575474
    2. ' if' → logprob: -6.003876209259033
    3. 'if' → logprob: -7.628876209259033
    4. ' x' → logprob: -8.003876686096191
    5. '            
' → logprob: -8.378876686096191
    6. 'x' → logprob: -8.628876686096191
    7. 'amount' → logprob: -10.253876686096191
    8. '            ' → logprob: -10.378876686096191
    9. '       ' → logprob: -11.378876686096191
    10. '          ' → logprob: -11.503876686096191

Token 626: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.010297696106135845
    2. 'x' → logprob: -5.135297775268555
    3. '           ' → logprob: -5.885297775268555
    4. 'take' → logprob: -7.010297775268555
    5. 'fraction' → logprob: -7.885297775268555
    6. 'amount' → logprob: -8.885297775268555
    7. 'taken' → logprob: -10.260297775268555
    8. '#' → logprob: -10.260297775268555
    9. ' if' → logprob: -10.885297775268555
    10. '            
' → logprob: -10.885297775268555

Token 627: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.005307992920279503
    2. ' w' → logprob: -5.505308151245117
    3. 'remaining' → logprob: -6.755308151245117
    4. ' remaining' → logprob: -10.505308151245117
    5. '   ' → logprob: -10.755308151245117
    6. '(w' → logprob: -13.005308151245117
    7. ' ' → logprob: -13.130308151245117
    8. '  ' → logprob: -13.317808151245117
    9. 'v' → logprob: -13.380308151245117
    10. '	w' → logprob: -13.380308151245117

Token 628: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.10217367857694626
    2. '<=' → logprob: -3.1021735668182373
    3. ' >' → logprob: -3.1021735668182373
    4. ' <=' → logprob: -5.102173805236816
    5. '==' → logprob: -7.102173805236816
    6. '<' → logprob: -8.602173805236816
    7. ' ==' → logprob: -9.977173805236816
    8. '>=' → logprob: -10.352173805236816
    9. ' <' → logprob: -10.477173805236816
    10. ' ' → logprob: -11.852173805236816

Token 629: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021852378267794847
    2. ' ' → logprob: -6.127185344696045
    3. '  ' → logprob: -16.752185821533203
    4. 'remaining' → logprob: -16.877185821533203
    5. '   ' → logprob: -17.002185821533203
    6. '=' → logprob: -17.127185821533203
    7. '<|end|>' → logprob: -17.877185821533203
    8. '>' → logprob: -18.377185821533203
    9. '۰' → logprob: -19.002185821533203
    10. '```' → logprob: -19.189685821533203

Token 630: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -17.75004005432129
    4. '  ' → logprob: -18.75004005432129
    5. '<|end|>' → logprob: -19.75004005432129
    6. '```' → logprob: -20.12504005432129
    7. '۰' → logprob: -20.50004005432129
    8. '>' → logprob: -20.62504005432129
    9. '
' → logprob: -20.75004005432129
    10. '    ' → logprob: -21.25004005432129

Token 631: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01872679404914379
    2. ':
' → logprob: -4.018726825714111
    3. ' and' → logprob: -8.018726348876953
    4. '           ' → logprob: -8.768726348876953
    5. 'and' → logprob: -10.393726348876953
    6. '               ' → logprob: -10.643726348876953
    7. '<|end|>' → logprob: -11.893726348876953
    8. ',' → logprob: -12.268726348876953
    9. '):' → logprob: -12.268726348876953
    10. '):
' → logprob: -12.268726348876953

Token 632: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1158473864197731
    2. '           ' → logprob: -2.24084734916687
    3. '            ' → logprob: -6.615847587585449
    4. ':' → logprob: -7.990847587585449
    5. '                ' → logprob: -8.24084758758545
    6. '                
' → logprob: -8.49084758758545
    7. '            
' → logprob: -8.74084758758545
    8. ' and' → logprob: -8.86584758758545
    9. '                   ' → logprob: -9.11584758758545
    10. ' x' → logprob: -9.49084758758545

Token 633: ' #' (ID: 1069)
  Prédit: 'take'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'take' → logprob: -0.6732507944107056
    2. 'fraction' → logprob: -1.1732507944107056
    3. ' fraction' → logprob: -2.298250675201416
    4. ' take' → logprob: -3.673250675201416
    5. 'amount' → logprob: -3.673250675201416
    6. '               ' → logprob: -4.298250675201416
    7. ' amount' → logprob: -5.173250675201416
    8. 'portion' → logprob: -6.048250675201416
    9. 'x' → logprob: -6.298250675201416
    10. 'max' → logprob: -6.673250675201416

Token 634: ' maximum' (ID: 10562)
  Prédit: 'fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -0.3354322016239166
    2. 'take' → logprob: -1.4604321718215942
    3. 'frac' → logprob: -3.585432291030884
    4. ' fraction' → logprob: -4.835432052612305
    5. 'max' → logprob: -5.585432052612305
    6. 'amount' → logprob: -5.585432052612305
    7. 'portion' → logprob: -5.835432052612305
    8. 'x' → logprob: -6.335432052612305
    9. 'min' → logprob: -7.085432052612305
    10. '   ' → logprob: -7.210432052612305

Token 635: ' fraction' (ID: 33763)
  Prédit: 'fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -0.3589862883090973
    2. ' fraction' → logprob: -1.233986258506775
    3. 'frac' → logprob: -5.6089863777160645
    4. 'portion' → logprob: -6.1089863777160645
    5. 'take' → logprob: -6.1089863777160645
    6. 'x' → logprob: -7.6089863777160645
    7. '_fraction' → logprob: -7.9839863777160645
    8. 'min' → logprob: -8.108985900878906
    9. 'amount' → logprob: -8.233985900878906
    10. ' frac' → logprob: -8.858985900878906

Token 636: ' we' (ID: 581)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21028894186019897
    2. '=' → logprob: -1.7102890014648438
    3. '_to' → logprob: -4.960289001464844
    4. 'to' → logprob: -7.585289001464844
    5. '=min' → logprob: -7.960289001464844
    6. '               ' → logprob: -8.585289001464844
    7. '           ' → logprob: -8.585289001464844
    8. 'f' → logprob: -9.210289001464844
    9. 'fraction' → logprob: -9.210289001464844
    10. 'taken' → logprob: -9.835289001464844

Token 637: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.0898933857679367
    2. 'can' → logprob: -2.464893341064453
    3. '=' → logprob: -7.339893341064453
    4. '	can' → logprob: -8.839893341064453
    5. ' =' → logprob: -9.464893341064453
    6. '_can' → logprob: -9.839893341064453
    7. ' could' → logprob: -11.464893341064453
    8. 'could' → logprob: -12.089893341064453
    9. ')' → logprob: -12.964893341064453
    10. '<|end|>' → logprob: -13.214893341064453

Token 638: ' take' (ID: 2304)
  Prédit: ' take'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' take' → logprob: -0.1808721274137497
    2. 'take' → logprob: -1.8058720827102661
    3. '_take' → logprob: -7.805871963500977
    4. ' min' → logprob: -8.055871963500977
    5. 'min' → logprob: -8.305871963500977
    6. '           ' → logprob: -9.680871963500977
    7. ' can' → logprob: -10.430871963500977
    8. '               ' → logprob: -11.180871963500977
    9. '=min' → logprob: -11.930871963500977
    10. ' use' → logprob: -12.305871963500977

Token 639: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06312108784914017
    2. '=' → logprob: -2.8131210803985596
    3. '=min' → logprob: -7.438121318817139
    4. 'fraction' → logprob: -8.81312084197998
    5. '           ' → logprob: -9.06312084197998
    6. '               ' → logprob: -9.68812084197998
    7. ' fraction' → logprob: -9.68812084197998
    8. ' min' → logprob: -10.31312084197998
    9. '_fraction' → logprob: -10.68812084197998
    10. '=max' → logprob: -10.68812084197998

Token 640: ' this' (ID: 495)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.41566795110702515
    2. ' w' → logprob: -1.29066801071167
    3. 'remaining' → logprob: -3.66566801071167
    4. ' the' → logprob: -4.54066801071167
    5. 'the' → logprob: -4.54066801071167
    6. 'item' → logprob: -4.66566801071167
    7. ' remaining' → logprob: -5.91566801071167
    8. 'min' → logprob: -6.29066801071167
    9. ' item' → logprob: -6.41566801071167
    10. ' this' → logprob: -7.66566801071167

Token 641: ' item' (ID: 2169)
  Prédit: ' item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.08193765580654144
    2. 'item' → logprob: -2.581937551498413
    3. ' =' → logprob: -6.831937789916992
    4. '=item' → logprob: -7.581937789916992
    5. ' w' → logprob: -7.831937789916992
    6. 'w' → logprob: -7.831937789916992
    7. '_item' → logprob: -8.581937789916992
    8. '=' → logprob: -8.831937789916992
    9. '	item' → logprob: -9.581937789916992
    10. 'weight' → logprob: -10.206937789916992

Token 642: ' without' (ID: 2935)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04917677864432335
    2. '=' → logprob: -3.0491766929626465
    3. ':' → logprob: -7.9241766929626465
    4. '=min' → logprob: -9.674177169799805
    5. '=max' → logprob: -10.174177169799805
    6. '           ' → logprob: -10.799177169799805
    7. '               ' → logprob: -11.049177169799805
    8. ' is' → logprob: -11.174177169799805
    9. ',' → logprob: -11.424177169799805
    10. ')' → logprob: -11.549177169799805

Token 643: ' exceeding' (ID: 85205)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.051459163427352905
    2. ' exceeding' → logprob: -3.3014590740203857
    3. 'remaining' → logprob: -4.426459312438965
    4. 'overflow' → logprob: -7.051459312438965
    5. ' remaining' → logprob: -8.301459312438965
    6. 'w' → logprob: -8.551459312438965
    7. ' overflow' → logprob: -10.801459312438965
    8. 'redu' → logprob: -12.051459312438965
    9. ' overflowing' → logprob: -12.301459312438965
    10. 'over' → logprob: -12.301459312438965

Token 644: ' capacity' (ID: 12241)
  Prédit: ' remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' remaining' → logprob: -0.1603497415781021
    2. 'remaining' → logprob: -1.910349726676941
    3. ' the' → logprob: -9.16034984588623
    4. '1' → logprob: -11.66034984588623
    5. '.remaining' → logprob: -12.78534984588623
    6. '_remaining' → logprob: -13.28534984588623
    7. 'the' → logprob: -13.28534984588623
    8. ' available' → logprob: -13.66034984588623
    9. ' ' → logprob: -14.16034984588623
    10. ' leftover' → logprob: -14.66034984588623

Token 645: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054882846772670746
    2. '=' → logprob: -3.304882764816284
    3. ':' → logprob: -4.429883003234863
    4. '               ' → logprob: -7.429883003234863
    5. '=min' → logprob: -7.429883003234863
    6. '           ' → logprob: -7.679883003234863
    7. '=max' → logprob: -7.679883003234863
    8. ',' → logprob: -7.679883003234863
    9. ' max' → logprob: -8.054883003234863
    10. ')' → logprob: -8.304883003234863

Token 646: '               ' (ID: 506)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21922644972801208
    2. '=' → logprob: -1.7192264795303345
    3. '               ' → logprob: -4.719226360321045
    4. ':' → logprob: -5.219226360321045
    5. '           ' → logprob: -5.969226360321045
    6. '                   ' → logprob: -8.094226837158203
    7. ' is' → logprob: -9.469226837158203
    8. '            ' → logprob: -9.969226837158203
    9. '                ' → logprob: -9.969226837158203
    10. ',' → logprob: -10.094226837158203

Token 647: ' frac' (ID: 72308)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.33128270506858826
    2. ' min' → logprob: -2.081282615661621
    3. 'fraction' → logprob: -2.456282615661621
    4. 'remaining' → logprob: -2.831282615661621
    5. ' fraction' → logprob: -5.081282615661621
    6. 'frac' (adapté à ' frac') → logprob: -5.831282615661621
    7. ' remaining' → logprob: -6.581282615661621
    8. 'max' → logprob: -6.581282615661621
    9. 'fra' → logprob: -9.706282615661621
    10. '   ' → logprob: -9.831282615661621

Token 648: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859623312950134
    2. '=' → logprob: -3.048596143722534
    3. '   ' → logprob: -13.173596382141113
    4. '=int' → logprob: -13.423596382141113
    5. '=max' → logprob: -13.548596382141113
    6. '=float' → logprob: -14.048596382141113
    7. '=min' → logprob: -14.298596382141113
    8. 'ion' → logprob: -14.673596382141113
    9. '	' → logprob: -15.048596382141113
    10. 'ation' → logprob: -15.423596382141113

Token 649: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.9841230511665344
    2. 'remaining' → logprob: -1.1091229915618896
    3. ' min' → logprob: -1.3591229915618896
    4. ' remaining' → logprob: -3.2341229915618896
    5. '   ' → logprob: -10.234123229980469
    6. '	min' → logprob: -10.484123229980469
    7. 'minimum' → logprob: -11.859123229980469
    8. ' ' → logprob: -11.859123229980469
    9. 'max' → logprob: -12.109123229980469
    10. '(min' → logprob: -12.609123229980469

Token 650: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9385402993066236e-05
    2. '1' → logprob: -11.000019073486328
    3. 'remaining' → logprob: -13.750019073486328
    4. ' (' → logprob: -14.000019073486328
    5. '(
' → logprob: -14.750019073486328
    6. '(rem' → logprob: -16.125019073486328
    7. ' ' → logprob: -16.875019073486328
    8. '```' → logprob: -17.000019073486328
    9. '   ' → logprob: -18.125019073486328
    10. '((' → logprob: -18.125019073486328

Token 651: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28202036023139954
    2. 'remaining' → logprob: -1.4070203304290771
    3. ' ' → logprob: -7.657020568847656
    4. ' remaining' → logprob: -8.282020568847656
    5. '   ' → logprob: -9.407020568847656
    6. '(' → logprob: -10.282020568847656
    7. 'float' → logprob: -12.157020568847656
    8. 'fraction' → logprob: -12.157020568847656
    9. '       ' → logprob: -13.469520568847656
    10. '  ' → logprob: -13.532020568847656

Token 652: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0325924449716695e-05
    2. ' ,' → logprob: -11.50001049041748
    3. '           ' → logprob: -16.375009536743164
    4. ',
' → logprob: -17.375009536743164
    5. ')' → logprob: -17.500009536743164
    6. '.' → logprob: -18.125009536743164
    7. '   ' → logprob: -18.125009536743164
    8. ',float' → logprob: -18.375009536743164
    9. '),' → logprob: -18.625009536743164
    10. 'remaining' → logprob: -19.250009536743164

Token 653: ' remaining' (ID: 15448)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.10022209584712982
    2. ' remaining' → logprob: -2.350222110748291
    3. '   ' → logprob: -11.600221633911133
    4. ' ' → logprob: -12.475221633911133
    5. '.remaining' → logprob: -14.100221633911133
    6. '           ' → logprob: -14.725221633911133
    7. '               ' → logprob: -15.100221633911133
    8. '_remaining' → logprob: -15.725221633911133
    9. 'Remaining' → logprob: -15.850221633911133
    10. '                   ' → logprob: -15.975221633911133

Token 654: '_capacity' (ID: 85527)
  Prédit: '_capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_capacity' → logprob: -2.117345684382599e-05
    2. ' /' → logprob: -12.125020980834961
    3. 'capacity' → logprob: -12.375020980834961
    4. 'Capacity' → logprob: -12.625020980834961
    5. '_cap' → logprob: -12.625020980834961
    6. '/' → logprob: -12.875020980834961
    7. '/_' → logprob: -14.000020980834961
    8. ' capacity' → logprob: -14.500020980834961
    9. '.capacity' → logprob: -15.750020980834961
    10. '_weight' → logprob: -15.875020980834961

Token 655: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.03809657692909241
    2. '/' → logprob: -3.2880966663360596
    3. '/w' → logprob: -9.91309642791748
    4. '               ' → logprob: -13.91309642791748
    5. ' /
' → logprob: -14.03809642791748
    6. ')' → logprob: -14.16309642791748
    7. ' ' → logprob: -14.16309642791748
    8. '                ' → logprob: -14.53809642791748
    9. '                   ' → logprob: -15.16309642791748
    10. 'w' → logprob: -15.28809642791748

Token 656: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.004078401252627373
    2. ' w' → logprob: -5.504078388214111
    3. '	w' → logprob: -18.004077911376953
    4. '   ' → logprob: -18.504077911376953
    5. 'float' → logprob: -19.129077911376953
    6. '_w' → logprob: -19.129077911376953
    7. '<w' → logprob: -20.254077911376953
    8. ''w' → logprob: -20.254077911376953
    9. '               ' → logprob: -20.629077911376953
    10. '           ' → logprob: -20.754077911376953

Token 657: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00027575582498684525
    2. ')
' → logprob: -8.250275611877441
    3. '           ' → logprob: -11.625275611877441
    4. ' )' → logprob: -12.500275611877441
    5. ')

' → logprob: -14.875275611877441
    6. ')
' → logprob: -14.875275611877441
    7. '               ' → logprob: -14.875275611877441
    8. '),' → logprob: -15.500275611877441
    9. '[' → logprob: -16.250276565551758
    10. ')\' → logprob: -16.750276565551758

Token 658: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06836409121751785
    2. '               ' → logprob: -3.193364143371582
    3. '<|end|>' → logprob: -4.318364143371582
    4. '            
' → logprob: -5.568364143371582
    5. '            ' → logprob: -5.943364143371582
    6. ')' → logprob: -6.443364143371582
    7. ' 
' → logprob: -6.568364143371582
    8. ' ' → logprob: -8.068364143371582
    9. '                
' → logprob: -8.193364143371582
    10. '[' → logprob: -8.443364143371582

Token 659: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.09422680735588074
    2. ' total' → logprob: -2.719226837158203
    3. '               ' → logprob: -3.844226837158203
    4. '           ' → logprob: -6.594226837158203
    5. 'value' → logprob: -7.344226837158203
    6. 'if' → logprob: -8.469226837158203
    7. ' if' → logprob: -8.594226837158203
    8. ' value' → logprob: -9.344226837158203
    9. '                   ' → logprob: -10.219226837158203
    10. '   ' → logprob: -10.344226837158203

Token 660: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.8206473871250637e-05
    2. 'value' → logprob: -11.000028610229492
    3. '+=' → logprob: -12.000028610229492
    4. '_' → logprob: -12.750028610229492
    5. ' +=' → logprob: -13.750028610229492
    6. 'Value' → logprob: -14.250028610229492
    7. '+' → logprob: -15.750028610229492
    8. '_VALUE' → logprob: -16.000028610229492
    9. '_Value' → logprob: -16.125028610229492
    10. '```' → logprob: -16.750028610229492

Token 661: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.31331127882003784
    2. ' +=' → logprob: -1.3133113384246826
    3. ']+=' → logprob: -10.688311576843262
    4. '+' → logprob: -11.188311576843262
    5. '+=(' → logprob: -12.688311576843262
    6. '```' → logprob: -12.688311576843262
    7. '            ' → logprob: -13.063311576843262
    8. '           ' → logprob: -13.688311576843262
    9. 'import' → logprob: -13.938311576843262
    10. '+='' → logprob: -14.813311576843262

Token 662: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.35461440682411194
    2. 'frac' → logprob: -1.2296143770217896
    3. ' frac' → logprob: -5.3546142578125
    4. ' v' → logprob: -6.7296142578125
    5. '   ' → logprob: -8.8546142578125
    6. 'fraction' → logprob: -9.8546142578125
    7. 'fr' → logprob: -11.9796142578125
    8. '           ' → logprob: -12.3546142578125
    9. '_frac' → logprob: -12.4796142578125
    10. '       ' → logprob: -12.8546142578125

Token 663: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.12692873179912567
    2. '*' → logprob: -2.1269288063049316
    3. '*object' → logprob: -14.751928329467773
    4. '```' → logprob: -16.626928329467773
    5. ' ' → logprob: -16.751928329467773
    6. ' ' → logprob: -17.376928329467773
    7. '
' → logprob: -17.626928329467773
    8. '**' → logprob: -17.626928329467773
    9. '   ' → logprob: -18.126928329467773
    10. '           ' → logprob: -18.626928329467773

Token 664: ' frac' (ID: 72308)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.0009143244242295623
    2. ' frac' → logprob: -7.000914096832275
    3. 'frag' → logprob: -13.625914573669434
    4. 'fract' → logprob: -13.750914573669434
    5. 'fr' → logprob: -14.875914573669434
    6. 'fraction' → logprob: -15.875914573669434
    7. 'fra' → logprob: -15.875914573669434
    8. '   ' → logprob: -17.750913619995117
    9. '_frac' → logprob: -17.875913619995117
    10. 'frm' → logprob: -19.375913619995117

Token 665: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08169489353895187
    2. '           ' → logprob: -2.8316948413848877
    3. '<|end|>' → logprob: -4.331695079803467
    4. '
' → logprob: -5.331695079803467
    5. '                   ' → logprob: -7.456695079803467
    6. '            
' → logprob: -8.456694602966309
    7. '                
' → logprob: -8.456694602966309
    8. '                ' → logprob: -9.081694602966309
    9. '       ' → logprob: -9.456694602966309
    10. ' 
' → logprob: -9.706694602966309

Token 666: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005076617933809757
    2. '           ' → logprob: -6.5050764083862305
    3. 'remaining' → logprob: -6.6300764083862305
    4. '                
' → logprob: -6.8800764083862305
    5. ' remaining' → logprob: -7.6300764083862305
    6. ' 
' → logprob: -8.38007640838623
    7. '
' → logprob: -8.38007640838623
    8. '            
' → logprob: -9.00507640838623
    9. '                   ' → logprob: -9.50507640838623
    10. '<|end|>' → logprob: -11.25507640838623

Token 667: ' remaining' (ID: 15448)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' (adapté à ' remaining') → logprob: -6.420598219847307e-05
    2. '               ' → logprob: -10.2500638961792
    3. ' remaining' → logprob: -10.5000638961792
    4. '           ' → logprob: -14.1250638961792
    5. '                   ' → logprob: -14.5000638961792
    6. '.remaining' → logprob: -17.250064849853516
    7. '   ' → logprob: -18.375064849853516
    8. '_remaining' → logprob: -18.375064849853516
    9. '
' → logprob: -19.875064849853516
    10. 'remain' → logprob: -20.000064849853516

Token 668: '_capacity' (ID: 85527)
  Prédit: '_capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_capacity' → logprob: -3.292907877039397e-06
    2. '_' → logprob: -13.62500286102295
    3. 'capacity' → logprob: -14.00000286102295
    4. '_cap' → logprob: -14.25000286102295
    5. 'Capacity' → logprob: -15.25000286102295
    6. ' capacity' → logprob: -16.625003814697266
    7. '_cost' → logprob: -16.625003814697266
    8. '```' → logprob: -17.000003814697266
    9. ' _' → logprob: -17.375003814697266
    10. '   ' → logprob: -17.500003814697266

Token 669: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.21837379038333893
    2. ' -=' → logprob: -1.7183737754821777
    3. '-' → logprob: -4.093373775482178
    4. ' -' → logprob: -8.968374252319336
    5. '```' → logprob: -12.718374252319336
    6. '=' → logprob: -13.218374252319336
    7. '    ' → logprob: -14.718374252319336
    8. '           ' → logprob: -14.968374252319336
    9. '            ' → logprob: -15.093374252319336
    10. '   ' → logprob: -15.218374252319336

Token 670: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -5.319370302458992e-06
    2. ' w' → logprob: -12.250005722045898
    3. 'int' → logprob: -14.875005722045898
    4. 'frac' → logprob: -16.2500057220459
    5. '   ' → logprob: -18.5000057220459
    6. '	w' → logprob: -19.3750057220459
    7. '(w' → logprob: -21.1250057220459
    8. 'fr' → logprob: -22.5000057220459
    9. '               ' → logprob: -22.8750057220459
    10. 'v' → logprob: -23.1250057220459

Token 671: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.31326186656951904
    2. ' *' → logprob: -1.313261866569519
    3. ' ' → logprob: -16.688261032104492
    4. '*object' → logprob: -17.063261032104492
    5. '**' → logprob: -17.188261032104492
    6. '   ' → logprob: -18.313261032104492
    7. ' ' → logprob: -18.563261032104492
    8. '```' → logprob: -18.813261032104492
    9. '*out' → logprob: -19.063261032104492
    10. '*ft' → logprob: -19.188261032104492

Token 672: ' frac' (ID: 72308)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.00020532844064291567
    2. ' frac' → logprob: -8.500205039978027
    3. 'frag' → logprob: -13.500205039978027
    4. 'fract' → logprob: -15.625205039978027
    5. 'fraction' → logprob: -16.250205993652344
    6. '   ' → logprob: -16.250205993652344
    7. 'fr' → logprob: -16.375205993652344
    8. 'fra' → logprob: -16.750205993652344
    9. '_frac' → logprob: -18.750205993652344
    10. ' ' → logprob: -19.375205993652344

Token 673: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 674: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014689312316477299
    2. '
' → logprob: -4.8896894454956055
    3. 'elif' → logprob: -5.5146894454956055
    4. '\n' → logprob: -6.3896894454956055
    5. '<|end|>' → logprob: -7.2646894454956055
    6. '               ' → logprob: -8.389689445495605
    7. '            
' → logprob: -9.264689445495605
    8. '       ' → logprob: -9.389689445495605
    9. '```' → logprob: -9.389689445495605
    10. 'return' → logprob: -10.264689445495605

Token 675: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.004421693738549948
    2. 'else' → logprob: -5.504421710968018
    3. '           ' → logprob: -8.25442123413086
    4. ' elif' → logprob: -9.50442123413086
    5. '       ' → logprob: -12.00442123413086
    6. 'el' → logprob: -13.62942123413086
    7. ' else' → logprob: -14.25442123413086
    8. '```' → logprob: -14.87942123413086
    9. 'elseif' → logprob: -16.25442123413086
    10. '	elif' → logprob: -16.25442123413086

Token 676: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.033311840146780014
    2. ' w' → logprob: -3.5333118438720703
    3. '0' → logprob: -5.65831184387207
    4. ' ' → logprob: -9.90831184387207
    5. '   ' → logprob: -11.65831184387207
    6. 'v' → logprob: -13.15831184387207
    7. '       ' → logprob: -13.53331184387207
    8. '    ' → logprob: -14.03331184387207
    9. 'item' → logprob: -14.47081184387207
    10. '  ' → logprob: -14.65831184387207

Token 677: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.12872427701950073
    2. '<' → logprob: -2.2537243366241455
    3. ' ==' → logprob: -4.503724098205566
    4. '==' → logprob: -5.628724098205566
    5. ' >' → logprob: -7.003724098205566
    6. '>' → logprob: -8.628724098205566
    7. ' ' → logprob: -11.628724098205566
    8. ' <=' → logprob: -12.503724098205566
    9. '=' → logprob: -13.003724098205566
    10. '   ' → logprob: -13.253724098205566

Token 678: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029613598599098623
    2. ' ' → logprob: -8.125296592712402
    3. '  ' → logprob: -17.375295639038086
    4. '=' → logprob: -17.750295639038086
    5. '   ' → logprob: -18.250295639038086
    6. '۰' → logprob: -18.750295639038086
    7. '```' → logprob: -19.500295639038086
    8. '	' → logprob: -19.625295639038086
    9. '1' → logprob: -19.687795639038086
    10. ')' → logprob: -19.812795639038086

Token 679: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '=' → logprob: -18.12500762939453
    4. '```' → logprob: -19.00000762939453
    5. '۰' → logprob: -19.00000762939453
    6. '   ' → logprob: -19.12500762939453
    7. 'zero' → logprob: -20.25000762939453
    8. ')' → logprob: -20.37500762939453
    9. '  ' → logprob: -20.50000762939453
    10. '...' → logprob: -20.56250762939453

Token 680: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3884947597980499
    2. ':
' → logprob: -1.1384947299957275
    3. '               ' → logprob: -6.763494968414307
    4. '           ' → logprob: -7.763494968414307
    5. 'and' → logprob: -11.513494491577148
    6. ' and' → logprob: -11.638494491577148
    7. '):
' → logprob: -12.013494491577148
    8. '       ' → logprob: -12.388494491577148
    9. ':

' → logprob: -12.763494491577148
    10. ':
' → logprob: -12.888494491577148

Token 681: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016420960891991854
    2. '           ' → logprob: -7.251642227172852
    3. ' if' → logprob: -7.626642227172852
    4. 'if' → logprob: -7.876642227172852
    5. 'total' → logprob: -11.001642227172852
    6. ' and' → logprob: -11.876642227172852
    7. '                   ' → logprob: -11.876642227172852
    8. '{
' → logprob: -12.001642227172852
    9. ':
' → logprob: -12.376642227172852
    10. '       ' → logprob: -12.626642227172852

Token 682: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008850920014083385
    2. '               ' → logprob: -5.508851051330566
    3. '           ' → logprob: -5.883851051330566
    4. 'total' → logprob: -6.758851051330566
    5. ' if' → logprob: -7.133851051330566
    6. '   ' → logprob: -11.758851051330566
    7. '                   ' → logprob: -12.133851051330566
    8. '       ' → logprob: -13.508851051330566
    9. ' total' → logprob: -13.883851051330566
    10. '```' → logprob: -14.508851051330566

Token 683: ' weight' (ID: 6049)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0003255719493608922
    2. '           ' → logprob: -8.375325202941895
    3. '               ' → logprob: -10.125325202941895
    4. '#' → logprob: -10.875325202941895
    5. ' if' → logprob: -10.875325202941895
    6. 'total' → logprob: -11.375325202941895
    7. 'If' → logprob: -13.000325202941895
    8. 'frac' → logprob: -13.500325202941895
    9. 'fraction' → logprob: -14.375325202941895
    10. '                   ' → logprob: -14.500325202941895

Token 684: ' zero' (ID: 12421)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6403751373291016
    2. 'if' → logprob: -2.0153751373291016
    3. ' ==' → logprob: -2.3903751373291016
    4. '>' → logprob: -2.5153751373291016
    5. '=' → logprob: -3.0153751373291016
    6. '!=' → logprob: -3.5153751373291016
    7. ' >' → logprob: -4.140375137329102
    8. ' if' → logprob: -4.265375137329102
    9. ' !=' → logprob: -4.390375137329102
    10. '               ' → logprob: -4.640375137329102

Token 685: ':' (ID: 25)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012569108977913857
    2. 'if' → logprob: -5.387568950653076
    3. ' if' → logprob: -5.762568950653076
    4. ':
' → logprob: -6.512568950653076
    5. ':' → logprob: -6.637568950653076
    6. ' and' → logprob: -6.887568950653076
    7. 'and' → logprob: -7.762568950653076
    8. '           ' → logprob: -8.012569427490234
    9. ',' → logprob: -9.512569427490234
    10. '                   ' → logprob: -10.262569427490234

Token 686: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.011983625590801239
    2. 'total' → logprob: -4.886983394622803
    3. ' if' → logprob: -6.261983394622803
    4. '               ' → logprob: -6.511983394622803
    5. '           ' → logprob: -7.011983394622803
    6. ' total' → logprob: -10.761983871459961
    7. 'fraction' → logprob: -11.011983871459961
    8. '                   ' → logprob: -11.136983871459961
    9. '   ' → logprob: -12.261983871459961
    10. 'frac' → logprob: -12.386983871459961

Token 687: ' value' (ID: 1432)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.030452387407422066
    2. ' v' → logprob: -3.6554524898529053
    3. 'item' → logprob: -5.530452251434326
    4. ' item' → logprob: -8.655452728271484
    5. '   ' → logprob: -13.405452728271484
    6. 'w' → logprob: -13.780452728271484
    7. '	v' → logprob: -14.030452728271484
    8. ' ' → logprob: -14.530452728271484
    9. 'value' → logprob: -15.030452728271484
    10. '(v' → logprob: -15.780452728271484

Token 688: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1426801085472107
    2. ' >' → logprob: -2.0176801681518555
    3. '<=' → logprob: -14.017680168151855
    4. '&gt' → logprob: -14.142680168151855
    5. ' ' → logprob: -14.267680168151855
    6. '           ' → logprob: -14.767680168151855
    7. ')>' → logprob: -14.892680168151855
    8. ' <=' → logprob: -15.017680168151855
    9. '   ' → logprob: -15.017680168151855
    10. '>=' → logprob: -15.767680168151855

Token 689: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0067170290276408195
    2. ' ' → logprob: -5.006717205047607
    3. '=' → logprob: -14.25671672821045
    4. '>' → logprob: -14.38171672821045
    5. '   ' → logprob: -15.63171672821045
    6. '               ' → logprob: -16.756717681884766
    7. '  ' → logprob: -17.006717681884766
    8. '                   ' → logprob: -17.006717681884766
    9. '           ' → logprob: -17.381717681884766
    10. '```' → logprob: -17.381717681884766

Token 690: ' take' (ID: 2304)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.36203375458717346
    2. ' and' → logprob: -1.987033724784851
    3. ':' → logprob: -2.6120338439941406
    4. '                   ' → logprob: -3.2370338439941406
    5. 'and' → logprob: -3.6120338439941406
    6. ':
' → logprob: -4.362033843994141
    7. ',' → logprob: -4.487033843994141
    8. '           ' → logprob: -6.487033843994141
    9. '                ' → logprob: -7.237033843994141
    10. '                       ' → logprob: -8.48703384399414

Token 691: ' fully' (ID: 9637)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008685869397595525
    2. ' ' → logprob: -7.250868797302246
    3. 'min' → logprob: -10.000868797302246
    4. 'total' → logprob: -10.125868797302246
    5. 'if' → logprob: -11.000868797302246
    6. '               ' → logprob: -11.250868797302246
    7. 'v' → logprob: -11.875868797302246
    8. '                   ' → logprob: -12.125868797302246
    9. 'x' → logprob: -12.250868797302246
    10. '           ' → logprob: -12.375868797302246

Token 692: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04793693870306015
    2. 'if' → logprob: -4.422936916351318
    3. '                   ' → logprob: -4.547936916351318
    4. ',' → logprob: -4.672936916351318
    5. 'total' → logprob: -5.172936916351318
    6. ' if' → logprob: -5.297936916351318
    7. '1' → logprob: -5.922936916351318
    8. ' total' → logprob: -6.922936916351318
    9. '
' → logprob: -8.547937393188477
    10. ' and' → logprob: -9.547937393188477

Token 693: ' else' (ID: 1203)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.9329602718353271
    2. '               ' → logprob: -1.3079602718353271
    3. 'if' → logprob: -1.6829602718353271
    4. ' total' → logprob: -2.432960271835327
    5. ' if' → logprob: -3.307960271835327
    6. '                   ' → logprob: -3.682960271835327
    7. 'frac' → logprob: -8.057960510253906
    8. 'elif' → logprob: -8.932960510253906
    9. '           ' → logprob: -9.182960510253906
    10. 'else' → logprob: -9.557960510253906

Token 694: ' skip' (ID: 16677)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.1332111358642578
    2. 'frac' → logprob: -1.2582111358642578
    3. '               ' → logprob: -2.008211135864258
    4. 'pass' → logprob: -2.383211135864258
    5. 'total' → logprob: -2.383211135864258
    6. ' continue' → logprob: -3.758211135864258
    7. ' pass' → logprob: -3.758211135864258
    8. ' total' → logprob: -4.383211135864258
    9. 'if' → logprob: -5.258211135864258
    10. ' frac' → logprob: -5.383211135864258

Token 695: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07573475688695908
    2. 'if' → logprob: -3.200734853744507
    3. ' if' → logprob: -3.450734853744507
    4. '
' → logprob: -8.450735092163086
    5. ',' → logprob: -9.575735092163086
    6. '                   ' → logprob: -9.700735092163086
    7. '           ' → logprob: -10.200735092163086
    8. 'continue' → logprob: -11.200735092163086
    9. '<|end|>' → logprob: -11.200735092163086
    10. '                
' → logprob: -11.200735092163086

Token 696: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003634713648352772
    2. ' if' → logprob: -8.12536334991455
    3. 'if' → logprob: -10.25036334991455
    4. '                   ' → logprob: -11.12536334991455
    5. '           ' → logprob: -11.37536334991455
    6. '   ' → logprob: -13.12536334991455
    7. '       ' → logprob: -14.12536334991455
    8. ',' → logprob: -14.50036334991455
    9. '              ' → logprob: -15.00036334991455
    10. '                ' → logprob: -15.00036334991455

Token 697: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002510974183678627
    2. '               ' → logprob: -6.127511024475098
    3. ' if' → logprob: -8.252511024475098
    4. '           ' → logprob: -10.002511024475098
    5. 'total' → logprob: -11.252511024475098
    6. '                   ' → logprob: -12.502511024475098
    7. 'continue' → logprob: -14.002511024475098
    8. '   ' → logprob: -14.127511024475098
    9. 'frac' → logprob: -14.127511024475098
    10. '
' → logprob: -15.627511024475098

Token 698: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0029944588895887136
    2. ' v' → logprob: -5.877994537353516
    3. 'item' → logprob: -8.627994537353516
    4. ' item' → logprob: -12.002994537353516
    5. '               ' → logprob: -12.877994537353516
    6. '           ' → logprob: -13.502994537353516
    7. '                   ' → logprob: -15.127994537353516
    8. '	v' → logprob: -15.377994537353516
    9. '   ' → logprob: -16.877994537353516
    10. '$v' → logprob: -18.127994537353516

Token 699: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.016041290014982224
    2. ' >' → logprob: -4.141041278839111
    3. '<=' → logprob: -12.14104175567627
    4. ' <=' → logprob: -14.76604175567627
    5. ')>' → logprob: -15.01604175567627
    6. ')' → logprob: -15.14104175567627
    7. ' ' → logprob: -15.64104175567627
    8. '&gt' → logprob: -15.76604175567627
    9. '">' → logprob: -16.266040802001953
    10. '()>' → logprob: -16.516040802001953

Token 700: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '۰' → logprob: -20.12501335144043
    4. '   ' → logprob: -21.12501335144043
    5. '<|end|>' → logprob: -21.25001335144043
    6. '=' → logprob: -21.37501335144043
    7. 'zero' → logprob: -22.12501335144043
    8. '>' → logprob: -22.37501335144043
    9. '  ' → logprob: -22.50001335144043
    10. '```' → logprob: -22.87501335144043

Token 701: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '۰' → logprob: -17.750017166137695
    4. '<|end|>' → logprob: -19.250017166137695
    5. 'zero' → logprob: -19.625017166137695
    6. '=' → logprob: -20.125017166137695
    7. '   ' → logprob: -20.250017166137695
    8. '０' → logprob: -20.375017166137695
    9. '٠' → logprob: -20.500017166137695
    10. '  ' → logprob: -20.625017166137695

Token 702: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2558871805667877
    2. ':' → logprob: -1.5058871507644653
    3. '                   ' → logprob: -6.130887031555176
    4. '               ' → logprob: -6.380887031555176
    5. ':
' → logprob: -10.380887031555176
    6. ',' → logprob: -11.005887031555176
    7. '):
' → logprob: -11.505887031555176
    8. '                       ' → logprob: -11.755887031555176
    9. '           ' → logprob: -12.005887031555176
    10. ' and' → logprob: -12.755887031555176

Token 703: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00012761499965563416
    2. '               ' → logprob: -9.375127792358398
    3. '                       ' → logprob: -11.000127792358398
    4. 'total' → logprob: -11.375127792358398
    5. 'return' → logprob: -12.125127792358398
    6. ' total' → logprob: -12.375127792358398
    7. '           ' → logprob: -14.000127792358398
    8. '
' → logprob: -14.125127792358398
    9. '                  ' → logprob: -14.125127792358398
    10. ',' → logprob: -14.500127792358398

Token 704: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.001409878022968769
    2. ' total' → logprob: -7.001410007476807
    3. '               ' → logprob: -7.751410007476807
    4. '                   ' → logprob: -9.751409530639648
    5. '1' → logprob: -11.626409530639648
    6. '           ' → logprob: -15.001409530639648
    7. '   ' → logprob: -15.501409530639648
    8. 'x' → logprob: -16.37640953063965
    9. '                       ' → logprob: -16.37640953063965
    10. 'fraction' → logprob: -16.62640953063965

Token 705: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -3.128163257315464e-07
    2. 'value' → logprob: -15.25
    3. '_' → logprob: -19.75
    4. 'Value' → logprob: -20.0
    5. '_VALUE' → logprob: -20.25
    6. '_values' → logprob: -21.375
    7. '_Value' → logprob: -21.625
    8. 'alue' → logprob: -21.75
    9. '   ' → logprob: -22.25
    10. '_val' → logprob: -22.75

Token 706: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1602306365966797
    2. ' +=' → logprob: -1.9102306365966797
    3. ']+=' → logprob: -12.66023063659668
    4. '+' → logprob: -13.28523063659668
    5. '    ' → logprob: -14.41023063659668
    6. '+=(' → logprob: -15.66023063659668
    7. '   ' → logprob: -15.91023063659668
    8. '            ' → logprob: -16.03523063659668
    9. '           ' → logprob: -16.03523063659668
    10. '```' → logprob: -16.16023063659668

Token 707: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.7729658540920354e-05
    2. ' v' → logprob: -10.500027656555176
    3. '1' → logprob: -16.500028610229492
    4. 'item' → logprob: -16.875028610229492
    5. 'float' → logprob: -17.250028610229492
    6. '	v' → logprob: -18.375028610229492
    7. '_v' → logprob: -19.875028610229492
    8. '   ' → logprob: -20.000028610229492
    9. '*v' → logprob: -20.125028610229492
    10. 'value' → logprob: -20.250028610229492

Token 708: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 709: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '   ' → logprob: -18.375
    4. '```' → logprob: -18.375
    5. '[' → logprob: -20.875
    6. '`' → logprob: -21.0
    7. '(' → logprob: -21.5
    8. '  ' → logprob: -22.0
    9. '۱' → logprob: -22.125
    10. '#' → logprob: -22.1875

Token 710: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -18.625
    4. '```' → logprob: -18.75
    5. '[' → logprob: -20.5
    6. '`' → logprob: -20.75
    7. '0' → logprob: -21.5
    8. '#' → logprob: -21.75
    9. '  ' → logprob: -21.75
    10. '(' → logprob: -21.875

Token 711: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 712: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05548175796866417
    2. '           ' → logprob: -2.9304816722869873
    3. '                   ' → logprob: -8.555481910705566
    4. 'continue' → logprob: -8.805481910705566
    5. '<|end|>' → logprob: -9.055481910705566
    6. '
' → logprob: -9.930481910705566
    7. 'else' → logprob: -10.055481910705566
    8. ' continue' → logprob: -11.555481910705566
    9. '```' → logprob: -11.680481910705566
    10. ' else' → logprob: -11.680481910705566

Token 713: ' #' (ID: 1069)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.19080336391925812
    2. '#' (adapté à ' #') → logprob: -1.9408034086227417
    3. 'continue' → logprob: -3.690803289413452
    4. '
' → logprob: -6.690803527832031
    5. ' #' → logprob: -6.940803527832031
    6. ' remaining' → logprob: -7.065803527832031
    7. '           ' → logprob: -7.440803527832031
    8. '                   ' → logprob: -7.940803527832031
    9. '               ' → logprob: -8.315803527832031
    10. ' continue' → logprob: -8.690803527832031

Token 714: ' no' (ID: 860)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.6889675855636597
    2. '#' → logprob: -0.8139675855636597
    3. 'continue' → logprob: -2.938967704772949
    4. 'remain' → logprob: -7.438967704772949
    5. 'pass' → logprob: -7.563967704772949
    6. ' #' → logprob: -8.18896770477295
    7. ' remaining' → logprob: -9.06396770477295
    8. ' continue' → logprob: -9.56396770477295
    9. '           ' → logprob: -9.68896770477295
    10. 'break' → logprob: -9.93896770477295

Token 715: ' capacity' (ID: 12241)
  Prédit: ' change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' change' → logprob: -0.7956485748291016
    2. 'change' → logprob: -1.1706485748291016
    3. 'remaining' → logprob: -1.6706485748291016
    4. 'capacity' → logprob: -3.2956485748291016
    5. ' remaining' → logprob: -4.920648574829102
    6. ' capacity' → logprob: -5.420648574829102
    7. ' update' → logprob: -7.670648574829102
    8. '#' → logprob: -8.545648574829102
    9. 'update' → logprob: -8.545648574829102
    10. 'weight' → logprob: -9.170648574829102

Token 716: ' change' (ID: 3343)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15566520392894745
    2. '               ' → logprob: -2.405665159225464
    3. ' else' → logprob: -4.030665397644043
    4. '<|end|>' → logprob: -4.155665397644043
    5. 'continue' → logprob: -5.030665397644043
    6. 'else' → logprob: -5.530665397644043
    7. ' continue' → logprob: -6.155665397644043
    8. '                   ' → logprob: -6.780665397644043
    9. '            ' → logprob: -6.780665397644043
    10. '       ' → logprob: -6.905665397644043

Token 717: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024036245420575142
    2. '               ' → logprob: -3.899036169052124
    3. '
' → logprob: -6.274036407470703
    4. '<|end|>' → logprob: -7.024036407470703
    5. '       ' → logprob: -8.649036407470703
    6. '                   ' → logprob: -9.149036407470703
    7. 'elif' → logprob: -9.774036407470703
    8. '<|end|>' → logprob: -9.774036407470703
    9. '            
' → logprob: -9.899036407470703
    10. ' else' → logprob: -9.899036407470703

Token 718: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.25223612785339355
    2. '           ' → logprob: -1.5022361278533936
    3. 'else' → logprob: -8.377236366271973
    4. ' else' → logprob: -11.002236366271973
    5. 'elif' → logprob: -11.002236366271973
    6. 'continue' → logprob: -11.127236366271973
    7. '		' → logprob: -11.752236366271973
    8. '                   ' → logprob: -12.127236366271973
    9. '			' → logprob: -12.377236366271973
    10. '	           ' → logprob: -12.877236366271973

Token 719: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2224886566400528
    2. '           ' → logprob: -1.8474886417388916
    3. ' else' → logprob: -4.097488880157471
    4. 'elif' → logprob: -4.347488880157471
    5. '               ' → logprob: -4.847488880157471
    6. 'continue' → logprob: -5.472488880157471
    7. ' continue' → logprob: -8.847488403320312
    8. ' elif' → logprob: -9.847488403320312
    9. '       ' → logprob: -11.597488403320312
    10. '
' → logprob: -11.597488403320312

Token 720: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.008221632800996304
    2. 'continue' → logprob: -5.258221626281738
    3. ' else' → logprob: -6.133221626281738
    4. 'elif' → logprob: -7.758221626281738
    5. '           ' → logprob: -8.008221626281738
    6. ' continue' → logprob: -10.508221626281738
    7. '#' → logprob: -11.383221626281738
    8. '               ' → logprob: -11.758221626281738
    9. '       ' → logprob: -13.258221626281738
    10. 'pass' → logprob: -13.508221626281738

Token 721: ' value' (ID: 1432)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5187434554100037
    2. '               ' → logprob: -1.6437435150146484
    3. ':' → logprob: -2.1437435150146484
    4. 'continue' → logprob: -2.8937435150146484
    5. ' continue' → logprob: -3.7687435150146484
    6. '           ' → logprob: -4.768743515014648
    7. '                   ' → logprob: -6.018743515014648
    8. 'skip' → logprob: -6.018743515014648
    9. ' skip' → logprob: -6.518743515014648
    10. 'pass' → logprob: -8.268743515014648

Token 722: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.2996113896369934
    2. ' <=' → logprob: -1.4246113300323486
    3. '           ' → logprob: -5.174611568450928
    4. '<' → logprob: -5.299611568450928
    5. '               ' → logprob: -5.674611568450928
    6. ' <' → logprob: -5.674611568450928
    7. ':' → logprob: -8.42461109161377
    8. '=' → logprob: -8.92461109161377
    9. '==' → logprob: -9.54961109161377
    10. '            ' → logprob: -10.04961109161377

Token 723: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000553151941858232
    2. ' ' → logprob: -7.500553131103516
    3. '   ' → logprob: -17.000553131103516
    4. '=' → logprob: -17.875553131103516
    5. '```' → logprob: -18.250553131103516
    6. '  ' → logprob: -19.125553131103516
    7. ' ' → logprob: -20.000553131103516
    8. '<|end|>' → logprob: -20.375553131103516
    9. '۰' → logprob: -20.500553131103516
    10. 'zero' → logprob: -20.625553131103516

Token 724: ' take' (ID: 2304)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4789809286594391
    2. ':' → logprob: -1.6039808988571167
    3. '                   ' → logprob: -2.4789810180664062
    4. 'continue' → logprob: -2.8539810180664062
    5. ':
' → logprob: -3.7289810180664062
    6. ' continue' → logprob: -4.853981018066406
    7. '           ' → logprob: -5.728981018066406
    8. ',' → logprob: -5.978981018066406
    9. 'else' → logprob: -9.103981018066406
    10. '                       ' → logprob: -9.478981018066406

Token 725: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1787862330675125
    2. 'pass' → logprob: -2.803786277770996
    3. 'continue' → logprob: -3.053786277770996
    4. 'skip' → logprob: -3.803786277770996
    5. ' pass' → logprob: -4.428786277770996
    6. ' ' → logprob: -4.553786277770996
    7. ' continue' → logprob: -5.303786277770996
    8. 'none' → logprob: -5.928786277770996
    9. ' skip' → logprob: -7.428786277770996
    10. 'nothing' → logprob: -7.428786277770996

Token 726: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010055390885099769
    2. 'none' → logprob: -7.25100564956665
    3. 'nothing' → logprob: -8.751005172729492
    4. ' ' → logprob: -9.501005172729492
    5. 'no' → logprob: -10.501005172729492
    6. 'pass' → logprob: -10.876005172729492
    7. 'skip' → logprob: -12.126005172729492
    8. 'zero' → logprob: -13.126005172729492
    9. ' none' → logprob: -13.251005172729492
    10. ' nothing' → logprob: -13.251005172729492

Token 727: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008136148564517498
    2. '               ' → logprob: -5.00813627243042
    3. '<|end|>' → logprob: -7.63313627243042
    4. '
' → logprob: -7.88313627243042
    5. '            
' → logprob: -9.133135795593262
    6. '       ' → logprob: -9.258135795593262
    7. 'else' → logprob: -9.258135795593262
    8. ' else' → logprob: -9.758135795593262
    9. 'elif' → logprob: -10.008135795593262
    10. '<|end|>' → logprob: -10.383135795593262

Token 728: ' maximize' (ID: 44207)
  Prédit: 'avoid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'avoid' → logprob: -0.21196617186069489
    2. 'maximize' → logprob: -2.2119662761688232
    3. 'skip' → logprob: -2.8369662761688232
    4. ' avoid' → logprob: -4.086966037750244
    5. '0' → logprob: -5.961966037750244
    6. 'min' → logprob: -6.586966037750244
    7. 'continue' → logprob: -7.586966037750244
    8. 'opt' → logprob: -7.836966037750244
    9. ' ' → logprob: -8.336966514587402
    10. 'max' → logprob: -8.711966514587402

Token 729: '
' (ID: 198)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.08818928152322769
    2. 'value' → logprob: -2.9631893634796143
    3. 'continue' → logprob: -4.463189125061035
    4. ' total' → logprob: -4.588189125061035
    5. 'pass' → logprob: -5.463189125061035
    6. '           ' → logprob: -6.088189125061035
    7. '               ' → logprob: -6.463189125061035
    8. '
' → logprob: -6.713189125061035
    9. '0' → logprob: -7.963189125061035
    10. 'continu' → logprob: -7.963189125061035

Token 730: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010111484676599503
    2. 'else' → logprob: -5.135111331939697
    3. 'elif' → logprob: -5.635111331939697
    4. ' else' → logprob: -8.010111808776855
    5. 'continue' → logprob: -9.385111808776855
    6. ' elif' → logprob: -9.760111808776855
    7. '```' → logprob: -10.135111808776855
    8. '               ' → logprob: -10.385111808776855
    9. '
' → logprob: -10.510111808776855
    10. '       ' → logprob: -10.885111808776855

Token 731: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.01031550858169794
    2. '           ' → logprob: -5.260315418243408
    3. ' else' → logprob: -5.760315418243408
    4. 'elif' → logprob: -6.260315418243408
    5. ' elif' → logprob: -12.010315895080566
    6. '       ' → logprob: -13.385315895080566
    7. 'continue' → logprob: -16.51031494140625
    8. '```' → logprob: -17.13531494140625
    9. '               ' → logprob: -17.26031494140625
    10. '	else' → logprob: -17.38531494140625

Token 732: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14275969564914703
    2. ':
' → logprob: -2.0177597999572754
    3. '           ' → logprob: -9.517759323120117
    4. ':
' → logprob: -12.392759323120117
    5. '{' → logprob: -13.392759323120117
    6. '):
' → logprob: -13.642759323120117
    7. '               ' → logprob: -14.017759323120117
    8. ':

' → logprob: -14.017759323120117
    9. ',' → logprob: -14.642759323120117
    10. '       ' → logprob: -14.642759323120117

Token 733: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08692187070846558
    2. '           ' → logprob: -2.5869219303131104
    3. '
' → logprob: -5.961921691894531
    4. '#' → logprob: -5.961921691894531
    5. ' #' → logprob: -6.086921691894531
    6. ' if' → logprob: -9.586921691894531
    7. '                   ' → logprob: -9.586921691894531
    8. '       ' → logprob: -9.836921691894531
    9. 'if' → logprob: -9.961921691894531
    10. '                ' → logprob: -9.961921691894531

Token 734: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.16237366199493408
    2. 'if' → logprob: -2.2873735427856445
    3. '           ' → logprob: -3.1623735427856445
    4. '               ' → logprob: -5.5373735427856445
    5. 'frac' → logprob: -6.9123735427856445
    6. 'total' → logprob: -7.9123735427856445
    7. 'fraction' → logprob: -8.787373542785645
    8. ' #' → logprob: -8.787373542785645
    9. 'x' → logprob: -9.037373542785645
    10. '   ' → logprob: -9.787373542785645

Token 735: ' w' (ID: 286)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.30483078956604004
    2. 'if' → logprob: -1.42983078956604
    3. '               ' → logprob: -4.429830551147461
    4. '           ' → logprob: -5.304830551147461
    5. 'frac' → logprob: -5.429830551147461
    6. 'max' → logprob: -7.179830551147461
    7. 'fraction' → logprob: -7.929830551147461
    8. 'remaining' → logprob: -8.304830551147461
    9. 'x' → logprob: -8.929830551147461
    10. ' #' → logprob: -9.054830551147461

Token 736: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.10038448125123978
    2. '<' → logprob: -2.350384473800659
    3. ' >' → logprob: -9.850384712219238
    4. ' =' → logprob: -10.600384712219238
    5. 'w' → logprob: -11.100384712219238
    6. '               ' → logprob: -11.350384712219238
    7. 't' → logprob: -11.600384712219238
    8. '<|end|>' → logprob: -11.850384712219238
    9. '_negative' → logprob: -11.975384712219238
    10. 'negative' → logprob: -12.475384712219238

Token 737: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018077615823131055
    2. ' ' → logprob: -8.625181198120117
    3. '               ' → logprob: -14.500181198120117
    4. '                   ' → logprob: -15.500181198120117
    5. '=' → logprob: -16.000181198120117
    6. '<|end|>' → logprob: -16.500181198120117
    7. '           ' → logprob: -16.750181198120117
    8. '   ' → logprob: -17.062681198120117
    9. '1' → logprob: -17.500181198120117
    10. '                ' → logprob: -17.687681198120117

Token 738: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '               ' → logprob: -16.625024795532227
    4. '                   ' → logprob: -18.000024795532227
    5. '=' → logprob: -18.750024795532227
    6. '<|end|>' → logprob: -18.750024795532227
    7. '1' → logprob: -19.125024795532227
    8. '           ' → logprob: -19.125024795532227
    9. '   ' → logprob: -19.312524795532227
    10. '```' → logprob: -19.875024795532227

Token 739: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5177295207977295
    2. '
' → logprob: -1.1427295207977295
    3. '           ' → logprob: -3.1427295207977295
    4. ':' → logprob: -4.517729759216309
    5. ':
' → logprob: -4.767729759216309
    6. ' if' → logprob: -5.267729759216309
    7. 'total' → logprob: -5.267729759216309
    8. 'if' → logprob: -5.517729759216309
    9. '                
' → logprob: -6.017729759216309
    10. '#' → logprob: -6.767729759216309

Token 740: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05384606495499611
    2. '           ' → logprob: -3.3038461208343506
    3. ' if' → logprob: -4.6788458824157715
    4. ' x' → logprob: -5.8038458824157715
    5. 'if' → logprob: -7.0538458824157715
    6. '```' → logprob: -7.5538458824157715
    7. 'x' → logprob: -7.8038458824157715
    8. '
' → logprob: -7.9288458824157715
    9. '                ' → logprob: -8.42884635925293
    10. '       ' → logprob: -8.42884635925293

Token 741: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3173964321613312
    2. '#' (adapté à ' #') → logprob: -2.317396402359009
    3. '               ' → logprob: -2.567396402359009
    4. 'total' → logprob: -3.192396402359009
    5. 'take' → logprob: -3.692396402359009
    6. 'max' → logprob: -4.567396640777588
    7. 'frac' → logprob: -4.567396640777588
    8. 'x' → logprob: -5.692396640777588
    9. 'fraction' → logprob: -5.817396640777588
    10. 'remaining' → logprob: -7.192396640777588

Token 742: ' Taking' (ID: 48802)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1461891233921051
    2. '#' → logprob: -2.3961892127990723
    3. 'take' → logprob: -3.8961892127990723
    4. 'max' → logprob: -4.521189212799072
    5. 'total' → logprob: -5.146189212799072
    6. '               ' → logprob: -5.271189212799072
    7. 'frac' → logprob: -7.146189212799072
    8. 'fraction' → logprob: -7.646189212799072
    9. 'remaining' → logprob: -8.396188735961914
    10. '           ' → logprob: -8.396188735961914

Token 743: ' fraction' (ID: 33763)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.8721131086349487
    2. '1' → logprob: -1.3721131086349487
    3. ' full' → logprob: -1.8721131086349487
    4. 'x' → logprob: -1.9971131086349487
    5. ' x' → logprob: -4.247113227844238
    6. 'fraction' → logprob: -4.247113227844238
    7. ' fraction' → logprob: -5.747113227844238
    8. ' ' → logprob: -5.997113227844238
    9. 'item' → logprob: -6.747113227844238
    10. ' the' → logprob: -6.747113227844238

Token 744: ' x' (ID: 1215)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4744165241718292
    2. ' =' → logprob: -0.9744164943695068
    3. '               ' → logprob: -8.599416732788086
    4. '           ' → logprob: -10.099416732788086
    5. '=item' → logprob: -10.849416732788086
    6. '=max' → logprob: -10.849416732788086
    7. ' ' → logprob: -11.099416732788086
    8. '                   ' → logprob: -11.474416732788086
    9. '1' → logprob: -11.474416732788086
    10. '=min' → logprob: -11.599416732788086

Token 745: '_i' (ID: 10853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39159131050109863
    2. '=' → logprob: -1.1415913105010986
    3. '_i' → logprob: -5.3915910720825195
    4. '               ' → logprob: -9.39159107208252
    5. '=i' → logprob: -11.39159107208252
    6. '=item' → logprob: -11.51659107208252
    7. '   ' → logprob: -11.51659107208252
    8. '                   ' → logprob: -11.51659107208252
    9. ' ' → logprob: -12.26659107208252
    10. '           ' → logprob: -12.89159107208252

Token 746: ' in' (ID: 306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008622493594884872
    2. ' =' → logprob: -4.758622646331787
    3. '=max' → logprob: -12.758622169494629
    4. '=int' → logprob: -13.883622169494629
    5. 'max' → logprob: -14.383622169494629
    6. 'in' → logprob: -14.383622169494629
    7. ' in' → logprob: -15.008622169494629
    8. '=float' → logprob: -15.008622169494629
    9. 's' → logprob: -15.008622169494629
    10. '=min' → logprob: -15.258622169494629

Token 747: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0012392755597829819
    2. '1' → logprob: -7.37623929977417
    3. '0' → logprob: -7.87623929977417
    4. 'range' → logprob: -8.501238822937012
    5. ' [' → logprob: -10.626238822937012
    6. ' range' → logprob: -13.751238822937012
    7. '{' → logprob: -14.126238822937012
    8. 'x' → logprob: -14.751238822937012
    9. '(' → logprob: -15.001238822937012
    10. '[min' → logprob: -15.001238822937012

Token 748: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001941130612976849
    2. '1' → logprob: -6.251941204071045
    3. ']' → logprob: -12.251940727233887
    4. ',' → logprob: -12.751940727233887
    5. ' ' → logprob: -12.751940727233887
    6. '(' → logprob: -14.876940727233887
    7. '   ' → logprob: -15.376940727233887
    8. ':' → logprob: -15.876940727233887
    9. '...' → logprob: -15.876940727233887
    10. '=' → logprob: -15.876940727233887

Token 749: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.584861744660884e-05
    2. '1' → logprob: -10.250045776367188
    3. ' ,' → logprob: -11.625045776367188
    4. ',
' → logprob: -14.500045776367188
    5. '```' → logprob: -14.750045776367188
    6. '   ' → logprob: -15.375045776367188
    7. ' ' → logprob: -16.000045776367188
    8. '0' → logprob: -16.125045776367188
    9. '	' → logprob: -17.500045776367188
    10. '，' → logprob: -17.750045776367188

Token 750: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.00000286102295
    3. '```' → logprob: -15.87500286102295
    4. ']' → logprob: -16.750001907348633
    5. '...' → logprob: -16.875001907348633
    6. '   ' → logprob: -17.000001907348633
    7. ',' → logprob: -17.500001907348633
    8. ')' → logprob: -17.875001907348633
    9. '
' → logprob: -18.500001907348633
    10. '           ' → logprob: -19.687501907348633

Token 751: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04581667482852936
    2. ']:
' → logprob: -3.295816659927368
    3. '],' → logprob: -5.545816898345947
    4. ']
' → logprob: -6.420816898345947
    5. ']:' → logprob: -6.795816898345947
    6. ']:

' → logprob: -7.170816898345947
    7. '               ' → logprob: -9.170816421508789
    8. ']=' → logprob: -9.295816421508789
    9. ']:
' → logprob: -10.670816421508789
    10. ']

' → logprob: -10.920816421508789

Token 752: ' will' (ID: 738)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6062243580818176
    2. '               ' → logprob: -1.3562242984771729
    3. ':' → logprob: -2.606224298477173
    4. ':
' → logprob: -2.856224298477173
    5. ' =' → logprob: -3.231224298477173
    6. ',' → logprob: -4.606224536895752
    7. ' if' → logprob: -5.981224536895752
    8. ' to' → logprob: -6.106224536895752
    9. '                   ' → logprob: -6.356224536895752
    10. '           ' → logprob: -6.356224536895752

Token 753: ' reduce' (ID: 10389)
  Prédit: 'increase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'increase' → logprob: -0.11833333969116211
    2. ' increase' → logprob: -2.243333339691162
    3. 'add' → logprob: -6.493333339691162
    4. ' add' → logprob: -6.868333339691162
    5. 'always' → logprob: -7.493333339691162
    6. 'increment' → logprob: -7.743333339691162
    7. ' always' → logprob: -8.11833381652832
    8. 'de' → logprob: -8.11833381652832
    9. 'reduce' → logprob: -8.61833381652832
    10. '                   ' → logprob: -8.74333381652832

Token 754: ' total' (ID: 3609)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.07723825424909592
    2. ' remaining' → logprob: -3.3272383213043213
    3. 'capacity' → logprob: -3.8272383213043213
    4. 'the' → logprob: -4.577238082885742
    5. ' capacity' → logprob: -5.452238082885742
    6. ' the' → logprob: -6.452238082885742
    7. 'fraction' → logprob: -9.077238082885742
    8. 'available' → logprob: -9.577238082885742
    9. 'weight' → logprob: -9.702238082885742
    10. '_remaining' → logprob: -10.327238082885742

Token 755: ' weight' (ID: 6049)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.5600069761276245
    2. '_capacity' → logprob: -0.9350069761276245
    3. ' capacity' → logprob: -3.810007095336914
    4. 'weight' → logprob: -5.060007095336914
    5. 'remaining' → logprob: -5.560007095336914
    6. '_weight' → logprob: -6.185007095336914
    7. '_remaining' → logprob: -6.810007095336914
    8. '_' → logprob: -7.560007095336914
    9. ' remaining' → logprob: -9.560007095336914
    10. ' weight' → logprob: -9.560007095336914

Token 756: ' by' (ID: 656)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5015914440155029
    2. ',' → logprob: -2.251591444015503
    3. ' and' → logprob: -2.251591444015503
    4. ' if' → logprob: -2.376591444015503
    5. '           ' → logprob: -2.626591444015503
    6. 'and' → logprob: -5.376591682434082
    7. ' by' → logprob: -5.751591682434082
    8. ' (' → logprob: -6.251591682434082
    9. ' to' → logprob: -7.001591682434082
    10. ' because' → logprob: -7.001591682434082

Token 757: ' abs' (ID: 8443)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.2717008590698242
    2. 'abs' → logprob: -2.521700859069824
    3. ' w' → logprob: -2.646700859069824
    4. '-w' → logprob: -3.896700859069824
    5. 'x' → logprob: -4.021700859069824
    6. '(-' → logprob: -4.396700859069824
    7. '-' → logprob: -4.396700859069824
    8. ' -' → logprob: -5.146700859069824
    9. ' abs' → logprob: -5.146700859069824
    10. ' (-' → logprob: -5.646700859069824

Token 758: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.01882612146437168
    2. 'w' → logprob: -4.018826007843018
    3. '(' → logprob: -8.143826484680176
    4. '(x' → logprob: -8.518826484680176
    5. '_w' → logprob: -9.893826484680176
    6. 'x' → logprob: -10.643826484680176
    7. '(-' → logprob: -10.893826484680176
    8. '   ' → logprob: -11.018826484680176
    9. '           ' → logprob: -11.393826484680176
    10. '               ' → logprob: -11.643826484680176

Token 759: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002094945637509227
    2. ')*' → logprob: -6.502094745635986
    3. '_i' → logprob: -8.752095222473145
    4. ')
' → logprob: -8.877095222473145
    5. ']' → logprob: -10.252095222473145
    6. '*)' → logprob: -10.252095222473145
    7. ' )' → logprob: -10.377095222473145
    8. ')]' → logprob: -10.502095222473145
    9. ' *' → logprob: -10.752095222473145
    10. 'i' → logprob: -10.752095222473145

Token 760: 'x' (ID: 87)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5142592787742615
    2. 'x' → logprob: -1.1392593383789062
    3. 'frac' → logprob: -2.6392593383789062
    4. 'fraction' → logprob: -5.264259338378906
    5. ' x' → logprob: -6.514259338378906
    6. ' frac' → logprob: -6.764259338378906
    7. ' ' → logprob: -7.264259338378906
    8. '(' → logprob: -7.889259338378906
    9. '0' → logprob: -8.389259338378906
    10. '(x' → logprob: -8.826759338378906

Token 761: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -8.315936429426074e-05
    2. 'i' → logprob: -9.625082969665527
    3. '   ' → logprob: -11.625082969665527
    4. '               ' → logprob: -13.000082969665527
    5. '           ' → logprob: -13.000082969665527
    6. '_' → logprob: -13.125082969665527
    7. '```' → logprob: -14.500082969665527
    8. ')' → logprob: -15.250082969665527
    9. '                   ' → logprob: -15.500082969665527
    10. ' _' → logprob: -15.625082969665527

Token 762: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018228843808174133
    2. ',' → logprob: -5.143229007720947
    3. ' and' → logprob: -5.643229007720947
    4. '
' → logprob: -5.768229007720947
    5. '           ' → logprob: -6.268229007720947
    6. ' if' → logprob: -6.893229007720947
    7. '                
' → logprob: -7.393229007720947
    8. '.' → logprob: -8.143228530883789
    9. '                   ' → logprob: -8.643228530883789
    10. '#' → logprob: -8.768228530883789

Token 763: ' increasing' (ID: 11293)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 764: ' capacity' (ID: 12241)
  Prédit: 'remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remaining' → logprob: -0.010290024802088737
    2. ' remaining' → logprob: -4.635290145874023
    3. 'capacity' → logprob: -8.510290145874023
    4. 'available' → logprob: -8.635290145874023
    5. '1' → logprob: -9.385290145874023
    6. '   ' → logprob: -10.635290145874023
    7. 'the' → logprob: -11.510290145874023
    8. ' capacity' → logprob: -11.635290145874023
    9. ' the' → logprob: -12.260290145874023
    10. ' available' → logprob: -12.260290145874023

Token 765: ' by' (ID: 656)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 766: ' that' (ID: 484)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 767: ' much' (ID: 2009)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.045322060585022
    2. ',' → logprob: -1.545322060585022
    3. '.' → logprob: -1.920322060585022
    4. '
' → logprob: -3.2953219413757324
    5. ' if' → logprob: -3.4203219413757324
    6. ' so' → logprob: -3.9203219413757324
    7. ' and' → logprob: -3.9203219413757324
    8. '1' → logprob: -4.170321941375732
    9. ' amount' → logprob: -4.170321941375732
    10. ' fraction' → logprob: -4.170321941375732

Token 768: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020582063123583794
    2. '
' → logprob: -4.77058219909668
    3. ',' → logprob: -6.02058219909668
    4. ' if' → logprob: -6.27058219909668
    5. '                
' → logprob: -6.52058219909668
    6. ' and' → logprob: -6.64558219909668
    7. '           ' → logprob: -6.77058219909668
    8. 'x' → logprob: -7.27058219909668
    9. '.' → logprob: -7.64558219909668
    10. 'if' → logprob: -7.64558219909668

Token 769: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015241486253216863
    2. ' x' → logprob: -7.126523971557617
    3. 'x' → logprob: -8.001523971557617
    4. '```' → logprob: -9.001523971557617
    5. '           ' → logprob: -9.126523971557617
    6. '                   ' → logprob: -10.251523971557617
    7. '                ' → logprob: -10.376523971557617
    8. '       ' → logprob: -10.876523971557617
    9. '              ' → logprob: -11.001523971557617
    10. '``' → logprob: -12.251523971557617

Token 770: ' #' (ID: 1069)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 771: ' We' (ID: 1416)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 772: ' want' (ID: 1682)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 773: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.02458471991121769
    2. ' to' → logprob: -3.8995847702026367
    3. '               ' → logprob: -6.524584770202637
    4. 'x' → logprob: -6.649584770202637
    5. '
' → logprob: -8.274584770202637
    6. '   ' → logprob: -8.274584770202637
    7. 'total' → logprob: -8.524584770202637
    8. '                   ' → logprob: -9.274584770202637
    9. '1' → logprob: -9.274584770202637
    10. '           ' → logprob: -9.399584770202637

Token 774: ' max' (ID: 2999)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 775: ' value' (ID: 1432)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 776: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 777: ' so' (ID: 813)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 778: ' if' (ID: 538)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 779: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.008952298201620579
    2. ' v' → logprob: -4.7589521408081055
    3. '   ' → logprob: -8.883952140808105
    4. 'w' → logprob: -9.258952140808105
    5. 'x' → logprob: -9.758952140808105
    6. 'item' → logprob: -11.258952140808105
    7. '(v' → logprob: -12.383952140808105
    8. ' w' → logprob: -12.508952140808105
    9. '           ' → logprob: -12.633952140808105
    10. '       ' → logprob: -12.758952140808105

Token 780: '>' (ID: 29)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4742704927921295
    2. '>' → logprob: -0.9742704629898071
    3. ' >=' → logprob: -9.599270820617676
    4. '>=' → logprob: -9.849270820617676
    5. ' *' → logprob: -11.224270820617676
    6. '*' → logprob: -11.349270820617676
    7. '   ' → logprob: -11.474270820617676
    8. ' <' → logprob: -11.599270820617676
    9. ' ' → logprob: -11.849270820617676
    10. '<' → logprob: -12.724270820617676

Token 781: '0' (ID: 15)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 782: ' take' (ID: 2304)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 783: ' fully' (ID: 9637)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 784: ' x' (ID: 1215)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 785: '_i' (ID: 10853)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 786: '=' (ID: 28)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 787: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 788: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 789: ' else' (ID: 1203)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 790: ' ' (ID: 220)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 791: '0' (ID: 15)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 792: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 793: '               ' (ID: 506)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 794: ' if' (ID: 538)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 795: ' v' (ID: 323)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 796: ' >' (ID: 1424)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 797: ' ' (ID: 220)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 798: '0' (ID: 15)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 799: ':
' (ID: 734)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 800: '                   ' (ID: 699)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 801: ' total' (ID: 3609)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 802: '_value' (ID: 6734)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 803: ' +=' (ID: 2757)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 804: ' v' (ID: 323)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 805: ' *' (ID: 425)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 806: ' ' (ID: 220)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 807: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 808: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 809: '                   ' (ID: 699)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 810: ' remaining' (ID: 15448)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 811: '_capacity' (ID: 85527)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 812: ' -=' (ID: 12583)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 813: ' w' (ID: 286)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 814: ' *' (ID: 425)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 815: ' ' (ID: 220)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 816: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 817: ' #' (ID: 1069)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 818: ' since' (ID: 3630)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 819: ' w' (ID: 286)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 820: '<' (ID: 27)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 821: '0' (ID: 15)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 822: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 823: ' remaining' (ID: 15448)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 824: '_capacity' (ID: 85527)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 825: ' increases' (ID: 21073)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 826: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 827: '               ' (ID: 506)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 828: ' #' (ID: 1069)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 829: ' else' (ID: 1203)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 830: ' v' (ID: 323)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 831: ' <=' (ID: 5017)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 832: '0' (ID: 15)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 833: ' skip' (ID: 16677)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 834: ' taking' (ID: 6167)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 835: '

' (ID: 279)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 836: '           ' (ID: 352)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 837: ' #' (ID: 1069)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 838: ' no' (ID: 860)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 839: ' lower' (ID: 6931)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 840: ' bound' (ID: 11608)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 841: ' violation' (ID: 40723)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 842: ' check' (ID: 2371)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 843: ' because' (ID: 2236)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 844: ' x' (ID: 1215)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 845: '_i' (ID: 10853)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 846: ' in' (ID: 306)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 847: ' [' (ID: 723)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 848: '0' (ID: 15)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 849: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 850: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 851: ']

' (ID: 3144)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 852: '       ' (ID: 309)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 853: ' return' (ID: 622)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 854: ' total' (ID: 3609)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 855: '_value' (ID: 6734)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 856: '

' (ID: 279)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 857: 'class' (ID: 1444)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 858: ' Output' (ID: 18315)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 859: 'Writer' (ID: 9561)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 860: ':
' (ID: 734)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 861: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 862: ' def' (ID: 1056)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 863: ' write' (ID: 5067)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 864: '(self' (ID: 2402)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 865: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 866: ' val' (ID: 1459)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 867: ':' (ID: 25)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 868: ' float' (ID: 4428)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 869: ')' (ID: 8)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 870: ' ->' (ID: 2747)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 871: ' None' (ID: 4662)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 872: ':
' (ID: 734)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 873: '       ' (ID: 309)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 874: ' #' (ID: 1069)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 875: ' print' (ID: 2123)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 876: ' with' (ID: 483)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 877: ' ' (ID: 220)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 878: '6' (ID: 21)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 879: ' decimal' (ID: 26964)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 880: ' places' (ID: 9610)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 881: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 882: ' making' (ID: 4137)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 883: ' sure' (ID: 3239)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 884: ' error' (ID: 2915)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 885: ' <' (ID: 464)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 886: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 887: 'e' (ID: 68)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 888: '-' (ID: 12)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 889: '3' (ID: 18)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 890: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 891: '       ' (ID: 309)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 892: ' print' (ID: 2123)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 893: '(f' (ID: 1526)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 894: '"{' (ID: 27510)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 895: 'val' (ID: 1105)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 896: ':.' (ID: 27474)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 897: '6' (ID: 21)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 898: 'f' (ID: 69)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 899: '}")

' (ID: 119200)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 900: 'class' (ID: 1444)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 901: ' Solution' (ID: 20858)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 902: ':
' (ID: 734)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 903: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 904: ' def' (ID: 1056)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 905: ' __' (ID: 2516)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 906: 'init' (ID: 3287)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 907: '__(' (ID: 8241)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 908: 'self' (ID: 1156)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 909: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 910: ' reader' (ID: 10958)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 911: ':' (ID: 25)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 912: ' Input' (ID: 10090)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 913: 'Reader' (ID: 7171)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 914: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 915: ' writer' (ID: 10645)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 916: ':' (ID: 25)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 917: ' Output' (ID: 18315)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 918: 'Writer' (ID: 9561)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 919: ')' (ID: 8)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 920: ' ->' (ID: 2747)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 921: ' None' (ID: 4662)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 922: ':
' (ID: 734)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 923: '       ' (ID: 309)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 924: ' self' (ID: 1051)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 925: '.reader' (ID: 75858)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 926: ' =' (ID: 314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 927: ' reader' (ID: 10958)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 928: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 929: '       ' (ID: 309)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 930: ' self' (ID: 1051)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 931: '.writer' (ID: 69276)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 932: ' =' (ID: 314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 933: ' writer' (ID: 10645)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 934: '

' (ID: 279)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 935: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 936: ' def' (ID: 1056)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 937: ' run' (ID: 2461)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 938: '(self' (ID: 2402)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 939: ')' (ID: 8)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 940: ' ->' (ID: 2747)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 941: ' None' (ID: 4662)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 942: ':
' (ID: 734)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 943: '       ' (ID: 309)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 944: ' N' (ID: 478)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 945: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 946: ' W' (ID: 486)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 947: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 948: ' items' (ID: 4732)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 949: ' =' (ID: 314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 950: ' self' (ID: 1051)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 951: '.reader' (ID: 75858)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 952: '.read' (ID: 7211)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 953: '()
' (ID: 1234)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 954: '       ' (ID: 309)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 955: ' solver' (ID: 63271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 956: ' =' (ID: 314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 957: ' Fraction' (ID: 112108)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 958: 'al' (ID: 280)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 959: 'Kn' (ID: 41445)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 960: 'apsack' (ID: 178559)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 961: 'Solver' (ID: 70484)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 962: '(N' (ID: 10564)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 963: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 964: ' W' (ID: 486)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 965: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 966: ' items' (ID: 4732)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 967: ')
' (ID: 446)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 968: '       ' (ID: 309)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 969: ' ans' (ID: 3345)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 970: ' =' (ID: 314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 971: ' solver' (ID: 63271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 972: '.solve' (ID: 151960)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 973: '()
' (ID: 1234)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 974: '       ' (ID: 309)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 975: ' self' (ID: 1051)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 976: '.writer' (ID: 69276)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 977: '.write' (ID: 6765)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 978: '(ans' (ID: 70054)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 979: ')

' (ID: 1029)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 980: 'if' (ID: 366)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 981: ' __' (ID: 2516)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 982: 'name' (ID: 897)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 983: '__' (ID: 771)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 984: ' ==' (ID: 951)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 985: ' "__' (ID: 27367)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 986: 'main' (ID: 7731)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 987: '__":
' (ID: 49892)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 988: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 989: ' sol' (ID: 1887)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 990: ' =' (ID: 314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 991: ' Solution' (ID: 20858)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 992: '(' (ID: 7)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 993: 'Std' (ID: 37829)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 994: 'Input' (ID: 3275)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 995: 'Reader' (ID: 7171)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 996: '(),' (ID: 2547)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 997: ' Output' (ID: 18315)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 998: 'Writer' (ID: 9561)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 999: '())
' (ID: 4574)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1000: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1001: ' sol' (ID: 1887)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1002: '.run' (ID: 14795)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1003: '()' (ID: 416)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1001
Tokens correctement prédits (1ère position, stricte): 259
Tokens correctement prédits (1ère position, avec adaptation): 284
Tokens correctement prédits (top 10): 591
Précision stricte (1ère position): 25.87%
Précision adaptée (1ère position): 28.37%
Précision (top 10): 59.04%
================================================================================
