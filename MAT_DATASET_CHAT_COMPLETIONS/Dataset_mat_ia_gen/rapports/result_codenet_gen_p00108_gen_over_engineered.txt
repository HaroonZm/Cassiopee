================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:10:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Sequence:
    def __init__(self, elements):
        self.elements = list(elements)
        self.length = len(elements)

    def __eq__(self, other):
        if not isinstance(other, Sequence):
            return False
        return self.elements == other.elements

    def __repr__(self):
        return f"Sequence({self.elements})"

class FrequencyTransformer:
    def transform(self, sequence):
        freq_map = self._count_frequencies(sequence.elements)
        transformed_elements = [freq_map[val] for val in sequence.elements]
        return Sequence(transformed_elements)

    def _count_frequencies(self, elements):
        freq = {}
        for e in elements:
            freq[e] = freq.get(e, 0) + 1
        return freq

class FixedPointFinder:
    def __init__(self, transformer):
        self.transformer = transformer

    def find_fixed_point(self, initial_sequence):
        current_sequence = initial_sequence
        count = 0
        while True:
            next_sequence = self.transformer.transform(current_sequence)
            count += 1
            if next_sequence == current_sequence:
                return count - 1, current_sequence
            current_sequence = next_sequence

class InputOutputHandler:
    def __init__(self):
        self.transformer = FrequencyTransformer()
        self.fixed_point_finder = FixedPointFinder(self.transformer)

    def process(self):
        while True:
            n_line = self._read_nonempty_line()
            if n_line is None:
                break
            n = int(n_line)
            if n == 0:
                break
            sequence_line = self._read_nonempty_line()
            elements = list(map(int, sequence_line.strip().split()))
            seq = Sequence(elements)
            count, fixed_point_seq = self.fixed_point_finder.find_fixed_point(seq)
            print(count)
            print(" ".join(map(str, fixed_point_seq.elements)))

    def _read_nonempty_line(self):
        while True:
            try:
                line = input()
            except EOFError:
                return None
            if line.strip() != '':
                return line
            # else ignore empty lines

def main():
    ioh = InputOutputHandler()
    ioh.process()

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Sequence' (ID: 57144)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.611665666103363
    2. '(' → logprob: -0.861665666103363
    3. '```' → logprob: -3.861665725708008
    4. '.' → logprob: -4.361665725708008
    5. '   ' → logprob: -7.736665725708008
    6. '():' → logprob: -8.611665725708008
    7. '(:' → logprob: -8.861665725708008
    8. ''' → logprob: -8.986665725708008
    9. '(
' → logprob: -9.486665725708008
    10. '`' → logprob: -9.986665725708008

Token 4: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7177971005439758
    2. 'def' (adapté à ' def') → logprob: -0.9677971005439758
    3. '_' → logprob: -3.217797040939331
    4. '```' → logprob: -3.217797040939331
    5. '(' → logprob: -4.21779727935791
    6. ' def' → logprob: -4.59279727935791
    7. ':' → logprob: -4.71779727935791
    8. '\' → logprob: -5.34279727935791
    9. '\n' → logprob: -5.84279727935791
    10. 'pass' → logprob: -5.96779727935791

Token 5: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04790376126766205
    2. '<|end|>' → logprob: -4.797903537750244
    3. 'space' → logprob: -5.172903537750244
    4. ' process' → logprob: -5.672903537750244
    5. ' ' → logprob: -5.797903537750244
    6. '  ' → logprob: -5.922903537750244
    7. '__' → logprob: -6.172903537750244
    8. ' __' → logprob: -6.297903537750244
    9. '_' → logprob: -6.297903537750244
    10. '    ' → logprob: -6.422903537750244

Token 6: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.0683535037969705e-05
    2. ' init' → logprob: -11.50001049041748
    3. 'i' → logprob: -15.37501049041748
    4. '_init' → logprob: -15.62501049041748
    5. 'ini' → logprob: -16.500011444091797
    6. '	init' → logprob: -17.875011444091797
    7. 'in' → logprob: -19.125011444091797
    8. 'inite' → logprob: -20.000011444091797
    9. '_' → logprob: -20.375011444091797
    10. 'innit' → logprob: -20.500011444091797

Token 7: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5213505625724792
    2. '__(' → logprob: -1.021350622177124
    3. '(' → logprob: -3.521350622177124
    4. '_' → logprob: -4.271350383758545
    5. '__(
' → logprob: -7.396350383758545
    6. '__((' → logprob: -7.646350383758545
    7. '(self' → logprob: -7.771350383758545
    8. '_(' → logprob: -8.521350860595703
    9. '```' → logprob: -8.521350860595703
    10. '_token' → logprob: -8.646350860595703

Token 8: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006808687467128038
    2. ' self' → logprob: -5.006808757781982
    3. ')' → logprob: -9.881808280944824
    4. '(self' → logprob: -10.506808280944824
    5. ' ' → logprob: -12.506808280944824
    6. ' )' → logprob: -12.756808280944824
    7. '_self' → logprob: -13.131808280944824
    8. 'space' → logprob: -13.506808280944824
    9. 's' → logprob: -14.506808280944824
    10. ',self' → logprob: -14.756808280944824

Token 9: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.039006393402814865
    2. '(' → logprob: -4.414006233215332
    3. '<|end|>' → logprob: -4.414006233215332
    4. ' )' → logprob: -5.539006233215332
    5. ' ' → logprob: -5.789006233215332
    6. '_' → logprob: -5.789006233215332
    7. '[' → logprob: -6.414006233215332
    8. '.' → logprob: -6.914006233215332
    9. 's' → logprob: -8.164006233215332
    10. ',' → logprob: -8.664006233215332

Token 10: ' elements' (ID: 8632)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3133362829685211
    2. 'self' → logprob: -1.3133362531661987
    3. ' data' → logprob: -10.688336372375488
    4. ')' → logprob: -10.938336372375488
    5. ' )' → logprob: -11.063336372375488
    6. ' sequence' → logprob: -12.063336372375488
    7. 'data' → logprob: -12.313336372375488
    8. ' items' → logprob: -13.188336372375488
    9. 'sequence' → logprob: -13.313336372375488
    10. ' sel' → logprob: -14.063336372375488

Token 11: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0032216834370046854
    2. ')' → logprob: -6.12822151184082
    3. ':' → logprob: -7.50322151184082
    4. ',' → logprob: -8.00322151184082
    5. '):
' → logprob: -9.87822151184082
    6. '=' → logprob: -10.12822151184082
    7. '[' → logprob: -10.87822151184082
    8. '   ' → logprob: -11.62822151184082
    9. '<|end|>' → logprob: -11.75322151184082
    10. ' ):' → logprob: -12.50322151184082

Token 12: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018044814467430115
    2. '   ' → logprob: -4.768044948577881
    3. '    ' → logprob: -6.018044948577881
    4. '(' → logprob: -6.518044948577881
    5. 'self' → logprob: -6.768044948577881
    6. ':' → logprob: -6.768044948577881
    7. '     ' → logprob: -7.518044948577881
    8. '        ' → logprob: -7.768044948577881
    9. '      ' → logprob: -7.893044948577881
    10. ' ' → logprob: -8.268044471740723

Token 13: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1840302050113678
    2. ' self' → logprob: -1.8090301752090454
    3. '       ' → logprob: -5.559030055999756
    4. '   ' → logprob: -8.684030532836914
    5. 's' → logprob: -9.184030532836914
    6. '        ' → logprob: -9.934030532836914
    7. ' ' → logprob: -10.309030532836914
    8. '    ' → logprob: -10.559030532836914
    9. ' ' → logprob: -11.059030532836914
    10. '_' → logprob: -11.809030532836914

Token 14: '.elements' (ID: 58318)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0006583464564755559
    2. '.elements' → logprob: -7.3756585121154785
    3. ' .' → logprob: -11.00065803527832
    4. '.e' → logprob: -12.00065803527832
    5. 'elements' → logprob: -13.00065803527832
    6. '.data' → logprob: -13.62565803527832
    7. '.Elements' → logprob: -14.62565803527832
    8. '._' → logprob: -15.00065803527832
    9. '.append' → logprob: -15.12565803527832
    10. '[' → logprob: -15.12565803527832

Token 15: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7295827865600586
    2. ' =' → logprob: -0.9795827865600586
    3. '.' → logprob: -1.9795827865600586
    4. '[' → logprob: -6.604582786560059
    5. '<|end|>' → logprob: -7.104582786560059
    6. ' .=' → logprob: -7.354582786560059
    7. ' .' → logprob: -7.854582786560059
    8. '.=' → logprob: -8.604582786560059
    9. ' ' → logprob: -8.979582786560059
    10. '[:]' → logprob: -9.229582786560059

Token 16: ' list' (ID: 1562)
  Prédit: ' elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.014164921827614307
    2. 'elements' → logprob: -4.264164924621582
    3. '(elements' → logprob: -13.764164924621582
    4. '_elements' → logprob: -15.264164924621582
    5. '.elements' → logprob: -15.639164924621582
    6. 'element' → logprob: -18.639163970947266
    7. ' Elements' → logprob: -19.139163970947266
    8. 'Elements' → logprob: -19.389163970947266
    9. ' ' → logprob: -19.514163970947266
    10. ' ' → logprob: -19.514163970947266

Token 17: '(elements' (ID: 120313)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001995250815525651
    2. '(elements' → logprob: -6.376995086669922
    3. '()' → logprob: -9.251995086669922
    4. '(
' → logprob: -10.001995086669922
    5. '(

' → logprob: -10.251995086669922
    6. '((' → logprob: -10.751995086669922
    7. '(range' → logprob: -11.126995086669922
    8. '<|end|>' → logprob: -11.251995086669922
    9. '('' → logprob: -12.126995086669922
    10. '(items' → logprob: -12.376995086669922

Token 18: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4849443838757e-06
    2. '[' → logprob: -13.500004768371582
    3. ']' → logprob: -13.875004768371582
    4. ' )' → logprob: -14.000004768371582
    5. '   ' → logprob: -14.500004768371582
    6. ')
' → logprob: -15.000004768371582
    7. '       ' → logprob: -16.125003814697266
    8. ' ' → logprob: -16.375003814697266
    9. '}' → logprob: -16.750003814697266
    10. '<|end|>' → logprob: -17.875003814697266

Token 19: '       ' (ID: 309)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9358327388763428
    2. '[' → logprob: -1.6858327388763428
    3. '
' → logprob: -1.6858327388763428
    4. '   ' → logprob: -2.8108327388763428
    5. '\' → logprob: -3.4358327388763428
    6. '\n' → logprob: -3.6858327388763428
    7. '<|end|>' → logprob: -4.185832977294922
    8. '(' → logprob: -4.310832977294922
    9. ',' → logprob: -4.310832977294922
    10. '    
' → logprob: -4.560832977294922

Token 20: ' self' (ID: 1051)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.4102566242218018
    2. 'def' → logprob: -2.0352566242218018
    3. '<|end|>' → logprob: -2.0352566242218018
    4. ' ' → logprob: -2.5352566242218018
    5. '   ' → logprob: -2.5352566242218018
    6. '
' → logprob: -2.6602566242218018
    7. '\' → logprob: -3.0352566242218018
    8. ',' → logprob: -3.1602566242218018
    9. '\n' → logprob: -3.1602566242218018
    10. ')' → logprob: -3.6602566242218018

Token 21: '.length' (ID: 3116)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0020083377603441477
    2. '.length' → logprob: -7.252008438110352
    3. '._' → logprob: -7.627008438110352
    4. '.size' → logprob: -8.377008438110352
    5. '.count' → logprob: -8.752008438110352
    6. '_len' → logprob: -9.127008438110352
    7. '_length' → logprob: -9.252008438110352
    8. '.len' → logprob: -9.752008438110352
    9. '_' → logprob: -10.252008438110352
    10. '.__' → logprob: -10.752008438110352

Token 22: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4415789842605591
    2. ' =' → logprob: -1.066578984260559
    3. '_' → logprob: -4.5665788650512695
    4. ' ' → logprob: -6.6915788650512695
    5. '<|end|>' → logprob: -6.9415788650512695
    6. '_=' → logprob: -10.19157886505127
    7. '.' → logprob: -10.44157886505127
    8. ')' → logprob: -10.44157886505127
    9. '   ' → logprob: -10.94157886505127
    10. '_space' → logprob: -11.19157886505127

Token 23: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.002489214763045311
    2. 'len' → logprob: -6.00248908996582
    3. '(len' → logprob: -12.25248908996582
    4. '=len' → logprob: -12.37748908996582
    5. '	len' → logprob: -13.00248908996582
    6. ' self' → logprob: -13.75248908996582
    7. ' ' → logprob: -14.50248908996582
    8. '0' → logprob: -14.87748908996582
    9. '[len' → logprob: -15.75248908996582
    10. ' ' → logprob: -16.12748908996582

Token 24: '(elements' (ID: 120313)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.38967496156692505
    2. '(' → logprob: -1.1396749019622803
    3. '(elements' → logprob: -5.889675140380859
    4. '(
' → logprob: -11.26467514038086
    5. '(

' → logprob: -12.13967514038086
    6. '(this' → logprob: -12.38967514038086
    7. 'self' → logprob: -12.38967514038086
    8. '(s' → logprob: -13.38967514038086
    9. 'elements' → logprob: -14.13967514038086
    10. ' (' → logprob: -14.38967514038086

Token 25: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ' )' → logprob: -14.000001907348633
    3. ')
' → logprob: -14.500001907348633
    4. '   ' → logprob: -14.750001907348633
    5. '       ' → logprob: -16.625001907348633
    6. '`)' → logprob: -16.750001907348633
    7. '}' → logprob: -17.125001907348633
    8. '```' → logprob: -17.500001907348633
    9. '#' → logprob: -17.625001907348633
    10. '()' → logprob: -17.750001907348633

Token 26: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23791025578975677
    2. '   ' → logprob: -2.487910270690918
    3. '\n' → logprob: -3.487910270690918
    4. ' 
' → logprob: -3.487910270690918
    5. '    
' → logprob: -3.862910270690918
    6. '\' → logprob: -4.487910270690918
    7. ' ' → logprob: -4.737910270690918
    8. '  
' → logprob: -4.737910270690918
    9. '' → logprob: -5.862910270690918
    10. '```' → logprob: -6.362910270690918

Token 27: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.4963997006416321
    2. 'd' → logprob: -0.9963997006416321
    3. ' def' → logprob: -4.496399879455566
    4. '   ' → logprob: -5.121399879455566
    5. ' ' → logprob: -5.496399879455566
    6. '    
' → logprob: -8.246399879455566
    7. 'de' → logprob: -8.746399879455566
    8. ' 
' → logprob: -8.871399879455566
    9. 'a' → logprob: -9.871399879455566
    10. ' d' → logprob: -9.996399879455566

Token 28: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.6153624057769775
    2. ' ' → logprob: -0.8653624057769775
    3. '_' → logprob: -3.4903624057769775
    4. '__' → logprob: -5.865362167358398
    5. ' _' → logprob: -6.490362167358398
    6. ' append' → logprob: -6.615362167358398
    7. ' ' → logprob: -7.365362167358398
    8. ' iter' → logprob: -7.865362167358398
    9. ' []' → logprob: -8.490362167358398
    10. ' `' → logprob: -8.740362167358398

Token 29: 'eq' (ID: 21725)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.11868180334568024
    2. 'l' → logprob: -2.4936819076538086
    3. 'iter' → logprob: -3.9936819076538086
    4. 'le' → logprob: -5.118681907653809
    5. 'i' → logprob: -6.243681907653809
    6. 'getitem' → logprob: -6.368681907653809
    7. 'repr' → logprob: -7.993681907653809
    8. 'str' → logprob: -7.993681907653809
    9. 'eq' → logprob: -8.868681907653809
    10. 'init' → logprob: -9.118681907653809

Token 30: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.569764256477356
    2. '_' → logprob: -1.319764256477356
    3. '__(' → logprob: -1.819764256477356
    4. '(' → logprob: -5.569764137268066
    5. '_(' → logprob: -6.944764137268066
    6. '(self' → logprob: -8.944764137268066
    7. '___' → logprob: -9.569764137268066
    8. '__(
' → logprob: -10.444764137268066
    9. '__((' → logprob: -10.944764137268066
    10. '__('' → logprob: -11.194764137268066

Token 31: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00010902655776590109
    2. ' self' → logprob: -9.75010871887207
    3. 'other' → logprob: -10.00010871887207
    4. ')' → logprob: -13.25010871887207
    5. '   ' → logprob: -13.62510871887207
    6. ' ' → logprob: -13.75010871887207
    7. '       ' → logprob: -14.62510871887207
    8. 's' → logprob: -15.00010871887207
    9. 'sel' → logprob: -16.37510871887207
    10. '(self' → logprob: -16.50010871887207

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026734720915555954
    2. ' ,' → logprob: -3.6517348289489746
    3. ',self' → logprob: -8.276734352111816
    4. 'self' → logprob: -9.776734352111816
    5. ',s' → logprob: -9.901734352111816
    6. '_,' → logprob: -10.276734352111816
    7. ')' → logprob: -11.776734352111816
    8. '__,' → logprob: -12.651734352111816
    9. ',value' → logprob: -12.651734352111816
    10. ',p' → logprob: -12.776734352111816

Token 33: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.2017730176448822
    2. ' other' → logprob: -1.7017730474472046
    3. 'self' → logprob: -7.951773166656494
    4. ' self' → logprob: -12.076772689819336
    5. 'o' → logprob: -14.576772689819336
    6. 'Other' → logprob: -14.951772689819336
    7. '(other' → logprob: -15.576772689819336
    8. ' oth' → logprob: -15.576772689819336
    9. ' o' → logprob: -15.701772689819336
    10. 'othe' → logprob: -15.826772689819336

Token 34: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07579122483730316
    2. ')' → logprob: -2.700791120529175
    3. ' ):' → logprob: -5.325791358947754
    4. ' )' → logprob: -7.325791358947754
    5. ':' → logprob: -8.575791358947754
    6. '):
' → logprob: -9.575791358947754
    7. ',' → logprob: -10.075791358947754
    8. ':)' → logprob: -12.325791358947754
    9. 'self' → logprob: -13.700791358947754
    10. ')**' → logprob: -13.825791358947754

Token 35: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2018795907497406
    2. '    ' → logprob: -3.0768795013427734
    3. '<|end|>' → logprob: -3.3268795013427734
    4. ' ' → logprob: -3.5768795013427734
    5. ' (' → logprob: -3.8268795013427734
    6. '(' → logprob: -4.451879501342773
    7. ' return' → logprob: -4.951879501342773
    8. '   ' → logprob: -4.951879501342773
    9. ':' → logprob: -5.326879501342773
    10. '        ' → logprob: -5.451879501342773

Token 36: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03194042295217514
    2. 'self' → logprob: -5.406940460205078
    3. ' self' → logprob: -5.531940460205078
    4. 's' → logprob: -5.906940460205078
    5. '    ' → logprob: -5.906940460205078
    6. '       ' → logprob: -6.031940460205078
    7. '   ' → logprob: -6.406940460205078
    8. '(' → logprob: -6.656940460205078
    9. ' (' → logprob: -6.656940460205078
    10. ' isinstance' → logprob: -6.656940460205078

Token 37: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.11540509015321732
    2. ' ' → logprob: -2.7404050827026367
    3. ' isinstance' → logprob: -3.3654050827026367
    4. ' self' → logprob: -4.990405082702637
    5. 'not' → logprob: -5.865405082702637
    6. ' ' → logprob: -8.865405082702637
    7. 'self' → logprob: -9.365405082702637
    8. '  ' → logprob: -11.240405082702637
    9. '	not' → logprob: -12.365405082702637
    10. ' hasattr' → logprob: -12.365405082702637

Token 38: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.0001305950863752514
    2. 'is' → logprob: -9.125130653381348
    3. ' hasattr' → logprob: -10.750130653381348
    4. ' is' → logprob: -16.00012969970703
    5. ' iss' → logprob: -18.12512969970703
    6. ' ' → logprob: -18.37512969970703
    7. '(is' → logprob: -18.87512969970703
    8. 'iss' → logprob: -19.75012969970703
    9. ' self' → logprob: -19.87512969970703
    10. ' ' → logprob: -19.87512969970703

Token 39: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.005274549592286348
    2. '(' → logprob: -5.255274772644043
    3. 'other' → logprob: -10.380274772644043
    4. ' other' → logprob: -11.630274772644043
    5. '(self' → logprob: -15.005274772644043
    6. '(o' → logprob: -15.255274772644043
    7. '(
' → logprob: -16.380273818969727
    8. 'Other' → logprob: -16.505273818969727
    9. '(object' → logprob: -17.755273818969727
    10. ' (' → logprob: -18.005273818969727

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008369080605916679
    2. '(other' → logprob: -7.2508368492126465
    3. ' ,' → logprob: -9.375837326049805
    4. 'other' → logprob: -10.375837326049805
    5. '(' → logprob: -11.625837326049805
    6. ')' → logprob: -14.500837326049805
    7. ' ' → logprob: -14.875837326049805
    8. '(self' → logprob: -15.000837326049805
    9. ' other' → logprob: -15.250837326049805
    10. ',self' → logprob: -15.375837326049805

Token 41: ' Sequence' (ID: 57144)
  Prédit: ' Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Sequence' → logprob: -0.25193196535110474
    2. 'Sequence' → logprob: -1.50193190574646
    3. 'self' → logprob: -13.501932144165039
    4. ' self' → logprob: -13.876932144165039
    5. ' sequence' → logprob: -15.376932144165039
    6. ' ' → logprob: -15.501932144165039
    7. '.Sequence' → logprob: -17.12693214416504
    8. '_sequence' → logprob: -17.25193214416504
    9. ' type' → logprob: -17.75193214416504
    10. 'Sequ' → logprob: -17.87693214416504

Token 42: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02316594123840332
    2. '):
' → logprob: -3.8981659412384033
    3. ')' → logprob: -6.273165702819824
    4. ' ):' → logprob: -7.273165702819824
    5. '):
' → logprob: -10.773165702819824
    6. ' ):
' → logprob: -11.773165702819824
    7. ' )' → logprob: -12.898165702819824
    8. '       ' → logprob: -12.898165702819824
    9. ':' → logprob: -13.148165702819824
    10. '):

' → logprob: -13.523165702819824

Token 43: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17107191681861877
    2. ':' → logprob: -2.046072006225586
    3. ':return' → logprob: -4.171072006225586
    4. '            ' → logprob: -4.921072006225586
    5. ' return' → logprob: -6.796072006225586
    6. ' or' → logprob: -7.046072006225586
    7. ' :' → logprob: -7.046072006225586
    8. '               ' → logprob: -7.421072006225586
    9. 'return' → logprob: -7.546072006225586
    10. ':
' → logprob: -8.046072006225586

Token 44: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.14726288616657257
    2. 'return' (adapté à ' return') → logprob: -2.2722628116607666
    3. '           ' → logprob: -3.3972628116607666
    4. ':return' → logprob: -9.147262573242188
    5. '            ' → logprob: -9.522262573242188
    6. '```' → logprob: -10.022262573242188
    7. ' ' → logprob: -10.272262573242188
    8. 'False' → logprob: -10.397262573242188
    9. ' ' → logprob: -10.522262573242188
    10. ' 
' → logprob: -11.147262573242188

Token 45: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.47413697838783264
    2. 'False' → logprob: -0.9741369485855103
    3. ' Not' → logprob: -9.974137306213379
    4. 'Not' → logprob: -11.349137306213379
    5. '(False' → logprob: -13.599137306213379
    6. '    ' → logprob: -15.974137306213379
    7. '=False' → logprob: -16.849136352539062
    8. '_false' → logprob: -17.474136352539062
    9. '.False' → logprob: -17.974136352539062
    10. '   ' → logprob: -17.974136352539062

Token 46: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.750102698802948
    2. '
' → logprob: -1.0001027584075928
    3. '<|end|>' → logprob: -2.5001027584075928
    4. '\n' → logprob: -3.1251027584075928
    5. '\' → logprob: -5.125102519989014
    6. '' → logprob: -5.250102519989014
    7. ' 
' → logprob: -5.375102519989014
    8. '        
' → logprob: -5.500102519989014
    9. '        ' → logprob: -6.125102519989014
    10. '  
' → logprob: -6.625102519989014

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021840540692210197
    2. '
' → logprob: -4.146840572357178
    3. '        
' → logprob: -6.271840572357178
    4. '\n' → logprob: -7.021840572357178
    5. '<|end|>' → logprob: -7.021840572357178
    6. ' 
' → logprob: -7.521840572357178
    7. '        ' → logprob: -7.771840572357178
    8. '    
' → logprob: -8.52184009552002
    9. '    ' → logprob: -9.14684009552002
    10. '   ' → logprob: -9.14684009552002

Token 48: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5771350264549255
    2. '
' → logprob: -1.7021350860595703
    3. ' 
' → logprob: -2.0771350860595703
    4. ' return' → logprob: -3.2021350860595703
    5. '<|end|>' → logprob: -3.7021350860595703
    6. '        
' → logprob: -4.07713508605957
    7. 'return' (adapté à ' return') → logprob: -4.32713508605957
    8. '        ' → logprob: -4.82713508605957
    9. ' ' → logprob: -4.95213508605957
    10. '\n' → logprob: -5.45213508605957

Token 49: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.005234713666141033
    2. 'self' → logprob: -5.255234718322754
    3. ' ' → logprob: -14.505234718322754
    4. '(self' → logprob: -15.755234718322754
    5. '	self' → logprob: -16.755233764648438
    6. '[self' → logprob: -17.005233764648438
    7. ' all' → logprob: -17.130233764648438
    8. ' ' → logprob: -17.380233764648438
    9. '_self' → logprob: -17.755233764648438
    10. 'Self' → logprob: -17.880233764648438

Token 50: '.elements' (ID: 58318)
  Prédit: '.elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.elements' → logprob: -0.004148680251091719
    2. '.' → logprob: -5.504148483276367
    3. '.length' → logprob: -10.254148483276367
    4. ' .' → logprob: -10.629148483276367
    5. 'elements' → logprob: -12.129148483276367
    6. '.Elements' → logprob: -14.004148483276367
    7. '.items' → logprob: -14.129148483276367
    8. '.eql' → logprob: -14.129148483276367
    9. '.e' → logprob: -14.879148483276367
    10. '.values' → logprob: -15.004148483276367

Token 51: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07889761030673981
    2. '==' → logprob: -2.578897714614868
    3. '=' → logprob: -12.828897476196289
    4. ' ' → logprob: -13.328897476196289
    5. '[:]' → logprob: -13.953897476196289
    6. '[' → logprob: -14.203897476196289
    7. '==
' → logprob: -14.828897476196289
    8. ')==' → logprob: -15.078897476196289
    9. ' =' → logprob: -15.328897476196289
    10. '.' → logprob: -15.328897476196289

Token 52: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.005234356038272381
    2. 'other' → logprob: -5.255234241485596
    3. '(other' → logprob: -15.505234718322754
    4. ' oth' → logprob: -15.755234718322754
    5. '.other' → logprob: -16.505233764648438
    6. '_other' → logprob: -17.380233764648438
    7. ' o' → logprob: -17.505233764648438
    8. ' other's' → logprob: -18.630233764648438
    9. ' ' → logprob: -19.005233764648438
    10. ' ' → logprob: -19.505233764648438

Token 53: '.elements' (ID: 58318)
  Prédit: '.elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.elements' → logprob: -0.2020905762910843
    2. '.' → logprob: -1.7020906209945679
    3. 'elements' → logprob: -7.952090740203857
    4. ' .' → logprob: -8.0770902633667
    5. '.Elements' → logprob: -13.0770902633667
    6. '`.' → logprob: -13.8270902633667
    7. '.values' → logprob: -14.0770902633667
    8. '.features' → logprob: -14.2020902633667
    9. '.sequence' → logprob: -14.3270902633667
    10. '.
' → logprob: -14.3270902633667

Token 54: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5538633465766907
    2. '<|end|>' → logprob: -1.428863286972046
    3. '   ' → logprob: -2.678863286972046
    4. '    
' → logprob: -3.178863286972046
    5. ' 
' → logprob: -3.678863286972046
    6. '\' → logprob: -4.553863525390625
    7. '.' → logprob: -4.803863525390625
    8. '\n' → logprob: -4.803863525390625
    9. '

' → logprob: -5.053863525390625
    10. ' ' → logprob: -6.053863525390625

Token 55: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4441429674625397
    2. '   ' → logprob: -1.3191429376602173
    3. '    
' → logprob: -3.194143056869507
    4. '<|end|>' → logprob: -3.694143056869507
    5. ' 
' → logprob: -4.819142818450928
    6. 'def' → logprob: -5.569142818450928
    7. '  
' → logprob: -5.819142818450928
    8. '```' → logprob: -6.069142818450928
    9. ' ' → logprob: -6.319142818450928
    10. '

' → logprob: -6.944142818450928

Token 56: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.18809349834918976
    2. '   ' → logprob: -2.063093423843384
    3. ' def' → logprob: -3.188093423843384
    4. ' ' → logprob: -6.188093662261963
    5. '    
' → logprob: -7.563093662261963
    6. '```' → logprob: -9.063093185424805
    7. '    ' → logprob: -9.188093185424805
    8. ' 
' → logprob: -9.438093185424805
    9. '  ' → logprob: -9.938093185424805
    10. '    

' → logprob: -10.188093185424805

Token 57: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.006490950006991625
    2. '__' → logprob: -6.131491184234619
    3. ' ' → logprob: -6.256491184234619
    4. ' len' → logprob: -6.256491184234619
    5. ' ' → logprob: -8.756490707397461
    6. ' _' → logprob: -9.631490707397461
    7. ' length' → logprob: -9.881490707397461
    8. ' def' → logprob: -10.256490707397461
    9. ' []' → logprob: -10.506490707397461
    10. 'len' → logprob: -10.756490707397461

Token 58: 'repr' (ID: 67002)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0183385219424963
    2. 'iter' → logprob: -4.893338680267334
    3. 'lt' → logprob: -5.893338680267334
    4. 'getitem' → logprob: -6.143338680267334
    5. 'repr' → logprob: -6.268338680267334
    6. 'hash' → logprob: -6.268338680267334
    7. 'add' → logprob: -7.018338680267334
    8. 'contains' → logprob: -7.393338680267334
    9. 'eq' → logprob: -8.393338203430176
    10. 'str' → logprob: -9.143338203430176

Token 59: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.5801225304603577
    2. '__' → logprob: -0.8301225304603577
    3. '__('' → logprob: -5.955122470855713
    4. '__(
' → logprob: -7.205122470855713
    5. '__((' → logprob: -7.455122470855713
    6. '__("' → logprob: -8.955122947692871
    7. '__(*' → logprob: -10.080122947692871
    8. '(' → logprob: -10.705122947692871
    9. '___' → logprob: -10.955122947692871
    10. '_' → logprob: -11.080122947692871

Token 60: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.869017852295656e-06
    2. ')' → logprob: -12.000006675720215
    3. ' self' → logprob: -14.625006675720215
    4. '(self' → logprob: -16.37500762939453
    5. '
' → logprob: -18.00000762939453
    6. 's' → logprob: -18.25000762939453
    7. '   ' → logprob: -18.50000762939453
    8. '       ' → logprob: -18.50000762939453
    9. 'Self' → logprob: -18.87500762939453
    10. '

' → logprob: -18.87500762939453

Token 61: '):
' (ID: 1883)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.19987966120243073
    2. '__)' → logprob: -1.8248796463012695
    3. '__,' → logprob: -4.6998796463012695
    4. '__(' → logprob: -5.6998796463012695
    5. ')' → logprob: -6.0748796463012695
    6. '__('' → logprob: -6.5748796463012695
    7. 'self' → logprob: -6.9498796463012695
    8. '__:' → logprob: -7.1998796463012695
    9. ')__' → logprob: -7.6998796463012695
    10. '__((' → logprob: -8.32487964630127

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021021578868385404
    2. 'return' → logprob: -9.37520980834961
    3. ' return' → logprob: -9.62520980834961
    4. ' f' → logprob: -10.37520980834961
    5. 'f' → logprob: -11.62520980834961
    6. ''' → logprob: -12.12520980834961
    7. '   ' → logprob: -12.50020980834961
    8. '           ' → logprob: -12.50020980834961
    9. '"' → logprob: -13.37520980834961
    10. '    ' → logprob: -13.37520980834961

Token 63: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33238640427589417
    2. 'return' (adapté à ' return') → logprob: -1.7073863744735718
    3. ' return' → logprob: -2.3323864936828613
    4. '   ' → logprob: -6.707386493682861
    5. ''' → logprob: -6.957386493682861
    6. ' f' → logprob: -7.332386493682861
    7. 'f' → logprob: -7.332386493682861
    8. '"' → logprob: -7.332386493682861
    9. 'r' → logprob: -9.082386016845703
    10. '`' → logprob: -10.207386016845703

Token 64: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.11529898643493652
    2. 'f' → logprob: -2.2402989864349365
    3. ''' → logprob: -6.490299224853516
    4. '"' → logprob: -7.115299224853516
    5. ''f' → logprob: -9.740299224853516
    6. ' '' → logprob: -10.740299224853516
    7. ' ' → logprob: -10.865299224853516
    8. ' repr' → logprob: -11.490299224853516
    9. ' "' → logprob: -12.115299224853516
    10. ' ' → logprob: -12.240299224853516

Token 65: '"' (ID: 1)
  Prédit: ''S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''S' → logprob: -1.3008416891098022
    2. '"' → logprob: -1.5508416891098022
    3. '(f' → logprob: -1.5508416891098022
    4. ''' → logprob: -1.8008416891098022
    5. '(' → logprob: -2.925841808319092
    6. 'f' → logprob: -2.925841808319092
    7. ''f' → logprob: -4.425841808319092
    8. ''s' → logprob: -5.050841808319092
    9. ''(' → logprob: -5.050841808319092
    10. '"S' → logprob: -6.425841808319092

Token 66: 'Sequence' (ID: 17333)
  Prédit: 'Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -7.107425062713446e-06
    2. '<' → logprob: -12.375006675720215
    3. 'Sequ' → logprob: -13.000006675720215
    4. 'Seq' → logprob: -15.375006675720215
    5. ' Sequence' → logprob: -15.875006675720215
    6. '{' → logprob: -16.25000762939453
    7. 'sequence' → logprob: -17.87500762939453
    8. '<class' → logprob: -18.12500762939453
    9. '"' → logprob: -18.25000762939453
    10. '_sequence' → logprob: -19.12500762939453

Token 67: '({' (ID: 3972)
  Prédit: '({'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.045195598155260086
    2. '(' → logprob: -3.4201955795288086
    3. '{' → logprob: -5.045195579528809
    4. '(self' → logprob: -5.670195579528809
    5. '(elements' → logprob: -6.545195579528809
    6. '([' → logprob: -10.295195579528809
    7. '([{' → logprob: -10.670195579528809
    8. '({
' → logprob: -10.670195579528809
    9. '('{' → logprob: -11.170195579528809
    10. '(f' → logprob: -11.170195579528809

Token 68: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00018339496455155313
    2. 'repr' → logprob: -9.12518310546875
    3. ' self' → logprob: -9.75018310546875
    4. '{' → logprob: -11.50018310546875
    5. '[self' → logprob: -13.25018310546875
    6. 'sel' → logprob: -13.75018310546875
    7. ')' → logprob: -14.50018310546875
    8. '',' → logprob: -14.50018310546875
    9. '')' → logprob: -14.50018310546875
    10. ''' → logprob: -15.37518310546875

Token 69: '.elements' (ID: 58318)
  Prédit: '.elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.elements' → logprob: -4.251091377227567e-05
    2. '.' → logprob: -10.250042915344238
    3. 'elements' → logprob: -12.750042915344238
    4. ' .' → logprob: -13.125042915344238
    5. '.Elements' → logprob: -14.500042915344238
    6. '.e' → logprob: -15.000042915344238
    7. ').' → logprob: -15.250042915344238
    8. '.contents' → logprob: -15.750042915344238
    9. 'self' → logprob: -16.000041961669922
    10. '}.' → logprob: -16.250041961669922

Token 70: '})' (ID: 9263)
  Prédit: '})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.0007136239437386394
    2. ')' → logprob: -7.37571382522583
    3. ')}' → logprob: -10.125713348388672
    4. ')"' → logprob: -10.750713348388672
    5. '])' → logprob: -11.000713348388672
    6. ' })' → logprob: -12.500713348388672
    7. '))' → logprob: -13.000713348388672
    8. '}' → logprob: -14.125713348388672
    9. '}")' → logprob: -14.375713348388672
    10. '   ' → logprob: -15.250713348388672

Token 71: '"

' (ID: 2678)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3559977412223816
    2. '   ' → logprob: -1.3559978008270264
    3. '<|end|>' → logprob: -4.105997562408447
    4. '    
' → logprob: -4.480997562408447
    5. 'def' → logprob: -5.730997562408447
    6. '```' → logprob: -6.480997562408447
    7. '<|end|>' → logprob: -6.480997562408447
    8. '[' → logprob: -6.855997562408447
    9. ' 
' → logprob: -6.980997562408447
    10. '\n' → logprob: -7.480997562408447

Token 73: ' Frequency' (ID: 79273)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03168800473213196
    2. ' Sequence' → logprob: -3.7816879749298096
    3. ' Space' → logprob: -5.031688213348389
    4. ' ' → logprob: -8.28168773651123
    5. 'Sequence' → logprob: -8.53168773651123
    6. ' Token' → logprob: -8.53168773651123
    7. ' Basic' → logprob: -8.78168773651123
    8. ' Se' → logprob: -8.90668773651123
    9. ' Python' → logprob: -9.15668773651123
    10. ' User' → logprob: -9.78168773651123

Token 74: 'Transformer' (ID: 48916)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3178778290748596
    2. '(' → logprob: -1.9428777694702148
    3. 'Counter' → logprob: -2.192877769470215
    4. 'Distribution' → logprob: -5.317877769470215
    5. 'Analyzer' → logprob: -5.942877769470215
    6. '():' → logprob: -5.942877769470215
    7. 'Estimator' → logprob: -6.442877769470215
    8. 'Map' → logprob: -7.192877769470215
    9. 'Tracker' → logprob: -7.192877769470215
    10. 'Table' → logprob: -7.567877769470215

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005475530633702874
    2. ':
' → logprob: -7.875547409057617
    3. ' :' → logprob: -9.250547409057617
    4. '(' → logprob: -9.750547409057617
    5. ':def' → logprob: -12.625547409057617
    6. '):' → logprob: -12.750547409057617
    7. '():' → logprob: -13.375547409057617
    8. '(object' → logprob: -13.375547409057617
    9. '   ' → logprob: -13.625547409057617
    10. '<|end|>' → logprob: -14.000547409057617

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02228832058608532
    2. ' def' → logprob: -3.8972883224487305
    3. '(' → logprob: -7.3972883224487305
    4. '    
' → logprob: -7.6472883224487305
    5. 'def' → logprob: -8.27228832244873
    6. ':' → logprob: -9.64728832244873
    7. '    ' → logprob: -9.64728832244873
    8. ' 
' → logprob: -9.64728832244873
    9. '
' → logprob: -10.14728832244873
    10. '	def' → logprob: -10.27228832244873

Token 77: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.011403471231460571
    2. 'def' (adapté à ' def') → logprob: -4.511403560638428
    3. '   ' → logprob: -8.01140308380127
    4. '    ' → logprob: -11.01140308380127
    5. ' ' → logprob: -12.01140308380127
    6. '  ' → logprob: -14.88640308380127
    7. '	def' → logprob: -15.51140308380127
    8. ' ' → logprob: -15.63640308380127
    9. '```' → logprob: -16.136404037475586
    10. ' de' → logprob: -16.386404037475586

Token 78: ' transform' (ID: 7118)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.43646642565727234
    2. ' __' → logprob: -1.0614664554595947
    3. ' _' → logprob: -5.686466217041016
    4. '_' → logprob: -6.186466217041016
    5. '__' → logprob: -7.186466217041016
    6. ' init' → logprob: -7.436466217041016
    7. ' def' → logprob: -8.436466217041016
    8. ' convert' → logprob: -8.936466217041016
    9. '_init' → logprob: -9.061466217041016
    10. 'init' → logprob: -9.436466217041016

Token 79: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07056228071451187
    2. '(' → logprob: -2.6955623626708984
    3. ' (' → logprob: -7.820562362670898
    4. 'self' → logprob: -9.445562362670898
    5. '_' → logprob: -10.445562362670898
    6. '(s' → logprob: -10.570562362670898
    7. '_sequence' → logprob: -10.695562362670898
    8. '(
' → logprob: -10.945562362670898
    9. '_self' → logprob: -11.570562362670898
    10. '_(' → logprob: -11.820562362670898

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05001635104417801
    2. ' ,' → logprob: -3.300016403198242
    3. ')' → logprob: -4.675016403198242
    4. 's' → logprob: -7.300016403198242
    5. 'self' → logprob: -7.925016403198242
    6. '.' → logprob: -8.050016403198242
    7. '_' → logprob: -8.425016403198242
    8. '):' → logprob: -8.425016403198242
    9. ',self' → logprob: -8.800016403198242
    10. ' )' → logprob: -9.300016403198242

Token 81: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.31964701414108276
    2. ' self' → logprob: -2.0696470737457275
    3. ' sequences' → logprob: -2.0696470737457275
    4. 'sequence' → logprob: -4.819646835327148
    5. ' elements' → logprob: -5.319646835327148
    6. 'self' → logprob: -5.444646835327148
    7. ' frequencies' → logprob: -6.194646835327148
    8. ' frequency' → logprob: -7.194646835327148
    9. ' data' → logprob: -8.319646835327148
    10. ' )' → logprob: -8.319646835327148

Token 82: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03783031553030014
    2. ',' → logprob: -3.537830352783203
    3. ':' → logprob: -5.162830352783203
    4. ' ):' → logprob: -7.287830352783203
    5. ')' → logprob: -7.412830352783203
    6. '.' → logprob: -7.412830352783203
    7. '):
' → logprob: -8.412830352783203
    8. '[' → logprob: -10.162830352783203
    9. ' ,' → logprob: -10.537830352783203
    10. '.sequence' → logprob: -10.662830352783203

Token 83: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019737191032618284
    2. '        ' → logprob: -7.501973628997803
    3. '(' → logprob: -8.001974105834961
    4. '{' → logprob: -8.751974105834961
    5. '[' → logprob: -8.751974105834961
    6. '   ' → logprob: -9.126974105834961
    7. '.' → logprob: -9.376974105834961
    8. ':' → logprob: -9.876974105834961
    9. '      ' → logprob: -9.876974105834961
    10. '    ' → logprob: -9.876974105834961

Token 84: ' freq' (ID: 42078)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.30824413895606995
    2. 'from' → logprob: -2.058244228363037
    3. ' from' → logprob: -3.308244228363037
    4. ' freq' → logprob: -3.558244228363037
    5. '       ' → logprob: -4.058244228363037
    6. ' frequencies' → logprob: -4.683244228363037
    7. ' frequency' → logprob: -4.808244228363037
    8. '        ' → logprob: -5.183244228363037
    9. 'frequency' → logprob: -5.183244228363037
    10. ' counter' → logprob: -5.683244228363037

Token 85: '_map' (ID: 11824)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.3758009076118469
    2. 's' → logprob: -1.2508008480072021
    3. '_' → logprob: -3.750800848007202
    4. 'ency' → logprob: -7.000801086425781
    5. '_map' → logprob: -7.375801086425781
    6. '(' → logprob: -7.500801086425781
    7. ' ' → logprob: -8.125801086425781
    8. ')' → logprob: -8.625801086425781
    9. ' =' → logprob: -9.000801086425781
    10. '.' → logprob: -9.125801086425781

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008840994909405708
    2. '=' → logprob: -4.758841037750244
    3. ' ' → logprob: -8.758840560913086
    4. '(' → logprob: -10.383840560913086
    5. '_' → logprob: -11.258840560913086
    6. '   ' → logprob: -11.383840560913086
    7. 's' → logprob: -13.008840560913086
    8. ')' → logprob: -13.133840560913086
    9. '  ' → logprob: -13.508840560913086
    10. '[' → logprob: -13.508840560913086

Token 87: ' self' (ID: 1051)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.3868781626224518
    2. ' {}' → logprob: -1.1368781328201294
    3. ' defaultdict' → logprob: -12.88687801361084
    4. ' {}
' → logprob: -13.13687801361084
    5. '{}
' → logprob: -13.88687801361084
    6. '{' → logprob: -14.38687801361084
    7. ' dict' → logprob: -15.01187801361084
    8. 'dict' → logprob: -15.13687801361084
    9. ' ' → logprob: -15.51187801361084
    10. '={}' → logprob: -16.511878967285156

Token 88: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0430179201066494
    2. '.elements' → logprob: -3.293017864227295
    3. ' .' → logprob: -5.668017864227295
    4. 'elements' → logprob: -7.043017864227295
    5. '._' → logprob: -8.168018341064453
    6. '.frequency' → logprob: -8.793018341064453
    7. '.e' → logprob: -10.543018341064453
    8. '.
' → logprob: -10.668018341064453
    9. '.freq' → logprob: -10.918018341064453
    10. '.Elements' → logprob: -10.918018341064453

Token 89: 'count' (ID: 5420)
  Prédit: 'frequency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frequency' → logprob: -0.8351141214370728
    2. 'count' → logprob: -1.2101141214370728
    3. 'get' → logprob: -2.210114002227783
    4. 'calculate' → logprob: -2.710114002227783
    5. 'freq' → logprob: -3.710114002227783
    6. 'compute' → logprob: -3.835114002227783
    7. 'build' → logprob: -4.710114002227783
    8. 'counter' → logprob: -4.960114002227783
    9. 'fre' → logprob: -5.085114002227783
    10. 'create' → logprob: -5.460114002227783

Token 90: '_f' (ID: 1337)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5033148527145386
    2. '(' → logprob: -1.3783148527145386
    3. '_elements' → logprob: -2.503314971923828
    4. 's' → logprob: -3.753314971923828
    5. '_tokens' → logprob: -3.753314971923828
    6. '_frequency' → logprob: -5.378314971923828
    7. '<|end|>' → logprob: -6.128314971923828
    8. '_items' → logprob: -6.753314971923828
    9. '_occ' → logprob: -6.753314971923828
    10. ' (' → logprob: -7.378314971923828

Token 91: 'requencies' (ID: 158902)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5893438458442688
    2. 'requencies' → logprob: -1.464343786239624
    3. 'req' → logprob: -2.214343786239624
    4. 'requency' → logprob: -2.464343786239624
    5. 're' → logprob: -4.339344024658203
    6. 'requ' → logprob: -5.839344024658203
    7. 'elements' → logprob: -6.589344024658203
    8. 'e' → logprob: -7.464344024658203
    9. 'requent' → logprob: -7.464344024658203
    10. '```' → logprob: -8.464344024658203

Token 92: '(sequence' (ID: 129991)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25310787558555603
    2. '(sequence' → logprob: -1.5031079053878784
    3. ' (' → logprob: -6.878108024597168
    4. '(
' → logprob: -9.753108024597168
    5. '()' → logprob: -10.128108024597168
    6. '(s' → logprob: -11.003108024597168
    7. '(self' → logprob: -11.253108024597168
    8. '(seq' → logprob: -11.628108024597168
    9. '(sentence' → logprob: -13.128108024597168
    10. '(

' → logprob: -13.378108024597168

Token 93: '.elements' (ID: 58318)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008827168494462967
    2. '.elements' → logprob: -5.258827209472656
    3. '.' → logprob: -6.133827209472656
    4. ' )' → logprob: -7.008827209472656
    5. '.)' → logprob: -8.258827209472656
    6. ' ' → logprob: -9.383827209472656
    7. '   ' → logprob: -9.758827209472656
    8. ')
' → logprob: -10.258827209472656
    9. ' .' → logprob: -11.133827209472656
    10. ',' → logprob: -11.383827209472656

Token 94: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007866371306590736
    2. ' )' → logprob: -7.250786781311035
    3. ')
' → logprob: -10.000786781311035
    4. '       ' → logprob: -11.000786781311035
    5. '   ' → logprob: -12.125786781311035
    6. ' ' → logprob: -12.625786781311035
    7. ')

' → logprob: -13.375786781311035
    8. '))' → logprob: -13.875786781311035
    9. '
' → logprob: -14.750786781311035
    10. ' )
' → logprob: -15.125786781311035

Token 95: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032296369317919016
    2. '
' → logprob: -6.25322961807251
    3. 'return' → logprob: -7.37822961807251
    4. ' return' → logprob: -7.62822961807251
    5. '        
' → logprob: -9.503230094909668
    6. '        ' → logprob: -10.378230094909668
    7. '   ' → logprob: -11.003230094909668
    8. '' → logprob: -11.253230094909668
    9. '      ' → logprob: -11.378230094909668
    10. 'n' → logprob: -12.378230094909668

Token 96: ' transformed' (ID: 38560)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24865122139453888
    2. 'return' → logprob: -2.1236512660980225
    3. ' return' → logprob: -2.7486512660980225
    4. '
' → logprob: -4.123651027679443
    5. ' ' → logprob: -4.998651027679443
    6. 'result' → logprob: -5.373651027679443
    7. '        
' → logprob: -5.373651027679443
    8. ' 
' → logprob: -6.748651027679443
    9. ' result' → logprob: -7.248651027679443
    10. ' ' → logprob: -7.748651027679443

Token 97: '_elements' (ID: 53344)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8993363380432129
    2. ' =' → logprob: -1.274336338043213
    3. '_sequence' → logprob: -1.649336338043213
    4. '_elements' → logprob: -2.524336338043213
    5. '=' → logprob: -3.774336338043213
    6. '_map' → logprob: -5.399336338043213
    7. '_values' → logprob: -5.399336338043213
    8. '_data' → logprob: -6.024336338043213
    9. '_items' → logprob: -6.524336338043213
    10. '_sequences' → logprob: -6.899336338043213

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.000492268183734268
    2. '=' → logprob: -7.625492095947266
    3. ' =[' → logprob: -13.125492095947266
    4. '<|end|>' → logprob: -14.250492095947266
    5. '=[]' → logprob: -15.000492095947266
    6. ' ' → logprob: -15.125492095947266
    7. ' =
' → logprob: -15.250492095947266
    8. ')' → logprob: -15.500492095947266
    9. ',' → logprob: -15.500492095947266
    10. ' =)' → logprob: -16.375492095947266

Token 99: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.332949161529541
    2. ' []' → logprob: -1.332949161529541
    3. '[' → logprob: -4.707949161529541
    4. '[]' → logprob: -4.832949161529541
    5. ' list' → logprob: -7.082949161529541
    6. ' [
' → logprob: -7.832949161529541
    7. ' [(' → logprob: -7.957949161529541
    8. ' sorted' → logprob: -8.207948684692383
    9. ' ' → logprob: -8.957948684692383
    10. '[list' → logprob: -9.207948684692383

Token 100: 'freq' (ID: 71759)
  Prédit: 'freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.14495140314102173
    2. '(freq' → logprob: -2.644951343536377
    3. 'elem' → logprob: -3.269951343536377
    4. ' freq' → logprob: -4.769951343536377
    5. 'element' → logprob: -4.894951343536377
    6. 'self' → logprob: -6.144951343536377
    7. '(elem' → logprob: -6.144951343536377
    8. 'x' → logprob: -6.769951343536377
    9. ' (' → logprob: -7.269951343536377
    10. '(x' → logprob: -7.519951343536377

Token 101: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.0009650575229898095
    2. '[' → logprob: -8.000965118408203
    3. '_' → logprob: -8.375965118408203
    4. 'y' → logprob: -8.875965118408203
    5. '       ' → logprob: -10.375965118408203
    6. 'e' → logprob: -10.625965118408203
    7. '[_' → logprob: -10.750965118408203
    8. '[element' → logprob: -11.125965118408203
    9. 's' → logprob: -11.250965118408203
    10. '   ' → logprob: -11.500965118408203

Token 102: '[val' (ID: 162482)
  Prédit: '[element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[element' → logprob: -0.15726113319396973
    2. '[' → logprob: -2.4072611331939697
    3. '[e' → logprob: -2.9072611331939697
    4. '[x' → logprob: -8.40726089477539
    5. '[c' → logprob: -8.78226089477539
    6. '[self' → logprob: -8.78226089477539
    7. '[token' → logprob: -9.15726089477539
    8. '.get' → logprob: -9.53226089477539
    9. '[item' → logprob: -10.15726089477539
    10. '[ch' → logprob: -10.78226089477539

Token 103: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008341663633473217
    2. '[val' → logprob: -7.250833988189697
    3. '.get' → logprob: -9.500834465026855
    4. ' ]' → logprob: -11.500834465026855
    5. '   ' → logprob: -11.750834465026855
    6. '[' → logprob: -12.000834465026855
    7. ')' → logprob: -12.500834465026855
    8. '[element' → logprob: -12.625834465026855
    9. 'e' → logprob: -12.750834465026855
    10. '}' → logprob: -12.875834465026855

Token 104: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0026242893654853106
    2. 'for' → logprob: -6.00262451171875
    3. '   ' → logprob: -10.00262451171875
    4. '       ' → logprob: -10.25262451171875
    5. '	for' → logprob: -10.62762451171875
    6. '           ' → logprob: -11.37762451171875
    7. ' ' → logprob: -11.50262451171875
    8. ')' → logprob: -12.12762451171875
    9. '        ' → logprob: -12.50262451171875
    10. ']' → logprob: -12.50262451171875

Token 105: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.00012535012501757592
    2. 'val' → logprob: -9.00012493133545
    3. ' ' → logprob: -13.37512493133545
    4. '	val' → logprob: -15.37512493133545
    5. ' ' → logprob: -15.75012493133545
    6. '  ' → logprob: -19.250125885009766
    7. ' in' → logprob: -19.375125885009766
    8. '[val' → logprob: -19.625125885009766
    9. ',val' → logprob: -19.625125885009766
    10. '.val' → logprob: -20.125125885009766

Token 106: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008735480718314648
    2. 'in' → logprob: -4.758735656738281
    3. ' ' → logprob: -9.133735656738281
    4. '<|end|>' → logprob: -12.508735656738281
    5. ')' → logprob: -13.508735656738281
    6. ' i' → logprob: -13.758735656738281
    7. ' ' → logprob: -14.133735656738281
    8. 'import' → logprob: -14.258735656738281
    9. '	in' → logprob: -14.258735656738281
    10. '  ' → logprob: -14.258735656738281

Token 107: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.47448256611824036
    2. 'sequence' → logprob: -0.974482536315918
    3. 'self' → logprob: -8.099482536315918
    4. ' self' → logprob: -9.349482536315918
    5. '(sequence' → logprob: -11.849482536315918
    6. ' ' → logprob: -12.474482536315918
    7. ' range' → logprob: -13.849482536315918
    8. 'range' → logprob: -14.224482536315918
    9. '   ' → logprob: -14.474482536315918
    10. '.sequence' → logprob: -14.974482536315918

Token 108: '.elements' (ID: 58318)
  Prédit: '.elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.elements' → logprob: -0.1427493542432785
    2. '.' → logprob: -2.017749309539795
    3. ' .' → logprob: -10.892749786376953
    4. '.Elements' → logprob: -11.017749786376953
    5. 'elements' → logprob: -11.142749786376953
    6. '.e' → logprob: -11.642749786376953
    7. '.
' → logprob: -12.267749786376953
    8. ' ' → logprob: -13.642749786376953
    9. '.points' → logprob: -13.767749786376953
    10. ').' → logprob: -13.767749786376953

Token 109: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00029518234077841043
    2. '       ' → logprob: -9.125295639038086
    3. ']
' → logprob: -9.250295639038086
    4. ' ]' → logprob: -9.375295639038086
    5. ')' → logprob: -13.125295639038086
    6. ']
' → logprob: -13.625295639038086
    7. ']

' → logprob: -14.000295639038086
    8. '   ' → logprob: -14.375295639038086
    9. ')]' → logprob: -15.625295639038086
    10. '])' → logprob: -16.250295639038086

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001242613303475082
    2. 'return' → logprob: -6.876242637634277
    3. ' return' → logprob: -8.876242637634277
    4. '
' → logprob: -9.876242637634277
    5. '	' → logprob: -12.251242637634277
    6. '   ' → logprob: -12.876242637634277
    7. '	return' → logprob: -13.001242637634277
    8. ')' → logprob: -13.126242637634277
    9. '```' → logprob: -13.376242637634277
    10. '
' → logprob: -13.876242637634277

Token 111: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.41700056195259094
    2. ' return' → logprob: -1.6670005321502686
    3. '       ' → logprob: -1.9170005321502686
    4. '
' → logprob: -5.292000770568848
    5. '   ' → logprob: -10.292000770568848
    6. '        
' → logprob: -11.167000770568848
    7. '	return' → logprob: -11.167000770568848
    8. '
' → logprob: -12.167000770568848
    9. '```' → logprob: -12.167000770568848
    10. ' 
' → logprob: -12.917000770568848

Token 112: ' Sequence' (ID: 57144)
  Prédit: ' Sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Sequence' → logprob: -0.0011709370883181691
    2. 'Sequence' → logprob: -6.751171112060547
    3. ' sequence' → logprob: -14.751171112060547
    4. ' Frequency' → logprob: -14.876171112060547
    5. ' Sequ' → logprob: -18.126171112060547
    6. ' Se' → logprob: -18.751171112060547
    7. ' ' → logprob: -18.751171112060547
    8. 'Frequency' → logprob: -19.376171112060547
    9. ' Space' → logprob: -19.626171112060547
    10. '_sequence' → logprob: -19.876171112060547

Token 113: '(trans' (ID: 60636)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.1915852576494217
    2. '(' → logprob: -2.4415853023529053
    3. '(trans' → logprob: -2.4415853023529053
    4. '((' → logprob: -9.566585540771484
    5. '(`' → logprob: -9.941585540771484
    6. '(f' → logprob: -10.441585540771484
    7. '([
' → logprob: -10.441585540771484
    8. '(
' → logprob: -10.441585540771484
    9. '([(' → logprob: -10.566585540771484
    10. '([...' → logprob: -10.691585540771484

Token 114: 'formed' (ID: 11144)
  Prédit: 'formed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formed' → logprob: -0.005282615311443806
    2. 'form' → logprob: -5.255282402038574
    3. '(form' → logprob: -10.755282402038574
    4. 'orm' → logprob: -11.755282402038574
    5. 'f' → logprob: -12.380282402038574
    6. 'for' → logprob: -12.755282402038574
    7. 'from' → logprob: -13.005282402038574
    8. '_form' → logprob: -13.255282402038574
    9. '(' → logprob: -13.630282402038574
    10. 'former' → logprob: -14.005282402038574

Token 115: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.02156313695013523
    2. 'elements' → logprob: -4.1465630531311035
    3. 'ents' → logprob: -6.3965630531311035
    4. 'lements' → logprob: -6.8965630531311035
    5. '.elements' → logprob: -7.0215630531311035
    6. ')' → logprob: -7.3965630531311035
    7. 'ments' → logprob: -8.396563529968262
    8. '_map' → logprob: -8.521563529968262
    9. '_' → logprob: -8.646563529968262
    10. 's' → logprob: -8.896563529968262

Token 116: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1875571544806007e-05
    2. '<|end|>' → logprob: -12.125011444091797
    3. ')
' → logprob: -12.250011444091797
    4. ' )' → logprob: -14.125011444091797
    5. '   ' → logprob: -15.125011444091797
    6. ')return' → logprob: -15.250011444091797
    7. '       ' → logprob: -15.875011444091797
    8. ' ' → logprob: -17.250011444091797
    9. '}' → logprob: -17.250011444091797
    10. '<|end|>' → logprob: -17.625011444091797

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09932251274585724
    2. '
' → logprob: -2.474322557449341
    3. '    
' → logprob: -5.349322319030762
    4. 'def' → logprob: -5.974322319030762
    5. ' ' → logprob: -6.974322319030762
    6. ' 
' → logprob: -7.099322319030762
    7. '    ' → logprob: -8.474322319030762
    8. '_' → logprob: -8.599322319030762
    9. '  ' → logprob: -8.974322319030762
    10. '

' → logprob: -9.099322319030762

Token 118: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.048974063247442245
    2. ' def' → logprob: -3.17397403717041
    3. '   ' → logprob: -5.17397403717041
    4. ' ' → logprob: -8.29897403717041
    5. '	def' → logprob: -11.04897403717041
    6. '
' → logprob: -11.29897403717041
    7. '    
' → logprob: -11.54897403717041
    8. '  ' → logprob: -12.67397403717041
    9. '    ' → logprob: -13.67397403717041
    10. ' 
' → logprob: -14.04897403717041

Token 119: ' _' (ID: 1175)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.049171097576618195
    2. ' _' → logprob: -3.049171209335327
    3. '_' → logprob: -7.799170970916748
    4. '_counts' → logprob: -10.174171447753906
    5. '_def' → logprob: -10.174171447753906
    6. '   ' → logprob: -10.549171447753906
    7. '_counter' → logprob: -11.049171447753906
    8. 'def' → logprob: -11.549171447753906
    9. '_define' → logprob: -11.549171447753906
    10. '_cut' → logprob: -11.924171447753906

Token 120: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.006941864266991615
    2. '_count' → logprob: -5.006941795349121
    3. 'c' → logprob: -8.881941795349121
    4. 'co' → logprob: -9.631941795349121
    5. ' count' → logprob: -12.131941795349121
    6. '_c' → logprob: -12.506941795349121
    7. '_' → logprob: -12.881941795349121
    8. 'cou' → logprob: -13.006941795349121
    9. ' _' → logprob: -13.131941795349121
    10. '_co' → logprob: -13.256941795349121

Token 121: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.002605387009680271
    2. '_' → logprob: -6.502605438232422
    3. '_frequency' → logprob: -7.127605438232422
    4. '_freq' → logprob: -8.627605438232422
    5. '_counts' → logprob: -9.127605438232422
    6. '_counter' → logprob: -13.127605438232422
    7. '_F' → logprob: -13.627605438232422
    8. '_elements' → logprob: -13.877605438232422
    9. '_count' → logprob: -14.127605438232422
    10. '_a' → logprob: -14.627605438232422

Token 122: 'requencies' (ID: 158902)
  Prédit: 'requencies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'requencies' → logprob: -0.007837766781449318
    2. 'req' → logprob: -5.632837772369385
    3. 'r' → logprob: -6.257837772369385
    4. 're' → logprob: -6.882837772369385
    5. 'requ' → logprob: -7.257837772369385
    6. 'requency' → logprob: -8.007837295532227
    7. 'requent' → logprob: -8.632837295532227
    8. 'count' → logprob: -10.507837295532227
    9. 'rec' → logprob: -11.757837295532227
    10. 'request' → logprob: -12.007837295532227

Token 123: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.12715603411197662
    2. '(' → logprob: -2.1271560192108154
    3. ' (' → logprob: -8.752156257629395
    4. '(s' → logprob: -10.377156257629395
    5. '(
' → logprob: -10.877156257629395
    6. ' ' → logprob: -12.502156257629395
    7. '(Self' → logprob: -12.752156257629395
    8. 'self' → logprob: -12.877156257629395
    9. '   ' → logprob: -13.002156257629395
    10. '	self' → logprob: -13.252156257629395

Token 124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005829610861837864
    2. ' ,' → logprob: -5.255829811096191
    3. 'self' → logprob: -8.130829811096191
    4. ',self' → logprob: -8.380829811096191
    5. ',e' → logprob: -10.505829811096191
    6. ',
' → logprob: -11.130829811096191
    7. ',s' → logprob: -12.005829811096191
    8. '<|end|>' → logprob: -12.380829811096191
    9. ')' → logprob: -13.130829811096191
    10. '
' → logprob: -13.130829811096191

Token 125: ' elements' (ID: 8632)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.17934516072273254
    2. ' elements' → logprob: -1.9293451309204102
    3. 'self' → logprob: -4.17934513092041
    4. 'values' → logprob: -6.55434513092041
    5. ' self' → logprob: -6.55434513092041
    6. ')' → logprob: -8.92934513092041
    7. 'arr' → logprob: -9.17934513092041
    8. '   ' → logprob: -9.17934513092041
    9. ' values' → logprob: -9.80434513092041
    10. 'data' → logprob: -9.92934513092041

Token 126: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0030057504773139954
    2. '):
' → logprob: -5.8780059814453125
    3. ')' → logprob: -9.753005981445312
    4. ' ):' → logprob: -9.753005981445312
    5. 'self' → logprob: -10.253005981445312
    6. ',' → logprob: -10.878005981445312
    7. ':' → logprob: -11.628005981445312
    8. '):
' → logprob: -11.628005981445312
    9. '   ' → logprob: -11.878005981445312
    10. '       ' → logprob: -13.003005981445312

Token 127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000990176573395729
    2. 'freq' → logprob: -7.875990390777588
    3. ' freq' → logprob: -8.37598991394043
    4. 'count' → logprob: -9.25098991394043
    5. ':' → logprob: -9.37598991394043
    6. 'counts' → logprob: -9.87598991394043
    7. '   ' → logprob: -10.25098991394043
    8. 'frequency' → logprob: -10.87598991394043
    9. ':
' → logprob: -11.00098991394043
    10. ' frequency' → logprob: -11.12598991394043

Token 128: ' freq' (ID: 42078)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' (adapté à ' freq') → logprob: -0.05121919512748718
    2. ' freq' → logprob: -3.3012192249298096
    3. 'from' → logprob: -5.4262189865112305
    4. 'frequency' → logprob: -5.6762189865112305
    5. '       ' → logprob: -5.8012189865112305
    6. 'counts' → logprob: -6.9262189865112305
    7. 'counter' → logprob: -7.6762189865112305
    8. 'count' → logprob: -8.05121898651123
    9. 'fre' → logprob: -8.42621898651123
    10. ' frequency' → logprob: -8.92621898651123

Token 129: ' =' (ID: 314)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.04362749680876732
    2. '_map' → logprob: -3.9186275005340576
    3. '_' → logprob: -4.2936272621154785
    4. 's' → logprob: -5.4186272621154785
    5. ' ' → logprob: -6.5436272621154785
    6. ' =' → logprob: -7.0436272621154785
    7. '=' → logprob: -7.4186272621154785
    8. 'uent' → logprob: -7.9186272621154785
    9. 'y' → logprob: -8.168627738952637
    10. '   ' → logprob: -8.418627738952637

Token 130: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0015030752401798964
    2. ' {}' → logprob: -6.501502990722656
    3. 'dict' → logprob: -15.126502990722656
    4. '{}
' → logprob: -15.251502990722656
    5. ' defaultdict' → logprob: -16.126502990722656
    6. 'default' → logprob: -16.876502990722656
    7. ' dict' → logprob: -17.001502990722656
    8. '{' → logprob: -17.251502990722656
    9. '={}' → logprob: -17.501502990722656
    10. '{},' → logprob: -18.126502990722656

Token 131: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2559170722961426
    2. ' for' → logprob: -1.8809170722961426
    3. 'for' → logprob: -2.6309170722961426
    4. '
' → logprob: -7.880917072296143
    5. ' ' → logprob: -8.130916595458984
    6. '   ' → logprob: -8.630916595458984
    7. ' 
' → logprob: -9.255916595458984
    8. '	for' → logprob: -9.380916595458984
    9. '        
' → logprob: -9.505916595458984
    10. '' → logprob: -10.255916595458984

Token 132: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3914870321750641
    2. ' for' → logprob: -1.1414870023727417
    3. '       ' → logprob: -5.391487121582031
    4. '   ' → logprob: -10.766487121582031
    5. '	for' → logprob: -10.891487121582031
    6. ' ' → logprob: -12.266487121582031
    7. ' ' → logprob: -12.391487121582031
    8. '	' → logprob: -14.266487121582031
    9. '	   ' → logprob: -15.641487121582031
    10. '
' → logprob: -16.01648712158203

Token 133: ' e' (ID: 319)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.4774959087371826
    2. 'element' → logprob: -1.3524959087371826
    3. 'elem' → logprob: -2.4774959087371826
    4. ' elem' → logprob: -4.477496147155762
    5. ' el' → logprob: -4.727496147155762
    6. ' element' → logprob: -4.852496147155762
    7. 'e' → logprob: -5.102496147155762
    8. ' e' → logprob: -6.852496147155762
    9. 'val' → logprob: -6.852496147155762
    10. ' val' → logprob: -7.852496147155762

Token 134: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1245427131652832
    2. 'lement' → logprob: -2.374542713165283
    3. 'lements' → logprob: -3.874542713165283
    4. 'in' → logprob: -5.999542713165283
    5. 'l' → logprob: -7.874542713165283
    6. 'le' → logprob: -8.624542236328125
    7. 'ach' → logprob: -9.499542236328125
    8. 'n' → logprob: -9.874542236328125
    9. '	in' → logprob: -10.499542236328125
    10. ' ' → logprob: -11.249542236328125

Token 135: ' elements' (ID: 8632)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.3237043619155884
    2. ' elements' → logprob: -1.3237043619155884
    3. 'lements' → logprob: -4.573704242706299
    4. 'lement' → logprob: -10.198704719543457
    5. '(elements' → logprob: -11.323704719543457
    6. ' ' → logprob: -12.198704719543457
    7. '.elements' → logprob: -12.448704719543457
    8. 'element' → logprob: -12.823704719543457
    9. '_elements' → logprob: -13.198704719543457
    10. 'ele' → logprob: -13.698704719543457

Token 136: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03636285662651062
    2. ' in' → logprob: -3.661362886428833
    3. ' :' → logprob: -4.786362648010254
    4. ':
' → logprob: -7.036362648010254
    5. '           ' → logprob: -8.161362648010254
    6. 'in' → logprob: -8.786362648010254
    7. '        ' → logprob: -9.036362648010254
    8. '       ' → logprob: -9.161362648010254
    9. ',' → logprob: -10.161362648010254
    10. '=' → logprob: -10.661362648010254

Token 137: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000558512459974736
    2. ' freq' → logprob: -8.250558853149414
    3. ' if' → logprob: -8.625558853149414
    4. 'freq' → logprob: -9.375558853149414
    5. 'if' → logprob: -11.000558853149414
    6. '       ' → logprob: -11.750558853149414
    7. ' frequency' → logprob: -13.375558853149414
    8. '   ' → logprob: -13.625558853149414
    9. '          ' → logprob: -13.625558853149414
    10. '	       ' → logprob: -13.625558853149414

Token 138: ' freq' (ID: 42078)
  Prédit: ' freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' freq' → logprob: -0.33192992210388184
    2. 'freq' (adapté à ' freq') → logprob: -1.3319299221038818
    3. ' if' → logprob: -4.331930160522461
    4. 'if' → logprob: -5.831930160522461
    5. '           ' → logprob: -6.831930160522461
    6. '        ' → logprob: -7.081930160522461
    7. '       ' → logprob: -7.956930160522461
    8. '_freq' → logprob: -10.456930160522461
    9. '            ' → logprob: -10.456930160522461
    10. '    ' → logprob: -11.081930160522461

Token 139: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.0005790081340819597
    2. '[' → logprob: -7.625578880310059
    3. '.setdefault' → logprob: -9.375578880310059
    4. 'e' → logprob: -13.250578880310059
    5. '.get' → logprob: -13.500578880310059
    6. ' [' → logprob: -13.625578880310059
    7. '.' → logprob: -13.875578880310059
    8. '[
' → logprob: -15.125578880310059
    9. '[E' → logprob: -16.000579833984375
    10. '```' → logprob: -16.375579833984375

Token 140: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00022201328829396516
    2. ']=' → logprob: -9.000222206115723
    3. ' ]' → logprob: -9.250222206115723
    4. ' =' → logprob: -13.875222206115723
    5. ']+=' → logprob: -13.875222206115723
    6. '=' → logprob: -14.750222206115723
    7. ' ' → logprob: -17.125221252441406
    8. '[' → logprob: -18.250221252441406
    9. 'e' → logprob: -18.625221252441406
    10. ')' → logprob: -18.750221252441406

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759986639022827
    2. '=' → logprob: -0.8259986639022827
    3. ' +=' → logprob: -10.575998306274414
    4. ' ' → logprob: -10.700998306274414
    5. '+=' → logprob: -11.450998306274414
    6. ']' → logprob: -15.575998306274414
    7. '=

' → logprob: -16.200998306274414
    8. ']=' → logprob: -17.075998306274414
    9. ' =
' → logprob: -17.450998306274414
    10. '＝' → logprob: -17.575998306274414

Token 142: ' freq' (ID: 42078)
  Prédit: ' freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' freq' → logprob: -0.38690024614334106
    2. 'freq' → logprob: -1.1369001865386963
    3. '(freq' → logprob: -10.886899948120117
    4. '1' → logprob: -12.761899948120117
    5. ' frequency' → logprob: -13.511899948120117
    6. ' ' → logprob: -13.761899948120117
    7. '_freq' → logprob: -13.886899948120117
    8. '0' → logprob: -14.011899948120117
    9. 'fre' → logprob: -14.136899948120117
    10. 'frequency' → logprob: -14.636899948120117

Token 143: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0005358747439458966
    2. 'get' → logprob: -7.75053596496582
    3. '[e' → logprob: -9.25053596496582
    4. '.' → logprob: -12.50053596496582
    5. '.e' → logprob: -12.75053596496582
    6. ' .' → logprob: -13.37553596496582
    7. 'e' → logprob: -14.50053596496582
    8. '.setdefault' → logprob: -15.87553596496582
    9. ' get' → logprob: -16.50053596496582
    10. ' ' → logprob: -17.12553596496582

Token 144: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -4.584861744660884e-05
    2. '(' → logprob: -10.000045776367188
    3. ' (' → logprob: -15.250045776367188
    4. '(
' → logprob: -16.500045776367188
    5. ' ' → logprob: -17.750045776367188
    6. '(ele' → logprob: -20.250045776367188
    7. '(i' → logprob: -20.375045776367188
    8. '(element' → logprob: -20.625045776367188
    9. '(x' → logprob: -20.750045776367188
    10. '(s' → logprob: -21.125045776367188

Token 145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01694534905254841
    2. ',e' → logprob: -4.7669453620910645
    3. ' ,' → logprob: -5.5169453620910645
    4. 'e' → logprob: -5.5169453620910645
    5. ' e' → logprob: -9.391944885253906
    6. '[e' → logprob: -9.391944885253906
    7. ')' → logprob: -10.266944885253906
    8. '```' → logprob: -11.016944885253906
    9. '1' → logprob: -11.516944885253906
    10. ')e' → logprob: -12.016944885253906

Token 146: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011048170737922192
    2. ' ' → logprob: -4.511048316955566
    3. ')' → logprob: -16.01104736328125
    4. '1' → logprob: -16.26104736328125
    5. '   ' → logprob: -17.38604736328125
    6. ' ' → logprob: -17.38604736328125
    7. '۰' → logprob: -17.57354736328125
    8. '  ' → logprob: -17.88604736328125
    9. ' 
' → logprob: -17.94854736328125
    10. '```' → logprob: -18.01104736328125

Token 147: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020425561524461955
    2. ' ' → logprob: -8.500204086303711
    3. '1' → logprob: -15.125204086303711
    4. '۰' → logprob: -16.37520408630371
    5. ')' → logprob: -16.43770408630371
    6. '  ' → logprob: -16.56270408630371
    7. '   ' → logprob: -16.62520408630371
    8. '
' → logprob: -17.12520408630371
    9. '    ' → logprob: -17.31270408630371
    10. ' ' → logprob: -17.87520408630371

Token 148: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014464260311797261
    2. ')+' → logprob: -6.87644624710083
    3. ' )' → logprob: -7.87644624710083
    4. '+' → logprob: -10.501446723937988
    5. ' +' → logprob: -12.876446723937988
    6. '0' → logprob: -13.501446723937988
    7. '1' → logprob: -13.501446723937988
    8. ' ' → logprob: -15.126446723937988
    9. '+)' → logprob: -15.501446723937988
    10. '<|end|>' → logprob: -15.501446723937988

Token 149: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931492686271667
    2. ' +' → logprob: -0.6931492686271667
    3. ' plus' → logprob: -13.81814956665039
    4. ' ' → logprob: -14.69314956665039
    5. '1' → logprob: -14.94314956665039
    6. ' ' → logprob: -16.56814956665039
    7. '()+' → logprob: -16.81814956665039
    8. '+
' → logprob: -16.94314956665039
    9. ')+' → logprob: -17.31814956665039
    10. '+=' → logprob: -17.44314956665039

Token 150: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011048054322600365
    2. ' ' → logprob: -4.511047840118408
    3. '   ' → logprob: -15.636048316955566
    4. '<|end|>' → logprob: -16.13604736328125
    5. '  ' → logprob: -18.01104736328125
    6. '```' → logprob: -18.63604736328125
    7. '    ' → logprob: -19.13604736328125
    8. '       ' → logprob: -19.51104736328125
    9. ' ' → logprob: -19.63604736328125
    10. '0' → logprob: -20.26104736328125

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -19.625
    4. '```' → logprob: -19.75
    5. '  ' → logprob: -22.0
    6. '۱' → logprob: -22.4375
    7. '' → logprob: -22.8125
    8. '<|end|>' → logprob: -22.8125
    9. '`' → logprob: -22.875
    10. '１' → logprob: -23.25

Token 152: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013582616113126278
    2. '
' → logprob: -4.388582706451416
    3. '	' → logprob: -7.388582706451416
    4. 'return' → logprob: -8.263582229614258
    5. ' return' → logprob: -9.263582229614258
    6. '   ' → logprob: -10.138582229614258
    7. '	return' → logprob: -10.513582229614258
    8. '<|end|>' → logprob: -11.013582229614258
    9. '      ' → logprob: -12.513582229614258
    10. '' → logprob: -12.888582229614258

Token 153: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.976922744186595e-05
    2. '   ' → logprob: -11.250040054321289
    3. '	' → logprob: -11.500040054321289
    4. ' return' → logprob: -12.000040054321289
    5. 'return' → logprob: -12.375040054321289
    6. '      ' → logprob: -13.000040054321289
    7. '
' → logprob: -14.125040054321289
    8. '           ' → logprob: -14.125040054321289
    9. '<|end|>' → logprob: -14.125040054321289
    10. '	return' → logprob: -14.875040054321289

Token 154: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.053824931383132935
    2. 'return' (adapté à ' return') → logprob: -3.0538249015808105
    3. ' return' → logprob: -5.3038249015808105
    4. '   ' → logprob: -8.553825378417969
    5. '	' → logprob: -10.303825378417969
    6. '	return' → logprob: -10.928825378417969
    7. ' ' → logprob: -13.303825378417969
    8. '      ' → logprob: -13.303825378417969
    9. '    ' → logprob: -14.428825378417969
    10. '           ' → logprob: -14.428825378417969

Token 155: ' freq' (ID: 42078)
  Prédit: ' freq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' freq' → logprob: -0.25193196535110474
    2. 'freq' → logprob: -1.50193190574646
    3. '(freq' → logprob: -13.126932144165039
    4. '_freq' → logprob: -15.001932144165039
    5. ' ' → logprob: -15.626932144165039
    6. '.freq' → logprob: -16.75193214416504
    7. 'Freq' → logprob: -16.87693214416504
    8. 'fre' → logprob: -17.00193214416504
    9. ' frequency' → logprob: -17.62693214416504
    10. ' ' → logprob: -17.87693214416504

Token 156: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 157: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 158: ' Fixed' (ID: 42962)
  Prédit: ' Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Value' → logprob: -1.5002479553222656
    2. ' Position' → logprob: -2.1252479553222656
    3. ' Frequency' → logprob: -2.1252479553222656
    4. ' Normal' → logprob: -2.2502479553222656
    5. ' Unique' → logprob: -2.7502479553222656
    6. ' Mode' → logprob: -3.0002479553222656
    7. ' Reverse' → logprob: -3.5002479553222656
    8. ' Mean' → logprob: -3.6252479553222656
    9. ' Length' → logprob: -3.6252479553222656
    10. ' Index' → logprob: -3.7502479553222656

Token 159: 'Point' (ID: 4219)
  Prédit: 'Length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Length' → logprob: -0.7309916019439697
    2. 'Size' → logprob: -1.4809916019439697
    3. 'Point' → logprob: -1.6059916019439697
    4. 'Sequence' → logprob: -3.2309916019439697
    5. 'Frequency' → logprob: -3.8559916019439697
    6. 'Window' → logprob: -4.980991363525391
    7. 'Value' → logprob: -5.105991363525391
    8. 'Width' → logprob: -5.980991363525391
    9. 'Step' → logprob: -5.980991363525391
    10. 'Transformer' → logprob: -6.355991363525391

Token 160: 'Finder' (ID: 42976)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.36732015013694763
    2. 'Transformer' → logprob: -1.61732017993927
    3. 'Finder' → logprob: -2.9923200607299805
    4. 'Iterator' → logprob: -3.4923200607299805
    5. '(' → logprob: -4.4923200607299805
    6. 'Sequence' → logprob: -5.9923200607299805
    7. 'Detector' → logprob: -6.2423200607299805
    8. 'Recognizer' → logprob: -6.3673200607299805
    9. 'Calculator' → logprob: -6.3673200607299805
    10. 'Searcher' → logprob: -6.6173200607299805

Token 161: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012295243330299854
    2. ':
' → logprob: -4.762295246124268
    3. ' :' → logprob: -5.637295246124268
    4. ' :
' → logprob: -9.13729476928711
    5. ':def' → logprob: -13.63729476928711
    6. ':

' → logprob: -13.88729476928711
    7. '):' → logprob: -14.51229476928711
    8. '>:' → logprob: -15.63729476928711
    9. '(' → logprob: -15.76229476928711
    10. '<|end|>' → logprob: -15.88729476928711

Token 162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005985797382891178
    2. ' def' → logprob: -5.130985736846924
    3. 'def' → logprob: -10.630986213684082
    4. '    
' → logprob: -11.505986213684082
    5. '
' → logprob: -11.880986213684082
    6. '   ' → logprob: -12.005986213684082
    7. ':' → logprob: -12.880986213684082
    8. '    ' → logprob: -12.880986213684082
    9. '   ' → logprob: -13.755986213684082
    10. '(' → logprob: -14.130986213684082

Token 163: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.009102925658226013
    2. '   ' → logprob: -4.884102821350098
    3. 'def' (adapté à ' def') → logprob: -6.509102821350098
    4. '    ' → logprob: -12.134102821350098
    5. ' ' → logprob: -15.634102821350098
    6. '	def' → logprob: -16.009103775024414
    7. '
' → logprob: -16.509103775024414
    8. '```' → logprob: -17.009103775024414
    9. ' ' → logprob: -17.384103775024414
    10. ':' → logprob: -18.259103775024414

Token 164: ' __' (ID: 2516)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.18085619807243347
    2. ' def' → logprob: -2.180856227874756
    3. ' ' → logprob: -3.555856227874756
    4. ' __' → logprob: -4.555856227874756
    5. ' _' → logprob: -4.930856227874756
    6. ' transform' → logprob: -5.180856227874756
    7. ' calculate' → logprob: -8.680855751037598
    8. ' ' → logprob: -9.305855751037598
    9. '_' → logprob: -10.055855751037598
    10. ' locate' → logprob: -10.430855751037598

Token 165: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.003646518336609006
    2. ' init' → logprob: -5.753646373748779
    3. 'def' → logprob: -8.753646850585938
    4. ' def' → logprob: -9.628646850585938
    5. 'i' → logprob: -10.003646850585938
    6. '(init' → logprob: -10.003646850585938
    7. 'call' → logprob: -10.503646850585938
    8. '   ' → logprob: -10.628646850585938
    9. '_init' → logprob: -10.628646850585938
    10. ' ' → logprob: -11.128646850585938

Token 166: '__(' (ID: 8241)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3563479781150818
    2. '__(' → logprob: -1.9813480377197266
    3. '(self' → logprob: -2.2313480377197266
    4. '(' → logprob: -3.1063480377197266
    5. '<|end|>' → logprob: -5.356348037719727
    6. ',' → logprob: -6.481348037719727
    7. '__(
' → logprob: -6.481348037719727
    8. ' ' → logprob: -6.981348037719727
    9. '_(' → logprob: -8.731348037719727
    10. '<|end|>' → logprob: -8.856348037719727

Token 167: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03397323191165924
    2. ' self' → logprob: -3.408973217010498
    3. ')' → logprob: -8.158973693847656
    4. '
' → logprob: -11.283973693847656
    5. '   ' → logprob: -12.033973693847656
    6. '):
' → logprob: -12.158973693847656
    7. ' ' → logprob: -12.408973693847656
    8. ',' → logprob: -12.533973693847656
    9. 'se' → logprob: -13.283973693847656
    10. ' )' → logprob: -13.408973693847656

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005362890660762787
    2. ' ,' → logprob: -5.2553629875183105
    3. '):' → logprob: -9.630362510681152
    4. '   ' → logprob: -11.505362510681152
    5. '<|end|>' → logprob: -11.505362510681152
    6. 'self' → logprob: -11.630362510681152
    7. ')' → logprob: -11.755362510681152
    8. ' ' → logprob: -12.505362510681152
    9. '):
' → logprob: -12.755362510681152
    10. ' ):' → logprob: -12.755362510681152

Token 169: ' transformer' (ID: 59595)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5735238790512085
    2. 'self' → logprob: -1.4485238790512085
    3. ' transformer' → logprob: -2.323523998260498
    4. ' max' → logprob: -3.198523998260498
    5. 'transform' → logprob: -3.448523998260498
    6. 'max' → logprob: -4.573523998260498
    7. ' sequence' → logprob: -4.823523998260498
    8. 'sequence' → logprob: -5.823523998260498
    9. 't' → logprob: -6.448523998260498
    10. ' tolerance' → logprob: -6.698523998260498

Token 170: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034463297575712204
    2. '):' → logprob: -3.409463405609131
    3. ' ,' → logprob: -7.409463405609131
    4. ' ):' → logprob: -8.784462928771973
    5. '):
' → logprob: -10.409462928771973
    6. ':' → logprob: -11.284462928771973
    7. ')' → logprob: -11.784462928771973
    8. ' ' → logprob: -12.909462928771973
    9. '=' → logprob: -14.409462928771973
    10. ',
' → logprob: -14.409462928771973

Token 171: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0043836054392158985
    2. '   ' → logprob: -6.004383563995361
    3. ':' → logprob: -6.879383563995361
    4. ',' → logprob: -8.25438404083252
    5. '(' → logprob: -8.87938404083252
    6. '        
' → logprob: -9.00438404083252
    7. 'self' → logprob: -9.37938404083252
    8. '
' → logprob: -9.75438404083252
    9. ' self' → logprob: -10.00438404083252
    10. '    
' → logprob: -10.75438404083252

Token 172: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3714160621166229
    2. 'self' (adapté à ' self') → logprob: -1.7464160919189453
    3. '       ' → logprob: -1.9964160919189453
    4. '	self' → logprob: -11.871416091918945
    5. '   ' → logprob: -12.246416091918945
    6. ' ' → logprob: -12.371416091918945
    7. '        ' → logprob: -13.871416091918945
    8. '(self' → logprob: -13.871416091918945
    9. ' ' → logprob: -13.871416091918945
    10. '      ' → logprob: -14.371416091918945

Token 173: '.transform' (ID: 17849)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.20506621897220612
    2. '.transform' → logprob: -1.705066204071045
    3. ' .' → logprob: -5.830066204071045
    4. '.trans' → logprob: -7.955066204071045
    5. 'transform' → logprob: -8.705066680908203
    6. ' ' → logprob: -8.955066680908203
    7. '.transforms' → logprob: -10.955066680908203
    8. '.t' → logprob: -12.205066680908203
    9. '.token' → logprob: -12.205066680908203
    10. '.encoder' → logprob: -12.705066680908203

Token 174: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0001576506474521011
    2. '=' → logprob: -9.625157356262207
    3. ' =' → logprob: -9.625157356262207
    4. '   ' → logprob: -11.375157356262207
    5. '       ' → logprob: -11.625157356262207
    6. 'mer' → logprob: -14.000157356262207
    7. 'ers' → logprob: -14.625157356262207
    8. ',' → logprob: -14.875157356262207
    9. 'erer' → logprob: -15.250157356262207
    10. '```' → logprob: -15.375157356262207

Token 175: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0815155953168869
    2. '=' → logprob: -2.5815155506134033
    3. ' ' → logprob: -5.956515789031982
    4. '.' → logprob: -10.956515312194824
    5. '  ' → logprob: -12.206515312194824
    6. '_' → logprob: -12.581515312194824
    7. '   ' → logprob: -12.956515312194824
    8. ')' → logprob: -13.581515312194824
    9. '_transform' → logprob: -14.081515312194824
    10. '.transform' → logprob: -14.206515312194824

Token 176: ' transformer' (ID: 59595)
  Prédit: ' transformer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' transformer' → logprob: -0.0701320469379425
    2. 'transform' → logprob: -2.69513201713562
    3. '(transform' → logprob: -9.1951322555542
    4. ' transform' → logprob: -9.8201322555542
    5. ' ' → logprob: -10.5701322555542
    6. '	transform' → logprob: -12.4451322555542
    7. '.transform' → logprob: -13.0701322555542
    8. ' ' → logprob: -13.0701322555542
    9. '_transform' → logprob: -13.5701322555542
    10. ' transformers' → logprob: -14.5701322555542

Token 177: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004961919970810413
    2. '   ' → logprob: -5.379961967468262
    3. '    
' → logprob: -8.379961967468262
    4. 'def' → logprob: -9.879961967468262
    5. '<|end|>' → logprob: -10.754961967468262
    6. '

' → logprob: -11.004961967468262
    7. ' 
' → logprob: -11.879961967468262
    8. ' def' → logprob: -12.004961967468262
    9. '  
' → logprob: -12.504961967468262
    10. '<|end|>' → logprob: -13.254961967468262

Token 178: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.391542911529541
    2. '   ' → logprob: -1.141542911529541
    3. 'def' → logprob: -5.516542911529541
    4. ' def' → logprob: -7.766542911529541
    5. '    
' → logprob: -8.641542434692383
    6. '	def' → logprob: -10.766542434692383
    7. '

' → logprob: -12.016542434692383
    8. '```' → logprob: -12.266542434692383
    9. ' 
' → logprob: -13.141542434692383
    10. ',' → logprob: -13.766542434692383

Token 179: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.014190888963639736
    2. ' def' → logprob: -4.264190673828125
    3. '   ' → logprob: -10.514190673828125
    4. 'de' → logprob: -16.014190673828125
    5. '
' → logprob: -16.264190673828125
    6. ' ' → logprob: -16.889190673828125
    7. '	def' → logprob: -17.639190673828125
    8. 'd' → logprob: -18.514190673828125
    9. 'class' → logprob: -19.139190673828125
    10. '  ' → logprob: -19.389190673828125

Token 180: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.0338144414126873
    2. 'find' → logprob: -3.4088144302368164
    3. ' fixed' → logprob: -9.283814430236816
    4. ' fix' → logprob: -10.658814430236816
    5. 'fix' → logprob: -11.533814430236816
    6. ' apply' → logprob: -11.658814430236816
    7. ' def' → logprob: -12.158814430236816
    8. ' ' → logprob: -12.408814430236816
    9. 'fixed' → logprob: -12.533814430236816
    10. 'def' → logprob: -12.908814430236816

Token 181: '_fixed' (ID: 89932)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.39756712317466736
    2. '_fixed' → logprob: -1.1475671529769897
    3. '(' → logprob: -4.772567272186279
    4. ' _' → logprob: -7.022567272186279
    5. '_fix' → logprob: -8.022566795349121
    6. '(self' → logprob: -8.272566795349121
    7. ' (' → logprob: -8.397566795349121
    8. '_(' → logprob: -9.022566795349121
    9. '_sequence' → logprob: -9.522566795349121
    10. ' ' → logprob: -9.647566795349121

Token 182: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.0011381926015019417
    2. '_' → logprob: -6.876138210296631
    3. '_points' → logprob: -9.376137733459473
    4. '_p' → logprob: -11.751137733459473
    5. 'point' → logprob: -12.126137733459473
    6. '(self' → logprob: -13.251137733459473
    7. '_Point' → logprob: -13.501137733459473
    8. '_pt' → logprob: -14.001137733459473
    9. '_sequence' → logprob: -14.001137733459473
    10. '_value' → logprob: -14.126137733459473

Token 183: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.030308878049254417
    2. '(' → logprob: -3.530308961868286
    3. ' (' → logprob: -7.780308723449707
    4. '(
' → logprob: -8.905308723449707
    5. '(s' → logprob: -12.655308723449707
    6. '(

' → logprob: -14.155308723449707
    7. '   ' → logprob: -15.780308723449707
    8. ' (
' → logprob: -15.905308723449707
    9. ' self' → logprob: -16.030309677124023
    10. 'self' → logprob: -16.030309677124023

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000158842682139948
    2. ' ,' → logprob: -8.75015926361084
    3. 'self' → logprob: -16.500158309936523
    4. '       ' → logprob: -16.625158309936523
    5. '   ' → logprob: -17.125158309936523
    6. '):' → logprob: -17.250158309936523
    7. ',self' → logprob: -17.375158309936523
    8. ',
' → logprob: -17.500158309936523
    9. ')' → logprob: -17.625158309936523
    10. ',s' → logprob: -18.250158309936523

Token 185: ' initial' (ID: 4871)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.06879976391792297
    2. ' self' → logprob: -2.8187997341156006
    3. 'sequence' → logprob: -5.31879997253418
    4. 'self' → logprob: -6.31879997253418
    5. '_sequence' → logprob: -10.56879997253418
    6. ')' → logprob: -10.56879997253418
    7. '(sequence' → logprob: -10.94379997253418
    8. ' initial' → logprob: -11.44379997253418
    9. ',' → logprob: -11.56879997253418
    10. 'Sequence' → logprob: -12.69379997253418

Token 186: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.002130041131749749
    2. '_' → logprob: -6.377130031585693
    3. ' sequence' → logprob: -8.627130508422852
    4. ',' → logprob: -9.377130508422852
    5. ')' → logprob: -10.127130508422852
    6. ' _' → logprob: -10.252130508422852
    7. ' ,' → logprob: -10.502130508422852
    8. 'sequence' → logprob: -10.752130508422852
    9. ' )' → logprob: -11.127130508422852
    10. '_seq' → logprob: -11.752130508422852

Token 187: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09958411753177643
    2. ',' → logprob: -2.5995841026306152
    3. '):
' → logprob: -3.9745841026306152
    4. ' ):' → logprob: -6.599584102630615
    5. ')' → logprob: -8.849584579467773
    6. ':' → logprob: -10.099584579467773
    7. '   ' → logprob: -10.099584579467773
    8. '       ' → logprob: -10.099584579467773
    9. '):
' → logprob: -10.724584579467773
    10. ' ,' → logprob: -10.974584579467773

Token 188: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.803360495017841e-05
    2. ',' → logprob: -10.625078201293945
    3. ' current' → logprob: -10.875078201293945
    4. 'current' → logprob: -11.500078201293945
    5. ' sequence' → logprob: -11.750078201293945
    6. '        
' → logprob: -12.375078201293945
    7. '```' → logprob: -12.500078201293945
    8. 'sequence' → logprob: -13.125078201293945
    9. ':' → logprob: -13.500078201293945
    10. ' s' → logprob: -14.625078201293945

Token 189: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.20029960572719574
    2. 'current' (adapté à ' current') → logprob: -2.2002995014190674
    3. '       ' → logprob: -3.2002995014190674
    4. ' sequence' → logprob: -3.7002995014190674
    5. 'sequence' → logprob: -5.4502997398376465
    6. ' previous' → logprob: -7.2002997398376465
    7. ' prev' → logprob: -9.200299263000488
    8. 'prev' → logprob: -9.325299263000488
    9. 'previous' → logprob: -10.575299263000488
    10. ' seq' → logprob: -11.700299263000488

Token 190: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.06549873948097229
    2. '_' → logprob: -2.8154988288879395
    3. ' =' → logprob: -5.6904988288879395
    4. ' _' → logprob: -9.190498352050781
    5. '_seq' → logprob: -10.315498352050781
    6. '=' → logprob: -12.940498352050781
    7. '_sequences' → logprob: -12.940498352050781
    8. '_space' → logprob: -13.190498352050781
    9. ' ' → logprob: -13.315498352050781
    10. 'sequence' → logprob: -14.190498352050781

Token 191: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0011767742689698935
    2. '=' → logprob: -6.751176834106445
    3. ' ' → logprob: -12.126176834106445
    4. ' =
' → logprob: -14.126176834106445
    5. ')' → logprob: -16.126176834106445
    6. ',' → logprob: -16.251176834106445
    7. ' ' → logprob: -16.626176834106445
    8. '.' → logprob: -17.376176834106445
    9. ' ,' → logprob: -17.376176834106445
    10. ' =)' → logprob: -17.376176834106445

Token 192: ' initial' (ID: 4871)
  Prédit: ' initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.10024570673704147
    2. 'initial' → logprob: -2.350245714187622
    3. 'Initial' → logprob: -10.600245475769043
    4. ' ' → logprob: -12.475245475769043
    5. '(initial' → logprob: -12.850245475769043
    6. '_initial' → logprob: -12.975245475769043
    7. '	initial' → logprob: -13.350245475769043
    8. ' ' → logprob: -13.475245475769043
    9. '.initial' → logprob: -13.850245475769043
    10. ' inicial' → logprob: -14.725245475769043

Token 193: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -1.7432603272027336e-06
    2. 'sequence' → logprob: -13.625001907348633
    3. '_' → logprob: -15.000001907348633
    4. 'Sequence' → logprob: -16.125001907348633
    5. '_SEQUENCE' → logprob: -17.375001907348633
    6. '_sequences' → logprob: -17.500001907348633
    7. ' sequence' → logprob: -18.750001907348633
    8. '_se' → logprob: -18.875001907348633
    9. ' _' → logprob: -19.250001907348633
    10. '_
' → logprob: -19.375001907348633

Token 194: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05258246511220932
    2. ' while' → logprob: -3.8025825023651123
    3. '
' → logprob: -4.052582263946533
    4. '        
' → logprob: -5.177582263946533
    5. 'while' → logprob: -5.177582263946533
    6. ' 
' → logprob: -8.927582740783691
    7. '  
' → logprob: -10.552582740783691
    8. '       
' → logprob: -11.052582740783691
    9. 'While' → logprob: -11.302582740783691
    10. '	while' → logprob: -11.552582740783691

Token 195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015467642806470394
    2. ' while' → logprob: -7.126546859741211
    3. '
' → logprob: -7.376546859741211
    4. 'while' → logprob: -9.501546859741211
    5. '        
' → logprob: -10.251546859741211
    6. '	while' → logprob: -13.501546859741211
    7. '   ' → logprob: -13.751546859741211
    8. '<|end|>' → logprob: -14.126546859741211
    9. ',' → logprob: -14.376546859741211
    10. '           ' → logprob: -14.501546859741211

Token 196: ' count' (ID: 3605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26773348450660706
    2. ' while' → logprob: -1.7677334547042847
    3. 'while' → logprob: -2.767733573913574
    4. '
' → logprob: -7.017733573913574
    5. '        
' → logprob: -7.892733573913574
    6. '   ' → logprob: -10.267733573913574
    7. '	while' → logprob: -10.892733573913574
    8. '    
' → logprob: -11.642733573913574
    9. '  
' → logprob: -12.517733573913574
    10. ' 
' → logprob: -12.642733573913574

Token 197: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002481842413544655
    2. '=' → logprob: -6.002481937408447
    3. ' ' → logprob: -13.002481460571289
    4. '_' → logprob: -13.877481460571289
    5. '   ' → logprob: -14.002481460571289
    6. 'inue' → logprob: -14.127481460571289
    7. ' +=' → logprob: -14.252481460571289
    8. 's' → logprob: -14.877481460571289
    9. ',' → logprob: -16.00248146057129
    10. '    ' → logprob: -16.12748146057129

Token 198: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3139292299747467
    2. ' ' → logprob: -1.3139292001724243
    3. '1' → logprob: -7.313929080963135
    4. ' 
' → logprob: -15.188929557800293
    5. '10' → logprob: -15.188929557800293
    6. '<|end|>' → logprob: -16.063928604125977
    7. '2' → logprob: -16.626428604125977
    8. ' ' → logprob: -16.876428604125977
    9. '   ' → logprob: -17.001428604125977
    10. '100' → logprob: -17.063928604125977

Token 199: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0016219799872487783
    2. ' ' → logprob: -7.001622200012207
    3. '1' → logprob: -7.251622200012207
    4. '   ' → logprob: -14.376622200012207
    5. '10' → logprob: -14.501622200012207
    6. '100' → logprob: -16.37662124633789
    7. '```' → logprob: -17.37662124633789
    8. '=' → logprob: -17.50162124633789
    9. '  ' → logprob: -17.56412124633789
    10. '       ' → logprob: -17.87662124633789

Token 200: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01019988115876913
    2. '       ' → logprob: -4.635200023651123
    3. ' while' → logprob: -8.385199546813965
    4. '<|end|>' → logprob: -9.885199546813965
    5. '        
' → logprob: -10.010199546813965
    6. ' 
' → logprob: -10.135199546813965
    7. '  
' → logprob: -10.510199546813965
    8. 'while' → logprob: -10.885199546813965
    9. '
' → logprob: -11.135199546813965
    10. '    
' → logprob: -12.510199546813965

Token 201: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4355221390724182
    2. '       ' → logprob: -1.0605220794677734
    3. ' while' → logprob: -5.185522079467773
    4. ' 
' → logprob: -7.435522079467773
    5. '        
' → logprob: -8.435522079467773
    6. 'while' → logprob: -8.810522079467773
    7. '  
' → logprob: -9.560522079467773
    8. '<|end|>' → logprob: -9.685522079467773
    9. '   ' → logprob: -10.435522079467773
    10. '    
' → logprob: -10.685522079467773

Token 202: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.17261485755443573
    2. '       ' → logprob: -1.9226148128509521
    3. ' while' → logprob: -4.422615051269531
    4. '
' → logprob: -8.547615051269531
    5. '        
' → logprob: -9.797615051269531
    6. '   ' → logprob: -10.172615051269531
    7. 'max' → logprob: -11.172615051269531
    8. '	while' → logprob: -13.047615051269531
    9. 'for' → logprob: -13.172615051269531
    10. '```' → logprob: -13.797615051269531

Token 203: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.6330854892730713
    2. 'True' → logprob: -0.7580854892730713
    3. 'count' → logprob: -8.633085250854492
    4. ' count' → logprob: -9.258085250854492
    5. 'current' → logprob: -9.758085250854492
    6. '   ' → logprob: -9.883085250854492
    7. '(True' → logprob: -10.133085250854492
    8. ' current' → logprob: -10.133085250854492
    9. ' ' → logprob: -12.383085250854492
    10. ' Tru' → logprob: -12.383085250854492

Token 204: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14863307774066925
    2. ':
' → logprob: -2.0236330032348633
    3. '           ' → logprob: -5.648633003234863
    4. ' and' → logprob: -6.773633003234863
    5. '       ' → logprob: -7.398633003234863
    6. ',' → logprob: -8.023633003234863
    7. '<|end|>' → logprob: -8.898633003234863
    8. '<|end|>' → logprob: -9.773633003234863
    9. ':

' → logprob: -10.398633003234863
    10. ' :' → logprob: -10.773633003234863

Token 205: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0028683508280664682
    2. '
' → logprob: -6.502868175506592
    3. ' transformed' → logprob: -7.252868175506592
    4. '            
' → logprob: -7.752868175506592
    5. ' next' → logprob: -9.37786865234375
    6. 'trans' → logprob: -10.00286865234375
    7. 'next' → logprob: -10.25286865234375
    8. ' new' → logprob: -11.50286865234375
    9. ' current' → logprob: -11.50286865234375
    10. ' previous' → logprob: -12.12786865234375

Token 206: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.7994844913482666
    2. '           ' → logprob: -1.0494844913482666
    3. 'next' (adapté à ' next') → logprob: -2.5494844913482666
    4. ' new' → logprob: -2.6744844913482666
    5. ' transformed' → logprob: -3.0494844913482666
    6. 'trans' → logprob: -5.9244842529296875
    7. 'new' → logprob: -6.0494842529296875
    8. ' previous' → logprob: -7.7994842529296875
    9. '.next' → logprob: -9.174484252929688
    10. '   ' → logprob: -9.549484252929688

Token 207: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -1.2113979209971149e-05
    2. '_' → logprob: -11.500012397766113
    3. '_seq' → logprob: -13.875012397766113
    4. 'sequence' → logprob: -14.125012397766113
    5. '_SEQUENCE' → logprob: -16.500011444091797
    6. '_sequences' → logprob: -16.750011444091797
    7. 'Sequence' → logprob: -17.250011444091797
    8. '_s' → logprob: -17.875011444091797
    9. ' =' → logprob: -18.125011444091797
    10. ' sequence' → logprob: -18.250011444091797

Token 208: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017024369444698095
    2. '=' → logprob: -6.376702308654785
    3. ' ' → logprob: -16.1267032623291
    4. ')' → logprob: -17.1267032623291
    5. ' =
' → logprob: -17.3767032623291
    6. ' ' → logprob: -18.3767032623291
    7. ',' → logprob: -18.3767032623291
    8. '.' → logprob: -19.3767032623291
    9. ' ==' → logprob: -19.3767032623291
    10. '  ' → logprob: -20.5017032623291

Token 209: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.04300091043114662
    2. 'self' → logprob: -3.1680009365081787
    3. '           ' → logprob: -13.918001174926758
    4. '	self' → logprob: -15.293001174926758
    5. '(self' → logprob: -16.168001174926758
    6. ' ' → logprob: -16.293001174926758
    7. '=self' → logprob: -16.668001174926758
    8. '
' → logprob: -16.793001174926758
    9. 's' → logprob: -16.918001174926758
    10. ' ' → logprob: -16.918001174926758

Token 210: '.transform' (ID: 17849)
  Prédit: '.transform'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.transform' → logprob: -0.00011617878044489771
    2. 'transform' → logprob: -9.500116348266602
    3. '.' → logprob: -10.375116348266602
    4. ' .' → logprob: -11.625116348266602
    5. '.trans' → logprob: -14.000116348266602
    6. '	transform' → logprob: -15.375116348266602
    7. '.transforms' → logprob: -17.6251163482666
    8. '(transform' → logprob: -17.7501163482666
    9. '           ' → logprob: -18.0001163482666
    10. '   ' → logprob: -18.1251163482666

Token 211: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -2.176947600673884e-05
    2. '.transform' → logprob: -11.000021934509277
    3. '.next' → logprob: -13.125021934509277
    4. '.er' → logprob: -13.625021934509277
    5. '(' → logprob: -15.125021934509277
    6. 'transform' → logprob: -15.250021934509277
    7. '().' → logprob: -15.250021934509277
    8. '(self' → logprob: -15.250021934509277
    9. '()' → logprob: -15.750021934509277
    10. '(transform' → logprob: -15.750021934509277

Token 212: '.transform' (ID: 17849)
  Prédit: '.transform'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.transform' → logprob: -0.0002656271681189537
    2. '.' → logprob: -8.250266075134277
    3. ' .' → logprob: -12.500266075134277
    4. 'transform' → logprob: -15.000266075134277
    5. '.trans' → logprob: -15.750266075134277
    6. ').' → logprob: -17.50026512145996
    7. '.
' → logprob: -18.25026512145996
    8. '	transform' → logprob: -18.37526512145996
    9. '   ' → logprob: -19.62526512145996
    10. '.Transform' → logprob: -20.00026512145996

Token 213: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.0005561320576816797
    2. '(' → logprob: -7.500555992126465
    3. '(
' → logprob: -12.875555992126465
    4. 'current' → logprob: -14.750555992126465
    5. '(next' → logprob: -16.62555694580078
    6. '(cur' → logprob: -17.00055694580078
    7. '(

' → logprob: -17.25055694580078
    8. '(previous' → logprob: -17.25055694580078
    9. '(curr' → logprob: -17.37555694580078
    10. ' current' → logprob: -17.62555694580078

Token 214: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -2.47495681833243e-05
    2. 'sequence' → logprob: -10.625024795532227
    3. '_' → logprob: -15.250024795532227
    4. 'Sequence' → logprob: -16.875024795532227
    5. ' sequence' → logprob: -17.125024795532227
    6. '_sequences' → logprob: -17.125024795532227
    7. '_SEQUENCE' → logprob: -17.875024795532227
    8. 's' → logprob: -18.750024795532227
    9. '_seq' → logprob: -19.125024795532227
    10. 'quence' → logprob: -19.250024795532227

Token 215: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6933555603027344
    2. ')
' → logprob: -0.6933555603027344
    3. '           ' → logprob: -9.318355560302734
    4. ')
' → logprob: -9.318355560302734
    5. '
' → logprob: -11.818355560302734
    6. ' )
' → logprob: -12.318355560302734
    7. '               ' → logprob: -12.943355560302734
    8. ')

' → logprob: -12.943355560302734
    9. ')return' → logprob: -13.568355560302734
    10. ')\
' → logprob: -13.568355560302734

Token 216: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5250793695449829
    2. '
' → logprob: -0.9000793695449829
    3. '            
' → logprob: -6.525079250335693
    4. '
' → logprob: -8.900079727172852
    5. ' if' → logprob: -8.900079727172852
    6. '<|end|>' → logprob: -9.150079727172852
    7. '          ' → logprob: -11.150079727172852
    8. '  
' → logprob: -11.275079727172852
    9. '    
' → logprob: -11.275079727172852
    10. 'if' → logprob: -11.650079727172852

Token 217: ' count' (ID: 3605)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5819304585456848
    2. ' if' → logprob: -0.8319304585456848
    3. 'if' → logprob: -5.456930637359619
    4. '
' → logprob: -6.456930637359619
    5. '       ' → logprob: -9.706930160522461
    6. '            
' → logprob: -10.956930160522461
    7. '            ' → logprob: -11.081930160522461
    8. '          ' → logprob: -11.831930160522461
    9. ' count' → logprob: -12.206930160522461
    10. '   ' → logprob: -12.331930160522461

Token 218: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0004891689168289304
    2. '+=' → logprob: -7.625489234924316
    3. ' ==' → logprob: -14.125489234924316
    4. ' +' → logprob: -15.750489234924316
    5. ' =' → logprob: -16.12548828125
    6. ' ' → logprob: -16.12548828125
    7. ' >=' → logprob: -17.00048828125
    8. '   ' → logprob: -17.37548828125
    9. '==' → logprob: -17.87548828125
    10. '+' → logprob: -18.00048828125

Token 219: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004620241466909647
    2. ' ' → logprob: -5.37962007522583
    3. '
' → logprob: -18.254619598388672
    4. ' ' → logprob: -19.004619598388672
    5. '   ' → logprob: -19.504619598388672
    6. '<|end|>' → logprob: -19.817119598388672
    7. '```' → logprob: -19.942119598388672
    8. '۱' → logprob: -20.317119598388672
    9. '>' → logprob: -21.192119598388672
    10. '`' → logprob: -21.192119598388672

Token 220: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '
' → logprob: -19.875
    4. '   ' → logprob: -21.0
    5. '```' → logprob: -22.125
    6. '           ' → logprob: -22.5
    7. '-' → logprob: -23.75
    8. '۱' → logprob: -24.0
    9. '2' → logprob: -24.5
    10. '  ' → logprob: -24.625

Token 221: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016792253591120243
    2. '
' → logprob: -6.501679420471191
    3. ' if' → logprob: -9.251679420471191
    4. '            
' → logprob: -9.751679420471191
    5. '   ' → logprob: -12.126679420471191
    6. 'if' → logprob: -12.251679420471191
    7. '    
' → logprob: -12.626679420471191
    8. '       ' → logprob: -12.626679420471191
    9. '  
' → logprob: -13.376679420471191
    10. '          ' → logprob: -14.251679420471191

Token 222: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013675399124622345
    2. ' if' → logprob: -4.388675212860107
    3. '
' → logprob: -7.388675212860107
    4. 'if' → logprob: -7.638675212860107
    5. '   ' → logprob: -10.388675689697266
    6. '       ' → logprob: -10.888675689697266
    7. '            
' → logprob: -12.388675689697266
    8. '          ' → logprob: -12.638675689697266
    9. ' ' → logprob: -13.138675689697266
    10. '<|end|>' → logprob: -13.388675689697266

Token 223: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.09568462520837784
    2. '           ' → logprob: -2.59568452835083
    3. ' if' → logprob: -4.09568452835083
    4. '       ' → logprob: -11.720685005187988
    5. '   ' → logprob: -13.845685005187988
    6. '          ' → logprob: -14.595685005187988
    7. 'If' → logprob: -15.595685005187988
    8. ' ' → logprob: -15.970685005187988
    9. '	if' → logprob: -16.220684051513672
    10. '               ' → logprob: -16.345684051513672

Token 224: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.026323402300477028
    2. 'next' → logprob: -3.6513233184814453
    3. ' current' → logprob: -11.026323318481445
    4. '	next' → logprob: -13.026323318481445
    5. ' nex' → logprob: -13.526323318481445
    6. 'current' → logprob: -14.151323318481445
    7. '(next' → logprob: -14.151323318481445
    8. ' n' → logprob: -14.401323318481445
    9. 'n' → logprob: -15.026323318481445
    10. '[next' → logprob: -15.776323318481445

Token 225: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -1.0325924449716695e-05
    2. 'quence' → logprob: -11.87501049041748
    3. 'sequence' → logprob: -12.75001049041748
    4. '_sequences' → logprob: -16.000009536743164
    5. '_SEQUENCE' → logprob: -16.125009536743164
    6. 'Sequence' → logprob: -16.125009536743164
    7. '_' → logprob: -16.625009536743164
    8. '_equ' → logprob: -17.375009536743164
    9. 'qu' → logprob: -18.000009536743164
    10. 'q' → logprob: -18.500009536743164

Token 226: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.002188329817727208
    2. '==' → logprob: -6.127188205718994
    3. ' __' → logprob: -13.752188682556152
    4. ' ' → logprob: -13.877188682556152
    5. ')==' → logprob: -14.877188682556152
    6. ')' → logprob: -15.377188682556152
    7. ' =' → logprob: -15.502188682556152
    8. '=' → logprob: -16.252187728881836
    9. '==
' → logprob: -16.252187728881836
    10. ' ==
' → logprob: -16.377187728881836

Token 227: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.04858839511871338
    2. 'current' → logprob: -3.048588275909424
    3. '(current' → logprob: -14.923588752746582
    4. ' ' → logprob: -15.673588752746582
    5. '[current' → logprob: -15.673588752746582
    6. '=current' → logprob: -15.923588752746582
    7. '	current' → logprob: -16.048587799072266
    8. '$current' → logprob: -16.798587799072266
    9. ' ' → logprob: -17.548587799072266
    10. '_current' → logprob: -17.548587799072266

Token 228: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -6.2729995988775045e-06
    2. 'sequence' → logprob: -12.000006675720215
    3. '_' → logprob: -17.0000057220459
    4. ' sequence' → logprob: -17.3750057220459
    5. '_sequences' → logprob: -17.7500057220459
    6. '_SEQUENCE' → logprob: -18.0000057220459
    7. 'Sequence' → logprob: -18.6250057220459
    8. '_seq' → logprob: -18.8750057220459
    9. 's' → logprob: -19.1250057220459
    10. '_s' → logprob: -19.6250057220459

Token 229: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.19814801216125488
    2. ':' → logprob: -1.8231480121612549
    3. ' or' → logprob: -4.073147773742676
    4. '           ' → logprob: -7.448147773742676
    5. '               ' → logprob: -7.573147773742676
    6. ':return' → logprob: -9.448147773742676
    7. '):
' → logprob: -11.323147773742676
    8. ' and' → logprob: -12.073147773742676
    9. ':
' → logprob: -12.073147773742676
    10. ':

' → logprob: -12.698147773742676

Token 230: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00027694785967469215
    2. '           ' → logprob: -8.750276565551758
    3. ' return' → logprob: -9.250276565551758
    4. 'return' → logprob: -10.875276565551758
    5. '
' → logprob: -13.500276565551758
    6. '                   ' → logprob: -14.250276565551758
    7. ' break' → logprob: -14.250276565551758
    8. '                
' → logprob: -15.375276565551758
    9. 'break' → logprob: -15.375276565551758
    10. '              ' → logprob: -15.500276565551758

Token 231: ' return' (ID: 622)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010768238455057144
    2. ' return' → logprob: -5.135768413543701
    3. 'return' (adapté à ' return') → logprob: -5.385768413543701
    4. '                   ' → logprob: -8.760767936706543
    5. '
' → logprob: -10.260767936706543
    6. '           ' → logprob: -10.510767936706543
    7. ' break' → logprob: -11.260767936706543
    8. 'break' → logprob: -11.385767936706543
    9. '                ' → logprob: -14.135767936706543
    10. '```' → logprob: -14.385767936706543

Token 232: ' count' (ID: 3605)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.7621728777885437
    2. 'count' → logprob: -1.5121729373931885
    3. ' current' → logprob: -2.0121729373931885
    4. 'next' → logprob: -2.1371729373931885
    5. ' next' → logprob: -3.3871729373931885
    6. ' count' → logprob: -4.637172698974609
    7. '(current' → logprob: -4.887172698974609
    8. '(count' → logprob: -5.137172698974609
    9. '(next' → logprob: -5.637172698974609
    10. ' (' → logprob: -7.262172698974609

Token 233: ' -' (ID: 533)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.363617962459102e-05
    2. '            
' → logprob: -10.500083923339844
    3. '
' → logprob: -10.750083923339844
    4. 'current' → logprob: -11.000083923339844
    5. '       ' → logprob: -11.500083923339844
    6. ' current' → logprob: -13.250083923339844
    7. '               ' → logprob: -13.375083923339844
    8. ',current' → logprob: -13.750083923339844
    9. '          ' → logprob: -14.000083923339844
    10. '   ' → logprob: -14.125083923339844

Token 234: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012451570364646614
    2. ' ' → logprob: -9.00012493133545
    3. '<|end|>' → logprob: -14.00012493133545
    4. '2' → logprob: -15.37512493133545
    5. '   ' → logprob: -17.000123977661133
    6. '0' → logprob: -17.500123977661133
    7. '  ' → logprob: -18.750123977661133
    8. '<|end|>' → logprob: -19.250123977661133
    9. '=' → logprob: -19.625123977661133
    10. '10' → logprob: -19.875123977661133

Token 235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.375001907348633
    3. '<|end|>' → logprob: -15.500001907348633
    4. '2' → logprob: -17.000001907348633
    5. '0' → logprob: -17.375001907348633
    6. '
' → logprob: -19.750001907348633
    7. '  ' → logprob: -20.062501907348633
    8. '   ' → logprob: -20.125001907348633
    9. '-' → logprob: -20.500001907348633
    10. '.' → logprob: -20.562501907348633

Token 236: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.180258191714529e-06
    2. ',' → logprob: -12.875008583068848
    3. '
' → logprob: -13.125008583068848
    4. '            
' → logprob: -13.375008583068848
    5. 'current' → logprob: -14.500008583068848
    6. '          ' → logprob: -14.625008583068848
    7. '       ' → logprob: -15.000008583068848
    8. '               ' → logprob: -15.625008583068848
    9. ' current' → logprob: -15.625008583068848
    10. ' and' → logprob: -16.00000762939453

Token 237: ' current' (ID: 2208)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.5567841529846191
    2. 'current' → logprob: -1.0567841529846191
    3. ' next' → logprob: -3.056784152984619
    4. ' current' → logprob: -3.431784152984619
    5. '
' → logprob: -11.806783676147461
    6. '(next' → logprob: -14.181783676147461
    7. 'curr' → logprob: -14.306783676147461
    8. '[next' → logprob: -14.306783676147461
    9. '	next' → logprob: -14.806783676147461
    10. 'count' → logprob: -15.681783676147461

Token 238: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -15.5
    3. 'sequence' → logprob: -15.75
    4. '_sequences' → logprob: -16.75
    5. '_SEQUENCE' → logprob: -18.125
    6. ' sequence' → logprob: -18.375
    7. '_seq' → logprob: -19.5
    8. 'Sequence' → logprob: -19.5
    9. '_s' → logprob: -19.625
    10. ' _' → logprob: -21.125

Token 239: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006603728979825974
    2. '
' → logprob: -7.875660419464111
    3. '            
' → logprob: -8.250659942626953
    4. 'current' → logprob: -11.625659942626953
    5. '       ' → logprob: -12.500659942626953
    6. ' current' → logprob: -12.625659942626953
    7. '          ' → logprob: -14.250659942626953
    8. '               ' → logprob: -14.625659942626953
    9. '           
' → logprob: -15.000659942626953
    10. '                
' → logprob: -15.125659942626953

Token 240: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007887827814556658
    2. 'current' → logprob: -7.625788688659668
    3. '
' → logprob: -8.500788688659668
    4. ' current' → logprob: -10.000788688659668
    5. '            
' → logprob: -10.125788688659668
    6. '       ' → logprob: -11.750788688659668
    7. '          ' → logprob: -13.875788688659668
    8. '   ' → logprob: -14.500788688659668
    9. '               ' → logprob: -15.000788688659668
    10. '           
' → logprob: -15.125788688659668

Token 241: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.013566276989877224
    2. ' current' → logprob: -4.513566493988037
    3. '           ' → logprob: -6.013566493988037
    4. '       ' → logprob: -9.888566017150879
    5. '   ' → logprob: -11.513566017150879
    6. '
' → logprob: -12.638566017150879
    7. 'else' → logprob: -12.763566017150879
    8. '	current' → logprob: -13.513566017150879
    9. 'if' → logprob: -14.013566017150879
    10. '(current' → logprob: -16.263566970825195

Token 242: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -1.306760805164231e-05
    2. 'sequence' → logprob: -11.25001335144043
    3. ' sequence' → logprob: -17.25001335144043
    4. '_' → logprob: -17.37501335144043
    5. '_seq' → logprob: -17.62501335144043
    6. '_sequences' → logprob: -19.62501335144043
    7. '_SEQUENCE' → logprob: -20.00001335144043
    8. 'Sequence' → logprob: -20.75001335144043
    9. 'sequ' → logprob: -21.87501335144043
    10. '_se' → logprob: -21.87501335144043

Token 243: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020763427019119
    2. '=' → logprob: -2.350207567214966
    3. ' ' → logprob: -14.600207328796387
    4. ',' → logprob: -14.975207328796387
    5. '=current' → logprob: -16.475208282470703
    6. '.' → logprob: -17.600208282470703
    7. ' =
' → logprob: -17.850208282470703
    8. ')' → logprob: -18.225208282470703
    9. '＝' → logprob: -18.850208282470703
    10. '.=' → logprob: -18.850208282470703

Token 244: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.5759395956993103
    2. 'next' → logprob: -0.8259395956993103
    3. '(next' → logprob: -16.950939178466797
    4. '	next' → logprob: -17.200939178466797
    5. '[next' → logprob: -17.200939178466797
    6. '.next' → logprob: -17.575939178466797
    7. '_next' → logprob: -18.950939178466797
    8. ',next' → logprob: -20.950939178466797
    9. 'Next' → logprob: -21.325939178466797
    10. ' nex' → logprob: -22.325939178466797

Token 245: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -2.339278580620885e-06
    2. 'sequence' → logprob: -13.000001907348633
    3. '_' → logprob: -17.000001907348633
    4. 'quence' → logprob: -17.500001907348633
    5. '_SEQUENCE' → logprob: -18.000001907348633
    6. '_sequences' → logprob: -18.250001907348633
    7. 'Sequence' → logprob: -18.375001907348633
    8. ' sequence' → logprob: -19.625001907348633
    9. '(sequence' → logprob: -19.750001907348633
    10. '_sentence' → logprob: -21.125001907348633

Token 246: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 247: 'class' (ID: 1444)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.00567291397601366
    2. 'sequence' → logprob: -5.630672931671143
    3. 'class' → logprob: -7.130672931671143
    4. 'def' → logprob: -7.380672931671143
    5. '
' → logprob: -8.255672454833984
    6. '```' → logprob: -8.630672454833984
    7. 'f' → logprob: -10.630672454833984
    8. 'import' → logprob: -10.755672454833984
    9. 's' → logprob: -10.755672454833984
    10. 'if' → logprob: -10.880672454833984

Token 248: ' Input' (ID: 10090)
  Prédit: 'Frequency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Frequency' → logprob: -2.4447712898254395
    2. ' Stabil' → logprob: -2.4447712898254395
    3. ' Frequency' → logprob: -2.5697712898254395
    4. 'Test' → logprob: -2.8197712898254395
    5. 'Cycle' → logprob: -3.0697712898254395
    6. 'Run' → logprob: -3.0697712898254395
    7. 'Sequence' → logprob: -3.1947712898254395
    8. ' Sequence' → logprob: -3.1947712898254395
    9. ' Cycle' → logprob: -3.3197712898254395
    10. 'Con' → logprob: -3.6947712898254395

Token 249: 'Output' (ID: 6310)
  Prédit: 'Sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -0.6533058881759644
    2. 'Reader' → logprob: -1.4033058881759644
    3. 'Handler' → logprob: -2.278306007385254
    4. 'Provider' → logprob: -3.028306007385254
    5. 'Processor' → logprob: -3.028306007385254
    6. 'Parser' → logprob: -3.778306007385254
    7. 'Generator' → logprob: -5.653306007385254
    8. 'Data' → logprob: -5.653306007385254
    9. ':' → logprob: -6.528306007385254
    10. 'Sampler' → logprob: -7.028306007385254

Token 250: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.04355742409825325
    2. 'Processor' → logprob: -3.9185574054718018
    3. 'Manager' → logprob: -4.168557643890381
    4. ':' → logprob: -5.918557643890381
    5. 'Helper' → logprob: -5.918557643890381
    6. 'Sequence' → logprob: -8.043557167053223
    7. 'Transformer' → logprob: -8.293557167053223
    8. 'Mapper' → logprob: -8.418557167053223
    9. ':
' → logprob: -8.543557167053223
    10. 'Reader' → logprob: -8.918557167053223

Token 251: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004103454295545816
    2. ':
' → logprob: -5.504103660583496
    3. ' :' → logprob: -11.004103660583496
    4. ':def' → logprob: -12.004103660583496
    5. ':

' → logprob: -14.504103660583496
    6. ' :
' → logprob: -14.754103660583496
    7. '   ' → logprob: -15.129103660583496
    8. '):' → logprob: -15.379103660583496
    9. '<|end|>' → logprob: -15.379103660583496
    10. '(' → logprob: -15.879103660583496

Token 252: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023401660844683647
    2. ' def' → logprob: -3.7734017372131348
    3. 'def' → logprob: -8.773401260375977
    4. '   ' → logprob: -14.773401260375977
    5. ',' → logprob: -15.023401260375977
    6. '	def' → logprob: -15.648401260375977
    7. ' class' → logprob: -16.148401260375977
    8. '```' → logprob: -16.523401260375977
    9. ':' → logprob: -17.023401260375977
    10. ':def' → logprob: -17.023401260375977

Token 253: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.06321441382169724
    2. 'def' (adapté à ' def') → logprob: -2.8132143020629883
    3. '   ' → logprob: -6.688214302062988
    4. '	def' → logprob: -15.313214302062988
    5. '```' → logprob: -16.813215255737305
    6. '@' → logprob: -16.938215255737305
    7. 'import' → logprob: -16.938215255737305
    8. ' @' → logprob: -17.438215255737305
    9. ' ' → logprob: -17.438215255737305
    10. '    ' → logprob: -17.563215255737305

Token 254: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.236830472946167
    2. ' __' → logprob: -1.611830472946167
    3. 'def' → logprob: -5.111830711364746
    4. ' init' → logprob: -5.986830711364746
    5. '__' → logprob: -6.736830711364746
    6. ' read' → logprob: -7.861830711364746
    7. 'init' → logprob: -7.861830711364746
    8. ' process' → logprob: -8.111830711364746
    9. ' handle' → logprob: -8.361830711364746
    10. ' parse' → logprob: -9.236830711364746

Token 255: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00011784763046307489
    2. 'iter' → logprob: -9.250118255615234
    3. 'int' → logprob: -11.375118255615234
    4. 'new' → logprob: -12.625118255615234
    5. 'it' → logprob: -13.125118255615234
    6. 'nit' → logprob: -13.625118255615234
    7. 'def' → logprob: -13.875118255615234
    8. 'enter' → logprob: -14.125118255615234
    9. 'call' → logprob: -14.625118255615234
    10. ' init' → logprob: -15.500118255615234

Token 256: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.01431617047637701
    2. '(self' → logprob: -4.389316082000732
    3. '__' → logprob: -6.764316082000732
    4. '(' → logprob: -7.764316082000732
    5. '__(
' → logprob: -9.01431655883789
    6. ' (' → logprob: -9.51431655883789
    7. '_(' → logprob: -12.01431655883789
    8. '__((' → logprob: -12.01431655883789
    9. 'self' → logprob: -12.13931655883789
    10. ')(' → logprob: -12.63931655883789

Token 257: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001992490579141304
    2. ')' → logprob: -8.625199317932129
    3. '):
' → logprob: -11.125199317932129
    4. ' self' → logprob: -12.875199317932129
    5. '
' → logprob: -13.500199317932129
    6. '   ' → logprob: -15.250199317932129
    7. ')(' → logprob: -15.375199317932129
    8. '       ' → logprob: -16.000198364257812
    9. '(self' → logprob: -16.375198364257812
    10. ')
' → logprob: -16.500198364257812

Token 258: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3524201810359955
    2. ',' → logprob: -1.2274202108383179
    3. '):
' → logprob: -5.852420330047607
    4. ' ):' → logprob: -7.727420330047607
    5. ')' → logprob: -7.977420330047607
    6. 'self' → logprob: -9.35241985321045
    7. ',input' → logprob: -9.47741985321045
    8. ' ,' → logprob: -9.85241985321045
    9. '   ' → logprob: -10.60241985321045
    10. '():' → logprob: -10.97741985321045

Token 259: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011210862547159195
    2. '       ' → logprob: -5.261210918426514
    3. ' self' → logprob: -5.636210918426514
    4. '   ' → logprob: -6.261210918426514
    5. 'def' → logprob: -8.136210441589355
    6. 'input' → logprob: -10.136210441589355
    7. '
' → logprob: -10.261210441589355
    8. ')' → logprob: -10.886210441589355
    9. '```' → logprob: -11.011210441589355
    10. '0' → logprob: -12.011210441589355

Token 260: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.16283881664276123
    2. 'pass' → logprob: -2.037838935852051
    3. '       ' → logprob: -4.162838935852051
    4. ' self' → logprob: -5.912838935852051
    5. ' pass' → logprob: -6.537838935852051
    6. '   ' → logprob: -9.03783893585205
    7. '
' → logprob: -9.28783893585205
    8. 'import' → logprob: -11.91283893585205
    9. 'def' → logprob: -12.41283893585205
    10. '	pass' → logprob: -12.66283893585205

Token 261: '.transform' (ID: 17849)
  Prédit: '.sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sequence' → logprob: -0.9129692912101746
    2. '.transform' → logprob: -1.2879693508148193
    3. '.input' → logprob: -1.9129693508148193
    4. '.data' → logprob: -2.9129693508148193
    5. '.' → logprob: -3.6629693508148193
    6. '.initial' → logprob: -4.16296911239624
    7. '.separator' → logprob: -4.28796911239624
    8. '._' → logprob: -4.66296911239624
    9. '.inputs' → logprob: -4.78796911239624
    10. '.history' → logprob: -5.16296911239624

Token 262: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -7.696077227592468e-05
    2. 'ers' → logprob: -9.500077247619629
    3. '=' → logprob: -13.875077247619629
    4. 'ation' → logprob: -15.000077247619629
    5. '   ' → logprob: -15.500077247619629
    6. 'erm' → logprob: -16.000076293945312
    7. 'class' → logprob: -16.125076293945312
    8. 'ations' → logprob: -16.625076293945312
    9. ' =' → logprob: -16.875076293945312
    10. 'erer' → logprob: -17.000076293945312

Token 263: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197037547826767
    2. '=' → logprob: -2.8119704723358154
    3. '<|end|>' → logprob: -13.811970710754395
    4. ' ' → logprob: -14.061970710754395
    5. '  ' → logprob: -15.186970710754395
    6. '=None' → logprob: -15.436970710754395
    7. '   ' → logprob: -15.811970710754395
    8. ' =
' → logprob: -15.936970710754395
    9. ')' → logprob: -16.811969757080078
    10. ',' → logprob: -17.311969757080078

Token 264: ' Frequency' (ID: 79273)
  Prédit: ' Frequency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Frequency' → logprob: -0.47407716512680054
    2. 'Frequency' → logprob: -0.9740771651268005
    3. ' frequency' → logprob: -16.349077224731445
    4. 'Freq' → logprob: -17.349077224731445
    5. '_frequency' → logprob: -17.849077224731445
    6. 'Sequence' → logprob: -19.599077224731445
    7. 'frequency' → logprob: -20.349077224731445
    8. ' ' → logprob: -21.349077224731445
    9. 'F' → logprob: -21.474077224731445
    10. ' Frequ' → logprob: -22.099077224731445

Token 265: 'Transformer' (ID: 48916)
  Prédit: 'Transformer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Transformer' → logprob: -1.3856492842023727e-06
    2. ' Transformer' → logprob: -13.750000953674316
    3. 'transform' → logprob: -16.375001907348633
    4. '       ' → logprob: -17.000001907348633
    5. 'Tokenizer' → logprob: -17.000001907348633
    6. '   ' → logprob: -17.125001907348633
    7. '           ' → logprob: -18.625001907348633
    8. 'Frequency' → logprob: -19.000001907348633
    9. '
' → logprob: -19.000001907348633
    10. 'Trans' → logprob: -19.375001907348633

Token 266: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 267: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13834348320960999
    2. 'def' → logprob: -2.513343572616577
    3. '<|end|>' → logprob: -3.263343572616577
    4. ' def' → logprob: -5.013343334197998
    5. '
' → logprob: -6.138343334197998
    6. '<|end|>' → logprob: -6.888343334197998
    7. '       ' → logprob: -10.263343811035156
    8. '    
' → logprob: -10.763343811035156
    9. '```' → logprob: -11.013343811035156
    10. ' ' → logprob: -11.263343811035156

Token 268: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0018234545132145286
    2. ' self' → logprob: -6.626823425292969
    3. 'def' → logprob: -8.376823425292969
    4. '
' → logprob: -8.751823425292969
    5. '<|end|>' → logprob: -10.001823425292969
    6. '       ' → logprob: -10.126823425292969
    7. '   ' → logprob: -11.501823425292969
    8. '        
' → logprob: -13.251823425292969
    9. 'pass' → logprob: -13.501823425292969
    10. '	self' → logprob: -13.501823425292969

Token 269: '.fixed' (ID: 122142)
  Prédit: '.find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.16286829113960266
    2. 'finder' → logprob: -1.9128682613372803
    3. '.fixed' → logprob: -6.662868499755859
    4. 'find' → logprob: -7.912868499755859
    5. '.' → logprob: -8.03786849975586
    6. ' finder' → logprob: -8.41286849975586
    7. 'fixed' → logprob: -9.03786849975586
    8. ' .' → logprob: -9.16286849975586
    9. '
' → logprob: -10.03786849975586
    10. '   ' → logprob: -10.91286849975586

Token 270: '_point' (ID: 15466)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0032573307398706675
    2. '_point' → logprob: -5.7532572746276855
    3. 'point' → logprob: -10.003257751464844
    4. '-point' → logprob: -11.628257751464844
    5. '_Point' → logprob: -11.878257751464844
    6. ' Point' → logprob: -12.128257751464844
    7. '<Point' → logprob: -12.253257751464844
    8. '	Point' → logprob: -12.753257751464844
    9. 'Finder' → logprob: -13.253257751464844
    10. '_POINT' → logprob: -14.378257751464844

Token 271: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.014396901242434978
    2. 'finder' → logprob: -4.264396667480469
    3. 'Finder' → logprob: -9.139396667480469
    4. '=' → logprob: -9.764396667480469
    5. ' =' → logprob: -10.014396667480469
    6. ' finder' → logprob: -12.264396667480469
    7. 'find' → logprob: -12.764396667480469
    8. '=find' → logprob: -13.014396667480469
    9. '   ' → logprob: -13.139396667480469
    10. '_' → logprob: -13.139396667480469

Token 272: 'inder' (ID: 5508)
  Prédit: 'inder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inder' → logprob: -2.816093228830141e-06
    2. 'ind' → logprob: -14.12500286102295
    3. ' inder' → logprob: -14.37500286102295
    4. '{' → logprob: -15.37500286102295
    5. '_' → logprob: -15.62500286102295
    6. '#' → logprob: -16.250001907348633
    7. '`' → logprob: -16.375001907348633
    8. '
' → logprob: -16.500001907348633
    9. 'inde' → logprob: -16.625001907348633
    10. '\' → logprob: -16.750001907348633

Token 273: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326377391815186
    2. '=' → logprob: -1.3132637739181519
    3. ' ' → logprob: -13.313263893127441
    4. '=find' → logprob: -16.438262939453125
    5. '<|end|>' → logprob: -16.688262939453125
    6. ' =
' → logprob: -17.063262939453125
    7. '        ' → logprob: -17.563262939453125
    8. '       ' → logprob: -17.563262939453125
    9. '.' → logprob: -17.938262939453125
    10. '=None' → logprob: -17.938262939453125

Token 274: ' Fixed' (ID: 42962)
  Prédit: ' Fixed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Fixed' → logprob: -0.0019288709154352546
    2. 'Fixed' → logprob: -6.251928806304932
    3. ' Fix' → logprob: -16.251928329467773
    4. ' fixed' → logprob: -16.251928329467773
    5. ' ' → logprob: -19.376928329467773
    6. ' ' → logprob: -19.876928329467773
    7. '_fixed' → logprob: -20.626928329467773
    8. '.Fixed' → logprob: -21.001928329467773
    9. ' F' → logprob: -21.376928329467773
    10. 'Fix' → logprob: -21.501928329467773

Token 275: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -5.1689596148207784e-05
    2. 'oint' → logprob: -9.875051498413086
    3. ' Point' → logprob: -16.125051498413086
    4. 'point' → logprob: -17.375051498413086
    5. '	Point' → logprob: -18.250051498413086
    6. '<Point' → logprob: -18.625051498413086
    7. '_point' → logprob: -19.125051498413086
    8. '_Point' → logprob: -19.500051498413086
    9. 'Points' → logprob: -19.750051498413086
    10. 'P' → logprob: -20.000051498413086

Token 276: 'Finder' (ID: 42976)
  Prédit: 'Finder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Finder' → logprob: -6.32523515378125e-05
    2. 'finder' → logprob: -10.250062942504883
    3. 'inder' → logprob: -10.625062942504883
    4. 'Point' → logprob: -13.000062942504883
    5. ' finder' → logprob: -14.500062942504883
    6. ' Finder' → logprob: -14.750062942504883
    7. 'er' → logprob: -16.500062942504883
    8. 'Find' → logprob: -16.875062942504883
    9. 'Pointer' → logprob: -17.125062942504883
    10. 'ixer' → logprob: -17.500062942504883

Token 277: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.231182826217264e-05
    2. '(' → logprob: -9.875072479248047
    3. '(
' → logprob: -10.875072479248047
    4. 'self' → logprob: -13.375072479248047
    5. '       ' → logprob: -15.250072479248047
    6. '()' → logprob: -17.625072479248047
    7. ' (' → logprob: -17.750072479248047
    8. ' self' → logprob: -17.875072479248047
    9. '(

' → logprob: -19.000072479248047
    10. '        
' → logprob: -19.125072479248047

Token 278: '.transform' (ID: 17849)
  Prédit: '.transform'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.transform' → logprob: -2.3438327843905427e-05
    2. 'transform' → logprob: -11.00002384185791
    3. ' .' → logprob: -12.50002384185791
    4. '.' → logprob: -12.75002384185791
    5. '	transform' → logprob: -17.500022888183594
    6. ').' → logprob: -18.250022888183594
    7. '.trans' → logprob: -18.375022888183594
    8. '(transform' → logprob: -18.500022888183594
    9. '.
' → logprob: -18.875022888183594
    10. '
' → logprob: -19.375022888183594

Token 279: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -9.090760431718081e-05
    2. 'orm' → logprob: -9.375090599060059
    3. 'or' → logprob: -13.625090599060059
    4. '   ' → logprob: -14.375090599060059
    5. 'e' → logprob: -14.375090599060059
    6. 'erer' → logprob: -14.750090599060059
    7. '```' → logprob: -14.875090599060059
    8. 'mer' → logprob: -15.125090599060059
    9. ' er' → logprob: -15.250090599060059
    10. 'former' → logprob: -15.250090599060059

Token 280: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -15.125000953674316
    3. ' )' → logprob: -15.500000953674316
    4. ')

' → logprob: -17.0
    5. '   ' → logprob: -17.125
    6. '<|end|>' → logprob: -17.375
    7. '}' → logprob: -17.75
    8. ' ' → logprob: -18.375
    9. ')}' → logprob: -18.375
    10. '       ' → logprob: -19.625

Token 281: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11338196694850922
    2. 'def' → logprob: -2.738381862640381
    3. '
' → logprob: -3.738381862640381
    4. ' def' → logprob: -3.988381862640381
    5. '    
' → logprob: -9.238382339477539
    6. '	def' → logprob: -10.238382339477539
    7. '<|end|>' → logprob: -10.988382339477539
    8. '```' → logprob: -11.238382339477539
    9. ' ' → logprob: -11.613382339477539
    10. '  ' → logprob: -12.738382339477539

Token 282: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0004891689168289304
    2. ' def' → logprob: -7.750489234924316
    3. '   ' → logprob: -9.750489234924316
    4. '	def' → logprob: -16.00048828125
    5. '
' → logprob: -16.87548828125
    6. 'de' → logprob: -18.12548828125
    7. ' ' → logprob: -18.50048828125
    8. '    
' → logprob: -19.50048828125
    9. '```' → logprob: -19.50048828125
    10. '  ' → logprob: -20.12548828125

Token 283: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.9797987937927246
    2. ' run' → logprob: -1.2297987937927246
    3. 'run' → logprob: -2.4797987937927246
    4. ' read' → logprob: -2.6047987937927246
    5. 'process' → logprob: -2.6047987937927246
    6. ' find' → logprob: -3.1047987937927246
    7. 'read' → logprob: -3.2297987937927246
    8. ' solve' → logprob: -5.354798793792725
    9. ' def' → logprob: -5.604798793792725
    10. 'find' → logprob: -5.729798793792725

Token 284: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.007132692728191614
    2. '_input' → logprob: -5.632132530212402
    3. '(' → logprob: -6.507132530212402
    4. '_line' → logprob: -6.757132530212402
    5. '_sequence' → logprob: -7.132132530212402
    6. '_sequences' → logprob: -10.382132530212402
    7. '_' → logprob: -11.257132530212402
    8. '_(' → logprob: -12.132132530212402
    9. '_data' → logprob: -12.257132530212402
    10. '_self' → logprob: -12.632132530212402

Token 285: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007556340657174587
    2. '_sequence' → logprob: -5.882556438446045
    3. '):' → logprob: -6.632556438446045
    4. ' ,' → logprob: -6.882556438446045
    5. ',input' → logprob: -7.632556438446045
    6. '_input' → logprob: -7.757556438446045
    7. 'self' → logprob: -7.882556438446045
    8. '_' → logprob: -8.257555961608887
    9. '_line' → logprob: -8.882555961608887
    10. 'sequence' → logprob: -8.882555961608887

Token 286: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012066309340298176
    2. 'input' → logprob: -5.38706636428833
    3. 'n' → logprob: -6.01206636428833
    4. 'line' → logprob: -6.88706636428833
    5. 'try' → logprob: -6.88706636428833
    6. 'import' → logprob: -7.13706636428833
    7. 'elements' → logprob: -7.13706636428833
    8. 'sequence' → logprob: -7.63706636428833
    9. '```' → logprob: -8.387065887451172
    10. 'initial' → logprob: -9.512065887451172

Token 287: ' while' (ID: 2049)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3897315561771393
    2. 'n' → logprob: -1.514731526374817
    3. ' initial' → logprob: -3.5147316455841064
    4. ' sequence' → logprob: -4.139731407165527
    5. ' input' → logprob: -4.389731407165527
    6. ' elements' → logprob: -4.764731407165527
    7. ' lines' → logprob: -5.014731407165527
    8. '       ' → logprob: -5.139731407165527
    9. 'input' → logprob: -5.389731407165527
    10. 'import' → logprob: -5.639731407165527

Token 288: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.03805044665932655
    2. 'True' → logprob: -3.288050413131714
    3. '(True' → logprob: -11.663050651550293
    4. '=True' → logprob: -15.413050651550293
    5. ' ' → logprob: -16.413049697875977
    6. ' ' → logprob: -17.038049697875977
    7. ' Tru' → logprob: -17.163049697875977
    8. '   ' → logprob: -17.288049697875977
    9. '1' → logprob: -17.538049697875977
    10. 'Tr' → logprob: -18.663049697875977

Token 289: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.027299558743834496
    2. ':
' → logprob: -4.152299404144287
    3. '           ' → logprob: -4.527299404144287
    4. ',' → logprob: -8.152299880981445
    5. '():' → logprob: -10.152299880981445
    6. '():
' → logprob: -11.152299880981445
    7. ' :' → logprob: -11.402299880981445
    8. '       ' → logprob: -11.527299880981445
    9. '):
' → logprob: -12.402299880981445
    10. ':

' → logprob: -12.902299880981445

Token 290: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008414304465986788
    2. 'try' → logprob: -8.12584114074707
    3. ' line' → logprob: -8.37584114074707
    4. ' try' → logprob: -8.37584114074707
    5. 'input' → logprob: -10.12584114074707
    6. 'line' → logprob: -10.50084114074707
    7. 's' → logprob: -12.25084114074707
    8. ' input' → logprob: -12.62584114074707
    9. '          ' → logprob: -13.75084114074707
    10. '   ' → logprob: -13.87584114074707

Token 291: ' n' (ID: 297)
  Prédit: ' try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' try' → logprob: -0.617378294467926
    2. 'try' → logprob: -1.6173782348632812
    3. ' line' → logprob: -1.8673782348632812
    4. '           ' → logprob: -2.7423782348632812
    5. 'line' → logprob: -3.2423782348632812
    6. ' input' → logprob: -6.742378234863281
    7. 'input' → logprob: -6.742378234863281
    8. 'user' → logprob: -7.617378234863281
    9. ' user' → logprob: -7.617378234863281
    10. '   ' → logprob: -7.867378234863281

Token 292: '_line' (ID: 14418)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026335718110203743
    2. '=' → logprob: -3.6513357162475586
    3. '=int' → logprob: -11.151335716247559
    4. '_input' → logprob: -11.776335716247559
    5. '_line' → logprob: -12.276335716247559
    6. ' ' → logprob: -12.776335716247559
    7. '=input' → logprob: -13.151335716247559
    8. '_' → logprob: -13.526335716247559
    9. '_str' → logprob: -14.401335716247559
    10. ' =
' → logprob: -14.401335716247559

Token 293: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006715370807796717
    2. '=' → logprob: -5.006715297698975
    3. ' ' → logprob: -17.631715774536133
    4. '   ' → logprob: -18.506715774536133
    5. 's' → logprob: -18.881715774536133
    6. '=input' → logprob: -19.256715774536133
    7. 'n' → logprob: -19.381715774536133
    8. '    ' → logprob: -19.631715774536133
    9. '=line' → logprob: -20.006715774536133
    10. '       ' → logprob: -20.256715774536133

Token 294: ' self' (ID: 1051)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10020667314529419
    2. ' input' → logprob: -2.3502066135406494
    3. '=input' → logprob: -17.97520637512207
    4. '(input' → logprob: -18.22520637512207
    5. ' ' → logprob: -18.97520637512207
    6. '<input' → logprob: -19.85020637512207
    7. '	input' → logprob: -20.22520637512207
    8. 'in' → logprob: -20.60020637512207
    9. 'self' → logprob: -20.72520637512207
    10. '   ' → logprob: -20.85020637512207

Token 295: '._' (ID: 2697)
  Prédit: '.input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.8297095894813538
    2. '.' → logprob: -0.9547095894813538
    3. '.readline' → logprob: -2.204709529876709
    4. '.stdin' → logprob: -3.454709529876709
    5. '._' → logprob: -4.079709529876709
    6. 'input' → logprob: -4.454709529876709
    7. 'put' → logprob: -5.329709529876709
    8. '.__' → logprob: -7.454709529876709
    9. '=input' → logprob: -7.579709529876709
    10. '.\' → logprob: -8.079710006713867

Token 296: 'read' (ID: 1293)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6335460543632507
    2. 'read' → logprob: -0.8835460543632507
    3. 'get' → logprob: -3.2585461139678955
    4. 'strip' → logprob: -5.508545875549316
    5. 'stdin' → logprob: -5.633545875549316
    6. 'in' → logprob: -6.008545875549316
    7. 'getline' → logprob: -6.883545875549316
    8. '.readline' → logprob: -7.821045875549316
    9. 'inp' → logprob: -7.883545875549316
    10. ' input' → logprob: -7.883545875549316

Token 297: '_non' (ID: 52193)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009662708267569542
    2. 'line' → logprob: -4.884662628173828
    3. '().' → logprob: -6.884662628173828
    4. 'input' → logprob: -7.259662628173828
    5. '()
' → logprob: -9.384662628173828
    6. '()\' → logprob: -9.759662628173828
    7. '_line' → logprob: -10.009662628173828
    8. 'ine' → logprob: -10.384662628173828
    9. '_input' → logprob: -10.634662628173828
    10. '()<' → logprob: -10.884662628173828

Token 298: 'empty' (ID: 6857)
  Prédit: 'empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.037643756717443466
    2. '_empty' → logprob: -3.9126436710357666
    3. 'blank' → logprob: -4.162643909454346
    4. '_blank' → logprob: -6.912643909454346
    5. 'empt' → logprob: -8.787643432617188
    6. 'm' → logprob: -10.037643432617188
    7. 'def' → logprob: -10.412643432617188
    8. ' empty' → logprob: -10.412643432617188
    9. '_' → logprob: -10.662643432617188
    10. '-empty' → logprob: -10.787643432617188

Token 299: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.4397834241390228
    2. '()' → logprob: -1.5647834539413452
    3. 'line' → logprob: -1.9397834539413452
    4. '()
' → logprob: -6.314783573150635
    5. '()\' → logprob: -7.689783573150635
    6. '_' → logprob: -7.939783573150635
    7. ' line' → logprob: -8.689783096313477
    8. '()

' → logprob: -9.689783096313477
    9. '\' → logprob: -11.064783096313477
    10. 'Line' → logprob: -11.189783096313477

Token 300: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0325924449716695e-05
    2. '()
' → logprob: -11.62501049041748
    3. '()

' → logprob: -15.37501049041748
    4. '().' → logprob: -15.50001049041748
    5. '();' → logprob: -15.87501049041748
    6. '(' → logprob: -16.000009536743164
    7. '())' → logprob: -16.000009536743164
    8. '()`' → logprob: -16.000009536743164
    9. '()\' → logprob: -16.000009536743164
    10. ' ()' → logprob: -16.375009536743164

Token 301: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013205057941377163
    2. '()' → logprob: -4.638205051422119
    3. 'n' → logprob: -7.013205051422119
    4. 'if' → logprob: -7.138205051422119
    5. '       ' → logprob: -7.263205051422119
    6. ' if' → logprob: -7.513205051422119
    7. '()
' → logprob: -8.388205528259277
    8. '   ' → logprob: -9.638205528259277
    9. ' n' → logprob: -9.763205528259277
    10. '               ' → logprob: -10.513205528259277

Token 302: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7094745635986328
    2. ' if' → logprob: -0.7094745635986328
    3. '           ' → logprob: -4.209474563598633
    4. 'n' → logprob: -6.709474563598633
    5. ' n' → logprob: -9.084474563598633
    6. '       ' → logprob: -12.459474563598633
    7. 'i' → logprob: -13.709474563598633
    8. '   ' → logprob: -14.084474563598633
    9. 'try' → logprob: -14.709474563598633
    10. ' ' → logprob: -15.334474563598633

Token 303: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.43307018280029297
    2. 'n' → logprob: -1.058070182800293
    3. ' not' → logprob: -5.558070182800293
    4. 'not' → logprob: -7.683070182800293
    5. ' ' → logprob: -10.808070182800293
    6. ' ' → logprob: -11.933070182800293
    7. 'n't' → logprob: -12.433070182800293
    8. '	n' → logprob: -12.433070182800293
    9. '   ' → logprob: -13.183070182800293
    10. '    ' → logprob: -13.745570182800293

Token 304: '_line' (ID: 14418)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5577945709228516
    2. ' is' → logprob: -1.0577945709228516
    3. '_' → logprob: -3.5577945709228516
    4. '==' → logprob: -3.6827945709228516
    5. '_line' → logprob: -3.8077945709228516
    6. '=' → logprob: -6.307794570922852
    7. ' =' → logprob: -6.432794570922852
    8. ' ' → logprob: -7.432794570922852
    9. 'is' → logprob: -9.932794570922852
    10. '.strip' → logprob: -10.057794570922852

Token 305: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.38371020555496216
    2. ' ==' → logprob: -1.2587101459503174
    3. '==' → logprob: -3.3837101459503174
    4. 'is' → logprob: -7.7587103843688965
    5. '.strip' → logprob: -9.008709907531738
    6. '=' → logprob: -9.258709907531738
    7. ' =' → logprob: -9.633709907531738
    8. ' ' → logprob: -11.883709907531738
    9. ' in' → logprob: -12.883709907531738
    10. '==
' → logprob: -13.008709907531738

Token 306: ' None' (ID: 4662)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.12055622041225433
    2. '""' → logprob: -2.870556116104126
    3. 'None' → logprob: -3.245556116104126
    4. ''' → logprob: -4.370556354522705
    5. '"' → logprob: -5.870556354522705
    6. '"":' → logprob: -6.245556354522705
    7. ' None' → logprob: -7.620556354522705
    8. ' ''' → logprob: -10.870555877685547
    9. ' '' → logprob: -11.620555877685547
    10. ' ' → logprob: -12.120555877685547

Token 307: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6968684792518616
    2. ':
' → logprob: -0.6968684792518616
    3. ' or' → logprob: -5.696868419647217
    4. ':return' → logprob: -8.446868896484375
    5. '               ' → logprob: -9.696868896484375
    6. 'or' → logprob: -10.571868896484375
    7. '           ' → logprob: -11.571868896484375
    8. ' :' → logprob: -11.821868896484375
    9. ':

' → logprob: -11.821868896484375
    10. ':
' → logprob: -11.946868896484375

Token 308: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00011987409379798919
    2. '           ' → logprob: -9.375120162963867
    3. '	           ' → logprob: -11.250120162963867
    4. '                   ' → logprob: -11.625120162963867
    5. '   ' → logprob: -11.750120162963867
    6. '              ' → logprob: -13.750120162963867
    7. '			' → logprob: -14.625120162963867
    8. ' break' → logprob: -14.750120162963867
    9. '<|end|>' → logprob: -14.750120162963867
    10. '                
' → logprob: -15.000120162963867

Token 309: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.6399718523025513
    2. '               ' → logprob: -0.8899718523025513
    3. '                   ' → logprob: -3.0149717330932617
    4. ' break' → logprob: -4.514971733093262
    5. 'return' → logprob: -6.764971733093262
    6. '           ' → logprob: -7.639971733093262
    7. '	break' → logprob: -8.514971733093262
    8. '   ' → logprob: -9.014971733093262
    9. '                       ' → logprob: -9.889971733093262
    10. ' return' → logprob: -11.514971733093262

Token 310: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0915381908416748
    2. '
' → logprob: -2.841538190841675
    3. '            
' → logprob: -4.466538429260254
    4. '\n' → logprob: -4.591538429260254
    5. '    
' → logprob: -5.591538429260254
    6. 'n' → logprob: -5.841538429260254
    7. '        
' → logprob: -8.341538429260254
    8. '       ' → logprob: -8.341538429260254
    9. '  
' → logprob: -9.341538429260254
    10. '\
' → logprob: -9.841538429260254

Token 311: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0135500468313694
    2. 'n' → logprob: -5.138550281524658
    3. '       ' → logprob: -5.763550281524658
    4. '
' → logprob: -5.888550281524658
    5. ' n' → logprob: -7.263550281524658
    6. '            
' → logprob: -7.763550281524658
    7. '    
' → logprob: -9.0135498046875
    8. '   ' → logprob: -9.1385498046875
    9. '        
' → logprob: -9.8885498046875
    10. '  
' → logprob: -10.0135498046875

Token 312: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.037456609308719635
    2. ' n' → logprob: -3.662456512451172
    3. 'try' → logprob: -4.912456512451172
    4. ' try' → logprob: -6.162456512451172
    5. '           ' → logprob: -6.787456512451172
    6. '       ' → logprob: -7.662456512451172
    7. 'num' → logprob: -11.537456512451172
    8. '   ' → logprob: -11.912456512451172
    9. 'elements' → logprob: -12.412456512451172
    10. '
' → logprob: -12.662456512451172

Token 313: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014312644489109516
    2. '=' → logprob: -4.264312744140625
    3. '_' → logprob: -9.889312744140625
    4. ',' → logprob: -10.389312744140625
    5. '=int' → logprob: -10.764312744140625
    6. '_values' → logprob: -11.389312744140625
    7. '_tokens' → logprob: -12.264312744140625
    8. ' ' → logprob: -12.264312744140625
    9. '   ' → logprob: -12.639312744140625
    10. '           ' → logprob: -12.639312744140625

Token 314: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3868710398674011
    2. ' int' → logprob: -1.136871099472046
    3. '[int' → logprob: -19.136871337890625
    4. '(int' → logprob: -19.761871337890625
    5. '=int' → logprob: -20.511871337890625
    6. ' ' → logprob: -21.136871337890625
    7. '	int' → logprob: -21.511871337890625
    8. '<int' → logprob: -21.886871337890625
    9. ':int' → logprob: -23.011871337890625
    10. ',int' → logprob: -23.261871337890625

Token 315: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0002613358374219388
    2. '(' → logprob: -8.250261306762695
    3. 'n' → logprob: -16.875261306762695
    4. ' (' → logprob: -17.125261306762695
    5. '(
' → logprob: -17.125261306762695
    6. '((' → logprob: -19.625261306762695
    7. ' n' → logprob: -19.625261306762695
    8. '()' → logprob: -20.625261306762695
    9. '```' → logprob: -20.875261306762695
    10. '('' → logprob: -21.000261306762695

Token 316: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -2.0100624169572257e-05
    2. '(n' → logprob: -11.875020027160645
    3. 'line' → logprob: -12.250020027160645
    4. ')' → logprob: -12.625020027160645
    5. 'Line' → logprob: -13.375020027160645
    6. '_LINE' → logprob: -14.250020027160645
    7. '(line' → logprob: -14.625020027160645
    8. '_n' → logprob: -15.000020027160645
    9. ')n' → logprob: -15.000020027160645
    10. ' )' → logprob: -15.125020027160645

Token 317: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007375618442893028
    2. '.strip' → logprob: -7.62573766708374
    3. ')
' → logprob: -8.375737190246582
    4. ' )' → logprob: -11.625737190246582
    5. '())' → logprob: -12.125737190246582
    6. '[' → logprob: -13.875737190246582
    7. '()' → logprob: -14.125737190246582
    8. '.rstrip' → logprob: -14.375737190246582
    9. '.readline' → logprob: -14.750737190246582
    10. ' ' → logprob: -14.875737190246582

Token 318: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005792465526610613
    2. 'elements' → logprob: -9.000578880310059
    3. '       ' → logprob: -9.125578880310059
    4. ' elements' → logprob: -9.625578880310059
    5. '<|end|>' → logprob: -9.750578880310059
    6. '            
' → logprob: -10.000578880310059
    7. ' if' → logprob: -10.250578880310059
    8. '		' → logprob: -10.375578880310059
    9. '   ' → logprob: -10.750578880310059
    10. '[' → logprob: -10.875578880310059

Token 319: ' if' (ID: 538)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.18941733241081238
    2. '           ' → logprob: -2.6894173622131348
    3. 'sequence' → logprob: -2.9394173622131348
    4. 'if' (adapté à ' if') → logprob: -4.064417362213135
    5. ' elements' → logprob: -4.314417362213135
    6. 'arr' → logprob: -4.939417362213135
    7. 'seq' → logprob: -5.564417362213135
    8. 'values' → logprob: -5.939417362213135
    9. ' sequence' → logprob: -6.189417362213135
    10. 'numbers' → logprob: -6.314417362213135

Token 320: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.31326326727867126
    2. ' n' → logprob: -1.3132632970809937
    3. '	n' → logprob: -14.188262939453125
    4. ' not' → logprob: -15.313262939453125
    5. ' ' → logprob: -15.688262939453125
    6. '   ' → logprob: -15.813262939453125
    7. 'not' → logprob: -16.188262939453125
    8. '
' → logprob: -16.813262939453125
    9. '(n' → logprob: -17.188262939453125
    10. '0' → logprob: -17.688262939453125

Token 321: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.47546347975730896
    2. '==' → logprob: -0.9754635095596313
    3. '<=' → logprob: -7.225463390350342
    4. ' <=' → logprob: -7.350463390350342
    5. ' <' → logprob: -12.6004638671875
    6. '=' → logprob: -12.7254638671875
    7. ' ' → logprob: -12.9754638671875
    8. '<' → logprob: -13.4754638671875
    9. ')' → logprob: -13.6004638671875
    10. ')==' → logprob: -13.8504638671875

Token 322: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001170225441455841
    2. ' ' → logprob: -6.7511701583862305
    3. '-' → logprob: -17.751171112060547
    4. '   ' → logprob: -18.001171112060547
    5. '
' → logprob: -18.126171112060547
    6. '  ' → logprob: -18.126171112060547
    7. ' ' → logprob: -18.313671112060547
    8. '۰' → logprob: -18.688671112060547
    9. '```' → logprob: -18.876171112060547
    10. '<|end|>' → logprob: -19.501171112060547

Token 323: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '-' → logprob: -17.500059127807617
    4. '
' → logprob: -18.000059127807617
    5. '۰' → logprob: -18.000059127807617
    6. '```' → logprob: -18.187559127807617
    7. ')' → logprob: -18.375059127807617
    8. '_' → logprob: -18.937559127807617
    9. '  ' → logprob: -19.000059127807617
    10. '   ' → logprob: -19.187559127807617

Token 324: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5760586857795715
    2. ':' → logprob: -0.8260586857795715
    3. ' :
' → logprob: -9.951058387756348
    4. '               ' → logprob: -10.951058387756348
    5. ':return' → logprob: -11.076058387756348
    6. ' :' → logprob: -11.076058387756348
    7. '           ' → logprob: -11.701058387756348
    8. ':
' → logprob: -12.201058387756348
    9. '   ' → logprob: -12.826058387756348
    10. '):
' → logprob: -13.076058387756348

Token 325: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.060365608893335e-05
    2. ' break' → logprob: -11.250041007995605
    3. '           ' → logprob: -11.500041007995605
    4. '   ' → logprob: -11.875041007995605
    5. '                   ' → logprob: -13.125041007995605
    6. '	           ' → logprob: -13.125041007995605
    7. '              ' → logprob: -13.250041007995605
    8. ',' → logprob: -14.000041007995605
    9. '<|end|>' → logprob: -14.500041007995605
    10. '
' → logprob: -14.500041007995605

Token 326: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.014694595709443092
    2. 'break' (adapté à ' break') → logprob: -4.264694690704346
    3. '               ' → logprob: -7.639694690704346
    4. '           ' → logprob: -10.889694213867188
    5. '	break' → logprob: -11.139694213867188
    6. ' return' → logprob: -11.389694213867188
    7. 'return' → logprob: -12.639694213867188
    8. ' ' → logprob: -13.889694213867188
    9. '   ' → logprob: -14.139694213867188
    10. '                   ' → logprob: -15.514694213867188

Token 327: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007551370654255152
    2. '
' → logprob: -5.132551193237305
    3. '            
' → logprob: -6.632551193237305
    4. '<|end|>' → logprob: -9.382551193237305
    5. '    
' → logprob: -9.507551193237305
    6. '       ' → logprob: -9.507551193237305
    7. '        
' → logprob: -10.632551193237305
    8. '  
' → logprob: -11.632551193237305
    9. '```' → logprob: -12.007551193237305
    10. '           
' → logprob: -12.132551193237305

Token 328: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.038483213633298874
    2. '
' → logprob: -3.288483142852783
    3. '            
' → logprob: -8.038483619689941
    4. '```' → logprob: -9.663483619689941
    5. '       ' → logprob: -10.538483619689941
    6. '    
' → logprob: -12.038483619689941
    7. '        
' → logprob: -12.288483619689941
    8. '
' → logprob: -12.538483619689941
    9. '               ' → logprob: -12.788483619689941
    10. '           
' → logprob: -13.413483619689941

Token 329: ' sequence' (ID: 16281)
  Prédit: ' elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.8732669353485107
    2. 'elements' → logprob: -1.2482669353485107
    3. '           ' → logprob: -1.7482669353485107
    4. ' elems' → logprob: -2.7482669353485107
    5. ' sequence' → logprob: -3.3732669353485107
    6. 'sequence' (adapté à ' sequence') → logprob: -4.74826717376709
    7. ' numbers' → logprob: -5.99826717376709
    8. 'arr' → logprob: -5.99826717376709
    9. ' seq' → logprob: -6.49826717376709
    10. 'seq' → logprob: -6.74826717376709

Token 330: '_line' (ID: 14418)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6084117293357849
    2. '_line' → logprob: -0.8584117293357849
    3. '_elements' → logprob: -3.7334117889404297
    4. '_values' → logprob: -5.48341178894043
    5. '=' → logprob: -5.85841178894043
    6. '=line' → logprob: -7.85841178894043
    7. '_input' → logprob: -8.35841178894043
    8. '_' → logprob: -9.48341178894043
    9. '_list' → logprob: -9.73341178894043
    10. '_str' → logprob: -9.85841178894043

Token 331: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0008045066497288644
    2. '=' → logprob: -7.125804424285889
    3. ' ' → logprob: -17.250804901123047
    4. 's' → logprob: -18.000804901123047
    5. ' ' → logprob: -19.125804901123047
    6. '=self' → logprob: -19.625804901123047
    7. '_' → logprob: -20.125804901123047
    8. '    ' → logprob: -20.875804901123047
    9. ' =
' → logprob: -21.000804901123047
    10. '        ' → logprob: -21.125804901123047

Token 332: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1602313369512558
    2. ' self' → logprob: -1.910231351852417
    3. 'input' → logprob: -12.160231590270996
    4. ' input' → logprob: -13.785231590270996
    5. '           ' → logprob: -15.285231590270996
    6. '	self' → logprob: -15.535231590270996
    7. '
' → logprob: -16.03523063659668
    8. '   ' → logprob: -16.66023063659668
    9. ' ' → logprob: -16.78523063659668
    10. 's' → logprob: -17.03523063659668

Token 333: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.5928495486150496e-05
    2. '.' → logprob: -11.125016212463379
    3. '_' → logprob: -14.750016212463379
    4. '.__' → logprob: -15.625016212463379
    5. ' _' → logprob: -16.250015258789062
    6. '._
' → logprob: -16.250015258789062
    7. '.
' → logprob: -16.375015258789062
    8. '   ' → logprob: -16.625015258789062
    9. '_input' → logprob: -16.875015258789062
    10. '.\' → logprob: -16.875015258789062

Token 334: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -9.088346359931165e-07
    2. 'strip' → logprob: -15.125000953674316
    3. '.read' → logprob: -15.625000953674316
    4. '_read' → logprob: -15.875000953674316
    5. ' read' → logprob: -16.25
    6. '	read' → logprob: -17.0
    7. 'rstrip' → logprob: -17.75
    8. '
' → logprob: -17.875
    9. '```' → logprob: -17.875
    10. 'r' → logprob: -18.0

Token 335: '_non' (ID: 52193)
  Prédit: '_non'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_non' → logprob: -0.04775920882821083
    2. 'non' → logprob: -3.9227592945098877
    3. '_empty' → logprob: -4.672759056091309
    4. '()' → logprob: -4.922759056091309
    5. 'empty' → logprob: -5.797759056091309
    6. '()
' → logprob: -6.297759056091309
    7. 'line' → logprob: -6.672759056091309
    8. '_line' → logprob: -6.672759056091309
    9. '_' → logprob: -7.422759056091309
    10. '_n' → logprob: -8.047759056091309

Token 336: 'empty' (ID: 6857)
  Prédit: 'empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -6.749814019713085e-06
    2. ' empty' → logprob: -12.250006675720215
    3. 'empt' → logprob: -13.625006675720215
    4. '_empty' → logprob: -15.875006675720215
    5. 'e' → logprob: -16.12500762939453
    6. 'emp' → logprob: -16.25000762939453
    7. 'line' → logprob: -16.25000762939453
    8. '
' → logprob: -16.50000762939453
    9. 'blank' → logprob: -16.50000762939453
    10. '.empty' → logprob: -17.25000762939453

Token 337: '_line' (ID: 14418)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.038069259375333786
    2. '_line' → logprob: -3.288069248199463
    3. ' line' → logprob: -11.038069725036621
    4. 'ine' → logprob: -11.663069725036621
    5. 'lin' → logprob: -13.038069725036621
    6. 'Line' → logprob: -14.913069725036621
    7. '()' → logprob: -15.663069725036621
    8. '_' → logprob: -16.413068771362305
    9. '_LINE' → logprob: -16.538068771362305
    10. '-line' → logprob: -17.038068771362305

Token 338: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6181157827377319
    2. '<|end|>' → logprob: -0.8681157827377319
    3. '()' → logprob: -3.4931159019470215
    4. '<|end|>' → logprob: -4.8681159019470215
    5. '       ' → logprob: -6.8681159019470215
    6. '()
' → logprob: -7.7431159019470215
    7. ',' → logprob: -8.493115425109863
    8. '            
' → logprob: -8.493115425109863
    9. '[' → logprob: -8.493115425109863
    10. '(sequence' → logprob: -9.118115425109863

Token 339: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007884962484240532
    2. '<|end|>' → logprob: -5.007884979248047
    3. '            
' → logprob: -8.132884979248047
    4. '<|end|>' → logprob: -8.507884979248047
    5. ',' → logprob: -8.757884979248047
    6. '       ' → logprob: -9.007884979248047
    7. '[' → logprob: -9.257884979248047
    8. 'tokens' → logprob: -9.632884979248047
    9. 'elements' → logprob: -9.882884979248047
    10. ' elements' → logprob: -10.757884979248047

Token 340: ' elements' (ID: 8632)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4017757177352905
    2. 'elements' (adapté à ' elements') → logprob: -1.7767757177352905
    3. ' elements' → logprob: -1.9017757177352905
    4. ' elems' → logprob: -5.65177583694458
    5. ' sequence' → logprob: -5.90177583694458
    6. ' if' → logprob: -6.15177583694458
    7. 'if' → logprob: -6.65177583694458
    8. 'sequence' → logprob: -6.77677583694458
    9. ' numbers' → logprob: -7.27677583694458
    10. 'numbers' → logprob: -7.65177583694458

Token 341: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141392946243286
    2. '=' → logprob: -1.701413869857788
    3. '=[]' → logprob: -15.326414108276367
    4. ' ' → logprob: -15.951414108276367
    5. ' =[' → logprob: -15.951414108276367
    6. 's' → logprob: -16.826414108276367
    7. '=int' → logprob: -17.951414108276367
    8. '＝' → logprob: -17.951414108276367
    9. ' =
' → logprob: -18.076414108276367
    10. ' ' → logprob: -18.326414108276367

Token 342: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.31398627161979675
    2. 'list' → logprob: -1.3139863014221191
    3. 'map' → logprob: -8.313985824584961
    4. '[' → logprob: -8.688985824584961
    5. ' map' → logprob: -8.813985824584961
    6. ' sequence' → logprob: -9.313985824584961
    7. 'sequence' → logprob: -10.313985824584961
    8. ' [' → logprob: -10.438985824584961
    9. '[list' → logprob: -11.688985824584961
    10. '   ' → logprob: -14.938985824584961

Token 343: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -7.703443770878948e-06
    2. '(' → logprob: -12.375007629394531
    3. 'map' → logprob: -12.625007629394531
    4. ' map' → logprob: -17.75000762939453
    5. '(
' → logprob: -18.00000762939453
    6. '(int' → logprob: -18.12500762939453
    7. '	map' → logprob: -18.37500762939453
    8. '
' → logprob: -18.62500762939453
    9. ',map' → logprob: -19.75000762939453
    10. '.map' → logprob: -20.37500762939453

Token 344: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0016639928799122572
    2. '(' → logprob: -6.501664161682129
    3. 'int' → logprob: -8.751664161682129
    4. '(
' → logprob: -12.876664161682129
    5. ' int' → logprob: -14.876664161682129
    6. ' (' → logprob: -15.501664161682129
    7. '<int' → logprob: -16.376663208007812
    8. '(str' → logprob: -16.501663208007812
    9. '[int' → logprob: -16.876663208007812
    10. ',int' → logprob: -17.251663208007812

Token 345: ',' (ID: 11)
  Prédit: '(sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sequence' → logprob: -0.005021344404667616
    2. ',' → logprob: -5.505021572113037
    3. 'sequence' → logprob: -7.380021572113037
    4. '(' → logprob: -8.630021095275879
    5. ' sequence' → logprob: -9.005021095275879
    6. ')' → logprob: -12.505021095275879
    7. ',se' → logprob: -12.755021095275879
    8. ' (' → logprob: -13.005021095275879
    9. ' ,' → logprob: -13.255021095275879
    10. '(se' → logprob: -13.505021095275879

Token 346: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.04859157279133797
    2. ' sequence' → logprob: -3.0485916137695312
    3. '(sequence' → logprob: -12.423591613769531
    4. 'sequ' → logprob: -16.67359161376953
    5. '.sequence' → logprob: -17.92359161376953
    6. 'Sequence' → logprob: -17.92359161376953
    7. '_sequence' → logprob: -18.67359161376953
    8. ')' → logprob: -19.17359161376953
    9. 'se' → logprob: -19.17359161376953
    10. ' ' → logprob: -19.79859161376953

Token 347: '_line' (ID: 14418)
  Prédit: '(sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sequence' → logprob: -0.32555875182151794
    2. '_line' → logprob: -1.3255587816238403
    3. 'sequence' → logprob: -4.700558662414551
    4. '_sequence' → logprob: -7.200558662414551
    5. ' sequence' → logprob: -7.325558662414551
    6. ',' → logprob: -7.325558662414551
    7. ')' → logprob: -7.825558662414551
    8. 's' → logprob: -8.70055866241455
    9. '.sequence' → logprob: -9.20055866241455
    10. '.split' → logprob: -9.20055866241455

Token 348: '.strip' (ID: 40613)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.46208998560905457
    2. '.split' → logprob: -1.587090015411377
    3. '.strip' → logprob: -1.837090015411377
    4. ' .' → logprob: -5.712090015411377
    5. '.' → logprob: -5.962090015411377
    6. 'split' → logprob: -8.837089538574219
    7. '   ' → logprob: -8.962089538574219
    8. 'strip' → logprob: -10.837089538574219
    9. '(split' → logprob: -11.212089538574219
    10. '()' → logprob: -11.337089538574219

Token 349: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.36574100604048e-06
    2. '()' → logprob: -12.375004768371582
    3. '.split' → logprob: -16.500003814697266
    4. ' ().' → logprob: -17.000003814697266
    5. '(' → logprob: -17.875003814697266
    6. '()
' → logprob: -18.750003814697266
    7. '   ' → logprob: -19.250003814697266
    8. 'split' → logprob: -19.625003814697266
    9. '.' → logprob: -20.000003814697266
    10. '().'' → logprob: -21.125003814697266

Token 350: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.704273118884885e-07
    2. ' split' → logprob: -14.750000953674316
    3. '(split' → logprob: -15.750000953674316
    4. '.split' → logprob: -16.375
    5. 'spl' → logprob: -18.375
    6. ')' → logprob: -19.0
    7. 'sp' → logprob: -19.5
    8. 'plit' → logprob: -19.625
    9. 'rstrip' → logprob: -19.625
    10. 's' → logprob: -20.125

Token 351: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.00859885849058628
    2. '()' → logprob: -5.133598804473877
    3. '()))
' → logprob: -6.008598804473877
    4. '(' → logprob: -9.633599281311035
    5. '())' → logprob: -9.883599281311035
    6. '))' → logprob: -10.258599281311035
    7. '('' → logprob: -10.383599281311035
    8. '())))' → logprob: -11.633599281311035
    9. '()))

' → logprob: -12.383599281311035
    10. '()))
' → logprob: -12.383599281311035

Token 352: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.024604277219623e-05
    2. '
' → logprob: -11.125040054321289
    3. '       ' → logprob: -12.250040054321289
    4. 'sequence' → logprob: -12.250040054321289
    5. '            
' → logprob: -12.375040054321289
    6. ' sequence' → logprob: -12.375040054321289
    7. '<|end|>' → logprob: -12.750040054321289
    8. '               ' → logprob: -13.500040054321289
    9. '          ' → logprob: -14.375040054321289
    10. ',' → logprob: -14.500040054321289

Token 353: ' seq' (ID: 26775)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.7211214303970337
    2. ' initial' → logprob: -0.9711214303970337
    3. 'sequence' → logprob: -2.471121311187744
    4. '           ' → logprob: -3.471121311187744
    5. ' sequence' → logprob: -4.471121311187744
    6. 'input' → logprob: -5.096121311187744
    7. ' input' → logprob: -7.346121311187744
    8. 'current' → logprob: -7.846121311187744
    9. 'seq' (adapté à ' seq') → logprob: -8.346121788024902
    10. 'result' → logprob: -8.721121788024902

Token 354: ' =' (ID: 314)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.004287453833967447
    2. ' =' → logprob: -5.504287242889404
    3. 'ence' → logprob: -9.129287719726562
    4. '=' → logprob: -10.379287719726562
    5. 'uen' → logprob: -10.754287719726562
    6. 'ue' → logprob: -11.254287719726562
    7. '   ' → logprob: -11.504287719726562
    8. 'quence' → logprob: -12.504287719726562
    9. 'uent' → logprob: -12.629287719726562
    10. 'uel' → logprob: -12.754287719726562

Token 355: ' Sequence' (ID: 57144)
  Prédit: 'Sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -0.00861456897109747
    2. ' Sequence' → logprob: -4.758614540100098
    3. '   ' → logprob: -20.383615493774414
    4. '_sequence' → logprob: -21.633615493774414
    5. ' sequence' → logprob: -22.133615493774414
    6. 'Sequ' → logprob: -22.258615493774414
    7. '.Sequence' → logprob: -22.383615493774414
    8. 'sequence' → logprob: -22.883615493774414
    9. '    ' → logprob: -23.383615493774414
    10. 'Sequences' → logprob: -23.508615493774414

Token 356: '(elements' (ID: 120313)
  Prédit: '(elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(elements' → logprob: -8.180258191714529e-06
    2. 'elements' → logprob: -11.750008583068848
    3. '(' → logprob: -15.750008583068848
    4. '(element' → logprob: -16.87500762939453
    5. '(e' → logprob: -17.62500762939453
    6. '(
' → logprob: -18.12500762939453
    7. ' (' → logprob: -18.62500762939453
    8. ' elements' → logprob: -18.75000762939453
    9. '(ele' → logprob: -18.87500762939453
    10. '(sequence' → logprob: -19.87500762939453

Token 357: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029838306829333305
    2. ')
' → logprob: -3.5298383235931396
    3. '           ' → logprob: -9.404838562011719
    4. ')
' → logprob: -12.529838562011719
    5. '       ' → logprob: -14.279838562011719
    6. ')

' → logprob: -14.404838562011719
    7. ' )' → logprob: -14.654838562011719
    8. '               ' → logprob: -16.15483856201172
    9. ' )
' → logprob: -16.65483856201172
    10. ')`
' → logprob: -17.27983856201172

Token 358: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03065621666610241
    2. 'count' → logprob: -4.030656337738037
    3. ' count' → logprob: -4.530656337738037
    4. 'result' → logprob: -7.655656337738037
    5. '            
' → logprob: -7.780656337738037
    6. ' result' → logprob: -8.030655860900879
    7. '```' → logprob: -9.030655860900879
    8. '
' → logprob: -10.405655860900879
    9. ',count' → logprob: -10.530655860900879
    10. ' steps' → logprob: -10.530655860900879

Token 359: ' count' (ID: 3605)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.10214043408632278
    2. 'iterations' → logprob: -2.852140426635742
    3. 'count' (adapté à ' count') → logprob: -3.602140426635742
    4. ' steps' → logprob: -5.602140426635742
    5. '           ' → logprob: -5.852140426635742
    6. 'fixed' → logprob: -6.602140426635742
    7. 'iters' → logprob: -7.102140426635742
    8. 'num' → logprob: -7.102140426635742
    9. 'result' → logprob: -7.602140426635742
    10. 'step' → logprob: -7.727140426635742

Token 360: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010565068805590272
    2. ' ,' → logprob: -6.876056671142578
    3. '<|end|>' → logprob: -11.876056671142578
    4. '_,' → logprob: -12.251056671142578
    5. ',num' → logprob: -13.251056671142578
    6. '‌,' → logprob: -13.501056671142578
    7. ' =' → logprob: -13.501056671142578
    8. ',count' → logprob: -13.626056671142578
    9. 's' → logprob: -14.126056671142578
    10. '=' → logprob: -14.501056671142578

Token 361: ' fixed' (ID: 13213)
  Prédit: 'fixed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fixed' → logprob: -0.05713536590337753
    2. ' fixed' → logprob: -3.0571353435516357
    3. 'final' → logprob: -5.432135581970215
    4. 'result' → logprob: -5.932135581970215
    5. 'seq' → logprob: -7.182135581970215
    6. 'fp' → logprob: -8.682135581970215
    7. 'fix' → logprob: -8.807135581970215
    8. 'sequence' → logprob: -9.057135581970215
    9. ' seq' → logprob: -9.307135581970215
    10. ' final' → logprob: -9.432135581970215

Token 362: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.000871082826051861
    2. '_sequence' → logprob: -7.125871181488037
    3. '_' → logprob: -10.500870704650879
    4. '_seq' → logprob: -10.750870704650879
    5. '_points' → logprob: -11.500870704650879
    6. 'point' → logprob: -13.125870704650879
    7. '_p' → logprob: -13.375870704650879
    8. '_pt' → logprob: -13.375870704650879
    9. '_token' → logprob: -14.500870704650879
    10. ' _' → logprob: -14.875870704650879

Token 363: '_seq' (ID: 34260)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06437991559505463
    2. '=' → logprob: -2.814379930496216
    3. '_seq' → logprob: -6.564379692077637
    4. '_sequence' → logprob: -6.939379692077637
    5. '_' → logprob: -10.939379692077637
    6. 'sequence' → logprob: -11.814379692077637
    7. 'seq' → logprob: -12.814379692077637
    8. '=_' → logprob: -14.314379692077637
    9. '_=' → logprob: -14.439379692077637
    10. 's' → logprob: -14.814379692077637

Token 364: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269284337759018
    2. '=' → logprob: -2.1269283294677734
    3. ',' → logprob: -15.626928329467773
    4. ')' → logprob: -15.751928329467773
    5. ' ' → logprob: -17.876928329467773
    6. 's' → logprob: -18.126928329467773
    7. ' =)' → logprob: -18.626928329467773
    8. ')=' → logprob: -19.376928329467773
    9. '＝' → logprob: -19.501928329467773
    10. ' =
' → logprob: -19.626928329467773

Token 365: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3868720829486847
    2. 'self' → logprob: -1.1368720531463623
    3. '           ' → logprob: -13.886872291564941
    4. '(self' → logprob: -16.511871337890625
    5. '               ' → logprob: -17.011871337890625
    6. '	self' → logprob: -17.386871337890625
    7. '=self' → logprob: -17.386871337890625
    8. ' ' → logprob: -18.511871337890625
    9. ' ' → logprob: -18.511871337890625
    10. '[self' → logprob: -18.636871337890625

Token 366: '.fixed' (ID: 122142)
  Prédit: 'fixed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fixed' → logprob: -0.023434728384017944
    2. '.fixed' → logprob: -3.773434638977051
    3. ' fixed' → logprob: -8.64843463897705
    4. '_fixed' → logprob: -11.39843463897705
    5. 'self' → logprob: -14.14843463897705
    6. 'Fixed' → logprob: -14.27343463897705
    7. '.' → logprob: -14.89843463897705
    8. 'fix' → logprob: -15.27343463897705
    9. '
' → logprob: -15.64843463897705
    10. '.Fixed' → logprob: -15.89843463897705

Token 367: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -1.3902033970225602e-05
    2. 'point' → logprob: -11.250014305114746
    3. '_points' → logprob: -15.000014305114746
    4. 'oint' → logprob: -15.625014305114746
    5. '_p' → logprob: -15.750014305114746
    6. 'Point' → logprob: -16.25001335144043
    7. '-point' → logprob: -16.50001335144043
    8. '_' → logprob: -16.75001335144043
    9. ' point' → logprob: -17.75001335144043
    10. '           ' → logprob: -17.87501335144043

Token 368: '_f' (ID: 1337)
  Prédit: 'finder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finder' → logprob: -0.20251376926898956
    2. '_f' → logprob: -1.7025138139724731
    3. 'find' → logprob: -7.077513694763184
    4. 'Finder' → logprob: -9.452513694763184
    5. 'inder' → logprob: -9.827513694763184
    6. ' finder' → logprob: -9.952513694763184
    7. 'f' → logprob: -10.577513694763184
    8. '   ' → logprob: -11.827513694763184
    9. 'er' → logprob: -12.202513694763184
    10. 'found' → logprob: -12.327513694763184

Token 369: 'inder' (ID: 5508)
  Prédit: 'inder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inder' → logprob: -0.004708276130259037
    2. 'ind' → logprob: -5.379708290100098
    3. 'inde' → logprob: -11.004708290100098
    4. 'finder' → logprob: -11.004708290100098
    5. 'find' → logprob: -11.629708290100098
    6. '```' → logprob: -11.879708290100098
    7. 'nder' → logprob: -12.254708290100098
    8. 'index' → logprob: -12.254708290100098
    9. '
' → logprob: -12.629708290100098
    10. 'under' → logprob: -12.879708290100098

Token 370: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.00040755473310127854
    2. '.' → logprob: -8.625407218933105
    3. '.findall' → logprob: -8.625407218933105
    4. 'find' → logprob: -10.000407218933105
    5. ' .' → logprob: -13.000407218933105
    6. '=find' → logprob: -15.625407218933105
    7. ' find' → logprob: -15.875407218933105
    8. '.
' → logprob: -15.875407218933105
    9. '
' → logprob: -16.000408172607422
    10. '	find' → logprob: -16.750408172607422

Token 371: '_fixed' (ID: 89932)
  Prédit: '_fixed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fixed' → logprob: -8.2994620242971e-06
    2. 'fixed' → logprob: -11.750008583068848
    3. '```' → logprob: -16.62500762939453
    4. '_' → logprob: -16.75000762939453
    5. '_FIXED' → logprob: -16.75000762939453
    6. '_fix' → logprob: -17.50000762939453
    7. '_filtered' → logprob: -17.87500762939453
    8. '
' → logprob: -18.50000762939453
    9. ' fixed' → logprob: -18.50000762939453
    10. '_f' → logprob: -18.87500762939453

Token 372: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.0001612267515156418
    2. '_fixed' → logprob: -9.000161170959473
    3. '_points' → logprob: -11.000161170959473
    4. '_' → logprob: -11.625161170959473
    5. '_sequence' → logprob: -12.375161170959473
    6. 'point' → logprob: -12.750161170959473
    7. 'fixed' → logprob: -14.250161170959473
    8. '_p' → logprob: -14.500161170959473
    9. '```' → logprob: -14.750161170959473
    10. '_count' → logprob: -14.875161170959473

Token 373: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -5.796184723294573e-06
    2. '(
' → logprob: -13.125005722045898
    3. '(' → logprob: -13.375005722045898
    4. '(se' → logprob: -14.250005722045898
    5. 'seq' → logprob: -14.250005722045898
    6. ' (' → logprob: -14.500005722045898
    7. '(sequence' → logprob: -16.0000057220459
    8. '(seed' → logprob: -16.2500057220459
    9. '(freq' → logprob: -17.1250057220459
    10. '```' → logprob: -17.6250057220459

Token 374: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.00725093437358737
    2. ')' → logprob: -5.007250785827637
    3. '           ' → logprob: -8.507250785827637
    4. '()
' → logprob: -8.882250785827637
    5. ')
' → logprob: -9.132250785827637
    6. '())
' → logprob: -9.757250785827637
    7. '()' → logprob: -11.257250785827637
    8. '       ' → logprob: -11.507250785827637
    9. 'print' → logprob: -12.882250785827637
    10. '
' → logprob: -13.882250785827637

Token 375: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003251150716096163
    2. 'print' → logprob: -5.753251075744629
    3. ' print' → logprob: -9.753251075744629
    4. '```' → logprob: -11.878251075744629
    5. '
' → logprob: -12.003251075744629
    6. '       ' → logprob: -13.628251075744629
    7. '            
' → logprob: -14.503251075744629
    8. '<|end|>' → logprob: -16.128252029418945
    9. '#print' → logprob: -16.378252029418945
    10. 'self' → logprob: -16.628252029418945

Token 376: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.26954326033592224
    2. '           ' → logprob: -1.6445432901382446
    3. ' print' → logprob: -3.144543170928955
    4. '```' → logprob: -9.894543647766113
    5. '
' → logprob: -11.144543647766113
    6. '            
' → logprob: -12.019543647766113
    7. '	print' → logprob: -12.644543647766113
    8. '       ' → logprob: -13.144543647766113
    9. '#print' → logprob: -13.644543647766113
    10. '.print' → logprob: -13.644543647766113

Token 377: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.0298639964312315
    2. '(f' → logprob: -3.5298640727996826
    3. '(' → logprob: -9.654864311218262
    4. 'count' → logprob: -10.279864311218262
    5. 'f' → logprob: -11.404864311218262
    6. '(c' → logprob: -13.404864311218262
    7. '("{}' → logprob: -14.779864311218262
    8. '(len' → logprob: -14.904864311218262
    9. '((' → logprob: -15.029864311218262
    10. '(
' → logprob: -15.279864311218262

Token 378: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006063294131308794
    2. ')' → logprob: -5.131063461303711
    3. ',f' → logprob: -9.881063461303711
    4. '(f' → logprob: -10.131063461303711
    5. ' ,' → logprob: -11.131063461303711
    6. '(' → logprob: -11.881063461303711
    7. '(),' → logprob: -12.381063461303711
    8. 'f' → logprob: -12.506063461303711
    9. '   ' → logprob: -13.131063461303711
    10. ' f' → logprob: -13.131063461303711

Token 379: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002491706982254982
    2. 'print' → logprob: -6.002491474151611
    3. ' print' → logprob: -11.12749195098877
    4. '       ' → logprob: -14.00249195098877
    5. '```' → logprob: -15.50249195098877
    6. '   ' → logprob: -16.127490997314453
    7. '		' → logprob: -16.502490997314453
    8. '          ' → logprob: -17.002490997314453
    9. '               ' → logprob: -17.377490997314453
    10. '                   ' → logprob: -19.377490997314453

Token 380: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0001249925117008388
    2. '           ' → logprob: -9.00012493133545
    3. ' print' → logprob: -13.50012493133545
    4. '```' → logprob: -17.375125885009766
    5. '       ' → logprob: -18.875125885009766
    6. 'for' → logprob: -19.375125885009766
    7. '	print' → logprob: -19.875125885009766
    8. '            
' → logprob: -20.125125885009766
    9. '   ' → logprob: -20.375125885009766
    10. '.print' → logprob: -21.250125885009766

Token 381: '("' (ID: 568)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.015382845886051655
    2. '(*' → logprob: -4.515382766723633
    3. '('' → logprob: -5.765382766723633
    4. '(' → logprob: -7.265382766723633
    5. '("' → logprob: -7.890382766723633
    6. '(re' → logprob: -9.890382766723633
    7. '(len' → logprob: -10.390382766723633
    8. 'fixed' → logprob: -10.390382766723633
    9. '(str' → logprob: -13.140382766723633
    10. '(final' → logprob: -14.265382766723633

Token 382: ' ".' (ID: 11730)
  Prédit: 'fixed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fixed' → logprob: -0.22514483332633972
    2. '"' → logprob: -1.725144863128662
    3. ''' → logprob: -4.225144863128662
    4. ' ".' → logprob: -5.475144863128662
    5. ' fixed' → logprob: -5.600144863128662
    6. ' "' → logprob: -7.350144863128662
    7. '".' → logprob: -9.225144386291504
    8. '.fixed' → logprob: -10.600144386291504
    9. ' '' → logprob: -10.975144386291504
    10. ' '.' → logprob: -10.975144386291504

Token 383: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.029854504391551018
    2. 'print' → logprob: -3.6548545360565186
    3. '.join' → logprob: -6.2798542976379395
    4. '.' → logprob: -7.2798542976379395
    5. '".' → logprob: -7.2798542976379395
    6. '"' → logprob: -8.654854774475098
    7. ').' → logprob: -10.404854774475098
    8. '```' → logprob: -10.654854774475098
    9. '           ' → logprob: -11.404854774475098
    10. 'return' → logprob: -11.904854774475098

Token 384: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.2520126700401306
    2. '(str' → logprob: -1.5020127296447754
    3. 'map' → logprob: -9.502012252807617
    4. 'str' → logprob: -11.752012252807617
    5. '[str' → logprob: -14.502012252807617
    6. ' map' → logprob: -15.127012252807617
    7. '(' → logprob: -16.377012252807617
    8. '	map' → logprob: -16.377012252807617
    9. '.map' → logprob: -17.627012252807617
    10. '=str' → logprob: -17.877012252807617

Token 385: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -4.966313281329349e-05
    2. 'str' → logprob: -10.000049591064453
    3. '(' → logprob: -12.500049591064453
    4. '[str' → logprob: -15.000049591064453
    5. ' str' → logprob: -16.000049591064453
    6. '(
' → logprob: -16.375049591064453
    7. '	str' → logprob: -17.375049591064453
    8. '=str' → logprob: -17.625049591064453
    9. '```' → logprob: -18.375049591064453
    10. ' (' → logprob: -19.250049591064453

Token 386: ',' (ID: 11)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.00012035090912831947
    2. '(' → logprob: -9.500120162963867
    3. ',' → logprob: -11.125120162963867
    4. ' (' → logprob: -11.500120162963867
    5. 'fixed' → logprob: -11.500120162963867
    6. ',f' → logprob: -12.375120162963867
    7. ')' → logprob: -12.875120162963867
    8. '(final' → logprob: -13.250120162963867
    9. '(sorted' → logprob: -14.750120162963867
    10. ')(' → logprob: -15.125120162963867

Token 387: ' fixed' (ID: 13213)
  Prédit: 'fixed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fixed' → logprob: -3.5597102396423e-05
    2. ' fixed' → logprob: -10.250035285949707
    3. 'fix' → logprob: -16.500036239624023
    4. '   ' → logprob: -16.625036239624023
    5. '.fixed' → logprob: -17.500036239624023
    6. ')' → logprob: -17.875036239624023
    7. 'filtered' → logprob: -18.375036239624023
    8. '
' → logprob: -18.625036239624023
    9. '           ' → logprob: -19.500036239624023
    10. '[' → logprob: -19.875036239624023

Token 388: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.00013905855303164572
    2. 'point' → logprob: -9.250139236450195
    3. 'fixed' → logprob: -10.375139236450195
    4. '_fixed' → logprob: -11.750139236450195
    5. '(f' → logprob: -13.750139236450195
    6. 'Point' → logprob: -13.750139236450195
    7. '_points' → logprob: -14.500139236450195
    8. '-point' → logprob: -14.625139236450195
    9. '_sequence' → logprob: -15.750139236450195
    10. '(point' → logprob: -16.250139236450195

Token 389: '_seq' (ID: 34260)
  Prédit: '_seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seq' → logprob: -0.0005787697155028582
    2. 'seq' → logprob: -7.500578880310059
    3. '_point' → logprob: -11.375578880310059
    4. 'Seq' → logprob: -12.250578880310059
    5. 'point' → logprob: -12.500578880310059
    6. 'sequence' → logprob: -13.375578880310059
    7. '.seq' → logprob: -13.625578880310059
    8. '_.' → logprob: -14.250578880310059
    9. 'elements' → logprob: -14.375578880310059
    10. '_' → logprob: -14.750578880310059

Token 390: '.elements' (ID: 58318)
  Prédit: '.elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.elements' → logprob: -8.387458365177736e-05
    2. 'elements' → logprob: -9.625083923339844
    3. ' .' → logprob: -11.250083923339844
    4. '.' → logprob: -12.875083923339844
    5. '))' → logprob: -14.375083923339844
    6. ')' → logprob: -14.625083923339844
    7. ').' → logprob: -15.125083923339844
    8. '```' → logprob: -15.625083923339844
    9. ' elements' → logprob: -16.250083923339844
    10. '   ' → logprob: -16.625083923339844

Token 391: ')))

' (ID: 46526)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02993086911737919
    2. ')))' → logprob: -3.529930830001831
    3. '))
' → logprob: -8.77993106842041
    4. '           ' → logprob: -11.65493106842041
    5. ' ))' → logprob: -12.15493106842041
    6. ')' → logprob: -12.27993106842041
    7. ')))
' → logprob: -12.65493106842041
    8. '()))' → logprob: -13.40493106842041
    9. '))))' → logprob: -13.52993106842041
    10. '       ' → logprob: -13.90493106842041

Token 392: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013038069009780884
    2. 'def' → logprob: -7.376303672790527
    3. '    
' → logprob: -7.876303672790527
    4. '
' → logprob: -9.376303672790527
    5. '        
' → logprob: -9.876303672790527
    6. 'import' → logprob: -10.126303672790527
    7. '<|end|>' → logprob: -10.501303672790527
    8. '```' → logprob: -11.126303672790527
    9. '	def' → logprob: -11.876303672790527
    10. '	   ' → logprob: -12.001303672790527

Token 393: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.4774594008922577
    2. '   ' → logprob: -0.9774594306945801
    3. ' def' → logprob: -5.97745943069458
    4. '	def' → logprob: -7.47745943069458
    5. '
' → logprob: -8.352458953857422
    6. '    
' → logprob: -10.727458953857422
    7. 'import' → logprob: -11.852458953857422
    8. '```' → logprob: -12.727458953857422
    9. ' ' → logprob: -13.102458953857422
    10. '    ' → logprob: -14.602458953857422

Token 394: ' _' (ID: 1175)
  Prédit: '_read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_read' → logprob: -0.0032766987569630146
    2. ' _' → logprob: -5.753276824951172
    3. '_' → logprob: -9.503276824951172
    4. '_write' → logprob: -10.878276824951172
    5. '_re' → logprob: -14.128276824951172
    6. '_reads' → logprob: -14.378276824951172
    7. '_print' → logprob: -14.753276824951172
    8. '__' → logprob: -15.003276824951172
    9. '_reader' → logprob: -15.003276824951172
    10. '_
' → logprob: -15.128276824951172

Token 395: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -6.704273118884885e-07
    2. '_read' → logprob: -14.250000953674316
    3. ' read' → logprob: -19.625
    4. '.read' → logprob: -22.0
    5. '	read' → logprob: -22.75
    6. 'def' → logprob: -23.875
    7. 'reader' → logprob: -24.5
    8. '-read' → logprob: -24.5
    9. '_' → logprob: -24.625
    10. '(read' → logprob: -24.625

Token 396: '_non' (ID: 52193)
  Prédit: '_non'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_non' → logprob: -6.253713218029588e-05
    2. '_line' → logprob: -9.750062942504883
    3. 'non' → logprob: -12.875062942504883
    4. '_n' → logprob: -14.625062942504883
    5. '_no' → logprob: -15.000062942504883
    6. '_empty' → logprob: -15.625062942504883
    7. '_next' → logprob: -15.875062942504883
    8. 'line' → logprob: -16.250062942504883
    9. '_input' → logprob: -16.250062942504883
    10. 'Non' → logprob: -16.500062942504883

Token 397: 'empty' (ID: 6857)
  Prédit: 'empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.0011715330183506012
    2. '_empty' → logprob: -6.751171588897705
    3. 'empt' → logprob: -14.126171112060547
    4. '_' → logprob: -15.376171112060547
    5. 'e' → logprob: -15.626171112060547
    6. ' empty' → logprob: -16.126171112060547
    7. 'emt' → logprob: -16.876171112060547
    8. 'em' → logprob: -17.126171112060547
    9. 'blank' → logprob: -17.751171112060547
    10. 'emp' → logprob: -18.001171112060547

Token 398: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.7835754988482222e-05
    2. 'line' → logprob: -11.000018119812012
    3. '_' → logprob: -14.750018119812012
    4. '_l' → logprob: -15.375018119812012
    5. '_li' → logprob: -15.625018119812012
    6. '_LINE' → logprob: -16.625017166137695
    7. '_lin' → logprob: -16.625017166137695
    8. '_lines' → logprob: -17.125017166137695
    9. 'Line' → logprob: -17.625017166137695
    10. '_string' → logprob: -17.750017166137695

Token 399: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0010450744302943349
    2. '(' → logprob: -6.876045227050781
    3. 'self' → logprob: -12.376045227050781
    4. '(
' → logprob: -12.626045227050781
    5. ' (' → logprob: -12.751045227050781
    6. '(s' → logprob: -13.876045227050781
    7. '   ' → logprob: -15.251045227050781
    8. '(sel' → logprob: -15.501045227050781
    9. '(Self' → logprob: -16.12604522705078
    10. ' ' → logprob: -16.37604522705078

Token 400: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06587091833353043
    2. 'self' → logprob: -2.940871000289917
    3. '):
' → logprob: -4.940870761871338
    4. '):' → logprob: -5.940870761871338
    5. '   ' → logprob: -7.315870761871338
    6. ')' → logprob: -8.565871238708496
    7. '       ' → logprob: -9.190871238708496
    8. ' self' → logprob: -9.440871238708496
    9. ',' → logprob: -10.065871238708496
    10. ',self' → logprob: -10.815871238708496

Token 401: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07673141360282898
    2. ' try' → logprob: -2.9517314434051514
    3. 'try' → logprob: -4.076731204986572
    4. ' while' → logprob: -6.076731204986572
    5. '   ' → logprob: -6.951731204986572
    6. ' line' → logprob: -7.201731204986572
    7. 'while' → logprob: -7.826731204986572
    8. 'import' → logprob: -9.82673168182373
    9. '           ' → logprob: -9.95173168182373
    10. 'line' → logprob: -10.20173168182373

Token 402: ' while' (ID: 2049)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.33498263359069824
    2. ' try' → logprob: -1.5849826335906982
    3. ' line' → logprob: -3.7099826335906982
    4. 'line' → logprob: -3.9599826335906982
    5. 'import' → logprob: -3.9599826335906982
    6. 'while' (adapté à ' while') → logprob: -4.584982872009277
    7. ' while' → logprob: -5.209982872009277
    8. ' import' → logprob: -7.084982872009277
    9. '       ' → logprob: -8.209982872009277
    10. '
' → logprob: -8.834982872009277

Token 403: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.029751643538475037
    2. ' True' → logprob: -3.5297515392303467
    3. '(True' → logprob: -13.779751777648926
    4. '   ' → logprob: -16.52975082397461
    5. '
' → logprob: -17.27975082397461
    6. 'true' → logprob: -19.52975082397461
    7. '    ' → logprob: -19.65475082397461
    8. ' ' → logprob: -19.77975082397461
    9. 'line' → logprob: -19.90475082397461
    10. '=True' → logprob: -20.65475082397461

Token 404: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022542210295796394
    2. ':' → logprob: -4.6475419998168945
    3. ' line' → logprob: -4.6475419998168945
    4. '   ' → logprob: -6.6475419998168945
    5. ':
' → logprob: -6.6475419998168945
    6. ',' → logprob: -8.522541999816895
    7. 'line' → logprob: -9.647541999816895
    8. ' lines' → logprob: -10.397541999816895
    9. '       ' → logprob: -10.897541999816895
    10. '_line' → logprob: -10.897541999816895

Token 405: '           ' (ID: 352)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.6666628122329712
    2. '           ' → logprob: -1.1666628122329712
    3. 'line' → logprob: -1.7916628122329712
    4. ' try' → logprob: -5.416662693023682
    5. 'try' → logprob: -5.791662693023682
    6. '   ' → logprob: -7.291662693023682
    7. '       ' → logprob: -8.79166316986084
    8. '	line' → logprob: -9.16666316986084
    9. '#line' → logprob: -11.16666316986084
    10. 'import' → logprob: -11.41666316986084

Token 406: ' try' (ID: 2075)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0030169226229190826
    2. 'try' (adapté à ' try') → logprob: -6.003016948699951
    3. ' line' → logprob: -8.253016471862793
    4. '           ' → logprob: -8.503016471862793
    5. 'import' → logprob: -9.503016471862793
    6. ' try' → logprob: -12.878016471862793
    7. '	line' → logprob: -15.878016471862793
    8. '   ' → logprob: -16.00301742553711
    9. '_line' → logprob: -16.62801742553711
    10. '               ' → logprob: -16.87801742553711

Token 407: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.430006742477417
    2. '               ' → logprob: -1.305006742477417
    3. ':
' → logprob: -2.555006742477417
    4. '           ' → logprob: -8.430006980895996
    5. '   ' → logprob: -8.680006980895996
    6. ' :' → logprob: -9.055006980895996
    7. '              ' → logprob: -11.055006980895996
    8. '	           ' → logprob: -11.180006980895996
    9. ' line' → logprob: -11.555006980895996
    10. '                   ' → logprob: -11.680006980895996

Token 408: '               ' (ID: 506)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.7347469925880432
    2. '               ' → logprob: -0.9847469925880432
    3. 'line' → logprob: -1.9847469329833984
    4. '   ' → logprob: -4.734746932983398
    5. '           ' → logprob: -8.109746932983398
    6. '	line' → logprob: -8.984746932983398
    7. '#line' → logprob: -9.609746932983398
    8. 'input' → logprob: -9.984746932983398
    9. '                   ' → logprob: -10.609746932983398
    10. ' ' → logprob: -11.359746932983398

Token 409: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.10026048123836517
    2. ' line' → logprob: -2.3502604961395264
    3. '                   ' → logprob: -9.975260734558105
    4. '	line' → logprob: -12.100260734558105
    5. '   ' → logprob: -14.100260734558105
    6. 'l' → logprob: -15.350260734558105
    7. '               ' → logprob: -15.600260734558105
    8. ' ' → logprob: -16.10025978088379
    9. 's' → logprob: -16.10025978088379
    10. 'lin' → logprob: -16.22525978088379

Token 410: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25194066762924194
    2. '=' → logprob: -1.5019407272338867
    3. '=input' → logprob: -11.876940727233887
    4. '=line' → logprob: -13.126940727233887
    5. '=
' → logprob: -13.501940727233887
    6. ' =
' → logprob: -15.001940727233887
    7. '=

' → logprob: -15.001940727233887
    8. ' ' → logprob: -15.376940727233887
    9. '=sys' → logprob: -15.876940727233887
    10. '<|end|>' → logprob: -17.00193977355957

Token 411: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03804149478673935
    2. ' input' → logprob: -3.288041591644287
    3. '=input' → logprob: -17.538042068481445
    4. '	input' → logprob: -18.663042068481445
    5. '(input' → logprob: -19.038042068481445
    6. '<input' → logprob: -20.038042068481445
    7. '
' → logprob: -21.038042068481445
    8. '_input' → logprob: -21.038042068481445
    9. '.input' → logprob: -21.663042068481445
    10. '   ' → logprob: -22.038042068481445

Token 412: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.033280592411756516
    2. '().' → logprob: -3.533280611038208
    3. '()
' → logprob: -5.658280372619629
    4. '()

' → logprob: -10.533280372619629
    5. '())' → logprob: -13.158280372619629
    6. ' ()' → logprob: -13.283280372619629
    7. '()>' → logprob: -13.408280372619629
    8. '()
' → logprob: -14.158280372619629
    9. '()).' → logprob: -14.783280372619629
    10. '(' → logprob: -15.033280372619629

Token 413: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40572768449783325
    2. '.strip' → logprob: -2.1557276248931885
    3. ' if' → logprob: -2.4057276248931885
    4. '               ' → logprob: -2.5307276248931885
    5. 'if' → logprob: -5.030727863311768
    6. ' ' → logprob: -5.155727863311768
    7. '
' → logprob: -5.280727863311768
    8. '            
' → logprob: -5.280727863311768
    9. '  
' → logprob: -5.405727863311768
    10. '.rstrip' → logprob: -5.530727863311768

Token 414: ' except' (ID: 6384)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014661594294011593
    2. '.strip' → logprob: -5.88966178894043
    3. '            ' → logprob: -6.13966178894043
    4. '            
' → logprob: -6.26466178894043
    5. '<|end|>' → logprob: -6.26466178894043
    6. '	       ' → logprob: -6.51466178894043
    7. ' if' → logprob: -6.63966178894043
    8. '	           ' → logprob: -7.76466178894043
    9. '               ' → logprob: -7.88966178894043
    10. ' ' → logprob: -8.13966178894043

Token 415: ' EOF' (ID: 72412)
  Prédit: 'EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EOF' → logprob: -0.38687223196029663
    2. ' EOF' → logprob: -1.1368722915649414
    3. 'Stop' → logprob: -13.886872291564941
    4. ' Stop' → logprob: -15.761872291564941
    5. '(' → logprob: -16.136871337890625
    6. '
' → logprob: -20.136871337890625
    7. '(E' → logprob: -20.886871337890625
    8. ' (' → logprob: -21.011871337890625
    9. 'EO' → logprob: -21.011871337890625
    10. 'E' → logprob: -21.136871337890625

Token 416: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: 0.0
    2. 'rror' → logprob: -17.125
    3. '
' → logprob: -18.375
    4. 'LError' → logprob: -19.5
    5. 'Erro' → logprob: -20.375
    6. 'SError' → logprob: -20.375
    7. 'EOF' → logprob: -20.5
    8. ' Error' → logprob: -20.625
    9. 'error' → logprob: -20.625
    10. 'ERROR' → logprob: -21.125

Token 417: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34281569719314575
    2. ':
' → logprob: -1.342815637588501
    3. '               ' → logprob: -4.21781587600708
    4. '           ' → logprob: -4.96781587600708
    5. ':return' → logprob: -5.21781587600708
    6. '                   ' → logprob: -7.34281587600708
    7. '   ' → logprob: -8.717815399169922
    8. '<|end|>' → logprob: -8.842815399169922
    9. '):
' → logprob: -9.217815399169922
    10. '       ' → logprob: -9.467815399169922

Token 418: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0025648376904428005
    2. '           ' → logprob: -6.002564907073975
    3. '                   ' → logprob: -10.502564430236816
    4. '   ' → logprob: -11.002564430236816
    5. ' return' → logprob: -11.502564430236816
    6. '                
' → logprob: -11.752564430236816
    7. '                       ' → logprob: -12.627564430236816
    8. '              ' → logprob: -12.877564430236816
    9. '\n' → logprob: -13.002564430236816
    10. '                ' → logprob: -13.002564430236816

Token 419: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6158069968223572
    2. ' return' → logprob: -0.8658069968223572
    3. '               ' → logprob: -3.365807056427002
    4. '           ' → logprob: -5.740807056427002
    5. '                   ' → logprob: -7.490807056427002
    6. '
' → logprob: -7.615807056427002
    7. ' None' → logprob: -9.490806579589844
    8. 'None' → logprob: -9.990806579589844
    9. ' 
' → logprob: -10.115806579589844
    10. '   ' → logprob: -10.740806579589844

Token 420: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -7.541112427134067e-05
    2. ' None' → logprob: -9.500075340270996
    3. '
' → logprob: -14.500075340270996
    4. '(None' → logprob: -19.125076293945312
    5. '_None' → logprob: -19.125076293945312
    6. 'none' → logprob: -19.750076293945312
    7. ',None' → logprob: -20.250076293945312
    8. '=None' → logprob: -21.000076293945312
    9. 'No' → logprob: -21.500076293945312
    10. '    
' → logprob: -22.125076293945312

Token 421: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.607391408877447e-05
    2. '            
' → logprob: -11.500036239624023
    3. '		' → logprob: -11.625036239624023
    4. '               ' → logprob: -11.750036239624023
    5. '       ' → logprob: -12.250036239624023
    6. '          ' → logprob: -13.750036239624023
    7. '	       ' → logprob: -14.125036239624023
    8. '<|end|>' → logprob: -15.000036239624023
    9. ' if' → logprob: -15.125036239624023
    10. '
' → logprob: -15.375036239624023

Token 422: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.968312951968983e-06
    2. '       ' → logprob: -11.875009536743164
    3. '               ' → logprob: -13.875009536743164
    4. '	       ' → logprob: -14.375009536743164
    5. '		' → logprob: -14.750009536743164
    6. '          ' → logprob: -15.250009536743164
    7. ' if' → logprob: -15.500009536743164
    8. '   ' → logprob: -16.000009536743164
    9. '<|end|>' → logprob: -16.000009536743164
    10. '	   ' → logprob: -16.375009536743164

Token 423: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28569555282592773
    2. ' if' → logprob: -1.5356955528259277
    3. 'if' (adapté à ' if') → logprob: -3.4106955528259277
    4. '       ' → logprob: -8.910696029663086
    5. '               ' → logprob: -10.410696029663086
    6. '          ' → logprob: -12.160696029663086
    7. '   ' → logprob: -13.035696029663086
    8. '		' → logprob: -13.160696029663086
    9. '            ' → logprob: -13.285696029663086
    10. '	   ' → logprob: -13.660696029663086

Token 424: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.4740770161151886
    2. ' line' → logprob: -0.9740769863128662
    3. '	line' → logprob: -18.224077224731445
    4. 'len' → logprob: -18.349077224731445
    5. ' ' → logprob: -18.599077224731445
    6. '=line' → logprob: -18.724077224731445
    7. '#line' → logprob: -18.849077224731445
    8. '(line' → logprob: -19.099077224731445
    9. ' len' → logprob: -19.474077224731445
    10. ' lin' → logprob: -19.599077224731445

Token 425: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.07890520989894867
    2. '.' → logprob: -2.5789051055908203
    3. '.trim' → logprob: -11.45390510559082
    4. '.rstrip' → logprob: -13.32890510559082
    5. '().' → logprob: -13.70390510559082
    6. ' .' → logprob: -13.82890510559082
    7. 'strip' → logprob: -14.32890510559082
    8. '.
' → logprob: -16.20390510559082
    9. '(strip' → logprob: -16.45390510559082
    10. '<|end|>' → logprob: -17.07890510559082

Token 426: '()' (ID: 416)
  Prédit: '()!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()!=' → logprob: -1.2143380641937256
    2. '()' → logprob: -1.4643380641937256
    3. '():' → logprob: -1.4643380641937256
    4. '!=' → logprob: -2.2143380641937256
    5. ':' → logprob: -2.4643380641937256
    6. ' !=' → logprob: -3.3393380641937256
    7. '():
' → logprob: -5.464338302612305
    8. '<|end|>' → logprob: -6.214338302612305
    9. ')!=' → logprob: -6.714338302612305
    10. '):' → logprob: -7.339338302612305

Token 427: ' !=' (ID: 1666)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15135295689105988
    2. '!=' → logprob: -2.026352882385254
    3. ' !=' → logprob: -5.776352882385254
    4. '<|end|>' → logprob: -6.276352882385254
    5. '==' → logprob: -7.026352882385254
    6. '!='' → logprob: -7.151352882385254
    7. '):' → logprob: -7.401352882385254
    8. ':return' → logprob: -8.026352882385254
    9. '!==' → logprob: -8.276352882385254
    10. '!="' → logprob: -8.776352882385254

Token 428: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.2141238898038864
    2. ''' → logprob: -2.4641239643096924
    3. '""' → logprob: -2.7141239643096924
    4. '"":' → logprob: -3.2141239643096924
    5. '"' → logprob: -6.714123725891113
    6. '":' → logprob: -15.339123725891113
    7. '':' → logprob: -15.964123725891113
    8. ''',' → logprob: -15.964123725891113
    9. ' ''' → logprob: -16.08912467956543
    10. ' '' → logprob: -16.08912467956543

Token 429: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00020306356600485742
    2. ':
' → logprob: -9.875203132629395
    3. ' return' → logprob: -10.000203132629395
    4. 'return' → logprob: -10.125203132629395
    5. '                   ' → logprob: -10.500203132629395
    6. ':' → logprob: -10.625203132629395
    7. ':return' → logprob: -11.625203132629395
    8. '           ' → logprob: -12.625203132629395
    9. '              ' → logprob: -14.375203132629395
    10. '                       ' → logprob: -14.625203132629395

Token 430: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04187195003032684
    2. ' return' → logprob: -3.291872024536133
    3. '                   ' → logprob: -6.041872024536133
    4. '               ' → logprob: -6.541872024536133
    5. '	return' → logprob: -13.291872024536133
    6. '                       ' → logprob: -14.041872024536133
    7. '   ' → logprob: -14.416872024536133
    8. ':return' → logprob: -14.666872024536133
    9. '           ' → logprob: -14.791872024536133
    10. '{return' → logprob: -15.541872024536133

Token 431: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -2.7610454708337784e-05
    2. ' line' → logprob: -10.500027656555176
    3. '	line' → logprob: -22.12502670288086
    4. '(line' → logprob: -22.50002670288086
    5. 'Line' → logprob: -23.25002670288086
    6. '#line' → logprob: -23.25002670288086
    7. 'lin' → logprob: -23.25002670288086
    8. '[line' → logprob: -23.37502670288086
    9. '=line' → logprob: -23.87502670288086
    10. '   ' → logprob: -24.62502670288086

Token 432: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 433: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 434: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 435: ' else' (ID: 1203)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.12862606346607208
    2. ' continue' → logprob: -2.2536261081695557
    3. 'pass' → logprob: -4.503625869750977
    4. '       ' → logprob: -6.378625869750977
    5. '<|end|>' → logprob: -7.003625869750977
    6. '           ' → logprob: -7.128625869750977
    7. 'return' → logprob: -7.878625869750977
    8. ' pass' → logprob: -8.253625869750977
    9. '#' → logprob: -8.503625869750977
    10. '```' → logprob: -9.003625869750977

Token 436: ' ignore' (ID: 17887)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5777272582054138
    2. 'continue' → logprob: -0.8277272582054138
    3. '           ' → logprob: -6.452727317810059
    4. ' continues' → logprob: -9.827727317810059
    5. '	continue' → logprob: -10.577727317810059
    6. '               ' → logprob: -10.577727317810059
    7. ',' → logprob: -10.952727317810059
    8. 'pass' → logprob: -11.077727317810059
    9. ':' → logprob: -11.202727317810059
    10. '_continue' → logprob: -11.327727317810059

Token 437: ' empty' (ID: 8213)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 438: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.4106173515319824
    2. 'lines' → logprob: -1.5356173515319824
    3. 'line' → logprob: -2.2856173515319824
    4. '<|end|>' → logprob: -4.285617351531982
    5. ' line' → logprob: -5.160617351531982
    6. '
' → logprob: -9.28561782836914
    7. '#line' → logprob: -10.66061782836914
    8. '(lines' → logprob: -10.91061782836914
    9. '_lines' → logprob: -11.03561782836914
    10. '	lines' → logprob: -11.16061782836914

Token 439: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 440: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 441: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.33428311347961426
    2. ' __' → logprob: -1.3342831134796143
    3. ' if' → logprob: -5.084282875061035
    4. ' ' → logprob: -5.459282875061035
    5. '_' → logprob: -5.584282875061035
    6. ' _' → logprob: -5.709282875061035
    7. '__' → logprob: -6.959282875061035
    8. ' ' → logprob: -7.834282875061035
    9. '_main' → logprob: -8.209282875061035
    10. ' process' → logprob: -8.459282875061035

Token 442: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -3.054500666621607e-06
    2. '():
' → logprob: -13.37500286102295
    3. ' ():' → logprob: -13.50000286102295
    4. '()' → logprob: -17.250003814697266
    5. '():
' → logprob: -19.000003814697266
    6. '(' → logprob: -19.875003814697266
    7. ':' → logprob: -20.000003814697266
    8. '():

' → logprob: -20.875003814697266
    9. '().' → logprob: -21.000003814697266
    10. '()>' → logprob: -21.000003814697266

Token 443: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001087470562197268
    2. ' ioh' → logprob: -7.626087665557861
    3. 'input' → logprob: -8.751087188720703
    4. ' input' → logprob: -8.751087188720703
    5. 'io' → logprob: -8.876087188720703
    6. ' ih' → logprob: -10.751087188720703
    7. ' handler' → logprob: -10.751087188720703
    8. 'handler' → logprob: -10.876087188720703
    9. ' io' → logprob: -11.126087188720703
    10. 'ih' → logprob: -11.376087188720703

Token 444: ' ioh' (ID: 174122)
  Prédit: 'handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handler' → logprob: -0.8851404786109924
    2. 'io' → logprob: -1.1351404190063477
    3. ' ioh' → logprob: -1.3851404190063477
    4. ' handler' → logprob: -4.260140419006348
    5. '   ' → logprob: -6.885140419006348
    6. ' io' → logprob: -7.885140419006348
    7. 'ih' → logprob: -9.510140419006348
    8. 'h' → logprob: -10.885140419006348
    9. '	handler' → logprob: -11.010140419006348
    10. 'IO' → logprob: -11.885140419006348

Token 445: ' =' (ID: 314)
  Prédit: 'andler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'andler' → logprob: -0.023146366700530052
    2. ' =' → logprob: -4.273146152496338
    3. '=' → logprob: -4.773146152496338
    4. '   ' → logprob: -7.773146152496338
    5. 'and' → logprob: -9.898146629333496
    6. '=new' → logprob: -12.148146629333496
    7. '       ' → logprob: -12.898146629333496
    8. ' ' → logprob: -13.148146629333496
    9. 'andle' → logprob: -13.398146629333496
    10. 'Handler' → logprob: -13.773146629333496

Token 446: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.31326186656951904
    2. ' Input' → logprob: -1.313261866569519
    3. '	Input' → logprob: -15.938261985778809
    4. '_Input' → logprob: -17.313261032104492
    5. '_input' → logprob: -18.563261032104492
    6. '<Input' → logprob: -18.813261032104492
    7. ' input' → logprob: -19.313261032104492
    8. '\Input' → logprob: -20.438261032104492
    9. '.Input' → logprob: -20.563261032104492
    10. '(Input' → logprob: -21.688261032104492

Token 447: 'Output' (ID: 6310)
  Prédit: 'Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: 0.0
    2. 'O' → logprob: -16.875
    3. 'output' → logprob: -18.125
    4. ' Output' → logprob: -18.5
    5. '	Output' → logprob: -18.625
    6. '_Output' → logprob: -19.75
    7. 'Out' → logprob: -20.0
    8. 'Ou' → logprob: -20.0
    9. '_output' → logprob: -20.125
    10. '-output' → logprob: -21.0

Token 448: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -1.0280383548888494e-06
    2. 'andler' → logprob: -14.000000953674316
    3. 'handler' → logprob: -16.375001907348633
    4. ' Handler' → logprob: -17.375001907348633
    5. 'Handle' → logprob: -17.875001907348633
    6. 'Helper' → logprob: -18.125001907348633
    7. '_Handler' → logprob: -18.125001907348633
    8. '_handler' → logprob: -18.500001907348633
    9. '_HANDLER' → logprob: -18.500001907348633
    10. '.Handler' → logprob: -20.125001907348633

Token 449: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3383566439151764
    2. '
' → logprob: -1.588356614112854
    3. '()
' → logprob: -3.5883567333221436
    4. '(io' → logprob: -3.8383567333221436
    5. 'io' → logprob: -3.9633567333221436
    6. '.io' → logprob: -5.5883564949035645
    7. '	io' → logprob: -5.8383564949035645
    8. '()' → logprob: -5.9633564949035645
    9. '    
' → logprob: -6.3383564949035645
    10. ' ioh' → logprob: -6.5883564949035645

Token 450: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6111130118370056
    2. 'io' → logprob: -0.9861130118370056
    3. ' ioh' → logprob: -2.4861130714416504
    4. '	io' → logprob: -7.36111307144165
    5. ' io' → logprob: -8.736112594604492
    6. 'ioq' → logprob: -9.611112594604492
    7. '"io' → logprob: -10.111112594604492
    8. '(io' → logprob: -11.486112594604492
    9. '.io' → logprob: -11.611112594604492
    10. '   ' → logprob: -11.861112594604492

Token 451: ' ioh' (ID: 174122)
  Prédit: 'io'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'io' → logprob: -4.656383680412546e-05
    2. ' ioh' → logprob: -10.000046730041504
    3. '   ' → logprob: -14.500046730041504
    4. 'ih' → logprob: -15.000046730041504
    5. '	io' → logprob: -15.750046730041504
    6. 'ioq' → logprob: -15.750046730041504
    7. '"io' → logprob: -17.000045776367188
    8. 'i' → logprob: -17.250045776367188
    9. '.io' → logprob: -17.625045776367188
    10. '/io' → logprob: -18.500045776367188

Token 452: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -6.630610641877865e-06
    2. '.' → logprob: -12.000006675720215
    3. 'process' → logprob: -14.875006675720215
    4. ' .' → logprob: -18.3750057220459
    5. '.run' → logprob: -18.8750057220459
    6. '.
' → logprob: -18.8750057220459
    7. '.pro' → logprob: -19.3750057220459
    8. '.perform' → logprob: -19.5000057220459
    9. '.mainloop' → logprob: -20.0000057220459
    10. ' process' → logprob: -20.1250057220459

Token 453: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0031929241959005594
    2. '()
' → logprob: -5.753192901611328
    3. '()

' → logprob: -11.628192901611328
    4. '()\' → logprob: -12.378192901611328
    5. '()<' → logprob: -14.503192901611328
    6. '<|end|>' → logprob: -15.003192901611328
    7. '()`' → logprob: -15.378192901611328
    8. '(' → logprob: -15.503192901611328
    9. '()%' → logprob: -15.503192901611328
    10. '```' → logprob: -16.128192901611328

Token 454: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.9504606825648807e-05
    2. '```' → logprob: -11.250019073486328
    3. ' if' → logprob: -13.250019073486328
    4. 'main' → logprob: -13.250019073486328
    5. '
' → logprob: -13.625019073486328
    6. 'i' → logprob: -14.000019073486328
    7. '\' → logprob: -14.750019073486328
    8. '#' → logprob: -15.250019073486328
    9. '\n' → logprob: -15.500019073486328
    10. '\
' → logprob: -17.375019073486328

Token 455: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6931791305541992
    2. ' __' → logprob: -0.6931791305541992
    3. 'name' → logprob: -10.8181791305542
    4. '_name' → logprob: -12.3181791305542
    5. '_' → logprob: -12.4431791305542
    6. ' ' → logprob: -13.6931791305542
    7. '___' → logprob: -13.6931791305542
    8. ' ' → logprob: -14.3181791305542
    9. 'Name' → logprob: -15.6931791305542
    10. ' name' → logprob: -16.693180084228516

Token 456: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.01248092483729124
    2. '==' → logprob: -5.262480735778809
    3. ' ==' → logprob: -5.262480735778809
    4. ' __' → logprob: -7.012480735778809
    5. '.__' → logprob: -7.637480735778809
    6. '__.__' → logprob: -8.262480735778809
    7. '_' → logprob: -9.387480735778809
    8. '[' → logprob: -9.637480735778809
    9. '__.' → logprob: -9.637480735778809
    10. '=="' → logprob: -9.762480735778809

Token 457: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.001006846665404737
    2. '==' → logprob: -7.126007080078125
    3. ' ==' → logprob: -8.876007080078125
    4. '_' → logprob: -10.626007080078125
    5. '=="' → logprob: -10.626007080078125
    6. '=='' → logprob: -12.376007080078125
    7. '__.__' → logprob: -12.376007080078125
    8. '=' → logprob: -13.376007080078125
    9. ' __' → logprob: -13.501007080078125
    10. '___' → logprob: -13.751007080078125

Token 458: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.794374942779541
    2. '__' → logprob: -1.044374942779541
    3. '==' → logprob: -1.669374942779541
    4. '=="' → logprob: -4.919374942779541
    5. '=='' → logprob: -7.544374942779541
    6. '_' → logprob: -11.544374465942383
    7. '___' → logprob: -11.919374465942383
    8. ' =="' → logprob: -13.044374465942383
    9. '===' → logprob: -13.169374465942383
    10. '"' → logprob: -13.669374465942383

Token 459: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.20142677426338196
    2. ''' → logprob: -1.7014267444610596
    3. '__' → logprob: -11.95142650604248
    4. ' "__' → logprob: -12.20142650604248
    5. ' '__' → logprob: -14.45142650604248
    6. ''"' → logprob: -14.70142650604248
    7. '"_' → logprob: -15.32642650604248
    8. ''_' → logprob: -15.57642650604248
    9. '"'' → logprob: -15.70142650604248
    10. '"name' → logprob: -15.95142650604248

Token 460: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0041747987270355225
    2. '__' → logprob: -5.504174709320068
    3. '"' → logprob: -9.629175186157227
    4. 'name' → logprob: -11.129175186157227
    5. '_main' → logprob: -11.379175186157227
    6. ''' → logprob: -12.629175186157227
    7. ' main' → logprob: -14.379175186157227
    8. 'built' → logprob: -15.504175186157227
    9. '__":
' → logprob: -16.254175186157227
    10. ' "__' → logprob: -16.379175186157227

Token 461: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.10033423453569412
    2. '__' → logprob: -2.3503341674804688
    3. '__':
' → logprob: -9.100334167480469
    4. '"' → logprob: -12.350334167480469
    5. '__.' → logprob: -12.475334167480469
    6. '__
' → logprob: -12.725334167480469
    7. '__.__' → logprob: -12.975334167480469
    8. '__["' → logprob: -13.475334167480469
    9. '```' → logprob: -14.975334167480469
    10. '__
' → logprob: -15.100334167480469

Token 462: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.004383724648505449
    2. '__' → logprob: -5.504383563995361
    3. '"' → logprob: -8.50438404083252
    4. ' main' → logprob: -9.37938404083252
    5. '   ' → logprob: -11.75438404083252
    6. '_main' → logprob: -12.37938404083252
    7. ''' → logprob: -12.37938404083252
    8. '	main' → logprob: -13.75438404083252
    9. '____' → logprob: -15.37938404083252
    10. '(main' → logprob: -15.62938404083252

Token 463: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.25
    3. '	main' → logprob: -21.875
    4. 'mai' → logprob: -22.0
    5. 'ma' → logprob: -23.25
    6. '   ' → logprob: -23.375
    7. '(main' → logprob: -23.875
    8. 'import' → logprob: -24.875
    9. '.main' → logprob: -24.875
    10. 'maine' → logprob: -25.75

Token 464: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 462
Tokens correctement prédits (1ère position, stricte): 235
Tokens correctement prédits (1ère position, avec adaptation): 259
Tokens correctement prédits (top 10): 416
Précision stricte (1ère position): 50.87%
Précision adaptée (1ère position): 56.06%
Précision (top 10): 90.04%
================================================================================
